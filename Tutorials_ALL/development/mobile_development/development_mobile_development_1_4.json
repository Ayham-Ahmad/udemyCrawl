{
  "courses": [
    {
      "title": "The Complete Android CRUD Application In Java, PHP & MySQL",
      "url": "https://www.udemy.com/course/the-complete-android-crud-application-in-java-php-mysql/",
      "bio": "Welcome To The Complete Android CRUD Application In Java, PHP & MySQL, A Project Base Course For Beginners",
      "objectives": [
        "You Will Learn How To Create A REST APi in PHP and MySQL.",
        "You Will Learn How To Create, Read, Update and Delete Data Using Java, PHP, MySQL and Android Studio.",
        "You Will Learn How To Use Volley Library To Connect PHP REST APi In Android Studio.",
        "You Will Learn How To Create A RecyclerView Adapter In Android Studio.",
        "You Will Learn How To Use SwipeRefresh Layout To Update Data From The Server Into Android Studio In RealTime.",
        "You Will Learn How To Create A JSON Response in PHP."
      ],
      "course_content": {},
      "requirements": [
        "You Need To Be Familiar With PHP And Java.",
        "You Need To Know How To Use Android Studio."
      ],
      "description": "I am Monday Ineme. Thank you for checking out this course. Before creating this course I was a beginner like you looking for this kind of courses but very difficult to find, if found, not well structured, or not well thought or outdated. But Thank God You are here check out my introduction and know if am telling you the truth.",
      "target_audience": [
        "Beginners In Android Development",
        "PHP Developers",
        "Java Developers",
        "Who Want To Learn REST APis Development"
      ]
    },
    {
      "title": "Learn programming in Swift Step by Step",
      "url": "https://www.udemy.com/course/learn-programming-in-swift-step-by-step/",
      "bio": "Learn to code in Apple's new programming language. Learn how to use tools that generate millions in revenue.",
      "objectives": [
        "Learn to code in Swift",
        "Learn how to use Xcode"
      ],
      "course_content": {
        "Learn to Code in Swift": [
          "01. Introduction",
          "02. Course Requirements",
          "03. Talking about Xcode projects",
          "04. Setting up the Xcode environment",
          "05. Adding items to the main story board",
          "06. Hooking up the swift file",
          "07. Using the swift file",
          "08. Changing the button text",
          "09. Adding in functions",
          "10. Variables",
          "11. If Statements",
          "12. Multiple condition if statements",
          "13. Else if statements",
          "14. Printing a user selected number",
          "15. Apple UI and interactivity",
          "16. Course conclusion"
        ],
        "Learn to Make an app in 1 hour!": [
          "01. Starting a new project for the tip calculator",
          "02. Setting up the main Storyboard",
          "03. Designing the app",
          "04. Testing early and often on the iPhone",
          "05. Hooking up the outlets to the swift file",
          "06. Hooking up the Actions to the siwft file",
          "07. Setting up the variables",
          "08. Separating the app into functions",
          "09. Taking in the user inputed text",
          "10. Converting the strings into Floats",
          "11. Calculating the tip",
          "12. Printing the variables",
          "13. Formatting to two Decimal Places",
          "14. Adding the clear button to the app",
          "15. Changing the keyboard input type",
          "16. Hiding the keyboards",
          "17. Designing the app",
          "18. Challenge - Build a new app and design it differently"
        ]
      },
      "requirements": [
        "Xcode",
        "A mac computer"
      ],
      "description": "This course was funded through a massively successful Kickstarter campaign.\nHave you ever wanted to learn how to make an app? This course is for you? Learn how to use the software that is used to make millions of dollars in revenue.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nWho is this class for?\nPeople who want to improve their technical skills\nComplete beginners\nPeople who want to make money. I show people the tools on how to make money through various methods of passive income\nPeople who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "Complete beginners",
        "Not advanced or intermediate programmers"
      ]
    },
    {
      "title": "iOS Notes App - Advanced Core Data, Navigation, & TableViews",
      "url": "https://www.udemy.com/course/coredata/",
      "bio": "Inject Core Data directly into UITableViews. UINavigationController, UIToolBar, NSLayoutConstraint, NSAttributedString.",
      "objectives": [
        "You will create a professional & well designed navigation hierarchy with UINavigationController, UIViewController & UITableViewController",
        "Core Data - Advanced & Basic topics",
        "UIToolBar, UINavigationBar, UIBarButtonItem",
        "UITableView DataSource & Delegate Protocols",
        "UITextView, UILabel, UIButton, UIStackView + StackView Nesting",
        "NSAttributedString for complex, customized bodies of text",
        "Apple's Human Interface Guidelines.",
        "Upload an App to the App Store.",
        "NSLayoutConstraint for 100% Programmatic User Interfaces & Layouts (Very clean, fast code.)"
      ],
      "course_content": {
        "Welcome - Course Overview.": [
          "Welcome & Project Overview.",
          "Resources."
        ],
        "UINavigationController & UITableViews - Project Navigation & Structure.": [
          "App Setup & Architecture Overview.",
          "Subclass UITableViewController & use Table View Data Source + Delegate Protocols",
          "Push View Controllers to Navigation Controller VC Hierarchy.",
          "More TableViews - FolderNotes TableViewController",
          "TableView Header & UIView addBorder Extension for Border Lines on One Side."
        ],
        "UIToolBar & UIBarButtonItem - Create Custom Tool Bar & Navigation Bar items.": [
          "Show & Hide the \"Built-In\" UIToolBar",
          "Create & Use UIBarButtonItems in a ToolBar (and only on one side!)",
          "Make a Translucent (clear) UINavigationBar & UIToolBar with UIImage.",
          "Add a Tint Color to NavigationController & ToolBar bar button items."
        ],
        "Class Extensions - Create a UIColor Theme for your App.": [
          "How to use HEX color codes - Build a custom Hex Initializer.",
          "STATIC keyword in Swift - Create custom colors within a UIColor extension."
        ],
        "UITextView - Writing Notes.": [
          "Set up the Note Controller & Note Controller Bar Button Items.",
          "Add a TextView & constrain with programmatic auto layout.",
          "Add a Date Label & constraint with NSLayoutConstraint / Programmatic Auto Layout"
        ],
        "UITableViewCell, UIStackView & NSLayoutConstraint - Build Custom TableView Cells": [
          "NSLayoutConstraint & UITableViewCell - Create the FolderCell with 100% code!",
          "Nesting UIStackViews in a UITableViewCell - Create the NoteCell with 100% code!"
        ],
        "Designing, Creating, and Utilizing Data Structures in Swift for the Notes App.": [
          "Swift Structs - Create a NoteFolder Struct & Note Struct.",
          "Using Swift Structs - Create Data From our Data Structure Blue Prints.",
          "Learn to use didSet & File Private - Use Pre-Defined Data in Table View Cells.",
          "Pass Data to a View Controller Pushed on a Navigation Stack, Then Into Cells."
        ],
        "UISearchBar - Filtering Data in the Notes App Via Search": [
          "Set up UISearchController from Scratch.",
          "Filter Data With UISearchBarDelegate.",
          "Persist Data In UISearchBar After Finishing Editing the SearchBar Text."
        ],
        "TableView Swipe Actions - Swipe to Delete UITableView Rows with Edit Actions.": [
          "Integrate editActionsForRowAt - UITableView Edit Actions - Swipe to Delete.",
          "Dynamic Data - TableView deleteRows at IndexPath - Updating Data the Right Way."
        ],
        "UIAlertController & UITableView Cell Insertion.": [
          "New Folder - UIAlertController + Dynamically Inserting Data Into a Table View."
        ]
      },
      "requirements": [
        "Xcode installed on your computer."
      ],
      "description": "Finish Your iOS Apps Once and For All.\nWhether you are working on your own apps, a client's, or the company's you are working for, by building the iOS notes app with an emphasis on Core Data, you will be able to implement various features and capabilities into the iOS applications you are developing and plan to develop.\nCore Freaking Data Boi.\nAfter completing this course you WILL be able to utilize top Core Data features such as deleting, creating, and updating documents, NSPersistentContainer, ViewContext, NSFetchRequest and more.\nFill in more gaps!\nYou will also be able to implement various features around iOS development like UIAlertController, UITabBarController, Programmatic Auto Layout and more!\nWatchu waiting for?\nStart learning iOS Development and Core Data today.",
      "target_audience": [
        "Intermediate to Advanced iOS Developers.",
        "iOS Developers who desire a firm understanding of Core Data and how to integrate it seamlessly with classes like UITableView",
        "iOS Devs who want to fill in the gaps they are missing.",
        "iOS Devs who want a firm understanding of UINavigationController, it's VC Stack, and how to integrate custom, yet professional layouts that conform too Apple's Human Interface Guidelines.",
        "Developers who want to learn Xcode, Swift, and popular iOS Frameworks like Core Data, UIKit, and more."
      ]
    },
    {
      "title": "Android Programming Tutorial Videos For Beginners",
      "url": "https://www.udemy.com/course/android-programming/",
      "bio": "Learn How To Program For Android Devices The Easy Way This Android Training Course Shows You Everything You Need To Know",
      "objectives": [
        "Learn The Skills Required To Build Apps For Android",
        "No Programming Knowledge Required",
        "Highly Detailed - Covers Everything You Need To Know"
      ],
      "course_content": {},
      "requirements": [
        "The Desire To Learn"
      ],
      "description": "Want To Learn How To Build Android Apps The Easy Way?\nWant Lessons That Explain Everything In Clear Easy To Understand Terms.\nThis Course Teaches You Everything You Need.\nIn this Android App Programming training course, Infinite Skills teaches you how to use the tools that Google provides in order to create your very own Android Apps. Android has the largest user install base in the world, and with this tutorial you can learn how to create your very own Apps for millions of users worldwide to use!\n\nYou will start by installing the Android Developer Tools you will need to create your Apps, and this course shows you how to use those tools to create your very first App. As you proceed through the video tutorial, you will learn how to work with various App components and APIs, access and utilize resources, create your user interface and add animation and graphics to your App. Additionally, the course teaches you about media playback, device camera access, determining location, and using device sensors. You also learn how to store your Apps data using SQLite and internal device storage.\n\nOnce you have completed this Android Programming video course, you will understand the tools, and have the skills necessary, to create and submit your very own Android Apps to the Google Play store. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Programmers",
        "Entrepreneurs",
        "Small Business Owners",
        "Those New to Programming",
        "Developers"
      ]
    },
    {
      "title": "Mastering Android Privacy & Security",
      "url": "https://www.udemy.com/course/mastering-android-privacy-security/",
      "bio": "Become an expert for wide-ranging privacy and security topics!",
      "objectives": [
        "Understand how to design apps with privacy and security in mind",
        "Be able to discuss a wide variety of privacy and security-related topics",
        "Know about fundamental Android security concepts",
        "Understand symmetric and asymmetric cryptography algorithms, and how to apply it on Android",
        "Understand hashing algorithms, and how to apply it on Android",
        "Learn how to protect data at rest and data in transit"
      ],
      "course_content": {},
      "requirements": [
        "Some prior experience in mobile app development (preferably Android) is expected"
      ],
      "description": "Gain insightful knowledge about a wide spectrum of privacy and security topics in this course. In general, many topics are relevant across platforms and technologies such as cryptography and authentication & authorization standards. Specifically for Android, there is a deep dive into all the individual topics. This includes fundamental concepts, best practices, detailed walkthroughs, and plenty of demos taught by a Google Developer Agency Tech Lead. Stefan started developing Android apps - almost from Android's birth - in 2011, and since then had to design and develop a handful of Android apps. The apps involved lots of privacy and security aspects and therefore he wants to share his experience in this course.\n\n\nPrivacy and security topics are often overlooked when designing and developing mobile apps because the concepts are often unclear. However, it is important to develop apps with privacy and security in mind to improve UX, data safety, and finally user satisfaction. Depending on the app to be developed, there may be special requirements when it comes to privacy and security, too. Furthermore, when you apply for a job at any of the big FAANG companies, system design questions are likely to involve privacy and security aspects. So, knowing in detail about these topics will help you to stand out against other applicants.\n\n\nMore than 12 hours of on-demand video content will cover what you need to know to master privacy & security:\nLearn about privacy & security concepts on Android by gaining lots of overall knowledge, knowing best practices, following detailed walkthroughs and demos\nBe well prepared for system design interviews at any of the big FAANG companies when it comes to privacy & security-related topics\nKnow how to improve privacy by minimizing permission requests\nApproaches to ensure user data privacy: Package visibility, data storage & device IDs\nApply data access auditing and other techniques to ensure transparency & control\nDeep dive into security concepts Android is built upon: From kernel security to app security\nHow to use the Android Keystore system for secure storage of a device's Trusted Execution Environment or Secure Element\nUnderstand symmetric & asymmetric cryptography, and hashing: Concepts, algorithms walkthrough, demos, implementation on Android\nGet insights into how to protect local data including EncryptedFile and EncryptedSharedPreferences, and secure SQL & NoSQL databases\nDiscussion of network security concepts: Public Key Infrastructure & TLS\nChoosing the right approach to securely transmit network data on Android by using certificate pinning, certificate transparency, or the Android network security config\nOverview of authentication & authorization standards like OAuth 2.0 and OpenID Connect, and how they can be applied on Android",
      "target_audience": [
        "Android developers wanting to deep dive into privacy and security",
        "Software engineers preparing for system design interviews"
      ]
    },
    {
      "title": "Geofencing + Places SDK for Android with Kotlin |Masterclass",
      "url": "https://www.udemy.com/course/geofencing-places-sdk-for-android-with-kotlin-masterclass/",
      "bio": "Learn more about Geofence API and Places SDK for Android. Learn by practicing on a real project/Android application.",
      "objectives": [
        "Geofencing API",
        "Places SDK",
        "Place ID",
        "Place Types",
        "Session Token",
        "Autocomplete Widget",
        "Custom Autocomplete Widget",
        "Constrain Autocomplete Result",
        "Get Places around your Current Location",
        "Get Places Information",
        "Get Place Photos",
        "Connect to Google Cloud Platform",
        "Receive Notification when ENTER/EXIT/DWELL Geofence",
        "Draw a Circle/Radius on the Map",
        "Start/Stop a Geofence",
        "Shared View Model",
        "Android Architecture Components",
        "ROOM Database",
        "Navigation Component",
        "Dagger-Hilt - Dependency Injection",
        "Live Data",
        "Flow",
        "Kotlin",
        "Coroutines",
        "DataStore Preference",
        "Handle Run-time Permissions",
        "Newest Android API Levels",
        "Work with the Local Database",
        "Broadcast Receiver",
        "Motion Layout",
        "Swipe to Delete",
        "AND MORE!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Dependency Overview",
          "Application Design Preview",
          "Geofencing API Limitations",
          "This Project is on Github"
        ],
        "Places SDK for Android": [
          "About Places API",
          "Place IDs",
          "Place Types & Data Fields",
          "Session Tokens",
          "Connect the Project with Google Cloud Platform",
          "Generate Release API Key",
          "Autocomplete Widget - Fragment",
          "Autocomplete Widget - Activity",
          "Constrain Autocomplete Results",
          "Get the Current Location",
          "Get a Place by ID",
          "Get a Place Photo"
        ],
        "Geofencing API": [
          "Get Introduced with Application Design",
          "Implement Navigation Component",
          "Design PermissionFragment Layout",
          "Create Permissions object",
          "Create DataStoreRepository",
          "Create SharedViewModel",
          "PermissionFragment",
          "Connect the Project with Google Cloud Platform",
          "Design Step1Fragment Layout",
          "Step1Fragment - Part 1",
          "Step1Fragment - Part 2",
          "Create Step1Bindings",
          "Handle the ProgressBar",
          "Design Step2Fragment Layout",
          "Step2Fragment - Part 1",
          "Create PredictionsAdapter",
          "Step2Fragment - Part 2",
          "AutocompletePrediction - Click Listener",
          "Create NetworkListener",
          "Step2Fragment - Error Handling",
          "Step2Fragment - RecyclerView Item Animation",
          "Display Google Attribution",
          "Design Step3Fragment Layout",
          "Implement Step3Fragment",
          "Change Map Style",
          "Design MapsFragment Layout",
          "zoomToSelectedLocation - MapsFragment",
          "Setup ROOM Database",
          "Inject GeofenceRepository",
          "Draw a Circle on the Map",
          "zoomToGeofence - MapsFragment",
          "Take a Map Snapshot",
          "Add Geofence to the Database",
          "readDatabase - MapsFragment",
          "Create GeofenceBroadcastReceiver",
          "Start a Geofence",
          "Reset Shared Values",
          "Design GeofencesFragment Layout",
          "Design geofences_row_layout",
          "Motion Layout - geofences_row_layout",
          "Create GeofencesAdapter",
          "Display Geofences in a RecyclerView",
          "delete_imageView - Handle Click Event",
          "removeItem - GeofencesAdapter",
          "snapshot_imageView - Handle Click Event",
          "Animate geofences_recyclerView",
          "Transition Animations - Navigation Component",
          "Final Word"
        ],
        "Course Updates": [
          "Update #1 - Step1Fragment - App Crash Fixed",
          "Update #2 - jcenter() Migration, Easy Permissions, Dependency Update",
          "Update #3 - Dependency Update and Project Cleanup"
        ]
      },
      "requirements": [
        "Kotlin Programming Language",
        "Basic Knowledge of Android Architecture Components",
        "Motivation to learn and improve"
      ],
      "description": "Hello there and welcome to my course, in this course I'm going to teach you everything you need to know to implement Geofence API in your project. And not just that, as a Bonus I'm going to teach you how to integrate Places SDK for Android as well.\nNow this is not the course where you will learn just the theory, this is the course where you will combine theory with practice, and also create one Android application which will use both Geofence API and Places SDK. First I'm going to start this course by introducing you with Places SDK for android. You will learn how to connect your project with the Google Cloud platform, and generate an API key as well. After that you will learn more about Places Autocomplete widget, how we can use it to receive different kind of places as a response. Also how to get more details about the specific place, then how to get places information around your current location, and place photos as well. Plus You will learn more about place ID's, place types, data fields and session tokens.\nNow after you get fully introduced with Places SDK for android, we are going to start building our Geofence app. And for those of you who are not familiar, Geofence API combines awareness of the user's current location with awareness of the user's proximity to locations that may be of interest. So basically in our application which we are going to create, we will have a good looking flow to get more information from a user regarding the creation of a Geofence. We will be able to create multiple geofences in our app and get notified whenever we ENTER/EXIT OR STAY within the Geofence for a specified amount of time.\nNow I have already prepared design project which we are going to use in this course, so you don't have to worry about that. Also that design project will be available to you for FREE along with the source code of the project on which we are going to work on. The source code will be available on my Github profile.\nSo, our app will use the most popular Android Architecture components like: ROOM database, Dagger-Hilt dependency Injection library, Navigation Component, View Model, Live Data, Data Store Preference, View Binding, Data Binding, Kotlin Coroutines, Flow and many more...\nWe are going to follow the principle of a single activity and multiple fragments. Our application will have six different fragments. And we will also use nested navigation graph in our app.\nNow, all my courses are well organized, very informative, and they will provide you with all the necessary knowledge you need to work with the latest android API levels. Plus at the end of the course we will have one special section where I'm going to occasionally upload some course updates, like bug fixes and code cleanups. And that way this course will always be up-to-date.\nNow what I want here, I want to include you in this project of mine. I want to make you think, like a real developer. After we finish this course and building our app, I expect you to look into the code again and suggest what else could be improved in the app which we are going to create. You can also report some bugs if you find, and even suggest a solution by yourself if you have one.\nAnyhow, there is a 9 hours of high quality content waiting for you.\nSo what are you waiting for, let's get started developers!",
      "target_audience": [
        "Android Developers",
        "Android Programmers",
        "Android Designers",
        "Anyone who wants to learn more about Geofence API on Android",
        "Anyone who wants to learn more about Places SDK for Android",
        "Anyone who wants to improve their skills"
      ]
    },
    {
      "title": "RxSwift & RxCocoa with X Code 10 & Swift 4.2",
      "url": "https://www.udemy.com/course/rxswift-rxcocoa-with-x-code-10-swift-42/",
      "bio": "Learn Reactive Development with iOS",
      "objectives": [
        "Reactive Programming with RxSwift & RxCocoa"
      ],
      "course_content": {
        "RxSwift": [
          "Intro to RxSwift",
          "Install RxSwift",
          "Observables",
          "Subscriber",
          "Disposing",
          "Side Effects",
          "Traits",
          "Publish Subject",
          "Behavior Subject",
          "Replay Subject",
          "Async Subject",
          "Relay",
          "Subject in Practice",
          "Ignore Operator",
          "Skip Operator",
          "Take Operator",
          "Distinct Operator",
          "Share Operator",
          "Ignore in Practice",
          "Map Operator",
          "Flatmap Operator",
          "Materialize",
          "Flatmap in Practice",
          "Local Cache",
          "Concat",
          "Merge",
          "Combine Latest",
          "Zip",
          "Trigger",
          "Ambiguous",
          "Reduce and Scan",
          "Practice Part 1",
          "Practice Part 2",
          "Practice Part 3",
          "Practice Part 4",
          "Replay",
          "Delay",
          "Buffer",
          "Window Buffer",
          "Timeout"
        ],
        "RxCocoa": [
          "Textfield in RxCocoa",
          "Label and TableView",
          "Traits in RxCocoa",
          "Activity Indicator",
          "Extend Location",
          "Fetch Weather by GPS",
          "Forward Delegate",
          "MapView Challenge 1",
          "MapView Challenge 2"
        ],
        "Error Handling": [
          "Handle Error with Cache",
          "Handle Error with Retry",
          "Custom Errors"
        ],
        "Testing Rx Code": [
          "Sync Tests",
          "Async Tests",
          "Test RxApp",
          "Conclusion"
        ]
      },
      "requirements": [
        "Should have solid understanding of Swift language and X Code"
      ],
      "description": "Limited Time Deep Discount available use code \"AUTHOR\"\nNowadays you can't just stay with Apple Ecosystem. You need to be loyal to your app not to Apple Ecosystem. But learning development on completely new platform can be very time consuming and frustrating. This is where Rx or Reactive Extensions comes in. Rx is available for many languages i.e. RxSwift, RxJS, RxJava, RxKotlin, RxAndroid. Same Rx language can be used natively in almost any frontend, backend or cross platform. This course teaches you how to use Reactive Extensions in Swift language. Then learning other Rx languages is going to be very easy. Or if you are collaborating with other Rx developers then knowing RxSwift is going to help a lot.",
      "target_audience": [
        "Swift Developers who wants to learn Reactive Programming."
      ]
    },
    {
      "title": "Build a Zoom Clone with Flutter, Firebase and JitsiMeet SDK",
      "url": "https://www.udemy.com/course/build-a-zoom-clone-with-flutter-firebase-and-jitsimeet-sdk/",
      "bio": "Make your own version of Zoom with Flutter. Authenticate users , join meetings , edit profiles and many more",
      "objectives": [
        "Full Stack mobile Application",
        "Secure Videoconference App",
        "Adding Meeting passwords",
        "Turn on Camera and Audio for Meetings",
        "Recording Video conferences",
        "Inviting Users for the Video conference",
        "User authentication with Firebase",
        "Creating a big app with Flutter",
        "Beautiful Introduction Screens",
        "Nice UI",
        "Storing User data in Cloud Firestore Database",
        "Editing and Viewing profile"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project Setup": [
          "Project File Setup",
          "VideoMeetings SDK Setup",
          "Firebase Setup"
        ],
        "Onboarding Screens": [
          "Intro screens"
        ],
        "Authentication with firebaseauth": [
          "Logging in and creating users with FirebaseAuth"
        ],
        "Profilescreens": [
          "ViewProfile",
          "Edit Profile"
        ],
        "Joining and Creating Meetings": [
          "Create Meeting with Code",
          "Join Meetings"
        ],
        "Conclusion": [
          "Congrats, you did it"
        ]
      },
      "requirements": [
        "Good Internet Connection and a Laptop",
        "Basic knowledge about Flutter and Dart"
      ],
      "description": "Hello guys. So you wanna learn how to make the exact clone of Zoom with flutter. Then you are at the right place. I will teach you everything you need to know to  build the Videoconferencing  app. We will develop this app using Flutter (Dart Programming Language) with Firebase Firestore as backend and Jitsi Meet as our Video Meeting SDK. At the end of this course you will be able to make your own fully functional backend flutter applications with Flutter. You will be able to create your own Zoom clone with flutter. Users will join meetings, create meetings and have a secure Video Call\n\n\nThings we will learn\nSecure Videoconference App\nMeeting passwords\nTurn on Camera and Audio\nRecording Video conferences\nInviting Users for the Video conference\nUser authentication\nCreating a big app with Flutter\nBeautiful Introduction Screens\nNice UI\nStoring User data\nEditing and Viewing profile\nCheck out the preview Video for all features",
      "target_audience": [
        "Flutter learners who want to build a Video Conference App with Flutter"
      ]
    },
    {
      "title": "Master Multi-Module Architecture for Android Development",
      "url": "https://www.udemy.com/course/master-multi-module-architecture-for-android-development/",
      "bio": "Learn how to build an Industry level Currency Convertor app with proper Multi-Modules Architecture",
      "objectives": [
        "You will learn the basics of getting started with modularization, including project structure and Gradle version catalog.",
        "You'll be able to create Modules manually or using Android Studio Templates",
        "You will create a Currency Convertor app that converts rates between two currencies",
        "You will be very confident with gradle. And you will be able to configure Modules with gradle scripts",
        "You will be able to create custom gradle plugins to reduce code duplication and to setup modules",
        "You will learn the proper Multi-Modules architecture",
        "You will learn how to setup room, retrofit, dagger-hilt and more libraries in a Multi Modules architecture",
        "You will learn how to convert an Online app to a fully Offline app in a Multi Modules app",
        "You will learn how to write unit tests in a Multi Modules app"
      ],
      "course_content": {},
      "requirements": [
        "Android Development Basics with Kotlin (Retrofit, Room, Dagger hilt)",
        "Jetpack Compose For building the UI"
      ],
      "description": "Welcome to \"Master Multi-Module Architecture for Android Development\"! This comprehensive course is designed for Android developers who want to elevate their skills and master the art of modularization in Android applications. Whether you're a beginner or an experienced developer, this course will guide you through the process of building an offline currency converter app using proper multi-module architecture.\nIn this course, you will:\nUnderstand Android Basics related to Modularization: Gain a solid foundation in the concepts and principles of modularization in Android development.\nCreate Modules using Different Methods: Learn how to effectively create and manage modules within your Android projects.\nBecome Confident with Gradle: Enhance your skills in working with Gradle, the build system for Android, and manage your project's dependencies more efficiently.\nLearn Proper Multi-Modules Architecture: Discover best practices and architectural patterns for designing scalable and maintainable multi-module applications.\nReuse Dependencies Across Modules: Explore techniques for sharing and reusing dependencies across different modules to streamline your development process.\nSet Up Room, Retrofit, and Dagger Hilt: Master the integration of popular libraries like Room, Retrofit, and Dagger Hilt in a multi-module project.\nBuild an Offline Currency Converter App: Develop a fully functional offline currency converter app using Work Manager, showcasing your new skills in action.\nUtilize Jetpack Compose: Create custom components and build modern, responsive UIs with Jetpack Compose.\nTest Your Multi-Module App: Learn to perform unit tests and UI tests to ensure the reliability and performance of your multi-module applications.\nAnd more and more...\nEnroll now and take your Android development skills to the next level with \"Master Multi-Module Architecture for Android Development\"!",
      "target_audience": [
        "Android Developers who want to learn about the proper Multi Module architecture that is recommended by google",
        "Android Developers who want to know how to build scalable and industry apps"
      ]
    },
    {
      "title": "The Cyber Security Series: Introduction to Android Security",
      "url": "https://www.udemy.com/course/android-security/",
      "bio": "Introduction to android phones and security",
      "objectives": [
        "Individuals who use Android devices, such as smartphones or tablets, and want to learn how to secure their devices and protect their data.",
        "Beginner-level Android users who want to learn about Android security.",
        "Anyone interested in gaining a basic understanding of the Android operating system's security features and threats.",
        "Individuals interested in learning best practices for protecting their online accounts and passwords on Android devices.",
        "Developers of mobile apps who want to learn about secure app development practices and how to protect user data in their apps.",
        "IT professionals in charge of Android device management in their organizations who want to learn about Android Enterprise security features and best practices."
      ],
      "course_content": {
        "Introduction to Android Security": [
          "Overview of the Android operating system and its security features",
          "Common security threats faced by Android users",
          "Importance of securing Android devices"
        ],
        "Securing Your Android Device": [
          "Setting up a secure lock screen and password protection",
          "Configuring device security settings",
          "Installing and updating security apps",
          "Backing up and encrypting data"
        ],
        "Protecting Your Data": [
          "Understanding data encryption and how it works on Android",
          "Best practices for secure storage and transfer of sensitive data",
          "Tips for securing your online accounts and passwords",
          "Protecting your device from malware and other security threats"
        ],
        "Securing Your Apps": [
          "Understanding app permissions and how they impact your device's security",
          "Installing apps from trusted sources only",
          "Configuring app-specific security settings",
          "Best practices for app development and security"
        ],
        "Advanced Android Security Topics": [
          "Rooting and jailbreaking: what they are and their implications for security",
          "Secure app development and testing",
          "Android Enterprise security features and best practices",
          "Future trends and emerging threats in Android security"
        ]
      },
      "requirements": [
        "learners should have a basic understanding of how to use an Android device, such as navigating menus, installing apps, and changing settings. Familiarity with basic security concepts, such as passwords and encryption, would also be helpful, but not required."
      ],
      "description": "This beginner-friendly Udemy course on Android Security will teach you how to secure your Android device and protect your data from common security threats. The course covers the basics of Android security, including the operating system's security features, the importance of securing Android devices, and the common security threats faced by Android users.\nYou will learn how to set up a secure lock screen, configure device security settings, install and update security apps, back up and encrypt data, and protect your online accounts and passwords. The course will also cover app-specific security settings, permissions, and best practices for developing secure apps.\nThe course is designed for learners who use Android devices, such as smartphones or tablets and want to understand Android security. No prior knowledge of Android security or mobile app development is required. The course assumes that learners have a basic understanding of how to use an Android device.\nBy the end of the course, learners will have a solid foundation in Android security and will be able to take steps to secure their Android devices and protect their data from common security threats. Additionally, learners will have gained knowledge on advanced topics such as Android Enterprise security features, secure app development, and emerging threats in Android security.",
      "target_audience": [
        "This course is for anyone who uses android phones for their everyday activities."
      ]
    },
    {
      "title": "Flutter Provider State Management - Blog & E-commerce App",
      "url": "https://www.udemy.com/course/flutter-provider-state-management/",
      "bio": "Learn Provider State Management while building a blog web app and simple e-commerce store.",
      "objectives": [
        "Build a Complete, Real World Responsive Website with Flutter Web and Firebase",
        "Learn Firebase Services such as Firebase Firestore, Firebase Authentication and Firebase Hosting",
        "Become proficient in one of the fastest growing technologies",
        "Build a website with Flutter and Dart",
        "Learn State Management with Providers, Proxy Providers and Stream Providers",
        "Learn Advance State Management with Change Notfier and Change Notifier Proxy Provider"
      ],
      "course_content": {
        "Welcome to Provider Course": [
          "Introduction",
          "Join the Private Discord Group"
        ],
        "Create Home Page with Provider": [
          "What is a provider?",
          "Project -- Creating blog ui",
          "Project -- Refactor with provider",
          "How to solve provider errors",
          "Source Code"
        ],
        "Create Blog Page with MultiProvider": [
          "What is multi provider?",
          "Project -- Creating blog page",
          "Project -- Refactor with multi provider",
          "Source Code"
        ],
        "Create your awesome articles with Future Providers": [
          "What are future providers?",
          "Project -- Configure Firestore Firebase",
          "Project -- Refactor with future provider",
          "Project -- Create Blog Entry Page",
          "Project -- Add Blog Entry to Firestore",
          "Source Code"
        ],
        "Show your Blog Posts with Stream Providers": [
          "What is stream provider?",
          "Project -- Refactor with StreamProvider",
          "Project -- Update Blog Post",
          "Project -- Delete Blog Post",
          "Project -- Add Firebase Authentication",
          "Project -- Login Dialog",
          "Source Code & Feedback"
        ],
        "Show errors using ValueNotifier": [
          "What is a value notifier?",
          "Project -- Show Error Message with ValueNotifier",
          "Source Code"
        ],
        "Abstract Widgets with Provider.value": [
          "Project -- Refactor with Provider.value",
          "When to use Provider.value in Stateful Widget?",
          "Source Code"
        ],
        "Create Like Button with ChangeNotifierProvider": [
          "Project -- Create like button",
          "What is a Change Notifier Provider?",
          "Exercise -- Create Counter App with ChangeNotifier",
          "Project -- Refactor Like Button with ChangeNotifierProvider",
          "Project -- Add Like Button in Blog Page",
          "Project -- Persist Like Button Status",
          "Source Code"
        ],
        "Refactor with Proxy Provider": [
          "Project -- Refactor with Proxy Provider",
          "Source Code"
        ],
        "Create Dummy E-Commerce Store with Provider Extension Methods": [
          "Project -- Create Store Page",
          "Project -- Show Store Items with context.watch()",
          "Project -- Create Store View with GridView.builder widget",
          "Project -- Make Store Responsive",
          "Project -- Create Checkout Page",
          "Project -- Delete Checkout Store Items with context.read()",
          "Project -- Add Store Items to Checkout",
          "Project -- Optimise Rebuilds with Consumer Widget",
          "Project -- Optimise Rebuilds with Selector Widget",
          "Project -- Optimise Rebuilds with context.select()",
          "How to choose which widget/method to optimise rebuilds?",
          "End of Project -- Finishing touches",
          "Source Code"
        ]
      },
      "requirements": [
        "A computer",
        "Confident level coding in any programming languages"
      ],
      "description": "Why provider?\nThere are tons of state management solutions out there. However, which one is the best?\nThere isn't.\nIt is like saying the best flavour of ice cream is chocolate. Some might disagree, and say it's strawberry. Others would suggest it's cookies and cream.\nHowever, there is one flavour that you get started with, which is vanilla. Therefore, provider is the flavour that you should start, before you try the others.\nProvider has been the state management the Flutter team used to describe, state management. This is because it is easy to understand. And currently, it is the most liked package.\nMoreover, it is a building block for some state management as well such as flutter_bloc.\nAnd the best way to learn providers, personally, is to create a real life projects with it. Not only you gain experience, you can add these projects into your portfolio.\nYou will learn\nTo create real life projects - You would build a responsive blog web app, and a dummy e-commerce web app (no Firebase or payment integration). This can build up your portfolio of projects under your belt.\nHow to use provider with Firebase - Many times in development, you have to combine your state management with 3rd party services like Firebase. This course will expose to you on how to do it.\nDifferent Providers - Just like a toolbox, the Provider has different tools for different purposes. The MultiProvider is to combine all providers to one list. The FutureProvider and StreamProvider deals with asynchronous tasks. And these are common widgets, professionals used.\nOptimisation of widgets - Fast and smooth apps are qualities of a great user experience. Luckily, you will learn how to build a lag free app. This is possible with Provider widgets: consumer and selector.\nIf you are looking for a State Management to start, this is for you.\nLearning to control the data flow and how the data should react is vital to a user experience. Therefore, get the basics of state management using Provider to get started. This is for you:\nSelf-taught Developers\nComputer Science/Engineering Students\nProfessional Developers\nMobile Freelancers\nWhat's Inside\n6+ Hours of Video Content\n10 topics\n11 Exercises\n2 Projects\nLifetime updates",
      "target_audience": [
        "If you are interested in web development and wanted to try building one without HTML, CSS, or Javascript",
        "If you have mobile development in Flutter and want to expand your skills as a web developer",
        "If you are a traditional web developer, and you want to try creating a website in another way"
      ]
    },
    {
      "title": "Flutter SQLite Database",
      "url": "https://www.udemy.com/course/flutter-sqlite-database/",
      "bio": "Build a Flutter Database App with Drift Package and StateManagement with Provider Package",
      "objectives": [
        "Flutter",
        "SQLite",
        "Drift",
        "State Management",
        "Provider",
        "Database Migration",
        "Table Relation"
      ],
      "course_content": {
        "Introduction": [
          "Flutter Advance Course",
          "1.Setup Flutter Project",
          "2.Setup Material Route",
          "3.App Navigation and TextFormField",
          "4.Extract TextFormField Widget",
          "5.Setup Date Picker",
          "6.Custom Date Format.mp4",
          "7.Refactor Date Picker Form Field",
          "8.Create Database Table",
          "9.Create Database",
          "10.Write Database Query",
          "11.Insert Employee To Database",
          "12.Dispose Database and TextEditingController",
          "13.Get Employee List",
          "14.Card Design",
          "15.Get Single Employee",
          "16.Update Employee",
          "17.Delete Employee",
          "Employee Stream Method",
          "18.Form Validation",
          "19.Bottom Navigation Bar"
        ],
        "Provider State Management": [
          "20.Singleton Using Provider Package",
          "21.Create ChangeNotifier - I",
          "22.Create ChangeNotifier - II",
          "23.ChangeNotifierProxyProvider",
          "24.Provider context.watch",
          "25.Context.watch vs Context.select",
          "26.Provider context.read",
          "27.Provider addListener",
          "28.More on Provider read - watch - select",
          "30.Provider Consumer Widget",
          "31.Provider Selector Widget"
        ],
        "Database Migration": [
          "32.Add New Column",
          "33.Add Employee",
          "34.Get Employee Detail",
          "35.Fix Checkbox State",
          "36.Update & Delete Employee",
          "37.Fix Material Banner.mp4",
          "38.Fix Delete Error Message"
        ],
        "Table Relation": [
          "39.Address Table And Migration",
          "40.Create Address Screen",
          "Address Query",
          "Address ChangeNotifier",
          "Address ChangeNotifierProxyProvider",
          "Insert Address Method",
          "Provider Listener",
          "Fix No Table Found Exception",
          "Address Screen",
          "Address By Employee",
          "Delete Address and Employee"
        ],
        "Source Code": [
          "Project Source Code"
        ]
      },
      "requirements": [
        "Basic of Flutter & Dart"
      ],
      "description": "In this Flutter course we are going to learn about local data storage using drift package which help us to create and write SQL query more easily, it internally make use of SQLite 3 and work well both with Android and iOS.\nWe will able learn about Flutter state management using Provider package which is really popular among Flutter developers. We will cover basic to advance state management using Provider package.\nBy using provider instead of manually writing InheritedWidget, you get:\nsimplified allocation/disposal of resources\nlazy-loading\na vastly reduced boilerplate over making a new class every time\ndevtool friendly – using Provider, the state of your application will be visible in the Flutter devtool\na common way to consume these InheritedWidgets (See Provider.of/Consumer/Selector)\nincreased scalability for classes with a listening mechanism that grows exponentially in complexity (such as ChangeNotifier, which is O(N) for dispatching notifications).\nDrift is a reactive persistence library for Flutter and Dart, built on top of sqlite. Drift is\nFlexible: Drift let's you write queries in both SQL and Dart, providing fluent apis for both languages. You can filter and order results or use joins to run queries on multiple tables. You can even use complex sql features like WITH and WINDOW clauses.\nFeature rich: Drift has builtin support for transactions, schema migrations, complex filters and expressions, batched updates and joins. We even have a builtin IDE for SQL!\nModular: Thanks to builtin support for daos and imports in sql files, drift helps you keep your database code simple.\nSafe: Drift generates typesafe code based on your tables and queries. If you make a mistake in your queries, drift will find it at compile time and provide helpful and descriptive lints.\nFast: Even though drift lets you write powerful queries, it can keep up with the performance of key-value stores. Drift is the only major persistence library with builtin threading support, allowing you to run database code across isolates with zero additional effort.\nReactive: Turn any sql query into an auto-updating stream! This includes complex queries across many tables\nCross-Platform support: Drift works on Android, iOS, macOS, Windows, Linux and the web. This template is a Flutter todo app that works on all platforms\nBattle tested and production ready: Drift is stable and well tested with a wide range of unit and integration tests. It powers production Flutter apps.",
      "target_audience": [
        "Anyone interested in Flutter"
      ]
    },
    {
      "title": "Make Android Apps with Source Code - Power Workshop Series",
      "url": "https://www.udemy.com/course/make-android-apps-with-source-code-power-workshop-series/",
      "bio": "Learn Android Mobile Application Design and Development using Application Source Codes",
      "objectives": [
        "Understand How Actual App Development Works",
        "Create Your Own Applications Inspired by Provided Source Codes"
      ],
      "course_content": {
        "A Notetaker Application": [
          "Introduction",
          "Getting Started",
          "Main Activity",
          "Adding a New Note",
          "Deleting Notes",
          "Source Code"
        ],
        "A Simple Calculator": [
          "Layout",
          "Digit Entry",
          "Operations",
          "Running The App",
          "Source Code"
        ],
        "Mini Pong - A Single Player Game App": [
          "Bouncing Ball",
          "Paddle",
          "Paddle Collision",
          "Testing",
          "Source Code"
        ],
        "Conversion Utility Application": [
          "First Step",
          "Adding Conversions",
          "Conversions",
          "Deleting",
          "Source Code"
        ],
        "Adventure Game": [
          "Entities",
          "Inventory",
          "Inventory Demo",
          "Master Inventory",
          "Source Code"
        ]
      },
      "requirements": [
        "Should be Familiar with Android Programming"
      ],
      "description": "This course teaches Android development by example, beginning with very simple applications using only activities, then gradually adding layers of complexity.\nEach app in the course is a guided tour of the development process, starting with the basic layouts and finishing up with a working app that you can modify and use as a starting point to develop your own ideas.\nAndroid takes a different approach that app development for other platforms: an Android app is really a loose collection of components that communicate amongst themselves and even with components from other applications.\nIn this series, you'll gain insight by watching over Rick's shoulder as he brings separate components together and assembles them into ten different applications that explore the Android system and how to apply it to real-world problems.\nSource code is included, and you may feel free to modify it in any way and use it in your own applications!\nSome of the 10 App Projects you will take on are -\n- A note taker application\n- A single player version of “Pong\" :)\n- A simple adventure game\n- A couple of different types of calculator\n- A conversion utility that allows the user to save their own conversions\n- And, another 5 more exciting apps that will be announced and released every week.\nAlong the way, we'll make use of Android components such as Activities and Services, and learn best practices and strategies for building successful applications. So click that button, and let's get started!\nYou need to sign up now to gain Access to ALL the TEN Apps Training with Source Code that are part of this workshop series.",
      "target_audience": [
        "One Who Always Wanted to Make First Exciting Application",
        "Student with Android Programming Knowledge"
      ]
    },
    {
      "title": "RxJava 3 For Android Developer Masterclass",
      "url": "https://www.udemy.com/course/rxjava-3-for-android-developer-masterclass/",
      "bio": "Learn From Basic to Advance Topic Of RxJava For Your Android Development",
      "objectives": [
        "RxJava 3 ( RxJava / RxAndroid )",
        "RxJava with Room Database",
        "RxJava with Retrofit",
        "MVVM",
        "Kotlin"
      ],
      "course_content": {
        "RxJava 3 Basic": [
          "What is RxJava",
          "Three O of RxJava",
          "RxJava Dependencies",
          "Just Operator",
          "RxJava Operators",
          "FromArray Operator",
          "From Iterable Operator",
          "Range Operator",
          "Repeat Operator",
          "Interval Operator",
          "Timer Operator",
          "Create Operator",
          "Filter Operator",
          "Last Operator",
          "Distinct Operator",
          "Skip Operator",
          "Buffer Operator",
          "Map Operator",
          "FlatMap Operator",
          "GroupBy Operator",
          "Merge Operator",
          "Concat Operator",
          "StartWith Operator",
          "Zip Operator",
          "Observables and Observers",
          "Observabl and Observer",
          "Single and SingleObserver",
          "Maybe and MaybeObserver",
          "Completable and CompletableObserver",
          "Flowable",
          "Disposables in RxJava and RxAndroid",
          "RxJava Schedulers",
          "RxJava and RxAndroid Schedulers",
          "What is Cold Observable",
          "RxJava Cold Observable",
          "What is Hot Observable",
          "RxJava Hot Observable",
          "What is Connectable Observable",
          "RxJava Subject",
          "What is AsyncSubject",
          "AsyncSubject Implementation",
          "What is BehaviorSubject",
          "BehaviorSubject Implementation",
          "What is PublishSubject",
          "PublishSubject Implementation",
          "What is ReplaySubject",
          "ReplaySubject Implementation"
        ],
        "RxJava 3 With Room": [
          "Introduction",
          "Create Project And Add Dependencies",
          "Create Entity and Dao",
          "Create Database Instance",
          "Create Repository",
          "Create ViewModel",
          "Dependencies For Lifecycle and RxJava Room",
          "Add Dialog Layout",
          "Implement Add Dialog",
          "Insert Record",
          "Add RecyclerView Layout",
          "RecyclerView Adaptor",
          "Add Edit and Delete View",
          "Implement Edit",
          "Implement Delete",
          "ProgressBar",
          "Implement Success Dialog",
          "mplement Deleted Dialog",
          "Implement Error Dialog",
          "Clear CompositeDisposable",
          "RecyclerView ScrollToPosition"
        ],
        "RxJava 3 Database Search": [
          "Introduction",
          "SearchView Menu",
          "Implement Search Query",
          "Implement SearchView",
          "Implement CompositeDisposable"
        ],
        "RxJava 3 With Retrofit": [
          "Introduction",
          "Create Project and Dependencies",
          "Add Base URL and Endpoint",
          "Base URL",
          "Create Task Response",
          "Create Retrofit Service",
          "Create Retrofit Instance",
          "Extend Application Class",
          "Create Task Repository",
          "Create ViewModel",
          "Initialize ViewModel",
          "Layout For RecyclerView",
          "RecyclerView Adaptor",
          "Implement RecyclerView",
          "Layout To Add Task",
          "Show Add Task Dialog",
          "Implement Add Task Dialog",
          "Add TaskRequest and Api Endpoint",
          "Implement Add Task",
          "Edit and Delete View",
          "Implement Edit Dialog",
          "Implement Edit Click Listener",
          "Implement Delete Task",
          "Delete Task",
          "ProgressBar",
          "Implement Success Dialog"
        ],
        "RxJava 3 Retrofit Api Search": [
          "Introduction",
          "Search Endpoint",
          "SearchView",
          "Implement RxJava SearchView",
          "Clear Search",
          "Conclusion"
        ],
        "Paging 3 With RxJava": [
          "Paging 3 Overview",
          "Paging 3 Dependencies",
          "Create Network Endpoint and Response",
          "Implement RxPagingSource",
          "Repository and PageConfig",
          "ViewModel",
          "Implement ViewModelProvider Factory",
          "Implement PagingDataAdapter",
          "Implement RecyclerView Adaptor",
          "PagingDataAdapter LoadStateListener",
          "Paging Config Best Practice"
        ]
      },
      "requirements": [
        "Basic Of Kotlin Programming",
        "Basic Of Android Development"
      ],
      "description": "RxJava is a very marketable skill, which is in high demand in the industry today. Most of the Android Developer Job require RxJava skill .Whether you are going to use Java or Kotlin for Android Development ReactiveX skill will be a big advantage for you. We will learn RxJava with Room Database and RxJava With Retrofit in two separate project.\nThis is a RxJava 3 and RxAndroid course for Android Developer . The aim of this course is to teach fundamental concepts of RxJava that takes you from a novice to intermediate RxJava developer. Every concept is explained in detailed manner with code examples.\nIf you have some basic experience in developing Android application with Kotlin then this course is for you. By the end of this course you should be able to implement  RxJava in your Android application.",
      "target_audience": [
        "Android developers",
        "Anyone who are willing to become professional Android developers"
      ]
    },
    {
      "title": "NEW: SwiftUI Series - Core Data in SwiftUI",
      "url": "https://www.udemy.com/course/swiftui-series-core-data-in-swiftui/",
      "bio": "Master the Core Data with SwiftUI, and take your iOS development skills to the next level",
      "objectives": [
        "Developing SwiftUI applications with Core Data backend for data persistence."
      ],
      "course_content": {
        "Course Overview": [
          "Overview and FAQ",
          "Helpful Tools for Core Data Development"
        ],
        "First Core Data App: Reminder App": [
          "App Overview",
          "Core Data in SwiftUI",
          "ObservableObject",
          "UI: CategoryListView",
          "ManagedObject Relationship",
          "UI: ItemListView",
          "UI: ItemCell and ViewModel",
          "Challenge"
        ],
        "Deletion Rule": [
          "Nullify",
          "Cascade",
          "Deny"
        ],
        "NSFetchedResultsController": [
          "Overview",
          "Add Core Data to Existing Project",
          "Decodable: JSON Parsing to NSManagedObject",
          "Perform FETCH",
          "SECTION KeyPath",
          "DELEGATE Implementation",
          "Batch Update",
          "SECTION - Performance Improvement"
        ],
        "Entity Inheritance, Complex Search and Aggregate Functions": [
          "App Overview: Home Report",
          "Entity Inheritance",
          "Decodable for Object Inheritance",
          "Entity Extension",
          "Entity Relationship as Predicate",
          "CompoundPredicate: FILTER and SORT",
          "SUM and COUNT",
          "MIN, MAX and AVG"
        ],
        "Context Thread Management": [
          "App Overview",
          "TRANSFORMABLE Entity Attribute Type",
          "REST Service and Decodable",
          "List and Cell View",
          "Main Context Operation",
          "Background Context Operation"
        ],
        "Alternative Object Model Generation": [
          "Class Definition",
          "Category/Extension"
        ],
        "Data Model Versioning and Migration": [
          "App Overview",
          "Lightweight Migration",
          "Migration with MappingModel",
          "Consuming New Model"
        ],
        "CloudKit Integration": [
          "App Overview",
          "CloudKit"
        ]
      },
      "requirements": [
        "Basic understanding on how to develop SwiftUI application would be helpful, not required."
      ],
      "description": "SwiftUI Series - Core Data in SwiftUI\nThis course was created and updated for Core Data with SwiftUI. If your project is dealing with Core Data in Swift with ViewController approach, or you intend to learn the previous version, my other course CoreData for Swift Development is the course you want.\n\n\nI am new to SwiftUI, is this the right course for me?\nAlthough prior SwiftUI experience is not required, it is recommended. If you are new to SwiftUI, it would be helpful to learn some fundamental in SwiftUI development. Udemy has lots of SwiftUI course. You may also check my SwiftUI course SwiftUI Series - SwiftUI Fundamentals to get yourself up-to-speed with SwiftUI development.\n\n\nWhat is Core Data? Why should I know about Core Data?\nCore Data is one of the most powerful framework that Apple has provided for developer. \"Core Data is a framework that you use to manage the model layer objects in your application. It provides generalized and automated solutions to common tasks associated with object life cycle and object graph management, including persistence.\" - Source from Apple\".\nIf you are passionate about learning mobile development with SwiftUI and looking to take your iOS development skills to the next level, Core Data framework should be at the top of your list.\n\n\nWhat's in it for me?\nIn this course I will take you on a journey in the world of Core Data. We will cover all the important aspects of Core Data:\nEntity\nEntity Inheritance\nAttribute Type\nRelationships\nManagedObjectContext\nManagedObject\nPersistentContainer\nJSON parsing with Codable to NSManagedObject\nPredicate\nCompoundPredicate\nFetching\nBatch Fetching and Update\nObject Deletion\nAsynchronous Fetching\nNSFetchedResultsController\nAggregate Functions\nGrouping\nCaching\nData Model Versioning\nAutomatic Lightweight Migration\nManual Migration with Model Mapping\nBackground process\nAutomatic Subclass and Class Extension Generation\nCloudKit Integration\nThroughout this course we will look in detail the Core Data framework to provide data storage functionality in iOS applications. We will start by creating a simple app that is utilizing Core Data framework, building our own Persistence Container and eventually using all different Core Data features into our application.\nAlong with Core Data versioning, migration and iCloud integration, I will take you on developing 5 iOS applications and how we can integrate all of these components into Core Data.\nSome notable updates from the previous version of Core Data course:\nJSON Parsing with Codable .. bye bye Dictionary Mapping!!\nWe will look into several different techniques to parse JSON response (from sample and live API call) and transform them using Codable protocol directly into Core Data NSManagedObject. No more using dictionary mapping to build our Core Data object. We will cover this for simple Core Data Entities all the way to Entities with inheritance.\nCloudKit\nIn one of the projects, we will demonstrate how to integrate the CloudKit into our app and to sync our data across multiple devices. Apple has done a wonderful job to make this process simple. We will also discuss some caveats so you will have an informed decision when integrating CloudKit to your project.\nPredicate using KeyPath\nIn building our predicates, we will be using KeyPath approach to avoid any potential typo when creating the predicate arguments. It will map directly to object property using the dot notation.\nAll SwiftUI\nAll views, models and services class are built for SwiftUI. Along the way, you will also learn the SwiftUI development techniques in building Core Data applications.\n\n\nDo at your own pace\nLots of students have different methods of learning. Through out this course I will provide both the starter and final Xcode project solution, so you can either follow along one step at a time or you can jump directly to the final solution. By the time you are done with SwiftUI Series - Core Data in SwiftUI course, you will be ready and very confident to take on any Core Data project coming your way. On top of that, you will be one step closer to become a well rounded iOS developer.\n\n\nTarget Audience: All iOS developer that would like to take their skills to the next level.\n\n\nWhat are the requirements?\nA Mac laptop or iMac\nXcode\nSome knowledge of SwiftUI development would be helpful",
      "target_audience": [
        "Students who want to learn data persistence using SwiftUI and Core Data"
      ]
    },
    {
      "title": "Train Image Classification Models & Build Flutter Apps 2025",
      "url": "https://www.udemy.com/course/train-image-classification-models-build-smart-flutter-apps/",
      "bio": "Train Custom Image Recognition Models & Use Them in Flutter Apps with Images and Real-Time Video - Smart Apps in 2025",
      "objectives": [
        "Train Custom Image Classification Models from Scratch & Convert models into flutter compatible tensorflow lite format",
        "Use Custom Image Classification Models in Flutter with Images and Camera Footage",
        "Collect Datasets for Training Custom Image Classification Models",
        "Use Transfer Learning to Retrain Existing Image Classification Models and use them in Flutter",
        "Train Custom Image Classification Models for Flutter using Two Different Approaches"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Image Classification Introduction & Applications"
        ],
        "Machine Learning & Deep Learning for Flutter": [
          "What is Machine Learning",
          "Supervised Machine Learning",
          "Regression and Classification",
          "Unsupervised Machine Learning & Reinforcement Learning",
          "Deep Learning and Neural Network Introduction",
          "Neural Network Example",
          "Working of Neural Networks for Image Classification",
          "Basic Concepts of Machine Learning"
        ],
        "Data Collection - Collecting Dataset for Training Image Classification Model": [
          "Data Collection Introduction",
          "Finding ready to use dataset for training image classification models",
          "Exploring Downloaded dataset for training custom image classification models",
          "Find and Download A Dataset for Brain Tumor Classification using MRI"
        ],
        "Train Your First Custom Image Classification Model in 25 Minutes": [
          "Section Introduction",
          "Exploring Teachable Machine and Uploading Dataset for Model Training",
          "Training, Testing and Converting Model into Tensorflow Lite",
          "Attaching Metadata with Trained Tensorflow Lite Models",
          "Google Colab Introduction",
          "Attaching Metadata and Downloading Ready to Use Model"
        ],
        "Training Custom Image Classification Model with Transfer Learning": [
          "Transfer Learning Introduction",
          "Google Colab Introduction",
          "Installing and Importing Libraries for Model Training",
          "Uploading Dataset and Connecting Google Drive",
          "Dividing dataset into train test and validation parts",
          "Training Custom Image Classification Model",
          "Testing the model and Converting it to Tensorflow Lite Format"
        ],
        "Training Brain Tumor Classification Model": [
          "Train Brain Tumor Classification Model"
        ],
        "Flutter App Development": [
          "Section Introduction"
        ],
        "Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Image Picker - Choose or Capture Images in Flutter": [
          "Setting Up a new Flutter Project and Creating Application GUI",
          "Adding the Library and setting configurations for Android & IOS",
          "Choosing Images From Gallery In Flutter",
          "Capturing Images using Camera in Flutter",
          "Overivew"
        ]
      },
      "requirements": [
        "No ML and Data Science Knowledge Required",
        "A very little knowledge of App Development in Flutter is Needed"
      ],
      "description": "Unlock the full potential of mobile app development with our comprehensive course on training custom image classification models and integrating them into Flutter applications. This course is designed to guide you from the basics of machine learning and deep learning to creating sophisticated, real-time image recognition apps using Flutter and Dart.\nWhat You Will Learn:\nIntroduction to Machine Learning and Deep Learning: Start with the foundational concepts of machine learning, deep learning, and image classification to build a strong base for your journey.\nDataset Collection: Learn effective methods to collect and prepare datasets for training your image classification models.\nModel Training Approaches: Train image classification models using two powerful approaches:\nTeachable Machine: A user-friendly platform to create custom models.\nTransfer Learning: Advanced technique to leverage pre-trained models for better accuracy and efficiency.\nTensorFlow Lite Conversion: Convert your trained models into TensorFlow Lite format, making them compatible with mobile applications.\nFlutter Integration: Seamlessly integrate your models into Flutter apps:\nImage Classification: Choose or capture images in Flutter and use your models for accurate image recognition.\nReal-Time Camera Footage: Display live camera footage in Flutter, pass frames to your models, and build real-time, intelligent mobile apps.\n\n\nProjects Included:\nFruit and Vegetable Classification Model: Create an app that identifies different fruits and vegetables.\nBrain Tumor Classification Model: Develop a model to classify brain tumor images.\nFlower Classification Model: Build a system to recognize various types of flowers.\n\n\nBy the end of this course, you'll be able to:\nTrain custom image classification models tailored to your specific needs.\nSeamlessly integrate your models into Flutter applications built with Dart.\nCraft intelligent mobile apps that leverage real-time image recognition functionalities.\nDevelop cross-platform mobile apps (Android and iOS) with enhanced capabilities.\nSo join us to become proficient in Flutter app development and create cutting-edge mobile apps with image and video recognition capabilities using Dart.\nEnroll now and start your journey towards mastering Flutter and Machine Learning",
      "target_audience": [
        "Beginner Flutter Developers looking to build Machine Learning Powered Flutter Apps",
        "Anyone who want to train Image Classification Models and than use them in Android and IOS Apps",
        "Flutter Developers looking to enhance their skills by learning to train and use image classification models in Flutter"
      ]
    },
    {
      "title": "Full Stack Ecommerce Mobile App: React Native & Node.js 2025",
      "url": "https://www.udemy.com/course/full-stack-e-commerce-mobile-app-react-native-nodejs/",
      "bio": "Master mobile ecommerce with React Native, Node.js, user authentication, and admin dashboard.",
      "objectives": [
        "Construct a full-stack e-commerce mobile application using the powerful combination of React Native (frontend) and Node.js with Express & MongoDB (backend).",
        "Implement robust and secure user authentication flows, covering user registration, login, and advanced role-based access control for admin functionalities.",
        "Develop comprehensive administrative tools to efficiently manage products, including creation, detailed editing, and deletion capabilities.",
        "Acquire essential debugging and problem-solving skills critical for real-world React Native and Node.js development.",
        "Gain practical experience in API development and consumption, understanding the seamless data flow between a mobile client and a backend server."
      ],
      "course_content": {
        "Introduction": [
          "Promotional Video & Course Preview",
          "Setting Up Development Environment & Essential Prerequisites"
        ],
        "Building and Securing the Backend API": [
          "Setting Up Our Express Backend",
          "Install Mongoose and Implement Product Model",
          "Building Our Product API - Controllers Part 1",
          "Building Our Product API - Controllers Part 2",
          "Building Our Product API - Controllers Part 3",
          "Connecting Products to Our API - Product Routes",
          "Setting Up Our Database - MongoDB Atlas & Connection",
          "Building Our User Data Model",
          "Secure User Sessions with JWTs - Generating Our Authentication Token",
          "Managing Users Controller Authentication, Registration, and Profiles Part 1",
          "Managing Users Controller Authentication, Registration, and Profiles Part 2",
          "Managing Users Controller Authentication, Registration, and Profiles Part 3",
          "Connecting Users to Our API - User Routes",
          "Implementing Authentication Middleware - Protecting Our Routes",
          "Securing Our API - Applying Authentication and Admin Middleware",
          "Enhancing Our Backend - CORS, Cookie Parsing",
          "Seeding Our Database - Importing Sample Data",
          "Fix Bugs"
        ],
        "Creating UI Components and Handling State with Redux": [
          "Install Expo App And Run It",
          "Expo App Setup - Root Layout And Tab Layout",
          "Start With Redux Toolkit - Base API Slice",
          "Redux Toolkit - Products API Slice And Store Configuration",
          "Build Our First React Native Component - Rating",
          "Message Component",
          "Building the Product Component Part 1",
          "Building the Product Component Part 2",
          "Crafting the Dynamic Header Component Part 1",
          "Crafting the Dynamic Header Component Part 2",
          "Crafting the Dynamic Header Component Part 3",
          "Implementing the Home Screen Part 1",
          "Implementing the Home Screen Part 2",
          "Implementing the Home Screen Style",
          "Building the Product Details Screen Part 1",
          "Building the Product Details Screen Part 2",
          "Building the Product Details Screen Part 3 - Image Card Component",
          "Building the Product Details Screen Part 4 - Product Details Card Component",
          "Building the Product Details Screen Part 5 - Image Card Component",
          "Building the Product Details Screen Part 6 - Image Card Component Styles"
        ],
        "Advanced Features: Cart, Authentication, Reviews, and Checkout": [
          "Advanced Cart Management - Redux Slice with AsyncStorage Persistence Part 1",
          "Advanced Cart Management - Redux Slice with AsyncStorage Persistence Part 2",
          "Integrating Cart Functionality into Header and Product Details",
          "Building the Cart Screen Part 1",
          "Building the Shopping Cart Screen Part 2",
          "Building the Shopping Cart Screen Part 3",
          "Building the Shopping Cart Screen Part 4",
          "Setting Up User Authentication (Auth Slice and API Endpoints)",
          "Persisting Our Redux Store - Integrating Redux-Persist for Auth and Cart",
          "Implementing the User Login Screen Part 1",
          "Implementing the User Login Screen And Form Container Component Part 2",
          "Implementing the User Login Screen Part 3",
          "Implementing the User Login Screen Part 4",
          "Implementing the User Login Screen Part 5",
          "Centralized Error Handling Middleware",
          "Building the User Registration Screen Part 1",
          "Building the User Registration Screen Part 2",
          "Integrating Product Reviews Section Part 1",
          "Integrating Product Reviews Section Part 2",
          "Implementing the Add Review Modal and Functionality Part 1",
          "Implementing the Add Review Modal and Functionality Part 2",
          "Implementing the Add Review Modal and Functionality Part 3",
          "Implementing the Shipping Screen Part 1",
          "Implementing the Shipping Screen Part 2",
          "Implementing the Shipping Screen Part 3",
          "Selecting the Payment Method Screen Part 1",
          "Selecting the Payment Method Part 2"
        ],
        "Backend Order Management and PayPal Integration": [
          "Designing the Order Model (Mongoose Schema)",
          "Order API Controllers & Price Calculation Utilities Part 1",
          "Order API Controllers Part 2",
          "Order API Controller Part 3",
          "Order API Routes",
          "PayPal Client Configuration",
          "PayPal API Routes and Integration Part 1",
          "PayPal API Routes and Integration Part 2"
        ],
        "Frontend Orders, Payments, and User Account Screens": [
          "Implementing Order API Slice with PayPal Integration",
          "Building the Place Order Screen Part 1",
          "Building the Place Order Screen Part 2",
          "Building the Place Order Screen Part 3",
          "Building the Place Order Screen Part 4",
          "Implementing the Order Screen and PayPal Integration Part 1",
          "Implementing the Order Screen and PayPal Integration Part 2",
          "Implementing the Order Screen and PayPal Integration Part 3",
          "Fix Message displaying in Order Screen and Disabled Add To Cart Button",
          "Fix Fragment Error",
          "Building My Orders Screen Part 1",
          "Building the My Orders Screen Part 2",
          "Implementing The Profile Screen Part 1",
          "Implementing The Profile Screen Part 2",
          "Implementing The Profile Screen Part 3",
          "Implementing The Account Information Screen Part 1",
          "Implementing The Account Information Screen Part 2",
          "Implementing The Account Information Screen Part 3"
        ],
        "Admin Dashboard: Managing Orders, Users, Products & Image Uploads": [
          "Implement Orders List Screen Part 1",
          "Implement Orders List Screen Part 2",
          "Implementing The User List Screen Part 1",
          "Implementing The User List Screen Part 2",
          "Implementing The User List Screen Part 3",
          "Implementing User Details Screen Part 1",
          "Implementing User Details Screen Part 2",
          "Implementing User Details Screen Part 3",
          "Backend - Image Uploads Route with Multer",
          "Implementing The Product List Screen Part 1",
          "Implementing The Product List Screen Part 2",
          "Implementing The Product List Screen Part 3",
          "Implementing The Product Edit Screen Part 1",
          "Implementing The Product Edit Screen Part 2",
          "Implementing The Product Edit Screen Part 3",
          "Implementing The Product Edit Screen Part 4"
        ],
        "Final Improvements, Navigation Refactor, and Course Wrap-Up": [
          "Replacing React Navigation with Expo Router in Our App",
          "Layout Screens Fix And Add Loaders in Product List Screen",
          "Outro & Resolving Expo SDK Incompatibility Issues"
        ]
      },
      "requirements": [
        "This course is designed for aspiring mobile and full-stack developers who are eager to build real-world applications. To get the most out of this course, a foundational understanding of JavaScript (ES6+) is highly recommended.",
        "Familiarity with the following concepts will also be beneficial, though we'll reinforce them throughout the course: Basic React Concepts: Understanding components, props, and state in React will provide a solid base for React Native. HTTP Methods (GET, POST, etc.): A general idea of how web requests work will help in understanding API interactions",
        "Don't worry if you're not an expert in all these areas! This course is built to guide you step-by-step through the process, providing clear explanations and hands-on guidance for every part of building our e-commerce application. A willingness to learn and a passion for building are your most important assets!"
      ],
      "description": "Unlock the power of full-stack mobile development by building a complete, modern e-commerce application from the ground up! In this hands-on course, you'll master the essential technologies that drive today's top mobile experiences: React Native for a dynamic frontend, coupled with a robust Node.js, Express.js, and MongoDB backend. This isn't just about learning concepts; it's about building a tangible, production-ready project that you can proudly add to your portfolio.\nWe'll start by setting up your optimal development environment, ensuring you're equipped with Node.js, VS Code, and ready to launch your apps seamlessly using Expo Go.\nThe course then dives deep into both the frontend and backend. On the React Native side, you'll design and implement a user-friendly mobile interface, focusing on creating responsive layouts that look great on any device. You'll build core e-commerce functionalities, including:\nA comprehensive product listing page with detailed product views.\nSecure user authentication, covering user registration, login, and protected routes.\nAn efficient admin panel for full product management (create, read, update, delete).\nSeamless product image upload directly from your mobile device, integrating with your backend.\nOn the backend with Node.js, Express.js, and MongoDB, you'll architect powerful RESTful APIs. You'll learn to:\nDesign and manage your database schema for users, products, and more.\nImplement secure authentication and authorization logic, including token-based security and role-based access control for administrative features.\nDevelop robust API endpoints for all CRUD operations on products and other resources.\nHandle file uploads securely, preparing your application for real-world scenarios.\nBy the end of this course, you won't just understand the MERN stack; you'll have built a fully functional React Native e-commerce mobile application that demonstrates your ability to create secure, scalable, and user-friendly mobile solutions. This project-based approach ensures you gain practical, in-demand skills, preparing you for a career in full-stack mobile development or empowering you to launch your own mobile store. Join us to transform your coding aspirations into a tangible, impressive mobile application!",
      "target_audience": [
        "Aspiring Mobile Developers; who want to build their first complete, real-world e-commerce application using React Native and a robust backend.",
        "Beginner to Intermediate Developers; looking to significantly enhance their portfolio with a tangible, full-stack mobile project.",
        "Frontend Developers, (with web experience) eager to transition their skills into the exciting world of mobile app development with React Native.",
        "Backend Developers, interested in understanding how to connect their Node.js/Express APIs to a dynamic and interactive mobile frontend.",
        "Entrepreneurs or Small Business Owners; who wish to gain the technical skills to build and manage their own mobile online store."
      ]
    },
    {
      "title": "Building a Chat App for Android from Scratch",
      "url": "https://www.udemy.com/course/building-a-chat-app-for-android-from-scratch/",
      "bio": "Web-Services, Android SDK, PHP, MySQL, Sockets, GUI and Much More",
      "objectives": [
        "Build a Chat App",
        "Learn Android SDK in details",
        "Learn Web-Services",
        "Learn PHP",
        "Learn MySQL",
        "Learn Sockets"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisties",
          "Android Framework"
        ],
        "Demo of Application": [
          "Demo of Application"
        ],
        "Creating Structure of Application": [
          "Designing layout of FreindListActivity",
          "Creating Login Screen Layout",
          "Adding FriendAdder Activity Plus Layout",
          "Developing a Message Box",
          "Structuring Signup Form",
          "Creating Friends List Screen"
        ],
        "Creating Variables Package": [
          "Information of Friends",
          "Information of Message",
          "Information of Status"
        ],
        "Interfaces": [
          "Manager Interface",
          "Sockets Interface",
          "Update Interface"
        ],
        "Information Storage Manipulation": [
          "Saving Friends Information",
          "Storage Manipulator Part 1",
          "Storage Manipulator Part 2",
          "Controller of Message",
          "XML Parser Part 1",
          "XML Parser Part 2"
        ],
        "Sockets": [
          "Introduction to Sockets",
          "Writing Socketer Class",
          "Sending HTTP Request Using Sockets",
          "Start Listening to the port",
          "Exiting out the communication"
        ],
        "Setting up a Web Server": [
          "Creating MySQL Database",
          "Creating Server for chatter Application",
          "Authenticating User",
          "Signup User",
          "Authenticate Function"
        ],
        "Providing Authentication to User": [
          "Creating Login Part 1",
          "Creating Login Part 2",
          "Creating Login Part 3",
          "Completing Signup Class",
          "Creating List of Friends Class",
          "Creating Add Friends Class"
        ],
        "Processing Messages": [
          "Processing Messages Part 1",
          "Processing Messages Part 2"
        ]
      },
      "requirements": [
        "Windows, OS X or Ubuntu"
      ],
      "description": "With \"Building a Chat App for Android from Scratch\", you will learn everything about chat apps, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in chat app development. We'll start from the basics of chat app development to more advanced and the most popular techniques used now a days.\n\"Building a Chat App for Android\" will give you a new perspective on how the Apps and Web-Services work And after you completed the course you will be able to create your own Chat app with the latest technology and technique. Hope you enjoy!\nNOTE: In order to keep you up to date in the world of Chat app Development all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.\nWhy Learn Chat App Development?\nThe Internet is the fastest and largest platform ever created for humans to learn, communicate, share, or create businesses of any kind, and all of this in just 15 years! It is estimated that in the next 2 or 3 years more than 80%%%% of the companies around the world will become internet dependent which will cause a huge demand for App developer in this market. As the World Wide Web grows Chat apps needs to upgraded proportionally.\nLearning Chat app Development will give you the opportunity to start ahead of other competitors by giving you the knowledge of the most recent app technologies and how to better apply them on your future projects. Knowing Chat app Development will give you the ability to control and create anything on the mobile.\nWe promise you would have never had such kind of learning experience.\nWelcome to \"Building a Chat App for Android from Scratch\"\n\n\n\"The average annual salary for employed app developers in 2011 was nearly $90,000. By 2016, the total revenue from consumer mobile apps is expected to top $50 billion.\" By learning android development from this course you can also earn the same amount of salary or even more than that. Best of Luck",
      "target_audience": [
        "Anyone who wants to build a chat app"
      ]
    },
    {
      "title": "Swift & Firebase Building an impressive Realtime Drawing app",
      "url": "https://www.udemy.com/course/app-idea-swift-with-firebase/",
      "bio": "Build your own Real time app using Swift & Firebase where multiple users can share their drawings instantly worldwide.",
      "objectives": [
        "Everything you need to know to build this app in Firebase 2.4",
        "How to use stack view the new layout designer in iOS 9",
        "The secrets about notification, how to send userInfo to all the app",
        "proper and elegant error handling",
        "proper and elegant code refactoring",
        "proper and elegant use of inheritance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "A little about me your future instructor"
        ],
        "Installing and Configuring CocoaPods": [
          "What is Cocoapods and how do I install it"
        ],
        "Sharpening the pencils": [
          "Creating our canvas",
          "Filling the paintings",
          "Mixing the colors"
        ],
        "Observing the subject": [
          "Drawing fire",
          "Exposing your art",
          "Drawing more precise lines",
          "Start of the real time stuff",
          "Creating SNSPath",
          "Testing SNSPath"
        ],
        "Appreciating our final art": [
          "Refactoring",
          "The Famous Singleton",
          "Sending Data to Firebase"
        ],
        "Notification": [
          "Sending Notification to the whole Application",
          "Registering and Receiving the Notification",
          "Starting to understand the data received from Firebase",
          "Finishing parse the data from firebase"
        ],
        "Clear canvas": [
          "Creating the IBOutlets we will need",
          "Using NSNotification again and why"
        ],
        "Adding Color": [
          "Importing the new Pod in the block \"NKOColorPickerView\"",
          "Adding and removing NKOColorPickerView from the main view",
          "Sending the new color to the DrawingView",
          "Sending the Color to firebase and receiving it back",
          "Final Color Adjustments"
        ],
        "Supplementary": [
          "More to come...",
          "Files / Links / Resources",
          "Revision",
          "Share your GitHub repository and/or projects"
        ],
        "Students Q & A": [
          "Paul- EXC_BAD_INSTRUCTION Problem"
        ]
      },
      "requirements": [
        "Basic knowledge of iOS programming or programming in general"
      ],
      "description": "Course Description\nHow cool would be if you had an app where you could share your drawings with friends in real time as you draw it? What if they could draw with you in the same canvas but on a different device? It doesn’t matter if you’re next to each other or on the opposite sides of the world.\nNow wouldn't be even cooler if you had designed, created and built this app all on our own?\nThis is what we are offering in this course and you will not just learn how to build this app, but you will also learn all the secrets behind it. You will master Firebase (the real time framework from Google). You will learn about NSNotication (how to send user Info to all in the app), stack views (the new layout designer in iOS 9), and so much more.\nFirebase starts with a FREE tier that can be used even in your commercial applications, it also comes with a very simple to use API that can be used for iOS (including Swift), Android, and JavaScript so you don't have to worry about compatibility; and it also comes with a very easy to use dashboard web interface.\nThis course was recorded using XCode 7, iOS 9 and Firebase 2.4\nYou will learn:\nEverything you need to know to build this app in Firebase 2.4\nHow to use stack view the new layout designer in iOS 9\nThe secrets about notification, how to send user Info to all in the app\nproper and elegant error handling in Swift\nproper and elegant code refactoring in Swift\nproper and elegant use of enum in Swift\nproper and elegant use of inheritance in Swift\n\n\nThe qualifications I have that I believe will help me teach you?\nI have received my first certification in programming in 1987 when I was only 10 years old in an apple II\nI have been a professional developer for over 20 years\nI am an active member on StackOverflow, and I am always helping members on the site. Helping people is the passion that brought me to create this course.\nI currently rank as top 10% for Swift Help in StackOverflow\nI currently rank as top 20 % for iOS Help in StackOverflow\nI am dedicating a lot of time to this course so you can be sure you will have plenty of support in your journey.\nWhat are the requirements?\nA Mac running Yosemite or later version of Mac Os\nXcode 7 or later\nBasic knowledge of iOS\nWhat are you going to get from this course?\nHow to Authenticate to Firebase using email and password\nHow to read and write data in real time to and from Firebase\nDevelop iOS apps with real time data transfer\nLearn complex concepts of Swift necessary to build a real app\nHow to integrate Firebase in your Swift iOS App\nOver 16 lectures and 3 hours of content!\nEverything you need to know to build this app in Firebase\nHow to use stack view the new layout designer in iOS 9\nThe secrets about notification, how to send user Info to all in the app\nproper and elegant error handling\nproper and elegant code refactoring\nproper and elegant use of inheritance\nWhat is the target audience?\nPeople who have a brief understanding of Swift language and iOS Development",
      "target_audience": [
        "People who have a brief understanding of Swift language and iOS Development",
        "Xcode 7 or later"
      ]
    },
    {
      "title": "Flutter & Generative AI: Create Next-Level Image & Art Apps",
      "url": "https://www.udemy.com/course/flutter-ai-mastery-build-image-art-generation-flutter-app/",
      "bio": "Learn to Use DALLE-3, MidJourney, and AI APIs in Flutter to Create Dynamic Image Generator Apps with Animations in 2025",
      "objectives": [
        "Build AI-powered image and art generator apps using Flutter from scratch",
        "Master the integration of popular AI tools like DALLE-3, MidJourney, and APIs for image generation",
        "Design user-friendly and visually appealing app interfaces in Flutter.",
        "Implement dynamic image generation features based on user inputs.",
        "Add smooth animations to enhance app interactivity and user experience.",
        "Set up a complete development environment with Flutter and Android Studio.",
        "Learn how to fetch and display AI-generated images in real-time.",
        "Gain expertise in integrating external APIs into Flutter apps.",
        "Develop and publish a fully functional app that stands out with AI-driven features."
      ],
      "course_content": {
        "Introduction": [
          "Flutter Introduction"
        ],
        "Environment Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Building Image Generator in Flutter": [
          "Creating new project & basic GUI setup for Image Generator App",
          "Exploring Image Generation Platforms",
          "Application Programming Interface",
          "Components of APIs",
          "Learn to explore APIs of GenAI Platforms",
          "Generating Images in Flutter",
          "Displaying Generated Images in Flutter App"
        ],
        "Animation & GUI": [
          "Flutter App GUI - Working on Bottom Bar",
          "Flutter App GUI - Working on Images",
          "Add Progress Indicator to manage loading time in Flutter",
          "Exploring & Using Animations in Flutter",
          "Adding Background Image in Flutter"
        ],
        "Exploring Image & Art Generation & Saving Generated Images": [
          "Exploring Art Generation Parameters for Flutter",
          "Exploring & Testing Different Art Styles in Flutter",
          "Saving Generated Images in Gallery in Flutter"
        ],
        "Use OpenAI DALLE-3 in Flutter": [
          "OpenAI DALLE-3 Documentation",
          "Use DALLE-3 in Flutter"
        ]
      },
      "requirements": [
        "No Prior Programming Experience in AI Required: The course is beginner-friendly and provides step-by-step guidance.",
        "Familiarity with Flutter development and Dart programming is recommended but not mandatory",
        "No prior AI knowledge is necessary—just a willingness to learn and experiment with new tools."
      ],
      "description": "Unleash the creative power of artificial intelligence and learn how to develop captivating apps that generate breathtaking AI-driven images and art. This is your chance to master Flutter and integrate state-of-the-art AI tools like DALLE-3, MidJourney, and other powerful APIs to build professional-grade apps.\n\n\nJoin Muhammad Hamza Asif, a top-rated Udemy instructor with 60,000+ students, and dive into a step-by-step guide to creating an AI-powered image generator app from scratch—perfect for beginners and seasoned developers alike.\n\n\nWhat You'll Build:\nImagine typing a description like \"A serene mountain landscape with a vibrant sunset\" into a text box and instantly generating stunning, high-quality images. This app will do just that, allowing users to generate, download, and animate unique images in seconds!\n\n\nWhat You'll Learn:\nSet Up Your Tools: Install and configure Flutter, Android Studio, and all necessary dependencies.\nDesign Beautiful User Interfaces: Create clean, intuitive UIs for an image generator app that users will love.\nMaster AI Tools & APIs: Work with cutting-edge platforms like DALLE-3, MidJourney, Imagine and others to explore image generation capabilities.\nIntegrate APIs into Flutter: Learn how to connect your app to AI models and APIs to generate images based on user input.\nAdd Stunning Animations: Bring your app to life with smooth, eye-catching animations to enhance user experience.\nPublish a Functional AI App: Deploy a fully-featured, AI-powered app ready to amaze your users!\n\n\nWho This Course is For:\nBeginner Developers: No prior programming or AI experience needed. Basic Flutter knowledge is helpful but not required.\nAspiring App Creators: Perfect for those looking to build apps that stand out with innovative AI features.\nFlutter Enthusiasts: Enhance your Flutter skills by integrating AI-driven image generation capabilities.\nExperienced Developers: Learn to combine AI with mobile development to create groundbreaking apps.\n\n\nWhy Take This Course?\nHands-On Learning: Build a complete app from start to finish.\nReal-World Skills: Gain expertise in AI integration and app development that you can apply to future projects.\nCutting-Edge Technology: Stay ahead in the rapidly evolving field of AI-powered mobile apps.\nLifetime Access: Revisit the content anytime to keep your skills sharp.",
      "target_audience": [
        "Beginners in Mobile App Development: Interested in creating AI-powered apps with minimal prior experience.",
        "Flutter Developers: Looking to expand their skills by integrating cutting-edge AI technologies into their apps.",
        "AI Enthusiasts: Eager to explore the potential of DALLE-3, MidJourney, and other AI tools in real-world applications.",
        "Tech Professionals: Looking to enhance their portfolio with projects showcasing AI integration in mobile apps.",
        "Entrepreneurs and Innovators: Aiming to build next-gen apps for e-commerce, design, or creative industries using AI-powered image generation."
      ]
    },
    {
      "title": "Building A Professional Mobile Application Backdoor Attack",
      "url": "https://www.udemy.com/course/building-a-professional-mobile-application-backdoor-attack/",
      "bio": "Build an Advanced mobile android application backdoor attack controlled by a remote desktop application(ethical hacking)",
      "objectives": [
        "Discover the world of Ethical Hacking and Security With Java",
        "Building a Professional android mobile application backdoor attack for target side step by step",
        "Hiding a malicoius code inside the android mobile application.",
        "Steal personal data target without his knowing.",
        "Building a Graphical User Interfaces desktop application for hacker side",
        "perform the socket manipulation connection network.",
        "programming tasks in a professional way."
      ],
      "course_content": {
        "General project overview": [
          "Introduction",
          "details project working",
          "Quiz about what you learn"
        ],
        "Hacker side desktop application building": [
          "Design graphical user interface desktop application",
          "Creating a socket client for command sending",
          "Creating a socket server for recieving data",
          "do you get what you learn ?"
        ],
        "target side android mobile application building": [
          "Design graphical user interface mobile anroid application",
          "all resource declaration needed",
          "next and previous button implementation",
          "important definitions",
          "Message sender class",
          "Thread creation",
          "Get command method",
          "Make call method",
          "Send sms method",
          "Get info mobile method",
          "Get info network mobile method",
          "Show a message text into target phone + testing the code",
          "Get contact method",
          "Get sms method",
          "Get logs call contact method",
          "Change icon + test app",
          "Test what did you learn"
        ],
        "finalizing the desktop application": [
          "creating apk file , jar file plus test the whole project",
          "Implementing save data button for desktop application",
          "implementig help button for desktop application"
        ]
      },
      "requirements": [
        "installing android studio IDE (we will use android 4.1 version) and netbeans IDE",
        "Some basics in OOP (oriented object programing)",
        "Some basics in android programming.",
        "some basics in java language",
        "Curiosity to learn about building a cyber security projects using java.",
        "You won't need to buy any software – everything we are going to use will be free."
      ],
      "description": "in this course we will build an advanced mobile android application backdoor attack controlled by a remote desktop applicaiotn using java language, we will explain every details beginning from theoretical part until we reach into expremental part.\nthe mobile application is considered as a motivation quotes from a wisdom men , with a beautiful design in addition it contains a malicious code which allows us a remote connexion with another desktop application (the communication is based in the socket).\nthis mobile application allows the hacker to get :\ninformation about device target (hardware).\ninformation about network (SIM) device target.\nshow a text message in device target .\nall list contact from device target.\nall logs contact from device target.\nall sms list target.\nsend an sms into specific numbere using device target.\ncall a specific numbere using device target .\nwe will also build a desktop application for hacker side with a graphical user interface , through this last the hacker can manipulate the target phone as he wants.\nthrough this program i can get :\na report about data targets.\nsave data target into text file.\nwe will build all this things step by step , so subscribe for this course and i will do my best to satisfy you .\nnote : the mobile application works just in android 5.2 and less , because the degree of security in another versions is higher ,it requests a permission from the user in each time.",
      "target_audience": [
        "java developer.",
        "interested with cyber security field.",
        "android programmers with java"
      ]
    },
    {
      "title": "Android App Development Fundamentals",
      "url": "https://www.udemy.com/course/android-app-development-fundamentals/",
      "bio": "Android App Development for complete Beginners",
      "objectives": [
        "The Introduction to Android",
        "Elements of Android",
        "Downloading and Installing Tools",
        "Prerequisites, Overview and Getting Started",
        "Project Structure",
        "Layout, Text and Buttons",
        "Starting Activities",
        "Manifest"
      ],
      "course_content": {
        "Android App Development": [
          "Introduction to Android",
          "Elements of Android",
          "Download - Install SDK",
          "Prerequisites and Overview",
          "Getting Started",
          "Project Structure",
          "Activities",
          "Layout",
          "Text",
          "Buttons",
          "Manifest",
          "Starting Activity",
          "Starting Activity Part - 2",
          "Starting Activity Part - 3"
        ]
      },
      "requirements": [
        "JAVA for writing code",
        "XML for User Interface",
        "Eclipse Experience - Integrated Development Environment",
        "Object Oriented Programming",
        "Android User Experience",
        "Checkout our course On JAVA, XML and OOP"
      ],
      "description": "Android is an operating system that is built basically for Mobile phones. It is based on the Linux Kernel and other open-source software and is developed by Google. It is used for touchscreen mobile devices such as smartphones and tablets. But nowadays these are used in Android Auto cars, TV, watches, camera, etc. It has been one of the best-selling OS for smartphones. Android OS was developed by Android Inc. which Google bought in 2005. Various applications (apps) like games, music player, camera, etc. are built for these smartphones for running on Android. Google Play store features more than 3.3 million apps. The app is developed on an application known as Android Studio. These executable apps are installed through a bundle or package called APK(Android Package Kit).\n\n\nThe Android App Development Fundamentals is a brand new providing the perfect introduction to the real-world Android concepts and skills required to be a successful Android developer. Whether you are a complete beginner this course will go from setting up and installing Android Studio to building real apps that are useful and look great. You'll gain understanding of the core important aspects of Android app development.\nHere in this course you will learn what you should know to be android app developer:\nFrom the Android Introduction to Starting Activities.\nAndroid Fundamentals\nAndroid Programming Languages. In Android, basically, programming is done in two languages JAVA or C++ and XML(Extension Markup Language).\nAndroid Components. The App components are the building blocks of Android.\nStructural Layout Of Android Studio.\nLifecycle of Activity in Android App.\nIn the Android Developer Fundamentals course, you learn basic Android programming concepts and build a variety of apps, using the Java programming language. You start with Hello World and work your way up to apps that schedule jobs, update settings, and use Android Architecture Components.",
      "target_audience": [
        "Complete beginners to Android app development",
        "Anyone who wants to make Android apps, or become an Android Developer"
      ]
    },
    {
      "title": "The Complete iOS App Developer Bootcamp | 2024 | iOS 17",
      "url": "https://www.udemy.com/course/the-complete-ios-app-developer-bootcamp-2024/",
      "bio": "Learn How to Build iOS Apps with an Ex-Senior Meta iOS Engineer!",
      "objectives": [
        "Learn the fundamentals of programming with Swift",
        "Learn how to build stunning mobile apps with SwiftUI",
        "Build an amazing TikTok clone using SwiftUI",
        "You'll be learning from an Ex-Senior iOS Engineer at Meta!"
      ],
      "course_content": {
        "Getting Started": [
          "Getting Started & Project Setup",
          "What is Programming?"
        ],
        "Programming Fundamentals": [
          "Variables & Constants",
          "Operators",
          "String Interpolation",
          "Conditional Programming | Control Flow",
          "Data Structures Pt 1 | Arrays",
          "Data Structures Pt 2 | Dictionaries",
          "For Loops",
          "While Loops",
          "Functions",
          "Optionals",
          "Object Oriented Programming | Structs",
          "Exercises #1",
          "Exercises #2",
          "Exercises #3",
          "Exercises #4"
        ],
        "App Development Fundamentals | SwiftUI": [
          "Project Setup",
          "Adding Text with SwiftUI",
          "Shapes",
          "Images",
          "Stacks",
          "Stacks Challenge",
          "Padding",
          "Spacers",
          "ForEach Loops",
          "Scroll Views | Uber Eats Menu",
          "Grids | Instagram Profile",
          "Lists",
          "Buttons & State Properties",
          "Conditional Programming | Control Flow",
          "View Extraction & Subclasses",
          "Data Modeling with Structs",
          "Text Fields",
          "Binding Properties",
          "Sheets",
          "Navigation Stacks",
          "Tab Views",
          "MVVM Architecture | Published Properties"
        ],
        "Building Your First App | TikTok Clone": [
          "Introduction | What We're Building",
          "Setting Up Our Project",
          "Tab Bar Setup",
          "Building The FeedView",
          "Explore View",
          "Notifications View",
          "Profile View",
          "Feed Videos",
          "Custom Video Player",
          "Custom Video Player Continued",
          "Finishing The Custom Video Player"
        ]
      },
      "requirements": [
        "No programming experience required! We will teach you everything you need to know.",
        "A MacBook Computer is Required"
      ],
      "description": "The Complete iOS App Developer Bootcamp\nEmbark on an exhilarating journey into the world of iOS app development with our \"Complete iOS App Developer Bootcamp.\" This comprehensive and hands-on course is meticulously crafted to guide aspiring developers through the entire process of creating mobile applications, starting from the very basics and progressing to the development of a fully functional iOS app.\nWe'll start with the basics, then work our way up to building an amazing TikTok clone with SwiftUI!\n\n\nKey Highlights:\nFoundations of Programming:\nGain a solid understanding of programming concepts and principles.\nLearn the fundamentals of Swift, Apple's powerful and intuitive programming language.\nIntroduction to SwiftUI:\nDive into SwiftUI, Apple's modern and declarative user interface framework.\nMaster the essentials of building user interfaces for iOS applications.\nHands-On App Development:\nApply your knowledge through practical, hands-on exercises and coding challenges.\nExplore the intricacies of iOS app development and understand the importance of user experience.\nBuilding Your First iOS App:\nDevelop a TikTok clone as your first iOS app project.\nImplement key features such as a short form video feed, dynamic content creation, and so much more\nLearn to navigate the Xcode development environment efficiently.\nProject-Based Learning:\nEmbrace a project-based approach that emphasizes real-world application of skills.\nCollaborate with peers and receive constructive feedback from experienced instructors.\nBest Practices and Industry Insights:\nExplore best practices for iOS app development.\nUnderstand the latest trends and technologies shaping the mobile app development landscape.\nVersion Control and Deployment:\nLearn to use version control systems, such as Git, to manage your codebase.\nGain insights into the app deployment process on the App Store.\nCareer Preparation:\nReceive guidance on building a strong portfolio to showcase your skills.\nUnderstand the essential elements of preparing for job interviews in the iOS development field.\nPrerequisites:\nNo prior programming experience is required.\nMacBook Computer Required\nEnthusiastic learners with a passion for app development are encouraged to join.\nWho Should Attend:\nIndividuals aspiring to become iOS app developers.\nStudents interested in building a strong foundation in programming and mobile app development.\nProfessionals seeking to transition into the field of iOS app development.\nOutcome:\nUpon completion of this bootcamp, you will have the knowledge and skills to independently design, code, and deploy iOS applications. You'll be well-prepared to embark on a rewarding career as an iOS app developer or continue your journey into more advanced topics in iOS development.\nJoin us and unlock the door to a world of possibilities in the dynamic and innovative realm of iOS app development!",
      "target_audience": [
        "Beginners looking to learn how to code and build mobile apps",
        "Developers looking to improve their skills or learn iOS Development"
      ]
    },
    {
      "title": "Mastering SwiftUI MapKit - The Complete Guide",
      "url": "https://www.udemy.com/course/mastering-swiftui-mapkit-the-complete-guide/",
      "bio": "From Zero to MapKit Pro: SwiftUI's Ultimate Mapping Course",
      "objectives": [
        "Students will learn how to seamlessly integrate maps into SwiftUI applications, enabling them to create location-aware apps with ease.",
        "You will discover how to add markers, pins, and custom annotations to maps, making your apps interactive and engaging.",
        "Understand how to configure different map styles to match your app's design and provide a visually appealing user experience.",
        "Master the art of accessing and displaying the user's real-time location on the map, providing context-aware information.",
        "Learn how to implement smooth zooming and panning features, allowing users to focus on specific points of interest on the map.",
        "Students will undertake the creation of a NearMe app, capable of showcasing nearby points of interest and sorting them based on distance from the user's locatio",
        "Stay at the forefront of technology by exploring and implementing the new LookAroundPreview feature introduced in iOS 17, enhancing user engagement.",
        "Dive into adding route planning and navigation features to your NearMe app, enabling users to easily find their way to selected destinations using Apple Maps."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Getting Started with SwiftUI Maps": [
          "Displaying Map",
          "Adding Marker to the Map",
          "Adding Custom Annotation to the Map",
          "Configuring Different Map Styles"
        ],
        "User Location": [
          "Displaying User's Current Location",
          "Refactoring",
          "Zooming into the Current User's Location",
          "NOTE: Errors in the Output Window",
          "Configuring App for Always Authorization",
          "Dynamically Setting the Camera to Different Positions",
          "Adding UserLocationButton, Compass and ScaleView to the Map",
          "Simulating Locations in iPhone Simulator",
          "FIX: Implementing CLLocationManager Authorization Event"
        ],
        "NearMe App - Finding User's Location and Setting Up Interface": [
          "What we will be building?",
          "Adding Map and Search TextField",
          "Implementing LocationManager",
          "Implementing LocationError",
          "Displaying User's Location",
          "Zooming into User's Location"
        ],
        "NearMe App - Finding Places Nearby Using MKLocalSearch": [
          "Adding MKLocalSearch Function to Search Nearby Places",
          "Displaying Search Results on the Map",
          "Displaying Search Results in a List",
          "Previewing MapItem Data"
        ],
        "NearMe App - Showing Place Details & Drawing Route on Map": [
          "Implementing SearchOptionView",
          "Refactoring",
          "Sorting Places Based on Distance",
          "Displaying Distance Values in PlaceView",
          "Selecting MapItem and Implementing Display Modes",
          "Implementing SelectedPlaceDetailView"
        ],
        "NearMe App - Routing, ActionButtons and LookAroundPreview": [
          "Selecting MapItem Using PlaceListView",
          "Implementing LookAroundPreview",
          "Adding Route",
          "Hiding the LookAroundPreview Based on Selected Presentation Detent"
        ],
        "NearMe App - Adding Action Buttons": [
          "Adding ActionButtons to the SelectedPlaceDetailView",
          "Opening Destination in Apple Maps",
          "Implementing Call Button",
          "Resource: Hiding the Call Button When Phone Number is Not Available"
        ],
        "Project: Restroom Finder - Setup and Displaying Annotations on the Map": [
          "What we will be building?",
          "Refuge Restrooms API",
          "Downloading the Starter Project",
          "Implementing Restroom Model",
          "Implementing HTTP Client",
          "Adding HTTP Client to Environment Values",
          "Displaying Markers on the Map",
          "Mocking HTTP Client",
          "Displaying Custom Annotations on the Map",
          "Searching Restrooms based on Region",
          "Implementing RestroomDetailView",
          "Showing Amenities for Restrooms",
          "Open Maps for Directions"
        ],
        "Region Monitoring Using CLMonitor": [
          "Understanding the Starter Project",
          "Creating Regions Using MapCircle",
          "Start Monitoring Regions",
          "Updating User Interface When Entered into Region"
        ]
      },
      "requirements": [
        "Familiarity with Swift Programming",
        "Xcode Installation",
        "Basic iOS Development Knowledge",
        "Apple Developer Account (Optional)",
        "Desire to Learn"
      ],
      "description": "Are you ready to harness the power of SwiftUI and MapKit to create captivating, location-aware applications? Whether you're a seasoned iOS developer or a newcomer to SwiftUI, our comprehensive course will guide you from novice to expert in no time.\n\n\nIn this course, you'll learn how to display maps seamlessly within your SwiftUI apps, establishing a strong location-based foundation. You'll also delve into the world of markers, pins, and custom annotations, turning your maps into interactive canvases for user engagement. Additionally, you'll have the opportunity to customize your maps with various styles, ensuring they align perfectly with your app's aesthetics.\n\n\nUnderstanding and displaying the user's real-time location is a crucial skill, and we'll show you how to do it effortlessly. Zooming and panning features will allow you to focus on specific locations of interest, enhancing user experience.\n\n\nBut that's not all! We'll guide you through the development of a NearMe app, which will display nearby points of interest and intelligently sort them based on distance from the user's location. You'll also explore iOS 17's LookAroundPreview, staying at the forefront of technology integration. And to top it off, you'll learn to add routes and navigation, enabling users to easily find their way to selected destinations using Apple Maps.\n\n\nThis course will cover the creation of a \"Restroom Finder App.\" This unique app will utilize a third-party JSON API to pinpoint and display all nearby restrooms in the user's current position. Each restroom will also be capable of displaying all the amenities available, enhancing user convenience and accessibility.\n\n\nBy enrolling in this course, you'll gain hands-on experience, master essential skills, and create real-world applications that utilize SwiftUI and MapKit. Whether you aspire to build location-based social networks, travel guides, or specialized apps like the Restroom Finder, this course will equip you to develop engaging and feature-rich experiences that captivate your users. Join us today and embark on your journey toward becoming a proficient SwiftUI and MapKit developer!",
      "target_audience": [
        "Aspiring iOS Developers",
        "Experienced Developers",
        "Students and Learners",
        "Entrepreneurs and Product Managers",
        "Career Switchers",
        "App Enthusiasts",
        "Freelancers and Consultants",
        "App Designers"
      ]
    },
    {
      "title": "Android Studio Productivity Masterclass",
      "url": "https://www.udemy.com/course/android-studio-productivity-masterclass/",
      "bio": "2x Your Coding Speed Using Android Studio",
      "objectives": [
        "Learn how to increase your speed while coding, improve your skills while using Android Studio and plugins",
        "Become more efficient in coding by using the right shortcuts, live templates and plugins",
        "Become a pro at using your keyboard, so that you could almost get rid of your mouse enterily while coding.",
        "Learn how to use the right shortcuts, live templates and plugins"
      ],
      "course_content": {
        "Introduction": [
          "Thanks for joining",
          "Get the most from Tutorials.EU",
          "New Feature: Learning Paths"
        ],
        "Live Templates": [
          "Intro to Live templates",
          "Live template examples and where to find them",
          "Udemy Reviews Update",
          "Create your own Live template",
          "Live templates challenge",
          "Bonus"
        ],
        "Basic Shortcuts in Android Studio": [
          "Intro Basic Shortcuts in Android Studio",
          "Copy and Cut Line",
          "Clipboard and copy from history",
          "Duplicate Line",
          "Get Parameter Info",
          "Select code with ctrl w or option up",
          "Extend and shrink selection",
          "Open terminal within Android Studio",
          "Expanding or collapsing code",
          "Cleanup code insert",
          "Build and Run your app"
        ],
        "Refactoring in code": [
          "Intro",
          "Extract a variable",
          "Extract a method",
          "Extract a parameter",
          "Rename anything easily",
          "Move your code up or down a line",
          "Surround code with"
        ],
        "Navigate": [
          "Navigate intro",
          "Navigate to Class or File",
          "Navigate to Line",
          "Recently Opened Files and more",
          "Recently made changes",
          "Jump to last change",
          "Switch between open tabs",
          "Search anywhere",
          "Navigate to implementation",
          "Navigate to declaration",
          "Navigate to super class or method",
          "Move to next and previous highlighted error",
          "Display the file structure",
          "Navigate within the file and highlight code with precision and speed"
        ],
        "Navigate between windows": [
          "Intro navigate through windows of android studio",
          "Navigate in the project window",
          "Open the android window",
          "Open the debug window",
          "Project Structure Window",
          "Hide or Restore Windows in Android Studio"
        ],
        "Useful Plugins": [
          "Plugins intro",
          "Code glance",
          "Material Theme UI",
          "Key Prompter X",
          "Force shortcuts"
        ],
        "Thank you": [
          "Thank you"
        ]
      },
      "requirements": [
        "You should at least have worked with Android Studio before"
      ],
      "description": "Do you want to be a more efficient Android Developer? Use shortcuts, shortcodes, and special productivity hacks like a true coding Jedi?\nIt's all possible with my new Android Studio Productivity Masterclass!\nUsing the right shortcuts, live templates and plugins will make your life as a developer a lot easier. Not only will you become faster when coding, but you will become a pro at using your keyboard and could even throw away your mouse... at least almost... After the course you will be so much more proficient within Android Studio.\nThis course is suitable both for beginners and for advanced Android Studio users who want to learn additional plots and double their coding speed.\nThis course consist of several chapters where you will learn:\nGeneral Shortcuts to work in Android Studio\nRefactoring in code\nNavigation in your code and files\nNavigation between windows in Android Studio\nUseful Plugins\nLive templates\nYou should have used Android Studio before, to get the most out of this course, as installing Android Studio and a basic overview of the tool itself is not part of the course.\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like this course is not for you, ask for a full refund within 30 days. All your money back, no questions asked.\nABOUT YOUR INSTRUCTOR:\nMy name is Denis Panjuta and in my courses, I have taught over 150.000 students how to code. I have a Bachelor of Engineering at the University of Applied Sciences in Constance (Germany). I love teaching and creating high-quality courses. My mission is, to teach programming to over 10 M people!",
      "target_audience": [
        "This course is for every developer who wants to use Android Studio efficiently, even if you’re a beginner"
      ]
    },
    {
      "title": "Ionic Framework 101: A Quickstart to Building Mobile Apps",
      "url": "https://www.udemy.com/course/ionic-framework-101-quickstart/",
      "bio": "A quickstart to learning how to make great looking Android and iOS apps in no time using Ionic Framework.",
      "objectives": [
        "Build Android and iOS applications",
        "Know how to use Ionic Framework for mobile application development"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "What is Ionic Framework?",
          "What are we Going to Accomplish in this Course?",
          "Ionic and our Expectations"
        ],
        "Getting Started": [
          "Installing Ionic Framework and its Dependencies",
          "Installing the Android SDK",
          "Creating a New Ionic Project",
          "Getting Started with a New App"
        ],
        "Available Components & CSS": [
          "An Overview of the Ionic Framework Available Components",
          "A Closer Look at the List View Component",
          "Add Swipe Gestures To List View Items",
          "Using IonIcons in Your Application"
        ],
        "Functionality with AngularJS": [
          "Adding AngularJS Controllers for Separating Logic",
          "Looping Through Objects and Arrays in the UI",
          "Navigating to Different Views Using the UI-Router",
          "Understanding $q and the AngularJS Promise",
          "Performing RESTful Requests with the $http Service"
        ],
        "Including Functionality Through External Plugins": [
          "Manage Data Easier with the ngStorage JavaScript Library",
          "Launching External Web Pages with the Apache Cordova InAppBrowser Plugin",
          "Use ngCordova to Wrap Apache Cordova Plugins in AngularJS",
          "Added Functionality with External Plugins"
        ],
        "Building a URL Shortener App": [
          "Understanding the TinyURL API",
          "Creating the URL List View",
          "Creating a View for Shrinking URLs",
          "Shrink URLs Defined by the User",
          "Storing Information About the Long and Short URL Data",
          "Launching Saved URLs in the Web Browser",
          "Deleting Saved URLs from the List",
          "Building a URL Shortener App"
        ],
        "Preparing the Final Product for Release": [
          "Building the Application for Android and iOS",
          "Testing the Application Using the Genymotion Android Simulator and iOS Simulator",
          "Debugging the Android Application with ADB",
          "Building, Testing, and Troubleshooting an Ionic Application"
        ],
        "Course Conclusion": [
          "Summary of Course and Source Code"
        ]
      },
      "requirements": [
        "Must have the free to download Atom editor by GitHub installed for writing application code",
        "Must have a Macintosh computer to build iOS applications as Linux and Windows can only build Android applications",
        "A Macintosh computer is NOT required to participate in this course"
      ],
      "description": "This course will teach you how to develop web-hybrid mobile applications for Android and iOS using Ionic Framework. We'll look at what is necessary to configure Ionic Framework on your Windows, Linux or Macintosh computer and develop visually pleasing applications with minimal amounts of code and design skills necessary.\nIonic Framework 101 is designed to be a quickstart for beginners looking to develop mobile applications. As a course goal, we'll create a fully functional URL shortener using the skills we developed through the span of the course.",
      "target_audience": [
        "This Ionic Framework course is meant for people with at least some knowledge of HTML5 and JavaScript",
        "This course is NOT meant for people looking to develop Windows Phone or BlackBerry applications"
      ]
    },
    {
      "title": "Reskin an iOS App from Start to Finish with a Text Generator",
      "url": "https://www.udemy.com/course/reskinning/",
      "bio": "In one hour, learn the complete process of reskinning an iOS app using XCode, from the first test to final submission.",
      "objectives": [
        "By the end of the course, you will be able to take a source code and edit it in Xcode to reskin it and publish it into the App Store",
        "Learn how to create certificates in the iOS development center",
        "Learn how to create provisioning profiles so you can test your app",
        "Learn how to create an app in the iOS development center and iTunes Connect",
        "Learn how to register your devices to test the app on, create test accounts, and test your first app in Xcode",
        "Learn the basics of Xcode and what you need to change in a source code to reskin it",
        "Learn how to set up a Facebook app ID to allow social sharing",
        "Learn how to set up In App Purchases, ads, and analytics",
        "Learn how to submit your app to the App Store for review"
      ],
      "course_content": {
        "Welcome!": [
          "Introduction"
        ],
        "Steps for Brand New iOS Developer Accounts": [
          "Creating Certificates",
          "Adding Test Devices and Test Accounts"
        ],
        "Setting Up a New App": [
          "Prepare the App for Testing: App ID, iTunes Connect, and 2 Provisioning Profiles",
          "Testing the App"
        ],
        "Reskin It!": [
          "Change the Images",
          "Change the Theme and Content",
          "In-App Purchases",
          "Ads and Analytics"
        ],
        "Submit It!": [
          "Submitting an App to the App Store for Review"
        ]
      },
      "requirements": [
        "Mac with Xcode (free in the App Store)",
        "iOS Developer account ($99/year through Apple)",
        "iTunes Connect account (free)"
      ],
      "description": "Like this course, but can't afford it? Try our Bingo course for free.\nThis course will show you exactly what you need to do to reskin a specific source code in Xcode so that you can create your own iPhone, iPad, or iPod Touch app very quickly and inexpensively and start making money almost immediately. This is a super easy reskin of an iOS app source code that can make you money fast!\nYou will see every single edit necessary to launch an app, and in less than 2 hours. This includes the very first steps you take after you get your hands on a source code (learning how to test the app) to editing the app in Xcode, and all the way to submitting the app to the App Store for review. The tutorial uses a REAL source code example and completes every single step necessary to reskin the app from start to finish, and is structured in that way. While this uses a specific code (that you can purchase), the course is still very useful for reskinning any app. It will give you the knowledge necessary to understand documents that come with source codes that you can purchase at very low prices.\nThis is perfect for any beginner that is interested in entering the world of app development, but does not want to spend a ton of money or time creating an app from scratch and hiring developers. Instead, you can focus on monetization through in-app purchases and ad networks, which, by the way, is part of this course. You can literally reskin one source code 100 times using this tutorial to generate large profits incredibly quickly.\nCheck out the source code we use in this course.",
      "target_audience": [
        "Beginners interested in creating an iOS app",
        "\"Do It Yourself\"-types interested in low cost and fast app development",
        "No experience necessary"
      ]
    },
    {
      "title": "iOS Development Crash Course - Beginners to Publishing App",
      "url": "https://www.udemy.com/course/ios-development-crash-course/",
      "bio": "Create iOS Apps and Publish it to App Store. Quick and Easy way to learn Swift and Xcode in this 3 Hours Crash Course.",
      "objectives": [
        "Build any iOS app you can imagine",
        "Swift Programming - No past experience needed",
        "Work as freelance iOS Developer",
        "Learn about the procedure of uploading an app on the App Store",
        "Learn Everything you need to know about iOS App Development under 3 Hours",
        "Create Artwork for your apps including app icons and screenshots",
        "Create 2 amazing apps - Bill splitting app, and Quiz Game",
        "Start your own iOS app development business"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Getting Started"
        ],
        "Swift Programming Basics": [
          "How to use Variables, Conditions, Switch Cases And Operators",
          "Functions and Loops",
          "Learn how to use Timers and Delays in Swift",
          "Additional Swift Programming in Detail"
        ],
        "Xcode Basics": [
          "What are View Controllers and How to switch between View Controllers",
          "Objects in a View Controller - Labels, Text Fields, Buttons, Stack Views, etc."
        ],
        "Additional App Development": [
          "How to perform segues and Learn about Animations in Swift",
          "Save in-app user data using User Defaults"
        ],
        "Create your First App: Bill Splitting App": [
          "Develop a fully functional Bill Splitting App in under 30 minutes"
        ],
        "Second App: Quiz Game": [
          "Create a Quiz Game",
          "App Project Challenge"
        ],
        "App Icons, Screenshots and Publishing the App": [
          "App Icons and Screenshots for Quiz Game",
          "Publishing your App to the App Store"
        ]
      },
      "requirements": [
        "No Programming Experience needed - We'll start from Scratch",
        "You will need a Mac Computer or a PC running macOS",
        "No additional Paid Software or Experience needed, just grab a cup of coffee and enjoy learning iOS Development"
      ],
      "description": "Welcome to the iOS Development Crash Course where we aim to start learning about developing your first iPhone and iPad Application using Swift & Xcode from SCRATCH !!\nWant to create your own iPhone & iPad apps but aren't sure how to do so? You have come to the right place. You don't need any past programming experience and/or mobile app development experience to take this class. If you have a bit of programming background that's great, you'll catch up fast.\nFirst we start by download the required tools we need to get started creating awesome apps.\nThen will begin our journey by learning about Swift Programming language (From the basics of Swift 4 and Swift 5) and Xcode - Apple Developer Toolkit used for creating iOS, iPadOS, WatchOS and MacOS applications.\nAfter you have learned about Swift Programming and Xcode usage, we will dive into building and testing different features in an app which you can use in any of your apps.\nAnd then when you will be ready for creating your first iOS app, we will create our first fully functioning \"Bill Splitting App\", this app helps you to split restaurant bills with your friends.\nSecond App: The second app we will create will be \"Quiz Game\" where we will take JSON File which has data of quiz question and answers and we'll parse it and use it to create a simple quiz (MCQ) game.\nFinal Stage: I will teach you how you can create and add beautiful app icons to your app and take screenshots to use in your app page on the App store. Later on I will show you how to Publish your First App to the App Store.\nBy the end of this class, you will be well versed with:\nVariables, Conditions & Operators in Swift\nCreating Functions & Loops\nUsing Timers & Delays\nComponents of View Controllers (Buttons, Images, Textfields, etc)\nAnimations\nSaving & Retrieving Data\nThis course will help you develop your own apps for your iPhone running iOS 13\nTo get the most out of this class, code along with me or after completing the video code by yourself and run your code to know how it works. And do complete your App Project Challenge as it is the best practice to become a good developer. If you get stuck anywhere, don't worry you can search for the error online and I am sure you will find a solution. And I am always here to help you out.\nSo, what are you waiting for?\nGet Started Right Now and create Amazing apps that you can share with your Friends and Family.",
      "target_audience": [
        "Anyone want to learn iOS Development and Publish their first App to the App Store",
        "If you are complete beginner to Swift, then this course is for you.",
        "If you are shifting from Objective-C to Swift, this will becomes more fast track course for you."
      ]
    },
    {
      "title": "iOS 7 & Mac OS X Programming Tutorial - Objective C & Xcode",
      "url": "https://www.udemy.com/course/programming-for-ios-and-mac-os-x-in-objective-c-and-xcode/",
      "bio": "A Beginners Tutorial That Teaches Programming For Both IOS Devices And The Mac OS X Operating System.",
      "objectives": [
        "To Gain A Solid Understanding Of Programming For Both IOS And The Mac OS X",
        "To Teach The Skills Needed To Build Robust Code",
        "To Give The User A Understanding Of Working With Objective C, Xcode And The Apple Framework",
        "Any One Who Wishes To Learn How to Program For Apple Platform Or Mobile Devices"
      ],
      "course_content": {
        "01. Introduction :": [
          "Important - Download These First - Working Files",
          "0102: Welcome To Objective-C",
          "0103 Catching Up With Versions :"
        ],
        "02. Working With Xcode :": [
          "0201 Introducing The Workspace Window :",
          "0202 Exploring The Navigation Area :",
          "0203 Using The Utility Area - The Library :",
          "0204 Using The Utility Area - The Inspectors :",
          "0205 Editing Code - The Basics :",
          "0206 Editing Code - Advanced Features :",
          "0207 Finding And Searching :",
          "0208 Using The Jump Bar :",
          "0209 Working With The Assistant :",
          "0210 Tracking Changes With XCode :",
          "0211 Using A Git Repository :",
          "0212 Setting Preferences :"
        ],
        "03. Understanding Objective-C :": [
          "0301 The Objective-C Goal :",
          "0302 Exploring The Class Hierarchy :",
          "0303 Sending Messages :",
          "0304 Properties And Declarations :",
          "0305 Backing Variables For Properties :"
        ],
        "04. Looking At The Structure Of An Objective-C App - The Code Story :": [
          "0401 The Role Of Main - Main Is L/C :",
          "0402 How Main Works :",
          "0403 Exploring The Interface Of The Class :",
          "0404 Exploring The Implementation Of The Class :",
          "0405 Using @Class And #Import Directives :",
          "0406 Creating A Class :",
          "0407 Creating An Init For MyClass :",
          "0408 Creating The Class :",
          "0409 Using The Class :"
        ],
        "05. Using Declared Properties And Instance Variables :": [
          "0501 Using Declared Properties Today :",
          "0502 Using Instance Variables In The Past :",
          "0503 Synthesizing Properties Directly And Automatically :",
          "0504 Fine-Tuning Declared Properties - Setters And Getters :"
        ],
        "06. Managing Memory :": [
          "0601 Considering Qualifiers And Decorators :",
          "0602 Understanding The Need For Memory Management :",
          "0603 The Automatic Reference Counting Solution - ARC :"
        ],
        "07. Creating A Class :": [
          "0701 Letting XCode Do The Work :",
          "0702 Testing The App :",
          "0703 Building The iPhone Interface :",
          "0704 Building The iPad Interface :",
          "0705 Wiring Up The Interface:",
          "0706 Using Actions :",
          "0707 Declaring Methods Using Arguments :",
          "0708 Defining Methods :"
        ],
        "08. Working With The Collection Classes :": [
          "0801 Introducing Collection Classes:",
          "0802 Arrays, Dictionaries And Sets:",
          "0803 Mutable And Immutable Collections:",
          "0804 Using Objective-C Literals:",
          "0805 Creating An NSarray And NSdictionary:",
          "0806 Using Fast Enumeration:",
          "0807 Working With Sets And Property Lists:"
        ],
        "09. Using The Debugger :": [
          "0901 Breakpoints Overview:",
          "0902 Setting Breakpoints:",
          "0903 Exploring Values:",
          "0904 Editing Breakpoints:",
          "0905 Stepping Through Code:",
          "0906 Using NSlog:",
          "0907 Displaying Objective-C Objects:"
        ],
        "10. Using Protocols And Delegates :": [
          "1001 Dealing With The Multiple Inheritance Issue:",
          "1002 Looking At A Protocol:",
          "1003 Using A Protocol And Delegate:"
        ]
      },
      "requirements": [
        "An Apple Mac Computer And The Desire To Program"
      ],
      "description": "THIS COURSE IS NOW UPGRADED FOR iOS7\nLearn How To Program For Both IOS Mobile Devices And The Mac Operating System\nAimed Towards The Beginner, No Prior Experiance Required\nEasy To Follow Lessons That Allow You To Learn At Your OwnPace\nIn this Objective-C programming training course expert author will teach you how to leverage the technologies that Objective-C, Xcode and the Apple Frameworks have to offer. This course focuses on the Objective-C programming language, utilizing Xcode and Frameworks wherever necessary to build your App.\nYou start the tutorial with a review of the Xcode interface, and how you are going to use it to build your Objective-C project. Jesse teaches you what Objective-C is, and the structure of an Objective-C App. Throughout this video tutorial you will learn about using declared properties and instance variables, how to manage memory, creating and working with classes, and how to use the debugger effectively. You will explore protocols and delegates, using blocks, handling exceptions, using selectors and much more!\nOnce you have completed this computer based training course on Objective-C programming, you will understand how to write Objective-C code, how to utilize provided Apple Frameworks and how to use Xcode to build your App.",
      "target_audience": [
        "Programmers Of All Levels. Beginners Welcome"
      ]
    },
    {
      "title": "iOS 15 & Swift 5: Build a library with Swift Package Manager",
      "url": "https://www.udemy.com/course/ios-15-swift-5-build-a-library-with-swift-package-manager/",
      "bio": "Create a reusable library and publish to Github for developers around to world to use with Combine framework & SnapKit",
      "objectives": [
        "Build a library with Swift Package Manager",
        "Publish the library to Github for developers all around the world to use",
        "Build reusable modules that can work with multiple iOS projects",
        "Maintain the project with proper version control and a README file"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started": [
          "Setup project",
          "Push framework to Git"
        ],
        "Creating the skeleton": [
          "Setup public interface",
          "Add onboarding view controller",
          "Add framework dependency"
        ],
        "Core Project": [
          "Add subviews",
          "Setup button container view",
          "Setup transition view",
          "Setup timer",
          "Show next image",
          "Update title view",
          "Setup animated bar view subview",
          "Implement bar view animation",
          "Handle tap direction",
          "Handle button tap events",
          "Handle get started button"
        ],
        "Pushing to Git": [
          "Update readme.md",
          "Add video preview",
          "Update tag & create release"
        ],
        "Managing library improvements and releases": [
          "Improve library with theme font (New videos coming soon)",
          "Add 1.1.0 tag",
          "Update README"
        ],
        "Resources": [
          "Complete source code"
        ]
      },
      "requirements": [
        "2 years iOS development experience"
      ],
      "description": "Welcome to the iOS 15 & Swift 5: Build a library with Swift Package Manager course!\nThis course is designed for iOS developers with at least 2 years experience who want to learn to build a library with Swift Package Manager and host it on Github for other developers to consume. This course also helps developers who are working on big mono-repo projects in their own profession battling with slow compilation time and need to extract and modularise features to make them reusable across other projects.\nWe will build this library from scratch, step by step and finally publishing it remotely to Github with a proper documentation and version control.\n\n\nHere are some of the comments by my students\n\n\nWell, I can say this course is really creating an \"Awesome Onboarding\" for me. Great job.\n- Hery Yang\n\nThis is most excellent course. you are speaking clearly, and at a good pace, :-) many thanks for answering my question about git and producing a video to explain its use, very easy to follow and it was just what I needed so I am now able to manage my mistakes!\n- Jason Walkins\n\nIt's a easy course and good for students who would like to start with iOS like me :)\n- ਦੀਪ ਗਿੱਲ\n\nThis is a great course, The instructor is very knowledgeable. consider taking this course if you already have iOS experience. The instructor brings real world knowledge that benefit me a lot.\n- Shushan Mordi\n\nThis course is as good as it gets. Kelvin is an extremely professional and thorough tutor that is very quick at getting back to your queries. I would highly recommend this course!\n- Michael\n\nExcellent Content, I appreciate the different styles of onboarding screens and all the great explanation!\n- Carey M\n\nThe instructor is knowledgeable and clear with his instructions. The course is great and informative for those who are planning to build a skeleton they can build on their own app projects Instructor is also helpful\n- Raphael Lim",
      "target_audience": [
        "Professional developers who are working with huge code bases with the need to modularise feature",
        "Professional developers who are experiencing slow CI due to massive module compilation"
      ]
    },
    {
      "title": "Android LOLLIPOP - Android App Development with Lollipop",
      "url": "https://www.udemy.com/course/android-app-development-using-android-lollipop/",
      "bio": "Android App Development using Android version 5 which is Android Lollipop.",
      "objectives": [
        "Learn App development using lollipop, the core of this Android Lollipop Training",
        "Learn Webservices on Android OS similar to web services on another platform",
        "Learn How Facebook and Twitter apps work on the mobile OS",
        "Learn How various animations such as flip and slide are built on the lollipop"
      ],
      "course_content": {
        "Android Lollipop - Mobile Apps Development": [
          "Introduction to Android Lollipop",
          "Android Lollipop - Media",
          "Why Android 5.1 Released",
          "Android Custom Designs",
          "Creating New Layout",
          "Standard Toolbar",
          "Recycle View Widget",
          "Layout Manager",
          "View Holder",
          "Flexible Version of List View",
          "Drawer Model",
          "Add Recycle View",
          "Generate Constructor",
          "Slider Fragment Java",
          "Add String Array",
          "Slider Adapter",
          "Public Boolean Method",
          "Add Action Bar Toggle",
          "Add Layout Resources File",
          "Adding Slider Fragment",
          "Relative Layout",
          "Home Fragment",
          "Fragment Transaction",
          "Build Tool Version",
          "Adding Floating Button",
          "Snackbar",
          "Snackbar Continues",
          "Working on Main Activity Java",
          "Floating Action Button",
          "Adding Coordinator Layout",
          "Adding Float in Button",
          "Creating Fab Hide File",
          "Recycle Adapter Java",
          "Creating Fab Hide on Scroll in Java",
          "Creating Expand Method",
          "Creating Expand Method Continues",
          "Recycle View",
          "Conclusion"
        ]
      },
      "requirements": [
        "In this section, we provide the pre-requisite for this Android Lollipop Training so that the candidates can learn any additional material is required before starting with this course for a better and smoother experience during the course. These pre-requisites are as below: – Sound knowledge of Java is required before starting this Android Lollipop Training. If you are new to Java or never learned Java, it is advisable to first spend some time there and then come back. Expert level java is not required but you should know at least basics of the concepts like OOPs, data scoping, multi-threading programming, exception handling, collections, etc. A personal computer or a laptop needs a good internet connection. Any IDEs are fine. You can use something like NetBeans or Eclipse-based on your preference. You will require to download and install the Android SDK tool from the Android website."
      ],
      "description": "Android keeps on releasing newer versions that contain important upgrades on previous ones. The most important change in the Lollipop release was a completely redesigned user interface (UI). It was built around an innovative design language called Material Design. The material design concept was made to give users a paper-like feel to the UI. Apart from that, other changes were also incorporated such as improvements to the notifications bar and its style, which can now be accessed directly from the lock screen without requiring any password and displayed within applications as banners on top of the screen. Internal changes to the platform were also made and it was done using the Android Runtime (ART). Improved application performance was achieved, and it was intended to improve and optimize battery usage as well.\nLollipop’s successor is Marshmallow, which was released next year in October 2015\nMajor updates on Android 5.0 are listed below as a bullet point for easy understanding: –\nA refreshed notification system\nIndividual notifications now displayed on cards based on material design language,\nbatches of notifications can be grouped by individual apps\nNotifications are displayed on the lock screen as well as cards\nA do-not-disturb feature is added for notifications.\nThe recent apps menu was redesigned as a three-dimensional stack of cards shape to show open apps\nIndividual apps can now display multiple cards under a recent menu\nIn this course, we detail the various skills that candidates can learn from this Android Lollipop Training. This section will help students access the intended learning outcome of the course and hence help them decide if they should enroll for the course.\nAndroid Lollipop: – Update on all new features of the lollipop upgrade.\nMobile Apps Development: – App development using lollipop, the core of this Android Lollipop Training.\nAndroid Webservice: – Webservices on Android OS similar to web services on another platform.\nSocial Media Integration on Android: – How Facebook and Twitter apps work on the mobile OS\nAndroid Animations: – How various animations such as flip and slide are built on the lollipop.\nData Storage Management: – How data is stored and retried with lollipop architecture on the Android platform.\nAndroid Custom Designs: – Custom designs such as notification and open apps’ views are covered.\nCreating a New Layout: – Layout changes been done based on a material language framework.\nStandard Toolbar: – Many toolbar functions are provided for easier app development\nRecycle View Widget: – Many new widgets are provided for better usability and design.\nLayout Manager: – Layout manager is provided for multifunctionality on the device.\nView Holder: – View holders are unique concepts to lollipop design\nDrawer Model: – provided for better performance and UI\nGenerate Constructor: – Constructor is vital to lollipop OS",
      "target_audience": [
        "In this section, we list out suitable candidates for this course. This shall give a clear idea if this Android Lollipop Training is suitable for you or not. Anyone interested in Android App development: This is a very generic actually. If you are passionate about building android apps, you are welcome to learn. Beginners in the field of Android App development: Those people who are already in this field but want to upskill themselves and learn new things that were released with the lollipop. Students who want to build a career as Android App developer: College graduates who have studied computer science or related subjects and want to build a career in android app development. Freelancers interested in the Android lollipop training course and create their App: The course is suitable for self-learners and go-getters as well. They can learn and build on the go simultaneously. iOS developer interested in developing an App in Android: Those who are planning to move from iOS or want to learn Android and iOS both."
      ]
    },
    {
      "title": "Building a Card Game in Flutter & Dart",
      "url": "https://www.udemy.com/course/flutter-card-game/",
      "bio": "An intermediate course for aspiring Flutter developers",
      "objectives": [
        "Learn intermediate skills and practices in building apps with Flutter",
        "Interface with an external API",
        "Handle UI state with Provider and Consumers",
        "Gain practice in working with class inheritance",
        "Write AI logic for bot players"
      ],
      "course_content": {
        "Introduction": [
          "Setting up the Foundation"
        ],
        "Game Provider": [
          "Managing the Game's State"
        ],
        "Wrap Up": [
          "Full Review",
          "Another Game?"
        ],
        "Crazy Eights": [
          "Inheriting our Core Game Provider",
          "Implementing Game Logic / Rules",
          "Implementing Game Logic / Rules Continued"
        ]
      },
      "requirements": [
        "A very basic understanding of Dart & Flutter is recommended. This isn't an intro to Flutter course and we'll be digging right into it!",
        "Although the development was done on a mac, there should be no issues following along on Windows or Linux if that's your prefered environment."
      ],
      "description": "This course will give you a lot of foundational knowledge that is applicable to virtually any type of application, with a playful twist!\nWe will be solving common problems that come with building real-world applications including working with an external API using http and UI state management using the Provider package.\nWe'll also have some fun coding some AI for our bot players and making use of inheritance in order to support different games that run off of the same core engine. The principals and patterns followed in this course are applicable to other apps you may want to build – certainly not just games.\nLearn about:\nInterfacing with an API\nParsing JSON\nModel Factories\nState Management with Provider\nNull Safety\nClass Inheritance\nVS Code refactoring & tips\nAI bot coding\n\n\nDependencies:\nprovider\nhttp\nvalidators\ncached_network_image\nThe final code is available on Github so if you get stuck, you'll be able to catch up There are a lot of tips and tricks that are sprinkled throughout which will help you become a better developer as you learn about them and build the habits. Once completed, you will be able to build more types of card games on top of the framework we create so let your imagination run wild and have fun taking your programming skills to the next level.\nI hope you enjoy taking this course as much as I enjoyed putting it together.",
      "target_audience": [
        "Developers who have a basic understanding of Flutter who are looking to build real world applications."
      ]
    },
    {
      "title": "Easy iOS Swift Game: Memory Puzzle",
      "url": "https://www.udemy.com/course/easy-ios-swift-game-memroy-puzzle/",
      "bio": "Developing an iOS Memory Puzzle Game with Swift",
      "objectives": [
        "XCode interface builder",
        "iOS programming with Swift",
        "Video game logic design and implementation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "New app",
          "Interface Outlets",
          "Auto Layout"
        ],
        "The Tiles": [
          "Beginning TileG Grid",
          "Finishing the tiles",
          "Label Subclass",
          "Store Tile Grid"
        ],
        "game Helpers": [
          "Randomizing the Tiles",
          "Timer",
          "Paritioning the Code",
          "Reset Action"
        ],
        "Interactions": [
          "Touch Ended Event",
          "UI Tap Gesture Recognizer Assignment",
          "Flipping a Tile"
        ],
        "Game Logic": [
          "Comparing Tiles",
          "Flip back or forth",
          "Game Won",
          "Issue of State and Reset",
          "Game Mode"
        ],
        "Advanced Topics": [
          "Images",
          "Advanced Stuff"
        ]
      },
      "requirements": [
        "Basic understanding of programming terms",
        "Computer literacy",
        "Access to a Mac computer"
      ],
      "description": "In this course, we will explore the development of a basic game with XCode and through Swift programming language. Throughout the course, we will learn the basics of developing interfaces in XCode and also the basics of coding with Swift.\nWe will also explore some concepts of making a video game the logic behind the various features of the game.\nThis course is particularly useful if you are new to Swift and iOS programming in general, if you are an iOS programmer in Objective-C or if you wish to jumpstart your iOS programming.\nA unique feature of this course is that it gets results fast and helps you develop a functioning game within one afternoon.\nAlong with the course, you will receive all assets, my own project and all the necessary pieces of code.\nBy the end of this course, you should be able to develop a variety of simple 2D games, puzzles within XCode and Swift.",
      "target_audience": [
        "Coding enthusiasts",
        "iOS developer",
        "Anyone who wants to learn to make basic video games"
      ]
    },
    {
      "title": "NativeScript with Angular code sharing",
      "url": "https://www.udemy.com/course/nativescript-angular-code-sharing/",
      "bio": "One project that will build mobile apps on Android and iOS and web Angular app",
      "objectives": [
        "Will be able to create one codesharing project for all platforms",
        "Will be able to make a cross platform mobile app",
        "Will be able to create web app with Angular"
      ],
      "course_content": {
        "Introduction": [
          "Installation",
          "Angular App",
          "Nativescript App",
          "Using Tools to create apps",
          "Code Sharing App",
          "Preview Code Share on mobile",
          "Exercise files",
          "Included API"
        ],
        "Dynamic Data": [
          "Custom content",
          "Get Dynamic Data",
          "Create Component and routes",
          "Get Detailed Data",
          "Mobile dynamic data",
          "Solving problem web vs mobile import"
        ],
        "Working with content": [
          "Adding Images",
          "Images on mobile",
          "Styling overview",
          "Applying Styles",
          "Mobile theme",
          "Mobile styles",
          "Enable Navigation",
          "Solving navigation for web",
          "Web different Layout",
          "Bunus"
        ]
      },
      "requirements": [
        "Basic knowledge od Javascript, HTML and CSS",
        "Computer with Internet"
      ],
      "description": "This tutorial focus on the code sharing between mobile NativeScript and and Angular web app. I will show how we can have one single repository to handle the both projects and code sharing maximum code in-between the project.\nWe will start from scratch with a blank new project. I will start showing how to create Angular app and NativeScript separately and we will go through the content for each of them. Then we will create our code-sharing application. We will create classic master-detail view.  List of items with images will be displayed and you can click on the item to load new page with more detailed information in. We will do styling the component and I show you how to communicate to external API with http requests. (I also provide that API for you). We will finish with having 3 working applications on different platforms (web, iOS and Android).\nAll that will be done using one source code and share maximum code between web app and mobile app using Angular and NativeScript.",
      "target_audience": [
        "People who would like to know hot to create one project code sharing for both web app and mobile app",
        "People who would like to know how to build NativeScript apps on Android and iOS",
        "People who would like to know how to build Angular web app"
      ]
    },
    {
      "title": "Rebeloper Messages - the Ultimate iMessage App Template",
      "url": "https://www.udemy.com/course/rebeloper-messages-the-ultimate-imessage-app-template/",
      "bio": "with In-App Purchases - Swift 5.1, iOS 12, Xcode 10 ready",
      "objectives": [
        "Set up and submit an iMessage App to the App Store for iMessage apps with In-App Purchases.",
        "Learn the basics of the iTunes Connect Developer Portal"
      ],
      "course_content": {
        "Rebeloper Messages 13": [
          "Video Documentation for version 13.0.0+",
          "Download the Source code"
        ],
        "Rebeloper Messages for iOS12, Swift 4.2 and Xcode10": [
          "Download the Source Code",
          "Rebeloper Messages Walkthrough",
          "Assets and Setup in RebeloperMessages Rebeloper",
          "Creating In-app Purchase IDs in App Store Connect",
          "Setting Up Rebeloper Messages Rebeloper"
        ],
        "Introducing \"Rebeloper Messages X\" - a Swift4, iOS 11 Update": [
          "Rebeloper Messages X Promo Video",
          "Setup Rebeloper Messages X",
          "Walktrough of Rebeloper Messages X",
          "Rebeloper Messages X download"
        ],
        "Introduction": [
          "Promo Video",
          "Overview of the Course",
          "Example iMessage app: Black Cats Messages on the App Store",
          "First Steps"
        ],
        "Meet Rebeloper Messages": [
          "Download, Install Xcode & more",
          "Rebeloper Messages 2 download",
          "Rebeloper Messages 3 download",
          "Overview of the Template Xcode Project",
          "First Run of the Rebeloper Messages",
          "What's new in Rebeloper Messages 3",
          "Stickers, App Icons and other Images",
          "Create and Add your In-App Purchase ID",
          "Upload your build to iTunes Connect",
          "Setting everything up in iTunes Connect",
          "Submit your app to the App store",
          "Black Cats Messages on the App Store"
        ],
        "Bonus": [
          "Conclusion",
          "Student Apps Showcase",
          "How to create a Test User - Apple Documentation",
          "Strange bug and solution. App Crashes on first launch"
        ]
      },
      "requirements": [
        "You should have a Mac."
      ],
      "description": "The ONLY course with an iMessages App Template with In App Purchases!\n13.0.0 - (05.08.2019)\n• Brand new project rewritten from the ground up in Swift 5.1 for GIF support\nWorks on iOS 12, Xcode 10, Swift 5.1 (you can get the older versions too detailed below)\nUpdate: Rebeloper Messages 12 is here with a brand new Swift 4.2 project and awesome new features:\neverything included in Rebeloper Messages X +\nwritten from scratch in Swift 4.2\niOS 12 ready\nworks in Xcode 10\nnow has a Parent app\nUpdate: Rebeloper Messages X is here with a brand new Swift 4 project and awesome new features:\nnew videos: What's new in Rebeloper Messages X\nwritten from scratch in Swift 4\niOS 11 ready\nworks in Xcode 9 or later\nunlimited stickers\n\nunlimited categories\n\nunlimited in-app purchases (auto-renewable subscriptions, non-consumables)\nchoose sticker count in a row\nlet users download your iMessage app for free - this is how you will get tons of downloads\nfree stickers / locked stickers\ncustom Background\ncustom theme color\nsupports simple stickers (png, jpg)\nput Locked stickers anywhere in your category (at the beginning, at the end, mixed)\nthe whole app supports Accessibility Voice\nfrequently used stickers section\nlocked stickers cannot be sent; instead an alert pops up asking for in-app purchase\nunique categories menu\nsetup takes only 15 minutes due to newly added Plist files\nsupports all Apple mobile devices including iPad Pro, iPhone 8, iPhone 8 Plus and iPhone X\nmuch more...\nDon't want to update to Swift 4 / iOS11 / Xcode 9? We have got your back. You can still have access to Rebeloper Messages 3 that works gorgeously with Swift 3/ iOS10 / Xcode 8! Just take a look at the features the lates version 3.0.5 has to offer.\nUpdate: Rebeloper Messages 3 is here with brand new features:\nnew video: What’s new in Rebeloper Messages 3\n3 categories\n3 auto-renewable subscriptions\n3 non-consumable in-app purchases\nthe ability to choose sticker sizes\nmuch more\nUPDATE: Now Supports Auto-Renewable Subscriptions and Gifs (Gifs are no longer supported in v.10.0.0+)!\nThe iMessage App Store Gold Rush has just begun! Be among the firsts who make a huge profit!\n\nRebeloper Messages brings Free to Play to the iMessage App Store.\nNow you can let users download your app for free, let them try out some of your stickers and than pay for extra Stickers with In-app Purchases.\nYou will get your hands on the Rebeloper Messages source code and hands on video tutorials how to put your own reskin of it on the App Store.\n\n\nHow to Set up and Reskin\nTo better understand how to create your very own version of Rebeloper Messages I'll be showing you how to do it step by step creating a brand new iMessage app called Black Cats Messages. Search for it on the App Store and try it out!\nSetting this source code up takes less than 5 minutes! It only takes 3 steps:\nAdd your Free Stickers and app theme images\nAdd your In-App Purchase IDs\nPublish on the App Store\nAnd if you need guidance than you’re in good company. You will get access to 2+ hours of hands on video documentation. A step by step video walk trough of everything you need to know from downloading Xcode to Submitting your app to the App Store!\nWhen you purchase a Rebeloper Source Code you purchase more than just a source code. You purchase the awesome documentation and constant support.\nAct now and catch the iMessage App Store Gold Rush! Be the first who unlocks the massive potential of Free to Play! Leverage the power of In-app Purchases.\nEnrich your app portfolio with this delightful, fun and money maker iMessage app Template! Buy now!\nGot a question? Ask it in the comments section. I answer each and every question in less than 24 hours, but mostly within 3 hours (if we're not asleep). Customer happiness is our #1 priority.\n\nChange Log\n12.0.6 - (02.06.2019)\n• Updated KeychainSwift and BulletinBoard\n• Added even more explanation on how to reset keychain in ResetKeychain.swift\n\n\n12.0.5 - (20.03.2019)\n• Fixed keychain issues that prevented to unlock bought stickers in the Extension app\n• Made reseting keychain easier\n\n\nfiles changed: Setup.swift, RebeloperStoreExtensions.swift, StickerCell.swift, RebeloperStoreSetup.swift\nfiles added: ResetKeychain.swift\n\n\n12.0.4 - (18.02.2019)\n• Fixed background issue in Extension app\n\n\nfiles changed in extension app: CollectionViewController.swift\n\n\n12.0.3 - (24.01.2019)\n• Fixed iPad crash when presenting an UIAlertAction\n\n\nfiles changed in main app: RebeloperStoreService.swift\n\n\n12.0.2 - (21.01.2019)\n• Added option to use only Auto-Renewable subscriptions\n• Added example Setup of auto-renewable subscriptions\n\n\nfiles changed in main app: Setup.swift, RebeloperStore.swift, ShopViewController.swift, CategroyViewCell.swift, StickerViewCell.swift\n\n\n12.0.1 - (21.01.2019)\n• Fixed crash (index out of range) when app has only one non-consumable purchase and we tapped on last category\n• Cleaned up code\n• Added example Setup of one category\n• Made category bar disappear when there is only one category and app behaves as sticker back\n• Added option to set category cell size\n• Added option to set sticker cell size\n\n\nfiles changed in main app: Setup.swift, MainViewController.swift, ShopViewController.swift, CategroyViewController.swift, StickersViewController.swift, StickerViewCell\nfiles changed in extension: MessagesViewController.swift, StickersViewController.swift, StickerCell.swift, CategroriesViewController.swift, Category Cell.swift\n\n\n12.0.0 - (16.12.2018)\n• Brand new project rewritten from the ground up in Swift 4.2\n10.3.0 - (13.07.2018)\n• Fixed Restore Purchases not working (files changed: StickersCollectionViewController.swift, MainTabBarController.swift, SwiftyStoreKit folder)\n10.2.3 - (02.07.2018)\n• Fixed support for “Only One Category” version of the app. All you need to do is have only one category set up in the CategoriesData.swift file: Item 0 (files changed: StickersCollectionViewController.swift)\n10.2.2 - (19.01.2018)\n• Added support for “Only One Category” version of the app. All you need to do is have only one category set up in the CategoriesData.swift file: Item 0 (files changed: MainTabBarController.swift)\n10.2.1 - (18.10.2017)\n• Added support for Trial versions in Auto-renewable subscriptions (files changed: MainTabBarController.swift, SubscriptionsData.plist)\n10.2.0 - (15.10.2017)\n• Fixed scrolling all stickers out of view in some cases when in compact mode (files changed: MessagesViewController.swift)\n• Added cool alert controller (files changed: MessagesViewController.swift, MainTabBarController.swift, StickersCollectionViewController.swift, Setup.swift; folder added: JHTAlertController)\n10.1.2 - (13.10.2017)\n• Fixed number of stickers issue on iPad orientation change (files changed: MessagesViewController.swift, MainTabBarController.swift, StickersCollectionViewController.swift)\n• Made app compliant to Appstore Review Guideline “3.1.2 - Business - Payments - Subscriptions” to fully meet the terms and conditions for auto-renewing subscriptions, as specified in Schedule 2, section 3.8(b) of the Paid Applications agreement. (files changed: SubscriptionsData.plist, StickersCollectionViewController.swift, MainTabBarController.swift)\n10.1.1 - (10.10.2017)\n• Added ability to set the number of stickers to be different on an iPhone and on an iPad. This way you will not get those gigantic stickers on an iPad or too small ones on an iPhone. (files changed: StickersCollectionViewController.swift, Setup.swift)\n10.1.0 - (07.10.2017)\n• Added option to make app totally free (without any Locked Stickers). Just set “AppUsesInAppPurchases” to “false” in Setup.swift, remove all IAP IDs from the CategoriesData.plist file and set all Stickers to be unlocked (files changed: StickersCollectionViewController.swift, Setup.swift)\n• Added option to make the app behave as a sticker pack (file changed: StickersCollectionViewController.swift, Setup.swift, MainTabBarController.swift, StickerCell.swift, StickerCategory.swift; file added: AssetExtractor.swift, CustomMSSticker.swift) NOTE: if you select the Sticker Pack Mode than the ‘Frequently Used Stickers’ menu item will automatically be disabled because of the limitations of the native MSStickerView.\n• Cleaned up comments and code\n10.0.4 - (06.10.2017)\n• Fixed issue of hiding the app and showing the keyboard on every sticker tap (file changed: MessagesViewController.swift, lines 111, 112, 265-269)\n10.0.3 - (04.10.2017)\n• Fixed bug when an auto-renewable was bought but upon tapping on sticker it still asked to purchase with non-consumable (file changed: StickersCollectionViewController.swift, line 348)\n10.0.2 - (03.10.2017)\nRemoved unnecessary images\nMoved 1024x1024 icon into the AppIcon assets folder\n10.0.1 - (01.10.2017)\n• Added new circular Categories Menu\n10.0.0 - (28.09.2017)\n• Updated code to Swift4 / Xcode9 / iOS11 / iPhone8 / iPhone8 Plus / iPhone X. This is a brand new project! You will need to start from scratch\n3.0.5 - (13.09.2017)\nIf you have only one IAP than the Purchase All button should not be present in the shop (files changed: MessagesViewController.swift, Settings.swift)\n3.0.3 - (30.08.2017)\nFixed Locked Stickers remaining at the top when unlocked in case they are presented at the top at the first time (files changed: StickerBrowserViewController.swift)\nAdded Selected Sate for the Category Buttons (files changed: MessagesViewController.swift; files added: ButtonCategory1Selected.png, ButtonCategory2Selected.png, ButtonCategory3Selected.png)\nChanged design for images ButtonBuy1.png, ButtonBuy2.png, ButtonBuy3.png to better inform the user\n3.0.2 - (26.08.2017)\nNew Feature: Added ability to chose to put the Locked Stickers at the top of the stickers list (files changed: StickerBrowserViewController.swift, Settings.swift)\n3.0.1 - (26.07.2017)\nFixed  and improved support for removing the Shop or the Subscribe buttons/functionality (files changed: MessagesViewController.swift, MainInterface.storyboard)\nFixed bug of Categories button not working after leaving and coming back to the app (files changed: StickerBrowserViewController.swift)\n3.0.0 - (10.07.2017) - This is a BRAND NEW PROJECT; you’ll need to start a new project to update your pre 3.0.0 version apps\nAdded option to choose sticker sizes\nSilenced a few Warnings\nUpdated project to recommended settings\nResized ButtonPurchaseAll.png, ButtonRestore.png and HeaderBackground.png\nAdded new images for update\nRemoved Store.swift\nAdded new stickers to accommodate Categories\nChanged Setting.swift and MKStoreKitConfigs.plist to accommodate new in-app purchases\n2.0.1 - (21.02.2017)\nAdded support for gif Stickers (files changed: StickerBrowserViewController.swift - line 53, Settings.swift - line 27)\nAdded more robust explanation for how to set up Auto-Renewable Subscriptions (files changed: Settings.swift - line 16)\n2.0.0 - (18.02.2016)\nSupports Auto-renewable subscriptions (this is a brand new project; start with a fresh download)\n1.0.1 - (20.12.2016)\nAdded Progress Hud (files added: JGProgressHUD folder; RebeloperMessages-Bridging-Header.h; files changed: MessagesViewController.swift, Store.swift)\n1.0.0 - (10.11.2016)\nInitial Release",
      "target_audience": [
        "This course is for anyone who wants to launch an iMessage App with In-App Purchases on the App Store for iMessages."
      ]
    },
    {
      "title": "Android Job Interview Preparation",
      "url": "https://www.udemy.com/course/android-job-interview/",
      "bio": "Master Android Job Interviews - Android Coding Interview, Android Behavior Interview, Android System Design Interview",
      "objectives": [
        "Master key concepts in Android Job Interview preparation, including UI design, development, testing, and security",
        "Understand best practices and common interview questions related to Android development.",
        "Develop practical skills through mock interviews and real-world scenarios.",
        "Build confidence and gain the knowledge necessary to succeed in any Android job interview."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Behaviour": [
          "Importance of body language",
          "Dress for success",
          "Navigating difficult interview questions with ease",
          "The power of positive thinking",
          "Demonstrating confidence and enthusiasm",
          "Handling nerves and anxiety",
          "The Do's and Don't's of interview etiquette",
          "How to make great first impression",
          "Effective communication skills",
          "Closing the interview",
          "Mastering Professional Behavior: Android Interview Quiz"
        ],
        "Core Android": [
          "Basics",
          "Activity and Fragment",
          "Views and Viewgroups",
          "Displaying lists of content",
          "Dialogs and Toasts",
          "Intents and Broadcasting",
          "Services",
          "Saving data",
          "Look and feel",
          "Supporting different screen sizes",
          "Permissions",
          "Android Jetpack",
          "Core Android Basics Quiz"
        ],
        "Android Libraries": [
          "Room",
          "Retrofit",
          "Dagger Hilt",
          "Android Libraries Quiz"
        ],
        "Android Architecture": [
          "MVVM",
          "MVI",
          "MVC",
          "MVVM vs MVI vs MVC",
          "Android Architectures Quiz- MVVM, MVI, MVC"
        ],
        "Android Design Problems": [
          "How to tackle system design problems",
          "Design a Uber App",
          "Design a Messaging App",
          "Design YouTube",
          "Preparing for system design interviews"
        ],
        "Testing": [
          "Introduction to testing in Android",
          "Test automation frameworks",
          "Security and usability testing",
          "Debugging and troubleshooting",
          "Android Testing Quiz"
        ],
        "Android Tools": [
          "Android debugging and profiling",
          "Build tools and Continuous integration",
          "Android emulators and device testing",
          "Common interview questions"
        ],
        "Language Specific Problems - Java / Kotlin": [
          "Object Oriented Programming - OOP",
          "Kotlin features",
          "Kotlin Coroutines"
        ],
        "Jetpack Compose": [
          "What is Jetpack Compose?",
          "Jetpack Compose common questions, part 1",
          "Jetpack Compose common questions, part 2"
        ]
      },
      "requirements": [
        "Basic understanding of Android development concepts and programming languages such as Java or Kotlin is recommended",
        "No prior experience required, suitable for learners of all levels",
        "Computer or laptop with internet connection required",
        "Access to Android Studio or another Android development environment required"
      ],
      "description": "The Android Job Interview Prep course is designed to help you master the essential concepts and skills needed to succeed in an Android job interview. Whether you are a beginner or an experienced developer, this course will provide you with the knowledge and confidence you need to stand out from other candidates.\nThrough a series of lessons and exercises, you will learn about the key concepts and best practices in Android development, covering areas such as UI design, development, testing, and security. You will also have the opportunity to practice your skills through mock interviews and real-world scenarios.\nOur experienced instructors will guide you through every step of the process, providing you with the support and guidance you need to succeed. By the end of this course, you will be well-prepared to tackle any Android job interview with confidence and ease.\nWhat will the course cover:\nBehavior during the interview\nCore Android\nAndroid Libraries\nAndroid Architecture\nAndroid Design Problems\nTesting\nAndroid Tools\nLanguage-specific Questions\nJetpack Compose\nData Structures and Algorithms\nOther questions\nAt the end of the course, you will receive a certificate!\nCourse requirements:\n•   Have knowledge of Android development\n•   You need a computer, either a PC (Windows, Linux) or a Mac, with an internet connection\nAbout the instructor:\nI am an Android developer with 5 years of experience. I have successful apps in Google Play (150k+ downloads). I am willing to help and guide anybody who wants to learn how to become a great Android developer!\nWhether you're looking to advance your career or land your first Android development job, the Android Job Interview Prep course is an essential resource for anyone looking to succeed in the highly competitive world of Android development. Don't let your lack of interview preparation hold you back from your dream job in Android development.\nEnroll now and take the first step toward achieving your career goals!\nClick the BUY NOW button and start learning. The industry is waiting for you!",
      "target_audience": [
        "Android developers seeking to improve their interview skills and land their dream job",
        "Students or recent graduates preparing to enter the field of Android development",
        "Anyone looking to gain a comprehensive understanding of key concepts and best practices in Android development",
        "Learners who want to develop practical skills and confidence to succeed in any Android job interview"
      ]
    },
    {
      "title": "iOS Firebase Masterclass - Real time Database and Firestore",
      "url": "https://www.udemy.com/course/ios-firebase-masterclass/",
      "bio": "Learn Authentication, Cloud Functions, Crashytics, Ads, a Multiplayer game, Push notifications and more.",
      "objectives": [
        "Learn how to fluidly integrate an authentication workflow, to sign in and manage new users.",
        "Create applications that leverage a backend database using the Real-time Database or Firestore solution.",
        "Create an application that can upload and download image data using photo library or camera picture data.",
        "Create cloud functions that offload work to the firebase server, so your client apps don't have to work as hard.",
        "Integrate Crashlytics into your applications, so you can manage crash reports of your application after you have deployed the app on the Apple app store.",
        "Create an app that updates users via push notifications if our backend database updates; yet another use case for cloud functions.",
        "Learn how to use Dynamic Links to send out user invites so you can grow your app and brand.",
        "Learn how to create and manage the lifecycle of your ads using Google Admob to help grow your app and brand.",
        "Learn how to collect and filter analytical data so that you can better understand how users are using your app.",
        "Learn how to create applications that uses multiple firebase features simultaneously to create robust and useful applications",
        "Learn how to convert a single player Tic Tac Toe game into a multiplayer game. Uses Authentication, Firestore Database, and Dynamic links."
      ],
      "course_content": {
        "Getting Started With Firebase": [
          "Introduction To Class",
          "Integrate Firebase Into IOS App"
        ],
        "Authentication": [
          "Integrate Google Sign In Into IOS App",
          "Enable Google Sign In",
          "Implement GIDSignInDelegate Protocol",
          "Implement GIDSignInUIDelegate Protocol",
          "Implement Sign Out And Troubleshooting",
          "Integrate Facebook Sign In Into IOS App",
          "Facebook Developers Account",
          "Facebook Implementation And Configuration",
          "Integrate Twitter Sign In Into IOS AppIntegrate Twitter Sign In Into IOS App",
          "Twitter Developer Account",
          "Twitter AppDelegate Implementation",
          "Twitter ViewController Implementation",
          "Twitter Sign Out",
          "Integrate Passwordless Email Sign In",
          "Enable Passwordless Email Sign In",
          "Email Action Code Settings",
          "Capture User Email Address",
          "Dynamic Link Domain Setup",
          "Send Email Link To Inbox",
          "Authenticate With Dynamic Link",
          "Email With Password UI Setup",
          "User/Sign In/Password Reset",
          "Phone Authorization Setup",
          "Build Sign In Phone Button",
          "Phone Authorization",
          "ToDoList Auth Challenge",
          "ToDoList Auth Solution"
        ],
        "Databases": [
          "Introduction To Realtime Database",
          "Structured Data",
          "Sign In And UI Challenge",
          "Sign In And UI Solution",
          "Database-Create-Operation",
          "Database Read Operation",
          "Database Update Operation",
          "Database Delete Operation",
          "ToDoList Database Challenge",
          "ToDoList Database Solution"
        ],
        "Firestore": [
          "Introduction To Firestore",
          "Sign In And UI Challenge",
          "Sign In And UI Solution",
          "Databases Vs Firestore",
          "Firestore Create Operation",
          "Firestore Structured Data",
          "Firestore Read Operation",
          "Firestore Update Operation",
          "Firestore Delete Operation",
          "Order And Limits",
          "ToDoList Firestore Challenge",
          "ToDoList Firestore Solution"
        ],
        "Storage": [
          "Introduction To Storage",
          "Google Sign In IOS 13",
          "Upload Image",
          "Download Image",
          "Image Capture Challenge",
          "Image Capture Solution"
        ],
        "Cloud Functions": [
          "Firebase Tools Install",
          "Cloud Function Upload",
          "Call Function From Client",
          "Inventory Management Challenge",
          "Inventory Management Solution"
        ],
        "Crashlytics": [
          "Crashlytics Introduction",
          "Crashing Our App",
          "Upload Debug Symbols",
          "Buggy App Challenge",
          "Buggy App Solution"
        ],
        "Push Notifications": [
          "Push Notifications Introduction",
          "Apple Developer Account Settings",
          "Push Notifications Implementation",
          "Push Notifications Challenge",
          "Push Notifications Solution"
        ],
        "Dynamic Links": [
          "Dynamic Links Introduction",
          "Dynamic Links Domain Setup",
          "Create A Dynamic Link",
          "Receive A Dynamic Link",
          "Send A Dynamic Link"
        ],
        "Google AdMob": [
          "AdMob Introduction",
          "Implement Banner Ad",
          "Implement Interstitial Ad"
        ]
      },
      "requirements": [
        "A Mac computer (preferably with latest OS)",
        "Xcode 10.1 or later (Xcode comes with Mac, update it if necessary, through Apple app store)",
        "CocoaPods 1.4.0 or later (how to install and setup is shown in this course)",
        "iOS platform and Swift Language background is preferred",
        "iOS physical device, for push notifications section",
        "Paid Apple developer account, for push notifications section"
      ],
      "description": "What you will learn in this course?\nThe course is designed to give a comprehensive overview of the Firebase Framework and will teach you how to integrate multiple firebase features together to create robust applications.\n\nYou will learn how to  \"put it all together\" as opposed to learning isolated topics alone. Many topics in the course are revisited in subsequent sections of the course to reinforce ideas previously discussed.  You will find new use cases and create applications with multiple firebase features as you progress through the course.\nWhat are the major topics covered?\nFirebase, iOS, and Swift.\nBut more specifically, the course covers...\nIntegrating an authentication workflow, to sign in and manage new users.\nCreating applications that leverage a backend database using the Real-time Database or Firestore solution.\nHow to make your app upload and download image data using the photo library or the camera picture data.\nCreate cloud functions that offload work to the firebase server, so your client apps don't have to work as hard.\nIntegrating Crashlytics into your applications, so you can manage crash reports of your application after you have deployed the app on the Apple app store.\nHow to create an app that updates users via push notifications if our backend database updates; yet another use case for cloud functions.\nHow to use Dynamic Links to send out user invites so you can grow your app and brand.\nHow to create and manage the lifecycle of your ads using Google Admob to help grow your app and brand.\nHow to collect and filter analytical data so that you can better understand how users are using your app.\nHow to create applications that use multiple firebase features simultaneously to create robust and useful applications\nHow to convert a single-player Tic Tac Toe game into a multiplayer game. Uses Authentication, Firestore Database, and Dynamic links.\nWho is the course aimed at?\n\nThis is not a beginner's course.\n\nIt's assumed you have some Swift and iOS development experience or have been through some training so that you understand the basics of iOS development.\nIf you are an iOS development looking to become skilled in Firebase and/or to take your iOS application skills up a notch then this is the course for you.\nPre-requisites.\niOS development generally requires a Mac computer - you need to have a working Mac OS installation with Xcode 10.1 or later.  Some sections of the course require a physical iOS device (for example push notifications).\nGetting started\nIf you are ready to get started, click on the enroll or Add to Cart button on this page and start taking your Firebase skills with iOS to the next level.",
      "target_audience": [
        "iOS developers looking to become skilled in Firebase",
        "iOS developers who want to take their iOS application skills up a notch!"
      ]
    },
    {
      "title": "Android Studio Productivity Masterclass",
      "url": "https://www.udemy.com/course/android-studio-course/",
      "bio": "Master Android Studio: Boost Productivity, Debug Smarter, and Build Better Apps",
      "objectives": [
        "Configure Android Studio to your personal taste",
        "Use keyboard shortcuts to do more in less time",
        "Discover the amazing world of Android Studio actions",
        "Install and use powerful Android Studio plugins",
        "Leverage advanced tools like Layout Inspector, Network Inspector, Conditional Breakpoints and more"
      ],
      "course_content": {
        "Android Studio: Basic Level": [
          "Module Introduction",
          "Adjusting the Size of Android Studio Layout",
          "Changing Font Size with Mouse Wheel",
          "Disabling Run Window Popup when Launching Apps",
          "Search Everywhere",
          "Find Action and Find File Shortcuts",
          "Find Usages History in Tabs",
          "Clearing Logcat Automatically when Launching Apps",
          "ADB Idea Plugin",
          "Opening Recently Viewed Files",
          "Jumping to Recently Visited Places in Code",
          "Inlay Hints",
          "Starting New Line Before and After the Current Line",
          "Adding Shortcuts for Logcat and Running Devices",
          "Cut (Delete) an Entire Line",
          "Paste From History",
          "Moving Lines and Statements Up and Down",
          "Modifying the Colors and Font Styles Applied to the Source Code",
          "Module Summary"
        ],
        "Android Studio: Advanced Level": [
          "Module Introduction",
          "Executing Custom Gradle Tasks",
          "Network Inspector",
          "Kotlin Fill Class Plugin",
          "Conditional Breakpoints",
          "Layout Inspector and Subtree Visibility Controls",
          "Git Integration Tips",
          "Database Inspector",
          "Background Task Inspector"
        ]
      },
      "requirements": [
        "Basic experience with Android development"
      ],
      "description": "Unlock the full potential of Android Studio with this comprehensive course designed for developers at all skill levels. Whether you're just starting your Android development journey or looking to refine your workflow, this course will guide you through the essential and advanced features of Android Studio, the most powerful Integrated Development Environment (IDE) for Android app development.\nThis course begins with a solid foundation, teaching you how to navigate Android Studio efficiently using essential shortcuts, tips, and configurations. From there, we progressively dive deeper into the IDE’s advanced capabilities, ensuring you build expertise step by step.\nHere’s an overview of what we’ll cover:\nBasic Features and Shortcuts\nNavigate the Android Studio interface with ease.\nMaster shortcuts to speed up coding and navigation.\nLeverage Android studio actions to do more in less time.\nEssential Configurations\nCustomize Android Studio UI for optimal performance.\nExplore themes, editor settings, and version control integration.\nAdvanced Debugging Tools\nHarness the power of the Layout Inspector to analyze and debug your app’s UI in real time.\nUse conditional breakpoints to diagnose complex issues without interrupting your workflow.\nInspect network calls, databases and persistent tasks with advanced debugging features.\nPlugin Power-Up\nDiscover the most useful Android Studio plugins to supercharge your development process.\nHidden Gems\nExplore lesser-known but highly useful features of Android Studio, such as clipboard history and recently visited files.\nGet tips for an optimal laptop-desktop workflow.\nWhy Take This Course?\nAndroid Studio is packed with tools and features that can drastically improve your productivity—but only if you know how to use them effectively. Many developers barely scratch the surface of what Android Studio offers. By mastering its full range of capabilities, you’ll not only save time but also write better, more robust code.\nThis course is perfect for:\nBeginners: Learn the essentials and start your Android development journey with confidence.\nIntermediate Developers: Refine your workflow and explore advanced tools.\nExperienced Developers: Unlock hidden productivity boosters and tackle debugging challenges like a pro.\nBy the end of this course, you’ll be equipped with a thorough understanding of Android Studio’s capabilities and how to use them to streamline your development process, build better apps, and solve complex debugging challenges with ease. Let’s start mastering Android Studio today!",
      "target_audience": [
        "Android developers"
      ]
    },
    {
      "title": "iPhone: Push Notifications & Social Media (Swift 5 & iOS 13)",
      "url": "https://www.udemy.com/course/write-an-iphone-app-social-media-push-notifications/",
      "bio": "Learn how to write a simplified Instagram Clone with automated Push Notification module using Swift 5 & iOS 13 & XCode11",
      "objectives": [
        "Create your own Social Media Application",
        "Apply Push Notifications automatically in every application",
        "Send manual push notifications",
        "Apply Parse into any application",
        "Work with Cocoapods"
      ],
      "course_content": {
        "Instagram Clone (Before Push Notifications)": [
          "Instagram Clone Introduction",
          "What is Firebase?",
          "What is Cocoapods?",
          "User Interface",
          "Adding Settings VC",
          "Creating Users",
          "Sign In",
          "Upload VC Assignment",
          "Upload Operations",
          "Storage Operations",
          "Firestore Structure",
          "Saving Data",
          "Creating Feed Cell",
          "Retrieving Data",
          "Downloading Images",
          "Document IDs",
          "Liking Posts",
          "Firebase Security",
          "GitHub Link for Instagram Clone"
        ],
        "Push Notifications for Our Instagram Clone": [
          "Push Notifications Intro",
          "Enabling Push Services",
          "One Signal Integration",
          "Manual Notification",
          "Notifications with Code",
          "Player ID",
          "Firebase Check",
          "Sending Push Notifications",
          "GitHub Link for Final Project"
        ],
        "(Legacy - Swift 4 Version) Setting Up Parse": [
          "What is Parse?",
          "Integrating Parse",
          "User Interface",
          "Parse Configuration",
          "Creating AWS Server",
          "Connecting to Server"
        ],
        "(Legacy - Swift 4 Version) Creating Social Media": [
          "Storing Data To Parse",
          "Retrieving Info From Parse",
          "Sign Users Up",
          "Sign Users In",
          "Remember Users",
          "Logout Functions",
          "Creating Upload VC",
          "First Post",
          "Creating Feed VC",
          "Showing Feed",
          "Final Touch",
          "Likes and Comments"
        ],
        "(Legacy - Swift 4 Version) Push Notification": [
          "Enabling Push Notifications",
          "OneSignal Settings",
          "OneSignal Registration",
          "First Manual Push Notification",
          "Automated Push Notification",
          "Getting Player IDs",
          "Like Notifications",
          "Comment Notifications",
          "Incrementing App Badge Number",
          "Download Final App"
        ]
      },
      "requirements": [
        "Basic Swift Knowledge",
        "XCode 11 (Free)",
        "Mac or Mac operating system on a different platform",
        "Actual iPhone device (for testing Push Notifications - Optional)",
        "Apple Developer Account (for testing Push Notifications - Optional)"
      ],
      "description": "Learn the fundamentals of Firebase, Social Media & Push Notifications.\nWe will create a simple version of Instagram to test Push Notifications and see how projects with server connection works. We will create this project in the latest technology with Swift 5, XCode 11 & iOS13.\nFor right now, this is one of the best guides for push notifications you can ever find online! 30+ lectures and more than 4 hours of content!\nYou will learn useful skills about topics below:\nPush Notifications\nFirebase\nParse\nOne Signal\nCocoapods\nSwift 5\niOS 13\nTab Bar Applications\nSign In - Sign Up Process\nInformation Uploading to Server\nAWS Server Setup\nYou will learn a new skill that will take you far far away than where you are right now!\nIf you are learning Swift & iOS 13 techniques and you are just in the beginning of your journey, you will love this course.\nThe most influential applications ever written for Iphone are social media applications. And we will learn how to do that. You can use these skills to apply into any app which you can think of later on!\nContent and Overview\n\nThis course is great for people with some basic experience on Swift or other programming languages. I will not explain basic concepts like \"Arrays, Variables, TableViews, Constants, Loops\". But i will teach you how to connect your project to a server, how to send an information to that server and how to receive and present that information. We will send texts, images etc.\nAfter learning how to connect with server you will step into whole new brand world in the name of development. You will write social media apps, internet connected apps, push notification enabled apps from now on!\nThis will be a real-time coding experience. You'll see an actual debugging and have a valuable coding content. You will be provided with final project file and codes at the end of the lesson.",
      "target_audience": [
        "Students who want to learn about Social Media",
        "Students who want to learn about Push Notifications",
        "Students who want to learn about Firebase",
        "Students who want to learn about OneSignal",
        "Students who want to learn about Swift 5"
      ]
    },
    {
      "title": "(Updated) Flutter, Firebase & build J.A.R.V.I.S.",
      "url": "https://www.udemy.com/course/learn-flutter-firebase-build-jarvis-and-get-a-job/",
      "bio": "Learn the basics of Flutter, Firebase, ChatGPT's API and Build Iron Man's Personal Assistant. Free Cheat Sheets.",
      "objectives": [
        "Basics of Flutter",
        "Basics of Firebase",
        "Basics of OpenAI's API",
        "Build Iron man's J.A.R.V.I.S."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tech Stack We Will Use",
          "Installation on Windows",
          "Installation on Mac"
        ],
        "Basics of Dart": [
          "Printing Hello World",
          "Variables and Datatypes",
          "Operators and Expressions",
          "If-else-Elseif",
          "Loops",
          "Extra in Loops",
          "Practise Quiz 1",
          "Strings",
          "Extra in Strings",
          "Functions",
          "Error Handling",
          "Classes and Objects",
          "Inheritance",
          "Asynchronous Programming",
          "Practice Quiz 2",
          "Dart Cheat Sheet"
        ],
        "Basics of Flutter": [
          "First App",
          "Stateless Widget",
          "Text Widget",
          "Container Widget",
          "Row Widget",
          "Column Widget",
          "Practice Quiz 3",
          "What Is A Widget Tree?",
          "Button Widget",
          "Image Widget",
          "Stateful Widget",
          "StateFull Widget Line By Line Explanation",
          "Some More Cool Widgets",
          "Flutter Cheat Sheet"
        ],
        "State Management": [
          "SetState Function In Depth",
          "Practice Quiz 4",
          "Provider Package"
        ],
        "Firebase": [
          "Firebase Integration",
          "Add & Update Data",
          "Retrieve Data",
          "More Operations in Firestore",
          "Authentication Part 1",
          "Authentication Part 2",
          "Practice Quiz 5",
          "Firebase Cheat Sheet"
        ],
        "Let's Build J.A.R.V.I.S.": [
          "Introduction",
          "Generating Response From API",
          "Building UI Part 1",
          "Speech To Text Package Setup",
          "Building UI Part 2",
          "Finishing The App"
        ],
        "How To Get A Flutter Dev Job?": [
          "How to Get Better at Flutter: A Roadmap",
          "Let's Make a Resume",
          "Where and How to Apply?",
          "All The Best"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything from scratch"
      ],
      "description": "In this easy-to-follow course, you'll master the basics of Flutter and Dart, even if you've never coded before. Together, we'll explore the creation of awesome apps and the seamless integration of Firebase to supercharge their capabilities.\nThis course is not like those other 15-20 hour long courses as coding and Android/iOS development can only be learnt by self practice.\nMoreover, I'm thrilled to guide you on incorporating OpenAI's ChatGPT into your apps, unlocking the magic of AI!\nJust imagine building your very own J.A.R.V.I.S., which is Tony Stark's Personal virtual assistant.\nWhat's more, this course is not just about having fun because it serves as an excellent starting point for aspiring Flutter developers aiming to land a Software Engineer job as I'll also guide you through the process of making a Resume and applying to Jobs and Internships.\nI have previously worked with Amazon Web Services and made several apps and I say this with confidence that I have made the best and only course you will need, if you are a beginner, to master Flutter.\nI won't be editing out any errors that I get and instead show you how to fix them as you must be able to fix these problems yourself.\nSo, brace yourself for a straightforward and hands-on adventure into the world of Flutter, Dart, and app development. No nonsense, just practical learning and enjoyable projects! Let's dive in together and embark on this exciting journey of growth, learning, and career opportunities.",
      "target_audience": [
        "Beginners who want to learn flutter, firebase or integration of OpenAI's API and build J.A.R.V.I.S."
      ]
    },
    {
      "title": "The Complete .NET MAUI Bootcamp 2025",
      "url": "https://www.udemy.com/course/course-maui/",
      "bio": "Master .NET MAUI comprehensively starting from the basics. Become proficient in app development of any OS, from A to Z!",
      "objectives": [
        "By the course's conclusion, you'll achieve complete mastery of .NET MAUI, empowering you to develop Android, iOS, macOS, and Windows apps entirely from scratch",
        "You will gain a comprehensive understanding of app development logic, culminating in advanced practical examples and the completion of a full-fledged project",
        "You will become familiar with the Visual Studio interface, toolbars and basic commands, and you will master all the phases of the development",
        "You will learn in a professional way XAML Basics and MAUI Controls and Views with XAML",
        "You will explore Layouts in NET MAUI mobile app development",
        "You will understand the fundamental Data working in .NET MAUI: MVVM, Data Binding, Lists and Collections, Handling User Input...",
        "You will use Themes, Animations, Transitions, and you will Customizate the App in a professional way",
        "You will master the Navigation and PLatform-Specific Code, as well as the Testing and Deployment of any app",
        "You will learn advanced debugging techniques, performance optimization and profiling and testing in MAUI, understanding their interpretation",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and & final project: an E-Commerce App",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to .NET MAUI": [
          "Overview of cross-platform development",
          "Introduction to .Net MAUI",
          "Welcome Quiz",
          "Setting up development environment",
          "Overview of .NET MAUI architecture",
          "Comparing Xamarin.Forms with .Net MAUI",
          "Overview of .NET MAUI App Part 1",
          "Overview of .NET MAUI App Part 2",
          "Quiz",
          "Quiz Answer"
        ],
        "XAML Basics for .NET MAUI": [
          "XAML for UI design",
          "Creating simple layouts"
        ],
        "Common Controls": [
          "Buttons",
          "Check Box",
          "Editor/Entry",
          "Images",
          "Label",
          "Image Button",
          "Date Picker",
          "Progress Bar",
          "List View",
          "Slider"
        ],
        "Layouts in .NET MAUI": [
          "Absolute Layout",
          "Flex Layout",
          "Grid Layout",
          "Stack Layout",
          "Horizontal/Vertical Stack Layout",
          "Assignment",
          "Assignment Solution"
        ],
        "Working with Data": [
          "MVVM and Community Toolkit",
          "Basics of Data Binding in .NET MAUI",
          "Basics of Data Binding with the Community Toolkit",
          "Working with Lists and Collections",
          "Handling User Input and Responding to user actions",
          "Handling User Input and Responding to Buttons",
          "Assignment",
          "Assignment Solution"
        ],
        "Advanced UI Concepts": [
          "Using Pre-defined Themes and Styles",
          "Customizing the appearance of Controls",
          "Customizing Theme for the Application",
          "Animations and Transitions",
          "Assignment",
          "Assignment Solution"
        ],
        "Navigation and Platform-Specific Code": [
          "Simple Navigation in .NET MAUI",
          "Navigation Page",
          "Shell Navigation",
          "Passing data between pages",
          "Accessing Native APIs",
          "Implementing Platform-Specific Features",
          "Assignment",
          "Assignment Solution"
        ],
        "Testing and Deployment": [
          "Unit Testing in .NET MAUI",
          "Deployment Options for .NET MAUI Apps",
          "Assignment",
          "Assignment solution"
        ],
        "Final Project: E-commerce App": [
          "Setting up Development Environment",
          "Building the App Layout",
          "Working on the Views of the Application",
          "Fetching Data from API and Binding it to the Views",
          "Working on Details Page",
          "Storing Data Locally and Accessing it"
        ]
      },
      "requirements": [
        "While having some basic understanding of app development can be beneficial, rest assured that our course is designed to start from scratch",
        "Downloading and installing Visual Studio. Don't worry if you're unfamiliar with the process – it's straightforward, free, and we'll provide detailed instructions within the course!",
        "All you need is a decent computer and, of course, a willingness to learn!"
      ],
      "description": "Embark on the journey to becoming a skilled .NET MAUI professional – a highly sought-after skill in today's job market!\nOur comprehensive course is meticulously crafted to cater to students, developers, and engineers alike, enabling you to learn .NET MAUI from scratch and apply it confidently in your professional endeavors. Regardless of your experience level, rest assured you'll gain a thorough understanding and emerge with complete mastery of the subject.\nWith years of experience in the engineering and development, we've come to recognize the paramount importance of mastering .NET MAUI for app development. This cross-platform framework opens doors to a plethora of job opportunities and economic benefits in the software industry.\nThe complexity of NET MAUI has often posed a challenge for learners, but fear not – our course is designed to streamline your learning journey. Through step-by-step guidance and detailed examples, you'll quickly grasp every concept and be equipped to tackle your own projects with ease.\nFeaturing over 12 hours of exclusive video content and 60 lectures, our course leaves no stone unturned. From practical exercises to theoretical insights, you'll delve into Android, iOS, macOS, and Windows app development, starting from scratch and progressing methodically.\nWe kick off by guiding you through the installation of Visual Studio on your computer, regardless of your operating system. From there, we cover a diverse range of topics, including:\nIntroduction to .NET MAUI and course dynamics\nInstalling the latest version of Visual Studio, along with packages and configurations\nFamiliarizing yourself with the user interface and elements\nMastering XAML Basics and advanced MAUI Controls and Views\nExploring Layouts in NET MAUI mobile app development\nWorking with Data: MVVM, Data Binding, Lists and Collections, Handling User Input...\nUsing Themes, Animations and Transitions, and Customizing the app\nNavigation and Platform-Specific Code\nTesting and Deployment\nLearning Advanced debugging techniques, performance optimization, profiling, and testing\nFinal project: building an E-commerce App from scratch with .NET MAUI\nUnlocking the full potential of .NET MAUI's functionalities\nEngaging in practical exercises, completing full projects, and much more!\nIn essence, our goal is to equip you with the knowledge and insights needed to excel in app development with .NET MAUI. Join us today and take advantage of lifetime access to all course materials, along with prompt support for any queries.\nDon't miss out on this opportunity to enhance your skills and career prospects – enroll now and start your journey towards mastering .NET MAUI!",
      "target_audience": [
        "Beginners who have never used .NET MAUI before",
        "Developers, software engineers, students... who want to learn a new way to develop native mobile apps",
        "Intermediate or advanced .NET MAUI students who want to improve their skills even more!"
      ]
    },
    {
      "title": "Android App Development Course - Build Hands On Android Apps",
      "url": "https://www.udemy.com/course/build-different-android-apps-hands-on-android-course/",
      "bio": "Android App Development - Build real-life 5 Android apps with Android Studio and improve your android development skills",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "In this course, Oak Academy will building 5 different Android Apps from scratch together.",
        "Android applications' levels in this course are from easy to difficult",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying.",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase.",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "android",
        "android app development",
        "android development",
        "android studio",
        "mobile app development",
        "mobile development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android."
      ],
      "course_content": {
        "Project 1 : Calculator Application for Android": [
          "Introduction to Android App",
          "FAQ About Android App Development",
          "Project Files and Course Documents for Android Application",
          "The Android Application Design-1",
          "The android application Design-2",
          "Printing the Numbers to the Screen in android",
          "Adding the Click Feature to the Operators in android app",
          "Writing the Necessary Codes to do Four Operations With the Calculator",
          "Deleting Data on the Screen",
          "Printing the Operation Steps to the Screen",
          "Debugging-1 in app development",
          "Debugging-2 in android studio course",
          "Android App 1"
        ],
        "Project 2 : Number Guessing Game in Android": [
          "Introduction to Android Application",
          "The Splash Screen Design and Adding Animation to the Components-1",
          "The Splash Screen Design and Adding Animation to the Components-2",
          "The Home Page Design",
          "Writing Necessary Codes for Home Page",
          "The Game Page Design in android",
          "Writing Necessary Codes for Game Page",
          "Creating the Alert Dialog",
          "What if the user cannot guess the randomly generated number",
          "Android App Development 2"
        ],
        "Project 3 : Flag Quiz to Android": [
          "Introduction to Android App",
          "The Application Design-1",
          "Flag Quiz_The Application Design-2",
          "Flag Quiz_Creating The Database",
          "Adding the External Database into the Application",
          "Creating the Database Class in android studio app",
          "Accessing the Database for Getting Ten Questions From Database",
          "Accessing the Database for Getting Three Wrong Answer From Database",
          "Writing Necessary Codes for Get Data from Database",
          "Getting the Correct and Wrong Answers From the Database",
          "Printing the Data to the Screen in android app",
          "Control of the Correct and Wrong Answers",
          "Control of the Empty Answers in android development",
          "Writing Necessary Codes for Result Activity",
          "Android App Development Quiz"
        ],
        "Project 4 : Photo Album Application in Android": [
          "Introduction to Android Application",
          "Adding the Necessary Libraries in android app",
          "Creating the Entity Component in android",
          "Creating the DAO Interface in android app",
          "Creating the Database Class in android development",
          "Creating the Repository Class",
          "Creating the View Model Class",
          "The Application Design-1",
          "The Application Design-2",
          "The Application Design-3",
          "Creating The Adapter Class in android",
          "Request Permission in android app",
          "Selecting Image",
          "Reducing the Size of the Selected Image",
          "Saving the Data in app development",
          "Deleting The Data in android app development",
          "Updating The Data-1",
          "Udating The Data-2 in android",
          "Open the Database Using the Database Browser for SQLite",
          "Android Development Quiz 3"
        ],
        "Project 5 : Chat Application to Android": [
          "Introduction to Android App 5",
          "Integration with Firebase",
          "The Login Activity Design",
          "The Registration Activity Design in android development",
          "The Password Reset Activity Design",
          "Firebase Authentication-1",
          "Firebase Authentication-2",
          "Firebase Authentication-3",
          "Firebase Storage in build android app",
          "I forgot my password. How can I reset it",
          "Creating the Options Menu",
          "Update User Profile",
          "The Main Activity Design for Listing the Users",
          "Getting the Users From Database",
          "Listing Users on the Screen",
          "The Chat Activity Design",
          "The Messaging Screen Design",
          "The Messaging in Android App Development",
          "Displaying the Sent Message-1",
          "Displaying the Sent Message-2",
          "Quiz"
        ],
        "Extra": [
          "Android App Development Course - Build Hands On Android Apps"
        ]
      },
      "requirements": [
        "To have basic android and java programming knowledge",
        "Determination to learn and patience",
        "Having a working computer and internet.",
        "Watching the course videos completely, to the end and in order.",
        "No prior Android knowledge is required!",
        "Desire to learn Android Application Development",
        "No programming Android App Development knowledge required!",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today for build android app"
      ],
      "description": "Hello there,\nWelcome to \"Android App Development: Hands-on Android Apps with Java\" course\nBuild 5 different Android Apps from scratch Learn Android App development with real-life examples, improve your skills!\n\nIf you're eager to build Android apps using Java and Android Studio, you're in the right place! This course is specifically designed for beginners and will guide you step-by-step through the process of creating Android apps Whether you're starting from scratch or looking to enhance your skills, this course is your gateway to becoming a proficient Android developer\nThis course is built around the Java programming language, which remains one of the most widely used languages in Android development While Kotlin has become increasingly popular, Java is still the foundation of many Android apps and continues to be a critical language in the Android ecosystem As you progress through this course, you'll develop a deep understanding of Android app creation, focusing on Java and Android Studio—the essential tools every Android developer needs\nIn this course, you will master Android 11 development with hands-on lessons that ensure you get practical experience with every concept, from app design to deployment You will learn how to set up your environment, write Java code, work with the Android SDK, and use Android Studio effectively\nDue to its open-source nature, working with the Android platform and Android app development necessitates constantly learning about the Android platform My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nIn this course;\nYou will reinforce your existing android information by applying\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room)\nYou will learn how to make a messaging app using Firebase\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nandroid app development\nandroid\nandroid studio\nandroid app\nandroid development\noak academy\napp development\nandroid course kotlin\nandroid studio course\nandroid apps\nandroid app development with java\nandroid app examples\nbuild android app\noak academy android\nandroid projects\nandroid hands on\nmobile app development\napp android\napp projects\nandroid project\nandroid studio app\nandroid app example python\nandroid app build apps\n\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\nIs Android Development a good career?\nWith over 25 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\n\nI really like the approach of this course about the Android app It first teaches you Java which is highly important for designing apps in Android Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones As the course title indicates, it is the complete guide to learn android application development\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increases its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nWe have prepared this course with many different exercises to help them understand better\nIn this course, you need basic android development and java programming knowledge\nThis course will take you from a beginner to a more experienced level\nWe will take you from beginner to advance level You will learn step-by-step with hands-on demonstrations\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow the latest trends\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now \"Android App Development: Hands-on Android Apps with Java\" course\nBuild 5 different Android Apps from scratch Learn Android App development with real-life examples, improve your skills!\nWe offer full support, answering any questions\nSee you in the Course !",
      "target_audience": [
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Java programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who wants to learn Android",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "Hybrid Mobile App Development with Ionic",
      "url": "https://www.udemy.com/course/hybrid-mobile-app-development-with-ionic/",
      "bio": "Leveraging AngularJS, CSS, HTML5, and Apache Cordova in the Ionic Framework",
      "objectives": [
        "Once you have completed this training course, you will have learned how to build hybrid mobile applications with the Ionic framework",
        "Learn how to build apps with the Ionic framework"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction And Welcome",
          "What You Should Know Before Watching This Course",
          "Understanding The Exercise Files",
          "What Is The Ionic Framework",
          "Understanding Apache Cordova",
          "Course Outline"
        ],
        "Getting Started": [
          "Installing The Development Environment On A MAC",
          "Installing The Development Environment On A PC",
          "What You Need To Know About Angular JS"
        ],
        "Building Apps With The Ionic": [
          "Overview",
          "Exploring CSS Components VS Angular Components",
          "Understanding The Ionic CLI",
          "Using Ionic Serve",
          "Using Ionic View"
        ],
        "Building The To Do App": [
          "Scaffolding The App",
          "Creating The Initial Interface",
          "Working With Lists",
          "Adding Ionicons",
          "Extending The App With Firebase",
          "Adding Cordova Plugins"
        ],
        "Building A Weather App": [
          "Building A Weather App",
          "Creating The Initial Interface",
          "Getting Our Weather Data From Forecast.IO",
          "Displaying Our Weather Data From Forecast.IO",
          "Updating The Weather Data",
          "Adding Pull To Refresh",
          "Working With Geolocation",
          "Styling Our App"
        ],
        "Building A National Park Guide App": [
          "Building A National Parks Guide App",
          "Updating The Navigation",
          "Updating The Controllers",
          "Updating The HTML Templates",
          "Loading Local Data",
          "Creating Our Data Factory",
          "Adding In Our Map",
          "Add Markers To Our Map",
          "Styling Our App"
        ],
        "Debugging And Testing Ionic Applications": [
          "General Overview Of Debugging",
          "Working With Emulators - IOS",
          "Working With Emulators - Android",
          "Testing On Device - Android",
          "Testing On Device - IOS",
          "Using Ionic View",
          "Proper Testing"
        ],
        "Finishing Up Our Ionic Application": [
          "Generating App Icons And Splash Screens",
          "Preparing For Submission",
          "Code Signing For IOS",
          "Code Signing For Android",
          "Additional Resources",
          "The Road Ahead",
          "Conclusion"
        ]
      },
      "requirements": [
        "Working files are included, allowing you to follow along with the author throughout the lessons",
        "iOS or Android"
      ],
      "description": "In this Hybrid Mobile App Development with Ionic training course, expert author Chris Griffith will teach you how to use the Ionic framework to create hybrid mobile applications. This course is designed for the absolute beginner, meaning no experience with mobile app development is required.\nYou will start by learning how to build apps with the Ionic framework. From there, Chris will teach you how to build a to do application, a weather app, and a national park guide app. This video tutorial will then teach you how to debug and test Ionic applications, including working with emulators, testing on iOS and Android devices, and using Ionic view. Finally, you will finish up your Ionic application by preparing it for submission, code signing for iOS and Android, and generating app icons and splash screens.\nOnce you have completed this computer based training course, you will have learned how to build hybrid mobile applications with the Ionic framework. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "This course is designed for the absolute beginner, meaning no experience with mobile app development is required",
        "This course is geared towards users wanting to build hybrid mobile applications with the Ionic framework"
      ]
    },
    {
      "title": "Comprehensive Course on Python KivyMD | App/APKs with Python",
      "url": "https://www.udemy.com/course/comprehensive-course-on-python-kivymd-appapks-with-python/",
      "bio": "Ultimate course on Graphical User Interface using KivyMD Python. Learn how to make Best Android apps with Python Kivy.",
      "objectives": [
        "Develop Android and Desktop Apps in Python",
        "Create Custom Components in KivyMD",
        "Apply different KivyMD layouts to create responsive apps that adapt to different screen sizes and orientations",
        "Create a multiscreen app that can read and write data on SQLite Database",
        "Apply object-oriented programming concepts of Python to organize code and reuse components"
      ],
      "course_content": {
        "Introduction": [
          "Basic Concepts",
          "KivyMD \"Hello World!\" Program",
          "Layouts Overview"
        ],
        "KivyMD Theming": [
          "KivyMD Theming",
          "Digging Deep into Theming"
        ],
        "Basic KivyMD Components": [
          "KivyMD Buttons",
          "Speed Dial Button",
          "MDTextFields",
          "Components within TextField",
          "Top App Bar",
          "Bottom Navigation Component"
        ],
        "Timer App": [
          "Designing the UI",
          "Creating Custom Button",
          "Implementing Seconds Counter Logic",
          "Refining the App",
          "Conversion to APK"
        ],
        "Advance KivyMD Components": [
          "MDList Component",
          "Creating Custom List Component",
          "Banner in KivyMD",
          "Dialog Box",
          "Custom Dialog Box",
          "Menus",
          "Solving Lagging Problem",
          "MDCardSwipe",
          "Data Table",
          "Data Table Events",
          "Image List",
          "Modifying Image List"
        ],
        "Diagnosis App": [
          "Designing Login Screen",
          "Designing Signup Screen",
          "Database Structure",
          "Main Screen",
          "Home Page",
          "Updating Database -I",
          "Q/A Screen",
          "Reading JSON Files",
          "Updating Progress Bar",
          "Result Screen",
          "Updating Database-II",
          "Linking Database methods",
          "Fixing Issue",
          "History Screen",
          "Adding Logic for Item",
          "Conversion"
        ]
      },
      "requirements": [
        "Basic Python Programming",
        "Basic Knowledge of Kivy Framework"
      ],
      "description": "Welcome to the KivyMD Python course, where you will learn how to create cross-platform applications using the KivyMD framework. KivyMD is an open-source Python library that allows you to build interactive and responsive apps for desktop and mobile devices. In this course, you will learn the fundamentals of KivyMD, how to use various widgets and layouts, integrate apps with databases, and deploy your apps on the Android platform.\n\n\nThe course is divided into six sections covering different aspects of KivyMD development. Here is a brief overview of what you will learn in each section:\n\n\nIn Section 1, we'll some of the basic concepts of KivyMD and will write our first KivyMD \"Hello World!\" program.\nIn Section 2, we'll discuss KivyMD theming; a very powerful feature that lets us design stunning interfaces without even worrying about color combinations, fonts, or any other UI sort of thing.\nIn Section 3, we'll start digging into KivyMD components. We are going to discuss different types of KivyMD Buttons, TextFields, TopAppBar, Bottom Navigations, etc.\nIn Section 4, we're going to work on our First KivyMD projects and will make a Timer app.\nIn Section 5, we'll jump deeper into KivyMD components and will discuss Lists, Banners, Dialog boxes, menus, data tables, etc.\nIn the last Section, we're going to make a real-world Diagnosis app. We are going to combine all the concepts we have learned so far and will make an app that will diagnose diseases based on user answers.\nAll the code files and resources of this course are available on GitHub. This course is designed for anyone who wants to learn how to create cross-platform applications using Python and KivyMD. Some basic knowledge of Kivy and Python is assumed.",
      "target_audience": [
        "Beginner Python Developer curious about GUI Development using Python",
        "Beginner Python Developer curious about Apps Development using Python"
      ]
    },
    {
      "title": "Automate iOS UI Testing: Swift and XCUITest Essentials",
      "url": "https://www.udemy.com/course/automate-ios-app-e2e-testing-with-native-xcuitest-framework/",
      "bio": "Learn Through Real-Life Examples and Apply New Skills to Your Projects",
      "objectives": [
        "Learn basics of Swift programming language",
        "Find out how Xcode can support test automation",
        "Automate your UI E2E tests using XCUITest",
        "Build a maintainable test framework by following page object pattern"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Swift basics": [
          "Playground",
          "Variables",
          "Data types",
          "Collections",
          "Operators",
          "Control flow",
          "Functions",
          "Classes"
        ],
        "Xcode tools": [
          "Getting project ready",
          "Exploring app functionality",
          "Test target",
          "Test recorder",
          "Console and element tree"
        ],
        "Test automation": [
          "Test case details",
          "Interacting with elements",
          "Accessibility identifiers",
          "Coding test steps",
          "Assertions"
        ],
        "Test refactor - framework": [
          "setUp and tearDown methods",
          "Page object pattern",
          "Test code refactor",
          "Findings"
        ]
      },
      "requirements": [
        "macOS system to run Xcode",
        "No prior coding or testing knowledge is required"
      ],
      "description": "Are you ready to speed up your iOS app development by automating UI tests? Imagine freeing up countless hours spent on manual testing - I've been there, and I know how to maximize efficiency. In just 90 minutes, I'll guide you through automating iOS UI tests with XCUITest, ensuring you gain a rare and valuable skill.\n\n\nWe'll start with the basics of the Swift programming language. Next, we'll explore Apple's default IDE - Xcode - and its built-in features. Finally, we'll dive into automating your first UI test case using XCUITest. By the end, you'll have built a maintainable testing framework that enables your test suite to scale seamlessly.\n\n\nThis course is packed with practical knowledge and real-life examples that you can apply immediately to your projects. Respecting your time, every lesson is concise and focused, making sure you get the most out of every minute.\n\n\nAll resources, including source code and additional reading materials, are attached to the corresponding lectures, so you have everything you need at your fingertips.\n\n\nWhether you're a beginner or an experienced developer looking to enhance your skills, this course is designed to be accessible and informative. Join me and become proficient in iOS test automation with XCUITest - efficiently and effectively!",
      "target_audience": [
        "Software testers who want to get into automation",
        "Automation engineers who want to discover the world of mobile testing",
        "iOS developers who want to contribute to UI testing",
        "Students who are searching for an interesting learning path"
      ]
    },
    {
      "title": "Swift the Next Step, Be the BEST Swift Developer TODAY",
      "url": "https://www.udemy.com/course/swift-the-next-step/",
      "bio": "Go from Swift hobbyist to a professional Swift developer in no time, learn the skills to build a real app in Swift fast",
      "objectives": [
        "install cocoapods",
        "create an application that connect to parse",
        "create/login/logout users at parse",
        "install parse opensouce pods into the application",
        "Give the next Step in Swift"
      ],
      "course_content": {},
      "requirements": [
        "You will need a Mac computer or Virtual Machine that runs the Mavericks, Yosemite or El Capitan operating system",
        "XCode 6 or XCode 7",
        "An open mind and desire to learn new things",
        "An iPhone with iOS 8 or iOS 9 for testing is desirable but not essential"
      ],
      "description": "*** Attention ***\n\nThis course is based on PARSE, Parse will be fully retired on January 28th, 2017, however Parse platform is open source what means you can create your own servers on a click of a few buttons. Furthermore, this course is not about Parse, it is about how to make everyone a better SWIFT developer.\nLearn more elegant ways to code and if you not satisfy with the course, you can request your money back in 30 days\nCourse Description\nCan you remember when you were first learning math and teachers showed you how to count with your fingers to solve the problems? For the first year or so this is fine, however the problems become too complex and it becomes cumbersome and impractical to count and solve problems with your fingers. For me iOS and Swift development started out similar to this, except I couldn't find a decent teaching tool to help me make that next step. After a lot of trouble and research I eventually got there in the end.\n\nThis is where you get lucky! I have created the class I wish I had when I was trying to take the next step in iOS development with Swift and I can guarantee you that there is nothing like this course out there, trust me, I've been there.\nDuring this course I will challenge you to complete many tasks that will help improve your coding and app development skill. My first challenge, challenge number 0 is free. Before you start, turn your phone onto airplane mode and see how many apps are still useful to you. Other than the basic phone functionalities such as alarm, calculator, calendar, etc., most apps require a connection; even games require some sort of connection. We live in a connected world today. People want to share everything, including where they go, what they do, and even what they eat. This is what I'm going to teach you.\nI do not believe in one-size fits all. In my view, courses that claim to cater to beginners right through to advanced levels, either fail to stimulate the experienced students, or they overwhelm the newcomers with too much information and complexity.\nHowever, you don't need to be an expert. If you know what variables, classes, and loops are, you're ready for this course. If you have taken another course in any other language such as object-c or swift you're definitely ready for this course. Be sure I'll always be available to help you along your journey in case you have any problems related to the Swift language.\nI firmly believe that the best way to learn is by doing, so these are the steps we are going to take together:\nInstall cocoa pods\nCreate a (free) account in Parse\nFind/install and use pods\nSave/read data in Parse\nCreate many different login screens with different levels of customization\nCreate/log users\nWe will also learn:\nProper and elegant error handling in Swift\nProper and elegant code refactoring in Swift\nProper and elegant use of enum in Swift\nProper and elegant use of inheritance in Swift\n\n\nThe qualifications I have that I believe will help me teach you?\nI have received my first certification in programming in 1987 when I was only 10 years old in an apple II\nI have been a professional developer for over 20 years\nI am an active member on StackOverflow, and I am always helping members on the site. Helping people is the passion that brought me to create this course.\nI currently rank as top 10% for Swift Help in StackOverflow\nI currently rank as top 20 % for iOS Help in StackOverflow\nI am dedicating a lot of time to this course so you can be sure you will have plenty of support in your journey.\n\n\nWho is this class for?\nPeople that have some previous experience in programming, or who have taken any kind of programming course before, or at least know what a variable, a class and a loop are.\nPeople who want to make real apps using proper methodology\nEntrepreneurs who have an idea for an app and don't want to pay somebody thousands to build it.\nDevelopers from different languages that want to start to program in the new and exciting program language - Swift\nCareer development professionals who want to earn money via contract work, consulting, full-time employment and so forth.\nWhat are the requirements?\nYou will need a Mac computer or Virtual Machine that runs the Mavericks, Yosemite or El Capitan operating system\nXcode 6, Xcode 7 or greater\nAn iPhone with iOS 8 or iOS 9 for testing is desirable but not essential\nAn open mind and desire to learn new things\nWhat are you going to get from this course?\nYou will be able to create our own fully customized login screens\nYou will learn how to properly reuse code in different projects\nHow to handle errors and refactor code in quick and elegant way\nOver 40 lectures and 5.5 hours of content!\nInstall cocoa pods\nCreate an application that connect to parse\nCreate/login/logout users at parse\nInstall parse open source pods into the application\nWho is the target audience?\nPeople with some programming experience,\nSomeone who has finished other tutorial/s, and are now stuck, and want to further their progress\nSomeone who cares and wants to create an app that will be easy to maintain and keep going over a long period of time because it has been built right.\nIt is time to leave the crutches behind and take the Next Step, see you there!",
      "target_audience": [
        "this course is meant for people that have some experience programming, this course is probabily not for you (rigth now) if you never used xcode before",
        "this course is definitely for someone that want to expand the Swift knowledged and that it to the next level"
      ]
    },
    {
      "title": "iOS 12 & Swift 4: Build A Pokedex App",
      "url": "https://www.udemy.com/course/ios-12-swift-4-build-a-pokedex-app/",
      "bio": "Learn how to build a Pokedex App using the Model-View-Controller architecture!",
      "objectives": [
        "Build a fully functioning Pokedex list that you can show off to potential employers, family & friends",
        "Know how to apply important architecture patterns such as MVC and Protocols",
        "How to connect to an API and read data from a database",
        "How to implement cool animations for a premium User Experience (UX)",
        "How to create story boards programmatically",
        "Object and Protocol Oriented programming",
        "How to work with UICollectionView programmatically (no storyboards)",
        "How to work with a search bar and search through Pokemon",
        "How to write clean, reusable, professional code"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming experience is helpful, but not required"
      ],
      "description": "Why take this course?\nTaking this course will help you develop vital fundamental programming skills that you will be able to use in the professional world. We teach you import techniques and practices, accompanied with detailed explanations to make sure you understand what you are coding. You're not just building a Pokedex here, you're learning how to code like a professional.\n\n\nWhat will you learn?\nComprehensive knowledge and understanding of Swift 4 & Xcode\nHow to connect to an API and bring information in from the internet\nHow to construct custom objects from JSON data\nHow to understand/implement the MVC architecture.\nHow to design a clean User Interface\nHow to implement aesthetic animations for an improved User Experience\nPrinciples of object and protocol oriented programming\nHow to create custom sub classes\nHow to implement custom extensions\nHow to work with UICollectionView programmatically\nHow to build storyboards programmatically\nHow to search through Pokemon\nHow to parse JSON\nHow to create custom objects\nHow to write clean, reusable professional code\nCode refactoring\nWork with auto layout and cocoa touch classes\n\n\nWho Am I?\nMy name is Stephan Dowless\nI am a professional Senior iOS Developer with 4 years of experience\nHere to help you learn :)",
      "target_audience": [
        "Beginner iOS Developers"
      ]
    },
    {
      "title": "Build Flutter Apps with ChatGPT 5 & AI: No Coding Experience",
      "url": "https://www.udemy.com/course/build-flutter-apps-effortlessly-with-chatgpt-zero-coding/",
      "bio": "Learn to Build Mobile Apps from Scratch with Flutter and ChatGPT 5 – Perfect for Beginners",
      "objectives": [
        "If you can describe an app, you can build it",
        "Learn how to effectively prompt ChatGPT 5 to create, modify, and troubleshoot Flutter apps",
        "Create Stunning Mobile Apps by just describing what you want in plain text",
        "Create functional apps like a calculator, stopwatch, notes app, dice app, and more, all guided by ChatGPT",
        "Develop intuitive and appealing user interfaces through ChatGPT’s code generation and customization",
        "Understand how to fix issues by using ChatGPT to debug and troubleshoot errors in your code",
        "Build practical, usable apps without needing to learn Dart or Flutter in depth, making app creation accessible to anyone",
        "Learn how to ask ChatGPT to integrate third-party libraries and APIs, such as generating QR codes or fetching data from a currency converter API"
      ],
      "course_content": {
        "Introduction": [
          "Create an OpenAI account for ChatGPT",
          "What is Flutter",
          "ChatGPT & Custom GPT's"
        ],
        "Environment Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Calculator App: Write Prompts, Build & Modify GUIs with Prompts & Screen Designs": [
          "Build A Calculator App in Flutter using ChatGPT",
          "Modifying Flutter Apps GUI with Prompts",
          "Converting App Designs into Flutter Code & Error Handling"
        ],
        "Stopwatch App: Practice What you learned": [
          "Build A Stopwatch App in Flutter using ChatGPT",
          "Making GUI Changes using Chatgpt",
          "Converting Images into App Screens in Flutter"
        ],
        "Notes App: Build Multi Screen Apps using Chatgpt": [
          "Writing Detailed Prompts for building Flutter Apps",
          "Building Multi Screen Note Taking App",
          "Changing GUI of Flutter Screens Individually using ChatGPT",
          "Enhance Flutter Apps: Add Notes Search Feature"
        ],
        "Assignment: Build A Tip Calculator App": [
          "Tip Calculator Flutter App using Chatgpt"
        ],
        "Dice Roll App: Use external assets in Flutter Apps with ChatGPT": [
          "Dice Roll App: What we are going to build",
          "Build Use External Assets in Flutter - Build Dice Roll App",
          "Improve GUI of Dice Roll App"
        ],
        "QR Code Generator App- Use Libraries with ChatGPT": [
          "App Introduction",
          "Explore Libraries and Build QR Code Generator App",
          "Enhance GUI of QR Code Scanner App"
        ],
        "Using API's in Flutter Apps": [
          "API Introduction & uses in Flutter",
          "What is API (Optional)",
          "Components of APIs",
          "Build Jokes App in Flutter using ChatGPT",
          "Working on GUI of Jokes App"
        ]
      },
      "requirements": [
        "You don’t need to know Flutter, Dart, or any programming language. ChatGPT will handle the code generation"
      ],
      "description": "Unlock the power of mobile app development without coding! This beginner-friendly course shows you how to create stunning Flutter apps using ChatGPT’s AI-driven code generation. No prior programming experience in Flutter, Dart, or any language is required—just your ideas and enthusiasm!\nWhat You’ll Learn:\nUse ChatGPT to write, customize, and debug Flutter app code effortlessly.\nBuild real-world mobile apps like calculators, stopwatches, and multi-screen notes apps from scratch.\nMaster hands-on projects, including a tip splitter app, number-guessing game, and QR code generator.\nIntegrate external assets, libraries, and APIs into Flutter apps with ChatGPT’s guidance.\nDesign user-friendly interfaces, handle errors, and create multi-screen apps without coding expertise.\nProjects You’ll Build:\nCalculator App: Create a sleek single-screen app to practice UI design and error handling.\nStopwatch App: Build a functional timer with a robust app structure.\nMulti-Screen Notes App: Manage multiple screens and implement dynamic changes using ChatGPT.\nTip Splitter App: Develop a practical app to calculate tips and split bills.\nDice App: Incorporate external assets for interactive, fun apps.\nQR Code Generator: Enhance apps with libraries for advanced functionality.\nJokes & Weather Apps: Use APIs to create engaging, data-driven Flutter apps.\nWhy This Course?By the end, you’ll confidently build fully functional Flutter apps with minimal effort, leveraging ChatGPT’s AI to generate code. Perfect for aspiring developers, entrepreneurs, or hobbyists wanting to enter mobile app development without learning programming from scratch. Join thousands of students in 170+ countries and start your Flutter journey today!\nNo experience needed—if you can describe an app, ChatGPT and this course will help you build it. Enroll now to become a Flutter app creator in 2025!",
      "target_audience": [
        "Ideal for those with no prior coding experience who want to build mobile apps using ChatGPT",
        "Developers looking to speed up their workflow or explore ChatGPT’s capabilities in automating repetitive tasks will benefit from this course. You’ll gain new techniques to streamline your development process.",
        "Individuals who are interested in Flutter app development but want to avoid diving into coding right away",
        "Anyone with app ideas but limited technical knowledge, who wants to bring those ideas to life quickly."
      ]
    },
    {
      "title": "Icon Animations in Android Applications - Complete Course",
      "url": "https://www.udemy.com/course/vector-animations-in-android-applications-complete-course/",
      "bio": "Learn to create amazing vector Animations like the ones from Instagram, Facebook and implement them in Android Studio.",
      "objectives": [
        "Clean, Smooth and Professional Animations",
        "How to Auto-Generate XML Code for Animations",
        "Learn how to use Shapeshifter",
        "Morphing Animations",
        "Knowledge to Create More Complex Animations by Yourself",
        "Implement Awesome Animations in Android Studio",
        "Create Beautiful Icon Animations",
        "Learn more about AnimatedVectorDrawable",
        "Learn more about VectorDrawable",
        "Learn more about AnimatorSet",
        "Learn more about ObjectAnimator",
        "Learn more about Vectors"
      ],
      "course_content": {
        "Introduction": [
          "What is Vector?",
          "What is Bitmap?",
          "Understanding PathData",
          "Introducing to VectorDrawable",
          "Introducing to ObjectAnimator",
          "Calculating Pivot Point",
          "Introducing to AnimatorSet",
          "Introducing to AnimatedVectorDrawable"
        ],
        "Introducing to Adobe Xd": [
          "Introducing to Adobe Xd",
          "Adobe Xd Interface",
          "Export Vector from Adobe Xd",
          "Adobe Xd Shortcuts",
          "Free Vector Resources Online"
        ],
        "Shapeshifter": [
          "Introducing to Shapeshifter",
          "Animating Group Properties",
          "Path Morphing",
          "Animating Path Properties - Part 1",
          "Animating Path Properties - Part 2",
          "Clip Path",
          "Save your Project",
          "Export your Project"
        ],
        "#1 Checkmark Animation": [
          "Design Checkmark Vector in Adobe Xd",
          "Animate Checkmark Vector in Shapeshifter",
          "Design Layout for Checkmark Animation in Android Studio",
          "Implement Logic for Checkmark Animation in Android Studio"
        ],
        "#2 Instagram Heart Animation": [
          "Animate Instagram Heart Vector in Shapeshifter - First Icon",
          "Animate Instagram Heart Vector in Shapeshifter - Second Icon",
          "Design Layout for Heart Animation in Android Studio",
          "Implement the Logic for Heart Animation in Android Studio"
        ],
        "#3 Loading Animation": [
          "Animate Loading Vector in Shapeshifter",
          "Implement the Logic for Loading Animation in Android Studio"
        ],
        "#4 Arrow Animation": [
          "Design & Animate Dropdown Arrows in Shapeshifter",
          "Design Layout for Dropdown Arrows in Android Studio",
          "Implement the Logic for Dropdown Arrows in Android Studio"
        ],
        "#5 Thumbs Up/Down Animation": [
          "Animate Thumbs Up/Down Vector in Shapeshifter",
          "Implement the Logic for Thumbs Up/Down Animation in Android Studio"
        ]
      },
      "requirements": [
        "Android Studio Installed",
        "Adobe Xd Installed"
      ],
      "description": "This course will teach you how to design and create vector animations for Android applications (Those animations could be used for iOS and Web as well), but we are only going to focus and implement our Animation in Android Studio this time.\nI'm going to start this course by explaining you the basics you need to know to be able to undestand how vector animations work. I will introduce you to most important classes like; AnimatedVectorDrawable, VectorDrawable, AnimatorSet, ObjectAnimator.\nWe are going to avoid writing long boilerplate codes, instead we are going to use an existing web application called Shapeshifter. Then we are going to use that web app to visually create and animate our vectors and then auto-generate all the necessary XML code we need to implement in our Android application.",
      "target_audience": [
        "Android Developers",
        "Mobile Programmers",
        "Application Designers",
        "Web Designers",
        "Anyone who Wants to Learn How to Create Animations for Android Applications",
        "Anyone who Wants to Learn How to Create Animations for iOS Applications",
        "Anyone who Wants to Learn How to Create Animations for Web Applications",
        "Anyone who wants to Learn more about Icon/Vector Animations"
      ]
    },
    {
      "title": "GitHub for XCode (Swift/Objective-C) create a beautiful app",
      "url": "https://www.udemy.com/course/learn-github/",
      "bio": "GitHub for XCode learn how to create a beautiful app coding collaborating in the cloud. Working solo or in colaboration",
      "objectives": [
        "Create a repository in GitHub",
        "Commit, Push and Pull changes to this repository",
        "Work with source control in collaboration with more users",
        "Create and Merge brunches",
        "Create Tags for new App Versions",
        "(Swift) Create a new App that display quotes",
        "(Swift) Create and understand a MVC",
        "(Swift) Create a beautiful App from begining to end"
      ],
      "course_content": {
        "Introduction to this course": [
          "A brief introduction to this course",
          "A brief introduction about me"
        ],
        "Starting With GitHub": [
          "Creating a GitHub account",
          "Creating a new repository",
          "Adding a new collaborator to your repository",
          "Developer B View",
          "Challenge #1"
        ],
        "Starting with XCode Developer A point of view": [
          "Creating the App",
          "Challenge #2",
          "Initial commit and push to GitHub and what a commit and a push is"
        ],
        "Starting with XCode Developer B point of view": [
          "Pulling the initial application to developer B computer"
        ],
        "Getting the changes from one developer to another": [
          "We need to pull the changes before start the changes, but what is a pull?",
          "One Brunch for each developer, but how we create it and why?"
        ],
        "Start the Swift logic with Developer A": [
          "Interface Builder (IB)",
          "View and ViewController MV from the MVC how they know of each other",
          "Challenge #3",
          "Understanding why there is more than one way to create an IBOutlet",
          "Merging the data from development brunch to master brunch *"
        ],
        "Creating the Model the \"M\" on the MVC": [
          "Merging from master to the developer brunch and learning how to solve conflicts",
          "Very simple model and introduction do lldb",
          "Creating a Struct to add an Author to the Quotes",
          "Challenge #4",
          "Solution for challenge #4 and more",
          "MVC, can someone draw me a picture of what is it? Yes we can!",
          "A new Class for the new and abstracted Model",
          "Challenge #5"
        ],
        "Final Quiz": [
          "About GitHub",
          "About Swift"
        ]
      },
      "requirements": [
        "Basics about Programing"
      ],
      "description": "Did ever think about have access to the world’s largest open source community? To be able to share your projects with the world, get feedback, and contribute to millions of repositories?\n\nBetter than this just if you could have access to all of this directly from inside XCode, making everything from only one place, coding, committing, pushing and pulling the code or even creating new branches, merging branches and even solving conflicts in a very visual interface.\nIf you are working in group or as a collaborator in a project you probably want great great communication between users and/or collaborators, making clear review changes, comment on lines of code, report issues, and plan the future of your project with discussion tools all this with less friction development across teams and/or friends.\nLearn all this building an application from beginning to end using Swift, learn about MVC designing, debugging, lldb, and so much more.\nThis course is full of challenges that we can all participate as an individual or as a group afterall we will learn how to master GitHub the world’s largest open source community so we will be able to share our code, our ideas and specially our knowledge.",
      "target_audience": [
        "Everyone that want to learn more about Git and GitHub or any other Source Control",
        "Everyone that want to learn step-by-step how to build an end-to-end app in XCode (Swift)",
        "Everyone that want to have control over past source code",
        "Everyone that want to learn how to work in collaboration with other users",
        "Everyone that want to create a beautiful iPhone App"
      ]
    },
    {
      "title": "iOS Dev Mastery –Build a Pro Finance App with SwiftUI & MVVM",
      "url": "https://www.udemy.com/course/become-a-pro-ios-dev-master-swiftui-mvvm-clean-code/",
      "bio": "Build a real iOS app from scratch with SwiftUI, MVVM, and clean architecture like a professional.",
      "objectives": [
        "Build a complete SwiftUI salary calculator app from scratch using MVVM architecture",
        "Apply clean code principles and dependency injection in a real-world iOS project",
        "Learn how to structure scalable, testable SwiftUI apps like a senior developer",
        "Gain confidence in using SwiftUI for production-ready projects with modern app design",
        "Design a modular system architecture that separates UI, business logic, and services",
        "Use Git and source control effectively to manage code changes and versioning"
      ],
      "course_content": {
        "Welcome to Income Ultra": [
          "Welcome to the Course"
        ],
        "System Design": [
          "System Design Part 1 – Defining App Requirements & Use Cases",
          "System Design Part 2 – Planning the Data Models & Core Entities",
          "System Design Part 3 – Visualizing the Architecture with Diagrams"
        ],
        "Environment & Project Setup": [
          "Dev Environment Setup & Git Source Control",
          "Creating the Xcode Project & SwiftUI Setup",
          "App Entry Point & Initial Routing (AppStartingView)"
        ],
        "App Styling & Reusability": [
          "Designing the Welcome Screen (WelcomeView)",
          "Project Colors",
          "Importing Useful SwiftUI Extensions"
        ],
        "Navigation & App Foundation": [
          "Creating the Home Tab View",
          "Setting Up Stores & Dependency Injection",
          "Defining Domain Layer & Data Models"
        ],
        "Income Calculator UI": [
          "Building the Income Picker View",
          "Implementing Salary & Hourly Input Views",
          "Creating Output Views (Take-Home & Gross Pay)"
        ],
        "Business Logic & Core Functionality": [
          "Main Logic: Calculating Net & Gross Income"
        ],
        "Final Touches": [
          "Building the Settings Screen",
          "Full Project Overview & Architecture Recap",
          "Next Steps & What to Build After This Course",
          "Project Source Code"
        ],
        "Extra Resources": [
          "Beyond This Course"
        ]
      },
      "requirements": [
        "Basic understanding of Swift and SwiftUI. No prior experience with MVVM or clean architecture required — everything is explained step by step."
      ],
      "description": "Want to build professional iOS apps with SwiftUI — the kind that look clean, work flawlessly, and feel ready for the App Store?\n\n\nIn this course, you’ll build Income Ultra, a sleek salary calculator app from the ground up using SwiftUI, MVVM, and clean architecture principles. Whether you’re prepping for iOS interviews, freelancing, or aiming for senior-level coding confidence, this course will show you how the pros structure real-world apps.\n\n\nWe’ll start with system design and architecture planning, then dive into real-time salary and hourly wage logic, clean UI composition, dependency injection, and proper separation of concerns. You’ll also learn how to build for scalability, readability, and long-term reusability.\n\n\nYou’ll get hands-on experience with:\nSwiftUI and MVVM architecture\nReal-world system design with diagrams\nView models, stores, and modular business logic\nGit & source control setup\nClean app layering with reusable components\n\n\nThis course is not just about getting something to work — it’s about writing production-quality code that you’ll be proud to showcase in your portfolio or use as a reference for your next big app.\n\n\nBy the end of this course, you’ll have the skills and mindset of a senior iOS developer — and a fully functional, beautiful SwiftUI app to prove it.",
      "target_audience": [
        "iOS developers who want to level up from beginner or intermediate to a more professional, senior-like coding style using SwiftUI. Perfect for devs preparing for job interviews, building portfolio apps, or freelancing with confidence.",
        "If you want to learn how real-world iOS apps are structured and go beyond just making things work — this course is for you."
      ]
    },
    {
      "title": "Mastering Charts Framework in SwiftUI 4 & iOS 16",
      "url": "https://www.udemy.com/course/mastering-charts-framework-in-swiftui-4-ios-16/",
      "bio": "Learn about Apple's newly introduced Charts Framework and build apps with data visualization",
      "objectives": [
        "Apple's Charts Framework",
        "New Features Introduced in SwiftUI 4",
        "New Features Introduced in iOS 16",
        "Data Visualization in iOS 16 using SwiftUI 4"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Charts Basics",
          "Horizontal Bar Chart",
          "Dynamic Chart",
          "Chart Foreground Style",
          "Chart Foreground Style Scale Modifier",
          "Charts Annotation"
        ],
        "Stacked Bar Chart": [
          "Data Structure",
          "Stacked Chart"
        ],
        "Multi-Series Bar Chart": [
          "Data Structure and Setup",
          "Multi-Series Bar Chart View"
        ],
        "Line Chart with LineMark": [
          "Line Chart Intro",
          "Line Chart Styling",
          "Line Chart Interpolation",
          "Line Chart Annotation",
          "Line Chart Symbol"
        ],
        "Multi-Series Line Chart with LineMark": [
          "Multi-Series Line Chart",
          "Multi-Series Line Chart Styling"
        ],
        "Area Charts with AreaMark": [
          "Area Chart Intro",
          "Area Chart Styling"
        ],
        "Multi-Series Area Chart in SwiftUI 4": [
          "Multi-Series Area Chart"
        ],
        "CandleStick Chart": [
          "CandleStick Chart using RectangleMark"
        ],
        "Combined Chart": [
          "AreaMark with Line Mark to build combined chart",
          "Point Mark in Combined Chart",
          "RuleMark in Combined Chart"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI",
        "Knowledge of iOS Programming"
      ],
      "description": "At WWDC 22 Apple announced brand new framework for data visualization called Charts Framework. Before the introduction of charts for Apple platform, we had options to include third party libraries to add charting capability but now it's all included as a framework into the platform.\n\n\nCharts give developers ability to easily compose complex data visualization by adding few lines of code. SwiftUI makes it even better where Charts view for SwiftUI is as easy as integrating any other view and the best part is that all the code is declarative in nature so your data drives the changes for data visualization. Charts Framework is supported in all Apple platforms so that includes iOS, iPadOS, macOS, watchOS.\n\n\nIn this course we will take a deep dive into this new Charts Framework using SwiftUI 4 and iOS 16. We will build practical examples while exploring all the options available to configure and use charts framework which would match the theme for your app.\n\n\nWhile learning about the Charts framework, we will also get the opportunity to learn SwiftUI 4 features.\n\n\nThis course is designed for developers who wants to include data visualization for their app starting iOS 16 and above.\n\n\nJoin me in this course and learn about the newly introduced Charts Framework.",
      "target_audience": [
        "Developers who wants to learn about newly introduced Charts Framework from Apple during WWDC 22",
        "Developers who wants to include data visualization in their apps using SwiftUI"
      ]
    },
    {
      "title": "Dart Programming: Comprehensive Training for All Levels",
      "url": "https://www.udemy.com/course/the-complete-dart-programming-guide-for-beginners/",
      "bio": "Master Dart programming—start from the basics and advance to building real-world applications with confidence!",
      "objectives": [
        "Dart Basics: Core concepts of Dart language including syntax, variables, and operators. Understanding Dart’s data types and constants.",
        "Working with collections such as lists and maps.",
        "Control Flow and Functions: Implementing conditional statements and loops. Writing and using functions to organize code.",
        "Exploring Dart’s function types, including anonymous functions.",
        "Object-Oriented Programming: Creating and utilizing classes and objects. Mastering inheritance, abstract classes, and interfaces.",
        "Implementing encapsulation and polymorphism in Dart.",
        "Advanced Dart Features: Utilizing generics for type-safe programming. Building custom libraries and modules.",
        "Handling asynchronous programming with futures and streams. Managing concurrency with isolates.",
        "Project Work: Developing a real-world project to create forms for a website using Dart.",
        "Applying Dart programming concepts in practical scenarios to build and update web applications.",
        "By the end of the course, students will have a solid understanding of Dart programming, capable of creating robust and efficient applications"
      ],
      "course_content": {
        "Dart Programming Training": [
          "Introduction to Course",
          "Basics of Dart",
          "Basics of Dart Continue",
          "Dart Syntax",
          "Dart Syntax Continue",
          "Dart Variable",
          "Dart Variable Continue",
          "Dart Examples",
          "Dart Examples Continue",
          "Dart Operators Part 1",
          "Dart Operators Part 2",
          "Dart Operators Part 3",
          "Dart Operators Part 4",
          "Dart Operators Part 5",
          "Dart Operators Part 6",
          "Dart Operators Part 7",
          "Dart Operators Part 8",
          "Dart Operators Part 9",
          "Dart Constants",
          "Dart Constants Continue",
          "Dart List Part 1",
          "Dart List Part 2",
          "Dart List Part 3"
        ],
        "Dart Programming Training Intermediate Level": [
          "Introduction to Course",
          "If Statements",
          "If Statements Continue",
          "Switch Case",
          "Assignments Part 1",
          "Assignments Part 2",
          "Assignments Part 3",
          "Assignments Part 4",
          "Assignments Part 5",
          "Assignments Part 6",
          "For Loop Part 1",
          "For Loop Part 2",
          "For Loop Part 3",
          "For Loop Part 4",
          "For In While Do While Loops",
          "For In While Do While Loops Continue",
          "Functions Part 1",
          "Functions Part 2",
          "Functions Part 3",
          "Functions Part 4",
          "Classes Part 1",
          "Classes Part 2",
          "Classes Part 3",
          "Classes Part 4",
          "Classes and Inheritance",
          "Classes and Inheritance Continue",
          "Abstract Classes and Interfaces"
        ],
        "Dart Programming Training Advanced Level": [
          "Introduction to Course",
          "Generic Methods",
          "Generic Methods Continue",
          "Generic Classes Part 1",
          "Generic Classes Part 2",
          "Generic Classes Part 3",
          "Generic Classes Part 4",
          "Creating User Defined Libraries",
          "Creating User Defined Libraries Continue",
          "Async Programs",
          "Async Programs Continue",
          "Programs on Stream Class",
          "Programs on Stream Class Continue",
          "Programs on Isolate Part 1",
          "Programs on Isolate Part 2",
          "Type Different Programs Part 1",
          "Type Different Programs Part 2",
          "Exception Handling"
        ],
        "Project on Dart Programming Creating Forms for Website": [
          "Introduction to Project",
          "Creating Project and Setting Basics Code",
          "Updating Details in App",
          "Updating Details in App Continue",
          "Home Component Part 1",
          "Home Component Part 2"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Familiarity with basic programming concepts such as variables, control structures, and functions is beneficial. Previous experience in any programming language (e.g., Java, Python, JavaScript) can be helpful but is not mandatory.",
        "Computer and Software Requirements: A computer with an internet connection to access course materials and online resources. Dart SDK installed on the computer (installation instructions will be provided during the course).",
        "Development Environment: A code editor or Integrated Development Environment (IDE) such as Visual Studio Code or IntelliJ IDEA. The course will guide you on setting up and configuring these tools.",
        "Curiosity and Enthusiasm: A willingness to learn and practice new programming concepts and techniques"
      ],
      "description": "Introduction:\nDive into the world of Dart programming with our comprehensive course designed to take you from a beginner to an advanced level. This course covers all essential aspects of Dart, providing a robust foundation for building modern, high-performance applications. Whether you're a new developer looking to get started with Dart or an experienced programmer aiming to deepen your knowledge, this course offers structured lessons and practical projects to help you master Dart effectively.\nSection 1: Dart Programming Fundamentals\nIn this section, you’ll start with the basics of Dart, including its syntax, variables, and operators. You'll learn how to work with Dart's core features through hands-on examples, exploring topics such as Dart lists and constants. Each concept is introduced with clarity, building up from foundational elements to more complex uses of Dart. This section ensures that you grasp the essentials needed to write efficient and readable Dart code.\nSection 2: Intermediate Dart Programming\nBuilding on your foundational knowledge, this section delves into control structures and more advanced programming techniques. You'll explore if statements, switch cases, and various loop constructs. Functions and classes are covered in detail, including how to use inheritance and interfaces. This section will help you develop more complex logic and structures, preparing you for real-world programming challenges.\nSection 3: Advanced Dart Programming\nTake your Dart skills to the next level with advanced topics such as generic methods and classes, asynchronous programming, and exception handling. You'll work with Dart's stream class and isolate programs, learning how to create user-defined libraries and handle various types of programming scenarios. This section is designed to provide you with the expertise to tackle sophisticated programming tasks and optimize your Dart applications.\nSection 4: Project - Creating Forms for a Website\nApply your Dart knowledge in a practical project where you'll create forms for a website. This project will guide you through setting up a project, updating details, and developing home components. You'll integrate your learning from the previous sections to build a functional and interactive web application, showcasing your Dart programming skills in a real-world context.\nConclusion:\nBy the end of this course, you’ll have a thorough understanding of Dart programming, from fundamental concepts to advanced techniques. You'll be equipped with the skills to build robust Dart applications and tackle complex programming problems with confidence. The practical project will consolidate your learning and demonstrate your capability to develop effective solutions using Dart.",
      "target_audience": [
        "Aspiring Developers: Individuals looking to start a career in programming, especially those interested in mobile app development with Dart and Flutter.",
        "Software Engineers: Professionals who want to expand their skill set by learning Dart, a language that is gaining popularity for building scalable and efficient applications.",
        "Current Dart and Flutter Users: Developers who are already working with Dart and Flutter but want to deepen their understanding and enhance their coding skills.",
        "Tech Enthusiasts: Anyone passionate about learning new technologies and programming languages, and who wants to explore Dart for its unique features and applications",
        "Students and Graduates: Computer science students or recent graduates seeking practical programming skills to complement their academic knowledge and improve their employability.",
        "Developers Transitioning from Other Languages: Programmers experienced in other languages (such as JavaScript, Java, or Python) who are interested in learning Dart for its specific advantages in modern application development."
      ]
    },
    {
      "title": "Create App Like Instagram using Parse Server: iOS 11 Swift 4",
      "url": "https://www.udemy.com/course/parse-server-development/",
      "bio": "Parse Server development course. Learn how to create backend (BAAS) apps like Instagram, Twitter using Swift 4 and iOS11",
      "objectives": [
        "Develop complex cloud-based apps like Instagram and Twitter",
        "Understand Parse Server framework in-depth",
        "Be confident in your ability to develop a backend for any app"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction",
          "Quick overview of how things work"
        ],
        "Quick 20 minutes Parse Server setup": [
          "Heroku registration and setup",
          "Set up Xcode project",
          "Write first Parse code to save data to the cloud",
          "App Transport Security setting",
          "Parse dashboard setup",
          "Use Cocoapods to install Parse SDK",
          "Links and Resources"
        ],
        "Quick Intro To Parse API": [
          "Another way to save PFObject",
          "Retrive object where you know the object ID",
          "Retrieve first object from the database",
          "Updating an object and saving it back to the database",
          "Delete an object from the database",
          "Retrieve multiple records from the database",
          "How to order records",
          "Set limit on query results",
          "Where clause to filter or constrain query results",
          "Multiple constraints on a query",
          "Compound queries - performing an OR query",
          "Counting objects in the background",
          "Other data types (arrays, dictionaries, boolean)"
        ],
        "Noteworthy Information": [
          "App Sleeping on Heroku",
          "Install Parse Server from within Heroku using element button",
          "Add new row, columns, class and delete objects from Parse dashboard"
        ],
        "Introduction to the Mini Twitter App Development": [
          "Design the home screen of the mini Twitter App",
          "Design the login storyboard",
          "Check to see the user's login status using the PFUser class",
          "Set up registration and login custom controllers and actions and outlets"
        ],
        "Parse User Registration, Login and Logout Implementation": [
          "Set up Parse user registration",
          "Create a Helper class",
          "Complete the registration screen with alerts and return home if successful",
          "Parse user login implementation",
          "Parse user logout implementation"
        ],
        "Post Data to Parse Server": [
          "Set up post view controller",
          "Save a new message to Parse from post screen",
          "Make textview a first responder",
          "Add couple more data into the Parse database"
        ],
        "Fetch Records From Parse Database": [
          "Create custom class and connect the cell outlets",
          "Fetch all data from the backend and set up table view datasource functions",
          "Display all the data in the table view",
          "Configure label number of lines and test likes and comments"
        ],
        "Implement Likes, Comments and Flag Features": [
          "Set up likes and comments click events",
          "Like function logic and implementation",
          "Add unique object for key implementation for likes",
          "Efficient code vs codes that work",
          "Set up the comments screen user interface",
          "Set up outlets and actions for the comment view controller",
          "Send selected object to the comment screen",
          "Display comments from the objects on the comment screen",
          "Change the text label property of the cell",
          "Implement the comment function",
          "Reload the data from backend when the user return to the home screen",
          "Parse dashboard error",
          "Flagged feature implementation",
          "Increment key function for better implementation"
        ],
        "My Album App - Learn PFAnonymousUtil, PFFile, PFIImageView, PFConfig and Pointer": [
          "Introduction to the starter project",
          "Introduction to anonymous users",
          "Another way to enable anonymous user",
          "Pick photo from the photo library",
          "How to save images as PFFile to Parse",
          "Create a Parse Custom Class",
          "Update the save code with custom class",
          "Set up table view and query the album data",
          "Custom query inside the Parse custom class",
          "Delegate tasks to the custom table view cell",
          "Retrieve PFFile from an object and convert to Image",
          "Pointers and include key query",
          "Display the username of the user",
          "Add a Profile Screen and add Parse UI library",
          "Display image using the PFImageView function",
          "How to implement Unwind segue",
          "How to use the PFConfig parameters",
          "Project file"
        ]
      },
      "requirements": [
        "You should already have BASIC iOS development skills, this course is not for complete beginners",
        "You should have a Mac computer (MacBook, iMac, Mac mini etc.)",
        "You should know basic Swift programming language"
      ],
      "description": "****NOTE: This course is not for Advanced Parse developers, if you are already advanced in using Parse this course is not for you. The course will feature advanced features eventually, right now only basic Parse features are addressed.***\nAre you an iOS Developer looking to learn how to use the Parse Server API for your apps backend? Do you want to develop cloud-based iOS apps like instagram, Twitter, Facebook and you don’t know where to start? Do you want to increase your job prospects by learning one of the most powerful BAAS (Backend As A Service) solution in the market? If you are ready to take your development skills to the next level then this course is for you.\n\n\n\nABOUT THE PARSE SERVER DEVELOPMENT COURSE\nIn this course I will teach how to use the Parse Server open source backend for your iOS app development. We’ll create iOS/iPhone app that will use most of the Parse Server API functions. You will learn how to install Parse Server within 20 minutes of enrolling in the course.\nYou will learn some of the basics but important API calls and then we’ll dive into developing a basic Twitter-like app where you will be able to save message to the backend, retrieve saved messages, write queries with constraints and modify records in the backend.\nYou will learn some of the cool APIs that make writing codes so easy. I’ll show you wrong ways of doing things and then show you the correct way.\nBy the end of this course you will be able to;\nCall yourself a backend developer\nCreate a cloud based app such as Twitter, Instagram and Facebook\nAccept any job that requires a cloud storage solution\nIncrease your confidence as a developer\nKnow Parse Server API in-depth and be ready to explore more\n\n\nABOUT ME\nI have been developing for 5 years on iOS platform and around 4 years with Parse API. I currently have 14 major apps running on the Parse platform (and 10 more that are just basic apps). Parse is my go-to solution for adding backends to my apps because of its simplicity. I have also used other platforms such as Firebase and AWS Mobile Hub for adding BAAS to my apps but Parse is a lot more intuitive and easier to use.\nI am a freelancer, I have developed over 100 apps in my career. I am passionate about teaching and I enjoy coding :)\n\n\nABOUT YOU\nThis course assumes that you have some iOS development skills, around 3-6 months of programming in Swift and the ability to develop a basic table view app. The course is NOT absolute beginner who hasn’t programmed in Swift. I explained in details all the steps in the course however a basic understanding of iOS development and some swift programming skills are required. If you want to develop cloud-based app then this course is for you.\n\n\nSIGN UP/ENROLL NOW\nEnroll in the course now so you can start learning immediately. You have a 30 days money back guarantee if you change your mind. There’s no better time to learn how to use PARSE SERVER. If you are ready to begin developing cloud-based apps CLICK THE ENROLL BUTTON now.\nSUPPORT WHEN YOU NEED IT\nYou will be supported throughout your journey in this course. If you get stuck on any of the lectures, you can use the Q/A section of the course to ask for assistance. I am committed to supporting my students on this course, I am constantly involved in the Q/A to provide assistance to anyone that needs it.\n\n\nSOME OF THE TOPICS COVERED\nQuick guide on how to install Parse Server with Heroku\nHow to install Parse Dashboard\nHow to install Parse SDK manually and using Cocoapods\nHow to save records to the cloud\nHow to query and retrieve objects from the cloud\nHow to write compound queries\nHow to modify records\nHow to count records in the background\nHow to add query constraints\nHow to order and limit records\nHow register and authenticate users\nHow to use lots of Parse Server API that allow us to write small amount of codes.\nHow to develop a simple app like Twitter\nAnd so on...\n\n\nIf you're ready to become a proficient backend developer, click the \"Enroll Now\" button and join the course today!\nSTILL NOT CONVINCED?\nWatch some of the FREE preview lectures to learn more about the course. Click the enroll button to join the course today.",
      "target_audience": [
        "NOTE: This course is not for Advanced Parse developers, if you are already advanced in using Parse this course is not for you",
        "Anyone who wants to learn how to make cloud based apps like Instagram or Twitter",
        "Anyone who is already familiar with iOS development but wants to develop cloud-based app",
        "Anyone who wants to learn how to use Parse Server Framework",
        "Anyone who wants to add backend developer to their resume"
      ]
    },
    {
      "title": "Firebase: Firebase for Android App Development using Kotlin",
      "url": "https://www.udemy.com/course/firebase-firebase-for-android-app-development-using-kotlin/",
      "bio": "Firebase Android in details using Kotlin for android app development, mobile app development, flutter android developers",
      "objectives": [
        "What is Firebase?",
        "Firebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011.",
        "Firebase is a Google-backed application development software that enables developers to develop iOS, Android and Web apps.",
        "Firebase provides tools for tracking analytics, reporting and fixing app crashes, creating marketing and product experiment.",
        "Kotlin android is accepted by Google as the official language for Android development. Therefore, everyone who wants to be an android developer should know it",
        "You will learn Firebase platform in detail by using the Kotlin programming language and Android Studio.",
        "This course is built to help beginners to start making applications in firebase and android application development or android app design.",
        "Kotlin is popular for both Android developers and Java developers",
        "Firebase products",
        "Firebase Realtime Database",
        "Firebase Authentication",
        "Firebase Cloud Storage",
        "Firebase-Android Studio Integration",
        "Creating a new project in android studio",
        "Push Notification with Firebase",
        "Android Development with Firebase using Kotlin",
        "Android Kotlin",
        "Kotlin Android",
        "Android App Development",
        "Mobile App Development",
        "Firebase Pricing Policy"
      ],
      "course_content": {
        "Introduction to Firebase: Firebase for Android App Development using Kotlin": [
          "What is Firebase?",
          "FAQ about Firebase, Andoid App Development, Kotlin",
          "Products Offered by Firebase",
          "Project File Link; Firebase Android",
          "Firebase Pricing Policy, Limits and Quotas",
          "Useful links about Firebase, Android App Development, Kotlin",
          "quiz"
        ],
        "Firebase Realtime Database": [
          "Creating a Firebase Database",
          "Firebase – Android Studio Integration",
          "Adding Real-time Data to The Database via Firebase Console",
          "Adding Data into Real-Time Database via Android App",
          "Retrieving Real-Time Data From Database to Application",
          "quiz"
        ],
        "User Registration App in for Android App Development": [
          "Introduction to Project",
          "The Application Design - Part 1",
          "The Application Design - Part 2",
          "Adding User to the Realtime Database",
          "Retrieving Data From the Firebase Realtime Database",
          "Showing Retrieved Data on the RcyclerView - Part 1",
          "Showing Retrieved Data on the RcyclerView - Part 2",
          "User Registration App - Updating Data - Part 1",
          "User Registration App - Updating Data - Part 2",
          "User Registration App - Deleting Selected User",
          "User Registration App - Deleting All Users from Database",
          "Quiz; Firebase"
        ],
        "Authentication with Firebase": [
          "Introduction to Authentication",
          "Email and Password Authentication - Part 1",
          "Email and Password Authentication - Part 2",
          "Email and Password Authentication - Part 3",
          "User Remembering with Firebase",
          "Adding Forgot Password Option",
          "Authentication with Phone - Part 1",
          "Authentication with Phone - Part 2",
          "Quiz; Firebase"
        ],
        "Push Notification with Firebase": [
          "Sending Push Notification with Firebase",
          "quiz"
        ],
        "Cloud Storage with Firebase": [
          "Introduction to Cloud Storage",
          "Selecting an Image from the Gallery",
          "Saving the selected image to Cloud Storage",
          "Showing the Image saved to Cloud Storage in Recycler View",
          "Updating the Image saved to Cloud Storage - Part 1",
          "Updating the Image saved to Cloud Storage - Part 2",
          "Deleting an Image We Added to Cloud Storage",
          "Deleting All Images We Added to Cloud Storage at Once",
          "Quiz; Firebase"
        ],
        "Quiz Game Project": [
          "Introduction to Quiz Game App",
          "Splash Screen Part 1",
          "Splash Screen Part 2",
          "Login Page Design Part 1",
          "Login Page Design Part 2",
          "Sign Up Page - Part 1",
          "Sign Up Page - Part 2",
          "Integration with Firebase",
          "Creating an Account with Email and Password",
          "Sign In With Firebase - Part 1",
          "Sign In With Firebase - Part 2",
          "Adding the Forgot Password Option - Part 1",
          "Adding the Forgot Password Option - Part 2",
          "Sign In with Google Account - Part 1",
          "Sign In with Google Account - Part 2",
          "Homepage Design",
          "Questions Page Design - Part 1",
          "Questions Page Design - Part 2",
          "Creating the Database",
          "Showing Questions in App - Part 1",
          "Showing Questions in App - Part 2",
          "Getting User's Answers - Part 1",
          "Getting User's Answers - Part 2",
          "Creating a Timer - Part 1",
          "Creating a Timer - Part 2",
          "Saving User's Score to the Database",
          "Creating Dialog Message",
          "Preparing the Results - Page Part 1",
          "Preparing the Results Page - Part 2",
          "Showing a Certain of Questions to the User",
          "quiz"
        ],
        "Extra": [
          "Firebase: Firebase for Android App Development using Kotlin"
        ]
      },
      "requirements": [
        "This course is based on Kotlin programming language. If you have basic understanding on Kotlin programming then it will be a fun to learn Android application development.",
        "Desire to learn about Firebase for Android App Development using Kotlin and Flutter programming languageuage",
        "Basic information about Android Development, mobile app development",
        "If you have basic Android and Kotlin knowledge and want to learn the advanced levels of Android, this course is for you",
        "After completing this Firebase tutorial you will find yourself at an advanced level of expertise in Android Development with Firebase.",
        "Basic understanding on Android Studio",
        "Watching the Android course videos completely, to the end and in order."
      ],
      "description": "Hi there,\nWelcome to \" Firebase: Firebase for Android App Development using Kotlin \" course.\nFirebase Android in details using Kotlin for android app development, mobile app development, flutter android developers\n\nFirebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011. In 2014, Google acquired the platform and it is now their flagship offering for app development. flutter, firebase, flutter firebase, firebase android, react firebase, firestore, android firebase, kotlin, android app development, android, android development, mobile app development\nFirebase is a Google-backed application development software that enables developers to develop iOS, Android and Web apps.\nFirebase provides tools for tracking analytics, reporting and fixing app crashes, creating marketing and product experiment.\nThe Firebase Realtime Database lets you build rich, collaborative applications by allowing secure access to the database directly from client-side code.\nAndroid tablets and phones are very popular, and apps created for this operating system can reach a large audience. Whether you are interested in a career in mobile app development or looking to develop a game or app of your own design independently, let our top rated instructors on Oak Academy help prepare you with an Android development course.\nAndroid is a prevalent mobile operating system in the smartphone and tablet markets. It is used for games, business apps, and many other types of products for mobile devices. A growing number of companies are developing for the Android user market. As a result, the industry is seeing a greater need for Android developers. This Android development course can get you started on this path or sharpen your existing skills in the field.\nKotlin is a very new and up-to-date programming language. Kotlin android is accepted by Google as the official language for Android development. Therefore, it is a language that everyone who wants to be an android developer should know. In this course, we teach the Kotlin programming language from beginner to advanced level, considering the importance of Kotlin.\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, Oak Academy has a top-rated course to help you achieve your goals.\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\n\n\nDo you want to improve your career options by learning firebase?\nDo you want to learn android app development using Kotlin?\nDo you want to learn android development with Firebase?\nDo you want to be an android studio master?\nDo you want to build your first app in Firebase?\nIf your answer is “yes”, you are at the right place!\n\nIn this course, we explain in detail the Firebase platform, which android developers must know. In our course, we explain what you need to know about Firebase in an understandable way by using the Kotlin programming language and Android Studio.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nKotlin is a statically-typed, general-purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled into JavaScript source code.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses a .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\nObject-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real-world objects into software modules called classes. Consider a simple point of sale system that keeps a record of products purchased from wholesale dealers and the products sold to the customer. An object-oriented language would implement these requirements by creating a Product class, a customer class, a Dealer class, and an Order class. All of these classes would interact together to deliver the required functionality where each class would be concerned with storing its own data and performing its own functions. This is the basic idea of object-oriented programming or also called OOP.\nThis course is built to help beginners to start making applications in firebase and android application development or android app design.\nIf you want to develop yourself in Android Apps using Kotlin in the Firebase platform, this course is for you. Improve yourself with this course.\n\nWhat is Firebase and how it works?\nThe Firebase Realtime Database lets you build rich, collaborative applications by allowing secure access to the database directly from client-side code. Data is persisted locally, and even while offline, realtime events continue to fire, giving the end user a responsive experience.\nWhat is Firebase used for in Android?\nFirebase is a mobile platform that helps you quickly develop high-quality apps, grow your user base, and earn more money. Firebase is made up of complementary features that you can mix-and-match to fit your needs, with Google Analytics for Firebase at the core.\nIs Firebase a server or database?\nThe Firebase Realtime Database is a cloud-hosted NoSQL database that lets you store and sync data between your users in realtime. NEW: Cloud Firestore enables you to store, sync and query app data at global scale.\nHow data is stored in Firebase?\nFirebase Realtime Database is a NoSQL cloud database that is used to store and sync the data. The data from the database can be synced at a time across all the clients such as android, web as well as IOS. The data in the database is stored in the JSON format and it updates in real-time with every connected client.\nWhen should I use Firebase?\nWhen your applications require a minimal level of integration with legacy systems or third-party services, firebase will be the right choice. Firebase also becomes an ideal choice when your application does not require heavy data processing or any form of complex user authentication requirements.\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\n\n\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nWhat skills do I need to be an Android Developer?\nAn Android developer works with the Android SDK (software development kit) and the Android operating system. They will need to understand the Android SDK, different versions of Android, and how these two things interact. An Android developer may need to know Java, Kotlin, C++, or all three languages and will need to understand the basics of SQL and XML. Java and Kotlin are programming languages used with Android, while SQL is used for database work, and XML is used for markup. Android developers should generally be competent programmers who understand both back-end and front-end development, emphasizing back-end or full-stack engineering. In terms of front-end knowledge, they should know the basics of UI (user interfaces) and UX (user experience). Android developers may work alone or in teams and may also need knowledge of project management strategies such as Agile.\nWhat is Android SDK and why is it important?\nAndroid SDK refers to the Android Software Development Kit. The Android SDK is a collection of tools that have been released and supported for the express purpose of creating Android software. Through the Android SDK, programmers can collect, create, and manage their code. It is a comprehensive development environment that is well-supported, not only by the Android team but also by its community. However, the Android SDK isn’t the only development environment available for Android technology. There are numerous solutions that will port programs out to the Android OS and Android-specific solutions such as Android Studio. Developers who are new to Android development will often start with the Android SDK, but they may decide that a different solution is ideal for them in the future. Android developers should have some experience with the Android SDK because it does have the largest market share.\nWhat does it mean that Python is object-oriented?\nPython is a multi-paradigm language, which means that it supports many programming approaches. Along with procedural and functional programming styles, Python also supports the object-oriented style of programming. In object-oriented programming, a developer completes a programming project by creating Python objects in code that represent objects in the actual world. These objects can contain both the data and functionality of the real-world object. To generate an object in Python you need a class. You can think of a class as a template. You create the template once, and then use the template to create as many objects as you need. Python classes have been attributed to represent data and methods that add functionality. A class representing a car may have attributes like color, speed, and seats and methods like driving, steering, and stopping. The concept of combining data with functionality in an object is called encapsulation, a core concept in the object-oriented programming paradigm.\n\n\nIn this course you will learn;\nFirebase\nFirebase Real-Time Database\nFirebase Authentication\nFirebase Cloud Storage\nFirebase – Android Studio Integration\nCRUD(Create-Read-Update-Delete) Operations with Firebase\nAll Product offered by Firebase\nCreating a New Project in Android Studio\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nAndroid 12\nAndroid App Development\nAndroid kotlin\nKotlin Android\nAndroid Java\nAndroid Development\nAndroid Jetpack\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the Firebase: Firebase for Android App Development using Kotlin course!",
      "target_audience": [
        "If you are planning a career as an Android Application Developer and want to find a job in software companies in this field, this course will be an excellent choice for you",
        "If you have basic Android knowledge and want to learn the advanced levels of Android, this course is for you.",
        "If you learn the android app development with Kotlin using Firebase, this course will be an excellent choice for you",
        "Those who want to improve android, Kotlin and firebase knowledge",
        "Those who want to develop an Android mobile application.",
        "Those who want to learn Firebase Products such as Authentication, Real-Time Database, cloud storage and much more.",
        "Those who want to develop applications using the Kotlin programming language and Firebase.",
        "Anyone who wants to become an Android Developer"
      ]
    },
    {
      "title": "Android SQLite Programming for Beginners",
      "url": "https://www.udemy.com/course/android-sqlite-programming-for-beginners/",
      "bio": "Build real world Android Apps with SQLite in Android Studio and Java. Brush-up your SQL knowledge.",
      "objectives": [
        "You’ll be able to understand and create your first CRUD app with confidence.",
        "You’ll be able to brush-up your SQL knowledge.",
        "You’ll be able to use a pre-created database file in an app."
      ],
      "course_content": {
        "Introduction to Android SQLite Programming for Beginners": [
          "A brief overview of SQLite Database",
          "Important Update: Must read before you proceed!",
          "Source Code"
        ],
        "Using SQLite Database with Android": [
          "Create the SQLite Database Project",
          "Basic CRUD operations",
          "Continuing Basic CRUD operations",
          "Writing basic SQL queries using DB Browser for SQLite",
          "Using a Pre-Created Database"
        ],
        "ListView with SQLite Database": [
          "Working with ListView in Android Studio",
          "ListView with Image in Android Studio",
          "Open URL on ListView Item Click in Android Studio",
          "A simple way to Populate ListView from SQLite Database",
          "Update ListView Item in Android Studio with SQLite Database",
          "Delete ListView Item in Android Studio with SQLite Database"
        ],
        "RecyclerView with SQLite Database": [
          "Working with RecyclerView in Android Studio",
          "Populate RecyclerView from SQLite Database in Android Studio"
        ],
        "Android + SQLite - Build a Dictionary App": [
          "Create the project and copy the database file",
          "Create an Activity to show the records in RecyclerView",
          "Create the DatabaseAdapter responsible for managing the database operations",
          "Create Adapter for RecyclerView to show records from database to RecyclerView",
          "Create an Activity to display, edit or delete a record from database",
          "Implement edit and delete functionality",
          "Implement four top features: Reset, Add new record, Rate app and Share app"
        ],
        "Course Wrap-Up": [
          "Bye for now",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "We'll be using Java, and since it's an OOP language, it's truly important to learn OOP fundamentals first. One of my courses titled \"Object Oriented Programming Fundamentals\" teaches that. Note that, it does not teach Java specifically. But it's important to learn that first to be able to work with Java, Kotlin, C++, Python, C# or any other OOP based languages.",
        "You should have Android Studio installed.",
        "You should have a basic programming knowledge like variables, if-else, loops, methods.",
        "We'll be using DB Browser for SQLite software as SQLite editor / SQLite manager."
      ],
      "description": "Welcome to the Android SQLite Programming for Beginners course where you’ll learn to create database-driven apps step-by-step with Android & SQLite. My name is Sandip and I’ll be leading you through the course.\n******* Some Amazing Reviews From Our Learners *******\n★★★★★ The Course is Very Help full and Thanks to Udemy to made that ...\n★★★★★ I would have liked to see a little more with using returned values from the database instead of just displaying them. But all in all a very good course, thank you!! A++\n★★★★★ Good Job Sandeep. super explanation. Even though I have completed only 40% this course and I feel this course will be best fit for beginner. Cheer.\n******* Course Overview *******\nI began my career as a Database Programmer and have created many database-driven web apps over the last 12 years. I’ve also published a few database-driven Android apps on Google Play. So, I happen to know about SQLite database programming and in this Android SQLite tutorial, I’ll show you exactly how to create a\n1) Simple CRUD (CREATE, READ, UPDATE, DELETE) app using Android Studio and Java.\n2) Work with ListView and RecyclerView with SQLite, and\n3) Build a complete Dictionary App in Android Studio using SQLite\nI designed this course for anyone seeking to develop their first database app. By the end of the course, you’ll be able to understand and create your first app with SQLite, with confidence. You’ll be able to brush up on your SQL knowledge. I have covered:\n- Overview of SQLite Database\n- How to create a project in Android Studio\n- How to program a basic CRUD app with search functionality\n- Brush up the basic SQL queries using DB Browser for SQLite\n- How to use a pre-created Database file in an app\n- How to work with ListView and RecyclerView with SQLite\n- How to build a complete Dictionary app from scratch using SQLite\nThe ideal student for this course is a beginner android developer who wants to expand on their current skills. Feel free to take a look through the sample videos and I look forward to seeing you inside.",
      "target_audience": [
        "Beginner android developer who wants to expand on their current skills."
      ]
    },
    {
      "title": "Full Stack React Native: Advanced & Practical Projects",
      "url": "https://www.udemy.com/course/full-stack-react-native-advanced-practical-projects-j/",
      "bio": "Unlock the Power of MERN Stack: React Native, Redux, Node.js, Express, Socket IO, MongoDB, Mailtrap & Cloudinary.",
      "objectives": [
        "Mastering React Native fundamentals and advanced techniques.",
        "Implementing Redux for efficient state management in React Native applications.",
        "Building robust APIs with Node js and Express.",
        "Integrating real-time communication features using Socket IO",
        "Leveraging MongoDB for database storage and management.",
        "Understanding and implementing authentication and authorization mechanisms.",
        "Optimizing media management with Cloudinary integration.",
        "Utilizing Mailtrap for email testing and debugging purposes.",
        "Deploying full stack applications to production environments.",
        "Enhancing development workflow and productivity with best practices and industry-standard tools."
      ],
      "course_content": {},
      "requirements": [
        "You should be comfortable working with JavaScript",
        "You should know the basics of React JS"
      ],
      "description": "Are you a hands-on learner who thrives on practical application? If so, you're in the right place! Join us on an immersive journey as we construct a cutting-edge Full Stack Node.js and React Native Application, expertly divided into two comprehensive sections. We'll start by diving deep into the intricacies of APIs, equipping you with the knowledge and skills needed to construct a robust backend API from scratch. Harness the power of Node.js, Express, MongoDB, Cloudinary, Mailtrap, TypeScript, and an array of other essential tools, including yup and luxon.\nGet ready to create a suite of top-tier features that will elevate your application to new heights, including:\n\n\nEstablishing a Refresh Token Authentication System to ensure secure user authentication.\nImplementing Email Verification and Password Recovery mechanisms for enhanced account security.\nCrafting various Routes and Methods to facilitate seamless interaction with your API.\nAdding, Updating, Reading, and Removing Products with ease, empowering users to manage their inventory effortlessly.\nExploring advanced TypeScript concepts to enhance code clarity, maintainability, and scalability.\nFine-tuning Project Management skills to ensure efficient development and deployment processes.\nEnabling Real-time Communication through Socket IO, fostering dynamic interactions between users in your application.\nImplementing robust Data Validation techniques to maintain data integrity and enhance user experience.\n\n\nBut that's just the beginning! Our journey doesn't end with backend development. Once the API is up and running, we'll seamlessly transition to frontend development, where we'll craft a sleek and intuitive React Native App that operates seamlessly on both Android and iOS platforms. Whether you're a newcomer to React Native app development or a seasoned pro, you'll uncover a treasure trove of advanced techniques and insights that will take your skills to the next level.\n\n\nEach feature we build will be accompanied by an intuitive and user-friendly UI, ensuring that users can effortlessly access and interact with all the functionalities our app has to offer.\n\n\nWith a hands-on approach and a focus on practical application, this course is designed to equip you with the skills and knowledge you need to succeed in the fast-paced world of full stack development. Enroll now and take the first step towards mastering Full Stack Node.js and React Native development!",
      "target_audience": [
        "Aspiring Full Stack Developers: If you're eager to master both frontend and backend development and become a proficient full stack developer, this course is tailor-made for you.",
        "React Native Enthusiasts: Whether you're a beginner or an experienced React Native developer looking to expand your skill set, this course will provide you with valuable insights and advanced techniques.",
        "Node js Developers: If you're familiar with Node js and want to explore how to integrate it with React Native for full stack development, this course will deepen your understanding and broaden your expertise.",
        "Backend Developers: For developers who primarily focus on backend development and want to learn how to build robust APIs using Node js, Express, and MongoDB, this course offers a comprehensive introduction to frontend development with React Native."
      ]
    },
    {
      "title": "Microsoft Excel Masterclass: Excel from Beginner to Pro",
      "url": "https://www.udemy.com/course/microsoft-excel-masterclass-excel-from-beginner-to-pro/",
      "bio": "Latest Microsoft Excel course that teaches basics to Advanced Excel | Learn Excel Pivot Tables, Formulas, Charts & Graph",
      "objectives": [
        "You will be more efficient in Excel and learn from very basics of excel to all Advanced Topics",
        "You can write \"Proficient in Excel\" on your resume and you will be more confident at work",
        "Stop waste time trying to figure things out in your spreadsheets and then stop spend hours Googling what to do",
        "This course saves HOURS at work which allow you to do more of what you love in life!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Excel 101 Fundamentals of Excel",
          "Spreadsheet Shuffle in Excel",
          "Anatomy of a Function in Excel",
          "Meet the Ribbon"
        ],
        "Working with Excel's Data Cleaning": [
          "Intro to Data Cleaning in Excel",
          "Left and Right and Flash Fill in Excel",
          "Find and Replace Color Replace Trick in Excel",
          "Text to Columns Tool in Excel",
          "IFERROR Function in Excel",
          "Remove Duplicates in Excel",
          "Randomize Cells in Excel",
          "Delete Blanks in Excel",
          "SORT & UNIQUE Functions in Excel",
          "TRANSPOSE Function in Excel",
          "Rounding in Excel"
        ]
      },
      "requirements": [
        "You will learn from very basics of Excel to Advanced- You do not need to have any prior knowledge in Microsoft Excel"
      ],
      "description": "The Complete Microsoft Excel Course is perfect for beginner to Advanced level Excel users . By the end of the course, you will be confidently utilizing all lookup functions, building powerful pivot tables and easily automating tasks. You will also become shortcut savvy and put that pesky mouse to rest! This course starts with absolutely basics and takes to Advance level in Excel.\n\n\nWhat will you learn?\n\n\nLearn latest Excel from Basics to Advanced Level\nLearn Basic to Advanced formulas and functions for Data analysis\nMaster Excel Pivot Tables for data analysis\nLearn Excel Charts & Graphs for Data Visualization\nLearn Advanced uses of lookup Functions\nMaster Task Automation with VBA Macros\nBe able to Secure your dream job offer because of your impressive Excel skills\nThis course saves you HOURS at work allowing you to do more of what you love in life!\nEvery topic is made easy so that You will learn quite easily\nLearn 80+ Excel Spreadsheet formulas for business Intelligence and Data Analysis\nBe able to create your own functions\nLearn Financial Modeling tools\nHave 12 Sections and each one focus on specific topic to master\nYou can write \"Proficient in Excel\" on your resume and you will be more confident at work\nHave hands-On Projects that can give the real time knowledge so that You can be more confident in work\nBuild Advanced dynamic tools & Excel dashboards to filter, display and analyze your data\nCreate your own formula-based Excel formatting rules and XLOOKUP, INDEX & MATCH functions",
      "target_audience": [
        "If you want to learn the complete Microsoft Excel from basics to Advanced Excel for Data Analysis , This course is perfect for you!"
      ]
    },
    {
      "title": "Create a Photo Sharing iOS app with Firebase and Swift 4",
      "url": "https://www.udemy.com/course/create-a-photo-sharing-ios-app-with-firebase-and-swift-4/",
      "bio": "An advanced course from intermediate to expert",
      "objectives": [
        "Finishing a big project, learning app development best practices"
      ],
      "course_content": {
        "Create a new project and add Firebase and Facebook login": [
          "Creating a Firebase project and add to new iOS project",
          "Adding Facebook login to our app",
          "Test users and logging in to Firebase with Facebook credential",
          "Refactoring Firebase calls and setting up a login flow",
          "Recap and adding logout functionality"
        ],
        "Searching and inviting friends and accepting invitations": [
          "Setting up screens",
          "Adding a search bar on the Friends screen",
          "Search results part 1.",
          "Search results part 2",
          "Inviting friends",
          "Display invitations and friends",
          "Accepting invitations"
        ],
        "Creating and viewing posts and add to the timeline": [
          "Creating posts",
          "Creating the UI for displaying posts",
          "Making the Firebase call and finish the posts screen",
          "A generic method for inserting and sorting posts",
          "Making the UI for the timeline",
          "Loading and displaying posts on the timeline",
          "Making the UI for a post detail screen",
          "Creating and loading comments",
          "Autolayout fix"
        ],
        "Bonus: Sending notifications with Firebase Cloud Messaging": [
          "Setting up for remote notifications",
          "Firebase Functions"
        ]
      },
      "requirements": [
        "For intermediate users of Xcode and Swift"
      ],
      "description": "Welcome to this advanced course in Swift 4 and Firebase. In this course we will create a social photo sharing app that features a timeline with posts, inviting friends and accepting invitations, commenting on posts and sending push notifications with Firebase functions. This is an advanced course that requires intermediate knowledge of the Swift language and Xcode.",
      "target_audience": [
        "App developers that want to raise their level of professionality"
      ]
    },
    {
      "title": "iOS Development for Android Developers",
      "url": "https://www.udemy.com/course/ios-for-android/",
      "bio": "Learn how to develop iOS 9 applications with Swift 2.2 using your Android & Java skills",
      "objectives": [
        "Develop iOS mobile apps with Swift"
      ],
      "course_content": {
        "Fundamentals of Swift 2.2": [
          "1-1: Types, Variables and Constants",
          "1-2: Optionals",
          "1-3: Collections",
          "1-4: Functions",
          "1-5: Control Flow",
          "1-6: Classes & Structures",
          "1-7: Chapter Project - SwiftBank"
        ],
        "Basics of iOS 9 Development": [
          "2-1: Chapter Project Demo & Overview",
          "2-2: Project Structure",
          "2-3: Introduction to CoreData",
          "2-4: Introduction to ViewControllers",
          "2-5: Table Views & Protocol-Oriented Programming",
          "2-6: AutoLayout",
          "2-7: StackView",
          "2-8: Segues & Navigation",
          "2-9: Designing The New Book View Controller - Part 1",
          "2-10: Designing The New Book View Controller - Part 2",
          "2-11: Class Extensions",
          "2-12: Networking Basics",
          "2-13: Posting to UI Thread",
          "2-14: UI Modifications",
          "2-15: Saving & Fetching Data from CoreData",
          "2-16: Removing Elements from CoreData",
          "2-17: Segues In-Depth",
          "2-18: Designing the Book Detail View Controller",
          "2-19: Passing Data Between Controllers",
          "2-20: Displaying Web Pages with Safari View Controller",
          "2-21: Conclusion & Wrap Up"
        ],
        "Advanced iOS Development": [
          "3-1: Introduction & Overview of The Chapter Project",
          "3-2: Introduction to CocoaPods",
          "3-3: Organize Project Hierarchy with Synx",
          "3-4: Designing The View Controllers",
          "3-5: Easy Networking with Alamofire and SwiftyJSON",
          "3-6: Playing YouTube Videos with YouTube Player Helper",
          "3-7: Synx & Conclusion"
        ]
      },
      "requirements": [
        "The viewer should have a basic understanding of Java and Android SDK"
      ],
      "description": "iOS Development for Android Developers provides a through introduction to iOS app development using the wildly popular Swift programming language. With almost 7.5 hours of engaging video lectures and all the project files used in the videos, this course is designed to take students with no experience in Swift and little experience in Android to accomplished and COMPLETE mobile app developers.\n\nWhy Swift? Since its introduction, Swift has rapidly taken its place as the successor of Objective-C for apps development. Its syntax is easy to read and understand. Its a modern programming language that supports closures, type inference, protocols, class extensions, and so much more. It is 2.6x times faster than Objective-C and 8.4x faster than Python 2.7!\n\nSome of the top-rated iOS apps using Swift are LinkedIn, Strava, Yahoo Weather, Clear, Lyft, Khan Academy, Omvana and much more. iOS developers with strong knowledge in Swift command some of the highest salaries in the development world and are in high demand.\nThis course takes a very structured approach of teaching Swift. Everything from \"Hello World\" to Protocol-Oriented Programming is covered. Students acquire skills rapidly through a deep-dive in the world of Swift and iOS development with three chapter projects.\nAll the projects are done from scratch, limiting the use of shortcuts so students can understand what's really going on under the hood of Swift applications and can design them the way they want. Then with solid knowledge and understanding already in place, rapid prototyping methods are introduced in later parts of the course through the use of CocoaPods; a dependency manager very similar to Gradle dependency manager in Android development that allows the use of external libraries, called Pods, which streamlines the process of rapid development in a professional environment.\nSome key features of this course are:\n35 lectures and 7+ hours of video content\nSwift 2.2 programming from writing your first program to say \"Hello World\" to Protocol-Oriented Programming while building multiple chapter projects along the way\niOS 9 Development using Xcode 7 IDE which takes the student through the principles of UI development and then teaching some advanced techniques to streamline the process.\niOS MVC structure in-depth - Models, Views, Controllers\nHow to persist your app's data using CoreData\nNetworking & Concurrency\nWorkspace management with Synx\nBetter networking with Alamofire CocoaPod\nSwifty parsing of JSON files using SwiftyJSON\nmuch, much more!\nBy the end of this course, you will:\nLearn a new language and increase your value\nUnderstand and transfer knowledge from Android to iOS development\nBecome a Complete Mobile App Developer\nDevelop a library app with a catchy UI that persists data and handles networking requests\nDevelop a sleek YouTube player app that parses a JSON request gracefully, handles concurrency with REST API requests, and plays your favourite YouTube videos without leaving your app.",
      "target_audience": [
        "This course is meant for Android mobile developers who wants to extend their skills to include iOS development with Swift"
      ]
    },
    {
      "title": "Flutterflow App Development (Expert Course)",
      "url": "https://www.udemy.com/course/welove-flutterflow-course/",
      "bio": "Build Powerful Mobile Apps Effortlessly. UI Design, Database Connectivity, Authentication, Payment Integration",
      "objectives": [
        "Gain a solid foundation in FlutterFlow: Students will become proficient in using FlutterFlow, starting with an introduction to the platform and understanding it",
        "Develop social media app functionalities: Students will learn how to create a social media app using FlutterFlow.",
        "Build a booking app: Students will delve into the creation of a booking app with FlutterFlow.",
        "Construct a marketplace app: Students will understand the application structure required for a marketplace app and learn how to implement key features.",
        "Explore CRM functionalities: Students will gain an understanding of Customer Relationship Management (CRM) and its significance in business operations."
      ],
      "course_content": {
        "Module 1: Introduction to Flutterflow": [
          "FLutterFlow - Pricing",
          "FLutterFlow-Project List",
          "FLutterFlow -Vercions and Canvas",
          "FLutterFlow - Commands and Shortcuts",
          "FLutterFlow - Project History",
          "FLutterFlow - Issues",
          "FLutterFlow - Project Comments",
          "FLutterFlow - Developer Menu",
          "FLutterFlow - Share Project",
          "FLutterFlow - Preview, Test, Run Build",
          "FLutterFlow - UI Builder",
          "FLutterFlow - Widget Tree",
          "FLutterFlow - Page Selector",
          "FLutterFlow - Firestore Review",
          "FLutterFlow - Local/App State",
          "FLutterFlow - API review",
          "FLutterFlow - Media Assets",
          "FLutterFlow - Custom code review"
        ],
        "Module 2: Main Part": [
          "FlutterFlow - Setup FlutterFlow Project",
          "FlutterFlow - Onboarding Page",
          "FlutterFlow - SignIn/ SIgnUp Logic",
          "FlutterFlow - Update Auth User",
          "FlutterFlow - Find Couples Page",
          "FlutterFlow - Component +Animation",
          "FlutterFlow - Passing Parameters",
          "FlutterFlow - Adding More Info",
          "Home work",
          "FlutterFlow - Creating a New Item",
          "FlutterFlow - User Detail Page",
          "FlutterFlow - Stripe Payment",
          "FlutterFlow - Location Detail Page",
          "FlutterFlow - In-App Subscriptions Using RevenueCat and FlutterFlow (Android)",
          "FlutterFlow - In-App Subscriptions Using RevenueCat and FlutterFlow (Apple)",
          "FlutterFlow - Connect with RevenueCat",
          "FlutterFlow - Adding a chat",
          "FlutterFlow -Action Output Variable",
          "FlutterFlow - Edit Information + IF/Else/Then",
          "FlutterFlow - Firebase Setup",
          "FlutterFlow - Deploy to App Store",
          "FlutterFlow - Deploy to Play Market",
          "Extra Lesson"
        ]
      },
      "requirements": [
        "This course is designed for both beginners and intermediate learners, and no prior experience with FlutterFlow or app development is required. However, having a basic understanding of programming concepts and familiarity with mobile app usage would be beneficial. To fully engage in the course, students should have access to the following: Computer/laptop: A device capable of running FlutterFlow and accessing the internet. Internet connection: Stable internet access is necessary for accessing course materials, video tutorials, and online resources. FlutterFlow account: Students will need to create a FlutterFlow account, which can be done for free, to follow along with the lessons and complete the practical exercises."
      ],
      "description": "Welcome to the \"FlutterFlow App Development\" course! In this comprehensive and hands-on course, you will learn how to build stunning mobile applications using FlutterFlow, a powerful visual development tool. Whether you're a beginner or an experienced developer, this course will equip you with the skills and knowledge to create professional-grade apps without writing code.\nThroughout the course, you will dive deep into FlutterFlow and explore its various features and functionalities. Starting with the basics, you will learn how to navigate the FlutterFlow interface, utilize essential components like columns, rows, and containers, and implement interactive features such as text fields and navigation elements.\nAs you progress, you will build real-world applications in different domains, including social media, booking, marketplace, and CRM. You will learn how to integrate Firebase for data storage and authentication, connect with external services like Stripe for payments, and implement advanced features such as in-app subscriptions.\nAdditionally, you will gain hands-on experience in customizing app designs, adding animations, and optimizing user experiences. You will also learn best practices for testing, debugging, and deploying your apps to both the App Store and Play Store.\nBy the end of this course, you will have the confidence and skills to create powerful, visually stunning, and fully functional mobile applications using FlutterFlow. Join us on this exciting journey and unlock a world of possibilities in app development!",
      "target_audience": [
        "Novice app developers: This course accommodates beginners who possess limited or no prior experience in app development or coding. It serves as an ideal entry point, delivering a structured learning path that gradually progresses from foundational concepts to more advanced topics. Through systematic instruction, students will acquire a comprehensive understanding of FlutterFlow and cultivate the practical skills necessary to construct their own proficient mobile applications.",
        "Aspiring app developers: Individuals aspiring to establish themselves as proficient mobile app developers will find this course invaluable. By immersing themselves in FlutterFlow, a powerful no-code tool, students gain an in-depth comprehension of the fundamental principles underpinning app development. The course provides a solid platform for future growth and continuous learning within the field.",
        "Entrepreneurs and business owners: Entrepreneurs and business owners seeking to leverage mobile applications for their ventures stand to benefit significantly from this course. It equips them with the knowledge and expertise required to transform their unique business ideas into functional, visually captivating apps. By employing FlutterFlow, these individuals can align their apps with their specific business objectives.",
        "Designers and UI/UX enthusiasts: For individuals with a background in design or a keen interest in user interface (UI) and user experience (UX) design, this course offers a wealth of insight into the design and prototyping of mobile applications using FlutterFlow. Students explore techniques for creating intuitive, engaging app interfaces, without necessitating extensive coding expertise.",
        "Professionals seeking to enhance their skill set: Professionals already employed within the technology industry, or related fields, may find this course instrumental in expanding their skill set. FlutterFlow is rapidly gaining prominence as a rapid app development tool. Consequently, acquiring proficiency in FlutterFlow enhances versatility and imparts a competitive advantage within the industry."
      ]
    },
    {
      "title": "SpriteKit Introduction - iOS Game Development with Swift 3",
      "url": "https://www.udemy.com/course/introduction-to-spritekit/",
      "bio": "Learn how SpriteKit, classes, physics and collision works. Develop during the course a full space-shooter game.",
      "objectives": [
        "You will understand how the Framework SpriteKit work",
        "You will understand how the collision and physics in SpriteKit work",
        "You will develop own Games for iPhone and iPad"
      ],
      "course_content": {
        "Introducation to this course": [
          "Introduction"
        ],
        "How SpriteKit works?": [
          "Structure of SpriteKit",
          "Rendering order of SpriteKit",
          "Positioning in SpriteKit",
          "What is the class SKNode?"
        ],
        "Introduction Physics in SpriteKit": [
          "What are Physics in SpriteKit?",
          "Different physics bodys",
          "The different between collision and contact",
          "Make an own contact to decide what will be happen"
        ],
        "Space Shooter Game": [
          "What we going to develop?",
          "Create a mainmenu",
          "Make a transition from mainmenu to our gamescene",
          "Lets build our gamescene we put a background image in",
          "Animate our spaceship image",
          "Background endless scroll",
          "Spaceship move",
          "Add asteriod to gamescene",
          "Add bullets, make the spaceship to shoot",
          "Add enemyship",
          "Add animation to enemy image",
          "Add backgroundmusic to our game",
          "Turn the music on / off",
          "Give our spaceship some live",
          "Add physics body to game to simulate physics",
          "We give our physics bodys numbers to decide who can interact together",
          "Prepare for the first contact and what is a contact?",
          "Contact between spaceship and enemy",
          "Add a scorelabel to our game and let it grow up when we hit a enemy",
          "The bullets hit the enemy",
          "Gamerover scene we lost our 3 lives",
          "Create a shield for our spaceship",
          "Display shield live",
          "Add physics to our shield to interact with the enemy",
          "Interaction between shield and enemy and the enemy explode",
          "We lost our shield lets shoot at twice"
        ]
      },
      "requirements": [
        "Xcode (min. version 7.0) or later",
        "macOS or OSX"
      ],
      "description": "Lay the foundation for game development on the iPhone and iPad with this course.\n\nWhat is the course about?\n\nIn this course you will learn the the framework SpriteKit. With SpriteKit you can develop your own 2D games for the iPhone und iPad. I going to explain some theory and some practice examples so that you know a lot more about SpriteKit after this course. Also there will also be graphics for better understanding.\n\n\nHow is the course structured?\n\nIn the first section you learn the theory about SpriteKit so you get deeper insight how SpriteKit works. I will show you some graphics for better understanding. At the second Section I will explain how physics in SpriteKit work. It is the most important thing in SpriteKit, if you know how this works you can make collisions between players. In the third section I show you a game from scratch it is ja full space-shooter game. Also I explain during the development what I did and why. There will also be graphics for better understanding.\n\n\nWho should buy this course?\nThis course is for everyone who will develop games for the iPhone and iPad. Maybe you know a little about SpriteKit but you don't understand what you do. So I will teach you how to use SpriteKit and why you have to do this or this. I will at the end that you unterstand what you did. I hate course where you only do copy & paste but understand nothing.\n\n\nBeing able to develop own games does not sound cool?\nSo what are you waiting for :). I am glad to welcome you soon.",
      "target_audience": [
        "For anyone who has first experience with the programming language Swift 3 or later",
        "For anyone who has little knowledge about the Framework SpriteKit, this is helpful but not necessary"
      ]
    },
    {
      "title": "Android Jetpack Compose with Retrofit Room Hilt in Kotlin",
      "url": "https://www.udemy.com/course/android-jetpack-compose-retrofit-room-hilt/",
      "bio": "Develop an app that displays Mars photos with ViewModel and Repositories with dependency injection and Flow coroutines",
      "objectives": [
        "Create an modern Android application with Jetpack Compose in Kotlin",
        "Organize the code with separate layers (ViewModels MVVM, repositories and data layers)",
        "Room database and Retrofit",
        "Understand the basic of Flow and Kotlin coroutine",
        "Start Jetpack composable in a UI tests",
        "Write unit tests",
        "Create animations",
        "Create a theme using Material3 with dark and light modes and custom fonts",
        "Use Hilt for dependency injection (a dagger-based framework)",
        "Create a Bottom Navigation and Navigate between screens"
      ],
      "course_content": {
        "Introduction": [
          "Project introduction",
          "Get NASA Api key (optional)",
          "Basic understanding of Flow Kotlin coroutine",
          "Code organization",
          "Quiz Code organization and Flow coroutine",
          "Android Studio setup"
        ],
        "Basic Compose": [
          "How to use Jetpack Compose",
          "Create basic compose item",
          "Create a basic list",
          "Jetpack Compose Quizz",
          "Outro and how to get the source code"
        ],
        "Compose Navigation": [
          "How to use navigation compose",
          "Create a second screen"
        ],
        "Display a compose list based on a network request": [
          "How to use Retrofit",
          "How to use Hilt",
          "Use Retrofit to get data from a remote server",
          "Display the list in a compose list"
        ],
        "Create a list with image": [
          "Add a third screen in the navigation",
          "Create the network request",
          "Display the list from the network",
          "How to use coil",
          "Use Coil to display the image"
        ],
        "Create a bottom navigation": [
          "How to create a bottom navigation",
          "Create a bottom nav component"
        ],
        "Save data in the application": [
          "How to use Room",
          "Create a database and add data",
          "Display data from the database",
          "Debug database"
        ],
        "Material3 : Update colors and fonts": [
          "How to update colors",
          "Update colors",
          "Update fonts",
          "Create animation for the save icon"
        ],
        "Unit test": [
          "Manifest Convertor Unit Test",
          "Manifest ViewModel Test with mockk and MainCoroutineRule",
          "Manifest Repo Test",
          "Photo List ViewModel Test",
          "Photo Repo Test"
        ],
        "UI test": [
          "Creation the first UI test for the rover list",
          "Create the UI test that will test the manifest list (second screen of the App)",
          "Create the UI test for the photo list (third screen of the App)"
        ]
      },
      "requirements": [
        "Basic knowledge of Kotlin and Android"
      ],
      "description": "During this course, we will develop an Android application that will display photos taken by the rovers on Mars using Android Studio.\n\n\nThis app will use all the latest Jetpack technologies:\nCompose (no more XML)\nHilt (Dagger Dependency Injection Framework)\nRoom (Jetpack component to create a lite database)\nRetrofit (REST client)\nCoroutines and Flow (To create asynchronous tasks and request our database)\n\n\nYou also use ViewModels with Jetpack to use an MVVM Repository architecture.\n\n\nWith this example, you should be able to create an Android App to the industry standard.\n\n\nNavigation with Jetpack Compose could be challenging, so we will create a simple example with 4 screens and a BottomNav to understand it. A Scaffold will be use to create the BottomNav.\n\n\nYour productivity will be improve as Jetpack Compose is easier to write and reuse.\n\n\nYou will improve your knowledge of Kotlin. If you still use Java, this course is an opportunity to learn.\n\n\nCompose is a new way to create a UI on Android. It is more concise and reusable. Therefore, it helps to develop faster Android applications.\n\n\nIn this app we will use Jetpack Compose Components from Materal3:\nCard\nLazyColumn\nColumn\nRow\nAsyncIamge (from the Coil lib to display an image from a server)\nText\nImage\nNavHost (to use navigation)\nNavigationBar\nNavigationBarItem\nBox\nScaffold\nWe will also see how we can use a modifier to define padding.",
      "target_audience": [
        "Android developers who wants to learn Jetpack Compose",
        "Android developers who wants to increase code quality"
      ]
    },
    {
      "title": "Android Services Beginner to Expert",
      "url": "https://www.udemy.com/course/android-services-beginner-to-expert/",
      "bio": "Learn Android Service From Scratch and go from Beginner to Expert",
      "objectives": [
        "Android Services",
        "Android Bound service",
        "Intent Service",
        "Foreground Service",
        "Threading",
        "JobScheduler",
        "Broadcast Receiver",
        "JetPack WorkManager"
      ],
      "course_content": {
        "Introduction": [
          "Android Services overview",
          "Android Service Lifecycle",
          "Create Android Studio Project"
        ],
        "Project File": [
          "Project File"
        ],
        "Android Services": [
          "Create Service",
          "Create Android Virtual Device(AVD)",
          "Manifest Service Option : Enabled and Exported",
          "How to start a Service",
          "How to stop a Service",
          "Generate Random Number",
          "Thread in Android Application",
          "What is Multithreading",
          "Using Thread in Service to Generate Random Number",
          "Stop Random Number Generator",
          "AsyncTask in Android Service",
          "Android Service Return Type",
          "Service Return Type Demo"
        ],
        "Bound service": [
          "Android Bound service",
          "Android Bound Service Demo",
          "BindService Method",
          "Start and Stop Service Button",
          "Bind Service to Main Activity",
          "Return Time from BoundService to Main Activity"
        ],
        "Intent Service": [
          "Intent Service",
          "Create Intent Service",
          "Create and add button UI and method",
          "Start and Stop Intent Service",
          "Running and Fixing Intent Service"
        ],
        "Android JobScheduler": [
          "JobScheduler",
          "JobService",
          "Extending JobService",
          "Create JobScheduler",
          "Implement onStartJob",
          "Fix Bind Job Service Permission"
        ],
        "Broadcast Receiver": [
          "Broadcast Receiver",
          "Create and register BroadcastReceiver",
          "Run Service After Device Reboot"
        ],
        "Android JetPack WorkManager": [
          "JetPack WorkManager",
          "Schedule tasks with WorkManager",
          "Create Schedule tasks with WorkManager",
          "Run Schedule tasks with WorkManager"
        ],
        "Android Foreground Service": [
          "Foreground Service",
          "Create Foreground Service Notification",
          "Running and Fixing Foreground Service",
          "Stop Foreground Service"
        ],
        "Restart The Service After App is Killed": [
          "onTaskRemoved use START REDELIVER INTENT",
          "onTaskRemoved Restart The Service"
        ]
      },
      "requirements": [
        "Basic Java Programming",
        "Basic Of Android Studio",
        "Basic Android App development"
      ],
      "description": "In this course you will learn about android services. We will be learning everything from scratch about android services . We will build a app that will be using services to perform certain tasks. By the end of this course you be be familiar with android services  and will be able to implement  services in  your different android project",
      "target_audience": [
        "Beginner Android Developer",
        "Android Developer"
      ]
    },
    {
      "title": "Learn to Build a Professional App in Android",
      "url": "https://www.udemy.com/course/learn-to-build-a-professional-app-in-android/",
      "bio": "A Hands on Approach to Android App Development for Professionals",
      "objectives": [
        "Learn Professional Android App Development",
        "Understand the product development lifecylcle",
        "Master the use of Parse API",
        "Create a step by step Photo sharing App"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project - Setup": [
          "Setting Up Parse"
        ],
        "Parse Classes": [
          "Creating Parse Classes, Butterknife"
        ],
        "Adding Functionality": [
          "Taking photos"
        ],
        "Hooking Up Facebook SD": [
          "Hooking Up the Facebook SD - Setup",
          "Hooking Up the Facebook SD - Final Steps"
        ],
        "Viewing Photos": [
          "Viewing Photos"
        ],
        "List Views": [
          "Viewing_photos_list_view - Basics",
          "Viewing_photos_list_view - Final Steps"
        ],
        "Code Progression": [
          "Code Overview"
        ],
        "Implementing Sending Photos": [
          "Sending Photos Basics",
          "Sending Photos Final Implementation"
        ],
        "Push Notifications": [
          "Sending Push Notifications"
        ]
      },
      "requirements": [
        "Basic knowledge of java and Android"
      ],
      "description": "If you’ve ever wanted to take your Android development skills to the next level and create apps with commercial value, this course is for you. Build a Commercial Android App Like a Pro is designed for developers who already have a foundational knowledge of Android programming and are ready to apply their skills to build real-world products. This course is concise, no-nonsense, and packed with practical insights that will challenge and refine your abilities as a programmer. By the end of the course, you’ll not only be a better developer but also have a polished app to showcase your skills.\nWhat Makes This Course Unique?\nThis course takes a hands-on, project-based approach to learning. Instead of abstract concepts, you’ll work on building a fully functional photo-sharing app from the ground up. Each module is designed to simulate real-world app development, ensuring that you’re prepared to tackle similar challenges in professional environments. To succeed, you’ll need focus, persistence, and a willingness to push through challenges—but the rewards will be worth it.\nWhat You’ll Learn\nProfessional Android Setup\nStart with a strong foundation by setting up your development environment like a pro. Learn how to configure Android Studio, manage dependencies, and organize your project for efficiency.\nClass Design and Logic Flow\nDive into designing clean, modular code. You’ll learn how to structure your app’s architecture for scalability and maintainability, ensuring that your codebase is easy to expand and debug.\nIncremental App Development\nMaster the art of breaking down large tasks into manageable steps. Build your app incrementally, testing and refining each feature as you go, to ensure a seamless and bug-free user experience.\nUsing External APIs\nDiscover how to integrate third-party APIs to enhance your app’s functionality. You’ll work with APIs to fetch, process, and display data dynamically, giving your app real-world utility.\nCode Review and Version Control\nLearn industry-standard practices for reviewing and managing your code. Get hands-on experience with Git and version control tools, enabling you to collaborate effectively and track changes in your project.\nCode Cleanup and Debugging\nRefine your app by identifying and fixing bugs, optimizing performance, and cleaning up your code. You’ll gain the skills to deliver a polished, professional product.\nAdditional Perks\nBy enrolling in this course, you’ll gain access to royalty-free source code, allowing you to reuse and modify the app for your own projects. Whether you want to showcase your work to potential employers, kickstart a freelance career, or launch your own app, this course will provide you with a strong starting point.\nWhy Take This Course?\nThis is more than just a course—it’s a stepping stone to building commercial-grade Android apps. You’ll learn best practices, improve your coding habits, and gain the confidence to create high-quality apps that stand out in the competitive market.\nIf you’re ready to roll up your sleeves and transform your Android skills into real-world expertise, enroll today. Gear up, dive in, and start building!",
      "target_audience": [
        "Students with basic knowledge of Android who want to learn professional app development"
      ]
    },
    {
      "title": "Build 64 iOS9 projects in Swift. Build 50 apps and 14 games!",
      "url": "https://www.udemy.com/course/build-64-ios9-projects-in-swift-build-50-apps-and-14-games/",
      "bio": "Learn to build career changing apps from scratch. Start your mobile development career today!",
      "objectives": [
        "Code in Swift",
        "Have projects they can add to their resume",
        "Code in SpriteKit",
        "Build apps from scratch",
        "Build games from scratch",
        "Upload to the app store"
      ],
      "course_content": {
        "Let's learn about Swift!": [
          "Introduction",
          "02. Course Requirements",
          "03. Talking about Xcode projects",
          "04. Setting up the Xcode environment",
          "05. Adding items to the main story board",
          "06. Hooking up the swift file",
          "07. Using the swift file",
          "08. Changing the button text",
          "09. Adding in functions",
          "10. Variables",
          "11. If Statements",
          "12. Multiple condition if statements",
          "13. Else if statements",
          "14. Printing a user selected number",
          "15. Apple UI and interactivity",
          "16. Course conclusion"
        ],
        "04. Make a letter counting app with arrays for iOS9": [
          "01. Introduction to the name changing app",
          "02. Designing the app",
          "03. Hooking up the swift code",
          "04. Adding functions to the app",
          "05. Enterting the name data",
          "06. Making the app count the characters",
          "07. Putting the characters into an array",
          "08. Adding in the clear button functionality",
          "09. Hiding the keyboard",
          "10. Designing the app",
          "11. Challenge - Make a 4 box character counting app"
        ],
        "05. Reversing words app for iOS9": [
          "01. Introduction to the word reverser",
          "02. Designing the app",
          "03 Hooking up the actions and the outlets",
          "04. Adding in functions to the app",
          "05. Setting up variables",
          "06. Setting up the user input and testing the app",
          "07. Reversing the characters",
          "08. Talking about user experience and code",
          "09. Designing the app and adding the clear function",
          "10. Hiding the keyboard",
          "11. Challenge - Count the characters of the reversed word"
        ],
        "06. Inspirational Quote App for iOS9": [
          "01. Introduction to the motivational quote app",
          "02. Designing the app",
          "03 Hooking up the Swift File",
          "04. Setting up the variables and the arrays",
          "05. Adding in the function to the app",
          "06. Printing the variable",
          "07. Selecting the random number",
          "08. Changing the button Text",
          "09. Adding in checking logic",
          "10. Designing the app",
          "11. Challenge - Add another array item box to the project"
        ],
        "07. Making an innovative calculator for iOS9": [
          "01. Introduction to the innovative calculator",
          "02. Talking about the main storyboard",
          "03. Adding in the other views",
          "04. Changing the names of the tabs",
          "05. Changing the colors of the slides",
          "06. Designing the first page",
          "07. Designing the first page for productivity",
          "08. Copying the items to the other view controller",
          "09. Setting up the outlets",
          "10. Hooking up the swift file",
          "11. Adding in the addition variables",
          "12. Taking in the user data",
          "13. Adding in the calculation and printing the answer",
          "14. Adding in the clear Button",
          "15. Hiding the keyboard",
          "16. Adding in the multiplication tab",
          "17. Setting up the division page",
          "18. Setting up the subtraction page",
          "19. Finding different solutions",
          "20. Putting final touches on the design",
          "21. Challenge add in two more tabs"
        ],
        "08. Stock Price Calculator for iOS9": [
          "01. Introduction to the stock price calculator",
          "02. Designing the app",
          "03. Hooking up the Swift File",
          "04. Setting up the variables",
          "05. Adding in functions to the app",
          "06. Taking in the user data",
          "07. Converting variables to floats",
          "08. Adding in the price and hiding the keyboard",
          "09. Fixing the percent error",
          "10. Calculating the profit",
          "11. Rounding to two decimal places",
          "12. Clearing the app",
          "13. Designing the app",
          "14. Challenge - Limit the amount of characters in the profit section"
        ],
        "09. Savings app for iOS9": [
          "01. Introduction to the savings app",
          "02. Designing the labels to the app",
          "03. Hooking up the swift file",
          "04. Setting up the Variables",
          "05. Setting up the functions",
          "06. Taking in the data",
          "07. Calculating the income",
          "08. Calculating the savings",
          "09. Printing the variables",
          "10. HIding the keyboard and testing the app",
          "11. Finxing the bugs",
          "12. Testing and setting up the clear functionality",
          "13. Designing the app",
          "14. Final bugs in the app",
          "15. Challenge - Add more financial items to the app"
        ],
        "10. Savings visualizer for iOS9": [
          "01. Introduction to the savings visualizer",
          "02. Designing the app",
          "03. Hooking up the Swift file",
          "04. Setting up the variables",
          "05. Adding in the functions",
          "06. Taking in the data",
          "07. Performing the math of the equation",
          "08. Printing the variables",
          "09. Testing the app and adding in the clear button",
          "10. Checking to see if the textbox has text",
          "11. Formating the decimal places",
          "12. Designing the app",
          "13. Challenge - add another slider to the app"
        ],
        "11. Score counter for iOS9": [
          "01. Introduction to the sports counter app",
          "02. Designing the app",
          "03. Hooking up the swift file",
          "04. Adding in the variables",
          "05. Adding in the functions",
          "06. Adding in the score modifier",
          "07. Testing the app",
          "08. Setting up the print function",
          "09. Designing the app part 1",
          "10. Sending items to the back",
          "11. Challenge - Set the score limit to 100"
        ],
        "12. Making a two button quiz for kids for iOS9": [
          "01. Introduction to the simple quiz app",
          "02. Desiging the app",
          "03. Hooking up the swift file",
          "04. Setting up the variables and the arrays",
          "05. Setting up the functions",
          "06. Setting up the random numbers and printing the variable",
          "07. Setting up the button logic",
          "08. Adding in the incorrect answer logic",
          "09. Breaking up the functions into more specific functionality",
          "10. Setting up the total correct logic and testing the app",
          "11. Designing the app"
        ]
      },
      "requirements": [
        "A Mac not a PC",
        "Xcode (Free)",
        "An internet connection"
      ],
      "description": "This course was funded through a massively successful Kickstarter campaign.\nBUILD 64 iOS projects to enhance your career. Add these projects to your LinkedIn or resume. Start your career in software development today. Did you know that software developers can make up to 200k a year? This course is for complete beginners. If that sounds like you, then enrol today!\nSOURCE CODE AND TEMPLATES INCLUDED!\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "Complete Beginners",
        "Not for advanced programmers"
      ]
    },
    {
      "title": "Flutter and Dart | Complete Flutter Dart Programming Course",
      "url": "https://www.udemy.com/course/flutter-and-dart-complete-flutter-dart-programming-course/",
      "bio": "Flutter App Development Course. Learn Flutter 3 and Dart with Flutter projects for Web, Android & Mobile App Development",
      "objectives": [
        "Flutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language.",
        "Flutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018.",
        "Flutter is powered by Dart programming language optimized for fast apps on any platform.",
        "Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.",
        "Flutter can integrate with existing iOS and Android code bases. It's free and open-source.",
        "Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy.",
        "Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase.",
        "Flutter code compiles to ARM or Intel machine code as well as JavaScript, for fast performance on any device.",
        "Flutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers.",
        "Flutter is powered by Dart, a language optimized for fast apps on any platform",
        "Dart is a client-optimized language for developing fast apps on any platform.",
        "Dart is designed for a technical envelope that is particularly suited to client development, prioritizing both development and high-quality production.",
        "Flutter and Dart with Flutter project",
        "Dart Language and Flutter Basics",
        "What is dart and Why is Dart ( Programming Language )",
        "Control and Loop Structures and Operators in dart flutter",
        "Functions in dart",
        "Collection Structures",
        "Dart Object Oriented Programming",
        "Inheritance and Polymorphism",
        "Interface and Abstract Class",
        "Functional Programming in flutter and dart",
        "Dart programming language with examples",
        "Object-Oriented programming concepts",
        "Functional programming concepts in Dart",
        "Flutter Firebase",
        "Flutter web",
        "Flutter Dart",
        "Dart Programming",
        "Flutter Basics and Structers",
        "Basic Widgets",
        "List Types in Flutter",
        "Functions",
        "Navigation Operations",
        "Input Widgets",
        "Book List Application",
        "Functional Programming",
        "Student Grade Calculator(App)",
        "Build beautiful, fast and native-quality apps with Flutter",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Understand all the fundamental concepts of Flutter development",
        "Become proficient in one of the fastest growing technologies"
      ],
      "course_content": {
        "Introduction to Flutter and Dart | Complete Flutter Dart Programming Course": [
          "What is Dart and Why is Dart Programming Language",
          "FAQ About Google Flutter and Dart Programming Language",
          "Dart SDK Installation",
          "Installation of Required Editor for Dart",
          "launch.json File Edit to Run in Debug Mode",
          "Dart and Flutter Project Files",
          "Quiz"
        ],
        "Dart Basics": [
          "First Dart Application",
          "Variables and Data Types in Dart",
          "Number and Boolean Data Types in Dart Programming Language",
          "String Data Type and Interpolition Notion in Dart",
          "Final and Const Concepts in Flutter",
          "Quiz"
        ],
        "Control and Loop Structures and Operators in Dart": [
          "Using If, Else and Else If in dart",
          "Temary Operator and Null Value Check",
          "Switch, Case Statements",
          "Conditional Quiz-1 in Dart",
          "Operators-1",
          "Operators-2 in dart programming",
          "Loops and For Loops",
          "While and Do While Loops in Dart Flutter",
          "Continue and Break Statements in Dart",
          "Loops Quiz-2 in Dart",
          "Getting Data from Console",
          "Getting Data from Console(Example)",
          "Quiz"
        ],
        "Functions in Dart ( Flutter )": [
          "What is Function in Flutter",
          "Using Fat Arrow in Dart",
          "Optional and Named Parameters in Dart ( Flutter )",
          "Quiz"
        ],
        "Collection Structures": [
          "Fixed-Lenght Lists in dart",
          "Dynamic Long Lists in Dart",
          "Methods Related to Lists",
          "Set Structure",
          "map structure in dart",
          "Collections Highlights",
          "Collection Structure Again",
          "Quiz"
        ],
        "Object Oriented Programming in Dart ( Programming Language )": [
          "Class and Object Concepts",
          "Constructor Methods in Flutter ( Dart )",
          "Using Factory",
          "Private Values and Getter Setter Methods in Dart",
          "Example 1",
          "Example 2",
          "Quiz"
        ],
        "Inheritance and Polymorphism in Dart": [
          "Inheritance",
          "Inheritance Example and Overriding",
          "Polymorphism and Late Binding",
          "Using Constructor Methods in Inheritance",
          "Quiz"
        ],
        "Interface and Abstract Class": [
          "Abstract Class and Method",
          "Interface Concept",
          "Static Method and Variables",
          "Final and Const Concept",
          "Immutable Classes in Flutter - Dart",
          "Quiz"
        ],
        "Functional Programming in dart programming": [
          "What is Lambda",
          "Higher Order Function",
          "Lexical Closure Concept",
          "Constructors of List Class",
          "Methods of List Class",
          "Constructors and Methods of Map Class",
          "Quiz"
        ],
        "Exception and Generic Type Concepts": [
          "Exception Concept",
          "Throwing an Error",
          "Creating Our Exception Class",
          "Generic Types",
          "Create Generic Class",
          "Quiz"
        ]
      },
      "requirements": [
        "You do not need to have any programming background while doing these.",
        "No prior dart or flutter",
        "Desire to learn dart flutter",
        "Computer with access to the internet.",
        "Willingness and Motivation to successfully complete the course about Flutter",
        "Desire to learn Flutter and Dart",
        "Have 10GB of free space on your hard drive.",
        "Watching the lecture videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition for flutter dart to get started today"
      ],
      "description": "Hi there,\nWelcome to the “ Flutter and Dart | Complete Flutter Dart Programming Course ” course.\nFlutter App Development Course. Learn Flutter 3 and Dart with Flutter projects for Web, Android & Mobile App Development\n\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language. Flutter can integrate with existing iOS and Android code bases. It's free and open-source.\n\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter dart was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, dart flutter is compiled to JavaScript code that can run on the browser. Flutter web is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the flutter firebase Engine, written in C++, which provides low-level rendering support.\nFlutter is an open-source UI software development kit created by Google. It is used to develop cross platform applications for Android, iOS, Linux, macOS, Windows, Google Fuchsia, and the web from a single codebase\nDart is a client-optimized language for developing fast apps on any platform. Its goal is to offer the most productive programming language for multi-platform development, paired with a flexible execution runtime platform for app frameworks.\nLanguages are defined by their technical envelope — the choices made during development that shape the capabilities and strengths of a language. Dart is designed for a technical envelope that is particularly suited to client development, prioritizing both development (sub-second stateful hot reload) and high-quality production experiences across a wide variety of compilation targets (web, mobile, and desktop).\nDart also forms the foundation of Flutter. Dart provides the language and runtimes that power Flutter apps, but Dart also supports many core developer tasks like formatting, analyzing, and testing code.\n\nThe Dart language is type safe; it uses static type checking to ensure that a variable’s value always matches the variable’s static type. Sometimes, this is referred to as sound typing. Although types are mandatory, type annotations are optional because of type inference. The Dart typing system is also flexible, allowing the use of a dynamic type combined with runtime checks, which can be useful during experimentation or for code that needs to be especially dynamic.\n\n\nGoogle Flutter provides higher quality for multi-platform development.\nFlutter apps use a single codebase, allowing faster time-to-market.\nFlutter allows you to build beautiful apps easily.\nFlutter widgets make it easy to build beautiful UIs.\nThe Dart programming language is very productive.\nFlutter delivers an excellent developer experience with hot reload.\nFlutter is open source.\nFlutter comes with a mature ecosystem.\nFlutter’s unique advantages make it a very strong UI framework on mobile, web, and desktop.\n\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build dart flutter programming thus, we will have prepared a strong foundation for Flutter applications.\nThis course is for beginners. Before taking this course, You don't need to know any language. In our course, the basics of dart programming is dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nDuring our course, you will be informed about the basics of Dart in detail and how to solve problems.\nThis course was crafted to benefit absolutely any level of developer. We will start flutter and dart from scratch and learn how to create a development environment for Flutter in mobile development.\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible. I have used some diagrams to help you understand better.\nThe powerful features and capabilities of fluter allow you to create complex, customizable, modern, responsive, and user-friendly web applications in mobile app marketing.\nAfter taking this course you’ll be able to fully take advantage of all features for Dart in Mobile Development.\nIn this course, Develop modern, complex, responsive and scalable web applications with Dart in Firebase\nOur course based on learning by making practice.\n\nWhat is Google Flutter?\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with Dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, Dart is compiled to JavaScript code that can run on the browser. Flutter is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the Flutter Engine, written in C++, which provides low-level rendering support with Google’s Skia; and the platform-specific Embedder, which talks directly to the operating system.\nWhy did Google create Flutter?\nFlutter, first known as “Sky”, was announced in 2015 with Android support only. It was created to provide a better mobile experience for users and developers, taking the best parts of the web development experience, and bringing them to mobile. Its main goals were high-performance and portability across multiple platforms. While other cross-platform solutions such as React Native and Xamarin were already popular, they could not deliver the same fidelity and performance as apps built with the native iOS and Android SDKs. Flutter changed that by making it possible to create beautiful, performant apps across multiple platforms with a single codebase.\n\nWho is Flutter for?\nFor users, Flutter makes beautiful apps come to life.\nFor developers, Flutter lowers the bar to entry for building apps. It speeds app development and reduces the cost and complexity of app production across platforms.\nFor designers, Flutter provides a canvas for high-end user experiences. Fast Company described Flutter as one of the top design ideas of the decade for its ability to turn concepts into production code without the compromises imposed by typical frameworks. It also acts as a productive prototyping tool with drag-and-drop tools like FlutterFlow and web-based IDEs like Zapp!.\nFor engineering managers and businesses, Flutter allows the unification of app developers into a single mobile, web, and desktop app team, building branded apps for multiple platforms out of a single codebase. Flutter speeds feature development and synchronizes release schedules across the entire customer base.\n\nWhat kinds of apps can I build with Flutter?\nFlutter is designed to support mobile apps that run on both Android and iOS, as well as interactive apps that you want to run on your web pages or on the desktop.\nApps that need to deliver highly branded designs are particularly well suited for Flutter. However, you can also create pixel-perfect experiences that match the Android and iOS design languages with Flutter.\nFlutter’s package ecosystem supports a wide variety of hardware (such as camera, GPS, network, and storage) and services (such as payments, cloud storage, authentication, and ads).\n\nIs Flutter in demand?\nFlutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018. Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy. Over a hundred thousand Flutter apps have already been published on the App Store and Play Store. After overtaking React Native in Google Search trends, Flutter is now the fastest growing software project on GitHub. By choosing Flutter, companies can deliver mobile apps in record-time as they no longer have to build separate apps to support iOS and Android. This makes Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly\n\nIs Flutter a programming language?\nFlutter is not a language, rather an SDK just like Android SDK. For android development Java/Kotlin are the programming languages, for cross-platform development using flutter, DART is the official programming language.\n\nIs Flutter a frontend or backend?\nFlutter is a popular frontend development framework from Google that enables developers to build beautiful frontends for any screen. Flutter is designed to streamline cross-platform app development while maintaining a consistent user experience.\n\n\nWhich language is used for Flutter?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features. While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine.\n\n\nDoes Flutter work with any editors or IDEs?\nWe provide plugins for VS Code, Android Studio, and IntelliJ IDEA. See editor configuration for setup details, and VS Code and Android Studio/IntelliJ for tips on how to use the plugins.\nAlternatively, you can use the flutter command from a terminal, along with one of the many editors that support editing Dart.\n\n\nIs Flutter a framework?\nFlutter is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase.\n\n\nWhat is Dart and why does Flutter use it?\nFlutter uses Dart as Dart allows Flutter to avoid the need for a separate declarative layout language like JSX and XML. The layout of Dart is declarative and programmatic and it makes it easy for developers to read and visualize it very easily and effortlessly.\n\n\nIs Flutter written in Dart?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features. While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine.\n\n\nWho uses Dart programming language?\nCompanies that use the Dart language include Google, Mews, Ag Flow, and Blossom to name a few. People generally find that Dart is one of the languages that are easier to grasp, as it is fairly similar to many other programming languages.\n\n\nWhat applications use Flutter?\nThere are social networking apps for creating and sharing content, dating, and connecting people through events and real-life activities that use Flutter. Alibaba made a shopping app called Xianyu, which has more than 50MM downloads and more than 10MM active users every day. Nubank is the largest independent digital bank outside Asia, and its mobile apps are built with Flutter. Another shopping app is HuYu, which rewards users with gift cards and vouchers for sharing shopping receipts. You can also find music apps for recording and learning to read music. The Hamilton Musical and the famous Abby Road Studios created apps with Flutter. There are apps for sports, finance, fitness, education, animal adoption, mapped gas stations to compare prices, and a travel app. A Google Ads app helps mobile app customers track their ads. Users can view statistics, update bids and budgets, and get real-time notifications.\n\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nMy students says that: Recommended for those who start Flutter from zero like me. I'm a backend programmer, and I know nothing about the mobile realm. Now I can build my own mobile app. I'm really excited!\nFlutter & Dart\n\nDive in now into “ Flutter and Dart | Complete Flutter Dart Programming Course ” course.\nFlutter App Development Course. Learn Flutter 3 and Dart with Flutter projects for Web, Android & Mobile App Development\n\nWe offer full support, answering any questions.\n\nSee you in the course!",
      "target_audience": [
        "Anyone who has never programmed before and want to learn Dart and build iOS and Android apps.",
        "Anyone who know how to code, but are new to mobile development, then take this course to build apps with just one codebase.",
        "Anyone who have tried Flutter before, but want to get a comprehensive curriculum that covers all the important aspects of Flutter development",
        "Anyone who wants to deploy to multiple devices from a single codebase: mobile, web, desktop, and embedded devices.",
        "It's perfect for complete beginners with zero experience for dart",
        "If you want to building your application with Dart and Flutter application",
        "Anyone who wants to use Flutter which is a Google SDK for building native interfaces for iOS and Android using the Dart programming language",
        "Anyone who wants to build beautiful apps easily with Flutter",
        "Anyone who wants to learn Dart programming language which is very productive.",
        "Anyone who want to build native-quality iOS and Android apps with Flutter."
      ]
    },
    {
      "title": "Build an AI Powered React Native ChatGPT Mobile App",
      "url": "https://www.udemy.com/course/chatgpt-mobile-app/",
      "bio": "Learn ChatGPT by building an AI powered iOS and Android app using React Native. Includes custom server and REST API!",
      "objectives": [
        "Understand how to build an Android and iOS mobile app",
        "Understand how to integrate with OpenAi's services",
        "Understand how to create and deploy your own server",
        "Understand how to develop your own REST API"
      ],
      "course_content": {},
      "requirements": [
        "Mac or Windows PC",
        "Basic programming experience is highly recommended. We skip over much of the basics.",
        "Basic React Native knowledge is recommended but not essential. Just be prepared to do some of your own investigation if you're an absolute beginner."
      ],
      "description": "Do you want to unlock the full potential of AI in mobile app development using React Native? Are you intrigued by the idea of creating a chat application that not only sends messages but also integrates with the cutting-edge capabilities of ChatGPT for text and image generation?\nYou've landed in the perfect spot! This course is your comprehensive guide to building an innovative chat application from the ground up, leveraging OpenAI's Chat GPT.\nImagine developing an app that not only impresses everyone who sees it but also enhances your portfolio, making you stand out in the job market!\n\n\nWhy learn from me?\nAt Microsoft, I engineer solutions that reach millions globally, absorbing invaluable insights from some of the industry's best. Now, I'm here to pass those insights on to you through Udemy, where I've already taught tens of thousands of students across my popular courses.\n\n\nWhat will this course cover?\nJoin me, step by step, as we create a Chat GPT-powered social network app, featuring:\nReal-time chatting with AI-driven responses\nCustomizable chatbot personality and mood settings\nAdvanced message configurations for tailored interactions\nSeamless image and text generation\nDeploying your own server which hosts your own REST API\nThis course is designed for both beginners and seasoned developers, offering significant value regardless of your experience level. It is recommended however to have at least some experience. This isn't an introduction to React Native course so we don't cover all of basics in a huge amount of detail. If you're a total beginner, it's doable but you might need to do a little investigation if you come across some unknown concepts.\n\n\nWhy enroll in this course?\nIn today's tech landscape, mastery of React Native and AI integration isn't just impressive; it's essential. These skills are your ticket to opportunities at leading tech giants and innovative startups alike.\nBy joining this course, you gain direct support from me. Whether you're grappling with technical challenges, seeking advice, or curious about new features, I'm here to assist promptly and thoroughly.\n\n\nAnd the best part? This journey is not just educational—it's incredibly fun. You'll have the freedom to inject your creativity into the project, making it uniquely yours.\nReady to start building the future of chat applications? Let's dive in!\n*Note: While this course is beginner-friendly, it assumes basic familiarity with development concepts. Detailed explanations of foundational programming principles are not included, but I'm more than happy to clarify any questions you may have along the way!",
      "target_audience": [
        "Any programmers that want to learn about app development and OpenAI/ChatGPT!"
      ]
    },
    {
      "title": "How to Put Ads Into Your Apps - AdMob - Xcode, Swift, iOS",
      "url": "https://www.udemy.com/course/how-to-make-money-with-apps-admob-xcode-swift-ios/",
      "bio": "The best and free course series that actually shows you how to efficiently boost your app with AdMob ads the smart way",
      "objectives": [
        "Integrate the Google AdMob ad network into your iOS apps.",
        "Show a banner ad",
        "Show an interstitial ad",
        "Show a reward based video ad",
        "Set up ad unit IDs",
        "Navigate the AdMob dashboard"
      ],
      "course_content": {},
      "requirements": [
        "You should have a Mac."
      ],
      "description": "“I want to make money with apps.” - the main reason why people enter the world of app development.\nThe proof\nIn the past 6 years I have built a five figure brand / app empire: Rebeloper. I’ve been selling source codes on all the app marketplaces. I’ve been building simple apps for clients for $199 and huge games for $25.000. My team and I have been building a consistent, strong brand for Rebeloper. (You can read about our values on our site) Most importantly, we have tested a plethora of monetisation systems. We’ve tried everything that we could think of. From ads to content marketing, from In-app purchases to posting on Instagram; you name it we most probably have tried and tested it. This is how we managed to survive and now it’s time to give back to the community.\nIt’s time to show it all to you.\nIt’s time for you to not make all the mistakes we made.\nIt’s time for you to learn from our 100.000+ hours combined experience.\nWant to start making money with apps today? Read on…\nWhy should you enroll into this course?\nThe thing that no-one is talking about is how to make money with apps. There are a ton of tutorials and courses on coding and design, but there is a huge shortage on courses about how to actually make money with your apps. I have decided to come out and create a series of courses that explores, discusses and teaches you how to actually make money with apps. I call them the “How to make money with apps” series.\nWho am I?\nI have been a professional iOS developer for more than 6 years now. I’ve experienced the highs and lows of the industry. Now it’s time to share my knowledge with you and other likeminded appreneurs just like you.\nMy 2 Rules\nI have settled on 2 rules that these series must meet. All of the courses in the “How to make money with apps” series must fulfil both of these 2 rules:\nYou need to make money the next day you finish the course\n\nYou need to be able to implement the course in one day or less\nLet’s take a closer look to these rules one by one.\n1. You need to make money the next day you finish the course\nI’ll start off with the cheesiest quote ever: “Time is money”. But you know it’s true. And I don’t want to waste your time. With my experience in the field I have distilled these courses to be actionable right away. It’s simple: You watch the course today; implement the knowledge you gained the very same day and instantly earn money the next day. No BS here. It doesn’t matter if you earned 1 cent or $10.000 the next day. What matters is that the money started rolling in.\n2. You need to be able to implement the course in one day or less\nNo 30 day trials here. No half a years of development. No upfront costs. You need to make your move in one day or less. This is important because of automation too. The more times you can replicate the strategy the more money pours into your bank account.\nMy goal for 2017 is to help 1000 small business owners (or entrepreneurs) to make their first $1000 till the end of the year.\nAbout this course\nThis course is part of a series on how to make money with apps. It teaches you one way to earn money through advertising. The ad network of our choice is AdMob. You will learn how to integrate AdMob into your projects so your app may show ads the very next day.\nMost people are stuck when trying to figure out how to make some money with their apps. One of the easiest ways to do it is through ads in their apps. I will cover all the steps needed from signing up for an AdMob account to showing all the ad types supported by AdMob.\nNow it’s your turn\nYou can choose to:\nEnrol into this course\nTake a look at my author page to see my other free courses from the “How to make money with apps” series",
      "target_audience": [
        "This course is for anyone who wants to integrate AdMob into their iOS apps in just a few lines of code."
      ]
    },
    {
      "title": "Modern Android Dev: Clean Architecture & Jetpack Compose",
      "url": "https://www.udemy.com/course/jetpack-compose-and-solid-principles-building-robust-apps/",
      "bio": "Master Modern Android Dev by Build Scalable Apps with Compose, MVVM, Paging 3,Room Database,Splash API, & Retrofit",
      "objectives": [
        "Understand SOLID Principles: Learn and apply SOLID principles in Android with Jetpack Compose.",
        "Design Maintainable Apps: Create scalable Android apps using SOLID principles.",
        "Master Jetpack Compose UI: Build flexible UI components following SOLID principles.",
        "Write SOLID Android Code: Develop clean, maintainable code in Android with Jetpack Compose."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Initial Project And Source Code": [
          "Initial Project Source Code",
          "What we'll build",
          "Project Walkthrough"
        ],
        "Introduction to clean architecture": [
          "What are SOLID PRINCIPLE",
          "Clean Architecture in Android Apps"
        ],
        "The News API": [
          "The Api we'll Use",
          "Testing the Api with postman"
        ],
        "Implementing Headline feature": [
          "Organizing the project structure in Android studio",
          "Set up Domain contract and Models",
          "Setting up Headline feature",
          "Headline Api setup",
          "Local Contract Dto",
          "Setup Newsy database",
          "Setup Headline Table",
          "Headline Data Access Object(Dao)",
          "Headline Mapper",
          "Headline Remote Mediator with Paging 3",
          "Implementing Load Function for Remote Mediator",
          "ArticleHeadlineMapper",
          "Error Handling in Remote Mediator",
          "Handling paging key",
          "Headline repository Implementation",
          "Dipendency Injection with Dagger Hilt"
        ],
        "Home Presentation Feature": [
          "Refactoring Core Presentation Code",
          "Home State Data Object",
          "Home Ui Events",
          "Home View Model Implementation",
          "Home Screen Set up",
          "Home Top Bar Component",
          "Headline Item Extension Function",
          "Header Title Component",
          "Header title Item Implementation",
          "Headline Item Component implementation",
          "Updating Auto scrolling Logic",
          "Implementing Horizontal Pager Composable",
          "Headline Card Implentation",
          "Connecting Headline Card with Horizontal Pager",
          "Updating Headline Item Extension Function",
          "Paging Loading Item",
          "Test Run Newsy App",
          "Solving Dagger Hilt Binging and Re run Newsy"
        ],
        "Discover Feature": [
          "Introduction",
          "Discover Article Table",
          "Discover Remote Key Table",
          "Discover Article Dao",
          "Discover Remote Key Dao",
          "Discover Remote Mediator Starter",
          "Discover Remote Api",
          "Initialization of Discover Remote Mediator",
          "Implementing Load Function",
          "Discover Repository",
          "Fixing Headline Mapper Logic",
          "Discover Dependency Injection Module",
          "Discover use_cases",
          "The Disconver UI",
          "Extending Home Viewmodel With Discover Data",
          "Discover Item Extension Function",
          "Disover Chips",
          "Newsy Article Item Composable",
          "Updating Category Fetching Logic",
          "Navigation Intro",
          "Navigation Screens",
          "Navigation Actions",
          "Newsy Navigation Graph",
          "Newsy App Composable"
        ],
        "Detail and Headline Feature": [
          "Detail Dto",
          "Detail Dao",
          "Domain Detail Entity",
          "Detail Repository 1",
          "Resource Holder class",
          "Detail Repository 2",
          "Detail Module",
          "Detail state and View model Implementation",
          "Detail Screen",
          "Detail Components Composables",
          "Detail Screen Implementation",
          "Detail Navigation",
          "Headline Viewmodel",
          "Headline Screen Composable",
          "Navigation Composable for Headline Screen"
        ],
        "Search Feature": [
          "Search Feature Intro",
          "Search Api Endpoint (postman)",
          "Search Article Remote Dto",
          "Search Api Implementation-Retrofit",
          "Search Tables-Room database",
          "Search Dao",
          "Search Paging Implementation-paging 3",
          "Search Paging Load Function Implementation",
          "Search Repository",
          "Search Usecases",
          "Search Module",
          "Search Events",
          "Search Viewmodel",
          "Search Screen Implementation",
          "Updating Detail Viewmodel",
          "Fixing Search paging Logic"
        ],
        "Navigation Drawer": [
          "Intro",
          "Navigation Drawer Composable",
          "Newsy Logo Composable",
          "Model drawer sheet Implementation"
        ]
      },
      "requirements": [
        "Kotlin",
        "Android fundamentals"
      ],
      "description": "Craft Modern, High-Performance Android Apps with Jetpack Compose and Clean Architecture\nReady to level up your Android development game? This comprehensive course teaches you how to build robust, scalable, and performance-optimized apps using the latest advancements in Android development: Jetpack Compose for stunning UIs and SOLID principles for clean and maintainable code.\nHere's what you'll get:\nMaster Jetpack Compose: From the fundamentals to advanced techniques, you'll gain the expertise to create breathtaking and responsive UIs with Compose. Build layouts, master theming, and even implement stunning animations.\nSolidify your Android Architecture: Deep dive into the SOLID principles and learn how to apply them effectively in your projects. This will lead to a cleaner, more organized, and easier-to-maintain codebase.\nNetwork Like a Pro: Leverage Retrofit to seamlessly fetch data from external sources. Learn to handle API requests and responses efficiently, building a robust and reliable networking layer for your apps.\nEffortless Dependency Management: Explore Dagger Hilt and discover how to manage dependencies effortlessly. This ensures modular and well-tested code, making your development process smoother and more efficient.\nImage Loading Made Simple: Implement Coil, a modern image-loading library, to optimize image display in your app. Ensure fast and efficient loading of images, enhancing the user experience.\nMaster Pagination with Paging 3: Learn to seamlessly handle pagination in your app using the latest Paging 3 library. This will create a smooth and user-friendly experience for navigating large datasets.\nBeyond the knowledge, you'll also:\nBuild a fully functional news app called Newsy: Apply the learned concepts to create a practical application, putting your skills into action.\nUtilize the latest tools and libraries: Gain proficiency in essential tools like Retrofit, Dagger Hilt, Coil, and Paging 3, making you a well-rounded Android developer.\nBy the end of this course, you'll be equipped with the knowledge and skills to build modern, high-performing, and scalable Android apps with confidence.\nEnrol now and take your Android development skills to the next level!",
      "target_audience": [
        "Intermediate Android Developers: Developers with a foundational knowledge of Android app development who seek to enhance their coding practices and design skills.",
        "Experienced Developers Transitioning to Jetpack Compose: Seasoned Android developers who want to make a smooth transition to the modern UI framework, Jetpack Compose, while ensuring adherence to SOLID principles.",
        "App Development Enthusiasts: Individuals passionate about Android app development who wish to grasp advanced concepts in code design, maintainability, and collaboration, while embracing the latest UI technologies.",
        "Software Engineering Students: Undergraduate or graduate students studying software engineering or related fields seeking practical insights into Android app development following best practices."
      ]
    },
    {
      "title": "Android Multilingual Applications Development From Scratch",
      "url": "https://www.udemy.com/course/android-multilingual-applications-development/",
      "bio": "Learn how to setup and configure a multilingual android application using android studio.",
      "objectives": [
        "Understand Multilingual Application Development Process.",
        "Configure android app and activate the multilingual feature.",
        "Assign default application language.",
        "Associate Specific UI to a certain language.",
        "Support both LTR And RTL Languages.",
        "Dynamically change the application language in Runtime.",
        "Monetize your application with ads.",
        "Publish, design and manage multilingual app on google play store."
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "Assumptions",
          "What Is The Android Multilingual Application?"
        ],
        "Multilingual Background": [
          "Definition of I18n, L10n, G11n",
          "The Overall Process",
          "Online Translation Tools",
          "String Theory"
        ],
        "Install Android Studio": [
          "Install Latest Android Studio",
          "Download SDK's"
        ],
        "Preparing Android Application For Multiple Languages": [
          "Create a new android project",
          "Planning And Design For Localizable Items"
        ],
        "Supporting Different Languages": [
          "Resources Types Providing",
          "Adding First LTR(Left To Right) Language",
          "Adding More LTR Languages",
          "Working With Multilingual Drawable Items",
          "Working With RTL And LTR Multilingual Styling"
        ],
        "Multilingual In Runtime": [
          "Adding Languages Spinner",
          "Activate Spinner And Change Android App Language In Runtime"
        ],
        "Prepare Your Multilingual App For Publishing": [
          "Prepare Your Multilingual Android Application Icon",
          "Generate The Signed APK"
        ],
        "Publishing Multilingual Application To Google Playstore": [
          "Upload apk and configure title and description",
          "Upload and design the listing graphic assets",
          "Configure pricing and adding support for more listing languages"
        ],
        "Your App After Publishing With Monetization": [
          "Preview and Monetize your mobile apps with Ads"
        ],
        "Course Recap": [
          "Conclusion"
        ]
      },
      "requirements": [
        "A working computer.",
        "Android SDK UP and Running API level 17+up",
        "Android Studio Up and Running.",
        "You should have basic knowledge of Java,Android,XML technologies."
      ],
      "description": "Learn how to build an android application in multiple languages and get the following skills under your belt :\nUnderstand Multilingual Application Development Process.\nConfigure android app and activate the multilingual feature.\nAssign default application language.\nAssociate Specific UI to a certain language.\nSupport both LTR And RTL Languages.\nDynamically change the application language in Runtime.\nMonetize your application with ads.\nPublish, design and manage multilingual app on Google Play Store.\nIn this course you will learn how to setup and configure a list of languages using the Android Studio and Android SDK.\nI’ll walk you thru the process of installing and activating the Multilingual feature. We’ll connect the app with option theme settings and associate the application UI in different languages and we’ll look at the settings and configurations that give you complete control over your Multilingual android application.\nIn the end you will know the step-by-step process of how you can have your app seamlessly connected between all your preferred languages.",
      "target_audience": [
        "this course is for any one who interested in making multilingual android applications.",
        "Android Beginners",
        "Translators",
        "Content Customizers"
      ]
    },
    {
      "title": "iOS & Swift: Server/Backend-Driven UI for Dynamic Apps",
      "url": "https://www.udemy.com/course/ios-swift-server-backend-driven-ui-for-dynamic-apps/",
      "bio": "Build the unofficial Udemy Home Screen in SwiftUI and UICollectionViewCompositionalLayout with Robust Backend Handling",
      "objectives": [
        "Master Backend/Server Driven UI concepts",
        "Learn 2 native Swift SDKs - UICollectionViewCompositionalLayout & UICollectionViewDiffableDataSource",
        "Integrate modular SwiftUI views with UIKit based projects",
        "Build the Udemy home screen with confidence",
        "Learn how to construct highly dynamic screens with components",
        "Learn how to use the SnapKit and SkeletonView library"
      ],
      "course_content": {
        "Introduction": [
          "Setup Project",
          "Setup files and folders structure",
          "Setup collection view",
          "Add UI Model"
        ],
        "Adding Components": [
          "Add MainBannerView",
          "OPTIONAL - Replace Unsplash with Picsum Image API",
          "Add MainBannerCollectionViewCell",
          "Add MainBannerCollectionViewCell to CollectionView",
          "Remove CollectionView Background",
          "Add TextHeaderCollectionViewCell",
          "Integrate TextHeaderCollectionViewCell to CollectionView",
          "Resolve Tap Bug and Set Dynamic Height",
          "Refactor AttributedTappableLabel GetHeight",
          "Add CourseView",
          "Add CourseCollectionViewCell",
          "Add CourseSwimlane to CollectionView",
          "Add Categories TextHeader",
          "Add CategoriesView",
          "Integrate CategoriesCollectionViewCell to CollectionView",
          "Add Another Course Swimlane",
          "Add FeaturedCourseView",
          "Integrate FeaturedCourseCollectionViewCell to CollectionView",
          "Add UdemyBusinessView",
          "Integrate UdemyBusinessCollectionViewCell to CollectionView"
        ],
        "Working with Navigation": [
          "Add Component TapGestures",
          "Send Tap Events to ViewController",
          "Handle Category Tap Event",
          "Show Course Details & Udemy Business",
          "Clean Up Tap Event"
        ],
        "Server Driven": [
          "Add JSON Payload",
          "Update API Response",
          "Clean Up API Response",
          "Map API Response to UIModel",
          "Read Payload from Remote Server"
        ],
        "Source Code": [
          "Project"
        ]
      },
      "requirements": [
        "3 years of professional iOS experience",
        "Requirement to build complex & highly dynamic front ends"
      ],
      "description": "Welcome to the iOS & Swift: Server/Backend-Driven UI for Dynamic Apps course!\nIn this course, we learn to create dynamic & responsive user interfaces by leveraging backend data to shape the layout and content of our app's frontend. Concurrently, we utilized the robust capabilities of 2 native Swift SDKS - UICollectionViewCompositionalLayout & UICollectionViewDiffableDataSource alongside SwiftUI to achieve this.\nThroughout the course, we will build the unofficial Udemy iOS home screen, incorporating industry leading practices to integrate modular SwiftUI views into a UIKit-based project. Additionally, we will layout views using the SnapKit library, enhancing our skills in interface design and implementation.\nBy embracing the Server/Backend-Driven UI design principle into our development workflow, we seamlessly integrate backend data to drive the layout and content of our app's frontend. This approach not only enhances flexibility and adaptability but also guarantees a uniform and captivating user experience across diverse devices and screen sizes.\nNoteworthy companies employing the Server/Backend-Driven UI strategy include Uber, Spotify, Reddit, Airbnb, SnapChat & Lyft.\nThis course is designed for experienced iOS developers with at least three years of working experience and a strong foundation in UIKit, who are eager to explore SwiftUI's capabilities.\nBy the end of this course, you'll master the skills and confidence needed to implement dynamic frontend designs utilizing the Server/Backend-Driven UI principle in your own production apps.",
      "target_audience": [
        "Full time developers who are keen to explore SwiftUI but working with a UIKit based project",
        "Full time developers who want learn backend driven UI"
      ]
    },
    {
      "title": "Twitter Social Media Master Social Media App Twitter",
      "url": "https://www.udemy.com/course/twitter-social-media/",
      "bio": "Be Able To Understand The Social Media App Twitter and Manage All Tools and Functions Available",
      "objectives": [
        "You Will Be Able to Completely Understand The Application",
        "You Are Going to be Able to Use All of Twitter's Functions and Tools",
        "You Will Be Able to Use Twitter in a New Way",
        "You Will Be Able to Write a Tweet Including Photos, Gifs and Polls"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "Twitter Q and A"
        ],
        "Let’s start": [
          "Downloading the app",
          "Setting up an account"
        ],
        "Home": [
          "Feed",
          "Your profile"
        ],
        "Search": [
          "Suggested for you",
          "Search/Search Settings"
        ],
        "Notifications": [
          "All/Mentions",
          "Notification settings"
        ],
        "Messages": [
          "Opening, responding and writing messages"
        ],
        "Tweeting": [
          "How do you write a tweet in 2018?"
        ]
      },
      "requirements": [
        "A iPhone or Android device",
        "No Experience With Twitter Needed",
        "An Interest in Social Media or just Twitter",
        "A Willingness to Learn!"
      ],
      "description": "Do you want to be able to use the social media app Twitter regardless of level?\nDo you want to be able to understand how to use the app completely?\nAre you passionate about social media? Then this course is definitely for you!\nHi! And welcome to this course where I am going to walk you through all of the necessary steps to be able to use Twitter regardless of level and also be able to use the app the way it should be used.\nThis course begins to cover:\nThe important steps and what you need to know before starting to Tweet!\nAll of the different levels of the app and all the functions and tools that it offers\n\n\nHow you proceed to scroll down the feed, finding friends to follow and much more\nWe are then going to go trough the process of building a tweet and then sharing it\nAs the course goes on I am going to give you tips and tricks on how to use Twitter the best\nDuring the course I am  also going to go through every feature and tool in the app and explain what it's for and how you can use it\nThese are a couple examples on what we are going to be working with:\nFeed\nYour profile\nMessages\nNotifications\nand more...\nAfter completing this course you will be able to for example:\nUse the app to the fullest of it's abilities\nKnowing how you can use all of Twitter's tools and functions to really enjoy the app and have fun with it\nGet some tips and tricks for how you can upload material to your story and feed\nUnderstand why Twitter is such a social media phenomenon\nIf you are curious about who I am:\nMy name is Matilda and I am a 26 year old girl with hobbies such as:\nSocial Media\nSocial Media Marketing\nWeb developing\nCoding\nand\nPhotography\nI currently study social media marketing and will be graduating from Stockholm International Business School in May 2019.\nI hope you now have e good grip on what the course is about and what we will cover.\nFeel free to look through the curriculum of the course and watch some previews, I look forward to seeing you inside!",
      "target_audience": [
        "Anyone Interested in Social Media",
        "Anyone Interested in Twitter Particularly",
        "Someone Who Wants to Know All Functions And Tools in Twitter",
        "Someone Who Want Tips and Tricks to Write a Tweet",
        "Anyone Who Already Likes Twitter And Want to Possibly Learn Something New"
      ]
    },
    {
      "title": "Build your first iOS App in Swift",
      "url": "https://www.udemy.com/course/build-your-first-ios-app-in-swift/",
      "bio": "iOS Application Development for Beginners",
      "objectives": [
        "Have a broad understanding of how to properly architect and structure a basic iOS application."
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Getting Setup",
          "Learning All About View Controllers",
          "Segues and Navigation Controllers",
          "Understanding Table View Controllers",
          "Implementing The Todo List",
          "Connecting The Detail View Controller",
          "Learning how to Subclass UITabeViewCell",
          "Introduction to Auto Layout & Constraints",
          "Hooking up the TaskTableViewCell",
          "Implementing the Task Creator View Controller",
          "Designing the Task Creator View Controller User Interface",
          "Collecting User Input through UITextFields",
          "Introducing the UIPickerView",
          "Introducing the UIDatePicker",
          "Improving the User Experience",
          "Creating the Todo Task",
          "Introduction to Protocols and Delegation",
          "Implementing the TaskCreatorDelegate",
          "Styling the Detail View Controller",
          "Final Polishing Touches",
          "Life Reminder - Reminder Tracking Application"
        ]
      },
      "requirements": [
        "You will need a Mac computer running macOS with the Xcode IDE"
      ],
      "description": "Welcome to iOS fundamentals course where we will explore a high level overview of all the building blocks you will need to build great iOS applications.\nThis class covers a broad overview of iOS related topics in bite sized videos that you can follow along with. This class assumes you have some exposure to programming and are able to get setup and follow along. To succeed in this class it is best to follow along with each video. You would be best served by coding along with the video and making sure that your project outputs the same or similar results as mine as you go through each video in the series.\nThe class project will require that you exercise many of the topics covered in the videos to build your own application. You can refer to the class videos if you get stuck or forget how to do something a particular way. If you code along the way throughout each video you can refer to that as a reference for the class project.\nSpecific topics covered in this course are:\nSubclassing UIViewControllers\nUnderstanding different kinds of segues and application navigation\nLearning about UINavigationControllers and UITableViewControllers\nAutoLayout\nSubclassing UITableViewCells\nThe basics of protocols and delegation\nLearning about the UIPickerView\nCapturing user input with UITextFields\nPassing data between view controllers\nCreating UI elements programmatically\nLearning the basic concepts of caring about the user interface and user experience.\nTechnologies Used in this Tutorial:\nSwift 4\nXcode 9\nmacOS Operating System",
      "target_audience": [
        "Beginner level programmers who want to learn mobile application development in iOS"
      ]
    },
    {
      "title": "Dart and Flutter Ultimate Course: Learn, Build & Deploy Apps",
      "url": "https://www.udemy.com/course/flutter-for-app-developers/",
      "bio": "Build fast, responsive, feature-rich mobile apps with Flutter for iOS and Android platforms. Become a top App Developer.",
      "objectives": [
        "Understand Dart and Flutter – Gain a solid understanding of Dart programming and the Flutter framework.",
        "Build and Run Flutter Apps – Develop, build, and run Flutter apps on both Android and iOS platforms.",
        "Create Responsive UI – Design user-friendly interfaces using various Flutter widgets and layout techniques.",
        "Handle State Management – Learn effective state management using methods like setState() and other advanced techniques.",
        "Implement Navigation – Implement single and multi-screen navigation in Flutter applications.",
        "Form Validation – Build and validate forms with user input, implementing complex form validations.",
        "Integrate APIs – Perform HTTP requests and integrate third-party APIs into your Flutter apps.",
        "Work with Local Storage – Utilize SQLite and Shared Preferences for local data storage in Flutter apps.",
        "Animate UI Elements – Add implicit and explicit animations to enhance the user experience.",
        "Customize Themes – Implement custom themes, including light and dark modes, to improve app aesthetics.",
        "Set Up Firebase – Integrate Firebase for authentication and push notifications in Flutter apps.",
        "Deploy Apps – Learn to deploy Flutter apps to Google Play Store and Apple App Store."
      ],
      "course_content": {
        "What are Dart and Flutter": [
          "What are Dart and Flutter"
        ],
        "DartPad": [
          "DartPad",
          "DartPad Code"
        ],
        "Dart Variables, Constants, and Basic Data Types": [
          "Dart Variables, Constants, and Basic Data Types"
        ],
        "Dart Arithmetic, Relational, and Logical Operators": [
          "Dart Arithmetic, Relational, and Logical Operators"
        ],
        "Dart Control Flow": [
          "Dart Control Flow"
        ],
        "Dart Ternary Operator": [
          "Dart Ternary Operator"
        ],
        "Dart Functions": [
          "Dart Functions"
        ],
        "Dart Classes and Objects": [
          "Dart Classes and Objects"
        ],
        "Dart Collections": [
          "Dart Collections"
        ],
        "Dart Asynchronous Programming": [
          "Dart Asynchronous Programming"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Dart and Flutter Ultimate Course: Learn, Build & Deploy Apps course by Uplatz.\n\n\nDart is an open-source, general-purpose programming language developed by Google. It is designed for fast and efficient app development, particularly for frontend UI-based applications. Dart is mainly used for Flutter, Google’s UI toolkit for building cross-platform mobile, web, and desktop applications.\nDart is object-oriented and supports both ahead-of-time (AOT) compilation for fast execution and just-in-time (JIT) compilation for faster development cycles.\n\n\nFlutter is an open-source UI software development kit (SDK) created by Google. It enables developers to build natively compiled applications for mobile (iOS, Android), web, and desktop from a single codebase. Flutter uses the Dart programming language and is known for its ability to create visually appealing, high-performance apps with a smooth user experience.\n\n\nHow Dart Works?\nDart works by compiling code into native machine code, JavaScript, or WebAssembly (for web apps). It provides both JIT and AOT compilation mechanisms:\nJust-in-Time (JIT) Compilation\nUsed during development for hot reload in Flutter.\nAllows developers to see code changes instantly without recompiling the entire app.\nAhead-of-Time (AOT) Compilation\nUsed for production builds to compile Dart code into highly optimized machine code.\nEnsures fast startup time and high performance.\nDart code is executed using:\nDart VM (Virtual Machine) – Used for running scripts and during development.\nDart2JS – Compiles Dart code into JavaScript for web apps.\nNative Compilation – Converts Dart into native machine code for mobile apps.\n\n\nWhere is Dart Used?\nFlutter Mobile Apps – Android & iOS development.\nWeb Development – Dart compiles to JavaScript.\nDesktop Apps – Supports macOS, Windows, and Linux.\nServer-side Development – Can be used for backend systems.\n\n\nHow Flutter Works\nFlutter operates by compiling Dart code directly into native ARM code, bypassing the need for separate iOS and Android codebases. At its core, it renders the UI using a high-performance 2D graphics engine called Skia. Instead of relying on native UI components, Flutter renders its own widgets directly on a canvas, giving developers more control over the app's appearance and performance.\nThe key workflow involves:\nWriting Dart Code: Flutter apps are written in Dart, a language optimized for building client apps.\nWidgets: Flutter's UI is built entirely with widgets that are fast and customizable. Everything in Flutter (buttons, text fields, layouts) is a widget.\nHot Reload: Developers can instantly see changes made to the code, speeding up the development process.\nRendering Engine: Flutter renders the widgets using its engine, which ensures high performance across platforms.\n\n\nKey Features of Flutter\n\n\nSingle Codebase for Multiple Platforms – Develop for Android, iOS, web, and desktop with just one codebase.\nHot Reload – Allows developers to instantly see changes in the code without restarting the app, speeding up development.\nCustomizable Widgets – Flutter provides an extensive library of pre-built widgets, which can be customized to fit any design.\nNative Performance – Dart code is compiled to native machine code, ensuring high performance and fast rendering.\nRich Motion APIs – Flutter has built-in support for animations, gestures, and smooth transitions, enabling rich, interactive UIs.\nAccess to Native Features – Flutter easily integrates with native modules, allowing access to platform-specific functionality (e.g., camera, GPS).\nBuilt-in Testing Support – Offers a comprehensive testing framework for unit, integration, and UI testing.\n\n\nBenefits of Learning Flutter\nLearning Flutter opens up opportunities to create modern, scalable, and high-performance apps across multiple platforms from a single codebase.\n\n\nCross-Platform Development – With a single codebase, you can target multiple platforms, saving time and resources.\nHigh Demand – Flutter's popularity is growing, and businesses are adopting it for its efficiency, leading to a rising demand for Flutter developers.\nFast Development – Features like Hot Reload and customizable widgets accelerate development, making Flutter an ideal choice for prototyping and production apps.\nCommunity and Ecosystem – Backed by Google and supported by a vibrant developer community, Flutter’s ecosystem is constantly expanding.\nOpen-Source and Free – Flutter is open-source, meaning it’s free to use with a growing repository of tools, libraries, and packages.\nNative-Like Performance – Apps built with Flutter are compiled directly to machine code, providing performance close to fully native apps.\nBeautiful UI Design – Flutter’s rich widget set and powerful graphics engine enable the creation of visually stunning and highly customizable UIs.\n\n\nDart and Flutter Ultimate Course: Learn, Build & Deploy Apps - Course Curriculum\n\n\n1. Introduction to Dart and Flutter\nWhat are Dart and Flutter?\nWhy learn Dart before Flutter?\n2. DartPad\nUsing the DartPad online playground.\nRunning DartPad codes offline.\n3. Dart Basics\nVariables, constants, and basic data types.\nArithmetic, relational, and logical operators.\n4. Control Flow in Dart\nConditional statements and loops (if, else, switch-case, for, while, do-while).\n5. Dart Functions\nUnderstanding Dart functions, types, and structure.\n6. Dart Object-Oriented Programming\nClasses, objects, properties, and methods.\n7. Dart Collections\nWorking with lists, maps, and sets.\n8. Dart Asynchronous Programming\nAsync functions, await, try-catch, and handling streams.\n9. Error Handling and External Packages\nHandling errors in Dart.\nUsing external Dart packages from Pub.\n10. Building a Weather App in Dart\nUsing external packages and APIs.\n11. Installing Flutter\nHow to install Flutter on Windows and macOS.\n12. Flutter Basics\nStatelessWidget and StatefulWidget.\nCommon Flutter widgets like Text, Image, Icon, Scaffold, and more.\n13. Flutter Layout Widgets\nUsing layout widgets like Row, Column, Stack, and ListView.\n14. Building a Basic Profile UI\nCreating a simple profile screen.\n15. Running a Flutter App\nRunning apps on Android and iOS devices.\n16. Flutter Navigation\nSingle screen navigation (Navigator.push() and Navigator.pop()).\nMulti-screen navigation with named routes and providers.\n17. Creating Multi-Screen Apps\nStructuring multi-screen apps such as a login and dashboard.\n18. Forms in Flutter\nBuilding, validating, and submitting forms.\n19. State Management in Flutter\nManaging state with setState() and other state management techniques.\n20. HTTP Requests and Local Storage\nMaking HTTP requests with the http package.\nWorking with SQLite and Shared Preferences for local data storage.\n21. Animations in Flutter\nImplementing basic implicit and explicit animations.\n22. Theming in Flutter\nCustomizing themes and adding simple animations.\n23. Firebase Integration\nSetting up Firebase in Flutter for Android and iOS.\nFirebase authentication with email/password and Google sign-in.\n24. Firebase App Development\nCreating a simple app with Firebase authentication.\nSetting up push notifications from Firebase.\n25. Messaging App Development\nOutline and code details for building a messaging app.\n26. Advanced Flutter Techniques\nFlutter BLoC pattern.\nContinuous integration and deployment (CI/CD) with GitHub.\n27. Deploying Flutter Apps\nDeploying apps to the Google Play Store from Windows and macOS.\nDeploying apps to the Apple App Store for iOS.\n28. Flutter Performance Optimization\nTechniques for optimizing Flutter app performance.\n29. Internals of Flutter Framework\nA deeper understanding of the Flutter framework.\n30. Preparing for Flutter Interviews\nCommon interview questions to practice.",
      "target_audience": [
        "Mobile App Developers – Developers looking to build cross-platform mobile applications with a single codebase.",
        "Front-End Developers – Those interested in expanding their skills from web development to mobile app development.",
        "Anyone aspiring for a career in mobile app development",
        "UI/UX Designers – Designers wanting to prototype or build interactive mobile interfaces with ease using Flutter’s rich UI components.",
        "Beginner Programmers – Individuals with basic programming knowledge who want to start a career in mobile app development.",
        "Entrepreneurs & Startups – Business owners seeking to develop their own mobile apps without needing separate iOS and Android teams.",
        "Full-Stack Developers – Developers interested in adding mobile app development to their full-stack skill set.",
        "Freelancers – Freelancers looking to offer mobile app development services for both iOS and Android using Flutter’s efficient framework."
      ]
    },
    {
      "title": "Beginner Introduction to Mobile App development with Xamarin",
      "url": "https://www.udemy.com/course/beginner-introduction-to-mobile-app-development-with-xamarin/",
      "bio": "Build cross-platform apps for IOS, Android or Windows using Xamarin",
      "objectives": [
        "Download and install visual studio on mac",
        "Download and install visual studio on Windows",
        "Create cross platform xamarin project",
        "Use same codebase for IOS,Android and Windows",
        "Test app on IOS Simulators",
        "Test app on Android Simulators",
        "Modify text",
        "Create a test app"
      ],
      "course_content": {
        "Introduction and dev environment setup": [
          "Introduction",
          "What is Xamarin",
          "Ways to Build Native Apps Using Xamarin",
          "Introduction to Xamarin.Forms",
          "Native vs Web Apps",
          "Visual Studio System Requirements",
          "Installing visual studio on mac",
          "Installing visual studio on Windows",
          "Create a test cross-platform app",
          "Testing the test app on Android Simulator",
          "Testing the test app on IOS Simulator",
          "Modifying the test app",
          "Overview of visual studio and xamarin"
        ],
        "C# Basics": [
          "What is C#",
          "Basic Data Types",
          "What is a String",
          "What are Variables",
          "Naming Variables",
          "What are Arrays",
          "Conditional Statements",
          "Lists Concatenation",
          "Lists",
          "Dictionaries",
          "Removing items from dictionaries",
          "While Loops",
          "Do While Loops",
          "For Loops",
          "For each loops",
          "Switch statements"
        ],
        "C# Project: Digital Clock": [
          "Project Introduction",
          "Creating the project with a form",
          "Designing the interface",
          "Adding a timer",
          "Activating the clock"
        ],
        "Creating a cross -platform game app": [
          "What we will create",
          "Creating the project",
          "Modifying and adding labels",
          "Creating Buttons",
          "Adding interactivity",
          "Adding Scoring",
          "Running your app on a physical device",
          "Thank You"
        ]
      },
      "requirements": [
        "You should know basic programming concepts",
        "You should have basic knowledge of C#",
        "You should have basic knowledge of Java",
        "You should have basic knowledge of Swift"
      ],
      "description": "Xamarin is a software platform that enables you to create cross platform apps that will work on the top three platforms (Android, IOS, Windows) using the same codebase .  The programming language used by Xamarin is C#.\nXamarin has in a way solved a problem most developers face and that is developing the same  app multiple times for each of the top three platforms : Android , IOS and Windows. Without Xamarin developers will have to use different development tools and programming languages to develop the same app for the top three platforms.\n.\nTopics include:\nInstalling visual studio on mac\nInstalling visual studio on Windows\nOverview of Visual studio and Xamarin development environment\nCreating a cross platform test app\nModifying text\nTesting your app in an Android simulator\nTesting your app in an IOS Simulator\nModifying XAML code\nXamarin can be used to develop native apps using :\nXamarin.form\nXamarin.IOS\nXamain .Andoid.\nUsing xamarin.form enables you use the same codebase across the top three platforms.",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Beginner programmers",
        "Beginner developers",
        "Beginner app developers"
      ]
    },
    {
      "title": "App Development - The Beginner's Course To Building Your App",
      "url": "https://www.udemy.com/course/digiruu-app/",
      "bio": "Learn the exact 10-step process that anyone can use to create their app without any experience",
      "objectives": [
        "Learn the exact 10-step system that anyone can use to get started on their app without any experience",
        "How to pick a winning app idea today (or validate an existing idea)",
        "See the exact steps you need to take to make sure people find, and download your app through some of the most simple yet incredibly effective strategies",
        "Get the ultimate checklist of things you need to do to give you the best possible chance to get investment for your app",
        "How you can replicate the success of Flappy Bird, Candy Crush, Instagram plus more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why The App Industry",
          "Overview Of The App Accelerator Program"
        ],
        "Programming Your Mind For Success": [
          "Adapt A Success Mindset",
          "The Importance Of Routine",
          "Recommended Books And Resources"
        ],
        "10-Step Process - Discovery": [
          "Idea To Intention",
          "Vision Statement",
          "Define Who Your App Is Serving",
          "Discovery Recap"
        ],
        "10-Step Process - Strategy": [
          "Which Platform Should You Build Your App For?",
          "Should You Build Your App Natively Or Using A Cross-Platform Coding Language?",
          "How To Make Money From Your App And Which Model Should You Use?",
          "Critical Factors To App Success"
        ],
        "10-Step Process - Execution": [
          "Naming Your App",
          "Features And MVP Features",
          "Sketching Your App",
          "Your Operations Team",
          "Your Development Team"
        ],
        "Funding And Investment": [
          "The Steps To Get Investment For Your App",
          "How To Create A Business Plan",
          "Creating A Pitch Deck"
        ],
        "Last Few Tips": [
          "Don't Rush Your App",
          "Golden Nugget 1"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to learn."
      ],
      "description": "App Development - The Beginner's Course To Building Your App\n\n\nDid you know that anyone can build a profit-generating app?\n\n\nLike Instagram, Tinder, Snapchat, Whatsapp...\n\n\nThat's right - anyone can build a successful app just like the same way Kevin Systrom and Mike Krieger built Instagram, like Sean Rad built Tinder, like Evan Spiegel built Snapchat (and so on and so forth...)\n\n\nAll you need is the idea, right? Wrong!\n\nHere's something that most people don't realise...\n\nAPPS are nothing but vehicles for businesses. The same way that an actual storefront, physical shop is a vehicle for a business. The same way that a website is a vehicle for a business. Apps are just another means of allowing someone to launch a business. And like all businesses, it's NOT the idea that'll make you successful.\n\n\nIt's how you execute the idea that'll make you successful!\n\n\nAnd that all starts with having the right strategy. Did you know that 9 out of 10 startups fail?! This is because they lack the right strategy.\n\n\nBut no more shall this be the case.\n\n\nI’m Aman Birdi, founder of the award-winning app agency, Digiruu. We’ve spent just under a decade helping hundreds of satisfied startups & businesses to launch their first app, and we're pretty damn good at it.\n\n\nBut we also know that building an app with us is expensive. It requires a large investment (minimum £25,000) and comes with a high risk.\nSo we decided to let you steal all of our strategies.\n\n\nThis course provides you with all of the knowledge, guidance, and expertise needed to create your own app just like like Instagram, Tinder, Snapchat, Whatsapp plus more.\n\n\nIt's all here - The only course of its kind that teaches you how to turn your idea from just a thought into a chart-topping app.\n\n\n*NOTE* This course does not teach programming skills",
      "target_audience": [
        "Anyone that wants to turn their idea from just a thought to an app, even if you have zero experience!",
        "Anyone that wants to learn the secrets to building a successful app business",
        "Anyone that wants to how they can get funding & investment for their app startup!"
      ]
    },
    {
      "title": "The App Developer Bootcamp",
      "url": "https://www.udemy.com/course/the-app-developer-bootcamp/",
      "bio": "Learn the basics of Swift and Xcode for app development quick and fast. For those with no programming experience!",
      "objectives": [
        "Code in Swift 3.0",
        "Become familiar with Xcode as a development tool",
        "Learn basic programming principles",
        "Learn app development fundamentals",
        "Use XCode 8"
      ],
      "course_content": {
        "Learn Swift Coding: Variables": [
          "Introduction to Variables in Swift",
          "Integers",
          "Floats and Doubles",
          "Characters and Strings",
          "Optional Variables"
        ],
        "Learn Swift Coding: If Statements": [
          "Introduction to If Statements in Swift",
          "Basic If Statements, Multiple Conditions and Nested If Statements",
          "Else If Statements",
          "If Let Statements"
        ],
        "Learn Swift Coding: Arrays": [
          "Introduction to Arrays in Swift",
          "Types of Arrays",
          "Array Elements",
          "Adding Elements to Existing Arrays",
          "Insert and Remove Functions"
        ],
        "Learn Swift Coding: For In Loops": [
          "Introduction to For In Loops in Swift",
          "Using Index Value to Perform Operations",
          "Combining Arrays and For In Loops",
          "Constructing Arrays Using For In Loops",
          "Combining For In Loops and If Statements",
          "Summary"
        ],
        "Learn Swift Coding: Functions": [
          "Introduction to Functions in Swift",
          "Functions with Parameters",
          "Functions With Return Types",
          "Functions with Multiple Return Values",
          "Functions with If Statements",
          "Functions with For In Loops",
          "Summary"
        ]
      },
      "requirements": [
        "Xcode",
        "A Mac is preferable",
        "You can use Xcode on A PC, however, it is your job to install OSX. If you are on a PC, please look up how to do this before purchasing this course."
      ],
      "description": "Do you want to learn to code for the App Store? Do you dream of releasing an app on the App Store? Do you want to learn programming in a friendly, straightforward way? This course is perfect for you.\nEven if you’ve never coded before, you can take this course. This course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nThis course is for anyone who is completely new to the Apple iOS platform, with no Swift programming skills. We’ll use native iOS development tools, which is Xcode.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.",
      "target_audience": [
        "People who want to learn how to code",
        "People who want to learn Swift 3.0",
        "Absolute beginners to programming",
        "People who want to get started developing for the App Store"
      ]
    },
    {
      "title": "Data Collection App with Flutter and Firebase RTDB",
      "url": "https://www.udemy.com/course/flutter-and-firebase-part-1-real-time-database/",
      "bio": "Explore the possibilities of Firebase Real-time Database (RTDB)",
      "objectives": [
        "Mobile App Development",
        "Mobile Interface Design in flutter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Create Project"
        ],
        "Data Class and Firebase Integration": [
          "Data Class",
          "Firebase Integration"
        ],
        "Interface": [
          "Main Interface Part 1",
          "Main Interface Part 2"
        ],
        "Submit": [
          "Text Form Field Part 1",
          "Text Form Field Part 2",
          "Submit Part 1",
          "Submit Part 2"
        ],
        "Display and Delete": [
          "Display Part 1",
          "Delete",
          "Display Part 2"
        ],
        "Update": [
          "Update"
        ],
        "Conclusion": [
          "Conclusion and Project"
        ]
      },
      "requirements": [
        "Should install Android Studio Code and InterlliJ or Visual Studio Code"
      ],
      "description": "This class covers Flutter and Firebase Real-time Database in more details. The class focuses on CRUD (Create, Read, Update and Delete) of Firebase Real-time Database. Students will learn how to integrate Firebase into flutter applications. Students will also learn how to create, read, update and delete from real-time database in more details. Aside Firebase and database, students will also learn how to design interfaces in flutter, including how to use pop-ups and dialog box in flutter.\nStudents taking this class should have basic knowledge in programming. Basic knowledge and experience in flutter and/or dart is preferred but not a requirement.",
      "target_audience": [
        "Beginner Flutter Developers",
        "Intermediate Flutter Developers",
        "Advanced Flutter Developers"
      ]
    },
    {
      "title": "whatsapp clone with video and audio call",
      "url": "https://www.udemy.com/course/messenger-clone-with-video-and-audio-call/",
      "bio": "whatsapp clone with video and audio in firebase firestore android studio",
      "objectives": [
        "You will learn a lot about android development",
        "You will learn a lot about firebase development",
        "You will learn a lot about webRtc framework",
        "You will learn a lot about quickblox"
      ],
      "course_content": {
        "The course": [
          "preview",
          "Login",
          "Login 2",
          "Register",
          "Recyclerview adapter",
          "Recyclerview",
          "Testing the app",
          "done testing",
          "User profile",
          "Profile",
          "profile",
          "chat",
          "Retrieve list of users",
          "chat",
          "chat",
          "chat",
          "testing the app (1)",
          "testing the app (done)",
          "Integrating quickblox",
          "quickblox login",
          "quickblox",
          "Done fixing all errors",
          "calling feature",
          "message Adapter",
          "Final test"
        ]
      },
      "requirements": [
        "Android studio",
        "A google account (for firebase)",
        "0 Knowledge (Doesn' t really matter)"
      ],
      "description": "My name is ini hood and i will be teaching  you about android development:\nYou will learn a lot about android development,  firebase development (firestore), and webRtc technology\nwhich is used for video or audio communication. And then we will talk about quickblox which  makes use of webRtc but in a more understandable way",
      "target_audience": [
        "Anyone interested in android and firebase development",
        "Anyone interested in computer programming"
      ]
    },
    {
      "title": "IONIC - Build Android & Web Apps with Ionic",
      "url": "https://www.udemy.com/course/ionic-tutorials-build-android-web-apps-with-ionic/",
      "bio": "Learn about basic building blocks of ionic, integration with angular framework and building hybrid mobile applications.",
      "objectives": [
        "You will learn skills related to mobile app development, web components, and website app developments",
        "You will also learn details and information regarding front end technologies such as HTML, CSS, angularJS, or other frameworks.",
        "You will also learn about NodeJS and others react and backbone based java scripting frameworks",
        "you will also understand how to work on CLI based applications and how to use it. You will also learn about interaction with APIs, themes"
      ],
      "course_content": {},
      "requirements": [
        "For the ionic tutorials, all you need is a strong interest and a passion to learn and work on this technology and framework. Apart from this, you will also be required to have a basic understanding of web-based frameworks, a brief background about any front end frameworks or languages or technologies. You will also be required to have a sound knowledge of mobile-based web apps primarily for iOS, Windows, and Android. Having a sound knowledge about any of the Apache Cordova, AngularJS, HTML5, CSS, and Javascript is a plus."
      ],
      "description": "Ionic is the open-source framework that is used for the development of mobile-based applications. It provides us with the list of services and various tools which are required for building the Mobile User Interface with the native feel and the same look. The ionic framework needs to have a native wrapper interface using which it will be able to run the ionic based applications on mobile devices. Moreover, it can be known to be the front-end based HTML framework which comprises many front end languages, and therefore it is built on top of the possibly best front end framework, AngularJS, and Cordova. It is an HTML5 based Mobile Application development framework which is targeted at building mobile-based hybrid apps. Ionic can be thought of as a front end UI framework that is used to handle the basic look and feel and the User interface based interactions that are required for the app to be compelling. It is somewhat like Bootstrap for native applications that are built for the support of a broad range of common and basic native mobile-based components, beautiful design, and slick animations.\nThe features would include AngularJS based Model View Controller architecture for creating and building rich SPAs also known as Single Page Applications particularly optimized for the device and mobile-based devices. Other features would include CSS components that come along with the native look and feel and are used to provide all the elements which are typically required by a mobile-based web application. The default styling of the components can be easily overridden which can accommodate their designs. The JavaScript components extend the CSS component capabilities and also Javascript related functions and their capabilities to cover the mobile elements which cannot be only done with HTML and CSS. Other features include the ones related to Cordova plugins that offer the API related to the usage of the mobile-based native device functions with JavaScript code. The Ionic CLI is a NodeJS based utility which is powered by the various commands required for building, starting, running as well as emulating ionic applications. The views are a very useful platform that is required for sharing, uploading, and testing your applications for native devices. It is released under MIT license.\nYou will learn skills related to mobile app development, web components, and website app developments. You will also learn details and information regarding front end technologies such as HTML, CSS, angularJS, or other frameworks that are mainly related to front end technologies. You will also learn about NodeJS and others react and backbone based java scripting frameworks. Apart from that, you will also understand how to work on CLI based applications and how to use it. You will also learn about interaction with APIs, themes, and other resources which forms an essential and integral part of the UI component’s library",
      "target_audience": [
        "The ideal target audience for the Ionic 4 course is JavaScript and front end developers who are new to the world of mobile and web-based development. It helps provide easy to understand and implement simple solutions to all the mobile and app developers. Software engineers software developers , web developers, web engineers, entrepreneurs and students who are either working on something of their own or have some form of a new idea which can be to develop a different or a new framework or library or utility altogether or some kind of a college project at which they need a new application backed with the newest features and technologies of the mobile site as well as web-based."
      ]
    },
    {
      "title": "Complete IOS 8 and Xcode 6 Guide - Make iPhone & iPad Apps",
      "url": "https://www.udemy.com/course/complete-ios-8-and-xcode-6-course-make-iphone-ipad-apps/",
      "bio": "A Guide to iPhone and iPad development. A Complete Xcode 6 and IOS 8 Course with Swift Beginner to pro.",
      "objectives": [
        "Full understanding of Xcode and all it has to offer",
        "Learn how to program for IOS 8 to create your own apps",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS development",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Getting To Grips!": [
          "Downloading and Installing Xcode",
          "Purchasing a Developer Licence",
          "Project Types, What's Best For Me?",
          "Creating an App ID",
          "What are Classes, InfoPLists and Delegates?",
          "Using the Interface Builder",
          "Building on the IOS Simulator",
          "Create, Download and Install Certificates",
          "Building to a Device",
          "Creating Actions and Outlets",
          "Creating a Hello World Application"
        ],
        "Understanding Functions": [
          "Displaying Text",
          "Text Properties",
          "UITextfields",
          "Dismissing the Keyboard",
          "Using If Statements",
          "Fading Objects",
          "Hiding Objects",
          "Enabling and Disabling Objects",
          "Creating a Random Number Generator",
          "Creating a Random Word Generator"
        ],
        "Creating Actions": [
          "UISwitches",
          "UISegmentedControls",
          "Controlling UISliders",
          "UIActionSheets",
          "Detecting Shake Gestures",
          "Creating URL Links",
          "Using Delayed Actions"
        ],
        "Getting A Good View!": [
          "UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Using UIPickerViews",
          "Using UIWebViews",
          "Controlling UIWebViews",
          "Activity Indicator",
          "Using UIMapViews",
          "Controlling UIMapViews",
          "Switching Views in Storyboards",
          "Switching to a XIB View",
          "Removing The Status Bar"
        ],
        "Making An App Look Good": [
          "Importing Files",
          "Displaying Images",
          "Displaying Retina Images",
          "Changing Images",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "Displaying PDF'S",
          "Changing the Background Colour",
          "Creating Animations",
          "Adding Loading Screens/Launch Images",
          "Universal Loading Screen",
          "Adding App Icons",
          "Taking Screenshots Programatically",
          "Taking Photos from Camera",
          "Loading Images from Library"
        ],
        "Coming In Loud And Clear": [
          "Playing Audio Files",
          "Playing Video Files",
          "Playing YouTube Videos",
          "Streaming Live Radio",
          "Streaming MP3 Files",
          "Vibrating the Device"
        ],
        "Creating A Tab Bar Application": [
          "Creating a Tab Bar Application",
          "Customising a Tab bar Application"
        ],
        "Creating A Table View Application": [
          "Creating a Table View Application",
          "Pushing Table View to a Detail View",
          "Populating a Detail View",
          "Customising a Table View",
          "Adding Table View Headers"
        ],
        "Saving And Loading Stuff!": [
          "Saving and Loading Text",
          "Saving and Loading Data"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad Apps but are not sure where to start? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is your course!\nThis Complete IOS and 8 Xcode 6 with Swift Course will give you everything your need to start your new career in IOS development, The course has been structured to support Objective-C and Swift, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nSell Your App to Millions of Potential Users and earn extra revenue from Ad networks and in app purchases, Making money has never been so easy!\nNot only do you get the best online IOS development course money can buy or your money back! You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new career!\nTopics Covered:\nUnderstanding Xcode, Interface Builder, Simulator and Project Types\nObjective-C: Full guide to creating full featured apps\nSwift: Get to know the new language\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nFull Featured Apps\nSaving and Loading: From text to data\nEarning Revenue Ad Networks\nFull In App Purchase Support\nCore Data Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS Apps"
      ]
    },
    {
      "title": "Create an iOS App: Build Your First App In 1 Hour",
      "url": "https://www.udemy.com/course/ios-development-learn-to-build-your-first-app/",
      "bio": "Learn How to Create A Simple iPhone iOS 16 App",
      "objectives": [
        "Create a simple iOS 16 app",
        "Overview of Swift",
        "Using Xcode IDE and Interface Builder",
        "Model-View-Controller design pattern",
        "Basic UIKit components like buttons and labels",
        "How to debug if needed"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome",
          "The project"
        ],
        "Setup": [
          "Create First iOS App",
          "Xcode interface"
        ],
        "SwiftUI Fundamentals": [
          "SwiftUI stacks",
          "HStacks in SwiftUI",
          "Modifying SwiftUI objects",
          "Understanding variables",
          "Creating a TextField in SwiftUI",
          "Creating a slider in SwiftUI"
        ],
        "Finishing The App": [
          "Adding features",
          "Using if/else statements",
          "Adding an app icon"
        ]
      },
      "requirements": [
        "Xcode installed (free from app store)",
        "basic knowledge of Xcode and Swift preferred, but not required"
      ],
      "description": "In this course you will learn  how to build your very own iPhone app. Learn the fundamentals of developing with iOS using Swift and Xcode by building an app. This course will teach you how to create a basic app, so that you will get a solid foundation in app development.\nYou will learn how to build a simple app with Swift and Xcode, the language we will be developing with. Swift is a programming language created by Apple for building iOS and Mac apps. It's powerful and easy to use, even for beginners.\nMy focus is to explain things in simple, plain English, so that you can get started making your own apps. My approach to this course will be to slowly introduce concepts as you need them, rather than trying to equip you with everything up front only to overwhelm you!\nTowards the end of  this course you will have learned about the core concepts and by the end you will have finished creating an app that will get you oriented with the world of iOS development.\nNot only will you be learning how to create an app, but this course will give you a boost in your career. Programming can be self-taught and yes, you can start your own career in software development even if you don't have a formal background. It's probably the single greatest thing about this field; that merit is based on your achievements and hard work rather than by seniority.",
      "target_audience": [
        "beginning developers"
      ]
    },
    {
      "title": "Appium 2.X Mobile Automation - Android & iOS",
      "url": "https://www.udemy.com/course/mobile-automation-using-appium-for-android-ios-devices/",
      "bio": "Latest Version 2.X of Appium, course to master Appium , Build Page Factory framework,Mobile Automation testing,Appium",
      "objectives": [
        "You can work on any project on appium on both Android & iOS",
        "Plan, build and execute test automation with Appium",
        "Integrate your test scripts with saucelabs",
        "Configure jobs in jenkins",
        "all real world issues and solutions"
      ],
      "course_content": {
        "APPIUM 2.X Features , Frameworks": [
          "Overview on Appium 2.X",
          "Install Appium 2.X , Install Drivers for Android & iOS executions",
          "Write a program to launch UICatlog app in the iOS Simulator",
          "Write a program to launch app in the Android Real Device",
          "Create Instance to Android Driver by Passing various capabilities",
          "Overview on Coordinates Part 1",
          "Overview on Coordinates Part 2",
          "Overview on Coordinates Part 3",
          "Overview on Coordinates Part 4",
          "Overview on Coordinates Part 5",
          "SwipeUp & Swipe Down Operations",
          "W3C Appium Gestures overview",
          "Tap operation",
          "Double Tap Operation & Long Press Operation",
          "Scroll using UiScrollable",
          "Scroll using UiScrollable - setAsVerticalList",
          "Scroll using UiScrollable - setAsHorizontalList",
          "Scroll using UiScrollable - setMaxSearchSwipes",
          "Scroll using UiScrollable - scrollForward & scrollBackward",
          "Scroll using UiScrollable - ScrollToEnd & scrollToBeginning",
          "Parallel Execution part 1",
          "Parallel Execution part 2",
          "Page Factory Framework + Cucumber + Testng Part 1",
          "Page Factory Framework + Cucumber + Testng Part 2",
          "Page Factory Framework + Cucumber + Testng Part 3",
          "Page Factory Framework + Cucumber + Testng Part 4",
          "Page Factory Framework + Cucumber + Testng Part 5",
          "Page Factory Framework + Cucumber + Testng Part 6",
          "Page Factory Framework + Cucumber + Testng Part 7",
          "Page Factory Framework + Cucumber + Testng Part 8",
          "Page Factory Framework + Cucumber + Testng Part 9"
        ],
        "Appium Plugins": [
          "Appium - Dashboard Plugin Installation",
          "Execute Program and validate Dashboard Plugin",
          "Appium - Image Plugin Installation",
          "Execute Program and validate Appium-Image plugin",
          "getImagesSimilarity command with example Part 1",
          "getImagesSimilarity command with example Part 2",
          "getImagesSimilarity command with example Part 3",
          "Appium-device-farm plugin configuration",
          "Appium-device-farm plugin implementation",
          "Appium-device-farm plugin - Video Recording Part 1",
          "Appium-device-farm plugin - Video Recording Part 2",
          "Overview on ElementID",
          "ElementID capturing with example",
          "Appium-gestures-plugin installation",
          "Appium-gestures-plugin : Swipe Up & Swipe Down- Android",
          "Appium-gestures-plugin : Swipe Up & Swipe Down- iPhone",
          "Appium-gestures-plugin : Swipe Left & Swipe Right- Android",
          "Appium-gestures-plugin : Swipe Left & Swipe Right- iPhone",
          "Appium-gestures-plugin : DoubleTap",
          "Appium-gestures-plugin : longPress"
        ],
        "Android Configuration & Automation": [
          "Introduction to the training program",
          "Overview on all the videos",
          "Introduction to Appium ,types of application and Architecture & Config of Appium",
          "Complete Course Material attached as a zip file for this lecture.",
          "Appium on windows configuration part 1",
          "Appium on windows configuration part 2",
          "Appium Python & Selenium Compatibility Matrix",
          "Overview on Android Driver, desired capabilities",
          "Connecting real device, enabling usb debugging mode, creating simple script",
          "New LECTURE Appium 1.22.0 installation and configuration for inspector session",
          "Overview on Appium inspector, Vysor, creating simple script Part 1",
          "Create Maven Project and configure all dependencies",
          "Handling native app Login & Signup functionality. Handle text fields and buttons",
          "Overview on noReset",
          "NoReset Example & Create account in ECOM app",
          "E2E scenario automation :: Handle Popup, Dropdown",
          "Overview on TouchAction - Scroll down Part 1",
          "Overview on TouchAction - Scroll down Part 2 and Introduction to Swipe",
          "Handling Swipe Part 2",
          "HandlingHybrid app , switch to webview Part 1",
          "HandlingHybrid app , switch to webview Part 2 & Handle web application"
        ],
        "Configuration of appium on MAC & iOS Automation": [
          "Frequently encountered issues and possible solutions",
          "Preconditions to Configure appium on MAC part 1",
          "Preconditions to Configure appium on MAC part 2",
          "Configuration of appium on MAC part 1",
          "Configuration of appium on MAC part 2",
          "MAC configuration and prerequisites for Appium, Geneate .app file for UICatalog",
          "Launch UICatalog app using Program , Perform search operation",
          "Handling Alerts Part 1",
          "Handling Alerts Part 2",
          "Handling of various objects :: Date Picker, Picker view, Web view & Switch",
          "Overview on Jenkins",
          "Creating jobs in jenkins",
          "Jenkins Master & Slave Configuration",
          "Saucelabs Integration",
          "Page factory implementation Part 1",
          "Page factory implementation Part 2"
        ],
        "Cucumber BDD Framework Tutorial": [
          "Overview on Cucumber BDD Framework - Part 1",
          "Overview on Cucumber BDD Framework - Part 2",
          "Overview on Cucumber BDD Framework - Part 3",
          "Overview on Cucumber BDD Framework - Part 4",
          "Overview on Cucumber BDD Framework - Part 5",
          "Update framework to Mobile specific and Page Factory",
          "Page factory framework demonstration Part 1",
          "Page factory framework demonstration Part 2"
        ],
        "Interview Q & A": [
          "Interview Q & A Part 1",
          "Interview Q & A Part 3",
          "Interview Q & A Part 2",
          "fullReset vs noReset",
          "Udid vs DeviceName"
        ],
        "Core Java tutorial": [
          "Introduction to JAVA",
          "What is method ,variable, package in JAVA",
          "What is class & method",
          "What are various Data types",
          "Eclipse editor overview and creating a project",
          "How to create object",
          "What are method parameters & return types",
          "What is access modifiers",
          "Overview on inheritance",
          "What is abstraction & abstract class",
          "Overview on interface"
        ],
        "Java Programming Series": [
          "How to Check Given String is Palindrome or Not | JAVA Program to Check String is",
          "Print All Substrings of a given String | Java Program to print all substrings fo",
          "Print all Palindromic Substrings | Find All Palindromic Substrings In a String",
          "Java Program || Magic Number || Check whether given number is Magic Number or no",
          "Program to Reverse A String in Java | Reverse A String | Reverse Words in a Stri",
          "Java program to arrange array elements in ascending order",
          "Capitalize each word in the given string",
          "Count Number of Words in Given String",
          "Count number of spaces in the given String",
          "Main Method Overloading with examples",
          "Print Numbers from 1 to 10 without using loops",
          "Remove Duplicate Values in an Array"
        ]
      },
      "requirements": [
        "Basic idea on Manual testing & Mobile Testing",
        "Basic idea on Selenium Automation",
        "Basic idea on Core JAVA"
      ],
      "description": "Course is updated on 04-08-2025 with below topics\nScroll using UiScrollable\nScroll using UiScrollable - setAsVerticalList\nScroll using UiScrollable - setAsHorizontalList\nScroll using UiScrollable - setMaxSearchSwipes\nScroll using UiScrollable - scrollForward & scrollBackward\nScroll using UiScrollable - ScrollToEnd & scrollToBeginning\n\n\n\n\nCourse is updated on 03-08-2025 with below topics\nParallel Execution using setSystemPort & wdaLocalPort\n\n\nCourse is updated on 02-08-2025 with below topics\nAppium-gestures-plugin : Swipe Left & Swipe Right- Android\nAppium-gestures-plugin : Swipe Left & Swipe Right- iPhone\nAppium-gestures-plugin : DoubleTap\nAppium-gestures-plugin : longPress\n\n\nCourse is updated on 01-08-2025 with below topics\nOverview on ElementID\nAppium-gestures-plugin installation & overview\nAppium-gestures-plugin : Swipe Up & Swipe Down- Android\nAppium-gestures-plugin : Swipe Up & Swipe Down- iPhone\n\n\nCourse is updated on 31-07-2025 with below topics\nCoordinates identification which covers X , Y, Height & Width\n\n\nCourse is updated on 29-07-2025 with below topics\nAppium-device-farm plugin  - Video Recording Configuration\nAppium-device-farm plugin  - Video Recording Implementation\n\n\nCourse is updated on 28-07-2025 with below topics\ngetImagesSimilarity with options & highlight the difference between images command with example\ngetImagesSimilarity using Files & options, highlight the difference between images command with example\nappium-device-farm plugin configuration , implementation with example\nCourse is updated on 27-07-2025 with below topics\ngetImagesSimilarity command with example\nCourse is updated on 26-07-2025 with below topics\nAppium-Dashboard Plugin with examples\nAppium-Image Plugin with examples\n\n\nCourse is updated on 26-01-2025 with below topics\nAppium Interview Question & Answers Part 1\nAppium Interview Question & Answers Part 2\nAppium Interview Question & Answers Part 3\nJAVA Programming below series of videos updated to this course\nHow to Check Given String is Palindrome or Not | JAVA Program to Check String is Palindrome or not\nPrint All Substrings of a given String | Java Program to print all substrings for a String\nPrint all Palindromic Substrings | Find All Palindromic Substrings In a String\nJava Program || Magic Number || Check whether given number is Magic Number or not\nProgram to Reverse A String in Java | Reverse A String | Reverse Words in a String in Java\nJava program to arrange array elements in ascending order\nCapitalize each word in the given string\nCount Number of Words in Given String\nCount number of spaces in the given String\nMain Method Overloading with examples\nPrint Numbers from 1 to 10 without using loops\nRemove Duplicate Values in an Array\n\n\n\n\n\n\n\n\nCourse is updated on 05-01-2024 with below topics on 2.X version of APPIUM:\nPerforming Double Tap Operation\nPerforming Tap Operation\nPerforming Double Long Press Operation\nPerforming Double Swipe-UP/ Swipe-DOWN Operation\n\n\nCourse is updated on 30-12-2023 with below topics on 2.X version of APPIUM:\nPage Factory Framework + Cucumber + Testng Part 8\n\n\nCourse is updated on 29-12-2023 with below topics on 2.X version of APPIUM:\nPage Factory Framework + Cucumber + Testng Part 3\nPage Factory Framework + Cucumber + Testng Part 4\nPage Factory Framework + Cucumber + Testng Part 5\nPage Factory Framework + Cucumber + Testng Part 6\nPage Factory Framework + Cucumber + Testng Part 7\n\n\n\n\nCourse is updated on 20-11-2023 with below topics on 2.X version of APPIUM:\nPage Factory Framework + Cucumber + Testng Part 1\nPage Factory Framework + Cucumber + Testng Part 2\n\n\nCourse is updated on 16-11-2023 with below topics on 2.X version of APPIUM:\nHow to pass options while creating AndroidDriver\nnoReset\nappAcitivity\nplatformName\nplatformVersion\nCourse is updated on 07-10-2023 with below topics:\nIntroduction Appium 2.X version\nConfiguring machine with Appium 2.X\nCreate a Program using XCUITestOptions to launch an app on Simulator\nCreate a Program using UiAutomator2Options to launch an app on Android Device\nwe are uploading videos that covers features on Appium 2.X versions\n\n\nAppium - Mobile Testing with Latest 1.22 and real time project implementation\n#Appium - Mobile Testing with Latest 1.22 and real time project implementation\nAppium 1.22\n#Appium 1.22\nappium 2.1\nappium latest version\n\n\n\n\nThis Course is updated on 23rd Feb 2022 with  course material section\n\n\nThis Course is updated on 26th Jan 2022 with :\n1. Frequently encountered issues and possible solutions\n2. Modify existing framework and convert to Mobile & Page Factory framework\n3. Pagefactory framework with example and assignment\n4. Pagefactory implementation on iOS and identifying multiple locators using page factory and adding loggers to code base\n5. Upgrading  Appium server to 1.22.0 and Appium inspector and fixing all the issues\n\n\nThis Course is updated on 07th Jan 2022 with page factory concept\nThis Course is updated on 06th Jan 2022 with saucelabs integration\nThis Course is updated on 05th Jan 2022 jenkins master slave implementation\nThis Course is updated on 04th Jan 2022 overview on jenkins and creating jobs in jenkins\n\n\nThis course is designed for complete beginners.\nGet started with Appium on Android & iOS using JAVA .\n\n\nIf you are a complete beginner on Mobile testing, this course is perfect for you.\n\n\nAt the end of the training you will be in a position to handle any interviews on Mobile automation testing and easily crack interviews and handle any project on Mobile automation\n\n\nPlease find below list of topics that we are going to cover as part of this training program:\nOn a high level below is the list of items we are covering:\n1. Configuring window Machine\n2. Configuring MAC Machine\n3. Android device automation\n4. IOS device automation\n5. Cucumber BDD framework\n6. Page factory model\n7. CI/CD integration\n8. Saucelabs integration\n9. Core java tutorial\n\n\nPlease find below detailed concepts which we are covering:\n\n\noverview on core java concepts\nIntroduction to Appium\nOverview of Open Source Mobile Test Automation tools\nOpen source Mobile Automation tool Evaluation docs\nAutomating various scenarios in Android App\nOverview on Cucumber BDD framework\nAutomating app using BDD framework\nOverview on Android Driver, desired capabilities\nConnecting real device, enabling usb debugging mode, creating simple script\nOverview on Appium inspector, Vysor, creating simple script Part 1\nCreate android Emulator and execute script on emulator\nHow to handle switches on Android & iOS\nHow to handle buttons on Android & iOS\nHow to handle text fields on Android & iOS\nScenario for login to an application\nScenario for creating an account with ecom application\nCreating an E2E scenario that handles DropDown, Popup , text fields on ecom application\nSwitching webview and handling contexts\nIdentifying locators for the webview\nOverview on touch actions with examples\nWe have also included core java concepts in this tutorial\nCucumber BDD framework\nOverview on Page Factory framework with real world examples\nJenkins Master & Slave setup\nSaucelabs integration\n, XCUITest, UIAutomator, Katalon, Appium on Android, Appium on iOS, Automating mobile app",
      "target_audience": [
        "Anyone who wants to start their career in Mobile automation testing"
      ]
    },
    {
      "title": "Android Espresso Testing Complete Guide 2022",
      "url": "https://www.udemy.com/course/android-espresso-testing-complete-guide-2022/",
      "bio": "Android Application Testing Android Espresso",
      "objectives": [
        "Complete Android App Testing Guide",
        "Code Examples for Practice.",
        "Confidence to work on mobile automation testing",
        "Efficiency in writing automation tests cases."
      ],
      "course_content": {
        "Fundamentals of Android App Testing": [
          "Fundamentals of Android App Testing"
        ],
        "Getting Started with Android Espresso": [
          "Introduction to Android Espresso",
          "Android Espresso Setup Step by Step",
          "Write and Run First Test in Android Espresso",
          "How to Enable Developers Options on your Phone"
        ],
        "Espresso": [
          "Espresso Basics -View Matchers ,View Actions and View Assertions",
          "How to locate UI elements using UI Automator",
          "How to Create Custom Matchers in Android Espresso ?",
          "Espresso Rsource Idling",
          "All about Android Espresso Intents",
          "Espresso Intents Camera Example",
          "Android Espresso Lists (AdapterView)",
          "How to test RecyclerView in Android Espresso",
          "Mulptiprocess Espresso",
          "Android Espresso Web",
          "How to take Screenshot in Android Espresso"
        ],
        "Testing Other Components": [
          "Test your service",
          "Code Coverage with Jacoco"
        ],
        "Expresso Additional Resources": [
          "Espresso Cheat Sheet"
        ]
      },
      "requirements": [
        "You should know java basics to join the course and grasp quickly. You can refer to my java beginner course"
      ],
      "description": "Mobile automation testing is difficult considering variety of different android devices and OS versions.But I have simplified the Espresso for you all. As per my experience Espresso is great tool supported by Google for functional testing. Espresso allows you to do inter app testing and code coverage measure.\nWhat is Espresso ?\nEspresso is Android's Testing Framework used for writing effective and reliable UI Test cases.Espresso synchronizes actions written in test with application user interface.Before Test case run Espresso ensures that the activity is started. Espresso is intended to perform testing on single application but still it allows testing outside of your application as a black box testing.\nEspresso Test cases has three components View Matchers,View Actions and View Assertions. We will see there components in detail as we move on to Espresso Tutorial.\n\n\nEspresso Tutorial-\nHow to Setup Espresso for functional Testing?\nHow to Add and Run Your First Espresso Test Case ?\nHow to use View Matchers, View Actions and View Assertions in Espresso?\nHow to Create Custome Matcher in Espresso?\nTesting Recycler Viewwith Espresso\nTesting List View with Espresso Data Adapter\nHow to Test Dialer Activity with Espresso Intent?\nHow to Test Camera Activity with Espresso Intent?\nTesting Web Views using Espresso Web\nEspresso Resource Idling Example.\nEspresso Multiprocess\nTake Screenshot",
      "target_audience": [
        "This for you if you wish to become awesome mobile tester",
        "Any developer looking to understand how to test android apps in an automated way",
        "Tech leads tired of inefficiency becuase of having to run manual tests during Release/QA cycles",
        "Anybody who with learn automation for mobile testing"
      ]
    },
    {
      "title": "Android Studio for Arduino: Temperature Control",
      "url": "https://www.udemy.com/course/android-studio-for-arduino-temperature-control/",
      "bio": "Development of Bluetooth based Android App for Temperature Control",
      "objectives": [
        "Hardware parts and their connections for Bluetooth based Temperature control",
        "Reading sensor data and transmitting this data using Bluetooth module through Serial pins",
        "Enabling Bluetooth and listing paired Bluetooth devices using Bluetooth Adapter",
        "Creating connection between Android device and HC-05 module using Bluetooth Socket",
        "Sending and Receiving data through Bluetooth network",
        "Visualization of data periodically in Text View and designed custom Progress Bar",
        "Upper and Lower Threshold Temperature entrance and setting",
        "Using Music Player for alarm system",
        "Transmitting data from Android app to Arduino for controlling LED"
      ],
      "course_content": {
        "Introduction": [
          "Course Content",
          "Concept of Bluetooth Control"
        ],
        "Hardware": [
          "Hardware Connections",
          "Wiring of Hardware parts"
        ],
        "Arduino Programming": [
          "Temperature data reading and transmitting"
        ],
        "Android app: Design": [
          "Design Overview",
          "Custom Progress Bar",
          "Toggle Button and TextView",
          "TextView and EditText for Upper and Lower Threshold temperature",
          "Bluetooth icon and STOP buttons",
          "ListView and TextView for Paired devices list",
          "Bluetooth icon ClickListener"
        ],
        "Android app: Bluetooth Temperature Alarm": [
          "Permissions",
          "Bluetooth Enabling",
          "Location Permission",
          "Paired Devices List",
          "ClickListener for ListView",
          "Bluetooth Connection",
          "Initialization",
          "Thread",
          "Temperature Data Receiving",
          "Upper Threshold",
          "Lower Threshold",
          "Installation",
          "Mobile app testing"
        ],
        "Bonus Part: Mobile app Bluetooth data transmitting": [
          "Arduino Bluetooth LED Control",
          "Arduino LED Wiring",
          "Sending Data to Arduino",
          "Bluetooth mobile app test"
        ]
      },
      "requirements": [
        "Coding experience",
        "Understanding of Arduino based control"
      ],
      "description": "This course is for everyone who wants to develop their own Android mobile app for controlling Hardware-based systems through Bluetooth connection. Maybe you are a student who wants to develop an interesting project or an engineer who wants to get knowledge in this field or you are a person who wants to develop the product in smart systems but don’t know how to do it. In each way, it is best course which guides you during the first steps of this journey.\nThis course is based on both Hardware and Software parts which help you to understand the full concept and be aware of the full operation of the system. You will create your Android mobile app from scratch without using App Inventor. In the tutorials, all of the parts are explained in appropriate ways which you can understand.\nAndroid Studio for Arduino is a project-based course that also, combines a brief explanation of the concept. If you want to do something interesting and away from ordinary projects which make difference and allow you to improve skills for developing the idea which is inside of your head in the smart systems field, it is a course that will provide enough background. I am inviting you to join my course and start this journey together.",
      "target_audience": [
        "This course is for Developers, Egineers, students and also hobbiest who wants to create smart systems"
      ]
    },
    {
      "title": "2022 Android test assignment. New, clean, s.o.l.i.d & tested",
      "url": "https://www.udemy.com/course/android-test-assignment-new-clean-solid-tested/",
      "bio": "Android interviewer shows you how to code out an Android home test assignment using the newest technologies in 2022.",
      "objectives": [
        "Use Material Design",
        "Use Android development best practices",
        "Apply good architecture on any new Android app they build after taking this course",
        "Use unit testing in upcoming projects. Test logic controllers - kotlin coroutines and flows."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "GIT",
          "GIT - Remarks",
          "Gradle",
          "Gradle - Remarks",
          "Dependency Injection",
          "Dependency Injection - Remarks",
          "Hilt",
          "Hilt - Remarks",
          "Room database",
          "Room database - Remarks",
          "First use case - Login",
          "First use case - Login - Remarks",
          "Login use case part 2",
          "Login use case part 2 - Remarks",
          "Finishing use case logic",
          "Finishing use case logic - Remarks",
          "Testing our use our use cases using an activity",
          "Testing our use our use cases using an activity - Remarks",
          "Themeing",
          "Themeing - Remarks",
          "Navigation component",
          "Navigation component - Remarks",
          "Login fragment layout start. Theme additions.",
          "Login fragment layout start. Theme additions - Remarks",
          "Creating login layout 1",
          "Creating login layout 1 - Remarks",
          "Creating login layout 2, Splash screen",
          "Creating login layout 2, Splash screen - Remarks",
          "Creating login viewmodel",
          "Creating login viewmodel - Remarks",
          "Connected login fragment and login view.",
          "Connected login fragment and login view - Remarks",
          "Register user. Snackbars for errors and registration success",
          "Register user. Snackbars for errors and registration success - Remarks",
          "Forgot password",
          "Forgot password - Remarks",
          "Logged in fragment",
          "Logged in fragment - Remarks",
          "Authentication viewmodel",
          "Authentication viewmodel - Remarks",
          "Finishing the Registration flow",
          "Finishing the Registration flow - Remarks",
          "Finished with usecases and viewmodels",
          "Finished with usecases and viewmodels - Remarks",
          "Final fixes for the app",
          "Final fixes for the app - Remarks"
        ],
        "Testing": [
          "Writing our first unit test - LoginViewModel first test",
          "Writing our first unit test - LoginViewModel first test - Remarks",
          "LoginViewModel tests - fully covered",
          "More tests!",
          "Final words"
        ]
      },
      "requirements": [
        "Some knowledge of Kotlin. Interest in best practices of Android development."
      ],
      "description": "Have you been coding Android for a while and want to apply for your first job? Are you an employer and want to find ideas what to look for in test assignments?  Then welcome to this course!\nWe will be taking an Android test assignment and coding it out together. You will learn about the newest and hottest topics in the Android world!\nKotlin\nCoroutines, Kotlin flows\nMaterial Design\nSQLite Room database\nDatastore\nViewModels\nDagger Hilt dependency injection\nUnit testing\nYou will learn that maintainable architecture gives the best way to know our view's state. This state will be kept in the ViewModel and can always be rebuilt. The ViewModel will communicate with use case classes that handle mixing the persisted data that we hold in our app's database or any other source of data.\nLearn to utilize the power of logcat by logging all that the viewModel and use cases are doing. This can come especially handy if you want to trace how a crash happened in an application or why something did not behave as planned.\nWe will be focusing on building a maintainable and scalable codebase. This code will become a reference for any upcoming projects you do in the future and will certainly help you gain more confidence in Android development.\nLet's get to it!",
      "target_audience": [
        "Beginner and Intermediate Android developers."
      ]
    },
    {
      "title": "Flutter Mastery: Building Dynamic Apps from scratch",
      "url": "https://www.udemy.com/course/flutter-mastery-building-dynamic-apps-from-scratch/",
      "bio": "Learn Flutter by creating 3 real-world applications, you'll feel confident just after the first 5 hours of the course",
      "objectives": [
        "How to set up your PC for Flutter development",
        "How to create UIs in Flutter",
        "How to store data locally in a Flutter app",
        "How to make network calls to a REST api",
        "How to manage states in a Flutter app using Provider",
        "How to do automated testing in Flutter",
        "Basics of animation in Flutter",
        "How to use Firebase as the backend of a Flutter app",
        "How to create a website using Flutter"
      ],
      "course_content": {
        "Introduction": [
          "The final product : The To-do list App",
          "Setting up the development environment",
          "Run the app",
          "Understanding the default code",
          "Everything is a widget in Flutter",
          "Remove the default code",
          "Hot reload",
          "Conclusion"
        ],
        "Creating layouts": [
          "Introduction",
          "Display a List",
          "Create a Task model",
          "Task detail page",
          "Styling the widgets",
          "Mark as Complete",
          "Strike through a text",
          "State management using callback functions",
          "Confirm delete alert dialog",
          "Navigator",
          "Add FAB",
          "Display a Form",
          "Display a Snackbar",
          "Display a Form to edit a Task",
          "Conclusion"
        ],
        "Storing data locally": [
          "Introduction",
          "Add task to local database",
          "Creating a helper class to handle all the database operations",
          "Use database helper to add a Task",
          "Retrieve data from the local database and display on the UI",
          "Update list automatically",
          "Load task detail from local database",
          "Mark as complete",
          "Delete task from local database",
          "Update task information on the local database",
          "Conclusion"
        ],
        "Authentication Flow": [
          "Introduction",
          "Creating the landing page",
          "Creating the login page",
          "Creating the registration page",
          "Set up Firebase",
          "User registration",
          "Handling registration errors",
          "Storing small amount of data on the Shared preferences",
          "Login using Firebase REST API",
          "Logout",
          "Conclusion"
        ],
        "Working with a REST API": [
          "Introduction",
          "Add task with a REST API",
          "Manage the sources of data",
          "Remaining API calls",
          "Error handling in Firebase",
          "Handling the errors of the local database",
          "Use both the datasources",
          "Conclusion"
        ],
        "Managing state using Provider": [
          "Introduction",
          "The problem that Provider solves",
          "Create a change notifier class",
          "Add the remaining functions to the Change notifier class",
          "Update the UI with help of provider",
          "Create a Change Notifier to manage Authentication state",
          "Manage authentication state",
          "Conclusion"
        ],
        "Automated Testing": [
          "Introduction",
          "Unit testing basics in Flutter",
          "Some more unit testing",
          "widget testing",
          "Integration test",
          "Conclusion"
        ],
        "Animation in Flutter": [
          "Introduction",
          "Animated Container",
          "Animated Switcher",
          "Tween Animation",
          "Animated Default Text Style",
          "Animated Crossfade",
          "Conclusion"
        ],
        "Flutter + Firebase: Recipe app": [
          "Introduction",
          "The final product: The Recipe app",
          "Setup Firebase with Flutter",
          "How data is stored in a Cloud Firestore database",
          "Fetch and display list of items from Cloud Firestore",
          "Fixing the issue of multidex",
          "Create the recipe details page",
          "Create the edit recipe page",
          "Edit recipe form",
          "Update data of a Firestore document",
          "Add item to an array of a Firestore document",
          "Delete an item from a Firestore array",
          "Update items of a Firestore array",
          "Add,Delete,Update items on instructions array",
          "Pick, Capture a recipe image to upload",
          "Upload image to Firebase storage",
          "Delete a document(recipe) from the Cloud Firestore database",
          "Add recipe to the Firestore database",
          "Login with Google",
          "Load the home page on successful authentication",
          "Add the creator's information to each recipe document",
          "Add timestamp to the recipe documents",
          "Parse timestamp to display time of recipe creation",
          "Conclusion"
        ],
        "Create a simple portfolio website using Flutter": [
          "Introduction",
          "Create a new Flutter project",
          "Create the home page",
          "Display images",
          "Navigate to other pages",
          "Add custom fonts",
          "Build and publish the website",
          "Conclusion"
        ]
      },
      "requirements": [
        "You should be familiar with the basics of Object Oriented Programming"
      ],
      "description": "Unlock the full potential of Flutter with our extensive 14-hour course, \"Flutter Mastery: Building Dynamic Apps and Websites from Scratch.\" Designed for both beginners and seasoned developers, this hands-on course takes you on a journey from setting up your PC for Flutter development to creating polished, real-world projects.\nCourse Highlights:\nGet Started Quickly:\nLearn how to set up your PC for Flutter development, ensuring a seamless start to your Flutter journey.\nDesign Stunning UIs:\nMaster the art of creating captivating user interfaces in Flutter, blending aesthetics with functionality.\nLocal Data Storage:\nDiscover techniques for efficient local data storage within your Flutter apps, ensuring smooth user experiences.\nNetwork Calls and REST APIs:\nDive into the world of networking in Flutter, mastering the process of making REST API calls for dynamic app content.\nState Management with Provider:\nUnderstand and implement state management in Flutter using Provider, a powerful and flexible solution for managing app state.\nAutomated Testing in Flutter:\nLearn the importance of testing in Flutter and how to automate the testing process for robust, error-free applications.\nBasics of Animation:\nUnleash creativity by exploring the fundamentals of animation in Flutter, adding dynamic elements to your apps.\nFirebase Backend Integration:\nConnect your Flutter app to Firebase, gaining hands-on experience in building a Recipe app with real-time data synchronization.\nCreate a Portfolio Website:\nExtend your skills beyond apps as you learn to use Flutter for web development. This will help you create your own portfolio website.\nProjects You'll Build:\nTodo List App: Build a functional and visually appealing Todo list app, mastering UI design and local data storage.\nRecipe App with Firebase: Integrate Firebase into Flutter to create a Recipe app with real-time data updates, expanding your app-building capabilities.\nFlutter Portfolio Website: Apply your skills to develop a responsive and dynamic portfolio website using Flutter for web, showcasing your newfound expertise.\nEmbark on this immersive Flutter journey, and by the end of the course, you'll not only have a deep understanding of Flutter's capabilities but also a portfolio of projects that demonstrate your mastery of Flutter development. Enroll now and bring your app and web development ideas to life!",
      "target_audience": [
        "Programmers who want to learn how to create multi-platform applications using Flutter"
      ]
    },
    {
      "title": "Intro to Flutter For iOS & Android",
      "url": "https://www.udemy.com/course/devslopes-flutter/",
      "bio": "Build cross platform mobile apps",
      "objectives": [
        "Flutter mobile app framework",
        "How to build cross platform apps",
        "Creating native iOS and Android code",
        "Routing screens",
        "Creating widgets",
        "Interfacing with APIs",
        "Working with lists"
      ],
      "course_content": {
        "Introduction": [
          "Course overview",
          "Installing Flutter",
          "Setting up Flutter for Android development",
          "First App: Hello, Flutter!"
        ],
        "Layout Basics": [
          "Intro to layout widgets in Flutter",
          "Aspect ratio and expanded widgets",
          "Creating equal containers",
          "Fractionally sized boxes"
        ],
        "Routing in Flutter": [
          "Simple routing",
          "Named routes"
        ],
        "Flutter and Web Requests": [
          "Setting up the project",
          "Data modeling with dummy data",
          "Working with lists and debugging",
          "Working with card widgets and themes",
          "Styling widgets and working with the chip widget",
          "JSON serialization",
          "HTTP requests",
          "Future builders"
        ],
        "Writing Native iOS & Android Code": [
          "Understanding the Android Flutter architecture",
          "Building the UI for native Flutter app",
          "Working with channel methods",
          "Android Native AND Understanding Flow",
          "Android native part 2",
          "iOS native implementation"
        ]
      },
      "requirements": [
        "Be familiar with iOS or Android mobile development",
        "Know the basics of at least one programming language"
      ],
      "description": "In this course you will learn how to build iOS and Android apps with the Flutter framework by Google.\nFlutter is a framework that lets developers quickly build responsive apps for iOS and Android -- having only to write the code once.\n\n\nThe Flutter Framework:\nIs VERY fast\nWritten in the Dart programming language\nDoes NOT use Javascript\nEmploys re-useable widgets\nWrite code once, deploy to iOS and Android\nHas instant hot reload (No more 10 minute Xcode builds!)\nSupports native Kotlin and native Swift\nIs the BEST framework for cross platform development\nThis course is designed for existing programmers or iOS and Android developers who want to learn Flutter.\nThe course was designed to get you up and running FAST. That means we focus on the core concepts (the hard parts) instead of covering every single aspect of a major framework.\n\n\nWhat you'll learn:\nInstallation and setup\nPrepping your development environment\nBuilding re-useable widgets\nImportant layout widgets\nWorking with data and lists\nMaking HTTP requests with APIs\nParsing JSON\nHot reloading\nBuilding native features on Android\nBuilding native features on iOS\nFlutter will help you quickly reduce build time and help you build AMAZING mobile apps very fast.  With Google behind the wheel Flutter is a wonderful experience and is growing rapidly.",
      "target_audience": [
        "iOS developers",
        "Android developers",
        "Existing programmers who want to learn cross platform app development"
      ]
    },
    {
      "title": "Learn how to code in objective c for beginners",
      "url": "https://www.udemy.com/course/learn-how-to-code-in-objective-c-for-beginners/",
      "bio": "Most of John Bura's courses are on sale for 9 dollars! https://www.udemy.com/u/johnbura/ Sale ends Oct 31 2013! Act now!",
      "objectives": [
        "To learn Objective -C",
        "To learn about the apple development environment",
        "To learn good programming techniques",
        "To learn about how start developing apps"
      ],
      "course_content": {
        "Let's learn objective C": [
          "Introduction",
          "Course Requirements",
          "Downloading Xcode"
        ],
        "Let's start programming": [
          "Opening a new project",
          "Introduction to the interface",
          "Comments",
          "WhiteSpaces",
          "Adding in a comment",
          "Adding in the printf command",
          "The include statement",
          "Int main",
          "Declaring variables",
          "Initializing variables",
          "Printing a variable",
          "More than one variable in printf",
          "Float variables",
          "Char varaibles",
          "Static and dynamic programming languages"
        ],
        "If statements": [
          "If statements",
          "Else statements",
          "Else if statements",
          "Performing math and printf",
          "Logic and if statements",
          "Oporators",
          "And oporators",
          "If statements to handle errors",
          "Or oporators",
          "If statement complexity"
        ],
        "Congratulations you are finished": [
          "Course conclusion"
        ]
      },
      "requirements": [
        "An apple computer",
        "Xcode (free)",
        "An internet connection"
      ],
      "description": "Have you ever wanted to make an app? In order to make an app you need to know how to code. But coding is hard right? Wrong! People think coding is hard because they were not taught the right way. This course makes the complicated programming of Objective-C easy to understand. Objective-C is the main programming languages behind all of the hit apps on the app store. You need to know Objective-C in order to make apps in Xcode work. Xcode is the flagship software behind most of the apps in the app store. This course makes programming easy. Learn Objective-C today!",
      "target_audience": [
        "Complete beginners",
        "People who have not coded before"
      ]
    },
    {
      "title": "Getting Started with PHP and MySQL Development",
      "url": "https://www.udemy.com/course/getting-started-with-php-and-mysql-development/",
      "bio": "We’ll Introduce fundamental of PHP and the Basic Concepts of RDBMS in general with MySQL Database for Beginners",
      "objectives": [
        "Over 40 lectures and 4 hours of content!",
        "You will acquire knowledge of basic PHP Functions, Arrays and many more..",
        "You will be able to create your basic PHP website.",
        "Understand the Basic Relational Database Management System Concepts.",
        "Execute Basic to Advanced MySQL Queries."
      ],
      "course_content": {
        "Introduction to PHP": [
          "Introduction to PHP, Requirements",
          "Getting XAMPP and Brackets, Starting Server",
          "First PHP Script",
          "Variable in PHP",
          "If, if else, if else if..., Switch",
          "While, Do While, For, Foreach"
        ],
        "Object Oriented Features": [
          "Functions in PHP",
          "Require, Include and some String Functions",
          "Classes Overview",
          "Scoping Rules and the Global Keyword",
          "Static Properties"
        ],
        "Arrays and Variables": [
          "Arrays in PHP",
          "$_SERVER Variables in PHP",
          "$_GET in PHP",
          "$_POST in PHP",
          "$_REQUEST in PHP"
        ],
        "MySQL Database Insight": [
          "Using PHPMyAdmin",
          "Sample Database",
          "Connecting to MySQL",
          "Inserting to MySQL, and Wrapup"
        ],
        "Introduction and Installation of MySQL": [
          "Installing MySQL",
          "Database Creation",
          "Table Creation with SELECT and INSERT",
          "MySQL Data Types",
          "Creating an Auto Incrementing Primary Key"
        ],
        "MySQL Basic Statments": [
          "Describe Table",
          "Loading sql Files into MySQL",
          "Introduction to SELECT Query",
          "SELECT Query Demo"
        ],
        "MySQL Advanced Statements": [
          "MySQL Update Query",
          "Mathematical Operations",
          "DISTINCT, COUNT and GROUP by Clauses",
          "Table Relationships",
          "Introduction to Joins"
        ],
        "MySQL Advanced Statements Part 2": [
          "The Delete Query",
          "Types of Joins",
          "Joins Demo",
          "Creating and Using Views",
          "Setting Up a Many to Many Relationship",
          "Demo of Many to Many Relationship"
        ]
      },
      "requirements": [
        "Knowledge of Basic HTML Tags",
        "Knowledge of some Scripting Language Preferred, but Not Necessary.",
        "Knowledge of RDBMS Concept is Helpful but Not Required"
      ],
      "description": "PHP is an object oriented general purpose language suitable for a wide variety of tasks. In this course, we'll learn how to use PHP as a server-side scripting language for use in web development.\nMySQL is a general purpose relational database management system (RDBMS) used mainly to provide a back-end database for web applications. In this course, we'll introduce the concepts of relational database management systems in general, and how they relate to MySQL in particular.\nUnlike traditional courses that concentrate mainly on theory, we'll take a practical “how-to” approach to working with data. Here's what you'll learn:\nThe course cover following topics:\nPHP\nbasic syntax, variables,loops and decision constructs.\nObject oriented features\nString functions.\nArrays\nREQUEST, GET, and POST\nIntegrate MySQL databases with PHP.\nCreating databases and tables\nAdding data to a table with INSERT\nReading a table with SELECT\nHow to use WHERE to filter data\nUsing ORDER BY to sort data\nJOINs and how to use them to read from multiple tables\nChanging data in a table with UPDATE\nThe DELETE query: removing one or more rows of data from a table\nUsing a text file to load a database schema\nMySQL\nI hope you enjoy the course, and I look forward to working with you!",
      "target_audience": [
        "Any Fresher Wants to Learn Basic PHP & MySQL",
        "Expert who Needs to Brush up PHP & MySQL Skills"
      ]
    },
    {
      "title": "Android: Using Backendless to save data in the cloud",
      "url": "https://www.udemy.com/course/android-using-backendless-to-save-data-in-the-cloud/",
      "bio": "Learn how to add a powerful cloud database to your Android application.",
      "objectives": [
        "Design a fully fledged login screen with email verification and password reset",
        "Create an online database from the Backendless.com website",
        "Create new entries to the database, edit and delete existing entries from your Android application"
      ],
      "course_content": {
        "Introduction": [
          "Who am I?",
          "What is covered in this course?"
        ],
        "Meet Backendless.com and adding the library to Android Studio": [
          "Introduction to the Backendless.com website",
          "Setting up the Backendless API in Android Studio"
        ],
        "Creating a Login feature for our Contacts application": [
          "Setting the colours to be used in the application (Material Design)",
          "Creating the Login Graphical User Interface",
          "Building the Create Account Graphical User Interface",
          "Coding the Create Account Activity Part 1",
          "Coding the Create Account Activity Part 2",
          "Coding the Login Activity",
          "Creating the Reset Password feature",
          "Creating a Loading screen when the application starts"
        ],
        "Writing and reading data to/from the Backendless cloud database": [
          "Creating a custom class to use in Backendless cloud - Contact class",
          "Building the GUI for the ContactList Activity",
          "Building the GUI for the CreateContact activity",
          "Coding for the CreateContact activity",
          "Creating the Row Layout for the ListView",
          "Creating the ArrayAdapter class for the ListView of Contacts",
          "Retrieve contacts from Backendless and show them in the ListView",
          "The Logout button and handling click events in the ListView"
        ],
        "Updating and Deleting data from the Backendless cloud database": [
          "Building the layout for the ContactInfo activity",
          "Coding for the Call, Mail and Edit buttons in the ContactInfo activity",
          "Create coding to change existing data online",
          "Create coding to delete an existing contact online",
          "Recap"
        ],
        "Backendless Notifications": [
          "Setting up your application to work with notifications",
          "Sending your first Backendless notification",
          "Creating a custom Backendless notification - Part 1",
          "Creating a custom Backendless notification - Part 2",
          "Creating a custom Backendless notification - Part 3"
        ],
        "Backendless Geo Location": [
          "Setting up your project to work with Backendless and Google Maps",
          "A quick look at the Backendless console for Geo Location",
          "Creating the layouts for the MainActivity and the MapActivity",
          "Coding the MainActivity",
          "Coding the MapsActivity - Part 1",
          "Running the app at this stage",
          "Coding the MapsActivity - Part 2",
          "Coding the MapsActivity - Part 3 (completing the MapsActivity)"
        ],
        "Resources for this course": [
          "Resources folder as mentioned in the videos",
          "Complete Android Studio Project folder for the Contacts Application",
          "Basic calls to Backendless - Users",
          "Classes in Backendless",
          "CRUD - Create, Read, Update, Delete in Backendless",
          "Custom Notification Project Folder",
          "My Family complete project folder (Map application)"
        ],
        "Extras": [
          "Explicit Intents Part 1",
          "Explicit Intents Part 2",
          "Implicit Intents",
          "SQLite",
          "Shared Preferences",
          "AsyncTask",
          "ListView Part 1",
          "ListView Part 2"
        ],
        "Backendless 4 (Newest Release of Backendless)": [
          "Backendless 4 Intro",
          "Setting up application for Backendless 4",
          "User Service Backendless 4",
          "Create, Read, Update, Delete in Backendless 4",
          "Advanced Object Retrieval and Deletion in Backendless 4",
          "Push Notification Basics (Backendless 4)",
          "Advanced Push Notifications (Backendless 4)",
          "Codeless Programming from Backendless"
        ]
      },
      "requirements": [
        "A good Java foundation",
        "Basic Android development skills",
        "Internet connection",
        "Android studio and updated Android SDK"
      ],
      "description": "Building stand alone applications that only function and save their data on the device that they are installed on is becoming obsolete and not feasible. With the increased use of mobile devices, it is common for applications to offer ways to backup, sync and share data in the cloud.\nA type of backend is usually needed where data can be saved and manipulated but this requires time, resources and skills to make it work. Fortunately, there are several platforms like Backendless and Parse that provide a backend that we as developers can integrate with our applications.\nThis course will introduce the popular Backendless SDK and show you how to integrate it with your Android applications in order to save application data in the cloud.\nContent and Overview of the course\nThis course will mainly focus on the Backendless SDK, but in order to build our final application we will also do some basic Android coding. This course includes:\nCreating activities and moving between activities using Intents\nCreating aesthetically appealing buttons using only XML\nCreating a fully fledged login screen using the Backendless SDK to do email verification and password reset.\nUsing the Backendless SDK to create data in your online database, edit and delete existing data.\nUsing Backendless SDK and GCM to send Notifications to your users\nUsing Backendless SDK to save location data online to use with google maps\nShowing information in a custom ListView\nWorking with different icons and pictures\nUsing a library for a custom progress dialog\nThe Backendless SDK makes saving data in the cloud a walk in the park. In less than 6 hours, you will be building an application that will be able to save data in the cloud in an exciting and fun way!\nI am excited to start working with you!",
      "target_audience": [
        "Android application developers interested in saving application data in the cloud in a very easy and exciting way"
      ]
    },
    {
      "title": "Face Recognition and Detection in Android 16- The 2025 Guide",
      "url": "https://www.udemy.com/course/face-recognition-and-detection-in-android-the-2024-guide/",
      "bio": "Face Recognition and Face Detection in Android with Images and Videos, Build Security and Attendance Systems in Android",
      "objectives": [
        "Use of Face Recognition models with images and live camera footage in Android",
        "Build Face Recognition & Detection based Security & Attendance Systems In Android with both Java & Kotlin",
        "Build Face Recognition Based Android Applications without Any Paid Facial Recognition Service",
        "Use of FaceNet and Mobile FaceNet models in Android with both Java & Kotlin",
        "Use of Tensorflow Lite models in Android for Performing On-Device Face Recognition",
        "Learn to Store Faces in Database for Registration in Android with both Java & Kotlin",
        "Use of Google ML Kit library in Android for Face Detection"
      ],
      "course_content": {
        "Introduction": [
          "Face Recognition & Detection in Android- 2024 Guide",
          "How Face Recognition is Performed in Android"
        ],
        "Choosing or Capturing Images in Android": [
          "Course Resources",
          "Creating a new Android Project and Creating Application GUI",
          "Choosing Images From Gallery in Android",
          "One More Step",
          "Capturing Images using camera in Android",
          "Converting Images into Bitmap format in Android",
          "Image Picker in Android Overview"
        ],
        "Face Detection With Images in Android": [
          "Section Introduction",
          "Setting Up Android Studio Project for Face Detection",
          "GUI of Face Recognition & Detection Android Application",
          "Configurations for Face Detection in Android Apps Development",
          "Detecting Faces in Android Applications With Images",
          "Drawing Rectangles Around Detected Faces in Android",
          "Performing Face Detection in Android With Images Overview"
        ],
        "Face Recognition With Images In Android": [
          "Cropping the detected Faces in Android",
          "Tensorflow Lite Introduction",
          "What is model Quantization",
          "Loading Face Recognition Model in Android",
          "Analyzing a tflite model",
          "Passing Cropped Faces to Face Recognition Model",
          "Showing The Dialogue and Registering Faces",
          "Registering Faces Globally in Android",
          "Face Registration Overview",
          "Recognizing Registered Faces in Android",
          "Showing Registered Faces on Screen in Android",
          "Face Recognition Overview",
          "Using Mobile FaceNet in Android with Images"
        ],
        "Using Tensorflow Lite Models in Android for Face Recognition": [
          "How we are loading a tflite Model in Android",
          "Passing input to a tflite model and getting the output in Android",
          "Comparing Face Embeddings in Android"
        ],
        "Storing Registered Faces In Database in Android": [
          "Setting Up Database For Face Recognition With Images Android Application",
          "Registering Faces in DB and Getting List of Registered Faces in Android",
          "Testing Face Recognition With Images Application",
          "How Faces are being Registered in Database",
          "Getting Registered Faces From Database"
        ],
        "Realtime Face Recognition: Displaying Live camera footage in Android": [
          "Realtime Face Recognition Section Introduction",
          "Setting up Android Project for Realtime Face Recognition",
          "Displaying Live Camera Footage In Android",
          "Getting Frames on Live Camera Footage In Android",
          "Converting Frames into Bitmap In Android"
        ],
        "Realtime Face Recognition: Register and Recognize Faces in Android": [
          "Loading FaceNet Model in Android",
          "Registering Faces using Frames of Live Camera Footage in Android",
          "Recognizing Faces Using live Camera Footage in Android",
          "Showing Results on Screen In Realtime",
          "Testing Realtime Face Recognition Android Application",
          "Playing with certain values in Android",
          "Realtime Face Recognition Android Overview",
          "Switching Between Camera in Android",
          "Using Mobile FaceNet Model in Android with Live Camera Footage"
        ],
        "Storing Registered Faces In Database in Realtime Face Recognition Android": [
          "Setting Up Database For Realtime Face Recognition in Android",
          "Registering Faces in DB and Getting Registered Faces In Realtime In Android",
          "Testing Realtime Face Recognition Android Application"
        ]
      },
      "requirements": [
        "You should have Android Studio Installed On Your System"
      ],
      "description": "Welcome to an exhilarating journey of mastering Face Recognition and Face Detection Models in Android 16 with Java and Kotlin! This comprehensive course empowers you to seamlessly integrate facial recognition & detection into your Android apps, harnessing the power of both images and live camera footage.\n\n\nFace recognition has become a pivotal technology used across various industries:\n\n\n- Security agencies employ it for identifying and tracking criminals.\n- Companies utilize it to monitor employee activities.\n- Educational institutions leverage it for streamlined attendance tracking.\n\n\nIn this course, you'll acquire the skills to integrate diverse face recognition models into Android App Development, enabling you to create intelligent and robust applications for Android\n\n\nCourse Highlights:\n\n\nUnderstanding the Basics:\n\n\nEmbark on your journey by grasping the fundamental principles behind face recognition models. Explore the two core components of a face recognition system:\n\n\n1. **Face Registration:**\n- Learn to register faces through image scans or live camera footage in Android.\n- Capture and store faces along with user-assigned names in a database in Android.\n\n\n2. **Face Recognition:**\n- Dive into the process of recognizing registered faces in android ( Java / Kotlin ).\n- Utilize face recognition models to compare scanned faces with registered ones\n\n\nImage Handling in Android:\nDiscover essential techniques for handling images in Android, including:\n\n\n- Choosing Images from Gallery in Android\n- Capturing Images using Camera in Android\n\n\nThese skills are crucial for passing images to face recognition models within your Android application.\n\n\nFace Recognition With Images in Android:\n\n\nBuild your first face recognition application in Android, allowing users to:\n\n\n- Register faces\n- Recognize faces\n\n\nUtilize two distinct models for face recognition in Android:\n\n\n1. FaceNet Model\n2. Mobile FaceNet Model\n\n\nReal-time Face Recognition:\n\n\nAdvance to real-time face recognition Android applications, registering and recognizing faces using live camera footage frames. Learn to:\n\n\n- Display live camera footage in Android ( Java / Kotlin )\n- Process frames one by one with face recognition models in Android ( Java / Kotlin )\n- Achieve real-time recognition and registration in Android ( Java / Kotlin )\n\n\nTensorFlow Lite Integration:\n\n\nMaster the integration of face recognition models in Android ( Java / Kotlin ) using TensorFlow Lite. Explore why TensorFlow Lite is the ideal format for implementing machine learning models in mobile applications.\n\n\nFace Detection:\nIn face recognition applications before recognizing faces we need to detect faces from images or frames of live camera footage. So for detecting those faces, we are going to use the face detection model of the ML Kit library in Android ( Java / Kotlin ). So in this course, you will also learn to perform face detection in Android ( Java / Kotlin ) with both images & live camera footage.\n\n\nCourse Outcomes:\n\n\nUpon completion of this course:\n\n\n- Integrate Face Recognition & Detection models in Android ( Java / Kotlin ) with both Images and live camera footage\n- Implement Face Recognition-based authentication in Android ( Java / Kotlin ) Applications\n- Construct fully functional Face Recognition-based security and attendance systems in Android ( Java / Kotlin )\n\n\nIn essence, this course serves as a comprehensive guidebook for mastering face recognition in Android app development. Don't miss out on this opportunity to acquire a skill that truly matters. Join the course now and unlock the potential of Face Recognition in Android!",
      "target_audience": [
        "Beginner Android Developers want to Build Face Recognition & Detection Based Android Applications",
        "Intermediate Android App Developers who want to build complete Face Recognition System in Android",
        "Expert Android Developers who want to increase their Skillset",
        "Anyone who want to build Face Recognition & Detection based smart Android Applications in Java and Kotlin"
      ]
    },
    {
      "title": "Swift 5",
      "url": "https://www.udemy.com/course/swift-5-ios/",
      "bio": "The Language of iOS Development",
      "objectives": [
        "How to prepare your coding environment",
        "How to write and execute your first Swift Program",
        "How to use Variables in Swift",
        "Creating and using Constants with the Let Command",
        "Swift Arithmetic and Logical Operators",
        "How to Create Strongly Typed Variables in Swift",
        "Making decisions in Code with If Statements",
        "How to Make Complex Decisions with Else",
        "How to use the Swift/Case/Break Structures to asses Conditionals",
        "Creating Repeatable bits of Code with Functions",
        "How to get Functions to Take Parameters and Return Data",
        "Creating Functions with Implicit Returns (Short cut)",
        "Writing Functions with Default Parameter Values",
        "How to Create a Basic Swift Class",
        "How to Instantiate a Swift Class into an Object",
        "How to use Inheritance with Swift Classes",
        "Using Protocols to Create \"Rules\" for a Class",
        "Creating Arrays to Store Lists of Data",
        "Creating Dictionaries to work with Key/Value Pair Data",
        "How to Use String Interpolation in Swift",
        "Accessing and Modifying Strings",
        "Much More!"
      ],
      "course_content": {},
      "requirements": [
        "Mac with Xcode Development Environment"
      ],
      "description": "Quickly master Swift 5, the language of iPhone and iPad development as you complete engaging activities and build your technical skillset.\nDo you want to develop apps for iPhone and iPad, but don't know where to start? Perhaps you've never coded before and need to learn the language fundamentals. Maybe you've got some development experience but are coming to the world of iOS for the first time and need to get up to speed? Swift is the language of iOS development, and this is the course that teaches you the fundamentals of the language.\nYou'll be prepared to move on to iPhone and iPad Development with Swift 5: The Language of iOS Development. This course, specifically designed for the most current version of Swift, teaches you the Swift language syntax and structure and prepares you to go on to learning to build full apps with a strong foundation. The goal of this course is to avoid elaborate technical explanations and transform you into a competent, confident Swift programmer.\nIn this course, you'll join master instructor Mark Lassoff as you learn the Swift Programming language from top to bottom. You won't just passively sit by and watch videos, but, instead, you'll work on engaging code activities. In no time at all, you'll be programming in Swift with Swift 5: The Language of iOS development.",
      "target_audience": [
        "People who want to make iPhone and iPad apps with little or no programming experience",
        "Students and teachers learning Swift",
        "Web developers and designers who want a quick, high-quality introduction to Swift Programming"
      ]
    },
    {
      "title": "Multi-Modular Navigation | Compose Multiplatform iOS/Android",
      "url": "https://www.udemy.com/course/multi-modular-navigation-compose-multiplatform-iosandroid/",
      "bio": "Build Scalable Cross-platform Apps. Navigate Like a Pro: Multi-Modular Architecture in Compose for iOS and Android.",
      "objectives": [
        "Navigation fundamentals",
        "Type-safe navigation",
        "Passing arguments between destinatnations",
        "Customizing transition animations",
        "Implement a Nested Navigation graph",
        "Navigation with Bottom Navigation Bar",
        "Build Scalable Apps",
        "Navigation in a Multi-modular project",
        "Introducing with the concept of modularization",
        "Modularization fundamentals",
        "The Benefits of a Multi-modular Architecture",
        "Build a Recipes App with a Multi-modular Navigation",
        "And more"
      ],
      "course_content": {
        "Navigation Basics": [
          "Introduction",
          "Navigation Fundamentals",
          "Screen to Screen Type-safe Navigation",
          "Transition Animations",
          "Passing Arguments between Destinations",
          "Nested Navigation with Bottom Bar"
        ],
        "Multi-modular Food Recipes App": [
          "About Modularization",
          "Recipes App Overview",
          "Project Source Code",
          "Let's Build the App",
          "Lets Build the App - Implement the last feature",
          "Lets Build the App - Koin dependency injection",
          "Navigation with Voyager"
        ],
        "Course updates": [
          "#1 - Nested module refactoring"
        ]
      },
      "requirements": [
        "Knowledge about Jetpack Compose",
        "Knowledge about Kotlin programming language",
        "Basic knowledge about KMP (Compose Multiplatform)",
        "Macbook (If planning to test the app on iOS simulator)"
      ],
      "description": "Mobile development has traditionally required from developers to build separate applications for iOS and Android. Each platform comes with its own language, tools, and ecosystem—Objective-C or Swift for iOS, and Java or Kotlin for Android. This approach, while effective, doubles the workload and often leads to inconsistent features and performance across platforms.\n\n\nLuckily modern technologies like Kotlin Multiplatform (KMP) offer a faster, more efficient way to develop mobile apps without compromising quality. In a world of mobile development where everything is changing fast, you gotta keep up with the technology if you want to stay concurrent on the market.\n\n\nThat’s why I have prepared this amazing course . In this course I’m gonna teach you how to implement a scalable, multi-modular navigation architecture in your kotlin multiplatform project. We’re gonna target Android and iOS platforms using Compose Multiplatform framework for sharing the UI. This is an intermediate-level, concise course which is meant for developers that want to learn quickly, without wasting time on 20 hour courses.\n\n\nHere’s what you’re going to learn here:\nCompose navigation fundamentals\nType-safe navigation in Android and iOS\nPassing arguments between destinations\nCustomizing Transition animations\nImplementing a Nested Navigation\nNavigation with a Bottom Navigation Bar\nModularization fundamentals\nThe benefits of a multi-modular architecture\nBuilding scaleable and professional applications\nMulti-modular navigation\n\n\nAnd at the end we’re gonna create a Recipe App where we’re be implementing all the things that we have learned in this course. That application will work on both Android and iOS, it will have about 5 feature modules, a separate module for the navigation logic, and more.\n\n\nNow is the right time to adapt cutting edge technologies in a mobile development!",
      "target_audience": [
        "Developers who wish to build professional apps",
        "Developers who wish to build scalable apps",
        "Developers who wish to learn more about Multi-modular architecture",
        "Developers who wish to improve their skills with a Kotlin Multiplatform technology",
        "Developers who wish to build apps for both Android and iOS",
        "Android developers",
        "iOS developers",
        "Mobile developers"
      ]
    },
    {
      "title": "Flutter, Google Gemini Chat Bot with Hive local storage",
      "url": "https://www.udemy.com/course/flutter-google-gemini-chat-bot-with-hive-local-storage/",
      "bio": "Master Google Gemini AI & Local Storage in Flutter",
      "objectives": [
        "Build a Flutter App with Gemini: Integrate Google's AI for powerful chat conversations.",
        "Local Chat History: Implement Flutter Hive for saving and retrieving past",
        "Light & Dark Modes: Create a user-friendly app with a light and dark theme toggle.",
        "Gemini Models: Master both Gemini-Pro and Gemini-Pro-Vision for advanced AI interaction.",
        "Generate Your API Key: Learn the process for obtaining a Google API key for Gemini access."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Set up Flutter & Gemini Chat": [
          "Getting Started",
          "Home screen UI and Hive boxes",
          "Chat Provider Class",
          "BottomChatField"
        ],
        "Build Chat Functionality & Storage": [
          "Chat Provider part 2",
          "Send Message",
          "Finalize Sending Text Message",
          "Message Widget and Scroll Controller",
          "Pick Images, Show Images & Create Animated Dialog",
          "Save messages to Hive Local Storage",
          "Display Chats History"
        ],
        "Advanced Features & User Experience": [
          "Load Chat history from Hive DB",
          "Sorting Messages",
          "Delete and Start New Chat Function",
          "Light and Dark Theme",
          "Profile Screen",
          "Model update and API file"
        ]
      },
      "requirements": [
        "Just some basic programming experience needed, you will learn almost everything you need to know.",
        "You need Android Studio or VS code or any other preferred IDE",
        "Need to install Flutter 3.10 or higher"
      ],
      "description": "Flutter, Google Gemini Chat Bot with Hive Local Storage: Build a Persistent AI App\nMaster AI conversations and persistent chat history in your Flutter app with Google Gemini and Hive!\nThis course equips you with the skills to build a powerful Flutter chat application powered by Google's cutting-edge Gemini AI for natural language interactions. You'll learn to seamlessly integrate Gemini using the google_generative_ai package, allowing your users to have engaging conversations with the AI. But that's not all!\nNever lose a conversation again! We'll show you how to implement Flutter Hive for local storage, enabling users to save their chat history and pick up conversations right where they left off.\nCater to all preferences with a user-friendly light and dark mode toggle. Enhance your app's usability and provide a comfortable experience for all users.\nUnlock the full potential of Gemini! This course delves into both the Gemini-Pro and Gemini-Pro-Vision models, empowering you to explore the different functionalities of Google's AI technology.\nNo API key woes! We'll guide you through the process of generating your own API key from Google, ensuring a smooth integration of Gemini into your Flutter project.\nWhether you're a Flutter beginner or an experienced developer seeking to add AI to your skillset, this course is for you! Enroll today and start building your own intelligent conversation app with the power of Flutter, Google Gemini, and Hive local storage.\nThis course includes downloadable resources and access to the instructor for any questions you may have along the way.",
      "target_audience": [
        "Beginner or advanced Developer"
      ]
    },
    {
      "title": "Beast Android Development:Integrating A Node.Js Server",
      "url": "https://www.udemy.com/course/beast-android-developmentintegrating-a-nodejs-server/",
      "bio": "Learn how to create and combine a Node.js server with Firebase to create powerful, faster, and more secure android apps.",
      "objectives": [
        "Build a real time android chatting app",
        "Create a node.js server to increase an android apps security and performance",
        "implement user to user push notifications",
        "Utilize Rx-Java effectively to create a non-blocking structure",
        "Integrate user profiles inside an android app",
        "Understand and ask for android marshmallow/nougat permissions",
        "Scale and compress images to insure quick and reliable upload speed"
      ],
      "course_content": {
        "Setting Up Our Environment": [
          "Introduction",
          "Downloading node.js",
          "Adding our node project files",
          "Preparing our node server",
          "Preparing our android client",
          "Using fragments",
          "Adding firbase to our client and server"
        ],
        "User Authentication": [
          "Building a simple login/registration screen",
          "Sending registration information pt.1",
          "Sending the user registration information pt.2",
          "Registering a user pt.1",
          "Registering a user pt.2",
          "Sending our client a response",
          "Creating a custom auth token",
          "User login pt.1",
          "User login pt.2",
          "User login pt.3"
        ],
        "Building Our Apps Navigation": [
          "Bottom navigation pt.1",
          "Bottom navigation pt.2",
          "View-pager pt.1",
          "View-pager pt.2"
        ],
        "Friend Requests": [
          "Search bar recycler-view pt.1",
          "Search bar recycler-view pt.2",
          "Search bar reycler-view pt.3",
          "Reading data from firebase",
          "Sending a friend requests pt.1",
          "Sending a friend request pt.2",
          "Updating other users data pt.1",
          "Updating other users data pt.2",
          "Receiving a friend request",
          "Wiring up our search bar"
        ],
        "User Friends": [
          "Displaying friend request pt.1",
          "Displaying friend request pt.2",
          "Approving friend requests",
          "Showing the users friends pt.1",
          "Showing the users friends pt.2"
        ],
        "Push Notifications": [
          "Firebase cloud messaging id",
          "Firebase push messaging pt.1",
          "Firebase push messaging pt.2",
          "New friend request indicator"
        ],
        "Building Our Chatting Feature": [
          "Making our chat box pt.1",
          "Making our chat box pt.2",
          "Customizing user messages",
          "Sending a message pt.1",
          "Sending a message pt.2",
          "Displaying user messages",
          "Making a user chat room pt.1",
          "Making a user chat room pt.2",
          "Displaying user chat rooms pt.1",
          "Displaying user chat rooms pt.2",
          "Displaying user chat rooms pt.3",
          "Fixing chat bugs pt.1",
          "Fixing chat bugs pt.2",
          "Adding a message notification"
        ],
        "Modify User Profiles": [
          "Building our final layout",
          "Allowing camera usage",
          "Requesting permission in android 6/7 part.1",
          "Requesting permission in android 6/7 part.2",
          "Compressing and storage a users picture.",
          "Adding a sign out feature/Thank you!"
        ]
      },
      "requirements": [
        "You should understand android concepts such as the activity life cycle, recyler-views, fragments, and xml layouts",
        "You should understand the basics of rx-java some topics including what observers/observables, how to use subjects, and making background threads",
        "You should be able to utilize Googles Firebase inside an android project",
        "You should have access to your SHA1 fingerprint",
        "You should understand how to install and use butter-knife for android view bindings",
        "You should already have android studios installed and have at least two devices for testing. You can use 2 emulators but it is recommended you use at least one phone.",
        "You do not need to have any node.js experience to take this course"
      ],
      "description": "Firebase alone although a useful and powerful back end is not enough to build a truly great android app. It is best to create a node.js server to play middle man between your android client and Firebase. By having a node.js server, you improve security, app performance, and unlock features such as user to user push notifications!\nThe main purpose of this course is to show you how to build and utilize a node.js server with Firebase to create a powerful android application. In order to accomplish this goal, we will build a fully functional chatting app from scratch. This app will contain features such as real time chatting, user profiles, and notifications to name a few. You will also pick up some UI tricks like creating a bottom navigation bar, using circular image views, and wiring up a search bar.\nThis course is designed for intermediate Android Developers. We are going to be creating plenty of android code but a lot of boilerplate code such as recycler-view adapters will not be explained. Therefore, it is best that you already have a firm understanding on Android. In addition, you are also expected to know the basics of rx-java. Rxjava will play a big role in our project and there will be no basic explanations such as what observables/observers are. Although we will be building a node.js server, you are not required to know how to code in javascript. Just be sure to be ready for the challenge of quickly picking up a new language!\nThis course is one of a kind as there is no other Android course that tackles implementing a node.js server into development. By taking this course not only will you achieve a whole new level in your development skills but you'll be able to build any app you can think of!",
      "target_audience": [
        "This course is for Intermediate Android Developers who want to learn how to create more powerful and safer apps",
        "Since we will be using another language other then Java, this course is also for android developers who love a challenge",
        "This course is not for beginner Android Developers"
      ]
    },
    {
      "title": "Codename One 101 - Write Native Mobile Apps In Java",
      "url": "https://www.udemy.com/course/codenameone101/",
      "bio": "Build native applications in Java for all mobile devices (iPhone/iPad, Android, Blackberry, etc.) using Codename One",
      "objectives": [
        "Develop applications using Codename One for all mobile devices",
        "Understand the pain points of mobile development"
      ],
      "course_content": {
        "Introducing Codename One": [
          "Introduction Lecture",
          "Exercise Solution Installing Codename one",
          "Exercise Solution Creating A Hello World Application Exercise Solution",
          "Exercise Solution Build And Install On An Android Device"
        ],
        "Devices & Signing": [
          "Devices & Signing",
          "Exercise Solution Certificate Based Project Configuration",
          "Understanding Android OS",
          "Exercise Solution Creating An Android Certificate",
          "Understanding iOS (iPhone/iPad)",
          "Exercise Solution Creating An iOS Certificate",
          "Creating An iOS Provisioning Profile",
          "Understanding Blackberry",
          "Exercise Solution Creating A Blackberry Certificate",
          "Understanding Windows Phone",
          "Understanding J2ME"
        ],
        "The Todo App": [
          "Creating The Todo Demo App",
          "Exercise Solution Creating the Todo App"
        ],
        "Layout Managers": [
          "Layout Managers"
        ],
        "Basic Components": [
          "Basic Components",
          "Exercise Solution Todo App Cleanup"
        ],
        "Images & Prototyping": [
          "Images & Prototyping",
          "Exercise Solution: Add Multi-Image and Create MultiButton"
        ],
        "Events": [
          "Basic Events",
          "Exercise Solution Prepare For Events",
          "Exercise Solution Events",
          "Understanding Events"
        ],
        "The EDT: Event Dispatch Thread": [
          "The EDT"
        ],
        "Networking, Webservices & Parsing": [
          "Networking & Webservices",
          "Exercise Solution Invoke JSON Webservice",
          "Exercise Solution Networking Progress Indicator",
          "Exercise Solution Invoking XML Webservice"
        ],
        "Storage, Filesystem, SQL & Cloud Storage": [
          "Storage, Filesystem, SQL & Cloud Storage",
          "Exercise Solution SQL"
        ]
      },
      "requirements": [
        "Java development knowledge",
        "Ability to work with Eclipse/NetBeans",
        "Internet connection"
      ],
      "description": "Codename One is the first and only tool to allow Java developers to write TRUE native applications on all mobile platforms. This 7 hour course will help you build a Codename One application from scratch.\n\nIt is assumed that students know Java and can use Eclipse or NetBeans.\n\nIncluded subjects:\n\nBasics of mobile device development\n\nArchitecture\nDeploy to devices\nUsing Codename One GUI Builder\nBuilding a Todo application\nUI Components\nImages\nEvent Handling\nEvent Dispatch Thread (EDT)\n\nNetwork Manager and Web Services\n\nJSON/XML\nFile system\nSQL\nStyle & Themes\nInternationalization and localization\n\nNative Device Interface",
      "target_audience": [
        "Java Developers"
      ]
    },
    {
      "title": "Step By Step React Native Hybrid Mobile App With Spring Boot",
      "url": "https://www.udemy.com/course/step-by-step-react-native-hybrid-mobile-app-with-spring-boot/",
      "bio": "Full stack development, Multiplatform mobile application, JWT, Admin panel, React-Native, Spring Boot, Liquibase, MySQL",
      "objectives": [
        "Hybrid Mobile Application Development For Multiplatform",
        "Spring Boot",
        "Role Based Authentication With Json Web Token"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Architecture Of All System"
        ],
        "Server Side - Spring Boot": [
          "Prerequests For Server Side",
          "Server Side Source Code",
          "Server Side Overview",
          "Installation - Spring Boot",
          "Install And Enable Lombok",
          "Configuration - Application Properties",
          "Entity Diagram",
          "Hibernate Overview",
          "Create User Model Class - JPA",
          "Create Product Model Class - JPA",
          "Create Transaction Model Class - JPA",
          "Liquibase Overview",
          "Liquibase Implementation For User",
          "Liquibase Implementation For Product And Transaction",
          "JPA Repository Overview",
          "Create User Repository - JPARepository",
          "Create JPA Repository For Transaction And Product",
          "User Service Implementation",
          "Product Service Implementation",
          "Transaction Service Implementation",
          "Controller Overview",
          "Rest Controller Overview",
          "Response Entity Overview",
          "User Controller Implementation - Rest Controller",
          "Admin Controller Implementation - Rest Controller",
          "Spring Security Overview",
          "User Details Service Implementation - Spring Security",
          "Spring Security Default Configuration And Customization",
          "Web Security Configuration - Spring Security",
          "Json Web Token Overview",
          "Json Web Token Installation And Configuration",
          "Create Json Web Token Provider",
          "Create Json Web Token Authorization Filter And Implement It",
          "Test Server Side",
          "Server Side Build And Run"
        ],
        "Mobile Side": [
          "Mobile Side Source Code",
          "Prerequests For Mobile Side",
          "React-Native Overview",
          "Mobile Side Overview",
          "React-Native Installation",
          "Debugging On Android And IOS",
          "Configuration And Creating Page Templates",
          "Create Model Classes - User, Role, Transaction",
          "Create Menu For User Panel",
          "Create Menu For Admin Panel",
          "Create Index StyleSheet",
          "Menu Content Implementation",
          "Navigation Router Implementation",
          "User Service Implementation",
          "Login Page Component Implementation",
          "Register Page Component Implementation",
          "Custom Navigation Bar (Header) Implementation",
          "Home Page Component Implementation - User Panel, Admin Panel",
          "Product Page Component Implementation",
          "Detail Page Component Implementation",
          "Admin Service Implementation",
          "Admin Page Component Implementation",
          "User Page Component Implementation",
          "Mobile Side Run And Build"
        ],
        "Test And Result": [
          "Test It After All",
          "All Source Codes Of All System"
        ]
      },
      "requirements": [
        "Basic Java Knowledge",
        "Basic Javascript Knowledge"
      ],
      "description": "In this course, we will create a multi-platform hybrid mobile application. This application will support many basic concepts.\nOur application will be product management system. In this system, we can manage products. Also, we will go on with user components like login, register, user list, user update, user delete...\nAll system will be implemented step by step so you can easily follow all lectures.\nIn our application, we will use:\nSpring Boot: Spring Security, Model View Controller architecture, Rest Controllers, REST API...\nHibernate: Java Persistence API, Object Relational Mapping...\nLiquibase: We won't implement to database changes manually...\nMySQL: We will use it but we can migrate to other databases easily.\nReact-Native: We will use it for mobile application. We will consume server side data on React-Native with API calls.\nOur project has two main components, one of them is backend and the other one is mobile side. On the backend, we will use Spring boot and we will serve the application via rest api endpoints. With using these rest api endpoints, we can access the backend code easily. And we can benefit from the functionalities of server side... On the other hand, on the mobile side, we will create a UI and we will display the server side data. To display this data, we will use rest-api. We will fetch the rest api with using http-client frameworks and we will parse them. Finally, we will show them on the mobile UI.",
      "target_audience": [
        "All developers curious about React Native And Spring Boot"
      ]
    },
    {
      "title": "Android Custom Views Masterclass",
      "url": "https://www.udemy.com/course/custom-views-in-android/",
      "bio": "Create beautiful, reusable and customizable Custom Views for your Android applications!",
      "objectives": [
        "Learn to use the low-level drawing APIs like Canvas, Paint, etc.",
        "Draw custom shapes using lines, rectangles, circles and paths",
        "Animate the content of your Custom Views",
        "Intercept user interactions and react to drag, scale and rotate gestures",
        "Handle configuration changes and process death"
      ],
      "course_content": {
        "Introduction": [
          "Tutorial Application",
          "Course Exercises",
          "Udemy Review System"
        ],
        "Custom View Basics": [
          "Custom Views Basics Introduction",
          "Custom View Scaffold",
          "Coordinate System",
          "Density Independent Pixels (DIP)",
          "Basic Shape: Line",
          "Basic Shape: Rectangle",
          "Basic Shape: Circle",
          "Exercise 1",
          "Solution Exercise 1",
          "View Positioning",
          "Touch Handling",
          "Custom View Internal Dragging",
          "Exercise 2",
          "Solution Exercise 2",
          "Exercise 3",
          "Solution Exercise 3",
          "View State Preservation on Config Change and Process Death",
          "Fixing a Critical Bug in State Preservation Code",
          "Exercise 4",
          "Solution Exercise 4",
          "Custom View Basics Summary"
        ],
        "Animations": [
          "Animations Introduction",
          "Manual Animation",
          "ObjectAnimator Class",
          "Animation Inside a Custom View",
          "Path Class",
          "Path Animation",
          "Exercise 5",
          "Solution Exercise 5",
          "Exercise 6",
          "Solution Exercise 6",
          "Animations Summary"
        ],
        "Text": [
          "Text Introduction",
          "Auto Scaling Text",
          "Path Arc",
          "Exercise 7",
          "Solution Exercise 7",
          "Self-Measurement Using onMeasure()",
          "Exercise 8",
          "Solution Exercise 8",
          "Text Summary"
        ],
        "Matrix Transformations and Gestures Recognition": [
          "Matrix Transformations Introduction",
          "Matrix",
          "Using Matrix for Translation",
          "Using Matrix for Rotation",
          "Using Matrix for Scaling",
          "Matrix Concatenation (Multiplication)",
          "Canvas Transformations",
          "Exercise 9",
          "Solution Exercise 9",
          "GestureDetector",
          "ScaleGestureDetector",
          "RotationGestureDetector",
          "Exercise 10",
          "Solution Exercise 10",
          "Matrix Transformation and Gesture Recognition Summary"
        ],
        "Course Summary": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic Android development experience"
      ],
      "description": "Learn to leverage Custom Android Views to create unique user interfaces that go beyond the standard Android components! From simple shapes to complex interactive widgets with animations, Custom Android Views can accommodate any requirement. There are truly no limits!\nBenefits of Custom Views:\nSimpler Code: Replace complex XML files and drawables with a single Custom View.\nReusable: Custom View's logic is encapsulated in one class, making it easily reusable in other projects.\nEfficient: Creating a custom View can be quicker and more straightforward than working with multiple standard components.\nThough a bit challenging at first, creating custom Android Views is not a rocket science. In this course, you'll learn all about Custom Views, from the basics to the most advanced concepts. Furthermore, you'll get a chance to apply your newly acquired knowledge in a set of carefully designed, hands-on exercises.\nTopics covered in this course:\nCoordinate Systems\nDensity Independent Pixels\nCanvas and Paint\nLine, rectangle, circle and free-form shapes\nText\nUser interactions\nAnimations\nGestures recognition\nMatrix transformations\nState preservation on configuration changes and process death\nand more\nBy the end of this course, you'll feel completely confident using custom Views in your Android application.\nSo, if you want to master this versatile tool that enhances your productivity as an Android developer, enroll now and join me on this journey into the world of Custom Android Views!",
      "target_audience": [
        "Android developers who use the classical Views UI framework (not Jetpack Compose)"
      ]
    },
    {
      "title": "Create ML for iOS Developers - A Beginner's Guide",
      "url": "https://www.udemy.com/course/create-ml-for-ios-developers-a-beginners-guide/",
      "bio": "Covers: Image Classification, Object Detection, Sentiment Analysis, Tabular Data, Xcode Playgrounds Training",
      "objectives": [
        "The fundamentals of Create ML and how to set up their development environment for iOS machine learning projects.",
        "Techniques for image detection, including training models to identify objects and classify images.",
        "The process of sentiment analysis and how to build models that can determine sentiment polarity and perform text classification tasks.",
        "The principles of object detection and how to train models to identify and locate multiple objects within images.",
        "How to work with tabular data and build predictive models using Create ML, enabling accurate predictions and classifications based on structured data."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files",
          "What is Machine Learning?",
          "What is Create ML?"
        ],
        "Image Detection - Integrating an Existing Model": [
          "Downloading CoreML Model",
          "Testing the Model",
          "Implementing the User Interface",
          "Predicting the Image",
          "Displaying Probabilities",
          "Resources"
        ],
        "Image Recognition Project - Cats vs Dogs": [
          "What are you building?",
          "Downloading Image Dataset from Kaggle",
          "Training and Evaluating Model",
          "Integrating Model in an iOS Application",
          "Selecting Photo from Photo Library",
          "Taking Photo from the Camera",
          "Resources"
        ],
        "Sentiment Analysis Project - News": [
          "What is Sentiment Analysis?",
          "Downloading the Dataset from Kaggle",
          "Training and Creating Model Using Xcode Playgrounds",
          "[Optional] - Extracting Data into Folders Using Python",
          "[Optional] - Training Using Create ML",
          "Integrating Model into a SwiftUI Application",
          "Resources"
        ],
        "Object Detection - Integrating an Existing Model": [
          "What is Object Detection?",
          "Downloading Object Detection Model from Apple Website",
          "Tour of the Starter Project",
          "Understanding Vision Framework",
          "Performing Object Detection Using YOLOv3Tiny Model Through Vision Framework",
          "Displaying Observations on the Screen",
          "Displaying the Bounding Boxes"
        ],
        "Object Detection - Custom Models": [
          "What we will be building?",
          "Using Visio ML to Annotate Images",
          "Training the Object Detection Model",
          "Integrating TrafficLightObjectDetector",
          "Resources"
        ],
        "Tabular Data Project: Predicting Car Prices Using Carvana Data": [
          "Downloading Carvana Dataset from Kaggle",
          "APIs to Handle Tabular Data",
          "Creating ML Model Using DataFrame",
          "Creating ML Model with Specific Criteria",
          "What we will be building?",
          "Exporting List of Cars as JSON",
          "Displaying Predicted Car Prices",
          "Resources"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of iOS app development using Swift.",
        "Familiarity with Xcode, Apple's integrated development environment (IDE) for iOS app development.",
        "Access to the latest version of Xcode and the Create ML framework.",
        "A strong understanding of programming concepts, including variables, functions, and control flow.",
        "A desire to learn and apply machine learning techniques to iOS app development."
      ],
      "description": "Are you an iOS developer looking to harness the power of machine learning in your app development projects? Look no further! This comprehensive course, \"Create ML for iOS Developers - A Beginner's Guide\" is designed to equip you with the knowledge and skills necessary to integrate cutting-edge machine learning models into your iOS applications using Create ML.\nIn this hands-on course, you will embark on a journey from beginner to proficient iOS machine learning developer. We will start by introducing you to the fundamentals of Create ML, Apple's framework for training machine learning models on-device. You will learn how to set up your development environment, understand the key concepts of machine learning, and get familiar with the Create ML workflow.\nAs we dive deeper, you will explore the exciting world of image detection. You'll discover how to train models that can identify objects and even classify images with remarkable accuracy. Through practical exercises and real-world examples, you'll learn how to preprocess images, train models using Create ML's intuitive interface, and seamlessly integrate them into your iOS applications.\nNext, we'll turn our attention to sentiment analysis, a powerful technique for understanding and classifying text data. You'll learn how to train models that can determine sentiment polarity, analyze customer reviews, and perform text classification tasks. Armed with this knowledge, you'll be able to build engaging and intelligent iOS apps that can interpret and respond to textual data.\nBut that's not all! We'll also delve into the fascinating field of object detection, where you'll discover how to train models that can identify and locate multiple objects within images. You'll understand the underlying concepts, explore different architectures, and learn how to optimize your models for real-time performance on iOS devices.\nLastly, we'll explore the world of tabular data and learn how to leverage Create ML to build predictive models. You'll understand how to preprocess tabular data, handle missing values, and train models that can make accurate predictions and classifications based on structured data.\nBy the end of this course, you will have gained the skills and confidence to implement image detection, sentiment analysis, object detection, and tabular data analysis using Create ML in your iOS projects. Whether you're a beginner or an experienced iOS developer, this course will provide you with a solid foundation in machine learning and enable you to create powerful and intelligent applications that will delight your users.\nEnroll now and unlock the potential of Create ML in your iOS development journey!",
      "target_audience": [
        "iOS developers who want to enhance their app development skills by incorporating machine learning capabilities into their iOS applications.",
        "Swift developers who are interested in exploring the field of machine learning and want to apply it in the context of iOS development.",
        "Students or professionals with a background in iOS development who are looking to expand their skill set and incorporate machine learning into their projects.",
        "Individuals who have a basic understanding of machine learning concepts and want to specifically learn how to utilize the Create ML framework for iOS app development.",
        "Intermediate iOS developers who want to deepen their knowledge of machine learning and gain hands-on experience with creating and integrating machine learning models in their iOS applications.",
        "Those who want to stay up-to-date with the latest advancements in iOS development and machine learning by leveraging Apple's Create ML framework."
      ]
    },
    {
      "title": "IOS 11 Platform, An Overview With CoreML and ARKit",
      "url": "https://www.udemy.com/course/ios-11-development-an-overview-with-coreml/",
      "bio": "Photo Recognition App and Augmented Reality Tetris Game",
      "objectives": [
        "Learn how to use Xcode 9 to develop professional IOS 11 applications",
        "Develop a simple Quiz Application",
        "Develop Temperature Conversion Application",
        "Learn how to integrate the Map framework into your applications",
        "Learn how to create Photo Recognition Application using the new CoreML framework",
        "Localization Techniques to create Apps that reach a global audience",
        "Learn how to use Augmented Reality using A Tetris game engine"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Creating a Simple IOS Application": [
          "Getting Started With Xcode 9",
          "Getting Started With Xcode 9 Beta(If Xcode 9 is not out)",
          "Creating Xcode Project",
          "Model View Controller",
          "Interface Builder",
          "Configuring View Objects",
          "Running the Simulator",
          "Auto Layout Introduction",
          "Making Connections",
          "Creating the Model Layer",
          "Quiz App Demo",
          "Icons and Launch Screen"
        ],
        "Basics Of Swift": [
          "Types, Constants, Variables",
          "Conditionals",
          "Numbers",
          "Switch Statements",
          "Loops",
          "Strings",
          "Optionals"
        ],
        "Collections in Swift": [
          "Arrays",
          "Dictionaries",
          "Sets"
        ],
        "Enumerations, Structures, Classes in Swift": [
          "Enumerations",
          "Structures",
          "Classes",
          "Properties",
          "Initialization"
        ],
        "Views and View Hierarchy": [
          "Project Setup",
          "View Hierarchy",
          "Interface Builder",
          "Customized Labels",
          "Auto Layout"
        ],
        "Text and Input Delegation": [
          "TextField Editing",
          "Keyboard Types",
          "TextField Response",
          "Keyboard Dismiss",
          "Implementing Temperature Converter",
          "Number Formatting",
          "Delegation"
        ],
        "View Controllers": [
          "View Controller Introduction",
          "Setting the Initial View Controller",
          "Tab Bar Controllers",
          "Adding Icons to Convert and Map",
          "Create Swift File for Map View Controller"
        ],
        "Programmatic Views": [
          "Programmatic Map View",
          "Programmatic Constraints",
          "Anchors",
          "Margins",
          "Programmatic Controls"
        ],
        "Localization and Internationalization": [
          "Internationalization and Localization Introduction",
          "Internationalization",
          "Internationalization Continued",
          "Base Internationalization",
          "Localization",
          "String Tables"
        ]
      },
      "requirements": [
        "Students must have A Mac with Xcode 9 installed to develop IOS Applications"
      ],
      "description": "This course is designed for students who wish to learn about the IOS platform. More specifically, this course is designed for beginners who may or may not have any experience with Developing apps for the Apple iPhone using IOS 11. Don't know Swift 4? well this course includes everything you need to get started with this new and growing language from Apple. The course has been carefully designed for students who wish to be taken from a beginner to paid professional. Everyone can get something out of this course as it will cover everything you need to know to feel most comfortable designing and creating your own applications for the Apple Store. Please join me in your journey in becoming a successful apple developer.\n\n\nBest Practices: (Please Read)\n1.) Watch the lecture. Seems self explanatory so let me elaborate; I would prefer students to put your pencils down(not write any code) and watch closely to the lecture and its content. This will allow you to download all important information to your brain before trying it yourself. Also, watch the class in order from beginning to end; students sometimes like to jump ahead, this I cannot recommend doing. The way this class is structured is intended to be done from start to finish line.\n2.) After each lecture, please note that the code covered in class is readily available for download. It is my expectation of the student to download this code and load it into their environments to play around and be creative. This is the exercise I expect students to do before moving onto the next lecture. This is an important time for students to go and break things; that's right break the code I give you. In learning to code especially, you learn from fixing what is broken! So I encourage the student to be creative with how they want to treat the downloadable resources; There are no wrong ways to approach this method of learning on your own.\n\n3.) As the facilitator of your learning, if you get stuck on something or would like to share with the class your experience, please add your thoughts and comments to the Q and A section of this course. An open dialogue with myself or other students will reinforce the ideas covered in the lectures.\nNote: The brutal truth to learning how to code, is that there are \"no free lunches\" or experiences of instant gratification. Coding is learned through brute force and trial and error. This method of learning never goes away, as I myself go through it everyday. This class is about learning how to learn, and improving the problem solving skills that you will need to succeed not only in this course, but with the rest of your careers as programmers.",
      "target_audience": [
        "Students that wish to know an overview of how to write applications on the IOS 11 platform",
        "Students that wish to learn Swift 4"
      ]
    },
    {
      "title": "Develop 6 Beginner iPhone Games with Swift and Xcode",
      "url": "https://www.udemy.com/course/develop-6-beginner-iphone-games-with-swift-and-xcode/",
      "bio": "Make your first games for the App Store with Xcode 8 and SpriteKit. Learn to code in Apple's Swift 3 programming lang...",
      "objectives": [
        "Code in Swift 3",
        "Build 6 2D Games with SpriteKit",
        "Program And Solve Complicated Problems Using Swift",
        "Deal with Collisions and Physics",
        "Organize Project And Animate Sprites",
        "Master SpriteKit Fundamentals",
        "Create Scenes In The Scene Editor"
      ],
      "course_content": {
        "Introduction to Swift Programming": [
          "How to get good at anything",
          "Talking about variables",
          "Adding variables and talking about converting variables",
          "Introduction to arrays",
          "If Statements",
          "Else if statements",
          "Functions introduction"
        ],
        "Introduction to SpriteKit": [
          "Introduction to Xcode and SpriteKit",
          "Adding in a sprite",
          "Learning about override functions",
          "Adding in a SKLabel Node",
          "Talking About SKActions",
          "Adding in many SKActions",
          "Adding in a runblock",
          "Adding in a circle SKShapeNode"
        ],
        "Lab 1 - Avoid Mines Game": [
          "Lab 1 - Avoid Mines Game Preview",
          "Setting up the game",
          "Setting up the sprites",
          "Adding in the labels",
          "Randomly Generate the mines",
          "Adding in the player controls",
          "Setting up the contact information",
          "Setting up the goal logic",
          "Setting up the final touches",
          "Making the art in illustrator",
          "Setting up the art in the game"
        ],
        "Lab 2 - Whack a Mole Game": [
          "Lab 2 - Whack a Mole Game Preview",
          "Setting up the game",
          "Setting up the nodes",
          "Adding in the timers",
          "Setting up the controls logic",
          "Setting up the game over and reset logic",
          "Making the art",
          "Adding in the art to Xcode"
        ],
        "Lab 3 - Math Educational Game": [
          "Getting Started",
          "Adding in the game objects",
          "Setting up the colors",
          "Adding in the touches began logic"
        ],
        "Lab 4 - Gravity Flip Game": [
          "Lab 4 - Gravity Flip Game Preview",
          "Getting started",
          "Adding in the game objects part 1",
          "Adding in the game objects part 2",
          "Setting up the timers and the move block functions",
          "Setting up physics and restarting the game",
          "Testing the game",
          "Changing the gravity",
          "Testing the floor blocks",
          "Final touches on the game"
        ],
        "Lab 5 - Move Blocks to goal game": [
          "Staring Lab 5 - Move Blocks to goal game",
          "Setting up the items for the game",
          "Setting up the controls",
          "Setting up the physics didBeginContact",
          "Adding in the reset logic",
          "Adding in finishing touches"
        ],
        "Lab 6 - Follow the leader Game": [
          "Lab 6 - Follow the leader Game Preview",
          "Setting up the game",
          "Adding in the game objects part 1",
          "Adding in the game objects part 2",
          "Setting up the controls",
          "Setting up the block avoid movement",
          "Setting up the leader circle path",
          "Spawning the collectibles",
          "Setting up the physics",
          "Setting up the contact and the game over logic",
          "Making the art in illustrator",
          "Adding in art"
        ]
      },
      "requirements": [
        "A Mac computer (Xcode is only compatible on Mac or a Mac Virtual Machine)",
        "Xcode 8 (Free)",
        "No prior coding experience needed"
      ],
      "description": "Learn to build 6 games for iPhone in Swift 3 with SpriteKit! Learn to build effective cash earning games by learning the secrets of development. Take your skills to a whole new level.\nYou will build this app from scratch! You don't have to have any prior experience in game development.\nThe course is structured so that it begins slowly, and with each lecture, you will understand more and more fundamentals about developing games with SpriteKit.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nFive of the top ten highest grossing apps on the iOS App Store are games. If you ever had an idea for an amazing game and needed a clear, step-by-step course from a friendly teacher, this course is for you.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.",
      "target_audience": [
        "Complete Beginners",
        "Anyone Who Wants To Learn iOS Game Development Using SpriteKit"
      ]
    },
    {
      "title": "Flutter AR Development: Build an IKEA Place App Clone",
      "url": "https://www.udemy.com/course/learn-and-build-augmented-reality-ar-apps-with-flutter/",
      "bio": "Master AR App Development with Flutter and Google ARCore – Learn to Build iOS Android AR Furniture eCommerce Shop App",
      "objectives": [
        "Augmented Reality",
        "Artificial Intelligence",
        "Google ARCore",
        "Mobile AR Apps Development"
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming Experience Needed.",
        "Basic Flutter Experience Needed."
      ],
      "description": "Step into the fascinating world of Augmented Reality (AR) and learn how to create immersive, cutting-edge applications with Flutter and Google ARCore! In this comprehensive course, you'll gain the knowledge and skills to develop AR apps that blend the digital and physical worlds seamlessly.\nStarting with an introduction to AR technology, you'll explore the core concepts behind augmented reality and how it enhances user experiences. From there, you’ll dive into the powerful Google ARCore plugin, integrating it with Flutter to build feature-rich applications that stand out.\nWhat You’ll Learn:\nThe fundamentals of Augmented Reality and its real-world applications.\nHow to set up Flutter and integrate Google ARCore for AR development.\nTechniques for placing virtual objects in real-world environments.\nBuilding interactive AR features, such as object tracking and gestures.\nOptimizing AR apps for performance and user experience.\nWhy Choose This Course?\nThis course is designed for both beginners and experienced developers who want to stay ahead in the rapidly growing AR industry. With practical project, clear explanations, and step-by-step guidance, you’ll be equipped to create apps that captivate users and bring your ideas to life.\nTake your skills to the next level and join the AR revolution. Enroll today and start building the future with Flutter and ARCore!",
      "target_audience": [
        "Beginners Flutter Developers curious about Augmented Reality Applications",
        "Beginners Flutter Developers who wants to learn AR Based Application Development"
      ]
    },
    {
      "title": "State of the Art Android app development in Java",
      "url": "https://www.udemy.com/course/javaandroidapp/",
      "bio": "Using Java, MVVM, Dagger2, Navigation, Retrofit and Unit tests",
      "objectives": [
        "MVVM",
        "Dagger2",
        "Unit tests",
        "State of the Art Android development",
        "Retrofit",
        "Glide",
        "Navigation",
        "Data Binding",
        "Kotlin"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to take this course",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Resources"
        ],
        "Setup": [
          "Android Studio",
          "Install Android Studio on a Mac",
          "Install Android Studio on a PC",
          "How to test on your phone",
          "Create the project",
          "Adding the necessary libraries"
        ],
        "Navigation": [
          "What is Navigation",
          "Navigation fragments",
          "Navigation configuration",
          "Invoking navigation actions",
          "Challenge",
          "More navigation options",
          "Cleanup"
        ],
        "MVVM": [
          "Lifecycles, LiveData, MVVM",
          "Model and ViewModel",
          "Build the layout",
          "Create the Adapter class",
          "Putting it all together"
        ],
        "Model - getting data with Retrofit": [
          "What is Retrofit",
          "Data classes",
          "Retrofit",
          "Retrieve the data",
          "Glide",
          "Shared Preferences"
        ],
        "Detail screen and Palette library": [
          "Detail screen layout",
          "Detail screen functionality",
          "What is the Palette library",
          "Palette library"
        ],
        "Data Binding": [
          "What is Data Binding",
          "Binding the list items",
          "Binding the images",
          "Binding method calls",
          "Challenge",
          "Detail Fragment"
        ],
        "Dependency injection using Dagger2": [
          "What is Dependency Injection",
          "Injecting the Api",
          "Challenge",
          "Injecting the ApiService",
          "More Dagger features"
        ],
        "Unit Testing using Mockito": [
          "What are unit tests",
          "Create the test rules",
          "Create the Dagger Test objects",
          "Test the animals API success path",
          "Test the animals API failure path",
          "Challenge",
          "Test the Key API"
        ],
        "Conclusions": [
          "Next steps",
          "Conclusions",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Mac or PC",
        "Interest in Android development",
        "Kotlin knowledge"
      ],
      "description": "Build a State of the Art Android App with this new course on Android development and Java.\nMost tutorials and how to's show you the basics of app building, but they don't show you how to use the latest technologies and libraries.\nMost projects and jobs require you to know how to use the latest libraries. This is what this course is all about.\nThe purpose of this course is to give you a practical example of how to use these technologies, all while building a simple example app.\n\n\nWe will learn about:\nMVVM architecture using the Google recommended Android Lifecycle Extensions\nRetrofit and JSON for remote server communication\nRxJava as a reactive framework\nDagger2 for dependency injection\nJetpack navigation for navigating the user through the app screens\nJetpack Data Binding for building UI screens\nGlide for seamless image loading\nJetpack Palette for extracting colors from images\nUnit tests to test the application and make it stable and robust\nAnd we will build everything in Java\nIf you want to become an expert Android Developer, you need to know how to use these technologies.\nIf you want to build an app that scales and is robust, these technologies will make your life easy in the long term.\n\n\nSign up today, and let's learn how to properly build a State of the Art Android Application.",
      "target_audience": [
        "Beginner Android developers",
        "Students with an interest in mobile development"
      ]
    },
    {
      "title": "Create ML | Core ML | The Ultimate Swift 5 IOS Course",
      "url": "https://www.udemy.com/course/the-ultimate-ios-machine-learning-course/",
      "bio": "Master practical iOS app development with Swift 5 using Create ML + Core ML. Learn hands on + real world app integration",
      "objectives": [
        "Use CreateML and Train all types of Machine Learning models available.",
        "Integrate and use ML models with IOS applications.",
        "Understand input variables as well as the output loss function and test results.",
        "Correctly label images to add as training data.",
        "Improve application user experience using ML.",
        "Follow CreateML best practices to maximize model accuracy and efficiency.",
        "Generate additional data using data augmentations.",
        "Introduction to Generative AI and Large Language Models",
        "Understanding and calling the GPT API"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Code Downloads"
        ],
        "Getting Started with Create ML": [
          "Installing Create ML"
        ],
        "Image Classification": [
          "Image Classifier Intro",
          "Efficiently Downloading Custom Datasets for Image Classification",
          "Augmentations for Image Classification",
          "Training and Testing the Image Classifier model",
          "Integrating the Image Classification Model in an IOS App",
          "Running and Testing the classifier on the IOS App"
        ],
        "Object Detection": [
          "Object Detection Intro",
          "Labeling the Object Detection Dataset",
          "Training the Object Detection models",
          "Integrating the Object Detection Model in an IOS App"
        ],
        "Style Transfer": [
          "Style Transfer"
        ],
        "Sound Classification": [
          "Sound Classification Intro and Training",
          "Integrating the Sound Classifier in an IOS App"
        ],
        "Recommender Models": [
          "Recommender Intro and Movie Recommendation use case, training, and testing",
          "Integrating the Movie Recommender in an IOS App"
        ],
        "Tabular Classification": [
          "Introducing, Training and Testing Tabular Classification Models",
          "Integrating an Iris Tabular Classifier in an IOS App"
        ],
        "Tabular Regression": [
          "Introducing, Training and Testing a Wine Quality Tabular Regression Model",
          "Integrating the Wine Quality Model into an IOS Application"
        ],
        "Text Classification and Sentiment Analysis": [
          "Text Classification and Sentiment Analysis - Introduction, Training and Testing",
          "Integrating the Model in a Mobile Application reviewing airline online reviews"
        ]
      },
      "requirements": [
        "An Apple MacBook running MacOS 10.14 or later is required.",
        "Basic Swift knowledge is preferred for easier understanding.",
        "No need to be an expert in Machine Learning."
      ],
      "description": "Unlock the Power of Machine Learning in iOS Apps with Create ML\n\n\nAre you an aspiring app developer, a curious technologist, or an iOS enthusiast eager to incorporate machine learning into your applications? Look no further! Our comprehensive course on Create ML for iOS devices is designed to help you seamlessly integrate advanced machine learning capabilities into your iOS projects, with a focus on practical application over theory.\n\n\nWhy Choose This Course?\n\n\n- Hands-On Approach: Dive straight into using Create ML with real-world examples. This course emphasizes practical skills, guiding you through the process of implementing image, video, sound, and data models in your apps.\n- No Advanced Math Required: You don't need a background in complex mathematics or machine learning theory. We keep it simple, focusing on how to use Create ML tools effectively.\n- Real-Life Scenarios: Learn how to gather, process, and implement data in real-world scenarios, making your learning experience highly relevant and immediately applicable.\n- Versatile Skill Set: By the end of this course, you’ll be adept at using a variety of templates in Create ML, equipping you to enhance a wide range of iOS applications.\n\n\nWhat You Will Learn:\n\n\n- Foundation of Create ML: Understand the basics of machine learning and how Create ML makes it accessible for iOS developers.\n- Data Gathering and Preparation: Master the art of collecting and preparing data for training your models.\n- Training Models: Step-by-step guidance on how to train image, video, sound, and data models using Create ML.\n- Implementation in Apps: Learn how to seamlessly integrate your trained models into iOS apps, enhancing functionality and user experience.\n- Project-Based Learning: Work on practical projects that simulate real-world challenges and solutions.\n\n\nWho is this Course For?\n\n\niOS Developers looking to add machine learning features to their apps.\nStudents and Hobbyists interested in the practical application of machine learning in app development.\nTechnologists and Entrepreneurs aiming to understand how machine learning can be applied in iOS environments.\n\n\nCourse Features:\n\n\nEngaging Video Tutorials\nStep-by-Step Screen Shares\nDownloadable Resources\nReal-World Projects\nInteractive Quizzes\nAccess to a Community Forum\nContinuous Course Updates\n\n\nEmbark on this exciting journey to make your iOS apps smarter, more intuitive, and more engaging with the power of machine learning. No prior machine learning experience required!\n\n\nEnroll now and start transforming your iOS apps with Create ML!",
      "target_audience": [
        "All-in-one CreateML course for users willing to integrate machine learning in their IOS apps.",
        "Developers wishing to improve their app's user experience using ML.",
        "Developers who are looking for plug and play code snippets facilitating the integration of CoreML Models.",
        "Developers wishing to make the most from their models by understanding how to tweak input variables.",
        "Developers looking to find the best labeling and augmentation tools to export CreateML valid data.",
        "Beginners interested in integrating Generative AI and LLM in their applications"
      ]
    },
    {
      "title": "Learn MVVM with .NET MAUI",
      "url": "https://www.udemy.com/course/learn-mvvm-with-net-maui/",
      "bio": "Learn to make Real World App .NET MAUI App with MVVM Pattern",
      "objectives": [
        "Be able to build .NET MAUI applications with MVVM",
        "Learn the complete fundamentals of MVVM",
        "Implement the Navigations , Commands & INotifyPropertyChanged",
        "Implement Dependency Injection inside MVVM",
        "Handle the Collection view Selection in MVVM",
        "Create NEWS App from scratch with MVVM",
        "Consume Restful Api's in MVVM project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure"
        ],
        "MVVM Fundamentals": [
          "Create a .NET MAUI Project",
          "Why we need MVVM",
          "How MVVM works ?"
        ],
        "Commands & INotifyPropertyChanged in MVVM": [
          "Commands Overview",
          "Implement Commands in MVVM",
          "Passing Data From View to ViewModel",
          "INotifyPropertyChanged"
        ],
        "MVVM Community Toolkit": [
          "Install MVVM Community Nuget",
          "Working with MVVM Community Toolkit",
          "Relay Commands"
        ],
        "Navigation in .NET MAUI MVVM": [
          "Legacy Mode of Navigation",
          "Shell Based Navigation",
          "Passing Data in Shell Based Navigation",
          "Display News Detail Page Data",
          "Pass Multiple Items of Data",
          "Display Multiple Items Data"
        ],
        "Create News Application with MVVM": [
          "Overview",
          "Design News Page",
          "Create Models and Service Class",
          "News View Model",
          "Data binding in News Page",
          "Collection View Command Navigation",
          "Navigation in Collection View",
          "Android Version CollectionView Navigation Issue Solved",
          "News Detail Page"
        ],
        "Getting Started with News Api’s": [
          "Create Json Data For News Api",
          "Generate Sample News Api",
          "Calling Rest Api’s with HTTP Client",
          "Consume News Get Async method",
          "Source Code",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "You should be familiar with C# , Xamarin Forms or .NET MAUI.",
        "At least 3-6 months experience with Xamarin Forms / .NET MAUI and XAML",
        "Visual Studio 2022 with windows Or Mac Edition whatever suits you."
      ],
      "description": "Welcome to the First Real World App Development course with .NET MAUI.\nI'm Asfend Microsoft Most Valuable Professional (MVP) and Xamarin University Most Valuable Professional and in this course I'll explain you every single aspect of making .NET MAUI application with MVVM pattern.\nThis courses teaches you how to add the MVVM inside your .NET MAUI application.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll be able to :\n\n\nCreate a MVVM Based Application\nHandle Commands , Navigation & INotifyPropertyChanged\nHandle Shell Based Navigation in MVVM\nCollection View Selection\nImplement Dependency Injection\nConsume MAUI Community Nuget's\nCreate a News Application in .NET MAUI From Scratch to End.\nConsume Rest Api's in MVVM and much more\nPrerequisites\nIn order to complete this course you must have a knowledge of C# and XAML .\n.NET MAUI or Xamarin Forms knowledge is must for this course.\n\n\nRemember\nWell in this course we'll use the MAC machine to develop the .NET MAUI applications. If you've a MAC machine then you'll be able to test both the android and IOS application but if you've a windows machine then you can only test the android application.\nBut don't worry because all the code we'll use in this course will be used on all the platforms including Android , Windows and IOS.\n\n\nWhat you'll get from this course ?\nAfter this course you'll get all the Application Source Code.\nYou'll get the helping material like code snippets and assets along with this course.\nI know time is money and that's why I've tried my level best to keep this course short so that you don't lose momentum and learn all things in .NET MAUI in short time.\n\n\nSo what are you waiting for? Click the buy now button and join the  .NET MAUI App Development Course with MVVM and lets' start learning.",
      "target_audience": [
        "If you've a 3 to 6 months .NET MAUI experience , then take this course.",
        "If you are a .NET MAUI developer and want to learn more advanced concepts like MVVM with quick pace then take this course.",
        "If you're already a Xamarin Developer and wants to build application with .NET MAUI then take this course."
      ]
    },
    {
      "title": "Calculator App Practical How-To For Flutter & Dart Beginners",
      "url": "https://www.udemy.com/course/calculator-app-from-scratch-first-app-for-flutter-dart-beginners/",
      "bio": "A beginner-friendly hands on guide to build a calculator app with state management all from scratch with Flutter.",
      "objectives": [
        "Creating the very first Flutter app",
        "How to get from concept / design to the finished app",
        "Working with state / StatefulWidgets",
        "How to layout apps in Flutter with Row and Column Widgets",
        "Basic Widget usage in Flutter",
        "The very basics of Dart that are needed to create an app",
        "Extracting widgets into separate classes / files",
        "The mindset of a Flutter developer",
        "The skillset that is a perfect starting point for a long-lasting Flutter career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "First steps": [
          "Project setup",
          "Excursion about Widgets",
          "Using a Scaffold Widget",
          "Quiz - Widgets"
        ],
        "Implement the look": [
          "Creating the result display",
          "Creating the keypad"
        ],
        "Implement the behavior": [
          "Extracting Flutter Widget",
          "Making the Widget stateful",
          "Excursion about functions",
          "Number pressed",
          "Operator pressed",
          "Displaying the calculation",
          "Calculate result"
        ],
        "Recap / Appreciation": [
          "What have we achieved so far?"
        ],
        "Optimization": [
          "Overview",
          "Making the buttons round / extracting",
          "Adding tap behavior",
          "Adding spacing between keypad rows",
          "Extracting NumberButton",
          "Extracting OperatorButton",
          "Extracting ClearCaclulationButton",
          "Extracting CalculateResultButton",
          "Styling the keypad"
        ]
      },
      "requirements": [
        "No programming experience needed but helpful",
        "A working Dart / Flutter environment",
        "A running IDE like Android Studio or Visual Studio Code"
      ],
      "description": "Are you interested in learning how to create mobile apps or have just started using Flutter?\nDo you want to try your hand at app development but don't know where to start?\nThen this course is for you!\n\n\nIn this beginner-friendly video course, you'll learn how to build a fully functional calculator app using Flutter, Google's mobile app development framework. No prior programming experience is required, but it will certainly be helpful. The only requirement is that you have Flutter installed and your favourite IDE running.\n\n\nUnlike some courses that overwhelm you with theoretical explanations, this course takes a learn-by-doing approach. You'll get started right away by setting up the project, and you'll create your first Flutter project within a matter of minutes.\n\n\nThe course is divided into several easy-to-follow sections that cover all the basics of Flutter app development.\n\n\nUpon completing the course, you can expect to have gained the following skills and knowledge:\nA foundational understanding of Flutter widgets\nProficiency in basic layouts using Row and Column widgets\nUtilising inbuilt widgets like AppBar and Scaffold\nBeing able to transform your design or concept into a functional application\n\n\nWhat does the finished app look like?\nYou'll have built a calculator app that can perform the four fundamental mathematical operations, which are:\nAddition\nSubtraction\nMultiplication\nDivision\nThis course also works if you have experience in Flutter and Dart. The basic explanatory excursion are extracted into separate lectures so that you can skip them if you already know the respective topic.\n\n\nEnroll now and join the millions of developers who use Flutter to create beautiful, fast, and modern apps!",
      "target_audience": [
        "Beginner Flutter developers who want quick results",
        "Students who want to learn by doing",
        "Flutter newcomers who want to create their first app",
        "Curious, practice-oriented learners"
      ]
    },
    {
      "title": "Android 5.0 Lollipop - Essential Training",
      "url": "https://www.udemy.com/course/android-50-lollipop-essential-training/",
      "bio": "Android 5.0 - Lollipop - Successor to Kit kat 4.4. Android Programming Apps with Material Theme, Media Playback etc,",
      "objectives": [
        "Skills to create new generation mobile apps in Android",
        "Developers will get a quick overview of the new APIs in Android Lollipop",
        "Lifetime access to over 5 hours of high quality training video content"
      ],
      "course_content": {
        "Lollipop Overview": [
          "Lollipop Overview",
          "Discussion of this Course"
        ],
        "Material Theme": [
          "The Material Theme",
          "Material Theme Demo with Source Code",
          "Recycler View and Card View",
          "Recycler View Demo with Source Code",
          "Using Card View in a Recycler View with Source Code"
        ],
        "Improvements in media playback": [
          "Media",
          "Media Demo",
          "Camera",
          "Camera Demo with Source Code"
        ],
        "Mini Pong - A Single Player Game App": [
          "Bouncing Ball",
          "Paddle",
          "Paddle Collision",
          "Testing",
          "Source Code"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Creative mindset and passion to create new apps will be a plus"
      ],
      "description": "Android 5.0, also known as Lollipop, brings many new features and capabilities to Android powered mobile devices. Lollipop has a more polished design, improved performance, and a TON of new features. In fact, with this release, in many ways Google has caught up and far exceeded the Apple's iOS 8 mobile platform. The most visible change is the new user interface and Material theme, but there have been significant changes to -\nnotifications\nmedia\n3D graphics capabilities\nthe storage system\nwireless connectivity\n... and a ton of more APIs (over 5000 new APIs have been introduced!)\nWith the new Material design style and user interface updates, developers can take advantage of shadows on views and control their height (z-level), and use drawable animations and activity transition effects to give the user a more active experience. XML vector graphics can now be drawn directly into drawables, and UI controls can be fully customized to suit your needs. Lollipop also now supports the Khronos OpenGL-ES 3.1 standard, allowing 3D graphics developers to take full advantage of that toolset. There is also an Android extension pack for OpenGL-ES that guarantees fragment shader support, and adds geometry shaders and tessellation. The new camera APIs can be used to detect devices and their capabilities, selecting among them from within your app. There are over 60 capabilities for cameras defined in the API, which allows for very fine-grained selection of the proper camera for every need. Lollipop also adds the MediaSession and MediaController class for better control of media playback and simplified media browsing. Apps can now scan and select among all available networks, and devices can now function as Bluetooth peripherals. There are also expanded capabilities for near field communication (NFC). All that said, with Android Lollipop, developers have many more choices and powerful capabilities at their fingertips!\nWhat You Will Learn\nThis course is an update to EDUMobile's Android Development course, but can also be used by working developers to get a quick overview of the new APIs in Android Lollipop. You get - approximately 5 hours of High Quality Video Training, Source Code, Workbooks and Exercises taught over 5 Sequential Units.\n[Section 1] Gives a small overview of the course with introduction.\n[Section 2] Presents some of the important features of the new Material theme and user interface. We'll look at two new controls that help organize and display lists of data, as well.\n[Section 3] Covers the improvements in media playback as well as an introduction to the new camera APIs.\nThe material in the course is presented at a very high level by necessity, and will help you get started with the essential concepts you need to know in the Android Lollipop 5.0\nIf you're a mobile developer, and you've wondered what this new Google Lollipop tastes like - this is a perfect start!",
      "target_audience": [
        "Desire to learn new and enhanced features of Android",
        "Anyone with a passion to create new innovative mobile apps and make tons of money"
      ]
    },
    {
      "title": "Xamarin iOS App in C# & Firebase",
      "url": "https://www.udemy.com/course/ios-app-in-xamarin-c-with-firebase-backend/",
      "bio": "Developing a complete iPhone application using C Sharp in Xamarin Studio with Firebase backend",
      "objectives": [
        "Full fledged iOS development of a grocery list app",
        "Various outlets and dynamic interface development",
        "Backend database using Firebase"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Starting a New Project and Testing Simulator"
        ],
        "Lists View Controller": [
          "Designing Our Lists Storyboard",
          "Connecting Our Storyboard Outlets to the Code",
          "Table View Data Source",
          "Testing Data Source",
          "Understanding Our Data Structure",
          "Adding Item Class",
          "Adding Grocery List Class",
          "Adding User Class",
          "Adding App Data Class",
          "Preparing First List",
          "Testing Out the Initial List",
          "Adding a New List"
        ],
        "Data Handling": [
          "Understanding Data",
          "Write and Read Data and User Method",
          "Reading Data Method Part 1",
          "Deleting a List by Dragging"
        ],
        "Items View": [
          "Items Storyboard",
          "Items View Controller",
          "Navigating to Items View Controller",
          "Cur List",
          "Items Table Data Source and Populating Items Table View",
          "Clicking on an Item",
          "Dragging to Delete an Item",
          "Reloading Table View in View Did Appear",
          "Adding a New Item",
          "Understanding What Happened"
        ],
        "Backend": [
          "Firebase Console",
          "Adding Firebase Packages",
          "Initializing Firebase in AppData",
          "Testing Out Firebase",
          "Alert Show Method",
          "Profile Action",
          "Register Alert View",
          "Register Method",
          "Set Local User",
          "Save User Main Values on Cloud",
          "Save All User Lists Online",
          "Login Alert View and Method",
          "Async Task Methods",
          "Using Asset Files",
          "Reading Online Data",
          "Compare Lists Method",
          "Logging Out From Cloud",
          "Setting Profile Button",
          "New List on Cloud",
          "Delete List on Cloud",
          "Save a New Item on Cloud",
          "Change Item Status on Cloud",
          "Delete Item on Cloud",
          "Recap of All Login Methods"
        ],
        "Invitations": [
          "Share This Function",
          "Sending an Invitation",
          "Invitation Class",
          "Reading Invitation Node",
          "Loading Invitation Lists",
          "Removing an Invitation",
          "Deleting a List",
          "Conclusion and Suggestions"
        ]
      },
      "requirements": [
        "Understanding of basics of programming in any language",
        "Basic familiarity with iOS development"
      ],
      "description": "In this course, we will learn how to develop a complete iPhone application using Visual Studio (or Xamarin Studio) C Sharp and Firebase. Throughout the course, we will discuss a wide range of topics such as interface design, databases and data structures as well as user authentication through Firebase MBaaS. This course is designed to cover a wide range of audience. It can be useful to people with basic understanding of iOS development and programming. It is also useful if you wish to learn more about data structures, reading and writing local and remote databases.",
      "target_audience": [
        "iOS developers planning to move on to Xamarin and C#",
        "C# programmers planning to learn iOS development"
      ]
    },
    {
      "title": "Build & Publish a Word Search Puzzle Game for iOS, no coding",
      "url": "https://www.udemy.com/course/build-publish-a-word-search-puzzle-game-for-ios-no-coding/",
      "bio": "Every Single step you need, assuming you know nothing, to get your puzzle game built and published to itunes app store",
      "objectives": [
        "Get your own puzzle game published in the iTunes app store",
        "Make passive income from the 3 ad networks integrated within the app"
      ],
      "course_content": {
        "Initial Setup": [
          "Apple Developer License",
          "Get XCode Tool",
          "Download Source Code & Verify Game Works",
          "iOS Certificates",
          "App Provisioning Profile"
        ],
        "Advertising Network Account Setup": [
          "Revmob and Chartboost Accounts",
          "Admob Account"
        ],
        "Working on Main Graphics": [
          "Graphic Assets Overview",
          "Changing Theme Colors",
          "Changing other Screens Colors",
          "Modifying Home Screen Graphics and Title",
          "Modifying Home Screen Images",
          "Modifying screens for iPads"
        ],
        "Words to find": [
          "Editing the words to find",
          "Word packages to buy"
        ],
        "Launch Images": [
          "Creating Launch Images with Photoshop or Gimp",
          "Resizing the launch images"
        ],
        "Working on Icons": [
          "Creating the App Icon",
          "Resizing the Icons",
          "Adding the icon of size 120 pixels",
          "Adding the icons of iPad dimensions",
          "Connecting icon images to xcode project"
        ],
        "Screenshots": [
          "Taking gameplay screenshots",
          "Taking iPad screenshots"
        ],
        "In-app purchase screen modifications": [
          "modifying the in-app purchase screen",
          "Taking screenshots of the in-app purchase screen for review"
        ],
        "Application Settings": [
          "Modifying app settings in xcode",
          "Creating itunes connect app settings",
          "Modifying app IDs for app rating and review"
        ],
        "in-app purchase settings": [
          "In-app purchases - part 1",
          "In-app purchases - part 2",
          "in-app settings to unlock packs",
          "Selecting all in-app purchases in ITC",
          "Testing in-app purchases functionality in the iPhone simulator"
        ]
      },
      "requirements": [
        "a MAC computer or MacInCloud.com account"
      ],
      "description": "Thank you for your interest in this course, my name is Yohann, I will be your instructor.\nWith this course, you get the full source code of a classic word search game for iPhones and iPads. (iOS7 and iOS 8 beta ready, universal app)\nThe gameplay is simple & addictive. these are the main ingredients to make a successful game in the app store.\nIn this course, I show you every single steps you need to start, and I’m assuming you know nothing or very little,and I’m gonna help you succeed having your very own game, published in the itunes app store, without having to write not even one single line of code!\nSince this source code comes with advertising banners you not only get an education but you also have the potential to make passive incomes from it.\nMany of my students that took my courses, just like this course, made it to the top iTunes charts and they are now making a living out of creating mobile games!\nThis game source code costs hundreds of dollars on its own, and you’re getting it for free with this course. You can keep using this code and make dozens of games out of it. In the video lectures, I will create a word search puzzle with a halloween theme, but feel free to create your own, it could be anything you can imagine such as Christmas, Hanoukka, Kwanza, easter, any holidays or any topics you can think of. Your imagination has no limit!\nThis is a perfect way to start your mobile app business and this is a must-have app for anyone wanting to increase their app portfolio.\nMake the right decision and join us now. I’ll see you in the classroom.",
      "target_audience": [
        "people who wants to start their own business with little money",
        "people wanting to increase their app portfolio",
        "graphic designers who want to make their own business",
        "side business and side entrepreneurs"
      ]
    },
    {
      "title": "Learn SQLite Programming on Android Kitkat",
      "url": "https://www.udemy.com/course/learn-sqlite-programming-on-android-kitkat/",
      "bio": "Get started with SQLite development on the Android Kitkat platform. Premium quality course taught by American Expert.",
      "objectives": [
        "Get your first database driven App ready!",
        "Advance on to more complex development topics using SQLite",
        "You can Easily create quality apps that communicate with SQLite database"
      ],
      "course_content": {
        "Installation of Java and Developer Tools": [
          "Introduction",
          "Android Applications Overview",
          "A Simple Hello World App",
          "The Activity Lifecycle",
          "Activity Lifecycle Demo",
          "Assignment - Section 1"
        ],
        "SQLite": [
          "SQLite Overview Discussion",
          "SQLite Statement Syntax",
          "SQLite with Android",
          "Simple Database App",
          "The Simple Cursor Adapter Class",
          "Putting it All Together",
          "Assignment - Section 2"
        ]
      },
      "requirements": [
        "We assume you have some knowledge of Java programming or any other programming language"
      ],
      "description": "Android platform is used to make new and innovative mobile applications by smart developers to make full use of all functions connected to handset internet. Unless you are making the most basic of Android applications, you need data management and the platform uses the SQLite database system, which is an open-source and stand-alone SQL for this purpose.\nDatabase is the lifeline for every application and for ALL serious Android App Developers knowledge of SQLite is a MUST.\nSQLite eases the data-storage burden and makes it easy to incorporate powerful database features that provide users with a much more interactive experience.\nIn this miniscule course on SQLite, our expert American Tutor starts off on the basics of Android Application with example of a simple app creation. All the lectures are simple, professional and straight to the point.\nThe course spans about 110 minutes of HIGH Quality Videos which consists of 11 Lectures and Assignments.\nOur prime focus is to ensure that learning is simple and done methodically through easy to follow video sessions. All topics are easy to learn and presented in digestible short 5 to 15 minute videos with real world examples and demos. The course contains discussions and demos to test your skills. All demos come with full source code that you can download and use for your projects.\nWe hope that our course has benefited you and you enjoyed taking it, just as we enjoyed making it for you. We have received positive reviews from students for specific subject courses like this which are small, easy to learn and are a kind of reference source in the field.\nWe are always available to you for SUPPORT through the Udemy Messaging System if a need arise. Please do not hesitate to approach us with any query on the subject.\nHAPPY LEARNING!!!",
      "target_audience": [
        "Beginner and Advanced level developers who want to get started with SQLite on Android",
        "If you're an absolute noob with no programming experience, skip this one!"
      ]
    },
    {
      "title": "Kotlin Coroutines - Your Course to Become a Master Easily",
      "url": "https://www.udemy.com/course/kotlin-coroutines-your-course-to-become-a-master-easily/",
      "bio": "Learning coroutines and building apps with it. All with Android MVVM Architecture, retrofit, livedata, viewmodel.",
      "objectives": [
        "Fundemantal concepts of Kotlin Coroutines and why they are needed",
        "Jobs, dispatchers, suspend functions",
        "Async / Await",
        "Flows",
        "Flow Operators",
        "StateFlow and MutableStateFlow",
        "Channels",
        "Using Kotlin Result Type with Coroutines",
        "Using Coroutines on Android Projects",
        "Example Android projects with source code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requirements"
        ],
        "Definition of Coroutines and Coroutines Basic Concepts": [
          "What are coroutines and why you should choose it over RxJava",
          "Coroutine Scopes",
          "Jobs",
          "Bonus",
          "Dispatchers",
          "Suspend Functions",
          "Async / Await"
        ],
        "Flows": [
          "Flows Basics and Use Cases",
          "Map Operator",
          "Filter Operator",
          "Buffer"
        ],
        "Channels": [
          "What is a channel and how it works!",
          "Rendezveous(Default) Channels",
          "Buffered Channels",
          "Conflated Channels",
          "Receive Channels and Produce"
        ],
        "Coroutines On Industrial Level with an Example Android Application": [
          "Project Intro",
          "Project Architecture",
          "Start with suspend functions in your model!",
          "The Viewmodel with StateFlow and Kotlin Result Type",
          "One simple correction",
          "The Activity with lifecycleScope and launchWhenStarted",
          "Get the app"
        ],
        "Building An App Using Flows and Coroutines": [
          "Project Intro",
          "Project Architecture and building the repository",
          "Implementing the viewmodel with a use case! And the Flow!",
          "One simple correction",
          "Implementing The Activity and Testing the Application",
          "Get the app and Adios !"
        ]
      },
      "requirements": [
        "Basic Kotlin knowledge"
      ],
      "description": "In this course we are going to start with what coroutines are, will look at all basic concepts like suspend, async / await structure , jobs, dispatchers. Then we are going to continue with advanced topics like flows and channels. Finally we are going to finish the course with building two Android applications matching industrial standards.\nAlso in each lecture, we're going to implement some code on what we have just learned to solidify our knowledge.\nMy aim in this course is to give you a quick start on Kotlin coroutines in the beginning and finish at a master level. I will not only try to explain how these concepts work, i will also make sure that i am explaining when to use each one of these coroutine concepts.\n\n\nAs Kotlin is gaining more and more popularity each passing day and Google also revealed Kotlin as their preferred language, i think that learning Kotlin is now essential especially for Android developers. On the other hand, concurrent programming is being more and more essential as the applications get more complex. Coroutines is the best way to handle Concurrency and knowing how to use it probably will give you a couple steps of advantage. I hope i can help along the way.",
      "target_audience": [
        "This course is for kotlin developers who are seeking to learn coroutines from a beginner level to master level and android developers who want to use coroutines in an Android projects"
      ]
    },
    {
      "title": "Flutter & Dart: A Complete Showcase Mobile App™",
      "url": "https://www.udemy.com/course/flutter-dart-a-complete-showcase-course-for-mobile-development/",
      "bio": "Learng how to build iOS and Android Apps with a complete showcase example based on Dart and Flutter Framework.",
      "objectives": [
        "Master Flutter and Dart.",
        "Build engaging native mobile apps for both Android and iOS based on Flutter and Dart.",
        "Be able to build any iOS and android app you can imagine.",
        "Develop basic flutter applications.",
        "Understand the different approaches for loading and maintaining data in Flutter apps.",
        "Work as an Android and iOS Mobile Developer."
      ],
      "course_content": {
        "General Programming Concepts for Beginners": [
          "Variables",
          "3 Tips to Get Even More Value Out of this Course",
          "Data Types",
          "Variable Operators",
          "If-Statements and Conditional Logic",
          "Loops and Iteration",
          "Arrays",
          "Introduction to 2-Dimensional Arrays",
          "Multidimensional Arrays & Examples",
          "Functions",
          "File Input/ Output",
          "Hyper Coding Practice Test"
        ],
        "Object-oriented Programming": [
          "Introduction to Object-oriented Programming",
          "Objects and Classes",
          "Methods",
          "Encapsulation and Data Hiding",
          "Message Passing",
          "Inheritance",
          "Polymorphism",
          "Generalization and Specification",
          "Links and Associations",
          "Super Coding Practice Test"
        ],
        "Visual Studio Code Editor": [
          "Introduction to Visual Studio Code Editor",
          "Visual Studio Code Editor Installation"
        ],
        "Introduction to Flutter": [
          "Introduction to Flutter"
        ],
        "Installing Google Flutter, Dart & IntelliJ IDEA": [
          "Setting up the SDK & the environments"
        ],
        "Creating our First Mobile App with Google Flutter & Dart": [
          "Creating a new mobile project with Google Flutter & Dart."
        ],
        "Creating Widgets & Widget Trees for the Mobile App": [
          "Creating Widgets and the Widget Tree for the Mobile App",
          "Creating the Widget Tree"
        ],
        "Creating an Entry Point & Conclusions": [
          "Creating an Entry Point & Conclusions"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You will not need any any prior knowledge - so get started now!",
        "No Previous Programming Experience Required - You will learn everything you'll need to get started.",
        "You should be committed to run through the course and become knowledgeable about Computer Programming & Flutter",
        "You should be willing to learn."
      ],
      "description": "Flutter is Google’s mobile app SDK for crafting high-quality native interfaces on iOS and Android in record time. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.\nWhy Flutter?\n1. Fast Development\nHot Reload in milliseconds to paint your app to life. Use a rich set of fully-customizable widgets to build native interfaces in minutes.\n2. Expressive and Flexible UI\nQuickly ship features with a focus on native end-user experiences. Layered architecture allows full customization, which results in incredibly fast rendering and expressive and flexible designs.\n3. Native Performance\nFlutter’s widgets incorporate all critical platform differences such as scrolling, navigation, icons and fonts to provide full native performance on both iOS and Android.\n\n\nUnified app development\n\nFlutter has the tools and libraries to help you easily bring your ideas to life on iOS and Android. If you don't have any mobile development experience, Flutter is an easy and fast way to build beautiful mobile apps. If you are an experienced iOS or Android developer, you can use Flutter for your views and leverage much of your existing Java/Kotlin/ObjC/Swift investment.\nTry Flutter Today. Getting Started is easy with this course.\n\n\nRead what other students are saying about \"Flutter & Dart: A Complete Showcase Mobile App™\" course:\nThis is such a fantastic course, I'm ashamed I didn't write this review earlier. The instructor does a great job of getting you started with Dart and building your first Flutter app. The project is really cool and helped tremendously. I took this course some days ago and it helped me land my first development job! Needless to say I recommend taking this course as a guide to creating modern mobile apps.   (Grungeris, 5 stars)\nGreat teaching style, Dr. Christos knows how to explain complex concepts in a thorough manner and at a perfect place. Really engaging and resourceful complete course to start developing flutter apps.  (Geller, 5 stars)\nClear, concise and straight to the point. The instructor is obviously amazing and really knows the content. He knows the material and knows how to present it.  (Kailic, 5 stars)\nThe course is much better than expected and I wish I had come across it sooner. It is a brilliant entry to the mobile development world and I highly recommend this course to everyone looking to learn mobile development.\nDr. Christos is really GREAT! (Houston, 5 stars)\nVery very very good course! Really enlightening. I am ready to publish many more apps with Flutter, using the simplicity of this framework. (Juiryes, 5 stars)",
      "target_audience": [
        "Anyone interested in learning Flutter mobile development.",
        "Beginner and experienced developers who are interested in learning Flutter.",
        "Developers looking to build quality apps with Flutter."
      ]
    },
    {
      "title": "Practical DevOps Security",
      "url": "https://www.udemy.com/course/practical-devops-security/",
      "bio": "Protect your organisation with the collaboration of DevOps and security",
      "objectives": [
        "Integrating security into the DevOps culture and organization",
        "Integrating Security into Continuous Delivery workflows for continuous security",
        "Leverage Infrastructure as Code techniques for secure configuration management and provisioning",
        "Eliminate manual security practices such as risk assessments and audits by automating all the verification",
        "Build better defense mechanism by the use of Red and Blue teams",
        "Create automatic compliance by using the DevOps Audit Defense Toolkit",
        "Build continuous a feedback loop by automating all security checks throughout the Continuous Delivery pipeline"
      ],
      "course_content": {
        "Integrate Security within DevOps": [
          "The Course Overview",
          "Integrate Security for a DevOps World",
          "Risk Management in a Rapidly Changing World",
          "Key Principles and Benefits of Secure DevOps",
          "Business-Driven Security Strategies",
          "OWASP Security Guidelines"
        ],
        "Applying Shift Left Security Approach": [
          "Integrating Security Into CI/CD Pipeline",
          "Automated Security Testing",
          "Tools of the Trade",
          "Red and Blue Teams"
        ],
        "Securing Development Practices": [
          "Security Requirements",
          "Architectural Considerations",
          "Threat Modeling, Data Flow Diagrams, and Attack Surface",
          "Identity and Access Management",
          "Code Inspection",
          "Environment Hardening"
        ],
        "Security Verification in the Pipeline": [
          "What Is Static Application Security Testing?",
          "Embed SAST into the CI/CD Pipeline",
          "What Is Dynamic Application Security Testing?",
          "Embed DAST Into the Pipeline",
          "Continuous Security - The DevOps Way",
          "Software Composition Analysis"
        ],
        "Deploy Secure Software": [
          "Infrastructure as Code",
          "Key Management and Identity Management",
          "Chaos Monkey and Fuzz Testing"
        ],
        "Security in System Monitoring": [
          "Security Monitoring",
          "Governance, Risk, Compliance and Audit",
          "Incident Response and Forensics"
        ]
      },
      "requirements": [
        "Basic understanding of DevOps, Cloud computing, automation frameworks and programming skills would be necessary"
      ],
      "description": "DevOps enables rapid  application development while security teams follow a traditional way of  performing security checks. If security (that is, configuration checks,  code analysis, vulnerability scanning, and more) is not adequately  automated then it leads to increased security violations and  hacking/phishing attacks. Integrating security in the DevOps ethos helps  fix flaws earlier in the development process. This course shows you how  to apply DevOps security best practices at every stage in your DevOps  pipeline. You will learn proven approaches to reducing vulnerability and  strengthening your defenses against attack. You will understand using  security as code with the intent of making security and compliance  consumable as a service. This course explains how DevOps security  practices differ from traditional security approaches and provides  techniques to embed governance and cybersecurity functions throughout  the DevOps workflow. By the end of the course, you will have learned  best practices in DevSecOps, the core concepts of secure DevOps, and how  security can be integrated into the development pipeline.\nAbout the Author :\nGurpreet Sachdeva is a  Technology Executive with 21+ years' experience working on some of the  most challenging technologies related to Cloud Computing, DevOps, and  Security. Gurpreet did his B. Tech (C.S.) from NIT, Kurukshetra and M.S.  (Software Systems) from BITS, Pilani. He is currently working as  Assistant Vice President—Technology with Aricent, Gurgaon. He is a keen  Java enthusiast and co-founder of Delhi – NCR – Java User Group.  Gurpreet is an invited speaker in prestigious conferences such as Oracle  – Java One, Great India Developer Summit.",
      "target_audience": [
        "This video course is aimed at system administrators, security consultant, DevOps engineers and cloud security strategists who are looking at using the principles of DevOps to secure their software in a continuous and iterative manner."
      ]
    },
    {
      "title": "2023 Flutter Beginners Course(No rubbish)",
      "url": "https://www.udemy.com/course/2022-flutter-beginners-courseno-rubbish/",
      "bio": "Learn everything that you would need to start building amazing apps.",
      "objectives": [
        "Learn Flutter and Dart from the ground up, step-by-step",
        "Understanding basic widgets in Flutter",
        "Learn how to use custom images and install packages",
        "Build two beautiful, fast and native-quality apps with Flutter"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything that will help you get started with building Android and IOS apps"
      ],
      "description": "In this flutter course, I have tried to explain flutter in the easiest language possible. We will be covering a lot of different concepts in this course so that if you wish to become an Android developer or an IOS developer and build android applications and IOS applications , you will able to start without a hassle.\nThis course includes  every thing. From learning some important concepts in dart like data types, classes, objects, single level inheritance, multi-level inheritance to learning how flutter actually works, the basic syntax and exploring widgets like container, text, images, etc.\nLastly, we will also be making two applications which are a Pee simulator which will help you avoid social interactions. Whenever you don't want to talk to someone, you can just go to the washroom and turn on this simulator and it will seem like you are actually peeing. You can also use other apps in background while the sound plays.\nOther app that we will be building is the magic calculator which will help you fool you friends into thinking that you know magic. You will ask your friends for different numbers and the moment you press \"=\", their birth date will appear. How? Well join the course today.\n\n\nAlso you have passed. If you managed to read all of this that I wrote, you are definitely worthy of joining this course right now.",
      "target_audience": [
        "Beginners Flutter course for android and IOS development"
      ]
    },
    {
      "title": "Flutter Ecommerce Course | Advanced Dart & Riverpod & Nodejs",
      "url": "https://www.udemy.com/course/flutter-advanced-course-with-backend-api-with-nodejs/",
      "bio": "Advanced Flutter | Dart | Clean architecture | E-commerce course | Backend | Nodejs | State Management",
      "objectives": [
        "Flutter advanced concepts",
        "Flutter & Dart advanced concepts together",
        "Flutter & Dart clean architecture for big projects",
        "Explain Riverpod 2.0 and use for state management",
        "Riverpod and GoRouter with nested navigation",
        "Flutter correct folder structure app dev",
        "Cool animations with navigation and cart",
        "Flutter with backend technology nodejs",
        "Explain nodejs basics to advance",
        "Building full fledge restful api for e-commerce",
        "Implement cron job for database update",
        "Explain SoC (Separation of concerns) in programming",
        "A lot of other advanced software architecture concepts of programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Course basic introduction": [
          "Who is this course for",
          "What you should know in javascript",
          "What are we building-UI review",
          "What tools are we using",
          "Tool installations",
          "Setting up our mongodb",
          "Server environment setup",
          "Kickstarting our server"
        ],
        "Routing and middlewares": [
          "Storing secrets locally.mp4",
          "Routing",
          "Middlewares",
          "What middlewares are we using",
          "What is mongoose",
          "Connection our server to the database",
          "The express router",
          "The controllers",
          "The auth route"
        ],
        "Models and schemas and auth": [
          "Creating models and schemas",
          "Implementing user registration",
          "Implementing login",
          "How login persistence works",
          "Verifying the persisted token",
          "Handling the forgot password functionality",
          "Verify password reset otp.mp4",
          "Resetting the user_s password.mp4",
          "User authorization",
          "Automatically refreshing token server side",
          "User functionality"
        ],
        "Admin module": [
          "All admin functionalities",
          "All the models we will need",
          "Admin controller implementation 1",
          "Uploading images",
          "Deleting images",
          "Advanced mongodb querying",
          "Admin order conclusion",
          "Admin products controller"
        ],
        "Handling pagination": [
          "Handling pagination"
        ],
        "Cron job": [
          "Cron job"
        ],
        "Categories implementation": [
          "Categories implementation"
        ],
        "Product management": [
          "Product implementation",
          "Review implementation",
          "All user functionalities",
          "Cart reservation expiry handling",
          "Post request authorization"
        ],
        "The checkout management": [
          "The checkout flow",
          "Checkout implementation",
          "Handling post-checkout activities",
          "How to get the metadata from the checkout session",
          "Handling post-checkout activities 2",
          "Getting user order",
          "Get user payment profile endpoint"
        ]
      },
      "requirements": [
        "You must have at least 6 months of Flutter and JavaScript Experience"
      ],
      "description": "Here will focus on mainly how to integrate Riverpod with clean architecture.  We will cover the new features of Riverpod 2.0 and above. You will learn how to build a scalable app with Nodejs api.\nThis would come in 2 parts, to finish these course, you need to buy all three together. This is part 1 of 2.\n\n\nApp features\nOn boarding screen\nBeautiful onboarding screen with sales Moto.\nRegistration screen\nRegistration with email and phone number and secured password.\nLogin feature\nSecured login verified from front end backend with JWT features.\nReset password\nEmail verification on reset password with animation and timer.\nView products\nView products on detail with multiple thumbnails. We have product category of regular products and new arrivals products.\nProduct rating\nCustomers can rate product and view rating of others. Bad rating products are not shown for certain users.\nChoose product size & color\nYou must select your product size and color.\nSearch product based on filter\nYou may also do custom search by filtering features.\nEmail sending on confirmation payment\nOnce you place an order you get cool email to notify that you have placed an order with detail product and order info.\nCart management\nCool cart management features. You may add or remove items. You may also remove multiple items at the same time on long press.\nPlacing order\nPlace order with stripe account and choose multiple items in placement.\nSearch product based on category & subcategory\nClick on a category and see all the related products .\nPayment profile\nShows where your current order status is.\nLight and Dark mode\nThis app comes in two mode. Dart and light mode which you can change easily from the profile section.\nArchitecture\nClean architecture with Riverpod 2.0 state management .\nBackend is MVC pattern.\nPowerful rest api.\nBackend is done with Express framework and mongodb.\nCron job on orders\nThe app system checks for unpaid orders and removes then every 24 hours. This is helpful for database management.\nCourse requirement\nYou must have at least 6 months of flutter programming experience to take this course.\nThrough this course you will master Flutter programming, core Dart features and Javascript Express framework with Mongodb.",
      "target_audience": [
        "Intermediate to advanced learners"
      ]
    },
    {
      "title": "Mobile App Essentials - Plan, Develop and Market Any App",
      "url": "https://www.udemy.com/course/minting-money-with-apps/",
      "bio": "Learn how to develop an App that will generate income, increase leads, and ultimately automate your business.",
      "objectives": [
        "HOW TO MAKE MONEY WITH APPS",
        "HOW TO PROTOTYPE YOUR APP",
        "HOW TO MAKE YOUR APP VIRAL",
        "HOW TO HIRE & MANAGE DEVELOPERS",
        "DETERMINE A MARKET FOR YOUR APP",
        "HOW TO LAUNCH AND MARKET YOUR APP"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "WHY APPS ARE ESSENTIAL TO YOUR BUSINESS": [
          "WHY APPS ARE ESSENTIAL TO YOUR BUSINESS"
        ],
        "HOW TO MAKE MONEY WITH APPS": [
          "HOW TO MAKE MONEY WITH APPS"
        ],
        "REVENUE GENERATING APPS": [
          "REVENUE GENERATING APPS"
        ],
        "MANPOWER REDUCING APPS": [
          "MANPOWER REDUCING APPS"
        ],
        "APPS THAT REDUCING TECHNOLOGY COSTS": [
          "APPS THAT REDUCING TECHNOLOGY COSTS"
        ],
        "HOW TO PROTOTYPE YOUR APP": [
          "HOW TO PROTOTYPE YOUR APP"
        ],
        "HOW TO MAKE YOUR APP VIRAL": [
          "HOW TO MAKE YOUR APP VIRAL"
        ],
        "WHY TO START MARKETING BEFORE DEVELOPMENT": [
          "WHY TO START MARKETING BEFORE DEVELOPMENT"
        ],
        "WHAT TO GIVE DEVELOPERS": [
          "WHAT TO GIVE DEVELOPERS"
        ]
      },
      "requirements": [
        "An idea for a mobile App!"
      ],
      "description": "Mobile App Essentials is a comprehensive video eCourse that takes you through the complete process of app creation, from identifying the kind of app that is best for your business, to marketing the app properly, to collecting positive feedback from users.\n\n\nMobile App Essentials will give you a full understanding of how apps influence the market, and how even the most tech-illiterate among us can take advantage of this technology to keep up with and ultimately surpass competitors. Whether you want an app to help your team become more effective or an app to eliminate the middleman between you and your clients, this course is designed to help you zone-in on your goals and create a tool that will optimize your business.\n\n\nYOU WILL LEARN HOW:\n1. To develop an app that will make you money, increase leads, and ultimately automate your business.\n2. Establish a firm understanding of app costs through analyses created by Jeremy.\n3. Learn how to  prototype your app - The most important element of any app project, period!\n4. Discover how to make your app a viral sensation that consumers will reuse again and again.\n\n\nMobile App Essentials is the first course of its kind. Never before has an expert as thorough and effective as Jeremy Callahan broken down the process of App creation and execution. This course provides all the information you need to know to eventually become an app expert yourself.  Keep your business as convenient as possible for clients and a true competitor in today’s market.\n\n\nMobile App Essentials includes:\n11 Video Modules taught by the master himself, Jeremy Callahan\nThe App Brainstorm Guide: How to Find Ways to Increase Revenue and Reduce Costs\nDesign Guides, Customer Avatars and User Experience flows\nEstimation and App Specifications Worksheets\nPre-Marketing and Marketing Launch Checklists\nApp Store Optimization - what it is and why it is essential\nList of App Review Websites and Contest Sites to Drive Free Traffic",
      "target_audience": [
        "You have an App idea... but you have absolutely no idea where to begin"
      ]
    },
    {
      "title": "Introduction to object-oriented programming with Arduino",
      "url": "https://www.udemy.com/course/introduction-to-object-oriented-programming-with-arduino/",
      "bio": "A hands-on tutorial with lots of small OOP-Arduino/ESP32 projects to participate in.",
      "objectives": [
        "The structure of a class",
        "What data encapsulation is and how we implement this concept",
        "Creation and use of constructors",
        "Overloading constructors and functions (polymorphism)",
        "Inheritance of classes",
        "Use and adaptation of inherited classes",
        "Interaction of headers and CPP files",
        "Control of servo motors, infrared sensors, LEDs.",
        "Use of Visual Studio Code / Platform IO (with Arduino IDE also possible)",
        "Provide of own libraries for external developers",
        "Creation of individual libraries for own use",
        "Best practices in object oriented programming of microcontrollers",
        "Many practical examples which are built up step by step"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to this course",
          "About me",
          "Download code snippets",
          "List of components",
          "Practical experience vs. theory",
          "Prerequisites for this course",
          "Disclaimer"
        ],
        "Basics": [
          "Intro",
          "ESP32 Pinout",
          "VS Code vs Arduino IDE",
          "Open Source Code from VS Code in Arduino IDE",
          "Online Simulator",
          "Enum",
          "Struct"
        ],
        "Short introduction to object-oriented programming": [
          "Intro",
          "Basic setting of an empty project",
          "Structure of a class & data encapsulation",
          "Instance and constructor",
          "Overloading constructor",
          "Exercise example Interaction of header and CPP files",
          "Getter",
          "Setter",
          "Inheritance",
          "Inherited function overloaded",
          "Recap Introduction OOP",
          "Quiz 1"
        ],
        "Individual LED Class": [
          "Wiring and series resistance calculation",
          "Headerfile",
          "Control the LED with an object",
          "Toggle LED",
          "Turn LED off after x seconds",
          "Fading",
          "Pulsate",
          "Instantiate objects in array",
          "LED chasing effect",
          "Quiz 2"
        ],
        "IR sensors using the Galton board as an example": [
          "Project Introduction",
          "Wiring",
          "Create Project and Class",
          "Address IR sensor individually",
          "Objects into an array",
          "Simulate Motor on off",
          "Evaluation of the IR sensors",
          "Craft Project Overview",
          "Recap OOP IRSensors",
          "Quiz 3"
        ],
        "Headlamp - Button short/long click": [
          "Project idea",
          "Wiring",
          "Add Class Button",
          "Debounce button with millis",
          "Detect duration of clicks",
          "Clean Interface",
          "Control LEDs",
          "ButtonHeadlamp inherits from Button",
          "Function Keep button pressed",
          "Add function Fade",
          "Additional task implement LED class",
          "Possible solution",
          "Quiz 4"
        ],
        "Rock Paper Scissors": [
          "Project idea",
          "Wiring",
          "Creating class files",
          "Headerfile",
          "First game mode",
          "Game mode in loop",
          "Create a website",
          "Access website via ESP32 Webserver",
          "Transfer data from website to ESP32",
          "Game mode on two games won",
          "Sending Server Side Events",
          "Prettify events",
          "Implement LED Class",
          "Housing"
        ],
        "Publish your OOP source code as Arduino library": [
          "Create and publish your own library"
        ],
        "Conclusion": [
          "Summary of the Learnings"
        ]
      },
      "requirements": [
        "First experiences in Arduino development (millis, pinMode, data types).",
        "Basics C++ in the Arduino environment",
        "A lot can be simulated with the online simulators, but you will have a greater learning success if you rebuild the practical examples with the hardware components.",
        "Everything about OOP is taught in this course",
        "First experience with the ESP32 is advantageous"
      ],
      "description": "Especially in the development of microcontrollers we often work with libraries, for example to control hardware components. The advantages of flexible and efficient source code design will be introduced to you in this course.\n\n\nAn ESP32 is used in the entire course, but all the examples (except the last one with the Website/Webserver and WIFI), exercises and explanations can be done with any Arduino.\n\n\nOnce you have completed this course, you will be able to…\n...create your own object-oriented programs and libraries\n...program reusable source code\n... create clean source code architecture for flexible programming and adaptation\n... code generalized classes and provide the libraries\n... implement the basic concepts of OOP for your own projects and apply them immediately.\n... save time for cumbersome programming. Because of the given conceptual design, your self-written code is easier to adapt.\n... maintain your own code better even after a longer period of time.\n\n\nWhat we go through in the course:\nBasics of object-oriented programming in the Arduino environment. We will go through the essential contents of OOP step by step. We will get right into practical examples.\nPractical example: Own LED class. Many different functions and interfaces.\nPractical example 2: Galton board with marble elevator and evaluation of 12 IR sensors.\nPractical example 3: Headlamp with only one(!) button, two LEDs and three light modes.\nPractical example: Rock, paper, scissors game. We develop this small game. We compete against the bot and play to win two games. The logic is triggered by a web server on the ESP32 (with server side events).\n\n\nMy approach in the course:\nNone (ok, only very few) slides/Powerpoints. We start in the basics immediately with a practical example. Also the theory can be tested immediately on the Arduino with the Serial Monitor and thus immediately better understood.\nThe practical projects are developed together in step-by-step instructions.\nTogether means in this context that I demonstrate the code, depending on the task, and you can follow me along with the source code.\nAll codes are available for download on the platform, so you can get to the result without frustration.\nNo rambling explanations or theory monologues, we get right to work in the basics chapter.\n\n\nBenefit from my years of experience and get the key skills in microcontroller development.\n\n\nI'm looking forward to see you in class\n\n\nMarkus Edenhauser",
      "target_audience": [
        "Anyone who wants to deepen their knowledge of object-oriented programming (OOP) in the Arduino environment.",
        "Developers who are interested in taking their code to the next level.",
        "All of you who want to understand, apply and write OOP themselves",
        "All of you who want to create their own libraries"
      ]
    },
    {
      "title": "Kotlin Flow",
      "url": "https://www.udemy.com/course/kotlin-flow/",
      "bio": "Kotlin Flow For Android Developer",
      "objectives": [
        "Kotlin Flow"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started With Kotlin Flow",
          "Kotlin Dependencies",
          "Understand Asynchronous Programming",
          "Write Your First Kotlin Flow",
          "Kotlin Flow Collect Multiple Times",
          "Kotlin Flow Builder",
          "Cancel Kotlin Flow",
          "Kotlin Flow Filter Operator",
          "Kotlin Flow Map Operator",
          "Kotlin Flow Transform Operator",
          "Kotlin Flow Take Operator",
          "Kotlin Flow Terminal Operator",
          "Kotlin Flow Completion",
          "Kotlin Flow Change Flow Context",
          "Kotlin Flow Buffer",
          "Kotlin Flow Conflate Operator",
          "Kotlin Flow CollectLatest",
          "Kotlin Flow Zip Operator",
          "Kotlin Flow Combine Operator",
          "Kotin Flow Exception Handling",
          "Kotlin Flow FlatMapConcat",
          "Kotlin Flow FlatMapMerge",
          "Kotlin Flow FlatMapLatest"
        ],
        "Kotlin Flow With Android App": [
          "Starter Project",
          "Base URL",
          "Validate Api Token Using Flow",
          "Assignment 1",
          "Assignment 1 Solution",
          "Kotlin Flow With Room",
          "Kotlin Flow Get Task From Api And Insert To Local DB",
          "Kotlin Flow Insert Task To Api",
          "Assignment 2",
          "Assignment 2 Solution"
        ],
        "Paging 3 With Kotlin Flow": [
          "Project Setup and Dependencies",
          "Implement Network Response and Endpoint",
          "Implement Retrofit",
          "Implement PagingSource",
          "Implement Repository",
          "ViewModel",
          "Implement ViewModel",
          "Create Layout",
          "Implement PagingDataAdapter",
          "Imlement RecyclerView",
          "Implement addLoadStateListener",
          "PagingConfig Best Practice"
        ]
      },
      "requirements": [
        "Student must have basic understanding of Kotlin Coroutines"
      ],
      "description": "In this course we will learn from basic to advance concept of Kotlin Flow. If you are already familiar with Kotlin and Coroutines  this is a great time get you hands dirty with Kotlin Flow.\nOne can compare Kotlin Coroutines and Flow with RxJava. Most of the Android Architecture Components have been written in Kotlin Coroutines and Flow so its a great time to learn about Kotlin Flow.",
      "target_audience": [
        "Android Developer"
      ]
    },
    {
      "title": "iOS app development for absolute beginners!",
      "url": "https://www.udemy.com/course/for-kids-creating-iphone-apps/",
      "bio": "iOS app development made easy! Navigate Xcode, swift, gain confidence in mobile development!",
      "objectives": [
        "Feel comfortable getting around XCode, apple's software we'll use to create iPhone apps!",
        "Understand the basic building blocks of an iPhone app",
        "Learn what an if-else statement is",
        "Build your very first iPhone app"
      ],
      "course_content": {
        "XCode, your main tool for developing iPhone Applications": [
          "Welcome & Introduction & Download XCode"
        ],
        "Getting to know Xcode": [
          "A Quick XCode Tour - Your Workspace!",
          "Shake it to the Left",
          "Shake it in the Middle",
          "Shake it to the Right"
        ],
        "What is UI? User Interface": [
          "The \"View\".",
          "Where do I keep stuff? \"Vars\" & \"Lets\"",
          "United @State of App-erica",
          "Functions & Parameters",
          "Applying the use of functions within our SwiftUI View"
        ],
        "Hello Bananas!": [
          "Creating our Hello Banana User Interface",
          "Hooking everything up together! Making our Banana Hello!"
        ]
      },
      "requirements": [
        "You'll need a Mac computer :) No software needed! We'll cover downloading everything we need!"
      ],
      "description": "Learn how simple it is to build an iPhone application!  You'll take your first steps in getting familiar with the basic building blocks for making an iPhone app, and you'll see just how easy it is to do it! Even without knowing how to code!\nTest the waters and your own abilities to create iPhone apps through following this beginner introduction to creating  your very first iPhone App.\n\n\nDownload & Install XCode\nTour XCode\nUI (User Inteface) Elements - Putting Buttons, Labels & More on the screen.\nConnecting Actions to Buttons and make things happen on the screen\nGetting familiar with If-else (Also known as conditional) statements\nBuilding your FIRST iPhone App!\n\n\nA Powerful tool to help you create ANYTHING! (Well ... almost anything ;)\nXCode is the tool we'll use to work with when creating iPhone Apps, but the even MORE important tool is YOU and your creative powers!\n\n\nContent and Overview\nYou've always wanted to learn how to create an iPhone app, but didn't know where to start? There is SO much information out there, but sometimes we just want to get the very basics, to dip our feet in the water, and feel things out.\nSo Let's dive in and start getting our hands dirty!\nMainly suitable complete beginners looking to learn how to develop their first iPhone App, through the course of these lectures you'll learn how to download and use Xcode, the basic tool for creating iPhone applications, as well as learning some of the fundamental building blocks that you'll use to build apps.\nBeginning with the download and installation of XCode, the course will take you through a basic tour of it's different areas, and what you can do with it.  You'll learn how to add labels and buttons to your screen, and explore other types of UI (User Interface) elements that you can work with and customize.  You'll see how you can add \"Actions\" to buttons, and start seeing how easy it is to  \"make things happen\" and make your app \"do stuff\".  At the end of the course, we'll also begin touching a bit on simple coding concepts.\nThe course will take about 1-2 hours to complete, and at the end of the course I'll take you through building your very first GoBananas app, and you will get a feel for yourself of how simple it is to create your own amazing apps! You'll be able to work alongside with the tutorials. You'll begin to feel comfortable getting your way around XCode and have the confidence you need in order to break through to your next level of creating even more complex and advanced apps.\n\n\nWhat am I going to get from this course?\nLearn to make a simple iPhone app in less than 2 hours!\nSuitable for beginner programmers.\nFocused on learning things one step at a time.",
      "target_audience": [
        "This making iPhone apps course is meant for very very very beginners who have no experience programming, and want to get started with the basics!",
        "Mainly Suitable for Kids aged 7 through 11 years old.",
        "This course if probably not for you if you're looking to learn more advanced and complex iPhone app programming"
      ]
    },
    {
      "title": "Swift 5 for Absolute Beginners",
      "url": "https://www.udemy.com/course/swift-5-for-absolute-beginners/",
      "bio": "Learn to Code with Swift Programming Language using Apple's Xcode 13 & Get Ready for Building iOS 16 Apps in 2022",
      "objectives": [
        "Swift 5 Fundamentals",
        "Basics of programming",
        "How to install Xcode",
        "How to write Swift code in Playgrounds"
      ],
      "course_content": {
        "Getting started": [
          "Introduction",
          "Swift Programming Language",
          "Installing Xcode",
          "Xcode Playground",
          "Hello, Swift!",
          "Syntax Errors in Swift",
          "Syntax Errors"
        ],
        "Variables and Constants": [
          "Playground as a Calculator",
          "Variables",
          "Exercise: Variable assignment",
          "Solution: Variable assignment",
          "Types of Data",
          "Operations between different Types",
          "Type Inference",
          "Type Inference",
          "Explicit Type Annotations",
          "Exercise: Type annotations",
          "Solution: Type annotations",
          "Changing a Variable's Value",
          "Changing a Variable's Value",
          "Constants",
          "Variables & Constants",
          "Naming Variables & Constants",
          "Naming Variables & Constants"
        ],
        "Data Types in Swift": [
          "What is Data Type?",
          "Numeric Types",
          "Strings",
          "Booleans",
          "Data Types",
          "Comments",
          "Comments"
        ],
        "Operators": [
          "Introduction to Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Comparison Operators",
          "Logical Operators",
          "Logical Operators"
        ],
        "Working with Strings": [
          "Special characters in strings",
          "Special characters in strings",
          "Multiline strings",
          "Multiline strings",
          "String concatenation",
          "String concatenation",
          "String interpolation",
          "String interpolation"
        ],
        "Making Decisions": [
          "The if statement",
          "The if statement",
          "The else clause",
          "The else clause",
          "The else if statement",
          "The else if statement",
          "Conditions using logical operators"
        ],
        "Repeating Tasks": [
          "The while loop",
          "The while loop",
          "Exercise: The while loop",
          "Solution: The while loop",
          "Breaking out of a loop",
          "The continue statement"
        ],
        "Functions": [
          "What is a function?",
          "Writing your own function",
          "Function parameters",
          "Function parameters",
          "Function with multiple parameters",
          "Exercise: Define your own functions",
          "Solution: Define your own functions",
          "Return values of a function"
        ],
        "Optionals": [
          "What are optionals?",
          "The optional type",
          "Optionals",
          "Unwrapping optionals",
          "Optional binding"
        ],
        "Collections": [
          "What is an array?",
          "Accessing array elements",
          "Modifying arrays",
          "Iterating through an array",
          "Dictionaries",
          "Dictionaries"
        ]
      },
      "requirements": [
        "Mac",
        "You don't need to have any programming background."
      ],
      "description": "This course will teach you how to write code in Swift programming language.\nYou don’t need to have any prior programming experience. We will start from the very beginning and teach you the basic concepts of programming.\nThis course has lots of code examples.\nThere are quizzes associated with the lessons. By taking the quizzes, you will have a clear conception about the lessons.\nProgramming is a never-ending skill that you need to develop. You can learn programming at any age. You just need to focus on learning and then keep practicing what you learn. Your age or existing skill level doesn’t matter. With practice, you can be a good programmer.\nThis course is for complete beginners to programming. We will start by guiding you through the steps necessary to write your first line of Swift code. To write Swift code, we need Xcode. So we will show you how to install Xcode. Then you will be introduced to concepts like variables, constants, data types, operators, conditionals, loops, functions, arrays, dictionaries, optionals, structs and more. All the code in the course works inside of Xcode’s easy-to-use playgrounds.\nSwift was developed by Apple and was first introduced at Apple's 2014 Worldwide Developers Conference. Swift is primarily used for building apps on Apple platforms. It’s the native language to build apps for iPhone, iPad, Mac, Apple TV and Apple Watch. Swift version 2.2 was made open-source in December 2015.\nIf you want to build native apps for Apple platforms, then Swift is the language you would use. Swift is also being used for building server side applications. Swift is easy to learn and friendly to new programmers. It’s a safe, fast, and interactive programming language.",
      "target_audience": [
        "Someone who wants to learn Swift programming.",
        "Anyone who is completely new to programming."
      ]
    },
    {
      "title": "Develop Telegram Bots with PHP and MadelineProto",
      "url": "https://www.udemy.com/course/develop-telegram-bots-with-php-and-madelineproto/",
      "bio": "Learn bot development with PHP with a focus on the MadelineProto library",
      "objectives": [
        "Telegram Bot development with PHP",
        "Working with the MadelineProto PHP library",
        "Telegram development"
      ],
      "course_content": {
        "Introduction to Telegram": [
          "Introduction",
          "Telegram Concepts and Terminology",
          "Cloud-based",
          "MadelineProto"
        ],
        "BotFather": [
          "Register a New Bot with BotFather",
          "More BotFather Commands",
          "BotFather"
        ],
        "Working with Bot API": [
          "Calling Bot API with RESTer",
          "Make Requests to Bot API in PHP Code"
        ],
        "Telegram Updates": [
          "What Are Telegram Updates?",
          "Handling Updates with getUpdates (Long Polling)",
          "Using Webhook to Handle Updates"
        ],
        "Getting Started with MadelineProto": [
          "Introduction to MadelineProto",
          "Install Required PHP Extensions",
          "Register Your App on Telegram",
          "Create A MadelineProto Project with the Phar Archive",
          "Create A MadelineProto Project with Composer"
        ],
        "Handling Bot Updates with MadelineProto": [
          "Handling Updates in MadelineProto",
          "Update Handling with an Async Event Handler Class"
        ],
        "Using a Database with MadelineProto": [
          "Choosing A Database System for Our Bot",
          "Use MySQL Database with MadelineProto"
        ],
        "Working With Keyboard Markups": [
          "Introduction to Reply Keyboard Markups",
          "Create A Simple Keyboard Markup with Bot API",
          "Send ReplyMarkup with MadelineProto",
          "Send Inline ReplyMarkup with MadelineProto"
        ],
        "Chats": [
          "Send Messages to Different Types of Peers",
          "Implement User Sessions (Step-By-Step Operations)"
        ],
        "Files And Media": [
          "Introduction to Files in MadelineProto",
          "Sending Photos",
          "Sending Audio (Voice and Music)",
          "Sending Videos",
          "Send Any File with MadelineProto",
          "Use Bot API File ID to Send Media"
        ]
      },
      "requirements": [
        "Basic familiarity with PHP programming (including object-oriented PHP)"
      ],
      "description": "Telegram bots are special accounts on the Telegram platform that you control via the code that you write and run somewhere on your server. Bots can be fun, useful, and a source of income! If you want to get started creating powerful Telegram bots with lots of features in a short time, you should take this course.\nI will teach you step by step how to create bots for Telegrams, explaining basic concepts and building upon the basic concepts to help you become a bot developer in no time.\n\n\nPHP is a very popular language that many developers, from beginner to advanced, use in their daily development. The present course teaches you how to use the PHP programming language in combination with MadelineProto, a popular open source library for Telegram, to create robust Telegram bots and applications. MadelineProto has implemented all the functionalities of a complete Telegram app, so it is suitable for creating great bots.  It is also endorsed by Telegram on its app page.\n\n\nWhat this course will cover:\n- What is Telegram\n- What is a Telegram Bot\n- How to create a Bot using Bot Father\n- How create a bot project in PHP\n- How to handle updates in MadelineProto\n- How to deploy a bot to production (running the bots on production servers)\n- And more\n\n\nIf you are curious to see how you can create Telegram bots using PHP and MadelineProto, here's your chance to this goal. Get the course now and let's create some bots!",
      "target_audience": [
        "Anyone interested in learning how to create bots for Telegram with PHP"
      ]
    },
    {
      "title": "Build Beautiful Onboarding Screens With Lottie animations",
      "url": "https://www.udemy.com/course/ios-swift-5-build-beautiful-onboarding-screens/",
      "bio": "Develop stunning first impressions that capture your users' attention. Includes Combine framework & Lottie animations",
      "objectives": [
        "Build beautiful onboarding screens",
        "Integrate Lottie (AirBNB) animations",
        "Managing app states using Combine framework",
        "Work with UIView animations & transitions",
        "Cross fade between two images by adjust their alpha values via an algorithm",
        "Implement protocols and delegates to communicate between child and parent objects",
        "Use AVPlayer and AVPlayerLayer to create a video background",
        "Code views programatically"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Credits"
        ],
        "Project 1 - Travel App": [
          "Project intro",
          "Project files",
          "Setting up the UI",
          "Setting up models and touch gestures",
          "Handle labels animations",
          "Transit to main app at last index",
          "Add background images",
          "General Refactor"
        ],
        "Project 2 - Fashion App": [
          "Project intro",
          "Project file",
          "Setting up the UI",
          "Setting up container views and onboarding items",
          "Scrolling collection view programatically",
          "Handle background image and transition",
          "Show explore button on last item",
          "Transit to main app on Explore button tap",
          "Remove XCode warning and horizontal scroll indicator",
          "General Refactor"
        ],
        "Project 3 - Holiday App": [
          "Project intro",
          "Project file",
          "Setting up the UI",
          "Handle Get Started button event",
          "Add background video",
          "Handle app states",
          "General refactor and closing"
        ],
        "Bonus": [
          "Other courses by the instructor"
        ],
        "Project 4 - Restaurant App (BONUS CONTENT)": [
          "Project Intro",
          "Project File",
          "Setup UI",
          "Setup Collection View Cell",
          "Add Onboarding Collection View Cell",
          "Setup Lottie Animation",
          "Handle Action Button",
          "Add Page Control",
          "Add Final Touches"
        ],
        "Bonus Content": [
          "Student Question: Make onboarding screen appear only once",
          "Student Question: Basic Git"
        ]
      },
      "requirements": [
        "Basic competency with Swift",
        "You have worked with iOS for at least 6 to 9 months"
      ],
      "description": "Welcome to the Build Beautiful Onboarding Screens With Lottie animations course.\nThis course is designed for iOS developers (6-9 months of experience) who want to build beautiful onboarding screens that can immediately capture your users' attention when they open your app for the first time. This course aims to provide you with the thought process and the techniques required to build a professional looking onboarding view that is both dynamic and easy to customise.\nIn this course, we will build 4 unique projects of various styles.\nIn project 1 - the Travel App, we will learn to use UIView animation, UIView transitions and UITapGestureRecognizer to build out the animations.\nIn project 2 - the Fashion App, we will learn to code some views programatically, how to cross fade between two images, and how to communicate between child and parent objects via protocol and delegates.\nIn project 3 - the Holiday App, we will learn about AVFoundation via implementing the AVPlayer and the AVPlayerLayer. We will also use the Combine framework to manage the app states.\nIn project 4 - the Restaurant App (bonus), we will learn how to integrate Lottie animation into our screens.\n\n\nMore projects will be added to this course in 2022 and 2023.",
      "target_audience": [
        "New iOS developers who want to build their own apps",
        "Students who have at least basic competency with Swift and at least 6 to 9 months experience working with iOS"
      ]
    },
    {
      "title": "Create A Cryptocurrency Portfolio Mobile App With Python",
      "url": "https://www.udemy.com/course/kivy-crypto-portfolio-app/",
      "bio": "Learn advanced kivy skills as you create your own real-world cryptocurrency portfolio management app for Android and iOS",
      "objectives": [
        "Use Kivy To Build Python Mobile Apps",
        "Interact With Realtime Web Apis In Kivy Apps",
        "Connect Real Crypto Accounts To A Mobile App",
        "Trade On Different Exchanges Within A Single Kivy App",
        "Understand App And User Flows",
        "Secure Kivy Apps And Only Allow Authenticated Users",
        "Create Custom Modern Kivy Widgets To Keep Up With Design Trends",
        "Kivy Best Practices",
        "Kivy Project Layout Best Practices"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Environment Setup"
        ],
        "App UI Views": [
          "Signup View",
          "Login View",
          "Home/Main Screen Layout - First Look",
          "Overview Tab UI - Layout Setup",
          "Overview Tab UI - Watchlist UI Layout",
          "Overview Tab UI - Watchlist Widget",
          "Overview Tab UI - Owned Asset Widget",
          "Coins List Tab UI",
          "Coins List Tab UI: Real Graph Data",
          "View Asset: UI Layout",
          "View Asset: Graph Widget 01",
          "View Asset: Fixing The Graph",
          "View Asset: Different Graph Time Ranges",
          "View Asset: Coin Statistics",
          "Exchanges UI: Layout",
          "Exchanges UI: Add Exchange Popup"
        ],
        "Backend: Connecting UI": [
          "Connect To Exchanges: Kraken",
          "Connect To Exchanges: OkCoin",
          "Connecting Overview Screen With Real Data",
          "Place An Order: View",
          "Place A Real Order to OkCoin Exchange",
          "Add Coins To Watchlist",
          "Putting Everything Together"
        ],
        "App Packaging": [
          "Preparing Your App For Packaging For Different Platforms",
          "Packaging For Android",
          "App Bug Fixing"
        ]
      },
      "requirements": [
        "Beginner Python Knowledge",
        "A Working Computer With Good Internet",
        "Python and Kivy Already Installed"
      ],
      "description": "In this course I will cover a lot of aspects of better programming for mobile in python using the kivy framework. You will earn everything including how to better:\n\nStructure your app for ease of maintainance and readability\nAuthenticate your users and secure passwords in a Kivy app\nInteract with real-world apis and make sure your app can handle them\nCreate modern custom widgets to interface with web apis\nAnd so much more\nThe goal of the course is not to teach you the basics of kivy, I have another course for that. The goal here is to show you what more you can achieve with python and kivy and extend your knowledge to create any app your mind can conjure.\nI will teach you how to approach design problems from a kivy developer's perspective to make sure you are able to implement whatever is thrown at you.\nWe will also learn how to seemlessly build for both iOS and Android. Something which has been quite difficult for most people in the kivy space. I will show you a trick you can use to build production versions of your apps without installing a single file on your computer. This allows you to build kivy apps on an operating system like windows for example, which is not supported by default",
      "target_audience": [
        "Beginner and Intermediate Python and/or Kivy Developers Interested In More Advanced Kivy Usecases"
      ]
    },
    {
      "title": "SwiftUI & iOS 16 App Development - Instagram & TikTok",
      "url": "https://www.udemy.com/course/swiftui-ios-14-app-development/",
      "bio": "From Beginner to iOS App Developer through project-based learning - Firebase, MVVM, AVFoundation, APIs, Authentication",
      "objectives": [
        "Develop iOS 15 iPhone and iPad apps with industry-standard practices",
        "Learn Swift 5.4 programming language - Essential iOS Development Skill",
        "Learn how to develop Instagram and TikTok",
        "Create Full-stack apps with Firebase Firestore and Storage",
        "Learn how to fetch data from Web APIs in JSON using Alamofire",
        "Create custom user interfaces with SwiftUI 2 framework",
        "Master Apple's latest UI Framework - SwiftUI App Development",
        "Start your own app based business",
        "Highest standards of app development - MVVM Architecture",
        "Learn how to implement Swift Package manager in your work",
        "Learn how to integrate various iOS 15 frameworks such as AVFoundation",
        "Create a portfolio of apps to apply for junior developer jobs at a technology company"
      ],
      "course_content": {
        "Your First SwiftUI App": [
          "Hello, SwiftUI"
        ],
        "SwiftUI Basics with Car Dealer App": [
          "Creating CarRow",
          "Using Stacks",
          "Passing Data into CarRow",
          "Car Object",
          "Creating CarList"
        ],
        "How to Handle Data with SwiftUI": [
          "@State",
          "ObservedObject vs. EnvironmentObjects vs. StateObjects",
          "@Binding and NavigationLinks",
          "Identifiable and Decodable Protocols"
        ],
        "Real Projects: Food Ordering App": [
          "Food Ordering App",
          "Setting Up the Project",
          "Creating FoodItem",
          "Creating the Data Service",
          "Creating FoodRow with ScrollView",
          "FoodList",
          "Creating FoodDetail",
          "Creating Order Button",
          "Displaying FoodDetail with NavigationLink"
        ],
        "Tic Tac Toe": [
          "Tic Tac Toe - Intro",
          "Tic Tac Toe #1 - User Interface",
          "Tic Tac Toe #2 - Game Play",
          "Tic Tac Toe #3 - Game Logic",
          "Tic Tac Toe #4 - Game Over"
        ],
        "How to Make TikTok": [
          "TikTok Intro",
          "TikTok - Menus and Main User Interface",
          "TikTok - Video Model",
          "TikTok - Playing the Videos with AVPlayer",
          "TikTok - PlayerScrollView with UIScrollView",
          "TikTok - Class Coordinator",
          "TikTok - Playing the Current Video",
          "TikTok - Replay Button and Finishing Touches"
        ],
        "Crypto Currency Exchange App - JSON and API": [
          "CryptoPrices #1 - CoinMarketCap API",
          "CryptoPrices #2 - What is an API",
          "CryptoPrices #3 - Alamofire and HTTP Request",
          "CryptoPrices #4 - Coin Model",
          "CryptoPrices #5 - Populating the Model",
          "CryptoPrices #6 - User Interface and Git"
        ],
        "Instagram Clone": [
          "Instagram - Intro",
          "Instagram #1 - File Structure and Libraries",
          "Instagram #2 - TabView",
          "Instagram #3 - FeedCell",
          "Instagram #4 - FeedView",
          "Instagram #5 - PostGridView",
          "Instagram #6 - SearchBar",
          "Instagram #7 - SearchView",
          "Instagram #8 - NotificationsView",
          "Instagram #9 - ImagePicker",
          "Instagram #10 - UploadPost",
          "Instagram #11 - TextArea",
          "Instagram #12 - ProfileHeaderView",
          "Instagram #13 - CustomTextField",
          "Instagram #14 - RegisterView",
          "Instagram #15 - SignInView",
          "Instagram #16 - ForgotPassword",
          "Instagram #17 - Firebase Integration",
          "Instagram #18 - AuthViewModel Register",
          "Instagram #19 - Usage of a Static Instance & Register Done",
          "Instagram #20 - AuthViewModel Login",
          "Instagram #21 - MainView & TabView",
          "Instagram #22 - User Model",
          "Instagram #23 - LogOut",
          "Instagram #24 - FetchUser",
          "Instagram #25 - ProfileHeaderView Image",
          "Instagram #26 - Profile Image Upload to Storage",
          "Instagram #27 - Profile Image Firestore Reference",
          "Instagram #28 - Profile Image Bug Fix",
          "Instagram #29 - ProfileEditButton",
          "Instagram #30 - UploadPostViewModel",
          "Instagram #31 - ImageUploader",
          "Instagram #32 - ImageUploader Types",
          "Instagram #33 - FeedView",
          "Instagram #34 - SearchView User List & Filter",
          "Instagram #35 - GridViewModel",
          "Instagram #36 - GridViewModel Configuration",
          "Instagram #37 - ProfileNavigation",
          "Instagram #38 - LikeButton",
          "Instagram #39 - CheckLike",
          "Instagram #40 - Timestamp",
          "Instagram #41 - ProfileImage Bug Fix",
          "Instagram #42 - Follow Function",
          "Instagram #43 - Follow and Unfollow",
          "Instagram #44 - Follow and Unfollow User Interface",
          "Instagram #45 - CheckFollow",
          "Instagram #46 - UserStats",
          "Instagram #47 - SendNotifications",
          "Instagram #48 - FetchNotifications",
          "Instagram #49 - NotificationCell",
          "Instagram #50 - FeedCellViewModel",
          "Instagram #51 - FetchNotificationUser",
          "Instagram #52- FollowBack Notifications",
          "Instagram #53 - NotificationsFetchPost",
          "Instagram #54 - FeedCell Bug Fixes",
          "Instagram #55 - CommentCellView",
          "Instagram #56 - CommentInputView",
          "Instagram #57 - Uploading Comments",
          "Instagram #58 - FetchComments",
          "Instagram #59 - LazyView",
          "Instagram #60 - MessageInputView",
          "Instagram #61 - MessageViewModel",
          "Instagram #62 - FetchMessages",
          "Instagram #63 - MessageBubbleShape",
          "Instagram #64 - MessageRowView",
          "Instagram #65 - MessageScrolltoBottom",
          "Instagram #66 - EditProfileView and Bio"
        ],
        "BONUS - Swift 5 Basics": [
          "The Basics",
          "Bools and If Else",
          "Optionals",
          "Basic Operators",
          "Strings, Arrays, and for in Loops",
          "Dictionaries",
          "Switch and Functions",
          "Further Functions"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "A Mac or an online IDE to write Swift code"
      ],
      "description": "Welcome to the SwiftUI & iOS 16 App Development Course: Build Instagram & TikTok!\nAre you brimming with app ideas but unsure of how to bring them to life? Look no further! As SwiftUI simplifies iOS app development, your journey to creating a million-dollar app just got easier. This course is designed to equip you with the industry-standard techniques needed to transform your creative ideas into fully functional iOS apps.\nWe believe in the power of project-based learning as it's the most efficient way to grasp programming concepts. This approach immerses you in the world of app development, building your confidence along the way. Throughout this course, each project unlocks crucial technical knowledge, such as:\n\n\nCar Dealer: Master SwiftUI Images, Shapes, Buttons, Stacks, Classes, and Structs.\nFood Ordering App: Custom ScrollView, ForEach, Opacity, NavigationView.\nTic Tac Toe: Dive into Game Logic, Loops, Functions, Alerts, 3D, and 2D Animations.\nTikTok: Explore Video with AVFoundation & AVKit, UIKit Integration.\nCryptoPrices: Understand API Calls, Alamofire, JSON Decoding, and Assets.\nInstagram: Uncover the secrets of MVVM, Firebase, Authentication, Real-time Chat, and Firestore.\nEmbrace the future of iOS Development with SwiftUI!\nThe trend for iOS developers is ever-growing, making this the perfect time to kick-start your career. SwiftUI is still fresh and the potential yet to be explored is staggering. A properly structured project can set your app apart in this rapidly evolving landscape.\nCompleting this course will leave you fluently programming in Swift 5.4, ready to create your own apps or start a freelance iOS developer career. Here's what you can look forward to:\n17+ hours of engaging video content, providing you with everything you need to succeed as an iOS developer.\nSource code for industry-standard apps like Instagram and TikTok.\nThe knowledge to build any app you envision.\nLifetime access to the Q&A section for mentorship and support.\nLet's move beyond superficial knowledge and boilerplate code!\nIn this dynamic SwiftUI & iOS App Development 2023 course, you'll gain deep insights into app development aspects, such as code optimization for faster runtime, implementing the MVVM architecture, and crafting agile, eye-catching User Interfaces.\nWith every 0.5 seconds of delay potentially costing thousands of customers, it's paramount to have an optimized app. In this course, you'll learn how to avoid such pitfalls and instead create an app that stands out from the competition, grabbing the attention of users.\nBy the end of this course, you'll master:\nObject-Oriented Programming (OOP): Understanding the type system, variables, functions, methods, inheritance, structures, classes, and protocols.\nControl Structures: Using If/­Else clauses, Switch statements, and logic to control the flow of execution.\nData Structures: Working with collections, such as arrays and dictionaries.\nSoftware Design: Organizing and formatting code for readability and implementing the Model - ­View­ - View Model (MVVM) design architecture.\nNetworking: Making asynchronous API calls, storing and retrieving data from the cloud, and using JSON for server communication via Alamofire.\nEnroll today to embark on your journey to becoming a professional iOS app developer! Stand out in the crowd with your comprehensive understanding of SwiftUI and iOS App Development. Let's transform your app ideas into reality.",
      "target_audience": [
        "If you are an absolute beginner to coding and want to develop your apps, then take this course.",
        "If you are a programmer, then take this course to to get up to speed quickly with SwiftUI 2.0 and native app development for iOS.",
        "If you are switching from Objective-C to Swift then this is the best way of doing it as we will cover Swift programming language."
      ]
    },
    {
      "title": "Ionic Framework: JumpStart",
      "url": "https://www.udemy.com/course/ionic-framework-jumpstart/",
      "bio": "Create a Real-time Chat Application for Android and iOS using HTML, CSS and JS and the server backend as well, on Cloud.",
      "objectives": [
        "Create and deploy real-time mobile applications using HTML, CSS and JS.",
        "Write Basic Server Code using Node.js.",
        "Deploy code on Windows Azure Cloud.",
        "Use ngCordova and Ionic Services",
        "Use Socket.io for real-time communication.",
        "Learn about Facebook Login in Ionic Apps",
        "Debug your Web Apps using Chrome Developer Tools"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Prerequisites",
          "Course Contents",
          "Basic Tools and Services",
          "Course and Project Source Information"
        ],
        "Getting Started": [
          "Setting up Ionic Project",
          "States and Navigation",
          "Creating the Login page",
          "Creating the Chat page",
          "States and State Parameters"
        ],
        "Getting started with the Server": [
          "C9 and NodeJs",
          "Writing the Basic Server Code"
        ],
        "Getting Started with Socket.io": [
          "Basic of Socket.io",
          "Configuring Ionic to use Socket.io",
          "Making First Communication over Socket.io",
          "Sending and Receiving Messages",
          "socket.emit() versus io.emit()",
          "Sending simple log messages",
          "Sending First Chat Message"
        ],
        "Improving UI and UX": [
          "Conditional Styling with Socket.Id",
          "Styling Log Messages",
          "Fixing Log Messages and Chat Bubbles",
          "Sending Messages on Enter Key Press"
        ],
        "Adding the fun stuff": [
          "Playing with Colors",
          "Auto scroll the ion-content",
          "Adding Support for Emoticons :)",
          "Adding Sounds",
          "Testing Sounds on Emulator",
          "\"User is Typing...\" Message",
          "Customizations using CSS"
        ],
        "Login with Facebook": [
          "Adding a Login with Facebook button",
          "Creating a Facebook App",
          "Facebook Graph API and Access Token",
          "Getting User Data using the Access Token",
          "Passing Data to Chat Controller and Displaying"
        ],
        "Finalizing the Application": [
          "Ionic Resources: Icon and Splash Screen"
        ],
        "Deploying to Azure Cloud Platform": [
          "Deploying to Azure Cloud Platform from C9"
        ],
        "Deployment to OpenShift": [
          "Deployment to OpenShift"
        ]
      },
      "requirements": [
        "Basics of Ionic Framework, AngularJS, HTML, CSS and JS.",
        "A Text Editor, like Sublime Text",
        "An internet connection."
      ],
      "description": "Ionic Framework: Jumpstart is an intermediate level course for students, web developers, professionals who have basic to moderate skills in web technologies like HTML, CSS and Javascript and want to create applications for mobile platforms such as Android and iOS. Ionic Framework is easy and always evolving. It is a young technology and growing every moment. In this course, you will learn to create a mobile app that will allow users to chat with each other in real-time.\nTo create such an app, all you need is to have basic skills in HTML, CSS and AngularJS. You do not need to learn JAVA or Objective C or Swift. you can create a fully functional, advanced and beautiful Chat Application using just the Web Skills.\nThis course will also introduce you to the Facebook Graph API and you will learn how to use Facebook login in your Ionic and Cordova Apps.\nLater in the course we will learn to deploy our server code, which we will write on Cloud9, as cloud based IDE, on Windows Azure Cloud Platform.\nThe course contains video content of around 3 hours and 30 minutes. And during this time, you will learn Ionic and a lot of AngularJS. You will learn how to use Angular services and controllers to implement logic in the app. You will also learn how to create multi-page applications in Ionic and navigate between those pages.\nAnd the best part, your app will work on both Android and iOS devices.",
      "target_audience": [
        "Students who wish to develop apps for Android and iOS.",
        "Web Developers and Designers who are proficient in web technologies.",
        "Professionals who wish to expand their portfolio but can't learn JAVA or Swift."
      ]
    },
    {
      "title": "Flutter & Firebase Chess: From Basics to Multiplayer",
      "url": "https://www.udemy.com/course/flutter-firebase-chess-from-basics-to-multiplayer/",
      "bio": "Master Chess App Development: From Basics to Multiplayer with Flutter and Firebase",
      "objectives": [
        "Build a Functional Chess App: Develop a complete chess app using Flutter and Firebase, from setup to advanced features.",
        "Excel in Flutter UI and Firebase Integration: Master Flutter's UI and seamlessly integrate Firebase for real-time updates and authentication.",
        "Implement Confident Multiplayer Functionality: Acquire skills to confidently implement multiplayer features for online chess play.",
        "Create a Robust Firebase Backend: Effectively use Firebase Firestore for secure user authentication, data storage, and real-time synchronization.",
        "Stockfish engine integration: Integrate the Stockfish engine in a flutter application."
      ],
      "course_content": {},
      "requirements": [
        "Just some basic programming experience needed, you will learn almost everything you need to know.",
        "You need Android Studio or VS code or any other preferred IDE",
        "Flutter 3.7 or latest version"
      ],
      "description": "Unlock the world of mobile application development with my comprehensive course, \"Mastering Chess App Development with Flutter and Firebase.\" Designed for aspiring developers and Flutter enthusiasts, this course takes you on a journey from project setup to building a feature-rich chess application with real-time multiplayer functionality.\n\n\nWhat You'll Learn:\n\n\nSection 1: Introduction to Flutter Firebase Chess App Development\n\n\nGain a deep understanding of the course scope and objectives.\nFamiliarize yourself with the essential tools and technologies used in Flutter Firebase Chess App development.\nSection 2: Project Setup and Basics\n\n\nLearn to set up a Flutter Firebase Chess project from scratch.\nInstall necessary packages and understand the fundamental structure of a chessboard.\nSection 3: User Interface Design\n\n\nCraft visually appealing user interfaces for various screens within the chess app.\nDesign the game screen, home screen, and settings screen with proficiency.\nSection 4: State Management with Provider Package\n\n\nExplore advanced state management techniques using the Provider package.\nImplement player color and game difficulty settings, optimizing state management for a smooth user experience.\nSection 5: Game Settings and Levels\n\n\nDive deep into configuring game settings and explore different game levels.\nMaster timer methods to control game dynamics effectively.\nSection 6: Game Logic and Functionality\n\n\nImplement crucial game logic, including game-over scenarios.\nIntegrate the Stockfish engine for chess computations and handle dialogs for a seamless user experience.\nSection 7: User Authentication and Login\n\n\nBuild a robust user authentication system.\nDesign and implement login screens and connect to Firebase Authentication for secure user sign-up and sign-in processes.\nSection 8: Multiplayer Functionality with Firestore\n\n\nCreate a multiplayer experience by implementing features such as creating and joining games in Firestore.\nSearch for players, synchronize game state across devices, and establish a seamless online chess gaming experience.\nWhat Learners Will Achieve:\n\n\nUpon completing this course, learners will:\n\n\nYou will a solid foundation in Flutter and Firebase for mobile application development.\nBe proficient in crafting visually appealing user interfaces for various app screens.\nUnderstand advanced state management techniques using the Provider package.\nImplement crucial game logic, integrating the Stockfish engine for enhanced gaming experiences.\nBuild a secure and seamless user authentication system using Firebase.\nDevelop a real-time multiplayer chess application with features like game creation, player search, and synchronized game state.\nEmbark on this learning journey, and by the end of the course, you'll have the skills and knowledge to create your own Flutter Firebase Chess application and showcase your mastery of mobile app development to the world. Let's code and play chess in the digital realm! Enrol now.",
      "target_audience": [
        "Beginner or advanced Flutter and firebase application developer"
      ]
    },
    {
      "title": "Secure API Keys with a Public-Key Cryptography on Android",
      "url": "https://www.udemy.com/course/secure-api-keys-with-a-public-key-cryptography-on-android/",
      "bio": "Store API Keys on a Backend Server and exchange them Securely with Andorid app, with the help of Android Keystore System",
      "objectives": [
        "Public-Key Cryptography",
        "Generate Private/Public Key Pair",
        "Encrypt/Decrypt the Data",
        "Establish a Secure Communication",
        "Secure Exchange of API Keys between Android app and a Server",
        "Android Keystore System",
        "Learn more about Security Concepts in Android",
        "Encrypted Shared Preferences",
        "Learn how to Secure your Android app"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge about Kotlin and Jetpack Compose",
        "Knowledge about Kobweb Framework is a plus"
      ],
      "description": "In this short-length course I will teach you how to securely store API keys in your Android App, without exposing them to the public. With the help of a Public Key Cryptography, Android Keystore System, Encrypted Shared Preferences and our own Backend server, you will achieve exactly that.\n\n\nPublic key cryptography, also known as asymmetric cryptography, is a cryptographic approach that uses key pair: public key and private key. Each key pair consists of a public key and a private key that are mathematically related but cannot be derived one from another.\n\n\nThis approach will help us to securely exchange the data between a client and a server. API Keys will be initially stored securely on our backend Server. The server and the client will exchange the public key, to encrypt the data, before sending it back to the client.\n\n\nThat way we can make sure that no one can read the actual data which is exchanged. Only our Android application will hold the private key to decrypt the data, and securely  store the API keys on a device.\n\n\nAndroid Keystore system is a part of the Android operating system that provides a secure storage facility for cryptographic keys, certificates, and related information. It is designed to protect sensitive data, such as private keys used for encryption and authentication, from unauthorized access.\n\n\nI will provide you with some more detailed information about the Keystore System itself and how does it work. We will utilize that system to securely store the Public Key Pair that is going to be generated for us.\n\n\nSo what are you waiting for, let's get started!",
      "target_audience": [
        "Android developers",
        "Security Engineers",
        "People who want to secure their Apps before publishing them on Play Store",
        "Anyone who wants to improve the overall Security of their Apps"
      ]
    },
    {
      "title": "Prototyping with Sketch",
      "url": "https://www.udemy.com/course/sketch-prototyping/",
      "bio": "Sketch Prototypes for Web and Mobile: Create Winning Prototypes with Sketch",
      "objectives": [
        "You learn to design user interfaces with Sketch",
        "You will learn to design user experience with Sketch",
        "You will understand the Sktech Inspector Panel",
        "You will be able to manipulate typography with Sketch",
        "You will be able to create color schemes for your Sketch designs",
        "You will be able to position all the elements within a design",
        "You will be able to use Pages",
        "You will be able to use artboards",
        "You will be able to select, move, delete and lock layers",
        "You'll understand how to use style elements",
        "You'll understand text styles and layer styles and know how to apply them correctly.",
        "You'll learn how to export assets from Sketch",
        "You'll learn how to optimize an asset for quick web viewing",
        "You will learn how to create mobile interfaces",
        "You will understand Sketch's plug-in architecture",
        "You will be introduced to InVision's Craft plugin",
        "You'll understand and use the Inspector Panel",
        "You'll understand how to adjust alignment using the Inspector",
        "You will be able to add and edit shapes to your prototype design",
        "You will be able to use Sketch's Masking Features",
        "You will be able to use the Layout Feature within Sktech"
      ],
      "course_content": {
        "Introduction to Sketch": [
          "\"Jump on in\"",
          "Introduction to Sketch",
          "Installing Sketch",
          "Generic Top Level Pages",
          "Plugins and Their Power",
          "Solidify your understanding of the Sketch interface",
          "Conclusion"
        ],
        "Sketch's Layer List": [
          "The Layer List is how you organize your design file",
          "Understanding the Layer List's UI",
          "What are artboards for?",
          "Layers - Selecting, Moving, Deleting, Locking, and Grouping.",
          "Using artboards, pages, and layers together",
          "Try it on your own - create an environment to begin a website using the Layer's",
          "Conclusion"
        ],
        "Sketch's Inspector Panel": [
          "The power of the Inspector Panel",
          "Alignment Options",
          "Layer Properties + Resizing Constraints",
          "Text Fields, Mousekeys, and Math Equations",
          "Layer Styles",
          "Exporting",
          "Get to know your new toolbelt.",
          "Conclusion"
        ],
        "Creating Elements in Sketch": [
          "How to Manage and Add Elements to your Design",
          "Adding & Editing Shapes",
          "Boolean Operations",
          "Typography",
          "Using Masking in Sketch",
          "Grouping Elements Together",
          "Lets try it.",
          "Conclusion"
        ],
        "Organization & Consistency: Layer Styles, Text Styles, and Symbols in Sketch": [
          "Organization is Important, Consistency is Even More.",
          "Layer Styles",
          "Text Styles",
          "Symbols",
          "Naming Conventions",
          "Layout and Grid",
          "Using Layer Styles, Text Styles, and Symbols in your UI design",
          "Why don't you try it?",
          "Conclusion"
        ],
        "Exporting Assets from Sketch": [
          "What Happens After You Create Your Design",
          "How to Export, and What Extensions Are Allowed",
          "Creating Exportable Layers",
          "Previewing Design on Sketch Mirror",
          "Test your Prototype with InVision",
          "Proper Naming Conventions and Optimizing your Assets",
          "Conclusion"
        ],
        "Building a Mobile Interface with Sketch": [
          "Build a mobile UI with the core skills you have learned",
          "Creating an artboard and establishing layout",
          "Creating a wireframe + High fidelity wireframe",
          "Layer + text styling",
          "Designing multiple screens with similar components",
          "Exporting elements + translate to a styleguide for developers",
          "Wrap-up",
          "Conclusion"
        ],
        "Using InVision App's Craft Plugin in Sketch": [
          "Using InVision App's plugin Craft saves time",
          "How to get Craft",
          "Craft Sync",
          "Craft Library",
          "Craft Data",
          "Craft Duplicate",
          "Craft Freehand & Stock",
          "Conclusion",
          "Course Wrap-up"
        ]
      },
      "requirements": [
        "You should own a Mac and be able to work within the operating system"
      ],
      "description": "Maybe you're the web designer looking for a tool with less overhead to create custom web sites?  Or, perhaps, you're a programmers who wants to prototype interfaces quickly?  Are you a UX/UI Designer whose trying to iterate through multiple produce interfaces?  Maybe you're an experienced mobile app designer looking for a lightweight alternative to Photoshop.  Maybe you just want to learn how to design prototypes the right way?\nWhatever your reason, this is the time to learn the Sketch digital design tool kit.\nUnlike other design software Sketch is designed to get out of your way and allow you to create great prototypes of web sites, mobile applications, software applications, tablet applications and much more. While other applications can weigh you down with unnecessary features you'll never use, Sketch is designed to be quick and light.  Designed to get you doing design work quickly and with ease.\nIt's about your creativity-- not your ability to learn dozens of software features.\nAnd, if you're ready to start working with Sketch there is no better way to learn than this course Prototyping with Sketch is a complete, comprehensive course on the Sketch tool. You'll become familiar with each of the tools you'll use to design user interfaces for web and mobile based applications.\nWe wanted this course to be about doing-- so you won't waste time in endless lectures.  We've included a number of high quality laboratory exercises in the course to quickly get you doing the type of work professional designers do in Sketch every day.  Each of the lab exercises is relevant to the work you'll be doing as a professional developer.\nYour instructor, Matt Cameron, made sure every detail of this course is efficient, interesting, and most importantly, relevant!  Each minute, you'll learn more about the Sketch digital design tool and, add skills to your professional toolbox that will make you a consummate pro.\nIt's time to stop thinking about working with a tool like Sketch-- It's time to learn the tool.  With the informative lectures, engaging activities and numerous tips, you'll be working as a professional designer in web or mobile as soon as you finish this course.\nEnroll in Prototyping with Sketch now!",
      "target_audience": [
        "Web developers and designers",
        "Traditional graphic designers learning digital",
        "Mobile app developers",
        "Teachers and students",
        "Anyone who designs prototypes"
      ]
    },
    {
      "title": "Build and Upload a STICKER PACK To The App Store In One Day",
      "url": "https://www.udemy.com/course/stickerpack/",
      "bio": "Create Sprite Animation Stickers, Multiple Sized Stickers, and Upload YOUR Sticker Pack to the App store with Xcode.",
      "objectives": [
        "Ship a fully functional sticker pack to the Apple App Store.",
        "Learn how to publish apps from zero to one to the app store."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Course Resources"
        ],
        "Building a Sticker Pack for iMessage": [
          "The Sticker Generator",
          "Building the Sticker Pack",
          "Animated Stickers!",
          "Adding an App Icon",
          "Running on a Real iPhone."
        ],
        "Submitting your App or Sticker Pack to the  App Store": [
          "Bundle Identifiers",
          "App Store Screenshots",
          "App Icon and App Information",
          "Archiving A Build",
          "Submitting for Review"
        ],
        "Bonus - Marketing, Promoting, and Optimizing your Apps or Sticker Packs.": [
          "Bonus Lecture - iOS Course Codes."
        ]
      },
      "requirements": [
        "Xcode",
        "Half of a brain"
      ],
      "description": "Not only will you learn how to create a StickerPack with animated stickers, but you'll also be walked through uploading this StickerPack to the app store.\nSo start today & build your first sticker pack including animated stickers WITHOUT ANY CODE! It's super simple and we will have you publishing a sticker pack to the app store the day you start this course.\nThis course will introduce you to the Messages Framework in Xcode, so developer or not, this course will further your iOS Development skills!",
      "target_audience": [
        "people who want to build an awesome sticker pack for iPhone's iMessage.",
        "illustrators & designers",
        "people who want to improve their design or illustration skills"
      ]
    },
    {
      "title": "Develop Android Apps using Python: Kivy",
      "url": "https://www.udemy.com/course/develop-android-apps-using-python-kivy/",
      "bio": "Learn how to make android apps using Python Programming Language. Develop apps using Kivy and learn how to reply them.",
      "objectives": [
        "Make Android Application using Kivy",
        "Know about the different Widgets and Layouts in Kivy",
        "Know about the Architecture of Kivy",
        "Know about the events and Properties in Kivy",
        "Use Kivy Language in making Apps",
        "Deploy the Kivy Application on Phone"
      ],
      "course_content": {
        "Introduction to Kivy": [
          "Overview and Introduction to the course",
          "Introduction",
          "Installation of Kivy",
          "Architecture of Kivy"
        ],
        "KV Language": [
          "Kv Language"
        ],
        "Layouts": [
          "Float Layout",
          "Anchor Layout",
          "Box Layout",
          "Page Layout"
        ],
        "Widgets in Kivy": [
          "Button in kivy",
          "CheckBox in Kivy",
          "Dropdown in Kivy",
          "FileChooser in Kivy",
          "Image in Kivy",
          "ListView in Kivy",
          "Slider in Kivy"
        ],
        "Events and Properties in Kivy": [
          "Introduction of Events and Properties",
          "Touch Event",
          "Input and Screen Transition"
        ],
        "Deploying the Kivy Application": [
          "Deploying the Kivy Application"
        ],
        "Application in Kivy": [
          "Kivy Application",
          "Kivy Application2"
        ],
        "Programs discussed in complete course": [
          "Programs of complete course"
        ]
      },
      "requirements": [
        "You should be familiar with the basics of Python language."
      ],
      "description": "This course of Kivy will help you to make Android Applications using Python .So all the ones who feel Python is easier than Java should go for this course for making your Android Applications .Also the ones who already know Python and want to work with some new tool of Python should also go for this course .So Kivy is basically when you make Android applications using Python instead of Java .\nThe course is structured in such a way that it starts from the basics of Kivy, covers all the basic topics and then moves over to the Application development and Deployment .\nIt will take 2hrs. approx. for this course .\nSo this course should be taken by the students who want to make Android Application using Python .All the videos are included which will explain all the concepts first and then show the handson example code of it . Also all the program files of the programs that are discussed in the course are also provided . This course will give you a new insight towards the mobile application development .",
      "target_audience": [
        "This course is meant for the ones who want to make Android Applications using Python",
        "Make sure you have a basic knowledge of Python before proceeding for this course."
      ]
    },
    {
      "title": "Develop & Deploy Mobile Apps with React Native & Expo",
      "url": "https://www.udemy.com/course/develop-deploy-mobile-apps-with-react-native-expo/",
      "bio": "Learn to Develop & Deploy Mobile Apps with React Native and Expo without the need of installing Android Studio or Xcode",
      "objectives": [
        "You will learn the basic concepts of React Native",
        "You will learn to use React Native core components like Flatlist, Scrollview, Modal, Button, View, TextInput, Text etc etc",
        "You will learn to develop & debug on phone with screen mirroring",
        "You will learn to implement navigation and routing in your native mobile app",
        "You will learn to make REST API calls from your app",
        "You will learn to build executable files from same codebase for android and ios devices",
        "You will develop two projects and also get the complete source code"
      ],
      "course_content": {
        "Introduction & Installation": [
          "Course Introduction",
          "About Your Instructor",
          "What is React Native",
          "Working of React Native apps",
          "Installation and Setup process for Local development"
        ],
        "Basics of React Native & Core Components": [
          "Creating first React Native app and running on Phone",
          "Understanding files and folder structure",
          "React Native Core Components",
          "Styling components in React Native",
          "Do's and Don'ts while using React Native core components",
          "Do's and Don'ts while using Styling"
        ],
        "Developing Task Manager Mobile App": [
          "Task Manager App Layout Styling",
          "Layout styling with Flexbox",
          "Dividing vertical spaces for different section",
          "Creating State Variables and Functions for Task and Tasklist",
          "Adding new task and Showing all Tasks on screen",
          "Styling the Task List section",
          "Making content scrollable with ScrollView",
          "FlatList vs ScrollView",
          "Exploring FlatList and its usage",
          "Creating new component Task Item",
          "Creating new Add Task Component",
          "Conditional or Dynamic Rendering",
          "Implement the Tap functionality for deleting a Task",
          "Implement Delete Task Logic",
          "Adding Validation for Mandatory fields",
          "Styling the Pressed Task",
          "Adding Modal Popup for Adding New Task",
          "Adding sliding animation to modal popup",
          "Styling Modal - Part-1",
          "Styling Modal - Part-2",
          "Hide Modal on cancel",
          "Adding Image to the App",
          "Build and Generate APK file for testing and production"
        ],
        "React Navigation and Routing": [
          "Creating new react native app",
          "Building the new app",
          "Installing React Navigation Libraries",
          "Creating Home and Dashboard components with the help of VS code extension",
          "Adding Navigations and Default Navigation",
          "Navigate between components from Javascript",
          "Passing Data between components while navigating",
          "Implementing Go Back functionality",
          "Taking User Input and Sending it to Next Component"
        ],
        "Develop Movie App: Calling REST API from the App": [
          "Create Movie component and add Routing",
          "Create movie search box and search button",
          "Write REST API call and Fetch all Matching Movies",
          "Looping through the Movie List and displaying all movies",
          "Showing Movie Image along with other information",
          "Create an Android Build and generate the APK file for your phone",
          "Downloading and Installing APK on your phone"
        ],
        "Source Code": [
          "Project One Code",
          "Project Two Code"
        ]
      },
      "requirements": [
        "Basics of ReactJS"
      ],
      "description": "In this course, you will learn everything about React Native, and how it differs from ReactJS. You will learn about various tools required for developing and deploying native mobile apps that can run both on Android and iOS.\nThe best part is you will only need a code editor along with a mobile phone, you do not need any heavy software like an android studio or xcode for developing mobile apps that will run on both android and ios devices.\nYou will learn the following topics:\nWhat is React Native\nWorking of React Native apps\nInstallation and Setup process for Local development\nCreating first React Native app and running on Phone\nUnderstanding files and folder structure\nReact Native Core Components\nStyling components in React Native\nDo's and Don'ts while using React Native core components\nDo's and Don'ts while using Styling\nTask Manager App Layout Styling\nLayout styling with Flexbox\nDividing vertical spaces for different section\nCreating State Variables and Functions for Task and Tasklist\nAdding new task and Showing all Tasks on screen\nStyling the Task List section\nMaking content scrollable with ScrollView\nFlatList vs ScrollView\nExploring FlatList and its usage\nCreating new component Task Item\nCreating new Add Task Component\nConditional or Dynamic Rendering\nImplement the Tap functionality for deleting a Task\nImplement Delete Task Logic\nAdding Validation for Mandatory fields\nStyling the Pressed Task\nAdding Modal Popup for Adding New Task\nAdding sliding animation to modal popup\nStyling Modal - Part-1\nStyling Modal - Part-2\nHide Modal on cancel\nAdding Image to the App\nBuild and Generate APK file for testing and production\nCreating new react native app\nBuilding the new app\nInstalling React Navigation Libraries",
      "target_audience": [
        "Anyone who wants to learn to develop mobile apps for android and ios from same codebase using React Native"
      ]
    },
    {
      "title": "Make a Chat App! (Firebase : Swift in Xcode)",
      "url": "https://www.udemy.com/course/make-a-chat-app-archetapp/",
      "bio": "Make a chat application from start to finish!",
      "objectives": [
        "Make a Chat Application using Firebase",
        "Upload and Retrieve Messages from the Database",
        "Upload and Retrieve Photos from Storage",
        "Add Email and Password Login",
        "Create Users and Load Them into a Table View"
      ],
      "course_content": {
        "Make the app!": [
          "Introduction!",
          "Setting Up Your App With Firebase!",
          "Add Email Login! (Pt. 1)",
          "Add Email Login! (Pt. 2)",
          "Add Setup Page!",
          "Custom Camera View in Setup Page!",
          "Take A Photo!",
          "Upload Photo to Firebase!",
          "Ad Authorization to go to Setup View!",
          "Automatic Login!",
          "Add Profile Page!",
          "Setup Profile Page!",
          "Asynchronous Loading of Profiles!",
          "Setup Chat Page!",
          "Load Posts Onto Chat Page!",
          "Post Something!",
          "Notifications! (THE END)",
          "Project Files"
        ]
      },
      "requirements": [
        "You NEED a Mac or something that run macOS.",
        "Xcode (Free)",
        "Firebase Account (Free to try)",
        "CocoaPods (Free)"
      ],
      "description": "In this 15 video course series, I will take you from square one, and help you make your own complete chat application for the iPhone/iPad using Swift 2 in Xcode. We'll be using Firebase.com to host the information inside of the app (profile pictures, usernames, messages, etc) which is free to try out. (See promo video for more details)\nTestimonials!\nAnonymous - Awesome tutorials. I like that you are straight to the point. Half way I am usually thinking... 'Aww but how would I do this', then you nearly always end up answering it anyway. Thanks heaps for all the great help you give the programming community. Keep it up mate.﻿\nNetronelson - excellent video... pace was great, not too much jargon. nice and clear! (from a non-techs guy).﻿\nAbdullah Callo - Thank you very much, all of your tutorial are very informative, clear and easy to follow.﻿",
      "target_audience": [
        "FOR those looking for a quick and simple course on making a chat app.",
        "NOT for beginners, I don't hold your hand, and tell you what everything means."
      ]
    },
    {
      "title": "Android Mobile App - A Published RSS Reader App",
      "url": "https://www.udemy.com/course/creating-beautiful-android-apps-design-code-and-publish/",
      "bio": "Android mobile app creation from scratch. End result: A beautiful mobile app published on the Play store.",
      "objectives": [
        "Design and code beautiful Android apps",
        "Market themselves as freelance software engineers"
      ],
      "course_content": {
        "Introduction and setup": [
          "Introduction and what you will learn",
          "Installing Android Studio and creating your first project",
          "A quick tour of the Android studio interface"
        ],
        "Beautiful Android Apps": [
          "Why the need for beautiful Android apps?",
          "What exactly is beautiful?",
          "Blasphemy. Using Apples app guidelines for Android apps."
        ],
        "Designing our user experience": [
          "Designing our UX"
        ],
        "Designing our User Interface in Android Studio": [
          "Testing our current user interface in the Android Simulator",
          "Designing the main screen layout in Android XML",
          "Designing the add feed layout in Android XML",
          "Designing the edit feeds screen in Android XML",
          "Setting our app theme in the styles.xml file and Android manifest"
        ],
        "Creating and navigating between new activities within Android apps": [
          "Connecting up our activities using intents"
        ],
        "Databases on Android (SQLite)": [
          "How to set up an SQLite database in an Android app",
          "Java code to store and get information from an SQLite database",
          "Storing our RSS feed in the SQLite database"
        ],
        "List Views and adapters on Android": [
          "Setting up a ListView adapter for a list of RSS feeds",
          "Editing a ListView and removing elements"
        ],
        "App permissions on Android via manifest.xml": [
          "Android app permissions (accessing the internet in our app via manifest.xml)"
        ],
        "How to use libraries in Android projects": [
          "Creating our RSS Feed Item class to use with the library",
          "Installing a library within an Android project"
        ],
        "Fetching our feed items and fixing bugs in Android apps": [
          "Fetching the RSS feed items from the internet (and our first bug)",
          "Fixing our RSS library bug using 'try' catch'"
        ]
      },
      "requirements": [
        "Nothing"
      ],
      "description": "I will take you from beginner to COMPLETELY published on the Google Play Store. NO OTHER COURSE takes you all the way through the process and in so much detail !!\n-----------Review of this course--------------\nReally engaging, like the way you explain all the little things, good for us beginners!\n\n--------------------------------------------------------\n-----------You will be published--------------\nBy the time you're done with this course you will have an app on the Play Store. One that earns passive income from advertising!\n\nThat's money STRAIGHT into your pocket!\n--------------------------------------------------------\nPlease stop buying 'How to code 10 Android apps in 10 days' courses...\nThere is so much more to Android app development than just plain coding tutorials!\nThat's why I created this Android development course! No other Android development course takes you from beginner (with no experience) to published. They only show you 'How to make an Android app', wth no reference to all the other parts such as:\n\nSigning your Android app\nBecoming a Google Android developer\nCreating signing keystrokes for Android\nSubmitting an Android app to the Play Store\nMarketing through your Android app listing\n\nThis course is for you if you want to:\nLearn the Android development process - from complete beginner to Play Store publishing (no-one else does this, they only show 'how to code' app tutorials)\nGet paid $100 - $150 per hour to make apps for paying clients\nCreate your own wildly popular apps\nSee the whole development process as it really is.\nHave a real app you can publish under your own account\nThis course is not for you if:\nYou are an expert or intermediate programmer\nWhat software do you need?\nAndroid studio (free) which needs to be run on a Pc or Mac or Linux\nDo you need experience?\nNo. I assume you are a complete beginner to Android development\nWhat makes this course different?\nIt reveals the true nature of app development - an involved process with many design and usability iterations. Top clients (those with money) will expect a certain level of professionalism and do not mind large bills to match if you bring them value.\nMy last invoice amounted to £18,000 for a simple, unpublished version 1 app. It was paid off immediately with the project manager commenting 'great value and cheaper than large studios'. He loved it because we had gone through several design stages beforehand, allowing him to get exactly what he envisioned.\nIf I had simply presented my 'app coding abilities' I would have only been able to charge one third of that amount.\nThe reality is that making beautiful apps allows you to charge far more and produce fantastic looking work.\nThat work becomes your calling card, with clients seeking you out instead of the other way around.\n\n\nThe extras you get when taking this course:\n\nI break down some app industry guidelines you should follow when creating an Android app (hint: we borrow from other creative industries).\nYou learn to think outside the box, giving you an advantage over all your competitors\nA good basic grounding in Android Studio app development (and the Java language)\nAn app you can actually publish yourself!",
      "target_audience": [
        "Beginners who know little to nothing about coding",
        "People that want to WOW people on the app store with their designs"
      ]
    },
    {
      "title": "Mastering Flutter: From Basics to Advanced by Building Apps",
      "url": "https://www.udemy.com/course/mastering-flutter-from-basics-to-advanced-by-building-apps/",
      "bio": "Learn Flutter by Building Apps",
      "objectives": [
        "Confident due to Hands-on experience with various Flutter features",
        "Able to build robust and scalable mobile applications",
        "Able to Identify and mange project modules",
        "Able to Test project to create bug free apps"
      ],
      "course_content": {
        "Introduction to Flutter": [
          "Overview of Flutter and its Advantages",
          "Introduction to Dart Programming Language",
          "Building Your First App: \"Hello World\"",
          "Quiz - Flutter Introduction"
        ],
        "Basic Widgets and Layouts": [
          "Understanding Flutter Widgets",
          "Working with Basic Widgets (Text, Button, Image)",
          "Layouts and Positioning (Row, Column, Container)",
          "Quiz - Basic Widgets and Layouts"
        ],
        "State Management": [
          "Introduction to Stateful and Stateless Widgets",
          "Managing State with setState",
          "Quiz -State Management"
        ],
        "Navigation and Routing": [
          "Navigation Basics",
          "Passing Data Between Screens",
          "Use Nammed Routes",
          "Quiz - Navigation and Routing"
        ],
        "Forms and Input Handling": [
          "Creating Forms in Flutter",
          "Handling User Input and Validation",
          "Quiz - Forms and Input Handling"
        ],
        "Advanced State Management": [
          "Using Getx for State Management",
          "Quiz - GetX"
        ],
        "Local Storage": [
          "Using SQLite for Local Database",
          "Storing and Retrieving Data Locally",
          "Quiz - Local storage"
        ],
        "Networking and APIs": [
          "Fetching Data from the Internet and Parse JSON (Quote App)",
          "Todo App to perform CRUD operation using API without GetX",
          "Quiz - Networking and APIs"
        ],
        "Firebase Integration": [
          "Setting up Firebase for Flutter",
          "Data storage on Cloud Firestore of Firebase",
          "Quiz - FIrebase"
        ]
      },
      "requirements": [
        "No programming experience required in this course"
      ],
      "description": "Unlock the full potential of Flutter, Google’s dynamic and versatile UI toolkit, with this comprehensive course designed to cater to both beginners and experienced developers. \"Mastering Flutter: From Basics to Advanced by Building Apps\" offers a highly practical, project-driven learning experience where you’ll build 21 fully functional apps, each crafted to teach you a wide range of real-world skills and use cases. Whether you're developing mobile apps for personal projects, your career, or to launch into the app development market, this course is a perfect fit.\nStarting with the fundamentals, you’ll quickly become familiar with essential Flutter concepts like building layouts, state management, form handling, and navigation. As you progress, you’ll dive deeper into more advanced topics such as integrating APIs, networking, managing asynchronous operations, Firebase authentication, cloud storage, complex animations, and performance optimization techniques.\nEach app you build is designed to incrementally challenge you, allowing you to master the most in-demand skills while following industry best practices. By the end of this course, you will have developed a strong portfolio of apps, showcasing your proficiency in Flutter development. You’ll gain confidence in building scalable, high-performance applications, giving you the expertise to pursue any Flutter project, from mobile apps to web and desktop platforms. Whether you're just starting out or refining your skills, this course provides the ultimate pathway to becoming a skilled, professional Flutter developer.",
      "target_audience": [
        "Anyone who wants to create app using flutter."
      ]
    },
    {
      "title": "The Complete iOS Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-ios-bootcamp/",
      "bio": "Learn iOS9 with Swift2 along with iOS8 and WatchKit with Actual iOS Apps with Source Code",
      "objectives": [
        "Become and expert in App development with iOS9",
        "Learn by example by walking you through real live projects step by step",
        "Become a Master in Developing Compelling Apps for Apple Watch using the WatchKit Framework"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Setup and Hello World App",
          "The Xcode Interface - Part 1",
          "The Inspector Panel - Part 2",
          "The Editor - Part 3",
          "HelloWorld App - Part 1",
          "HelloWorld App - Part 2",
          "HelloWorld App - Part 3"
        ],
        "Variables and Other Types": [
          "Variables and Constants",
          "Int, Double and their Subtypes",
          "Optional Types and Nil",
          "Strings and Characters",
          "Boolean Type",
          "Tuples",
          "Unit2 Exercises"
        ],
        "More on Arrays, Loops, Directories": [
          "Fixing Unresponsive Playgrounds",
          "Correcting the Command Line Tools Version",
          "Learn About Arrays",
          "Learn About Sets",
          "Learn About Dictionaries",
          "For, for-in, while and Repeat Loops",
          "If, Guard and Switch",
          "Unit3 Exercises"
        ],
        "Functions, References and Closures": [
          "Basic Function Syntax",
          "Default and Variadic Parameters",
          "Value and Reference Type Parameters",
          "Function Types & Nested Functions",
          "Learn Closures",
          "Unit4 Exercises"
        ],
        "Enumerations in iOS": [
          "Intro to Enumerations",
          "Enumerations: Raw Values",
          "Associated Types",
          "Initialization in Enumerations",
          "Mutation Functions in Enumerations",
          "Unit5 Exercises"
        ],
        "Classes, Structures & Methods": [
          "Classes and Structures",
          "Computed Properties",
          "Property Observers",
          "Lazy Stored Properties",
          "Type Properties and Methods",
          "Inheritance",
          "Unit6 Exercises"
        ],
        "First App in iOS, view and Other": [
          "Intro to First iOS App (HelloYou)",
          "Starting the App, Writing the Model",
          "Instantiating the Model",
          "Creating the View",
          "The ViewController & Running the App",
          "Model – View – Controller in iOS",
          "Delegation",
          "Starting the PeopleCount App",
          "Setting up the Delegation",
          "Unit7 Exercises"
        ],
        "Navigations and Segue": [
          "Using a Storyboard Segue",
          "Using an Unwind Segue With the Exit Control",
          "Setting up a Navigation Controller App",
          "Building a Navigation Hierarchy",
          "Sending Data During a Segue",
          "Delegation in Navigation Controllers - Part 1",
          "Delegation in Navigation Controllers - Part 2",
          "Unit8 Exercises"
        ],
        "Table View in Depth": [
          "Intro to Tab Bar Controllers",
          "Moving Data in a Tab Bar Application",
          "Displaying Data in a Table View",
          "Data Source Methods & Headers",
          "Applying Group Settings to Table Views",
          "Indexing a Table View",
          "Using Subtitle Styles",
          "Segueing From a Selected Cell",
          "Description of the Exercise for this Unit"
        ],
        "NoteTaker App": [
          "Setting up Storyboard for NoteTaker App",
          "The Model for NoteTaker & Plist Files",
          "Adding a Note",
          "Resigning the Keyboard on Text Controls",
          "Presenting the Detail View for a Note",
          "Deleting Notes",
          "Saving and Using Code Snippets in Xcode",
          "Presenting an Alert when no Plist Exists",
          "Cleaning up the Code, Final Exercise & Summary of Above"
        ]
      },
      "requirements": [
        "We assume you have some basic knowledge of programming",
        "Knowledge of some Scripting Language Preferred, but Not Necessary"
      ],
      "description": "In this iOS Bootcamp you will learn fundamentals of developing iOS applications using Swift programming language both the versions.\nThis course contains 255 lectures spread over 30 hours of video.\nYou will have access to actively ask Rick any questions you like related to the content.\nAt the end of the course, you’ll be able to write iOS applications that use tables, hierarchical and tabbed navigation, and understand the principles behind developing any iOS application.\nThe course will be complimented with shorter sessions on the various\nextension frameworks at a later date, including SpriteKit, SceneKit,\nHealthKit, WatchKit, etc\nWe will also cover everything you need to develop compelling apps for Apple Watch using the WatchKit framework and the Swift programming language.\nWe'll cover the techniques of app development, starting with some simple apps and working our way up to more complex techniques..\nWe'll build several apps together, including a simple note taker, a few different kinds of calculator, a few of games, a simple memo systems with voice recording and playback, etc.\n\nAll topics are easy to learn and presented in digestible short 5 to 15 minute videos with real world examples and demos. The course contains discussions and demos to test your skill. All demos come with full source codes that you can download which is complimentary and use for your projects.\n\nTopics include:\n\nIntroduction to working with Xcode\nData types, optionals, and tuples\nCollection types: arrays, sets, and dictionaries\nIf statements and loops\nfunctions and closures\nEnumerations\nClasses and structures\nStored and computed properties\nInheritance in Swift\nIntroduction to iOS\nModel - View - Controller and its role in iOS programming\nDelegation\nNavigation controllers and segues\nTab bar controllers\nTable view controllers\nUsing various cell sty les\nUsing headers and footers\nGrouping vs. plain table styles\nIndexing a table view\nA case study: NoteTaker:\nSwift Primer\nVariables\nFunctions\nArrays\nEnumerations\nClasses\nMethods\nViews\nArrays\nEnumerations\nClasses\nMethods\nViews\nWatchkit\n7 real apps\nI hope you join me as we explore this course together!",
      "target_audience": [
        "Beginners and advanced level developers who want to learn WatchKit Framework",
        "Students wish to upgrade their Swift programming language"
      ]
    },
    {
      "title": "Swift for Beginners - Create your first iOS App with Swift",
      "url": "https://www.udemy.com/course/start-developing-ios-apps-with-swift-for-beginners/",
      "bio": "Swift for iOS: Create your own Apps in no time using Swift",
      "objectives": [
        "At the end of this course you are going to be able to create your own iOS Apps using Swift",
        "You will also understand and be able to apply the basic concepts of programming"
      ],
      "course_content": {
        "Welcome": [
          "What you are going to learn",
          "Your first real App Part 1",
          "Your first real App Part 2"
        ],
        "Xcode: Your favourite environment": [
          "How to install Xcode",
          "The Xcode User Interface",
          "Hello World!",
          "Let's check: Xcode - Your favourite environment"
        ],
        "Swift Basics": [
          "A new language is born: Our new Playground",
          "2x = 4: Variables and Constants",
          "More then just x: Different Datatypes",
          "A little math: Addition, Subtraction, etc.",
          "Collection Types: Arrays and Dictionaries",
          "What if? Learning about Program flow",
          "while- and for-Loops",
          "The Scope of Variables and Constants",
          "Let's check 2: Swift Basics"
        ],
        "Swift beyond the Basics": [
          "What is Object Oriented Programming?",
          "Your first Class",
          "Using Functions",
          "Let's get on the Road: Complete your first Class",
          "To be or not to be? - Working with Optionals",
          "Let's check 3: Swift - Beyond the Basics"
        ],
        "Your daily bread: Basic User-Interface Components": [
          "UITextField and UIViewController",
          "IBOutlets and IBActions",
          "UITextFieldDelegate",
          "UITextView for multiline text",
          "The Storyboard: Working with multiple ViewControllers",
          "Let's check 4: Your daily bread"
        ],
        "Let's get dangerous: Getting in touch with advanced UI Components": [
          "UIImageView: Working with Images",
          "Red Alert: UIAlertController and UIActionSheet",
          "The power of Multitouch: UIGestureRecognizer",
          "There is something moving: Getting started with Animations",
          "Let's check 5: Let's get dangerous"
        ],
        "Welcome to the real world: SwiftCalc - Developing an iOS Calculator": [
          "Setting up the User Interface",
          "Preparations for making Calculations",
          "Finishing Touches"
        ],
        "Conclusion": [
          "Your new skills and where to go from here"
        ]
      },
      "requirements": [
        "Mac OS X"
      ],
      "description": "75 Billion Apps were already sold in the iOS App Store. If you ever wanted a chance to participate in this success, here is your chance.\nCourse abstract\nIn this course you are going to learn all the basics you need to know to create your own simple iOS applications using the new Swift programming language. After learning all about the basics of programming (variables, constants, if-statements, loops ...), you are going to become familiar with object oriented programming (OOP). These are the fundamentals to be able to grasp the awesome UIKit Framework which you are going to use to create awesome Apps. After getting in touch with many iOS User Interface components we are going to start using more advanced user interaction techniques like recognizing gestures on the iPhone screen. The conclusion of this course is a real-life example that will help you connect all the dots and pieces of your newly acquired knowledge.\nSection 1: Welcome\nYou will start off creating a nice App that allows you to manipulate images, using image filters. Although this is an advanced topic, this example will show you the possibilities of the iOS SDK and the workflow within Xcode. This project is supposed to replace the standard „Hello World“ example.\nSection 2: Xcode - Your favourite environment\nYou have to know the tools you are using. So, this section is all about Xcode itself.\nSection 3: Swift Basics\nSince you don’t need any programming experience to start developing iOS Apps, here are all the programming basics that you are going to need to be become a successful iOS App developer. We are covering topics like variables and constants, datatypes, collection types (Arrays and Dictionaries), control flow using if statements, loops …\nSection 4: Swift beyond the Basics\nSince object oriented programming is the fundamental paradigm, on which Swift and the iOS SDK are based, you are going to learn all the basics you need to know in order to successfully use the classes provided by Apple.\nSection 5: Your daily bread – User-Interface Components\nIn this section we are going to cover UI components like textfields, buttons, labels and you are are also going to learn the basics about Storyboards, ViewControllers and Delegates.\nSection 6: Let’s get dangerous\nIn this section you are going to learn how to use gesture recognizers for responding to touch events on the iPhone screen. You will also learn the basics of animating objects, as well as the usage of the UIAlertController class to display messages to your users.\nSection 7: Welcome to the real world\nIn this final section we are going to put all the dots and pieces together and create a great calculator App from scratch. We are going to design the User Interface, write all the necessary Swift code and finally you are going to learn how to add a great Icon to your App.",
      "target_audience": [
        "People with no programming experience who want to start developing iOS Apps",
        "People coming from other languages who want to learn the basics of the Swift and iOS development"
      ]
    },
    {
      "title": "Build Real World ECommerce App with Xamarin Forms",
      "url": "https://www.udemy.com/course/build-furniture-store-application-with-xamarin-forms/",
      "bio": "Learn Xamarin Forms Real World Application From Beginning to End",
      "objectives": [
        "Make Ecommerce Furniture Store App with Xamarin Forms",
        "Work as a freelance xamarin forms developer",
        "Create your first xamarin forms real world application",
        "Consume Restful Api's in Xamarin Forms",
        "Build fully-fledged apps for your startup or business"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Demo",
          "Course Structure"
        ],
        "Configure Application Backend": [
          "Get Application Backend",
          "Create Azure Web App",
          "Create Azure Database",
          "Publish Web Api to Azure",
          "Azure Query Editor Preview",
          "Seed Data in Azure SQL Db"
        ],
        "Test Api's": [
          "Api Documentation",
          "Testing Accounts Endpoints",
          "Testing Categories Endpoints",
          "Testing Products Endpoints",
          "Testing Shopping Cart Items Endpoints",
          "Testing Order Endpoints",
          "Testing Complaint Endpoint"
        ],
        "Getting Started with Xamarin Forms": [
          "Create Blank Project",
          "Debug Xamarin Forms Application",
          "What is Preferences",
          "How to store value in Preferences",
          "How to retrieve value from preferences"
        ],
        "Assets For Android and IOS": [
          "Import Assets in Android and IOS Projects"
        ],
        "Create Model Classes": [
          "Create Model For Accounts",
          "Create Model For Categories and Products",
          "Create Model For Shopping Cart Items",
          "Create Model For Orders and Complaints"
        ],
        "Create Service Layer": [
          "Register User Method",
          "Static Method and Classes",
          "Login Method",
          "App Settings Class",
          "Get Categories",
          "Get Product By Id",
          "Get Product By Category",
          "Get Trending Product",
          "Add To Cart",
          "Shopping Cart Total Price",
          "Get Shopping Cart Items",
          "Total Cart Items",
          "Clear Shopping Cart",
          "Place Order",
          "Orders By User",
          "Order Details",
          "Register Complaint"
        ],
        "Signup Page": [
          "SignPage Design",
          "Implement Signup Functionality"
        ],
        "Login Page": [
          "Login Page Design",
          "Implement Login Functionality"
        ],
        "One time Login with Access token": [
          "Implement One time login with Access Token"
        ]
      },
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "At least 3-6 months experience with Xamarin Forms and XAML",
        "Visual Studio 2019 with windows Or Mac Edition whatever suits you.",
        "Postman Api Testing Tool",
        "Microsoft Azure For Api Deployment"
      ],
      "description": "Welcome to the Real World Furniture Store App Development course with Xamarin Forms.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of real world application in Xamarin Forms. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in Xamarin Forms.\n\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with xamarin forms.\nConsume Restful Api's.\nTest Local Hosted Api's inside your Mobile Device.\nConsume Nuget's in xamarin forms.\nCreate a Complete Real World (Furniture Store) Application in Xamarin Forms From Scratch to End.\nHow to make asynchronous API calls, store and retrieve data from the api, and use the JSON format for server communication.\nMake application user friendly.\n\n\nRemember...\nAfter this course you'll get all the Xamarin Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you.\nIn this course I've used the Microsoft Azure for Api Deployment which means you must have a Microsoft Azure Account to publish the web api's.\nSo what are you waiting for? Click the buy now button and join the Complete Real World Furniture Store App Development Course with Xamarin Forms.",
      "target_audience": [
        "If you've a 3 to 6 months xamarin forms experience , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you're are already familiar with Xamarin Forms and wants to make an Ecommerce Application then take this course."
      ]
    },
    {
      "title": "Create a TikTok clone with Flutter and Firebase [2020]",
      "url": "https://www.udemy.com/course/create-a-tiktok-clone-with-flutter-and-firebase/",
      "bio": "Lets build the famous social network app tiktok with Flutter and Firebase",
      "objectives": [
        "Full tiktok clone with flutter",
        "How to upload and retrieve Video files from Firebase Storage and Firebase Firestore",
        "Flutter Frontend Development",
        "Play Video Files",
        "Firebase Firestore",
        "Complex data-structure with firestore",
        "Video Compressing",
        "Streambuilder with real-time data",
        "Flutter Backend Development",
        "Firebase Video Storage",
        "Searching users with queries",
        "Like, comment and share functions",
        "Whole social media app with flutter",
        "Neat UI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup": [
          "Setting up code and Firebase"
        ],
        "User Authentication": [
          "Authentication"
        ],
        "VideosPage UI": [
          "Building the UI for the VideosPage"
        ],
        "Adding videos to Database": [
          "Letting users to add videos"
        ],
        "Like , comment and share functions": [
          "Getting the videos and adding like, comment and share functions"
        ],
        "Search users and ProfilePage": [
          "Searching users and building Profilepage"
        ],
        "Follow, unfollow user and edit user profile": [
          "Follow, unfollow users and edit the profilepage"
        ],
        "Deploying to google playstore": [
          "Finally deploying the app to google playstore"
        ],
        "Full source Code": [
          "Full updated Source code"
        ]
      },
      "requirements": [
        "Some experience with flutter",
        "Good internet with laptop"
      ],
      "description": "Hello guys. So you wanna learn how to make the exact clone of tiktok with flutter and firebase. Then you are at the right place. I will teach you everything you need to build that app. We will develop this app using Flutter (Dart Programming Language) with Firebase Firestore as backend. At the end of this course you will be able to make your own fully functional backend flutter applications with Firebase Firestore. You will be able to create your own tiktok clone with flutter. At then end we will deploy the app to google playstore.\nUpdate: Please not that the code and packages are used in 2020 and if required you need to change some code into the new verisons accordingly\n\n\nThings we will learn\nUser authentication\nCreating social media app with flutter\nVideo Compressing and video uploading\nPageView builders\nStoring images in a storage bucket\nComplex data-structure for firebase\nSocial media functions in flutter\nNeat and Clean UI\nWorking with videos in flutter\nQuerying in firestore\nFlutter widgets\nReal-time data with stream-builder\nWorking with videos in flutter\n\n\nThings we will learn\nUser authentication\nCreating social media app with flutter\nVideo Compressing and video uploading\nPageView builders\nStoring images in a storage bucket\nComplex data-structure for firebase\nSocial media functions in flutter\nNeat and Clean UI\nWorking with videos in flutter\nQuerying in firestore\nFlutter widgets\nReal-time data with stream-builder\nWorking with videos in flutter",
      "target_audience": [
        "Flutter developers who want to learn making really complex apps",
        "People who want to create a tiktok like app"
      ]
    },
    {
      "title": "Learn Android O development and build 10 Apps",
      "url": "https://www.udemy.com/course/android-o-course/",
      "bio": "Complete Android O course with Java - Build 10 Apps. Also includes Firebase section.",
      "objectives": [
        "You will build 10 apps in Android",
        "You will learn about Android development process",
        "You will be able to apply for Jr Android developer in companies"
      ],
      "course_content": {
        "Introduction to android development": [
          "Introduction to course",
          "Things that you will need",
          "Installing Android Studio - MAC",
          "Installing Android Studio - windows",
          "Setting Android Virtual Device and Hello World",
          "Android Studio Tour",
          "SignIn and SignUp buttons"
        ],
        "Animations and 2 apps": [
          "SECTION INTRO",
          "Bulb idea App setUp",
          "Finishing Idea App",
          "Thumbs up App Text warnings",
          "Having App icons",
          "Snakes and Ladder Setup",
          "Linear layouts",
          "Using stack overflow to fix button issues",
          "FInishing Snakes and Ladder App"
        ],
        "Making TIC TAC TOE": [
          "Understanding logic of TIC TAC TOE app for android",
          "Setting layout for Tic TAC TOE",
          "Setting players turn",
          "Setting Game state",
          "Game reset logic"
        ],
        "Audio video and 2 apps": [
          "SECTION INTRO",
          "Handling video in Android",
          "Adding audio in Android App",
          "Adding Volume Rocker",
          "Adding TimeLine",
          "Gridlayout basics",
          "My music app- setting layout",
          "Lets play some music",
          "Learn Spanish Numbers - setting layout",
          "Learn Spanish numbers - final"
        ],
        "Handling JSON, listview and Weather APP": [
          "SECTION INTRO",
          "Display list of 50 states",
          "A reminder app for MOM",
          "Fetching a website part 1",
          "Fetching a website part 2",
          "Volley - fetching a web page",
          "Volley - getting images from web",
          "Getting API JSON request with Volley",
          "Extracting info from JSON",
          "Making a Weather App",
          "Weather App final"
        ],
        "Maps, UserLocation and Adding new Screen/Activity": [
          "Introducing Google Maps",
          "Modifying Map Marker",
          "Wonder App with user location on MAP",
          "Add new activity - Star App",
          "SQLite Database helper for TODO App",
          "Dialog alert to add task",
          "TODO App delete task"
        ],
        "Firebase - Complete Backend solution in detail": [
          "SECTION INTRO",
          "What is Firebase",
          "Exploring Firebase for Android",
          "Setting layout for login System",
          "User registration System",
          "User Login And Logout",
          "Firebase Google Login",
          "Firebase Database - Rock Paper scissor online game",
          "Understanding Firebase Database",
          "Running game on multi users",
          "Setting user registration system to database - UI",
          "Setting user registration system to database - CODE",
          "getting complex user data from database",
          "Firebase image uploader part 1",
          "Firebase image uploader part 2"
        ],
        "Thanks": [
          "Thanks for taking this course"
        ],
        "BONUS - Fun updates": [
          "Detect Internet connection in Android O App"
        ]
      },
      "requirements": [
        "No prerequisites for this course",
        "Basic computer usage is fine",
        "If you do have prior programming experience, that will be helpful but not necessary"
      ],
      "description": "Welcome to complete Android O development with Java and build 10 apps. A one stop course that will walk you through with Android App development concepts. The goal of this course is to make you ready as an Android App developer so that you can make your dream app or can apply as Jr. Android App developer. Also by the end of this course, you will have 10 apps as a portfolio so that it becomes easier for you to appear in top during your interview process.\nHere is a list of apps that you will be building:\n1. Glow bulb Idea App\n2. Snakes and Ladder App\n3. TIC TAC TOE Game\n4. Patatap Clone - Music App\n5. Learn Spanish numbers\n6. Reminder App\n7. Weather App\n8. Mark Wonders on Map App\n9. Todo App\n10. Google Firebase Login\n11. Custom Firebase Image Uploader\nThe estimated total number of Android devices in the hands of consumers, as at December 2014, according to statista, lies north of 1.6 billion. This is a staggering amount, and a very large potential market of users.\nOne great thing about Android development is that one can get started with Android development with Windows, Mac and linux. To push your app in Google Play store you just need a one time fees to Pay. For this course, you can continue without developer account too.\nLearning Android development is a secure investment that new developers should make. Less hurdles, inexpensive setup and within no time, your app is in App store.\nWe have focused a lot on Firebase in this course. Firebase is complete backend solution and is officially supported by Google. Features like sound, GPS, Location, Database, Gallery access is all covered in this course. We will also learn the approach to solve problems by looking at google resource and stack overflow content.\nThere is lot to learn, so let’s get started.",
      "target_audience": [
        "People who are interested in learning Android from scratch",
        "Beginners in Android Development"
      ]
    },
    {
      "title": "Learn iOS8 and Swift App Programming",
      "url": "https://www.udemy.com/course/ios8-and-swift-app-programming-crash-course/",
      "bio": "Be an Expert in latest iPhone iOS8 Programming with Swift & Xcode, SpriteKit, SQLite, HealthKit, SceneKit & OpenGL – ES",
      "objectives": [
        "Learn the fundamentals of Swift, the new programming language from Apple",
        "Become and expert in App development with iOS8",
        "Learn by example by walking you through real live projects step by step",
        "Bonus of additional training lectures in future!"
      ],
      "course_content": {
        "The Swift Primer": [
          "Swift Primer Demo 1 with Source Code",
          "Swift Primer Demo 2 with Source Code",
          "Swift Primer Demo 3 with Source Code",
          "Swift Primer Demo 4",
          "Swift Primer Demo 5 with Source Code",
          "Hello Swift with Source Code"
        ],
        "The Swift Programming Language - Part I": [
          "Introduction",
          "Variables & Constants",
          "Variables and Constants Demo with Source Code",
          "Optionals",
          "Optionals Demo with Source Code",
          "Functions",
          "Functions Demo with Source Code",
          "Arrays and Tuples",
          "Arrays and Tuples Demo with Source Code",
          "Dictionaries",
          "Dictionaries Demo with Source Code",
          "Closures",
          "Closures Demo with Source Code",
          "Assignment Section 1"
        ],
        "The Swift Programming Language - Part II": [
          "Enumerations",
          "Enumeration Demo with Source Code",
          "Overview : Classes and Structures",
          "Properties",
          "Methods",
          "Structures Demo with Source Code",
          "Class Demo with Source Code",
          "Mutators Demo with Source Code",
          "Inheritance Demo with Source Code",
          "Other Swift Topics",
          "Protocols and Subscripts Demo with Source Code",
          "Assignment Section 2"
        ],
        "Setting Up View Layouts in Interface Builder": [
          "AutoLayout, size classes, and constraints",
          "Views and view controllers",
          "Views and view controllers - Demo with Source Code",
          "Dynamic View Demo with Source Code",
          "Segues Overview",
          "Simple segue demo with Source Code",
          "Segueing with data",
          "Data segue demo with Source Code",
          "Assignment Section 3"
        ],
        "Hierarchies of View Controllers": [
          "Model / View / Controller",
          "Setting up a tab bar controller Demo with Source Code",
          "Setting up a navigation controller Demo with Source Code",
          "Tab Bar controllers",
          "Tab bar controller case study with Source Code",
          "Navigation controllers",
          "Navigation controllers case study with Source Code",
          "Combining tab bars and navigation controllers with Source Code",
          "Assignment Section 4"
        ],
        "Table View Controllers": [
          "Table View Overview",
          "Showing Data in a Plain Table View with Source Code",
          "Using the Grouped Table View Style with Source Code",
          "Adding Headers and Footers with Source Code",
          "Responding to Cell Selection",
          "Responding to Cell Selection Demo with Source Code",
          "Deleting and Adding Rows",
          "Deleting Rows Demo with Source Code",
          "Adding Rows Demo with Source Code",
          "Creating Custom Table View Cells",
          "Creating Custom Table View Cells Demo with Source Code",
          "Indexing a Table View",
          "Indexing a Table View Demo with Source Code",
          "Assignment Section 5"
        ],
        "SQlite": [
          "Using Plist",
          "Plist Demo with Source Code",
          "UIAlert Controller",
          "UIAlert Controller Demo with Source Code",
          "SQLite Table Creation",
          "Demo on Table Creation",
          "SQLite Query Syntax",
          "SQLite Query Demo",
          "Types of Table Relationship and writing JOIN querries"
        ],
        "SQLite Part B": [
          "How to use an Objective C Class in a Swift project",
          "SQLite in a Swift project",
          "The Objective-C Model class",
          "Adding the table view controller",
          "Deleting records",
          "Adding records"
        ],
        "SQLite Part C": [
          "Installing and running XAMPP",
          "PHP Basics, Part 1",
          "PHP Basics, Part 2",
          "MySQL Basics",
          "Running a MySQL script file in phpMyAdmin",
          "The insertion PHP script",
          "The selection PHP script",
          "Accessing the PHP Scripts from the iPhone App"
        ],
        "Simple and Complex Threading using NSThread": [
          "Overview of NSOperation and NSOperationQueue",
          "Synchronous operations Demo with Source Code",
          "Asynchronous operations Demo with Source Code",
          "NSBlockOperation, dependencies, cancelling, and the main queue",
          "Queueing Block Operations Demo with Source Code",
          "Setting Dependencies between Operations Demo with Source Code",
          "Canceling Operations and Updating on the Main Queue Demo with Source Code",
          "Grand Central Dispatch, part 1",
          "Grand Central Dispatch, part 2",
          "Dispatching Tasks to a Serial Queue Demo with Source Code",
          "Dispatching Tasks to a Concurrent Queue Demo with Source Code",
          "Dispatch after and Barrier Tasks Demo with Source Code"
        ]
      },
      "requirements": [
        "We assume you have some knowledge of programming"
      ],
      "description": "** New Videos and Updates Added Weekly **\n** Join Now and Get it All at a LOW price! **\n**Comes with a 30 day Money Back Guarantee**\niOS 8 offers amazing new possibilities for iPhone and iPad developers. However, you will need to learn entirely new design and development techniques in order to take full advantage of the new system and APIs.\nIn our brand new iOS 8 and Swift Programming Course our Head Tutor, Rick \"the iGuru\" - will teach you ALL these new techniques, in a complete step by step system.\nThis iOS8 with Swift App Programming Course is designed to involve you in a high degree of training. You will be provided with source codes and assignments along with the lectures so that you get a sound understanding and grip of the concepts you will be learning.\nThis course introduces you to the basics of iOS8 and Swift App development and is a course is for beginners and advanced level coders.\nThis course is designed by seasoned experts and tutors who know exactly how to present the course subjects in a systematic step by step manner.\nAll topics are easy to learn and presented in digestible short 10 to 15 minute videos with real world examples, demos and exercises.\nWe continue to put a TON of time and effort in preparing this course and adding new material every week.\nThis is by far the best and most high quality iPhone Programming Training Video Course that we have released.\nApproximately 25 hours of High Quality Video Training, Source Code, Workbooks and Exercises - taught over 16 sequential Units.\nSection 1 and 2 – The Swift primer along with Swift programming language: variables and constants, types, control structures, arrays and dictionaries, optionals, functions, and enumerations.\nSection 3 – The Swift programming language: structs and classes, stored and calculated properties, property observers, methods.\nSection 4 – Setting up view layouts in Interface Builder, using constraints, Intro to view controllers.\nSection 5 – Hierarchies of view controllers using tab bar and navigation controllers.\nSection 6 – All about table view controllers: standard and custom cells, how to respond to a user tap on a cell, indexing a table view, grouped table views, headers and footers.\nSection 7 – Using SQLite to store structured data in an app.\nSection 8 – Simple threading using NSThread, more complex threading using operations and operation queues, and Grand Central Dispatch.\nSection 9 – Using hardware sensors: accelerometer, gyro-meter, location services, etc.\nSection 10 – Intro to the HealthKit API\n- Upcoming Sections -\nSection 11 – Recording and playing back audio and video, including a discussion of the camera API and taking still photos.\nSection 12 – View drawing, views and layers in detail, core graphics and core animation.\nSection 13 – SpriteKit: a 2D graphics library that incorporates physics.\nSection 14 – SceneKit for iOS: a high level 3D rendering framework, now available to iOS developers.\nSection 15 – Metal: a low level 3D graphics framework that is up to 10 times faster than equivalent OpenGL – ES code.\nSection 16 – Best practices for app design, development, and unit testing.",
      "target_audience": [
        "Beginners and advanced level developers who want to learn the new and trending Swift and iOS8",
        "Anyone who want to learn the basics of coding and building apps"
      ]
    },
    {
      "title": "Build a Beautiful CryptoCurrency App using Ionic",
      "url": "https://www.udemy.com/course/cryptocurrency-app/",
      "bio": "A real hybrid app that works on iOS, Android and Windows Phones. The full process is shown, no details are left out.",
      "objectives": [
        "Create a Full Hybrid App with Ionic",
        "Create an Identity (Logo Design)",
        "Create a Full UI Mockup / Prototype",
        "Retrieve and Format Data from a Public API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Design": [
          "Designing the Logo",
          "Finishing the Logo",
          "Designing the App Navigation",
          "Designing the Coin Listings",
          "Designing the Coin Details",
          "Add Coins UI Design"
        ],
        "Core Development": [
          "Setting up the Development Environment",
          "Creating our First API Call",
          "Structuring the API Call",
          "Designing the Toolbar",
          "Styling the Coin List",
          "Coin Details Template",
          "Coin Chart",
          "Removing Coins",
          "Adding a Loading Controller"
        ],
        "Add Coins Section": [
          "Getting the Coin List",
          "Search & Deployment"
        ],
        "Bonus: App Icon and Splash Screen Design": [
          "Designing the App Launcher Icon",
          "Designing the Splash Screen"
        ]
      },
      "requirements": [
        "Understanding of HTML & CSS",
        "Basic Understanding of Javascript",
        "Have: A code editor such as Visual Studio Code",
        "Have: Adobe Illustrator & Photoshop (Only if interested in following the design videos, otherwise, assets are provided)"
      ],
      "description": "In this course, you're going to follow along as a full stack developer with nearly 2 decades experience creates an app from scratch.\nI'm Gary Simon, and I will be your instructor throughout this course. I've created over 70+ courses for the top online education networks including LinkedIn, Pluralsight and Envato Network.\nI'm sure you've heard of Bitcoin; it's the world's first CryptoCurrency. In the years since Bitcoin was released, there have been over a thousand more competing CryptoCurrencies.\nToday, these CryptoCurrencies are immensely popular. That's why we're going to build an app called Coinful.\nCoinful is an app that allows users to select which CryptoCurrency they want to follow, and it provides them with useful information in a beautiful user interface.\nWhat you will learn\n\nApp creation and development with Ionic 3 & Angular 4+\nUsing Ionic with a public API\nCreate UI Mockups\nImplement UI designs into a real app based on Mockups\nEffective logo design\nWho is this course for?\nAnyone who is interested in the full stack developer process of designing and coding apps.\nWhat should I know before taking this course?\nUnderstanding of HTML and CSS.\nBasic understanding of Javascript.\nBasic understanding of Ionic & Angular is recommended, but not required. Check out my Author Page here at Udemy for free courses regarding these topics!\nWhat software is required?\n\nA code editor\nAdobe Illustrator & Photoshop (If you prefer to follow the design videos)\nAdobe Experience Design (If you prefer to follow the mockup process).\nNote: All project files are included, so you don't have to follow the design videos. The assets will be provided for you to use.\nSo if you're ready to learn, let's get started!",
      "target_audience": [
        "Aspiring App Developers",
        "Aspiring App Designers",
        "Those interested in CryptoCurrency Technology"
      ]
    },
    {
      "title": "TikTok Clone App | iOS 18 & Swift 6 | Firebase | Xcode 16",
      "url": "https://www.udemy.com/course/tiktokcloneapp/",
      "bio": "Tiktok Clone App Swift Firebase Custom Camera iOS",
      "objectives": [
        "To learn how a social media application can be designed at an advanced level and its functional features.",
        "Firebase Database, Storage ve Authentication.",
        "To learn the login, logout and user deletion processes for the user.",
        "Creating Custom Camera with AVFoundation, AVKit.",
        "Creating User Profile.",
        "Fetch the Posts in Feed View",
        "Search the Users",
        "Editing the Profile View"
      ],
      "course_content": {
        "Intro": [
          "TikTok Clone Tutorial"
        ],
        "Auto Layout - Authentication Designs": [
          "Creating the registration screen",
          "Design Sign up view part 1",
          "Design Sign up view part 2",
          "Design Sign In View"
        ],
        "Firebase-Authentication": [
          "Firebase Install and Authentication",
          "Authentication with Firebase - Sign Up new users",
          "Change avatar image with PHPickerController",
          "Uploading photos to Storage",
          "Create an user on Database",
          "Coding practices, create User Api",
          "Coding practices, create Storage Service",
          "Coding practices, create Ref",
          "Sign In codes"
        ],
        "Share Post with Custom camera": [
          "Tab Bar View Controller",
          "Auto Sign In and Log out",
          "Create Capture Custom Camera Button",
          "Setup Camera Session",
          "Flipping Camera to Front",
          "Adjusting Buttons in Custom Camera View",
          "Adjusting Buttons in Custom Camera View part 2",
          "Recording Video Codes",
          "Multiple Videos Recording",
          "Create Animated Capture Button",
          "Timer in Video Recording",
          "Segmented Progress View",
          "Segmented Progress View 2",
          "Discard Button, Delete Last Record",
          "Recorded Clips Count",
          "Get View of Recorded Video",
          "Video Merge Codes",
          "Transfer Merged Clips to Share View",
          "Creating Share View",
          "Add Placeholder to Textfield",
          "Fetch the Thumbnail Image",
          "Share Post Codes"
        ],
        "Home View": [
          "Designing the Home View",
          "Home View Swipe",
          "Singletons - User, Post, SDWebImage",
          "Fetching User Home View",
          "Video Player Home View",
          "New Feed Codes - User id and post id matching",
          "Grouping of Files"
        ],
        "Profile View": [
          "Profile Header View Design",
          "Fetching User Profile View",
          "Fetching Posts Profile View",
          "Show posts on Profile",
          "Go to Detail View when clicking post"
        ],
        "Search Users": [
          "Design People View Controller",
          "Fetch users on cell",
          "Search function method"
        ],
        "Switch Between View Controllers": [
          "Switching from People View to Profile User View",
          "Switching from Profile User View to Detail View",
          "Switching from Home View to Profile User View"
        ],
        "Edit Profile View": [
          "Design Edit Profile View",
          "Change Profile Information",
          "Delete User"
        ]
      },
      "requirements": [
        "You must have one of the Macbook Pro and Air models or install Xcode on your Windows computer",
        "No programming language knowledge is required.",
        "Xcode 13 and later is required."
      ],
      "description": "This course is the only and most comprehensive Recording and Sharing Video course on Udemy. You will learn TikTok Clone Tutorial as you write in Swift Language and Firebase Database;\n\n\n1- A Comprehensive Authentication System.\n\n\n· E-mail Login and Registration Procedures\n\n\n· User deletion (Delete User) operation\n\n\n2- Efficiently model a complex Video Sharing Social Network architecture.\n\n\n· User Profiles (Profile View)\n\n\n· Stream video on home page (Feed)\n\n\n· Creating a custom designed camera (Custom Camera).\n\n\n· Designing Animated Camera Button.\n\n\n· Creating a specially designed Progress View.\n\n\n· Creating a camera timer.\n\n\n· Recording and merging multiple videos (Video Merge).\n\n\n· Play Recording and Stop Recording operations.\n\n\n· Re-Registration process.\n\n\n· Searching for users (Search User).\n\n\n· Editing a profile (Edit Profile).\n\n\nAnd more!\n\n\nThis course is a professional course designed to start with the basics of Swift and use the beginner, intermediate and advanced Swift language to record and share one or more videos using the \"TikTok Clone\" i.e. Animated camera button, timer and progress view. and view all these videos on profiles and home feed. and It is a Social Networking application built using a Real-time database.\n\n\nWith its filtering feature, it provides the ability to search for users and switch to user profiles by switching between pages.\n\n\nWith the profile editing process; User can change their information instantly.\n\n\nIn the profile section, both user information and shared posts are displayed, and they can see the post details by switching between pages.\n\n\nOn the main page, there are user features and transition to user profiles, user's posts and show tab feature.\n\n\nYou should start the course and if you have any questions, you should write to me in the Q&A section and get your answer as soon as possible!",
      "target_audience": [
        "iOS developers of all levels",
        "Those who want to design applications",
        "Entrepreneurs",
        "Those who want to learn Swift programming language"
      ]
    },
    {
      "title": "App Store Success : How To Make Money With Apps",
      "url": "https://www.udemy.com/course/appstore-success/",
      "bio": "App Store Business Tips From A Real iOS & Android App Developer With True App Store Optimization ( ASO ) Experience",
      "objectives": [
        "You Will Understand How To Make Money With Apps",
        "You Will Be Motivated To Have An App Business",
        "You Will Be One Big Step Closer To Financial Freedom"
      ],
      "course_content": {
        "Getting Started The Right Way": [
          "Introduction",
          "Good Information vs Bad Information",
          "To Code Or Not To Code",
          "This Is Real Work"
        ],
        "The App Stores": [
          "Introduction",
          "Apple App Store",
          "Google Play",
          "Amazon App Store"
        ],
        "The App Developer Mindset": [
          "Introduction",
          "Try Everything",
          "App Ideas",
          "This Will Be Rough"
        ],
        "Coding Apps Yourself": [
          "Streamline Everything",
          "Do Small Apps",
          "Buy A Comfy Chair"
        ],
        "Hiring A Coder": [
          "Where To Find Them",
          "How To Test Them",
          "Greedy Developers"
        ],
        "App Ideas": [
          "Study The Stores",
          "Write Down Ideas",
          "Always Start Small"
        ],
        "Finding A Niche": [
          "App Categories",
          "Consumer vs Business",
          "Once Found, Move Fast"
        ],
        "Promo Materials": [
          "App Icon",
          "Screenshots",
          "App Description"
        ],
        "Pricing Your App": [
          "Paid/Free",
          "Freemium/Subscription",
          "What Worked For Me"
        ],
        "Finding Users": [
          "Organic Growth With Keywords (ASO)",
          "Paid Advertising",
          "Social Media"
        ]
      },
      "requirements": [
        "Be Willing To Take This Journey Towards True Financial Freedom",
        "Have Positive Energy & Be Willing To Work",
        "Access To The Internet To Watch Videos",
        "10-15 Minutes A Day To Watch Course Videos"
      ],
      "description": "Do you love mobile apps? Do you have an app idea? Do you want to make lots of money with your apps?\nIf you answered Yes to any of these then App Store Success by Nosakhare Ogbebor is the course for you! This course also answers the question, \"I just made an app, now what?!\"\nMy name is Nosa. I have been making mobile apps for 5 years and have been profitable since mid 2012.\nI have done it all, from coding apps myself, hiring other people to code for me, making money on iPhone, making money on Android, making money on Amazon and even the Windows Store ( RIP lol! )\n\nThis course is designed for anyone interested in making money with apps! Even if you already have an app business, this information will supercharge your app business!\n\nThis is the only App Related Course taught by an actual app entrepreneur who makes a living 100% from releasing apps on Google Play, Apples App Store and Amazon's App Store.\n\nI know what it's like to want to make money with apps and not know where to start because that was me a few years ago! I read every article I could find, every book I could find and even with that I struggled to make money with apps. In this course, I will teach you everything I know from years of trial and error! This course is 100% Good Information and 0% Fluff! Hard Work + This Course Will Get You Way Closer To Making Money With Apps! You Just Have To Give It All You Got!\n\nMoney Back Guarantee:\n\nIf This Course Doesn't Help Get Your App Business Off Of The Ground or Reenergize Your App Business Then You Have 30 Days To Return It! But Trust Me, Once You Get A Taste Of This Pure Information, You Will Be Hooked! There Is Really Nothing Like It Out There!",
      "target_audience": [
        "Appreneurs",
        "Entrepreneurs",
        "App Developers",
        "Anyone Interested In Making A Living From Apps",
        "Udemy Students And Anyone Who Loves Apps!"
      ]
    },
    {
      "title": "Develop a WebView android app for your website from scratch",
      "url": "https://www.udemy.com/course/develop-a-webview-android-app-for-your-website-from-scratch-/",
      "bio": "Complete edition course to turn your website into an eye catchy android WebView App, next day you complete the course.",
      "objectives": [
        "Will be able to make apps for any website.",
        "Will learn to sent push notifications.",
        "Will get the high quality lectures."
      ],
      "course_content": {
        "Getting started with our course.": [
          "Course overview",
          "What is a Webview App ?",
          "Before we start the course.",
          "Registering for a developer account in google play.",
          "Section 1 Checklist"
        ],
        "Lets start from the scratch.": [
          "Downloading and setting up Android Studio Part 1.",
          "Downloading and Setting up Android Studio Part 2",
          "Starting with the app project.",
          "Adding the icon to the app",
          "Setting up a virtual device to check the app.",
          "Integrating Genymotion to Android studio to test the App",
          "Section 2 Checklist",
          "Quiz"
        ],
        "Making the app fully fledged": [
          "Code Lines Part One",
          "Building The App Part One",
          "Code Lines Part Two",
          "Building The App Part Two",
          "Building the A.P.K to upload to Play Store",
          "Uploading the APK",
          "Section 3 Checklist",
          "Quiz 2"
        ],
        "Push notification features. To let your users get updates.": [
          "Setting up push notification environment.",
          "Parse Overview",
          "Push Notification Codelines",
          "Adding Code lines for push Notification"
        ],
        "Updating your app .": [
          "Updating The App After adding the Push notification.",
          "Game on ! Lets send push notification."
        ],
        "Conclusion": [
          "Quick Recap...",
          "Before you go....."
        ]
      },
      "requirements": [
        "Just a desire to make apps.",
        "And some software which is free to download."
      ],
      "description": "Latest update : - On April-2016\nPrice is going to rise from 20 to 50 on May 1\nHurry Up !\nReach more costemers through a mobile app !\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nHi\nThanks for stopping by !\nLet me tell you something about the course.\nThis flash course will take you through the short and easy process of turning your Wordpress (or non-Wordpress) website into a downloadable Android app.\nWhat is a WebView app?\nA WebView app is a native app which anyone can download from the app stores and install on their devices. The term \"WebView\" means that the app will open a viewer window which shows your website content in it.\nWhy creating an app for my website?\nYou know there are thousands of websites out there for any niche you can think of. So having an app for your website will help you boost the things follows.\nStand out from the competitors\nWill help to improve your user engagement\nBuild brand and recognition.\nCreate direct marketing channel.\nYou will be visible to your users all the time.\nImagine this if a user wants to open your website into his/her mobile device. Then he wants to open up his browser and have to type in your web address to reach you.\nNow imagine if you have an app then he can just reach out to by a single tap on the icon of your app.\nBy offering them a downloadable app which will immediately send them to your website - you help them reach you faster and more easily - all they have to do is to click on your app icon!\nPlus, this will help your brand - imagine that your website icon will be in front of your readers' eyes everytime they open their mobile devices (and we both know how many time that happens everyday).\nPS :- Why not making things easier for them?\nWill i have to update my website in 2 places?\nNo\nThe WebView app you will create, acts like a mirror- it takes your website as-is and shows it in the app window. Because of that, it's always up-to-date, so whenever you add a post, change a page, update your layour or add products - everything will also be immediately updated in the app.\nWhat else will my app do?\nThat's maybe the most important part - you will learn how to add a push notifications feature, so whenever you update a post, a product or just want to announce something - you can send a push notification to all your app users and let them know immediately what's new. This is a great way to keep your users and readers updated and keep your brand in their heads all the time.\nIn addition, you will learn how to implement Admob in your app, so you can monetize your app. Please note that you cannot use Adsense ads in a Webview app - you will have to use Admob. More details about this is the \"Showing Ads In Your App\" section.\nI have no idea how to program, code or create apps. Is this course for me?\nAbsolutely.\nI'm not a programmer myself. I build websites for a living and i was looking for the easiest and fastest way to turn my Wordpress websites into real downloadable apps. I wouldn't create this flash course if the process wasn't easy to follow and quick to achieve - as i wouldn't learn it myself.\nIf you have a website - you can have a Webview app within a few hours.\nAre there any hidden fees?\nYou will have to register as an Android developer. Anyone who wants to publish apps in Google Play Store must register as a developer. The process is easy and it costs a one-time fee of 25$. Please note that this fee is mandatory to whoever wants to publish apps and it has nothing to do with this course - meaning - i'm not affiliated with this service and you'd probably have to pay this fee if you'd create an app with other courses or platforms as well. The 25$ fee is for creating as many apps as you want! So you only have to pay it once.\nWhat exactly will i learn in this flash course?\nFirst, you'll learn how to sign up for an Android developer account.\nThen, you will download Android Studio - which is the program we will work with. It is free to use and can be installed on PC and Mac.\nNext you will create the app and configure it.\nThe next step would be to add very little code lines to your app - again, don't worry if you're not a programmer. It's really easy!\nAfter that you will learn how to add the push notifications feature. This process includes registering to a push service (for free) and adding a few more code lines.\nNext, you will learn how to monetize your app with Admob - Google's mobile ads service.\nThe last step would be to publish your app, obviously!\nIt may take some time until your app will be available in the store, so while waiting - you will learn how you can turn your Wordpress website into a responsive website (if it's not responsive already).\nThat's it ! Join this course and publish your webview app within hours.",
      "target_audience": [
        "Website owners who want to send fast and immediate notifications to your readers and customers",
        "Bloggers who want to engage their readers .",
        "Freelancers who want to make and sell the app for the customers."
      ]
    },
    {
      "title": "tvOS & Swift 2 - Apple TV Development Guide",
      "url": "https://www.udemy.com/course/tvos-apple-tv/",
      "bio": "A Complete Beginners Guide to tvOS Apple TV Development using Swift 2",
      "objectives": [
        "Create there own tvOS Application",
        "Full understanding of Xcode 7 and all it has to offer",
        "Full explanation of all objects and functions within tvOS development",
        "Develop in Swift 2",
        "Start a new career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting To Grips With tvOS": [
          "Purchasing a Developer Licence",
          "Download and Installing Xcode 7",
          "Create, Download and Install Certificates",
          "Creating an App ID",
          "tvOS Project Types, What's Best For Me?",
          "What are Classes, InfoPLists and Delegates?",
          "Using the tvOS Interface Builder",
          "Viewable tvOS Interface builder",
          "Building on the tvOS Simulator",
          "Building to a Real tvOS Device",
          "Creating and Using Variables",
          "Creating and Populating Arrays",
          "Creating and Triggering Functions",
          "Creating Actions and Outlets",
          "End of Section 1 Quiz"
        ],
        "Understanding tvOS Functions": [
          "Section 2 Introduction",
          "tvOS App 1: Creating a Hello World Application",
          "Displaying Text",
          "Using UITextFields",
          "Changing Text Properties",
          "Displaying External Custom Fonts",
          "Using If Statements",
          "Creating NSTimers Counters",
          "Displaying the Time and Date",
          "tvOS App 2: Traffic Lights - Reaction Game Part 1",
          "tvOS App 2: Traffic Lights - Reaction Game Part 2",
          "Fading Objects In and Out",
          "Hiding and Revealing Objects",
          "Enabling and Disabling Objects",
          "tvOS App 3: Tap Me Fast - Tapping Game",
          "Creating a Random Number Generator",
          "Creating a Random Word Generator",
          "tvOS App 4: Yo Momma Jokes - Joke Generator",
          "End of Section 2 Quiz"
        ],
        "Creating tvOS Actions": [
          "Section 3 Introduction",
          "Using UISegmentedControls",
          "tvOS App 5: Digital Clock Application",
          "Displaying UIActionSheets",
          "tvOS App 6: Temperature Conversion Calculator",
          "Triggering and Using Delayed Actions",
          "tvOS App 7: Calculator Application",
          "End of Section 3 Quiz"
        ],
        "Getting A Good View In tvOS": [
          "Section 4 Introduction",
          "Displaying UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Switching Views in Storyboards",
          "Switching to a XIB View",
          "End of Section 4 Quiz"
        ],
        "Making The tvOS App Look And Sound Clean": [
          "Section 5 Introduction",
          "Importing Files",
          "Displaying Images",
          "Changing Images - Mini Image Gallery",
          "Adding Images To Buttons",
          "Focused Custom Image Buttons",
          "Displaying Images From URL'S",
          "tvOS App 8: Snap Attack Game",
          "Changing the Background Colour",
          "Displaying and Playing Animations",
          "Adding Styling Options to Objects",
          "tvOS App 9: Image Gallery - Creating the Collection View Part 1",
          "tvOS App 9: Image Gallery - Focused Image Cells Image Part 2",
          "tvOS App 9: Image Gallery - Displaying the Detailed Image Part 3",
          "Creating App Icons Layers",
          "Adding App Icon Layers",
          "Creating and Displaying a Top Shelf Image",
          "Creating and Displaying a Loading Screen",
          "Playing a Local Sound File",
          "tvOS App 10: Animal Soundboard Application",
          "Playing a Local Video File",
          "Streaming a Video File",
          "End of Section 5 Quiz"
        ],
        "Creating A tvOS Table View Application": [
          "Section 6 Introduction",
          "tvOS App 11: Table View - Populating a Table View Part 1",
          "tvOS App 11: Table View - Pushing to a Detail View Part 2",
          "tvOS App 11: Table View - Populating a Detail View Part 3",
          "tvOS App 11: Table View - Image Gallery Part 4",
          "tvOS App 11: Table View - Customising The Table View Part 5",
          "End of Section 6 Quiz"
        ],
        "Creating A tvOS Tab Bar Application": [
          "Section 7 Introduction",
          "tvOS App 12: Tab Bar Application - Set Up Part 1",
          "tvOS App 12: Tab Bar Application - Adding Table Views Part 2",
          "tvOS App 12: Tab Bar Application - Fixed Tab Headers Part 3",
          "tvOS App 12: Tab Bar Application - Customising The Tab Bar Part 4",
          "End of Section 7 Quiz"
        ],
        "Core Data - Creating tvOS Databases": [
          "Section 8 Introduction",
          "tvOS App 13: Database - Creating a Database Part 1",
          "tvOS App 13: Database - Adding Data Part 2",
          "tvOS App 13: Database - Editing Data Part 3",
          "tvOS App 13: Database - Deleting Data Part 4",
          "End of Section 8 Quiz"
        ],
        "Submitting And Publishing Your tvOS App!": [
          "Section 9 Introduction",
          "Preparing your App for Submission",
          "Uploading your App to the App Store",
          "You Did It!"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 7"
      ],
      "description": "Do You Want To Create Your Own tvOS application for the new Apple TV but are not sure where to start? Are you ready to jump right into the exciting world of tvOS application development but have little or no programming experience? Then this is your course\nThis tvOS & Swift 2 - Apple TV Development Guide will give you everything your need to start your new career in tvOS development, The course has been carefully structured to support Swift 2 & tvOS, Teaching you all you need to know from creating your first project to submitting to the AppStore.\nCreate 13 Real tvOS Applications throughout the course we will create exciting tvOS applications from fun and simple games to powerful utility apps using the native features of the tvOS Apple TV device to help you understand the process of creating applications from start to finish.\nWith the brand new tvOS Apple TV App Store you can sell Your Applications to Millions of Potential Users around the world and now has never been a better time with only a few thousand apps currently for sale on Apple TV, you can take the charts by storm.\nNot only do you get the best online tvOS development course online but You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new tvOS career!\n\nWhy Choose This tvOS & Swift 2 Course?\n\nMany programmers learning to create there first tvOS application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions then they asked! This tvOS & Swift 2 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 7 or tvOS and i offer any advice needed. Before you know it you will have created your very first tvOS app and will feel like everything you have learned has embedded in your head.\nTopics Covered:\n\nUnderstanding Xcode 7, tvOS, Interface Builder, tvOS Simulator, tvOS Remote and Different tvOS Project Types\nSwift 2: Get to know the new updated language\nCreate 13 real tvOS applications in Swift 2\nAll Objects, Actions and Outlets possible in tvOS App Development\ntvOS Focused Engine\ntvOS Native Application Controls\ntvOS Storyboards and nib File support\nImages and Sounds Integration\nFull Featured tvOS Apps\nFun and Simple tvOS Games\nCore Data tvOS Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop tvOS apps",
        "Anyone who wants to learn how to code in Swift 2",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from tvOS Apps"
      ]
    },
    {
      "title": "Learn iPad Development and Advanced iOS Programming",
      "url": "https://www.udemy.com/course/learn-ipad-development-and-advanced-ios-programming/",
      "bio": "Master advance iOS concepts like OpenGLES, GCD, Motion Sensors and Animation",
      "objectives": [
        "To Learn iPad Programming",
        "To study and understand advance objective C concepts",
        "To learn APIs like Motion Sensors and Location Sensors",
        "To master openGL-ES"
      ],
      "course_content": {
        "Objective C - Advance Concepts": [
          "Introduction",
          "Struct Review Discussion",
          "Structs Demo",
          "Struct Properties Demo",
          "Blocks Discussion",
          "Blocks Demo",
          "UIBlocking Demo",
          "Simple Threading Demo"
        ],
        "Grand Central Dispatch and NSOperation": [
          "GCD Discussion",
          "Dispatch Test",
          "Mutex",
          "NSOperation",
          "NSOperation Queue - Discussion",
          "NSOperation - Demo",
          "NSOperation Queue - Demo",
          "Block Operation"
        ],
        "Motion and Sensors": [
          "Shake Demo",
          "Core Motion Discussion",
          "Core Motion Demo 1",
          "Core Motion Demo 2",
          "Core Location - Standard Service",
          "Core Location - The significant service change"
        ],
        "Animation": [
          "Basic View Animation",
          "UIKit Animation Discussion",
          "UIKit Animation Demo 1",
          "UIKit Animation Demo 2",
          "UIKit Animation Demo 3",
          "Core Animation Discussion",
          "CA Demo 1",
          "CA Demo 2",
          "CA Demo 3",
          "CA Transform Discussion",
          "CA Transform Demo 1",
          "CA Transform Demo 2"
        ],
        "OpenGL-ES": [
          "Open GLES Discussion 1",
          "GLES Demo 1",
          "Open GLES Shaders",
          "GLES Demo 2",
          "GLES Demo 3",
          "Open GLES Translation",
          "GLES Demo 4",
          "Open GLES Matrix Transformation",
          "GLES Demo 5",
          "GLES Demo 6",
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "A Mac Computer"
      ],
      "description": "The course is for advance programmers who already know the basic iOS programming. It is the most advance iOS course on the web and we cover the most difficult of the APIs by picking concepts hidden in the iOS development manuals. We have work hard to create lectures which break down the seemingly complex topics in easy to understand modules and can be easily assimilated by the student. In this unique offering we bring together both the iPad Development and the other iOS APIs together in a course and after completing it there will be nothing you cannot develop on iOS. You will start with advance concepts of Objective C and it will be followed by sections on NSOperation, Grand Central Dispatch, Motion Sensors, Animation and OpenGL ES. If you are new to iOS you can try our beginners course here\nhttps://www.udemy.com/learn-ios-programming-from-scratch/\nThose who are already know the basic concepts can get started with the real deal.\nEnjoy!!\n> Eduonix Official Website\n> Eduonix Blog\n> Like Us on Facebook\n> Twitter",
      "target_audience": [
        "Anyone with basic knowledge of iOS Programming"
      ]
    },
    {
      "title": "Android - Make a Professional Dictionary App from Scratch",
      "url": "https://www.udemy.com/course/android-make-a-professional-dictionary-app-from-scratch/",
      "bio": "A Complete Project Based Android App Development Course to Build a Professional English Dictionary from Scratch.",
      "objectives": [
        "Build a Professional Android App to Include on the Portfolio",
        "Learn AsyncTask to Do Work in The Background",
        "Incorporating External SQLite Database",
        "Making ListView with RecyclerView and CardView"
      ],
      "course_content": {
        "Welcome and Quick Course Overview": [
          "Welcome and Quick Course Overview"
        ],
        "Designing The User Interface": [
          "Starting a new Project and adding menu",
          "Designing The MainActivity",
          "Designing The WordMeaningActivity",
          "Adding Fragments to the WordrdMeaningActivity",
          "Creating ViewPagerAdapter and Running the App on the Emulator",
          "Creating Settings Activity"
        ],
        "Working with Database": [
          "Adding Database to The Project",
          "Creating Database Helper Class",
          "Creating Async Task for Copying Database in The Background"
        ],
        "Adding Suggestions to The SearchView": [
          "Adding Suggestions to The SearchView Part-1",
          "Adding Suggestions to The SearchView Part-2",
          "Finishing Up The WordMeaning Activity"
        ],
        "Adding History to The MainActivity": [
          "Adding RecyclerView and Creating a History Class",
          "Creating a RecyclerView Adapter",
          "Adding the RecyclerView to The MainActivity",
          "Adding Clear History and Running the App",
          "Modifying The History List",
          "Adding Share Word Option from Other Apps"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basics of Java Programming",
        "Basics of Android App Development",
        "We will be using the Android Studio all the time. Have it configured"
      ],
      "description": "The Best Way to Learn App Development is Through Making One.\nAnd that is exactly what we are going to do in this course.\nThis course is Completely Project Based.\nFrom creating a project in Android Studio to the Complete Application. All in a little over 1 hour.\n\nA REAL Life Professional and Play Store Ready App.\nA Professional and Modern APPLICATION not just something for learning with a sloppy User Interface.\nIn this course, you will learn how to build a Professional English Dictionary App.\n\n\nDo you have the basics of android app development down and want to take the next step?\nAre you an Android developer who wants to upgrade your Android skill?\nOr you want to build a beautiful App?\nThis is THE COURSE for you.\nWith only a few hours of content, this course will CHANGE your Android skill.\nDon’t wait and enroll today. I hope to see you in my course!",
      "target_audience": [
        "Anyone who know the basics of android app development and want to take the next step",
        "Anyone who wants to Build a Professional Looking Play Store Ready App",
        "It is NOT for people without any programming experience",
        "It is NOT for people who want to learn the basics of android development"
      ]
    },
    {
      "title": "Complete Guide to Android UI Design, Styles & Animations",
      "url": "https://www.udemy.com/course/complete-guide-to-android-ui-design-styles-animations/",
      "bio": "Enhance Android UI Design by implementing application styles and themes, the Material Design library, and animations",
      "objectives": [
        "Use the latest Android Material Design system to build beautiful UIs for your applications",
        "Implement app bars, buttons, and other active elements with material components",
        "Express motion details with animations and transitions",
        "Understand material design and implement widgets with material style",
        "Achieve version-specific styles and backward compatibility",
        "Build a design language that you can apply to multiple apps, or that many developers working on an app can implement for a consistent look and feel",
        "Learn to use frame animations (aka drawable animations) to make your applications dynamic",
        "Animate anything and everything using property animations",
        "Use transitions frameworks and scene transitions across activities"
      ],
      "course_content": {
        "Hands-On Android Material Design": [
          "The Course Overview",
          "Setup Your Project for Material Design",
          "Explore Material Design Icons and Colors",
          "Exploring and Customizing Themes",
          "Exploring CoordinatorLayout",
          "Create and customize Your Toolbar as App Bar",
          "Add and Customize a Pop-Up Menu in the Toolbar",
          "Add an Up Button to Your Toolbar",
          "Implementing Action Views and Action Providers",
          "Implementing the Collapsing Toolbar",
          "Customizing the Collapsing Toolbar",
          "Implementing the SnackBar",
          "Customizing the SnackBar",
          "Implementing Bottom Navigation",
          "Customizing Bottom Navigation",
          "Implementing Navigation Drawer",
          "Display the Navigation Drawer",
          "Handling the Navigation Drawer Events",
          "Implementing Tab Layouts",
          "Implementing Tab Layouts Programmatically",
          "Implementing The RecyclerView",
          "Display The RecyclerView",
          "Implement a List in the RecyclerView",
          "Add Click Events to the RecyclerView",
          "Implementing and Customizing Your CardView",
          "Add a ClickListener to Your CardView",
          "Implement CardView in the RecyclerView",
          "Implement CollapsingToolbarLayout with CardView and RecyclerView",
          "Customize Buttons with Material Design",
          "Implementing Floating Action Button",
          "Implementing Bottom App Bar with Floating Button",
          "Implementing Selection Controls",
          "Implementing Chips",
          "Creating Text Fields",
          "Implementing Progress Bars",
          "Implementing Tooltips",
          "Implementing Sliders",
          "Implementing Dialogs - Alert and Confirmation",
          "Customize Dialogs - Alert and Confirmation",
          "Implementing Dialogs - Date and Time Pickers",
          "Implementing Bottom Sheets",
          "Implementing Full-Screen Dialogs",
          "Implementing ViewPager",
          "Implementing Image Slideshow",
          "Customizing the Image Slideshow",
          "Implementing Swipe Refresh Layout",
          "Customizing Swipe Refresh Layout",
          "Explore Screen Compatibility",
          "Explore ConstraintSet",
          "Creating Animations – Ripple Effect",
          "Exploring Transition – Shared Element, and Circular Effect",
          "Exploring Transition – Slide, Explode, Fade, and overlap Effects",
          "Explore AnimationDrawable",
          "Explore Spring and Fling Movement",
          "Test your knowledge"
        ],
        "Hands-On Android Application Components: Styles and Themes": [
          "The Course Overview",
          "Responsive design",
          "Exploring Material Design",
          "Grasping more on Material design",
          "Material Components",
          "Environment in Material Design",
          "Getting Started with Styles and Themes",
          "Styling an application",
          "Creating Style and Theme",
          "Color State List",
          "State List Drawable",
          "Exploring Attributes",
          "Using the Material Theme",
          "Using the AppCompat Theme",
          "Inheritance in Styles and Themes",
          "Using ThemeOverlay",
          "Android Studio Theme Editor",
          "Branding",
          "Colors in Material Design",
          "Color Tools",
          "Icons",
          "Vector Drawable",
          "Version-Specific Styles",
          "DayNight Theme",
          "Custom View and Custom Attributes",
          "AndroidX",
          "Test your knowledge"
        ],
        "Hands-On Android Animations": [
          "The Course Overview",
          "Introduction to Android Animation",
          "Android Studio Setup to Get Started",
          "Understanding Property Animations",
          "Knowing the Types of Property Animations",
          "Applying Property Animation Using XML",
          "Listening to Events During Animation",
          "Applying Property Animation Using Code",
          "Introduction to Choreographing Animations",
          "Using Sets in XML",
          "Using Sets in Code",
          "Implementing Interpolators",
          "ViewPropertyAnimator versus PropertyValuesHolder",
          "Summary",
          "Understanding Animation Drawables",
          "Animating Vector Drawable",
          "Understanding AnimatedVectorDrawables",
          "Using AnimatedVectorDrawables - I",
          "Using AnimatedVectorDrawables - II",
          "Working on Backward Compatibility",
          "Understanding Transitions",
          "Animating Between Views and Layouts",
          "Using TransitionSet for Multiple Transition",
          "Apply Transition from Code",
          "Implementing Transition Without Scenes",
          "Implementing Activity Transition",
          "Using ConstraintLayout and ConstraintSet for KeyFrame Animation",
          "Applying Animation to RecyclerView: Open-Source Library",
          "ViewPager Animation: Using Open-Source Code",
          "Exploring Physics-Based Animation: Fling Animation",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Prior knowledge of Java and Kotlin will be beneficial."
      ],
      "description": "Material Design is a visual language developed by Google that brings new attractive ways for a user to interact with apps. Enhance UIs to create dynamic and responsive Android applications with consistent styles and appropriate themes. Add animations to your Android apps to make user experience more dynamic, fun, and effective. If you’re an Android developer who wants to give a seamless experience to users by implementing these features into your apps to make it visually beautiful, then go for this course.\nThis course is a practical guide to applying the latest Material Design 2 specifications into your application development. Ranging from creating realistic visual cues to give meaning to your UI using motion and animations, you will make your application more engaging and useful for your users. You will learn the best practices of material design, colors, styles, and themes to build attractive, user-friendly, and responsive applications with backward compatibility. You will also learn different types of animations that can be applied to different app scenarios to make your apps more dynamic.\nBy the end of this course, you will be able to create visually beautiful UI/UX for your Android apps by implementing Material design specifications and animations into your Android applications.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nMona Vafatabar is an energetic mobile developer with 4+ years of robust code experience in Java-Android and iOS. She enjoys every minute spent developing apps on her computer. There is always something new to learn so what she loves the most is being challenged and sharing her experience. Currently, Mona is working as a freelance software developer and is a proud online trainer. Apart from this, she loves to travel, explore new places, and read books.\nEhsan Mashhadi is an experienced mobile developer with 5+ years of experience in Java, Kotlin, and Swift. He loves his work and is always passionate to learn new things. He loves challenges, and always tries to do his job better, faster, and without bugs. Currently, he is working as a team lead developer and freelance technical author. Outside of his technical life, he loves food, trips, and movies.\nAnnapurna Agrawal is an Android developer. She has also tried her hand at JavaScript, Kotlin, PHP, jQuery, CSS, and HTML. She is a software engineer from India and likes teaching. She is a trainer in the Google Developers Group at Bhubaneswar, Odisha in India. Besides all this, she practices yoga and meditation, YouTubing, and hanging out with friends.",
      "target_audience": [
        "This course is for Android developers and anyone who wants to create material applications. UI/UX designers who wish to develop Android applications by applying material design specifications, use styling features and animations in android apps can also take up this course."
      ]
    },
    {
      "title": "Build Real-Time Chat App with SwiftUI & Firebase",
      "url": "https://www.udemy.com/course/build-real-time-chat-app-with-swiftui-firebase/",
      "bio": "Create a Robust Chat Application with SwiftUI & Firebase - Learn the Fundamentals and Best Practices",
      "objectives": [
        "How to use SwiftUI to build user interfaces for iOS apps",
        "How to set up a Firebase project and configure authentication",
        "How to build a real-time database using Firebase",
        "How to send and receive messages in real-time using Firebase's database",
        "How to create and join chat rooms within the app",
        "How to store and retrieve media files like images, videos, and audio files using Firebase's storage",
        "How to manage real-time data synchronization and storage with Firebase's Firestore"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Setting Up Firebase": [
          "Creating Project on Firebase Console",
          "Integrating Firebase into an iOS App",
          "Initializing Firebase"
        ],
        "Authentication": [
          "Signing Up User",
          "Updating Display Name",
          "Update Display Name in Model",
          "Authenticating User"
        ],
        "Groups and Navigation": [
          "Structuring the App Using MainView",
          "AppState and Navigation",
          "FIX - Going to LoginView After Successful SignUp",
          "Building Add Groups User Interface",
          "Adding Group to Firestore Database",
          "Resource: Map Cloud Firestore data with Swift Codable",
          "Fixing Scene Configuration Warning",
          "Displaying Groups"
        ],
        "Chat Messages": [
          "Saving Chat Message to a Group",
          "Adding Chat Message Struct",
          "Listen for Chat Messages",
          "Displaying Chat Messages"
        ],
        "Chat Bubbles and Overlays": [
          "Chat Bubble Implementation Part 1",
          "Chat Bubble Implementation Part 2",
          "Auto Scrolling to Latest Messages"
        ],
        "User Profile": [
          "Creating the Interface",
          "Implementing ImagePicker",
          "Using ImagePicker",
          "Resizing Images",
          "Resource: Resizing Images in Swift",
          "Uploading Image to Firebase Storage",
          "Update Display Name & All User Messages"
        ],
        "Improving User Interface": [
          "Adding Photos with Chat Messages",
          "Implementing ChatMessageInputView",
          "Developing the User Interface for Selecting Photos",
          "Uploading Photos to Firebase Storage and Inserting Photos in Chat Messages",
          "Previewing Image",
          "Displaying Attachment in Messages List"
        ],
        "ErrorView & LoadingView": [
          "Implementing & Displaying LoadingView",
          "Implementing & Displaying ErrorView"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Some prior experience with Swift programming language",
        "Familiarity with iOS app development",
        "Basic knowledge of Xcode",
        "Understanding of fundamental programming concepts like variables, functions, and data types",
        "Familiarity with building user interfaces using SwiftUI is helpful, but not required"
      ],
      "description": "Welcome to \"Build Real-Time Chat App with SwiftUI & Firebase\" - the ultimate course for anyone who wants to create a fully functional chat application from scratch!\nIn this course, you will learn how to use SwiftUI, the modern framework for building user interfaces, and Firebase, a cloud-based platform for building web and mobile applications, to create a real-time chat app.\nWe will start by exploring the fundamentals of SwiftUI, including views, layouts, and navigation, and then dive into Firebase, where we will learn how to set up a Firebase project, configure authentication, and build a real-time database.\nOnce we have a solid foundation, we will build the core features of our chat app, such as sending and receiving messages, creating and joining chat rooms.\nThroughout the course, you will learn best practices for building scalable, performant, and secure applications, and gain valuable experience working with SwiftUI and Firebase.\nIn addition, we will cover Firebase Authentication, Firebase Storage, and Firebase Firestore. With Firebase Authentication, you will learn how to authenticate users and secure access to your app. Firebase Storage will teach you how to store and retrieve media files like images in the cloud. And Firebase Firestore will help you manage real-time data synchronization and storage with ease.\nBy the end of this course, you will have a comprehensive understanding of how to leverage Firebase's powerful features to create a robust and fully functional real-time chat application. So, enroll now and take the first step towards becoming a proficient app developer!\n\n\nWhat will students learn in this course:\n\n\nHow to use SwiftUI to build user interfaces for iOS apps\nHow to set up a Firebase project and configure authentication\nHow to build a real-time database using Firebase\nHow to send and receive messages in real-time using Firebase's database\nHow to create and join chat rooms within the app\nBest practices for building scalable and performant apps\nHow to leverage Firebase's features, including authentication, storage, and Firestore\nHow to store and retrieve media files like images, videos, and audio files using Firebase's storage\nHow to manage real-time data synchronization and storage with Firebase's Firestore\n\n\nWho is this course for:\n\n\nAnyone who wants to learn how to build a real-time chat application\nBeginner developers with no prior experience in app development\nExperienced developers looking to expand their skills with SwiftUI and Firebase\nIndividuals interested in building modern, scalable, and secure chat applications\nPeople who want to learn how to leverage the powerful features of Firebase, including authentication, storage, and Firestore\nThose who want to learn best practices for building performant and scalable applications\nIndividuals who want to gain practical experience working with SwiftUI and Firebase in a hands-on project-based course.",
      "target_audience": [
        "Anyone who wants to learn how to build a real-time chat application",
        "Experienced developers looking to expand their skills with SwiftUI and Firebase",
        "Individuals interested in building modern, scalable, and secure chat applications",
        "People who want to learn how to leverage the powerful features of Firebase, including authentication, storage, and Firestore",
        "Those who want to learn best practices for building performant and scalable applications",
        "Individuals who want to gain practical experience working with SwiftUI and Firebase in a hands-on project-based course."
      ]
    },
    {
      "title": "Flutter වලින් mobile apps නිර්මාණය - Sinhala Flutter Course",
      "url": "https://www.udemy.com/course/flutter-in-sinhala/",
      "bio": "Flutter ගැන මුල සිට සරලව සිංහලෙන් ඉගෙන ගන්න පුළුවන් එකම තැන!",
      "objectives": [
        "Basics of Flutter and Dart",
        "Create stunning UIs with responsive layouts",
        "Navigate between pages and sharing data using State Management strategies",
        "BLoC pattern to communicate between the business logic and the UIs",
        "Integrating Firebase to your Flutter mobile app",
        "Create a full functioning app and publish it to App Store and Play Store"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge about programming.",
        "Eagerness to read documentation and learn.",
        "Ability to practice outside of the course and get more experience."
      ],
      "description": "අපි මේ පාඨමාලාවේදී Flutter නම් cross-platform app development framework එක ගැන මුල සිට කතා කරනවා.\n\n\n2023 දී 46% ට වැඩි පිරිසක් භාවිතා කරන cross-platform app development framework එක ලෙස නම් Flutter නම් කෙරුණු අතර දැනට ඉතා සීඝ්‍රයෙන් ප්‍රචලිත වෙමින් ඇත. මාගේ අදහස නම්, බහුතරයක් mobile apps නිර්මාණයට flutter භාවිතා වන නිසා, flutter දැනුම ඇති developers ලා හට වැඩි ඉල්ලුමක් ලැබිය හැකි බවයි!\n\n\nමේ පාඨමාලාවේදී flutter framework එකට අමතරව Firebase ගැනත්, Flutter app එකකට firebase connect කරන හැටි ගැනත් දැන ගන්න පුළුවන්.  ඒ වගේම State Management වැනි සංකීර්ණ සංකල්ප ගැනත් සරලව පැහැදිලි කරනවා. ඒ නිසා, Flutter ගැන කිසිම දැනුමක් නැති කෙනෙකුට වුවත් ඉතා පහසුවෙන් තේරුම් ගැනීමට හැකි වන අයුරින් මේ පාඨමාලාව නිර්මාණය කර තිබෙනවා.\n\n\nඔබ මෙම පාඨමාලාවෙන් ඉගෙන ගනු ලබන්නේ:\nFlutter හි මූලික කරුණු: අපි Flutter හි මූලික සංකල්ප, එනම් Widgets (Flutter UI හි building blocks), responsive app architecture සහ Flutter app එකක structure ගැන ගැඹුරින් සාකච්ඡා කරමු.\nUI නිර්මාණය: Flutter හි inbuild Widgets වලින් visually attractive නිර්මාණය ගැන ඉගෙන ගැනීමට පුළුවන්.\nState Management: ඔබේ Flutter apps තුළ දත්ත කාර්යක්ෂමව කළමනාකරණය කිරීමට සහ update කිරීමට ඔබට හැකි වන පරිදි සරල නමුත් ඵලදායී state management patterns ඔබට හඳුන්වා දෙනු ඇත.\nFirebase ඒකාබද්ධ කිරීම: මෙම පාඨමාලාව Google හි ප්‍රබල backend service එකක් වන Firebase වෙතද ඔබව හඳුන්වා දෙනු ඇත. ඔබගේ Flutter යෙදුම Firebase සේවාවන් සමඟ පියවරෙන් පියවර සම්බන්ධ කරන්නේ කෙසේදැයි ඔබ ඉගෙන ගනු ඇත:\nAuthentication: පරිශීලක පිවිසුම් සහ ලියාපදිංචි කිරීම ක්‍රියාත්මක කිරීම.\nFirestore: දත්ත ගබඩා කිරීමට සහ ලබා ගැනීමට NoSQL Cloud Database සමඟ වැඩ කිරීම.\nCloud Storage: ඔබගේ යෙදුම තුළ ගොනු සහ මාධ්‍ය කළමනාකරණය කිරීම.\nප්‍රායෝගික ව්‍යාපෘති: පාඨමාලාව පුරාම, ඔබ ඉගෙන ගත් සංකල්ප ශක්තිමත් කරන සහ ක්‍රියාකාරී ජංගම යෙදුම් සමූහයක් ගොඩනැඟීමට ඔබට ඉඩ සලසන ප්‍රායෝගික ව්‍යාපෘතිවල නිරත වනු ඇත.\nඉඟි සහ හොඳම භාවිතාවන්: පිරිසිදු, නඩත්තු කළ හැකි සහ කාර්යක්ෂම Flutter කේතය ලිවීමට ඔබට උපකාර කිරීම සඳහා අපි අත්‍යවශ්‍ය best practices ගැන ද ආවරණය කරන්නෙමු.\nමෙම පාඨමාලාව සුදුසු වන්නේ:\nපෙර ක්‍රමලේඛන අත්දැකීම් නොමැති ආරම්භකයින් සඳහා.\nFlutter සමඟ ජංගම යෙදුම් සංවර්ධනය ඉගෙන ගැනීමට කැමති වෙනත් programming language වල අත්දැකීම් ඇති developers ලා සඳහා.\nමෙම පාඨමාලාව නිර්මාණය කර ඇත්තේ ඕනෑම තාක්ෂණික පසුබිමක් ඇති ඕනෑම කෙනෙකුට පහසුවෙන් තේරුම් ගත හැකි වන පරිදිය.\n\n\nමාගේ තවත් වීඩියෝ නැරඹීමට, HexCoder YouTube channel එක වෙත පිවිසෙන්න.",
      "target_audience": [
        "Anyone who would like to learn app development using Flutter"
      ]
    },
    {
      "title": "Building An Uber Eats Clone With No-Code Using Bubble",
      "url": "https://www.udemy.com/course/building-an-uber-eats-clone-with-no-code-using-bubble/",
      "bio": "Learn the step-by-step process to building an Uber Eats clone without writing a single line of code.",
      "objectives": [
        "How to build your own meal delivery app like Uber Eats without writing a single line of code",
        "An overview of Bubble's no-code toolset",
        "How to set up your own custom database",
        "How to register new user accounts",
        "How to update the saved details of a users account",
        "How to create a dashboard for restaurant owners to manage their listings",
        "How to create a home page with a search function",
        "How to dynamically display the details of a restaurant on a dedicated page",
        "How to create a custom checkout process",
        "How to process payments with Stripe",
        "How to track the progress of a users order",
        "How to build a dashboard where delivery drivers can find new orders for dispatch",
        "How to create a dashboard where restaurant owners can manage incoming orders",
        "Additional tips & insights to help on your Bubble journey"
      ],
      "course_content": {
        "Getting started with Bubble": [
          "Getting started with Bubble's no-code tool"
        ],
        "Configuring your database": [
          "Creating your custom Uber Eats clone database"
        ],
        "EXTRA: Bubble responsive design": [
          "Introducing Flexbox design"
        ],
        "Registering user accounts": [
          "Creating a workflow to register new users"
        ],
        "Creating a user settings page": [
          "Building a page where users can update their account information"
        ],
        "Creating a restaurant dashboard page": [
          "Building a page where restaurant owners can manage their restaurant listings"
        ],
        "Building the home page": [
          "Displaying a list of available restaurants & creating a custom search experience"
        ],
        "Displaying a dynamic restaurant page": [
          "Displaying the details of each restaurant on a dynamic page"
        ],
        "Building an order checkout process": [
          "Adding food items to a checkout cart"
        ],
        "Processing payments": [
          "Using Stripe to process user payments"
        ]
      },
      "requirements": [
        "A free Bubble account",
        "A basic understanding of Bubble, although I'll walk you through everything in thorough detail"
      ],
      "description": "Learn how to build your own Uber Eats clone without writing a single line of code. This course covers the step-by-step process of creating your own food delivery platform that's ready to launch. Utilizing Bubble's no-code tool, it explains the exact workflows you'll need to replicate the Uber Eats product.\n\n\nThroughout 13 course modules, I'll cover the process of building the following core features:\nGetting started with Bubble\nConfiguring your database\nRegistering user accounts\nCreating a user settings page\nBuilding a dashboard to manage restaurant listings\nCreating a home page to search for and discover restaurants\nDisplaying a dynamic restaurant page\nBuilding an order checkout process\nProcessing payments with Stripe\nMonitoring the progress of an order\nBuilding a dashboard for delivery drivers\nCreating a dashboard for restaurants to manage incoming orders\nAdditional tips & insights\nBy the end of this course, you'll have a working product that can be used to build your own startup, knowledge on how to build an Uber Eats clone for freelance clients, and new skills to expand your Bubble experience.\n\n\n2022 update: This course now comes with free access to a flexbox responsive design masterclass. Learn how to master the new responsive engine before bringing your app to life.\n\n\nLearn from an experienced Bubble developer & coach who has helped multiple founders build successful apps without code.\nIn 2020, I worked directly with the Bubble team to write their 'How-to build' blog series. Each installment shared written instructions on how to recreate popular products using their no-code tool. To simplify the building process, I've created my own separate video series to help guide you in a more engaging way.",
      "target_audience": [
        "Anyone who wants to quickly build their own meal delivery app like Uber Eats with minimal cost and time input",
        "Anyone interested in learning about Bubble's no-code development tool",
        "Anyone looking to extend their skills as a freelance Bubble developer",
        "Makers who want to extend their knowledge into Bubble's no-code toolset"
      ]
    },
    {
      "title": "Web Scraping: Build Cross-platform Apps with Xamarin Forms",
      "url": "https://www.udemy.com/course/web-scraping-build-cross-platform-apps-with-xamarin-forms/",
      "bio": "Learn Web Scraping and create a Cross Platform App with Scraping",
      "objectives": [
        "At the end of this you'll be able to create any kinda of Application with Web Scraping",
        "You can scrap any website in C# .NET",
        "You can scrap any website in Xamarin Forms",
        "You can scrap data via XPATH",
        "You can scrap data via LINQ",
        "You can scrap data from some famous websites",
        "You can create a complete Cross Platform Dynamic Mobile App with Xamarin Forms and Scraping",
        "You can optimize the performance of your mobile apps"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Xamarin or Mobile Apps."
      ],
      "description": "The main focus of this course is only on the Xamarin Forms  and C# . So if you're a good C# programmer or if you have a basic knowledge of XAML and you want to create some kinda complete cross platform application with Xamarin Forms then this is the right course for you.\nIn this course you will learn the how to create the the complex kind of application with web scraping in Xamarin Forms . You will learn the Web Scraping with real time implementation. You'll also learn the the Web Scraping in C# .NET. In this course you can scrap any kinda data like Text , Images , Links etc.\nBuild a strong foundation in Xamarin Forms Web Scraping with this tutorial .\nLearn Basics Of Web Scraping\nLearn Web Scraping in C# .NET\nScrap Famous Websites\nIntegrate Nuget for Scraping\nCreate Xamarin Forms Application\nCreate Real Time Application In Xamarin Forms with Web Scraping\nCreate the Complete Cross Platform Application with MVVM\nOptimize the Application Performance\n\n\nA valuable Skill at Your Fingertips  Learning the Xamarin Forms put a powerful and attractive look in your mobile apps. Xamarin is open source, easy to learn,  has excellent Microsoft and Xamarin support, and is the best  Cross Platform Tool for Desktop and Mobile Applications.\nJobs in Mobile development are plentiful, and being able to learn the Web Scraping in C# and Xamarin Forms will give you a strong background to more easily pick up other challenging apps etc.\nContent and Overview  Suitable for C# programmers, Xamarin  Developers , XAML Developers and software engineers. Through this course , you’ll create a complete cross platform application and establish a strong understanding of the concept behind Xamarin Forms and Web Scraping.\nYou can also optimize the performance of your apps.\nWhat am I going to get from this course?\nLearn Xamarin Forms from a Microsoft (MVP), Xamarin MVP from your own desk.\nCreate a Complete Cross Platform Mobile Application with me.\nSuitable for beginner & intermediate  programmers, xamarin developers, C# developers and ideal for users who learn faster when shown.\nVisual training method,with Hands on Lab Practice , coding and challenge exercises.\nBreaks even the most complex scenarios down into simplistic steps.\nI'll provide you the simplest and easy way to create the mobile apps  as well as C# .NET applications with scraping.\nAlso you'll be able to get all the application code.\nAfter this course you'll be able to create a mobile application of any website.",
      "target_audience": [
        "Everyone who has some basic knowledge of XAML and c# and willing to start career in Xamarin Forms and want to create Cross Platform Mobile Apps with Web Scraping"
      ]
    },
    {
      "title": "Train Object Detection Models & build Realtime Android Apps",
      "url": "https://www.udemy.com/course/train-custom-object-detection-models-for-android-ios/",
      "bio": "Train object detection models for Android | Use Object Detection in Android with Kotlin | Java | Realtime OD in Android",
      "objectives": [
        "Train object detection models on custom datasets for Android Applications",
        "Use existing object detection models in Android with both images and videos",
        "Learn about tflite (TensorFlow lite) models integration in Android App Development",
        "Use YOLO models in Android with images and live camera footage",
        "Test and optimize trained object detection model for Android devices",
        "Collect and annotate datasets for training object detection models",
        "Use SSD Mobilenet models in Android with images and live camera footage",
        "Use Efficient Det models in Android with images and live camera footage",
        "Convert object detection model into tensorflow lite formats",
        "Learn about object detection and it's applications in Android app development",
        "Build Android Applications using both Java and kotlin"
      ],
      "course_content": {
        "Introduction": [
          "What is Object Detection",
          "How an Object Detection Model is Trained",
          "What is there for IOS developers",
          "What is there for Machine Learning Engineers"
        ],
        "Dataset Collection and Annotation for Object Detection": [
          "Dataset Collection Basics",
          "Data Annotation Basics",
          "Collecting dataset for training Object Detection model",
          "Course Resources",
          "Tools for data annotation",
          "Annotating dataset for training object detection model",
          "Dataset version management and export formats",
          "Get Animal Dataset and Annotate it"
        ],
        "Training Custom Object Detection models": [
          "Introduction to the section",
          "What is Tensorflow lite",
          "What is Google Colab!",
          "Change Structure of Annotated dataset for model training",
          "Model Training Notebook and Uploading Dataset",
          "Importing Libraries and Loading Annotated Dataset",
          "Training Custom Object Detection Model",
          "Object Detection Model Evaluation Basics",
          "Testing Our Custom Object Detection Model",
          "Converting Object Detection Model Into Tensorflow Lite",
          "Improving Object Detection Models",
          "Train Animal Detection Model and Convert in into Tensorflow lite format"
        ],
        "App Development": [
          "Section Introduction"
        ],
        "Java: Image Picker Section": [
          "Creating new Android Studio Project",
          "Capturing Images using Camera inside our Android Application",
          "Choosing Images from Gallery inside our Android Application",
          "Overview"
        ],
        "Kotlin: Image Picker Section": [
          "Creating new Android Studio Project",
          "Capturing Images using Camera inside our Android Application",
          "Choosing Images from Gallery inside our Android Application",
          "Overview"
        ],
        "Java: Object Detection with Images for Android App Development": [
          "Importing Starter Application Code for Object Detection With Images",
          "Adding libraries for Performing Object Detection",
          "Loading Object Detection Models in Android",
          "Passing Input Images to Object Detection Models and Getting Outputs",
          "Getting Names, Confidence and Location of Detected Object In Android",
          "Drawing Rectangles Around Detected Objects In Android",
          "Drawing Names Of Detected Object On Images",
          "Object Detection With Images Overview",
          "Animal Detection with Images"
        ],
        "Kotlin: Object Detection with Images for Android App Development": [
          "Importing Starter Application Code for Object Detection With Images",
          "Adding libraries for Performing Object Detection",
          "Loading Object Detection Models in Android",
          "Passing Input Images to Object Detection Models and Getting Outputs",
          "Getting Names, Confidence and Location of Detected Object In Android",
          "Drawing Rectangles Around Detected Objects In Android",
          "Drawing Names Of Detected Object On Images",
          "Making Text and Rectangle Size Dynamic",
          "Handling Rotation Of Camera Images In Android",
          "Object Detection With Images Overview",
          "Animal Detection with Images"
        ],
        "Java: Object Detection with Live Camera Footage / Real Time Object Detection": [
          "Setting up the Android Studio project",
          "Real Time Object Detection Android Application Demo",
          "Displaying live camera footage inside Android App",
          "Getting frames of live camera footage as bitmaps in Android",
          "Performing object detection in Android with Live Camera Footage",
          "Drawing Rectangles Around Detected Objects In Android",
          "Animal Detection with live camera footage"
        ],
        "Kotlin: Object Detection with Live Camera Footage / Real Time Object Detection": [
          "Setting up the Android Studio project",
          "Real Time Object Detection Android Application Demo",
          "Displaying live camera footage inside Android App",
          "Getting frames of live camera footage as bitmaps in Android",
          "Performing object detection with frames of live camera footage",
          "Drawing Rectangles Around Detected Objects in Realtime",
          "Animal Detection with Live Camera Footage"
        ]
      },
      "requirements": [
        "Having some basic knowledge of Android App development will be a plus"
      ],
      "description": "If you want to train custom object detection models for Android and iOS then welcome to this course.\nIn this course, you will learn to\nTrain your custom object detection models for Android and IOS\nUse those models in Android (Java/Kotlin) with images and live camera footage\nUse existing object detection models like YOLO, EfficientDet, and MobileNet models in Android (Java/Kotlin)\nThe Android app development section of this course is for both java and kotlin programming languages.\nSo after completing this course you will be able to\nCollect datasets for training object detection models\nAnnotate datasets using different tools\nTrain object detection models on custom datasets for Android and IOS ( TensorFlow object detection )\nConvert object detection models into tflite / Tensorflow lite format\nUse those converted models in Android (Java/Kotlin) with images and live camera footage\nUse existing object detection models in Android (Java/Kotlin) like YOLO v4, SSD EfficientDet Models, and SSD MobileNet Models\nReady to use Resources\nThe course comes with ready-to-use codes which means if you have a trained object detection model then\nYou can take complete android (Java/Kotlin) application codes from course resources\nReplace the object detection model with your custom model\nAnd use it for your custom use case\nand if you want to use existing object detection models in Android for your custom use cases then\nyou can take complete android (Java/Kotlin) application codes from course resources\nand customize it as per your needs\n\n\nWhat is there for IOS developers(Object Detection IOS)\nSo apart from Android App Development, If you want to train custom object detection models for IOS applications then you can also take this course but the integration of object detection models in IOS applications is not included in this course\n\n\nObject Detection\nObject detection is a computer vision technique that allows us to identify and locate objects in an image or video.\nUse Cases & Applications\nVideo surveillance\nCrowd counting\nAnomaly detection (i.e. in industries like agriculture, and health care)\nSelf-driving cars\n\n\nCourse Curriculum\nThe course is divided into several sections\n\n\nData collection and Annotation\nIn this section, we will cover the basics of dataset collection and annotation and then\nWe will learn to collect the dataset for training an object detection model\nAfter that, we will learn to annotate that dataset using Roboflow and other such tools\n\n\nTraining Object Detection Model / Tensorflow Object Detection\nWe will learn to train an object detection model using the dataset we collected and annotated.\n\n\nTesting and Conversion\nAfter training the model we will test it to check model performance and accuracy\nThen we will convert it into tflite / Tensorflow lite format so that we can use it in mobile applications.\n\n\nAndroid App Development (Object Detection Android)\nAfter model training and conversion, we will learn to use that model inside Android applications (Java/Kotlin) with both\nImages\nLive camera footage / Real-Time Object Detection\n\n\nObject Detection with Images (Object Detection Android App Development)\nSo firstly we will build an Android (Java/Kotlin) application where\nusers can choose images from the gallery or capture images using the camera\nand then those images will be passed to our custom object detection model\nand then based on the results returned by the model we will draw rectangles around detected objects.\n\n\nObject Detection with live camera footage (Object Detection Android App Development)\nSecondly, we will build an Android (Java/Kotlin) application in which\nwe will display the live camera footage using camera 2 API\nand then we will pass frames of live camera footage to our object detection model\nand draw rectangles around the detected objects in real-time\n\n\nExisting Object Detection Models (Object Detection Android App Development)\nWe will learn to use existing object detection models inside Android (Java/Kotlin) Applications with both images and live camera footage. So in that section, we explore three popular families of object detection models and use them inside Android (Java/Kotlin) Applications.\nSSD MobileNet Models\nEfficient Det Models\nYOLO Models\n\n\nSSD MobileNet Models\nIn this section, we will learn to use SSD MobileNet Models in Android (Java/Kotlin) with both images and live camera footage.\nFirstly we will learn about the structure of MobileNet models and then we will use two popular MobileNet models in Android (Java/Kotlin) which are\nSSD MobileNet V1\nSSD MobileNet v3\n\n\nEfficient Det Models\nIn this section, we will learn to use EfficientDet Models in Android (Java/Kotlin) with both images and live camera footage.\nFirstly we will learn about the structure of EfficientDet models and then we will use two popular EfficientDet models in Android (Java/Kotlin) which are\nEfficientDet Lite0\nEfficientDet Lite1\nEfficientDet Lite2\nEfficientDet Lite3\n\n\nYOLO Models / YOLO object detection\nIn this section\nwe will learn to use the latest YOLOV4 model in Android (Java/Kotlin) with both images and live camera footage\nWe will also cover the YOLO model structure and how input and outputs are handled in YOLO effectively\nWe will handle the integration of both the regular YOLOV4 model and the tiny YOLOv4 model in Android with both images and live camera footage.\nSo a complete YOLO object detection package for android app development.\n\n\nSign up today, and look forwards to:\nHD 1080p video content.\nTraining custom object detection models\nBuilding fully-fledged Android ( Java / Kotlin ) applications using different object detection models.\nAll the knowledge you need to start building Object Detection-based Android ( Java / Kotlin ) application you want\n$1000+ Source codes of Android ( Java / Kotlin ) Applications.\nREMEMBER… I'm so confident that you'll love this course and you will also get a 30-day money-back guarantee from udemy. So it's a complete no-brainer, sign up today with ZERO risks and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's best Object Detection course.\n\n\nWho this course is for:\nAnyone who wants to train object detection models for Android App Development (Java/Kotlin)\nAnyone who wants to use object detection models in Android App Development (Java/Kotlin) with images and live camera footage\nBeginner Android developer with very little knowledge of android app development\nAn Intermediate Android app developer wanted to build a powerful Machine Learning-based application for Android (Java/Kotlin)\nExperienced Android (Java/Kotlin) app developers wanted to use Machine Learning models inside their applications.\nMachine Learning experts want to use their object detection models in Android App Development (Java/Kotlin)",
      "target_audience": [
        "Someone want to train custom Object Detection models and build mobile applications",
        "Android App Developers want to learn smart Machine Learning based Android Development",
        "Students who have basic knowledge of Android app development and want to build smart machine learning based Android Applications",
        "Students who want to learn use of existing object detection models in Android (YOLO, EfficientDet, mobileNet)",
        "Machine Learning Engineers want to use their existing object detection model in Android App Development"
      ]
    },
    {
      "title": ".NET MAUI - Create Apps for Android, iOS, Mac and Windows",
      "url": "https://www.udemy.com/course/net-maui-create-apps-for-android-ios-mac-and-windows/",
      "bio": "Course for you to learn from scratch how to develop Android, iOS, Mac and Windows apps with a single base code using C#",
      "objectives": [
        "Develop Applications using the .NET platform",
        "Develop Screens with Pleasant Design",
        "Work with the MVVM pattern when building apps",
        "Store data locally using Entity Framework Core",
        "Use best market practices"
      ],
      "course_content": {
        "Introdução": [
          "01 - How to take the course and Course Organization - Video",
          "02 - How to ask questions",
          "03 - Requirements",
          "04 - Downloading files",
          "05 - How to obtain your certificate",
          "06 - Assessment"
        ],
        "Introduction": [
          "01 - Development Environment",
          "02 - XAML Styler Extension",
          "03 - Enable Windows Developer Mode",
          "04 - Enable Developer Mode on Your Android Phone",
          "05 - Figma - Import Prototypes"
        ],
        "Getting Started with .NET MAUI": [
          "01 - About the project - Figma",
          "01 - Creating the MAUI project",
          "02 - MAUI Execution Flow Explained",
          "03 - Setting the App Name, ID and Version",
          "THEORY - Pixel and Density",
          "THEORY - Pixel and Density - 2",
          "05 - Icon - Windows - Part 1",
          "[Important] .NET 8+ - Icon on Android",
          "06 - Icon - Android - Part 2",
          "07 - SplashScreen",
          "08 - Getting Started with MAUI",
          "09 - Getting Started with MAUI - Part 2",
          "10 - Home Screen - Part 1",
          "11 - Home Screen - Part 2",
          "12 - Home Screen - Part 3",
          "13 - Home Screen - Part 4",
          "14 - Home Screen - Part 5",
          "15 - Running the project on Windows and Android",
          "16 - Running the project on MacOS and iOS"
        ],
        "Page Types in .NET MAUI": [
          "01 - THEORY - What is XAML",
          "02 - THEORY - Page Types",
          "03 - ContentPage",
          "04 - NavigationPage - Part 1",
          "05 - NavigationPage - Part 2",
          "06 - FlyoutPage - Part 1",
          "07 - FlyoutPage - Part 2",
          "08 - FlyoutPage - Part 3 - NavigationPage",
          "09 - TabbedPage - Part 1 - Configuration",
          "10 - TabbedPage - Part 2 - Color Customization"
        ],
        ".NET MAUI - App Gallery": [
          "01 - Creating the project and Configuring the Icon and Splash",
          "02 - Structuring the project",
          "03 - Creating the Templates for Our Menu",
          "04 - Programming the Side Menu - Part 1",
          "05 - Programming the Side Menu - Part 2 - Layout",
          "06 - Opening the Component Page",
          "07 - Performance Tip and Home Menu",
          "07.1 - ScrollView in the Menu",
          "08 - THEORY - Layout Types",
          "09 - StackLayout",
          "10 - VerticalStackLayout, HorizontalStackLayout and Spacing",
          "11 - GridLayout - Part 1",
          "12 - GridLayout - Part 2",
          "13 - GridLayout - Part 3 - Spacing and Simplifying the structure",
          "14 - AbsoluteLayout",
          "15 - FlexLayout - Direction - Part 1",
          "16 - FlexLayout - AlignItems and AlignSelft - Part 2",
          "17 - FlexLayout - JustifyContent - Part 3",
          "18 - FlexLayout - Grow, Order, Basis, Shrink - Part 4",
          "19 - FlexLayout - Wrap and AlignContent"
        ],
        ".NET MAUI AppGallery - BoxView, Labels, Buttons and Images": [
          "01 - THEORY - View Class",
          "02 - Visual Studio Tools for Screen",
          "03 - BoxView",
          "04 - Label - Text, TextColor, TextDecorations and TextTransform - Part 1",
          "05 - Label - TextType - Part 2",
          "06 - Label - FontSize, FontAttributes and FontFamily - Part 3",
          "07 - Label - LineHeight, MaxLines and LineBreakMode - Part 4",
          "08 - Label - FormattedText - Part 5",
          "09 - Label - Text Alignment - Part 6",
          "10 - Button - Part 1",
          "11 - Button - Image - Part 2",
          "12 - Image - Part 1",
          "13 - Image - Part 2",
          "14 - ImageButton"
        ],
        "Hangman Game": [
          "01 - Introducing Hangman",
          "02 - Creating a project and configuring the icon and splashscreen",
          "03 - Creating the screen",
          "04 - Improving the keyboard's aesthetics",
          "05 - Models and Repositories",
          "06 - Initial Programming - Choosing a word",
          "07 - Programming - Clicking on letters",
          "08 - Programming - Behavior when making a mistake",
          "09 - Programming - Keyboard style for hits and misses",
          "10 - Programming - Restarting the game, winning the game and refactoring",
          "11 - Programming - Running on Android"
        ],
        "App Gallery - Frame, Border e Shadow": [
          "01 - Frame",
          "02 - Border",
          "03 - Shadow"
        ],
        "App Gallery": [
          "01 - Entry",
          "02 - Entry - Part 2",
          "03 - Entry - Events",
          "04 - Editor",
          "05 - CheckBox",
          "06 - RadioButton",
          "07 - RadioButton - Event",
          "08 - Switch",
          "09 - Stepper",
          "10 - Slider",
          "11 - TimePicker",
          "12 - DatePicker",
          "13 - SearchBar",
          "14 - Picker"
        ],
        "Chapter 10 - App Gallery - Cell Types": [
          "01 - TextCell",
          "02 - ImageCell",
          "03 - SwitchCell",
          "04 - EntryCell",
          "05 - ViewCell"
        ]
      },
      "requirements": [
        "Know the C# language and Object Oriented Programming (OOP)",
        "Know the concepts of the .NET platform",
        "Know the concepts of SQL database"
      ],
      "description": "Attention: This course is a dubbed version of the renowned course available on Udemy: NET MAUI - Create Apps for Android, iOS, Mac and Windows in Portuguese.\nAbout the course:\nThe .NET MAUI (Multi-platform App UI) course is designed for developers interested in building cross-platform applications using .NET technology. .NET MAUI is an evolution of Xamarin.Forms and enables developers to build native applications for iOS, Android, Mac, and Windows from a single codebase.\nIn the course, you will learn the basics of .NET MAUI, including setting up your development environment and creating a starter project. You will explore the project structure and learn how to create user interfaces using XAML, a declarative markup language.\nThe course will cover creating screens and layouts, using pre-defined controls, and customizing the look and feel of your application. You will also learn how to navigate between screens, handle events, and integrate services and access databases.\nIn addition, the course will cover advanced topics such as creating animations and implementing platform-specific features. You will learn how to debug and test your application on different emulators and physical devices.\nBy the end of the course, you will have acquired the skills to create efficient cross-platform applications using .NET MAUI. You will be ready to develop native applications for iOS, Android, Mac and Windows, saving time and effort by sharing code across platforms.\nHere are some of the main topics covered in our course:\nWhat is .NET MAUI, who is it for and how does it work?\nHow to set up the development environment for .NET MAUI\nHow to use the MVVM pattern and the MVVM Community Toolkit\nHow to use dependency injection\nHow to implement interfaces using XAML - Extensible Application Markup Language\nHow to develop using Event-Driven Development\nHow to configure and use styling features of the app\nHow to use multiple MAUI controls and MAUI layouts\nHow to use Entity Framework Core to manage your local database (SQLite).\nHow to use Shell APIs to speed up app building.\nHow to publish and release an Android app\nI hope this summary gives you a general idea of what to expect from a .NET MAUI course. If you have any further questions, feel free to ask!",
      "target_audience": [
        ".NET/C# developers",
        "Programming Students"
      ]
    },
    {
      "title": "An Introduction to Espresso Android Testing",
      "url": "https://www.udemy.com/course/an-introduction-to-espresso-android-testing/",
      "bio": "Automate Android native mobile application testing using Espresso and Java. Work with Android Devices and Emulators",
      "objectives": [
        "The core testing skills needed to become a great Mobile Tester in just 2 hours.",
        "Setup Android Studio and Espresso Dependencies",
        "Automate test cases using espresso and measure code coverage using Jacoco",
        "Test your Adapter and Recycler views",
        "Automate testing of intents using Espresso",
        "Automate testing of web views using Espresso",
        "Build custom matchers",
        "Setup LogCat logging",
        "Integrate SonarQube with Jacoco and Espresso"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Android Espresso Intro",
          "Android Espresso Cheat Sheet"
        ],
        "Mobile Testing Basics": [
          "Section Overview",
          "Bug Life Cycle",
          "Blackbox testing",
          "Android Studio and Espresso Setup",
          "Android Installation (Mac)"
        ],
        "Implementing Test cases in different scenarios": [
          "Section Overview",
          "Code Coverage Overview",
          "Jacoco for code coverage",
          "Intro Quiz",
          "What are Intents",
          "Androids Intents",
          "List View vs Recycler View",
          "Adapter Testing",
          "Recycler view testing",
          "Custom Matcher",
          "Espresso Web Views",
          "Idling Resources",
          "Why Jira",
          "Project Management with Jira",
          "Logcat Logging",
          "Logcat Logging Part 2",
          "Espresso Automated Screen Recorder",
          "SonarQube Overview",
          "Espresso Sonar",
          "Final Quiz"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "An android device can be helpful but not required [we can use emulators]",
        "We will setup android studio on your machine"
      ],
      "description": "Build a strong foundation in Espresso testing with this practical course suited to both beginners and experienced professionals.\nA automated testing tool for android is essential becuase unlike code, with testing we care about how our test cases are automated in terms of development and execution. Espresso is the top ranked testing automation tool in the market. Android testing tools  are being used more and more for their role in Blackbox testing and task Automation. Use cases of automated testing tools today range from measuring [and analyzing] code coverage using plugins like Jacoco to UI validations for Adapter and Recycler views. Even CI/CD tools like Jenkins leverage Espresso to test UI changes. As such more and more jobs are going to developers who have the skill of using espresso for android testing\nThis course will guide you through all the basics of Espresso and get you ready to tackle any database automation project that comes your way.\nWe will cover the following pillars of Espresso and Android testing:\n1)Software Testing Fundamentals: In this section you will learn the theory behind UI testing. We cover everything from Blackbox testing to the Software Development Life cycle to the life cycle of a bug. Leave behind the days of manual tracking and leaving comments for the testing teams. Automate the process!\n2)Espresso Implementation: First setup android studio along with Espresso dependencies. Then learn how to use espresso in real life situations. From testing Adapter views to Espresso Intents. We even try the espresso recorder for automation.\n3)Espresso on the Job: Learn about the correct ways of doing things. The theory behind why use test cases in particular ways. We even show some of these skills in practice. Use tools for bug tracking, project management and notifications.\n\n\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "The course is 100% for you if you want to become an amazing Mobile Tester!",
        "Any developer looking to understand how to test android apps in an automated way",
        "Tech leads tired of inefficiency becuase of having to run manual tests during Release/QA cycles",
        "Engineering Students, Manual QA Engineers, Industry QA Professionals",
        "Anybody with a desire to earn more by learning more!"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/face-recognition-in-android-the-2023-practical-guide/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Flutter Redux Essential Course (English)",
      "url": "https://www.udemy.com/course/flutter-redux-essential-course-english/",
      "bio": "Learn and practice the concept of state management using Flutter Redux, a Flutter state management solution",
      "objectives": [
        "The basic concept of Redux",
        "The core utilities of Flutter Redux (StoreBuilder, StoreConnector, StoreProvider)",
        "Combining Reducers",
        "Dart Data Class Generator Extension and equatable package",
        "Performance Optimization of Flutter Redux App",
        "Redux Middleware",
        "Persisting Redux State",
        "TODO App (sync, async)",
        "Weather App",
        "Firebase Authentication App (Signup, Signin, Signout, Verify Email, Change Password, Forgot Password)"
      ],
      "course_content": {
        "Introduction": [
          "Tutorial background and target audience",
          "Tutorial structure",
          "Tools used in tutorial"
        ],
        "Flutter Redux Overview": [
          "What is redux?",
          "Dart Counter Redux App",
          "StoreBuilder",
          "Basics of StoreConnector",
          "StoreConnector's arguments (1)",
          "StoreConnector's arguments (2)",
          "Combining reducers (1)",
          "Combining reducers (2)",
          "Combining reducers (3)",
          "Combining reducers (4)",
          "Combining reducers (5)",
          "Combining reducers (6)",
          "Combining reducers (7)",
          "Dart Data Class",
          "Dart Data Class Generator and Equatable",
          "Performance Optimization (1) - primitive type state",
          "Performance Optimization (2) - primitive type state",
          "Performance Optimization (3) - class type state",
          "Performance Optimization (4) - caution",
          "Performance Optimization (5) - caution",
          "Performance Optimization (6) - caution",
          "Performance Optimization (7) - importance of distinct option",
          "Performance Optimization (8) - importance of distinct option",
          "Middleware (1) - background",
          "Middleware (2) - app skeleton, product model",
          "Middleware (3) - ProductRepository",
          "Middleware (4) - Products state and action",
          "Middleware (5) - Products reducer, middleware",
          "Middleware (6) - Product state, action, reducer, middleware",
          "Middleware (7) - ProductsPage",
          "Middleware (8) - ProductPage",
          "Middleware (9) - productInfoMiddleware",
          "Middleware (10) - redux_thunk",
          "Middleware (11) - refactoring using redux_thunk",
          "Persisting State (1) - Introduction",
          "Persisting State (2) - Background",
          "Persisting State (3) - Quote Model",
          "Persisting State (4) - Counter state, action, reducer",
          "Persisting State (5) - Setting up persistor",
          "Persisting State (6) - Quote state",
          "Persisting State (7) - Quote action, reducer",
          "Persisting State (8) - UI"
        ],
        "TODO App": [
          "TODO App Overview",
          "TODO App Structure",
          "Packages, folders and app skeleton",
          "Todo model and TodoFilter enum",
          "TodoFilter related state, action and reducer",
          "TodoSearch related state, action and reducer",
          "TodoList related state, action and reducers",
          "App wide state and App wide reducer",
          "TodoHeader widget and ViewModel",
          "NewTodo widget and ViewModel",
          "SearchTodo widget and ViewModel",
          "FilterTodo widget and ViewModel",
          "ShowTodos widget and ViewModel (1)",
          "ShowTodos widget and ViewModel (2)",
          "TodoItem widget and ViewModel (1)",
          "TodoItem widget and ViewModel (2)",
          "Reducing search volumes"
        ],
        "TODO App (sqflite Database)": [
          "App setup",
          "Todo Model, CustomError Model",
          "TodosDB, database access layer (1)",
          "TodosDB, database access layer (2)",
          "TodosRepository, repository layer",
          "TodoListState",
          "GetTodoList related actions and reducers",
          "AddTodo related actions and reducers",
          "ToggleTodo related actions and reducers",
          "EditTodo related actions and reducers",
          "DeleteTodo related actions and reducers",
          "NewTodo, ShowTodos, TodoItem widgets",
          "TodosPage",
          "errorDialog and Test",
          "Optimistic rendering"
        ],
        "Weather App": [
          "Weather App Overview (1)",
          "Weather App Overview (2)",
          "Packages, folder structure, page skeletons",
          "Models",
          "WeatherApiServices (1)",
          "WeatherApiServices (2)",
          "WeatherRepository",
          "Weather state and action",
          "Weather reducer, dependency injection",
          "SearchPage",
          "HomePage (1) - ViewModel",
          "HomePage (2) - initial, loading, error",
          "HomePage (3) - name, updated time, temperature",
          "HomePage (4) - Weather information",
          "TempSettings related state, action, reducer",
          "Applying TempSettings to SettingsPage and HomePage",
          "Changing app theme according to current temperature"
        ],
        "Firebase Authentication App": [
          "App Overview",
          "Firebase project setup",
          "Additional firebase project setup",
          "App models",
          "App folder structure",
          "AuthRepository (1)",
          "AuthRepository (2)",
          "Auth flow and SplashPage",
          "Signup state, action, reducer",
          "SignupPage",
          "Signup ViewModel, sign out",
          "errorDialog",
          "Signin state, action, reducer",
          "SigninPage, ViewModel",
          "Verify Email",
          "Reset Password state, action, reducer",
          "ResetPasswordPage, ViewModel",
          "ProfileRepository",
          "Profile state, action, reducer",
          "HomePage",
          "Change Password state, action, reducer",
          "ChangePasswordPage, ViewModel",
          "Reauthenticate"
        ]
      },
      "requirements": [
        "Some experience and understanding of Flutter is required"
      ],
      "description": "Redux is the most widely used and proven state management solution in React, the most widely used Front End Framework. Redux can also be used in Flutter.\nIn the Flutter Redux Essentials course, you can learn about Flutter Redux in depth.\nIf you want a deep understanding of Flutter Redxu and want to practice all the concepts in real life, then this is the course for you.\nWhen creating the lectures, care was taken to ensure a balance between theory and practice.\nUnder the belief that repetition is the most important learning method, whenever a new concept emerges, a small app is created to test the concept, and practical apps such as TODO (synchronous), TODO (asynchronous with SQLite DB), Weather, and Firebase Authentication app are developed. Through this, the concepts were harmonized comprehensively.\n\n\nLet's take a quick look at the topics covered in this course.\n- Basic concepts of Redux\n- Implementation of basic concepts with Dart Redux App\n- Core utilities for Flutter Redux App (StoreBuilder, StoreConnector, StoreProvider)\n- Combining Reducers\n- Dart Data Class Generator Extension and equatable package\n- Performance Optimization of Flutter Redux App\n- Experience Performance Optimization through real apps\n- Redux Middleware\n- thunk middleware\n- Persisting Redux State\n- TODO App (Synchronous)\n- TODO App (Asynchronous with SQLite DB, Optimistic Rendering)\n- Weather App\n- Firebase Authentication App: Signup, Signin, Signout, Verify Email, Change Password, Forgot Password",
      "target_audience": [
        "Developers who want to know state management using Flutter Redux",
        "Flutter developers who want a deep understanding of Flutter Redux",
        "Flutter developers who want to know various usage examples of Flutter Redux",
        "Developers who already know React/Redux and want to learn Flutter"
      ]
    },
    {
      "title": "Build a Tinder Clone in Android Jetpack Compose and Firebase",
      "url": "https://www.udemy.com/course/tinder_app/",
      "bio": "Create your own dating app using Jetpack compose, Firebase, MVVM, Hilt dependency injection, coroutines and more",
      "objectives": [
        "Build a Tinder like app",
        "Learn Android for beginners",
        "Create a dating app",
        "Build a real world application",
        "Firebase Database, Storage and User Authentication",
        "Real Time communications"
      ],
      "course_content": {},
      "requirements": [
        "Have a mac or windows computer",
        "Interest in dating apps",
        "Interest in mobile apps",
        "Kotlin knowledge"
      ],
      "description": "Build a Tinder like app in Android with Kotlin, Jetpack Compose and Firebase.\nSocial media now has the largest user base ever.\nHave you ever thought about owning your own dating app similar to Tinder? Now you can\nThis course teaches you exactly how to build a Tinder like app, complete with user accounts, registration, profiles, swipes, matches, conversations and more.\nIn this course we will build an example application with a lot of features similar to an actual dating swipe app that's out on the market right now.\nWe will use Firebase for backend storage and we will learn how to connect and communicate with the backend to show the most up to date information.\nMore features than any Tinder clone app out there.\nWe will build several Tinder features like:\nUser accounts with signup and login\nUser registration with lots of personalizable information\nSwipes left and right and matches\nUser profiles\nUser details screen and potential enhancements\nMatch list view\nLive chat functionality\nError handling\nFor backend development we will use:\nFirebase Authentication for user management\nFirebase Firestore for database access\nFirebase storage for image storage in the backend\nI will show you step by step how to build an Android app in Kotlin and Jetpack Compose similar to Tinder, how to program it and what each step means. It's never been easier to have your own dating app.\n\n\nSign up today and start creating your own dating app",
      "target_audience": [
        "People with an interest in online dating",
        "People with an interest in mobile apps",
        "Beginner devleopers",
        "Intermediate developers"
      ]
    },
    {
      "title": "Learn To Build A Financial App in iOS",
      "url": "https://www.udemy.com/course/learn-to-build-a-financial-app-in-ios/",
      "bio": "Build an advance ios app using database and charts from scratch",
      "objectives": [
        "Learn to create an advance financial app along the instructor",
        "Learn to manage views, charts and data in an iOS App",
        "Learn the best design and development practices for iOS Programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic App Design": [
          "Intro",
          "AddingChartsRef",
          "Testing Charts"
        ],
        "Adding UI": [
          "Overview SceneUI",
          "Add Scene UI",
          "Transaction Scene",
          "TransactionSceneLayout"
        ],
        "Data handling": [
          "Building The DataManager",
          "Wiring Up The Add Scene",
          "Testing Adding & Reading Transactions",
          "Wiring Up Real Chart Data"
        ],
        "Summary": [
          "summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Students should have basic knowledge of ioS and Xcode before starting this course"
      ],
      "description": "Do you want to start creating some top notch apps for the iOS , but don’t know where to get started? Do you want to boost your earnings significantly but don’t know how to write professional apps in XCode?\n\nWell, then this course is just what you are looking for. Our short and sweet course will get you started on learning how to create a simple, yet effective financial app with full charts and advance data handling. You can later add on to this, as you learn more and more advanced techniques, making it an amazing budget keeping app.\nFor this mini course, you will design and build a profit and loss app that will maintain your credits and debits, showing you how much you are earning vs. how much you are spending. You will learn how to design this app in Sketch first, and then convert it into XCode.\nThe app will have three different scenes: Overview, Add and Transactions. The Overview will have added debits and credits, as well as a chart that maps the profit and loss over a certain period such as 3 months. The Add Panel will allow you to add debits or credits made into the system. The debit will be added with a negative symbol and the amount, which will be highlighted in red. The credits will be not highlighted. The Transactions Panel will have the list of debits and credits sorted by date.\nYou will also learn how to add dates that are concatenated with the default year, that also allows changing the year. Additionally, you will also learn how to incorporate third party charting program to add the charts to your app. At the end of this course, you will have learned how to design a clean UI in sketch and convert that into XCode, integrate a charting third party library and feed it data, how to create a data manager that allows data to be moved throughout the app and also sort it.\nA small step can go a long way and with this app under your belt, you will definitely be on your way to building more complex apps in no time. So, what are you waiting for?",
      "target_audience": [
        "Students who want to create powerful data driven chart based apps will find this course very useful"
      ]
    },
    {
      "title": "The Amazing iOS9 Course - Over 84 hours of Content!",
      "url": "https://www.udemy.com/course/the-amazing-ios9-course/",
      "bio": "Learn how to use XCode and Swift. Start a programming career today!",
      "objectives": [
        "Code in Swift",
        "Design apps",
        "Make games",
        "Learn the secrets of iPhone development"
      ],
      "course_content": {
        "Let's learn about Swift": [
          "Amazing iOS9 face intro",
          "Amazing iOS9 Course requirements",
          "01a. Learn Swift 2.0 in 1 hour - Part 1",
          "01b. Learn Swift 2.0 in 1 hour - Part 2",
          "01c. Learn Swift 2.0 in 1 hour - Part 3",
          "01d. Learn Swift 2.0 in 1 hour - Part 4",
          "02a. Learn SpriteKit for iOS9 in 1 hour - Part 1",
          "02b. Learn SpriteKit for iOS9 in 1 hour - Part 2",
          "02c. Learn SpriteKit for iOS9 in 1 hour - Part 3",
          "03a. Tip Calculator for iOS9 - Part 1",
          "03b. Tip Calculator for iOS9 - Part 2",
          "03c. Tip Calculator for iOS9 - Part 3",
          "04a. Make a letter counting app with arrays for iOS9 - Part 1",
          "04b. Make a letter counting app with arrays for iOS9 - Part 2",
          "05a. Reversing Words App for iOS9 - Part 1",
          "05b. Reversing Words App for iOS9 - Part 2",
          "06a. Inspirational Quote App for iOS9 - Part 1",
          "06b. Inspirational Quote App for iOS9 - Part 2",
          "07a. Making an innovative calculator for iOS9 - Part 1",
          "07b. Making an innovative calculator for iOS9 - Part 2",
          "07c. Making an innovative calculator for iOS9 - Part 3",
          "07d. Making an innovative calculator for iOS9 - Part 4",
          "08a. Stock Price Calculator for iOS9 - Part 1",
          "08b. Stock Price Calculator for iOS9 - Part 2",
          "08c. Stock Price Calculator for iOS9 - Part 3",
          "09a. Savings App for iOS9 - Part 1",
          "09b. Savings App for iOS9 - Part 2",
          "09c. Savings App for iOS9 - Part 3",
          "10a. Savings Visualizer for iOS9 - Part 1",
          "10b. Savings Visualizer for iOS9 - Part 2",
          "11a. Score Counter for iOS9 - Part 1",
          "11b. Score Counter for iOS9 - Part 2",
          "12a. Making a Two Button Quiz for Kids for iOS9 - Part 1",
          "12b. Making a Two Button Quiz for Kids for iOS9 - Part 2",
          "13a. Addition Game for iOS9 - Part 1",
          "13b. Addition Game for iOS9 - Part 2",
          "13c. Addition Game for iOS9 - Part 3",
          "14a. Multiplication Game for iOS9 - Part 1",
          "14b. Multiplication Game for iOS9 - Part 2",
          "15a. Subtraction Game for iOS9 - Part 1",
          "15b. Subtraction Game for iOS9 - Part 2",
          "16a. Algebra Addition Game for iOS9 - Part 1",
          "16b. Algebra Addition Game for iOS9 - Part 2",
          "17a. Algebra Multiplication Game for iOS9 - Part 1",
          "17b. Algebra Multiplication Game for iOS9 - Part 2",
          "17b. Algebra Multiplication Game for iOS9 - Part 2"
        ],
        "Continue Mastering Swift": [
          "18a. Playing a Video in iOS9 - Part 1",
          "18b. Playing a Video in iOS9 - Part 2",
          "19a. Compound Interest Calculator for iOS9 - Part 1",
          "19b. Compound Interest Calculator for iOS9 - Part 2",
          "20a. Number Divisor App for iOS9 - Part 1",
          "20b. Number Divisor App for iOS9 - Part 2",
          "21a. Coffee Decider for iOS9 - Part 1",
          "21b. Coffee Decider for iOS9 - Part 2",
          "22a. Tip Calculator for OSX - Part 1",
          "22b. Tip Calculator for OSX - Part 2",
          "22c. Tip Calculator for OSX - Part 3",
          "23a. Character Counter With an Array for OSX - Part 1",
          "23b. Character Counter With an Array for OSX - Part 2",
          "24a. Making a Word Reverser for OSX - Part 1",
          "24b. Making a Word Reverser for OSX - Part 2",
          "25a. Inspirational Quote App for OSX - Part 1",
          "25b. Inspirational Quote App for OSX - Part 2",
          "26a. Innovative Calculator for OSX - Part 1",
          "26b. Innovative Calculator for OSX - Part 2",
          "27a. Stock Price App for OSX - Part 1",
          "27b. Stock Price App for OSX - Part 2",
          "28a. Savings App for OSX - Part 1",
          "28b. Savings App for OSX - Part 2"
        ],
        "Learn the fundamentals of Swift": [
          "29a. Savings Visualizer for OSX - Part 1",
          "29b. Savings Visualizer for OSX - Part 2",
          "30a. Score Counter for OSX - Part 1",
          "30b. Score Counter for OSX - Part 2",
          "31a. Build a Simple Quiz App for Kids for OSX - Part 1",
          "31b. Build a Simple Quiz App for Kids for OSX - Part 2",
          "32a. Make an Addition App for OSX - Part 1",
          "32b. Make an Addition App for OSX - Part 2",
          "33a. Multiplication Game for OSX - Part 1",
          "33b. Multiplication Game for OSX - Part 2",
          "34a. Subtraction Game for OSX - Part 1",
          "34b. Subtraction Game for OSX - Part 2",
          "35a. Algebra Addition Game for OSX - Part 1",
          "35b. Algebra Addition Game for OSX - Part 2",
          "36a. Algebra Multiplication Game for OSX - Part 1",
          "36b. Algebra Multiplication Game for OSX - Part 2",
          "37b. Compound Interest Calculator for OSX - Part 2",
          "38a. Divisor App for OSX - Part 1",
          "38b. Divisor App for OSX - Part 2",
          "39a. Coffee Decider App for OSX - Part 1",
          "39b. Coffee Decider App for OSX - Part 2"
        ],
        "Let's continue learning Swift": [
          "40a. Circular Distortion Generator",
          "41a. Introduction to the Apple Watch - Part 1",
          "41b. Introduction to the Apple Watch - Part 2",
          "41c. Introduction to the Apple Watch - Part 3",
          "41d. Introduction to the Apple Watch - Part 4",
          "42a. Flip a Coin for the Apple Watch - Part 1",
          "42b. Flip a Coin for the Apple Watch - Part 2",
          "43a. Coffee Decider App - Part 1",
          "43b. Coffee Decider App - Part 2",
          "44a. Tip Calculator - Part 1",
          "44b. Tip Calculator - Part 2",
          "44c. Tip Calculator - Part 3"
        ],
        "Learn how to master Swift": [
          "045a. Timers in XCode for Apple Watch - Part 1",
          "045b. Timers in XCode for Apple Watch - Part 2",
          "046a. Make a Dice Random Number Generator - Part 1",
          "046b. Make a Dice Random Number Generator - Part 2",
          "047a. Boy Girl Name Generator - Part 1",
          "047b. Boy Girl Name Generator - Part 2",
          "049a. Emoji Generator - Part 1",
          "049b. Emoji Generator - Part 2",
          "050a. Quote of the Day App - Part 1",
          "050b. Quote of the Day App - Part 2",
          "051a. Making a Pushup Counter"
        ],
        "Let's learn how to use the apple watch": [
          "052a. Making a Productivity Counter",
          "053a. Making a Simple Score Counter",
          "054a. Roman Numeral Watch App - Part 1",
          "054b. Roman Numeral Watch App - Part 2",
          "060a. Learn Spanish on Your Watch - Part 1",
          "060b. Learn Spanish on Your Watch - Part 2",
          "070c. Hour SpriteKit OSX - Part 3",
          "071a. Using Animation and Text for IOS9",
          "072a. Colour Picker for iOS9 - Part 1",
          "072b. Colour Picker for iOS9 - Part 2",
          "073a. Colour Filter on Images for IOS9",
          "074a. Image Opacity App for IOS9",
          "075a. HSB Colour Changer for iOS9 - Part 1",
          "075b. HSB Colour Changer for iOS9 - Part 2",
          "076a. Changing Numbers With Text Fields for iOS9 - Part 1",
          "076b. Changing Numbers With Text Fields for iOS9 - Part 2",
          "077a. To Do Checklist for iOS9 - Part 1",
          "077b. To Do Checklist for iOS9 - Part 2",
          "078a. Introduction to Filters With CI Filer for iOS9",
          "079a. Hue Filter Changer for iOS9 - Part 1",
          "079b. Hue Filter Changer for iOS9 - Part 2",
          "080a. Sketch an Image with Swift in Xcode for iOS9 - Part 1",
          "080b. Sketch an Image with Swift in Xcode for iOS9 - Part 2",
          "081a. Hexagon Image Generator for iOS9",
          "082a. Turning an Image into a Painting for iOS9",
          "083a. Comic Book Image Generator for iOS9",
          "084a. Glowing Image Generator for iOS9",
          "085a. Mosaic Generator for iOS9",
          "086a. Kaleidoscope Image Generator for iOS9",
          "087a. Inverting an Image with CI-Filter for iOS9",
          "088a. Adding a Colour Monochrome Filter to Your App for iOS9",
          "089a. Learn to Use a Chrome Brighten Filter for your Images for iOS9(2)",
          "089a. Learn to Use a Chrome Brighten Filter for your Images for iOS9",
          "090a. Add a Cool Black and White Filter to your Pictures for iOS9",
          "091a. Adding in a Blur to your Images",
          "092a. Sepia Tone Image Generator for iOS9",
          "093a. CI-Vibrance Filter for iOS9",
          "094a. Circle Crop Images and Filter Images for iOS9",
          "095a. Twirle Distortion Image Generator for iOS9",
          "096a. Generate a Border Around an Image for iOS9",
          "097a. Adding an Image on the Screen when you Touch it for iOS9",
          "098a. Use a Filter to Pixellate an Image for iOS9",
          "099a. Reduce Noise in your App",
          "100a. Instagrm Filter Selection for iOS9"
        ],
        "Let's learn about SpriteKit": [
          "01a. Make a Simple Space Shooter - Part 1",
          "01b. Make a Simple Space Shooter - Part 2",
          "01c. Make a Simple Space Shooter - Part 3",
          "01d. Make a Simple Space Shooter - Part 4",
          "01e. Make a Simple Space Shooter - Part 5",
          "01f. Make a Simple Space Shooter - Part 6",
          "01g. Make a Simple Space Shooter - Part 7",
          "02a. Make a Simple Avoid Game for iPad - Part 1",
          "02b. Make a Simple Avoid Game for iPad - Part 2",
          "02c. Make a Simple Avoid Game for iPad - Part 3",
          "02d. Make a Simple Avoid Game for iPad - Part 4",
          "02e. Make a Simple Avoid Game for iPad - Part 5",
          "02f. Make a Simple Avoid Game for iPad - Part 6",
          "02g. Make a Simple Avoid Game for iPad - Part 7",
          "02h. Make a Simple Avoid Game for iPad - Part 8",
          "02i. Make a Simple Avoid Game for iPad - Part 9",
          "03a. Avoid Spikes Game - Part 1",
          "03b. Avoid Spikes Game - Part 2",
          "03c. Avoid Spikes Game - Part 3",
          "03d. Avoid Spikes Game - Part 4",
          "03e. Avoid Spikes Game - Part 5",
          "03f. Avoid Spikes Game - Part 6",
          "04a. Chroma Avoid - Part 1",
          "04b. Chroma Avoid - Part 2",
          "04c. Chroma Avoid - Part 3",
          "04d. Chroma Avoid - Part 4",
          "04e. Chroma Avoid - Part 5",
          "04f. Chroma Avoid - Part 6",
          "05a. Touch the Right Colour - Part 1",
          "05b. Touch the Right Colour - Part 2",
          "05c. Touch the Right Colour - Part 3",
          "05d. Touch the Right Colour - Part 4",
          "06a. Click as Fast as You Can - Part 1",
          "06b. Click as Fast as You Can - Part 2",
          "06c. Click as Fast as You Can - Part 3",
          "07a. Collecting Square Game - Part 1",
          "07b. Collecting Square Game - Part 2",
          "07c. Collecting Square Game - Part 3",
          "07d. Collecting Square Game - Part 4",
          "08a. Collect the Colour Blocks - Part 1",
          "08b. Collect the Colour Blocks - Part 2",
          "08c. Collect the Colour Blocks - Part 3",
          "08d. Collect the Colour Blocks - Part 4",
          "09a. Touch the Right Square - Part 1",
          "09b. Touch the Right Square - Part 2",
          "09c. Touch the Right Square - Part 3",
          "10a. Block Spawning Game - Part 1",
          "10b. Block Spawning Game - Part 2",
          "10c. Block Spawning Game - Part 3",
          "10d. Block Spawning Game - Part 4",
          "10e. Block Spawning Game - Part 5",
          "11a. Whack-a-Mole Game - Part 1",
          "11b. Whack-a-Mole Game - Part 2",
          "11c. Whack-a-Mole Game - Part 3",
          "12a. Collect the Right Colour Blocks - Part 1",
          "12b. Collect the Right Colour Blocks - Part 2",
          "12b. Collect the Right Colour Blocks - Part 2",
          "12c. Collect the Right Colour Blocks - Part 3",
          "12d. Collect the Right Colour Blocks - Part 4",
          "13a. Collecting Random Blocks - Part 1",
          "13b. Collecting Random Blocks - Part 2",
          "13c. Collecting Random Blocks - Part 3",
          "14a. Memory Colour Game - Part 1",
          "14b. Memory Colour Game - Part 2",
          "14c. Memory Colour Game - Part 3",
          "14d. Memory Colour Game - Part 4",
          "15a. Avoid Mine Field - Part 1",
          "15b. Avoid Mine Field - Part 2",
          "15c. Avoid Mine Field - Part 3",
          "15d. Avoid Mine Field - Part 4",
          "16a. Place then Collect - Part 1",
          "16b. Place then Collect - Part 2",
          "16c. Place then Collect - Part 3",
          "17a. Educational Game - Part 1",
          "17b. Educational Game - Part 2",
          "18a. Change Gravity Game - Part 1",
          "18b. Change Gravity Game - Part 2",
          "19c. Making a Collecting Game - Part 3",
          "20a. Follow the Leader - Part 1",
          "20b. Follow the Leader - Part 2",
          "20c. Follow the Leader - Part 3",
          "20d. Follow the Leader - Part 4",
          "18c. Change Gravity Game - Part 3",
          "18d. Change Gravity Game - Part 4",
          "19a. Making a Collecting Game - Part 1",
          "19b. Making a Collecting Game - Part 2"
        ],
        "Learn how to make iPhone Games with SpriteKit": [
          "00a. Introduction to Swift - Part 1",
          "00b. Introduction to Swift - Part 2",
          "00c. Introduction to Swift - Part 3",
          "00d. Introduction to Swift - Part 4",
          "01a. Introduction to SpriteKit - Part 1",
          "01b. Introduction to SpriteKit - Part 2",
          "01c. Introduction to SpriteKit - Part 3",
          "01d. Introduction to SpriteKit - Part 4",
          "01e. Introduction to SpriteKit - Part 5",
          "02a. Building a Space Shooter - Part 1",
          "02b. Building a Space Shooter - Part 2",
          "02c. Building a Space Shooter - Part 3",
          "02d. Building a Space Shooter - Part 4",
          "02e. Building a Space Shooter - Part 5",
          "02f. Building a Space Shooter - Part 6",
          "02g. Building a Space Shooter - Part 7",
          "02h. Building a Space Shooter - Part 8",
          "02i. Building a Space Shooter - Part 9",
          "03a. Circle Avoid - Part 1",
          "03b. Circle Avoid - Part 2",
          "03c. Circle Avoid - Part 3",
          "03d. Circle Avoid - Part 4",
          "03e. Circle Avoid - Part 5",
          "03f. Circle Avoid - Part 6",
          "03g. Circle Avoid - Part 7",
          "03h. Circle Avoid - Part 8",
          "04a. Avoid Spikes - Part 1",
          "04b. Avoid Spikes - Part 2",
          "04c. Avoid Spikes - Part 3",
          "04d. Avoid Spikes - Part 4",
          "04e. Avoid Spikes - Part 5",
          "05a. Chroma Avoid - Part 1",
          "05b. Chroma Avoid - Part 2",
          "05c. Chroma Avoid - Part 3",
          "05d. Chroma Avoid - Part 4",
          "05e. Chroma Avoid - Part 5",
          "05f. Chroma Avoid - Part 6",
          "06a. Block Spawn then Collect - Part 1",
          "06b. Block Spawn then Collect - Part 2",
          "06c. Block Spawn then Collect - Part 3",
          "06d. Block Spawn then Collect - Part 4",
          "06e. Block Spawn then Collect - Part 5",
          "07a. Click as Fast as You Can - Part 1",
          "07b. Click as Fast as You Can - Part 2",
          "09a. Collecting the Right Colours - Part 1",
          "09b. Collecting the Right Colours - Part 2",
          "09c. Collecting the Right Colours - Part 3",
          "09d. Collecting the Right Colours - Part 4",
          "10a. Touch the White Square - Part 1",
          "10b. Touch the White Square - Part 2",
          "10c. Touch the White Square - Part 3",
          "11a. Touch the Right Square - Part 1",
          "11b. Touch the Right Square - Part 2",
          "11c. Touch the Right Square - Part 3",
          "12a. Place Then Collect - Part 1",
          "12b. Place Then Collect - Part 2",
          "12c. Place Then Collect - Part 3",
          "13a. Place the Correct Block - Part 1",
          "13b. Place the Correct Block - Part 2",
          "13c. Place the Correct Block - Part 3",
          "13d. Place the Correct Block - Part 4",
          "13e. Place the Correct Block - Part 5",
          "08a. Collect Squares Game - Part 1",
          "08b. Collect Squares Game - Part 2",
          "08c. Collect Squares Game - Part 3",
          "08d. Collect Squares Game - Part 4",
          "14a. Collecting Blocks - Part 1",
          "16c. Avoid Mines - Part 3",
          "16d. Avoid Mines - Part 4",
          "17a. Whack-a-Mole - Part 1",
          "17b. Whack-a-Mole - Part 2",
          "17c. Whack-a-Mole - Part 3",
          "18a. Math Educational Game - Part 1",
          "18b. Math Educational Game - Part 2",
          "18c. Math Educational Game - Part 3",
          "19a. Gravity Flip Game - Part 1",
          "19b. Gravity Flip Game - Part 2",
          "19c. Gravity Flip Game - Part 3",
          "19d. Gravity Flip Game - Part 4",
          "14b. Collecting Blocks - Part 2",
          "15a. Colour Memory Game - Part 1",
          "15b. Colour Memory Game - Part 2",
          "15c. Colour Memory Game - Part 3",
          "16a. Avoid Mines - Part 1",
          "16b. Avoid Mines - Part 2",
          "20a. Move Blocks to Goal - Part 1",
          "20b. Move Blocks to Goal - Part 2",
          "20c. Move Blocks to Goal - Part 3",
          "21a. Follow the Leader - Part 1",
          "21b. Follow the Leader - Part 2",
          "21c. Follow the Leader - Part 3",
          "21d. Follow the Leader - Part 4",
          "21e. Follow the Leader - Part 5"
        ],
        "Introduction to SceneKit": [
          "01a. Introduction to Scene Kit and Metal - Part 1",
          "01b. Introduction to Scene Kit and Metal - Part 2"
        ],
        "Learn Phaser.io in 1 hour!": [
          "01a. Phaser - Part 1",
          "01b. Phaser - Part 2",
          "01c. Phaser - Part 3",
          "01d. Phaser - Part 4"
        ]
      },
      "requirements": [
        "Need a mac, not PC",
        "Xcode (mac only)",
        "Internet"
      ],
      "description": "Learn how to code in the amazing iOS9 course!\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "This course is for complete beginners",
        "Not for advanced programmers"
      ]
    },
    {
      "title": "Master Flutter & Firebase by Building a ChatGPT Clone App",
      "url": "https://www.udemy.com/course/master-flutter-firebase-by-building-a-chatgpt-clone-app/",
      "bio": "Level up your mobile dev skills by creating a full-stack ChatGPT clone with Flutter, Firebase, and Nebius AI.",
      "objectives": [
        "Build a full-featured AI chat app using Flutter and Firebase from scratch, with real-time messaging and a clean, responsive UI.",
        "Integrate Nebius AI to connect with multiple AI models (like ChatGPT and DeepSeek), and handle AI-generated responses inside your Flutter app.",
        "Implement Google Sign-In using Firebase Authentication and securely store user chat data in Firestore.",
        "Design scalable Flutter apps with light/dark themes, reusable widgets, and structured navigation including bottom tabs and drawers."
      ],
      "course_content": {
        "The UI chunk": [
          "Setting things up",
          "Welcome Screen UI",
          "Theme Data",
          "Theme & Take Home Assignment",
          "Navigation Bar",
          "Drawer UI"
        ],
        "Integrate Nebius API": [
          "Nebius API & Model",
          "AI Service Class",
          "TextField with Dynamic Icon",
          "Testing AI Service"
        ],
        "Display User and AI chats": [
          "Home Screen UI",
          "Home Screen Card",
          "Displaying Messages on Home Screen",
          "Enhancements",
          "Send message through Home Card"
        ],
        "Authentication logic": [
          "Auth Screen UI",
          "Setting Up Firebase",
          "Sign-in with Google Account"
        ],
        "Save and fetch users chat history - Firestore": [
          "Logged In User Drawer",
          "Settings Screen",
          "Store Messages in Database",
          "Read Messages from Firestore",
          "Update Drawer UI",
          "Fetch Chat History from Firebase"
        ]
      },
      "requirements": [
        "Basic knowledge of Flutter and Dart (comfortable with widgets, state, and navigation)",
        "A Google account to use Firebase and Google Sign-In",
        "An OpenAI-compatible API key from Nebius AI (free tier available)",
        "Android Studio, VS Code, or any preferred Flutter IDE installed",
        "A physical or virtual Android/iOS device for testing"
      ],
      "description": "Unlock the power of Flutter and Firebase by building a fully functional, real-time AI chat application inspired by ChatGPT. This hands-on course will walk you through every step of development—from creating a sleek, modern UI to integrating powerful AI models using Nebius AI.\nBy the end of the course, you'll not only have a complete app to showcase in your portfolio, but you'll also gain in-depth experience with real-world tools like Firebase Authentication, Firestore, and OpenAI-compatible APIs.\n\nWhat You'll Learn:\n\nDesign a Sleek UI with Flutter:\nBuild a polished, user-friendly interface using Flutter best practices and material design principles.\nScreen Setup & Navigation:\nSet up multiple screens, bottom navigation bars, and a side drawer for seamless app navigation.\nAI Integration with Nebius API:\nLearn to connect your app to the Nebius AI platform, which allows you to use multiple large language models (LLMs) like ChatGPT, DeepSeek, and others.\nChat Logic & AI Responses:\nHandle real-time messaging, user input, and asynchronous AI responses using clean, scalable chat logic.\nFirebase Authentication:\nImplement secure Google Sign-In with Firebase Auth for a smooth user login experience.\nStore & Retrieve Messages with Firestore:\nPersist user chat history in Cloud Firestore, enabling cross-device access and real-time updates.\nTheming & Reusability:\nBuild reusable Flutter widgets and implement both light and dark mode themes to enhance user experience and code maintainability.\nThis course is perfect for mobile developers, Flutter learners, and tech enthusiasts who want to dive into AI-powered apps and build something both practical and impressive for 2025.",
      "target_audience": [
        "Beginner to intermediate Flutter learners who are comfortable with the basics and ready to build a full-stack, production-ready application.",
        "Tech enthusiasts and students interested in learning how modern AI models like ChatGPT and DeepSeek can be used in mobile apps.",
        "Freelancers or job seekers who want to build an impressive project for their portfolio or GitHub.",
        "Mobile app developers looking to integrate advanced features like chat interfaces, user authentication, and cloud storage."
      ]
    },
    {
      "title": "Complete E-Commerce App in SwiftUI 3, iOS 15 and Apple Pay",
      "url": "https://www.udemy.com/course/complete-e-commerce-app-in-swiftui-3-ios-15-and-apple-pay/",
      "bio": "Build complete app from scratch using SwiftUI 3 and fully integrated Apple Pay with payment processor",
      "objectives": [
        "Apple Pay Setup With Merchant Account",
        "SwiftUI App Development",
        "Complete E Commerce App with Payment Processing",
        "Apple Pay for Item Purchase"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Shoe Shop App": [
          "Folder Structure",
          "Product Model",
          "Cart Model",
          "Product Card",
          "Cart Manager",
          "Product List View",
          "Cart View",
          "Product Row",
          "Average Color Helper CI Filter",
          "Product Detail View"
        ],
        "Apple Pay Support": [
          "Apple Developer Account Setup And Certificate Creation",
          "Payment Handler and Shipping Method",
          "Start Payment and Payment Processing Delegate",
          "Payment Integration into Cart Manager and Cart View",
          "Apple Pay Button and Wrap Up"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Knowledge of SwiftUI",
        "Knowledge of iOS Development",
        "Apple Developer Program Account"
      ],
      "description": "Welcome to another course from DevTechie. In this video course we will build complete app from scratch. We will build this app in SwiftUI 3 and iOS 15. This will be an e-commerce app where we will sell shoes to our customers. You will learn to not only build apps in SwiftUI with this course but you will also learn how to integrate Apple Pay for goods purchase.\n\n\nWe will start by building out interface for our app, where user can list all the products, see details about the product and add them to the cart. Cart manager will be responsible to manage cart at the app level and will make it possible to add items to cart from any where in the app. We will also build Cart manager in such a way where it can handle duplicate products and combine them together to build cart with quantity.\n\n\nYou will learn to create merchant ids for Apple Pay so your users can purchase products from your app without you having to build pipeline for payment processing. Apple Pay provides way to directly integrate payment processing engine in the form of PassKit framework and you will learn to use that so you can use user's wallet data to payment processing without owning or saving any information inside you app.\nThere is a lot that needs to be done to build an e-commerce app and Apple Pay makes it easy with just few simple steps and those are the steps we will learn in this video course. So join me in this course and build this awesome app together.",
      "target_audience": [
        "Students who wants to learn to create complete e-commerce app from start to finish with Apple Pay for Payment Processing"
      ]
    },
    {
      "title": "Complete Vapor 3 Course",
      "url": "https://www.udemy.com/course/complete-vapor-3-course/",
      "bio": "Build custom backend for your iOS app",
      "objectives": [
        "Be able to build custom backend for iOS app and build web app."
      ],
      "course_content": {
        "Building custom API": [
          "Intro to Vapor",
          "Create Routes",
          "Fluent",
          "Configure Database",
          "Create",
          "Retrieve",
          "Update",
          "Delete",
          "Query",
          "Controller",
          "Parent Children Relationship",
          "Sibling Relationship",
          "Code Update"
        ],
        "Building iOS app": [
          "iOS app Part 1",
          "Challenge Solution iOS app part 1",
          "iOS app part 2"
        ],
        "Building Web App": [
          "Leaf Import",
          "Inject Variables",
          "Embed Templates",
          "Beautify",
          "Create Work in Leaf",
          "Edit and delete work",
          "Add and Edit Categories"
        ],
        "Authentication": [
          "Add Password",
          "Basic Authentication",
          "Generate Token",
          "Using Token",
          "Update Tests",
          "iOS Login",
          "iOS Logout",
          "Session Login",
          "Session Logout",
          "Auth Create Work",
          "Cookies",
          "Register",
          "Validation",
          "Migrate Live Database",
          "Conclusion"
        ]
      },
      "requirements": [
        "Be good at Swift and HTML language. Be familiar with CSS & Javascript.",
        "Have access to Mac computer with X Code 9.4.1 installed."
      ],
      "description": "In this course I am going to teach you how to build basic API with Vapor. Starting with setting up routes/URLs and database. Then doing basic CRUD operations. Then Relationships like parent child and sibling relationships. We are going to automatically test all of these code with unit tests.\nThen we are going to build iOS app to make use of the API that we built.\nAfter that we are going to build a web app using Leaf templates. Leaf allows us to create templates that we can embed into another template. This avoid duplicate entries. For example create header and footer once and embed them into all pages. So to update header you only update at single place. Then it will be updated on all places.\nThen we are going to do authentication on iOS app and Web App.",
      "target_audience": [
        "iOS developers who want to build custom backend for their iOS apps. And who wants to build web app."
      ]
    },
    {
      "title": "Android Developer = Compose + MVVM + Clean Architecture",
      "url": "https://www.udemy.com/course/android-developer-compose-mvvm-clean-architecture/",
      "bio": "A full app development cycle by using leading tools and a scalable, testable and robust architecture",
      "objectives": [
        "Create an app from scratch by using the best tools available",
        "Organise and Architect your codebase according to best practices such as MVVM and Clean Architecture",
        "Operate with local and remote data sources and how to combine them",
        "Split your app into feature modules",
        "Migrate to compose and variants of it",
        "Write a beautiful and concise code"
      ],
      "course_content": {
        "Introduction": [
          "Important! Before you start.",
          "Android Studio setup (tools, plugins and cosmetics)",
          "Get the base project and overview"
        ],
        "Base app setup and Architecture Introduction": [
          "Packages - How to organise your files and not get lost",
          "Fragments is all you need! Navigation and delegate your ViewBindings",
          "ViewModels - what are they and how to use them",
          "Retrofit - How to get data from services",
          "RecyclerView - The Good, the bad and the ugly (How to use it right way)",
          "Pagination - Can you load all the movies in one app ?",
          "Clean Architecture - What is a UseCase?"
        ],
        "Lets develop some features, shall we ?": [
          "Search - Find me my favourite movie!",
          "Details - This movie looks nice, I wanna know more!",
          "Room - Local Database setup",
          "Saved - I like this movie! How can I save it?",
          "Modules - What is a Feature Module and how to set it up"
        ],
        "What is Compose and how to completely migrate to it": [
          "Theming in Compose",
          "Creating your first components",
          "Compose your first screen",
          "Compose Search and Saved screens",
          "Compose Details screen",
          "How to navigate in Compose ?",
          "How can we improve Compose Navigation ?"
        ]
      },
      "requirements": [
        "Beginner level, base Kotlin and Android Development knowledge"
      ],
      "description": "Hello and welcome to my Android Development Architecture course!\n\n\nIn this course, we'll build an app from scratch that displays an infinite list of movies that load lazily in blocks. We will implement a search function with real-time API calls and the ability to save movies to a local database in two different ways.\n\n\nWe'll first create the screens by using the old layouts, then I'll show you how to migrate to Compose in simple steps. You might be wondering: why not do this directly in Compose? Well, the answer is simple. Compose is a fairly new technology and not all projects have been migrated yet. You never know what kind of projects you'll end up with. If you understand both systems and work with them as a professional, you will stand out from the crowd. A big advantage is that you can organize and design the migration yourself within your team!\n\n\nBut the most important thing about this app is not its functionality or its design. But how do we architect it and that's why we will use tools that are proven to work best for Android development.\n\n\nHere is a list of the technologies we will use:\n\n\nRetrofit - One of the main network call libraries\nRoom - Google-recommended library for local databases\nKoin - The pragmatic Kotlin Dependency Injection framework\nCoil - to load network images\nGson - Json converter for API responses\nKotlin Flow and Coroutines - Asynchronous or non-blocking programming as an important part of the development landscape.\nKtlint - kotlin-linter\n\n\n\n\nAnd also the Jetpack libraries offered by Google:\nPagination - for simple and infinite data loading\nNavigation - for easy navigation between screens\nMaterials design - design framework\nCompose - the latest Android UI framework\n\n\nThey are all configured and packaged in the standard MVVM or Model-View-ViewModel and Clean Architecture.\n\nYou’ll end up with 2 base projects, first with legacy xml layouting and second with the newest Compose technology. And because we’ll be using TMDB service, after this course you’ll have to possibility to develop your own ideas on top of it and thus, practice the fresh knowledge you just got!\n\n\nThis course is intended to be continually updated, meaning new modules will be added over time, increasing the price, but if you have already purchased the course you will not have to pay extra. And there's always a 30-day money back guarantee if you decide to issue a refund!",
      "target_audience": [
        "Beginner Android Developers who want to create apps the right way"
      ]
    },
    {
      "title": "Flutter & Firebase Feature-Rich Chat App with Copilot",
      "url": "https://www.udemy.com/course/flutter-firebase-feature-rich-chat-app-with-copilot/",
      "bio": "Master Flutter and Firebase: Build a Feature-Packed Chat App from Scratch with Advanced Messaging",
      "objectives": [
        "Understand Flutter Basics: Gain a solid understanding of Flutter fundamentals, including widgets, UI design, and navigation.",
        "Firebase Integration: Integrate Firebase Authentication and Firestore for user management and data storage for your Flutter application.",
        "State Management with Flutter Provider: Master state management using Flutter Provider to efficiently handle the application's state.",
        "One-to-One Chat: Implement one-to-one chat functionality, allowing users to send and receive text messages.",
        "Group Chats: Create group chats with the ability to add users, set rules, and manage group settings.",
        "Multimedia Messaging: Enable users to send various types of messages, including text, images, audio, and video messages.",
        "Advanced Messaging Features: Implement features like reactions to messages, replying to messages, and deleting messages.",
        "Real-time Presence: Display user online status and implement the \"is typing\" feature for a real-time chat experience.",
        "Group Management: Allow users to view and edit group settings, manage group members, and view the number and names of people in a group.",
        "User Profile Management: Enable users to edit their profiles, including profile pictures and personal information.",
        "Friend Requests: Implement a friend request system, allowing users to connect with others.",
        "Notification System: Set up push notifications using Firebase Cloud Functions for timely alerts.",
        "Message Status Tracking: Implement features to show seen messages and count unseen messages for a comprehensive messaging experience.",
        "Theme Customization: Provide the option for users to toggle between light and dark themes for a personalized app experience.",
        "Search Functionality: Enable users to search for other users, making it easy to find and connect with friends.",
        "Gain confidence in building complex and feature-rich applications.",
        "Improve problem-solving skills through practical coding exercises.",
        "Learn best practices for clean and maintainable code structure.",
        "Understand the development process of a real-world mobile app."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Starting the Application",
          "Adding themes to the Application",
          "Home screen UI",
          "Connecting the Application to firestore",
          "Installing packages",
          "Showing Lottie animations"
        ],
        "User Authentication and Profiles": [
          "Login screen UI",
          "Login screen UI Quick Fix",
          "User model class",
          "Auth provider class and sign in with phone method.",
          "OTP screen",
          "User information screen",
          "VerifyOTP method",
          "OTPScreen advanced",
          "Setting up Cloud firestore and storage",
          "Pick image from gallery or Camera part 1",
          "Pick image from gallery or Camera part 2",
          "Save user data to fireStore",
          "Signing In the first user",
          "Displaying user image",
          "Adding Auth state Listener",
          "Stream and display user data",
          "Profile screen UI and behaviour",
          "Profile - Adding Settings Icon and About Me header",
          "People screen, display all users",
          "Profile screen UI and behaviour part 2.",
          "Profile screen UI and behaviour part 3.",
          "Profile screen UI and behaviour part 4.",
          "Profile screen UI and behaviour part 5",
          "Friend Requests and Friends screens"
        ],
        "Chat Functionality": [
          "Chat screen",
          "Chat screen App Bar",
          "Bottom Chatfield",
          "Message model class",
          "Send text message method part 1.",
          "Send text message method part 2.",
          "Send the first message.",
          "Displaying users chat list",
          "Displaying the messages",
          "Grouped List package",
          "Refactor message widget",
          "Message reply function",
          "Message reply preview widget",
          "Send and display the replied message",
          "Fixing the theme",
          "Automatic scrolling and dismiss keyboard",
          "Set message as seen",
          "Set last time user seen",
          "Sending an image message",
          "Displaying an image message",
          "fixes",
          "Send audio message method",
          "Send Audio message",
          "Playing audio file",
          "Adding images and videos into the Android Emulator",
          "Sending a video message",
          "Display and play video message"
        ],
        "Reactions": [
          "Section introduction",
          "Reactions pop up and context menu",
          "Emoji Picker",
          "Emoji and context menu animation",
          "Displaying Reactions on Chat bubble UI",
          "Finalizing the reactions UI",
          "Minor UI changes and code formatting",
          "Add Reaction to message part 1",
          "Add Reaction to message part 2",
          "Refactoring Message widget",
          "Advanced reactions menu animations part 1",
          "Advanced reactions menu animations part 2",
          "Exercise Answer"
        ],
        "Groups": [
          "Groups screen UI",
          "Create Group screen UI",
          "Friend widget",
          "Group model",
          "Group settings Screen UI",
          "Group Provider class",
          "Select Group Admins",
          "Group members duplications fix",
          "Create a Group Chat",
          "Show the created group",
          "Group chat AppBar",
          "Unread message counter part 1",
          "Unread message counter part 2",
          "Unread message counter part 3",
          "Unread message counter for groups",
          "Send and show a group message",
          "Set message seen for groups",
          "Quick fixes",
          "Updating the group provider",
          "Updating the group settings screen",
          "Group information screen",
          "Group details card",
          "Animated dialog",
          "Finalize group information screen UI",
          "Group settings and functions part 1",
          "Group settings and functions part 2",
          "Group settings and functions part 3",
          "Request to join group",
          "Accept group joining request"
        ],
        "Extras and Bonus content": [
          "Reply message preview UI update",
          "Align right widget UI update",
          "Align left widget UI update",
          "Adding Chat Reactions Package",
          "Profile screen UI update",
          "Finalizing Profile Screen UI",
          "Deleting message method",
          "Finalizing Deleting messages",
          "Search Query",
          "Finishing search query",
          "Chats reactions package update",
          "Remove, add group member and exit group",
          "Quick Fix",
          "Resend OTP and AppBar Update",
          "Fix Gradle errors and updrades",
          "SHA Keys",
          "Resend OTP Advanced and Fix",
          "Move image selection to Provider class",
          "Select new image from Profile Screen",
          "Upload new image to Firestore",
          "Update name and status methods",
          "Update name and status in Firestore"
        ],
        "Push Notifications": [
          "Update group details",
          "Push Notifications requirements",
          "Send the first test notification",
          "Handle background Notification",
          "Display Foreground notification",
          "Notification Channel",
          "Generate FCM token and sent Notification",
          "Handle Notification interactions",
          "Add Cloud functions folder",
          "Preparing for cloud functions",
          "Send friend request notification",
          "Display request notification and navigate",
          "Notification Channels Advanced",
          "One to One Chat Notification",
          "Double notification and empty image fix",
          "Request reply notification",
          "Join group request notification",
          "Group request reply notification",
          "Group Chat notification",
          "Notification Service Upgrade Preparing for IOS Notifications",
          "IOS Notification Configurations and Setup",
          "142 Send Test Notification to IOS",
          "IOS Notification Configuration & setup Part 2",
          "IOS Create a Certificate",
          "Bug Fixes Part 1",
          "Bug Fixes Part 2",
          "Bug Fixes Part 3",
          "Bug Fixes Part 4",
          "Bug Fixes Part 5",
          "AppBar Overflow Fix"
        ],
        "Search and Pagination": [
          "New version intro",
          "Update The App to new version",
          "Search Provider",
          "Search Widget and Pagination package",
          "Data Repository",
          "Finalized paginated Chats Stream",
          "Some code formatting",
          "Add Pagination in groups chat list",
          "App Pagination to Group Chat List Part 2",
          "Updating the search widget",
          "Update People screen",
          "Friend List Pagination Part 1",
          "Friend List Pagination part 2",
          "Finalize Search function",
          "Chat Screen Pagination Part 1",
          "Chat Screen Pagination part 2",
          "Some minor code formatting",
          "Mentions",
          "Chat reactions update 1",
          "Chat reactions update 2",
          "Chat reactions update 3",
          "Chat reactions update 4",
          "Chat reactions update 5",
          "Chat reactions update 6"
        ]
      },
      "requirements": [
        "Just some basic programming experience needed, you will learn almost everything you need to know.",
        "You need Android Studio or VS code or any other preferred IDE",
        "Need to install Flutter 3.7 or higher"
      ],
      "description": "Welcome to the comprehensive Flutter & Firebase Chat Application Development course! Unlock the secrets of modern mobile app development as you dive deep into creating a cutting-edge chat application. Whether you're a beginner or an experienced developer, this course equips you with the skills to build a feature-packed application from scratch.\nThroughout the modules, you'll learn the fundamentals of Flutter and Firebase integration, gaining a solid understanding of UI design, navigation, and state management using Flutter Provider. The journey begins with one-to-one chat implementation, paving the way for advanced group chat functionalities.\nExplore multimedia messaging capabilities, allowing users to send and receive text, images, audio, and video messages. Delve into the intricacies of real-time presence, showcasing user online status and implementing features like 'is typing' for a seamless chat experience.\nElevate your app development skills by incorporating advanced messaging features such as reactions, message replies, and message deletions. Effectively manage groups with functionalities like adding users, setting rules, and customizing group settings. Learn to display the number and names of users in a group and efficiently handle group management.\nThe course doesn't stop there. Implement a robust user profile management system, allowing users to edit profiles, upload profile pictures, and personalize their information. Establish a friend request system, facilitating user connections and enhancing the social aspect of your application.\nAs the course progresses, delve into the intricacies of push notifications using Firebase Cloud Functions. Enable users to receive timely alerts and stay engaged with your application. Implement message status tracking, displaying seen messages and counting unseen messages for a comprehensive messaging experience.\nPersonalize the user experience by incorporating theme customization options, allowing users to toggle between light and dark themes. Enhance discoverability with a search functionality, making it easy for users to find and connect with friends.\nBy the end of this course, you'll have the knowledge and skills to develop a sophisticated Flutter and Firebase chat application. Elevate your app development journey and create a lasting impact in the world of mobile applications. Enroll now and embark on the path to becoming a master in Flutter and Firebase development! Flutter & Firebase! Build a cutting-edge chat app with advanced features, real-time updates, and push notifications. Elevate your mobile app development skills now!",
      "target_audience": [
        "Beginner or advanced Developer"
      ]
    },
    {
      "title": "Android and Firebase. Create a Live status update app.",
      "url": "https://www.udemy.com/course/android-and-firebase-create-a-live-status-update-app/",
      "bio": "Developing Android application with Firebase as a backend.",
      "objectives": [
        "Build a working Android live chat and status update app powered by Firebase cloud platform.",
        "Follow along and at the end of the course you will have your own version of an Android live status update chat application."
      ],
      "course_content": {
        "Start Here. Introduction.": [
          "Introducing the Android application we are going to build from scratch.",
          "Connecting Android application with Firebase server."
        ],
        "Deep dive.": [
          "Creating user registration layout. Introducing xml design.",
          "User registration.",
          "Storing registered users to Firebase.",
          "Login registered users with Firebase.",
          "Setting up the app's navigation.",
          "Store registered users to Firebase database as well.",
          "Posting user status.",
          "Adding Firebase recycler view dependencies.",
          "Recycler view single row design and view holder.",
          "Query Firebase and populating recycler view.",
          "Query user's data.",
          "User profile activity.",
          "Updating user name.",
          "Working with photo intent.",
          "Getting user's photo URI.",
          "Storing user photo in Firebase storage and database.",
          "Finishing up."
        ],
        "Source code.": [
          "Source code."
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Basic Android development skills",
        "Basic XML"
      ],
      "description": "In this course we are going to build an Android application from scratch that utilizes Firebase as a backend. We will be able to sign up and login users, store their details, posts and photos in Firebase. We will then use the internet to query the data from Firebase and populate the application in an organized manner.\nWe will learn how to use Firebase's own Recycler view adapter and recycler view instead of List views.\nUsers will be able to update their information once account is created. They can change their name and photo and it will be updated instantly.\nThis will be a great course and goes through almost everything in Android development including working with XML for design.",
      "target_audience": [
        "Android app developers",
        "Mobile developers",
        "Entrepreneur",
        "Programming students",
        "Anyone with the desire to code mobile applications"
      ]
    },
    {
      "title": "Machine Learning use in React Native - The Practical Guide",
      "url": "https://www.udemy.com/course/machine-learning-use-in-react-native-the-practical-guide/",
      "bio": "Build smart Android & IOS applications in React Native | Train Machine Learning Models for React Native , build 10+ Apps",
      "objectives": [
        "Use of Machine learning models with images from gallery and camera in React Native",
        "Use of Tensorflow lite models in React Native",
        "Training Machine Learning models for React Native Applications",
        "Live Feed Image classification and Object Detection in React Native",
        "Image Segmentation and Pose Estimation in React Native",
        "Building Machine learning based Realtime React Native Applications",
        "Machine Learning models use in React Native to build Smart Android and IOS Applications"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Mobile App development in React Native",
        "Developer who knows to develop Hello World Application in React Native"
      ],
      "description": "Welcome to the Machine Learning use in React Native - The Practical Guide\nCovering all the fundamental concepts of using ML models inside React Native applications, this is the most comprehensive React Native ML course available online.\nThe important thing is you don't need to know background working knowledge of Machine learning and computer vision to use ML models inside React Native and train them.\nStarting from a very simple example course will teach you to use advanced ML models in your React Native ( Android & IOS ) Applications. So after completing this course you will be able to use both simple and advanced Tensorflow lite models in your React Native( Android & IOS ) applications.\nWho can take this course\nAnyone with a very little knowledge of app development in React Native with Expo or with React Native CLI. We will use React Native CLI but course will also guide you if you just have the expo knowledge.\nCourse structure\nWe will start by learning about an important library\nImage Picker: to choose images from the gallery or capture images using the camera in React Native\nSo later we can use a computer vision model with both images and live camera footage in React Native.\n\n\nThen we will learn the use of popular pre-trained TensorFlow lite models inside React Native applications. So we explore some popular models and build the following React Native applications in this section\nImage classification React Native application using images of gallery and camera\nImage classification React Native application using live footage from the camera\nObject detection React Native application using images of gallery and camera\nHuman pose estimation React Native application using images of gallery and camera\nImage Segmentation React Native application using images of gallery and camera\n\n\nAfter learning the use of pre-trained machine learning models inside React Native we will learn to train our own Image classification models without knowing any background knowledge of Machine Learning. So we will learn to\nGether and arrange the data set for the machine learning model training\nTraining Machine learning some platforms with just a few clicks\nSo in that section, we will\nTrain a dog breed classification model for React Native\nBuild a React Native( Android & IOS ) application to recognize different breeds of dogs\nTrain Fruit recognition model using Transfer learning\nBuilding a React Native( Android & IOS ) application to recognize different fruits\n\n\nSo the course is mainly divided  into two major sections\nPretrained TensorFlow lite models for React Native\nTraining image classification models for React Native\n\n\nSo in the first section of this course, you will learn about using Tensorflow lite models inside React Native. Tensorflow Lite is a standard format for running ML models on mobile devices. So in this section, you will learn the use of pretrained powered ML models inside React Native for building\nImage Classification React Native( ImageNet V2 model )\nObject Detection  React Native( MobileNet model, Tiny YOLO model)\nPose Estimation  React Native( PostNet model )\nImage Segmentation  React Native( Deeplab model )\napplications. So not only you will learn to use these models with images but you will also learn to use them with frames of camera footage to build real-time React Native applications.\nSo after learning the use of Machine Learning models inside React Native using two different approaches in the third section of this course you will learn to train your own Machine Learning models without any background knowledge of machine learning. So in that section, we will explore some platforms that enable us to train machine learning models for mobile devices with just a few clicks. So in the third section, you will learn to\nCollect and arrange the dataset for model training\nTraining the Machine Learning models from scratch using Teachable-Machine\nRetraining existing models using Transfer Learning\nUsing those trained models inside React Native Applications\nSo we will train the models to recognize different breeds of dogs and to recognize different fruits and then build React Native Applications using those models for android and IOS.\nBy the end of this course, you will be able\nUse pre-trained Tensorflow lite models inside Android & IOS applications using React Native\nTrain your own Image classification models and build React Native applications.\nYou'll also have a portfolio of over 10 React Native apps that you can show off to any potential employer.\nSign up today, and look forwards to:\nHD 1080p video content, everything you'll ever need to succeed as a React Native Machine Learning developer.\nBuilding over 10 fully-fledged React Native applications including ones that use Objet detection, Pose estimation models, and much much more.\nAll the knowledge you need to start building Machine Learning-based React Native(Android or IOS) application you want\n$2000+ Source codes of 10 Applications.\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risks and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's best React Native Machine Learning course.\nWho this course is for:\nBeginner React Native developer with very little knowledge of mobile app development in React Native\nIntermediate React Native developer wanted to build a powerful Machine Learning-based application in React Native\nExperienced React Native developers wanted to use Machine Learning models inside their applications.\nAnyone who took a basic React Native mobile app development course before\nAnyone with knowledge of React Native App development with expo\nAnyone with knowledge of React Native App development without expo (CLI)",
      "target_audience": [
        "Anyone who took Basic React Native course before",
        "Beginner React Native Developer curious about Machine learning and computer vision use in React Native",
        "Experienced Professional want to add ML models in their React Native Applications",
        "App developer want to learn use of Machine learning in their React Native Applications",
        "Intermediate React Native developers looking to enhance their skillset"
      ]
    },
    {
      "title": "Implement Clean Architecture in a Flutter app",
      "url": "https://www.udemy.com/course/master-clean-architecture-in-flutter-for-beginners/",
      "bio": "Build application from scratch using Clean Architecture, Bloc and Cubit",
      "objectives": [
        "Clean Architecture Design Pattern",
        "Cubit State Management",
        "Bloc State Management",
        "Implement Rest API",
        "Dependency Injection",
        "Data Layer",
        "Presentation Layer",
        "Domain Layer"
      ],
      "course_content": {
        "Introduction": [
          "Overview and Creating project"
        ],
        "UI & Entities": [
          "UI",
          "Entities"
        ],
        "Service Locator Package": [
          "Service Locator Package"
        ],
        "Usecases and Repositories": [
          "Usecases and Repositories"
        ],
        "Models": [
          "Models"
        ],
        "Data sources and Repositories": [
          "Data sources and Repositories"
        ],
        "Services": [
          "Services"
        ],
        "Bloc with Cubit State management": [
          "Bloc with Cubit State management overview",
          "Bloc and Cubit implementation in App"
        ],
        "Testing Modularity of Clean Architecture": [
          "Testing Modularity of Clean Architecture"
        ]
      },
      "requirements": [
        "Dart and Flutter Knowledge is a MUST",
        "Install Android Studio or Visual Studio and have Flutter SDK ready"
      ],
      "description": "Clean Architecture is the blueprint for a modular system, which strictly follows the design principle called separation of concerns. More specifically, this style of architecture focuses on dividing software into layers, to simplify the development and maintenance of the system itself. When layers are well-separated, individual pieces can be reused, as well as developed and updated independently.\n\n\nIn this course you will make an entire application from scratch using Clean Architecture and Bloc and Cubit state management. You will also incorporate REST API using two different packages Http and Dio. And you will learn about Dependency Injection and how to make it simple using get_it package. You will learn about file structure of a real world application and how to make your code scalable and modular.\n\n\nThe clean architecture will divide the Flutter project into 3 main layers, namely:\n\n\nPresentation Layer\nThe presentation layer consists of the code to access the data of the app from a repository. Also, there is the code for state management such as providers, BLoC, and so on.\nDomain Layer\nThe domain layer is the deepest in the clean architecture. This layer contains the code for business logic applications such as entities and use cases.\nData layer\nThe data layer is located at the outermost layer. This layer consists of data source code such as consume Rest API, access to the local database, Firebase, or other sources. Also, on this layer, there is usually the platform code that builds up the UI (widgets).",
      "target_audience": [
        "Developer who already has a knowledge in dart and flutter",
        "Beginner and Junior developer who wants to master flutter",
        "Developer who needs to create a structured project with clean architecture"
      ]
    },
    {
      "title": "Flutter Advanced: Multi-Modular & Clean Architecture | Bloc",
      "url": "https://www.udemy.com/course/flutter-advanced-multi-modular-clean-architecture-bloc/",
      "bio": "Flutter Pro Skills: Melos, BLoC, Dependency Injection, Caching, API integration, State renderer, Error Handler",
      "objectives": [
        "Multi-Modular Architecture – Structure Flutter apps into scalable modules.",
        "State Management with BLoC – Implement predictable state management.",
        "Networking & API Handling – Work with Dio, Retrofit, and API-safe calls.",
        "Dependency Injection – Manage dependencies efficiently across modules.",
        "Error Handling – Implement robust error-handling mechanisms.",
        "Session & Preferences Management – Handle user authentication and data storage.",
        "Navigation System – Create a modular and maintainable navigation flow.",
        "Caching & Performance Optimization – Optimize app performance with caching.",
        "Melos & Monorepo Configuration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About the Course",
          "What Will You Learn in This Course?",
          "Who Can Attend This Course?",
          "How To Get Source Code of Each Lecture?"
        ],
        "Adding Core Module - The Brain": [
          "Lect-6- How to create a Module",
          "Lect-7- Create a Data Module",
          "Lect-8- Create a Domain Module",
          "Lect-9- Create a Presentation Module"
        ],
        "Adding Features Module - Fueling Your App with Features": [
          "Lect-10- Adding Authentication Directory and Configuring Login and Movies Module",
          "Lect-11- Creating Register Module",
          "Lect-12- Adding Home/Main Module",
          "Lect-13- Adding Settings Directory and Creating App Settings Module",
          "Lect-14- Adding Profile Module"
        ],
        "Managing Central Dependencies Using Melos - No More Nightmares!": [
          "Lect-15- What is Melos?",
          "Lect-16 Add Melos Dependency",
          "Lect-17- Initiating Melos",
          "Lect-18- Managing Central Dependencies",
          "Lect-19- Control the Packages",
          "Lect-20- Run Melos Commands",
          "Lect-21- Create Custom Commands in Melos",
          "Lect-22- Executing Tests in All Project Modules",
          "Lect-23- Say No to Implicit Dependencies The Dangers of Exporting Dependencies"
        ],
        "Injecting Dependencies Like a Pro - The Lifeline": [
          "Lect-24- Adding Get It and Injection depepanceis and more",
          "Lect-25- Setup Dependency Injection with Injectable & GetIt",
          "Lect-26- Configure Dependency Injection for Many Environments (Dev, Prod, Test)",
          "Lect-27- Environment-Based Dependency Injection for App Settings",
          "Lect-28- Testing App Settings Provider",
          "Lect-29- Add DataStore Module and Implement Session Provider",
          "Lect-30- Verify \"Module to Module\" & \"Module to Root\" & \"Root to Module\" Access"
        ],
        "Building a Resilient Data Layer – The Unbreakable Network Shield": [
          "Lect-31- Defining and Managing API Headers",
          "Lect-32- Building a Dio Factory for Network Layer Management"
        ],
        "The Login Module Blueprint - Crafting the Core": [
          "Lect-33- Retrofit and Retrofit Generator Dependencies",
          "Lect 34- Creating a Login Service with Retrofit and Dio",
          "Lect-35- Creating a Login Response Model with JSON Serialization",
          "Lect-36- Adding Parse Error Logger to Login Service",
          "Lect-37- Adding Login Remote Data Source and Request Body",
          "Lect-38- Implementing a Failure Model with Localized Message",
          "Lect-39- Add Dartz Either for Functional Error Handling",
          "Lect-40- Implement Login Repository with Dartz Either",
          "Lect-41- Using Extension Functions for Response Mapping",
          "Lect-42- Adding Extensions Module in the Core Layer",
          "Lect-43- Update Login Mapper with Extensions for Better Code Reusability",
          "Lect-44- Implement Login Repository with Remote Data Source Integration",
          "Lect-45- Implementing Safe API Call with Dartz Either for Error Handling",
          "Lect-46- Updating Login Repository with Safe API Call and Error Handling",
          "Lect-47- Implementing Network Connectivity Checker with Connectivity Plus",
          "Lect-48- Enhancing Safe API Call with Network Connectivity Check",
          "Lect-49- Adding the Base Use Case and Implementing Login Use Case"
        ],
        "Unbreakable Connections: Advanced Error Management - Your Shield Against Network": [
          "Lect-50- Centralizing Error Handling Using a DataSource Enum",
          "Lect-51- Mapping API Responses to User-Friendly Messages",
          "Lect-52- Handling Network Errors and Timeouts with Custom Response Codes",
          "Lect-53- Standardizing API Response Messages for Better UX",
          "Lect-54- Mapping DataSource to Failures in a Scalable Way",
          "Lect-55- Converting Dio Error Responses into Meaningful Failure Messages",
          "Lect-56- Handling Dio and Unexpected Errors with a Custom ErrorHandler",
          "Lect-57- Updating Safe API Calls with Custom Exception Handling"
        ],
        "Integrating Shared Preferences & Network DI - The Memory Nexus": [
          "Lect-58- The Core Conductor – Injecting Network & Preferences",
          "Lect-59- Next Level Dio – Injecting Dependencies the Right Way",
          "Lect-60- Persistent Preferences – Managing Language & Base URL",
          "Lect-61- Implement Preferences with SharedPreferences",
          "Lect-62- Implement Session Provider with SharedPreferences",
          "Lect-63- Update Data DI Module with Session and Preferences Providers",
          "Lect-64- Add DataStore DI Module",
          "Lect-65- Add Configuration Data Core Dependencies",
          "Lect-66- Make Configure Dependencies func async"
        ],
        "Login Module: Finalizing and Testing Domain & Data Layers – From A to Z": [
          "Lect-67- Provide Login Dependencies in DI Module",
          "Lect-68- Injecting Login UseCase and Configure Login Feature Dependencies",
          "Lect-69- Execute Login API and Test Implementation",
          "Lect-70- Test Error handler"
        ]
      },
      "requirements": [
        "Flutter & Dart Basics – You should be comfortable with Flutter widgets, Dart syntax, and building simple apps.",
        "Understanding Object-Oriented Programming and basic design patterns will help.",
        "API Integration – Basic knowledge of making API requests (e.g., using HTTP, Dio, or Retrofit).",
        "State Management Fundamentals",
        "Basic Dependency Injection"
      ],
      "description": "Here's a course description for Flutter Advanced Course: Multi-Modular & Clean Architecture:\nFlutter Advanced Course: Multi-Modular & Clean Architecture\nMaster Scalable & Maintainable Flutter Apps with a Multi-Modular Architecture\nAre you an experienced Flutter developer looking to take your skills to the next level? This course dives deep into multi-modular architecture, state management with BLoC, networking with Dio & Retrofit, and dependency injection to help you build scalable, maintainable, and testable Flutter applications.\nWhat You'll Learn:\nMulti-Modular Architecture – Structure your Flutter project into maintainable modules.\nDependency Management – Manage dependencies effectively with Melos.\nState Management with BLoC – Implement clean state management using the BLoC pattern.\nNetworking & API Handling – Work with Dio, Retrofit, and API-safe calls.\nError Handling – Implement robust error-handling mechanisms.\nSession & Preferences – Manage user sessions with SharedPreferences.\nNavigation & UI Components – Build a modular navigation system and reusable UI components.\nCaching & Performance Optimization – Implement data caching for a smoother user experience.\nCourse Breakdown:\nCore Architecture Setup – Learn how to create a modular core package and set up dependency injection.\nNetworking & Data Layer – Implement API handling, data repositories, and use cases.\nFeature Modules – Develop independent feature modules like authentication and movie browsing.\nState Management with BLoC – Implement BLoC-based architecture for predictable state management.\nNavigation & UI Composition – Design a scalable UI structure with a dedicated navigation module.\nPerformance Optimization – Improve app efficiency with caching and optimized API calls.\nBy the end of this course, you'll have the skills to architect, develop, and maintain large-scale Flutter applications using industry best practices.\nEnroll now and elevate your Flutter expertise!",
      "target_audience": [
        "Intermediate Flutter developers who want to build scalable, maintainable apps.",
        "Developers looking to master modular architecture and BLoC state management.",
        "Anyone who wants to structure a Flutter app for real-world production use.",
        "Mobile Developers Transitioning to Flutter – If you're coming from Android (Java/Kotlin) or iOS (Swift/Objective-C) and want to learn Flutter the right way.",
        "Tech Leads & Architects – If you’re responsible for designing and managing large Flutter applications in a team-based environment.",
        "Anyone Preparing for Flutter Interviews – If you're preparing for advanced Flutter developer interviews, this course will help you stand out with real-world architecture knowledge."
      ]
    },
    {
      "title": "Swift TVOS Crash Course - Build a Space Shooter in SpriteKit",
      "url": "https://www.udemy.com/course/swift-tvos-crash-course-build-a-space-shooter-in-spritekit/",
      "bio": "Learn to code in Swift. Build a game in SpriteKit for the new TVOS. Be the first one to have a TVOS app!",
      "objectives": [
        "Be able to code in Swift",
        "Make an app for TVOS",
        "Know how to make a game in SpriteKit"
      ],
      "course_content": {
        "Let's Learn about TVOS": [
          "Let's download Xcode",
          "01. TVOS CrashCourse adding in sprites",
          "02. Adding in the controls",
          "03. SKActions"
        ],
        "Let's Learn about TVOS and SpriteKit!": [
          "01. Introduction to the game",
          "02. Game Preview",
          "03. Starting the game",
          "04. Setting up the player controls",
          "05. Setting up the enemy",
          "06. Spawning the stars",
          "07. Spawn projectile rate",
          "08. Setting up physics part 1",
          "09. Adding in the phyics part 1",
          "10. Setting up the physics part 2",
          "11. Adding the isAlive",
          "12. Adding in the labels",
          "13. Resetting the game",
          "14. Finalizing the game",
          "15. Adding in color",
          "16. Challenge"
        ]
      },
      "requirements": [
        "A mac computer",
        "Xcode",
        "This course does not support virtual environments"
      ],
      "description": "This course was funded through a massively successful Kickstarter campaign.\nLearn to build TVOS apps in Xcode with Swift.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "Complete beginners",
        "People who want to learn to code by making games"
      ]
    },
    {
      "title": "Publish your own iPhone Camera Stickers app without coding",
      "url": "https://www.udemy.com/course/publish-your-own-iphone-camera-stickers-app-without-coding/",
      "bio": "A-Z guide to build your own iPhone Camera Sticker app and publish it to the iTunes app store. Full Source Code included",
      "objectives": [
        "Learn how to get your iOS developer license",
        "Learn how to create your own iPhone app without having to write code",
        "Learn basics of xcode for iOS development",
        "Learn how find free graphic images for apps and games",
        "Learn how to modify and create your own game graphics, for non-artists",
        "Learn how to publish your very own iPhone app to the iTunes app store in one afternoon"
      ],
      "course_content": {
        "Introduction": [
          "Get to know your instructor",
          "Get your iOS developer license",
          "Create the developer certificate",
          "Get Xcode tool and open it",
          "How to create the app bundle ID and provisioning profile"
        ],
        "Initial Setup": [
          "Download source code",
          "Assets overview and new theme selection",
          "About Gimp and Photoshop softwares"
        ],
        "The Reskinning Process": [
          "Customizing the app logo image",
          "Making a stunning background image",
          "Modifying the camera and gallery buttons",
          "Adding a character image within the logo",
          "Modifying the frames colors",
          "Adding a custom grid overlay as a frame",
          "Adding any number of new frames to the app",
          "Create your own stickers for free",
          "Add your own custom stickers to the cam app"
        ],
        "iTunes Connect Setup": [
          "Create the app icon yourself for free",
          "Resizing all app icons to fit each iPhone home screen sizes",
          "Changing your app name and code signing",
          "Adding a new app to iTunes Connect dashboard",
          "Filling out the ITC app settings",
          "How to take in app screenshots and add them to ITC"
        ],
        "Publishing to the app store": [
          "Xcode archiving process",
          "Validating your app archive",
          "Uploading your app to iTunes",
          "Submiting the app for review",
          "Optional - Admob Full screen advertising setup",
          "BONUS"
        ]
      },
      "requirements": [
        "a MAC computer or MacInCloud online virtual MAC if you want to do it as you follow the lectures."
      ],
      "description": "*** BONUS ***\nFull source code of the camera stickers app INCLUDED as a FREE BONUS. All you have to do is join the course and it's yours.\n***************\n\nHello my name is Yohann, I will be your instructor.\nIn this course, you will learn how to build your very own iPhone camera application and publish it in the iTunes app store.\nThe camera app lets the user take a picture, or a selfie or choose from the image gallery then the user can add stickers and frames onto the pictures and then share it on social networks or by text messages.\nYou will get to customize the app by creating your very own stickers and frames, and by customizing the look and feel of the camera app to your own taste.\nNow I will show you every single steps you need to make it happen as I will be demonstrating you how i take the original app and make it into a Cat stickers camera app.\nI came up with a system so that you don't need to know how to program and you won't have to write no even one single line of code. You also don't need to be an artist to create the stickers and the frames for i will show you tips and tricks to follow along.\nAlso you won't need to break the bank because all the tools and assets we use in this course are free to use* (free trial for Photoshop or use Gimp totally free)\nAs a bonus, I give you the full source code of the camera app with lots of stickers for free! By the way, a source code like this would cost you thousands of dollars to get it built, and it could be yours just by taking the course..\nBy the end of this course, you will end up with your very own iPhone camera app published in the iTunes app store. and then you can brag to your family and friends!\nInvest in yourself, invest in your education.\nJoin the course now.\nWHAT YOU WILL GET AFTER COMPLETING THE COURSE ?\nYou will have your very own Camera iPhone app published and ready for sale in the iTunes app store, ready to bring in revenues from each sale.\nYou will be able to get all free resources, including the source code with an unlimited license.\n\nYou can publish apps every weekend, using the same source code, included within this course as a bonus, for free.\nYou will have the potential to make a lot of passive income, it's time to awaken the entrepreneur in you.\n************ READ ON ! **************\n\nLooking to boost your income as a App developer? Or maybe you're seeking a career change that gives you more free time and flexibility?\nThen this is the right course for you.\nYOU CAN BECOME AN APP DEVELOPER\niOS has a huge platform where you can sell your apps and potentially make a lot of money . This course will take you from the very basic concepts of game development using the free software given by Apple.\nHOW MUCH DO YOU HAVE TO SPEND?\nThere is actually no more expenses except signing up besides getting the iOS developer license ($99/year). And we will show you the places from where you can get the resources we want without spending a single dollar.\n*********** HOW MUCH YOU CAN EARN *******\nYou can earn more than you think. I am the one example of that after studying this method i could create and publish game app every week . So i could make a lot of money without putting more effort . Join this course and follow me and you will make a lot money than you think.\nENROLL THE COURSE NOW AND PUBLISH YOUR VERY FIRST iPHONE CAMERA APP, all it takes is one free afternoon.",
      "target_audience": [
        "Solo / Indi entrepreneurs",
        "Graphic design students",
        "Computer science students",
        "great course for someone who wants to learn about the iTunes publication process",
        "People who want to start a mobile app business the inexpensive way, on their own"
      ]
    },
    {
      "title": "Learn Android App Development & Promote Your App like a Pro",
      "url": "https://www.udemy.com/course/android-app-development-in-3-days-1000000-downloads/",
      "bio": "Learn how to create a Productivity Android App and how to rank #1 in Play Store and get 1,000,000 downloads.",
      "objectives": [
        "Transform an idea into an Android app",
        "Implement Material Design Toobar, Navigation Drawer, RecyclerView, etc",
        "Understand the core components on Android development",
        "Implement Android In App Purchases and Publish Android app to Play Store",
        "Promote your app to increase downloads",
        "Strategies and Steps to monetize your app"
      ],
      "course_content": {
        "Introduction": [
          "What you will get out of this course",
          "Course Structure",
          "Course Requirement",
          "This course is not for you if",
          "Introduction to Val Okafor and what he will teach",
          "Introduction to Alex Genadinik and what he will teach",
          "The App that you will be building in this course",
          "Why an Attendance App?"
        ],
        "Project Planning": [
          "User Story",
          "Use Case Diagram and Domain Objects",
          "Domain Objects 2",
          "How many screens do we need for this app?",
          "Introduction to Activity",
          "Introduction to Fragment",
          "How many Activity and Fragment do we need?",
          "Conclusion"
        ],
        "Project Creation": [
          "This is what we will build in this section",
          "An overview of Material Design",
          "Introduction to Navigation Drawer",
          "Introduction to RecyclerView & RecyclerView Adapter",
          "Development Environment Setup",
          "Programming Task List",
          "Create brand new Android App Project using Android Studio",
          "Create Material Design Toolbar",
          "Add RecyclerView",
          "Implement Navigation Drawer with Header View - Part 1",
          "Implement Navigation Drawer with Header View - Part 2",
          "Implement navigate to other Fragments through Navigation Drawer",
          "Add Animations to Fragment Transaction",
          "Conclusion"
        ],
        "Implement Core Functionalities": [
          "Just Enough Java - Introduction to Object Oriented Classes, Objects",
          "Model Classes, Properties and Relationships",
          "Introduction to the basics of Android User Interface",
          "Create Add Attendant User Interface",
          "Implement Add Attendant Java Code",
          "External Libraries - Buy It or Build It",
          "Implement Add Event UI",
          "Implement Add Event Java Code",
          "Material Design Floating Action Button - One",
          "Material Design Floating Action Button - Two",
          "Implement Attendance List User Interface",
          "Implement Attendant's List Adapter",
          "Implement Attendant's List Java code",
          "Implement Event's List User Interface",
          "Implement Event Adapter - A",
          "Implement Event Adapter - B",
          "Implement Event's List Java code",
          "Conclusion"
        ],
        "Implement Data Persistence": [
          "Introduction to SharedPreference",
          "Introduction to SQLite Database",
          "Introduction to Object Relational Mapper",
          "Introduction to Android Sugar ORM",
          "Implement persistence using Sugar ORM",
          "Test data persistence",
          "Conclusion"
        ],
        "Implement Business Logic": [
          "Introduction to Business Logic",
          "Implement List Sorting",
          "Implement Share Event",
          "Implement delete Event",
          "Edit Event",
          "Implement Check In",
          "Implement Checkout",
          "Implement add Attendant from device Contact",
          "Implement Export Guest List",
          "Set Active Event",
          "Android In App Purchase - Part 1",
          "Android In App Purchase - Part 2",
          "Implement Take Photo with Camera",
          "Conclusion"
        ],
        "Publish App": [
          "Refactor & Polish",
          "Settings",
          "Generate APK",
          "Play Store Listing",
          "Publish To Google Store",
          "Conclusion"
        ],
        "Lesson Learned, FAQ and Further Reading": [
          "Recommended Blogs and Readings",
          "Lesson Learned",
          "Frequently Asked Questions"
        ],
        "Alex: Apps as a business": [
          "Examining the mobile app business: pros and cons",
          "Common success patterns for mobile apps",
          "6 ways to protect your intellectual property",
          "App business fundamentals quiz"
        ],
        "Launching your app like a pro": [
          "3 great ways to launch your app",
          "On which app stores to put your Android app & app store comparison",
          "App launch quiz"
        ]
      },
      "requirements": [
        "Desire to learn Android development",
        "Any prior attempt to learn Android development or any other object oriented programming will be beneficial"
      ],
      "description": "NOTE: this course typically sells for $299, but we reduced the price to $49 until the end of the month to help make it more affordable for you.\nThis Android development course teaches you how to take an idea and transform it into a fully functioning Android app and publish it to the Google Play Store within just a few days or weeks.\nStop your frustration today\nDid you try learning Android development before, and it was too complicated, frustrating and difficult? Were you left with the bad options of having to hire expensive app developers or dev agencies? This course solves all those problems.\nWith this course you will get a step by step, very clear guide, on how to make your own apps, and get two instructors committed to helping you develop your app, launch it like a pro, and get many downloads for it.\nTry the course now and start getting closer to building the next amazing app\nHow good would you feel if you never had to depend on hiring app developers or needing any money to launch your app? It would be amazing, right? And it is completely within reach!\nIf you have an idea for an Android mobile app, all your frustrations can end today so sign up for the course, and start taking real steps to making your app a reality.\nIf you are stuck trying to figure out where to start, you will love how this course is structured. This course teaches you the practical core concepts of Android development in a step by step manner, and you will be able to immediately use those concepts to build productivity and utility Android apps.\nAndroid Dominance: Every Day You Don't Have An App, You Are Missing Out\n1,500,000 DAILY new global Android device activation\n78% Android global smart phone market share\nSoon Android will overtake Apple for revenue generated by app developers and it is currently almost even.\nLearning by Doing\nYou learn development by\nStudy\nPractice and\nReading other peoples code\nThis course was designed to help you become an Android developer with a published app at the end of the course. Complex topics will be explained to you in common terms and you will be provided the source code that we will work on throughout the course and you will also be provided with a PDF step by step guide on all the programming task that will be performed.\nThis course will teach you how to use Android Studio which is now the official IDE for Android development. You will learn how to structure your project, which components to add first, how to proceed and more importantly how to integrate source control into Android development.\nLearn Android Material Design\nLearn the core components of Android development including Activity, Fragments and Intent, etc\nMaster how to implement List in Android app using RecyclerView\nLearn how to implement data persistence in Android using SharedPreferences, SQLite Database and ORM\nLearn Android features such how to use the Camera, Settings, and how to Pick Contact from Address book.\nLearn advanced topics such as how to generate and export a CSV file from Android, how to run a task in the background and Android in app purchases\nLearn App Business Planning, Marketing and Monetization To Get 1,000,000 Downloads And Make A Significant Income From Your Apps\nThis is the first Android course that combines software development with extensive app marketing, monetization and business strategies.\nWith this course you won't simply make an app, but you will learn how to position and promote your app to get tremendous exposure and make you money.\nMost app entrepreneurs find themselves lost after they launch their app because they struggle to get downloads. But not you. In this course, you will learn the business of apps, find growth, and make your apps a success, starting from absolute scratch.\nNo risk to try, so sign up now\nEvery Udemy course comes with a 30-day money back guarantee. So if there is something you don't quite right with the course, you can just get your money back. But we are sure that you will love the course, and that you will love being able to make many apps of your own without having to depend on anyone. And if all else fails, you will be able to get a very well paying Android development job and make a great salary. So go ahead, sign up for the course, and begin making your app a reality starting today.",
      "target_audience": [
        "If you have tried to learn Android development on your own but is frustrated with how disjointed the learning material is then this course is for you because it focuses on building one app from start to finish so you see how all the parts fit together."
      ]
    },
    {
      "title": "Master Android by Building 3 Applications in Kotlin Language",
      "url": "https://www.udemy.com/course/master-android-by-building-3-applications-in-kotlin-language/",
      "bio": "Master the Art of Android App Development with Java by Building Real-World Applications",
      "objectives": [
        "Develop Android applications from scratch using Kotlin, the modern and expressive programming language for Android.",
        "Understand the latest Android 14 version and ensure backward compatibility with older Android devices.",
        "Build three complete and functional Android applications, including a word-guessing game, a simple calculator, and a long story app.",
        "Utilize Android Studio as the primary development environment for creating high-quality Android applications.",
        "Master essential concepts and techniques in Android app development, including user interface design, app testing, and Java programming in the context of Kotlin"
      ],
      "course_content": {
        "1 Guess the Word App Project Through Kotlin": [
          "Lecture 1 of Guess The Word Application Kotlin",
          "Lecture 2 of Guess The Word Application Kotlin",
          "Lecture 3 of Guess The Word Application Kotlin",
          "Lecture 4 of Guess The Word Application Kotlin",
          "Lecture 5 of Guess The Word Application Kotlin"
        ],
        "Simple Calculator App in Android Through Kotlin": [
          "Lecture for the Simple Calculator Application with Kotlin"
        ],
        "Long Story App Project Through Kotlin": [
          "Long Story Application Part 1 with Kotlin",
          "Long Story Application Part 2 with Kotlin",
          "Long Story Application Part 3 with Kotlin",
          "Long Story Application Part 4 with Kotlin",
          "Long Story Application Part 5 with Kotlin",
          "Long Story Application Part 6 with Kotlin"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic understanding of object-oriented programming (OOP) concepts, such as classes, objects, and inheritance.",
        "Installation of Java Development Kit (JDK) on their computer to compile and run Java code.",
        "A computer (PC) with internet access to download software and tools required for Android app development.",
        "Android Studio, the official Integrated Development Environment (IDE) for Android app development, should be installed on their computer to build and test Android applications."
      ],
      "description": "Are you aspiring to become an Android Developer and eager to publish your own apps? Are you seeking the convenience of learning from the comfort of your home without having to attend classes? Do you want to stay up-to-date with the latest technology and app development trends? If you have brilliant ideas and a strong desire to bring them to life by creating your own apps from scratch, then \"Build 3 Android Applications from Scratch with Kotlin\" is the course designed especially for you.\nBy enrolling in this course today, you will gain invaluable knowledge and practical skills. Here's what you can expect:\n1. Android app development from the ground up: This comprehensive course will take you from zero to proficient in Android app development using Kotlin, the modern and expressive programming language preferred by Android developers.\n2. Creation of three unique applications: By the end of the course, you will have developed three fully-functional Android applications, each serving as a testament to your growing expertise in Kotlin.\nLet's take a closer look at the applications you will be building throughout the course:\n1) Guess the Word Application: Exercise your creativity and coding skills by developing an engaging word-guessing game using Kotlin. Delight users with challenging gameplay and an intuitive design, all powered by the elegance and simplicity of Kotlin.\n2) Simple Calculator Application: Gain hands-on experience in creating a practical utility app as you build a user-friendly calculator with essential arithmetic operations. Kotlin's concise syntax and powerful features will enable you to create a robust calculator application with ease.\n3) Long Story Application: Showcase your ability to build a narrative-based application as you construct a captivating long story app using Kotlin. Allow users to immerse themselves in compelling tales and provide an enhanced reading experience with Kotlin's flexibility and versatility.\nDon't hesitate to embark on this exciting coding journey. Kickstart your coding career now by purchasing our course. I, Vijay Kumar, have successfully guided over 8,000 students in mastering Android development with Kotlin, and I am dedicated to helping you become the next proficient Android developer using this powerful language.\nInvest in your future and buy the course today. Time is of the essence, and there is no need to delay your progress any longer!\nRequirements:\n- A PC\n- Java Development Kit (JDK)\n- Android Studio\nKey Programs Covered:\n- Android Studio: We will utilize the powerful Android Studio environment, equipping you with the necessary tools to build high-quality Android applications using Kotlin.\nThroughout this course, you will acquire essential skills, including:\n- Developing apps for the latest Android version 14 while ensuring backward compatibility with older Android devices running earlier versions of the Android operating system.\n- Downloading, installing, and configuring the necessary (free) software required for app development.\n- Creating your first app from scratch using Kotlin, establishing a strong foundation for your future projects.\n- Building a range of applications that demonstrate key aspects of the Android framework, allowing you to grasp core concepts effectively while leveraging the expressive features of Kotlin.\n- Testing your apps on emulators or real Android devices, ensuring optimal functionality and user experience.\n- Mastering Kotlin programming as it is the preferred language for Android app development. The course includes Kotlin tutorial videos to facilitate your learning process.\n- Ensuring your apps are compatible with both current and older Android versions on various phones and tablets.\n- Utilizing Android Studio 4, the latest version of Google's premier Android tool, to streamline your development workflow.\n- Exploring the all-new Constraint layout, a powerful \"drag and drop\" feature for efficient screen creation.\nSo, why waste any more time? Enroll now and dive into the world of Android coding with Kotlin. Let's embark on this rewarding journey together!",
      "target_audience": [
        "Students with creative ideas who want to bring their app concepts to life by developing their own Android applications.",
        "Individuals who prefer self-paced online learning over traditional classroom settings.",
        "Aspiring Android developers looking to learn app development from scratch.",
        "Learners who want's to experience the android world"
      ]
    },
    {
      "title": "React Native Food App",
      "url": "https://www.udemy.com/course/react-native-food-app/",
      "bio": "Learn to build a food delivery app",
      "objectives": [
        "React Native Food App",
        "Build Nodejs Rest Api",
        "Build With Expo",
        "Google Map with Detail Explanation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup",
          "Hooking Context Providers to app",
          "Getting user location with expolocation",
          "Setting data to context providers"
        ],
        "Home section": [
          "Home header",
          "Asset Image Component",
          "Reverse Geocoding coordinates to get address",
          "Creating time function",
          "Category List",
          "HandleSelection function",
          "HandleSelection explanationmp4",
          "Pick Restaurants List",
          "Home Heading Component",
          "Nearby Restaurants Flatlist",
          "Store Component",
          "Store Component",
          "Divider"
        ],
        "Food Screen": [
          "NewFoodsList",
          "Foods Component",
          "FastestNearYou",
          "Food navigator",
          "Explanation on passing data to Stack Screen",
          "FoodPage State variables",
          "Buttons",
          "Restaurant Btn",
          "Title and description",
          "Tags FlatList",
          "Food Additives",
          "BouncyCheckBox",
          "Preference TextInput"
        ],
        "Cart section": [
          "Counter_1",
          "Cart and Orders",
          "Cart and Orders",
          "Cart and Orders",
          "Navigate to order modal",
          "Handle additives",
          "CalculatePrice",
          "Creating cart object",
          "Creating order item"
        ],
        "Tabview": [
          "TabView",
          "TabView"
        ],
        "Restaurant ratings": [
          "Restaurant Page buttons and rating",
          "Restaurant Page buttons and rating",
          "Restaurant Rating Page",
          "Restaurant Title and Time"
        ],
        "Google Maps and Directions": [
          "Calculating Distance and Time",
          "Passing Restaurant data to the TabView using UseContext Hook",
          "Google Maps",
          "Fetch Directions",
          "Fetch Directions",
          "Markers and PolyLines",
          "Address and open the native maps"
        ],
        "Food tile": [
          "Menu flatlist",
          "FoodTile Component",
          "FoodTile Component",
          "FoodTile Shadows"
        ],
        "Login context and profile": [
          "Login Context and Login Status function",
          "Back Button and Button for the Profile Page"
        ],
        "Cart and food component": [
          "Cart Context",
          "Category Food Component",
          "Rectify Catogory Food Component"
        ]
      },
      "requirements": [
        "Basic programming knowledge of CSS"
      ],
      "description": "Foodly food delivery app based on react native boasts a dynamic backend crafted with Node.js and Express, providing a solid foundation for high-performance operations. MongoDB is employed for efficient data handling, and Firebase Admin is seamlessly integrated to enhance backend management capabilities.\nThis tutorial only covers frontend user section. Backend api is given but we did not cover any admin panel\nThe frontend, developed with the latest version of React Native and Expo, features a sleek, cutting-edge user interface. Google Maps APIs are deftly incorporated for location-based services such as routes, directions, and geocoding, ensuring precise localization of users and restaurants. This geolocation accuracy allows for personalized recommendations and accurate delivery pricing. Additionally, the Distance Matrix is utilized to accurately calculate delivery costs, distances, and time estimates, ensuring a smooth and efficient user experience in our food delivery app.\nBasic App Features\nGetting Google Api Key\nHooking Context Providers to the app\nGetting user location with expo-location, accessing data using useContext hook\nCreating Home Header\nReverse Geocode coordinates to get location and time function\nCategory List using Flatlist and Image Component\nPick Restaurant List Using Flatlist and Text Component\nReusable Heading Component\nNearby Restaurant Recommendations\nNew foods recommendations and fastest near you component\nFood Stack Navigator\nExplanation on passing data to a screen inside of a stack\nCreating Food Page Buttons, Text Components and styling\nFoodTags flatlist and good additives list with BounceCheckBox\nCount for increasing the quantity\nCart and orders functions and data prep\nHandle additives and price increment according to changes in additives\nTabView in react native\nRestaurant Page Image, Buttons and rating using rating package\nRestaurant rating page\nDelivery time, cost and distance using google distance matrix\nPassing data to page inside TabView using useContext hook\nGoogle maps and linking app to native maps\nFetch directions using the Google direction api\nDisplaying polyLines and markers on the map\nRestaurant food menu\nLogin and passing data to Login Context\nPersistent CartCount using CartCount Context\nCategory Food Component\n\n\nBackend System Overview\n1. Authentication and Authorization\nIntegration with Firebase Admin: Implement backend services using Firebase Admin SDK to manage users, roles, and permissions.\nRole-Based Authentication: Define four distinct roles: Admin, Vendor, Client, and Driver.\nAdvanced Middleware: Create middleware functions to verify user roles and enforce access control for protected routes.\n2. User Management\nRegistration and Profiles: Enable registration for different user roles, each with a unique set of data fields and validation rules.\nImplement JSON Web Tokens (JWT) for secure, token-based user authentication.\nUse password encryption techniques (such as bcrypt) to ensure the safety of user credentials.\nUser CRUD Operations: Allow for adding, updating, and retrieving user information.\nAddress Management: Provide functionality for users to add, update, and retrieve addresses.\nImplement logic to maintain a single default address per user, with the ability to change the default setting.\n3. Vendor-Specific Features\nVendor Registration: Set up a registration process for vendors, including the collection of necessary information and validation.\nVendor Middleware: Ensure that only vendors can access routes for managing their restaurant and food items.\nFood Management: Develop endpoints for vendors to upload and manage their food items.\n4. Recommendations and Dynamic Content\nLocation-Based Restaurant Recommendations: Create endpoints that suggest restaurants to clients based on their current location.\nDynamic Food Recommendations: Develop algorithms to recommend food items to users also based on user location.\nPreparation and Delivery Time: Introduce logic to recommend food that can be prepared and delivered in the shortest possible time, considering user location.\n5. Shopping Cart and Order Processing\nCart Management: Allow users to add and remove items from the cart.\nEnable users to adjust the quantity of cart items.\nUpdate and return the cart count whenever changes are made to the cart.\nOrder Creation and Management: Provide functionality for users to create orders and customize them with add-ons.\nUpdate orders based on payment and delivery status.\n6. Categories and Recommendations\nCategory Management: Allow admins to add, update, and delete categories of food.\nCategory Recommendations: Use aggregation pipelines to offer random category recommendations to users.\n7. Driver-Specific Functionality\nDriver Registration and Restrictions: Establish registration for drivers and ensure middleware restricts them to driver-related tasks.",
      "target_audience": [
        "For beginners"
      ]
    },
    {
      "title": "Website to Android App - Ready to publish on Play Store",
      "url": "https://www.udemy.com/course/convert-web-to-android-app-ready-to-publish-on-play-store/",
      "bio": "Learn how to quickly and easily create a mobile app for your web application using free tools with no copyright logo",
      "objectives": [
        "How to convert web app to mobile app free",
        "How to publish our app to play store",
        "Learn how to integrate AdMob Monetization",
        "How to transform your site to an android app",
        "Be farmilar with various tools to conver web app to mobile app",
        "Understand free tools to convert web app to mobile app without copy right logo",
        "Have a new Skill that would increase income today",
        "Craft a portfolio of mobile apps to apply for senior developer jobs",
        "Convert fully-fledged web apps to mobile apps"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "1.2 Some online tools that are used for converting web to mobile"
        ],
        "2. Downloading required tool": [
          "2.1 Downloading required tool",
          "2.2 Installing downloaded software",
          "2.3 Understanding the downloaded tool part one",
          "2.4 Understanding the downloaded tool part two",
          "2.5 Understanding the downloaded tool part two",
          "2.6 Building our first mobile app",
          "2.7 Installing the app on the mobile phone",
          "2.8 Removing about us, rate us and share on our app",
          "2.9 Build second mobile app with full features"
        ],
        "3. Adding AdMob Monetization": [
          "3.1 AdMob Monetization Introduction",
          "3.2 Creating AdMob Banner Ad Unit - Article",
          "3.3 Creating AdMob Interstitial Ad Unit - Article",
          "3.4 Creating AdMob Banner Ad Unit - Video",
          "3.5 Creating AdMob Interstitial Ad Unit - Video"
        ],
        "4. How to publish an app to play store": [
          "4.1 Basic requirement on how to publish app on play store",
          "4.2 Creating Java Keystore for APK Signing - Article",
          "4.3 Creating Java Keystore for APK Signing - Video",
          "4.4 How to integrate keystore to our app",
          "4.5 Brief informationon how to register with google play store"
        ],
        "5. Brief overview on appypie web app": [
          "5.1 Brief overview on appypie web app"
        ],
        "6. Brief overview on goNative.io online tool": [
          "6.1 Brief overview on goNative.io web app",
          "6.2 Download and testing our gonative app"
        ],
        "7. Brief overview on web2application online tool": [
          "7.1 Converting web to apk"
        ],
        "8. Congratulations, we made it.": [
          "8.1 Congratulations, we made it",
          "8.2 Other interesting courses"
        ]
      },
      "requirements": [
        "Must have a working website or web application",
        "Website must be either on live server or local server",
        "Working computer system is a must"
      ],
      "description": "In this mobile-first world, having just a website isn’t sufficient for a great digital presence. Having a mobile app will help you to acquire more customers and grow the revenue of your business. If you have a B2C website and still haven’t planned for having an app then you are missing great revenue opportunities. With a mobile app, you can make it is easy for people to discover your products and services right at their fingertips.\nToday, most of companies engaged in trade and services strive to provide a maximally personalized experience for their existing and potential customers. One of the easiest ways to do this is to create a mobile application. As a rule, most small and owners of medium-sized businesses owners choose web applications because they easily adapt to any format of user devices and are smaller in size than native and native-like ones.\nWeb apps, however, are limited in access to built-in smartphone features (in particular, cameras), interactivity, and the achievable complexity of business logic. Moreover, they cannot work in absence of constant connection to the Internet.\nHow much does it cost to make an app?\nGenerally, the cost of making a mobile app ranges extremely: from total zero to unbelievably expensive price that could reach millions. Although, frankly there is no simple answer to this inquiry due to multiple factors at play. Different developer rates, project complexity and time it takes to build an app impact the cost of making a mobile application. The price to make an app depends on the following aspects:\ntype (mobile game, business, social networking, lifestyle. etc.)\nplatforms (iOS, Android, Windows Phone, etc.)\ndesign (basic, individual, custom)\nnumber of pages\nfeatures & infrastructure\nIf we split mobile apps into 3 categories in regards to complexity (simple, moderate, complex), and take 2 kinds of hourly rates into account, this is how much app costs to make approximately:\nDon’t waste your money\nInside this course, you’re getting exactly the same course materials and curriculum as our 1 week in-person tutorial. Instead of spending lots to make an app from scratch and taking time off work, save loads by getting this course and do it at your own pace!\nGood News\nThe good news is that you do not have spend lots of money before you can create or build an apps for you businesses or for you clients, there are many tools out there that help you to facilitate this. However, some of these tools are free for some period of time while some are totally free but place their logo on the app you have created.\nWhat are the tools we will be using in this course?\nWe will focus on just a single tool, though we are going to touch like four tools that can help us to convert our web application to mobile application but our major focus is going to be on a single tool.\nWhy do I need to join this course?\nThis is going to be one of the best course here, because more tools and more information will be added for you to keep informed on the latest and most current tools to convert your web application to mobile application with coding, free and easy to use.\nWhat are you waiting for\nNow that you understand the purpose of this course and the great benefit you are going to archive by taking this course. Click on enroll button as you join me to learn how to build app without coding, free and without any copy right logo.",
      "target_audience": [
        "Beginners who want to acquire knowledge",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build complete school system",
        "Developers who want to learn how to convert web app to mobile app",
        "Those who want to know how to build a mobile app without coding"
      ]
    },
    {
      "title": "Train Image & Object Detection Models & build Flutter Apps",
      "url": "https://www.udemy.com/course/train-image-classification-object-detection-models-for-flutter/",
      "bio": "Train Tensorflow Lite Models for Flutter | Build Machine Learning based Smart Flutter Apps | Real Time ML Flutter Apps",
      "objectives": [
        "Train Custom Image Classification & Object Detection Models for Flutter",
        "Build Machine Learning based Smart Android & IOS Applications in Flutter",
        "Use Image Classification & Object Detection Models With Images In Flutter",
        "Use Image Classification & Object Detection Models With Live Camera Footage in Flutter",
        "Learn to collect & organize datasets for training ML models for Flutter App Development",
        "Build a portfolio of beautiful Machine Learning based Flutter apps"
      ],
      "course_content": {},
      "requirements": [
        "Android Studio and Flutter is installed on your system",
        "Although you can build iOS apps on a Windows computer with Flutter, if you want to test it, you will need a Mac."
      ],
      "description": "Welcome to the world of Machine Learning based Flutter App Development. This comprehensive flutter course is designed to teach you to\nTrain Custom Image Classification & Object Detection Models for flutter\nUse these models in Flutter to build powerful Android & IOS Applications in Flutter\nSo this course will help you to become a confident Flutter developer, capable of building full-stack Machine learning-based Flutter apps using clean code techniques\n\n\nInstructor Introduction\nMy name is Muhammad Hamza Asif and I am a mobile machine learning instructor and AI entrepreneur. Over the last five years, I taught the use of Machine learning and computer vision in mobile applications to over 50,000 students\n\n\nImage Classification & Object Detection Introduction\nImage classification is the process of recognizing different entities or things in images or video. We can train image classification models to recognize different breeds of dogs, detect different types of flowers, and perform other such tasks. On the other hand object detection models are used to locate and recognize different objects in images and videos. So apart from recognizing different objects, we can also detect the location and count of different objects using these models\n\n\nWhat You Need To Start\nAnd to start this course you don't need any background knowledge of Machine Learning & AI. You just need a very little knowledge of app development in Flutter to start this course\n\n\nWhy You Should Take This Course\nSo this course will empower your resume and give your Flutter app development career a new boost as the use of ML & AI in Flutter app development is increasing but there are very few developers with the skills to build such Flutter applications\n\n\nCourse Curriculum:\nWe will start with a basic introduction to Image Classification and object detection models. After that, we will learn about their uses in Mobile Applications for making life easy\n\n\nData Collection & Preparation\nAfter learning the basics of  Image Classification and Object Detection we will learn to train our custom image classification and object detection models from scratch. For that purpose, Firstly we will learn to collect & prepare the dataset for training our custom models. So for training these models, our dataset consists of images of things or objects that we want to detect and recognize. So you will learn to collect images and format them in a way so that we can easily train our custom models for Flutter Applications\n\n\nModel Training\nAfter preparing our dataset you will learn to train your custom models for flutter using two different approaches. So firstly we will use a drag-drop tool to train our custom model with just a few clicks. Secondly, we will train our custom model using Python code which we will in Google Colab.\n\n\nModel Testing & Conversion into Tensorflow Lite\nAfter training our models we will test them to check their performance and learn about different metrics which indicate the performance of our models. After if models are not trained well then we can retrain them by changing the values of a few variables to get more accurate models. After testing our models we will convert these models into tflite(Tensorflow Lite) format so that later we can use them in Flutter With both Images and live camera footage\n\n\nChoosing or Capturing Images In Flutter\nAfter model training, we will build our first Flutter application in which we will learn to choose images from from gallery or capture images using the camera in Flutter. And we will build this application so that we can use our Image Classification and object detection models in Flutter with images of the Gallery and Camera\n\n\nDisplaying live Camera Footage In Flutter\nThen we will learn to display the live camera footage in Flutter so that later we can pass frames of that live camera footage to our image classification and object detection models and build our real-time ML-based application in Flutter\n\n\nImage Classification In Flutter\nIn this section, we will learn to use our own trained Image Classification models in Flutter with both Images and live camera footage in Flutter\nSo firstly we will build our image classification with images application. And in this application users can choose images from the gallery or capture them using the camera. Then those images will be passed to image classification models and we show the results returned by the models to the user on screen\nSecondly, we will build our real-time image classification application in Flutter. So in that application, the user can recognize items by just pointing the camera at them in real time\n\n\nObject Detection In Flutter\nAfter learning to use Image classification models in Flutter we will build our object detection applications in Flutter. So firstly we will build our object detection with images application. So in this application, the user will choose images from the gallery or capture them using the camera. After that will pass those images to object detection models to detect their location and then to recognize those detected objects we will use our custom image classification models. So will combine the power of object detection & image classification models in Flutter to build our custom object detection applications\nSecondly, we will build our real-time object detection in Flutter. In that application, users can recognize and locate objects in real time using live camera footage.\n\n\nSo after completing this course, You will be able to\nTrain your custom models to detect and recognize anything\nUse the Image classification model in Flutter with both images and the live camera footage\nUse Object Detection models in Flutter with both Image and Live Camera Footage\nCollect and organize datasets for training models with just a few clicks\nBuild standalone recognition applications in Flutter for Android and IOS\n\n\nDon't just take my word for it, see what my past students had to say about my courses:\nTAYAB FAROOQ: \"The most beautiful and concrete course on Machine Learning and Flutter, I ever found in the world of internet! Everything is explained in detail. He wrote very robust code throughout the course. This course is well-updated!\"\nPartha Sarathi Haldar: \"Great Experience. This is exactly what I was looking for. Thank you so much.\"\nAzam: \"Perhaps the best app i created in 3 hours. Extremely happy and recommend it if you want to learn the use of Dalle and chatgpt in flutter\"\nJames: \"Started the course as a beginner but found it easy to follow it. Covered first few section for now looking forward to more interesting and value content. But for now i will recommend it for sure.\"\n\n\nWhy Enroll in This Course:\nComprehensive Learning: Acquire in-depth knowledge in both image classification and object detection & their use in flutter apps\nSuitable for All Levels: Whether you're a beginner or an experienced developer, this course is designed to meet your needs\nCareer Advancement: Open up exciting career opportunities in a rapidly evolving field\nLifetime Access: Gain lifetime access to the course materials, allowing you to revisit and reinforce your knowledge whenever you need it\nDon't miss out on the chance to become a proficient developer in the exciting world of image classification and object detection for Flutter. Enroll now and embark on your journey to creating innovative, intelligent applications.\nJoin us today and start building the future of Flutter applications with advanced image classification and object detection techniques!",
      "target_audience": [
        "Anyone who want to train custom Image Classification & object Detection models for mobile applications with no previous knowledge of ML & AI",
        "Beginner Flutter Developers who want to build Machine Learning based Flutter Applications",
        "Intermediate Flutter Developers who want to enhance their skillset and train custom ML models for Android & IOS",
        "Experienced Flutter Developers who want to boost their Flutter App Development Career by learning ML & AI use in Flutter"
      ]
    },
    {
      "title": "Step-by-Step Guide to Creating & Marketing Apps - No Coding",
      "url": "https://www.udemy.com/course/step-by-step-guide-to-creating-marketing-apps-no-coding/",
      "bio": "Learn how anyone can run their own online business with iPhone Apps and no prior knowledge or coding necessary.",
      "objectives": [
        "By the end of the course, you will know exactly how I make a 4-figure+ passive income stream monthly by creating iPhone Apps without any coding necessary.",
        "In this course, you will learn the entire process of getting money with iPhone Apps from A-Z"
      ],
      "course_content": {
        "Welcome to the Course!": [
          "Welcome to the Course!"
        ],
        "Starting Your iPhone App Creation Journey": [
          "Setting up your iOS Developer Account and Getting the Top Source Codes",
          "The Secrets of ASO - App Store Optimization - And How It Will Make You Thousands"
        ],
        "Let's Start Developing and Designing, No Coding Neccessary!": [
          "How to Get Your Entire App Developed Without Doing a Single Bit of Work",
          "Exact Job Description to get the Best Devs & Designers to Do All Your Work",
          "Pick the Right Dev&Designer to Set Your Business App Creation on Cruise Control"
        ],
        "The Golden Resources to Monetize Your Apps": [
          "Essential App Revenue Websites - ChartBoost - Part 1",
          "Essential App Revenue Websites - RevMob - Part 2",
          "Essential App Revenue Websites - Flurry - Part 3"
        ],
        "Post Launch Marketing - Getting Your App to #1": [
          "Shooting Your App Up the Ranks",
          "Conclusion - Wrapping It All Up (For Now)"
        ],
        "BONUS": [
          "WANT 1 ON 1 EXECUTIVE VIP COACHING?"
        ]
      },
      "requirements": [
        "No prior course requirements necessary; all resources will be discussed in the course. Having an iPhone Dev Account is required for making iPhone apps."
      ],
      "description": "**UPDATED FOR NOVEMBER 2015**\nNow join the exclusive 2,000+ group of students who have changed their financial lives by taking this course to Make Money Online With iPhone Apps: No Coding Necessary!\nWhat would you do with an extra $5,000 a day? If you could finally make profits daily what would that mean to you?\nWould you\nPay off debts?\nFund your retirement account?\nPut your kids through college debt free?\nThis course is designed for anyone who wants to discover proven strategies to make money online with iPhone Apps. Packed with over 15 different video lessons and hours of content, Mubarak Shah spills everything you need.\nLearn exactly how to create a massive portfolio of passive revenue-generating apps to supplement your income and give you additional frequent paychecks WITHOUT WRITING A SINGLE LINE OF CODE.\nRegardless of your background or experience, this course will cover the entire process of creating your mobile app empire and monetizing it without you needing to have any knowledge of coding, programming, marketing etc.\nYou don't need to know a single thing about iPhones, or Apple, or app either, just follow the course one lesson at a time.\nMy full step-by-step guide teaches you how to create a FULLY AUTOMATED system with just a tiny ounce of creativity to create your mobile apps from start to finished and making you money on the App Store within just a few hours.\nBy the end of the videos, you will have all the information, steps, scripts, word for word descriptions, etc. you need to get your app launched - I take care of ALL the thinking for you!\nStudents have been able to create 1 app daily with only about 10 minutes of work (through the magic of Virtual Assistants and outsourcing which I teach extensively in the course) which results in about $200-300/monthly passive income WITHOUT ANY ADDITIONAL MARKETING WHATSOEVER.\nIn this course, you will learn how to create a fully established team to crank out your mobile apps for an amazing low cost with your profits and income skyrocketing.\nAnybody who devotes time and study to this course will be in a very good position to profit and to achieve financial freedom.",
      "target_audience": [
        "This course is intended for anyone willing to generate passive income!",
        "You only need to know how to use the Internet in order to be able to succeed in this course. This is available for anyone of all skill and experience levels."
      ]
    },
    {
      "title": "iOS 10 Swift 3 hands on features - Siri Kit , Messages , ...",
      "url": "https://www.udemy.com/course/ios-10-swift-3-hands-on-features-siri-kit-messages/",
      "bio": "Build real useful app using the latest iOS 10 and Swift 3 features - Hands on projects, all source codes included.",
      "objectives": [
        "iOS 10 Speech Recognition: Learn how to use Siri's power within your app to get to transcribe audio into text! Also learn how to record the iPhone user's voice and get to turn it into text!",
        "- Stickers is the upcoming gold rush. Learn how to create sticker app extensions for the Messages app. No coding skills required!",
        "- Learn Swift 3 changes. Get an in-depth look at the differences between swift 2 and Swift 3 for common usage, such as Strings, Arrays, Core Graphics, Iteration loops, and much more.",
        "- Finally get to use Siri voice commands to control the iOS app using SiriKit. Learn how to integrate the Siri Kit and How to code responses to Siri commands. Also learn how to add your own words to Siri's vocabulary!",
        "- Build an iOS 10 Message App Extension. Learn how to customize conversations by manipulating text, backgrounds, layouts, links, videos, audio and attachments",
        "- Making your iOS app content searchable within the Home Spotlight and the iTunes app store search tab.",
        "- Technical app store optimization"
      ],
      "course_content": {
        "Introduction": [
          "About your instructor and course overview"
        ],
        "Making Stickers app extensions": [
          "About iOS 10 Stickers",
          "Get the iOS developer license",
          "Download and install xcode 8 beta",
          "Build your own stickers app in no time with iOS 10",
          "Stickers specifications",
          "Taking sticker app screenshots",
          "Create itunes connect app settings",
          "Submit the build to itunes connect",
          "Submit your app to itunes for review"
        ],
        "Speech Recognition Apps": [
          "Create a Swift project and setup user interface",
          "Programming the speech recognition code",
          "Testing Speech Recognition on physica",
          "Programming the live audio recording setup",
          "Coding the live audio recording logic",
          "Testing Speech recognition on live recording"
        ],
        "SiriKit - Voice Command for your apps": [
          "iOS 10 Create a SiriKit project",
          "Testing Sirikit in iPhone and debugging commands",
          "Building your own Siri Kit Vocabulary list"
        ],
        "Swift 3 changes from Swift 2.3": [
          "Swift 3 Changes to core graphics",
          "Swift 3 Strings",
          "Swift 3 arrays and colors",
          "Swift 3 loops and iterations changes"
        ],
        "Messages app Extensions - your own apps within iMessage app": [
          "Create your Messages App Extension project and test it",
          "Setting up messages app extension icons",
          "ioS 10 app extension life cycle",
          "Creating text messages within the Messages app extension",
          "Building complex message layouts - iOS 10"
        ],
        "iTunes app Ranking - ASO (App Store Optimization) techniques": [
          "iOS 10 App Store Optimization advantages - technical ASO",
          "Locating where to add spotlight search code",
          "Add CoreSpotlightContinution entry to preference file",
          "Core Spotlight framework initial setup",
          "Programming adding spotlight results",
          "Testing adding Spotlight activities in the iPhone home",
          "Launching the correct app view controller after tapping spotlight result",
          "Indexing your app content publicly for app store ranking"
        ]
      },
      "requirements": [
        "basic programming understanding",
        "have a MAC computer or use macincloud online"
      ],
      "description": "Hello, My name is Yohann, I will be your instructor.\nThis course is not just about learning programming with iOS 10 and Swift 3. This course unlike any other course, teaches you how to make real useful apps using the new iOS 10 features.\nWe will be using both objective-C and the new Swift 3 language.\nYou will learn how to use  the new messages framework where you'll get to make iOS 10 sticker packs. Get to make sticker apps in no time and get to sell them in the new app store called the messages app store which the media has named as the new gold rush, full of opportunities, let's do this together.\nThen you will learn how to make advanced messages app extensions that where you'll get to customize message conversation changing backgrounds, adding stickers, and animations.\nThen we will introduce the new iOS 10 Siri Kit. You will get to program Siri to send commands to your app. For example, if you want to  send commands to play / pause the video,  or start / stop a workout session.\nThen you will learn how to use Speech recognition. You will make an app that will take your voice from the microphone and automatically translate it into text. Isn't it amazing?\nFinally, you will learn how to bake app store SEO techniques right within your app to give your app more exposure in the iTunes app store which will drive more downloads and potentially more revenue.\nAs we go through the creation of these apps, you also get to learn Swift 3 as I go over the differences between the old Swift and the new one.\nNow is the perfect time to learn of these amazing skills. If you need help, my students can tell you that I'm always available in the forums.\nAnd this course comes with a full refund if you're not satisfied, You've got nothing to loose.\nJoin now and let's get started.",
      "target_audience": [
        "anyone interested in making amazing iOS apps",
        "software engineers",
        "graphic designers wanting to make apps (no coding required for sticker packs!)",
        "computer students",
        "art students",
        "hobbyist",
        "visionaries",
        "entrepreneurs wanting to make an app business"
      ]
    },
    {
      "title": "React Native Essentials - Build Mobile Apps like a Pro",
      "url": "https://www.udemy.com/course/react-native-essentials-build-mobile-apps-like-a-pro/",
      "bio": "Build Android & iOS apps using Expo, Hooks, Context API, Reducers, Expo Router, Location, Firebase, Gemini API and more.",
      "objectives": [
        "Learn how to create Android & iOS apps using React Native",
        "Learn how to use Expo to speed up React Native development",
        "Learn how to use Expo Router for File based Navigation",
        "Learn State Management using useState Hook, React Context API and Reducers functions",
        "Learn how to make network request using REST APIs",
        "Learn how to Authenticate, use cloud storage and database using Firebase JS SDK",
        "Learn how to use Gemini API"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this course"
        ],
        "The Typescript Basics": [
          "Section Overview - What you will learn",
          "Typescript Playground",
          "Basic Primitive types - number string boolean",
          "Implicit and Explicit Type Assignment",
          "Template String",
          "Special Types - any unknown undefined null",
          "Typescript Array",
          "Typescript Tuples",
          "Typescript Object types",
          "Typescript Interface",
          "Create a Function",
          "Return a value from Function",
          "Optional Function Parameters",
          "Named Function Parameters",
          "Rest Parameters and Spread Syntax",
          "Arrow Functions and Function as Parameter",
          "Array Iteration using For Loop",
          "Array foreach method",
          "Array map method",
          "Array filter reduce every some methods",
          "Object String and Array Destructuring"
        ],
        "Welcome to React Native": [
          "Setup Environment",
          "Run default project on Browser",
          "Install Expo Go on Android Device",
          "Anatomy of the Starter Code"
        ],
        "Components and Layouts": [
          "Section Overview - Components and Layouts",
          "Bookmark these important Links",
          "Code from Scratch - Text and View Component",
          "Show an Image and pass Props",
          "Component Size Matters",
          "Create Styles with Stylesheet",
          "Safe Area Context - Add our first external dependency",
          "Refract codes in separate file",
          "Flexbox and Flex",
          "Align the boxes along with the Axis",
          "Make UI responsive using Flex",
          "Exercise - Color Quadrant",
          "Color Quadrant exercise solution",
          "Load Asset Image",
          "Image Custom Shape",
          "Relative and Absolute Positioning",
          "Put title and subtitle for our Dachshund Page",
          "Import Vector Icons",
          "Use ScrollView Component",
          "Create a custom Header component",
          "Add Styles for custom Header Component",
          "Custom Component with children",
          "Download Android Studio",
          "Download Android SDK",
          "Install Android Emulator",
          "Run app on Emulator",
          "Generate Dynamic Components inside ScrollView",
          "FlatList Overview",
          "Movie App - Create a list of Movies",
          "Movie App - Custom Movie Component",
          "Movie App - Interaction with Pressable and Alert Component",
          "Download the complete project"
        ],
        "State Management": [
          "Section Overview - State Management",
          "Create a Counter project",
          "Components are immutable",
          "Introducing useState Hook",
          "You can SKIP the next lecture",
          "The anatomy of useState Hook",
          "Update Styles using useState",
          "Group multiple state variables",
          "Performance Optimization - use of memo",
          "BMI Calculator - Textinput Component",
          "BMI Calculator - Show results",
          "BMI Calculator - Enable Next and Done button on the keyboard",
          "Download the complete project"
        ],
        "Project - Dice Game": [
          "Section Overview - Project Dice Game",
          "Create Project and add libraries",
          "The app directory",
          "Add routes to Stack",
          "Navigate to a different route",
          "Design the Start Page",
          "Import image and audio assets",
          "Generate random dice images",
          "What is Side Effect",
          "Understand the Game Rules",
          "Evaluate Winner or Loser at first roll",
          "Add a RESET button",
          "Set and chase the Target",
          "Adjust the Game Point",
          "Finish the game when there is no Point",
          "Play game sounds with expo av",
          "Download the complete project"
        ],
        "Project - Weather App": [
          "Section Overview - Project Weather App",
          "Open Weather Map APIs",
          "Add Dependencies",
          "Tab Bar and Tab Screens",
          "Set Background Image and customize Tab Bar Header",
          "Status bar bug fixed",
          "Define various weather types",
          "Write a function to fetch Current Weather",
          "Write a function to fetch Forecast Weather",
          "Silly Bug Fixed",
          "Context Provider - Review the Starter Project",
          "Context Provider - Understand the problem",
          "Context Provider - A brief introduction",
          "Context Provider - Create a simple context",
          "Context Provider - Update the Fruits app with Context",
          "Back to Weather App - Define some constants",
          "Define Weather Context and type",
          "Location Permission in Configuration File",
          "Detect user phone location",
          "Set Weather Context Provider as the Root Component",
          "Call the API functions from Provider",
          "Loading Error and Custom Text components",
          "Show Loading Component in Current Page",
          "Convert timestamp to date string",
          "Current Weather Page UI",
          "Forecast Weather Page UI",
          "Show City suggestions in Search Page",
          "Filter Suggestions List",
          "Convert City to Coordinates",
          "It works on Real Device",
          "Custom Temperature Switch Component",
          "Save unit to Async Storage",
          "Refresh Weather",
          "Download the complete project"
        ],
        "Project - Virtual Business Card Holder": [
          "Section overview - Project Virtual Business Card",
          "Create Firebase Project",
          "Add Firebase to our project",
          "Initialize Firebase Auth with AsyncStorage",
          "Redirect User between routes",
          "Create Sign In Page",
          "Create Auth Context Provider",
          "Enable Email Password Provider in Firebase Console",
          "Sign In to app",
          "Sign out from app",
          "Add New Card Route",
          "Capture and Pick Image",
          "Get Gemini API Key and library",
          "Create Gemini Context Provider",
          "Gemini sample prompt for the next lecture",
          "Configure Gemini API model and prompt",
          "Gemini in Action",
          "Update Billing and Get Data",
          "Create Confirmation Page to show extracted data",
          "Setup Firebase Storage and Firestore",
          "How Cloud Firestore works",
          "Create Db Context Provider",
          "Complete uploadImage function",
          "Complete saveCardData function",
          "Save Data Function",
          "Save Card Successfully",
          "Get all documents from Collection",
          "Show Cards in Home Page",
          "Go to Details Page with ID",
          "Show info in Details page",
          "Call Sms Email Map and Website",
          "Expo Image Component to show Network Image",
          "Download the Complete Project"
        ],
        "State Management with Reducer": [
          "Section Overview - State Management with Reducer",
          "Starter Project Overview",
          "Understand the problem",
          "Create todoReducer Function",
          "Dispatch action to reducer"
        ]
      },
      "requirements": [
        "Experience on Java Script is required"
      ],
      "description": "Welcome!\nIf you already know JavaScript and want to build real mobile apps for iOS and Android—without the pain of native setup—then React Native with Expo is your best friend.\n\nExpo is a framework and platform built around React Native that simplifies everything—from development to testing and deployment. No need to mess with Xcode or Android Studio just to get started.\nAnd with the Expo Go app, you can instantly preview your apps on your real device just by scanning a QR code. No build process, no waiting—just code and see it live. It’s the perfect way to prototype, test, and iterate faster.\n\nIn this course, we’re leveraging the full power of Expo along with TypeScript to build professional, scalable apps. And now, let me walk you through what you'll learn in each section.\n\n\nTypeScript Basics\nWe begin with the essentials—TypeScript. You'll learn how to write safer, smarter, and more maintainable code right from the start.\n\n\nBasic Components and Layouts\nYou’ll get comfortable with React Native UI components like Text, Image, Pressable, FlatList, and Flexbox—learning how to build beautiful layouts that adapt to any screen.\n\n\nState Management + BMI Calculator\nWe introduce the useState hook through a fun and functional BMI Calculator App—your first React Native project!\n\n\nDice Game + Expo Router\nBuild a fully interactive Dice Game using states and logic. Here, we also dive into expo-router to simplify navigation with a modern, file-based approach.\n\n\nWeather App with Context API\nThis section is packed! You’ll build a Weather App with current and forecast data, temperature conversion, city search, and device location detection—all while learning how to share state using the Context API.\n\n\nSmart Contact App with Gemini + Firebase\nHere, we bring in AI and backend magic. Build a Smart Contact App that uses Gemini API to scan a business card and extract contact details. You’ll also implement Firebase Authentication, Firestore, and Storage for full cloud integration.\n\n\nReducer Pattern + Context\nTo wrap up, we dive deeper into state logic with the Reducer pattern and combine it with Context—giving you the tools to manage complex app states with ease.\n\nBy the end of this course, you'll be ready to build and ship real-world apps like a pro.\nSo take it one step at a time, practice consistently, and don’t hesitate to reach out in the Q&A if you need help.\nOnce again—welcome aboard, and let’s start building amazing mobile apps together!",
      "target_audience": [
        "Anyone with Web Development or Java Script experience who wants to build Android & iOS applications to level up skills."
      ]
    },
    {
      "title": "Mobile App Development & App Design for iOS & Android",
      "url": "https://www.udemy.com/course/advanced-app-development-and-design-course-for-ios-and-android/",
      "bio": "Design and program iOS and Android app with social media (facebook and twitter). Publish on Google Play and Appstore.",
      "objectives": [
        "Develop a fully functional app for both Android and iOS from scratch. This app will be ready for publish to Google Play or Appstore (users can sell the app, etc.).",
        "Integrate social media: Facebook and Twitter",
        "Deploy an app to Android and iOS devices for testing purposes",
        "Add sound to a project and control it with code",
        "Apply different animation techniques to make the app stand out and truly come to life",
        "Optimise an app to make sure it offers smooth performance",
        "Scale the app to different screen resolutions",
        "Setup Flash or Animate CC projects for both Android and iOS and make sure they stay up-to-date with the recent iterations of Android and iOS",
        "Parse data from an external file into the app",
        "Use essential tools of Flash and Animate CC to design app's interface"
      ],
      "course_content": {
        "Introduction": [
          "Who We Are",
          "About the Course",
          "Introduction to Adobe Flash and AIR",
          "AIR's Functionality",
          "Publishing for Android",
          "Publishing for iOS"
        ],
        "UI Design": [
          "Creating Flash Project",
          "Background Design",
          "Adding Napkins",
          "Social Media Buttons",
          "Facebook, Coffee Cup, Plate",
          "Desk Lamp pt 1",
          "Desk Lamp pt 2",
          "Desk Lamp pt 3",
          "Menu Design pt 1",
          "Menu Design pt 2",
          "Envelope Design pt 1",
          "Envelope Design pt 2",
          "Seal Design",
          "Letter Design pt 1",
          "Letter Design part 2",
          "Logo Design pt 1",
          "Logo Design pt 2"
        ],
        "Animating UI": [
          "Desk Lamp Animation pt 1",
          "Desk Lamp Animation pt 2",
          "Ripple Animation",
          "Coffee Steam Animation",
          "Envelope Animation pt 1",
          "Envelope Animation pt 2"
        ],
        "Assets Optimisation": [
          "Optimising Assets pt 1",
          "Optimising Assets pt 2"
        ],
        "Android Development": [
          "Button Animation",
          "Desk Lamp Interaction pt 1",
          "Desk Lamp Interaction pt 2",
          "Letter and XML file",
          "Programming Interaction pt 1",
          "Programming Interaction pt 2",
          "Programming Interaction pt 3",
          "Programming Interaction pt 4",
          "Programming Interaction pt 5",
          "Designing App Icon",
          "Publishing Project as APK"
        ],
        "iOS Development": [
          "Deploying to iPhone",
          "Deploying to iPad"
        ]
      },
      "requirements": [
        "The only real requirement is having an Adobe Flash CC, CS6 or Animate CC installed on your PC. Moreover, this course provides a link to trial version, so that everyone can start on equal terms."
      ],
      "description": "This course, prepared by INVEDION™ -  a double mobile app prizewinner, was created for people who are interested in app development and design on the practical level to be able to make money on mobile apps in the future.\nWe are trustworthy tutors because:\nWe've won third and second places in Samsung App Challenge,\nWe have over 10 years of experience in mobile app development for all major platforms (Android, iOS, Amazon Fire, Windows Phone, and Windows 10 Mobile),\nWe have 17 years of experience in the IT industry (creation of interactive websites, banners, software, promotional materials, e. g. movies, placards, business cards),\nWe have excessive expertise when it comes to developing well thought-out apps with eye-catching and modern design for customers from around the world and various industries.\n\n\nAfter completing this over 11-hr long course (6 chapters, 44 videos) students will obtain a comprehensive knowledge to build stunning mobile apps with beautiful animations and integrated social media (Facebook and Twitter)  for both Android and iOS.\nThis course is best suited for absolute beginners and intermidiate students (no prior knowledge of app development required). We take our time to thorougly explain used tools, techniques, code, certain app concepts to make sure students can understand the meterial as best as possible. App development process is taught in an ascending manner -  from the easiest to hardest material.\nThe course comes along with assets that will be used in our mobile app. Furthermore, after each chapter there will be a finished project file (.fla). Animate CC will serve as the IDE for app development. We'll be leveraging AIR, a cross-platform runtime system developed by Adobe Systems, for building desktop applications and mobile applications, voted as the Best Mobile Application Development product at CES in 2014 and 2015, and programmed using ActionScript.\n\nIf you're interested in the material and conept of this course on mobile development, please feel free to enroll and become our student today.",
      "target_audience": [
        "This course is for people who aren't solely interested in developing mobile apps on a native level for each respective platform (Objective-C/Java), but prefer other faster and easier platforms, like Adobe Flash or Animate CC, where you can reuse the source code to publish to both Android and iOS ecosystems.",
        "No prior knowledge of app development, programming, Adobe Flash or Animate CC is requiredT. The course was created with absolute beginners and intermidiate people in mind, thus we take our time to thorougly explain used tools, techniques, code, certain app concepts, and so on. We prefer a step by step aproach. So you don't have to worry that you won't be able to follow this course because of your lack of knowledge or experience."
      ]
    },
    {
      "title": "Flutter & ML – Train TensorFlow Lite Models & Build AI Apps",
      "url": "https://www.udemy.com/course/flutter-and-linear-regression-build-prediction-apps-flutter/",
      "bio": "Train image classification, object detection & regression models in Python, convert to TensorFlow Lite & use in Flutter",
      "objectives": [
        "Train Machine Learning models for Flutter Applications",
        "Train Image Classification and Object Detection Models for Flutter Apps",
        "Train Linear Regression Models for Flutter Apps",
        "Integrate Tensorflow Lite models in Flutter for both Android & IOS",
        "Use Computer Vision Models in Flutter with both Images and Live Camera Footage",
        "Train a machine learning model and build a fuel efficiency prediction Flutter Application",
        "Train a machine learning model and build a house price prediction Flutter Application",
        "Analysing & using advance regression models in Flutter Applications",
        "Train Any Prediction Model & use it in Flutter Applications",
        "Data Collection & Preprocessing for ML model training for Flutter Application",
        "Basics of Machine Learning & Deep Learning for training Machine learning Models for Flutter",
        "Understand the working of artificial neural networks for training machine learning for Flutter",
        "Basic syntax of Python programming language to train ML models for Flutter",
        "Use of data science libraries like numpy, pandas and matplotlib",
        "Train a fruit classification model and build a Fruit Recognition Flutter Application"
      ],
      "course_content": {
        "Introduction": [
          "Flutter & ML 2025 : Train Tensorflow Lite models for Flutter"
        ],
        "Machine Learning & Deep Learning for Flutter": [
          "What is Machine Learning",
          "Supervised Machine Learning",
          "Regression and Classification",
          "Unsupervised Machine Learning & Reinforcement Learning",
          "Deep Learning and Neural Network Introduction",
          "Neural Network Example",
          "Working of Neural Networks for Image Classification",
          "Basic Deep Learning Concepts"
        ],
        "Python Programming Language for Flutter": [
          "Google Colab Introduction",
          "Python Introduction & data types",
          "Python Numbers",
          "Python Strings",
          "Python Lists",
          "Python dictionary & tuples",
          "Python loops & conditional statements",
          "File handling in Python"
        ],
        "Data Science Libraries for Flutter": [
          "Numpy Introduction",
          "Numpy Functions and Generating Random Values",
          "Numpy Operators",
          "Matrix Multiplications and Sorting in Numpy",
          "Pandas Introduction",
          "Loading CSV in pandas",
          "Handling Missing values in dataset with pandas",
          "Matplotlib & charts in python",
          "Dealing images with Matplotlib"
        ],
        "Tensorflow & Tensorflow Lite for Flutter": [
          "Tensorflow Introduction | Variables & Constants",
          "Shapes & Ranks of Tensors",
          "Matrix Multiplication & Ragged Tensors",
          "Tensorflow Operations",
          "Generating Random Values in Tensorflow",
          "Tensorflow Checkpoints",
          "Tensorflow Lite Introduction & Advantages"
        ],
        "Training a basic regression model for Flutter": [
          "Section Introduction",
          "Train a simple regression model for Flutter",
          "Testing model and converting it to a tflite(Tensorflow lite) format for Flutter",
          "Model training for flutter app development overview"
        ],
        "Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Using First Regression Model in Flutter": [
          "Creating a new flutter project",
          "Adding libraries and loading regression models in Flutter",
          "Passing Input to regression model and getting output in Flutter",
          "Regression Models Integration in Flutter Overview"
        ],
        "Training a Fuel Efficiency Prediction Model for Flutter": [
          "Section Introduction",
          "Getting datasets for training regression models for Flutter",
          "Loading dataset in python with pandas",
          "Handling Missing Values in Dataset",
          "One Hot Encoding: Handling categorical columns",
          "Training and testing datasets",
          "Normalization Introduction",
          "Normalization: Bringing all columns to a common scale",
          "Training a fuel efficiency prediction model for Flutter",
          "Testing fuel efficiency prediction model and converting it to a tflite format",
          "Fuel Efficiency Model Training Overview"
        ]
      },
      "requirements": [
        "Android studio & Flutter installed in your PC"
      ],
      "description": "Build AI-Powered Mobile Apps with Flutter & TensorFlow Lite\nDo you want to train custom Machine Learning models and bring them to life in real Android & iOS apps? This course takes you from zero to building smart, predictive, and vision-powered Flutter apps — all using TensorFlow Lite.\n\n\nWhat You’ll Learn\nTrain Image Classification, Object Detection, and Regression models in Python from scratch.\nConvert trained models to TensorFlow Lite for mobile use.\nIntegrate ML models into Flutter apps for Android & iOS.\nUse ML Kit for object detection in real-time camera feeds.\nBuild real projects like:\nHouse Price Prediction\nFuel Efficiency Estimator\nCustom Image Classification App\nObject Detection App with live camera feed\n\n\nCourse Outline\nML & AI Basics – Learn core concepts, neural networks, and deep learning.\nData Preparation – Use NumPy, Pandas, and Matplotlib for dataset handling.\nModel Training – Train regression and vision models with TensorFlow.\nTensorFlow Lite Conversion – Make your models mobile-ready.\nFlutter Integration – Load and use models in Android & iOS apps.\nReal Projects – Step-by-step guided apps for real-world use cases.\n\n\nWho Is This For?\nFlutter developers who want to integrate AI into their apps.\nBeginners in ML who want practical, mobile-focused projects.\nDevelopers aiming to expand their portfolio with AI-driven apps.\nBy the end of this course, you’ll be able to train, convert, and deploy your own ML models into beautiful Flutter apps — ready for the Play Store or App Store.",
      "target_audience": [
        "Beginner Flutter Developer who want to train ML models and build Machine Learning based Flutter Applications",
        "Aspiring Flutter developers eager to add ML modeling to their skillset",
        "Enthusiasts seeking to bridge the gap between Machine Learning and mobile app development.",
        "Machine Learning Engineers looking to build real world applications with Machine Learning Models"
      ]
    },
    {
      "title": "Android Studio For Absolute Beginners",
      "url": "https://www.udemy.com/course/android-studio-for-absolute-beginners/",
      "bio": "Learn fundamentals of Android Studio Android development, and gain valuable skills in preparing to develop mobile apps",
      "objectives": [
        "Master Android Studio Environment",
        "Work with debugger and other tools",
        "Successfully configure Android Virtual Device & Emulator",
        "Android Studio User Interface (UI) & Work space Management",
        "Keyboard shortcuts and best practices",
        "Learn how to code using Java programming language",
        "Build simple apps before moving on to complex apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Course Agenda & Meet Instructor",
          "Installing Android Studio 3.2",
          "Android Studio 4 (Beta) Latest Installation",
          "Creating A New Project",
          "Your feedback: Updates - Let us know!",
          "Android Developer Workflow Basics",
          "Do Not Hard Code"
        ],
        "Android Studio Basics": [
          "Android Studio User Interface (UI)",
          "Important Keyboard Shortcuts (MAC and Windows)",
          "Important Terms & Folders",
          "Understanding Layouts",
          "What Is A View?",
          "Working With Text View",
          "Using Strings: Fixing Hardcoded Strings",
          "Changing Image On Activity Screen",
          "Changing TextView Color",
          "Android Documentation Reference: TextView",
          "Creating TextView From Scratch Using XML",
          "Android Units Of Measure",
          "Changing SDK Version Using Gradle"
        ],
        "Deep Dive Android Studio": [
          "Android Activity Life Cycle",
          "Understanding App Manifest.xml File",
          "Converting Java Code To Kotlin Language",
          "Configuring Android Virtual Device (AVD)",
          "Troubleshoot AVD & HAXM",
          "Connecting Your Own Android Phone",
          "Creating Your First Hello World Instant App",
          "Change Top Menu Color Combination",
          "Adding Background Image",
          "Working With Buttons",
          "Important Button Techniques",
          "Android Keyboard Shortcuts"
        ],
        "Test Your Knowledge - Take a Quick Quiz": [
          "Test Your Knowledge"
        ],
        "UI/UX Design Principles": [
          "Basic Design Principles",
          "Understanding Wireframes",
          "Wireframe Management Part 1",
          "Wireframe Management Part 2"
        ],
        "Java Fundamentals: Object Oriented Principles": [
          "How Java Works?",
          "Downloading Eclipse Neon Editor IDE",
          "Downloading Important Software",
          "Java Fundamentals",
          "Your First Java Program",
          "Using Variables",
          "Strings & Text",
          "While Loop In Java",
          "Switch Statement",
          "Arrays In Java",
          "Array Of Strings",
          "Multidimensional Arrays",
          "Val Vs Var in Kotlin",
          "Classes & Objects",
          "Methods",
          "Getters & Return Value",
          "Methods & Prameters",
          "Setters & This",
          "Constructors",
          "Java Packages"
        ],
        "Learning Resources": [
          "Resources"
        ]
      },
      "requirements": [
        "Have a fast processor and internet connection",
        "No prior knowledge of Android Studio or programming experience is needed",
        "This course is designed for absolute beginners"
      ],
      "description": "Android Studio provides the fastest tools for building apps on every type of Android device.\nIn the world of Enterprise Cloud Applications, Mobile Apps Design and Development. Learn Android Studio For Absolute Beginners complete hands-on. Bringing you the latest technologies with up-to-date knowledge.\nAre you new to the world of mobile app development? Are you looking to enhance you skills by learning the basics of Android Studio? Look no further - learn the fundamentals of Android Studio and Android development using Java.\nDevelop basic apps and gain solid understanding and acquire solid skills with this Android Studio For Absolute Beginners course.\nCourse Description\nWelcome to Android Studio For Absolute Beginners - A one of its kind course\nIt is not only a comprehensive course, you are will not find a course similar to this. The flipped classroom model with hand-on learning will help you experience direct  into the course as your begin your learning journey. This course does not teach Android App Development\nIn this course, you'll learn and practice:\nInstall and configure Android Studio from scratch\nLearn Android Studio User Interface (UI)\nKnow best practices and developer workflow\nConfigure and successfully troubleshoot Android Virtual Device and Emulator\nWork with Debugger and other tools\nCreate basic app and learn UI/UX design concepts, applications, and much more....\nYou will also get complete resources, and code where applicable with this course! We've built this course with our Team ClayDesk of industry recognized developers and consultants to bring you the best of everything!\nSo, if you would like to:\nstart your freelancing career and consult companies, this course is for you\ngain marketable skills as an IT expert and professional, this course is for you\nThis course is not designed for intermediate or advanced level students\nThis Android Studio For Absolute Beginners course is exactly what you need, and more. (You’ll even get a certification of completion)\nWhat out students say.\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all new compliance areas including Android Studio For Absolute Beginners, and I would without a doubt recommend it to anyone looking for a complete Android Studio For Absolute Beginners course.” - Melissa Johanna\n“This is such an awesome course. I loved every bit of it. Wonderful learning experience!” Dave Portman.\nJoin thousands of other students and share valuable experience\nWhy take this course?\nAs a senior Project Manager & Web developer, managing and deploying enterprise level IT projects, along with a Microsoft Certified Systems Engineer & Trainer, my experience with Android Studio and Android Development has been phenomenally great! I am excited to share my knowledge and transfer skills to my students.\nEnroll now in Android Studio For Absolute Beginners today and revolutionize your learning. Stay at the cutting edge of enterprise mobile app development and enjoy bigger, brighter opportunities.\nSee you in class\nSyed and Team ClayDesk",
      "target_audience": [
        "Absolute beginners who wish to learn fundamentals of Android Studio and develop basic mobile app",
        "Beginner Java developers curious about Mobile App Development"
      ]
    },
    {
      "title": "Learn how to build a Chess game in iOS 10.",
      "url": "https://www.udemy.com/course/learn-how-to-build-a-chess-game-in-ios-10/",
      "bio": "Learn how to make a Chess game in Xcode and code it with Swift. Learn about how to set up a simple AI!",
      "objectives": [
        "Be able to make a chess game",
        "Learn about Swift and Xcode",
        "Learn about how to add in a simple AI"
      ],
      "course_content": {
        "Creating a Chess Game in Swift": [
          "Please watch this before you purchase the course - Introduction to the course.",
          "Chess - Part 1",
          "Chess - Part 2",
          "Chess - Part 3",
          "Chess - Part 4",
          "Chess - Part 5",
          "Chess - Part 6",
          "Chess - Part 7",
          "Chess - Part 8",
          "Chess - Part 9",
          "Chess - Part 10",
          "Chess - Part 11",
          "Chess - Part 12",
          "Chess - Part 13",
          "Chess - Part 14",
          "Chess - Part 15",
          "Chess - Part 16",
          "Source Code"
        ],
        "Bonus Lecture: LIVE NOW! Early-bird Kickstarter course": [
          "Bonus Lecture: LIVE NOW! Early-bird Kickstarter course"
        ]
      },
      "requirements": [
        "You will need to know how Xcode works",
        "This course assumes you know the basics of programming fundamentals.",
        "You will need a Mac and Xcode to make this course work."
      ],
      "description": "\"Omg this was freakin amazing. Whoever you are who worked together to put this together, you have my immense gratitude. This is so perfect for what I needed right now to help me create a professional chess related app for iPad and iPhone. I have a modest amount of programming experience (just enough to get by for supporting my day job which is not as a programmer) and never heard of xcode before now. I'm amazed what a nice experience you designed for someone like me to even create something that looks like a chessboard on an iPhone in one video lesson. Thanks so much, I'm excited to continue on.\" ⭐⭐⭐⭐⭐ Chris Balcom, Modesto California\nDo you want to make apps? Do you want to learn to code? This course is for you! In this course you will learn how to make a Chess Game in iOS 10. This course requires you to have basic knowledge of Xcode and programming. If you are a complete beginner, this course isn't for you.\n\nThis course is the result of a very successful Kickstarter!\n\"I really enjoyed this course. I have no knowledge of chess game engines but this was a very good introduction to them. Keep 'em coming.\"\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\n\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nWho is this class for?\nPeople who want to improve their technical skills\nComplete beginners\nPeople who want to make money. I show people the tools on how to make money through various methods of passive income\nPeople who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "This course starts out with the assumption you have prior programming experience.",
        "This course is for anybody who wants to learn how to make a Chess game"
      ]
    },
    {
      "title": "Flutter and Riverpod for Beginners | Task Management App",
      "url": "https://www.udemy.com/course/flutter-riverpod-tutorial-sqlite-notification/",
      "bio": "Build a Flutter Task Management App with Firebase and Local Notification and Riverpod 2.0",
      "objectives": [
        "Flutter and dart explained step by step",
        "Flutter classes and widgets",
        "Flutter basic architecture (MVC)",
        "Flutter local notification",
        "Flutter sqflite for local storage",
        "Flutter state management"
      ],
      "course_content": {
        "New Videos": [
          "Introduction"
        ],
        "Project set up, naming convention and architecture": [
          "Project creating and naming convention",
          "Understanding pubspec.ymal file and cleaning it",
          "Understanding main.dart class and start project",
          "Understanding the architecture"
        ],
        "Onboarding screen and design and coding": [
          "Understanding flutter material.dart class",
          "More about onboarding section and structure",
          "Launch onboarding screen",
          "Image path in pubspec file",
          "Show image correctly",
          "Showing text and understand how style works",
          "Screen resizing and package for it",
          "Setting up screen utils and understand child",
          "Correct screen size for screen util",
          "Screen util and understand the units h, w, and sp",
          "White space widget",
          "Work on the font size",
          "Understanding row layout",
          "Bottom row part 1",
          "Bottom row fading text part 2",
          "Bottom row and more on layout part 3",
          "Work on the worm effect",
          "Second page of onboarding screen"
        ],
        "Authentication screen": [
          "ScaffoldBackground color",
          "Understanding Navigator object and sign in screen",
          "Understanding ListView",
          "Add text and images to sign in page",
          "Textfield and styling",
          "Listview and scroll physics",
          "Understanding keyboard type",
          "Deeper understanding of Navigation stack",
          "Doing input for OTP",
          "Install pinut plugin and set up"
        ],
        "Set up firebase": [
          "Set up firebase project",
          "Firebase configuration on the main.dart",
          "Finish with SHA1 key"
        ],
        "Authentication": [
          "Setup auth repository",
          "Authentication controller"
        ],
        "State management with Riverpod": [
          "Understanding state management",
          "Flutter-riverpod and flutter-hooks",
          "Riverpod hooks",
          "Riverpod code generation"
        ],
        "Authentication layer": [
          "Style country code picker",
          "More style on country code picker",
          "Riverpod firebase, repository and controller",
          "Get code and loading icon and asnyc context",
          "50. Sqlite and understand the data structure",
          "Understand why we need a user model",
          "Building a user model",
          "Sqlite functions for user",
          "Catch error function",
          "Get OTP code and go to home page"
        ],
        "Todo section and build task model and task provider": [
          "Todo section part 1",
          "Work on the app bar part 2",
          "Work on the tab bar part 3",
          "Create screen for add task part 4",
          "Finish adding task todo page part 5",
          "Generate datetime providers and install plugin part 6",
          "DBhelper and method",
          "Fix issues and create TaskModel part",
          "Task provider",
          "Work on todo tile",
          "Add todo model in the code",
          "Show a task",
          "Show completed task"
        ],
        "Tomorrow task and Expansion tile and controllers": [
          "Tomorrow task part 1",
          "Expansion tile part 2",
          "Finish styling for tomorrow task and show up correctly part 3",
          "Done with the day after tomorrow task"
        ]
      },
      "requirements": [
        "You need to have flutter, android studio and flutter sdk installed."
      ],
      "description": "This is a Flutter app development course for beginners to advanced learners using some technical features like Riverpod 2.0, Sqlite, Firebase login and Local notification.\nThe app development process is fun, since this starts with a beautiful ui and slowly walks down to advanced concepts like, Sqlite CRUD operations, Generating providers with freezed package,  Android dynamic color, Firebase login with OTP and at the end covers flutter local notification both for Android and iOS.\nSqlite CRUD\nYou would be to create a task, save it the local database, edit and later delete as you want. You can also mark a task completed.\nGenerating Riverpod Providers\nYou will learn the latest way of generating code with Riverpod code generation package and how to work with generated providers.\nWe will have providers for sending code and status change, expansion tiles and time management.\nFreezed Package\nWe explained in detail how to generate code with Freezed package and understanding of the code.\nDynamic Color\nThis app shows dynamic colors UI based on users settings on the phone. On Android it can detect the color theme of the users and auto change the our app color itself.\nFirebase OTP\nWe covered Firebase OTP and how to get the code and set the code and login.\nLocal notification\nA notification could be set up and shown using flutter local notification package.",
      "target_audience": [
        "From beginners to advanced learners who want to develop cross platform mobile app using both ios and android"
      ]
    },
    {
      "title": "Advance Your Coding Skills: Learn Swift and Xamarin",
      "url": "https://www.udemy.com/course/advance-your-coding-skills-learn-swift-and-xamarin/",
      "bio": "Become a professional in Swift and Xamarin.",
      "objectives": [
        "Learn how to Code in Swift 3.0.",
        "Become a virtuoso programmer.",
        "Design and code apps for iOS and Android in Xamarin."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Swift - Variables": [
          "01. Introduction to Variables in Swift",
          "02. Boolean Variables",
          "03. Integers",
          "04. Floats and Doubles",
          "05. Characters and Strings",
          "06. Optional Variables",
          "07. Summary"
        ],
        "Swift - If Statements": [
          "01. Introduction to If Statements in Swift",
          "02. Basic If Statements",
          "03. Multiple Conditions and Nested If Statements",
          "04. Else If Statements",
          "05. Else Statements",
          "06. If Let Statements",
          "07. Summary"
        ],
        "Swift - Arrays": [
          "01. Introduction to Arrays in Swift",
          "02. Boolean Arrays",
          "03. Int, Float, and Double Arrays",
          "04. Character and String Arrays",
          "05. Accessing and Modifying Array Elements",
          "06. Adding Elements to Existing Arrays",
          "07. Insert and Remove Functions",
          "08. Summary"
        ],
        "Swift - For In Loops": [
          "01. Introduction to For in Loops in Swift",
          "02. Increase Count by One with For In Loops",
          "03. Using Index Value to Perform Operations",
          "04. Combining Arrays and For In Loops",
          "05. Constructing Arrays Using For In Loops",
          "06. Combining For In Loops and If Statements",
          "07. Summary"
        ],
        "Swift - Functions": [
          "01. Introduction to Functions in Swift",
          "02. No Parameters or Return Type Functions",
          "03. Functions with Return Types",
          "04. Functions with Multiple Return Values",
          "05. Functions with If Statements",
          "06. Functions with For In Loops",
          "07. Summary"
        ],
        "Swift - While Loops and Switch Statements": [
          "01. Introduction to While Loops and Switch Statements",
          "02. Switch Statements",
          "03. Switch Statements Example",
          "04. While Loops",
          "05. While Loops with Game Example",
          "06. Continue, Break, and Run Statements",
          "07. Summary"
        ],
        "Swift - Enumerations, Classes, and Structures": [
          "07a) Swift 3 - Enumerations, Classes, and Structures - Part 1",
          "07b) Swift 3 - Enumerations, Classes, and Structures - Part 2",
          "07c) Swift 3 - Enumerations, Classes, and Structures - Part 3",
          "07d) Swift 3 - Enumerations, Classes, and Structures - Part 4",
          "07e) Swift 3 - Enumerations, Classes, and Structures - Part 5"
        ],
        "Swift - Labels in Xcode": [
          "01. Introduction to Labels",
          "02. Adding a Label to the Layout",
          "03. Initializing the Label in the Code",
          "04. Changing the Label Text",
          "05. Functions Used on Label Text",
          "06. Storing Current Text in a Constant",
          "07. Changing Text Alignment",
          "08. Changing Text Colour",
          "09. Dealing with Scaling Issues",
          "10. Summary"
        ],
        "Swift - Buttons in Xcode": [
          "01. Introduction to Buttons",
          "02. Adding Buttons to the Layout",
          "03. Adding Buttons to the Code",
          "04. Changing Button Properties Within the Code",
          "05. Retrieving Button Attributes",
          "06. Implementing the Button Handler",
          "07. Summary"
        ]
      },
      "requirements": [
        "Must have a Mac Computer and Xcode 8.",
        "PC is optional for Xamarin."
      ],
      "description": "Learn iOS 10 and Xamarin studio with this complete developers course!\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employableskills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nWho is this class for?\nPeople who want to improve their technical skills\nComplete beginners\nPeople who want to make money. I show people the tools on how to make money through various methods of passive income\nPeople who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "If you are an absolute beginner and want to learn to code.",
        "If you are an absolute beginner and want to become an iOS developer."
      ]
    },
    {
      "title": "Create Fitbit Ionic Clock Faces using JavaScript",
      "url": "https://www.udemy.com/course/fitbit-ionic/",
      "bio": "Learn to make Clock Faces for your Fitbit Ionic Smart Watch from Scratch to Deployment with no prior experience!",
      "objectives": [
        "Build Custom Fitbit Ionic Smart Watch Clock Faces",
        "Display Time, Date, Day etc.",
        "Get and Display Steps, Floors climbed, Distance Travelled",
        "Monitor and Display Heart Rate",
        "Monitor Battery Charge State and Draw SVG elements based on value",
        "Publish Clock Face on the Fitbit App Gallery"
      ],
      "course_content": {},
      "requirements": [
        "Fitbit Ionic Smart Watch",
        "Android, iOS or Windows Phone with Fitbit App installed",
        "Fitbit Account",
        "Windows/Mac/Linux machine (any desktop/laptop with a web browser)",
        "Stable Internet Connection",
        "Helpful but not Required: Basic knowledge in HTML, CSS and JavaScript"
      ],
      "description": "This course teaches you how to build your own custom Fitbit Ionic Clock Faces from scratch all the way through to deploying it on the Fitbit App Gallery.\nIt is suitable for beginner developers with no prior knowledge of JavaScript, however a background in web development is certainly beneficial!\nBasic knowledge of HTML, CSS and JavaScript is beneficial but not required for this course.\nThe course instructor Barry Michael Doyle will also provide support and aid where possible to help you if you get stuck.\nIt all begins here!",
      "target_audience": [
        "Anyone interested in creating clock faces for their Fitbit Ionic Smart Watch.",
        "Anyone wanting a to publish their own Fitbit Ionic Clock faces.",
        "Anyone wanting to learn new development techniques in Smart Watch Development",
        "Anyone looking to get into Programming"
      ]
    },
    {
      "title": "Swift Weather (Meteorology) Application with REST API",
      "url": "https://www.udemy.com/course/swift-weather-meteorology-application-with-rest-api/",
      "bio": "Develop iOS Weather App using Swift and REST API Xcode, learn how to write clean code and build iOS application, ios 12",
      "objectives": [
        "Work with REST API",
        "Build application for iPhone",
        "Design iOS Apps",
        "Parse JSON files",
        "Parse CSV files",
        "Write clean code"
      ],
      "course_content": {
        "Introduction to WeatherBit": [
          "Introduction",
          "Installing 3rd party Libraries",
          "WeatherBitIo Details",
          "Getting current weather in browser",
          "Assets download"
        ],
        "Working with Models": [
          "Building Current weather model",
          "Current weather private and public vars",
          "Setting the Vars from JSON",
          "Finishing current weather class",
          "Hourly Forecast Class part 1",
          "Hourly Forecast Class part 2",
          "Hourly Forecast Class part 3",
          "Testing hourly weather forecast",
          "Weekly Weather Forecast class"
        ],
        "Custom Weather View": [
          "WeatherView User Interface",
          "Wether view UI connections",
          "Weather View UI part 1",
          "Weather View UI part 2",
          "Weather View Connections",
          "Initialising Weather View in code",
          "Testing Weather View",
          "Showing current weather",
          "Current weather test run"
        ],
        "Weather UI": [
          "Hourly Weather cell UI and code",
          "Generate cell for Hourly weather",
          "Info Collection View Cell",
          "Weather Table View Cell",
          "Register cells with tableview and collectionView",
          "TableView and collection view data sources"
        ],
        "Getting Weather from API": [
          "Getting Weather from API",
          "Calling functions to download weather",
          "Fixing UI background colors",
          "Fixing scroll view bug",
          "Setup Weather Info",
          "Adding weatherInfo items"
        ],
        "Updating model": [
          "Making model dynamic",
          "Making model dynamic part 2",
          "Test dynamic weatherLocation"
        ],
        "Working with locations": [
          "All Locations UI",
          "Parsing CSV part 1",
          "Parsing CSV part 2",
          "Choose City table view functions",
          "Search controller setup",
          "Searching with search controller",
          "Save and load from user defaults",
          "Encoding and decoding Weather Locations",
          "Dismissing view on selection",
          "Choose City VC Delegate",
          "Loading locations from User defaults",
          "MainWeather Custom Cell",
          "City temp data struct",
          "Tableview Data source and delegate",
          "Delete Location from User defaults",
          "Weather View Controller location manager",
          "Requesting Authorization to use location",
          "Location Service class",
          "Getting locations from User defaults"
        ],
        "Updating WeatherView Controller": [
          "Create and add weatherViews to scrollView",
          "Testing the application with multiple weather locations",
          "Page Control part 1",
          "Page Control part 2",
          "Generating cityTempData for each location",
          "Passing CityTempData to all locations VC",
          "Bug fixing with city name",
          "AllLocations delegate",
          "Bug fixing",
          "Test run to see if refresh works"
        ],
        "Temperature format options": [
          "Adding Temp format segment",
          "Saving and loading temp format from user defaults",
          "Test run to check temp segment",
          "Setting temp format based on settings",
          "Test Run dynamic format check",
          "Fixing dynamic temp format bug",
          "Final test run"
        ]
      },
      "requirements": [
        "Experience with xCode and Swift",
        "Basic Swift knowledge"
      ],
      "description": "In iOS 12 Weather App we are going to build real world iOS application. And when I say real world, I mean you can use this App every day!\nUnlike any other courses found on Udemy, I always teach full real world apps, when we finish with the course, you are going to have an app ready to post to AppStore\nWhat our app will include:\nCurrent weather for your current  location\n24 hour Weather forecast for your current location\nWeekly (7 days) weather forecast for your current location\nCurrent weather for Any City of your choice\n24 hour Weather Any City of your choice\nWeekly (7 days) weather forecast Any City of your choice\nHow to use REST API\nHTTPS calls\nHow to write clean readable code\nCreate custom views using storyboard and XIB files\nWorking with TableViews\nWorking with CollectionViews\nGesture recognisers\nGPS Location with MapKit\nWorking with JSON\nUsing SwiftyJSON\nAnd many more...\n\n\nThis iOS12 Weather App is NOT beginner level course. You need to know your way around the xCode, be familiar with it, you have to have basic knowledge in Swift and application building. We are going to start from scratch and build the application together. All assets will be provided by me. I will type and explain every line of code. the course is around 20 hours long. And by the time we finish, you will learn a lot of new things even if you are experienced iOS developer.\nThe curse will teach you how to write clean code, structure your app development, so even if you get back to your code in few years, you can read and understand it clearly.\nWe are also proud to say that we have one of the best Support available on Udemy! Our Q/A Section is constantly monitored and all questions are answered within few hours, Sometimes we even chat with students in real time to help them with the issues they may face during the study.\nDon’t waste your time on low quality courses where you don't even get support of the instructor\nYour time is precious. We offer the best video courses with carefully crafted content, we are learning by coding!\n\n\nDon't just take our word for it, check out our other courses and what other students have to say about our courses!\n\n\n\"This course is so far the best course I took in UDEMY. I really learned something. Totally worth the time. Won't regret it. The instructor was responsive too and the course is new and knowledgeable.\" J Nima\n\"A excellent Tutorial by david. Very good explanation\" Tapan Kumar Raut\n\"There is nothing on Udemy like David's courses! I cannot recommend his courses enough. Best teacher out there, very responsive as well. \" Kris\n\"I really do love the approach, the structure of the course gives you the ability to move forward smoothly, and efficiently gain as much knowledge as possible, the instructor really goes in-depth, it's incredibly comprehensive, not to forget that this is a real world project, and the advanced concepts gained here make me all confident that i'll be able to build my own apps in a very effective way. the course is well taught, and it really deserves the 5 stars, the instructor as well, he explains things in a very clear, clean way. Definitely enjoying the Course. and definitely Thumbs Up.\" Yen Loo\n\"This is one of the most complete and comprehensive iOS projects on Udemy! Everything works! No broken code! You learn Firebase, Onesignal and Backendless in one project. The instructor is always accessible, he goes for quality not quantity. I still have a way to go, but so far it has kept me completely engaged and focused! I wish there were more courses like this! I will definitely purchase another from David.\" antr8tr\n\n\nWe are so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days, No Questions Asked! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the Buy Now button and join the best iOS 12 Weather App development course and lets get started.",
      "target_audience": [
        "If you are beginner iOS developer and want to learn more advanced app development, then you have come to the right place.",
        "You need to have experience with xCode and Swift."
      ]
    },
    {
      "title": "iPhone App Programming for iOS7 – Create a real iOS app",
      "url": "https://www.udemy.com/course/iphone-app-programming-for-ios-7/",
      "bio": "Make iPhone apps using Xcode and iOS7. You can test your programming skills with code challenges in Objective C",
      "objectives": [
        "Create a real iPhone app",
        "Design User Interfaces in Xcode 5",
        "Prototype ideas and create apps",
        "Learn Objective C"
      ],
      "course_content": {
        "iPhone Programming": [
          "Welcome",
          "Mac OSX Setup with Xcode",
          "Windows Setup with MacInCloud.com",
          "1.1 Lecture - iPhone Programming",
          "1.2 Challenge - Sketch Your iPhone App"
        ],
        "Xcode 101": [
          "2.1 Lecture - Xcode 101",
          "2.2 Tutorial - Xcode 101",
          "2.3 Tutorial - Xcode 101 Troubleshooting",
          "2.4 Challenge - Xcode 101 Terms"
        ],
        "Picking an App Idea": [
          "3.1 Lecture - Picking an App Idea",
          "3.2 Challenge - Stop Watch - Start Your App Idea in Xcode"
        ],
        "User Interface": [
          "4.1 Tutorial - User Interface Layout",
          "4.2 Challenge - Stop Watch - Setup an NSTimer"
        ],
        "Connect the User Interface to Code": [
          "5.1 Tutorial - Connect the User Interface to Code",
          "5.2 Challenge - Stop Watch - Connect Buttons and Format NSDate Objects"
        ],
        "App Logic": [
          "6.1 Tutorial - Create App Logic with Custom Classes",
          "6.2 Challenge - Stop Watch - Calculate Elapsed Time",
          "6.2.1 Challenge Bonus - Stop Watch - Calculate Elapsed Time",
          "6.2.2 Challenge Bugfix - Stop Watch - Calculate Elapsed Time",
          "6.3 Challenge - Stop Watch - Refactoring Elapsed Time"
        ],
        "Linking App Logic to User Interface": [
          "7.1 Tutorial - Link the App Logic and the UI",
          "7.2 Challenge - Create a Custom Class"
        ],
        "Hide the Keyboard and Use Delegate Objects": [
          "8.1 Tutorial - Hide the Keyboard and Use Delegate Objects",
          "8.2 Challenge - Create a Protocol and Delegate Object"
        ],
        "Auto Layout Explained": [
          "9.1 Lecture - Auto Layout Explained",
          "9.2 Lecture - Auto Layout Explained",
          "9.3 Tutorial - Auto Layout Explained",
          "9.4 Tutorial - Auto Layout Explained"
        ],
        "10.1 Tutorial - Live Preview with Auto Layout Constraints": [
          "10.1 Tutorial - Live Preview with Auto Layout Constraints"
        ]
      },
      "requirements": [
        "Mac OS X (10.9)",
        "Xcode 5",
        "PC (with MacinCloud.com)"
      ],
      "description": "Learn to create iPhone apps\nFollow along in Xcode 5 to turn your ideas into iPhone apps.\nCreate iPhone apps with easy to follow, step-by-step instructions, in this in-depth course taught by an expert instructor.\nThis course features HD lectures and programming screencasts with large, clear text. Listen to crisp audio and follow Paul Solt’s instruction with demonstrations and on-screen pointer and highlighting.\nOverview\nYou will learn how to create an iPhone app interface using Xcode's Interface Builder. Drag and drop buttons, labels, and images to create your first iPhone app. The interface designer is a great tool to learn for prototyping app ideas.\nPaul Solt will show you how to connect code and the user interface together along with the best practices and potential pitfalls. You'll learn what to avoid, and how to solve problems that can crash an iPhone app.\nTopics\nInterface design\nDebugging\nResponding to user input\nDisplaying content\nAuto Layout and responsive design\nLists using the UITableView\nSaving and loading data\nRead what my students have said\n“I really like this class. I would recommend it to anyone starting to learn iOS development, because not matter if you know or don’t know a programming language Paul explains things very clear. It’s a nice class to take.“ –Carlos King\n“I’m totally enjoying this course. Paul explains it all perfectly even I’m do not speak very good English. Do I recommend this class? YES!” –Miguel Arjona\n“Absolutely fantastic. It’s about time there was a high quality class available online to learn about iPhone app development. Definitely would recommend!” –Dot Fuz\nApp Store\nIf you want to learn how to program in Objective-C and how to design a real world app, you need to signup. You can make real money by selling the app design in this course!",
      "target_audience": [
        "Objective C programming experience is recommended",
        "Student should have a basic understanding of variables, functions, loops, and Objects"
      ]
    },
    {
      "title": "Machine Learning use in Android - The Complete 2025 Guide",
      "url": "https://www.udemy.com/course/the-complete-android-machine-learning-course/",
      "bio": "Most Comprehensive Android Machine Learning Course Available Online, Build 20+ Android 16 ML, AI Apps in 2025",
      "objectives": [
        "Learn use of Machine Learning & Computer Vision in Android App Development",
        "Train Machine Learning Models on Custom Datasets for Android Development",
        "Use Pre-Trained Tensorflow Lite Models in Android App Development",
        "Train Custom Image Classification Models and build Smart Android Apps",
        "Use of Tensorflow lite delegates in Android to improve model performance",
        "Use of Floating point and quantized models tensorflow lite models in Android",
        "Build Cam Scanner clone in Android",
        "Build A Text Recognition Application in Android",
        "Build A Face Detection and Facial Expression Detection Application in Android",
        "Build A Text Translation Application in Android",
        "Develop a Human Pose Estimation Application in Android",
        "Image Labeling / Image Classification in Android",
        "Perform Object Detection in Android with Images and Videos",
        "Add Smart Reply Suggestion Models in Chat based Android Apps",
        "Extract entities or valuable information from text in Android",
        "Create a barcode scanner app in Android",
        "Build Hand Writing Recognition Application in Android (Digital Ink Recognition)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Java: Choose or capturing Images and Showing live camera footage": [
          "Creating new Android Studio Project & GUI of of our Application",
          "Choosing Images From Gallery in Android",
          "One More Step",
          "Capturing Images from Camera in Android",
          "Converting Images into Bitmap in Android",
          "Image Picker in Android Overview",
          "Showing Live Camera footage in Android using Camera 2 API",
          "Testing Live Feed Application",
          "Android converting frames of live camera footage into Bitmap"
        ],
        "Kotlin : Choose or capturing Images and Showing live camera footage": [
          "Creating a new Android Studio Project and building GUI of Application",
          "Choosing Images From Gallery In Android",
          "Handling Permissions in Android",
          "Capturing Images using Camera In Android",
          "Converting Images into Bitmaps in Android",
          "Image Picker in Android Overview",
          "Showing Live Camera footage in Android using Camera 2 API",
          "Testing Live Feed Application",
          "Android converting frames of live camera footage into Bitmap"
        ],
        "Firebase ML Kit": [
          "Section introduction",
          "Firebase ML Kit Introduction"
        ],
        "Java: Image Labeling in Android": [
          "Setting Up Image Labeling With Images Project",
          "GUI of Image Labeling With Images Android Application",
          "Documentation of Image Labeling",
          "Adding Library in Android and Preparing Images for Image Labeling",
          "Initializing Image Labeler and Performing Image Labeling",
          "Testing Image Labeling With Images Application",
          "Formatting Output and Setting Confidence threshold",
          "Image Labeling With Images Overview"
        ],
        "Kotlin: Image Labeling in Android": [
          "Setting Up Image Labeling With Images Project",
          "GUI of Image Labeling With Images Android Application",
          "Documentation of Image Labeling",
          "Adding Library in Android and Preparing Images for Image Labeling",
          "Initializing Image Labeler and Performing Image Labeling",
          "Testing Image Labeling With Images Application",
          "Formatting Output and Setting Confidence threshold",
          "Image Labeling With Images Overview"
        ],
        "Pre-Trained Models Section": [
          "Introduction",
          "Tensorflow lite Introduction"
        ],
        "Java Image Classification Section": [
          "Image Classification Section Introduction",
          "Importing Starter application code for Image classification",
          "Explanation of starter application code",
          "Image classification application coding",
          "Testing Image Classification application",
          "Classifier class",
          "Importing starter code for Live Feed Image Classification",
          "Starter Application Demo",
          "Live camera Footage in Android",
          "Image classification with frames of live camera footage",
          "Testing live feed image classification application"
        ],
        "Kotlin Image Classification Section": [
          "Image Classification Section Introduction",
          "Importing Image Labeling application starter code",
          "Image classification application coding",
          "Testing Image Classification application",
          "Classifier class",
          "Image Classification with Images Overview",
          "Importing Image Labeling live feed application starter code",
          "Starter Application Demo",
          "Image classification with frames of live camera footage",
          "Testing live feed image classification application"
        ],
        "Java: Quantization": [
          "Quantization Introduction",
          "Using a quantized model in Android"
        ]
      },
      "requirements": [
        "Basic Knowledge of App development in Android using either Java or Kotlin"
      ],
      "description": "Welcome to Machine Learning use in Android the Complete Guide.\nIn this course, you will learn the use of Machine learning and computer vision in Android along with training your own image recognition models for Android applications without knowing any background knowledge of machine learning. The course is designed in such a manner that you don't need any prior knowledge of machine learning to take this course.\nIn modern world app development, the use of ML in mobile app development is compulsory. We hardly see an application in which ML is not being used. So it’s important to learn how we can integrate ML models inside Android (Java & Kotlin) applications. And this course will teach you that. And the main feature of this is you don’t need to know any background knowledge of ML to integrate it inside your Android applications.\nWhat we will cover in this course?\nDealing with Images in Android\nDealing with frames of live camera footage in Android\nUse of quantized and floating point tensorflow lite models in Android\nUse of tensor flow lite delegates to improve the performance of ML models in Android\nImage classification with images and live camera footage in Android\nObject Detection with Images and Live Camera footage\nImage Segmentation to make images transparent in Android\nUse of regression models in Android\nImage Labeling Android to recognize different things\nBarcode Scanning Android to scan barcodes and QR codes\nPose Estimation Android to detect human body joints\nSelfie Segmentation Android to separate the background from the foreground\nDigital Ink Recognition Android to recognize handwritten text\nObject Detection Android to detect and track objects\nText Recognition Android to recognize text in images\nSmart Reply Android to add auto reply suggestion\nText Translation Android to translate between different languages\nFace Detection Android to detect faces, facial landmarks, and facial expressions\nTraining image classification models for Android\nRetraining existing machine learning and computer vision models with transfer learning  for Android applications\n\n\nSections:\nThe course is divided into four main parts.\nImage and live camera footage in Android (Java & Kotlin)\nPre-Trained Tensorflow Lite models use in Android (Java & Kotlin)\nFirebase ML Kit use in Android (Java & Kotlin)\nTraining Image Classification models for Android (Java & Kotlin)\n1: Images and live camera footage in Android (Java & Kotlin)\nSo in the first section, you will learn to handle both images and live camera footage in Android so that later we can use them with machine learning models. So, in that section, we will learn to\nChoose images from the gallery in Android (Java & Kotlin)\nCapture images using the camera in Android (Java & Kotlin)\nDisplaying live camera footage in Android (Java & Kotlin) applications using camera2 API\nAccessing frames of live camera footage in Android (Java & Kotlin)\n2: Pre-Trained Tensorflow Lite\nSo, after learning the use of images and live camera footage in Android  in this section we will learn the use of popular pre-trained machine learning and computer vision models in Android and build\nImage classification Android app (Both with images and live camera footage)\nObject detection Android app(Both with images and live camera footage)\nImage segmentation Android\napplications\n\n\n3: Quantization and Delegates\nApart from that, we will cover all the important concepts related to Tensorflow lite like\nUsing floating-point and quantized model in Android (Java & Kotlin)\nUse the use of Tensorflow lite Delegates to improve model performance\n\n\n4: Regression In Android\nAfter that, we will learn to use regression models in Android (Java & Kotlin) and build a couple of applications including a\nFuel Efficiency Predictor for Vehicles.\n\n\n5: Firebase ML Kit\nThen the next section is related to the Firebase ML Kit. In this section, we will explore\nFirebase ML Kit\nFeatures of Firebase ML Kit\nThen we are going to explore those features and build a number of applications including\nImage Labeling Android (Java & Kotlin) to recognize different things\nBarcode Scanning Android (Java & Kotlin) to scan barcodes and QR codes\nPose Estimation Android (Java & Kotlin) to detect human body joints\nSelfie Segmentation Android (Java & Kotlin) to separate the background from the foreground\nDigital Ink Recognition Android (Java & Kotlin) to recognize handwritten text\nObject Detection Android (Java & Kotlin) to detect and track objects\nText Recognition Android (Java & Kotlin) to recognize text in images\nSmart Reply Android (Java & Kotlin)to add auto reply suggestion\nText Translation Android (Java & Kotlin) to translate between different languages\nFace Detection Android (Java & Kotlin) to detect faces, facial landmarks, and facial expressions\nCamScanner Android Clone\nApart from all these applications, we will be developing a clone of the famous document-scanning android application CamScanner. So in that application, we will auto-crop the document images using text recognition and improve the visibility of document Images.\n\n\n6: Training Image Classification Models\nAfter mastering the use of ML Models in the Android (Java & Kotlin) app development in the Third section we will learn to train our own Image Classification models without knowing any background knowledge of Machine learning and computer vision.\nSo in that section, we will learn to train ML models using two different approaches.\nDog breed Recognition using Teachable Machine\nFirstly we will train a dog breed recognition model using a teachable machine.\nBuild a Real-Time Dog Breed Recognition Android (Java & Kotlin) Application.\nFruit Recognition using Transfer Learning\nUsing transfer learning we will retrain the MobileNet model to recognize different fruits.\nBuild a Real-Time fruit recognition Android (Java & Kotlin) application using that trained model\n\n\nImages and Live Camera Footage\nThe course will teach you to use Machine learning and computer vision models with images and live camera footage, So that, you can build both simple and Real-Time Android applications.\n\n\nAndroid Version\nThe course is completely up to date and we have used the latest Android version throughout the course.\n\n\nLanguage\nThe course is developed using both Java and Kotlin programming languages. So all the material is available in both languages.\n\n\nTools:\nThese are tools we will be using throughout the course\nAndroid Studio for Android App development\nGoogle collab to train Image Recognition models.\nNetron to analyze mobile machine learning models\n\n\nBy the end of this course, you will be able\nUse Firebase ML kit in Android App development using both Java and Kotlin\nUse pre-trained Tensorflow lite models in Android App development using Java and Kotlin\nTrain your own Image classification models and build Android applications.\nYou'll also have a portfolio of over 20+  machine learning and computer vision-based Android R applications that you can show to any potential employer.\n\n\ncourse requirements:\nThis is the course for you if\nYou want to make smart Android (Java & Kotlin) apps\nYou are interested in becoming a modern-day Android (Java & Kotlin) developer, a freelancer, launching your own projects, or just want to try your hand at making real smart mobile apps\nYou have no prior programming experience, or some but from a different language/platform\nYou want a course that teaches you the use of machine learning and computer vision in Android (Java & Kotlin) app development, in an integrated curriculum that will give you a deep understanding of all the key concepts an Android (Java & Kotlin) developer needs to know to have a successful career\n\n\n\n\nWho can take this course:\nBeginner Android ( Java or Kotlin ) developer with very little knowledge of Android app development.\nIntermediate Android ( Java or Kotlin ) developer wanted to build a powerful Machine Learning-based application in Android\nExperienced Android ( Java or Kotlin ) developers wanted to use Machine Learning and computer vision models inside their Android applications.\nAnyone who took a basic Android ( Java or Kotlin ) mobile app development course before (like Android ( Java or Kotlin ) app development course by angela yu or other such courses).\nUnlike any other Android app development course, The course will teach you what matters the most.\nSo what are you waiting for? Click on the Join button and start learning.",
      "target_audience": [
        "Beginner Android Developer curious about Machine learning and computer vision use in Android",
        "Intermediate Android developers looking to enhance their skillset",
        "Experienced Professional want to integrate Machine Learning in their Android Applications"
      ]
    },
    {
      "title": "Getting Started with iOS 9 Development",
      "url": "https://www.udemy.com/course/getting-started-with-ios9-development/",
      "bio": "This course teaches the fundamentals of developing iOS applications using version 2 of the Swift programming language",
      "objectives": [
        "Become and expert in App development with iOS9",
        "Learn by example by walking you through real live projects step by step",
        "Learn the fundamentals of Swift 2, programming language from Apple"
      ],
      "course_content": {
        "[Day 1] Introduction to Swift2": [
          "Introduction",
          "Setup and Hello World App",
          "The Xcode Interface - Part 1",
          "The Inspector Panel - Part 2",
          "The Editor - Part 3",
          "HelloWorld App - Part 1",
          "HelloWorld App - Part 2",
          "HelloWorld App - Part 3"
        ],
        "[Day 2] Variables and Other Types": [
          "Variables and Constants",
          "Int, Double and their Subtypes",
          "Optional Types and Nil",
          "Strings and Characters",
          "Boolean Type",
          "Tuples",
          "Unit2 Exercises"
        ],
        "[Days 3] More on Arrays, Loops, Directories": [
          "Fixing Unresponsive Playgrounds",
          "Correcting the Command Line Tools Version",
          "Learn About Arrays",
          "Learn About Sets",
          "Learn About Dictionaries",
          "For, for-in, while and Repeat Loops",
          "If, Guard and Switch",
          "Unit3 Exercises"
        ],
        "[Day 4] Functions, References and Closures": [
          "Basic Function Syntax",
          "Default and Variadic Parameters",
          "Value and Reference Type Parameters",
          "Function Types & Nested Functions",
          "Learn Closures",
          "Unit4 Exercises"
        ],
        "[Days 5] Enumerations in iOS": [
          "Intro to Enumerations",
          "Enumerations: Raw Values",
          "Associated Types",
          "Initialization in Enumerations",
          "Mutation Functions in Enumerations",
          "Unit5 Exercises"
        ],
        "[Day 6] Classes, Structures & Methods": [
          "Classes and Structures",
          "Computed Properties",
          "Property Observers",
          "Lazy Stored Properties",
          "Type Properties and Methods",
          "Inheritance",
          "Unit6 Exercises"
        ],
        "[Day 7] First App in iOS, view and Other": [
          "Intro to First iOS App (HelloYou)",
          "Starting the App, Writing the Model",
          "Instantiating the Model",
          "Creating the View",
          "The ViewController & Running the App",
          "Model – View – Controller in iOS",
          "Delegation",
          "Starting the PeopleCount App",
          "Setting up the Delegation",
          "Unit7 Exercises"
        ],
        "[Day 8] Navigations and Segue": [
          "Using a Storyboard Segue",
          "Using an Unwind Segue With the Exit Control",
          "Setting up a Navigation Controller App",
          "Building a Navigation Hierarchy",
          "Sending Data During a Segue",
          "Delegation in Navigation Controllers - Part 1",
          "Delegation in Navigation Controllers - Part 2",
          "Unit8 Exercises"
        ],
        "[Day 9] Table View in Depth": [
          "Intro to Tab Bar Controllers",
          "Moving Data in a Tab Bar Application",
          "Displaying Data in a Table View",
          "Data Source Methods & Headers",
          "Applying Group Settings to Table Views",
          "Indexing a Table View",
          "Using Subtitle Styles",
          "Segueing From a Selected Cell",
          "Description of the Exercise for this Unit"
        ],
        "[Day 10] NoteTaker App": [
          "Setting up Storyboard for NoteTaker App",
          "The Model for NoteTaker & Plist Files",
          "Adding a Note",
          "Resigning the Keyboard on Text Controls",
          "Presenting the Detail View for a Note",
          "Deleting Notes",
          "Saving and Using Code Snippets in Xcode",
          "Presenting an Alert when no Plist Exists",
          "Cleaning up the Code, Final Exercise & Summary of Course"
        ]
      },
      "requirements": [
        "We assume you have some basic knowledge of programming.",
        "Knowledge of some Scripting Language Preferred, but Not Necessary."
      ],
      "description": "This course teaches the fundamentals of developing iOS applications using version 2 of the Swift programming language.\nThe course is in 10 units: the first six cover the Swift language itself; the last four concentrate on the core view controller architecture of an iOS app.\nAt the end of the course, you’ll be able to write iOS applications that use tables, hierarchical and tabbed navigation, and understand the principles behind developing any iOS application.\nThe course will be complimented with shorter sessions on the various extension frameworks at a later date, including SpriteKit, SceneKit, HealthKit, WatchKit, etc.\n\nTopics include:\n- Introduction to working with Xcode\n- Data types, optionals, and tuples\n- Collection types: arrays, sets, and dictionaries\n- If statements and loops\n- functions and closures\n- Enumerations\n- Classes and structures\n- Stored and computed properties\n- Inheritance in Swift\n- Introduction to iOS\n- Model - View - Controller and its role in iOS programming\n- Delegation\n- Navigation controllers and segues\n- Tab bar controllers\n- Table view controllers\n- Using various cell sty les\n- Using headers and footers\n- Grouping vs. plain table styles\n- Indexing a table view\n- A case study: NoteTaker: Showing the full development of an app from start to finish in seven lessons.\nI hope you join me as we explore this course together.",
      "target_audience": [
        "Students wish to upgrade their Swift programming language to Swift 2",
        "Beginners and advanced level developers who want to learn the new and trending Swift 2 and iOS9"
      ]
    },
    {
      "title": "iOS Masterclass: Build An iOS AppStore-Quality App In Swift",
      "url": "https://www.udemy.com/course/ios-masterclass/",
      "bio": "Created by iOSBFree. Taught by iOS professionals. Build An iOS AppStore-Quality App to an iOS industry-standard. Xcode",
      "objectives": [
        "The 6 Coding Principles used in iOS",
        "Build iOS industry-quality Xcode Projects",
        "Build AppStore-quality apps",
        "use Layered Architecture",
        "Separating UI from business logic (like professionals)",
        "Professional ways of thinking",
        "Build an app like a professional - taught by a professional",
        "Great architectural and structural decision-making",
        "Unit testing",
        "Black-box testing",
        "Write understandable code",
        "Write maintainable code",
        "Adopt the style of a professional",
        "Separating responsibilities",
        "BOOST your career forwards by writing structured code"
      ],
      "course_content": {
        "About This Course": [
          "Watch Me!",
          "The Project We'll B Building (A Sneak Peek)"
        ],
        "The 6 Coding Principles (Remember Them!)": [
          "The 6 Coding Principles - Explained",
          "Principle 1: Layered Architecture",
          "Principle 2: KISS (Keep It Simple, Stupid)",
          "Principle 3: DRY Code (Don't Repeat Yourself)",
          "Principle 4: WET Code (Write Everything Twice)",
          "Principle 5: Single Responsibility (For Each File)",
          "Principle 6: Unit Testing (Test The Main API)"
        ],
        "What We're Building": [
          "The Calculator App - A Demo (How Beautiful)",
          "A Preview Of: Our Finished Xcode Project",
          "Take A Look Inside: How The UI Is Connected",
          "Coding Principle: DRY Being Used",
          "Copy & Paste Explained (Well, Paste anyway)",
          "Displaying The History Log Screen",
          "User Experience: Adding Welcome Animations"
        ],
        "Explanation Of: The Finished Project": [
          "Explanation Of: Color Themes",
          "Explanation Of: The Layered Architecture",
          "Explanation Of: The Calculator Engine",
          "Explanation Of: The History Log Screen"
        ],
        "Building The UI": [
          "Creating A New Xcode Project",
          "Positioning Buttons Inside A Stack View",
          "Adding An LCD Display",
          "An Extra Large Zero Button",
          ".PDF Image Buttons",
          "Creating A Color Palette",
          "Architecture That Will Become Color Themes",
          "Let's Tidy The UI (User Interface) A Little",
          "The Math Equation Struct",
          "Connecting IBActions",
          "Let's Build A Calculator Engine!"
        ],
        "Building The Calculator": [
          "Clear Button",
          "Negate Button",
          "Percentage Button",
          "Print Something In The Debug Area",
          "Recording All Equations",
          "The MathInputController",
          "Pin Pad",
          "Formatting Our LCD Display",
          "Decimal Button",
          "Bugs",
          "Validation",
          "Tidy The Project A Little"
        ],
        "Building Color Themes": [
          "Color Theme No.2",
          "Color Themes",
          "Status Bar Styles",
          "Making The UI A Little Better",
          "Theme Manager",
          "Tap Gestures!",
          "Storing Data To Disk: UserDefaults",
          "Data Storage Manager (A Wrapper For UserDefaults)",
          "Storing Custom Data",
          "Color Theme ID (Identifier)",
          "UIButton States"
        ],
        "Copy & Paste": [
          "Becoming First Responder",
          "Long Press Gesture Recogniser",
          "Show The Menu (UIMenuController)",
          "Copy & Paste",
          "Posting Notifications",
          "Hiding The Menu (UIMenuController)"
        ],
        "Animations": [
          "Constructing Button Animation Infrastructure",
          "UIView Animation Blocks Explained",
          "Using Weak References",
          "A 'Polished' Button Animation",
          "Highlighting The LCD Display",
          "Unhighlighting The LCD Display"
        ],
        "The History Log Screen": [
          "Custom UIMenuController Items",
          "Presenting The LogViewController",
          "Connecting A Datasource",
          "Populating Cells",
          "UINavigationControllers",
          "Cell Selection",
          "Color Themes",
          "Tick Animation"
        ]
      },
      "requirements": [
        "Basic iOS knowledge & experience",
        "Basic Swift-language knowledge",
        "Xcode 13 (filmed on 13.2.1)"
      ],
      "description": "→ Become An iOS Professional With Swift In One Course\nCreate a new Swift iOS Xcode project and mould it into an AppStore-quality iOS app! Our '123 Calc' iOS app is available on AppStore now. Just search for ‘123 Calc’ and download it to see what you’ll B building with iOSBFree - an easy way to an iOS Swift Career building professional Xcode apps.\n\n\n→ LEARN FROM ONE OF THE 1st iOS DEVELOPERS IN THE WORLD\nOur instructor Matt, has 13 years of iOS experience and created the world's first iPhone, iPad and Apple Watch apps. Now, he dedicates his time to recording iOS & Swift courses for iOSBFree (pronounced \"iOS Be Free\").\n\n\n→ In This iOS Swift Course\n1. We introduce the concept of structuring your iOS Swift Xcode project to a professional level. Our Xcode project will adhere to an industry-grade standard (You wont find this anywhere else on Udemy!)\n2. We teach how (and why) to layer your project into separate layers, known as layered architecture and is a mandatory coding practice for any iOS development job role.\n3. We teach 'The 6 Coding Principles' used within the iOS industry, which any serious iOS developer MUST LEARN.\n4. Build an iOS Swift AppStore-quality app (iPhone app).\n5. Taught by one of the most experienced iOS developers in the world.\n\n\n→ iOS Swift Learning Objectives\n✔️ Structure Xcode project files (e.g. classes & structs) to an iOS industry-level standard\n✔️ Organise the Xcode project to an iOS industry-level standard\n✔️ Structure iOS code using layered architecture (a MUST in the industry)\n✔️ Create an iOS app in Swift within Xcode\n✔️ Create an iOS AppStore-quality mobile app (ours is available on the AppStore now)\n✔️ To separate behaviours into independent .Swift files (e.g. classes & structs)\n✔️ Learn 'The 6 Coding Principles' every iOS developer MUST understand to reach the top of their iOS career\n✔️ Learn to think as an iOS engineer and not just a coder!\n\n\n→ What Is An iOS Industry Standard?\nAn iOS industry-standard means writing Swift code and structuring your iOS files to the same level of quality as the professionals who work within the iOS industry. If you are serious about working within the iOS industry or want to enhance your mobile app career then you need to work to a high standard and learn from the professionals.\n\n\n→ Xcode Sample Code (.swift files, .xcodeproj files, images too)\nXcode sample code is always included and attached to each video. We provide 2 Xcode projects. One for the beginning of the video and another for the end to include all the changes we have made. We also supply the finished AppStore-ready Xcode project at the beginning of the course.\n\n→ This iOS & Swift Course Is Paid\nThis iOS & Swift course is paid for and helps us create more FREE content for our iOS students. We also supply FREE iOS career-building Career Guides on our website. FREE editable CV Templates used to earn 6 figures. FREE online iOS articles discussing the iOS industry and FREE online Swift courses providing unparalleled  foundational knowledge you wont find anywhere else. By purchasing this iOS & Swift masterclass course you are helping others learn iOS too.\n❤️❤️❤️❤️\nThank you so much for your support.\n\n\n→ Our Service (iOSBFree Ltd) To Mobile App Developers\nWe are a unique iOS career-building service sharing over 14 years of successful experience shaping the mobile-app and iOS industry into what it is today. Our unique information, point-of-view and service can be utilised to build highly successful and profitable careers in iOS.\n\n\n→ A Career In iOS Building Mobile Apps\niOS developers are the most sought after developers in the world! They can earn over £100,000 per year, work remotely and B in high demand for their mobile app skills! Subscribe to our YouTube channel and let us reveal all of our insider secrets completely for free.\n\n\n→ What We Teach (Mobile iOS Apps, Swift, Xcode)\nCareer building, CV writing, interviewing skills, iOS industry secrets, iOS industry stories, real-life experience, iOS fundamentals, ARC memory management, Swift, Xcode & iOS architecture and best engineering practices.\nPlease show your support by enrolling in our course!\n\n→ The Instructor\nCheck out our Instructor profile (just briefly) and glance over Matt's incredible unparalleled iOS experience. After 14 years of specialising in iOS (and only iOS), he created a company helping people build their own successful and profitable careers in iOS too.\nOur unique information cannot be found anywhere else on any platform. We teach code, syntax and architecture but also provide tried & tested strategies to BOOST your iOS mobile app career forwards and build a better future!\n\n→ Want To Learn More iOS Topics?\nPlease send us an email with the mobile app related topic you'd like to learn and we'll happily record, edit and publish it for you. Absolutely for free. Simply email community@iOSBFree.com with the subject heading, \"iOS Topic I Want To Learn\".\n\n\n→ First In The World\nNot only is our instructor one of the first iOS developers in the world, but our service is also the first of its kind in the world!\niOSBFree is a truly unique one-of-a-kind service. There is no single other service offering Matt’s level of experience in any other coding course, software engineering tutorial, or career-building service anywhere in the world.\n\n\n↓ More From iOSBFree\n① Download Our FREE CV Template\n② Download Our Career BOOSTER Pack\n③ Enrol In FREE Online Courses (iOS & Swift)\n④ Read Our Blog\n⑤ Visit our website → iOSBFree dot com\n\n❤️❤️❤️❤️\nMuch love.\nThe iOSBFree team.\nBuild a profitable iOS mobile app career with iOSBFree!\nLet's build some great swift apps together using Xcode, Swift, SwiftUI, Apple watch, UIKit, iPad, TVos, macos and all of the amazing Apple frameworks that are available.\n\n\nSearch Terms And Tags\niOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone, iOS, Swift, Xcode, iOS, iPhone",
      "target_audience": [
        "Junior iOS developers",
        "People who want a successful and profitable career in iOS",
        "Developers who want to learn professional-quality architecture from the beginning of their career",
        "People wanting to specialise in iOS (earning big salaries)"
      ]
    },
    {
      "title": "Android App Development. LIVE and in REAL TIME.",
      "url": "https://www.udemy.com/course/buildit-coding-a-published-android-app-in-real-time/",
      "bio": "Android App Development Sessions are LIVE & UNEDITED. Discover the missing key to becoming a Pro Android Developer.",
      "objectives": [
        "How to find an app idea worth pursuing (even if you have no ideas)",
        "How to graphically design and plan an app (using existing apps and reviews as guides)",
        "How to PROPERLY architect an Android app (even if you can't code very well)",
        "How to find code that works (without knowing anything in advance)",
        "How you can DRASTICALLY improve your problem solving skills",
        "Discover the missing 70% of educational content that instructors leave out"
      ],
      "course_content": {
        "Introduction and Preview": [
          "Introduction",
          "What are We Building - App Preview?",
          "Preview of the Kotlin Code in Android Studio",
          "Setting Expectations"
        ],
        "How to Choose an Android App to Clone and Publish": [
          "How to Choose an Android App to Clone - Part 1",
          "How to Choose an Android App to Clone - Part 2"
        ],
        "How to Design an Android App": [
          "Design an Android App - The First Step",
          "How to Design the Graphical User Interface of an Android App"
        ],
        "User Interfaces, Navigation and Jetpack in Android Studio": [
          "How to Create an App User Interface in Android Studio - Jetpack Navigation",
          "How to Connect 2 Fragments in a Nav Graph in Android and Kotlin",
          "How to Add Fragments to an Android Project and Connect them in Navigation Graph",
          "Fragments and ViewModels and Connecting them in a Nav Graph"
        ],
        "Recording Audio on Android and Writing to the SD Card": [
          "How to Record Audio on Android with Kotlin - Part 2",
          "Recording Audio on Android - Part 2"
        ],
        "Connecting ViewModels to Android XML Layouts and LiveData": [
          "ViewModels and Connecting them to XML",
          "Livedata and XML Layouts"
        ],
        "MediaRecorder Buttons and State Tracking - A Better Solution": [
          "A Simpler More Elegant Solution to Track Audio Recorder State",
          "Wiring the Play and Stop Buttons PLUS MORE LOGIC"
        ],
        "Room Database and Storing Recording Data": [
          "Setting the Filename and Storing it in a Database",
          "Changing the Filename Stored",
          "Implementing Database Saves Using Room in Android"
        ],
        "Room DB and the RecyclerView on Android": [
          "Room DB and the RecyclerView",
          "Room DB and the Recycler View - I FINALLY FIXED IT"
        ],
        "Passing Data between RecyclerView and Fragments using Navigation Graphs": [
          "Navigation Graph and Passing Items from one Fragment to Another",
          "RecyclerView Item Clicks and Navigation"
        ]
      },
      "requirements": [
        "Have a Windows PC / Mac",
        "Have Android Studio Installed",
        "Have at least beginner coding knowledge"
      ],
      "description": "You have a problem.\nMost courses on Udemy are professional and polished which means that instructors are leaving out 70% of the content that you need to know about.\nBecause of this many students report the following to me and I suspect you've experienced the same:\nYou take a course and make a dozen little apps\nYou feel GREAT!\nYou try to make your own app\nYou run into one problem after another\nYou give up\n-----------------------------------------------------\nThe knock on effect of this process is that you never publish anything and that has dire consequences.\nIf you're freelancing then you cannot show clients a portfolio.\nIf you're after a job then you cannot show initiative or skill in the interview.\nIf you're an entrepreneur you cannot build your million dollar idea\nBut it's not your fault. It's the instructors fault!\n-----------------------------------------------------\nThat's why I created the buildIt Series.\nI want to give you back the 70% of content you've been missing out on.\n-----------------------------------------------------\nbuildIt is a series where I go from app idea to design to code to launch.\nNOTHING is planned in advance.\nEVERYTHING is recorded LIVE.\nAll coding mistakes are included as well as their fixes.\nWatching someone go through the creation process is the only way you can get that missing 70% and discover what being a professional developer is really like.\n-----------------------------------------------------\nIn the end what you get is PRICELESS because you you learn to solve code problems on the fly. Now you can finally finish those projects and publish them:\nYou will have a portfolio for clients\nYou will have skills that companies want\nYou can build your million dollar idea\n-----------------------------------------------------\nCourse Details\nIn this adventure we go through the following stages, every single one is recorded LIVE using Android Studio and Kotlin:\n\n\"I have no idea what to make\"\nSelecting our app niche\nResearching the competition and revenue models\nPlanning our app\nCoding the app (all mistakes included)\nReleasing the app\nReviewing revenue and download numbers\n\n\nThere are absolutely ZERO EDITS. Everything is shown in real time, including decision making and research. You'll even catch me copying and modifying code from Stack Overflow (hey, don't judge me, we all do it!).\n-----------------------------------------------------\nWhy no editing?\nIf you're just getting into coding then you don't really have a true experience of what day to day life is like. This course shows you that reality.\nThat's why I left out absolutely nothing - even mistakes and buggy code. That way you get a real life overview of being a developer. about 70% of the time is spent correcting my own silly mistakes!\n70% of your time will also be spent doing the same so you need to see how it's done!\n-----------------------------------------------------\nWhy did you make this course?\nI have over 800,000 students on many platforms and they all struggle with their code, architecture and bugs. This course is the antidote to their problems, primarily aimed at making an app production ready. As far as I know, no other course actually runs through this process.\nIf you want to experience the real life of a developer then this is the only course that will give you that!\n-----------------------------------------------------\nIs this for Beginners?\nYou need to have some experience with code before you attempt this course. As a rough example you should know what classes / objects / variables are. In this course I do explain some things I'm doing but not all of them (else we'd be here for months!).\nIf you want something extremely beginner friendly then have a look at the other courses I offer.\n-----------------------------------------------------\nWhat do we Make?\nWe will make an Audio Recorder app. It sounds simple - record and play back the audio. However, as a software engineer, \"simple\" often translates to \"pretty complex behind the scenes\".\nFor example:\nHow do we design the user interface?\nDoes the design interfere with how we code? (hint: it does)\nWhat are the software engineering practices required to make our code readable?\nHow few features should we include?\nHow much code is enough? Should we refactor often?\nHow to not get caught in endless feature additions and end up never releasing....\nAnd so much more!\nIf you want more details on the app then check out the free preview videos.\n-----------------------------------------------------\nFinally, welcome on board and get ready to receive the missing 70% of your education!",
      "target_audience": [
        "Coders looking to upgrade their problem solving skills",
        "Coders wanting more info on architecture",
        "Those looking for the REAL dev experience!"
      ]
    },
    {
      "title": "Creating a Web App for iPad",
      "url": "https://www.udemy.com/course/creating-a-web-app-for-ipad/",
      "bio": "Use standard web technologies to create an app-like experience for iPad. And best of all, no App Store required!",
      "objectives": [
        "NO APP STORES! Web Apps run form any web server",
        "Capture a web experience into a Web App",
        "Learn to work with CSS3 animations",
        "Support standard and retina graphics",
        "Make updates whenever you want",
        "Incorporating HTML5 video for iPad"
      ],
      "course_content": {},
      "requirements": [
        "Text Editor",
        "Web-kit Browser"
      ],
      "description": "This course will teach you to use standard web technologies to create an engaging, interactive user experience on the iPad.\nWe'll be creating an eSales Aid in the course, which is a popular use for sharing information about a company or product on tablet devices. However, the possibilities of this approach are limitless. Use standard web technologies to create interactive books, catalogs, or any interactive project you can imagine. If you can create it on the web, you can create it in a Web App.\nAnd the best part is... no app stores!\nWeb Apps run from any web server, and are actually web sites themselves. The main difference is in the way they load information, and define behaviors. We'll cover creating custom icons and startup screens, optimizing the user experience for touch events, and using CSS3 hardware accelerated features for smooth animations.\nWhat to expect in the course\nIn the course we'll start by creating web graphics with Photoshop, for both standard and retina screens. There is also a \"skip Photoshop\" folder as well, in case you want to bypass working in Photoshop. We'll also be using CSS3 to detect hi-definition displays (retina screens), as well as using CSS3 transform properties to position out HTML elements across the iPad screen.\nThe main focus of the course is the functionality needed for create an engaging user experience, which consists of JavaScript, as well as supporting HTML and graphics specific for the iPad interface. This course will teach you to code the core functionality of the Web App, while supplying plenty of code snippets to relieve you from any repetitive typing. Watch the first 4 videos in Lesson 1, they are all FREE, and provide an overview of the expectations, software, and final product we'll be creating.\nThe project files provided in this course include a copy of the fully completed final project. Use these files to track your progress, correct any errors you may be having, or more importantly, adapt the project into your own interactive Web Apps.",
      "target_audience": [
        "Designers",
        "Web Designers",
        "Web Developers"
      ]
    },
    {
      "title": "App Games Producer Course: A to Z App Publishing for All",
      "url": "https://www.udemy.com/course/iphone-app-games-producer-course-reskin-an-iphone-game-from-a-to-z/",
      "bio": "Learn how to reskin iPhone and iPad mobile games. For the COMPLETE BEGINNER. Includes many PRO tips and tricks as well.",
      "objectives": [
        "Reskin games fast and cheaply."
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the App Games Producer Course"
        ],
        "Setting everything up": [
          "Register with Apple",
          "How to choose a great theme",
          "How to choose the best source code to use"
        ],
        "Hiring, firing and managing a GREAT team": [
          "Hiring amazing artists",
          "Hiring a SUPERSTAR developer",
          "Creating the PERFECT developer kit, to save time and $$$",
          "The importance of quality",
          "iTunesConnect",
          "How to be the boss"
        ],
        "Managing your time and making money": [
          "How to manage your time effectively.",
          "Making money with IAPs and ads"
        ],
        "Chasing exponential growth": [
          "Chasing exponential growth"
        ],
        "Course summary and next steps": [
          "Course conclusion and next steps",
          "BONUS: Chocolate Lab Apps Radio - Episode 1",
          "MASTERMIND GROUP"
        ]
      },
      "requirements": [
        "An interest in publishing iPhone and iPad games to iTunes"
      ],
      "description": "If you want to learn the FULL PROCESS of reskinning an iPhone or iPad game, this course is for you.\nCreated by Chocolate Lab Apps, publisher of over 180 apps and games with #1s in over 50 countries in the past 12 months, this course walks you through the entire game reskinning process.\nYou'll need to register as an Apple developer. We show you how to do this - fast and easy. You'll chose the right theme with proven demand and pick source code that will maximise your revenue.\nWe'll look at app icons, app keywords, in app purchases, app store optimization, app store rankings, eCPM, naming apps and making screenshots for the app store.\nYou'll learn how to hire, fire and manage a team, use SDKs and create the PERFECT DEVELOPER KIT. Right from the start you will be saving time and money,\nThe focus throughout is on quality and you will learn why this is. We'll also walk you through everything you need to know about iTunesconnect, including some PRO tips.\nOutsourcing isn't something that comes naturally, so welcome to the 10 UTIMATE tips for working with your outsourced team. We delve deeper then and work on making you more effective with your time.\nIt's all about the money, so you will learn all about IAPs and ads options.\nThen the ultimate business SECRETS are let loose when you discover how to chase exponential growth with your app business. This is MAJOR - NEVER SEEN BEFORE content.\n_________________________________________________",
      "target_audience": [
        "Beginners and intermediate"
      ]
    },
    {
      "title": "Complete IOS AWS Developer [Swift4]",
      "url": "https://www.udemy.com/course/complete-ios-aws-developer-swift4/",
      "bio": "Develop IOS apps with AWS backend.",
      "objectives": [
        "Students will be able to start creating mobile apps with AWS as backend with all AWS features. This course provides complete practical implementation of features describing the details."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Set up Xcode",
          "Connect to AWS Backend",
          "Change APP Icon"
        ],
        "Authentication using Email and password": [
          "Introduction",
          "Enable Email Authentication",
          "Integrate AWS Authentication Controller",
          "Create a user and Sign In",
          "User Sign out Functionality"
        ],
        "Facebook Authentication": [
          "Enable facebook login",
          "Integrate Facebook SDK",
          "Sign In Using Facebook"
        ],
        "Google Sign In": [
          "Enable Google Sign In",
          "Integrate Google SDK",
          "Sign In Using Google"
        ],
        "Synchronising Data [Cognito Sync]": [
          "Understand Federated Identities",
          "Enable Sync Data",
          "Save and Retrieve User Preferences"
        ],
        "Media Storage in S3": [
          "Enable S3 data storage for the app.",
          "Setup a VC to upload File",
          "Complete Setup VC to upload the file",
          "Upload image with default permission",
          "Upload Image with setting file permissions",
          "Download Image"
        ],
        "Data Storage in DynamoDB [NO SQL DB]": [
          "Enable Dynamodb",
          "Integrate Dynamodb in to the app",
          "Create User Details View",
          "Save or update Data",
          "Retrieve data from Dynamo Db"
        ],
        "Add Analytics to your Mobile App": [
          "Introduction",
          "Add a custom Event",
          "Enable Revenue Analytics"
        ],
        "Cloud Logic-Lambda": [
          "Cloud Logic Introduction",
          "Create a Lambda Function",
          "Explaining API gateway",
          "Integrate Cloud Logic With Mobile App",
          "Create UI for our ABN Validator API",
          "Invoke API gateway Logic from Mobile",
          "Monitoring the Logs"
        ]
      },
      "requirements": [
        "Xcode and swift"
      ],
      "description": "AWS Mobile gives you the tools to rapidly configure and integrate the cloud backend your mobile app needs.\nI had trouble finding all the information needed for one particular platform for my apps. I have seen many courses discussing different technologies and platforms.  But when we make an app we probably don't want to go through the issues of different platforms and might want to stick with one good platform.\nThis course will helps you to choose world's most popular cloud service AWS as backend for your app. Almost all the features needed for your app will be discussed here. If you need any other feature, feel free to send me a message.\nIn this course we will learn building IOS apps with  Analytics - User Sign-in - Push Notification - NoSQL Database - User Data Storage - Cloud Logic - Messaging - Conversational Bots - Hosting and Streaming etc.\nAt the end of this course you will have the necessary skill to develop IOS apps with AWS platform.\nThis course focuses on practical implementation of the apps along with a summary of most common issues and techniques to handle them.\nI will be adding more contents to this course soon !!!",
      "target_audience": [
        "IOS developers wants to use AWS as backend"
      ]
    },
    {
      "title": "Objective C for iPhone-iPad App Programming",
      "url": "https://www.udemy.com/course/learn-objective-c-for-iphone-ipad-app-programming/",
      "bio": "Learn how to write apps for iPhone and iPad apps with Objective-C.",
      "objectives": [
        "By the end of the course, you will have a basic understanding of Objective-C",
        "In this course, you will learn to navigate Xcode (used to build iPhone/iPad apps) and a general understanding of Objective-C"
      ],
      "course_content": {
        "Installation": [
          "Installing Xcode"
        ],
        "Getting Started": [
          "Running and Setting Up Xcode",
          "Explaining Basics of Program",
          "Basic Variables pt1",
          "Basic Variables pt2",
          "Commenting",
          "Basic Math Operators",
          "Basic of Modulus Operator",
          "Compound Operators",
          "Comparison Operators",
          "Basics of If and Else",
          "Nested If Else",
          "Else If",
          "Intro To For Looping",
          "Integrating Scanf with Loop",
          "Nested Loops",
          "While Loop",
          "Do While",
          "Break Statement",
          "Continue Statement",
          "Intro to Objects pt1",
          "Intro to Objects pt2",
          "Getter/Setters (Long Way)",
          "Synthesized Accessors (auto setter/getters)",
          "Dot Operator to Set/Get Instance Variables",
          "Local Variables"
        ]
      },
      "requirements": [
        "Apple Macintosh computer with OS X installed"
      ],
      "description": "In this course you will Learn Objective C and its basic programming understanding. As you may or may not know, Objective-C is the main programming language for iOS (iPhone/iPad) apps development which you will learn in thisiphone/ipad App Development Tutorial.",
      "target_audience": [
        "New to iPhone/iPad programming",
        "Beginners to programming"
      ]
    },
    {
      "title": "Build Traveling Mobile App without coding using FlutterFlow",
      "url": "https://www.udemy.com/course/build-traveling-mobile-app-without-coding-using-flutterflow/",
      "bio": "Learn how to build a Traveling Mobile App with an admin panel without coding using Figma, FlutterFlow, and Firebase.",
      "objectives": [
        "You will understand how to turn a UiUx design in Figma into an App in FlutterFlow without coding",
        "You will understand how to use FlutterFlow to build a Mobile app",
        "You will understand how to implement backend in FlutterFlow using Firebase as storage and for authentication",
        "You will understand how to build an admin panel in FlutterFlow to monitor user behaviour"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Frontend Development": [
          "Frontend Development 1 Onboarding",
          "Frontend development 2 Register, Forgot Password",
          "Frontend Development 3 Homepage",
          "Frontend Development 4 Trip Preview Page I",
          "Frontend Development 5 Trip Preview Page II",
          "Frontend Development 6 Search",
          "Frontend Development 7 category",
          "Frontend Development 8 Booking Sections",
          "Frontend Development 9 profile",
          "Frontend Development 10 Bottom Navigation"
        ],
        "Backend Development": [
          "Backend development 1 Firebase integration and authentication",
          "Backend Development Home",
          "Backend Development Favourite, Popular Locations, Booking Preview, Booking Full",
          "Backend Development Booking, Updating with CMS",
          "Backend Development triplocationfullpreview, reviews",
          "Backend Development Search destinations",
          "Backend Development Search destinations continue, Category",
          "Backend Development My Trips",
          "Backend Development My Trips Search, Wishlist",
          "Backend Development Profile",
          "Backend Development Bottom Nav Fix 1 and Notifications",
          "Backend Development Profile Update Prompt",
          "Backend Development Web publishing, view code, Download APK, Download code",
          "Backend Development Payment Gateway Stripe",
          "Backend Development Bonus Feature and App Fixes",
          "Backend Development Empty Feature"
        ],
        "Admin Panel Frontend": [
          "Frontend Development Admin Panel"
        ],
        "Admin Panel Backend": [
          "Backend Development Admin Panel Authentication and Side Navigation",
          "Backend Development Admin Panel Dashboard, Users, Destination, Bookings",
          "Backend Development Admin Panel Table Fixes for Users, Destinations and Bookings"
        ]
      },
      "requirements": [
        "No programming experience needed at all. I will teach you everything from scrath"
      ],
      "description": "This course teaches you how to build a fully functional traveling mobile app without coding using Figma, FlutterFlow, and Firebase. This course is for students, entrepreneurs, business owners, and early-stage startup founders who want to understand how to build mobile and web apps without coding.\n\nIn this course you will learn the following things:\n- You will learn how to convert UiUx designs in Figma into Frontend in FlutterFlow very easily\n- You will learn to implement features like search, filter, payment, conditional actions, app states, local states, etc.\n- You will learn how to use Firebase for storage, authentication, etc.\n- You will understand how to create security rules for your database to avoid hacks.\n- You will also learn how to easily get UiUx design templates that you can use in building your projects.\n- You will learn how to make your mobile app mobile responsive across different mobile devices (Android and iOS)\n- You will learn tricks and hacks to make your app load faster and propagate information more easily\n- You will learn how to create components from scratch while build your apps\n\n\nThis course offers you the opportunity to ask questions where you have issues and that means you will be able to learn even more things from asking questions and reading the responses given to the questions of other learners.\n\nCongratulations in advance.",
      "target_audience": [
        "This course is for business owners, students, early-stage startup founders and entrepreneurs who want to understand how to turn their ideas into a mobile or web application. It is also for students who want to learn a skill that will help them freelance and make money with their skills."
      ]
    },
    {
      "title": "Learn Apache Cordova using Visual Studio 2015 & Command line",
      "url": "https://www.udemy.com/course/learn-how-to-create-hybrid-app-using-apache-cordova-using-visual-stud/",
      "bio": "This course will give you a low level understanding of Cordova, and how to use it with Visual Studio & Command line.",
      "objectives": [
        "Creating Hybrid Applications",
        "Managing Plugins & Platforms",
        "Debug applications",
        "Obtains sign apk/appx for publishing app"
      ],
      "course_content": {},
      "requirements": [
        "Familiar with HTML, CSS and JavaScript",
        "Basic Knowledge of command line interface"
      ],
      "description": "Cordova is open source mobile development framework for that allow us to create Mobile applications with standard web technology such as HTML5, CSS3, JavaScript.\nIf you are web developer and want to create hybrid mobile application which runs on multiple platforms such as Android, iOs, Windows Phone, Windows 10, and many more.\nCordova became very popular because of it work on multiple platforms with single code base. Cordova provides lots of plugins using which we can access native mobile functionalities like Camera, Storage, Contacts, etc.\nWith command line interface we can add multiple platform for our application as well as plugins. We can also build & run our application in it. In visual studio provides all of the functionality provided by command line as well as debugging. Visual studio hide all of the complexity.\nWe will Learn all above things through this video series. If you have any doubts then you can contact me via mail and Q & A.",
      "target_audience": [
        "This is for newbies who want to learn Cordova",
        "Web developers who want to make Hybrid App"
      ]
    },
    {
      "title": "Flutter and Dart Certification Prep Complete Guide",
      "url": "https://www.udemy.com/course/flutter-and-dart-certification/",
      "bio": "Master Dart and Flutter Concepts for Successful Certification",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "This course provides an in-depth guide to mastering Dart and Flutter, equipping you with essential skills for certification and professional development. Designed for both beginners and experienced developers, the course covers fundamental and advanced concepts in Dart programming and Flutter development. You will learn how to write clean and efficient Dart code, build interactive and visually appealing mobile applications using Flutter, and manage application state effectively.\n\n\nThroughout the course, you will gain practical experience by working on real-world projects and challenges, enhancing your problem-solving abilities and coding proficiency. Key topics include object-oriented programming in Dart, asynchronous programming with `Future` and `Stream`, UI/UX design principles, state management strategies, and integrating APIs with Flutter applications. Additionally, you'll explore techniques for debugging, testing, and deploying apps to ensure high-quality software.\n\n\nWhether you're looking to start a new career in mobile app development, advance your current skill set, or prepare for Flutter and Dart certifications, this course offers the knowledge and hands-on practice needed to achieve your goals. With a focus on both theoretical concepts and practical application, you'll be well-prepared to tackle real-world development tasks and excel in your certification exams. The course also includes guidance on industry best practices and emerging trends, ensuring you stay ahead in the fast-evolving field of mobile development. By the end, you'll have the confidence and expertise to create robust, scalable, and user-friendly applications.",
      "target_audience": [
        "Aspiring Mobile App Developers",
        "Students and Tech Enthusiasts",
        "Coding Bootcamp Graduates",
        "IT Professionals"
      ]
    },
    {
      "title": "Getting Started With .NET MAUI",
      "url": "https://www.udemy.com/course/getting-started-with-net-maui/",
      "bio": "Learn How to Create Apps for iOS, Android, Windows and MacOS using .NET MAUI and MVVM",
      "objectives": [
        "Installing .NET MAUI",
        ".NET MAUI Solution Overview",
        "How does MVVM work?",
        "Creating a To-Do App",
        "Navigating between pages",
        "Using SQLite Databases",
        "Implementing Biometric Security",
        "Changing the App Icon",
        "Adding Dependency Injection",
        "Sending Push Notifications",
        "Calling an API"
      ],
      "course_content": {
        "Getting Started with .NET MAUI": [
          "Installing .NET MAUI",
          ".NET MAUI Default Solution Overview",
          "Understanding MVVM"
        ],
        "Creating a Time Management Application": [
          "Basic Time Management Application",
          "Improving The UI",
          "Navigating to a New Page",
          "Adding a Task Deadline",
          "Adding Dependency Injection",
          "Creating a Database",
          "Changing the Icon"
        ],
        "Security Features": [
          "Adding Security Blur in App Switcher",
          "Adding FaceID"
        ],
        "Advanced Topics": [
          "Push Notifications",
          "Calling an API"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn here everything you need to know!"
      ],
      "description": "I have created this .NET MAUI course to teach you how to use this framework to create your own cross-platform applications, teaching you throughout the course how to use the different components of the framework to create these applications.\nThroughout this course, we will create a series of applications that will allow you to put into practice everything you have learned, so that you will know how to implement the different features in real cases, while you will have several applications that you can put in your portfolio\nIn this course, we go through everything we need to know about building an app using .NET MAUI. You will learn the basics, including how to build user interfaces with XAML, the Model View (MVVM) pattern and data binding, how to navigate between pages, and so much more\nBy the end of this course, you will learn the following:\nHow to setup the development environment for .NET MAUI\nHow to build an iOS App\nHow to use the MVVM Pattern\nHow to create a Time Management Application from scratch\nHow to send Push Notifications\nHow to implement Biometric Authentication\nHow to call an API\nHow to Persist Data in a SQLite Database\nHow to implement Dependency Injection\nEverything done in these demos is cross-platform.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nIf all of this sounds interesting, I look forward to seeing you in the course!",
      "target_audience": [
        "Everyone that wants to Learn How to Develop Cross-Platform Apps"
      ]
    },
    {
      "title": "Swift programming - Build 20 apps for iPhone!",
      "url": "https://www.udemy.com/course/swift-2-programming-learn-how-to-create-20-apps-for-ios/",
      "bio": "Use Xcode to make bestselling apps like Tinder or FlappyBird. Learn on practical examples!",
      "objectives": [
        "Create 20 apps!",
        "Basic Swift syntax",
        "First look into Xcode",
        "Creating and compiling a project",
        "Running projects on a device and simulator",
        "Creating and using classes and objects",
        "Debugging and error handling",
        "Using Playground",
        "Creating UI and Storyboard",
        "Gesture recognizers",
        "Adding photos, videos and music",
        "Sound and volume control - AVAudioPlayer",
        "Mixing and access to multimedia library",
        "Basic iOS project templates",
        "Working with data sources and presentation tools",
        "iOS9 app extensions - Today widgets",
        "Passing data across views",
        "Storing data in apps",
        "Storing data in clouds - CloudKit",
        "Search engine integration",
        "MapKit and location tools",
        "Location tracking and background apps",
        "Sending and receiving network data",
        "Data sending control",
        "Storing complex data in apps",
        "Using the camera",
        "TGames with SpriteKit - touch control",
        "Event response, game collisions and physics",
        "Background and hero animation",
        "Saving player scores",
        "Serialization and saving game state"
      ],
      "course_content": {
        "SWIFT AND XCODE BASICS": [
          "Xcode basics",
          "Swift syntax pt.1",
          "Swift syntax pt.2",
          "Functions and passing parameters pt. 1",
          "Functions and passing parameters pt. 2",
          "Classes and objects pt.1",
          "Classes and objects pt.2",
          "Errors and how to handle them",
          "Creating and compiling a project",
          "Starting projects on devices and a simulator",
          "SWIFT AND XCODE BASICS - additional notes"
        ],
        "USER INTERFACE": [
          "Design of user interface",
          "Creating interface - Tic-tac-toe application",
          "Gestures and actions",
          "Gestures and actions recognition - Tic-tac-toe application pt.1",
          "Gestures and actions recognition - Tic-tac-toe application pt.2",
          "Auto Layouts basics",
          "Using Auto Layouts - Calc application pt. 1",
          "Using Auto Layouts - Calc application pt. 2",
          "Assets in projects",
          "Adding assets to a project - Picture Gallery application",
          "USER INTERFACE - additional notes"
        ],
        "DESIGN PATTERNS, DATA SOURCES AND IOS INTEGRATION": [
          "Extended user interface",
          "Creating extended UI - About Us application pt. 1",
          "Creating extended UI - About Us application pt. 2",
          "Controls",
          "Creating one’s own controls - Colorful Balls application pt. 1",
          "Creating one’s own controls - Colorful Balls application pt. 2",
          "Ways of creating tables",
          "Displaying tables - Book List application",
          "Multiple application views and passing data between views",
          "Creating Custom View Controls - ToDo List application pt. 1",
          "Creating Custom View Controls - ToDo List application pt. 2",
          "Storing data in the application and in the cloud",
          "Working with files",
          "Working with files - Notepad application",
          "Working with iCloud - Notepad application",
          "Application extensions",
          "Creating application extensions - ToDo List application",
          "Integration with the iOS search engine",
          "Indexing method - ToDo List application",
          "DESIGN PATTERNS, DATA SOURCES AND IOS INTEGRATION - additional notes"
        ],
        "MAPKIT, LOCATION AND NETWORK": [
          "MapKit basics",
          "Using the MapKit - Where am I application",
          "Custom annotations on the map",
          "Working with map, monitoring location in the background-Where is my car app pt.1",
          "Working with map, monitoring location in the background-Where is my car app pt.2",
          "Network operation - downloading",
          "Network operation - Network Gallery application pt. 1",
          "Network operation - Network Gallery application pt. 2",
          "System integration - using the photo album",
          "Access to files - Get photo application",
          "System integration – using the camera",
          "Network operation - sending",
          "Creating of the Tinder application pt.1",
          "Creating of the Tinder application pt.2",
          "Creating of the Tinder application pt.3",
          "Creating of the Tinder application pt.4",
          "Creating of the Tinder application pt.5",
          "Creating of the Tinder application pt.6",
          "Creating of the Tinder application pt.7",
          "Creating of the Tinder application pt.8",
          "MAPKIT, LOCATION AND NETWORK - additional notes"
        ],
        "Sprite KIT in iOS": [
          "SpriteKit primer – basics of scene",
          "Creating of scene - Stones on Stage application",
          "Animating Sprites",
          "Implementation of Sprite animation – Birdy application",
          "Event reaction, collisions",
          "Responding to contact between objects - Birdy and seed application",
          "Physiscs in SpriteKit",
          "Physics in SpriteKit - Birdy Madness application",
          "Sound in games",
          "Ways to play sound - Birdy Scream application",
          "Creating of fully working game – Flappy Birdy pt. 1",
          "Creating of fully working game – Flappy Birdy pt. 2",
          "SPRITEKIT IN iOS - additional notes"
        ],
        "Bonus section": [
          "BONUS LECTURE - learn more",
          "Thank you for joining"
        ]
      },
      "requirements": [
        "Xcode environment"
      ],
      "description": "** ** 77 lectures - 20 hours of content - the most comprehensive course on Swift programming ever! ** **\n\nWe focus on practice. You will build over 20 apps for iOS - from a simple photo gallery to calculator to the best-seller Flappy Bird. Step-by-step instructions shed light on the nuts and bolts of all features and functions and explain each code line in detail.\nYou will also explore the Xcode environment that facilitates app design and development.\n3 bestselling games and apps:\n1. FLAPPY BIRD\nBuild an alternative to the hit mobile game Flappy Bird and get inspired to create the next world sensation.\n2. TODO LIST\nA step-by-step guide to creating a todo list app. Time and task management apps are chart-toppers at the App Store.\n3. TINDER\nAn amazingly popular app that broke a million hearts. Learn how to create a similar application and see how easy it is.\nSeveral smaller apps:\n4. Hello world!\nHello world! is the first app you'll build minutes into the course. See how easy it is to learn Swift.\n5. Lotto machine\nCreate a lottery app and discover how to use functions and randomize and sort data.\n6. Tic-tac-toe\nWe all played it on a piece of paper once.. This app will introduce you to user interfaces and touch detection.\n7. Calculator\nDesign a great UI and learn simple data operations.\n8. Photo gallery\nDiscover how to add resources like photos or videos to a project and create your own photo gallery.\n9. Birdy Scream\nThis app will show you how to add sounds to games. You'll also learn how to control app volume level so your neighbors can get some sleep while you work.\n10. Stones on stage\nYour first steps in game building. Code your first 2D game scene with the SpriteKit framework.\n11. Color balls\n\n\nWith color balls flooding your screen, you'll explore how to create multiple types of views and add constraints.\n12. Book list\nTables are so hot right now. Shopping list, task list, book list? Tabular data will always be in vogue - learn how to handle it.\n\n13. Notepad\nStoring data in a smartphone app and cloud is a must. Learn how to write and read data while creating an all-purpose notepad app.\n14. About Us\nDuring developing this app, you'll learn how to use Storyboards, make transitions, how to add buttons and present informartions.\n15. Where am I?\nAre you lost? Write an app that'll help you find where exactly you are by tracking your device and showing your location on a map.\n\n16. Where is my car?\nThis app allows you to track your position relative to the position of your car. Never again lose your car in a multi-storey parking lot.\n17. Network gallery\nWrite a web photo gallery. Learn how to get data from networks and present it on mobiles.\nLearn how to create fast and secure applications.\nSwift is a programming language used for mobile applications for iOS. It was presented for the first time at the WWDC conference in June 2014. Since then it has become increasingly popular among programmers and app developers.\nThe new language created by Apple is much simpler than Objective-C. It's recommended in particular for beginner programmers because of the simplified code structure, the possibility of applying corrections on bar graphs or testing the project operation in real time.\nWe can guarantee this course will give you all the skills to code progressively complex games and apps on your own!",
      "target_audience": [
        "For beginner programmers",
        "For experienced developers who know Objective - C"
      ]
    },
    {
      "title": "iOS 11 & Swift 4 - Complete Developer Course",
      "url": "https://www.udemy.com/course/ios11-swift-4/",
      "bio": "A Complete iOS 11 and Xcode 9 Course with Swift 4",
      "objectives": [
        "Full understanding of Xcode 9 and all it has to offer",
        "Learn how to program for IOS 11 to create your own apps",
        "Create fully featured games",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS 11 development",
        "Develop in Swift 4",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Basics of Xcode 9": [
          "Download and Installing Xcode 9",
          "Navigating Xcode 9",
          "Using the iOS 11 Simulators",
          "Creating Actions and Outlets",
          "Creating My First iOS 11 Application"
        ],
        "Learning Swift 4": [
          "Using the Swift 4 Playgrounds",
          "Swift 4 Vars vs Lets",
          "Swift 4 Strings",
          "Swift 4 Ints & Doubles",
          "Swift 4 Booleans",
          "Swift 4 Arrays and Dictionaries",
          "Swift 4 Working with If, Else & Or Statements",
          "Swift 4 While and For Loops",
          "Swift 4 Optionals",
          "Learning Swift 4 Quiz"
        ],
        "Swift 4 Functions": [
          "Displaying Text within the Application",
          "Dismissing the Keyboard from the View",
          "Changing the Text Properties",
          "Displaying External Custom Fonts",
          "iOS 11 APP: Fancy Text Creator Application",
          "Creating and Using NSTimers",
          "Displaying the Time and Date",
          "iOS 11 APP: Traffic Lights Game Part 1",
          "iOS 11 APP: Traffic Lights Game Part 2",
          "Fading and Revealing Objects",
          "Hiding and Revealing Objects",
          "Enabling and Disabling Objects",
          "iOS 11 APP: Tap Me Fast Game Part 1",
          "iOS 11 APP: Tap Me Fast Game Part 2",
          "Creating a Random Number Generator",
          "iOS 11 APP: Roll of a Dice Application",
          "Creating a Random Word Generator",
          "iOS 11 APP: Random Facts Application",
          "Swift 4 Functions Quiz"
        ],
        "Swift 4 Actions": [
          "Creating a Action with a Button",
          "Toggling Actions with UISwitches",
          "Using UISegmentedControls",
          "iOS 11 APP: Digital Clock Application",
          "Controlling Actions with UISliders",
          "iOS 11 App: Temperature Calculator Part 1",
          "iOS 11 App: Temperature Calculator Part 2",
          "Displaying UIActionSheets",
          "Detecting Shake Gestures",
          "iOS 11 APP: Shake Me Silly Part 1",
          "iOS 11 APP: Shake Me Silly Part 2",
          "Creating URL Links",
          "Delaying Actions",
          "iOS 11 APP: Calculator Application",
          "Detecting Swipe Gestures",
          "iOS 11 APP: Simon Says Part 1",
          "iOS 11 APP: Simon Says Part 2"
        ],
        "Swift 4 Views": [
          "Using UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Designing Interfaces with UIStackViews",
          "Switching to a New Storyboard View",
          "Switching to a New XIB View",
          "Changing the Status Bar Colour",
          "Removing the Status Bar",
          "Using UIPickerViews",
          "Using UIDatePickerViews",
          "iOS 11 APP: Web View Application Part 1",
          "iOS 11 APP: Web View Activity Indicator Part 2",
          "iOS 11 APP: Web View Search Bar Part 3",
          "iOS 11 APP: Map View Application Part 1",
          "iOS 11 APP: Map View Pins Part 2",
          "iOS 11 APP: Map View Locations Part 3",
          "iOS 11 APP: Map View Directions Part 4"
        ],
        "Swift 4 Visuals": [
          "Displaying Images on the Screen",
          "Displaying Retina Image Versions",
          "iOS 11 APP: Mini Image Gallery Application",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "iOS 11 APP: Snap Attack Part 1",
          "iOS 11 APP: Snap Attack Part 2",
          "Displaying Local PDF Files",
          "Changing the Background Colour",
          "Playing Animation Files",
          "Adding Borders to Objects",
          "Adding Drop Shadows to Objects",
          "iOS 11 APP: Image Gallery Collection View Part 1",
          "iOS 11 APP: Image Gallery Collection View Part 2",
          "Drawing on the Screen",
          "Saving Images to the Device",
          "Creating Application Icons",
          "Adding Application Icons",
          "Creating a Universal Launch Screen",
          "Designing Loading Images",
          "Adding Loading Images"
        ],
        "Swift 4 Drawing Application": [
          "iOS 11 APP: Doodle Bug - Drawing on the Screen Part 1",
          "iOS 11 APP: Doodle Bug - Preset Colours and Erase Part 2",
          "iOS 11 APP: Doodle Bug - Creating a Settings View Part 3",
          "iOS 11 APP: Doodle Bug - Changing the Brush Size Part 4",
          "iOS 11 APP: Doodle Bug - Adding Opacity Options Part 5",
          "iOS 11 APP: Doodle Bug - Saving the Artwork Part 6",
          "iOS 11 APP: Doodle Bug - Hiding the Buttons Part 7"
        ],
        "Swift 4 ARKit Application": [
          "Creating a ARKit Application",
          "Adding Models by Touch",
          "Creating Custom 3D Models",
          "Placing Multiple Models by Touch",
          "Clearing the Models from the screen"
        ],
        "iMessage & Sticker Pack Application": [
          "iOS 11 APP: Creating Stickers Part 1",
          "iOS 11 APP: Creating Animated Stickers Part 2",
          "iOS 11 APP: Adding Stickers to the Application Part 3",
          "iOS 11 APP: Movie Quotes iMessage Application Part 1",
          "iOS 11 APP: Movie Quotes iMessage Application Part 2",
          "iOS 11 APP: Movie Quotes iMessage Application Part 3"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 9"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 11 Apps but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis iOS 11 & Swift 4 - Complete Developer Course will give you everything your need to start your new career in IOS 11 development, The course has been structured to support Swift 4, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nCreate Over 25 Real iOS 11 Applications throughout the course from fun and simple games to powerful utility apps using the native features of IOS 11 devices to help you understand the process of creating applications within Swift 4.\nARKit Support - Create your own Augmented Reality Application One of the brand new exciting features to come to iOS 11 this year and you can take users into a virtual world by using the devices camera you can create your own augmented reality application by displaying 3d models in real time.\nCreate Sticker Pack & iMessage Applications One of the many amazing features iOS 11 application development allows you can create your own iMessage extensions and sticker pack applications.\nSell Your App to Millions of Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online IOS 11 development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose My Course?\nMy names Aaron Caines and i have created over 15+ Best Selling iOS courses for Swift and Objective-C, if you have already enrolled into one of my courses int he past you already know how exciting and fun they can be and how jam packed they are with information!\nIf this is your first time seeing one of my courses you can expect to see reviews like this:\n***** \"i owe this guy a beer. this guy is the best ios teacher here . ive returned many videos . hope you could make an advanced course. i could totally work with the instructor\" - No Basic S\n***** \"the course is very well done and addictive, it teaches a lot of notions very very useful in a very clear way. great!\" - Luca Torroni\n***** \"The course is clear and detailed. Covers a good range of functions for almost any kind of app. My go-to course whenever I am unsure how to implement features!\" - Loh Chung Kit\n***** \"This is one great course indeed! I truly enjoy Aaron's teaching style. He is so easy to follow and understand. Great for beginners and intermediates. I am finally seeing my app come to life!\" - Annabelle Ramos\nWhy Choose This iOS 11 & Xcode 9 Course?\nMany programmers learning to create there first iOS 11 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 11 & Xcode 9 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 9 and to offer any advice needed and before you know if you will have created your first iOS 11 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode 9, iOS 11, Interface Builder, Simulator and Project Types\nLanguage basics and building blocks\nSwift 4: Get to know the new updated language\nCreate over 25 real iOS 11 applications\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nPlaying and Streaming Video Support\nFull Featured iOS 11 Apps\nEarning Revenue Ad Networks\nIn App Purchases\nFun and Simple iOS 11 Games\nARKit Augmented Reality\nCore Data Applications\nCamera Support Applications\nSticker Pack Applications\niMessage Extensions\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to learn Swift 4",
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 11 Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "Android Marshmallow: Reskin 10-Million Downloads Android App",
      "url": "https://www.udemy.com/course/reskin-android-app-by-using-android-studio/",
      "bio": "Reskin 10-Million Downloads app fast and discover the skills that other developers missed out!",
      "objectives": [
        "Install Java Development Kit (JDK).",
        "Install Android Studio, the official Android IDE (Integrated Development Environment).",
        "Configure Android SDK (Software Development Kit) Manager.",
        "Import Source Code into Android Studio CORRECTLY.",
        "Select which graphics and musics files to reskin within Android Studio Project.",
        "Discover simple yet powerful Photoshop tricks.",
        "Discover online tool to create different sizes of app icons almost instantly.",
        "Discover secrets to make MORE money that other developers missed out!",
        "Avoid Monetization account suspension.",
        "Export Android Application on Android Studio.",
        "Deloy apps to Google Play Store and other Alternative App Stores the RIGHT way.",
        "Confront and solve possible app business threats."
      ],
      "course_content": {
        "10-Million Downloads Android App Source Code": [
          "Introduction",
          "Download Premium Game Source Code Here - for Free!"
        ],
        "Softwares Needed - FREE": [
          "Java JDK, Android SDK and Android Studio Installation (Step-by-Step)"
        ],
        "Android SDK Configuration": [
          "Configure Android SDK - Correctly!"
        ],
        "Importing the Source Code - Correctly!": [
          "Importing the Android Studio Project with ZERO Compilation Errors",
          "Download Gradle"
        ],
        "Source Code Anatomy": [
          "Source Code - In a Nutshell - Which Codes to Edit?",
          "Targeted SDK, Package Name and App Name on Smartphone"
        ],
        "Reskinning": [
          "Precaution Steps on Reskinning",
          "Animated Game Character",
          "Game Character Speed - How to Change?",
          "Game Background",
          "Game Fonts",
          "Game Tileset",
          "Other Important Game Images",
          "Game Audios",
          "Game Icon",
          "Game Screenshots"
        ],
        "App Monetization and Secrets to make MORE money!": [
          "Obtaining the Banner Ad and Interstitial Ad IDs",
          "Insert Your Advertisement IDs into Android Studio and Make Money!",
          "Monetization Secret Revealed (Many Developers Overlook It!)",
          "Avoid This Stupid Mistake!",
          "Add This Code to Stop Annoying Your App Users"
        ],
        "Generate Signed APK": [
          "Step-by-Step Generating Signed APK"
        ],
        "Deploying Your App to Google Play Store and Other App Stores": [
          "Deploying Your Mobile App to Different App Stores",
          "Google Play Policy"
        ]
      },
      "requirements": [
        "A laptop running Windows Operating System. That's it!"
      ],
      "description": "[NOTE: Source code & softwares included!]\n[Re-Design a 10,000,000 Downloads Android App]\n\nThe app industry is a lucrative industry if you know what you are doing. Everyday there are tons of mobile apps uploaded to either Google Play Store or Apple App Store. Not even mention about other alternative app stores.\nHence, the competition can be very fierce if you are about to create an app from scratch. If you do not have any knowledge about programming, the app creation process may take months or even years to complete.\nLet us ask you a question. Will you create a wheel that is square in shape? We bet you not. It is ridiculous to re-invent the wheel and make it into another shape.\nAnalogously, it is unwise to create an Android app from nothing, unless you already have some excellent programming knowledge. For sure, we are not saying that everyone should NOT learning programming language.\nHere is the truth. You may need to take months or years just to master those hard-to-understand programming knowledge. So, if you easily get overwhelmed by the programming language, then this course is definitely for you! We will teach you create an app without touching any line of codes!\nLook, this course can provide you a simpler picture of what Android development is all about. Are you ready to create your first Android app? Faster than others?\n[Apps Reskinning]\n\nApps Reskinning is an alternative mobile app industry that you can penetrate. In laymen term, reskin an app means changing the graphics and musics of an app while maintaining its source code. In other words, we get a source code and alter some of the graphics and changing the music files.\nIn this course, you will first learn how to install JDK (Java Development Kit), an important virtual machine that is needed to run Android Studio. Next, you will learn how to install Android Studio (the Official Integrated Development Environment (IDE) for Android) and the Android SDK (Software Development Kit).\n[Source Code]\nThe source code is included in this course. It has been downloaded more than 10,000,000 times on Google Play Store. Check out our first video.\n[App Compilation Errors - Solved!]\nAs you all may know, any wrong steps in importing the source code may result in compilation errors in Android Studio. This is why we will teach you step-by-step how to import the source code right in the first place. There are many newbie app developers get overwhelmed on this and eventually give up. We have came across those paths and we will reveal to you the smarter steps on importing the source code. Zero errors, that is what you need!\n[Android SDK Configuration]\nBefore we use Android Studio, it is important to configure the Android SDK. There are certain important packages that you will need to install to avoid compilation errors. Some of the packages includes:\nAndroid SDK Tools\nAndroid SDK Platform-tools\nAndroid SDK Build-tools\nSDK Platform and its Google APIs (Application Programming Interfaces) for a particular Android version.\nAndroid Support Repository\nAndroid Support Library\nGoogle Play services\nGoogle Repository\nIf you do not properly configure the Android SDK, chances are you will have many compilation errors. Zero errors, that is what we will teach you!\n[Importing Source Code - Correctly!]\nImporting the Android Studio project can be quite challenging, especially if you are newbie. This may also make you overwhelmed if you are intermediate Android developers. But, we have good news for you! We have created a comprehensive and step-by-step video for you, just to teach you how to import the source code correctly within minutes. Note that NOT every code you need to \"touch\", we will tell you which codes you need to make adjustment, and there is no coding or programming skills required at all! Many newbie developers get stucked here because of the complexity of Android Studio. No more headache we would say! Zero compilation errors, period.\n[Source Code Anatomy]\nBy the way, we will train you to become an Android \"doctor\" who is able to \"diagnose\" the anatomy of the source code. We will tell you which codes to edit and you simply no need to understand it. We will train you how to change the Targeted SDK, the Package Name and App Name on Smartphone. Edit the string file, apply some refactor steps, change targeted Android SDK version. That's it!\n[Photoshop Mastery: Learn the Essence of Photoshop]\nFrankly to say that you will need to master Photoshop to sustain in the app business for the long run. If you do not have enough money to fund those programmers as well as graphic designers, then just do it yourself. It is not that challenging, though. We know there are many other Photoshop-alike softwares, but, if we were to compare the quality and the advanced editing features, Photoshop is still a better choice. You may feel uncomfortable at first when using Photoshop, but I bet you will get used to it. Here are the items that we will guide you to make some edition on Photoshop:\n\nGame Character\nGame Background\nGame Fonts\nGame Tileset\nGame Icon\nGame Screenshot\nLearning too much in a short period of time will make you tension. This is the reason why we make this section as short as possible. With those learning videos, we have covered some useful shortcut keys that can boost your productivity greatly!\n\n[Where to get game sounds, musics and graphics for FREE and LEGALLY?]\nWe will tell you where to get the BIG LIST of royalty-free sounds, musics and graphics! We do not want you to have copyright infringement issue. So, you can now use those resources without fear!\n\n[Monetization Secrets]\n\nIn this course, we will reveal secrets that Google forgot to tell you. These are the secrets that many developers (even the experienced ones) forgot to do it and simply not aware of it. Knowing these secrets will increase your app income, at least two folds! Besides that, we will share with you how to make your app users happy, without annoying them! You see, your app users may just uninstall your app because the ads are just so annoying. Look no further, we will teach you how to apply some tricks on the code. You don't have to understand the codes, just copy-and-paste the codes we have attached together with the learning video! Additionally, it is equally important to know what stupid mistakes you will need to avoid to protect your app business. We bet doing one of the stupid mistakes may kill or ruin your app business INSTANTLY. Don't believe? Is either you know or don't know about the stupid mistakes that amateur/intermediate developers have made. Knowing the secrets and tricks that we have shared with you will add a protection shield to your app empire!\n[Generate Your Signed APK]\nWe will teach you how to export your Android app step-by-step and without hassle. Besides teaching you how to generate KeyStore, we will tell you how to properly name your APK, so that you always keep organized. We also teach you how to update your APK, provided you have uploaded your app to the Google Play Store. We will teach you where to change the Version Name and Version Code.\n\n[Deploy Your Apps to Other App Stores]\nBesides Google Play Store, you will get to know how to deploy your mobile app to other Android app stores for maximum exposure. We know that creating a mobile app is a daunting task, just don't waste your efforts! Do your app once and deploy it everywhere!\n[Google Play Content Policy - You Should Know It!]\n\nApp Tsunami will just hit you without warning. Just like every business, you will need to do some SWOT analysis. In this section, we will reveal to you the possible threats that you will need to know to sustain in the long run. Every business has risks, so were apps. You will need to digest the Google Play Content Policy after all. Obey to these rules and you will be safe in the \"cave\". Many developers just don't aware of the policy!\n\nWith all of the course learning materials, you will have a strong knowledge on how to create an Android app without programming skill! Let's make your app empire, stronger and faster!",
      "target_audience": [
        "This course is aimed at beginners to advanced learners in Android development and would like to reskin game apps based on the source code obtained.",
        "This course involved NO programming skills. It means no coding experiences are required because this course is step-by-step. Just code editing and select a few graphics and musics files to reskin!",
        "This course is also suitable for Android developers that would like to increase their advertising income as this course covers tricks to make MORE money!"
      ]
    },
    {
      "title": "Become a Mobile App Growth Hacker . Total Theory & Training",
      "url": "https://www.udemy.com/course/become-a-mobile-app-growth-hacker-total-theory-and-training/",
      "bio": "Complete guide on theory and elite techniques to increase app downloads and increase user retention to maximize profit",
      "objectives": [
        "Learn what is the job of a mobile app growth hacker",
        "Learn how to read, analyze and interpret iTunes App Analytics",
        "Learn how to increase app downloads",
        "Learn how to get users hooked to a mobile app (retention)",
        "Learn techniques to AB test app icons",
        "Learn the techniques to AB Test the App Icons",
        "Learn how to record video previews to increase downloads",
        "Learn how to Create Free Video Previews using QuickTime Player.",
        "Learn how to Upload a Video Preview to iTunes Connect.",
        "Find keywords associated with your app theme",
        "Get Relevant Words to use for your title and keywords section",
        "Understand what users are searching for on the iTunes App Store",
        "Compare which words have optimized app store traffic and exposure",
        "Come up with an efficient app name",
        "Increase downloads in other countries",
        "Spread the word about your app the smart way",
        "Boost app downloads on a specific day",
        "Write efficient pitch emails to news reporters",
        "Quickly translate your app keywords into 20 languages, for free",
        "Live Training on adding \"Rate and Review app\" functionality",
        "Spy on your app competitors",
        "Steal keywords from your comptetitors"
      ],
      "course_content": {
        "Overview of Ways to Increase Downloads": [
          "How to get the most out of this course",
          "App Store Optimization Techniques (ASO)",
          "Game Statistics",
          "Overview of Upcoming Trend techniques",
          "Stay on top of the industry news",
          "How to Create professional app icons on your own"
        ],
        "Hands On Growth Hacking": [
          "Techniques to AB Test the App Icons",
          "How to record video previews to increase downloads",
          "How to Create Free Video Previews using QuickTime Player",
          "How to Upload a Video Preview to iTunes Connect",
          "How to Find keywords associated with your app theme",
          "How to Get Relevant Words to use for your title and keywords section",
          "Understand what users are searching for on the iTunes App Store",
          "How to compare which words have optimized app store traffic and exposure",
          "How to come up with an efficient app name",
          "Techniques to increase downloads in other countries",
          "Spreading the word about your app the smart way",
          "Amazing Trick to boost app downloads on a specific day"
        ],
        "Email Pitch": [
          "App Pitching: Writing a powerful email subject line",
          "App Pitching: Writing a captive email content",
          "Spy if a news reporter read your pitch email",
          "How to automatically obtain anyone's email address"
        ],
        "Growth Hacking your app settings and Metadata": [
          "Hands-on training - Download the study app",
          "How to Optimize app keywords for maximum exposure",
          "How to quickly try multiple app store landing pages for AB testing",
          "How to steal your competitors app store exposure",
          "Live demo of testing the app icon efficiency",
          "Powerful Tool to find relevant keywords from the app store, Youtube and Bing",
          "Spy on app competitors progression, downloads, revenues, and rankings",
          "Translate app keywords for free into 20 languages under 2 minutes"
        ],
        "Live Training": [
          "Live Training - Add ratings and reviews functionality to your iOS or Android app",
          "Live Training - Smart \"Ask to Rate and Review app\" plugin"
        ],
        "Social Media Promotion": [
          "Promote your mobile app on Twitter the right way"
        ],
        "in Depth App Analytics": [
          "How to access the iTunes connect analytics dashboard",
          "Detailed Overview of the main ITunes analytics dashboard",
          "Drilling into the overview details iTunes connect analytics screen",
          "Understanding detailed metrics of the iTunes analytics",
          "Taking a look at the iTunes analytics sources tab top websites and campaigns",
          "Taking an in depth look on iTunes analytics user retention",
          "BONUS"
        ]
      },
      "requirements": [
        "A MAC OS computer is preferred but not required to follow the lessons."
      ],
      "description": "Get a high-paying high-in-demand job in the tech industry by becoming a mobile app growth hacker. Learn the marketing of the 21st century.\nThis course teaches you all the theory and the hands-on techniques to drive insane amount of app downloads and solid user retention.\nThis course is not just about theory. It is the only course where you get to see the real on-field techniques used the behind the scene.\nCourse Goals\nLearn what is the job of a mobile app growth hacker\nLearn how to read, analyze and interpret iTunes App Analytics\nLearn how to increase app downloads\nLearn how to get users hooked to a mobile app (retention)\nLearn techniques to AB test app icons\nLearn how to record video previews to increase downloads\nLearn how to Create Video Previews for free using QuickTime Player.\nLearn how to Upload a Video Preview to iTunes Connect using multiple sizes.\nFind keywords associated with your app theme\nGet Relevant Words to use for your title and keywords section\nUnderstand what users are searching for on the iTunes App Store\nCompare which words have optimized app store traffic and exposure\nCome up with an efficient app name\nIncrease downloads in other countries\nSpread the word about your app the smart way\nBoost app downloads on a specific day\nSpy on your app competitors, and steal their good keywords\nand much more...\nWho is this course for?\nThe course is ideal for people looking to get exposed to the world of mobile app growth hacking, or for anyone who wishes to start their own business or looking to grow an existing mobile app business for the world-class companies like Twitter, Facebook, Dropbox, Pinterest, YouTube, Groupon, Udemy, and Instagram.\nInvest in yourself by taking this course now.",
      "target_audience": [
        "This Growth Hacker Training course is also perfect for anyone looking to start their own business (or side biz) without breaking the bank.",
        "This Growth Hacker Training course is meant for entrepreneurs and app developers who want to increase their app downloads and maximize potential profit",
        "This Growth Hacker Training course is also meant for people who are looking for top paying jobs in the tech industry, startups, and entrepreneurship"
      ]
    },
    {
      "title": "SwiftUI Getting Started - Basics to Advanced",
      "url": "https://www.udemy.com/course/swiftui-guide/",
      "bio": "The best guide for SwiftUI beginners",
      "objectives": [
        "How each view works in SwiftUI",
        "Building lightweight and reusable views",
        "Combining views to build intuitive designs",
        "Leveraging SwiftUI to quickly turn ideas into working screens",
        "Ensuring your UI is functional on iOS, tvOS, macOS, and iPadOS."
      ],
      "course_content": {
        "SwiftUI Introduction": [
          "New Xcode Features for SwiftUI"
        ],
        "Basic Views and Stacks": [
          "Text Views and Modifiers",
          "Color views and Frames",
          "Image Views & SF Symbols",
          "HStack Containers",
          "VStack Containers",
          "ZStack Containers",
          "Combining containers to build complex UI"
        ],
        "Complex views with @State": [
          "Learning @State with Textfields",
          "Button",
          "Toggle",
          "Slider View"
        ],
        "Advanced container views": [
          "Form",
          "Picker",
          "ScrollView",
          "List",
          "TabViews and @Binding"
        ]
      },
      "requirements": [
        "Basic Swift Experience"
      ],
      "description": "When Apple launched SwiftUI, iOS developers everywhere were impressed with the innovative technology.\n\nApple has provided this new framework as a way to quickly build beautiful user interfaces for any Apple device using just one set of easy-to-use tools. With the new declarative syntax of SwiftUI, it takes less code to keep your code and design perfectly in sync.\nSwiftUI works seamlessly with new Xcode design tools and significantly speeds up development by showing your code changes in real time!\n\nThis course walks you through the basics of SwiftUI in a structured way intended to help beginners quickly get up to date with this exciting UI framework. This course is a series of lessons covering the different SwiftUI components one by one.\n\nIn each video, you'll be introduced to the topic, explained how the logic works, shown examples, and then discuss best practices when it comes to building real applications.\n\nWe start learning basic components like text views, modifiers, and containers (ZStack, HStack, VStack).\nWe then cover state management using @State and how to input text into a textfield.\nWe end by covering the more advanced components like List, TabView, and Form.\n\nIf you want a clear explanation of each of the SwiftUI components, this is the course for you.\n\nSwiftUI is the future of iOS development and the best time to start learning is now!",
      "target_audience": [
        "iOS Developers looking to learn the new SwiftUI"
      ]
    },
    {
      "title": "Advanced Table View iOS App Development with Swift & Xcode",
      "url": "https://www.udemy.com/course/tableviews/",
      "bio": "Learn Programmatic Auto Layout, UITableView, Protocols & Delegates, Custom Cells, NSAttributedString, UIKit & Swift.",
      "objectives": [
        "Expandable UITableView Sections - Drop Down Menus",
        "NSLayoutConstraint for Programmatic Auto Layout",
        "UIStackView, UITextField, UILabel + more UIKit",
        "UITableViewDelegate Methods",
        "UITableView",
        "How to push UIViewControllers onto a UINavigationController stack",
        "How to use multiple UINavigationControllers simultaneously",
        "How to present UIViewControllers",
        "Custom Protocols & Delegates",
        "Custom UITableView Cells",
        "UITableViewController",
        "Xcode",
        "Swift",
        "Form Validation"
      ],
      "course_content": {
        "(This Section is on my YouTube) Build the Spots TableView Section DropDown app.": [
          "App overview & introduction (ep. 1)",
          "App Setup, Data Source, Delegate Methods (ep. 2",
          "Data Structs & UITableViewCells & Images (ep. 3",
          "Custom UITableViewCell Setup & Optionals (ep. 4",
          "Programmatic Cell Auto Layout with NSLayoutConstraint (ep. 5)",
          "insertRows & deleteRows TableView Cells with Animations (ep. 6)",
          "Advanced Auto Layout Cell Animations with NSLayoutConstraint (ep. 7)"
        ],
        "BONUS TRACK - Add Force Touch Peek & Pop to the spots app.": [
          "Section Intro",
          "Check device for force touch capability & register a view for previewing.",
          "Introduction to UIViewControllerPreviewingDelegate for Force Touch",
          "Programmatic Auto Layout with NSLayoutConstraint & UIImageView",
          "Getting the correct indexPath and presenting our controller with cell data."
        ],
        "BONUS TRACK - UPLOAD YOUR APP TO THE APP STORE.": [
          "Section Materials - Icons, screenshots, and links.",
          "Section overview & what you need before you can upload to the app store.",
          "Bundle Identifiers.",
          "Creating your app in App Store Connect, App Information, and Pricing your App.",
          "App Store Screenshots and submission information.",
          "Manage Signing Automatically and Archive Your First Build.",
          "App Icon, Archive Validation, and Uploading Your App Build to App Store Connect.",
          "Selecting an App Build, General App Information, and Submitting for Review."
        ],
        "Building the Social Accounts App 1.0 with UITableViews & custom UITableViewCells": [
          "Setup up an iOS App WITHOUT storyboards, AppDelegate.swift",
          "Easily setup and use UITableViewController & UITableViewCells",
          "UITableViewCell data model struct & UILabel text.",
          "Setup Large UINavigation Titles",
          "Create and Register an empty Custom UITableViewCell Class",
          "Unwrap optionals correctly with guard let - UITableViewCell data",
          "AutoLayout programmatically via NSLayoutConstraint & UIStackView",
          "NSAttributedString underline, color, font, style in Swift & Xcode",
          "Open external apps from URLs within your app"
        ],
        "Multiple UITableView Sections.": [
          "How to make multiple UITableView sections",
          "Modeling multi dimensional data to opt for two or more UITableView sections.",
          "UITableView section header titles.",
          "Custom header view layout with Programmatic Auto Layout & viewForHeaderInSection"
        ],
        "(deleting rows) - Swipe to delete & edit UITableViewCells.": [
          "Cell Swipe Actions - editActionsForRowAt (episode 1)",
          "Cell Swipe Actions - multiple edit actions (episode 2)",
          "Cell Swipe Actions - deleteRows at indexPath & deleting account data (episode 3)"
        ],
        "UIBarButtonItems - UINavigationController actions.": [
          "Bar Button Items - Adding a bar button item with text (episode 1)",
          "Bar Button Items - Icon UIImage Bar Button Items (episode 2)",
          "Bar Button Items - Adding multiple bar button items to both sides (episode 3)",
          "Bar Button Items - System Icons, Targets, Actions, & Selectors (episode 4)"
        ],
        "Presenting & Pushing UIViewControllers from UINavigationControllers.": [
          "UINavControllers - How to push a ViewController from NavigationController (ep 1)",
          "UINavControllers - How to present a ViewController instead (episode 2)",
          "UINavControllers - Dismissing Controllers & Completions (episode 2)"
        ],
        "UIKit & Programmatic Auto Layout using NSLayoutConstraints.": [
          "UIKit - gather input w/UITextField in AddSocialAccount viewController(episode 1)",
          "UIKit - build a custom UITextField class for clean re-use. (episode 2)",
          "NSLayoutConstraint & UIKit - Upgrade from frames to NSAutoLayout. (episode 1)",
          "NSLayoutConstraint & UIKit - Constrain multiple views w/UIStackView. (episode 2)",
          "UIKit - Adding UILabels to name our UITextFields. (episode 3)"
        ],
        "Form Validation": [
          "Retrieve data from user - Extract data from UITextField (episode 1)",
          "Retrieve data from user - UITextField Form Validation (episode 2)"
        ]
      },
      "requirements": [
        "Basic understanding of Swift",
        "A love for iOS apps!",
        "Must have the desire to learn everything about UITableViews because you will in this course",
        "Must be an awesome person which you probably are.",
        "A brain"
      ],
      "description": "UITableViews, they are everywhere and you probably know at this point that being able to use UITableViews to their full potential, gives you a huge advantage as an iOS developer with skill.\nWith that being said, your iOS development instructor, Maxcodes, is about to teach the ways of UITableView. This course will prepare you to utilize UITableViews in any and every iOS app you write giving you massive leverage to take your app to the next level. Whether it's your app, or your employers app.\nYou will be learning through a practical, project driven approach in which sections are carefully thought out and separated to provide you with concept specific lectures, and video tutorials. This format is designed by Maxcodes to purposefully condense concepts and app projects into short amounts of time, not to provide you with less content, but to provide you with massive amounts of value while make sure I don't waste your time.\nI completely understand if you are slightly skeptical, and wonder if this course will be worth your hard earned money. So you probably know, I offer a 30 day money back guarantee to ensure trust. If you do not like this course, or you feel it doesn't provide you with the value you need, you can get a full refund within 30 days. EVEN if you go through the course 100%, you can still have a FULL refund within 30 days of enrolling in your UITableView course.\nLet's master UITableViews today!",
      "target_audience": [
        "Beginners & Experienced iOS developers",
        "Developers who want to get into mobile programming",
        "Awesome people"
      ]
    },
    {
      "title": "Flutter Dart | Flutter App Development Projects Course",
      "url": "https://www.udemy.com/course/flutter-dart-flutter-app-development-projects-course/",
      "bio": "Learn Flutter and Dart with Advanced Flutter 3 Applications to build apps for Multi-Platforms (Web, Mobile, Desktop)",
      "objectives": [
        "Flutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language.",
        "Flutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018.",
        "Flutter is powered by Dart programming language optimized for fast apps on any platform.",
        "Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.",
        "Flutter can integrate with existing iOS and Android code bases. It's free and open-source.",
        "Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy.",
        "Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase.",
        "Flutter code compiles to ARM or Intel machine code as well as JavaScript, for fast performance on any device.",
        "Flutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers.",
        "Flutter is powered by Dart, a language optimized for fast apps on any platform",
        "Dart is a client-optimized language for developing fast apps on any platform.",
        "Dart is designed for a technical envelope that is particularly suited to client development, prioritizing both development and high-quality production.",
        "Flutter Firebase",
        "Flutter web",
        "Flutter Basics and Structers",
        "What is Flutter?",
        "Why Flutter?",
        "Book List Application",
        "Student Grade Calculator(App)",
        "Fashion Design(App)",
        "Weather App With http",
        "Firebase RealTime Database",
        "Authentication with Firebase",
        "Animations",
        "Flutter State Management (Provider)",
        "Flutter State Management (Block)",
        "Flutter State Management(GetX Package)",
        "Build beautiful, fast and native-quality apps with Flutter",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Understand all the fundamental concepts of Flutter development",
        "Become proficient in one of the fastest growing technologies"
      ],
      "course_content": {
        "Introduction to Flutter": [
          "What is Flutter?",
          "Flutter Project File",
          "Why Flutter?",
          "Flutter App's Anatomy",
          "Flutter Versions",
          "Quiz"
        ],
        "Environment Setups": [
          "Prequisties for Flutter Setup",
          "Git and Flutter SDK Setup",
          "Android Studio and SDK Installation",
          "First Flutter Project in Android Studio",
          "First Flutter Project in VSCode",
          "Flutter App on Real Device",
          "Mac Setup-Install Flutter SDK",
          "Mac Setup-Install Android Studio",
          "Mac Setup-Install The Android Emulator",
          "Mac Setup-Install Xcode and Command Line Tools",
          "Quiz"
        ],
        "Book List Application": [
          "Application Introduction",
          "Creating the Data Source",
          "Create List",
          "Creating the Detail Page",
          "Using Palette Generator",
          "Using onGenerate",
          "Quiz"
        ],
        "Student Grade Calculator(App)": [
          "Application Introduction",
          "Using Google Fonts and Basic App Structure",
          "Using TextFormField for Application",
          "Creating the Average Widget",
          "Create DropdownButton",
          "Dropdown-2",
          "Calculation of the Average and the Lesson Model Class",
          "Listing of Courses and Dismissible Button",
          "Using Callback Functions"
        ],
        "Fashion Design(App)": [
          "App introduction and Interface Design-1",
          "Interface Design-2",
          "Interface Design-3",
          "Interface Design-4",
          "Using Hero and Inkwell Widget",
          "Completing the Interface",
          "Quiz"
        ],
        "Weather App With Http": [
          "Http Example",
          "Prepare Loading Screen",
          "Prepare Main Screen",
          "Getting Location Information from User",
          "Usage of Api and Json Data",
          "Additing Data From Api To Application",
          "Completed App"
        ],
        "Introduction to Firebase": [
          "What is Firebase?",
          "Products Offered by Firebase",
          "Firebase Pricing Policy, Limits and Quotas",
          "Quiz"
        ],
        "Firebase RealTime Database": [
          "Creating a Firebase Database",
          "Adding Real-time Data to The Database via Firebase Console",
          "What is NoSql Database",
          "FireStore and Realtime Database Differences",
          "Firestore Collection and Documentation Concepts",
          "Add Data, Add and Set Method",
          "Update and Delete Data",
          "Onetime Reading of Data",
          "Realtime Reading with Stream",
          "Operations with Batch",
          "Transaction Operations",
          "Data Query in FireBase",
          "Firebase Storage File Upload and Url Retrieval",
          "Quiz"
        ],
        "Authentication with Firebase": [
          "Introduction to Authentication",
          "Creating a Project with a Package Name",
          "Flutter Fire and Firebase CLI installations",
          "Creating User with Email and Password",
          "LogIn and LogOut with Email and Password",
          "Email and Password Update Procedures",
          "Sign in with Google",
          "Phone Number Login",
          "Quiz"
        ],
        "Animations": [
          "Introduction to Animations",
          "AnimationController, Ticker and Controller Methods",
          "Tween Animations",
          "Curve Animations",
          "Staggered Animations",
          "Sequence Animations and AnimatedBuilder",
          "Animation Widgets",
          "Transform Widgets",
          "Animations App-Prepairing Interface",
          "Using AnimationPosition Widget",
          "Using Scale Transation",
          "Completion of the Project",
          "Quiz"
        ]
      },
      "requirements": [
        "Basic Darts Knowledge",
        "Basic Flutter Knowledge",
        "Desire to learn dart flutter",
        "Computer with access to the internet.",
        "Willingness and Motivation to successfully complete the course about Flutter",
        "Desire to learn Flutter and Dart",
        "Have 10GB of free space on your hard drive.",
        "Watching the lecture videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition for flutter dart to get started today"
      ],
      "description": "Hello there,\nWelcome to the “ Flutter Dart | Flutter App Development Projects Course ” course.\nLearn Flutter and Dart with Advanced Flutter 3 Applications to build apps for Multi-Platforms (Web, Mobile, Desktop)\n\n\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language. Flutter can integrate with existing iOS and Android code bases. It's free and open-source.\n\n\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter dart was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, dart flutter is compiled to JavaScript code that can run on the browser.\nFlutter web is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the flutter firebase Engine, written in C++, which provides low-level rendering support.\nFlutter is a Google SDK for building native interfaces for iOS and Android using the Dart programming language. Flutter can integrate with existing iOS and Android code bases. It's free and open-source. Flutter, dart, flutter dart, flutter and dart, flutter firebase, dart programming, flutter advanced, flutter project, dart language, dart programing language\nFlutter is an open-source UI software development kit created by Google. It is used to develop cross platform applications for Android, iOS, Linux, macOS, Windows, Google Fuchsia, and the web from a single codebase\nDart is a client-optimized language for developing fast apps on any platform. Its goal is to offer the most productive programming language for multi-platform development, paired with a flexible execution runtime platform for app frameworks.\nLanguages are defined by their technical envelope — the choices made during development that shape the capabilities and strengths of a language. Dart is designed for a technical envelope that is particularly suited to client development, prioritizing both development (sub-second stateful hot reload) and high-quality production experiences across a wide variety of compilation targets (web, mobile, and desktop).\nDart also forms the foundation of Flutter. Dart provides the language and runtimes that power Flutter apps, but Dart also supports many core developer tasks like formatting, analyzing, and testing code.\nThe Dart language is type safe; it uses static type checking to ensure that a variable’s value always matches the variable’s static type. Sometimes, this is referred to as sound typing. Although types are mandatory, type annotations are optional because of type inference. The Dart typing system is also flexible, allowing the use of a dynamic type combined with runtime checks, which can be useful during experimentation or for code that needs to be especially dynamic.\n\n\nGoogle Flutter provides higher quality for multi-platform development.\nFlutter apps use a single codebase, allowing faster time-to-market.\nFlutter allows you to build beautiful apps easily.\nFlutter widgets make it easy to build beautiful UIs.\nThe Dart programming language is very productive.\nFlutter delivers an excellent developer experience with hot reload.\nFlutter is open source.\nFlutter comes with a mature ecosystem.\nFlutter’s unique advantages make it a very strong UI framework on mobile, web, and desktop.\n\n\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build dart flutter programming thus, we will have prepared a strong foundation for Flutter applications.\nThis course is for beginners. Before taking this course, You don't need to know any language. In our course, the basics of dart programming is dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nDuring our course, you will be informed about the basics of Dart in detail and how to solve problems.\nThis course was crafted to benefit absolutely any level of developer. We will start flutter and dart from scratch and learn how to create a development environment for Flutter in mobile development.\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible. I have used some diagrams to help you understand better.\nThe powerful features and capabilities of fluter allow you to create complex, customizable, modern, responsive, and user-friendly web applications in mobile app marketing.\nAfter taking this course you’ll be able to fully take advantage of all features for Dart in Mobile Development.\nIn this course, Develop modern, complex, responsive and scalable web applications with Dart in Firebase\n\n\nWhat is Google Flutter?\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Flutter was originally launched with support for iOS and Android. Flutter 2 was launched as a stable release in March 2021, with support for Windows, macOS, Linux, and web. Flutter runs with Dart, a programming language developed by Google. Dart is a strongly-typed, object-oriented language with a familiar C-style syntax. Developers can compile Dart programs into fast native code that runs smoothly on all supported platforms. On the web, Dart is compiled to JavaScript code that can run on the browser. Flutter is composed of three architectural layers: the Flutter framework, which is written in Dart and provides all the widgets that developers use to build their apps; the Flutter Engine, written in C++, which provides low-level rendering support with Google’s Skia; and the platform-specific Embedder, which talks directly to the operating system.\n\n\nWhy did Google create Flutter?\nFlutter, first known as “Sky”, was announced in 2015 with Android support only. It was created to provide a better mobile experience for users and developers, taking the best parts of the web development experience, and bringing them to mobile. Its main goals were high-performance and portability across multiple platforms. While other cross-platform solutions such as React Native and Xamarin were already popular, they could not deliver the same fidelity and performance as apps built with the native iOS and Android SDKs. Flutter changed that by making it possible to create beautiful, performant apps across multiple platforms with a single codebase.\n\n\nIs Flutter in demand?\nFlutter has been a production-ready, stable product on iOS and Android since its official launch in December 2018. Big companies such as eBay, BMW, Alibaba, and Toyota are using Flutter as the core framework for their mobile app development strategy. Over a hundred thousand Flutter apps have already been published on the App Store and Play Store. After overtaking React Native in Google Search trends, Flutter is now the fastest growing software project on GitHub. By choosing Flutter, companies can deliver mobile apps in record-time as they no longer have to build separate apps to support iOS and Android. This makes Flutter an ideal choice for startups, agencies, and small businesses, and as a result, the job market for Flutter developers is also expanding rapidly.\n\n\nIs Flutter a programming language?\nFlutter is not a language, rather an SDK just like Android SDK. For android development Java/Kotlin are the programming languages, for cross-platform development using flutter, DART is the official programming language.\n\n\nIs Flutter a frontend or backend?\nFlutter is a popular frontend development framework from Google that enables developers to build beautiful frontends for any screen. Flutter is designed to streamline cross-platform app development while maintaining a consistent user experience.\n\n\nWhich language is used for Flutter?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features. While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine.\n\n\nIs Flutter a framework?\nFlutter is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase.\n\n\nWhat is Dart and why does Flutter use it?\nFlutter uses Dart as Dart allows Flutter to avoid the need for a separate declarative layout language like JSX and XML. The layout of Dart is declarative and programmatic and it makes it easy for developers to read and visualize it very easily and effortlessly.\n\n\nIs Flutter written in Dart?\nFlutter apps are written in the Dart language and make use of many of the language's more advanced features. While writing and debugging an application, Flutter runs in the Dart virtual machine, which features a just-in-time execution engine.\n\n\nWho uses Dart programming language?\nCompanies that use the Dart language include Google, Mews, Ag Flow, and Blossom to name a few. People generally find that Dart is one of the languages that are easier to grasp, as it is fairly similar to many other programming languages.\n\n\nWhat applications use Flutter?\nThere are social networking apps for creating and sharing content, dating, and connecting people through events and real-life activities that use Flutter. Alibaba made a shopping app called Xianyu, which has more than 50MM downloads and more than 10MM active users every day. Nubank is the largest independent digital bank outside Asia, and its mobile apps are built with Flutter. Another shopping app is HuYu, which rewards users with gift cards and vouchers for sharing shopping receipts. You can also find music apps for recording and learning to read music. The Hamilton Musical and the famous Abby Road Studios created apps with Flutter. There are apps for sports, finance, fitness, education, animal adoption, mapped gas stations to compare prices, and a travel app. A Google Ads app helps mobile app customers track their ads. Users can view statistics, update bids and budgets, and get real-time notifications.\n\n\nOur course based on learning by making practice.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now into;\n\" Flutter Dart | Flutter App Development Projects Course ” course.\nLearn Flutter and Dart with Advanced Flutter 3 Applications to build apps for Multi-Platforms (Web, Mobile, Desktop)\n\n\nWe offer full support, answering any questions.\n\n\nMy students says that: Recommended for those who start Flutter from zero like me. I'm a backend programmer, and I know nothing about the mobile realm. Now I can build my own mobile app. I'm really excited!\nFlutter & Dart\nSee you in the course!",
      "target_audience": [
        "Anyone who want to develop an apps with basic flutter knowledge and build iOS and Android apps.",
        "Anyone who know how to code, but are new to mobile development, then take this course to build apps with just one codebase.",
        "Anyone who have tried Flutter before, but want to get a comprehensive curriculum that covers all the important aspects of Flutter development",
        "Anyone who wants to deploy to multiple devices from a single codebase: mobile, web, desktop, and embedded devices.",
        "If you want to building your application with Dart and Flutter application",
        "Anyone who wants to use Flutter which is a Google SDK for building native interfaces for iOS and Android using the Dart programming language",
        "Anyone who wants to build beautiful apps easily with Flutter",
        "Anyone who wants to learn Dart programming language which is very productive.",
        "Anyone who want to build native-quality iOS and Android apps with Flutter."
      ]
    },
    {
      "title": "Dart & Flutter: The Complete Mobile Apps Development Course",
      "url": "https://www.udemy.com/course/dart-flutter-the-complete-mobile-apps-development-course/",
      "bio": "A Complete Guide to the Dart & Flutter Framework for building beautiful native apps on iOS and Android",
      "objectives": [
        "Build applications for iOS and Android with Dart and Flutter",
        "Learn Dart basics: data types, variables, control flows (if statements, for loops), operations, and functions",
        "Learn Dart object-oriented concepts:classes, functions, inheritance, interfaces, and data structures",
        "Build apps with material design widgets - scaffold, flat buttons, cards, and ListView .builder",
        "Fetch data from online APIs and parse JSON objects",
        "Persist data with SQLite",
        "Create a To-Do list and a chat application",
        "Add Google maps, routes, and places to create comprehensive map applications",
        "Detect images to discover the powerful machine learning APIs with the Firebase ML Kit",
        "Manage state changes using the Scoped Model, Bloc and Redux architecture patterns",
        "Build robust code with Unit, Widget, and Integration testing",
        "Build apps and deploy them to Google Play Store and Apple App Store with a single codebase"
      ],
      "course_content": {
        "Dart 2 in 7 Days": [
          "The Course Overview",
          "MacOS Setup – Install the Flutter SDK",
          "MacOS Setup – Install Android Studio and XCode",
          "MacOS Setup – Install IntelliJ and Build Our First App",
          "Windows Setup – Install the Flutter Framework",
          "Windows Setup – Install Android Studio",
          "Windows Setup – Install IntelliJ and Build Your First App",
          "Code Challenge",
          "Introduction to Variables and Data Types",
          "String Concatenation and Interpolation",
          "Arithmetic Operators and Equality Operators",
          "If Else and Logical Operators",
          "for Loops, do while, and break",
          "Switch Statements",
          "Code Challenge",
          "Introduction to Classes and Objects",
          "Creating Functions",
          "Constructors, Class Inheritance, and Overriding Methods",
          "Interfaces and Abstract Classes",
          "Introduction to Collections",
          "Using Loops to Iterate Through Collections",
          "Code Challenge",
          "Introduction to Material Design",
          "Flutter Project Structure",
          "Stateless Widgets – Part 1",
          "Stateless Widgets – Part 2",
          "Stateful Widgets – Part 1",
          "Stateful Widgets – Part 2",
          "Code Challenge",
          "Using HTTP and JSON in Our App",
          "Setting Up the Project to Receive JSON Data",
          "Getting Data from the API",
          "Displaying the JSON Data on the Screen – Part 1",
          "Displaying the JSON Data on the Screen – Part 2",
          "Wrapping Up",
          "Code Challenge",
          "Persistence in Flutter: Saving Data with Text Files",
          "Persistence in Flutter: Saving Data with Shared Preferences",
          "Persistence in Flutter: Saving Data with Databases Part 1",
          "Persistence in Flutter: Saving Data with Databases Part 2",
          "Persistence in Flutter: Saving Data with Databases Part 3",
          "Persistence in Flutter: Saving Data with Databases Part 4",
          "Persistence in Flutter: Saving Data with Databases Part 5",
          "Code Challenge",
          "Deploying Your App to the Google Play Store Part 1",
          "Deploying Your App to the Google Play Store Part 2",
          "Deploying Your App to the Apple App Store Part 1",
          "Deploying Your App to the Apple App Store Part 2",
          "Deploying Your App to the Apple App Store Part 3",
          "Promoting Your App and Moving Forward",
          "Code Challenge",
          "Test your knowledge"
        ],
        "Learning Dart - Build Your First App with Flutter": [
          "The Course Overview",
          "Download, Install, and Set Up the Required Softwares",
          "Set Up a Repository in GitLab",
          "Initialize the Flutter App Using the Command-Line Tool",
          "The Boilerplate from Flutter",
          "Add a Basic Layout Using Layout Widgets",
          "Build the Message Widgets",
          "Create a JSON File for the Messages",
          "Improve the Layout of Chat Messages",
          "Simulate Sending a Message",
          "A Short Firebase Introduction",
          "Adding a Firebase Cloud Firestore Database",
          "Introduction to Firebase Authentication",
          "Add Firebase Dependencies",
          "Add Google-Sign In to the App",
          "Add Firestore Connection",
          "Listing and Adding Messages",
          "Adding a Contacts List",
          "Adding a Friend",
          "Use Firestore in ChatHistory",
          "Cleaning the Codes",
          "Putting the Application Together",
          "Test your knowledge"
        ],
        "Real-World Projects with Flutter": [
          "The Course Overview",
          "Create Mockup UI to Visualize the App",
          "Implement the Widget Tester to Test the Weather Widget",
          "Get JSON Weather Data to Display the Live Weather",
          "Add Location Support to Display Local Weather",
          "Create Unit Tests for Testing API Methods",
          "Integrate Google Cloud Support to Access Google Maps",
          "Integrate Location with Maps to View Local Location",
          "Use Google Maps Web Service for a List of Nearby Cafes",
          "Use Google Map Markers to Display the Cafes",
          "Create Card to Display Cafe Information and Route",
          "Create Home Page to Visualize Look and Feel",
          "Create Carousel for Switching between Drinks",
          "Integrate Scoped Model Design Pattern for Sharing State",
          "Add AlertDialog for Placing Drinks Order",
          "Implement Integration Tests for Testing Entire App",
          "Create Mockup UI for App Look and Feel",
          "Create QR Codes for Coffee Shop Products",
          "Use Firebase ML Kit to Detect QR Code",
          "Set Up Camera for QR Code Scanning",
          "Use BLoC Pattern to Manage State Changes",
          "Create Mockup UI for App Look and Feel",
          "Use the Camera Plugin for Capturing Images",
          "Implement Gallery to Display Image Thumbnails",
          "Use Flutter Redux for Managing State Change",
          "Build and Release for Publishing Android Apps",
          "Create Mockup UI for App Look and Feel",
          "Implement Google Sign In for Login",
          "Use Cloud Firestore to Hold Chat Messages",
          "Add Firebase Storage to House Images",
          "Build and Release for Publishing iOS Apps",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "No prior knowledge of Dart or Flutter is required."
      ],
      "description": "Dart has become a general-purpose language that is optimized for web and mobile development. Flutter - Google’s new mobile UI framework is developed to build beautiful user interfaces for both Android and iOS natively. Flutter is a SDK providing the tooling to compile Dart code into native code and it also gives you a rich set of pre-built and pre-styled UI elements also called widgets which you can use to compose your own user interfaces. With so much of features provided, it takes less time to develop mobile applications with Dart and Flutter.\nThis practical course is designed specifically for people just starting out with Dart & Flutter for mobile development and who want to build fully functioning mobile applications that serves a real purpose. You will begin with learning the basics of the Dart programming language and setting up the development environment for Dart and Flutter to build your applications. You will then learn to build app layouts, perform widget animation, pull and push data to servers, and compile codes to build amazing native mobile apps for iOS and Android. You will also learn to deploy your applications on Google Play Store and Apple App Store.\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Dart 2 in 7 Days, starts by setting up a development environment for Dart and Flutter from which to build your first app. You will then learn how to create variables and perform operations and will learn about conditional statements. You will also focus on object-oriented programming aspects, wherein you will learn about creating classes, functions, and data structures. Next, you will learn to build a To-Do list application by calling APIs to get JSON data. Finally, you will learn how to deploy your app on the Google Play Store and Apple App Store.\nIn the second course, Learning Dart - Build Your First App with Flutter, you will be able to build app layouts, create widget animations, pull and push data to servers, and compile and release code to both stores.\nThe third course, Real-World Projects with Flutter, model’s real-world problems and then teaches the steps and techniques for creating solutions in the form of complete Android and iOS applications. Here with Flutter, you’ll develop multiple apps for both stores with just one code base and deploy it to both Google Play Store and Apple App Store.\nBy the end of this course, you will be able to build your own stunning iOS and Android mobile applications with Dart and Flutter.\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nVictor Wooding is a teacher and developer from Barbados. He has been teaching for ten years and coding for about eight. His first programming job came in 2011 when he was given the task of developing a website for the school that he was attached to. Since then he has developed skills in Photoshop, Illustrator, and Sketch and has learned Java, JavaScript, Swift, Dart, and Kotlin. Currently, he manages his own website—kodechamp—and uploads video tutorials to YouTube under his name.\n\n\nTim Anthony Manuel works as a Technical Manager for Fennec3D, as an App Development Consultant for an upcoming software company in the Philippines, and as the lead (and only) developer in his own company, Third Degree Apps. As a freelancer, he has developed Android apps using Java, and many progressive web apps using Vue.js and Node.js backends. In his previous jobs, he worked extensively with industrial machine automation and machine vision systems, developing software using Visual Basic .NET. He also loves making 3D models using Solidworks, as well as 3D-printing them. Currently, Flutter and Dart, and all Firebase APIs, are his focus.\n\n\nNigel Henshaw is a mobile software developer who as well as providing software development services loves to share his knowledge through his YouTube channel and website. He originates from New Zealand, where he started out as an electrician. After one too many electric shocks, he wisely decided on a career change. After completing a two-year diploma in Computer Science and Technology at the Auckland University of Technology, Nigel relocated to London for new opportunities.He landed a job as a test engineer with a pioneering tech company called Psion, who were one of the first to develop handheld devices and mobile operating systems. Before too long, Nigel was transferred to the base porting team and found himself in the middle of porting operating systems and writing device drivers with Symbian OS using C++.Nigel has experienced many wonderful opportunities through the software industry. He has worked in the UK, Scotland, and Japan, and held roles as a software engineer, consultant, project manager, and general manager of a remote development site.",
      "target_audience": [
        "This course is for beginners who want to build cross platform mobile applications using Dart and Flutter. Developers who create mobile applications using other technologies and now wish to learn Dart and Flutter for building native-mobile apps will also find this course useful."
      ]
    },
    {
      "title": "Kotlin | Develop Android Apps with Kotlin & Jetpack Compose",
      "url": "https://www.udemy.com/course/kotlin-develop-android-apps-with-kotlin-jetpack-compose/",
      "bio": "Android App Development | Learn Android Development, Develop Apps with Kotlin & modernize its UI with Jetpack Compose",
      "objectives": [
        "Learn Android App Development with Jetpack Compose",
        "Jetpack Compose with Android Studio",
        "App Design with Material3 Library",
        "Jetpack Compose with new Material 3",
        "Learn the latest version of Android",
        "Android Studio",
        "Develop 2 Big Android Jetpack Compose Project and make more than 20 exercises",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "You will be able to develop modern Android apps",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Firebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011."
      ],
      "course_content": {
        "Introduction to Kotlin | Develop Android Apps with Kotlin & Jetpack Compose": [
          "What You Will Learn In My Kotlin Course?",
          "Kotlin Overview",
          "Android Ecosystem",
          "Basic Programming Terms",
          "Project Files",
          "FAQ about Kotlin For Android Development: Learn Kotlin From Scratch",
          "Quiz"
        ],
        "Environment Setup in Android Studio Kotlin": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Android Studio Installation - Part 1",
          "Android Studio Installation - Part 2",
          "Android Studio Interface",
          "Quiz"
        ],
        "Fundamentals of Kotlin": [
          "First Kotlin Program",
          "Variables in Kotlin",
          "Data Types in Android Kotlin",
          "Type Conversions",
          "String Data Types",
          "Arrays in android app (kotlin)",
          "ArrayList",
          "Set",
          "Map",
          "Quiz"
        ],
        "Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Unary Operators",
          "Equality and Relational Operators in ktln",
          "Conditional Operators in kotlin",
          "Operator Precedence in Kotlin",
          "The “rangeTo()” Function and “in” operator",
          "Console Input",
          "Quiz"
        ],
        "Control Flow Statements in Kotlin": [
          "If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Kotlin: When Statement",
          "Quiz"
        ],
        "Loops": [
          "Kotlin: For and For Each Loops",
          "Kotlin: While and Infinite Loop",
          "Kotlin: Do-While Loop",
          "Quiz"
        ],
        "Functions": [
          "Kotlin: Functions",
          "Types of Functions",
          "Quiz"
        ],
        "Kotlin: Object Oriented Programming (OOP)": [
          "Object and Class in Kotlin",
          "Access (Visibility) Modifiers",
          "Naming Convention",
          "Constructor - Part 1",
          "Constructor - Part 2",
          "Encapsulation",
          "Inheritance",
          "Function Overriding",
          "Abstract Classes",
          "Interfaces",
          "Quiz"
        ],
        "Introduction to Android App Development with Jetpack Compose": [
          "What will you learn in this course in this Jetpack Compose Course?",
          "Why Jetpack Compose?",
          "Kotlin Overview",
          "Some Information about Android Ecosystem",
          "Basic Android App Development Programming Terms",
          "Quiz"
        ],
        "Environment Setup": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Installing Android Studio - Part 1",
          "Installing Android Studio - Part 2"
        ]
      },
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We preferred Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Basic knowledge of Kotlin is required.",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to \" Kotlin | Develop Android Apps with Kotlin & Jetpack Compose \" course\nAndroid App Development | Learn Android Development, Develop Apps with Kotlin & modernize its UI with Jetpack Compose\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android and jetpack compose?\nDo you want to learn android app development from Scratch with Jetpack Compose?\nDo you want to learn android app development from Scratch with Kotlin?\nDo you want to learn android development from Scratch with Jetpack Compose and Kotlin?\nDo you want to be an android studio master?\nDo you want to build your first android app with Kotlin and Jetpack Compose?\nIf your answer is “yes”, you are at the right place!\n\nI really like the approach of this course about the Android app In this course, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones As the course title indicates, it is the complete guide to learning android application development with Jetpack Compose\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google The Android OS is Linux kernel-based So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS More like a small part of an OS, but an important one The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things For example, for an application to access the phone’s File System (internal files), the user must give access first This means the app developer must let the user know, in advance, what the app they are installing wants to access For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera The app user has the power to either grant or deny permission App permissions in Android ensure the user’s protection from malware and software viruses\nThis course is built to help beginners to start making applications in android studio and android application development or android app design with Jetpack Compose\nIf you want to develop yourself in Android Apps, this course is for you Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part This course is designed to fill this gap\nMy \"Android App Development Course with Jetpack Compose\" course will take you from beginner to advance level\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course In this course, you will learn Android app development step-by-step While doing kind of show and tell in our lectures we are also explaining whys During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\n\nIs Android Development a good career?\nWith over 2 5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\nWhat is the use of Jetpack Compose?\nJetpack Compose is a modern toolkit for building native Android UI Jetpack Compose simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs In this tutorial, you'll build a simple UI component with declarative functions\nWhy we use Jetpack in Android?\nJetpack is a suite of libraries to help developers follow best practices, reduce boilerplate code, and write code that works consistently across Android versions and devices so that developers can focus on the code they care about\nIs Jetpack Compose an API?\nJetpack Compose is Android's recommended modern toolkit for building native UI It simplifies and accelerates UI development on Android Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs\nIs Jetpack a framework?\nAndroid Jetpack is a set of software components, libraries, tools, and guidance to help in developing robust Android applications Launched by Google in 2018, Jetpack comprises existing android support libraries, android architecture components with an addition of the Android KTX library as a single modular entity\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project in Android Studio\nMuch more about Android Studio\nWhat Kotlin is and how it works,\nProgramming Fundamentals with Kotlin,\nJava Development Kit – JDK\nVariables in android kotlin\nKotlin Data Types\nArrays in kotlin for android\nOperators in android app development kotlin\nControl Flow Statements\nLoops in android studio kotlin\nFunctions\nKotlin for java developers\nAll Concepts of Object-Oriented Programming such as Class, Object, Constructor, Encapsulation, Inheritance etc\nAndroid Components in Jetpack Compose\nUser interactions with Android Jetpack Compos\nNavigation and Lists in Jetpack Compose\nCreating UI design with XML codes and Jetpack Compose\nDeveloping Android Apps with Kotlin and Jetpack Compose\nPublishing Your App on Google Play and more\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow latest trends\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions\nSee you in the \" Kotlin | Develop Android Apps with Kotlin & Jetpack Compose \" course\nAndroid App Development | Learn Android Development, Develop Apps with Kotlin & modernize its UI with Jetpack Compose",
      "target_audience": [
        "Anyone who wants to learn to Jetpack Compose",
        "Programmers who are interested in building Android apps with Jetpack Compose",
        "Anyone who wants to create Android Applications using the Kotlin programming language and Jetpack Compose",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing Android App Development Kotlin knowledge with Jetpack Compose"
      ]
    },
    {
      "title": "Augmented Reality (AR) For Beginners: Create AR Apps Today!",
      "url": "https://www.udemy.com/course/augmented-reality-ar-for-beginners-create-ar-apps-today/",
      "bio": "Learn how to use Vuforia & Unity AR to create amazing AR experiences, games and apps from scratch. For beginners!",
      "objectives": [
        "How to create an Augmented Reality (AR) app using Vuforia and Unity from scratch. Everything is covered step by step.",
        "How to integrate Unity and Vuforia.",
        "How to create good and optimal augmentable image targets.",
        "How to create AR experiences using image targets, multi-targets and cylinder targets.",
        "How to create custom materials using Unity’s Shader Graph.",
        "How to improve the overall feeling of an AR experience by using custom animations.",
        "How create nice looking AR ‘portals’ to virtual dimensions.",
        "How to create interactions between different augmentable targets to create AR games.",
        "Much much more..."
      ],
      "course_content": {},
      "requirements": [
        "Windows or a Mac Computer system with a webcam.",
        "A basic understanding of Unity at a beginner level."
      ],
      "description": "THE BEST DEDICATED COURSE FOR LEARNING HOW TO CREATE AUGMENTED REALITY APPS FROM SCRATCH\nThe primary objective of this course is to help students acquire the necessary skills to create great and nice-looking AR experiences - even with no prior AR experience.\nIn this course, I will show every step in the AR development process. Not only will I show you how to create trackable real-life objects but I will also show you how to make these experiences memorable and engaging.\nWe will not only be working on the augmentable side of a project but also on the visual and interactional side, which is where the real magic happens.\nWe will go through the basics of using not only Unity and Vuforia but also other technologies like Unity's Shader Graph to create custom materials.\nAlso, Unity's Animation System to create and control custom in-game animations and even basic image editing with Photoshop (or free alternatives), finally putting everything together with just a little bit of coding in C#.\nEverything is covered step by step\nThroughout the course, I will give you practical exercises for you to test out your new AR development skills.\nWhen you are finished with this course, you will have created your first AR app and have laid the foundation for your future AR app development job or freelance career.\nI look forward to meeting you in the course forum where I'll be available to help you along the way and answer questions that you might have.\n\n\n\nWHAT IS AR AND VUFORIA?\nAR stands for 'Augmented Reality', it is a technology that allows us to augment our reality by placing virtual objects over real-life objects. AR technologies have applications in many different areas like Medicine, Education, Industrial Processes and Entertainment, and because of this, AR development becomes an even more important skill to have every day.\nThere are also many different AR SDKs available in the market, yet Vuforia has always been one of the most preferred ones because of its native integration with Unity3D, one of the most popular and biggest Game Engines currently available (which is also free).\nUnity's 3D and interactable capabilities together with Vuforia's augmentable ones make of a really powerful combination, allowing developers to get outstanding results within a relatively short amount of time and close to zero effort.\n\n\nTOP 3 BENEFITS OF TAKING THIS COURSE?\n1: Huge demand. Because of the way technologies are expanding, AR development is a skill that has become a ‘must-have’ for every developer in the industry. Through this course, you will be able to create the foundations required to become a real AR expert and get a great advantage over other competitors.\n2:  User experience is essential. In this course, you will learn that AR development is much more than simply augmenting real-life objects, it is about the experience the user is going to have with your application. You will be able to transform boring applications into really live and engaging experiences that users are going to love.\n3: Get the necessary skills to materialize your creativity. By acquiring the necessary skill to create amazing AR experiences, you will also be able to expand your way into other Unity development areas with ease since most of the content shared in this course is not AR specific and can be used in many other kinds of applications as well.\n\n\nFREQUENTLY ASKED QUESTIONS\nWhat Vuforia targets are covered?\nIn the course, we cover Vuforia’s Image Targets, Multi-Targets, and Cylinder Targets.\nDo I need to have previous knowledge about Unity?\nWe start the course at a very beginner level, so previous Unity knowledge is not required but may be of great help.\nDo I need to pay for a Vuforia license to take the course?\nNo, through the whole course we are going to be working with a single free Vuforia development license.\nDo I need to have Photoshop?\nNo, the kind photo editing we are going to do in the course is simple enough to be done on any kind of free image editing software available like eg. GIMP.\n\n\nGUARANTEE\nIf within 30 days of buying the course you decide that it's not for you, please get a refund. We only want happy students.\n\n\nARE YOU READY TO LEARN AR APP DEVELOPMENT?\nPlease press the \"Take This Course\" button and start learning 2 minutes from now!",
      "target_audience": [
        "Anyone interested in learning to how to create AR experiences with no prior experience"
      ]
    },
    {
      "title": "Mobile App Biz Pro Secrets - Complete App Business In A Box!",
      "url": "https://www.udemy.com/course/mobile-app-business-course/",
      "bio": "The ULTIMATE App Biz Program! Get a piece of the BILLIONS earned by app devs yearly! Start your app business: JOIN NOW!",
      "objectives": [
        "Learn 11 Killer Tips to Mobile App Success",
        "Choose a Business Model and Open a Mobile App Company",
        "Learn how to do App Research and find great app ideas",
        "Learn HOW to make an app using either outsourcing or self-development",
        "Learn ADVANCED techniques such as app marketing and ASO!",
        "AND MUCH MORE!"
      ],
      "course_content": {
        "Introduction and Welcome to the Course": [
          "Welcome to the Course",
          "Course Training Book - PLEASE DOWNLOAD - Read to Chapter 3!",
          "How much money can you make seriously and Is This Program for You?",
          "App Business Models and App Types",
          "Starting your App Business",
          "Section 1 QUIZ"
        ],
        "Concepts, App Ideas and App Design": [
          "Outsource or Self-Development",
          "The First Step: App Research",
          "Copyrights and Royalties",
          "App Design Tips, Prototyping and Paper Testing",
          "Section 2 QUIZ"
        ],
        "Creating and Launching Your App": [
          "Outsourcing The App",
          "Self Developing The App",
          "Launching Your App On the Google Play Store (Updated for 2015) (COMING SOON)",
          "Launching Your App On the Apple App Store (Updated for 2015)",
          "Section 3 QUIZ"
        ],
        "Advanced Concepts": [
          "ASO TRICKS (Updated for 2015)",
          "My KILLER App Marketing Tips and Techniques",
          "ASO Basic App Store Optimization",
          "Creating Winning Screenshots and Icons",
          "The App Lifecycle and Zombies",
          "Tracking"
        ],
        "End of Course and Next Steps": [
          "CONGRATULATIONS, Final Thoughts and Next Steps",
          "Master Bookmarks List"
        ],
        "Bonus Lessons!": [
          "Introduction to Bonus Courses Section",
          "BONUS: Free Webinar - \"Secrets of the Mobile App & Game Business\""
        ]
      },
      "requirements": [
        "Additional Money to purchase items and invest in your new business",
        "Time to learn as there is a lot of information here",
        "Basic knowledge of computers and digital technology",
        "Positive Mindset",
        "A Laptop/Portable Device to learn with",
        "A quiet spot to learn without distractions"
      ],
      "description": "COME JOIN OVER 4,297+ Students In This Incredible Course!\n\nRAVE REVIEWS!\n5/5 STAR - \"This is a top notch content!\", Maya Flynn\n5/5 STAR - \"Great Course from a Top Teacher\", Anthony K. Norton\n5/5 STAR - \"Very clear and engaging - Best I've taken!\", Fatema Akter\n+ MANY MORE!!\nWHY SHOULD YOU TAKE THIS COURSE?\n\nBy the end of this course, students will have the skills and expertise to:\n\n1. Become a part of the mobile app industry and get in on the BILLIONS OF DOLLARS paid out yearly, by starting their very own mobile app business!\n\n2. Learn proven techniques and methods from a PROFESSIONAL APP DEVELOPER to create apps and games for Apple iPhone and iPad as well as Android mobile devices!\n\n3. Get a MIND-BLOWING edge over the competition by learning ADVANCED techniques such as ASO (App Store Optimization)!\n\nEvery year the app industry keeps growing by BILLIONS of dollars as more people purchase smart phones and mobile devices. Every new piece of technology, from cars to home appliances, are now coming with touch screens and mobile applications! For that demand, app developers are needed, and the amount of money being paid out for apps and games is growing year after year! You cannot AFFORD to miss out on an opportunity to get your share of the industry! Those who open up their own mobile app business could be making money right now, even WHILE THEY SLEEP 24x7!*\n\nImagine what you could be making if you TAKE ACTION TODAY!* Take action now by joining this course and taking your first step towards the lucrative and exciting mobile app industry!\n\n*DISCLAIMER: Please use caution when taking any form of risk and consult with your professional advisors before starting any new business venture. Every effort has been made to accurately represent this product and its potential. There is no guarantee that you will earn any money using the techniques and ideas in these materials. Examples in these materials are not to be interpreted as a promise or guarantee of earnings. Earning potential is entirely dependent on the person using the materials, ideas and techniques. Your level of success in attaining the results claimed in the materials depends on the time you devote to the program, ideas and techniques mentioned, your finances, knowledge and various skills. Since these factors differ according to individuals, there is no guarantee of your success or income level. Nor is the instructor responsible for any of your actions.\nOTHER FEES: As you setup your new business you will naturally incur many fees associated with running an App Business. These fees include the price to open up a company, hardware costs, app development yearly membership fees (Apple, Google, etc.), software tools and several other fees along the way. There may be even times where you may be recommended to take certain other programs to help you enhance your learning even more or even to get an added edge over your competitors. Be prepared for these possible fees in the App Business.\n\nINSTRUCTOR INVOLVEMENT: Due to the busy schedule Abhinav has as he is developing new games, speaking at seminars around the world, running his various companies, building new programs and courses, and ofcourse spending time with his family, fans and other students, etc. it will naturally be a challenge for Abhinav to be available all the time. For this reason it is highly recommended that students take advantage of any webinars or discussions which Abhinav is a part of! These are great opportunities to connect with Abhinav and ask questions about the app business. Note: Please make sure your questions are related to the app business when asking questions as Abhinav has several courses on various topics. If you have a question on another course or topic that Abhinav teaches that is outside the scope of this course, please ask it in that specific webinar or discussion section.\nWHO SHOULD TAKE THIS COURSE?\nThis is a course for beginners and is perfect for those who have been itching to get into the mobile app and game industry but never knew where to start or what to do. This is also a great refresher for those who have been in the mobile app business for a while, but do keep in mind it is primarily for those who are brand new to the industry. For more intermediate courses and programs, please take a look at Abhinav's other programs on Udemy :)\nWHY TAKE THIS COURSE?\n1. You're learning from a REAL app developer who has built over 40+ apps in over 10+ markets with a Million+ downloads globally.\n2. A systematic and realistic approach to the app business for beginners.\n3. A program that is easy to follow at your own pace.\nIf you wouldn't want to learn Real Estate Investing tips from Bob, your local Car Salesman, why even think about learning the App Business from anyone other than an actual App Developer and App Business owner?\n\nThe choice is up to you, Are you the next App Trillionaire?\nImportant information before you enroll:\n\nIn case you are not fully satisfied with the course, don't forget you are covered by a 30 day money back guarantee, full refund, no questsions asked!\nOnce enrolled, you have unlimited, lifetime access to the course!\nYou will have instant and free access to any updates I may add to the course over time.\nCheck out the curriculum and FREE lectures in the course.",
      "target_audience": [
        "Those looking to get in on the BILLIONS of dollars earned yearly by mobile app developers (In 2014 Apple paid out over 10 Billion Dollars to Mobile Developers Alone!)",
        "Those who are brand new in the app or mobile game industry and have no idea where to start",
        "Not recommended for those who are already successfully running a mobile app business or are looking for more intermediate knowledge. Please refer to Abhinav's other courses and programs"
      ]
    },
    {
      "title": "Learn to Design for Augmented Reality with Zapworks",
      "url": "https://www.udemy.com/course/learn-to-design-for-augmented-reality-with-zapworks/",
      "bio": "Learn how to build Augmented Reality applications with the ready-to-go Zapworks tools",
      "objectives": [
        "Use Widget tool to create Zapcodes with simple media contents that you can share",
        "Use Designer tool to create Zapcodes to customize contents",
        "Use Studio tool to create more complicated and fun animations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The technology",
          "Practical uses of the technology",
          "Try some Zapcodes",
          "Tools",
          "Tools",
          "Licenses",
          "Create a Personal Account"
        ],
        "Zapworks Widgets and Designer": [
          "Create a Zapcode with Widgets",
          "Create Kids Party AR Card with Designer"
        ],
        "Zapworks Studio": [
          "Get started with Studio",
          "New Project with Plane and Script",
          "Train an image",
          "Studio",
          "Controller and States",
          "Timelines",
          "Controllers, States and Timelines",
          "Add a 3D POD object",
          "Use a Video for Material",
          "Use Bezier for animation on a custom path"
        ]
      },
      "requirements": [
        "You need to know the very basics of installing apps and using software"
      ],
      "description": "This course is designed to encourage the students to develop Augmented Reality animations and display media contents using the ready-to-go Zapworks tools.\nThe course starts with an explanation of the various tools, licenses and how to get started.\nThere you will start to learn how to work with Widgets. To learn about Designer, you will make a Kids Party invitation card which shows an Augmented Reality video and also allow a basic poll on whether the guess intends to attend or not.\nThe next topic deal with is the use of Studio. This is the most flexible tool that allows the creation of fully customized Augmented Reality animations.",
      "target_audience": [
        "Marketers who are interested in using technology novelty in marketing",
        "Web Development graduates who would like to try Augmented Reality",
        "Anyone who would like to use Augmented Reality in an invitation card",
        "Entrepreneurs who are interested in getting into the business of Augment Reality"
      ]
    },
    {
      "title": "Create An App For Your Business in Swift",
      "url": "https://www.udemy.com/course/create-an-app-for-your-business-in-swift-and-ios-8/",
      "bio": "A complete guide to creating your very own application for your company or business in Swift",
      "objectives": [
        "Create there own IOS applications for the business",
        "Submit there applications to the millions of App Store users",
        "Understand the basics of the Swift Language"
      ],
      "course_content": {
        "Introduction What We Will Create": [
          "Introduction What We Will Create"
        ],
        "Understanding and Getting All Setup": [
          "Download and Install Xcode",
          "Purchasing a Developer Licence",
          "Create, Download and Install Certificates",
          "Project Types",
          "Creating an App ID",
          "What Are Classes?",
          "Using the Interface Builder",
          "Building on the IOS Simulator",
          "Building to a Device"
        ],
        "Getting Started": [
          "Project Source Code",
          "Resources Files",
          "Creating Your Project",
          "Setting Up Your Home Page",
          "Adding Your Logo & Buttons",
          "Adding New Tab Views",
          "Adding a Custom Tab Image & Title",
          "Creating Custom Tab Colours",
          "Customising Buttons",
          "Adding Tab Jump Actions",
          "Adding a Background Image",
          "Making the View Fit All Screens"
        ],
        "Displaying Your Services": [
          "Services Showcase",
          "Creating the Services Table View",
          "Creating Custom Cells",
          "Adding Table View Background Image",
          "Displaying Detail Services",
          "Customising Detail Services",
          "Adding Background Image"
        ],
        "Showcasing Your Portfolio": [
          "Portfolio Showcase",
          "Creating a Portfolio",
          "Customising Image Cells",
          "Adding a Background Image",
          "Displaying Detailed Images",
          "Adding Social Sharing",
          "Customising Detail View",
          "Adding a Detail Background Image"
        ],
        "Adding an About Us": [
          "About Us Showcase",
          "Setting Up the View",
          "Adding Your Logo & Infomation",
          "Adding Quick Link Buttons",
          "Customising The View",
          "Adding a Background Image"
        ],
        "Let Them Contact You": [
          "Contact Us Showcase",
          "Implementing a Map View",
          "Customising the View",
          "Get Directions",
          "Enable Them to Call Us",
          "Creating a Contact Form",
          "Completing the Contact Form",
          "Customising The Contact Form",
          "Adding a Background Image"
        ],
        "Displaying Social Links": [
          "Social Links Showcase",
          "Creating a Social Table View",
          "Customising Table Cells",
          "Adding Table View Background Image",
          "Pushing to a Detail View",
          "Displaying Web Links",
          "Adding Web View Controls"
        ],
        "Making the App Universal": [
          "Setting Up the App for Universal Use",
          "Finalising the Home View",
          "Finalising the Services",
          "Finalising the Portfolio",
          "Finalising the About Us",
          "Finalising the Contact Us",
          "Finalising the Social Links"
        ],
        "Final Touches": [
          "Adding App Icons",
          "Displaying the App Name",
          "Adding Launch Screens"
        ]
      },
      "requirements": [
        "You will need a mac computer",
        "You will need Xcode"
      ],
      "description": "Do you want to create your own IOS application for your business or company but not sure where to start? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is your course!\nThis complete guide to creating your own business app will teach you everything you need to know to build a full featured application showcasing your business or company, Carefully structured in a step by step guide you will learn to create from the ground up an essential iOS app for needs.\nReach millions of new users and customers on the App Store by creating a easy way to view and access the services you provide as a business or company and stream line a simple to of allowing them to contact you directly from the app.\nEvery business needs an app just like every business needs a website, don't get left behind and move with the times and be the first to convert your business or company to the mobile age and reach new customers from around the world.\nWhat We Will Cover:\nUnderstanding Xcode, Interface Builder, Simulator and Project TypeS\nPerfectly Themed Landing Page\nStructured Services with Detail Views\nUnique Gallery with Social Sharing Options\nCustom About Us\nInteractive Map\nBuilt-in Email and Phone Contact Options\nIntegrated Social Sites\nApp Store Submission and Update Support",
      "target_audience": [
        "This course us suited to developers with no experience"
      ]
    },
    {
      "title": "iOS MapKit in Swift",
      "url": "https://www.udemy.com/course/ios-mapkit-in-swift/",
      "bio": "Building iOS map application using MapKit in Swift",
      "objectives": [
        "Developing map application using iOS MapKit framework in Swift",
        "Setting up different types of map annotations on the map",
        "Performing fast search with completion suggestion"
      ],
      "course_content": {
        "Setup": [
          "Welcome and Course Structure",
          "Location Authorization",
          "Further Reading"
        ],
        "Map View": [
          "User Location",
          "Center to User Location",
          "Compass",
          "Map Style"
        ],
        "Search and Annotation": [
          "Search View",
          "Search Service and Points of Interest (POI)",
          "Point Annotation",
          "Region Pan Search",
          "Free Text Search"
        ],
        "Custom Annotation": [
          "Marker Annotation and Callout",
          "Custom Marker with MKAnnotationView",
          "Custom Marker with MKMarkerAnnotationView",
          "Cluster Annotation",
          "Reverse Geocode"
        ],
        "Directions and Routes": [
          "Direction View",
          "Getting Routes",
          "Render Routes",
          "Route Picker",
          "Route Advisory",
          "Navigate to Apple Maps"
        ],
        "Where to go from here": [
          "Congrats and Bonus"
        ]
      },
      "requirements": [
        "Basic iOS development in Swift",
        "Xcode 10 and above"
      ],
      "description": "MapKit has been one of the most used frameworks in iOS development. The usage varies greatly from things like\nProvide business search or address search\nDisplay points of interests\nShow user location\nProvide directions, routes or even navigation.\nWe are going to review some of the most common features within this Map Kit framework. Few highlights of what we will be covering on this course:\nApply different map style to our map\nGet the user location and how to center the map region to current user location\nSearch completer and highlighter\nDraw custom annotation and callout\nPerform annotation clustering on adjacent annotations\nGet direction from users location to their destination\nDraw route ribbon into map\nSelect a route that best fits users needs\nInitiate driving navigation in integration with Apple Maps\nPerform reverse geocoding\nBy the time you are done with this course you will be comfortable and confident in integrating MapKit framework into your app.  I hope this course will challenge you and I look forward to seeing you in this course.",
      "target_audience": [
        "Swift developer beginner to intermediate level"
      ]
    },
    {
      "title": "Ultimate iOS Bootcamp: Master Swift SwiftUI App THE HARD WAY",
      "url": "https://www.udemy.com/course/ultimate-ios-bootcamp/",
      "bio": "Master Swift & SwiftUI with real-world projects, coding challenges, and expert guidance to build pro iOS apps",
      "objectives": [
        "Develop iOS Applications: Build fully functional iOS apps from scratch using Swift and SwiftUI, adhering to best practices in mobile app development",
        "Implement Advanced Features: Integrate complex functionalities such as data persistence, networking, and user authentication to enhance app performance and user",
        "Design User Interfaces: Create intuitive and responsive user interfaces with SwiftUI, ensuring a seamless user experience across various iOS devices",
        "Deploy Apps to the App Store: Navigate the app submission process, including code signing, provisioning, and complying with Apple's App Store guidelines"
      ],
      "course_content": {
        "Getting started": [
          "Intro of this course and me",
          "Overview of the course content",
          "About Q & A",
          "How to Download Source Code for Each Stage?",
          "(Update) Deep Dive + Mini Projects Extra SECTIONS",
          "(Update)Next Frontier Extra SECTIONS",
          "(Updating) Extra SectionsHidden Gems-Finding Niche Markets in Everyday Life",
          "Quick Laugh-Deep Dive-When AI is Laggy",
          "5 reasons this bootcamp matters in age of AI 1 understanding the concepts",
          "5 reasons this bootcamp matters in age of AI 2 Navigating AI Limitations",
          "5 reasons this bootcamp matters in age of AI 3 Code Quality and Security",
          "Quick Laugh-Deep Dive-New CTO is an \"AI Programmer\"?!",
          "5 reasons this bootcamp matters in age of AI 4 Enhancing Problem-Solving Skil",
          "5 reasons this bootcamp matters in age of AI 5 Staying Competitive in the Job"
        ],
        "New Update ! -WWDC 25": [
          "WWDC25-1-Intro"
        ],
        "The Ultimate iOS Development Boot Camp – Constantly Evolving!": [
          "The Ultimate iOS Development Boot Camp – Constantly Evolving!"
        ],
        "BOUNUS Lecture: Mastering Time and Focus": [
          "The Pomodoro Method - Mastering Time and Focus"
        ],
        "Extra Lecture: Don't Rely Too Much on AI While Learning": [
          "Quick Laugh-Deep Dive-Vibe Coder",
          "My thoughts on using AI during the programming learning phase."
        ],
        "Introduction to iOS Development (Updating)": [
          "Gear Up! Hardware Requirements",
          "Gear Up Tool Requirements 1 Xcode",
          "Gear Up Tool Requirements 2 Xcode git and command tools",
          "Gear Up Tool Requirements 3 register Apple ID but don't join the dev program yet"
        ],
        "Swift Programming Fundamentals-1-1-Variable-String": [
          "Active Learning",
          "Beyond the Code: Be Ready to Fail",
          "Variables",
          "[Resources] Download Source Code for This Stage",
          "Variables Quiz",
          "Variables Quiz",
          "[Resources] Quiz Source Code",
          "[Resources] Download Source Code for This Stage",
          "Variables Quiz Answer-String interpolation",
          "Variables Quiz Answer-String concatenation",
          "Type Annotation Constant and Variable",
          "Type Annotation Constant and Variable",
          "[Resources] Quiz Source Code",
          "Multiline String Quiz",
          "[Resources] Download Source Code for This Stage",
          "Multiline String Answer",
          "Multiline String Quiz 2",
          "Multiline String Quiz 2 Answer and Escape the escape",
          "Swift 5 New Raw String Literals",
          "Underscores in string",
          "[Resources] Download Source Code for This Stage"
        ],
        "Swift Programming Fundamentals-1-2-Computer Science 101": [
          "Demystify Computer",
          "Pub Example-CPU-RAM-SSD-Input-Output",
          "CPU-Registers-RAM-Math Unit",
          "Quick Feel of Our Swift SmallComputer REPL",
          "What is REPL?",
          "How to Read Code?",
          "[Resources] Download Source Code for This Stage"
        ],
        "Swift Programming Fundamentals-1-3-Arithmetic Operations PART 1": [
          "Arithmetic Operations-Add",
          "Assignment-why the math don't work?",
          "Assignment answer and intro of datatype",
          "[Resources] Download Source Code for This Stage"
        ],
        "Swift Programming Fundamentals-1-4-Data Type PART 1": [
          "First Var and Let- Constant and Variable",
          "Have full control-Data Type-Int Double and Float PART 1",
          "Have full control-Data Type-Int Double and Float PART 2",
          "Boolean(Bool) true and false as s switch",
          "Datatype Characters and Yes Emoji!",
          "What is emoji anyway? unicode!",
          "[Resources] Download Source Code for This Stage"
        ]
      },
      "requirements": [
        "it's recommended that learners have: Basic Programming Knowledge: Familiarity with fundamental programming concepts such as variables, control structures (like loops and conditionals), and data types. Experience with object-oriented programming languages such as Java, C++, or Python is beneficial. Access to a Mac Computer: Since iOS development requires Xcode, which is exclusive to macOS, having access to a Mac is essential. This includes MacBooks or iMacs capable of running the latest version of Xcode. Eagerness to Learn: A proactive attitude and willingness to tackle challenges will greatly enhance your learning experience. If you're new to programming, don't fret! This course is designed to guide beginners through the essentials of iOS development, making it accessible even if you're starting from scratch."
      ],
      "description": "Take your iOS development skills to the next level with the \"Ultimate iOS Bootcamp: Master Swift & SwiftUI the Hard Way.\" This immersive, no-nonsense course is designed for ambitious learners who want to master the art of creating professional-grade iOS apps.\nWhat You’ll Learn:\nCore Swift programming concepts to build a strong foundation for app development.\nDeep dive into SwiftUI to craft responsive and dynamic user interfaces that captivate users.\nReal-world development techniques for building robust, scalable iOS apps.\nApp Store submission process to launch your own apps with confidence and professionalism.\nThis course emphasizes practical, hands-on experience. You’ll tackle challenging projects, solve real-world problems, and gain insights into the latest industry best practices. By the end of the course, you'll have the skills and confidence to create apps that stand out in a competitive marketplace.\nWhether you’re a beginner eager to break into iOS development or an experienced developer aiming to refine your skills, this bootcamp offers everything you need to succeed. You’ll learn how to optimize performance, debug like a pro, and implement cutting-edge features.\nJoin us to transform your coding skills into mastery and create apps that leave a lasting impact. Elevate your career in tech today with the Ultimate iOS Bootcamp!",
      "target_audience": [
        "Aspiring iOS App Developers: Individuals keen to dive into iOS development, aiming to build robust applications for iPhones and iPads.",
        "Software Developers Transitioning to iOS: Experienced programmers looking to expand their skill set by mastering Swift and SwiftUI for iOS app development.",
        "Tech Enthusiasts and Entrepreneurs: Tech-savvy individuals and entrepreneurs eager to bring their app ideas to life on the iOS platform.",
        "Computer Science Students: Students seeking practical experience in mobile app development to enhance their academic learning and career prospects."
      ]
    },
    {
      "title": "Master the Dart Language with Null Safety- For Beginners",
      "url": "https://www.udemy.com/course/master-the-dart-language-for-beginners/",
      "bio": "Understand the core concepts of dart which are required for flutter development",
      "objectives": [
        "Dart Programming Language",
        "Basic Concepts required for Flutter",
        "Map",
        "Arrays",
        "Functions",
        "Variables",
        "Looping Statements",
        "Conditional Statements",
        "Object Orient Programming",
        "Classes & Objects",
        "Inheritance",
        "Constructors",
        "Null Safety"
      ],
      "course_content": {
        "Introduction": [
          "Author Introduction"
        ],
        "Let's Dive into Dart": [
          "Dart & Dartpad"
        ],
        "Strings & Constants": [
          "Understanding String & String interpolation",
          "Final & Const Keyword"
        ],
        "Conditional Statement": [
          "IF ELSE statement"
        ],
        "Collections": [
          "Lists",
          "Maps"
        ],
        "Looping Statements": [
          "For Loop",
          "While Loop"
        ],
        "Understanding Functions": [
          "Functions Part 1",
          "Functions Part 2"
        ],
        "Types of Arguments": [
          "Arguments / Parameters"
        ],
        "Object Oriented Programming": [
          "Class & Objects",
          "Constructor",
          "Generic type & Private Variables",
          "Inheritance"
        ],
        "Null Safety Concept": [
          "Introduction to Null Safety",
          "Null-able keyword (?)",
          "Required keyword",
          "Exclamation Keyword (!)",
          "Late keyword"
        ]
      },
      "requirements": [
        "Just a computer and an internet connection",
        "No coding experience needed",
        "Basic computer skills",
        "Beginner Friendly Course"
      ],
      "description": "Learn Dart and become an expert with this interactive course. Dart is a clean, simple, class-based object-oriented language.\nHowever, you can’t have a conversation about Dart without mentioning Flutter. Flutter is Google’s mobile UI framework used for crafting high-quality native interfaces on iOS and Android. Flutter applications are written using the Dart programming language, which has helped make Dart a beloved language by the developer community. Before you can start fluttering out applications using Flutter, you need to learn Dart. This course will help you learn the fundamentals of Dart, and get you started on your journey to learning Flutter. Start learning today.\nThe Course has been updated after the release of Flutter 2.0 which brought the concept of Null safety in dart.\nIn this course you'll learn:\nWorking with DartPad\nExploring the first Dart application\nBuilt-in Data Types and variable declarations\nConditional Statements\nLoops or Iterators\nFunctions and Methods\nObject Oriented concepts\nInheritance\nConstructors\nDart Collection: List and Map\nArguments and its types\nNull Safety Concepts\nSummary\n\n\n\n\nWhat’s New in Flutter 2\nIt broadened Flutter from a mobile framework to a portable framework, unleashing your apps to run on a wide variety of different platforms with little or no change.\nEvery app gets a free upgrade with Flutter 2 and they can now grow to target desktop and web.",
      "target_audience": [
        "Beginners who want to learn Dart Programming",
        "Developers who want to learn Mobile Application Development",
        "Students who want to learn the most in demand programming language",
        "Anyone who wants to use Dart for existing and new Flutter Apps"
      ]
    },
    {
      "title": "React Native : Build Native Mobile Applications",
      "url": "https://www.udemy.com/course/react-native-course/",
      "bio": "Build Native Mobile Applications for Android & iOS using JavaScript & React",
      "objectives": [
        "Develop cool native mobile applications using React Native",
        "Understand the working of a react-native application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing React Native - Windows",
          "Installing React Native - Mac",
          "Installing React Native - Linux"
        ],
        "React Native Fundamentals": [
          "Creating Sample Android Application and Running it on Windows",
          "Traversing the Application structure",
          "Creating Sample iOS Application and Running it on iPhone Emulator",
          "Understanding Components",
          "Creating and Rendering our Component",
          "Adding Style to our component & Understanding JustifyContent",
          "Understanding AlignItems",
          "Creating Nested Components",
          "Passing Data to Components - Exploring Properties",
          "Introduction to Lists - Using reusable components",
          "Selective Styling",
          "Writing the code the ES6 way",
          "Comparing React.CreateClass and React.Component"
        ],
        "Exploring Style and Resolution": [
          "Introduction to Flexbox",
          "Understanding the View Layout - Flexbox Model - Positioning",
          "Understanding the View Layout - Flexbox Model - Resizing",
          "Working with StyleSheets",
          "Inline Styles",
          "Understanding Resolution"
        ],
        "Events": [
          "Handling Events"
        ],
        "Application - I - Understand Flexbox,Events & States": [
          "Creating Calculator application",
          "Design our Calculator - I",
          "Designing our Calculator - II",
          "Designing our Calculator - III",
          "Developing our Calculator - Handling Events",
          "Developing our Calculator - Understanding States"
        ],
        "Application - II - Understanding Client-Server Communication": [
          "Introduction",
          "Application Preview",
          "React Flickr - Part 1",
          "React Flickr - Part 2",
          "React Flickr - Working with Fetch API",
          "React Flickr - Fetch API usage",
          "React Flickr - Photo Component",
          "React Flickr - Main Application Screen",
          "React Flickr - Designing the Application"
        ],
        "Creating A Notes Taker Application - Working with Firebase": [
          "ToDo Application Introduction",
          "Creating the Todo Application Project",
          "Working with Navigation",
          "Using States",
          "Using Events",
          "Using Fetch API",
          "Creating User Profile",
          "Handling Errors",
          "Using Image Component",
          "Working with Firebase",
          "Exploring Listview",
          "Creating Notes Component"
        ],
        "Debugging": [
          "Debugging React-Native Applications"
        ],
        "Conclusion and Code Download": [
          "Conclusion and Code Download"
        ]
      },
      "requirements": [
        "Basics of JavaScript,HTML,CSS"
      ],
      "description": "Learn the fundamentals of React-Native to build cross platform mobile applications\nReact Native allows you to build native iOS and Android applications in JavaScript and React.js.\n\nEven if you are a novice to mobile development but if you have expertise in JavaScript,html and CSS you will be able to develop cool applications using react-native.\nWe will be starting with the basics like what is react-native all about, how we can install it on various operating systems out there and then learning how a react-native application works\nWe will also be exploring many components which are used on a day to day basis to develop react-native mobile applications like\nViews\nText\nTextInput\nImage\nTouchableHighlight\nActivityIndicator\nListView\nWe will also be covering how to debug react-native applications and how to launch it on android emulator\nDuring this course we will be developing three applications\nCalculator\nFlick Image Viewer\nTodo Application\nBy developing these application we will learn many core concepts of react-native like how to send and receive data from server.\n\nWe will also introduce you to firebase which is a Database As a Service using this we will see how we can store data in a database\nSo come on join in and let's start learning React-Native",
      "target_audience": [
        "Those who want to work on latest web technologies",
        "Those who are into web development",
        "Those who want to learn React-Native",
        "Web Architects",
        "Web Designers"
      ]
    },
    {
      "title": "Build Real World ECommerce App with .NET MAUI",
      "url": "https://www.udemy.com/course/build-real-world-ecommerce-app-with-net-maui/",
      "bio": "Learn to make ECommerce App with .NET MAUI From Beginning to End",
      "objectives": [
        "Make ECommerce App with .NET MAUI",
        "Work as a freelance .NET MAUI developer",
        "Create your first .NET MAUI Real World Application",
        "Build fully-fledged apps for your startup or business",
        "Deploy Rest Api's to Microsoft Azure",
        "Consume Restful api's in .NET MAUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Overview",
          "Prerequisites",
          "Installation Guide"
        ],
        "Configure Application Backend": [
          "How to get Api's ?",
          "Create Azure Web App",
          "Create Azure MSSQL Database",
          "Publish Rest Api's to Azure"
        ],
        "Test Rest Api Endpoints": [
          "Api Documentation",
          "Test Users Endpoints",
          "Test Categories & Products Endpoint",
          "Test ShoppingCartItems Endpoints",
          "Test Orders Endpoints"
        ],
        "Getting Started with .NET MAUI Project": [
          "Project Overview",
          "Create a new Project",
          "Import Assets inside MAUI Project"
        ],
        "Create Model Classes": [
          "Create Model Classes For Users & Categories Section",
          "Create Model Classes For Products & ShoppingCart Section",
          "Create Model Classes For Orders Section"
        ],
        "Create Service Layer": [
          "Register User Method",
          "Static Class & Static Methods",
          "Login Method",
          "AppSettings Class",
          "Get User Profile Image",
          "Upload User Image",
          "Service Class Method For Categories & Products",
          "Service Class Methods For ShoppingCartItems",
          "Service Class Methods For Orders"
        ],
        "Signup & Login Page": [
          "Implement Signup Page",
          "Implement Login Page",
          "Use Shell Tab Pages",
          "One time login with access token"
        ],
        "HomePage": [
          "Implement Home Page",
          "Display Categories Data",
          "Display Best Selling & Trending Products"
        ],
        "Products List Page": [
          "Collection View Navigation",
          "Display Products List Data"
        ],
        "Product Detail Page": [
          "Collection view Navigation to Detail Page",
          "Display Product Detail Data",
          "Increase & Decrease Quantity",
          "Implement Add To Cart Functionality",
          "Trending & Best Selling Products Navigation"
        ]
      },
      "requirements": [
        "You should be familiar with C# , Xamarin Forms or .NET MAUI.",
        "At least 3-6 months experience with Xamarin Forms / .NET MAUI and XAML",
        "Visual Studio 2022 with windows Or Mac Edition whatever suits you.",
        "Postman Api Testing Tool"
      ],
      "description": "Welcome to the Real World ECommerce App Development course with .NET MAUI.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the Xamarin University Most Valuable Professional and in this course I'll explain you every single aspect of real world application in .NET MAUI. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in .NET MAUI.\n\nThis courses teaches you how to code using .NET MAUI and build beautiful Android and iOS apps by using .NET MAUI.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with .NET MAUI\nDeploy Rest Api's to Microsoft Azure\nConsume Restful Api's.\nConsume Nuget's in .NET MAUI\nCreate a Complete Real World (ECommerce) Application in .NET MAUI From Scratch to End.\nHow to make asynchronous API calls, store and retrieve data from the api, and use the JSON format for server communication\nMake application user friendly\nWorking with Collection View and much more\n\n\n\n\nRemember...\nAfter this course you'll get all the .NET MAUI Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you.\nIn this course I've used the Microsoft Azure for Api Deployment which means you must have a Microsoft Azure Account to publish the web api's.\nSo what are you waiting for? Click the buy now button and join the Complete Real World ECommerce App Development Course with .NET MAUI.",
      "target_audience": [
        "If you've a 3 to 6 months .NET MAUI experience , then take this course.",
        "If you're already a Xamarin Developer and wants to build application with .NET MAUI then take this course.",
        "If you want to make a complete Real World Application from start to finish then take this course."
      ]
    },
    {
      "title": "Android App Development Course with Android 11 | Android",
      "url": "https://www.udemy.com/course/android-development-android-app-developer-course-with-pie/",
      "bio": "Mobile app development, build your android app, learn android development with android studio, become an android expert.",
      "objectives": [
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "You can enroll this course if you want to develop advanced Android Applications using web integrated, online database.",
        "You will be able to develop great large-scale, Web-integrated applications, not simple Android applications.",
        "You will develop 2 large-scale, web-integrated applications that use online databases.",
        "During the course the latest Android technologies and software methodologies are used",
        "In this Android course, we will cover very important topics such as fragments, architectural room database, notification, firebase realtime database.",
        "Sending Data Between Screens",
        "Fragments",
        "Fragment Operations",
        "Architectural Room Database",
        "SQLite Database",
        "Room Database",
        "Creating the Repository Component",
        "Adding New Data to the Database",
        "Deleting Data From Database",
        "Updating Data in the Database and much more",
        "android",
        "android development",
        "android app development",
        "android studio",
        "mobile development",
        "mobile app development",
        "app development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "Android 11"
      ],
      "course_content": {
        "Introduction to Android Development Course": [
          "What Will We Learn In This Android Development with Android 11 Course?",
          "Github Repo",
          "FAQ about Android, Android Development, Android App Development"
        ],
        "Sending Data Between Screens": [
          "Sending Data from Activity to Activity - Part 1",
          "Sending Data from Activity to Activity Part 2",
          "Sending Data from Activity to Fragment - Part 1",
          "Sending Data from Activity to Fragment Part 2",
          "Sending Data from Fragment to Activity - Part 1",
          "Sending Data from Fragment to Activity Part 2",
          "Sending Data from Fragment to Fragment - Part 1",
          "Sending Data from Fragment to Fragment Part 2",
          "quiz"
        ],
        "Fragment Operations in Android": [
          "Introduction to Fragment Topic",
          "General Information About Fragments",
          "Fragment Creation",
          "Replacing the Fragment in the Activity with Another Fragment",
          "Fragment Backstack",
          "Fragment Backstack Part 2",
          "List Fragment - Part 1",
          "List Fragment - Part 2",
          "List Fragment Part 3",
          "Dialog Fragment",
          "Dialog Fragment Part 2",
          "Android Quiz"
        ],
        "The Information Book": [
          "Introduction in Android",
          "Creating a New Project",
          "The Main Activity Design",
          "Creating the Model Class",
          "Creating the Objects from Model Class",
          "Creating the Adapter Class",
          "Creating the Activities",
          "Fragment-1",
          "Fragment-2",
          "Fragment-3",
          "Fragment-4",
          "The View Pager Adapter Class",
          "The Tab Layout Component",
          "Creating the Other Countries",
          "Creating the Other Fragments",
          "Creating the Fragments for the Other Categories",
          "Homework",
          "Quiz"
        ],
        "Architectural Room Database in Android App Development": [
          "What is the Database?",
          "SQLite Database",
          "Room Database",
          "Architectural Components",
          "Introducing Note-Taking Application",
          "Creating New Projects and Adding Required Libraries",
          "Creating Entity",
          "Creating Dao",
          "Creating Database",
          "Creating Repository",
          "Creating View Model",
          "User Interface Design",
          "Showing Data in the Database in RecyclerView",
          "Adding New Data to the Database",
          "Adding New Data to the Database Part 2",
          "Deleting Data From Database",
          "Updating the Data in the Database",
          "Updating the Data in the Database Part 2",
          "quiz"
        ],
        "Accessing the Features of Android Device": [
          "Sending an SMS Message",
          "Sending E-Mail",
          "Making a Call",
          "Converting Speech to Text",
          "Android App Development Quiz"
        ],
        "Notification in Android App": [
          "What is Notification?",
          "Local Notification",
          "Repeated Notifications",
          "Repeated Notifications Part 2",
          "Notification Procedures",
          "Notification Procedures Part 2",
          "Notification Procedures Part 3",
          "Push Notification",
          "quiz"
        ],
        "Android Firebase": [
          "Introduction to Firebase",
          "Creating a Firebase Database",
          "Firebase - Android Studio Integration",
          "Adding Real-Time Data to the Firebase Database",
          "Adding Real-Time Data to the Firebase Database Part 2",
          "Real-Time Data Extraction from Firebase Database to Application",
          "Authentication with Firebase Part 1",
          "Authentication with Firebase Part 2",
          "Authentication with Firebase Part 3",
          "Authentication with Firebase Part 4",
          "Authentication with Firebase Part 5",
          "Authentication with Firebase Part 6",
          "Phone Number Authentication in Firebase",
          "Phone Number Authentication in Firebase Part 2",
          "Push Notification in Firebase",
          "Firebase Storage Image Storage Part 1",
          "Firebase Storage Image Storage Part 2",
          "Firebase Storage Image Storage Part 3",
          "3"
        ],
        "Rest API and Retrofit Library in Android Development": [
          "Introduction to Retrofit Library",
          "Retrieving Data from Rest Api Using the Retrofit Library",
          "Retrieving Data from Rest Api Using the Retrofit Library Part 2",
          "Retrieving Data from Rest Api Using the Retrofit Library Part 3",
          "Showing Data in RecyclerView Pulled from Rest Api",
          "Showing Data in RecyclerView Pulled from Rest Api Part 2",
          "quiz"
        ],
        "Easy to Add Libraries in Android": [
          "Data Binding Library",
          "Data Binding Library Part 2",
          "Picasso Library",
          "Event Bus Library",
          "Event Bus Library Part 2",
          "Quiz"
        ]
      },
      "requirements": [
        "This Android course is based on Java programming language. If you have basic understanding on Java programming then it will be a fun to learn Android application development.",
        "If you have basic Android knowledge and want to learn the advanced levels of Android, this course is for you",
        "After completing this Android tutorial you will find yourself at a advanced level of expertise in Android programming.",
        "Basic understanding on Android",
        "Basic understanding on Android Studio",
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "No prior android 11 knowledge is required"
      ],
      "description": "Hi there,\nWelcome to Android App Development Course with Android 11 | Android course.\nMobile app development, build your android app, learn android development with android studio, become an android expert.\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Oak Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes” , you are at the right place!\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem. With millions of Android devices in use, and an incredible 500,000+ new Android devices activated daily, the popularity of Android applications is increasing exponentially - and with it, the demand for Android application developers is soaring.\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nChances are, you’ve heard of Android many times, and Do u want to be an android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\n\nIf you're interested in developing new and innovative applications for the world’s #1 mobile platform, this course is a perfect match for you.\nThis course is a mid-level android app development course which means we will not be starting this course from scratch.\nIn this course, we will use Java as the programming language. So you need to know the Java programming language beforehand.\nYou will also need to have basic android and android studio knowledge for this course.\n\nThis course will take help you to find a job as an Android Developer.  Because in this course you will learn the advanced topics with hands-on practices. Android Development is a challenging form of programming. However, the personal and financial rewards can be great. Keep in mind that the career of a programmer involves a lifetime of learning and that learning Android application development is just part of that lifelong journey.\nWith the information you learned in this course, you will be able to develop great large-scale, Web-integrated applications, not simple Android apps.\nIn this course, we will cover very important topics such as fragments, architectural room database, notification, firebase realtime database, retrofit library, and rest API usage.\n\nDuring the course, you will learn all topics practically. You will also develop 2 large-scale, web-integrated applications that use online databases.\n\nIn this Android course, you will learn\nSending Data Between Screens\nFragments\nFragment Operations\nArchitectural Room Database\nSQLite Database\nRoom Database\nCreating the Repository Component\nAdding New Data to the Database\nDeleting Data From Database\nUpdating Data in the Database and much more\nandroid app development\nmobile app development\nandroid\nandroid studio\nandroid development\nandroid 11\nandroid mobile app development\napp development\nandroid app\nandroid pie\nandroid 11 app development\nandroid fragment\noak academy\nandroid expert\nandroid app development course\nmobile app development android\nandroid mobile app\nandroid firebase\nappy pie\nandroid apps\nandroid course\nandroid mobile development\nandroid architecture\nandroid development course\nandroid app development with java\nandroid app development kotlin\nandroid app developer course with pie\nfirebase android\nandroid java\nmobile app development course\nandroid studio course\nandroid mobile\nmobie app\nandroid app development with android 11\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our content are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the Android App Development Course with Android 11 | Android course!",
      "target_audience": [
        "If you are planning a career as an Android Application Developer and want to find a job in software companies in this field, this course will be an excellent choice for you",
        "If you have basic Android knowledge and want to learn the advanced levels of Android, this course is for you.",
        "Anyone who wants to develop advanced Android Applications using web integrated, online database",
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Java programming language.",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Anyone who is planning job transformation and want to become a Kotlin developer",
        "Anyone who wants to become a computer programmer like android 11"
      ]
    },
    {
      "title": "React Native and JavaScript - Your Development Guide",
      "url": "https://www.udemy.com/course/react-native-and-javascript-your-development-guide/",
      "bio": "Learn fundamentals of React Native and JavaScript ( JS ) to build cross platform mobile application, javascript projects",
      "objectives": [
        "Javascript with react native set up our virtual environment",
        "Install ReactNative dependencies for MAC and Windows",
        "Run Android and IOS simulator for React Native",
        "JSX syntax and expressions in React",
        "See the content on the simulator in javascript and React Native",
        "Styling with React Native and flex-box rules",
        "Send an HTTP request to a remote API with React js",
        "Reach another app on the phone from the React Native app",
        "What are variables, why are they used in Javascript",
        "What is conditional statements (if else, switch case, ternary operator), how to use in javascript",
        "What is loops (for loops, while loops, continue and break statements), how to use them",
        "How to write Functions, what are the differences between Function Decleration and Function Expression",
        "How to create javascript Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create objects, how to update them, object methods",
        "What is DOM, how to manipulate DOM",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting making it very important language for web developer",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows.",
        "Javascript is also popular for building web services and backend infrastructure with Nodejs. React Native, Xamarin, Ionic, and NativeScript frameworks use Jav",
        "JavaScript has a variety of techniques for creating objects.",
        "AJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications.",
        "Learning React Native is a great avenue through which to gain experience developing mobile apps."
      ],
      "course_content": {
        "Introduction to Javascript with React, React Native": [
          "How to Get Help to mobile development?",
          "React Native Project Files and Course Documents",
          "FAQ About React Native and Javascript"
        ],
        "React Native Setup For Windows": [
          "React Native - Free Tools For Windows",
          "Windows Setup for React Native",
          "How To Start Emulator in Android Studio for React Native",
          "React Native Android Emulator Setup Checklist"
        ],
        "React Native Setup For OSX": [
          "Free Tools for IOS",
          "OSX Setup for React Native",
          "Start the Emulator in React Native",
          "MAC IOS Emulator Setup Checklist in Javascript"
        ],
        "React Native And JSX": [
          "How To Create An React App",
          "See Content on Emulator in React Native",
          "Why Do We Need React and React-Native?",
          "Es6 Syntax ( Let, Const, Var) in React Native",
          "React Native First Component",
          "How To Show Component on Device in React Native",
          "How to Build Our First React App",
          "How to Connect a Component To The Root Component",
          "Import A Component To Another Component in React Native",
          "quiz"
        ],
        "Styling For React Native": [
          "Styling with JSX",
          "Displaying Views",
          "Header Component’s Styling",
          "React Props",
          "How to Reuse Code With Props System",
          "quiz"
        ],
        "API Request With react Native": [
          "How To Show a List To The User",
          "The List Component",
          "Func Component vs Class Based Component"
        ],
        "LifeCycle Methods in React js and react native": [
          "When Do We Need Lifecycle Methods?",
          "LifeCycle Methods in React js and react native",
          "Making Request With Axios",
          "quiz"
        ],
        "State In Reactive Native": [
          "What Is State and How To Initial State?",
          "Using of State",
          "A Component’s Lifecycle With State",
          "List Component",
          "List Item Component",
          "Reusable Components",
          "Styled Component for List Items",
          "Usage of Props.Children",
          "Item Section",
          "Introduction to the Flexbox",
          "Section Header Component",
          "quiz"
        ],
        "Layout With Flexbox": [
          "How to Show An Image",
          "Scrollable Content",
          "User Interaction with ReactNative",
          "Event Handlers",
          "How to Open Another App (Browser)",
          "quiz"
        ],
        "JavaScript": [
          "Introduction to JavaScript",
          "Setup Visual Studio Code",
          "Adding js File",
          "quiz"
        ]
      },
      "requirements": [
        "No prior React and React Native knowledge",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don't need to be an mobile development expert",
        "Basic ES6 knowledge would be beneficial but not required",
        "Desire to learn React Native and JavaScript",
        "Willingness and Motivation to successfully complete the training",
        "Computer with access to the internet",
        "Desire to learn mobile development",
        "Desire to learn javascript",
        "Desire to learn react native",
        "Desire to learn React JS",
        "Desire to learn mobile development with react native, redux, hooks, context",
        "Desire to become a web developer with javascript full course",
        "Desire to learn mobile app development with complete javasvript and react native course,",
        "Desire to learn mobile development with javascript and react native",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to React Native and JavaScript - Your Development Guide course.\nLearn fundamentals of React Native and JavaScript ( JS ) to build cross platform mobile applications, javascript projects\nReact Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nJavaScript is the number one programming language for internet applications.\nBefore taking this course, you only need to have a basic knowledge of HTML and CSS. In our course, the basics of React Native and JavaScript are dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject. We will take you from beginner to advance level.  You will learn  React development and JavaScript step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of JavaScript.\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and iOS simulator on your MAC or Windows computer.\nLater on the course, we are going to learn the basics of React.  JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nUdemy instructors specialize in teaching the whole scope of JavaScript—beginner to advanced. Whether you’re interested in back-end development, or app and website building, Udemy has a JavaScript course for you.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nWe'll be creating nice-looking reusable components. So you will be able to use this reusable component on your own future projects.On\nIn this course, I explained all the complex topics in very detail but by making them simpler which I believe will help you a lot. I used some diagrams to tell some important topics and created a nice looking mobile application.\nAt the end of the course you will learn;\nBasics of React and React-Native libraries,\nHow to send an HTTP request from a mobile application,\nHow to use the flex-box system,\nHow to create reusable components,\nTo reach another app on the device from our app and\nCreating your own mobile app is going to be clear for you.\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nMobile app development,\nMobile game development,\nMobile application development,\nMobile development,\nUnity mobile game development,\nCross paltform mobile development,\nHybrid mobile app development,\nAndroid mobile app development\nJavascript\nJava script\nHtml CSS javascript\nJavascript projects\nJs\nModern javascript\nWeb development\nReact\nNode.js\nReact native\nReact\nFlutter\nFlutter ui\nGoogle flutter\nDart (programming language)\nReact native\nReactnative\nReact\nReact native redux\nMobile app development\nReact\nMobile development\nRedux framework\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn React Native and JavaScript\nThis course starts with the very basics. First, you will learn some terminology. Then the show will start and you will learn everything with hands-on practice.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and JavaScript.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nReact Native and JavaScript - Your Development Guide\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Programmers who want to learn React and React-Native and JavaScript",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "People who want to become a web developer with javascript, react, react native, redux, hooks, context",
        "People who want to become a mobile developer with javascript",
        "People who want to learn mobile development with javascript and react native",
        "People who want to learn react native with redux, hooks and context"
      ]
    },
    {
      "title": "Learn to Build Mobile Apps from Scratch",
      "url": "https://www.udemy.com/course/learn-to-build-mobile-apps-from-scratch/",
      "bio": "Master both PhoneGap and IntelXDK APIs to build mobile apps for Android, iOS and Windows Phone",
      "objectives": [
        "Develop apps for multiple platforms like android and ios",
        "Learn to use PhoneGap API",
        "Learn the use of IntelXDK",
        "Use Web Technologies like JQuery, JavaScript, CSS and HTML5 to develop Apps"
      ],
      "course_content": {
        "Intro To Mobile Internet": [
          "Introduction",
          "Mobile Web Overview",
          "Web Apps vs Native Apps",
          "Mobile HTML & CSS",
          "Mobile JavaScript & JQueryLocation Features"
        ],
        "Intro to PhoneGap": [
          "PhoneGap Overview",
          "Android SDK & Eclipse",
          "PhoneGap Build & Github",
          "Your First PhoneGap App",
          "Device Installation"
        ],
        "Location Features": [
          "Accelerometer",
          "Geolocation",
          "GeoLocation Map"
        ],
        "Camera, Capture & Contacts": [
          "Camera",
          "Capture Image",
          "Capture Audio",
          "Contacts"
        ],
        "File & Storage": [
          "Downloading a File",
          "Create & Write To File",
          "JQM & Read Directory",
          "Local Storage",
          "Web SQL Database"
        ],
        "Intro to Intel XDK": [
          "Intel XDK Overview",
          "Install Intel XDK",
          "App Starter & Framework"
        ],
        "AppMobi API": [
          "GeoLocation API",
          "Camera API",
          "Accelerometer API",
          "Contacts API"
        ],
        "Finishing Up": [
          "Testing with App Lab",
          "App Debugger",
          "Submitting to Appstores",
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "PC or Mac with internet connection"
      ],
      "description": "Learn how to master various web technologies to create mobile apps that run on all of the major platforms - Android, iOS and Windows Phone - within this great course. Throughout this course you will learn to create, test, debug, and publish your apps, as we cover a variety of web technologies and app development frameworks including:\nJQuery\nJavascript\nCSS\nHTML5\nPhoneGap\nIntel XDK\nAppMobi API\nBuild Apps that Can Reach the World\nWeb technologies provide a big advantage in terms of portability and you will be able to reach multiple platforms using single code base. In this quick, step-by-step tutorial you will learn to use various APIs and integrate them in your apps.\nContent and Overview\nThrough this course of 33 lectures and 7+ hours of content, you’ll learn all of the web technology fundamentals and establish a strong knowledge of mobile app development and API integration to make your apps even more robust. By the end of this course, you will be able to produce quality apps that you’ll be able to release across multiple platforms, including the App Store, Google Play Store, and Windows Phone Store.",
      "target_audience": [
        "Anyone who wants to create apps for mobiles and smartphones"
      ]
    },
    {
      "title": "React Native Fitness Application with Firebase",
      "url": "https://www.udemy.com/course/react-native-fitness-application-with-firebase/",
      "bio": "Learn React Native, Firebase, Bottom Tabs, Tailwind CSS, Expo, Custom fonts, React Navigation, Audio, Apk generation",
      "objectives": [
        "React Native",
        "Expo",
        "Firebase",
        "React Navigation",
        "Bottom Tabs",
        "Tailwind CSS",
        "FlashList",
        "Integrating sound/music",
        "Custom Fonts",
        "Git",
        "Expo Dev Builds",
        "APK Generation"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is needed",
        "Having web programming knowledge would be an advantage"
      ],
      "description": "Get ready to embark on an exhilarating journey to master the art of mobile app development with our cutting-edge course, 'React Native Fitness Application with Firebase.'\nAre you passionate about fitness and technology? This course is designed for you! With us, you'll learn how to create your very own fitness app from scratch using the latest tools and technologies that are in high demand in the industry.\nHere's what you'll gain expertise in:\nReact Native: Unlock the power of building cross-platform apps with one codebase. React Native is the go-to framework for crafting engaging and high-performance mobile applications.\nFirebase: Dive deep into Firebase, Google's comprehensive suite of cloud services for app development. You'll learn how to handle real-time data, authentication, and storage, empowering your app with dynamic and interactive features.\nBottom Tabs: Discover the secrets of creating an intuitive user interface with bottom tabs, enhancing user navigation and overall app experience.\nTailwind CSS: Elevate your app's aesthetics with Tailwind CSS. This utility-first CSS framework will make styling your app a breeze, ensuring it looks stunning and responsive on every device.\nExpo: Embrace the benefits of Expo, the open-source framework that simplifies React Native app development, saving you time and effort.\nCustom Fonts: Personalize your app by integrating custom fonts, giving it a unique and eye-catching design.\nReact Navigation: Master the art of navigation within your app, ensuring smooth transitions between screens and a delightful user journey.\nAudio: Explore audio integration to your fitness app.\nAPK Generation: Learn how to generate Android APK files, so you can share your app with the world and showcase your skills.\nThis course is not just about coding; it's about unleashing your creativity and passion for fitness through technology. By the end of this course, you'll have a fully functional fitness app that you can proudly add to your portfolio.\nEnroll today and bring your fitness app idea to life with 'React Native Fitness Application with Firebase.' Join us and start your journey toward becoming a sought-after app developer. Don't wait; your future in mobile app development begins now!",
      "target_audience": [
        "Anybody who would want to learn mobile development both for Ios and Android with React Native",
        "People that wish to take their skills to the next level using practical projects."
      ]
    },
    {
      "title": "React Native for Mobile Developers",
      "url": "https://www.udemy.com/course/react-for-mobile-devs/",
      "bio": "Crash course on how to develop hybrid mobile apps with React Native with no prior web technology experience",
      "objectives": [
        "Develop native mobile apps using React Native",
        "Gain a deeper understanding of JavaScript and React philosophy"
      ],
      "course_content": {},
      "requirements": [
        "Although React Native allows to develop native iOS apps, the student still needs to have access to an OSX machine to run the simulator, however, running the Android simulator shouldn't be a problem and the student can follow the same exact source code and material in this course no problems and zero changes."
      ],
      "description": "React Native for Mobile Developers provides a through introduction to hybrid mobile app development using the wildly popular React Native framework. With only 2.5 hours of engaging video lectures and all the project files used in the videos, this course is designed to take students with no experience in React, web technologies, or even JavaScript to accomplished and COMPLETE mobile app developers with NO prior web technology experience.\nWhy React Native? React Native provides a set of components and extensions that allows you to easily write native iOS and Android applications using the latest ES6 JavaScript. Its syntax is easy to read and understand. The philosophy behind React Native is not the same as Cordova or Sencha Touch. Although you still write JavaScript with React Native, the components you define will end up rendering as native platform widgets. If you are familiar with React for the web, you’ll feel right at home. And if you have written apps in Java or Objective-C, you’ll immediately recognise many of React Native’s components. In less than 2.5 hours, you will have the necessary skills to understand and write native hybrid mobile apps with React Native.\nThis course takes a very structured approach of teaching React Native. Everything from \"Hello World\" to production-level code is covered. Students acquire skills rapidly through a deep-dive in the world of React Native and JavaScript ES6 development.\nSome key features of this course are:\n11 lectures and 2.5+ hours of video content\nLearn React Native philosophy from writing your first program to say \"Hello World\" to building production-level hybrid apps the way Facebook does it while building multiple sample projects along the way\nWork with the latest and greatest JavaScript ES6 standardisation when developing hybrid mobile apps.\nReflux design pattern to allow uni-directional dataflow.\nHow to persist your app's data using AsyncStorage\nAsynchronous operations with JavaScript Promises\nCreating Responsive UI Designs with FlexBox Styling Framework\nmuch, much more!\nBy the end of this course, you will:\nLearn a new framework and increase your value\nUnderstand and transfer knowledge from Android and iOS development to Facebook's React Native\nBecome a Complete Mobile App Developer\nDevelop multiple sample projects to truly understand React Native through practical use.\nWork with production-level code in chapter 2 and understand how professionals in the industry are using React Native to build hybrid mobile apps.",
      "target_audience": [
        "This mobile development course is meant for native mobile developers (Android/iOS) who are not familiar with React web technology and/or newbies to mobile development with no prior experience in native development. Basic programming knowledge is required to understand the concepts introduced in this course."
      ]
    },
    {
      "title": "Learn Dart & Flutter for Mobile Apps | Create a Shopping App",
      "url": "https://www.udemy.com/course/master-the-basics-of-flutter-learn-dart-flutter/",
      "bio": "Learn Dart & Flutter for creating Mobile Apps - Beginners Tutorial",
      "objectives": [
        "Learn to use Dart",
        "Learn to create mobile apps with flutter",
        "Learn the Dart and flutter basics"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming Knowledge"
      ],
      "description": "Welcome to this course on Flutter Tutorials for beginners. Flutter is an open-source UI software development kit created by Google. Flutter is SDK that makes creating high-performing, modern and good looking apps. Flutter is easy and Works for both Android and iOS. Flutter is An open-source toolkit, developed by Google. Build Native Mobile Apps with Flutter.\nIn this course we will start with the basics of DART (PROGRAMMING LANGUAGE). Dart is an open-source, scalable programming language, with robust libraries and runtimes, for building web, server, and mobile apps. It is used to build web, server, desktop, and mobile applications. Dart is an object-oriented language which can optionally trans compile into JavaScript.\nThen we will see the basics of creating flutter apps.  First we will start with Learning the Basics of Dart programming language like Types and casting in Dart, Null-aware Operators, Loops, Collections, Dart Sets, Class and Objects in Dart, enums, Dart Exception Handling, Future, async and await\nWe will discuss Built a Task Manager App Using Flutter Framework. Create A Cross-Platform Mobile App In easy Steps Using Flutter. We will be building fully functional flutter app.\nAlso we will see how to build and deploy your Flutter App.\nSo what are you waiting for, Let's get started.",
      "target_audience": [
        "Students",
        "People looking to learn Dart or Flutter"
      ]
    },
    {
      "title": "Dart Essentials - From Novice to Proficient Developer",
      "url": "https://www.udemy.com/course/dart-essentials-from-novice-to-proficient-developer/",
      "bio": "Master Dart Programming: Learn Syntax, Functions, OOP, and Asynchronous Programming for Modern App Development",
      "objectives": [
        "Acquire a solid understanding of Dart’s fundamental syntax, including variables, data types, and control flow statements.",
        "Learn how to define and utilize functions effectively, handle exceptions, and implement robust error management strategies.",
        "Explore Dart’s object-oriented features, including classes, inheritance, and polymorphism.",
        "Discover Dart’s collection types like List, Set, and Map, and learn to manage data efficiently.",
        "Understand and implement coding best practices to ensure clean, readable, and high-performance Dart code."
      ],
      "course_content": {
        "Introduction": [
          "Software Requirements",
          "Installing Flutter",
          "Your First Flutter App",
          "Dart Overview",
          "Writing Your First Dart Program"
        ],
        "Variables": [
          "Hello World",
          "Variables In Dart",
          "Variable Rules",
          "Dynamic Types",
          "Final vs Var vs Const",
          "Mutable and Immutable Data",
          "Strings and String Interpolation"
        ],
        "Operators in Dart": [
          "Operators in Dart",
          "Logical Operators",
          "Comparison Operators"
        ],
        "Functions in Dart": [
          "Functions in Dart",
          "Function Types",
          "Arrow Functions",
          "Functions as Variables"
        ],
        "Conditions in Dart": [
          "Conditions in Dart",
          "Switch Expressions"
        ],
        "Loops": [
          "Dart Loops",
          "For Loops"
        ],
        "Records and Patterns": [
          "Records and Patterns"
        ],
        "Classes and Objects": [
          "Classes and Objects",
          "Dart Classes",
          "Dart Objects",
          "Dart Constructors"
        ],
        "Encapsulation": [
          "Encapsulation",
          "How to Encapsulate"
        ],
        "Inheritance": [
          "Inheritance"
        ]
      },
      "requirements": [
        "No Programming Experience need. You will learn all you need to know."
      ],
      "description": "Welcome to \"Dart Essentials: From Novice to Proficient Developer,\" your comprehensive guide to mastering Dart programming from the ground up. Whether you're a complete beginner or someone with some programming experience, this course is designed to take you beyond the basics, giving you the skills and confidence to write efficient and maintainable Dart code.\nCourse Overview:\nStarting with the essentials, you’ll build a solid foundation in Dart’s core syntax and constructs. You’ll learn how to write and execute simple programs, understand variables, data types, operators, and control flow statements, setting the stage for more complex concepts.\nAs you progress, you’ll delve into functions and error handling, gaining the ability to create reusable functions, manage parameters, return values, and handle errors effectively. These are critical skills for developing robust applications.\nObject-Oriented Programming (OOP) is another key focus of this course. You’ll explore Dart’s OOP features such as classes, objects, inheritance, and polymorphism. By the end of this module, you’ll be able to design and implement modular, scalable applications with confidence.\nIn addition, the course covers collections and asynchronous programming. You’ll work with Dart’s built-in collections like List, Set, and Map, learning how to manage data efficiently. You’ll also master asynchronous programming using Future and async/await, essential for handling tasks like file operations and network requests.\nFinally, the course emphasizes best practices for writing clean, efficient, and optimized code. You’ll learn coding conventions and performance optimization techniques, ensuring your codebase is both high-quality and maintainable.\nBy the end of this course, you’ll not only have a strong grasp of Dart fundamentals but also the proficiency to tackle more advanced topics and start building powerful applications using Dart and Flutter.",
      "target_audience": [
        "Aspiring Programmers: Beginners who have little to no prior experience in coding and want to build a strong foundation in Dart, which is essential for developing Flutter applications.",
        "Flutter Enthusiasts: Individuals interested in Flutter development who need to understand Dart, as it is the primary language used in Flutter. This course will prepare them for more advanced Flutter tutorials and projects.",
        "Programming Students: Students from coding bootcamps, computer science courses, or related fields who need to grasp the fundamentals of Dart to meet their curriculum requirements or enhance their programming skills.",
        "Career Changers: Professionals from other fields who are looking to switch to software development and need a comprehensive introduction to Dart to start building applications or enhance their programming portfolio.",
        "Developers of Other Languages: Programmers with experience in languages like JavaScript, Python, or Java who want to expand their skill set by learning Dart and applying their knowledge in new contexts, such as mobile app development with Flutter."
      ]
    },
    {
      "title": "Learn the Swift Programming Language Step by Step",
      "url": "https://www.udemy.com/course/learn-the-swift-programming-language-step-by-step/",
      "bio": "Learn the fundamentals of Apples new and intuitive programming language Swift!",
      "objectives": [
        "Understand the core concepts of the Swift Programming Language",
        "Over 28 Lectures and 2.5 Hours of Content!"
      ],
      "course_content": {
        "Welcome": [
          "Welcome"
        ],
        "Variables": [
          "Constants and Variables",
          "Different Types of Variables",
          "Integers",
          "Booleans",
          "Strings",
          "Doubles",
          "Optionals",
          "Basic Operators"
        ],
        "Collection Types": [
          "Different Collection Types",
          "Arrays",
          "Dictionaries",
          "Tuples"
        ],
        "Control Flow": [
          "Advanced Operators",
          "If, Else, Else If Statement",
          "For Loop",
          "For-In Loop",
          "While Loop",
          "Switch Statement"
        ],
        "Advanced Swift Concepts": [
          "Functions",
          "Enumerations - Enums",
          "Structures - Structs",
          "Closures",
          "Classes"
        ]
      },
      "requirements": [
        "A Mac",
        "Xcode - iOS SDK installed on Mac"
      ],
      "description": "Do you want to learn to develop apps for iPhone, Apple Watch, and Mac?\nGreat! you have come to the right place. To develop applications for these devices, you are going to have to understand the Swift programming language by Apple.\nThis course will help you understand all you need to know to program in the simplistic language Swift, and give you a boost to start your iOS and Mac OS X development career. This is a very simple and effective course on learning the Swift programming language.\nWho is this course made for?\nThis course is for anyone wanting to learn swift and having little to no programming experience, or an Objective-C developer who would like to understand and learn the Swift syntax.\nThroughout this course you will go from understanding basic programming terms such as Variables and Data Types to complex concepts such as Classes and Functions.\nCertificate of Completion\nAll Students who complete this course will receive a Free digital certificate of completion from Udemy.\nMoney Back Guaranteed\nIf in any way you are not satisfied with my course, feel free to request a refund!",
      "target_audience": [
        "People who strive to learn Swift with little or no programming experience",
        "People who know Objective-C and want to learn Swift"
      ]
    },
    {
      "title": "Data Governance Foundations",
      "url": "https://www.udemy.com/course/core-data-fundamentals-getting-started/",
      "bio": "Learn the fundamentals of Data Governance",
      "objectives": [
        "Learn the fundamentals of Data Governance",
        "Learn about creating a data governance program",
        "Why your organization may benefit from data governance",
        "How data governance is implemented",
        "Role of data governance in emerging technology",
        "Managing, monitoring, and measuring data governance efforts",
        "Data Governance Roles & Responsibilities",
        "Much more!"
      ],
      "course_content": {
        "Welcome": [
          "Getting Started"
        ],
        "Data Governance Foundations": [
          "Role of data",
          "Why we need data governance",
          "Data governance definition",
          "The principles of data governance",
          "Data governance focus areas",
          "Data Modeling",
          "Data governance for organizations"
        ],
        "Data Governance Deployment": [
          "Who owns the data",
          "Designing data governance processes",
          "The value of a data catalog",
          "Creating data governance policies",
          "Role of knowledge graphs",
          "Data governance in artificial intelligence",
          "Internet of Things IOT"
        ],
        "Manage Data Governance Program": [
          "Compliance, privacy, and security",
          "Managing and maintaining data governance",
          "Monitoring and measuring your program",
          "Chief data officer"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "No prerequisites needed to take this course"
      ],
      "description": "Data governance is a collection of processes, roles, policies, standards, and metrics that ensure the effective and efficient use of information in enabling an organization to achieve its goals. It establishes the processes and responsibilities that ensure the quality and security of the data used across a business or organization. Data governance defines who can take what action, upon what data, in what situations, using what methods.\nA well-crafted data governance strategy is fundamental for any organization that works with big data, and will explain how your business benefits from consistent, common processes and responsibilities.\nThis courses highlights the foundational elements of Data Governance, the role of data stewards, how to develop a Data Governance framework and operating model, how to structure policies and procedures, where Data Governance sits within the overall Data Management of an organization, and many other topics.\nDiscover why your organization may benefit from data governance, how it's implemented, and why it is essential in compliance and risk reduction efforts. We'll also get into the role of data governance in emerging technology areas such as knowledge graphs, artificial intelligence, and the Internet of Things. Finally, we'll go over ideas on how organizations should think about managing, monitoring, and measuring data governance efforts.\nBy the end of the course you’ll understand the core concepts of  Data Governance",
      "target_audience": [
        "Anyone interested in learning about data governance",
        "Data science"
      ]
    },
    {
      "title": "Android Dev Masterclass - Build 10 Apps - Java and Kotlin",
      "url": "https://www.udemy.com/course/complete-java-kotlin-android-beginner-to-expert/",
      "bio": "Learn professional Java and Kotlin coding! 20 Hours of Content, Build 5 Java apps and 5 Kotlin apps, 17 Coding Exercises",
      "objectives": [
        "Master Java and Kotlin programming hands-on",
        "Create 10 Android apps – 5 in Java and 5 in Kotlin",
        "Java Apps: Rick and Morty app, Calculator app, Flappy Bird app, Pokemon Quiz app, and Notes app",
        "Kotlin Apps: Harry Potter app, Marvel app, DC Comics app, Sonic app, and X-Men app",
        "Learn searching and sorting algorithms in Java and Kotlin",
        "Learn MVC, MVP, MVVM, and MVI Android App Architectures",
        "Implement all 23 Gang of Four Design Patterns in Java and Kotlin",
        "Master Android UI development with views and layouts",
        "Understand collections and data types in Java and Kotlin",
        "Get hands-on experience coding Project Euler problems to build your math and problem solving skills!",
        "Start from Zero and go to hero with this all in one, comprehensive Java, Kotlin, and Android course!",
        "Master working with Activities and Fragments in Android"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is Your Instructor?"
        ],
        "Setup and Install IntelliJ IDEA and Android Studio": [
          "Section Introduction",
          "What is IntelliJ IDEA?",
          "Downloading and Installing IntelliJ IDEA",
          "Downloading and Installing Android Studio",
          "Section Summary"
        ],
        "Computer Science Basics": [
          "Section Introduction",
          "What is Computer Science?",
          "What is Computer Programming?",
          "5 Generations of Programming Languages",
          "What is Java and why should you use it?",
          "What happens under the hood of the computer?",
          "The Heap and the Stack",
          "How to get the most out of this course",
          "Tips for becoming the best Java programmer you can be",
          "Section Summary"
        ],
        "Expressions and Assignment": [
          "Section Introduction",
          "Hello World",
          "Hello World in Java",
          "Identifiers and Variables",
          "Assignment Statements",
          "Constants",
          "Arithmetic Operations and Expressions",
          "Order of Precedence",
          "Type Casting and Conversion",
          "Increment and Decrement Operators",
          "Working with Variables in Java",
          "Answer and Explanation to Coding Exercise",
          "Section Summary"
        ],
        "Boolean Expressions": [
          "Section Introduction",
          "Simple Boolean Expressions",
          "Building Boolean Expressions",
          "Evaluating Boolean Expressions",
          "Short-Circuit and Complete Evaluation",
          "Precedence",
          "Boolean Expressions",
          "Answer and Explanation to Coding Exercise on Booleans",
          "Section Summary"
        ],
        "Control Flow Statements and Loops": [
          "Section Introduction",
          "if, else if, else",
          "switch statements",
          "for loops and while loops",
          "break and continue",
          "If Statement",
          "Answer to Coding Exercise: If Statement",
          "For Loop",
          "Answer to Coding Exercise: For Loop",
          "While Loop",
          "Answer to Coding Exercise: While Loop",
          "Section Summary"
        ],
        "Data Types": [
          "Section Introduction",
          "Booleans",
          "Integers",
          "Floats",
          "Strings",
          "Characters",
          "Enums (Enumerations)",
          "Section Summary"
        ],
        "Working with Date and Time Data in Java": [
          "Section Introduction",
          "LocalDate",
          "LocalTime",
          "LocalDateTime",
          "DateTimeFormatter",
          "Section Summary"
        ],
        "Collections": [
          "Section Introduction",
          "Arrays",
          "Array Lists",
          "HashMaps",
          "Stacks",
          "Queues",
          "HashSets",
          "Linked Lists",
          "Section Summary"
        ],
        "Functions and Methods": [
          "Section Introduction",
          "What is a function?",
          "Creating a function",
          "Calling a function",
          "Parameters and Arguments",
          "Overloading",
          "Overriding",
          "Constructors",
          "Section Summary"
        ]
      },
      "requirements": [
        "A computer with Windows, Mac, or Linux",
        "Eagerness and willingness to learn Java and Kotlin programming and build some awesome Android apps",
        "I recommend that you take this course alongside my Mastering IntelliJ IDEA and Android Studio course, since we use those programs heavily in this course, but that is NOT REQUIRED!",
        "Note: All software and programs for this course are FREE and I walk you through installing them step-by-step"
      ],
      "description": "The goal of this course is to give you a comprehensive look at Java, Kotlin, and Android app development.\nWhether you want to:\nBuild the skills you need to land your first Android developer job\nMove to a more senior software developer position\nAce a coding interview at a top tier tech company like Google, Apple, Facebook, or Microsoft\nBuild professional quality Android app using Android Studio, Java, and Kotlin\n…this complete Java, Kotlin, and Android tutorial is the course you need to do all of this, and more.\n\n\nWhy should you learn native Android development?\nAndroid developers make a high salary and are in huge demand in the industry\nThe mobile app industry is booming and jobs are opening up all over\nMastering both Java and Kotlin will make you much more likely to get an outstanding Android dev job and open up many opportunities for you\n\n\nI’ve broken this course down into three main topics: Java, Kotlin, and Android. Here is a breakdown of the material:\nJava\nSetup and Install IntelliJ IDEA and Android Studio\nComputer Science Basics\nExpressions and Assignment\nBoolean Expressions\nControl Flow Statements and Loops\nData Types\nWorking with Date and Time Data in Java\nCollections\nFunctions and Methods\nWorking with Strings\nTrees\nGraphs\nParsing XML using Java\nObject Oriented Programming\nInterfaces\nAbstract Classes\nFile I/O\nAdvanced Java Programming\nCryptography\nRegular Expressions (REGEX)\nBitwise Operations in Java\nThreading, Multithreading, and Concurrency in Java\nSearching and Sorting in Java\nDesign Patterns in Java and Android App Architectures\nCoding Challenges: Project Euler\nDebugging and Testing\n\n\nAndroid\nAndroid App Development Basics\nAndroid UI\nHands-On: Building a Rick and Morty App (Java App #1)\nHands-On: Building a Calculator App (Java App #2)\nHands-On: Building a Flappy Bird App (Java App #3)\nHands-On: Building a Pokemon Quiz App (Java App #4)\nHands-On: Building a Notes App (Java App #5)\n\n\nKotlin\nKotlin Fundamentals\nSearching and Sorting in Kotlin\nDesign Patterns in Kotlin\nHands-On: Building a Harry Potter App (Kotlin App #1)\nHands-On: Building a Marvel App (Kotlin App #2)\nHands-On: Building a DC Comics App (Kotlin App #3)\nHands-On: Building a Sonic App (Kotlin App #4)\nHands-On: Building an X-Men App (Kotlin App #5)\nKeywords and FAQs for Java, Kotlin, and Android\n\n\nHow is this course different than the other Android courses in Udemy?\n\n\nThis course is a thorough, comprehensive tutorial on Android development using the Java and Kotlin programming languages.\n\n\nSome courses teach you the theory, others teach through hands-on projects. This course combines both approaches.\n\n\nIn addition to teaching beginner, intermediate, and advanced Java and Kotlin, this course also teaches you how to implement all 23 Gang of Four Design Patterns and the major searching and sorting algorithms using both languages.\n\n\nAre there real-world project in this course where you can apply the skills you learn hands-on?\n\n\nThere are! In fact, you will build 10 hands-on Android apps in this course!\n\n\nYou will use your Java skills to develop:\nA Rick and Morty App in Java\nA Calculator App in Java\nA Flappy Bird App in Java\nA Pokemon Quiz App in Java\nA Notes App in Java\n\n\nYou will use your Kotlin skills to develop:\nA Harry Potter App in Kotlin\nA Marvel App in Kotlin\nA DC Comics App in Kotlin\nA Sonic App in Kotlin\nAn X-Men App in Kotlin\n\n\nWho is your instructor?\n\n\nMy name is Rob Gioia and I have four years of experience as an Android mobile developer in New York City with 10 professionally published apps to the Play Store. I love Java and Kotlin, and am excited at the opportunity to teach them to students through hands-on learning.\n\n\nWhat if you have questions?\n\n\nAny questions you have can be posted to the Q&A forum or messaged to me on Udemy. I check my Udemy account every day to see if students have questions, and do my best to be as responsive and helpful as possible.\n\n\nIf you get stuck at any point during this course, send me a message and I will get you unstuck!\n\n\nThere is no risk in taking this course!\n\n\nThis course comes with a full 30 day money-back guarantee. You either end up with Java and Kotlin skills, go on to develop great Android apps and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\n\n\nYou literally can’t lose.\n\n\nAre you ready to master the Java and Kotlin programming languages and build an awesome set of software engineering skills? Then enroll now using the “Add to Cart” button on the right!",
      "target_audience": [
        "Anyone that wants to learn the Java programming language",
        "Anyone that wants to learn the Kotlin programming language",
        "Anyone that wants to learn how to build awesome Android apps"
      ]
    },
    {
      "title": "Quick Mobile App Prototyping With Ionic Creator",
      "url": "https://www.udemy.com/course/ionic-creator/",
      "bio": "Develop mobile app prototypes and fully functional mobile apps by using drag-and-drop components. Real apps, made easy!",
      "objectives": [
        "Have the necessary skills to develop your own apps",
        "Charge other people to develop their prototypes",
        "Apply for jobs that require wire-framing and prototyping skills",
        "Expand your knowledge further into the world of mobile apps development"
      ],
      "course_content": {
        "Introduction to Ionic Creator": [
          "Course Introduction",
          "What Is Ionic Creator",
          "Features of Ionic Creator"
        ],
        "The Setup": [
          "Getting Started With Ionic Creator",
          "Available Options",
          "Interface Overview"
        ],
        "Building Our App | AppStream": [
          "A Quick Intro Before We Start",
          "What We're Going To Build",
          "Intro Into App Color Theme / Palette",
          "Exercise Files",
          "Creating Our Welcome Slider (Part. 1)",
          "Creating Our Welcome Slider (Part. 2)",
          "Integrating Font Awesome Icons",
          "Creating Our Log-in Page",
          "Linking Pages",
          "Creating Our Video Stream Page",
          "Linking And Playing Video Streams from External Sources",
          "Creating Our Audio Stream Page",
          "Linking And Playing Audio Streams from External Sources",
          "Creating Our Contact Us Page",
          "Integrating Google Maps Into Our App",
          "Creating Our Side Menu",
          "Customizing Our App Further"
        ],
        "Exporting & Sharing Our App": [
          "A Quick Intro Before We Start",
          "Online Sharing",
          "Ionic Creator Mobile App",
          "Exporting Our Project for Ionic 1, iOS and Android Apps",
          "Goodbye For Now"
        ]
      },
      "requirements": [
        "Have access to a computer",
        "Have internet access",
        "Know how to drag-and-drop"
      ],
      "description": "Hey guys! In this course I will teach you all the necessary skills you'll need to learn to be able to create your own mobile prototypes or fully functional mobile apps that run on real iOS and Android devices.\nAre you just looking at getting going with an app idea that has been sitting in your head for sometime now? Have you looked for a developer and failed dismally because they charge too much or they just don't take you or your project / concept seriously? Have you been trying to learn how to develop apps yourself? but even though everyone says its easy, but still after months and months of learning, you still don't feel confident or comfortable to get started on your own ideas? Well, worry no more, cause this course is for you!\nJoin me on this journey as I will show you how you can have your own fully functioning mobile application running on your device in a matter of minutes, I kid you not! You'll learn how to:\nBUILD\nPREVIEW\nSHARE\nas well as DEPLOY your apps to run NATIVELY on iOS and Android devices.",
      "target_audience": [
        "This course is for anyone with great app ideas and wants to see them come to life",
        "This course is for people that don't want to learn to code but want to develop apps",
        "This course is for anyone looking at developing mobile prototypes quickly",
        "This course is for anyone looking to create next-level wireframes"
      ]
    },
    {
      "title": "Create Mobile Apps using Intel XDK and Ionic Framework",
      "url": "https://www.udemy.com/course/intel-xdk-and-ionic-framework/",
      "bio": "Building a Todo App and Contacts App from Scratch using Intel XDK and Ionic.",
      "objectives": [
        "Test, Debug, Profile and Build Cordova apps using Intel XDK",
        "Design Hybrid Apps using Ionic",
        "Build Mobile APPs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Cordova architecture",
          "What is Intel XDK and how we can use it to build Ionic Apps",
          "App Designer",
          "Ripple Emulator",
          "Testing in Intel XDK",
          "Debugging in Intel XDK",
          "Profile in Intel XDK",
          "Building Intel XDK Applications"
        ],
        "Designing the app using Intel XDK's App Designer": [
          "Todo App UI",
          "Adding Pages",
          "List Todos UI",
          "Create & Edit Todo UI"
        ],
        "Create Todo item Logic": [
          "Adding an Angular Controller",
          "Creating an Add Todo function",
          "Add Todo Logic",
          "Back Function",
          "Save Todo Function",
          "Using the ngModel",
          "Storing Todo item in Memory & LocalStorage",
          "Saving an Edited Todo"
        ],
        "Rendering Todo List": [
          "Using ngRepeat"
        ],
        "ngCordova and Cordova Plugins": [
          "What is ngCordova & How to setup",
          "Adding Plugins",
          "Debugging & Fixing Errors"
        ],
        "Date Picker": [
          "Creating a Date Picker Function",
          "Date Picker API",
          "Getting Data from Date Picker",
          "Updating Date Picker's Default Data",
          "Using the Ionic Toggle Component in Intel XDK"
        ],
        "Local Notifications": [
          "Creating a Set Alarm Function",
          "Implementing Set Alarm Logic",
          "Final Create Todo Touches"
        ],
        "Edit Todo": [
          "Creating an Edit Todo Function",
          "Rendering the Todo Data in the Edit View (Edit Page)",
          "Saving an Edited Todo",
          "Updating the Todo Alarm",
          "Smarter Todo Alarm"
        ],
        "Delete Todo": [
          "Creating a Delete Todo Function",
          "Show a Warning Message",
          "Delete Todo Logic"
        ],
        "Finishing the Todo Application": [
          "Display Alarm",
          "Fixing Alarm Bugs",
          "FInal Build"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "JavaScript",
        "AngularJS",
        "Windows, Linux or OS X"
      ],
      "description": "Intel XDK and Ionic form the best combination for building cross platform mobile apps.\n\nYou may wonder why to build cross platform apps using Intel XDK and Ionic. Well Phonegap is an Intel XDK alternative and jQuery Mobile is an alternative to Ionic.\nThe main benefit of creating apps using Intel XDK is that you don't need a MAC and also you don't need to install eclipse, XCode and Visual Studio to test apps. Intel provides its own cross platform emulator and also a cloud binary build. XDK let's you test the app on a real device without install any other software. This is just couple of the lots of features provided by Intel XDK.\nIonic framework is the most trending topic among developers at present. It provides the best UI for creating mobile apps.\nIn this course we will only learn design components of Ionic as we we will using Intel XDK to test, build, debug and build the app.\nCreating hybrid mobile applications is a great way to leverage your knowledge of web languages like HTML5, CSS, and JavaScript. Modern frameworks such as AngularJS and Ionic make it easier with pre-built templates and components. In this course we will teach the core Ionic components: pre built, easy-to-use features such as buttons, lists, tabs, and forms. Then Ray shows how to combine these components with AngularJS models, views, and controllers to build a single page app with sliders, pull-to-refresh functionality, and search.",
      "target_audience": [
        "This course is for students who are new to Cordova or XDK or Ionic",
        "This course teaches you the complete workflow of building Hybrid APPs using XDK and Ionic"
      ]
    },
    {
      "title": "Ionic Angular Android iOS Apps For WooCommerce WebCheckout",
      "url": "https://www.udemy.com/course/ionic-5-angular-android-ios-apps-for-woocommerce-web-checkout/",
      "bio": "Complete Android iOS app for WordPress WooCommerce Store,InAppBrowser Checkout,No API needed,App to Web User Auto Login",
      "objectives": [
        "Preparing development environment for Ionic 5.1.1 and Angular Apps",
        "A beginner's overview of Ionic 5 Framework that introduces you to it’s features, building blocks and core Ionic components",
        "Create a new Ionic 5 app and Connect / Integrate WordPress WooCommerce Website / Online Store with Ionic 5 Angular App",
        "Implementation of the latest version of WooCommerce API in Ionic Angular App, like pull categories, products, tags, navigate to a single product page and finally land on the website using InAppBrowser to make purchase",
        "Pass logged in user’s data from App to InAppBrowser for auto login to Website. Complete Purchase to the Website using App’s InAppBrowser securely as WooCommerce Native REST API doesn’t have payment processing support yet",
        "Check all order history, view order details directly from app using WooCommerce API with cool styling that teach you theming with Ionic",
        "New Customer Registration using WooCommerce API from Ionic Angular App",
        "WordPress User Authentication and Login using JWT Plugin",
        "Implement Facebook Login, Gmail Login as Customer as well as create Customer User to Web End at the same time with proper Synchronization",
        "Working experiences of several Cordova Plugins, Use cordova to generate resources and build final Android and iOS apps that is ready to submit at store"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "What are we going to learn?",
          "What we need to know before taking this course?",
          "Lets see how our final app looks like"
        ],
        "Preparing the Setup": [
          "Introduction",
          "Installing node",
          "Installing Ionic Framework",
          "Installing Cordova",
          "Generate first Ionic app we gonna develop",
          "Create necessary pages and services",
          "Setup all routing and navigations",
          "Connect app with WordPress WooCommerce Online Store",
          "Downloadable resource at the end of the section 2"
        ],
        "Introduction to Ionic framework": [
          "Introduction",
          "What is Ionic",
          "Ionic component Basics",
          "Understanding Ion Grid",
          "Understanding Ion list n Buttons",
          "Using Ion cards",
          "Other ionic components",
          "Downloadable resource at the end of the section 3"
        ],
        "Introduction to Cordova": [
          "Introduction",
          "What is Cordova",
          "How Cordova works",
          "Cordova plugins we gonna cover in this course",
          "Downloadable resource at the end of the section 4"
        ],
        "Login Registration and Authentication for WordPress": [
          "Introduction",
          "Install and configure JWT auth plugin for WordPress",
          "Implement Customer registration using WooCommerce API",
          "Implement Customer login using WooCommerce API",
          "Use toast controller to show success / failure message",
          "Auto populate logged in user at left menu section",
          "Protect page using auth guard",
          "Implement Logout",
          "Downloadable resource at the end of the section 5"
        ],
        "Implement Facebook Login": [
          "Introduction",
          "Installing Cordova plugins for Facebook from CLI",
          "Creating an app in facebook developer console",
          "Connect Facebook app with our Ionic app",
          "Login using Facebook and generate equivalent user for web end using WooCom API",
          "Downloadable resource at the end of the section 6"
        ],
        "Implement Google Login": [
          "Introduction",
          "Installing Cordova plugins for Google Plus from CLI",
          "Creating project in firebase console",
          "Connect firebase with our Ionic app",
          "Login using Google and generate equivalent user for web end using WooCom API",
          "Downloadable resource at the end of the section 7"
        ],
        "Implement InAppBrowser": [
          "Introduction",
          "When we need InAppBrowser",
          "How does it work",
          "Installing Cordova plugins for InAppBrowser from CLI",
          "Open a desired link using InAppBrowser with some data passed from app to website",
          "Implement auto login using InAppBrowser to our website",
          "Downloadable resource at the end of the section 8"
        ],
        "Implement Web Checkout": [
          "Introduction",
          "Land on a product page and place an order",
          "List current user’s orders",
          "View order details",
          "My Account details",
          "Downloadable resource at the end of the section 9"
        ],
        "Further Enhancements": [
          "Introduction",
          "Implement pull to refresh",
          "Implement infinite scroll",
          "Use toast controller to show no more items to load on infinite scroll complete",
          "Some other adjustments",
          "Downloadable resource at the end of the section 10"
        ]
      },
      "requirements": [
        "Previous work experince with any version of Ionic Framework"
      ],
      "description": "Welcome Viewers,\nI hope you all are doing great. I am M A Hasan, a full time freelance web and hybrid apps developer. Previously, I created a course here in Udemy named “Develop Ionic 4 Angular iOS Android Apps for WooCommerce” where i developed a full featured ionic 4 angular based webstore app for WordPress WooCommerce platform. I got very good responses and appreciation from lots of students. I tried to make it super easy to understand, went step by step and explained every bit of code and technology that works behind the app.\nYou may know that, right now, WooCommerce doesn’t have native API support to process payment directly from the app. Beside these, there are many websites that are using many other plugins with WooCommerce that don’t have API support yet.\nSo how to create an app for such a website where you can’t access and process all product and order data using WooCommerce’s native API? And it does not have native api to process payment?\nThere is a way, you can do it.\nThis is the most interesting part of this course which is web checkout in InAppBrowser for WordPress WooCommerce online store. And yes, you can set the user logged In in your website directly from the app, when the user lands on the website using InAppBrowser. So, the user doesn’t need to login twice, if a user is logged in in App, user will be automatically logged in in Website when he lands on product page using InAppBrowser.\nInAppBrowser brings this convenience to all app developers as well as all customers.\nMany of my students requested me to create another organised course using ionic and angular where we can achieve the above including some other plugin integrations like facebook login, google login and so on.\nSo in this course, I am going to use the latest stable version of node as well as the latest version of ionic as a development environment.\nWe will use WordPress WooCommerce as a backend data provider for this project, implement user registration using WooCommerce API V3, login and authentication using JWT authentication plugin for WordPress.\nOnce these parts are done, i will show how to use cordova in this project and integrate different cordova plugins like facebook login, gmail login, InAppBrowser and so on.\nYou may find related tutorials, topics in some blogs, but those are not explained in such a way so that a beginner level developer can learn and understand them perfectly. Moreover, you are getting everything in one place with well coded source code that is super clear to you. And from one source code based, you're getting both an Android and iOS app that is ready to submit to PlayStore and AppStore.\nAt the end of the course, you are going to get a full featured WordPress WooCommerced based online store app where checkout is done in InAppBrowser so that you don’t need to think about payment gateway integration using WooCommerce API or Process Product Data or Order Data using WooCommerce API.\nAdditionally, you are going to be master of these plugins used here and will feel very flexible to use other cordova plugins for ionic angular with extra confidence.\nI hope to see you in this course very soon. This course comes with a 30 days money back guarantee. So, buy the course, watch the videos, if it does not go well then ask for a refund within 30 days, all your money back, no questions asked.\nSo why are you waiting? Let's start this great adventure.",
      "target_audience": [
        "Has basic working knowledge or working experience in any version of Ionic Framework with Angular",
        "Beginner to Work With Ionic 5, Angular and WordPress Authentication",
        "Beginner to implement WordPress and WooCommerce REST API using Ionic 5 and Angular",
        "Anyone interested to develop a full featured Online Store Apps for Woocommerce based ECommerce Website",
        "Anyone interested to Understand the technology behind the online store apps",
        "Anyone who wants to take his programming career to the next level by learning modern technologies"
      ]
    },
    {
      "title": "How to evolve a legacy iOS Application written in Swift",
      "url": "https://www.udemy.com/course/how-to-evolve-a-legacy-ios-application-written-in-swift/",
      "bio": "Incrementally introduce advanced software practices (TDD, Refactoring, Continuous Integration) into an existing iOS app",
      "objectives": [
        "Apply advanced software practices (TDD, CI, Refactoring, etc.) to an existing mobile project",
        "Iterate on a legacy existing product supported by tests",
        "Improve your mobile developer career by learning advanced concepts",
        "Build, Ship and Maintain an Swift Application",
        "Become a Professional Software Developer"
      ],
      "course_content": {
        "iOS 12 Update": [
          "Bootstrap 1/2",
          "Bootstrap 2/2",
          "Swift 4.2 Migration 1/2",
          "Swift 4.2 Migration 2/2",
          "iOS 12 Update",
          "Continuous Integration Setup with Fastlane"
        ],
        "1.2 Release": [
          "Release 1.1 + Privacy Policy + Planning Release 1.2",
          "Periphery + Remove Unused Code",
          "Extract Bike Station Service from View Controller",
          "Remove View Controller Dependency from Bike Station Service",
          "Asynchronously Test the Bike Web Service API",
          "TDD Trentino Bike Sharing Service Part 1",
          "TDD Trentino Bike Sharing Service Part 2",
          "TDD Trentino Bike Sharing Service Part 3",
          "Using Bike Sharing Service in the App",
          "Refactor Bike Sharing Service and Bike Station Part 1",
          "Refactor Bike Sharing Service and Bike Station Part 2",
          "Refactor Bike Station Object (Summary)",
          "Refactor Bike Station Object (!!!! Sound Quality Problems !!! )"
        ]
      },
      "requirements": [
        "Proficiency in writing iOS mobile applications using Swift",
        "Experience launching an mobile application to the Store"
      ],
      "description": "In this pair programming screencast we show how we would tackle a legacy iOS app and incrementally introduce good software practices (such as TDD, Refactoring, Continuous Integration).\nThis series is for intermediate iOS developer that already ship an app into the store but want to learn more advanced software practices.\nThis simulates the scenario where you inherit an existing iOS application and you want to add more value step-by-step.",
      "target_audience": [
        "Intermediate iOS developers who want to learn how to apply advanced software practices (TDD, CI, Refactoring, etc.)",
        "Advanced Mobile Developers that want to learn different point of views",
        "Beginner Developers who want to learn pair programming and how to iterate on an existing product"
      ]
    },
    {
      "title": "Projects in iOS",
      "url": "https://www.udemy.com/course/projects-in-ios/",
      "bio": "Learn iOS development building projects",
      "objectives": [
        "To learn to build projects using IOS APIs",
        "To master Xcode 5 and iOS7 SDK",
        "To learn to use APIS such as Mapkit, Sensors, View controllers, Multimedia and Camera",
        "To learn the process behind mobile apps development",
        "To learn about app store for iOS",
        "To understand and implement In app purchase, animation and sound"
      ],
      "course_content": {
        "Introduction to iOS 7 Programming": [
          "Course Preview",
          "Programming in Xcode"
        ],
        "Building The First App - iAlgebra Calculator": [
          "Creating the App - Basic Design",
          "Creating the App - Enhancing features",
          "Adding Operation Features",
          "Debugging",
          "Final Features"
        ],
        "Creating an Advance Calculator": [
          "Basic Design",
          "Enhancing the Design",
          "Building the Links",
          "Differentiating between the paid and the lite version",
          "Finishing up the features",
          "Adding the iAd Framework"
        ],
        "Making a Universal project - Run on both iPad and iOS": [
          "Storyboard",
          "Adding protocol and delegate",
          "UISplitView Delegate",
          "UIPopover Implementation",
          "UIPopover finishing touches"
        ],
        "Learn to build the iCatalogue App": [
          "App description and storyboard",
          "Enable paging and zooming",
          "UIScrollView Delegate"
        ],
        "Learn to use the Mapkit Framework": [
          "MapKit framework",
          "Integrate your code with map application"
        ],
        "Learn the use of Parse Framework": [
          "Introduction to Parse framework",
          "Implement Login",
          "Signup Implementation"
        ],
        "Learn to build iPix application": [
          "Introduction to Facebook SDK",
          "Login Implementation in the App",
          "Signup Implementation in the App"
        ],
        "Implementing Camera and Photo Album.": [
          "Creating a Welcome Screen",
          "Implement ImageViewController",
          "Implementing filters",
          "Finishing touches to the App"
        ],
        "Enhancing iPix": [
          "Upload Image to Database",
          "Using UICollectionView",
          "UICollectionView Implementation"
        ]
      },
      "requirements": [
        "Basic understanding of objective C"
      ],
      "description": "This is a course for all programmers who will like to build on their iOS knowledge and create actual apps for the App store. This course assumes basic iOS programming knowledge but is still ideal for beginners as we are covering the APIs in detail before using them to build the projects.\nThis course covers the most popular APIs for iOS7 and you will be able to understand the core concepts behind the popular apps. This is the course which will help you bring your ideas to life. This is a practical and step by step guide for mastering apps development in iOS and it uses the latest Xcode 5 and iOS7 SDK for all its content.\nThe course with the help of practical projects will teach you the following\nXcode 5\niOS7 APIs\nApp Design and development process\nApp Debugging\nUI Design\niAd Framework\nStoryboards\nMapkit Framework\nParse Framework\nFacebook SDK integration\nCamera and Photo Gallery Implementation\niOS Sensors\nIn App Purchase\nand much more...\nAfter this course you will be able to build any app you can think of plus you will get royalty free access to the source code of all the projects which you can modify and publish..",
      "target_audience": [
        "IOS developers and enthusiasts",
        "Developers who wants to create Apps for IOS"
      ]
    },
    {
      "title": "Data Structures and Algorithms in Swift and iOS",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-in-swift-and-ios/",
      "bio": "Cracking programming interviews and Ace them by learning algorithms and data structures with real interview questions",
      "objectives": [
        "You will learn basics of various data structures and algorithms by solving interview questions on those topics",
        "You will be able to analyze and write your own algorithms for a given problem",
        "You will be able to compute time & space complexity of a given algorithm",
        "Improve the efficiency, performance, and scalability of your code",
        "Create your own algorithms to solve problem in hand by combining techniques learned in this course"
      ],
      "course_content": {},
      "requirements": [
        "Basics of any programming language",
        "Basic understanding of loops and conditionals",
        "Willingness to work though several problems to understand the algorithm"
      ],
      "description": "Data structures and algorithms is a complex topic and can be a challenging due to level of complexity involved. This course introduces new way to learn data structures and algorithms by not only learning about them but solving real interview questions around those newly learned concepts.\nWe will be looking at data structures such as arrays, linked lists, stacks, queues, trees etc and algorithms like sorting algorithms, and algorithms on binary search trees and heaps. But while working on concepts for those data structures and algorithms we will also cover many interview questions and build solutions for them to fortify the concepts we have learned. also cover recursion in this course.\nAfter taking this course, you will loose your fear for data structures and algorithms and you will be able to propose new and improved algorithmic solutions to problems that will be efficient, performant, and scalable.\nYou will be able to whiteboard interview questions, conceptualize new algorithms, solve Leetcode, Hacker rank, interview bits questions\nThis course is good for anyone who is preparing or already in the process of interviewing to become developer/engineering at big, medium or small tech companies. During the interview process, Interviewer asks candidate to write algorithms out in code, and this course will prepare you for not only to write algorithm and code it but will also teach you as how to analyze the problem and think about the potential solution for the problem in hand.",
      "target_audience": [
        "Anyone who wants to learn data structures and algorithms",
        "Anyone preparing for technical programming interviews",
        "Anyone who wants to understand algorithms and data structures from grounds up",
        "Anyone who already knows algorithms but needs a refresher",
        "Anyone who wants to strengthen their computer science fundamentals"
      ]
    },
    {
      "title": "Develop 5 apps with python , kivy and kivymd",
      "url": "https://www.udemy.com/course/learn-kivy-and-kivymd-by-building-5-apps/",
      "bio": "Build : Weather app ,meal app, expense tracker, bmi calculator and video player apps",
      "objectives": [
        "Using Python to create Mobile Apps",
        "5 apps with kivy",
        "Kivy and kivymd",
        "Using apis in kivy",
        "Webscraping in kivy",
        "Real-time database in kivy",
        "Working with async images in kivy",
        "Labels, layouts, images e.t.c in kivy",
        "Plyer module",
        "Working with videos in kivy",
        "Beautiful design in kivy"
      ],
      "course_content": {},
      "requirements": [
        "Good internet and laptop",
        "Python Level: Beginner. I am going to assume that you already know the Python basics ( variables, functions etc. )"
      ],
      "description": "So you wanna create real world apps with python and kivy. You dont want to learn theory. Then you are are the right place. I will teach you kivy and kivymd by building 5 apps.\nWe will learn awesome things\nusing native features in kivy\nworking with real-time database\nWebscraping in kivy\nUsing apis in kivy\nplyer module\nmany other features",
      "target_audience": [
        "Beginner python developers who want to make mobile apps with python and kivy"
      ]
    },
    {
      "title": "Learn ARKit 2 for iOS 12 from Scratch!",
      "url": "https://www.udemy.com/course/learn-arkit-for-ios-from-scratch/",
      "bio": "Master ARKit and build AMAZING AR apps for iOS!",
      "objectives": [
        "You'll be able to build AMAZING iOS apps using ARKit!",
        "You'll learn all about SceneKit!",
        "You'll learn all about Swift 4!",
        "You'll learn all about Xcode 9!"
      ],
      "course_content": {
        "Introduction": [
          "Are you ready to make some amazing things?!",
          "Welcome!",
          "Breaking Down Apple's Default AR app!",
          "Recreating Apple's Default AR app!"
        ],
        "My App": [
          "Announcing My App"
        ],
        "Getting Setup!": [
          "Drawing a Cube using ARKit!"
        ],
        "Creating Floating Text in AR!": [
          "Creating our Floating Text!"
        ],
        "Plane Detections and Visualization!": [
          "Some background information!",
          "Plane Detection and Visualization"
        ],
        "Adding Geometry and Physics fun!": [
          "Adding Geometry and Physics Part 1",
          "Adding Geometry and Physics Part 2",
          "Adding Geometry and Physics Part 3",
          "Adding Geometry and Physics Part 4",
          "Adding Geometry and Physics Part 5",
          "Adding Geometry and Physics Part 6",
          "Adding Geometry and Physics Part 7",
          "Adding Geometry and Physics Part 8"
        ],
        "Physically Based Rendering!": [
          "Some information on lighting!",
          "Realism - Lighting & PBR Part 1",
          "Realism - Lighting & PBR Part 2",
          "Realism - Lighting & PBR Part 3",
          "Realism - Lighting & PBR Part 4",
          "Realism - Lighting & PBR Part 5",
          "Realism - Lighting & PBR Part 6",
          "Realism - Lighting & PBR Part 7",
          "Realism - Lighting & PBR Part 8",
          "Realism - Lighting & PBR Part 9",
          "Realism - Lighting & PBR Part 10",
          "Realism - Lighting & PBR Part 11"
        ],
        "Creating Extensions for SCNVector3": [
          "Creating an SCNVector3 Extension Part 1",
          "Creating an SCNVector3 Extension Part 2"
        ],
        "Creating a string that follows us in AR!": [
          "Creating our LineViewController"
        ],
        "Using Unity": [
          "Installing Unity",
          "Creating a Zombie AR app!"
        ]
      },
      "requirements": [
        "You gotta wanna learn how to make ARKit apps!",
        "Xcode 9 (Latest Beta)",
        "A9 or A10 Device (iPhone 6s or above) running the latest iOS 11 beta",
        "You should have a basic knowledge of Swift! (If you don't you can checkout my Swift course first!)"
      ],
      "description": "Hey you! Are you interested in learning how to write Augmented Reality (AR) Apps?\n\nAugmented Reality (AR) is the future of iOS apps! And now you can learn it from the comfort of your home, in your own time, without having to attend a boring class.\nMy name is Amit Kalra, a WWDC '16 and '18 scholarship winner! (Apple's Worldwide Developer's Conference)\nI have created 2 apps and both of my apps were featured by Apple in the App Store and have hit top charts, alongside getting some press! I didn't come from a tech background and I didn't let that stop me! I'm not really into technical terms and I'm gonna teach you the same way I learned!\nWhy should I take your course?\nI'm not going to teach you the extra stuff that you'll NEVER need to build AR apps. I'm going to show you in-depth from the basics how to create AR apps and then break it down and show you how it's done. We'll learn using the official Apple way and one of the best third party ways!\nWhat if I don't have enough time?\nThat's not a problem at all!! You can take all the time in the world in the comfort of your home to complete this course! I've designed this course for everything to be learned within 5 hours!\nHere are some reviews I've gotten from teaching others!\n\n\"I went from knowing NOTHING in Swift to making my own tutorials on how to create apps!\"\n\n\"Amit teaches in a very unique way. He doesn't teach in a normal way. He teaches in a way that's super natural and it's so detailed!\"\n\"His teaching style is really fun! It's really boring when he explains the terms but that stuff won't even be needed in the future and teaches you the way he learned!\"\nWhat will I get if I buy this course today?\nI will show you how to build real and amazing augmented reality (AR) apps using ARKit. I'm going to start from the beginning covering the basics of AR and how to setup your AR project! Then, we'll dive into advanced concepts of plane detection, physics, and collision detection. I'll also show you how to make 3D Models using SketchUp, Unity, and Blender!\nAlongside this course, you also get all of the source code! FOR FREE!! And with comments to understand it better!\nYou'll also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered. Not only that, if you need another way to reach me, you can always tweet and dm me on my Twitter @amitnkalra! I am extremely active there!\n\nCan you believe you get all this (and MORE) for just $150? (Also being constantly updated!!)\n\"I saw the preview of this course and it's amazing! It's jam-packed with information so grab your popcorn and get ready to learn!\"\nWell, you're not dreaming! This is a reality. Take advantage of this great course NOW!!\nWhy should you even learn ARKit?\nARKit is the future! That means not everything has been done yet! If you can create something truly original and dope, you're almost guaranteed to hit the top charts!\nARKit is going to help create attractive and intuitive experiences!\nWho is this for?\nThis course is for anyone who wants to learn all about the brand new ARKit. Knowing how to use Augmented Reality using ARKit can also help you get paid a higher salary because not many people are educated in ARKit!\nIs this course right for me?\nYES! If you have a passion to learn and you enjoy learning, I encourage you to purchase this course right now!!\nWhat are the requirements?\nA Mac Computer\nXcode 10 or Xcode 10 (Latest Beta)\niPhone 6S or above running iOS 12 or iOS 12 (Latest Beta)\nVery basic understanding of the Swift 5! - I'll teach you the rest!\nWhat am I going to get from this course?\nCreate dope Augmented Reality (AR) Apps Using ARKit Using Swift 5!\nBuild apps that can be placing virtual objects in the real world!\nLearn all about the SceneKit framework through the use of ARKit!\nBecome a professional app developer and take freelance gigs to work from anywhere in the world!\nApply for a new job in a software company as an iOS developer! (ARKit is brand new and will be seen as a great advantage!)\nWho is the target audience?\nAnyone who wants to be an app developer: This is a complete course! (And it continues to be updated!)\nAnyone who wants to learn to code! Augmented Reality is the future and the future is happening right NOW!\nAnyone who wants to understand how computers work: Everyone uses apps and computers all the time, but why don't that many people know how to write code?\nAnyone who wants to learn about ARKit!\nAnyone who wants to learn about SceneKit!",
      "target_audience": [
        "Anyone who wants to make a dope app and learn about ARKit! 😀",
        "Anyone who wants to learn about SceneKit! 😀",
        "Anyone who is just willing to learn!! 😀"
      ]
    },
    {
      "title": "Mastering React Native, React Native Skia, and Re-animated.",
      "url": "https://www.udemy.com/course/mastering-react-native-react-native-skia-and-re-animated/",
      "bio": "Master React Native for iOS/Android with Native Modules, Expo, Skia, and Reanimated 3",
      "objectives": [
        "Gain a comprehensive understanding of React Native to develop an application",
        "Acquire proficiency in using React Native Reanimated to enhance user experience through animations. Learn to apply complex animations.",
        "Apply learned concepts in React Native Skia, Expo libraries, and React Native Reanimated to create a dynamic phone app",
        "Gain hands-on experience in building a fully functional mobile application",
        "Use and understand React Context hooks",
        "Gain proficiency in utilizing Figma for translating designs into code.",
        "Use Expo-Location to query Location data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation Links",
          "Github Repo",
          "Figma Template"
        ],
        "Setup": [
          "Figma Walkthrough",
          "Packages for Project Setup",
          "Project Setup",
          "Application Setup",
          "Application Setup 2. Skia!",
          "Expo Go",
          "EAS Build/Development Build",
          "Android Configuration",
          "Folder Structure Setup",
          "Starter Folders"
        ],
        "Part 1: Home Page": [
          "Home Background - Linear Gradient",
          "Home Background - Linear Gradient Part 2",
          "Home Background - Background Image",
          "Home Background - House Image",
          "Home Background - House Image 2",
          "Home Background - House Image 3",
          "Home Background - Smoke Effect - 1",
          "Home Background - Smoke Effect - 2",
          "Home Background - Smoke Effect - 3",
          "Home Background - Smoke Effect - 4",
          "Tab Bar - Part 1 - Building the Tabbar",
          "Tab Bar - Part 2 - Position the Tabbar",
          "Tab Bar - Part 3 - Build the Arc",
          "Tab Bar - Part 4",
          "Tab Bar - Part 5 - Linear Gradient",
          "Tab Bar Part 6 - Border Stroke",
          "Tab Bar Part 7 - Icons",
          "Tab Bar Part 8 - Positions",
          "Tab Bar Part 9 - Middle Button",
          "Tab Bar Part 10 - Scaling",
          "Tab Bar Part 11 - Circle Button",
          "Tab Bar Part 12 - Plus Sign",
          "Tab Bar Part 13 - Position",
          "Tab Bar Part 14 - Pressable Button",
          "Tab Bar Part 15 - Fix issue",
          "Weather Section Part 1",
          "Weather Section Part 2",
          "Weather Section Part 3",
          "Weather Section Part 4",
          "Bottom Tab Bar Part 1",
          "Bottom Tab Bar Part 2 - Bottom Sheet Reqs",
          "Bottom Tab Bar Part 3 - Handle Indicator",
          "Bottom Tab Bar Part 4 - Background",
          "Bottom Tab Bar Part 5 - Blur View!",
          "Bottom Tab Bar Part 6 - Shadows!",
          "Bottom Tab Bar Part 7 - Forecast Control",
          "Bottom Tab Bar Part 8 - Control Segment",
          "Bottom Tab Bar Part 9 - Underline Layer",
          "Bottom Tab Bar Part 10 - Capsule",
          "Bottom Tab Bar Part 11 - Data !",
          "Bottom Tab Bar Part 12",
          "Bottom Tab Bar Part 13 - Capsules!",
          "Bottom Tab Bar Part 14 - Opacity",
          "Bottom Tab Bar Part 15 - Weekly Forecast",
          "Bottom Tab Bar Part 16 - Date Helpers!",
          "Bottom Tab Bar Part 17 - Widgets",
          "Bottom Tab Bar Part 18 - House Cleaning"
        ],
        "Part 2: Animations": [
          "Animations Part 1",
          "Animations Part 2 - Basic Animations",
          "Animations Part 3 - Simple Animations!",
          "Animations Part 4",
          "Animations Part 5 - Back to Our App!",
          "Animations Part 6 - Normalize Values",
          "Animations Part 7 - Prop Drilling?",
          "Animations Part 8",
          "Animations Part 9 - Animated Canvas & Img",
          "Animations Part 10 - Gradient Issues",
          "Animations Part 11 - Android Issue?",
          "Animations Part 12 - Tab bar animations",
          "Animations Part 13 - Weather Section Animations",
          "Animations Part 14",
          "Animations Part 15",
          "Animations Part 16 - Forecast Animations"
        ],
        "Part 3 : Details Page": [
          "Details Page Part 1",
          "Details Page Part 2",
          "Details Page Part 3 - Header",
          "Details Page Part 4 - Search Bar!",
          "Details Page Part 5 - Path 1",
          "Details Page Part 6 - Path 2",
          "Details Page Part 7 - Forecast Data!",
          "Details Page Part 8 - Rotation"
        ],
        "Part 4 : Static to Dynamic Data": [
          "API Part 1",
          "API Part 2 - Overview",
          "Assets for the Weather API",
          "API part 3 - Context?",
          "API Part 4",
          "API Part 5",
          "API Part 6 - Wrapping up!",
          "API Part 7 - Thank you!",
          "Thank you!"
        ]
      },
      "requirements": [
        "Participants should have a basic understanding of React or React Native, along with at least 3 to 6 months of development experience"
      ],
      "description": "Embark on a transformative journey with our comprehensive course, designed to master the art of mobile app development using React Native. This course is meticulously crafted for intermediate developers with basic React or React Native knowledge and at least 3-6 months of development experience, aiming to elevate their skills in modern app design, animation, and dynamic data integration.\nIn the first segment of our course, delve into the nuances of designing an intuitive Home page. You will be guided through using React Native Skia and various Expo libraries, essential for crafting a visually appealing and responsive interface. This phase is dedicated to helping you become adept with these powerful packages, laying a solid foundation for advanced development.\nThe second phase shifts focus to bringing the Home page to life with animations using React Native Reanimated. Experience hands-on learning as you implement sophisticated animations like sliding up background images, seamlessly making the tab bar vanish, and dynamically altering the weather section’s layout. These skills are crucial for creating an engaging user experience in modern mobile applications.\nAs you progress to the third part, the course intensifies with practical exercises in navigation and detailed page development. Here, you'll replicate animations from a Figma template, design a custom header, build a functional search bar, and develop intricate widget components. This phase is crucial for understanding the intricacies of user interface design and interaction.\nFinally, the course culminates by transitioning from static to dynamic content. You'll learn to connect your application to an API, enabling real-time data integration. This key skill set is vital for building interactive and up-to-date mobile applications, providing a realistic user experience.\nJoin us to unlock your potential in mobile app development, harnessing the power of React Native, animation, and dynamic data to create cutting-edge applications that stand out in the digital era.",
      "target_audience": [
        "Individuals who have foundational knowledge in React or React Native and are looking to deepen their understanding and skills in these frameworks."
      ]
    },
    {
      "title": "Make an iPhone Arcade Game & Publish it. No need to program",
      "url": "https://www.udemy.com/course/make-an-iphone-arcade-game-publish-it-no-need-to-program/",
      "bio": "Be an entrepreneur! Use the same tools as programmers & graphic designers to quickly create and publish your game. iOS9+",
      "objectives": [
        "Publish your very own classic arcade iPhone game clone to the apple app store today"
      ],
      "course_content": {
        "Initial Setup": [
          "Getting the Apple Developer License",
          "Apple Developer Certificate for Distribution",
          "Get and Install Xcode tool, and open it",
          "Verifying the Game Works in Xcode and on the iphone Simulator"
        ],
        "Choosing Game Assets": [
          "Quick Troubleshoot of the new iOS 7.1",
          "Coming Up With a New Theme for the Game",
          "Finding Graphics for the Bricks",
          "Finding Background Images",
          "Finding a new Ball Graphics"
        ],
        "Creating Game Graphics": [
          "Creating the App Icon With Photoshop",
          "Creating Brick Images",
          "Modifying the Ball Image",
          "Adding the Background Images",
          "Modifying the Launch Images",
          "Taking Game Screenshots"
        ],
        "Modifying Game Sounds": [
          "Finding and Changing the Background Music"
        ],
        "Game Settings": [
          "Creating game in itunesconnect",
          "Modifying Game Name and Version",
          "Setting up in-app purchases"
        ],
        "Publishing to the App Store": [
          "Updating Settings in Itunesconnect",
          "Testing the Game one last time",
          "Uploading the Game Executable File"
        ],
        "What to do Next": [
          "Taking it to the Next Level: the Pro Edition Source Code",
          "Growing Your Mobile App Portfolio",
          "Finding the Best Game Theme - Anticipating Upcoming Trends",
          "The Mobile App Flipping Podcast",
          "Get Informed of the Latest Trends and Deals",
          "Going Professional with Top Icon Templates",
          "BONUS"
        ]
      },
      "requirements": [
        "a mac computer or macincloud.com"
      ],
      "description": "This course gives you the source code to create a clone of the classic arcade game called Break out and Arkanoid game.\nYou are shown every single step it takes to turn the existing game into your very own. You can apply any theme that you want. Some examples are Flappy Angel, demons, ducks, or penguins, alien bricks, monster bricks, neon cat bricks, or even celebrity faces! Your imagination is the limit!\nThis course assumes you know nothing about making games, and without coding not even a single line of code, you will publish your very own game to the apple app store!\nThe game comes with multiple advertising channels to bring your passive income.",
      "target_audience": [
        "everyone"
      ]
    },
    {
      "title": "Flutter, Firebase and ChatGPT: Dall-E Image Sharing App",
      "url": "https://www.udemy.com/course/flutter-firebase-chatgpt-and-elevenlabs-api-course/",
      "bio": "Develop a Powerful Image Sharing App with Flutter, Firebase, and ChatGPT: Leveraging Dall-E and Elevenlabs AI",
      "objectives": [
        "Setting up a new Flutter project and creating a custom theme for the app",
        "Building login and registration screens, including OTP verification",
        "Connecting the app to Firebase for user authentication and data management for both Android and IOS",
        "Implementing a chat screen with StreamBuilder and handling input messages",
        "Integrating ChatGPT and DALL-E for image generation and displaying the responses in the chat widget",
        "Adding text-to-speech and speech-to-text features using Elevenlabs API",
        "Building a post screen with grid view, like and comment functionality, and user-to-user chat",
        "Add a text-to-speech feature in the application using ElevenLabs API",
        "Configuring Firebase Firestore rules for secure data access",
        "Implementing user-to-user chat using Firebase Cloud Firestore"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Starting up project",
          "Creating a theme",
          "Selecting a theme",
          "Saving the theme"
        ],
        "Building the login and registration screens": [
          "Adding Bottom navigation bar",
          "Login Packages and assets",
          "Registration screen part 1",
          "Registration screen part 2",
          "OTP screen UI",
          "User information screen",
          "Connecting to Firebase",
          "Sign in user part 1",
          "Sign in user part 2",
          "Login user and SHA keys"
        ],
        "Building the OTP and user information screens": [
          "OPT screen part 1",
          "OPT screen part 2",
          "User information screen part 1",
          "User information screen part 2",
          "User information screen part 3",
          "User model class"
        ],
        "User Authentication and Data Management": [
          "Setting up Firebase Authentication and Firestore for user data",
          "Creating user model and updating user data",
          "Handling user authentication and sign-up errors",
          "Implementing sign-out functionality",
          "Updating user data in Firestore upon profile changes",
          "Retrieving user data from Firestore"
        ],
        "Chat Screen Implementation": [
          "Designing and implementing the landing screen UI",
          "Implementing chat screen UI with StreamBuilder and handling input messages",
          "Implementing chat input field with the send button",
          "Implementing a chat provider for sending and receiving messages",
          "Implementing a chat stream to listen for incoming messages",
          "Setting up API service for image generation with DALL-E",
          "Handling image generation errors and responses from DALL-E API"
        ],
        "ChatGPT and DALL-E Integration": [
          "Parsing and displaying image response from DALL-E API",
          "Saving ChatGPT response to Firestore",
          "Implementing chat widget for ChatGPT and DALL-E",
          "Displaying ChatGPT response in the chat widget",
          "Implementing text and image button for DALL-E image generation",
          "Implementing scroll controller and focus node for a chat widget",
          "Saving ChatGPT image to Firestore storage",
          "Compressing the generated image before saving it to Firestore"
        ],
        "Text-to-Speech, Speech-to-text and Lottie Files": [
          "Adding a Cached Network Image Feature",
          "Integrating Speech-to-Text Functionality",
          "Utilizing Lottie Files and Speech-to-Text",
          "Text-to-Speech package part 1",
          "Text-to-Speech package part 2",
          "Profile screen",
          "Implementing Buttons for Your User Profile Screen"
        ],
        "Elevenlabs integration, share and live streaming shared images.": [
          "Integrating Elevenlabs API - Part 1",
          "Implementing Elevenlabs Speech Synthesis",
          "Sharing Generated Images - Part 1",
          "Sharing Generated Images - Part 2",
          "Live Streaming Shared Images on Posts Screen",
          "Creating Post Widget with Like and Comment Buttons",
          "Displaying Post Details Screen"
        ],
        "Updating Bottom chat field, ChatList and implementing Comments and likes feature": [
          "Updating Bottom chat field",
          "Updating the Chatlist widget",
          "Sending a first comment",
          "Implementing grouped list",
          "Comment alignment and fixes",
          "Sorting of comments",
          "Comment chat bubble part 1",
          "Comment chat bubble part 2",
          "Updating comments bubble and displaying comments count",
          "Implementing Like feature",
          "Completing Like feature"
        ],
        "Firebase Rules": [
          "Firebase rules - users database",
          "Firebase rules - posts database",
          "Firebase rules - likes and comments database",
          "Firebase rules - chats database",
          "Tabs part 1",
          "Tabs part 2"
        ]
      },
      "requirements": [
        "Just some basic programming experience needed, you will learn almost everything you need to know",
        "You need Android Studio or VS code or any other preferred IDE",
        "Flutter 3.7"
      ],
      "description": "In this course, you will learn how to build a fully functional chat application with AI integration using Flutter. You will start by setting up the project and creating a theme for your app. Then, you will build the login and registration screens, including user authentication and data management with Firebase.\nNext, you will learn how to implement a chat screen, including designing and implementing the landing screen UI, chat screen UI with StreamBuilder, and handling input messages. You will also learn how to use DALL-E API for image generation, parsing and displaying image response from the API, and saving ChatGPT response to Firestore.\nIn addition, you will learn how to add text-to-speech and speech-to-text functionality to your chat app using Elevenlabs API. You will also create a profile screen UI and add functions to the profile screen.\nFinally, you will learn how to implement a post screen, including adding a grid view, creating a post widget, streaming shared posts from Firestore, and adding a like and comment function.\nBy the end of this course, you will have a complete understanding of how to build a chat application with AI integration using Flutter and will be equipped with the necessary skills to build your own chat app.",
      "target_audience": [
        "Beginner or advanced Flutter and firebase application developer"
      ]
    },
    {
      "title": "Build Full-Stack E-Commerce App: SwiftUI, Node.js & Postgres",
      "url": "https://www.udemy.com/course/build-full-stack-e-commerce-app-swiftui-nodejs-postgres/",
      "bio": "The Complete Guide to Building an E-Commerce App Using SwiftUI, NodeJS & Postgres",
      "objectives": [
        "Build Modern iOS UIs with SwiftUI: Design responsive and user-friendly interfaces.",
        "Develop RESTful APIs with NodeJS: Create scalable backend systems",
        "Design and Query Databases with PostgreSQL: Efficiently manage e-commerce data.",
        "Implement Secure Authentication: Use JWT and Keychain for secure login systems.",
        "Integrate Stripe for Payments: Enable seamless payment processing."
      ],
      "course_content": {
        "Introduction": [
          "Prerequisites",
          "Exercise Files"
        ],
        "Setting Up the Development Environment": [
          "Why NodeJS?",
          "Installing NodeJS, Postgres, Beekeeper Studio",
          "Creating Database & Connecting Through Beekeeper Studio",
          "Structuring your Backend and Frontend",
          "Resources"
        ],
        "Quick Tour of ExpressJS": [
          "Hello Express!",
          "Route Basics",
          "Dynamic Routes",
          "JSON",
          "POST"
        ],
        "Building User Registration System": [
          "Creating User Table Using Sequelize",
          "Registering User",
          "Adding Unique Constraints to Username",
          "Performing Validation Using express-validator",
          "Catching Duplicate Username",
          "Encrypting Sensitive Data (Passwords)",
          "Implementing Authentication Controller Environment Key",
          "Generic HTTPClient",
          "Implementing Register for Authentication Controller",
          "Developing Registration Screen in SwiftUI"
        ],
        "Introducing MVC Pattern for the NodeJS Backend": [
          "What is MVC Pattern?",
          "Implementing Auth Router",
          "Implementing Authentication Controller"
        ],
        "Building User Login": [
          "Understanding JSON Web Tokens Flow (JWT Flow)",
          "Authenticating the User and Returning the Token",
          "Testing Login Route",
          "Invoking Login Request from Client",
          "Persisting Token in Keychain",
          "Validating the Token Expiration on the Client Side"
        ],
        "Building the Tab View Interface and Implementing Protected Screens": [
          "Agenda",
          "Setting Up Tab Views",
          "Protecting Screens for UnAuthenticated Users",
          "Updating SmartShopApp and Removing TokenValidation"
        ],
        "Fetching, Displaying and Creating Products": [
          "Creating Product Table Using Sequelize CLI Tool and Migration",
          "Adding Product Router and Product Controller",
          "Implementing Get All Products",
          "Displaying Products on Screen",
          "Implementing Create Product Action on Product Controller",
          "Adding Products Using SwiftUI App Part 1",
          "Adding Products Using SwiftUI App Part 2",
          "Implementing Get My Products on Product Controller",
          "Displaying Products By User on Screen"
        ],
        "Uploading Images to the Server": [
          "Installing and Configuring Multer",
          "Uploading Images Using Multer on Server Side",
          "Implementing Uploader Service",
          "Integrating Uploader Server to Add Product Images",
          "Implementing ImagePicker",
          "Saving Product with Image"
        ],
        "Migrating to Xcode 16 and Swift 6": [
          "Updating SwiftUI Client to Swift 6",
          "Fix Photos Picker Issues in iOS 18 and Xcode 16"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Familiarity with any programming language is recommended.",
        "Swift Basics: Understanding of Swift fundamentals is helpful but not mandatory.",
        "Mac and Xcode: Access to a Mac with Xcode installed for iOS development.",
        "Nodejs and JavaScript Basics: A basic understanding of JavaScript and Nodejs is beneficial for backend development.",
        "SQL Fundamentals: Basic knowledge of SQL is helpful for working with PostgreSQL, though essential concepts will be covered.",
        "Curiosity to Learn: A willingness to explore new technologies and build a complete app."
      ],
      "description": "Course Description\nLearn to build a fully functional e-commerce application from the ground up in this comprehensive course. Using SwiftUI for the frontend, Node.js for the backend, and Postgres for the database, you’ll master the entire development process step by step. Whether you’re an iOS developer eager to expand into full-stack development or someone aiming to create a professional e-commerce app, this course equips you with the skills to succeed.\nStarting with setting up your development environment, you’ll design a database schema tailored for e-commerce needs. Then, you’ll dive into backend development using Node.js and Postgres to implement features like user registration, login functionality, product management, and an order system. You’ll also secure your API with JWT-based authentication to ensure safe user credential handling.\nOn the frontend, you’ll build a sleek iOS app using SwiftUI, enabling users to browse products, manage their carts, and place orders. You’ll connect the app to your backend API for seamless user authentication, session management, and secure token storage using Keychain.\nAdditionally, you’ll integrate your app with Stripe to enable secure payment processing for your e-commerce platform.\nBy the end of the course, you’ll have a fully developed e-commerce app. Gain hands-on experience in testing, debugging, and take your project live with confidence.\n\n\nWhat You’ll Learn\nSwiftUI and MV architecture for modern iOS apps\nNode.js and Express.js for developing JSON APIs\nDatabase schema design and integration with Postgres\nUser authentication and session management using JWT\nSecure token storage with Keychain\nFetching and displaying product data\nCart management and a streamlined checkout process\nIntegration with Stripe for payment handling\nTake the next step in your development journey—enroll now and become a full-stack mobile app developer!",
      "target_audience": [
        "iOS Developers: Looking to expand their skill set into full-stack development.",
        "Beginner Developers: Eager to learn modern app development using SwiftUI, Nodejs, and PostgreSQL.",
        "Full-Stack Enthusiasts: Interested in creating a professional-level e-commerce app from scratch.",
        "Startup Founders: Wanting to build their own e-commerce application.",
        "Students and Learners: Aspiring to gain practical experience in full-stack mobile app development.",
        "Anyone Curious About App Development: No prior experience in full-stack is required, just a willingness to learn!"
      ]
    },
    {
      "title": "Learn iOS Programming Building Advance Projects",
      "url": "https://www.udemy.com/course/learn-ios-programming-building-advance-projects/",
      "bio": "The complete iOS10 compatible app based course to master Swift and IOS APIs",
      "objectives": [
        "Create Professional Apps in IOS leveraging the new iOS10 features",
        "Learn to create 5 different types of apps with varied complexity",
        "Learn to code like professionals",
        "Get access to royalty free source code"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "Swift Syntax"
        ],
        "Projects In iOS app1": [
          "Introduction"
        ],
        "Creating the UI in Sketch": [
          "Creating ui in sketch",
          "Creating icon for ios app",
          "Creating a application",
          "Positioning element in app ui"
        ],
        "View Management": [
          "Table view in ios",
          "Adding buttons",
          "Iboutlets and action for buttons"
        ],
        "Adding Persistence with Core Data": [
          "Core data manager class Part A",
          "Core data manager class Part B",
          "Core data manager class Part C",
          "Core data manager class Part D",
          "Load data in detail view"
        ],
        "Adding Features": [
          "Quiz Questions",
          "Shuffle Answer",
          "Test Quiz"
        ],
        "Projects In iOS app2": [
          "intro",
          "Start building UI Part A",
          "Start building UI Part B"
        ],
        "Layout Design": [
          "Layout",
          "Refinements in main seen UI",
          "Spacing and Color"
        ],
        "Adding Views": [
          "Coloring navigation bar",
          "UI for add View",
          "Add Table view Cell"
        ],
        "Core Data": [
          "Add Core Data",
          "Build ability to save Data",
          "Add ability to get data from Coredata",
          "Cell for Indexpath",
          "Format date in Tableview",
          "Application Troubleshoot",
          "ToDoBot Sirikit"
        ]
      },
      "requirements": [
        "Basic knowledge of IOS is required for making the best use of the course"
      ],
      "description": "The course to learn real iOS programming is here. The course teaches you both the fundamentals and advance IOS concepts by building with you 5 real world apps from scratch. It starts from project inception to UI design to feature implementation and testing. All the projects are unique in their problem space and they have been selected to cover the most important and extensively used concepts behind ios and swift programming. Whats more? After you build the projects you will learn how the new ios10 features can be added to enhance the quality of the Apps.\nThe course starts with Swift3 and iOS10 basics and then start with the following projects\nQuiz App game - You will start by building a simple yet conceptually an extensive app which allows you to create quiz for the app users. The main take away from this app will be creation of complex UI and advance Auto Layout.\nToDo list App - You will then start creating a To Do list App. The focus of this App is to master Core Dat. So you will learn a lot about persistence using core data. You will also learn to do the Sirikit integration which is a recent ios10 feature.\nWeather App - Learn to predict weather using third party weather APIs. Learn service calls and third party integration in this very complex app. You are also going to learn about ios10 notifications.\nFinance App - Learn to build advance UI and charts in this amazing App which uses third party charting libraries and shows you how you can use different libraries for your projects. Learn to integrate interactive notification which is a new ios10 feature.\nConverter Application - Learn to create an interactive UI app with our final and most complex of the applications taken up for this project. It will include integration with CRCurrencyRequest for currencies. This App also uses measurement class now introduced in swift 3 to argument features of the App. You will also learn to add the iMessage extensions introduced in iOS10.\n\n\nSo get started and start building apps which are future ready. See you on the other side.",
      "target_audience": [
        "Students who want to learn creation of professional iOS Apps will find this course very helpful"
      ]
    },
    {
      "title": "Swift: Learn how to master Properties in just one hour",
      "url": "https://www.udemy.com/course/swift-property/",
      "bio": "Swift properties is tricky, therefore, it is very important to have a solid understanding of Properties to master Swift",
      "objectives": [
        "Learn in all the details about properties in Swift"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "All About properties": [
          "Stored Properties",
          "Lazy Story Property",
          "Computed Property",
          "Property Observers"
        ],
        "Files / Links / Resources": [
          "Files / Links / Resources from Swift Next Step"
        ],
        "Help me, help you and help other": [
          "Let me know what do you think",
          "Students Ideas and Github Links"
        ],
        "Now you know all there is to know about Properties in Swift 2.1": [
          "Goodby"
        ],
        "Bonus tracks": [
          "Find the best deals here"
        ]
      },
      "requirements": [
        "Basic Swift programing"
      ],
      "description": "Why do our courses have fewer students than most courses on Udemy - because we do NOT try to mislead our new students.\n\n100% real and paid students - We do not believe in the practice used by many instructor on Udemy that offer their courses on blackheads sites to inflate their numbers.\n100% real reviews - We have never bought any review from other sites like fiverr or similar, which is another very common technique among instructors on Udemy.\nWhat to look for:\nLook for the questions on the course during the free preview, the time it took for it to receive an answer, the quality of the answer, how happy the student was with the answer.\nLook for the instructor profile on LinkedIn, and other places.\nTake a tour in the course. Get to know your future instructor before making a decision. After all, it's your future on the line!\nI am sure you will make the right choice so I will see you inside!\nIs this course good value for money?\nFor the price of a cheap fast food burger, you can learn a skill that will stay with you forever, and save you few minutes every day. If your time is valuable, this course is a must!\n\n\nProperties are a fundamental part of programing and it is a MUST for any programmer. This course is all based on the FREE iBook from Apple that can be found in the apple store called \"The Swift Programming Language\". It has 561 pages of Apple’s \"super simpler language\", but before you run and download this ibook, let me tell you what I will offer you in this series.\nI read Apple's book cover to cover and I went through all the examples. I talk with many Apple evangelists and today I am what they call an \"Apple expert\". However, I explain in plain English (with accent) with easy, simple, and everyday applicable examples. And if you watch the videos, follow the examples, and still having questions, I am always here to help you.\nYou have two options now - you can either download Apple’s eBook that explain properties like this and have nobody to ask if you have a question:\nExcerpt From: Apple Inc. “The Swift Programming Language.” iBooks.:\n\"Properties associate values with a particular class, structure, or enumeration. Stored properties store constant and variable values as part of an instance, whereas computed properties calculate (rather than store) a value. Computed properties are provided by classes, structures, and enumerations. Stored properties are provided only by classes and structures. Stored and computed properties are usually associated with instances of a particular type. However, properties can also be associated with the type itself. Such properties are known as type properties. In addition, you can define property observers to monitor changes in a property’s value, which you can respond to with custom actions. Property observers can be added to stored properties you define yourself, and also to properties that a subclass inherits from its superclass.\nStored Properties\nIn its simplest form, a stored property is a constant or variable that is stored as part of an instance of a particular class or structure. Stored properties can be either variable stored properties (introduced by the var keyword) or constant stored properties (introduced by the let keyword).”\nOr you can click enroll now and start to learn with me and thousands of other students from hundreds of countries that are learning with me every day.\nI’ll See you Inside!\nWhat are the requirements?\nBasic Swift programing\nWhat am I going to get from this course?\nOver 9 lectures and 59 minutes of content!\nLearn in full detail about properties in Swift\nWhat is the target audience?\nAnyone with basic knowledge in swift language\nAnyone that wants to excel in Swift programing Skills",
      "target_audience": [
        "Anyone with basic knowledge in swift language",
        "Anyone that wants to excel in Swift programing Skills"
      ]
    },
    {
      "title": "Flutter Responsive Design Split-Screen: Mobile, Desktop, Web",
      "url": "https://www.udemy.com/course/flutter-split-screen-responsive-design-mobile-desktop-web/",
      "bio": "Flutter Split-Screen List and Detail Responsive Design for Phone, Tablet, Desktop, iOS, Android, macOS, Windows, Web",
      "objectives": [
        "Split-Screen Responsive Design",
        "Navigation for List and Detail on different pages",
        "Split-Screen List and Detail pages on the same screen",
        "Portrait and Landscape modes",
        "Phones, Tablets, Desktops, and the Web",
        "Layouts according to available device size",
        "Switch from mobile detail page to Split-Screen layout while resizing",
        "Dark and Light mode",
        "Reusable logic and widgets",
        "Nested Navigation",
        "App-wide state management"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is your instructor?",
          "Resources"
        ],
        "Base Structure: Overview Helpers and Models": [
          "Intro",
          "Main",
          "Constants",
          "Formatters",
          "Navigation Transitions",
          "Themes",
          "User Model",
          "Summary"
        ],
        "Base Structure: Overview State and Widgets": [
          "Intro",
          "App State",
          "App State Notifier",
          "App Bar Elevated",
          "Graph Bar",
          "Navigation Bar",
          "Navigation Rail",
          "Title Gradient Bar",
          "macOS: DebugProfile Entitlements Security",
          "Web: Script Render as html",
          "Summary"
        ],
        "Creating: Helpers and Pages": [
          "Intro",
          "Create Split Screen Layout",
          "Create Constants and Logic",
          "Create Responsive Layout Builder",
          "Create Desktop Web Layout",
          "Create Mobile Tablet Layout",
          "Creating Home Layout",
          "Live Demo's for iPhone, iPad, macOS, Web, Pixel 7, Fold-Out 8, and Windows...",
          "Summary: Helpers and Pages"
        ],
        "Course Summary": [
          "Course Summary: Tasks, Goals, and App's Demo"
        ]
      },
      "requirements": [
        "Basic Flutter and Dart knowledge"
      ],
      "description": "What are our objectives?\nIn this course, you'll use Flutter/Dart to develop a responsive app supporting a Split-Screen List/Detail layout from a single code base supporting multi-platform Phone, Tablet, Desktop, and Web.\nFor instance, you'll create the Split-Screen List/Detail on the same screen depending on device, and navigation from List to Detail page on phones.\nNext, the Desktop and Web requires to handle both Mobile, Desktop, and Web responsive layout when user changes the size of the app’s screen.\nGuess what? No third-party plugins or packages needed.\n\n\nYou’ll start by analyzing the app’s common features, reusable logic, and widgets.\nYou’ll implement Dark and Light Mode, global State Management, and Responsive Layout Builder widget.\nThe Phone app navigates from the List page to the Details page.\nFor the Tablet, Desktop, and Web app, you’ll create a Split-Screen layout showing the List and Detail pages on the same screen.\n\n\nBuild beautifully designed multi-platform application using Flutter and Dart\nLearn UI/UX techniques to wow the user’s experience and keep the company’s branding consistent between platforms\nUse the latest cross-platform Flutter framework and Dart language to create pixel perfect UI designs and adaptivity\nCreate reusable widgets\nUse Layout Builder to create a responsive layout for mobile and web\nSeparate concerns between UI, state, and business logic\nLearn how to use State Management without using third party libraries\nLearn how to create reactive screens to refresh content\nCustom navigation between platforms\nCreate beautiful navigation transitions combining Hero and Navigation transition\n\n\nWhy Flutter?\nFlutter transforms the development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded experiences from a single codebase.\nFlutter is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase.\n\n\nFast\nFlutter code compiles to ARM or Intel machine code as well as JavaScript, for fast performance on any device.\n\n\nProductive\nBuild and iterate quickly with Hot Reload. Update code and see changes almost instantly, without losing state.\\\n\n\nFlexible\nControl every pixel to create customized, adaptive designs that look and feel great on any screen.\n\n\nMulti-Platform\nReach users on every screen\nDeploy to multiple devices from a single codebase: mobile, web, desktop, and embedded devices.\n\n\nStable & Reliable\nTrusted by many\nFlutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers.",
      "target_audience": [
        "Easily create Mobile, Tablet, Desktop, and Web Responsive Split-Screen Design in Flutter",
        "Beginner and experienced developers"
      ]
    },
    {
      "title": "Mastering SwiftData in iOS 17 & SwiftUI 5",
      "url": "https://www.udemy.com/course/mastering-swiftdata-in-ios-17-swiftui-5/",
      "bio": "Practical learning of SwiftData by Building Real App",
      "objectives": [
        "SwiftData",
        "SwiftUI",
        "iOS App Development",
        "Complete app from start to finish"
      ],
      "course_content": {},
      "requirements": [
        "Xcode 15, Mac, Knowledge of Swift Programming"
      ],
      "description": "Welcome to \"Mastering SwiftData in SwiftUI and iOS 17\" – your comprehensive guide to unlocking the full potential of SwiftData in building robust and efficient iOS applications. In this course, we will embark on a journey to build a complete app from start to finish, covering every aspect of SwiftData. Throughout this course, you will: Create SwiftData Models: Gain the expertise to craft SwiftData models from scratch, understanding their structure and how to represent data efficiently. Manipulate Data: Learn the ins and outs of SwiftData operations, including adding, updating, and deleting records. Master the art of managing data seamlessly. Efficient Querying: Explore the world of efficient querying in SwiftData, enabling you to retrieve and process data with optimal performance. Entity Relationships: Dive deep into understanding entity relationships, exploring different types, and implementing them in your app to create a cohesive and interconnected data model. Filtering and Sorting: Acquire skills to filter and sort records in SwiftData, allowing you to present data in the most meaningful and organized manner. Handling Complex Types: Delve into the intricacies of storing complex types, such as images, in SwiftData, enhancing your app's capabilities. Advanced Filtering and Sorting Techniques: Elevate your SwiftData proficiency by mastering advanced techniques for filtering and sorting, giving you the tools to implement sophisticated data management strategies. Whether you're a beginner looking to grasp the fundamentals or an experienced developer aiming to refine your skills, this course is designed to empower you with the knowledge and hands-on experience needed to become a SwiftData maestro. Let's build powerful and efficient iOS applications together!",
      "target_audience": [
        "Anyone who wants to build complete app from scratch in SwiftData and SwiftUI"
      ]
    },
    {
      "title": "Mastering Multi-Modular & Clean Architecture in Android",
      "url": "https://www.udemy.com/course/mastering-multi-modular-clean-architecture-in-android/",
      "bio": "Advanced Android Course:MVVM, Multi-Flavored Builds, Data Store, Advanced Gradle, Custome Plugins, Networking",
      "objectives": [
        "Creating and organizing buildSrc modules.",
        "Managing build configurations: BuildConfig, PluginsConfig, ReleaseConfig.",
        "Handling build types, flavor types, and app dimensions.",
        "Securing signing configurations and managing credentials.",
        "Implementing shared dependencies across modules",
        "Creating and managing shared library Gradle plugins.",
        "Implementing code quality tools: KTLint, Spotless, Detekt.",
        "Adding and organizing feature modules.",
        "Structuring dependencies within feature modules and across the app.",
        "Dependency Injection and Networking",
        "Setting up Dagger-Hilt for dependency injection.",
        "Configuring and managing networking components: Retrofit, OkHttp.",
        "Implementing custom request headers and interceptors.",
        "Securing network requests with SSL, dispatcher management, and certificate pinning.",
        "Designing a flexible OkHttpClient provider interface.",
        "Error Handling and Response Management",
        "Building error handling models and flexible result wrappers.",
        "Mapping and processing network responses and errors.",
        "Implementing network data sources.",
        "Data Layer and Serialization",
        "Working with DataStore (Kotlin Serialization, Proto DataStore).",
        "Creating and managing serializers for app settings and session management.",
        "Integrating DataStore with Dagger-Hilt.",
        "Authentication and Authorization",
        "Implementing session management and token handling.",
        "Developing authentication interceptors with token refresh and Mutex synchronization.",
        "Handling unauthorized tokens and secure retry mechanisms.",
        "Managing UI state, validation, and error handling.",
        "Network debugging with tools like Chucker.",
        "Generating build version reports.",
        "Integrating code documentation with Dokka.",
        "Creating and managing mock APIs."
      ],
      "course_content": {},
      "requirements": [
        "Android Development Experience",
        "Experience with Dependency Injection",
        "Working Knowledge of Gradle"
      ],
      "description": "\"Mastering Multi-Modular & Clean Architecture in Android\" is an in-depth course designed to elevate your Android development skills, focusing on building scalable, maintainable, and testable applications. This course covers the entire spectrum of multi-modular architecture, from foundational concepts to advanced implementation techniques, ensuring you have the expertise to handle complex app development projects.\nYou’ll begin by learning how to set up and organize buildSrc modules, manage build configurations, and handle build types, flavor dimensions, and signing configurations securely. The course emphasizes the importance of modularization, guiding you through adding and organizing feature modules, structuring dependencies, and creating shared Gradle plugins to streamline your development process.\nThe course delves deep into dependency injection with Dagger-Hilt, teaching you how to configure and manage networking components using Retrofit and OkHttp. You’ll explore advanced topics like implementing custom request headers, SSL management, certificate pinning, and designing flexible OkHttpClient provider interfaces.\nError handling and response management are thoroughly covered, with lessons on building robust error models, mapping network responses, and implementing flexible result wrappers. You’ll also gain expertise in creating and managing a data layer using Kotlin Serialization and Proto DataStore, integrating these with Dagger-Hilt for efficient data management.\nUI development with Jetpack Compose is a key focus, where you’ll learn to create dynamic login screens, manage UI state, handle validation, and structure login flows effectively. The course also covers network debugging tools like Chucker, build automation, and maintaining high code quality through tools like KTLint, Spotless, and Detekt.\nAdditionally, the course addresses crucial aspects of authentication and authorization, including session management, token handling, and implementing secure authentication interceptors. You’ll also explore advanced error handling techniques, such as retry mechanisms with Mutex synchronization.\nBy the end of this course, you’ll have a comprehensive understanding of multi-modular architecture, clean code practices, and modern Android development techniques, making you proficient in building complex, enterprise-level Android applications. Whether you’re looking to refine your existing skills or advance your career, this course offers everything you need to master Android development.",
      "target_audience": [
        "Android Developers Seeking to Improve Architecture Skills:",
        "Developers Looking to Master Multi-Modular Projects",
        "Engineers Interested in Advanced Dependency Injection Techniques:",
        "Professionals Focusing on Networking and API Integration",
        "Developers Looking to Improve Code Quality and Automation",
        "Developers Preparing for Senior Roles",
        "Teams Adopting Clean Architecture and Modularization:",
        "Android Developers in Enterprise Environments",
        "Developers Interested in Modern Android Development (MAD) Skills",
        "Developers Preparing for Android Interviews",
        "Developers Focusing on Code Maintainability and Legacy Code Refactoring:",
        "Developers Aiming for Long-Term Code Quality and Performance",
        "Educators and Mentors in Android Developmen"
      ]
    },
    {
      "title": "Android app development for beginners (with Kotlin)",
      "url": "https://www.udemy.com/course/android-q-app-development-with-kotlin-beginner-to-advanced/",
      "bio": "Kotlin Android Apps Development (Beginner to advanced)",
      "objectives": [
        "You will learn how to install tools",
        "You will learn Kotlin for Android",
        "You will learn how to develop Android apps",
        "You will learn how to Implement 4 real apps",
        "You will learn how to use database in your apps",
        "You will learn how to publish your apps on Google Play",
        "1- Installing and Setting Up Tools",
        "Introcucing tools (IDE + Android SDK + Emulator + JDK)",
        "How to download and install required tools",
        "Creating a new Android Studio project",
        "How to change the font of code editor",
        "What is an activity",
        "What is androidmanifest file",
        "Developing your first Android app",
        "Attributes panel",
        "Code completion list",
        "Displaying a toast",
        "Running your app on an emulator",
        "Examining different parts of an emulator",
        "Send sms and phone calls between two emulators",
        "Enabling directional pad",
        "Cloud-based testing",
        "Installing Google USB driver",
        "Enabling developr options",
        "Connecting a real device to the Android Studio",
        "2- Kotlin _ Say Hello to Basics",
        "Int data type",
        "Declaring and initializing variables",
        "Single line comment",
        "var vs val",
        "print() function",
        "Floating point data type",
        "Boolean data type",
        "String data type",
        "Type inference system",
        "Naming conventions (Camel Case)",
        "Data member and function member",
        "dec() function",
        "compareTo() function",
        "Intellisence",
        "Argument",
        "replace(string) function",
        "replace(char) function",
        "char data type",
        "toInt() function",
        "toIntOrNull() function",
        "NumberFormatException",
        "toFloatOrNull() function",
        "What is Null?",
        "Kotlin Nullable types",
        "Arithmetic operators",
        "Operator precedence",
        "Assignment operators",
        "readLine() function",
        "3- App ( Tip Calculator ) + Android Basic Views",
        "TextView",
        "Seekbar",
        "EditText",
        "Button",
        "Set constraints for views",
        "Resolving the \"Hardcoded strings\" warning",
        "Converting text to number",
        "Working with seekbar's listeners (setOnSeekBarChangeListener)",
        "Concatenating strings, variables and expressions with the + operator",
        "Concatenating strings, variables and expressions with String Templates",
        "4- Kotlin _ Control Flow",
        "If expression",
        "If Else expression",
        "Relational operators",
        "Gutter area",
        "Debugging the apps by using breakpoints",
        "Transfer of control",
        "How to check if a numbers is even or odd",
        "Logcat tab",
        "Toast messages",
        "Statement vs Expression",
        "lift out assignment",
        "Any data type",
        "When expression with arg",
        "When vs If",
        "When expression without arg",
        "Combining concitions in a when expression",
        "An app that determines if a number is prime number",
        "How to hold a range of values (double dotted and in operators)",
        "Using the when expression with ranges",
        "Logical AND operator",
        "Useful Android Studio shortcut keys",
        "Defining range variables",
        "5- Kotlin _ Functions",
        "Simple functions",
        "Functions with Parameters",
        "Functions with return type",
        "Function signature",
        "Parameter vs Argument",
        "Userful Android Studio shortcut keys",
        "Multi line comment",
        "6- Kotlin _ Immutable and Mutable Collections + Loops",
        "Defining and initializing the Arrays",
        "Using the arrays",
        "Manipulating the array elements",
        "Any data type",
        "ArrayIndexOutOfBound exception",
        "Data types and performance",
        "How to define an array type explicitly",
        "The second way of declaring and initializing an array",
        "Iterating over arrays by using the for loop",
        "Destructuring declaration",
        "Iterate through a Range",
        "How to get the numbers of an array elements",
        "withIndex() function",
        "Until keyword",
        "listOf() function",
        "mutableListOf() funciton",
        "Array vs Collection",
        "mutable vs immutable",
        "7- Kotlin _ Classes + Enums + Exception Handling",
        "Declaring classes",
        "How to create objects",
        "Constructors",
        "Iterating through an array of objects",
        "Vertical selection",
        "Property and method",
        "Class header",
        "Primary constructor",
        "Declaring properties from the primary constructor",
        "Class diagram",
        "How Enums make things easier",
        "Happy path",
        "Try Catch block",
        "Multiple catch blocks",
        "Finally block",
        "8- App ( English Stories ) + Activities + List View + Singleton Pattern",
        "Displaing data into a Listview",
        "ListView click listener",
        "How to creating a new Activity",
        "Passing data between activities",
        "Scrolling toolbar",
        "How to set the start up Activity",
        "FAB (Floating Action Button)",
        "Snakbar",
        "Singleton pattern",
        "Private visibility modifier",
        "Public visibility modifier",
        "Overriding the functions",
        "String controls characters",
        "9- App ( My Notes ) + SQLite Database + Activity Life Cycle + Action Bar + Alert Dialog",
        "Set the Margin attribute for views",
        "Designing SQLite databases for Android apps (Fields, Records, Tables, ...)",
        "Extending classes",
        "SQLiteOpenHelperClass",
        "TODO() functions",
        "NullPointerException",
        "Check null values",
        "Safe call operator",
        "Not null assertion operator",
        "Using readble connetions to read data from database",
        "Using writable connections to write data to database",
        "OnDestroy() funciton",
        "Performance tune-up while working ith databases",
        "Variables' scope",
        "Up button",
        "<Meta Data> tag",
        "How to add menu to Action Bar",
        "Working with Asset studio",
        "Refactoring resource names",
        "XML namespaces",
        "match-constraint attribute",
        "Hint attribute",
        "Setting EditText text attribute",
        "Changing the EditText focus programatically",
        "How to check if an EditText is empty",
        "Inserting new records into the database",
        "Up button vs Back button",
        "Activity life cycle",
        "Navigating clipboard items",
        "Refactoring functions",
        "How to close an Activity programatically",
        "Alert Dialog",
        "Updating and Deleting records from database",
        "10- App ( Best Quotes ) + Recycler View +Card View + Intents + Guidelines + Unicode Characters",
        "How to insert default values into the database",
        "Designing layouts by using a Card View",
        "Linear Layout",
        "Image View",
        "Layout Margin attribute",
        "Writing a customized Adapter for Recycler View",
        "Recycler View vs List View",
        "Inner classes",
        "findViewByID() function",
        "Arranging and managing Recycler View items by using LayoutManager",
        "Using the customized Adapter View",
        "Passing functions in Kotlin as parameters",
        "Guidelines in constraint layout",
        "On item click listener for RecyclerView",
        "Creating DB in memory",
        "Explicit intent and Implicit intent",
        "Ripple effect",
        "Share data with other apps",
        "11- App ( Animating a Spaceship + Best Quotes ) + Animation in Android + Splash Screen",
        "Alpha animation",
        "Translate animation",
        "Rotate animation",
        "Scale animation",
        "Companion objects",
        "Creating Splash Screens by using Lottie library",
        "Using third-party libraries",
        "Assets folder",
        "Application context vs the this keyword",
        "noHistory attribute",
        "12- Publishing Your App",
        "Parallex effect",
        "Safe zone",
        "Legacy icons",
        "Adaptive icons",
        "Debug key vs Release key",
        "Signing the APK"
      ],
      "course_content": {
        "Installing and Setting Up Tools": [
          "1- Installing tools",
          "2- Creating a new Android Studio project",
          "3- Explaining an Android Studio project's structure",
          "4- Designing your first Android App",
          "5- Run your app on an Emulator",
          "6- Enjoying the Emulator",
          "7- Use a real device to test apps"
        ],
        "Kotlin _ Say Hello to Basics": [
          "1- Data Types and Variables",
          "2- Data Types and Variables - Part 2",
          "3- Data Type Members and Function Members",
          "4- Data Type Members and Function Members - Part 2",
          "5- Kotlin Nullable Types",
          "6- Operators",
          "7- Exercise + Video Answer",
          "8- Exercise + Video Answer"
        ],
        "App ( Tip Calculator ) + Android Basic Views": [
          "1- Intro",
          "2- Designing the UI - Part 1",
          "3- Designing the UI - Part 2",
          "4- Calculating the Tip - Part 1",
          "5- Calculating the Tip - Part 2",
          "6- Exercise + Video Answer",
          "7- Exercise + Video Answer"
        ],
        "Kotlin _ Control Flow": [
          "1- If Expression",
          "2- Exercise + Video Answer",
          "3- Exercise + Video Answer",
          "4- Expressions vs Statements",
          "5- Exercise + Video Answer",
          "6- When Expresssion",
          "7- Exercise + Video Answer",
          "8- Ranges"
        ],
        "Kotlin _ Functions": [
          "1- Simple Functions",
          "2- Functions with Parameters",
          "3- Functions with Return Type",
          "4- Exercise + Video Answer",
          "5- Using Functions in Tip Calculator App"
        ],
        "Kotlin _ Immutable and Mutable Collections + Loops": [
          "1- Arrays",
          "2- Exercise + Video Answer",
          "3- Loops - Iterating Over Arrays",
          "4- Exercise + Video Answer",
          "5- listOf and mutableListOf"
        ],
        "Kotlin _ Classes + Enums + Exception Handling": [
          "1- Classes and Objects",
          "2- Exercise + Video Answer",
          "3- Enums",
          "4- Exercise + Video Answer",
          "5- Exception Handling"
        ],
        "App ( English Stories ) + Activities + List View + Singleton Pattern": [
          "1- Intro",
          "2- Designing the Main Activity",
          "3- Designing the Full Text Activity",
          "4- Designing the Full Text Activity - Part 2"
        ],
        "App ( My Notes ) + SQLite Database + Activity Life Cycle + Action Bar + ...": [
          "1- Intro",
          "2- Designing the Database and UI - Part 1",
          "3- Designing the Database and UI - Part 2",
          "4- Binding listView From Database",
          "5- Designing the NoteDetails Activity",
          "6- Inserting a New Notes Into the MyNotes Table",
          "7- Up and Back Navigation",
          "8- Deleting and Updating a Note - Part 1",
          "9- Deleting and Updating a Note - Part 2"
        ],
        "App ( Best Quotes ) + Recycler View +Card View + Intents + Guidelines + ...": [
          "1- Intro",
          "2- Designing the Database and Inserting Default Values",
          "3- Designing the Card View",
          "4- Writing The Recycler View's Adapter",
          "5- Set the Adapter and Layout Manager",
          "6- On Item Click Listener For RecyclerView",
          "7- QuoteDetailsActivity - Part 1",
          "8- QuoteDetailsActivity - Part 2"
        ]
      },
      "requirements": [
        "No, tools are free",
        "The concepts start from scratch",
        "All you need is a computer",
        "You even don't need an Android device. Because in this course, you'll learn how to create emulators."
      ],
      "description": "* In this course, you will learn how to write Android apps from scratch\n\n\n* No prerequisite is required\n\n\n* The obvious point about this course is that it is exercise-based to make sure you will understand and use the course materials correctly\n\n\n* How to use Kotlin to write useful Android applications\n\n\n* You do not need to be an experienced programmer to learn Android development. All the basics are part of this course.\n\n\n* You will learn how to install and setting up tools\n\n\n* The Tip Calculator app that teaches you how to write your first Android application\n\n\n* The control flow that enables you to write codes that may be executed or not based on conditions\n\n\n* You will learn how to write reusable codes by writing your own functions\n\n\n* You will learn how to store related values and information by using collections\n\n\n* The English Stories app that teaches you about Activities and List Views\n\n\n* The My Notes app which teaches you about SQLite database\n\n\n* The Best Quotes app that teaches you how to use Recycler View instead of List View to get more performance\n\n\n* You will learn how to use animations in your apps\n\n\n* You will learn how to publish your apps\n\n\n* Also you will learn about the best practices",
      "target_audience": [
        "Everyone who thinks about an Android application idea and eagers to turn it into a business",
        "College students",
        "Those who wants to learn the newest programming language (Kotlin)",
        "Android developers that want to update their knowledge about Android SDK"
      ]
    },
    {
      "title": "Create a Native App For Your Business In 8 Days, No Coding!",
      "url": "https://www.udemy.com/course/create-a-native-app-in-8-days-easy-as-creating-a-website/",
      "bio": "Learn how to create a professional app with an amazing, enjoyable platform - to boost your business or for personal use!",
      "objectives": [
        "Create your own native apps",
        "Connect your wordpress posts to the app",
        "Send push notifications",
        "Start an online app buliding business",
        "Update your app with ease",
        "A web developer freelancer? Add another service to your business- creating an app for your customers"
      ],
      "course_content": {
        "Day 1: Ready to create your first app?": [
          "Welcome! Here's some information about the platform you will be working with",
          "What will your app do?",
          "Additional costs",
          "Start working - download the program files",
          "Registering to a hosting account"
        ],
        "Day 2: Let's get some things configured": [
          "Creating a database",
          "Subdirectory VS. Subdomain: understanding the difference:",
          "Uploading the program files to your server",
          "While uploading the files - here's a short methodical break- what you did so far"
        ],
        "Day 3: It starts to get interesting - installing and designing your app!": [
          "Installing the files - so you can finally start working on your app!",
          "Creating a username for your app",
          "Add some information about your app and/or company",
          "Connecting to the app editor",
          "Something important about the platform version",
          "Designing your app - choosing a template and a layout",
          "Let's add some colors!"
        ],
        "Day 4: Adding features - that's where the magic happens!": [
          "Add a newswall - to publish news messages to your users",
          "Create a discount that only your app users will be abale to validate",
          "Show your products and services by creating a catalogue",
          "Running a restaurant? Show your menu in the app",
          "Let your app users feel unique by creating a loyalty card!",
          "You can even run a contest",
          "Add Custom pages - with text, images, videos and more - just like in a website",
          "Add an RSS feed page to show articles from any website supporting RSS",
          "Create a photo gallery by adding your own photos or using third-party services",
          "Add a video gallery from your computer, Youtube or Vimeo"
        ],
        "Day 5: Adding more features": [
          "Add an interactive contact page where your users can contact you instantly",
          "How to add the Push notifications feature",
          "Create a booking system and let your customers set appointments with you",
          "Add links to your external website or any other website",
          "Running a Wordpress website? Show your posts inside the app in a beautiful way",
          "Create folders and make your app menu much easier to navigate",
          "Add as many forms as you want, with various field types",
          "Create a calendar of events and connect it with your Google or Facebook events!",
          "Connect your Facebook page to the app and let your users interact with it",
          "Lock some of the app features to create a VIP membership club"
        ],
        "Day 6: Your app is almost ready! Just a few more steps to go": [
          "APIs - connect your app with services like Instagram, Youtube and faceboook",
          "Push notifications configuration",
          "Create and upload your app icons"
        ],
        "Day 7: Before publishing your app": [
          "Downloading the app final files",
          "Previewing your app in your mobile device",
          "Overview on app file types and registering as an Android developer"
        ],
        "Day 8: Woohoo! It's time to publish your app!!!": [
          "Feeling overwhelmed? Here's some help!",
          "Downloading and installing Android Studio",
          "Producing the app APK file",
          "Uploading your app to Google Playstore!"
        ],
        "Watch this while waiting for your app to be published": [
          "See the app i created in this course on my mobile device!",
          "Watch how i send a push notification!"
        ],
        "Updating your app": [
          "What to update and how"
        ]
      },
      "requirements": [
        "Basic knowledge of downloading and installing programs is an advantage",
        "Wordpress users will have an advantage - but it's not a must",
        "Website owners will have an advantage - but it's not a must"
      ],
      "description": "This course is NOT UPDATED! Be aware!\nPlease note! This course has been created in 2015 and is outdated and not supported anymore. The software has changed a lot. Course lessons are not being updated anymore, but you can still learn how to work with the app and get basic knowledge about it.\n\n\n*** See the app i created in this course in section 9***\n______________________________________________________________\nYou will learn how to publish the app for Android devices, and there is a documented tutorial about publishing it for Apple devices as well.\nWhat will my app do?\nThere are so many features you can add to your app, and i will name a few here. Make sure to watch the free preview video which talks about those features as well:\nNews section\nOnline catalogue\nCustom pages (as many as you want)\nRSS feeds\nImage and video galleries from various services (Picasa, Youtube, Vimeo, Instagram) + upload your own\nContact form with various field types\nA booking system\nA calendar\nShow your Wordpress posts\nShow a non-Wordpress articles via RSS\nConnect your Facebook page\nSend push notifications\n(to name a few...)\nHow long will it take me to build the app?\nThe course is very straight to the point, i tried to keep out any small talks or unneeded information, so you can start working on your app immediately and publish it to the stores within a few days/weeks, depending on your schedule. I divided the steps into 8 days, each takes about 30-60 minutes to complete. You can follow the 8-days program, or work in your own pace depending on your free time.\nIs this course for me?\nThis course is for you if:\nYou own a business and want to offer your customers an app to download, which will make your company look more professional and reliable\nYou own a website and want to turn it into an app, so your followers will have a quick and immediate way to reach you through their devices\nYou own a business and want to make it easier for your customers to reach you when they need your service, by clicking on your app icon\nYou want to send your customers (or website followers) notifications about sales, new articles, new products and such - by sending them push notifications\nYou want to learn how to create apps so you can start a business around it and offer this service to customers\nYou are a webmaster who wants to offer your customers another service besides building their website- creating an app for them too\nYou're looking for an easy to use, free platform to creating an app\nToday, almost every business has a website - which is great, but it makes the competition harder and you have to get creative if you want to stand out in a crowd. The apps world is still at its first stages, and this is JUST the right time to offer your customers another way to reach you by downloading your app. Besides from making you look unique, an app is a GREAT idea if you run a personal blog too, as you can send notifications to your viewers when you publish a new post, and let them reach your content immediately!\nThanks to the platform you will work with in this course, a native app for your business or personal use is at the tip of your fingers. All you need is to carefully pay attention to all the steps, be willing to learn a new (and easy) skill and be motivated to get your first app up in the stores within a few days!\nAdditional costs:\nThe platform you will work with is free to download and use. That being said, there are 2 services you *might* have to pay for, which are not related to the free platform:\nA hosting service - the platform must be installed in a hosting server. Prices of hosting account vary from 4$-10$ a month. There is a detailed PDF explaining about this in the course. If you are already registered to a hosting company (for example, if you run a website) - you will probably not need to pay this fee as you can usually use your current hosting account to install the program.\nA developer account - anyone who wants to publish apps must be registered as an Android and/or Apple developer. Android developer account costs 25$ (one time) and Apple developer account costs 99$ (per year). One account lets you publish as many apps as you want and it is not related to the program you create the app with. You can avoid those costs if you get someone else to upload the apps for you - but it's NOT recommended!\nYou're going to enjoy creating your app!\nAfter spending months looking for an easy to use, straightforward and inexpensive solution to building a native app, i have found an open source CMS that does exactly what i had hoped for - lets me create an app in a way that is almost as easy as creating a Wordpress website!\nAs a webmaster and a webdesigner, i've been working with Wordpress for the past 7 years and it's one of the things i most enjoy doing - creating websites. Lately, after realizing this world is getting too crowded and the competition becomes tougher everyday, i decided to dive into the apps world, so i can offer my customers a new service - building an app for them. Unfortunately, i was frustrated with what i found - app building services asked for a high monthly or one-time fee and most of the tools were too complicated to understand for a non-programmer like me. A second before giving up, i found the solution i had been looking for - a system that makes the process of creating an app as easy and fun as creating a website, and is open source and free too.\nBut i don't know how to create a website!\nIf you've never built a website before, or have no idea what Wordpress is - no worries as i show you exactly what to do in each step, so this course is great for whoever wants to create an app regardless to any prior experience.\nThe course will guide you through all the steps you have to take in order to get yourself a native app that people can download from the app stores.\nThe app you will create can be produced as an Andoid app as well as Apple one. I will show you how to get the app online in the Google Play store (Android) while a documented tutorial of how to get the app in the Apple store is available too (a video showing how to do that will follow soon).\nIn this course, you will watch me going through all the steps from A to Z, while some of the video lectures will be followed by PDF files for further guidance.\nCourse overview in short\nAbout the app you will create\nDownloading the app program files (free)\nRegistering to a hosting account (please view the \"additional costs\" lecture which is free to preview)\nCreating a database\nUploading the app program files to your hosting account via a (free) FTP client\nInstalling the program platform\nConfiguring your app\nDesigning your app\nAdding features to your app\nCreating APIs\nCreating the app icon\nDownloading your app files\nPreviewing your app in your device\nRegistering as a developer (please view the \"additional costs\" lecture which is free to preview)\nDownloading Android Studio (free)\nProducing your app file\nuploading your app file to the stores and publishing your app\nSending push notifications\nUpdating your app\nCreating an app business\nSummary and thank yous :-)\nEnroll today - to see your app in the stores within 8 days from now!",
      "target_audience": [
        "Business owners who want to offer customers an app to download",
        "Anyone who wants to send push notifications to customers/viewers/app users with sales, updates and new post notifications",
        "Newbies who want to start an app building business",
        "Whoever wants to create a native app and has no coding experience",
        "Web developers who want to dive into the app business world and offer another service to your customers",
        "Personal blog/ website owners who want to create an app which will support your website"
      ]
    },
    {
      "title": "Develop iPhone and iPad apps with no programming experience",
      "url": "https://www.udemy.com/course/develop-iphone-and-ipad-apps-with-no-programming-experience/",
      "bio": "Learn how I use outsourcing to develop my iPhone and iPad apps that have earned $85,408 since August 2011.",
      "objectives": [
        "By the end of the course, you will know what it takes to develop an iOS app through outsourcing.",
        "In this course you will learn how to find an idea, how to test it, where to hire, what to look for, how to hire, how to setup your iOS developers account, and how to prepare your app for the App store."
      ],
      "course_content": {
        "Foundation": [
          "Class Overview",
          "Get in the right mindset",
          "Your why power"
        ],
        "Developing and fine tuning your idea": [
          "Types of apps",
          "Researching winning app ideas",
          "How to research the App Store",
          "Don't be first into a market",
          "Is your idea worth developing?",
          "Top App Charts",
          "How to improve an app",
          "Wireframe and app specs",
          "Looks DO matter",
          "Monetize your app",
          "Analyze other apps"
        ],
        "All about outsourcing": [
          "You are the boss!",
          "Where to hire",
          "Write your job ad",
          "Post your job on Elance",
          "Post your job on Odesk",
          "Review the applicants",
          "Beware of lying programmers",
          "Conduct an interview",
          "The NDA",
          "How much will it cost?",
          "How to handle payments",
          "Making your final decision",
          "Slow to hire, quick to fire",
          "Summary for outsourcing"
        ],
        "The Business Setup": [
          "Testing 1..2..3",
          "Register as an Apple developer",
          "App store 101",
          "Keyword optimization",
          "Setting up your website"
        ],
        "Post launch": [
          "Tracking your app",
          "Promo codes",
          "App store affiliate program",
          "Next steps after app is live",
          "Low downloads - what to do"
        ],
        "Extra app features": [
          "Nag screen",
          "The more screen",
          "The review trick"
        ],
        "Summary": [
          "You're an app developer now!"
        ]
      },
      "requirements": [
        "An iOS device like an iPad, iPhone, or iPhone touch to test your apps.",
        "iOS developers account $99 per year"
      ],
      "description": "This course will teach you how to develop iPhone and iPad apps with zero programming experience.\nMy name is Benny Hsu and I had an idea for an app back in 2011, but didn't know any programming. I tried to learn from books and courses but found it way too hard. I didn't have years and the patience to learn how.\nThen I discovered outsourcing. I thought outsourcing was for simple tasks only. You know - make reservations, update calendar, maybe book some airplane tickets. It turns out - there is a lot more to it. This was the answer to how I could get my idea developed amazingly fast, without spending hours and hours learning new skills and technologies.\nOutsourcing was my ticket to make it happen, but I still I had a lot of concerns:\nWhere do I look?\nHow do I convey my idea?\nHow to hire?\nHow can I make sure I don't get ripped off?\nHow much will it cost?\nAnd more...\nSo I learned as much as I could about this business to just get started. I would learn the rest along the way.\nI finally got started in 2011 with my first app, Photo 365. When it was released in August 2011, it had earned me $33,997.77 in 30 days.\nApple featured it as New and Noteworthy two weeks after I launched. A week later, Apple named it ‘App of the Week’. Unbelievable!\nUsually apps that get selected are from companies with employees and startup funding. Apple probably didn't know I was just a guy, with no experience, who outsourced his work overseas.\nIf it wasn't for outsourcing and the process I created, this would have never happened.\nNow I have three more apps (see my bio) and am developing more.\n\nI still have no idea how to program. I couldn't write a single line of code to save my life. I don't even know how to upload my apps. I'm not technical at all.\nI'm just a regular guy who hated my job and wanted to find a way to make money that I actually enjoyed.\nWhat about you?\nHave you dreamed about developing an iPhone app, but don’t know how? I can teach you.\nBuilding my first app has changed my life. I used the same framework again and again to create my other apps, and I’ll keep on using it. I want to give you this framework, so you can start creating your very first app.\nI know that’s what I needed two years ago when I was looking for answers.\nI have step-by-step videos that will teach you my proven framework for developing a winning app idea, where to hire, what to look for, how to conduct interviews, hiring the best team, and getting your app looking good in the App store.\n\nWhen I began creating apps, I learned a lot! I've made costly mistakes, but I have learned from them. I'm made adjustments and have fine tuned the process. I want to make sure you don't make the same mistakes and don’t have to go through such a steep learning curve.\nYou will get answers to all of these common questions:\nI have an idea, but what should I do if it’s been done already?\nHow can I make sure I don’t get ripped off when I hire people?\nHow can I protect my idea?\nWill this cost a lot of money?\nI have an idea for an app, but don’t know what the next steps are.\nHow can I make money from apps?\nI’m not technical so I can’t do this.\nI’m really bad with graphics and don’t know how to make it pretty.\nAnd more...\nAll are good questions, but none of the above can stop you from achieving your goal if you follow my framework.\nAre you ready? Let's do it!!",
      "target_audience": [
        "Anyone who wants to develop an iOS app, but doesn't know how to code or program."
      ]
    },
    {
      "title": "Build an Employee Attendance System with Flutter & Supabase",
      "url": "https://www.udemy.com/course/build-an-employee-attendance-system-with-flutter-supabase/",
      "bio": "Master the art of building real world application which solves a problem",
      "objectives": [
        "Authenticate users via email and password",
        "Implement the check-in check-out feature",
        "Enable employees to view their attendance history for any month of the year",
        "Understand how to use Provider as a state management tool",
        "Implement efficient data sharing between different components of the application",
        "Store Employee Location data",
        "Learn to use Supabase Database",
        "Building mobile applications for real-world use cases."
      ],
      "course_content": {
        "Project Configuration": [
          "Create a Flutter Project",
          "Initialize Supabase Client"
        ],
        "Authentication": [
          "Create a Login Screen",
          "Create a Register Screen",
          "Create Auth Service Class",
          "Method to Register Employee",
          "Method to Login and Sign out",
          "Assign Methods to UI",
          "Download the Code"
        ],
        "Database": [
          "Creating User Model and Db Tables",
          "Creating Database Service Class",
          "Handle User Auth State",
          "Work on Home Screen",
          "Download the Code"
        ],
        "Work on Attendance Screen": [
          "Work on Attendance UI",
          "Implement Slide to Check in",
          "Function to get User Data",
          "Attendance Table and Service Class",
          "Function to mark attendance",
          "Download the Code"
        ],
        "Work on Attendance History": [
          "Function to get Attendance History",
          "Work on User Interface",
          "Show the History Data",
          "Function to get Employee Location",
          "Store Location while Check In",
          "Download the Code"
        ],
        "Work on Profile Screen": [
          "Function to get all Departments",
          "Function to Update Profile data",
          "Dropdown Menu to select Department",
          "Work on Signing out",
          "Download the Complete Code"
        ],
        "Enable Row Level Security": [
          "Policies for Attendance Table",
          "Policies for Departments table",
          "Policies for Employees Table",
          "Test the Complete Application"
        ]
      },
      "requirements": [
        "Basics of Dart Programming",
        "Basics of Flutter",
        "Basics of Supabase"
      ],
      "description": "Welcome to the comprehensive course on Building an Employee Attendance Management System with Flutter and Supabase!\n\n\nIn this course, you will learn how to create a feature-rich employee attendance management system using the popular cross-platform framework, Flutter, and Supabase, an open-source alternative to Firebase for data storage and management. You will start by building a robust authentication system, enabling employees to register and login with their email and password credentials.\n\n\nUsing Flutter and Provider, you will then create a user-friendly interface that allows employees to easily slide to check in and check out for the day. The application will also enable employees to view their attendance history for any month of the year, update their personal details, and department, all while maintaining efficient state management using Provider.\n\n\nThis course is designed to equip you with the skills and knowledge needed to build an application that can streamline attendance tracking and management for any organization. Upon completing this course, you will have a fully functional attendance management system that you can showcase in your portfolio to potential employers, demonstrating your proficiency in developing robust and responsive mobile applications using Flutter, Supabase, and Provider.\n\n\nWhether you are a beginner or an experienced developer, this course will guide you through every step of the process of building an efficient employee attendance management system using the latest development tools and best practices. So, enroll now and start your journey to becoming a highly-skilled mobile application developer!",
      "target_audience": [
        "Aspiring mobile app developers who want to learn how to build practical mobile applications with Flutter and Supabase",
        "Beginner to intermediate level programmers who want to add Flutter and Supabase skills to their programming toolkit",
        "Human resource managers or professionals who want to implement an efficient and modern attendance management system for their organization",
        "Students or individuals who want to learn how to build mobile apps for their personal or academic projects"
      ]
    },
    {
      "title": "Flutter Advanced Course Chatting Using BLoC",
      "url": "https://www.udemy.com/course/flutter-advanced-course-chatting-using-bloc/",
      "bio": "iOS and Android App Using Flutter",
      "objectives": [
        "Learn how to build api and connect with Flutter app",
        "Flutter BLoC state management",
        "Chatting in Flutter using BLoC state management",
        "Build Google, Apple and Facebook login"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Profile section": [
          "Frontend and profile bloc part 1",
          "Frontend and profile name part 2",
          "Frontend and profile button row part 3"
        ],
        "My Course section": [
          "Create blocs for my course part 1",
          "Frontend and build my course detail blocs part 2",
          "Frontend and more on my course blocs, states and events part 3",
          "Frontend and my course work on blocs state order part 5",
          "Frontend and my course maintain the correct order part 6"
        ],
        "Buy course section": [
          "Frontend and create buy course blocs part 1",
          "Frontend and inject buyblocs and ui part 2.mp4"
        ],
        "Backend and build api and test": [
          "Backend and build coursesBought api part 1",
          "Backend and test coursesBought api part 2",
          "Backend and fix api bug part 3"
        ],
        "Frontend and bought courses": [
          "Frontend and show the courses bought part 1",
          "Frontend and show courses bought image and text part 2",
          "Frontend and refactor courses bought part 3"
        ],
        "Frontend Payment detail": [
          "Frontend and Payment detail introduce cubits part 1",
          "Frontend and Payment detail emit cubit states part 2",
          "Frontend and Payment detail order list part 3"
        ],
        "Search section": [
          "Frontend and show search items 6",
          "Frontend and fix 400 status code search items part 7",
          "Frontend and seperate home and search page actions part 8",
          "Frontend and refactor search code part 9"
        ],
        "Backend and make search api": [
          "Backend and search api"
        ]
      },
      "requirements": [
        "Flutter Basic Experience"
      ],
      "description": "This is the second part of the earlier course. In the earlier section, we covered BLoC state management and how to use the shared the data for updating UI.\nWe have covered login, registration and restful api.\nIn this section, we will cover how to use BLoC with chat restful api. This part would highly focus on creating chatting functionality in detail.\nWe will also be doing Clean Architecture With BLoC\nFor chatting, we would be covering with the integration of Firebase chatting api. That means we use Firebase database and storage for storing chat info.\nWe will also see how to retrieve data in certain order. We also cover how to show red dots and clear the red dots for chatting incoming messages.\nNotification would be crucial part of it as user sends messages, others would see it.\nApart from this we also cover google email login, apple email login and facebook login.\nSo after finishing this part, you would be able to login with different social media account.\nWe will also finish the profile section and search section. Search could be difficult for most students. After this you will master how to make a search query and show it on the UI.\nAlong the we will build our API for chatting, login and search items.",
      "target_audience": [
        "For intermediate to advanced learners"
      ]
    },
    {
      "title": "SwiftUI Instagram 2.0 | Async/Await | Firestore | 2023",
      "url": "https://www.udemy.com/course/swiftui-instagram/",
      "bio": "Build Instagram with SwiftUI and the latest technologies!",
      "objectives": [
        "Advanced SwiftUI Concepts",
        "Advanced Networking and Data Management with async/await",
        "User Authentication and Security",
        "Image Processing and Uploading",
        "Advanced Social Media Engineering"
      ],
      "course_content": {
        "Introduction": [
          "Project Setup"
        ],
        "User Interface": [
          "Tab Bar Setup",
          "Profile View",
          "Feed View",
          "Explore View",
          "Login View",
          "Registration View"
        ],
        "Data Models & Mock Data": [
          "User Data Model",
          "User Profile Navigation",
          "Post Data Model",
          "Upload Post View"
        ],
        "Firebase Setup": [
          "Firebase Setup & Integration"
        ],
        "User Authentication": [
          "Authentication Service",
          "Registering a User",
          "Log in / Log out",
          "Upload User Data to Cloud Firestore"
        ],
        "Fetching User Data": [
          "Loading Current User Data",
          "Fetching Users from Firestore"
        ],
        "Edit Profile & Profile Images": [
          "Profile Action Button",
          "Edit Profile View",
          "Update User Data",
          "Uploading Profile Image to Firebase Cloud Storage",
          "Loading User Images"
        ],
        "Posts": [
          "Uploading A Post",
          "Fetching Posts for User Feed",
          "Fetching Posts for User Profile"
        ]
      },
      "requirements": [
        "No programming experience needed!"
      ],
      "description": "Take your iOS development skills to the next level with Instagram SwiftUI Pro 2.0, an advanced course designed for experienced developers looking to master the art of creating stunning and feature-rich applications using SwiftUI. Building upon the foundation of our successful Instagram SwiftUI Pro course, this 2.0 version offers an even deeper dive into the world of modern iOS app development.\nIn this intensive course, you'll explore advanced concepts, techniques, and best practices for building a fully functional Instagram-like app using the power of SwiftUI, Swift, and related frameworks. Through hands-on projects and real-world scenarios, you'll gain practical expertise in creating elegant and dynamic user interfaces, implementing intricate interactions, and seamlessly connecting with backend services.\nCourse Highlights:\nAdvanced SwiftUI Concepts: Learn to harness the full potential of SwiftUI by delving into complex layout structures, custom animations, and sophisticated UI components. Understand how to create dynamic and responsive interfaces that adapt to various device sizes and orientations.\nMVVM Architecture: Build your app upon a solid foundation using the Model-View-ViewModel (MVVM) architecture. Explore advanced MVVM concepts such as data binding, data flows, and separation of concerns to create maintainable and scalable code.\nCustom Animations and Transitions: Elevate your app's user experience by mastering the creation of custom animations, transitions, and gestures. Dive into the SwiftUI animation framework to bring life to your UI elements and enhance user engagement.\nAdvanced Networking and Data Management: Learn how to connect your app to backend services, handle complex data structures, and manage asynchronous operations effectively. Explore techniques for caching, pagination, and optimizing network requests.\nUser Authentication and Security: Implement secure user authentication using industry best practices. Explore OAuth, JWT, and other authentication mechanisms to protect user data and ensure a seamless login experience.\nImage Processing and Uploading: Learn how to upload images and create posts to display in a user feed\nUser Profiles: Customize user profiles to build a rich social media experience for users\nApp Store Optimization: Gain insights into promoting and distributing your app on the App Store. Explore strategies for improving discoverability, increasing downloads, and optimizing user reviews and ratings.\nBy the end of Instagram SwiftUI Pro 2.0, you'll have the skills and confidence to develop high-quality, complex iOS applications that rival industry-leading apps like Instagram. Whether you're looking to enhance your portfolio or take your career to new heights, this course equips you with the knowledge and experience to create exceptional SwiftUI-based apps that stand out in today's competitive app development landscape. Join us and become a true SwiftUI Pro!\nPrerequisites: This course is designed for experienced iOS developers with a solid understanding of Swift programming and SwiftUI basics. Familiarity networking concepts, and basic design principles is recommended. Completion of the previous Instagram SwiftUI Pro course or equivalent experience is not required.",
      "target_audience": [
        "iOS Developers looking to improve their skills and master SwiftUI"
      ]
    },
    {
      "title": "Flutter Hive NoSQL Database",
      "url": "https://www.udemy.com/course/flutter-hive-nosql-database/",
      "bio": "Build Flutter NoSQL Database App With Hive Package",
      "objectives": [
        "Flutter",
        "Dart",
        "Hive",
        "Secure Storage"
      ],
      "course_content": {
        "Introduction": [
          "Flutter Advance Course",
          "Hive Database Introduction",
          "Setup Flutter Project",
          "Initialize Hive Database",
          "Bottom Navigation",
          "Hive Box Basic",
          "Hive Type Adaptor",
          "Open Student Box",
          "Write To Student Box",
          "Type Adaptor Teacher Object",
          "Teacher Box Read and Write",
          "Box ValueListenable",
          "Type Adaptor Bank Object",
          "Hive Box Encryption",
          "iOS and Android Box Encryption",
          "Closing and Compacting Box",
          "Edit and Delete Record",
          "Filter Record"
        ],
        "Source Code": [
          "GitHub Repository Link"
        ]
      },
      "requirements": [
        "Basic of Flutter & Dart"
      ],
      "description": "In this Flutter course we are going to learn about local data storage using Hive package which help us to create NoSQL database, it internally make use of key-value and work well both with Android, iOS, Desktop and Web.\nHive is a lightweight and blazing fast key-value database written in pure Dart. Inspired by Bitcask.\nFeatures\nCross platform: mobile, desktop, browser\nGreat performance (see benchmark)\nSimple, powerful, & intuitive API\nStrong encryption built in\nNO native dependencies\nBatteries included\nStore objects\nHive not only supports primitives, lists and maps but also any Dart object you like. You need to generate a type adapter before you can store objects\nHive was written with Flutter in mind. It is a perfect fit if you need a lightweight datastore for your app. After adding the required dependencies and initializing Hive, you can use Hive in your project:\n\n\nWhat are boxes?\nAll data stored in Hive is organized in boxes. A box can be compared to a table in SQL, but it does not have a structure and can contain anything.\nFor a small app, a single box might be enough. For more advanced problems, boxes are a great way to organize your data. Boxes can also be encrypted to store sensitive data.\n\n\nWhen to use Hive\nHive is very performant because it has little overhead compared to relational databases. The API is very close to how the data is stored on the disk.\nKey-value databases can be used to store almost any kind of data. For example:\nUser profiles\nSession information\nArticle/blog comments\nMessages\nShopping cart contents\nProduct categories\nBinary data\netc.\nHive is also one of the best options when it comes to cross-platform support. You don't have to include binaries, and it works in the browser using IndexedDB.\nIf you use the shared_preferences packages and don't need to access them from native code, you should always use Hive instead.",
      "target_audience": [
        "Anyone interested in Flutter"
      ]
    },
    {
      "title": "Flutter Masterclass: Beginner to Pro [2024]",
      "url": "https://www.udemy.com/course/fluttermasterclass/",
      "bio": "Learn how to code apps for iOS / Android / web with Flutter",
      "objectives": [
        "Programming fundamentals: Let's get you up to speed on the basics of coding first",
        "Everything is a widget!",
        "Code functional apps: todo / notes / habit tracker / ecommerce / chat app / social media app / weather app / ..",
        "Create apps with a beautiful and elegant design",
        "Learn about databases: offline (Isar) & online (Firebase)",
        "Read API data: Weather app",
        "Themes: light / dark mode",
        "Notifications: iOS & Android",
        "Responsive design: different screen sizes",
        "Music Player App"
      ],
      "course_content": {
        "Introduction: Welcome to the Flutter Masterclass!": [
          "Introduction"
        ],
        "Beginner level": [
          "Programming Fundamentals",
          "Everything is a Widget!",
          "Navigation",
          "Stateless vs Stateful Widgets",
          "Get User Input",
          "Building Your First App: TODO APP",
          "Nike Sneaker Shop UI"
        ],
        "Intermediate / Pro level": [
          "Themes",
          "Simple State Management",
          "Advanced UI: Minimal Ecommerce App",
          "Null Safety - Programming",
          "Database (Offline) - ISAR",
          "Database (Offline) - Minimal Notes App",
          "Database (Offline) - Habit Tracker App",
          "Authentication - Firebase",
          "Database (Online) - Firebase CRUD",
          "Database (Online) - Chat Messenger App",
          "Database (Online) - Minimal Social Media App",
          "Read API Data - Weather App",
          "Read API Data - NBA Stats App",
          "Notifications - Android",
          "Notifications - iOS",
          "Responsive Design",
          "Music Player App"
        ]
      },
      "requirements": [
        "No programming experience required. The course will start from the very beginning.",
        "The only requirement is that you have Flutter installed on your computer and can open up a new project."
      ],
      "description": "This is 5 years of my learning and experience as an app developer condensed into a 10 hour course. This is for anyone who wants to become an app developer, no matter what level you are. This masterclass will start from the very beginning to making your own production-ready apps for iOS / Android / web /.. using Flutter - a cross platform tool that makes it easy to build apps once and deploy them any platform.\n\nZero Programming Experience Required\nThis course is designed to teach you from the very beginning, so you do not need to have any programming/coding experience - the course will begin with the basic programming fundamentals to get you up to speed. If you've got Flutter ready on your computer, you're all set. In just 10 hours with Mitch, you'll go from beginner to making your own apps.\n\nCourse Structure (10 hrs) / Full Source Code (9 apps)\nTodo App / Minimal Notes App / Sneaker Shop App / Minimal Ecommerce App / Habit Tracker App / Expense Tracker App / Music Player App / Minimal Chat App / Minimal Social Media App\n\nBy the end, you'll be ready to make your own apps. Remember, practice makes perfect. Start with small projects and keep going. Welcome to the Flutter Masterclass – your first step into making apps. Good luck!",
      "target_audience": [
        "Beginners who want to learn how to code apps and get into app development",
        "Intermediate level developers who want to refine their skills"
      ]
    },
    {
      "title": "Modern Android App Architecture",
      "url": "https://www.udemy.com/course/modern-android-app-architecture/",
      "bio": "Design Scalable Apps and Prepare for a Mobile Tech Lead Role",
      "objectives": [
        "Becoming a Mobile Tech Lead: Master architectural skills",
        "Know how to architect apps of any size",
        "Writing clean code: Best practices and system design principles",
        "Comparing and choosing between MVC, MVP, and MVVM",
        "Implementing Clean Architecture & Layered Architecture in Android apps",
        "Building scalable apps with Android Architecture Components, Navigation & Dependency Injection",
        "Mastering modularization in multimodule Android projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Overview",
          "Introductory Notes",
          "Download your slides",
          "Course demo code on github"
        ],
        "Clean Code: System Design Principles": [
          "Clean Code",
          "Clean Code: Overview",
          "Clean Code: Goals",
          "KISS",
          "YAGNI",
          "DRY",
          "SOLID",
          "System Design Principles: Quiz",
          "SOLID: Single Responsibility Principle",
          "SOLID: Open/Closed Principle",
          "SOLID: Liskov Substitution Principle",
          "SOLID: Interface Segregation Principle",
          "SOLID: Dependency Inversion Principle",
          "SOLID: Quiz",
          "Clean Code: Demo Code",
          "DRY: Demo",
          "Single Responsibility Principle: Demo",
          "Open/Closed Principle: Demo",
          "Liskov Substitution Principle: Demo",
          "Interface Segregation Principle: Demo",
          "Dependency Inversion Principle: Demo"
        ],
        "Architectural Patterns": [
          "Architectural Patterns",
          "Architectural Patterns: Overview",
          "MVC: Model-View-Controller",
          "MVC: Quiz",
          "MVC: Demo Code",
          "MVC: Demo",
          "MVP: Model-View-Presenter",
          "MVP: Quiz",
          "MVP: Demo Code",
          "MVP: Demo",
          "MVVM: Model-View-ViewModel",
          "MVVM: Quiz",
          "MVVM: Demo Code",
          "MVVM: Demo",
          "Comparison: MVC vs. MVP vs. MVVP",
          "Architectural Patterns: Quiz"
        ],
        "Clean Architecture": [
          "Clean Architecture",
          "Clean Architecture: Overview",
          "Clean Architecture: Goals",
          "Clean Architecture: Strategies",
          "Clean Architecture: Components",
          "Clean Architecture: Demo Code",
          "Clean Architecture: Demo",
          "Clean Architecture: Quiz"
        ],
        "Layered Architecture": [
          "Layered Architecture",
          "Layered Architecture: Overview",
          "Architectural Principles & Best Practices",
          "Architectural Principles: Quiz",
          "Recommended App Architecture",
          "Recommended App Architecture: Quiz",
          "Layered Architecture: UI Layer",
          "Unidirectional Data Flow",
          "UI State Production Pipeline",
          "Exposing UI State",
          "Consuming UI State",
          "UI Layer: Quiz",
          "Layered Architecture: Data Layer",
          "Repositories: Advanced Topics",
          "Build Offline First",
          "Data Layer: Quiz",
          "Layered Architecture: Domain Layer",
          "Domain Layer: Quiz",
          "Layered Architecture vs. Clean Architecture",
          "Layered Architecture vs. Clean Architecture: Quiz",
          "Layered Architecture: Demo Code",
          "Demo: Intro",
          "Demo: Layered Architecture Outline",
          "Demo: Layered Architecture Structure",
          "Demo: UI & Domain Layer",
          "Demo: Data Layer",
          "Demo: Sum Up"
        ],
        "Android Architecture Components": [
          "Android Architecture Components",
          "Android Architecture Components: Overview",
          "View Binding",
          "Data Binding",
          "Data Binding: Advanced Topics",
          "Quiz: View Binding & Data Binding",
          "Lifecycle-Aware Components: Lifecycle API",
          "Quiz: Lifecycle API",
          "Lifecycle API: Demo Code",
          "Demo: Lifecycle API",
          "UI Layer Libraries: ViewModel",
          "ViewModel: SavedStateHandle",
          "Saving UI State",
          "Quiz: Saving UI State",
          "ViewModel: Best Practices",
          "Quiz: ViewModel",
          "Demo: ViewModel",
          "UI Layer Libraries: LiveData",
          "LiveData vs. Kotlin Flows",
          "Quiz: LiveData",
          "UI Layer Libraries: Coroutines",
          "Quiz: Coroutines",
          "Demo: Coroutines",
          "Data Layer Libraries: SharedPreferences & Jetpack DataStore",
          "Data Layer Libraries: Room",
          "Quiz: Preferences & Room",
          "Data Layer Libraries: WorkManager",
          "WorkManager: Advanced Topics",
          "Quiz: WorkManager",
          "Demo: WorkManager",
          "Multi-Layer Libraries: Paging Library",
          "Quiz: Paging Library",
          "Paging Library: Demo Code",
          "Demo: Paging Library"
        ],
        "App Navigation": [
          "App Navigation",
          "App Navigation: Overview",
          "Principles of Navigation",
          "Quiz: Principles of Navigation",
          "Navigation Component",
          "Navigation Controller",
          "Quiz: Navigation Component & Navigation Controller",
          "Destination Types",
          "Back Stack",
          "Quiz: Back Stack & Destination Types",
          "Navigation Graph: Overview",
          "Navigation Graph: Nested Graphs",
          "Navigation Graph: Deep Links",
          "Update on Jetpack Compose typesafe navigation!",
          "Navigation Graph: Type-Safe Navigation",
          "Quiz: Navigation Graph",
          "Navigation Component: Integrations",
          "Quiz: Navigation Component Integrations",
          "Navigation: Demo Code",
          "Demo: Navigation Component"
        ],
        "Dependency Injection": [
          "Dependency Injection",
          "Dependency Injection: Overview",
          "Dependency Injection: Intro",
          "Service Locator",
          "Quiz: Dependency Injection & Service Locator",
          "Comparison of Frameworks",
          "Comparison of Frameworks: Dagger",
          "Comparison of Frameworks: Hilt",
          "Comparison of Frameworks: Koin",
          "Comparison of Frameworks: Kodein",
          "Comparison of Frameworks: Sum Up",
          "Quiz: Frameworks",
          "Dependency Injection: Demo Code",
          "Demo: Hilt & Kodein"
        ],
        "Modularization": [
          "Modularization",
          "Modularization: Overview",
          "Principles of Component Cohesion",
          "Principles of Component Coupling",
          "Quiz: Component Cohesion & Coupling",
          "Multimodule Projects",
          "Types of Modules",
          "Quiz: Multimodule Projects",
          "Modularization Strategies",
          "Quiz: Modularization Strategies",
          "Architecture by Layer: Demo Code",
          "Modularization Demo: App Module",
          "Modularization Demo: Architecture by Layer",
          "Architecture by Feature: Demo Code",
          "Modularization Demo: Architecture by Feature"
        ],
        "Google I/O 2025 Additions": [
          "Google I/O 2025: Intro",
          "Google I/O 2025: Navigation 3"
        ]
      },
      "requirements": [
        "Some prior experience in mobile app development (preferably Android) is expected."
      ],
      "description": "Take your Android development skills to the next level and become an expert in app architecture. Whether building small apps or large, multimodule projects, mastering Android app architecture is key to creating scalable, maintainable, high-performing applications.\nBeing an expert in app architecture will also prepare you for a Mobile Tech Lead role, as you will be able to make key architectural decisions, and guide projects toward success. You will also learn crucial system design principles and patterns that will help you excel in mobile system design interviews.\nStefan started developing Android apps - almost from Android's birth - in 2011, and since then had to architect, design, and develop many challenging Android, iOS, and Multiplatform apps. In this course, he wants to share his comprehensive experience with you.\nApps are unique - different apps have different requirements and may require different architectural decisions. This course is designed to provide a solid foundation of architectural principles, explain and compare popular app architectures, and guide in selecting the right architecture based on the given requirements. Despite the course being especially targeted at Android, most concepts also apply to iOS.\nAbout 8 hours of on-demand video content will cover what you need to know to master modern Android app architecture:\nWriting Clean Code: Apply best practices and system design principles such as DRY and SOLID to create maintainable, scalable codebases.\nChoosing the Right Pattern (MVC, MVP, MVVM): Learn the key differences between Model-View-Controller (MVC), Model-View-Presenter (MVP), and Model-View-ViewModel (MVVM) and choose the right pattern based on app size, complexity, and team needs\nImplementing Clean Architecture: Minimize app lifetime maintenance costs and maximize developer productivity\nImplementing Layered Architecture: Learn how to separate concerns into data, domain, and UI layers for better maintainability based on Google's recommended app architecture\nUsing Android Architecture Components: Build scalable apps using Jetpack libraries from the UI to the data layer such as the Lifecycle API, the ViewModel API, LiveData & Flow, Coroutines, SharedPreferences & DataStore, the Room database, the WorkManager API or the Paging library\nImplementing Efficient Navigation: Seamlessly handle navigation in complex apps with Android’s navigation component\nApplying Dependency Injection (DI): Use popular DI frameworks like Dagger and Hilt, or service locator frameworks such as Kodein and Koin to write cleaner, more testable code with better dependency management\nMastering Modularization: Organize your complex codebase into modules, whether they are based on layers, features, or both for better scalability, respecting the principles of component cohesion and component coupling",
      "target_audience": [
        "Mobile app developers that want to become experts in app architecture",
        "Mobile app developers that aim for a Tech Lead job",
        "Mobile app developers preparing for interviews at FAANG companies"
      ]
    },
    {
      "title": "Mastering Flutter",
      "url": "https://www.udemy.com/course/mastering-flutter/",
      "bio": "A fast-paced tutorial for experienced front-end developers who want to attain Flutter mastery",
      "objectives": [
        "Master Flutter for designing highly available, cost-efficient, and scalable applications.",
        "Use the different feature of Flutter to make your applications more reliable with consistent performance.",
        "Unified app development using Flutter's diverse tools and libraries.",
        "Debug and improve the performance of your app using Flutter.",
        "Use the BLoC Pattern as a state management solution.",
        "Connect your application to a real database."
      ],
      "course_content": {
        "Building Your App Using ListView": [
          "The Course Overview",
          "Create a New Project",
          "Creating Category Model",
          "Building Temp Backend",
          "Creating Temp List of Categories",
          "Creating the Structure of the Project"
        ],
        "Using the BLoC Architecture in Your App": [
          "Create a BLoC Provider",
          "Creating Your First BLoC",
          "Fetching Categories into the BLoC",
          "Supply Our Home Page with the BLoC",
          "Using Our BLoC in Home Page."
        ],
        "Using Selected Category in Your App": [
          "Navigate to a New Page",
          "Create a Product Model and Essential Data",
          "Creating our Products BLoC",
          "Creating a Grid of Objects",
          "What Have We Done so Far?"
        ],
        "Creating Our Cart Page": [
          "Creating a Stateless Widget",
          "Initial Setup of the Cart BLoC",
          "Installing RxDart",
          "Finishing the Cart BLoC",
          "Supply Whole App with Cart BLoC"
        ],
        "Adding Products to the Cart": [
          "Create Our Cart Button Component",
          "Design the Cart Page",
          "Add Products to Cart",
          "Adding a Checkout Button",
          "Install Firestore plugin"
        ],
        "Adding a Persistent Backend": [
          "Setting Up Firestore",
          "Creating Firestore Data",
          "Update Product to Handle JSON",
          "Getting Data from Firestore Part 1",
          "Getting Data from Firestore Part 2"
        ],
        "Final Touches": [
          "Display Image in Firebase Storage",
          "Loading Images in the Grid View",
          "Setting Our Theme for the App",
          "Adding Loading Indications",
          "Final Wishes"
        ],
        "Debugging and Performance Checking": [
          "Avoiding var, Untyped Arguments",
          "Exploring the Flutter Analyzer and Assert",
          "Going Over UI Debugging",
          "Going over Performance Profiling",
          "Looking at Additional Resources"
        ]
      },
      "requirements": [
        "Basic Knowledge of Flutter."
      ],
      "description": "Flutter is quickly becoming a well-known framework for developing cross-platform apps for both Android and iOS devices. Apps made with Flutter are very fast because of their high rendering power and because Dart compiles the app into native ARM code.\nThis course shows you how to make your applications reliable with consistent performance. You'll build modern applications using the different features of Flutter. You will develop apps for both iOS and Android with just one codebase and learn how to connect your app to a database using Firebase. You will learn how to improve the performance of your applications, thus taking your skills to the next level.\nBy the end of this course, you will have mastered building your applications using Flutter.\nAbout the Author\nRobert Brunhage works as a SharePoint Developer and has also have been working on Flutter. He creates Flutter tutorials on YouTube where he teaches people a new way of developing native experience applications, instead of having to develop for IOS and Android separately. He is constantly seeking to improve and help others improve. If he encounters a developmental problem, he tries to find a solution for it to then later teaches that solution to students. He finds that helping others improve brightens his day!",
      "target_audience": [
        "This course is for mobile developers who have a basic knowledge of Flutter and are keen to become a master at it. If you have taken our Learning Flutter course, then this course will help you take your skills a notch higher."
      ]
    },
    {
      "title": "Develop Ionic Angular iOS Android Apps for WooCommerce",
      "url": "https://www.udemy.com/course/develop-ionic-4-angular-ios-android-apps-for-woocommerce/",
      "bio": "Build a Complete Android iOS app for your WordPress WooCommerce WebStore using Ionic4 Angular(Compatible to Ionic5.x.x)",
      "objectives": [
        "Build a Complete Android iOS app for your WordPress WooCommerce based Web Store using Ionic 4 Angular",
        "An excellent working experiences with beautiful and most popular Ionic 4 framework and Modern Angular.",
        "Ionic 4 Angular Authentication with WordPress",
        "Explore WooCommerce REST API V3",
        "Refreshing Modern JavaScript Basics Including Arrow Functions, Promise with Async Awaits, Class and Inheritance",
        "Brush up Modern Angular like perform http requests, authentication, authorization and error handling",
        "Implement all WooCommerce API using Ionic 4 and Angular",
        "Fully Understand the technology behind an online store app, from add to cart to placing order.",
        "Finally, from a single code base, you are getting Android App, iOS App as well as Web Apps that runs on all Modern Browsers and can be integrated with Any Woocommerce based ECommerce Website",
        "Proper guidance how to submit apps to AppStore and PlayStore"
      ],
      "course_content": {
        "Course Introduction": [
          "Inroduction",
          "What we are going to learn?",
          "What we need to know to develop this E-commerce App",
          "Lets see how our final app looks like"
        ],
        "Refreshing Modern JavaScript Basic": [
          "Introduction",
          "Block Scoped Variables (let, const)",
          "Arrow Functions",
          "The ‘this’ keyword",
          "Promise",
          "Async & Awaits with Promise",
          "Class",
          "Inheritance"
        ],
        "Brush up Angular Basics": [
          "Introduction",
          "What is Angular and TypeScript",
          "Prepare development environment for Angular (NodeJS)",
          "Using Angular CLI to create an app",
          "Angular Directives",
          "Manage Routing and Navigation",
          "Create and use services",
          "About Template driven forms",
          "Extras For Angular"
        ],
        "Learn Ionic Basics": [
          "Introduction",
          "What is Ionic",
          "Ionic Component Basics",
          "Understanding Ion list n Buttons",
          "Using Ion cards",
          "Understanding Ion Grid",
          "View Ionic app on Android Emulator",
          "View Ionic app on iOS emulator"
        ],
        "An overview of WordPress and WooCommerce": [
          "Inroduction",
          "What is WordPress",
          "About wordpress plugins and themes",
          "What is WooCommerce",
          "Installing WordPress to a server",
          "Installing WooCommerce inside WordPress",
          "Importing WooCommerce demo data",
          "Admin overview for WooCommerce",
          "Creating API KEY to be used for app development"
        ],
        "Main Project: Setup All Routings & Navigations": [
          "Introduction",
          "Create “webstore” app project from Ionic CLI",
          "Create necessary Pages and Services from Ionic CLI",
          "Show necessary pages to left menu",
          "Prepare all routing and navigations throughout app",
          "Install JWT authentication plugin to our WordPress Install",
          "Configure our server and app for JWT authentication plugin",
          "Download the final project of this section here"
        ],
        "Dive Into WooCommerce API": [
          "Introduction",
          "Fetch all products of the store",
          "Fetch single product / product details page",
          "Fetch all product categories",
          "Fetch products by specific product category",
          "Fetch all product tags",
          "Fetch products by specific product tag",
          "Show product title on toolbar at single product page",
          "Download the final project after section 7"
        ],
        "Authentication with WordPress and WooCommerce": [
          "Introduction",
          "Create signup form with submit button",
          "Setup form validation before submission",
          "Implement Email Validation function",
          "Create signup function",
          "Complete new customer signup with specific success/error message using toast",
          "Create login form with submit button, Implement form validation",
          "Create login function",
          "Now login with newly signed up credentials",
          "Save current logged in user’s email and ID in local storage",
          "Implement logout",
          "Implement authorization using auth guard",
          "Download the final project after section 8"
        ],
        "Shopping Cart": [
          "Introduction",
          "How add to cart works",
          "How to add an add to cart button at single product page",
          "Add product to cart by clicking on the add to cart button",
          "Show the number of items added to cart in cart icon",
          "Live update cart item numbers",
          "Go to cart page and list all products previously added to cart",
          "Change quantity per product on cart page",
          "Delete an item from cart",
          "Calculate total amount for all added cart items",
          "Download the final project after section 9"
        ],
        "Checkout & Place Order": [
          "Intoduction",
          "Navigate to checkout page",
          "Fetch all available payment gateways",
          "Show short order history",
          "Explain “FORM” for billing/shipping information",
          "Explain validation of billing/shipping form",
          "Make “Place Order” button available once a Payment method is selected",
          "Keep “Place Order” button disabled until whole checkout form is valid",
          "Place order and verify it from WP Admin",
          "Show success message on successful order",
          "Download the final project after section 10"
        ]
      },
      "requirements": [
        "Minimum Web Development Knowledge with WordPress and WooCommerce",
        "Basic HTML CSS and Basics of JS"
      ],
      "description": "Do you know WordPresss Powers 34% of all website in our planet and according to WordPress Plugin Directory statistics, WooCommerce, the Plugin, that adds E-Commerce functionality to WordPress, has 5 millions + active installs. Beside these, WooCommerce itself Powers 28% of all online stores\nWooCommerce is one of the best Plugin created with WordPress that has largest developer community support with awesome official documentations.\nResponsive ecommerce websites are not that user friendly that an app can be for shopping.\nHave you ever thought of building a hybrid App for this robust WooCommerce Plugin that runs in Android and iOS devices as well as on all modern browser?\nGive shoppers an outstanding shopping experiences with WooCommerce based online stores?\nTaking your web development career to the next level?\nWelcome, I am M A Hasan, full time freelance web developer. I have 8 years working experience with various web technologies, now offering you a great course Develop Android iOS app using Ionic 4 and Angular for WooCommerce online stores.\nThere are several courses, tutorials, official documentations you may find helpful to build your Android and iOS app for WooCommerce but the problem is, most of them are not designed in an optimized and well maintained way that can help a beginner to understand everything perfectly. So I have broken this course into different parts to prepare you at first, then dive into real app development.\nIn this course, we will use WordPress and Woocommerce as backend with Version 3 API and develop a full featured WebStore app that can be integrated with any Woocommerce online store and will help user to buy products online directly from Android and iOS devices.\nOkay if you are not feeling confident enough to take this course then No worries, If you have minimum knowledge in developing website using WordPress and WooCommerce, then you are welcome on board. I have discussed all basics of Modern JavaScript, Ionic 4 and Angular topics those are required to build and understand this app perfectly.\nStarting from registering as a new customer through our app to place an order successfully in the store, every bit of code of this WebStore App we gonna develop is well explained.\nAt the end of the course, you are going to get a full featured WebStore app with source code that you coded from scratch which is ready to integrate with any WooCommerce online store. Most interestingly, from one code base, your WebStore app will be ready to submit to Play Store, App Store as well as an excellent working experiences with beautiful and most popular Ionic 4 framework and Modern Angular.\nSo no matter if you are a beginner or intermediate level developer, this course is going to take your career to the next level. So you will be a hybrid apps developer in a matter of times. Millions of clients are waiting for an efficient programmer like you who can code a secure, more maintainable and expandable WebStore App for their WooCommerce based online store..\nI hope to see you in this course very soon. This course comes with 30 days money back guarantee. So take the course, watch the videos and if you are not happy, ask for a refund within 30 days. All your money back, no questions asked.\nThen why are you waiting for? Let's grab the course and start exploring this great adventure.",
      "target_audience": [
        "Beginner to Android and iOS Apps Development using Ionic 4 and Angular",
        "Beginner to Work With Ionic 4, Angular and WordPress Authentication",
        "Beginner to implement WordPress and WooCommerce REST API using Ionic 4 and Angular",
        "Anyone interested to develop a full featured Online Store Apps for Woocommerce based ECommerce Website",
        "Anyone intesrested to Understand the technology behind the Online Store apps",
        "Anyone who wants to take his Web Development career to next the level by learning modern technologies"
      ]
    },
    {
      "title": "Learn Swift 3, Xcode 8 and iOS 10 Step by Step.",
      "url": "https://www.udemy.com/course/learn-swift-30-xcode-8-and-ios-10-step-by-step/",
      "bio": "This 10 hour course will give you the fundamentals you need to furthur your career as an app developer",
      "objectives": [
        "Code in Swift 3.0",
        "Use XCode 8",
        "Gain fundamental concepts to make iOS 10 apps"
      ],
      "course_content": {
        "Introduction": [
          "Promo Video"
        ],
        "Variables": [
          "01. Introduction to Variables in Swift",
          "02. Boolean Variables",
          "03. Integers",
          "04. Floats and Doubles",
          "05. Characters and Strings",
          "06. Optional Variables",
          "07. Summary"
        ],
        "If Statements": [
          "01. Introduction to If Statements in Swift",
          "02. Basic If Statements",
          "03. Multiple Conditions and Nested If Statements",
          "04. Else If Statements",
          "05. Else Statements",
          "06. If Let Statements",
          "07. Summary"
        ],
        "Arrays": [
          "01. Introduction to Arrays in Swift",
          "02. Boolean Arrays",
          "03. Int, Float, and Double Arrays",
          "04. Character and String Arrays",
          "05. Accessing and Modifying Array Elements",
          "06. Adding Elements to Existing Arrays",
          "07. Insert and Remove Functions",
          "08. Summary"
        ],
        "For In Loops": [
          "01. Introduction to For In Loops in Swift",
          "02. Increase Count by One with For In Loops",
          "03. Using Index Value to Perform Operations",
          "04. Combining Arrays and For In Loops",
          "05. Constructing Arrays Using For In Loops",
          "06. Combining For In Loops and If Statements",
          "07. Summary"
        ],
        "Functions": [
          "01. Introduction to Functions in Swift",
          "02. No Parameters or Return Type Functions",
          "03. Functions with Parameters",
          "04. Functions With Return Types",
          "05. Functions with Multiple Return Values",
          "06. Functions with If Statements",
          "07. Functions with For In Loops",
          "08. Summary"
        ],
        "While Loops and Switch Statements": [
          "01. Introduction to While Loops and Switch Statements in Swift",
          "02. Switch Statements",
          "03. Switch Statement Example",
          "04. While Loops",
          "05. While Loop with Game Example",
          "06. Continue, Break, and Run Statements",
          "07. Summary"
        ],
        "Enumerations, Classes, and Structures": [
          "01. Introduction to Enumerations, Classes, and Structures in Swift",
          "02. Enumerations",
          "03. Associated and Raw Values of Enumerations",
          "04. Classes",
          "05. Structures",
          "06. Structs and Classes Working Together",
          "07. Summary"
        ],
        "Labels in XCode": [
          "01. Introduction to Labels",
          "02. Adding a Label to the Layout",
          "03. Initializing the Label in the Code",
          "04. Changing the Label Text",
          "05. Functions Used on Label Text",
          "06. Storing Current Text in a Constant",
          "07. Changing Text Alignment",
          "08. Changing Text Color",
          "09. Dealing with Scaling Issues",
          "10. Summary"
        ],
        "Buttons in XCode": [
          "01. Introduction to Buttons",
          "02. Adding Buttons to the Layout",
          "03. Adding Buttons to the Code",
          "04. Changing Button Properties Within the Code",
          "05. Retrieving Button Attributes",
          "06. Implementing the Button Handler",
          "07. Summary"
        ]
      },
      "requirements": [
        "Xcode",
        "A Mac is preferable",
        "n use Xcode on A PC, however, it is your job to install OSX. If you are on a PC, please look up how to do this before purchasing this course."
      ],
      "description": "Learn how to Code in Swift 3.0\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 150k students worldwide\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "People who want to learn how to code",
        "People who want to learn Swift 3.0",
        "Advanced programmers might find this course a little slow"
      ]
    },
    {
      "title": "The Complete Objective-C Guide for IOS 8 and Xcode 6",
      "url": "https://www.udemy.com/course/the-complete-objective-c-guide-for-ios-8-and-xcode-6/",
      "bio": "A Guide to iPhone and iPad development. A Complete Xcode 6 and IOS 8 Course with Objective-C Beginner to pro.",
      "objectives": [
        "Full understanding of Xcode and all it has to offer",
        "Learn how to program for IOS 8 to create your own apps",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS development",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Getting To Grips!": [
          "Downloading and Installing Xcode",
          "Purchasing a Developer Licence",
          "Project Types, What's Best For Me?",
          "Creating an App ID",
          "What are Classes, InfoPLists and Delegates?",
          "Using the Interface Builder",
          "Building on the IOS Simulator",
          "Create, Download and Install Certificates",
          "Building to a Device",
          "Creating Actions and Outlets",
          "Creating a Hello World Application"
        ],
        "Understanding Functions": [
          "Displaying Text",
          "Text Properties",
          "UITextfields",
          "Dismissing the Keyboard",
          "Using If Statements",
          "Fading Objects",
          "Hiding Objects",
          "Enabling and Disabling Objects",
          "Creating a Random Number Generator",
          "Creating a Random Word Generator"
        ],
        "Creating Actions": [
          "UISwitches",
          "UISegmentedControls",
          "Controlling UISliders",
          "UIActionSheets",
          "Detecting Shake Gestures",
          "Creating URL Links",
          "Using Delayed Actions"
        ],
        "Getting A Good View!": [
          "UIViews",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Using UIPickerViews",
          "Using UIWebViews",
          "Controlling UIWebViews",
          "Activity Indicator",
          "Using UIMapViews",
          "Controlling UIMapViews",
          "Switching Views in Storyboards",
          "Switching to a XIB View",
          "Removing The Status Bar"
        ],
        "Making An App Look Good": [
          "Importing Files",
          "Displaying Images",
          "Displaying Retina Images",
          "Changing Images",
          "Adding Images To Buttons",
          "Displaying Images From URL'S",
          "Displaying PDF'S",
          "Changing the Background Colour",
          "Creating Animations",
          "Adding Loading Screens/Launch Images",
          "Universal Loading Screen",
          "Adding App Icons",
          "Taking Screenshots Programatically",
          "Taking Photos from Camera",
          "Loading Images from Library"
        ],
        "Coming In Loud And Clear": [
          "Playing Audio Files",
          "Playing Video Files",
          "Playing YouTube Videos",
          "Streaming Live Radio",
          "Streaming MP3 Files",
          "Vibrating the Device"
        ],
        "Creating A Tab Bar Application": [
          "Creating a Tab Bar Application",
          "Customising a Tab bar Application"
        ],
        "Creating A Table View Application": [
          "Creating a Table View Application",
          "Pushing Table View to a Detail View",
          "Populating a Detail View",
          "Customising a Table View",
          "Adding Table View Headers"
        ],
        "Saving And Loading Stuff!": [
          "Saving and Loading Text",
          "Saving and Loading Data"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad Apps in Objective-C but are not sure where to start? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is your course!\nThis Complete Objective-C Course for iOS 8 and Xcode 6 will give you everything your need to start your new career in IOS development, The course has been structured to support Objective-C, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nSell Your App to Millions of Potential Users and earn extra revenue from Ad networks and in app purchases, Making money has never been so easy!\nNot only do you get the best online IOS development course money can buy or your money back! You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new career!\nTopics Covered:\nUnderstanding Xcode, Interface Builder, Simulator and Project Types\nObjective-C: Full guide to creating full featured apps\nObjective-C: Get to know the new language\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nFull Featured Apps\nSaving and Loading: From text to data\nEarning Revenue Ad Networks\nFull In App Purchase Support\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS Apps"
      ]
    },
    {
      "title": "Build 10 Real World Apps with Flutter",
      "url": "https://www.udemy.com/course/build-10-real-world-apps-with-flutter/",
      "bio": "10 Apps from beginner to advanced using different state managements, databases, apis, webscraping and more in flutter",
      "objectives": [
        "Basic widgets in flutter",
        "Building a game in flutter",
        "Implementing sound effects",
        "Working with apis",
        "Dealing with images",
        "Different state managements",
        "Provider , riverpod and bloc",
        "Getx package",
        "Web scraping in flutter",
        "Text to speech functionality",
        "Local sqlite database for app",
        "Firebase database",
        "Firebase storage bucket",
        "Working with timers in flutter",
        "Grouped listviews",
        "UI / UX Design"
      ],
      "course_content": {
        "Billsplit App": [
          "App intro ( Billsplit app )",
          "Project setup",
          "Upper container of home screen",
          "Slider for choosing friends",
          "Widgets for tip and tax data",
          "Custom keyboard",
          "Logic and state for UI",
          "Calculating bill",
          "Data and logic to results page"
        ],
        "Hangman Game": [
          "App intro ( Hangman game )",
          "Project setup",
          "Appbar of gamescreen",
          "Points, hangman image and lifes",
          "Alphabets keyboard",
          "Handling the word to guess",
          "Checking if word has user input letter",
          "Points and status of hangman",
          "Updating image state",
          "Implementing lifes",
          "Creating result dialog",
          "Play again functionality",
          "Sound effects",
          "Controlling sound effects"
        ],
        "Pomodoro Timer App": [
          "App intro ( Pomodoro app )",
          "Project setup",
          "Pomodoro screen setup",
          "Timercard UI",
          "Timer options",
          "Rendering timer options into UI",
          "Pause and play button",
          "Progress widget UI",
          "Provider state for timer options",
          "State for timer card",
          "Timer countdown",
          "Rounds and breaks state",
          "Testing pomodoro",
          "Colours depending on state",
          "Restart functionality and conclusion"
        ],
        "Image to text recognition App": [
          "App intro ( Image to text recognition app )",
          "Project setup",
          "Appbar of main screen",
          "UI of main screen",
          "Picking an image",
          "OCR space api",
          "Posting image to api and getting data",
          "Displaying parsed text",
          "Copy and share functionality"
        ],
        "Newsreader App": [
          "App intro ( Newsreader app )",
          "Project setup",
          "Building homescreen",
          "Categories tab bar",
          "News widget",
          "Finishing news widget UI",
          "Newsapi",
          "News model",
          "News repository",
          "News bloc and stream controller",
          "Streambuilder for news",
          "Showing news in UI",
          "Bloc state for category tab",
          "Dropdown for country news filter",
          "Showing news depending on filter",
          "Text to speech functionality",
          "Whole news in webview"
        ],
        "Quotes App ( Webscraping )": [
          "App intro ( Quotes app )",
          "Project setup",
          "Homescreen UI",
          "Categories gridview UI",
          "Dynamic navigation to quotespage",
          "Quote card UI",
          "GET response from website",
          "Scraping the quotes",
          "Displaying scraped data",
          "Scraping homepage quotes",
          "Conclusion"
        ],
        "Random Meal Generator": [
          "App intro ( Random meal generator )",
          "Project setup",
          "Homescreen UI",
          "Header of recipe screen",
          "Middle section UI",
          "Ingredients and instructions widgets UI",
          "Meal model",
          "Meal repository",
          "Future provider with riverpod",
          "Consuming data from provider",
          "Displaying API data in UI",
          "Refresh provider for new data",
          "Recipe youtube video"
        ],
        "Fitness Tracker with Sqlite DB": [
          "App intro ( Fitness tracker app )",
          "Project setup",
          "Building homescreen UI",
          "Customized tab bar",
          "Weight and height banner UI",
          "Add item button",
          "Add item dialog",
          "Creating local sqlite DB",
          "Opening DB and creating table",
          "Add activity function",
          "Implementing state for UI",
          "Adding data to DB",
          "Querying DB for activities",
          "Creating activity model",
          "Data in grouped listview",
          "Rendering data in UI",
          "Delete activities",
          "Handling tab bar state"
        ],
        "Crypto List App": [
          "App intro ( Crypto list app )",
          "Getx intro",
          "Project setup",
          "Homescreen UI",
          "Crypto details UI",
          "Coin model",
          "Api data with getx controller",
          "Handling controller",
          "API data on UI"
        ],
        "Wishlist App with Firebase": [
          "App intro ( Wishlist app )",
          "Project setup",
          "Firebase setup",
          "Authentication screen UI",
          "Getx state for auth tab bar",
          "Login widget",
          "Register widget",
          "Registering user in firebase",
          "Logging in user",
          "User navigation depending on auth",
          "Homescreen UI",
          "Getx state for tab bar",
          "Wish item UI",
          "Add wish dialog UI",
          "Improving the dialog",
          "Adding wish to firebase",
          "Creating wish model",
          "Displaying wishes from firebase",
          "Displaying fulfilled wishes",
          "Logic for fulfil wish",
          "Delete wish",
          "Showing wish count",
          "Sign out functionality",
          "Course end"
        ]
      },
      "requirements": [
        "Basic knowledge about Flutter and Dart",
        "Flutter , Dart and IDE installed",
        "Good Internet Connection and a Laptop"
      ],
      "description": "You have learned flutter and want to gain practical experience ? You wanna add up some awesome flutter apps to your resume ? Then this is the perfect course for you .\nIn this course we are gonna build 10 real world apps from beginner to advanced level. starting from a basic bill split app to advancing to a complex news reader app using tts and apis. Furthermore we will cover lots of different topics like basic widgets, working with timer in flutter, retro themes, sound effects , text to speech ,image filtering and e.t.c.\nAnd not to forget, we will also use a new state managements every time, starting from normal setState to provider, riverpod, bloc ,rxdart and getx. One more cool thing we are gonna learn is how to implement web scraping in flutter easily which is rare.  Then of course we are also gonna work a lot with apis, sending data to a api, or also receiving data back . And at last , we will also work with databases, starting from a local sqlite database to using a firebase server.\nSo as you can see, this is a big exciting course covering lots of things and gaining practical knowledge. In each section you will always learn something new. Detailed explanations and previews of the apps are available for you to have a brief look",
      "target_audience": [
        "Flutter devs who want to gain practical knowledge in flutter",
        "People who want to build real world apps",
        "Learners who want to learn different kind of topics in flutter"
      ]
    },
    {
      "title": "Android with PHP and MySQL",
      "url": "https://www.udemy.com/course/android-with-php-mysql/",
      "bio": "Build LogIn & Registration App With Android ,PHP & MySQL",
      "objectives": [
        "Build android app",
        "Save data from android to PHP MySQL",
        "Get data from PHP MySQL to android",
        "PHP & MySQL progarmming",
        "Testing API with Postman",
        "Git & GitHub"
      ],
      "course_content": {
        "Introduction": [
          "What You Will Learn And Build In This Course",
          "Downloading and Installing Android Studio",
          "Creating Android Studio Project",
          "Creating Android Virtual Device",
          "Installing XAMPP in Windows",
          "Configure Virtual Host in XAMPP",
          "6.Install And Configure PhpStorm",
          "Install and Configure Git",
          "Configure GitHub With PhpStorm",
          "Configure GitHub For Android Studio Project",
          "Updating Android Studio",
          "Download Project File"
        ],
        "Android Project Design Layout": [
          "Creating Login Layout",
          "Adding Material EditText",
          "Adding Custom Design To Material EditText",
          "Adding Icon To Material EditText",
          "Adding Login Button And TextView",
          "Fixing Action Bar And Checkbox Color",
          "Creating String Resource File",
          "Creating SignUp Layout",
          "Fixing SignUp Layout",
          "Fixing Icon SignUp Layout",
          "Push Android Project To GitHub"
        ],
        "PHP Project": [
          "XAMPP MySQL Root Password",
          "Creating Database And Table",
          "Creating Database Connection Script",
          "Creating SignUp Function",
          "Creating SignUp Script",
          "Testing SignUp API With Postman",
          "Fix Security Issue In SignUp Process",
          "Check If Email Exist In Database",
          "Create Login Function",
          "Create Login Script",
          "Testing LogIn API With Postman",
          "Push Php Project To GitHub"
        ],
        "Android Project Codding Part": [
          "Setup Volley Library",
          "Creating Volley Singleton Class",
          "Create LogIn Method",
          "Get Value From LogIn From",
          "LogIn - Volley onResponse And onErrorResponse",
          "Create LogIn Button OnClick Listener",
          "Create SignUp Method",
          "Getting Value From SignUp Form",
          "Validate SignUp Form Value",
          "SignUp - Volley onResponse And onErrorResponse",
          "Fixing App Crash On Show Alert Dialog",
          "SignUp Button OnClick Listener",
          "Error Checking And Debugging",
          "Fixing Error ClearText HTTP Traffic Not Permitted",
          "Open SignUp Activity On TextView Click",
          "Validate And SignUp New User Account"
        ],
        "PHP Project Get User Detail": [
          "Create Function To Get User Detail",
          "Create Script To Get User Detail",
          "Testing Get User Detail Script With Postman"
        ],
        "Android Project User Profile": [
          "Create User Profile Layout",
          "Passing Data From MainActivity To Profile Activity",
          "Create getUserDetail Method",
          "Volley Sending GET Request",
          "Parse Json Request And Set TextView Text",
          "Push Android Project To GitHub"
        ],
        "Android SharedPreference Data Storage": [
          "Android SharedPreference Singleton Class",
          "Save Email To SharedPreference",
          "Retrive Email From SharedPreference"
        ],
        "Upgrade To AndroidX": [
          "Upgrade To AndroidX"
        ]
      },
      "requirements": [
        "Basic of android and php knowledge is recommended but not required",
        "Willingness to learn"
      ],
      "description": "In this course you will learn how to build android login and registration app. You will learn about android app development on how to connect , store and fetch data from MySQL server using PHP. You will learn how to code , how to test , how to fix and how to build a complete app. You will learn how to test and work with Postman for API testing. You will learn how to use Git and GitHub. You will learn how to write PHP functions and MySQL queries.\nThis course is still on the go and i will be adding more and more lecture as we go forward and will build a complete Android app and PHP application .",
      "target_audience": [
        "Anyone who wants to build android app",
        "Anyone who wants to build PHP app",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "Build a Twitter clone with Flutter and Firestore",
      "url": "https://www.udemy.com/course/build-a-twitter-clone-with-flutter-and-firestore/",
      "bio": "Learn how to make a complete social media app with flutter and firebase",
      "objectives": [
        "Full twitter clone with flutter",
        "How to upload and retrieve Image files from Firebase Storage and Firebase Firestore",
        "Flutter Frontend Development",
        "Firebase Firestore",
        "Complex data-structure with firestore",
        "Streambuilder with real-time data",
        "Flutter Backend Development",
        "Firebase Image Storage",
        "Searching users with queries",
        "Like, comment and share functions",
        "Whole social media app with flutter"
      ],
      "course_content": {
        "Introduction": [
          "App demo"
        ],
        "Firebase Setup": [
          "Project setup with firebase"
        ],
        "Authentication": [
          "Authentication with firebaseauth"
        ],
        "Adding tweets and retrieving tweets": [
          "Tweets and Add Tweets UI",
          "Adding tweets to firestore and getting them"
        ],
        "Like , comment and share functions": [
          "Like , comment and share tweets"
        ],
        "User Profile Screen": [
          "Userprofile page"
        ],
        "Searching and following users": [
          "Search user",
          "Follow and unfollow user"
        ],
        "Firebase Made a major Update (Code change)": [
          "Explaining the outdated code"
        ],
        "Updated source code (Firebase made a big update)": [
          "Full updated code"
        ]
      },
      "requirements": [
        "Some experience with flutter",
        "Good internet with laptop"
      ],
      "description": "Hello guys. So you wanna learn how to make the exact clone of twitter with flutter and firebase. Then you are at the right place. I will teach you everything you need to build that app. We will develop this app using Flutter (Dart Programming Language) with Firebase Firestore as backend. At the end of this course you will be able to make your own fully functional backend flutter applications with Firebase Firestore.\n\n\nThings we will learn\nUser authentication\nStoring images in a storage bucket\nComplex data-structure for firebase\nSocial media functions in flutter\nNeat and Clean UI\nQuerying in firestore\nFlutter widgets\nReal-time data with stream-builder",
      "target_audience": [
        "Flutter developers who want to learn making really complex apps",
        "Developers who want to make social media apps with flutter"
      ]
    },
    {
      "title": "Android Game Development : Endless Runner Game in Android",
      "url": "https://www.udemy.com/course/build-an-endless-runner-game/",
      "bio": "Learn to Build and Monetize a Complete Android Endless Runner Game with Android Studio and SurfaceView in less than 2 hr",
      "objectives": [
        "In this course you'll be able to build a complete Endless Runner Game in less than 2 hours.",
        "Building games is a great fun. You'll enjoy it.",
        "A game that you build yourself, and publish is a fantastic resume piece and could help you get a great job in Android Development.",
        "Create an efficient game loop.",
        "Learn to build a basic framework for building and managing your games.",
        "You'll be able to brush-up your Java skills.",
        "Learn Game Development Fundamentals.",
        "Learn Android Game Development Step By Step.",
        "Monetize your app with Google Admob Banner and Interstitial Ads and start getting some revenue right off the bat."
      ],
      "course_content": {
        "Introduction to Android Game Development course": [
          "Introduction to Endless Runner Game Development in Android Studio and Java",
          "Game Resource",
          "Join The Community"
        ],
        "Start Creating the Framework": [
          "Start Developing Some Important Classes: GameActivity, GameView, GameThread",
          "Add More: BackgroundImage, GameEngine, Obstacles, Path, Player, PlayerDead",
          "Continue Developing the GameEngine Class"
        ],
        "Design and Develop GameOver Activity": [
          "Design the XML and Write Code in Java for GameOver"
        ],
        "Complete Making the Game": [
          "Make Your Game Full Screen",
          "Complete GameEngine Class and Finish Making the Endless Runner Game"
        ],
        "Course Wrap-Up": [
          "Bye for now",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should have Android Studio installed and running.",
        "You should have some experience in Android Development using Android Studio.",
        "Some basic programming experience like variable, if-else, loop, method.",
        "You don't need prior knowledge in Android Game Development."
      ],
      "description": "Important Note:\nAll source code provided in this course remains valid and compatible with the latest versions of Android Studio and Android SDKs.\nPlease note, however, that the course was originally created using an earlier version of Android Studio and the Android SDK.\nIf your goal is to:\nLearn game development logic from the ground up,\nBuild a game loop from scratch,\nCreate your own custom game framework to develop future games more quickly and efficiently,\nAnd you wish to code entirely in Java without relying on external game engines,\n— then this course is ideal for you. Otherwise, we recommend exploring other courses that better match your needs.\n\nDo you want to learn how to build Android Games in Android Studio and Java (SurfaceView)?\nHi, my name is Sandip and I have published more than 10 android games on Google Play. I also created some of the highly-rated Android Game Development courses on Udemy. So, I happen to know a little bit about game programming and in this course, I’ll show you exactly how to create and monetize a complete Endless Runner Game step-by-step from beginning to end. I only expect you know a little bit of Java programming like using variables, loops, objects etc. Other than that, I expect that you have the latest version of Android Studio up and running on your Pc.\n\n\nWhat you'll learn?\n- Clear understanding of android game development fundamentals. By the end of this course, you'll be able to make your own kind-of framework for building future games easily and efficiently\n- Course based on Latest Android Studio (Arctic Fox), Android 11 (API level 30), SurfaceView, and Java\n- Course Launch Discount\n- Lifetime Access (Buy now - watch anytime, anywhere)\n- Regular Relevant Updates if and when required\n- Access to Source Codes and other important files\n- Active Support directly by me\n- Less than 2 hours of on-demand video content\n- Monetization through Google Admob Banner and Interstitial Ads so you can start earning right off the bat\n- Certificate of Course Completion\n- Bonus: Ideas to Level Up Your Game\n\n\nWho are the ideal students for this course?\nIf you want to learn the Core Concepts of 2D Game Development like making an Infinite Game Loop, Animation, Detecting Touch Event, Collision Detection, Playing Sound effects, Displaying Score and Saving Personal Best, Monetization with Google Admob etc. then this course is right for you\nThis course is perfectly suitable for Absolute Beginners interested in making Android Games from the ground up\nBeginner to Android Game Development\nBeginner to Android development\nBeginner to Java programming\nIf you're curious about building an android game from the beginning using only Android Studio and by writing code in Java (SurfaceView), without using any 3rd party Game Engine\nWhether for fun or for profit, developing Android games can be very rewarding, both personally and professionally. You can make your own games for fun, to show off your friends and family. You may have been curious about how to make a game. A game that you build yourself and publish can be a great experience and can enrich your career. Either way, you need to have a solid knowledge of game development fundamentals and the skills required to make your Android game a reality.\nAndroid is the largest ecosystem for gaming so if you’re serious about your career in the gaming industry, this is a great place to start. Or, if you just want to learn programming then Java is an excellent language which is also one of the official languages for Android and building games is great fun. Over the years, I have helped thousands of students in making their Android games and there’s absolutely no reason why you can’t as well.\nYou will also have the security of a money-back guarantee. In fact, if for any reason within 30 days you won't be completely satisfied with your purchase, you can easily request a refund that will be given to you without any kind of question from Udemy!\nHope you enjoy this course, if you do so, feel free to check my YouTube channel as well for a bunch of free resources!\nLink can be found within the Bonus lecture of the course.\nSee you around!\nCheers",
      "target_audience": [
        "Beginner to Android development.",
        "Beginner to Android Game Development.",
        "Intermediate Java programming knowledge.",
        "If you're curious about building an android game from scratch by writing code in Java, without using any 3rd party Game Engine like Unity or libGDX."
      ]
    },
    {
      "title": "Create Backend Service for Xamarin Forms",
      "url": "https://www.udemy.com/course/create-backend-service-for-xamarin-forms/",
      "bio": "Learn How to Integrate the Backend Services",
      "objectives": [
        "At the end of this you'll be able to create any your own backend service for your Mobile Applications.",
        "You'll be able to create the Rest Api's",
        "You'll be able to Create Api via Code First and Database First Approach",
        "You can Test you Rest Api via Postman",
        "You'll be able to learn the HTTP Methods and Verbs",
        "You can implement the functionality along with HTTP Verbs",
        "You'll be able to Deploy you Rest Api to Microsoft Azure Cloud",
        "You can integrate Rest Api in Xamarin Forms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "OverView": [
          "Create a Web API Project"
        ],
        "Code First Approach": [
          "Getting Started with Code First Approach",
          "HTTP Verbs",
          "Post Request In Code First Approach",
          "Get Request in Code First Approach",
          "Put Request In Code First Approach",
          "Delete Request In Code First Approach"
        ],
        "Deploy Web Api": [
          "Create Azure Account",
          "Publish Web App To Microsoft Azure"
        ],
        "DataBase First Approach": [
          "Create Database",
          "Create Table",
          "Link Database with API",
          "Create Controller From Entity Data Model"
        ],
        "Test Web Api Via DataBase First Approach": [
          "Post Request in Database First Approach",
          "Get Request In Database First Approach",
          "Put Request In Database First Approach",
          "Delete Request In Database First Approach"
        ],
        "Cosume REST API in Xamarin Forms": [
          "Create A New Project",
          "Serialization and Deserialization",
          "Get Data Via Get Request",
          "Add Data Via Post Request",
          "Update Data Via Put Request",
          "Delete Data Via Delete Request",
          "Summary",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Xamarin or C#."
      ],
      "description": "The main focus of this course is on the Restful Web Api via Asp.NET and Xamarin Forms . So if you're familiar with Xamarin  Forms or if you have a basic knowledge of C#  and you want to create some kinda Resful Web Api or Web Services then this is the right course for you.\nIn this course you will learn the how to create the the REST API via Code First and Database First Approach using ASP.NET . Then you will learn how to test your web api via Postman , Later in this course you'll learn how to create Web Apps on Microsoft Azure and Publish your Restful Web Api's to Microsoft Azure Cloud. You'll also learn the integration of restful web services in Xamarin Forms.\nBuild a strong foundation in Backend Services For Xamarin Forms with this tutorial .\nCreate Web Api\nCode First Approach\nDatabase First Approach\nTest Web Api\nCreate Azure Web App\nDeploy and Publish Rest Api to Microsoft Azure\nAccess the Application Backend\nSerialization and Deserialization\nIntegrate Web Api's In Xamarin Forms\n\n\nA valuable Skill at Your Fingertips  Learning the Web Api put a powerful and attractive look in your mobile apps.Both Xamarin and ASP.NET are open source, easy to learn,  has excellent Microsoft and Xamarin support. Also Xamarin is the best  Cross Platform Tool for Desktop and Mobile Applications and ASP.NET allows you to create Restful Web Api's and Application backend in a cool way with simple C# programming language.\nJobs in Mobile development are plentiful, and being able to learn the Web Api 's with a professional way and integration with Rest Api's will give you a strong background to more easily pick up other challenging apps etc.\nContent and Overview  Suitable for C# programmers, Xamarin  Developers , Software engineers or Backend Developers. Through this course , you’ll create a  Restful Web Api and establish a strong understanding of the concept behind Restful web api's.\n\n\nWhat am I going to get from this course?\nLearn Xamarin Forms from a Microsoft (MVP), Xamarin MVP from your own desk.\nCreate Restful Api in ASP.NET with me.\nSuitable for beginner & intermediate  programmers, xamarin developers, C# developers and ideal for users who learn faster when shown.\nVisual training method,with Hands on Lab Practice , coding and challenge exercises.\nBreaks even the most complex scenarios down into simplistic steps.\nI'll provide you the simplest and easy way to reduce your expenses in the development of Backend Services.\nAlso you'll be able to access the Rest ful api's that's deployed on Microsoft Azure free of cost.",
      "target_audience": [
        "Everyone who has some basic knowledge of Xamarin and C# and willing to start career in Xamarin Forms Backend Service and want to create the Rest Api's ."
      ]
    },
    {
      "title": "Flutter with Firebase Bootcamp: The complete guide [2023]",
      "url": "https://www.udemy.com/course/flutter-with-flutter-bootcamp-the-complete-guide-2023/",
      "bio": "[INTERMEDIATE] Learn how to use various firebase services with flutter and provider for Mobile application development.",
      "objectives": [
        "Authentication[Using package and REST APIs], Realtime Database",
        "Cloud Firestore, Firebase storage",
        "Dynamic Link, Firebase Hosting",
        "Firebase Push Notification[REST APIs], Firebase In-App-Messaging"
      ],
      "course_content": {
        "Course app preview": [
          "Introduction",
          "Firebase Authentication Demo",
          "Firebase REST API Authentication Demo",
          "Firebase Cloud Firestore Crud Operation Demo",
          "Realtime Database CRUD Operation",
          "Firebase Storage in Flutter",
          "Firebase Dynamic Link Demo",
          "Firebase Push notification",
          "Firebase In- App-Messaging"
        ],
        "Firebase setup": [
          "Setup your flutter project with firebase"
        ],
        "M1: Firebase Authentication[Email/Password]": [
          "Email/Password [UI & STATE MANAGEMENT]",
          "Email/Password [Authentication methods]",
          "Email/Password [Email verification]",
          "Email/Password [Reset password]",
          "Email/Password [iOS configuration]"
        ],
        "M1: Firebase Authentication[Phone]": [
          "Phone[UI & STATE MANAGEMENT]",
          "Phone[Verify phone number, send OTP, sign in using credentials]"
        ],
        "M1: Firebase Authentication[Google Accounts]": [
          "Google[Setup]",
          "Flutter Firebase Google sign in method"
        ],
        "M1: Firebase Authentication[Twitter]": [
          "Android and iOS setup",
          "Flutter Firebase Twitter authentication method"
        ],
        "M2: Firebase REST API Authentication": [
          "Firebase REST API Setup",
          "Download Resource",
          "UI and State management[ Provider ]",
          "Flutter Firebase Sign Up Signin REST API",
          "Firebase auth REST API Error handling",
          "Save user data to local storage",
          "Auto Logging in user",
          "Forget password",
          "Change password",
          "Logout",
          "Update user name and photo url"
        ],
        "M3: Cloud Firestore [CRUD Operation]": [
          "UI of the app",
          "Android and iOS setup",
          "CREATE operation",
          "READ operation",
          "READ operation[Filter Data]",
          "UPDATE operation",
          "DELETE operation"
        ],
        "M4: Realtime Database[CRUD Operation using HTTP package]": [
          "UI of the app",
          "Setting up the project",
          "Download resources",
          "CREATE operation",
          "READ operation",
          "Refresh data",
          "UPDATE operation",
          "DELETE operation",
          "Managing the state using PROVIDER"
        ],
        "M5: Firebase storage [ Example using PDF ]": [
          "PDF Module Setup",
          "Upload PDF File to Firebase Storage",
          "Get PDF file details form Firebase Cloud Firestore",
          "Download file from firebease and view PDF File",
          "Create a custom PDF File"
        ]
      },
      "requirements": [
        "No Prior knowledge in coding is required to get stared with this course",
        "No Prior knowledge is required in android or iOS framework is required",
        "No Prior knowledge is required in Flutter and Dart",
        "A computer or laptop with mac, windows or linux operating system is required",
        "At least 10 GB of free storage is required"
      ],
      "description": "FIREBASE AUTHENTICATION:\nIn this module, I will teach you how to use the firebase auth service to perform authentication. We will cover authentication using the following providers:\nEMAIL PASSWORD AUTHENTICATION[ Signup, Sign in, Verify the user's email, and Reset the password]\nPHONE AUTHENTICATION [OTP]\nGOOGLE AUTHENTICATION\nTWITTER AUTHENTICATION\n\n\nFIREBASE REST API AUTHENTICATION:\nThis module will teach us how to integrate firebase auth REST API with our flutter apps.  We will use the provider state management helper to manage the app's state. We will explore the following feature:\nSign up and sign in\nSave user data to local storage\nAuto Logging in user\nUpdate user name and photo URL\nForget password\nChange password\nLogout\nException handling\n\n\nFIREBASE CLOUD FIRESTORE:\nThis module will teach you about the CRUD operation using the cloud firestore database.\nRead the data from the cloud firestore database.\nWrite the data from the cloud firestore database.\nDelete the data from the cloud firestore database.\nUpdate the data on the cloud firestore database.\n\n\nFIREBASE REAL-TIME DATABASE:\nIn this module, you will learn about the CRUD operation using the real-time database REST APIs.\nRead the data from the real-time database.\nWrite the data from the real-time database.\nDelete the data from the real-time database.\nUpdate the data on the real-time database.\n\n\nFIREBASE STORAGE:\nIn this module we learn about how to work with the firebase storage feature using flutter:\nUpload PDF File to Firebase Storage.\nGet PDF file details from Firebase Cloud Firestore.\nDownload the file from firebase and view the PDF File.\n\n\nFLUTTER FIREBASE DYNAMIC LINKS IN FLUTTER:\nIn this module, we will learn how to:\nCreate Dynamic Link Manually using the Firebase console for Android, iOS, and desktop apps.\nShare mobile app using Dynamic Link\nShare the product and open a particular screen using Dynamic Link\nOpen the screen when it is closed using firebase dynamic links\n\n\nFIREBASE PUSH NOTIFICATION:\nIn this module we will learn about how to work with firebase push notifications using the REST APIs:\nCreate an http request to send a firebase push notification.\nHow to send push notifications to a particular user?\nHow to handle notifications in various app states?\nNavigate the user to a screen on notification tap\n\n\nFIREBASE HOSTING:\nIn this module, we will learn about how we can host a flutter web app using the firebase hosting service.\n\n\nFIREBASE In-App-Messenging:\nIn this module, we will learn about how we can send an In-App-Message to our flutter application using the firebase console.\n\n\nUsing Firebase as the backend is really a good idea because the Firebase team officially manages the firebase API, in a survey, almost 66% of the mobile app built with Flutter uses Firebase services.  Firebase provides us with services like authentication, real-time database, cloud firestore, messaging, storage, and many more.",
      "target_audience": [
        "Google Flutter",
        "Android and ios developers",
        "Mobile application developer",
        "Firebase",
        "Flutter Firebase",
        "Flutter"
      ]
    },
    {
      "title": "Ionic 3 - Tips & Tricks for Developing Ionic Apps",
      "url": "https://www.udemy.com/course/ionic-3-tips-tricks/",
      "bio": "Become a better Ionic developer by learning additional skills in developing Ionic mobile apps.",
      "objectives": [
        "Learn new techniques in building and designing Ionic apps",
        "Gain more confidence in developing Ionic apps"
      ],
      "course_content": {
        "Tips and Tricks": [
          "In-App Browsing (WITHOUT installing plugin)",
          "3 Page Background Options",
          "Ion-Grid Customization",
          "Text Wrap Ellipsis",
          "Customizing Loading Spinner",
          "Tabs navigation from custom \"Home Page\"",
          "Push Notifications (One Signal) - Android",
          "Push Notifications (One Signal) - iOS",
          "Implementing 3D Touch on iOS",
          "Create Animated Splash Screens using Animate.css",
          "Video Backgrounds in Ionic",
          "Streaming Audio Playback in Ionic + Changing Play and Pause Buttons"
        ]
      },
      "requirements": [
        "Basic knowledge of Ionic will be beneficial",
        "For some of the iOS specific features, having a Mac and an iPhone will be beneficial"
      ],
      "description": "Hey guys...\nThanks for checking out this course! I developed this course as a way to continuously help you learn IONIC TIPS AND TRICKS on a regular basis.\nThere is so much to learn about Ionic, and I created this course as a way to help you learn as much as possible by creating single videos that teach you various techniques and concepts.\nThis course however does require you to have some knowledge about Ionic, as I don't go into detail about teaching you what Ionic is and how it works. It assumes that you have a little bit of knowledge (at least) about Ionic.\nAs of current, the course covers some sought after content on:\nHow to implement  3D Touch on iOS Devices\nHow to send Push Notifications to iOS Devices\nSome cool navigation techniques with a custom Home Page\nAnd a bunch of other cool material added weekly!\nIf you are looking to become a better Ionic developer, join me on this journey by learning additional skills in developing Ionic mobile apps to become a better ionic developer.",
      "target_audience": [
        "Anyone wanting to increase their Ionic knowledge"
      ]
    },
    {
      "title": "Flutter PHP and MySql - Build Online Quiz with Admin Panel",
      "url": "https://www.udemy.com/course/flutter-php-and-mysql-build-online-quiz-with-admin-panel/",
      "bio": "Flutter fully functional build online quiz using Flutter, PHP, Database MySql and Content Management System with PHP",
      "objectives": [
        "This flutter course complete guide build online course with php",
        "Create Simple Admin Panel for Manage Quiz, Badge and Category",
        "Create API to provide in Quiz App",
        "Create Quiz App using Flutter",
        "Learn Json Serializable",
        "Learn how to create Clean Code in Flutter",
        "Learn how to access data from API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Project": [
          "Must Download and Read First",
          "Download Admin Panel Template",
          "Download Source Code Online Quiz App",
          "Setup Project"
        ],
        "Setup Admin Panel": [
          "Create Connection for Login Admin",
          "Create Operation in Category using PHP and MySqli",
          "View Operation in Category using PHP and MySqli",
          "Edit Operation in Category using PHP and MySqli",
          "Delete Operation in Category using PHP and MySqli"
        ],
        "Create API for Online Quiz": [
          "What is API?",
          "Function that We Used to Create API",
          "Create Category API using PHP",
          "Create Leaderboards API using PHP",
          "Testing Leaderboards API",
          "Create Quiz API using PHP",
          "Create Badge API using PHP",
          "Create GetPhoto API using PHP"
        ],
        "Create Login, Register, Add Score and Photo Backend": [
          "Create Login Function using PHP",
          "Create Register Function using PHP",
          "Create Score Function using PHP",
          "Explanation Score and Badge Function",
          "Testing Score and Badge Function",
          "Function Display Photo from Database"
        ],
        "Create Online Quiz - REGISTER": [
          "Setup Project Flutter",
          "Create Design User Register 1",
          "Create Design User Register 2",
          "Create Design User Register 3",
          "Create Function Register Flutter",
          "Using HTTP to User Register",
          "Alert Dialog",
          "Create Image Picker Flutter",
          "Final User Register Using Photo",
          "Add Circular Progress Indicator User Register",
          "Fully Functional User Register"
        ],
        "Create Online Quiz - LOGIN": [
          "Create Login Design Page",
          "Create Function User Login",
          "Save Data to Shared Preferences",
          "Push And Remove After User Login",
          "Add Auto Redirect"
        ],
        "Create Online Quiz - Bottom View and HOME": [
          "Create Home Page Bottom View",
          "Design Home Page",
          "Add and Create Json Serializable",
          "Create Json Quiz Content",
          "Create Function to Get Data From Database",
          "Display Quiz Data From Database",
          "Fix Bugs on Display Quiz",
          "Display New Quiz",
          "Create and Display Quiz Slider",
          "Create Model Category",
          "Display Quiz Category"
        ],
        "Create Online Quiz - Create Question": [
          "Create Question from API",
          "Create Main Quiz",
          "Display Quiz in Main Quiz",
          "Create Answer Button for Quiz",
          "Add Current Question in Appbar",
          "Add Score in Appbar",
          "Create Final Answer Button for Quiz"
        ],
        "Create Online Quiz - WINNER PAGE": [
          "Load User Photo from Database",
          "Display Photo and Winner Message",
          "Display Score to User",
          "Store Score to Database 1",
          "Store Score to Database 2",
          "Fix Bugs Update Score by User ID",
          "Add Animation WINNER",
          "Add Lock Back Button in Main Quiz",
          "Add Award Background"
        ]
      },
      "requirements": [
        "Basic knowledge in flutter, dart and php"
      ],
      "description": "Course prerequisites:\nBasic knowledge in programming to get started\nBasic knowledge in Flutter\nConcepts are explained clearly. You will always learn what you're building and why, and then how to do it.\nHow this course can be of help:\nGaining more knowledge in Flutter How to Create Badge System, Score and Quiz\nLearn how to make flutter app fully functional\nLearn how to make simple admin panel(content management system)\nWhat's in the course:\nCreate complex design UI completed\nCrate Login, Register and Logout using PHP and Database MySQL\nImage Picker form Camera and Gallery\nCreate multiple item in home page\nApp Bar\nShared Preferences\nJSON Serializable Generator\nBottom Navigation Bar in Flutter\nForm Input in Flutter\nLeaderboards System\nBadge System\nScore System\nCreate Different Page High Score\nPop Up Dialog\nCreate API\nCreate CRUD (Create, Read, Update and Delete using PHP)\nCreate simple Admin Panel (Content Management System)\nFutureBuilder, ListviewBuilder and GridviewBuilder\nLoading item when fetch data from Database\nLearn PHP, Dart and Flutter Programming Language\nClean-code and avoid Boilerplate code\nRequirements:\nWindows application development\nMac application development\nXampp or Wampp installed on your computer\nAndroid Studio or Visual Studio Code\nAccess to a computer with an internet connection.\nand you are ready for the journey\nWhat Should I Expect After this Course?:\nYou will be able to create simple Admin Panel (Content Management System)\nYou will be able to create simple API to provide App\nYou will be able to create Online Quiz using Flutter and PHP by accessing data from Database\nYou will be able to create how to fetch and display data from API\nThis course made using Windows not Mac, but you can follow step by step this course if you are using Mac, with requirements you have installed Wampp or Xampp on computer",
      "target_audience": [
        "Flutter, Dart and PHP learning",
        "Beginner flutter",
        "Beginner php"
      ]
    },
    {
      "title": "Creating Your First iPhone App",
      "url": "https://www.udemy.com/course/creating-your-first-iphone-app/",
      "bio": "Decide if iOS programming is right for you by making a resume app. Using Xcode and Swift",
      "objectives": [
        "Create new projects on Xcode",
        "Add text, images, and buttons to iOS apps"
      ],
      "course_content": {
        "Welcome": [
          "Let's Get Started",
          "Background",
          "Xcode Tour"
        ],
        "Your First iPhone App": [
          "Intro/Sketch",
          "Labels",
          "ImageViews",
          "Buttons",
          "Segues",
          "TextView",
          "Challenge",
          "Solution",
          "Programming Buttons",
          "Calls and Emails",
          "Graduation!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You need a Mac computer for this course"
      ],
      "description": "Have you ever wanted to make an iPhone app? Now is your chance. This two hours course will walk you through making your very first app.\nI created this course for people wanting to try out app programming. I keep things light and fun as I walk you through the basics of making an app. I know what it feels like to be a complete beginner because I'm a self taught programmer. I'll never talk over your head and I care about your learning.\nWe will be creating a Resume app that will showcase a picture of yourself, your work history, education and even buttons to initiate phone calls or emails. It is through creating this app that you will learn some basics of app programming.\nIf you've always thought about getting into apps and trying it out, don't delay any longer. The whole point of this course is to dive in so that you can see if it is right for you :)\nSo if you have a Mac computer, and want to try out making iPhone apps, enroll now!",
      "target_audience": [
        "This course is meant for people wanting to try out iOS app programming"
      ]
    },
    {
      "title": "Android and Apple App Development: Beginner to Pro",
      "url": "https://www.udemy.com/course/android-and-apple-app-development-beginner-to-pro/",
      "bio": "Never developed an app before? Learn Android and Apple development, learn Java and Swift. Learn Phonegap and app design.",
      "objectives": [
        "App development without writing code at all using Android App Inventor",
        "Basics of Java, which is essential for Android Development",
        "App designs using the popular Sketch 3 mobile mockup software",
        "PhoneGap that allows you to write your app using one programming language and SDK, then convert it to other platforms for publishing.",
        "Learn the new Swift programming language"
      ],
      "course_content": {
        "Build Android Apps with App Inventor 2 - No Coding Required": [
          "Introduction",
          "Course Breakdown",
          "Introduction to App Inventor 2"
        ],
        "App Inventor 2: Setting Up App Inventor for Development": [
          "App Inventor Setup Introduction",
          "Creating A Gmail Account",
          "App Inventor Companion App - Option 1",
          "Setting Up Onscreen Emulator - Option 2",
          "Setting Up Usb Device Part 1 - Option 3",
          "Setting Up Usb Device Part 2 - Option 3",
          "Section Recap"
        ],
        "App Inventor 2: Breaking Down The Component Editor": [
          "Component Editor Introduction",
          "Pallette Section",
          "Components View And Components Section",
          "Properties Section",
          "Blocks Editor Build Options And Media Section",
          "Components Editor In Action",
          "Section recap"
        ],
        "App Inventor 2: Breaking Down The Blocks Editor": [
          "Blocks Editor Introduction",
          "Blocks Drawer",
          "Blocks Viewer And Media Section",
          "Blocks Editor In Action",
          "Section Recap"
        ],
        "App Inventor 2: Your First App: Hello Purr": [
          "First App Introduction",
          "First Application Overview",
          "Setting Up Our First Application",
          "Component Spotlight: Button",
          "Component Spotlight: Label",
          "Creating Our First Application",
          "Running Our Application",
          "Section Recap"
        ],
        "App Inventor 2: Your Second App: Audiobook Log": [
          "Second App Introduction",
          "Second App Overview",
          "Component Spotlight - HorizontalArrangement",
          "Component Spotlight - VerticalArrangement",
          "Arranging Our Buttons",
          "Component Spotlight - Checkbox",
          "Naming Our Chapters",
          "Component Spotlight - Sound",
          "Setting Up Chapter Audio",
          "Adding Space To Our Layout",
          "Updating Our Component Names",
          "Block Time: Making Our Buttons Play Audio",
          "Testing Final App",
          "Section Recap"
        ],
        "App Inventor 2: Understanding Backing Up, Restoring & Sharing App Inventor Proje": [
          "App Backup, Restore And Share Intro",
          "Understanding App Inventor File Types",
          "Downloading & Backing App Inventor Apps",
          "Uploading, Sharing & Restoring App Inventor Apps",
          "Section Recap"
        ],
        "App Inventor 2: Your Third App : Skeleton Review": [
          "Third App Introduction",
          "Third App Overview",
          "Component Spotlight: Canvas",
          "Layout Canvas & Labels",
          "Component Spotlight: Ball",
          "Implement Hotspots And Upload Media",
          "Block Time - Activating Tapped Bones",
          "Block Time - Simplifying Activated Bone Blocks With Procedures",
          "Block Time - Resetting Hotspot Colors With Procedures",
          "Component Spotlight - Player",
          "Adding Vibration To Hotspots",
          "Section Recap"
        ],
        "App Inventor 2: Your Fourth App: My Business App": [
          "Fourth App Introduction",
          "Fourth App Overview",
          "Basic Home Screen Layout",
          "Navigation Drawer Layout",
          "Component Spotlight - Activity Starter",
          "Implementing Website Activity",
          "Implementing Map Activity",
          "Component Spotlight - PhoneCall",
          "Implementing Call Screen Part 1 - Intro To Multiple Screens",
          "Implementing Call Screen Part 2 - Intro To Multiple Screens",
          "Component Spotlight - Textbox",
          "Implementing Email Screen Layout",
          "Block Time - Sending Emails With The Help Of Variables",
          "Section Recap"
        ],
        "App Inventor 2: Your Fifth App: Free Form Task List": [
          "Fifth App Introduction",
          "Fifth App Overview",
          "Implementing Top Task Bar Layout",
          "Component Spotlight - Listview",
          "Component Spotlight - File",
          "Finalizing Main Screen Layout With Listview, File, And Empty List Image",
          "Implementing Taskform Screen And Structure",
          "Component Spotlight - Listpicker",
          "Finalizing Taskform Screen With Listpicker, And Form Input",
          "Block Time: Passing Data Between Screens",
          "Block Time: Adding Tasks To File - Understanding Parsing Pt1",
          "Block Time: Displaying Tasks From File Using Listview - Understanding Parsing Pt",
          "Block Time: Deleting Our List And Toggling Filter Bar",
          "Block Time: Toggling Main Image And Canceling Tasks",
          "Block Time : Showing New Tasks First With List Reversal",
          "Block Time: Making Tasks Pretty Using Text Manipulation",
          "Section Recap"
        ]
      },
      "requirements": [
        "If you've ever wanted to actually build the mobile app ideas floating around in your head but didn't know where to start, this is the course for you. This course is meant to get you started developing mobile apps even if you've never written a line of code.",
        "You'll learn both Android and iOS development along with the Java and Swift programming languages."
      ],
      "description": "If you've ever wanted to actually build the mobile app ideas floating around in your head but didn't know where to start, this is the course for you. This course is meant to get you started developing mobile apps even if you've never written a line of code.\nYou'll start by building fully functional apps without writing code. You'll then move to fully learn both Android and iOS development along with the Java and Swift programming languages.\nGoing beyond just app development, you'll also learn mobile UI/UX design and how to mock up your app ideas using Sketch 3.\nFinally you'll learn how to leverage the power of PhoneGap, which lets you write your app once and convert it to other platforms for publishing.\nGetting Started with App Development\nYou'll start by learning app development without writing code at all using Android App Inventor. Here you'll learn basic programming terminology and concepts by building functioning mobile apps that you can actually publish to the market.\n\nBy removing the coding aspect from app development, you'll be able to truly understand what you're doing before diving into the more complex world of writing code.\nThis is what sets our course apart from all the others you'll see on Udemy.\nAndroid App Development\nFirst you'll learn the basics of Java, which is essential for Android Development. Then you'll be ready to learn Android app development,\nApple (iOS) App Development\nStart by learning the new Swift programming language. Swift is the language iOS developers will be using to develop apps moving forward. Next you'll learn basic iOS app development using Xcode before moving on to intermediate and advanced topics that will allow you to publish apps to the app store, add in-app purchasing and much more.\nApp Design and UI/UX Design\nApps that don't look great or don't function well for the user will be deleted faster than they were downloaded. In the following sections you'll learn everything you need to know about user interface design and user experience design so you can develop apps that people will actually want to use.\nYou'll also learn how to mock up your app designs using the popular Sketch 3 mobile mockup software.\nPhoneGap\nPhoneGap is a technology that allows you to write your app using one programming language and SDK, then convert it to other platforms for publishing. So if you prefer to make your app using Java and the Android SDK, you'll be able to publish your apps to the Apple App Store and the Windows App Store without having to write new apps for each platform. Neat!",
      "target_audience": [
        "Anyone who wants to develop an App"
      ]
    },
    {
      "title": "Android Studio Masterclass - APP DEVELOPMENT COURSE",
      "url": "https://www.udemy.com/course/android-app-development-course-with-android-studio/",
      "bio": "Learn Android App Development using ANDROID STUDIO & JAVA JDK .",
      "objectives": [
        "The EXPERTISE to be an Android Nougat app developer as taught by the best",
        "The course is continually UPDATED, so you’ll learn the very latest as Android Nougat evolves.",
        "The skills you’ll learn are in HIGH DEMAND. You’ve learned to program like an expert. Go get that job!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "INSTALLATION & CONFIGURATION OF ANDROID STUDIO & JAVA JDK & GENYMOTION": [
          "INSTALLING JAVA JDK",
          "INSTALLING ANDROID STUDIO",
          "INSTALL & SETUP GENYMOTION FOR ANDROID STUDIO"
        ],
        "ANDROID STUDIO COMPLETE TUTORIAL": [
          "Building Your First Android App (Hello World Example)",
          "Basic Overview of an Android App",
          "Android Activity Lifecycle",
          "Android Activity Lifecycle State change Example",
          "Adding Two Numbers App (Simple Calculator)",
          "Wrap Content , Fill Parent , Password Field and Toast in Android",
          "Android Checkbox Basics and Example",
          "Android RadioButton Basics With Example",
          "Android RatingBar Basics",
          "Android Alert Dialog Example",
          "How to Start New Activity On Button Click via Intent",
          "Android Analogclock And Digitalclock Example",
          "Android Login Screen Example Part 1",
          "Android Login Screen Example Part 2",
          "Android ImageView example",
          "Android ListView",
          "SeekBar",
          "Android WebView Example",
          "Android Gestures (Using Touch Gestures)",
          "Fragments in Android - Part 1",
          "Fragments in Android - Part 2",
          "Android AutoCompleteTextView Control",
          "Android TimePicker",
          "Android TimePicker Dialog ( TimePickerDialog )",
          "Android DatePicker Dialog ( DatePickerDialog)",
          "Showing Notifications and using NotificationManager",
          "Action Bar (ActionBar) - part 1",
          "Action Bar (ActionBar) Overflow Menu Items and Icons - part 2",
          "Add Up Button for Low-level Activities to Action Bar - part 3",
          "Explicit and Implicit Intents in Android",
          "Introduction to Services and Creating Started Service",
          "Service and Thread in Android",
          "Creating Service Using IntentService",
          "Bound Services",
          "Applying Styles on Components",
          "Style inheritance in Android",
          "How to Save a File on Internal Storage"
        ],
        "Android SQLite Database": [
          "Introduction + Creating Database and Tables - part 1",
          "Introduction + Creating Database and Tables - part 2",
          "Insert values to SQLite Database table using Android",
          "Show SQLite Database table Values using Android",
          "Update values in SQLite Database table using Android",
          "Delete values in SQLite Database table using Android"
        ],
        "Android MySQL Database": [
          "Creating Database And Writing PHP Script",
          "Android Login with PHP MySQL",
          "Connecting Android App to Online MySQL Database",
          "Insert Data in Mysql Database using Registration Form"
        ],
        "HELP US": [
          "WE NEED YOUR REVIEW"
        ]
      },
      "requirements": [
        "Your ENTHUSIASM to learn the worlds #1 app development framework, and then to showcase it on your RESUME!"
      ],
      "description": "Welcome to the world's best Android app development course. This Android with Java course is based on our in-person app development bootcamp in London. We've perfected the curriculum over 4 years of in-person teaching. So we know all your questions before you even ask them!\nOur complete app development courses teaches you how to code using Java and build beautiful Android apps for phones and tablets.\nEven if you have ZERO programming experience.\nThe course includes hours and hours of HD video tutorials and builds your programming knowledge through making real world apps.\nBy the end of this course, you will be fluently programming in Java and be ready to make your very own apps or start a freelancing job as an Android developer.\nFrom beginner to Android app developer using just one course\nBy the end of the course you'll not just be familiar but completely understand:\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nData Structures: How to work with collections, such as arrays, maps, and ArrayLists.\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nNetworking: How to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nREMEMBER… There is a full money back guarantee, just as long as you request it within 30 days of purchasing the course.\nSo what are you waiting for? Click the buy it now button. You’ve got nothing to lose (and access to the best Android app development course to gain).",
      "target_audience": [
        "Anyone Can Take This Course"
      ]
    },
    {
      "title": "Learn Laravel, Laravel API, Flutter From Scratch",
      "url": "https://www.udemy.com/course/laravel-api-laravel-api-luman-flutter/",
      "bio": "make ecommerce, multi vendors, news, api using Laravel and make ecommerce app",
      "objectives": [
        "Laravel",
        "Laravel API",
        "Flutter"
      ],
      "course_content": {},
      "requirements": [
        "Basics PHP",
        "xampp server",
        "any editor PHP"
      ],
      "description": "Learn Laravel, Laravel API, Flutter From Scratch\nmake ecommerce, multi vendors, news, api using Laravel and make ecommerce app\n\n\nin Course your Learn:\nLaravel From Scratch\nHow To make Laravel API\nDart & Flutter From Scratch\nConnect Laravel API With Flutter\nProgramming Any Application Andtoid & iOS Using Laravel API and Flutter\nProgramming E-commerce Application Andtoid & iOS Using Laravel API and Flutter",
      "target_audience": [
        "Geeks",
        "Students",
        "Any person Using PHP in Projects"
      ]
    },
    {
      "title": "HTML5 for Mobile Devices",
      "url": "https://www.udemy.com/course/html5-for-mobile-devices/",
      "bio": "Create Flexible HTML5 That Works on Mobile, Tablet and Desktop Devices",
      "objectives": [
        "Understand the dynamics of screen size",
        "How to emulate screens with Google Chrome",
        "How to use the viewport meta tag",
        "How to hide and display content on mobile to optimize space",
        "To make content adjustments for mobile screens",
        "To make adjustments in multiple column layouts for small screens",
        "How to use dynamic units to make font size adjustments",
        "How to determine device location",
        "How to display a map",
        "How to get information about the local area from Google Places",
        "How to use the jQuery Mobile page metaphor",
        "How to create mobile buttons with jQuery Mobile",
        "Using mobile icons with jQuery Mobile",
        "Working with jQuery Mobile popups",
        "Using toolbars in jQuery mobile",
        "Applying navbars in jQuery Mobile",
        "Installing the HammarJS library for gestures",
        "Detecting tap and press gestures",
        "Detecting swipe and pan gestures",
        "Storing data on mobile devices",
        "Storing session data on mobile",
        "Using HTML5's localStorage object",
        "Storing a Javascript object with state using serialization",
        "Understanding the cache manifest",
        "Adding the cache manifest to HTML",
        "Managing the manifest for offline apps"
      ],
      "course_content": {
        "Welcome to the Course": [
          "Welcome to the Course",
          "About Your Instructor"
        ],
        "Welcome to Mobile": [
          "Chapter Preview",
          "The Mobile Screen",
          "Emulating the Mobile Screen with Google Chrome",
          "Creating Your First Mobile HTML5 Site"
        ],
        "HTML5 and CSS Coding For Mobile": [
          "Chapter Preview",
          "The Viewport Meta Tag",
          "Displaying and Hiding Content on Mobile",
          "Adjusting Content for Mobile Screens",
          "Adjusting Multiple Column Layout for Mobile",
          "Using Dynamic Units"
        ],
        "Geolocation": [
          "Chapter Preview",
          "Determining Location with Javascript",
          "Displaying a Map",
          "Obtaining Local Information"
        ],
        "jQuery Mobile Basics": [
          "Chapter Preview",
          "jQuery Mobile Page Metaphor",
          "jQuery Mobile Buttons",
          "jQuery Mobile Icons",
          "jQuery Mobile Popups",
          "jQuery Mobile Toolbars",
          "jQuery Mobile Navbars"
        ],
        "Working with Gestures": [
          "Chapter Preview",
          "The Hammer.js library",
          "Taps and Presses",
          "Swipes and Pans"
        ],
        "Storage": [
          "Chapter Preview",
          "Storing Session Data",
          "Storing Local Storage Data",
          "Storing Object and State"
        ],
        "Offline Apps": [
          "Chapter Preview",
          "The Cache Manifest",
          "Adding the Manifest to your HTML",
          "Managing the Manifest with Javascript",
          "Goodbye From Mark!"
        ]
      },
      "requirements": [
        "Successful students should know some fundamental HTML"
      ],
      "description": "We're living in a world of multiple screens. On a typical day, you might view the screen on your mobile device, your tablet, your television, and your desktop computer at work. Designing content that works on all-size screens and optimizing for mobile previously meant writing multiple versions of your application.\nHowever, those days are over.\nToday, with a good understanding of HTML you can write your code so that it works on every size screen while taking advantage of the unique environment afforded by mobile. This course will show you how.\nIt's no longer enough to write HTML5 that doesn't go everywhere customers do. Increasingly, your customers are more and more mobile and your HTML5 has to have the flexibility to be displayed on any screen and the features to take advantage of the mobile ecosystem.\nThe fact is that most websites are viewed more often on mobile devices than on traditional computer screens and if your site (and your HTML code) isn't prepared, you're going to lose site visitors and lose business!\nThis course is for you if you know a bit of HTML and are looking to expand your skills into the mobile realm. If you're a web designer or developer trying to expand your work beyond the desktop you're going to truly benefit from this excellent course.",
      "target_audience": [
        "Developers and Designers moving to mobile",
        "Teachers and students",
        "HTML authors who want to have great looking content on any size screen",
        "Graphic designers"
      ]
    },
    {
      "title": "Fundamentals of SDR, Software Defined Radio -An Introduction",
      "url": "https://www.udemy.com/course/rahsoft-software-defined-radio-sdr-training-online-course-rahsdr480/",
      "bio": "Gain knowledge in SDR domain with RAHSDR480 first course of SDR concentration of Rahsoft RF Engineering Certificate",
      "objectives": [
        "fundamentals of Software Defined Radio",
        "A great knowledge of different aspects of SDRs",
        "How the SDRs are useful in practical scenarios along with knowledge of different SDR Hardware and software available."
      ],
      "course_content": {
        "Essentials of SDR": [
          "Introduction to Course",
          "Communication Block and Terminology",
          "SDR definition",
          "Advantage of SDR",
          "History and Evolution of Radios",
          "Software Communications Architecture (SCA)",
          "Software-Defined Networking (SDN)",
          "Communication Standards and Signals",
          "Time and Frequency domain",
          "Decibel units"
        ],
        "SDR Hardware Architecture": [
          "SDR Hardware",
          "Super-Heterodyne Architecture",
          "Homodyne Architecture",
          "LO Leakage and DC Offset",
          "I/Q Mismatch or I/Q Imbalance",
          "Heterodyne Architecture Advantages & Disadvantages",
          "Homodyne Architecture Advantages & Disadvantages",
          "Comparison of both Architecture",
          "SDR Companies-I",
          "SDR Companies-II",
          "Tear down of a SDR-I",
          "Tear down of a SDR-II"
        ],
        "Communication Layer": [
          "Motivation",
          "Communication Layer"
        ],
        "Software for SDR": [
          "Processing Architecture for SDR",
          "SDR Software",
          "IIO Oscilloscope",
          "GNU RADIO",
          "NI LabVIEW",
          "Python",
          "MATLAB",
          "Scilab",
          "SDR Angel",
          "SDR Sharp",
          "SystemVue"
        ],
        "SDR Selection Criteria": [
          "Motivation",
          "Bandwidth & Sampling Rate",
          "Transmitter Power",
          "Frequency Coverage",
          "Dynamic Range",
          "Cost-Efficiency Trade-off",
          "Error-Vector Magnitude",
          "Maximum RF Input to Receiver"
        ],
        "Application of SDRs": [
          "Radio Access Network- (RAN)",
          "Open-Radio Access Network- (O-RAN)",
          "Global Navigation Satellite System (GNSS)",
          "Radar applications",
          "Ham Radio",
          "Signal Generator",
          "Signal Analyzer"
        ]
      },
      "requirements": [
        "This is an intermediate course so previous RF background is needed",
        "Rahsoft RAHRF201",
        "Rahsoft RAHRF200",
        "Rahsoft RAHRF409"
      ],
      "description": "RAHSDR480 is a system-level course on software-defined radio. This course will be a foundation stone to help you get a Telecommunication, Defense, and Space Industry job. This course covers all fundamental concepts related to software-defined radios, including the transition from conventional radios to the software-defined radio, History and Evolution of Radios, Software Communications Architecture, Software-Defined Networking, Communication Standards, and Signals, Time and Frequency domain along with their measuring instrument, Decibel units. We will cover in detail SDR Hardware, including the radio frequency part and signal processing part, along with its advantages and disadvantages. We will do a teardown of a Software-defined radio to get knowledge about sub-circuits. Moreover, we will also discuss the different commercial hardware and software available for SDR. In the last module, we will discuss SDRs' real-life applications like in 4G/5G communication, Ham radios etc..\nWelcome to the Fundamentals of Software-defined radio (RAHSDR480) course, which we will cover in six modules. This course covers all fundamental concepts related to software-defined radios, including the transition from conventional radios to the software-defined radio, History and Evolution of Radios, Software Communications Architecture, Software-Defined Networking, Communication Standards, and Signals, Time and Frequency domain along with their measuring instrument, Decibel units. We will cover in detail SDR Hardware, including the radio frequency part and signal processing part, along with its advantage and disadvantage. We will do a teardown of a Software-defined radio to get knowledge about sub-circuits. Moreover, we will also discuss the different commercial hardware and software available for SDR. In the last module, we will discuss SDRs' real-life applications like in 4G/5G communication, Ham radios etc.\nAt the end of this course, you will have\nA great knowledge of different aspects of SDRs.\nHow the SDRs are useful in practical scenarios along with knowledge of different SDR Hardware and software available.\nThis course will help the students have knowledge of electrical engineering or computer science, but it is not a prerequisite. This course will be a foundation stone to help you get a Telecommunication, Defense, and Space Industry job.",
      "target_audience": [
        "RF Design Engineers",
        "Electrical Engineers",
        "Antenna Engineers",
        "Electrical Engineer Students",
        "Communication Engineers",
        "Hardware Engineers",
        "Radio Frequency enthusiasts"
      ]
    },
    {
      "title": "The complete Java Android App development Build 10 + Apps!",
      "url": "https://www.udemy.com/course/the-complete-java-android-app-development-build-10-apps/",
      "bio": "Learn Android development fundamentals, making 2D game and creating Android apps",
      "objectives": [
        "Make pretty much any Android app you like (your only limit is your imagination)",
        "Become a professional app developer, take freelance gigs and work from anywhere in the world",
        "Bored with the same old, same old? Apply for a new job in a software company as an Android developer",
        "Master Android studio environment",
        "Apply for a job as an Android developer",
        "You’ll have EXPERT LEVEL knowledge of the Java programming language and know exactly how each process of Android development works.",
        "Make 2D games",
        "Learning Sqlite Database",
        "Creating signed APK file for distribution",
        "You will get a certificate upon completion of this course",
        "The course will be updated so that we know later how to add google ads to android app, Allah willing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction part 1",
          "Introduction part 2 (Outline)"
        ],
        "Java Basics": [
          "Java Basics part1",
          "Java Basics part2",
          "Java Basics part3"
        ],
        "Installing Android Studio with JDK": [
          "Installing Android Studio on Windows with JDK",
          "Installing Android Studio on Mac with JDK"
        ],
        "Android Basics": [
          "Creating Android Studio project",
          "Creating Hello World app",
          "Android Studio Interface",
          "Useful tips to learn for Android studio",
          "Creating AVD (Android Virtual Device)",
          "Learning how Android apps work (Overview)",
          "Activity Lifecycle part 1",
          "Activity Lifecycle example part 2",
          "Built user interface",
          "Built user interface using java and add properties to widgets-views",
          "Adding Multiple widgets",
          "Converting Dip into Pixels",
          "Grid layout",
          "Android Event Handling",
          "Event Listener and call back method",
          "Multiple Event Listener",
          "Gestures"
        ],
        "Designing and Creating Fragments, Apps, Overflow menus and Widgets": [
          "Designing Fragments",
          "Creating Fragment Class",
          "Creating Simple design using Fragments",
          "Creating Workout app part 1",
          "Creating Workout app part 2",
          "Creating Workout app part 3",
          "Learning how to run the application in Actual Device",
          "Creating Overflow menu",
          "Adding animations and transitions to your widgets"
        ],
        "Intents and Bound services": [
          "Understanding Intents and sending Intent data",
          "Intent Service in Android Studio",
          "Services in Android Studio",
          "Bound Services in Android Studio",
          "Send Broadcast Intent and Receive Broadcast Intent",
          "Threads in Android Studio",
          "Thread Handlers"
        ],
        "SQLite Database": [
          "SQLite Database part 1",
          "Creating SQLite Database part 2",
          "Adding and Deleting data in SQLite Database part 3",
          "Printing Database and Running SQLite app in Android Studio"
        ],
        "List view, Video view, Images, Styles and Notifications": [
          "List view",
          "Custom List view part 1",
          "Custom List view part 2",
          "Video view",
          "Capture Images (Camera app)",
          "Adding Effects to Images/ Inverting Images",
          "Creating Photo filter",
          "Adding Notifications to apps",
          "Adding Styles to widgets"
        ],
        "Debugging and Running App.": [
          "Debugging and Running App without emulator on your actual device",
          "Adding custom launcher Icon to your app",
          "Creating signed APK file for distribution",
          "Shared preferences part 1",
          "Shared preferences part 2"
        ],
        "Game Development": [
          "Game development in Android Studio",
          "Project structure for Game development",
          "Displaying text in Android Game development",
          "Display Image in Android Game development",
          "Introduction about Game Animation in Android Games",
          "Camera movement in Android Game development part 1",
          "Camera movement in Android Game development part 2",
          "Sound effects in Android Game development just for laughs"
        ]
      },
      "requirements": [
        "A Windows PC, Mac or Linux Computer",
        "ZERO programming knowledge required - I'll teach you everything you need to know to become an Android Developer"
      ],
      "description": "Are you trying to become an Android developer? Have you ever wondered how Android apps are built? Do you want to create Android apps for yourself, for your business or maybe you want to make money from your apps!?Do you want to build your own Applications?\nAnd you want them to build them from your home in your own time.\n\n\nIf the answer is yes, The complete Java Android App development course will help you to achieve that from scratch for (Phones and Tablets!) and you are at the right place to build your skills even if you have zero programming experience you will learn in this course practically from downloading Android Studio till  creating several applications.\n\n\nSign up today, and here’s what you’ll get:\nMore than 26 hours of HD 1080p video content\nAll the knowledge you need to start building any App you can dream of\nThe amazing Java Android App development course that you can buy\nthe most used programming language in the world i.e. Java\nThe type system, variables, functions and methods, inheritance, & classes (Basics of Java).\nHow to work with collections, such as arrays, Array lists, List views, Images, Videos, Maps etc...\nhow to make 2D game\nlots more stuff\nYou will build your programming knowledge and skills.\nBy the end of this course, you will be ready to make your very own Apps or start a freelancing job as an Android developer.\nFor any questions that you might have I am waiting you, happy to answer.\n\n\nBenefits to you\nRisk free! 30-day money-back guarantee\nFreedom to work from anywhere (beach, coffee shop, airport – anywhere with Wi-Fi)\nPotential to work with forward-thinking companies\nA sense of accomplishment as you build amazing things\nMake any Android app you like (your imagination is your only limit)\n\n\nDon’t wait another moment. The world is moving fast. Coding really can help you achieve your dreams so\nenroll now and :\n- Get familiar with Android studio, IDE for creating native Android applications.\n- Learn how Android apps are built, and how to build your own android apps from scratch.\n- Learn how to design your Android App UI.\n- Learn how to generate APK file so that you can send your app to your friends and they can install your app without downloading it from google play.\n- Learn how to use different types of views in Android either (Card views, Scroll view or Image views)\n- Learn how to make functional android app in general such as (Real Estate app)",
      "target_audience": [
        "Anyone who wants to be an app developer and build their own apps.",
        "Anyone who is curious about Android development.",
        "Anyone who wants to get a Job as an Android developer or to work as a freelancer.",
        "Anyone who wants to learn to code: Java is a fantastic language to learn how to code with.",
        "Android course for beginners",
        "Unity",
        "Beginner Android app Development"
      ]
    },
    {
      "title": "React Native For Absolute Beginners with React Hooks",
      "url": "https://www.udemy.com/course/react-native-for-absolute-beginners-with-react-hooks/",
      "bio": "In this course you will learn how to create a basic react native application from scratch with React Hooks",
      "objectives": [
        "Cross Platform Mobile App Development",
        "React Native Mobile App development",
        "Beginner React Developement",
        "Beginner Mobile app development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download Necessary Software"
        ],
        "Intro to React Native": [
          "Installing React Native project",
          "Running react native app in emulator"
        ],
        "Understanding React Native Fundamentals": [
          "Basic React Native Concepts",
          "Understanding React Native View, Text , StyleSheet",
          "Understanding React Native TextInput and Dimensions",
          "Extra React Native Tags"
        ],
        "Adding Stack and Bottom Tab Navigator to our react native project": [
          "Intro to React Native Navigation",
          "Adding an npm package and configuring it",
          "Adding Stack Navigator",
          "Navigating from one Stack screen to another",
          "Customizing Stack navigator",
          "Adding Bottom tab navigator",
          "Adding icons to bottom tab navigator",
          "Discussing about Buttons and PermissionsAndroid",
          "Solving Multidex issue"
        ],
        "Overview of React Hooks": [
          "useState Hook",
          "useEffect Hook"
        ],
        "Project": [
          "Setting up login form",
          "Finishing the project with signup form"
        ],
        "Conclusion": [
          "My next course",
          "Conclusion"
        ]
      },
      "requirements": [
        "Good Internet Connection"
      ],
      "description": "If you want to start learning react native as a beginner, this course will teach you all the fundamentals needed to get up and running with react native. If you are struggling with how to make a small application with react native as a beginner, this course will guide you from the scratch of setting up your react native app, explaining each and every react native tag which we will be using in our react native project.\nIf you are an absolute beginner to mobile app development this course will get you through all the required things needed to get started in the coding part of react native. This course will help you understand react hooks like useState and useEffect which are the fundamental building blocks of modern web and mobile app development with react and react native. I will walk through each and every step of how to work with react native.\nI will also let you know how I work with react native in my job that I do which will let you know more about the industry standards of programming with react native. You will also get to know how you can use npm packages in your react native app and how to get it set up in your project and use it's functionalities.\nSo this course is for absolute beginners who want to get going in the coding part of react native. Purchase this Course to get good knowledge about react native right now!",
      "target_audience": [
        "Beginner Android app Developers",
        "Beginner React Native developers",
        "People who want to make apps with react native"
      ]
    },
    {
      "title": "Master Flutter App Dev By Building A real Time Chat App",
      "url": "https://www.udemy.com/course/flutter-firebase-complete-chat-app/",
      "bio": "Complete Flutter Firebase Chat App",
      "objectives": [
        "Learn the most basics to advanced knowledge how to make a chatting app and work with flutter firebase",
        "Intermediate to advanced knowledge of Flutter Framework",
        "Intermediate to advanced knowledge of Firebase",
        "How to make advanced query of Firebase",
        "How to design UI in Flutter Framework",
        "Learn the Getx State Management System",
        "Learn about Google, Apple and Facebook Login",
        "Learn how to send notification to users using firebase"
      ],
      "course_content": {
        "Introduction": [
          "Introduction demo about the app"
        ],
        "App set up": [
          "Create firebase project",
          "Create firebase android and ios projects with Flutterfire"
        ],
        "Run on device": [
          "Run on android and ios device"
        ],
        "Work on UI and Controller": [
          "Work on the welcome screen",
          "Welcome controller binding and routing",
          "Set up the route in main.dart file",
          "Welcome page show three images",
          "Work on the slides indicator and bind dots with the slides"
        ],
        "Sign in Page UI and Controller": [
          "Heads up about Google Sign in",
          "Work on sing in button and create method",
          "Sign in page and logo",
          "Work on Sign in controller and Google login button",
          "Work on Google login and finish",
          "Save user data to firestore database",
          "Save user emails in firebase authentication",
          "Middleware and application page part 1",
          "Middleware and application page part 2"
        ],
        "Basic understanding of designing firebase database (no coding necessary here)": [
          "Database design firebase"
        ],
        "Read firebase data": [
          "Understand how app works with database collection and documents",
          "Read firebase data and show on contact page part 1",
          "Read firebase data and show on contact page part 2",
          "Read firebase data and show on contact page part 3",
          "Read firebase data and show on contact page part 4",
          "Read firebase data and show on contact page part 5",
          "Read firebase data and show on contact page part 6",
          "Must watch and understand the goChat algorithm"
        ],
        "Chat page and controller": [
          "Work on chat page and controller part 1",
          "Work on chat page and controller part 2",
          "Work on chat page and controller part 3",
          "Work on chat page and chat controller part 4",
          "Work on chat page and chat controller part 5",
          "Work on chat page and controller part 6",
          "Work on chat page and chat controller send message part 7",
          "Work on chat page and controller upload file part 8",
          "Better understanding of firebase document changes (skippable)",
          "Chat Controller must include doc_id"
        ],
        "Message page upload image and get history data": [
          "Message page upload image part 1",
          "Message page and send image part 2",
          "Message page and how image upload works",
          "Message page and get the history chat part 3",
          "Message page and message list part 4",
          "Message page and show other's message part 5",
          "Message page and sending messages 6",
          "Better understanding of Cloud Storage Reference and Child (skippable, no coding)"
        ],
        "User location": [
          "Get user location"
        ]
      },
      "requirements": [
        "Basic of Flutter Framework",
        "A bit of programming knowledge",
        "Flutter installed and configured"
      ],
      "description": "You will learn here how to master firebase and flutter by building a real time chat app. It's a course for building iOS and Android app using Flutter.\nHere I have covered how to build Flutter UI to advanced Flutter concept. But this tutorial mostly focuses on how to build a strong app using firebase.\nWe talked a lot about firebase data storage and how to retrieve them and show on the app. We used a lot of complex queries and conditions to work with.  You will learn how to use where() clause, double where() and withConverter() and conditional check. You will also learn about complex processing and listening data update and document updates.\nWe also showed step by step how to examine on the data.  At the end of the course you will get the complete source and master flutter and firebase real time chat app building.\nThere are fifty three chapters and each chapter deals with a different topic. And more chapters would be added in future.\nScreen Features\n1. Launch screen\nYou will see it has screen with three slides. The last one lets you enter in the login page.\n2. Login screen\nWe used social networking for launch screen. The paid version app includes both Google and Facebook sign in. But you will have issues with Facebook login. We will also do Apple account login.\n3. Contact screen\nFrom contact screen you would be able to see how many people have chatted to before. You may choose any to chat back.\n4. Chatting screen\nHere you would be able to chat between two people and get instant messages. Currently you send images and texts for chatting.\nNot only you may send photos on the chat, you may also take photos and send.\n5. Personal center\nHere is your dashboard. You navigate to other screens and logout.\n6. Allow location\nThe app uses user's current location. With this you know who you are chatting to. And there current location.\n7. Photo view screen\nHere you can tap on a photo and enlarge it.\n8. Notification\nWe will have notification bar to see when others send message",
      "target_audience": [
        "Frontend Flutter developers and backend programmers want to learn Firebase",
        "Want to master the basics of Chatting app and Firebase database structure"
      ]
    },
    {
      "title": "Build BeReal Clone (IOS 17) - SwiftUI 5 & Firebase",
      "url": "https://www.udemy.com/course/swiftui-4-build-bereal-clone-ios-16-best-practices/",
      "bio": "Master SwiftUI 5 and Harness iOS 17 Best Practices to Build a BeReal Clone",
      "objectives": [
        "Binding Your Data With Your UI using @State, @Binding, @ObservedObject",
        "Async/Await functions",
        "Using new SwiftUI views for iOS 16",
        "Using SF Symbols to create Menus",
        "Brand New Swift 5.7 syntax",
        "Implementing MVVM architecture with SwiftUI",
        "Rapid development of functional reusable views",
        "Features and functionality of new Xcode 14",
        "Build apps for iPhone 14, iPhone 14 Pro, iPhone 14 Pro Max"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "BeReal UI": [
          "BeReal UI #1 - Feed Menu",
          "BeReal UI #2 - FeedCell",
          "Welcome UI",
          "BeReal UI #3 - FeedView",
          "BeReal UI #4 - Profile",
          "BeReal UI #5 - Settings",
          "BeReal UI #6 - Edit Profile",
          "BeReal UI #7 - TimeZoneView",
          "BeReal UI #8 - LeftMenu SearchBar",
          "BeReal UI #9 - Suggestions",
          "BeReal UI #10 - FriendsView",
          "BeReal UI #11 - RequestsView",
          "BeReal UI #12 - LeftMenu Final",
          "BeReal UI #13 - MainMenuVuew",
          "BeReal UI #14 - OtherView",
          "BeReal UI #15 - HelpView & ContactUsView",
          "BeReal UI #16 - MemoriesView",
          "BeReal UI #17 - NavigationLinks",
          "BeReal UI #18 - NotificationsView",
          "BeReal UI #19 - EnterNameView",
          "BeReal UI #20 - EnterAgeView",
          "BeReal UI #21 - ChooseCountryView",
          "BeReal UI #22 - EnterPhoneNumberView",
          "BeReal UI #23 - EnterCodeView",
          "BeReal UI #24 - MainAuthenticationView"
        ],
        "BeReal Backend": [
          "Welcome Backend",
          "BeReal #25 - AuthViewModel",
          "BeReal #26 - Verifying OTP",
          "BeReal #27 - MainView",
          "BeReal #28 - FetchUser",
          "BeReal #29 - Populating User Data",
          "BeReal #30 - Passing Down User Data",
          "BeReal #31 - Changing User Data locally",
          "BeReal #32 - Changing User Data in Firestore",
          "BeReal #33 - ImageUploader",
          "BeReal #34 - ImagePicker",
          "BeReal #35 - Uploading the Image to the Server",
          "BeReal #36 - Displaying Profile Image",
          "BeReal #37 - CameraView (1)",
          "BeReal #38 - CameraView (2)",
          "BeReal #39 - CameraView (3)",
          "BeReal #40 - CameraViewModel",
          "BeReal #41 - CameraView Final",
          "BeReal #42 - File Structure and MVVM Architecture",
          "BeReal #43 - FeedViewModel",
          "BeReal #44 - FeedViewModel (2)",
          "BeReal #45 - FeedCellViewModel",
          "BeReal #46 - Bug Fixing & Server Cleaning",
          "BeReal UI #47 - FeedView Blur & Finale"
        ]
      },
      "requirements": [
        "Access to a mac computer"
      ],
      "description": "This course has been written and recorded with the latest iOS 16 release!\n\n\nWelcome to the BeReal from Scratch course! In this course, I will teach you how to make money by developing indie apps while developing a real-world app like BeReal.\n\n\nMy name is Cem and I am the founder of Turma app, teaching over 5000 students.\n\n\nToday, the app market is more open to innovation and indie developers more than ever as big app monopolies are being restricted by Apple. This situation presents a great opportunity for indie app developers like you to make unprecedented gains.\n\n\nIn this course, we will be building BeReal from Scratch including both the Backend and Frontend side of the application using SwiftUI, Combine, Firebase, and other third-party packages.\n\n\nThis project-based learning method will help you understand abstract concepts such as Authentication, Data management, and Image processing.\n\n\nYou get step-by-step instructions for each technology in the SwiftUI framework, and see how to use the different views, initializers, methods, and modifiers that are available for each of those technologies.\n\n\nDo not forget, in this course, we emphasize quality over quantity. Therefore, you can expect to learn about concepts, design patterns, and functionalities that are not covered anywhere else. These include creating a “Custom Camera View”, “Phone Number Authentication” using OTP Systems, and integrating third-party packages into the main code.\n\n\nDo not worry if you are a beginner, I will be presenting the concepts in a step-by-step manner where you will learn the basics of SwiftUI by building the User Interface, then we will move onto more complex topics using ViewModels and the Backend Data Management parts of the application.\n\n\nYou will also have access to a library of code for many functionalities that you can utilize in your own applications like authenticating users, creating a Feed, and customizing profiles.\n\n\nAll of the best practices that you will learn in this course will get you ready to work as a Junior IOS Developer or let you start your own app like I once did.\n\n\nNo more fumbling through Apple's convoluted docs for hours trying to find the code you need, or wasting time looking on Stack Overflow, your getting all the instruction and code you need…you just need the idea for the app, and you’re ready to go.\n\n\nOver the years, I have done many Hackathons and taught IOS Development to people from various backgrounds. Therefore, I have a sense of making ideas and concepts easier for people to understand.\n\n\nAs a student of my course, you will be saving a lot of time as all of the content in this course is up-to-date with the latest technologies and latest versions of Swift and Xcode that Apple has released.\n\n\nMe and my team will provide you with live assistance with a 36-hour reply guarantee during the lifetime of this course.\nHere are some of the topics covered:\nApp Development • Swift Language (complete language) • Protocols • Frameworks • User Interface • View Protocol • Opaque Types • Text • Modifiers • Color View • Image View • Event Modifiers • Custom Modifiers • Async/Await • Layout • Safe Area • Priorities • Alignment Guides • Groups • Custom Views • Previews • Preview Modifiers • Environment • Property Wrappers • @State • @Binding • @Environment • @AppStorage • Model • Observable • @EnvironmentObject • View Model • Combine Framework • Publishers • Subscribers • Transforming values • Operators • Subjects • Controls Button View • TextField View • SecureField View • Toggle View • Slider View • Stepper View • Navigation View • NavigationLink View • TabView View • Sheets • Popovers • Alert Views • Action Sheets • Split Views • Custom Navigation • Size Classes • Orientation • GeometryReader View• Preferences • Conditional Code • Menu • Multiple Windows Support • Lists • ForEach View • ScrollView • List View • Sections Edition Mode • Custom Buttons • Search • Picker View • DatePicker View • Forms • Shapes • Charts • Gradients • Images • Paths • Custom Shapes Transformations • Animations • Hit Testing • Transitions • Gesture • Notification Center • System Notifications • User Notifications • Provisional Notifications • User Defaults • File Manager • URLS and Paths • Files and Directories • Bundle • Archiving • Encoding and Decoding • JSON •• Core Data Model • Core Data Stack • Sort Descriptors • Swift Language .• And much more.\nThis course has been written and recorded with the latest iOS 16 release!",
      "target_audience": [
        "Beginner to Intermediate iOS Developers",
        "iOS Developers that switch from UIKit to SwiftUI"
      ]
    },
    {
      "title": "Build a Tinder Clone in iOS SwiftUI and Firebase",
      "url": "https://www.udemy.com/course/tinder-clone-ios/",
      "bio": "Create your own dating app using SwiftUI, Firebase, MVVM, async functions, real time communication and more",
      "objectives": [
        "Build a Tinder like app",
        "Learn iOS for beginners",
        "Create a dating app",
        "Build a real world application",
        "Firebase Database, Storage and User Authentication",
        "Real Time communications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Swipe functionality": [
          "Section overview",
          "Create project",
          "Data models",
          "Swipe card UI",
          "Swipe card functinality",
          "Swipe buttons",
          "Show labels"
        ],
        "Authentication": [
          "Section overview",
          "Firebase setup",
          "Create files",
          "Common auth UI elements",
          "Register view UI",
          "Auth service registration",
          "Auth ViewModel registration",
          "Loading screen",
          "Registration error handling",
          "Login view UI",
          "Login functionality"
        ],
        "Registration flow": [
          "Section overview",
          "Fetch user info",
          "Registration flow setup",
          "Register image UI",
          "Show selected image",
          "ImageUploader code",
          "Upload image to storage",
          "TinderInterests code",
          "Code refactor",
          "Register age view",
          "Register gender view",
          "Register bio view",
          "Register interests view",
          "Register completion view",
          "Complete registration flow",
          "Bug fix"
        ],
        "Profile screen": [
          "Section overview",
          "Main tab view",
          "Kingfisher",
          "Profile screen UI",
          "Edit profile layout",
          "Edit profile ViewModel",
          "Header view",
          "Photos picker",
          "Name and age",
          "Bio",
          "Gender and preference",
          "Interests",
          "Update user data"
        ],
        "Swipe screen": [
          "Section overview",
          "Retrieve users from Firebase",
          "Setup ViewModel",
          "Swipe card functionality",
          "Fix card issues",
          "onLike and onDislike functionality",
          "Update ViewModel",
          "Update view"
        ],
        "Match screen": [
          "Section overview",
          "Match view UI",
          "Match service",
          "Match ViewModel",
          "Update view"
        ],
        "Live chat screen": [
          "Section overview",
          "Define data type",
          "Chat service",
          "Chat ViewModel",
          "Send a message",
          "Header view",
          "Live chat functionality"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Have a mac",
        "Interest in dating apps",
        "Interest in mobile apps",
        "Swift knowledge"
      ],
      "description": "Build a Tinder like app in iOS with SwiftUI and Firebase.\nSocial media now has the largest user base ever.\nHave you ever thought about owning your own dating app similar to Tinder? Now you can\nThis course teaches you exactly how to build a Tinder like app, complete with user accounts, registration, profiles, swipes, matches, conversations and more.\nIn this course we will build an example application with a lot of features similar to an actual dating swipe app that's out on the market right now.\nWe will use Firebase for backend storage and we will learn how to connect and communicate with the backend to show the most up to date information.\nMore features than any Tinder clone app out there.\nWe will build several Tinder features like:\nUser accounts with signup and login\nUser registration with lots of personalizable information\nSwipes left and right and matches\nUser profiles\nUser details screen and potential enhancements\nMatch list view\nLive chat functionality\nError handling\nFor backend development we will use:\nFirebase Authentication for user management\nFirebase Firestore for database access\nFirebase storage for image storage in the backend\nI will show you step by step how to build an SwiftUI app in Swift similar to Tinder, how to program it and what each step means. It's never been easier to have your own dating app.\n\n\nSign up today and start creating your own dating app",
      "target_audience": [
        "People with an interest in online dating",
        "People with an interest in mobile apps",
        "Beginner devleopers",
        "Intermediate developers"
      ]
    },
    {
      "title": "Mastering Flutter Admob: Monetize Your Apps Like a Pro[2025]",
      "url": "https://www.udemy.com/course/mastering-flutter-admob-monetize-your-apps-like-a-pro-2025/",
      "bio": "Learn complete AdMob integration for Flutter apps on iOS & Android with banner, interstitial, App Open & rewarded ads.",
      "objectives": [
        "Master AdMob integration in Flutter apps, implementing banner, interstitial, and rewarded ads with clean code architecture and best practices.",
        "Configure AdMob for both Android and iOS platforms simultaneously, handling permissions, testing modes, and optimizing ad placement.",
        "Implement advanced features like mediation, A/B testing, and analytics to track ad performance and increase your Flutter app's monetization potential.",
        "Troubleshoot common AdMob implementation issues in Flutter, ensuring compliance with platform policies and achieving higher ad fill rates.",
        "Understand AdMob analytics and reporting to track ad performance, user engagement metrics, and optimize revenue streams in your Flutter apps.",
        "Create reusable ad components in Flutter that maintain performance while maximizing viewability and click-through rates.",
        "Master testing strategies for AdMob in Flutter development environments without accumulating invalid clicks or violating Google's policies."
      ],
      "course_content": {
        "Introduction to Flutter Admob (Overview)": [
          "Welcome & Course Overview",
          "What is AdMob & Why Use It?",
          "Understanding Ad Formats in AdMob"
        ],
        "Setting Up Your Environment": [
          "Adding You App To Admob",
          "Creating Flutter Project With Admob Integration",
          "Enabling Test Ads in AdMob for Device",
          "Creating an Ad Helper Class"
        ],
        "Implementing Banner Ads": [
          "What are Banner Ads?",
          "Implementing Fixed Size Banner Ads Lecture 01",
          "Implementing Fixed Size Banner Ads Lecture 02",
          "Implementing Inline Adaptive Banner Ads Lecture 01",
          "Implementing Inline Adaptive Banner Ads Lecture 02",
          "Implementing Inline Adaptive Banner Ads Lecture 03",
          "Implementing Inline Adaptive Banner Ads Lecture 04",
          "Implementing Collapsible Banner Ads Lecture 01",
          "Implementing Collapsible Banner Ads Lecture 02"
        ],
        "Implementing Interstitial Ads": [
          "What are Interstitial Ads?",
          "Implementing Interstitial Ads Lecture 01",
          "Implementing Interstitial Ads Lecture 02",
          "Implementing Interstitial Ads Lecture 03"
        ],
        "Implementing Rewarded Ads": [
          "What are Rewarded Ads?",
          "Implementing Rewarded Ads Lecture 01",
          "Implementing Rewarded Ads Lecture 02",
          "Implementing Rewarded Ads Lecture 03"
        ],
        "Implementing App Open Ads": [
          "What are App Open Ads?",
          "Implementing App Open Ads Lecture 01",
          "Implementing App Open Ads Lecture 02",
          "Implementing App Open Ads Lecture 03"
        ],
        "Implementing Native Ads": [
          "What are Native Ads?",
          "Implementing Native Ads Lecture 01",
          "Implementing Native Ads Lecture 02",
          "Implementing Native Ads Lecture 03"
        ],
        "Ios Additional Config": [
          "iOS App Tracking Transparency Implementation"
        ]
      },
      "requirements": [
        "Basic Flutter development experience and Dart language knowledge. No prior AdMob experience needed. You'll need Flutter SDK installed, Android Studio or Xcode, and a free Google AdMob account.",
        "Familiarity with basic mobile app development concepts. Students should understand Flutter widgets, state management, and how to use external packages.",
        "Access to a computer capable of running Flutter development tools. Windows, macOS, or Linux systems all work perfectly fine for this course.",
        "No paid software required - we'll use only free tools including Flutter SDK and Google AdMob dashboard."
      ],
      "description": "Welcome to \"Flutter AdMob Monetization Mastery 2025\" - your comprehensive guide to implementing Google AdMob advertising into your Flutter applications and transforming your apps into reliable revenue generators.\nThis course is specifically designed for Flutter developers who want to master mobile app monetization through Google's powerful AdMob platform. Whether you're building for Android, iOS, or both platforms simultaneously, this course provides you with the exact implementation strategies you need without the complexity of deployment pipelines or A/B testing overload.\nWhat makes this course different?\nUnlike other AdMob tutorials that offer basic implementation steps, this course dives deep into proper integration techniques that maximize revenue while maintaining excellent user experience. You'll learn how to implement all core ad formats (banner, interstitial, rewarded) using clean architecture patterns that keep your codebase maintainable and scalable.\nHere's what you'll master:\nCross-Platform AdMob Implementation: Configure AdMob properly for both Android and iOS simultaneously, handling all platform-specific requirements and permissions\nComplete Ad Format Integration: Implement banner ads, interstitial ads, and rewarded ads with optimal placement strategies\nRevenue Optimization Techniques: Learn advanced strategies for increasing eCPM (effective cost per mille) and fill rates\nAd Mediation Setup: Configure mediation to maximize revenue by showing ads from multiple networks\nUser Consent Implementation: Properly implement GDPR and privacy compliance for global audiences\nTesting Without Violations: Master the test ad environment to avoid Google policy violations during development\nPerformance Optimization: Ensure ads don't negatively impact your app's performance or user experience\nTroubleshooting Guide: Overcome common implementation challenges and AdMob policy issues\nReal-world implementation:\nThroughout the course, you'll be working with actual Flutter projects, implementing AdMob step-by-step in practical scenarios. Each lecture builds upon the previous one, resulting in a complete monetization system you can apply to your own apps immediately.\nWho should take this course:\nThis course is perfect for Flutter developers with basic to intermediate knowledge who want to monetize their apps effectively. No prior experience with AdMob is required - we'll start from the basics and progress to advanced techniques.\nBy the end of this course, you'll have the confidence to implement a complete AdMob monetization strategy in any Flutter application, maximize your revenue potential, and avoid common pitfalls that many developers encounter.\nJoin thousands of developers who have transformed their Flutter apps into profitable ventures through proper AdMob implementation. Enroll today and start monetizing your Flutter apps the right way!",
      "target_audience": [
        "This course is perfect for Flutter developers looking to monetize their apps, mobile developers transitioning to Flutter, startup founders seeking revenue strategies, and anyone wanting to create income-generating mobile applications without sacrificing user experience. These descriptions incorporate important keywords like Flutter, AdMob, monetization, banner ads, interstitial ads, rewarded ads, mobile development, and user experience - all highly relevant to your course topic and what potential students might search for when looking for this type of content on Udemy.",
        "Mobile app entrepreneurs and indie developers seeking to generate revenue from Flutter applications through properly implemented advertising solutions.",
        "Programmers transitioning from native Android/iOS development to Flutter who want to maintain or improve their app monetization strategies.",
        "Flutter enthusiasts who have created apps but haven't yet implemented monetization and want a comprehensive guide to AdMob integration specifically.",
        "Developers who have tried implementing AdMob in Flutter but encountered issues with cross-platform compatibility, policy compliance, or optimization."
      ]
    },
    {
      "title": "Python Mobile App Development: Build 8+ Mobile Application",
      "url": "https://www.udemy.com/course/python-mobile-app-development-build-8-mobile-application/",
      "bio": "Python Mobile App Development: Go Beyond the Basics and Build 8+ Practical Applications with Real-World Project",
      "objectives": [
        "Build real mobile applications using Python",
        "Master UI/UX design for mobile",
        "Use APIs, databases, and real-time data in mobile apps",
        "Python Fundamentals for Mobile Development",
        "Implementing App Layouts",
        "Navigation and Screen Management",
        "Data Handling"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction & Setup",
          "Calculator App",
          "To Do List App",
          "Chat App",
          "Expense Tracker App",
          "AI-Based Chatbot App",
          "Fitness Tracker App",
          "Ecommerece Product Catalog App",
          "Flash Cards App",
          "Class Project-1",
          "Class Project-2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Are you a Python enthusiast looking to expand your skills into the exciting world of mobile app development? Or perhaps you're a seasoned developer wanting to leverage Python's versatility for creating cross-platform mobile applications? Look no further!\nThis hands-on, project-based course is meticulously designed to guide you through the entire process of developing real-world mobile applications using Python. You'll not only learn the fundamental concepts of mobile UI/UX design but also gain practical experience in building, testing, and even deploying your applications.\nWhat you'll learn:\nPython Fundamentals for Mobile Development\nMobile UI/UX Principles\nBuilding Interactive User Interfaces\nImplementing App Layouts\nNavigation and Screen Management\nWorking with Multimedia\nData Handling and Storage\nPlatform-Specific Considerations\nBuilding 8+ Real-World Mobile Applications\nPackaging and Deployment\nBest Practices for Mobile App Development\nWho this course is for:\nAnyone interested in creating cross-platform mobile applications using a single codebase.\nBy the end of this course, you will have:\nThe skills to design and build visually appealing and functional mobile applications.\nA portfolio of 8+ mobile applications to showcase your abilities.\nThe confidence to tackle your own mobile app ideas using Python.\nEnroll now and start your journey into the exciting world of Python mobile app development!",
      "target_audience": [
        "Anyone interested in creating cross-platform mobile applications using a single codebase and the power of Python."
      ]
    },
    {
      "title": "Maintain Android Apps with Jetpack Architecture Components",
      "url": "https://www.udemy.com/course/maintain-android-apps-with-jetpack-architecture-components/",
      "bio": "Utilize Android Jetpack Architecture components to make your Android application development flexible and maintainable",
      "objectives": [
        "Use the Data Binding library to bind data to the UI",
        "Provide stability in your app by handling life cycles, view models, and live data",
        "Implement effective in-app navigation by using the Navigation architecture component",
        "Schedule tasks asynchronously by using Work Manager",
        "Rebuild an Android application using these new practices as well using the new Jetpack group of libraries.",
        "Understand Kotlin and experience how simple it is to write code using it as opposed to Java.",
        "Stay up to date with the latest and greatest methods to implement common use cases that you will come across when developing future apps."
      ],
      "course_content": {
        "Android Jetpack Architecture Components": [
          "The Course Overview",
          "Why Architecture Components?",
          "Adding Components to Your Project",
          "Understand Data Binding",
          "Layouts and Binding Expressions",
          "Work with Observable Data Objects",
          "Loading Images from a URL Using Glide",
          "Lifecycle-Aware Components",
          "Lifecycle-Aware Components Demo",
          "Using ViewModel",
          "Using ViewModel Demo",
          "Implementing LiveData",
          "Introduction",
          "Implement the Navigation Architecture Component",
          "Update UI Components with NavigationUI",
          "Navigate Using Actions",
          "Pass Data between Destinations Using SafeArgs",
          "Understanding Paging Library",
          "Set Up Backend API",
          "Create PagedListAdapter and DataSource",
          "Construct Observable List and Populate UI",
          "Introduction and Setup",
          "Add Components of Room",
          "Perform Insert Operation",
          "View Database from Android Studio",
          "Write Queries to Fetch and Display Data",
          "Perform Update Operation",
          "Perform Delete Operation",
          "Why WorkManager?",
          "Implementing WorkManager to Schedule Tasks",
          "Running Tasks Under Specific Conditions",
          "Working with Input Parameters and Return Values",
          "Next Steps",
          "Test Your Knowledge"
        ],
        "Modernizing Your Android Applications": [
          "The Course Overview",
          "Layout Design and Management",
          "Rotations and Recreations",
          "New Layouts",
          "New Lists",
          "Old Code Profiling",
          "New Code Profiling",
          "Memory Leaks",
          "Converting Java to Kotlin",
          "Extension Functions",
          "Operator Overload",
          "Kotlin Android Extensions",
          "KTX",
          "Data Persistence the Old Way",
          "Data Persistence the New Way",
          "Inserting Data and Writing Queries",
          "Updating and Deleting Data",
          "Dynamic Data Loading",
          "Handling Lifecycles Callbacks",
          "Responding to State Changes",
          "New Way to Respond to State Changes",
          "Using ViewModel to Restore and Manage Data",
          "Implementing LiveData",
          "Exploring Data Binding",
          "Adding Layouts and Binding Expressions",
          "Bind Layout Views to Architecture Components",
          "Implementing Paging Library",
          "UI Components and Considerations",
          "Data Components and Considerations",
          "Implementing WorkManager to Schedule Tasks",
          "Running Tasks Under Specific Conditions",
          "Setting Up Unique and Named Work Sequences",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "No previous knowledge with Android Architecture Components is assumed."
      ],
      "description": "Are you willing to learn all new Android Jetpack Architecture components and features in order to deliver an extendable, maintainable, and testable codebase? Then this course is for you!\nWith this comprehensive guide, you'll first get started with understanding Architecture Components & exploring data binding library. Then you will learn to handle lifecycles, ViewModel, navigation architecture component & much more. Moving further, you’ll not only be able to improve the performance but also enhance the UI of your application to a whole new level using advanced Architectural Components. to enhance the UI of your app, which gives you more control on your app and makes it easy to maintain.\nBy end of this course, you'll be able to develop professional grade apps for the latest Android version and become a pro-Android developer with reduce the lines of code and efficiently writing your Android application in a modern way.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Android Jetpack Architecture Components will show you all new Android Jetpack Architecture components and features. You will develop Android applications by making use of all the architecture components available with Jetpack to reduce bugs in your codebase and provide seamless and smooth application development. Adding architectural components to your projects will increase their scalability and reduce code bugs. By the end of the course, you will know how to use Jetpack to manage background tasks, navigation, paging, life-cycle management, and much more.\nThe second course, Modernizing Your Android Applications you’ll take an existing Android application build in Java and modernize it using the Kotlin language, seeing the importance of planning the architecture using SOLID principles and common Android Architecture using the MVP, MVC, and MVVM patterns. Moving on, you’ll implement Life Cycle Aware Components, use the viewmodel LiveData framework, and perform data management and persistence with the Room persistence solution. You’ll see how Kotlin efficiently accelerates the development by improving the code base. With the advanced Architectural Components, you’ll not only be able to improve the performance but also enhance the UI of your application to a whole new level. By the end of this course, you’ll have modernized your Android app using all the new features from coding it in Kotlin to implementing Architecture Components to enhancing the UI of your app, which gives you more control on your app and makes it easy to maintain.\nAbout the Authors:\nAnnapurna Agrawal is an Android developer. She has also tried her hands on JavaScript, Kotlin, PHP, jQuery, CSS, and HTML. She is a software engineer from India and likes teaching. She is one of the trainers in the Google Developers Group at Bhubaneswar, Odisha in India. Besides all this, she practices yoga and meditation, YouTubing, and hanging out with friends. We are definitely going to get the best of quality here from her.\nYusuf Saber is an Android developer with over 5 years' professional experience. Yusuf earned his master's degree in Computer Engineering from Ryerson University in 2011 and started his career as a .NET developer before quickly turning to Android. He has worked on a large range of Android apps, from social to multimedia to B2B and more!",
      "target_audience": [
        "This course is for the android developer, who are willing to accelerate their development skills with less code in a more structured way & deliver maintainable, bug-free code which is achieved by using Architectural components."
      ]
    },
    {
      "title": "Android App Development: Modern Android Development Skills",
      "url": "https://www.udemy.com/course/android-app-development-build-10-different-android-apps/",
      "bio": "Android App Development | Develop different modern Android apps, learn android & mobile app development with projects",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "In this course, Oak Academy will building 5 different Android Apps from scratch together.",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "In this course, we will building 10 different Android Apps from scratch together.",
        "Android applications' levels in this course are from easy to difficult",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying.",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase.",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "You will learn to develop games using Android Studio",
        "You will learn to develop applications by getting real-time data from the Internet.",
        "You will have 10 different applications that you will publish on Google Play.",
        "android",
        "android app development",
        "android development",
        "android studio",
        "mobile app development",
        "mobile development",
        "Android Studio",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "Android applications' levels in this course are from easy to difficult"
      ],
      "course_content": {
        "Project 1 : Calculator Application for Android": [
          "Introduction to Android App Development: Modern Android Development Skills",
          "Project Files and Course Documents",
          "FAQ About Android App Development",
          "The Application Design-1",
          "The Application Design-2",
          "The android application Design-3",
          "Printing the Numbers to the Screen",
          "Printing Parentheses to the Screen in android",
          "Writing the Necessary Codes for Operators",
          "Writing the Necessary Codes for Button Dot",
          "Writing the Necessary Codes for Button AC and Delete",
          "Making Calculation - Part 1",
          "Making Calculation - Part 2",
          "Making Calculation - Part 3",
          "Making Calculation - Part 4",
          "Applying Dark Theme",
          "Saving Data",
          "Android App Quiz"
        ],
        "Project 2 : Number Guessing Game in Android": [
          "Introduction to Android Application",
          "The Splash Screen Design and Adding Animation to the Components-1",
          "The Splash Screen Design and Adding Animation to the Components-2",
          "Home Page Design",
          "Writing Necessary Codes for Home Page",
          "The Game Page Design in android development",
          "Writing Necessary Codes for Game Page",
          "Creating the Alert Dialog",
          "What if the user cannot guess the randomly generated number",
          "Android Application 2 Quiz"
        ],
        "Android App Project 3 : Flag Quiz": [
          "Introduction to Android App",
          "Splash Screen",
          "Home page Design",
          "Quiz Page Design",
          "Result Page Design",
          "Navigation",
          "Database Operations - Creating Database",
          "Database Operations - Adding Database to App",
          "Database Operations – Creating DAO – Part 1",
          "Database Operations – Creating DAO – Part 2",
          "Database Operations – Retrieving Data",
          "Showing Data – Part 1",
          "Showing Data – Part 2",
          "Controlling the Correct and Wrong Answers",
          "Controlling the Empty Answers",
          "Showing Results on Bar Chart",
          "Quiz"
        ],
        "Project 4 : Photo Album Application": [
          "Introduction to Android Application",
          "Adding the Necessary Libraries",
          "Creating the Entity Component in android",
          "Creating the DAO Interface in android app",
          "Creating the Database Class in android development",
          "Creating the Repository Class",
          "Creating the View Model Class",
          "The Application Design-1",
          "The Application Design-2",
          "The Application Design-3",
          "Creating The Adapter Class in android",
          "Request Permission in android app",
          "Selecting Image",
          "Reducing the Size of the Selected Image",
          "Saving the Data in app development",
          "Deleting The Data in android app development",
          "Updating The Data-1",
          "Updating The Data-2 in android",
          "Open the Database Using the Database Browser for SQLite",
          "Android Quiz"
        ],
        "Project 5 : Chat Application": [
          "Introduction to Android App",
          "Integration with Firebase",
          "The Login Activity Design",
          "The Registration Activity Design in android development",
          "The Password Reset Activity Design",
          "Firebase Authentication-1",
          "Firebase Authentication-2",
          "Firebase Authentication-3",
          "Firebase Storage in build android app",
          "I forgot my password. How can I reset it",
          "Creating the Options Menu",
          "Update User Profile",
          "The Main Activity Design for Listing the Users",
          "Getting the Users From Database",
          "Listing Users on the Screen",
          "The Chat Activity Design",
          "The Messaging Screen Design",
          "The Messaging in Android App Development",
          "Displaying the Sent Message-1",
          "Displaying the Sent Message-2",
          "Quiz"
        ],
        "Project 6 : Weather Application": [
          "Introduction to Android",
          "Review of the Website-1",
          "Review of the Website-2",
          "Application Design-1",
          "Application Design-2",
          "Adding Required Libraries",
          "Creating the Model Class",
          "Creating the Interfaces",
          "Finding the User’s Location",
          "Getting Data From Website-1",
          "Getting Data From Website-2",
          "quiz"
        ],
        "Project 7 : MP3 Player Application": [
          "Introduction to Android App",
          "Application Design-1",
          "Application Design-2",
          "Request Permission",
          "Creating the Adapter Class",
          "Getting All of the Audio File From Device",
          "Displaying All of the Audio Files on the Screen",
          "Playing an Audio File",
          "Playing the Next and Previous Audio File",
          "Control of the Seek Bars",
          "Displaying the Elapsed and Total Time of the Audio File",
          "Adding Animation to Name of the Audio File",
          "quiz"
        ],
        "Project 8 : The Ballon Burst Game": [
          "Introduction android",
          "The Application Design-1",
          "The Application Design-2",
          "The Count Down Timer Class",
          "Increasing the Scor",
          "The Runnable and Handler Class",
          "The Media Player Class",
          "Creating the Options Menu",
          "Saving the Highest Score Using the Shared Preferences",
          "Speeding Up the Game",
          "Playing Again and Quitting from the Game",
          "quiz"
        ],
        "Project 9 : The Android Game: Help the Innocent Bird": [
          "Introduction to ANDROID APP",
          "Creating the Characters",
          "The Application Design-1",
          "Adding an Animation to the Characters",
          "Adding an Audio to the Game",
          "The Application Design-2",
          "Activating the Screen Touch",
          "The Bird is Flying",
          "Other Characters are Flying-1",
          "Other Characters are Flying-2",
          "The Collision-1",
          "The Collision-2 in android app",
          "The Collision-3 in android app",
          "The Application Design-3",
          "Saving the Highest Score",
          "Creating the Alert Dialog",
          "Testing the Game in android projects",
          "quiz"
        ],
        "Project 10 : The Information Book": [
          "Introduction to android app",
          "Creating a New Project",
          "The Main Activity Design",
          "Creating the Model Class",
          "Creating the Objects from Model Class",
          "Creating the Adapter Class",
          "Creating the Activities",
          "Fragment-1",
          "Fragment-2",
          "Fragment-3",
          "Fragment-4",
          "The View Pager Adapter Class",
          "The Tab Layout Component",
          "Creating the Other Countries",
          "Creating the Other Fragments",
          "Creating the Fragments for the other Categories",
          "Homework",
          "Quiz"
        ]
      },
      "requirements": [
        "To have basic Android and Java Programming knowledge",
        "Having a working computer and internet",
        "Watching the course videos completely, to the end and in order",
        "Determination to learn and patience for Android Development",
        "Desire to learn Android Application Development",
        "No programming Android App Development knowledge required!",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today for build android app"
      ],
      "description": "Hello there,\nWelcome to \"Android App Development: Modern Android Development Skills\" course\nAndroid App Development | Develop different modern Android apps, learn android & mobile app development with projects\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\n\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your apps?\n\nI really like the approach of this course It first teaches you Java which is highly important for designing apps in Android Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones As the course title indicates, it is the complete guide\nThe Android platform is increasingly popular with developers, and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android 11 app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\nChances are, you’ve heard of Android many times You may even have an Android smartphone, tablet, watch, or TV But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google The Android OS is Linux kernel-based So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS More like a small part of an OS, but an important one The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things For example, for an application to access the phone’s File System (internal files),the user must give access first This means the app developer must let the user know, in advance, what the app they are installing wants to access For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera The app user has the power to either grant or deny permission App permissions in Android ensure the user’s protection from malware and software viruses\nThis course is built to help beginners to start making applications in android studio\n\nOnline course platforms have android app development courses, but we still think that most of them are missing the hands-on application part This course is designed to fill this gap In this course, we are not lecturing theories but we are just focusing on real-world android app development with hands-on lectures\n\nPlease do remember in this course you will learn how to build 10 different Android Applications from scratch\n\nYou will be able to improve yourself very quickly by closing the application gap of what you have learned with real-life examples in this course\nThanks to this training, you will reinforce your android knowledge by applying and you will take your place in the android world There are ten Android applications in our training, and the difficulty level is from easy to difficult Also, since the applications are prepared in a certain index, you will not experience any disconnection between the videos Thanks to this training, you will learn how to develop modern Android applications in the simplest way and improve your self-confidence\nIn this course;\nYou will reinforce your existing android information by applying\nYou will learn to develop games using Android Studio\nYou will learn to develop applications by getting real-time data from the Internet\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room)\nYou will learn how to make a messaging app using Firebase\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\nIs Android Development a good career?\nWith over 2 5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\n\nI really like the approach of this course about the Android app It first teaches you Java which is highly important for designing apps in Android Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones As the course title indicates, it is the complete guide to learn android application development\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increases its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nWe have prepared this course with many different exercises to help them understand better\nIn this course, you need basic android and java programming knowledge\nThis course will take you from a beginner to a more experienced level\nWe will take you from beginner to advance level You will learn step-by-step with hands-on demonstrations\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow the latest trends\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now \"Android App Development: Modern Android Development Skills\" course\nAndroid App Development | Develop different modern Android apps, learn android & mobile app development with projects\nWe offer full support, answering any questions",
      "target_audience": [
        "If you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications",
        "Who wants to improve their existing android and android development knowledge.",
        "Those who want to develop applications using the Java programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who wants to learn Android",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "How To Make An Android App Without Knowing Development",
      "url": "https://www.udemy.com/course/how-to-make-an-android-app-without-knowing-development/",
      "bio": "Learn A Simple And Efficient Method For Android Apps Development Without Knowing How To Code.",
      "objectives": [
        "They Will Be Able To Create An Android App From Scratch, Publish It And Even Know How To Monetize It If They Want To!"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowldedge Of How Android Apps Work. You Do Not Need To Know How To Code For This."
      ],
      "description": "Learn How To Get Into Android App Development Without Knowing To Code - How To Make Your First Andorid App!\nThis course will teach you how to build your android app from start to finish. This is perfect for beginners and it will cover absolutely everything you need to publish your own app in Google Play Store.\nMany courses will require you to buy them and in order to make your app you will need to spend money on a lot of toher things (stock photos, monthly subscriptions etc.). But in this course, you will not spend anything except the mandatory $25 Google Play Store fee, which is a one time payment that all android developers must pay. If you don't want to publish in Google Play store and you just want to make an app, then you will not spend anything else.\nThis course will also teach you how to make money from your app if that is what you want.\nThe main benefit is that you will be able to create an Android App without knowing how to code. You can use this for your own business or clients.\nWhat This course includes:\n- Where to get material / content for your app (where to get Free images, content and icons for your app. This alone will save you a lot of money)\n- How to make an android app\n- How to create a database for your app\n- How to create graphics for your app (You will need graphics for your Google Play store listing, I will teach you how to make them for free. You dont need photoshop or anything)\n- How to make money from your app\n- How to publish in Google Play Store (step by step)\nand much more...\nLifetime Access to all other updates!\nSurprise Bonuses!\nNew Tools introduced in the course!\nFULL Support through the discussion area of the course!\n30 Day Money Back GUARANTEE if you feel this course didn't help you at all and you can't apply anything...that is how dedicated we are to your success!\nAll of this in less than 3 hours (out of your busy schedule) of simple to follow lectures that YOU CAN APPLY from TODAY!\nIt's Time to take action! After taking this course, you can be a freelancer and create apps for clients or make your own apps and make money from them.\nTo Your Massive Success,\nSorin Constantin & Emily S. Lima",
      "target_audience": [
        "Anyone Interested In Learning How To Create Android Apps For Themselves Or For Clients."
      ]
    },
    {
      "title": "Build Full Stack iOS Ecommerce App With Plaid and Stripe",
      "url": "https://www.udemy.com/course/build-full-stack-ios-ecommerce-app-with-plaid-and-stripe/",
      "bio": "Build an iOS client app and deploy a React admin web app. Learn how to use the Firebase suite, Stripe, and Plaid.",
      "objectives": [
        "Build full stack iOS Ecommerce App",
        "Learn how to process credit card payments with Stripe",
        "Learn how to process bank account payments using Plaid and Stripe",
        "Learn how to set up deployment environments (for example dev, staging, production environments)",
        "Learn how to utilize cloud functions to communicate with other servers for security reasons.",
        "Utilize most of the extensive Firebase suite."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Building Out The UI": [
          "Project Setup",
          "Design Specs and Login View",
          "Register User View",
          "Home View Part 1",
          "HomeVC Part 2 - Vacation Model",
          "HomeVC Part 3 - TableView",
          "Vacation Details View Part 1",
          "Vacation Details Pt 2: ScrollView",
          "Vacation Details Pt 3: Filling In The Details",
          "Vacation Details Pt 4: Image Gallery",
          "Checkout View Part 1",
          "Checkout View Part 2",
          "Checkout View Part 3",
          "Refactor and Cleanup"
        ],
        "Firebase Authentication": [
          "I Skipped The UI Section",
          "What Is Firebase",
          "Pre-Text: Creating Firebase Project",
          "Creating Firebase Project",
          "Firebase Authentication Pt 1",
          "Firebase Authentication Pt 2"
        ],
        "Getting Started With Cloud Functions": [
          "What are Cloud Functions",
          "Creating Cloud Functions Project",
          "What Can You Do With Cloud Functions",
          "Different Types Of Cloud Functions",
          "More on HTTP Request Function",
          "Pre-Text: Firestore Cloud Trigger",
          "Firestore Cloud Trigger",
          "A Cautionary Tale: How I Majorly Screwed Up"
        ],
        "Getting Started With Stripe": [
          "What Is Stripe?",
          "Sign Up For Stripe",
          "Client - Backend - Stripe Flow Overview",
          "Pre-Text: Create Stripe Customer",
          "Create Stripe Customer",
          "Firestore Database Introduction",
          "Reading and Writing Firestore Data",
          "Pre-Text: User Service",
          "User Service",
          "Pre-Text: Ephemeral Keys",
          "Ephemeral Keys",
          "Payment Options ViewController",
          "Fees Calculator",
          "Payment Intents API Overview",
          "Pre-Text: Payment Intent Cloud Function",
          "Payment Intent Cloud Function",
          "Finish CheckoutVC UI",
          "Pre-Text: Finalize Payment Intent",
          "Complete Payment Client Side",
          "Stripe Wrap Up"
        ],
        "Admin React Web App": [
          "I Just Want To Deploy The Web App",
          "Pre-Text: Admin App Section Intro",
          "Admin App Section Intro",
          "What's a React Web App?",
          "Firebase Hosting",
          "Source Code Tour",
          "Fetching Firestore Collection Data"
        ],
        "Production and Dev Environments": [
          "What Are Development (Deployment) Environments",
          "Pre-Text: Creating Dev and Production Environments",
          "Creating Dev and Production Environments in Xcode",
          "Environments in Cloud Functions",
          "Environments in Web App"
        ],
        "Getting Started With Plaid": [
          "Pre-Text What Is Plaid - CodeSnippets, Resources",
          "What is Plaid?",
          "Sign Up For Plaid",
          "Create Link Token Function",
          "Error Correction/Code Snippets: Fetch Link Token",
          "Fetch Link Token",
          "ManageBankAccountsVC",
          "Launching Plaid Flow",
          "Code Snippets: Exchange Public Token",
          "Exchange Public Token",
          "Fetch Bank Accounts Cloud Function",
          "Code Snippets: Delete Bank Account",
          "Delete Bank Account",
          "Checkout With Bank Account",
          "Code Snippets: Plaid Redirect URI",
          "Plaid Redirect URI (European Countries)",
          "Deployment Environment Setup For Plaid"
        ],
        "Final Section": [
          "Code Snippets: Firestore Security Rules",
          "Firestore Security Rules",
          "Firebase Email Extension"
        ],
        "Project Source Code": [
          "What is this section?",
          "Setting Up Xcode Project",
          "Setting Up Stripe and Cloud Functions",
          "Setting Up Web Admin App",
          "Setting up Plaid"
        ]
      },
      "requirements": [
        "This is an intermediate to advanced course. You need an understanding of Swift and Xcode."
      ],
      "description": "Hi there! I am super excited to launch this course. We are going to be learning a lot, covering a broad range of technologies, services, and skills. My goal, is that by the time you are done with this course, you will have the skills to build a much wider range of applications.\nIn this course we will build Bon Voyage. An iOS app where users can book extravagant vacations. We integrate Stripe and Plaid to handle payment methods for both credit card and connected bank accounts.\nStripe and Plaid both require server side functions, so you will learn all about Firebase Cloud functions. Cloud Functions alone greatly expand the things you can accomplish as a developer.\nWe're not stopping there though...\n... you will also learn how to deploy a React admin app!\nIf you are building an eCommerce app either for yourself or a client, you will most likely need some sort of admin app.\nIn previous courses that required an admin app, I had created an additional iOS or Android admin app. However, the experience for the user, is not great. Especially when adding products that require a lot of text and images.\nA web app is much better suited for these types of tasks. So in this course you will learn some of the basics of React development and how to deploy a React app to Firebase Hosting.\n** Note that this is not meant to be a comprehensive course on React web development. While we will go over the code, and many concepts, how to deploy, and more, this is not meant to be a course on how to build a React app from scratch.\n\n\nWe will also learn about development and production environments for both web and iOS. This is a crucial concept most courses do not cover.\n\n\nDeep dive on Stripe and Plaid.\nI have been working professionally with Stripe and Plaid for two years now and it is a fantastic service. During this time I have learned a lot (and made some mistakes) and I am excited to pass all that knowledge on to you.\nI have real world experience working with Stripe and Plaid. My current clients app has processed over $1,000,000 dollars and more than 3,000 transactions in the past 12 months.\n\n\nMASTER THE FIREBASE SUITE\nIf you know me at all, you know I love Firebase. They are my go-to for just about everything you need to build iOS, Android, and Web Apps. Below, are the Firebase services we will be learning about.\nFirebase Authentication\nLearn how to use Firebase Authentication to create and authenticate users on iOS, Android and Web.\n\n\nFirestore Database\nLearn how to use Cloud Firestore, a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud Platform.\n\n\nFirebase Storage\nWe will use Firebase Cloud Storage, built for app developers who need to store and serve user-generated content, such as photos or videos. .\n\n\nCloud Functions\nCloud Functions are my new favorite thing. And when combined with the Firebase suite it becomes extremely powerful. In this course you will learn how you can harness that power to take your apps to the next level.\n\n\nFirebase Hosting\nFirebase Hosting makes it extremely easy to host a website for free. In this course we are going to host our Bon Voyage admin app and even learn how to hook it up to a custom domain.\n\n\nFirebase Extenstions\nFirebase Extensions are nifty integrations you can set up that are basically bundled up code that can perform actions on your behalf, such as automatically sending email, or resizing images.\n\n\nWho Should Take This Course\nYou should take this course if you are wanting to learn more intermediate to advanced topics, and especially if you want to learn how to implement payment methods in your app.\nThis is not a beginner course, and intermediate knowledge of Swift and Xcode is assumed. We will also be working with JavaScript, though not doing anything very complex. If you are familiar with Swift, you will be just fine.\n\n\nSummary of things we cover:\nCreating the App UI. But don't worry, if you dont want to watch me create more rounded rectangles, and want to jump right into the good stuff, there will be a starting point where the UI is completed.\nFirebase Suite: Firestore, Hosting, Cloud Functions, Extensions, Authentication\nHow to set up production and development environments in iOS and Web.\nIntegrate Stripe. Utilize cloud functions to communicate between client app and Stripe servers.\nIntegrate Plaid. Utilize cloud functions to communicate between client app and Plaid servers.\nReactJS basics. How to deploy to Firebase Hosting.\nSwift Package Management\nCocoa Pods\nSending emails to customers using SendGrid and Firestore",
      "target_audience": [
        "Intermediate iOS developers who are looking to challenge themselves, and expand their skill set."
      ]
    },
    {
      "title": "Build News Feed Android App and Learn to write Wordpress API",
      "url": "https://www.udemy.com/course/build-news-feed-android-app-and-learn-to-write-wordpress-api/",
      "bio": "Make APIs for wordpress News site & use them by building news feed Android app |Beginner friendly project based course",
      "objectives": [
        "In-depth Knowledge on Android App development",
        "Android Q",
        "Wordpress API",
        "Youtube API",
        "Admob",
        "Learn to Write Robust Android Codes",
        "Remote Database Connection and Networking in Android",
        "Android third Party Softwares and libraries"
      ],
      "course_content": {
        "Software Installation": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Installing Android Studio on Windows",
          "Installing Android Studio on Mac"
        ],
        "Designing Layout of our App on Android Studio": [
          "Downloading Resource Folder",
          "Building Homepage UI",
          "Addling Slider Locally",
          "Adding Categories Image Icons locally",
          "Designing News layout"
        ],
        "Installing Backend Softwares": [
          "Selecting Text Editor",
          "Installing Xampp on Windows",
          "Installing Xampp on Mac",
          "Installing Wordpress on Windows",
          "Adding Classic Editor in Wordpress for windows users",
          "Installing Wordpress on Mac"
        ],
        "Building Our Backend and its API": [
          "Adding Post and their Fields",
          "Coding our First API",
          "Adding Sliders/Banners Post Type",
          "Writing API to fetch Sliders/Banners",
          "Creating Advertisement Post Type and Writing its API",
          "Building API to fetch News Based on CATEGORY ID",
          "Building API to fetch News Based on POST ID"
        ],
        "Implementing APIs in our News App": [
          "Adding Retrofit in our Project",
          "Fetching Data in our Android Studio LogCat",
          "Loading Slider Dynamically",
          "Building News Timeline part 1",
          "Building News Timeline part 2",
          "Removing Space and Fixing Image",
          "Building API for Category taxonomy",
          "Fetching Category Images API Data into our APP",
          "Building Infinite News Feed System",
          "Implementing Swipe to Refresh Feature",
          "Designing Layout for News Details App Screen",
          "Loading News Details from API",
          "Building API which returns Similar News Based on Post ID",
          "Implementing Similar News API in our APP"
        ],
        "Implementing Youtube APIs": [
          "Linking Our Project to Cloud Services",
          "Understanding How Youtube API works and Its Data Structure",
          "Tracking Youtube Channel and their names on our backend",
          "Designing youtube Activity with Viewpager",
          "Implementing Youtube API on our APP",
          "Infinite loading of Youtube Videos",
          "Working on Youtube Video Player",
          "Loading more Videos from Youtube Channel based on Channel ID",
          "Implementing News Category Feature"
        ],
        "Admob and In App Advertisement Feature": [
          "Loading out test Ads",
          "Loading Ads in News Details and News Category Activity",
          "Creating Admob Ad Unit",
          "Inserting Ads between News part 1",
          "Inserting Ads between News part 2",
          "Inserting Ads Between News in Category Activity"
        ],
        "Fixings Bugs and Adding Missing Features": [
          "Fixing Multi Dex Issue",
          "Adding Post Count Feature"
        ]
      },
      "requirements": [
        "Basic knowledge about Java and Php",
        "Any Computer ( Windows/ Mac / Linux ) with Internet",
        "Willingness to learn"
      ],
      "description": "Want to build your own News Feed Android App that actually earns ?\nThen, this course is specially designed for you. I will teach you to build your own News Feed Android App that you can monetize using google admob or directly from your clients.\n\n\nWant to get highly paid job as an android developer in 2020 ?\nAfter joining this course, your chance of getting respected position as an android developer will be high because you will get to know about the actual development concepts of a High Level Android App Development here.",
      "target_audience": [
        "People looking to build their own News Feed Android App",
        "People Who Wants to be Android Developer",
        "People looking to add their own android project in their resume",
        "Beginner and Intermediate Android App developers",
        "Wordpress Developer who wants to build App"
      ]
    },
    {
      "title": "Develop a Custom Keyboard in iOS 9 & Swift 2 - 4 Keyboards!",
      "url": "https://www.udemy.com/course/keyboards/",
      "bio": "Learn to make any iOS 9 keyboard in Swift 2. Build 4 real world keyboards.",
      "objectives": [
        "Make an iOS 9 keyboard",
        "Learn the basics of Swift"
      ],
      "course_content": {
        "Preparation": [
          "Welcome! --- About me:)",
          "WATCH THIS -- Install Xcode 7 and Swift 2.0",
          "Link to download Xcode"
        ],
        "Developing Your First Keyboard": [
          "What we will be developing",
          "Setting up your app",
          "Editing our code",
          "Adding our first keyboard button",
          "Adding the back button",
          "Adding the hide button",
          "Download to the final project"
        ],
        "Creating a Calculator Keyboard": [
          "What we will be developing",
          "Setting up the storyboard",
          "Setting up the code",
          "Connecting the view with the code",
          "Number pad action",
          "Delete and next keyboard button",
          "Addition, subtraction, multiplication, division buttons",
          "Calculating your answer",
          "Hide and submit button, typing the calculated result",
          "Download to the final project"
        ],
        "Replicate the iOS 9 Stock Keyboard": [
          "What we will be developing",
          "Setting up the storyboard",
          "Character button press",
          "Delete, hide, and next keyboard action",
          "Great job!",
          "Download to the final project"
        ],
        "Quotes keyboard": [
          "What we will be developing",
          "Setting up the storyboard",
          "Button press actions",
          "Generating the random quote",
          "**TEXT FILE, copy and paste Swift quotes array",
          "Congratulations!!!!!",
          "Download to the final project"
        ]
      },
      "requirements": [
        "You will need a Mac that at least runs the operating system Mavericks OS X 10"
      ],
      "description": "LEARN TO MAKE REAL LIFE IOS 9 CUSTOM KEYBOARDS\nDEVELOP ANY KEYBOARD YOU IMAGINE\nEver wanted to learn how to make a custom iOS 9 keyboard? This course will teach you everything there is to know about making any custom iOS keyboard. Whether you want to build a gif keyboard or make a custom keyboard that you can use personally, this course will teach you everything you need to know.\nLearn how to develop marketable keyboards you can sell on the iTunes App Store, and make constant revenue!\nKeyboard's you will develop:\nBasic one button keyboard - learn the basics of developing any keyboard\nCalculator keyboard\nClone the stock iOS keyboard\nQuotes keyboard\nWe will cover many important topics that correlate with the development of iOS keyboards. First we will setup Xcode 7 and create a custom keyboard that has a simple action. Then, later on in the course we will begin developing more complex keyboards.\nIf you know the basics of Swift iOS Development that's awesome! If not, don't worry, with the purchase of this course, you get access to all videos and are able to watch and learn at your own pace.\nSo what are you waiting for! Join my course today and learn to build your first custom iOS keyboard!!!\nCertificate of Completion - All Students who complete this course will receive a Free digital certificate of completion from Udemy.\nMoney Back Guaranteed - If in any way you are not satisfied with my course, feel free to request a refund!",
      "target_audience": [
        "A great course for people wanting to develop for Apple's latest products",
        "Anyone wanting to learn how to develop a keyboard"
      ]
    },
    {
      "title": "Build your first app with React Native",
      "url": "https://www.udemy.com/course/firstappreactnativeandexpo/",
      "bio": "Get started right away with React Native - Start building native apps for iOS & Android today!",
      "objectives": [
        "The ability to begin to create real world apps for iOS & Android with React Native using Expo",
        "Create your first app in React Native",
        "Get a strong understanding of Expo",
        "Learn how to create a new app from the command line"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome to the course",
          "Getting started",
          "Who uses React Native & Why Expo",
          "Software to install"
        ],
        "Intro to React Native": [
          "Intro to React Native",
          "Overview of React Native components",
          "Find more information on the React Native docs",
          "Looking at the Expo docs",
          "What are \"props\" in React Native?",
          "What is \"state\" in React Native?",
          "Install Hyper for terminal commands"
        ],
        "React Native Basics": [
          "Create app in React Native using the command line in Hyper",
          "Using the FlatList component",
          "Using the image component",
          "Using pull to refresh with a flatlist",
          "How to use React Native Navigation",
          "Styling options in react native",
          "Using Flex Box"
        ],
        "Building a Real Weather App In React Native": [
          "Building a weather app - creating the app from the command line",
          "Planning the flow of the app & adding folders",
          "Register with weather API",
          "Install dependencies and begin to create home screen",
          "Fetching data from an API",
          "Cities List",
          "Set array of cities and create random function",
          "Using the console to log responses and start building FlatList",
          "Android Notes: Using Font Family",
          "Add styling to FlatList rows and add conditional font colours",
          "Adding Expo gradient component and touch event",
          "Add conditional emoji for weather types"
        ],
        "Improving the CityWeather App": [
          "Intro: Taking the CityWeather app further.",
          "Use tab navigation",
          "Add search screen",
          "Final changes to improve the CityWeather app"
        ],
        "Build & Publish to App Stores": [
          "Create and publishing a build to App Stores"
        ],
        "Bonus & Advanced": [
          "How to use custom fonts",
          "Android Notes: Alert box display",
          "Add improved styling for alert box.",
          "FlatList in reverse (Inverted prop)",
          "How to fix errors",
          "Using dimensions",
          "Extra: React Native Navigation (Stack Navigator)",
          "Thank you & Links"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript, HMTL and CSS would help."
      ],
      "description": "Start building apps today!\n\n\nReact Native is used to power some of the most popular apps in the world such as Facebook, Instagram, Uber and Pinterest. All that is needed to create an app in both iOS and Android is React Native using Javascript. This is the easiest and fastest way to create an app that can thrive on both app stores! This course will take you step by step into the React Native ecosystem, starting with the core elements and even all the way to creating your very own app ready for distribution on iOS and Android.\nYou will also be taught how to use Expo - a framework that enables developers to develop and test quickly, saving you time.\nThis course will run through both React Native and Expo and show why together they are the best way to create apps for both iOS and Android.\n\n\nThe course will cover:\nWhat is React Native?\nWhy use the Expo Framework?\nComponents, State and Props in React Native\nCreating our first basic app\nMaking a real world example app (Weather App)\nFollowed by bonus videos & downloads\n\n\nThe ideal student is someone who has some background knowledge of Javascript and is interested in being able to create apps for iOS and Android.",
      "target_audience": [
        "Anyone interested in learning how to create apps for iOS and Android"
      ]
    },
    {
      "title": "Create Charts In Xamarin Forms",
      "url": "https://www.udemy.com/course/create-charts-in-xamarin-forms/",
      "bio": "Create Real World Charts in Xamarin Forms",
      "objectives": [
        "Create All Kinda charts and graphs",
        "Create Pi Charts",
        "Create Line Charts",
        "Create Bar Charts",
        "Create Point Charts",
        "Create Radial Gauge Chart",
        "Create Area Chart",
        "Create Donut Chart",
        "Create Comparison Chart",
        "Create Stacked Chart"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "OverView": [
          "OverView of Charts and Graphs",
          "Create New Project",
          "Integrate Nugget Package"
        ],
        "Create Microcharts In Xamarin Forms": [
          "Bar Chart",
          "Line Chart",
          "Point Chart",
          "Donut Chart",
          "Radial Gauge Chart",
          "Run Time Chart and Graph"
        ],
        "Create Some Advance Charts": [
          "Pi Chart",
          "Area Chart",
          "Comparison Bar Chart",
          "Stacked bar Chart",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Xamarin or Mobile Apps."
      ],
      "description": "The main focus of this course is only on the Xamarin Forms UI. So if you're a good C# programmer or if you have a basic knowledge of XAML and you want to create some cool charts and graphs with xamarin forms then this is the right course for you.\n\nIn this course you will learn the all kinda charts and graphs inside the Xamarin Forms with real time implementation and XAML code. You'll also learn the integrate the charts and graphs inside the xamarin forms without any paid library. And in this course you can almost create all kinda complex graphs and charts inside the xamarin forms applications.\nBuild a strong foundation in Xamarin Forms Charts and Graphs with this tutorial .\nCreate Bar Charts\nCreate Point Charts\nCreate PI Charts\nCreate Donut Charts\nCreate Line Chart\nCreate Radial Gauge Chart\nCreate Area Chart\nCreate Stacked Bar Chart\nCreate Comparison Chart\n\n\nA valuable Skill at Your Fingertips  Learning the Xamarin Forms Charts put a powerful and attractive look in your mobile apps. Xamarin is open source, easy to learn,  has excellent Microsoft and Xamarin support, and is the best  Cross Platform Tool for Desktop and Mobile Applications.\nJobs in Mobile development are plentiful, and being able to learn the xamarin forms charts with a professional look will give you a strong background to more easily pick up other challenging UI's etc.\nContent and Overview  Suitable for C# programmers, Xamarin  Developers , XAML Developers and software engineers, through this course , you’ll learn all of the chart controls and establish a strong understanding of the concept behind charts and graphs.\nWhat am I going to get from this course?\nLearn Xamarin Forms Charts from a Microsoft (MVP) from your own desk.\nSuitable for beginner & intermediate  programmers, xamarin developers, C# developers and ideal for users who learn faster when shown.\nVisual training method,with Hands on Lab Practice and coding.\nBreaks even the most complex scenarios down into simplistic steps.",
      "target_audience": [
        "Everyone who is familiar with the xamarin and want to start career in Xamarin Forms and want to create the challenging graphs and charts with a professional way."
      ]
    },
    {
      "title": "Building Cross Platform Apps with Xamarin and C#",
      "url": "https://www.udemy.com/course/building-cross-platform-apps-with-xamarin-and-c/",
      "bio": "Go hands-on with this exciting technology for developing cross-platform, native mobile apps using C#",
      "objectives": [
        "Utilize Xamarin development tools to create a native interface experience for Android and iOS devices",
        "Create apps that interact with local and remote data sources",
        "Access individual device features such as photo, SMS, social, and phone capabilities with your app"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction",
          "Cross Platform Options",
          "Intro To Xamarin Mono",
          "Installing Required Tools",
          "Hello World",
          "Android Emulators",
          "How To Access Your Working Files"
        ],
        "Layouts": [
          "Stack Layout",
          "Absolute Layout",
          "Relative Layout",
          "Grid Layout",
          "Content View",
          "Scroll View",
          "Frame"
        ],
        "User Interface Controls": [
          "Label And Entry",
          "Button",
          "Image",
          "Editor",
          "Date And Time Pickers",
          "Slider",
          "Stepper",
          "Box View",
          "Activity Indicator And Progress Bar",
          "Search Bar",
          "Switch",
          "Picker Control",
          "Map",
          "Map Options",
          "List View",
          "List View Options",
          "Web View"
        ],
        "Page Types": [
          "Navigation Page",
          "Master Detail Page",
          "Tabbed Page",
          "Carousel Page"
        ],
        "Tables And Grids": [
          "Table View Control",
          "View Cell",
          "Image Cell",
          "Switch Cell",
          "Entry Cell"
        ],
        "Local Data Access": [
          "Database Access",
          "Database Write And Delete",
          "Database Read"
        ],
        "Remote Data": [
          "JSON Web Service",
          "Retrieve JSON Data",
          "Update JSON Data"
        ],
        "Portable Class Libraries And Device Features": [
          "Intro To Portable Class Libraries",
          "Photo Picker",
          "Camera",
          "Phone",
          "SMS"
        ],
        "Conclusion": [
          "Conclusion And Resources"
        ]
      },
      "requirements": [
        "Aspiring developers with a working knowledge of C#; no prior knowledge of Xamarin is needed.",
        "an installation of Xamarin Mono (Indie version or above)"
      ],
      "description": "This course shows you how to get started creating native, cross platform apps using Xamarin Mono. This course is designed for users that are familiar with C#, although no experience with Xamarin Mono is required. You will start by learning about the cross platform development options and the basics of Xamarin Mono, including the development environment and Xamarin Studio. From there, expert Keith Welch will teach you about the various layouts and controls, including stack layout, content and scroll view, and label and entry. This video tutorial also covers basic user interface elements, as well as more advanced controls, such as table views, list views, maps, and web views. You will also learn about page types, tabs and grids, and local and remote data. Finally, you will learn about device features, including the camera, photo gallery, messaging, and phone. Once you have completed this computer based training course, you will be fully capable of using the Xamarin framework to create code that will work in both iOS and Android.",
      "target_audience": [
        "Those who want to apply their existing C# knowledge to create multi-platform mobile apps."
      ]
    },
    {
      "title": "React Native for Absolute Beginners",
      "url": "https://www.udemy.com/course/react-native-for-absolute-beginners/",
      "bio": "Learn fundamentals of building user interfaces with React Native.",
      "objectives": [
        "Understand How React Native Works",
        "Work with Layouts in a Better Way",
        "Create First Basic React Native App"
      ],
      "course_content": {
        "Basics of React Native": [
          "Introduction to React Native",
          "Initializing and Running a New Project",
          "Editing and Running the Code",
          "Comparing Android and iOS .js Files",
          "Working with Props - Part 1",
          "States and Text Input"
        ],
        "Styling and Formatting": [
          "CSS and Flexbox Layout",
          "Styling1",
          "Styling2",
          "ListView1"
        ]
      },
      "requirements": [
        "Student Will Have to Install Either Xcode or Android Studio",
        "Android Development Can be Done on Any Other OS but Mac is Rquired for Xcode"
      ],
      "description": "React Native is a powerful way to build mobile apps using javascript. Based on the React library (an open source javascript user interface library for web applications, developed by Facebook), React Native allows developers to quickly prototype working solutions for Android and iOS devices.\nThis course teaches the fundamentals of building user interfaces with React Native. The focus of the course is on the View portion of a full Model - View - Controller architecture; the Model and Controller portions are usually provided by such technologies as php / MySQL. In the course, we will learn to develop working user interface solutions. Topics include:\n\n\n- How to install React Native\n- Initializing and running a new project\n- Editing program code\n- Properties\n- States\n- Handling text input\n- Using CSS with React Native\n- Using Flexbox layout\n- List Views\n- Navigators\n\n\nI hope you will join me for this exciting first look at React Native.",
      "target_audience": [
        "Any Fresher Who Wish to Learn React Native",
        "Expert Who Wishes to Brush up their React Native Knowledge"
      ]
    },
    {
      "title": "Troubleshooting Android Performance",
      "url": "https://www.udemy.com/course/troubleshooting-android-performance/",
      "bio": "Smart and simple solutions to overcome common performance issues with Android",
      "objectives": [
        "Detect memory leaks and fix them before they ruin your users’ experience.",
        "Load images efficiently without using too much memory.",
        "Work with the cloud in a way that will be seamless to your users.",
        "How to work with the UI thread and how to run non-UI related tasks in the background for more pleasant user experience.",
        "Debug your UI and manage the way you want it to look.",
        "Ways to optimize your app for good battery usage."
      ],
      "course_content": {
        "Understanding and Analyzing Memory Usage": [
          "The Course Overview",
          "Optimizing Your Loops",
          "StackOverflowException",
          "Loading Images",
          "Analyzing Memory Using the Memory Profiler",
          "Tracking Allocations"
        ],
        "Avoiding Memory Leaks": [
          "What Are Memory Leaks?",
          "Find Memory Leaks with LeakCanary",
          "Common Memory Leak: Static References",
          "Common Memory Leak: Anonymous Inner-Classes",
          "Common Memory Leak: Non-Static Inner Classes"
        ],
        "Managing Cloud Connectivity Issues": [
          "Making Requests Asynchronously on a Background Thread",
          "Analyzing Results with the Network Profiler",
          "Using Your App While a Request Is in Progress"
        ],
        "UI Analysis and Optimization": [
          "UI Thread As a Whole",
          "View Hierarchies",
          "Debug Your Layout with the Layout Inspector",
          "Using Developer Options to Get More Information on Your UI"
        ],
        "Battery Optimizations": [
          "Doze Mode and App Stand-By",
          "Lazy First",
          "Android: An Ecosystem"
        ]
      },
      "requirements": [
        "Some basic knowledge of Android development and Android Studio is assumed."
      ],
      "description": "Have you started developing an Android application only to find the app is slower than you expected? Or that certain tasks are not working as you expected? Dealing with performance issues on Android is a common experience many developers face. Performance is a key requirement in any good app that user's don't necessarily look for, but experience every time they open an app.\nIf the earlier questions apply to you, look no further! This course will help you overcome common performance issues on Android. In this course, we go over the important and common areas that can affect performance such as memory, network, UI, and battery. We delve into issues such as memory management, where we will look at memory leaks and tracking allocations. We also look at optimizing your user experience when working with data on the cloud. We also go into some common pitfalls when working with your UI and how to debug it. Finally, we look at ways to optimize and debug your app's battery usage to ensure that it doesn't annoy users when they've installed your app.\nWhen you're completed with this course, you will be developing applications more efficiently, without having to worry about your code affecting the performance that your users experience.\nAbout the Author\nYusuf Saber is an Android developer with over 5 years' professional experience. Yusuf earned his Master's degree in Computer Engineering from Ryerson University in 2011 and started his career as a .NET developer before quickly turning to Android. He has worked on a large range of Android apps, from social to multimedia to B2B—and more! You can see some of his public apps on Google Play too",
      "target_audience": [
        "This course is specially designed for beginner Android developers who want to get rid of common errors and pitfalls in order to improve Android performance."
      ]
    },
    {
      "title": "GetX flutter 2.8 latest 2021",
      "url": "https://www.udemy.com/course/getx-flutter-25-free-latest-2021-free/",
      "bio": "Flutter GetX pacakge to make app modern and easy",
      "objectives": [
        "You will learn Getx package basic",
        "getX state management",
        "getX state manager controller",
        "routing",
        "named route getx"
      ],
      "course_content": {
        "COURSE START": [
          "Adding getX package and learn snack bar press button",
          "Show dialog on press button and snack bar from bottom to top",
          "Adding dark theme and light theme screen",
          "Route the pages by getx",
          "Named Route by getx",
          "State management by getx",
          "Reactive custom class state management by getx",
          "State manager controller by getx",
          "Controller unique Id in getX flutter"
        ]
      },
      "requirements": [
        "English language",
        "have a computer or laptop",
        "basic knowledge of flutter"
      ],
      "description": "Hey guys in this is getX flutter package course in this course you will learn flutter getx package GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.\nGetX has 3 basic principles. This means that these are the priority for all resources in the library: Generally, the developer should be concerned with removing controllers from memory. With GetX this is not necessary because resources are removed from memory when they are not used by default. If you want to keep it in memory, you must explicitly declare \"permanent: true\" in your dependency. That way, in addition to saving time, you are less at risk of having unnecessary dependencies on memory. Dependency loading is also lazy by default. GetX has a huge ecosystem, a large community, a large number of collaborators, and will be maintained as long as the Flutter exists. GetX too is capable of running with the same code on Android, iOS, Web, Mac, Linux, Windows, and on your server. Get was designed to work with teams, but it makes the job of an individual developer simple.\nImprove your deadlines, deliver everything on time without losing performance. Get is not for everyone, but if you identified with that phrase, Get is for you!",
      "target_audience": [
        "Who want to learn getx package in flutter"
      ]
    },
    {
      "title": "Android MARSHMALLOW - Develop Hands-on Android Apps",
      "url": "https://www.udemy.com/course/develop-android-app-with-android-marshmallow/",
      "bio": "Learn Android App Development using Android version 6 which is Android Marshmallow.",
      "objectives": [
        "Through this Android Marshmallow Tutorial, you will gain practical development experience by building an application and self-manage their projects.",
        "You will come across working knowledge of software interfaces in android devices.",
        "Developed teamwork skills to import multiplayer gaming as an excellent tool.",
        "Can build and publish your apps in google play store."
      ],
      "course_content": {
        "Android Marshmallow Mobile Apps": [
          "Introduction to Android Marshmallow",
          "Life Cycle of Android",
          "Android Architecture",
          "Android Application Environment",
          "Android Application Environment Continues",
          "Activity",
          "Intent Android Studio",
          "Intent",
          "Intent Example",
          "User Interface",
          "User Interface Continues",
          "Set On Click Listener",
          "How to Create Radio Button",
          "Radio Group",
          "Switch and Toggle Button",
          "Creating Process for Bar",
          "Advance UI",
          "Advance UI Time Picker",
          "Advance UI Date Picker",
          "Advance UI Date Picker Continues",
          "Advance UI Grid View",
          "More on Grid View",
          "Simple Thread",
          "Service in Android",
          "Broadcast Receiver",
          "Phone Call App",
          "SMS App",
          "EMAIL Application",
          "More on EMAIL Application",
          "Introduction to Notification",
          "Output of The Notification",
          "Output of The Notification Continues",
          "Notification with Intent",
          "Content Provider",
          "More on Content Provider",
          "What Are Shared Preferences",
          "Shared Preferences Example",
          "Shared Preferences Example Continues",
          "Strings File",
          "Shared Preferences Example Output",
          "Connect Data with Database",
          "Extend Content Provider",
          "Android Database",
          "Set Up Recycle",
          "Marshmallow User Permission",
          "Marshmallow User Permission Continues",
          "Fingerprint Application",
          "More on Fingerprint Application",
          "Google Maps",
          "Google Maps Continues",
          "Material Design",
          "More on Material Design",
          "Output of Material Design",
          "Floating Widgets"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge is needed. No advanced programming Experience is required. Google developer Account is needed to create Android Apps. It is necessary to have good knowledge of java essentials to go with this android application. Other Pre-requisites are working with IDE’s like Android Studio version 2.2.3, NetBeans, eclipse and get familiar with Android SDK which is free to download tools. Even though you are not at programming, still you can be friendly with android programming. For Android Marshmallow Tutorial, it is necessary or the learners to know some basics in CSS, SQL to organize database in android apps and Basics of Object-oriented programming can be focussed. To develop an app, you will be mainly using java object-oriented programming and XML. XML is a markup language that helps to create User Interface components for android. Hardware requirements for android are RAM. And the requirement of Node JS, NPM are essential."
      ],
      "description": "Android M, 6.0 are innovative and designed to process fast and quick response on a broader range of devices Android app can be installed on any android device which can be started easily and independently used. Marshmallow focuses on improving the user experience of the previous android version lollipop. Google provides Specialized IDE called android studio to execute and perform development tasks. marshmallow introduces power management schemes known as App Standby which helps in power saving if a device is inactive (automatic power-saving mode). In this state network connectivity is restricted. The new USB Type-C Charging cable is enabled as a new feature. An Android application composed of activities, intents, services, content providers as a major element to create a well-defined android app. advantage of using Marshmallow are, they have quick app switcher, Support multitasking, performance improvement, easy notifications, smart lock with fingerprints. As we all knew that android applications play a key role in the current market due to its user-friendly access and most popular google store. Marshmallow includes a multiwindow allowing to display dual screens at the same time.\nCurrently, available features include:\nAndroid Marshmallow is a compatible one and a popular version of Android and supports all screen sizes and also supports android watches, phones, cars, tablets.\nGoogle Now on Tap- Google reads the screen when you are inside an app.\nIncrease marshmallow Battery life is up to 25%, you can extend your device usage upto90mins.\nEnhanced notifications reply from the lock screen and improved edit options like cut, copy, paste.\nIncreased Storage Space On the device\nManaging Interruptions\nApp Permissions (run time permission) that lets any app to seek permissions like issuing notifications pop-ups.\nFinger Print sensors to unlock various services and apps to authenticate.\nAndroid Pay\nImproved additional security\nDouble-tap camera and newly updated emoji around 200 compatibles with the keyboard\nYou will learn how to work with Java.\nThrough this Android Marshmallow Tutorial, you will gain practical development experience by building an application and self-manage their projects.\nYou will come across working knowledge of software interfaces in android devices.\nDeveloped teamwork skills to import multiplayer gaming as an excellent tool.\nCan build and publish your apps in google play store.\nExcellent mobile user interface designing using colors and activity indicators.\nBecome an expert in Android development for Android devices.\nYou will be working with various activities and will be creating a user interface to make your app to execute smoothly. The android app became vital for any business.",
      "target_audience": [
        "A beginner who wishes to update their skills can take up this Android Marshmallow Tutorial to succeed newly enhanced technology. Students and other candidates looking to start a new career growth in android app development can take up this Android Marshmallow Tutorial certification. Android Expert, Android developer, freelancer, job seekers, consultants are a target audience. As this Android Marshmallow Tutorial is a friendly training program anyone can update or learn this new skill. To build an exciting career in the mobile world anyone can learn android to possess this skill. It is easy for a web developer to grasp technology and concepts involved in Android development."
      ]
    },
    {
      "title": "Build Cross Platform Native iOS & Android Apps Using Skip",
      "url": "https://www.udemy.com/course/build-cross-platform-native-ios-android-apps-using-skip/",
      "bio": "Write Once, Deploy Everywhere: Native iOS & Android Apps with Skip",
      "objectives": [
        "Understand the fundamentals of Skip, its architecture, and how it simplifies the development process for both iOS and Android.",
        "Learn to connect your apps to live JSON APIs, fetch and display dynamic data, and build interactive experiences using real-world data sources.",
        "Dive into practical app development by creating a functional maps app, learning to display maps, add markers, and manage map interactions.",
        "Discover how to maintain a single codebase, reduce development time, and streamline your app delivery process across platforms.",
        "Apply your skills to real-world scenarios, preparing you to tackle common challenges in app development."
      ],
      "course_content": {
        "Introduction": [
          "Prerequisites",
          "What is Skip?",
          "Installing and Running Your First Skip Application"
        ],
        "Consuming JSON API - Client/Server Application": [
          "What we will be building?",
          "Setting Up the Project",
          "Displaying Dummy Products",
          "Displaying Products from Store API",
          "Adding New Product Part 1",
          "Adding New Product Part 2",
          "Displaying Product Details",
          "Deleting Product and Debugging"
        ],
        "Displaying Maps and Markers": [
          "Displaying Map for iOS",
          "Obtaining Google Maps API Key",
          "Displaying Maps for Android",
          "Adding Markers",
          "Resources and Source Code"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A solid understanding of Swift programming and experience building apps with SwiftUI are required, as the course builds on these skills to introduce cross-platform development using Skip.",
        "Familiarity with working with APIs and JSON is recommended, as you'll be integrating dynamic data into your apps.",
        "Previous experience developing mobile apps will help you follow the course content smoothly."
      ],
      "description": "Are you ready to elevate your app development skills? This course is your gateway to learning Skip, the lightweight framework that simplifies building cross-platform apps for iOS and Android. With Skip, you can streamline your workflow, maintain a single codebase, and deliver fast, reliable, and visually stunning apps across platforms.\nWhat You'll Learn:\nGetting Started with Skip\nDiscover what makes Skip a game-changer for mobile developers. Learn the fundamentals of how Skip works and why it’s the ideal solution for cross-platform development.\nWorking with JSON APIs\nConnect your app to real-world data by fetching, displaying, and interacting with APIs effortlessly. Gain hands-on experience integrating dynamic data into your apps.\nBuilding a Maps App\nCreate a fully functional maps app that works seamlessly on both iOS and Android. Learn how to display maps on iOS and Android and even put markers on the map.\nWhy Take This Course?\nPractical Projects: Build real-world apps that solve real-world problems.\nSave Time: Write your code once and run it everywhere.\nExpert Guidance: Enjoy step-by-step lessons that break down complex concepts into easy-to-follow instructions.\nLet’s Build Something Amazing Together\nBy the end of this course, you’ll have the skills and confidence to use Skip to build cross-platform apps that are fast, reliable, and polished. Your next app is closer than you think—start now and turn your ideas into reality.",
      "target_audience": [
        "This course is perfect for developers who have a strong foundation in Swift and SwiftUI and are looking to expand their skillset to include cross-platform development.",
        "If you have experience building apps for a single platform and want to learn how to streamline development for both iOS and Android, this course is for you.",
        "Ideal for individuals who want to build apps efficiently and save time by maintaining a single codebase for multiple platforms.",
        "If you’ve already built a few apps and want to explore how to work with APIs, maps, and cross-platform tools like Skip, this course will help you level up."
      ]
    },
    {
      "title": "Build Cross Platform Apps with Xamarin Forms and Azure",
      "url": "https://www.udemy.com/course/build-cross-platform-apps-with-xamarin-forms-and-azure/",
      "bio": "Learn Azure Mobile App and Implement Offline Synchronization in Xamarin Forms Application",
      "objectives": [
        "Create Azure Mobile App",
        "Be able to build Cross Platform App in xamarin forms",
        "Build fully-fledged apps for your startup or business",
        "Integrate Azure Mobile App Service in Xamarin Forms",
        "Implement Online Offline Synchronization in Xamarin Forms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Overview",
          "Course Outline"
        ],
        "Getting Started with Microsoft Azure": [
          "Create Microsoft Azure Account"
        ],
        "Building an Azure Mobile App Service": [
          "Setting up Azure Mobile App Project",
          "Create Notes Service",
          "Check Rest Endpoints"
        ],
        "Azure Mobile App Deployment": [
          "Azure Mobile App Setup",
          "Create Azure SQL Database",
          "Publish Azure Mobile App",
          "Preview Data Inside Microsoft Azure"
        ],
        "Building an Azure Mobile App Client": [
          "Create Xamarin Forms Project",
          "Adding Azure SDK",
          "Create Model and Services",
          "Implement Get Notes Method",
          "Implement Add Note Method",
          "Implement Update Note Method",
          "Implement Delete Note Method"
        ],
        "Build Xamarin Forms Application with Azure": [
          "Notes Page UI",
          "Implement Databinding in Notes Page",
          "Notes Page Code Behind",
          "AddNote Page UI",
          "AddNote Page Code Behind",
          "UpdateNote Page UI",
          "UpdateNote Page Code Behind",
          "Implement Delete Note",
          "Implement Static Constructor in Xamarin Forms Application"
        ],
        "Offline Synchronization": [
          "What is Offline Synchronization",
          "Add Support for Offline Synchronization (Integrate Nuget Packages)",
          "Implement Offline Sync in Xamarin Forms",
          "Source Code",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should be familiar with C# and Xamarin Forms. Because knowledge of C# and Xamarin is must for this course.",
        "In order to create an Azure Mobile App you need a Microsoft Azure Account."
      ],
      "description": "Welcome to the Real World App Development course with Xamarin Forms .\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of  Microsoft Azure Mobile App with Xamarin Forms. Along with the Azure Mobile App we''ll create a Notes Application for IOS and Android Platforms via Xamarin Forms.\nThis courses teaches you how to code using Xamarin Forms and build beautiful Android and iOS apps by using Xamarin Forms and Azure Mobile App Service.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a Azure Mobile App inside the Visual Studio.\nImplement GET , POST , PATCH , DELETE in Azure Mobile App.\nDeploy Azure Mobile App to Microsoft Azure Portal.\nIntegrate Azure SDK in Xamarin Forms.\nCreate a Complete Cross Platform Application in Xamarin Forms From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Project in Xamarin Forms happily)\nHow to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.\nImplement Online - Offline Synchronization in Xamarin Forms Application...\n\n\nRemember...\nAfter this course you'll get all the Xamarin Forms Application Source Code and along with this I'll also share a Complete Backend Code for the  Azure Mobile App Service with you. In this course I've used my personal Azure Account and I'll not give the access to the Azure Account. However if you want to test the api's then you'll need your own Microsoft Azure Account. Also inside this course I'll show you how you can publish your web api's to Microsoft Azure and preview your data inside Microsoft Azure.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Xamarin Forms and Azure Mobile App Service Course.",
      "target_audience": [
        "If you're a C# programmer , then take this course.",
        "If you are an intermediate xamarin forms developer, then take this course to get up to speed quickly with xamarin forms and native app development.",
        "If you are a pro xamarin developer and want to learn more advanced concepts with quick pace then take this course.",
        "If you want to implement some advanced things in your app like (Offline Synchronization) then take this course."
      ]
    },
    {
      "title": "Comprehensive Android Development 2024: Kotlin Masterclass",
      "url": "https://www.udemy.com/course/bn-kotlin-android-course/",
      "bio": "Master Android Development in Just 6 Hours: Build Complex Real App Using Industry Best Practices",
      "objectives": [
        "You will learn the Kotlin language in-depth, enabling you to navigate and understand any Kotlin-based project.",
        "We will delve into the industry's best practices for building high-quality Android apps, ensuring you are well-equipped with the current standards.",
        "You will become proficient in the Model-View-View-Model (MVVM) architectural pattern, a widely used design scheme in Android development.",
        "We will explore Unit Testing, a key aspect of software development that ensures your code behaves as expected.",
        "You'll build a real app that can be included in your portfolio, demonstrating your practical skills to potential employers.",
        "You'll gain the capability to transform your ideas into functioning Android apps, unlocking endless possibilities for your creative projects.",
        "The skills acquired throughout this course will prepare you for job applications, increasing your chances of successfully securing an Android developer position"
      ],
      "course_content": {
        "Introduction": [
          "Course overview"
        ],
        "Building currency convertor app": [
          "Download Android Studio",
          "Setup Android Studio project and emulator",
          "Let's code!",
          "Setting up MVVM architecture. ViewModel and Repostory.",
          "Introduction to unit tests",
          "Dependency injection with Hilt",
          "Setup bottom navigation UI",
          "Adding charts screen and implement navigation.",
          "Adding currencies to the list",
          "Let's prepare for multi modular app!",
          "Multi modular app part1",
          "Multi modular app part2",
          "Setup app bar and back arrow navigation",
          "Integrating retrofit part1",
          "Integrating retrofit part2",
          "Fetching real rates from the web",
          "Fetching real rates from the web part2",
          "Store data with shared preferences",
          "Input convert amount with bottom sheet",
          "Store convert amount to preferences",
          "Building currency flag component with Glide",
          "Custom toolbar and UI polishing",
          "Implementing calculator feature",
          "Implementing filter and search feature for available currencies"
        ],
        "Currency convertor: Charts": [
          "Let's make some prep work before drawing chart",
          "Setup room database",
          "Fetch and cache rates data",
          "Drawing chart part1",
          "Drawing chart part2",
          "Adding period selection feature to the chart",
          "Select currencies for chart with modal bottom sheet",
          "Tracking touch events",
          "Adding loading animation for chart"
        ]
      },
      "requirements": [
        "A Windows, Mac or Linux Computer",
        "No Programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "Elevate Your Skills with Our Complete Android Development Course!\nEver thought of becoming a top-notch Android developer? Or do you have an innovative app idea but lack the skills to make it real? Your solution is here! Whether you're new to programming or a developer looking to enhance your skill set, our course is crafted to guide you every step on your way.\nWhy Enroll in This Android App Development Course?\nExpert Guidance: Learn from industry professionals with years of experience in Android application development and teaching.\nComprehensive Curriculum: Master everything from the basics to advanced Android features, including Kotlin, Jetpack Components, and modern development tools.\nInteractive Learning: Dive into practical exercises, real-world projects, and detailed demos designed to reinforce your knowledge.\nTop-Tier Course Content:\n30+ high-quality video lessons\nStep-by-step in-code tutorials\nExtensive hands-on projects\nRegular updates with new content\nWhat You'll Master in Android Mobile App Development:\nKotlin Programming: Learn the ins and outs of Kotlin, the preferred language for Android development.\nAndroid Jetpack: Understand and implement the latest libraries and tools to build robust, scalable apps.\nUser Interface Design: Create stunning UI with XML and Jetpack Compose.\nNetworking: Master API integration and asynchronous calls using Retrofit and other libraries.\nDatabase Management: Utilize Room database for efficient data storage.\nUnit Testing: Learn to write robust unit tests to ensure your code is reliable and maintainable.\nHilt: Simplify dependency injection in your Android apps with Hilt, making your code cleaner and more testable.\nCoroutines: Master Kotlin Coroutines to handle asynchronous programming with ease and efficiency.\nMulti-modular App Development: Learn to build scalable and maintainable Android apps by organizing your project into multiple modules.\nLIMITED TIME OFFER: 30-DAY Money-Back Guarantee!\nDon't miss this chance to transform your career or bring your app ideas to life. Enroll now in our Android application development course and start your journey to becoming a professional Android developer!",
      "target_audience": [
        "If you have zero programming skills and want to try software development, start here.",
        "If you want to boost your IT career, this course will give you the skills you need.",
        "If you have a big idea for your own startup but don't know how to develop applications, this course will guide you.",
        "If you are determined to become a developer but don't want to waste time watching 50+ hours of legacy programming approaches, this course is your shortcut to success.",
        "If you want to quit your office job and work remotely with flexible hours, this course is perfect for you.",
        "If a flexible learning schedule is important to you, this course offers just that: a convenient format of short lectures that allows you to create your own study schedule."
      ]
    },
    {
      "title": "Building a Reminders App Clone with SwiftUI & Core Data",
      "url": "https://www.udemy.com/course/building-a-reminders-app-clone-with-swiftui-core-data/",
      "bio": "Learn SwiftUI, Core Data, Notifications, One to Many Relationships and More!",
      "objectives": [
        "Use the latest features of SwiftUI to create an intuitive and user-friendly interface",
        "Utilize Core Data to store, retrieve and manage data",
        "Send local notifications to the user",
        "Use the @FetchRequest property wrapper",
        "Learn how to work with a variety of different programming concepts and techniques to build a fully functional app.",
        "Implement one to many relationship in Core Data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files",
          "What we will be building?",
          "Architecture"
        ],
        "Saving and Displaying List": [
          "Setting Up Core Data Provider",
          "Creating Core Data MyList Model",
          "Implementing AddNewListView User Interface",
          "Saving List",
          "Displaying Lists",
          "Resource: isEmptyOrWhitespace"
        ],
        "Saving and Displaying Reminders": [
          "Adding Reminder Model and Relationships",
          "Saving Reminder to List",
          "Display Reminders Based on Selected List",
          "Implementing ReminderCellView"
        ],
        "Updating Reminder": [
          "Implementing ReminderDetailView",
          "Changing Reminder List (Implementing SelectListView)",
          "Implementing ReminderCellView Events",
          "Updating Reminder Completion Status",
          "Implementing Delay",
          "Updating Notes, ReminderDate and ReminderTime",
          "Deleting a Reminder"
        ],
        "Searching and Reminder Statistics": [
          "Implementing Searching",
          "Creating ReminderStatsBuilder",
          "Displaying ReminderStats on the Screen",
          "Reminder Stats Navigation",
          "FIX - Displaying Today's Reminders"
        ],
        "Local Notifications & Color Scheme": [
          "Scheduling Notifications",
          "Dark Mode & Light Mode",
          "Custom Icons Using DALL-E"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "iOS 16 or above",
        "Familiarity with Xcode",
        "Familiarity with Swift and SwiftUI",
        "Passion for learning and building iOS apps"
      ],
      "description": "Learn to build your own Apple Reminders app clone using the power of SwiftUI and Core Data. In this course, you'll gain a solid understanding of how to create a fully functional app that includes features such as sending notifications, utilizing the @FetchRequest property wrapper, and supporting both dark and light mode. This course will guide you through the entire process of creating an Apple Reminders app clone. Whether you're a beginner or an experienced developer looking to add a new skill to your toolbox, this course is perfect for you. Enroll now and start building your own Reminders app today!\n\n\nWhat are the requirements of the course?\n\n\niOS 16 or above\nFamiliarity with Xcode\nFamiliarity with Swift and SwiftUI\nPassion for learning and building iOS apps\n\n\nWhat will you learn in this course?\n\n\nThis course will teach you how to build your own Apple Reminders app clone using SwiftUI and Core Data. Specifically, you will learn how to:\n\n\nUse the latest features of SwiftUI to create an intuitive and user-friendly interface\nUtilize Core Data to store, retrieve and manage data\nSend local notifications to the user\nUse the @FetchRequest property wrapper\nImplement support for both dark and light mode\nLearn how to work with a variety of different programming concepts and techniques to build a fully functional app.\n\n\n100% money-back guarantee if not satisfied. Contact us within 30 days of purchase for a full refund.",
      "target_audience": [
        "Students will learn how to integrate Core Data in a SwiftUI application",
        "Send local notifications based on reminder date and time",
        "Implement one to many relationships using Core Data"
      ]
    },
    {
      "title": "Flutter Multi Vendor App",
      "url": "https://www.udemy.com/course/flutter-multi-vendor-grocery-restaurant-shop-food-clothes-app/",
      "bio": "Flutter shop | grocery | restaurant | vendor app",
      "objectives": [
        "A basic system design",
        "Building complex app with Flutter",
        "Learn how to integrate Flutter, Nodejs, Mongodb and Firebase",
        "Learn to use state management like GetX with it",
        "Step by step learn to build rest API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Creating the project and Introducing GetX": [
          "Creating a flutter project, instaling dependencies and importing constants",
          "Hooking Screen Utils, GetX and creating a defaultHome widget"
        ],
        "Bottom Navigation Bar and GetX": [
          "BottomNavigationbar",
          "TabIndex GetXController and Obx",
          "Importing Flutter vector icons",
          "Bottom Navigation baricon variations",
          "Entrypoint pagesList",
          "Creating CustomContainer",
          "CustomContainer"
        ],
        "Creating a CustomAppBar": [
          "CustomAppBar",
          "CustomAppBar Error Fixes",
          "Custom AppBar Time Function",
          "Custom AppBar Dynamic Emojis"
        ],
        "Category List & Controller": [
          "CategoryList",
          "Category Controller",
          "Category onTap",
          "CategoryWidget onTap Logic",
          "CategoryWidget code refactoring"
        ],
        "All Categories Page and Category Tile": [
          "All Categories Page and Category Tile",
          "BackGroundContainer",
          "Refactoring Category Tile"
        ],
        "Heading Widget": [
          "Heading Widget",
          "HeaderWidget attached pages"
        ],
        "Nearby Restaurants": [
          "NearByRestaurantsList and FoodsList",
          "Restuarant Widget Design",
          "Restaurant Widget Title and rating",
          "FoodWidget",
          "NearBy Restaurant Tile",
          "NearBy RestaurantList",
          "NearBy Restaurant tile and Restaurant List.mp4",
          "FoodTile and FoodsList inside Recommendation page"
        ],
        "Backend architecture and controllers and schemas": [
          "Introducting the Backend Basic Architecture",
          "Initializing a fresh server and installing dependencies",
          "Configure Dotenv and Database Connection",
          "Creating DB Cluster and Extraction the URI",
          "Create Category Schema and CategotyController",
          "GetAll Categories and GetRandom Categories Function",
          "Category router-Postman Test"
        ],
        "System design resources": [
          "System design resources"
        ]
      },
      "requirements": [
        "Must have some Flutter & Nodejs programming experience"
      ],
      "description": "Flutter Multi Vendor app for grocery store, restaurant app, food delivery and e-commerce app. This app is designed to be scalable and a template for following purpose. You may use it for\n1. food delivery app\n2. grocery app\n3. e-commerce app\n4. shop app or clothes app\n5. accessory app\nWe will build a mobile app using Flutter which can facilitate the ordering of food from restaurants that are within the close distance range of the client. Clients can get dynamic food recommendations and restaurant recommendations according to their current location. Clients can explore food categories and get served the food that is within delivery distance and if no food is found we recommend them random foods.\nThe app will provide features to calculate the distance of the restaurant from the client’s current location, calculate the delivery price to order from a restaurant, navigate using maps from the client’s current location to restaurant’s location, calculate the time it takes for an order to be delivered to the client after ordering. Payment system to facilitate payment between the client and the admin. Buyers can rate the experience of purchase, seller, delivery, etc. Food delivery services rely heavily on security email, the app will have an email verification system as well as phone number verification. For deliveries to go through and limit confusion, the address system should have a combination of several map APIs to get the coordinates of the user and the correct format of the address.",
      "target_audience": [
        "Intermediate to advanced learners"
      ]
    },
    {
      "title": "SwiftUI Threads Clone | iOS 17 | Firestore | async/await",
      "url": "https://www.udemy.com/course/swiftui-threads-clone/",
      "bio": "Learn how to build the amazing new Threads App from Meta with SwiftUI",
      "objectives": [
        "How to build an advanced application from scratch with SwiftUI",
        "How to build a social media network with user generated content",
        "How to engineer a backend system with Firebase Firestore",
        "How to implement latest technologies like async/await"
      ],
      "course_content": {
        "Introduction": [
          "Project Setup"
        ],
        "User Interface": [
          "Login / Sign Up Views",
          "Tab Bar Setup",
          "Feed View",
          "Explore View",
          "Profile View",
          "Edit Profile",
          "Thread Creation"
        ],
        "Firebase Setup": [
          "Firebase Setup & Integration"
        ],
        "User Authentication": [
          "Registering A User",
          "Login / Logout / Authentication Routing Logic",
          "User Service & Data Model"
        ],
        "Loading Data from Firestore": [
          "Update User Profile",
          "Load Users in Explore View",
          "Profile Navigation"
        ],
        "User Profile Images": [
          "Edit Profile Photo",
          "Uploading Profile Image to Firebase Storage",
          "Loading User Images"
        ],
        "Threads": [
          "Creating A Thread",
          "Fetching & Displaying Threads",
          "Fetching User Threads"
        ]
      },
      "requirements": [
        "Some experience with Swift and SwiftUI preferred"
      ],
      "description": "Overview:\nDive into the world of modern iOS app development by joining our comprehensive course on creating a Threads app clone using SwiftUI. In this hands-on journey, you'll gain a deep understanding of SwiftUI's powerful declarative syntax while building a feature-rich social media app.\nCourse Highlights:\nThrough a series of engaging lectures, practical exercises, and real-world projects, you will learn to:\nBuild a full scale mobile application from scratch with SwiftUI\nImplement secure authentication using Firebase. Learn how to manage user sessions and provide a seamless signup and log-in experience.\nCreate and upload Threads to drive conversation and engagement with your followers\nDisplay Threads in a media feed\nDevelop user profiles and settings views, allowing user to customize their experience, manage notifications, and update profile information\nImplement dark mode support and explore theming to give your app a polished and customizable look\nPerformance optimization strategies to create. smooth and responsive user experience, even as the app scales to handle large user bases and data sets.\nUse the new async/await functionality for all networking\nPrerequisites:\nBasic understanding of Swift programming language.\nSome familiarity with Xcode and SwiftUI\nMacbook Computer\nJoin us on this exciting journey to build a Threads app clone with SwiftUI, and equip yourself with the skills needed to create captivating and feature-rich iOS applications. Whether you're a beginner looking to explore app development or an experienced developer aiming to master SwiftUI, this course offers a comprehensive learning experience to help you achieve your goals.",
      "target_audience": [
        "All levels"
      ]
    },
    {
      "title": "ASO: 20 Million App Downloads App Store Optimization",
      "url": "https://www.udemy.com/course/app-creator-course/",
      "bio": "ASO (App Store Optimization) for Google Play & App Store, Retention, Promotion, A/B Testing & Mobile Apps Monetization",
      "objectives": [
        "How to optimize your app to get more downloads and perform better",
        "Conduct professional store and in-app A/B testing to get more revenue and users",
        "App Search Optimization (ASO) tools and keywording to rank higher in the App Store and Google Play",
        "Screenshots, Onboarding, Funnels, Testing and more important issues to keep in mind!",
        "Methods to increase retention and users within the app"
      ],
      "course_content": {
        "Good To Know": [
          "App Commissions (IMPORTANT CHANGE)",
          "App Store VS Google Play - Main Differences",
          "Where to launch your app first? Apple or Google?",
          "ASO - App Store Optimization",
          "UI/UX - The Power & Importance of Graphic Design",
          "App By Trend - App downloads showcase following a trend"
        ],
        "Store Listing Optimization": [
          "App Icon - The most vital app graphic",
          "Using A.I. (Midjourney) to create app icons!",
          "App Video in Google Play & Apple App Store",
          "Store Screenshots in Google Play & Apple App Store",
          "ASO - App Search Optimization Platforms & Keywords",
          "Header Image - Google Play",
          "The power of app localization and how to use it",
          "App Reviews",
          "App Icon: A.I. VS Human Desginer - A/B Testing"
        ],
        "A/B Testing & Showcases (Maximize Downloads & App Promotion)": [
          "AB Testing - Introduction",
          "AB Testing with Google Play",
          "Google Play Store A.B Tests - Showcases",
          "In-App A/B Testing",
          "In-App A/B Testing - Firebase Remote Config Showcase",
          "In-App A/B Showcase: Animated VS Static",
          "Localizations - AB Testing, ASO, In-App and Push Notifications",
          "Remote Notifications A.B. Testing",
          "Apple App Store - Product Page Optimization (A/B Testing)"
        ],
        "Tools & Optimizations": [
          "ASO - Rate Box Why? How? When?",
          "App Analytics",
          "Onboarding",
          "Loaders",
          "Local Push Notifications",
          "Remote Push Notifications",
          "App Marketing & How to Promote Your App",
          "App Size",
          "Retention"
        ],
        "Monetization": [
          "Freemium or Paid?",
          "Monetizing with IAP & subscriptions",
          "How To Optimize App Prices with A/B Testing?",
          "Monetizing with In-App Ads"
        ]
      },
      "requirements": [
        "No programming experience required, App Store and/or Google Play developer account access is required"
      ],
      "description": "The Precious Knowledge I wish I Knew In My Early App Development & ASO (App Store Optimization) Years...\n\n\nHi there, my name is Mike, and I’ve been an independent app creator, developing & promoting mobile apps for the past 10 years.\nOver this period of time I created more than 10 apps - some apps ended up passing the 100K mobile app downloads and some of them even exceeded 1 million app downloads, such as my drawing and fitness apps:\nMy Apps under Kalrom Systems (my company):\n- Sand Draw (over 10 Million downloads)\n- Women Workout (over 1 Million downloads)\n- Buttocks Fitness (over 1 Million downloads)\n- Best Abs Fitness (over 1 Million downloads)\n- Flappy You (300K downloads)\n- Voice Draw (>100K downloads)\n- Fruit Draw (>100K downloads)\n- Run the Music (>100K downloads)\n\n\nOver time, I became more and more experienced and gained precious knowledge that I wish I would’ve had from the beginning!\nThis is why I decided to create my own course especially for you about app promotion, ASO (App Store Optimization and essential steps you need to take during the app development, growth, launch & maintenance stages: “App Creator: Beyond Coding”\n\n\nWhat Is This Course About?\n\nIn this course I will share with you many of the insights and secrets I learned during this time in order to provide you with the best tools and wisdom that an app creator / app developer needs beyond the coding stage to perform well with your mobile app growth & promotion!\n\n\nWho Is It For?\n\nWhether you are an indie developer, a startup, a freelancer, or just someone who owns an app or plans on creating one, this course is recommended for you.\n\n\nA/B Testing & Showcases\n\n\nStore A/B Testing\nIn-App A/B Testing\nScreenshot A/B Testing\nApp Icon A/B Testing\nApp Store Optimization / ASO Tools (Such as Mobile Action, Sensor Tower & and App Annie)\nTesting & Localization\nDirect and practical hands-on actions that you must perform in order to succeed with your app.\n\n\nStore Listing & Tools\n\n\nASO / App Store Optimization Tactics\nApp Analytics\nApp Screenshots\nRetention Tactics\nPush Notifications\nApp Localization\nImportant anecdotes and conclusions analyzing my own successful apps and others.\n\n\nOptimization & Monetization\n\n\nOptimizing App Size\nOptimizing User Reviews\nMonetization Methods\nIn-App Mobile Ads & Ad Networks (Such as AdMob)\nFree or Paid?\nAnd more...\nVital knowledge that any app developer needs to know in order to optimize their app on the way to make it successful!\nIt will be my pleasure to help you, go ahead and sign up for the course :-)",
      "target_audience": [
        "Beginner to advanced app developers / creators / startups or anyone who wants to know how to further improve and promote their apps",
        "People who want to get a real insights into successful app A/B testing results"
      ]
    },
    {
      "title": "FlutterFlow 2025 Bootcamp : Build \"No Code\" Apps in 2025",
      "url": "https://www.udemy.com/course/flutterflow-for-beginners-2024-build-no-code-flutter-apps/",
      "bio": "Build Your First Mobile App from Scratch | Gemini Clone and Notes App | Use Firebase and API's in FlutterFlow",
      "objectives": [
        "Build Stunning \"Gemini Clone\" in FlutterFlow",
        "Build Firebase Powered \"Notes App\" in FlutterFlow",
        "Build Stunning Mobile Apps from Scratch with Zero Coding",
        "Learn FlutterFlow & App Architecture from Scratch",
        "Learn to use Firebase in FlutterFlow for Data Management",
        "Learn use of API's in FlutterFlow for building Next Gen Apps",
        "Build \"I AM RICH\" App to learn basics of widgets in FlutterFlow",
        "Build a Stunning \"Counter App\" in FlutterFlow by using actions"
      ],
      "course_content": {
        "I AM RICH": [
          "Building Our First FlutterFlow App"
        ],
        "Counter App - Explore Actions in FlutterFlow": [
          "Building Counter App GUI in FlutterFlow",
          "Adding Actions in Apps in FlutterFlow",
          "Clear Counter"
        ],
        "Notes App using Firebase in FlutterFlow": [
          "Notes App",
          "Connecting Firebase with FlutterFlow",
          "Create DB Structure and Storing Notes in Firebase",
          "Fetching Data from Firebase and Displaying Created Notes",
          "GUI Improvement in FlutterFlow",
          "Deleting Notes from Firebase",
          "Adding Screens in FlutterFlow Apps - Creating Note Detail Screen",
          "Handling Layout Overflows in FlutterFlow",
          "Creating Note Update Screen",
          "Updating Values in Firebase Database",
          "Action Sequence in FlutterFlow",
          "Working on Appbar GUI"
        ],
        "Google Gemini Clone using API's": [
          "Google Gemini Clone",
          "Building GUI for Gemini Clone in Flutterflow",
          "What is an API",
          "Components of APIs",
          "Exploring Google AI Studio - API of Google Gemini",
          "Creating API Calls in FlutterFlow",
          "Passing input to Google Gemini and Getting Response in FlutterFlow App",
          "Testing Google Gemini Clone App",
          "Clear TextField and Improving GUI of FlutterFlow App"
        ]
      },
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Unlock the Power of No-Code App Development with \"FlutterFlow for Beginners 2025\"\nAre you excited about creating Mobile, Desktop, or Web Apps but feel limited by your lack of coding experience? Or perhaps you're a seasoned developer curious about the latest in no-code solutions? Look no further! This comprehensive course, \"FlutterFlow for Beginners 2025,\" is tailored to help you build powerful, responsive apps without writing a single line of code. Whether you're a beginner or an experienced coder, this course will empower you to transform your ideas into fully functional apps effortlessly.\n\n\nWhy Choose FlutterFlow?\nFlutterFlow is a game-changing platform that revolutionizes app development by providing a visual drag-and-drop interface. This innovative tool allows you to develop feature-rich mobile apps without any coding. It’s perfect for entrepreneurs, designers, and developers who want to rapidly prototype and deploy apps. With FlutterFlow, you can bring your app ideas to life quickly, making it the go-to solution for anyone eager to break into the app development world without the steep learning curve of traditional coding.\n\n\nWhat You’ll Learn:\nIntroduction to FlutterFlow: We'll kick off the course by guiding you through building a simple \"I Am Rich\" app. This project is designed to familiarize you with FlutterFlow’s intuitive interface and core functionalities. By the end of this module, you'll have a solid foundation in the basics of no-code app development.\nBuilding Interactive Apps: Moving forward, we’ll dive into creating a Counter app, where users can increase, decrease, and reset a counter. This hands-on project will teach you how to add and manage actions, paving the way for creating engaging, interactive, and dynamic user experiences within your apps.\nMulti-Page App Development with Firebase: In our third project, you'll build a sophisticated Notes app. This module introduces you to Firebase integration, showing you how to store, edit, delete, and fetch data in real-time. You'll gain invaluable skills in managing data effectively, which is crucial for developing complex, data-driven applications.\nAPI Integration with Google Gemini: Lastly, we’ll guide you through creating a Gemini clone app. This advanced project will expose you to API integration, allowing your app to interact with Google’s Gemini AI. You’ll learn how to incorporate external APIs into your FlutterFlow projects, unlocking powerful features like real-time AI responses and expanding your app’s capabilities.\n\n\nBy the End of This Course, You Will:\nHave the confidence and expertise to design and build responsive, no-code apps using FlutterFlow.\nMaster the integration of Firebase into your apps, enabling robust real-time data management.\nGain the skills to incorporate external APIs into your FlutterFlow projects, significantly expanding the functionality and potential of your apps.\nBe equipped to tackle a variety of app development projects, from simple apps to complex, multi-functional applications, all without the need for traditional coding.\n\n\nWho Should Enroll?\nThis course is ideal for beginners who want to create apps without learning to code. It’s also perfect for experienced developers seeking to explore the burgeoning field of no-code platforms. If you’re an entrepreneur looking to develop your own app, a designer interested in bringing your ideas to life, or a developer wanting to streamline your app creation process, this course is for you. With detailed, step-by-step guidance and a series of hands-on projects, you’ll be able to build your own apps in no time.\n\n\nJoin \"FlutterFlow for Beginners 2025\" Today!\nStart your journey into the world of no-code app development with FlutterFlow. This course offers you the tools and knowledge to create stunning, fully functional apps quickly and efficiently. Enroll now and take the first step towards becoming a no-code app development expert!",
      "target_audience": [
        "Anyone who want to build Mobile, Desktop and Web Apps without any Coding",
        "Anyone who want to learn use of FlutterFlow to build Stunning Apps",
        "Flutter Beginners Looking to build exciting apps with just Drag & Drop"
      ]
    },
    {
      "title": "Basic concepts of Android development : Build Your First App",
      "url": "https://www.udemy.com/course/the-beginners-path-to-android-build-your-first-app/",
      "bio": "Step-by-Step Android Development: From Setup to App Launch",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What is Android Development": [
          "What is Android Development"
        ],
        "Download and Installing Android Studio": [
          "Download and Installing Android Studio"
        ],
        "Creating First Project": [
          "Creating First Project"
        ],
        "What is Linear Layout": [
          "What is Linear Layout"
        ],
        "What is Relative Layout": [
          "What is Relative Layout"
        ],
        "What is Constraint Layout": [
          "What is Constraint Layout"
        ],
        "How to create ImageView": [
          "How to create ImageView"
        ],
        "Basics Of Kotlin": [
          "Basics Of Kotlin"
        ],
        "Counter App User Interface": [
          "Counter App User Interface"
        ]
      },
      "requirements": [
        "A Computer with Internet Access.",
        "No Prior Coding Experience Needed."
      ],
      "description": "Welcome to \"Android Development for Beginners\"! This course is the perfect starting point for anyone looking to explore the world of Android app development. Whether you're a complete beginner with no prior coding experience or someone looking to expand your skills, this course will take you step by step through the essentials of Android development.\nIn this comprehensive course, you will learn how to set up Android Studio, the primary development environment for building Android apps. You’ll gain a solid understanding of key Android components such as activities, layouts, views, and user interface elements like buttons and text fields. Through easy-to-follow, hands-on tutorials, you’ll learn how to build your first Android app from scratch.\nWe will walk you through how to create responsive layouts, work with basic UI components, implement user interactions, and manage app navigation. You’ll also learn to handle essential tasks like debugging, testing your app, and ensuring it runs smoothly on different devices.\nThroughout the course, we focus on making the learning process simple, engaging, and practical, so you can immediately start building your own apps. By the end of the course, you’ll not only have a basic understanding of Android development but also the skills to build functional apps, debug common issues, and continue learning and exploring more advanced topics.\nThis course is perfect for aspiring Android developers, tech enthusiasts, students, and anyone curious about mobile app development. Whether you want to start a new career or just experiment with app building as a hobby, this course will equip you with the foundational skills to make it happen. Join us and start your journey into the world of Android app development today!",
      "target_audience": [
        "Beginners with no prior coding experience.",
        "Aspiring Android developers looking to start a career.",
        "Students or graduates seeking to learn Android programming."
      ]
    },
    {
      "title": "Learn to build scalable Flutter apps with BLoC",
      "url": "https://www.udemy.com/course/learn-to-build-scalable-flutter-apps-with-bloc/",
      "bio": "How to build large, scalable apps with Flutter and BLoC Also proper folder structure, consuming REST apis.",
      "objectives": [
        "You will learn Flutter BLoC basics",
        "Proper folder structure and architecture to use with flutter BLoC.",
        "How to use Flutter BLoC and Cubits.",
        "Creating and using internal packages in a Flutter BLoC project.",
        "Implementing common features like localization, theme, fonts, etc in your Flutter project.",
        "Flutter standards, clean code and how to separate UI code.",
        "How to properly implement nested navigation in Flutter project.",
        "How to consume REST apis and manage state in BLoC with a example project.",
        "How to properly handle user authentication and forms",
        "How to push to Testflight for testers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to follow the course?",
          "Feedback..."
        ],
        "Bloc Basics": [
          "Preview",
          "Folder Structure",
          "Seperating UI code - part 1",
          "Seperating UI code - part 2",
          "Seperating UI code - part 3",
          "Seperating UI code - part 4",
          "How BLoC works",
          "Creating internal package - part 1",
          "Creating internal package - part 2",
          "Creating internal package - part 3",
          "Creating internal package - part 4",
          "Creating internal package - part 5",
          "Creating internal package - part 6",
          "Dependency injection",
          "Generating BLoC Code",
          "Coding BLoC State",
          "Coding BLoC Events",
          "Coding TaskBloc",
          "Getting all tasks callback",
          "Select Category Callback",
          "CopyWith method",
          "Completing BLoC",
          "Connecting UI With BLoC",
          "Where Can We Access BLoC?",
          "Connecting BLoC with Title",
          "Completing Category Card",
          "Selecting Category",
          "Changing amount in Category Card",
          "Showing Task List",
          "Add Task Bloc- Coding State",
          "Add Task Bloc - Completing State",
          "Add Task Bloc - Coding Events",
          "Add Task Bloc - Coding Bloc",
          "Add Task Bloc - Completing Bloc",
          "Fixing Status Card",
          "Adding Task",
          "Completing Adding Task",
          "Equatable",
          "Delete Task",
          "Editing Existing Task",
          "Summary - What we learned in this section..."
        ],
        "App architecture and common features": [
          "Intro",
          "Starter template",
          "Localization",
          "Theme Change",
          "Overriding theme"
        ],
        "Nested Navigation": [
          "Intro",
          "Indexed Stack - part 1",
          "Indexed Stack - part 2",
          "Adding BlocBuilder",
          "OnGenerateRoute method",
          "Navigator Widget",
          "Completing nested navigation"
        ],
        "Integrating REST Apis": [
          "Resources",
          "Prefs storage repo (internal package)",
          "Api client",
          "Auth repo",
          "Notifications repo",
          "Locator",
          "Formz",
          "Register BLoC",
          "Register BLoC part 2",
          "Inputs",
          "Register screen",
          "Login screen",
          "Notifications BLoC",
          "Home",
          "Splash page",
          "Logout",
          "Section summary"
        ],
        "App distribution": [
          "Pushing to testflight"
        ]
      },
      "requirements": [
        "Basic knowledge of Flutter",
        "No BLoC experience needed."
      ],
      "description": "PLEASE READ(UPDATE) - I am not updating this course, so I recommend you DON'T buy the course. Since this is the first course I created - it lacks in some ways. I am working on a new course with what I learned from this. Thanks!\n\n\nGo from knowing nothing or little about Flutter BLoC to becoming a expert. In the end of this course you will have the knowledge and skills to build large, scalable Flutter apps using BLoC. You'll learn about BLoC, Cubit, how to properly implement common features like app localization, theme change, fonts, using internal packages, forms handling, REST api integration, app destribution for testing, and more.\n\n\nThis course covers more about practical side than theory. Meaning you won't end up learning but without knowing how to implement it in code.\n\n\nWho this course is for?\nanyone who want to learn BLoC,\nanyone who want to build large apps with Flutter and BLoC,\nanyone who want to get to the next level with Flutter.\nWe will build multiple apps using the stuff you learn in the course. Starter code will be available to you in the beginning of the section and end result will be available in the end of the lectures.\nHere's a rundown of everything you will learn in this course.\na starter template for new flutter projects which comes common features already integrated out of the box.\nproper architecture and folder structure\nhow to separate UI code\ncreating and using internal packages in flutter\ndependency injection\nhow BLoC/Cubit works. cover basics.\ngenerating BLoC code\nhow to access BLoC in UI\nconnecting BLoC with UI\ncompleting a task/todo app with what is learned.\nproperly implement localization(easily reusable for any new project)\nproperly implement light/dark theme(easily reusable for any new project)\nIndexedStack and Navigator widget\nproperly implement navigation\nnavigating without BuildContext\nbest way to implement nested navigation(most devs do this wrong way)\nconsuming REST apis with BLoC\nlearn to do user authentication with REST apis and BLoC\nhow to implement splash screen\nhow to implement user logout\nhow to handle forms with BLoC(forms validation, submit, loading, etc)\npusing the app to testflight\nSample backend will be given to you in the REST api integration section. So you can run that server locally and follow the course. Don't worry you just have to double click on the file. It's already done for you. Backend is done in go lang if you are curious about that.\nMore stuff will be added to the course. You can also request new lessons/points from me.\n\n\nWhy should you buy this course?\nto go from zero to expert in BLoC\nlearn up to date/standard ways of implementing code\nmost of the stuff you learn in this course will be easily reusable in all of your new flutter projects.\nlearn how to consume REST apis and manage state in the app using BLoC(almost all courses don't cover this).\nmore than just BLoC is covered in the course.\nthis is complete package to learn to build real world production apps in Flutter and BLoC.\nmore sections will be added to the course in the future(CI/CD, writing advanced tests, firebase, pushing to app/play stores.\nLet's see inside the course!",
      "target_audience": [
        "Beginner to intermediate Flutter developers who wants to learn BLoC properly with a proper architecture.",
        "Flutter developers who want to learn to build large scalable apps with BLoC"
      ]
    },
    {
      "title": "Android App Development: Build a offline Music Player",
      "url": "https://www.udemy.com/course/music-player-app-development-kotlin-xml-in-android-studio/",
      "bio": "Build Your First Android Music Player Using Kotlin and XML",
      "objectives": [
        "Build a functional music player app in Android Studio.",
        "Design user interfaces using XML.",
        "Add play, pause, stop, and seek controls to the app.",
        "Implement media playback using the Android MediaPlayer class.",
        "Handle Android permissions to access media files.",
        "Debug and test the app on real Android devices."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "1. Guide to Downloading and Installing Android Studio": [
          "1. Guide to Downloading and Installing Android Studio"
        ],
        "2. Fundamentals of Android Studio": [
          "2. Fundamentals of Android Studio"
        ],
        "3. Creating and Configuring Your First Project": [
          "3. Creating and Configuring Your First Project"
        ],
        "4. Designing the MainActivity XML Layout File": [
          "4. Designing the MainActivity XML Layout File"
        ],
        "5. Developing the MainActivity Kotlin File": [
          "5. Developing the MainActivity Kotlin File"
        ],
        "6. Implementing Parcelable in Music Player": [
          "6. Implementing Parcelable in Music Player"
        ],
        "7. Designing Custom Icons for Music Player": [
          "7. Designing Custom Icons for Music Player"
        ],
        "8. Building the Player Screen XML Layout File": [
          "8. Building the Player Screen XML Layout File"
        ],
        "9. Developing the Player Screen Kotlin File": [
          "9. Developing the Player Screen Kotlin File"
        ]
      },
      "requirements": [
        "A Computer with good Internet Connection",
        "No prior experience with media player apps is needed; beginners are welcome"
      ],
      "description": "Welcome to \"Music Player App Development: Kotlin & XML Basics in Android Studio\"! This comprehensive course is designed for anyone interested in learning Android app development through a hands-on approach. Whether you’re a complete beginner or looking to build upon your existing skills, this course will guide you step-by-step in creating your own music player app.\n\n\nIn this course, you will learn the following:\n\n\n1. Foundations of Kotlin Programming: Get introduced to Kotlin, the modern programming language for Android development. You’ll learn essential concepts and syntax, ensuring you’re comfortable coding in Kotlin.\n\n\n\n\n2. XML Layout Design: Understand how to create user-friendly interfaces using XML. You’ll design visually appealing layouts that enhance the user experience of your music player.\n\n\n\n\n3. Building a Functional Music Player: Follow along as we build a simple yet powerful music player app. You’ll learn how to implement audio playback using the Android MediaPlayer class and create controls for play, pause, stop, and seek functionality.\n\n\n\n\n4. Audio File Management: Gain insights into how to load, manage, and play audio files in your app. You’ll also learn how to handle necessary permissions for accessing media files on Android devices.\n\n\n\n\n5. User Interface Interactivity: Discover how to make your app interactive by adding buttons and controls that respond to user actions. You’ll design a seamless experience for users to navigate through your music player.\n\n\n\n\n6. Debugging and Testing: Learn best practices for debugging your app and testing it on real Android devices. We’ll cover how to identify and fix common issues, ensuring your app runs smoothly.\n\n\n\n\n7. Performance Optimization: Understand techniques for optimizing your app's performance, ensuring smooth playback and a responsive user interface.\n\n\n\n\n\n\nBy the end of this course, you will have developed a fully functional music player app, equipped with the skills and knowledge to tackle more advanced projects in Android development. This course is perfect for tech enthusiasts, aspiring developers, and anyone eager to learn about mobile app creation.\n\n\nJoin us on this exciting journey into the world of Android development and create a music player app that showcases your new skills!",
      "target_audience": [
        "Beginners in Android development.",
        "Anyone wanting to learn Kotlin and XML.",
        "People interested in building a music player app.",
        "Intermediate developers who want to explore media playback in Android apps."
      ]
    },
    {
      "title": "Flutter with AI: Build Complete Mobile Apps using DeepSeek",
      "url": "https://www.udemy.com/course/flutter-with-ai-build-complete-mobile-apps-using-deepseek/",
      "bio": "AI-Powered Flutter Development: Create Production-Ready Apps Fast with Real Case Study",
      "objectives": [
        "Build full-featured Flutter mobile apps from scratch using DeepSeek AI",
        "Use DeepSeek to write clean, production-ready Dart code and debug faster",
        "Design beautiful, functional UI screens and graphics with AI assistance",
        "Master the integration of AI tools in real-world app development workflows",
        "Set up Flutter, Android Studio, and build authentication features (Splash, Login, OTP, Home Screens)",
        "Boost your productivity by generating app architecture, UI, and logic with DeepSeek"
      ],
      "course_content": {
        "Introduction to AI in App Development": [
          "What is Artificial Intelligence?",
          "How AI is Changing Software Development?",
          "Will AI Replace Programmers?"
        ],
        "Getting Started with DeepSeek AI": [
          "What is DeepSeek AI?",
          "Signing Up for DeepSeek AI"
        ],
        "Setting Up Your Flutter Development Environment": [
          "Installing Flutter SDK",
          "Installing Android Studio",
          "Setting Up Emulator / Virtual Device",
          "Setting Up Visual Studio Code for Flutter Development",
          "Running Flutter Doctor Command to Fix Issues",
          "Creating Your First Flutter Project"
        ],
        "Planning Your Mobile App": [
          "Writing App Features and Requirements with DeepSeek AI",
          "Choosing the Perfect Name for Your Mobile App",
          "Generating Splash Screen Graphics Using DeepSeek AI"
        ],
        "Building Core Screens of Your App": [
          "Building a Beautiful Splash Screen in Flutter",
          "Designing the Welcome Screen",
          "Creating the Sign-Up Screen",
          "Adding OTP Verification Screen for Secure Login",
          "Building the Sign-In Screen",
          "Designing an Information Completion Screen",
          "Implementing a Bottom Navigation Bar in Flutter",
          "Building the Dashboard Screen - Header Section",
          "Building the Dashboard Screen - Ad Section",
          "Building the Dashboard Screen - Services Section",
          "Building the Dashboard Screen - Vendor Section"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts (helpful but not mandatory)",
        "A computer (Windows, macOS, or Linux) with internet access",
        "Willingness to learn and experiment with AI tools like DeepSeek",
        "No prior Flutter or AI experience needed – everything is taught from scratch"
      ],
      "description": "Are you ready to build production-ready mobile apps 10x faster using the power of AI and Flutter?\nWhether you're a beginner or a developer looking to speed up your workflow, this course will teach you how to combine Flutter + DeepSeek AI to write code, design UI, generate graphics, and even plan features — all in record time.\nWelcome to “Flutter with AI: Build Real Mobile Apps using DeepSeek (2025)”, the only course that shows you how to create full-featured mobile apps from scratch, while harnessing the power of DeepSeek — one of the most advanced AI coding assistants available today.\nWhat You’ll Learn\nHow AI is transforming software and mobile app development\nHow to install and set up Flutter, Android Studio, and DeepSeek AI\nHow to write clean, production-ready Dart code using DeepSeek prompts\nHow to design and build real UI screens like Splash, Sign Up, OTP, and Home\nHow to use DeepSeek to generate graphics and fix bugs instantly\nHow to structure and complete a full mobile app project with modern UI\nWhy This Course Is Different\nHands-on real app project – not just theory\nNo prior Flutter or AI experience required – beginner-friendly\nPractical use of AI – see how DeepSeek writes, fixes, and improves code\nBeautiful UI design using AI tools – from wireframe to splash screen\n\nLearn how to create, debug, and optimize Flutter apps faster than ever\nWho This Course Is For\nAspiring mobile app developers who want to start with Flutter\nDevelopers curious about using AI tools like DeepSeek in real-world projects\nFreelancers and entrepreneurs who want to build MVPs and apps quickly\nAnyone who wants to boost their productivity and reduce coding stress\nTools We’ll Use\nFlutter SDK & Dart\nDeepSeek AI\nAndroid Studio\nVisual Studio Code\nAI tools for graphic and UI generation\nBy the end of this course, you'll have built a complete Flutter mobile app, enhanced with AI-generated code, UI, and graphics, and you’ll be fully equipped to use DeepSeek in your future development projects.\nEnroll now to unlock the future of mobile development with AI + Flutter — and start building apps smarter, faster, and better than ever!",
      "target_audience": [
        "Beginner or aspiring mobile app developer",
        "Programmer or Software developer",
        "Freelancer or Entrepreneur"
      ]
    },
    {
      "title": "The Complete Android JetPack Course - Mastering Jetpack",
      "url": "https://www.udemy.com/course/mastering-jetpack/",
      "bio": "Become a Professional Android Developer by Mastering ROOM, MVVM, Retrofit, Navigation, WorkMgr, Dagger, Paging3 & More..",
      "objectives": [
        "Learn Clean Architecture and MVVM Patterns with Android Jetpack",
        "ViewModels",
        "Live Data",
        "ROOM Database",
        "Building the same app with SQLite & ROOM ( SQLite vs ROOM)",
        "Data Binding ( Building Contacts Manager App)",
        "MVVM Pattern with Local ROOM Database ( Building Learning Management App)",
        "MVVM Pattern with Online Database ( Building Movie Pro App)",
        "Retrofit",
        "Paging3 Library (Building Movie App with Paging)",
        "Dagger and RxJava",
        "Dependency Injection & SOLID Priniciples",
        "Work Manager",
        "Navigation Framework",
        "REST API & JSON"
      ],
      "course_content": {
        "General Overview": [
          "Introduction to Jetpack",
          "Architecture Components",
          "MVVM Architecture"
        ],
        "ViewModel & Live Data": [
          "View Model",
          "Building View Model App",
          "Live Data"
        ],
        "ROOM Database": [
          "ROOM Database",
          "Building Contacts Manager App with SQLite",
          "Entity Class",
          "Database Helper Class",
          "Designing Layouts",
          "The Adapter Class",
          "Initializing Widgets",
          "Creating CRUD Methods",
          "Testing & Running the App",
          "Adding ROOM Dependency",
          "Creating Entity Class",
          "Data Access Object - DAO",
          "Database Class (@Database)",
          "CRUD Operations in ROOM",
          "Database Operations on Separate Threads",
          "ROOM Database Callbacks"
        ],
        "Data Binding": [
          "What is Data Binding",
          "Data binding for TextView",
          "Data binding for Event Listeners",
          "Data Binding with Include Layouts",
          "Two Ways Data Binding",
          "Contacts Manager App [Part 1] - Creating Layouts with Databinding",
          "Contacts Manager App [Part 2] - Data Binding",
          "Contacts Manager App [Part 3] - Adapter Class",
          "Contacts Manager App [Part 4] - Database Operations",
          "Contacts Manager App [Part 5] - Add New Contact Activity",
          "Contacts Manager App [Part 6] - Debugging & Testing",
          "Contacts Manager App [Part 7] - Data Binding with RecyclerView"
        ],
        "Learning Management App - The Complete MVVM Project [OFFLINE DATA: ROOM DB]": [
          "App Overview - #1",
          "MVVM Pattern & Database Overview #2",
          "Creating Entities - #3",
          "Data Access Object - #4",
          "Room Database - #5",
          "Repository - #6",
          "View Model - #7",
          "View - Main Activity - #8",
          "View - Spinner - #9",
          "Room Callbacks - #10",
          "View - RecyclerView part 1 - #11",
          "View - RecyclerView part 2 - #12",
          "View - Add Edit Activity - #13",
          "CRUD Functionalities - #14",
          "DiffUtil for RecyclerView Updates - #15"
        ],
        "Retrofit - Mastering REST API": [
          "Introducing Retrofit",
          "Using Retrofit",
          "JSON - Java Script Object Notation",
          "Entity & Model Class",
          "GSON",
          "Country Names App Demo",
          "Country Names App - Model Class",
          "Country Names App - Retrofit Interface",
          "Country Names App - Retrofit Instance",
          "Country Names App - Get Data into Log",
          "Country Names App - Display Countries into RecyclerView"
        ],
        "Movie Pro App - The Complete MVVM Project [ONLINE DATA] Retrofit & Data Binding": [
          "Movie Pro App Overview",
          "Project Setup and API overview",
          "Model Class [Part 1]",
          "Model Class [Part 2]",
          "Model Class [Part 3]",
          "The Repository",
          "Retrofit Instance",
          "Retrofit Calls",
          "View Model",
          "Main Activity Layout",
          "Movie Item Layout",
          "Movie Details Layout",
          "Content Layout",
          "Adapter Class",
          "Movie Details Activity",
          "Main Activity",
          "Testing & Debugging the App"
        ],
        "Paging3 Library - Building Movie App with Paging Library + MVVM + Data Binding": [
          "What we will build in this section",
          "What is Paging Library?",
          "Adding the Required Dependencies",
          "Creating Layouts",
          "Creating Model",
          "Utility Class",
          "API Client",
          "View Model",
          "Paging",
          "Dependency Injection",
          "Paging Data Adapter",
          "Load State Adapter",
          "Main Activity",
          "Running and Testing the App"
        ],
        "Work Manager": [
          "What is Work Manager?",
          "Building an app using work manager",
          "Display Worker Status",
          "Working with Constraints",
          "Sending and Receiving Data"
        ],
        "Dagger2 - The Dependency Injection Framework": [
          "SOLID Principles",
          "Pure Dependency Injection",
          "What is Dagger & Why we need to use it?",
          "Modules",
          "Working with Interfaces",
          "Parametrized Constructors",
          "Creating App Activity",
          "Singleton",
          "Homework - Applying Dependency Injection with ROOM",
          "Adding Dagger to MVVM Architecture"
        ]
      },
      "requirements": [
        "At least 3-6 months of experience with Android Development"
      ],
      "description": "Do you want to level up your Android programming skills and call yourself a Senior Android Developer? Then my You came to the right place!\nIn this course, you are going to learn how to use the Android Jetpack suite. This will allow you not only to learn new features of Android but also make sure that your code is up to date, clean, uses best practices, and is easily maintainable. A must for any developer who wants to call himself a professional developer.\n\n\nIn this course, you will build many apps:\n- ViewModel App\n- Live Data App\n- Contacts Manager App using SQLite\n- Contacts Manager App using ROOM\n- Phone Manager App - Data Binding\n- Learning Management App - MVVM with Local ROOM Database\n- Movie Pro App - MVVM with Retrofit to fetch Online Database\n- Retrofit App\n- Paging Movie App - Using Paging3 Library\n- Counter App using Work Manager\n- Contacts Manager App with Dependency Injection - Dagger App\n- Greetings App using Navigation Framework\n\n\nThroughout the whole course you will step by step uncover complex concepts in separate demos which will help you then to easily understand them and then apply the techniques step by step in many apps. This will ensure that you understand the concept and can apply it in your own applications.\nAlong the way you are going to learn how to use the most important libraries of the Android Jetpack suite of libraries. And of course, you're going to learn how to use the MVVM pattern.\n\n\nThis course consists of 11 sections, covering following topics:\nGeneral Overview\nViewModel & Live Data\nROOM Database\nData Binding\nLearning Management App - The Complete MVVM Project [OFFLINE DATA: ROOM DB]\nMovie Pro App - The Complete MVVM Project [ONLINE DATA] Retrofit & Data Binding\nRetrofit - Mastering REST API\nPaging3 Library - Building Movie App with Paging Library + MVVM + Data Binding\nWork Manager\nDagger2 - The Dependency Injection Framework\nNavigation\nDon't wait your chance to be a professional developer and start learning Jetpack suite today and don't worry, you will not only get the course content, but also a 5 Star customer support. So if you have any questions or get stuck while learning in the course you will get our help.\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like this course is not for you, ask for a full refund within 30 days. All your money back, no questions asked.",
      "target_audience": [
        "Android Developers who want to learn new skills",
        "Android Developers who are curious about Jetpack",
        "Developers who want to upgrade their existing knowledge",
        "Developers who want to write clean codes"
      ]
    },
    {
      "title": "Publish your own \"4 Pics 1 Word\" iPhone Game Clone, 0 coding",
      "url": "https://www.udemy.com/course/publish-your-own-4-pics-1-word-iphone-game-clone-0-coding/",
      "bio": "All Detailed Steps to Publish a Money Making iPhone Word Game (4 Pics 1 Word clone), no programming, source code inside",
      "objectives": [
        "Publish your very own version of 4 Pics 1 Word iPhone Game clone in Apple iTunes's app store"
      ],
      "course_content": {
        "Apple Developer Registration": [
          "Apple Developer Registration"
        ],
        "Initial Setup": [
          "Get XCode Tool",
          "iOS Distribution Certificate",
          "Provisioning Profile"
        ],
        "Reskinning Process": [
          "Download Source Code & Verify Game Works",
          "Source Code Folder Structure & Assets Description",
          "Modifying List of Words to Find (one per level)",
          "Creating list of letters to press (letters for each level)",
          "Creating the list of Hints",
          "Modifying Main Level Images",
          "Customizing Game Interface (HUD)"
        ],
        "Icons & Launch Images": [
          "Creating App Icon",
          "Resizing App Icons for all device sizes (iPads, iPhones, iPods, retinas)",
          "Creating Launch Images (Splash images)"
        ],
        "Advertising Settings": [
          "Setup Chartboost & Revmob Account",
          "Adding Revmob Advertising ID to the Source Code",
          "AdColony Video Ad Setup",
          "Chartboost Ad IDs"
        ],
        "Publishing Process": [
          "Creating Screenshots for all screen sizes",
          "iTunesconnect (ITC) primary settings",
          "Setting Up in-app purchases (IAP)",
          "Enable iAD network",
          "Archiving Process - part 1",
          "Archiving Process - part 2",
          "Archiving Process - part 3"
        ],
        "Going Above & Beyond": [
          "App Store Optimization (ASO) overview",
          "Game Analytics",
          "Upcoming Trend Techniques Overview",
          "Finding Deals and Latest Industry News",
          "Must Have Professional App Icons",
          "Quick & Affordable Way to Create a Promotional Video",
          "BONUS"
        ]
      },
      "requirements": [
        "a MAC OS X machine or virtual image (www.MacIncloud.com)",
        "one afternoon to spare",
        "a desire to learn about making mobile apps"
      ],
      "description": "Thank you for your interest in this course, my name is Yohann, I will be your instructor.\nWith this course, you get the full source code of a game clone called 4 Pics 1 Word.\nThis is an iPhone app where the player is shown 4 images and he or she needs to guess what is the hidden word in these pictures. It’s simple enough that anyone can pick it up quickly, and it’s also very addictive.\nThis type of game has made it to the top chart and what’s great about it is that it’s not just a trendy game, it’s an app that keeps getting downloaded over the years and people keep playing it. Since this source code comes with advertising banners and in-app purchases, the game is prone to bring you passive income for the years to come.\nThis game source code costs $200 on its own, and you’re getting it for free with this course, with an unlimited license, meaning you can keep using this code and make dozens of games out of it. You can make games about guessing the artists, celebrities, logos, icons, TV shows, countries, presidents and so much more, You imagination has no limits.\nIn this course, I show you every single steps you need to start, and I’m assuming you know nothing or very little,and I’m gonna help you succeed having your very own game, published in the itunes app store, without having to write not even one single line of code!\nThis is one of the easiest app you’ll ever get to put your hands on. There is barely any graphics to change, just a few colors and the words to guess.\nThis is a perfect way to start your mobile app business or increase your app portfolio quickly.\nThis is a great course with a source code that’s proven to work, make the right decision and join us now. I’ll see you in the classroom.",
      "target_audience": [
        "anyone wanting to start or grow their mobile app business",
        "Graphic Designers",
        "Entrepreneurs"
      ]
    },
    {
      "title": "Build a Social Media App using SwiftUI + firebase + IAP",
      "url": "https://www.udemy.com/course/complete-social-media-app-with-swiftui-and-firebase/",
      "bio": "Learn SwiftUI & iOS Development by Building a Social Media App. Master Firebase, In-App Purchases & App Store Publishing",
      "objectives": [
        "Develop iOS apps using SwiftUI & UIKit, mastering dynamic interfaces and custom components.",
        "Design custom shapes, colors, fonts, and add haptic feedback for engaging user experiences.",
        "Integrate Firebase for user authentication, posts, and database management with collections and subcollections.",
        "Test and publish apps to the App Store, manage in-app purchases with StoreKit, and work with App Store Connect.",
        "Beginner modules are being added daily!"
      ],
      "course_content": {
        "Beginner Modules": [
          "Beginner setup for iOS Development",
          "Functions 1.1",
          "Functions 1.2",
          "Functions 1.3"
        ],
        "Introduction": [
          "Introduction",
          "2. Documenting the app's blueprint before starting development",
          "3. Creating the Project and Adding custom Fonts",
          "4, Adding Custom colors to your App"
        ],
        "Setting up The basic structure of the App": [
          "5. Setting up Firebase inside your project",
          "6. Creating AuthView for the app",
          "7. Validating email and password fields",
          "8. Implementing Sign up, Sign In, Sign Out and Testing",
          "9. Fixing Navigation Stack Bug in our app"
        ],
        "Setting up Firebase Firestore": [
          "10. Creating a Firestore User Part 1",
          "11. Creating a Firestore User Part 2",
          "12. Fetching Database Users and Displaying data on User Profile"
        ],
        "Working in Depth with SwiftUI": [
          "13. Creating custom shapes in SwiftUI",
          "14. Using custom shape in views"
        ],
        "Working with Posts upload": [
          "15. Laying out post upload functionality",
          "16. Custom Image Picker and Testing out upload post functionality",
          "17. UI Bug Fix and optimising",
          "18. Fetching User posts functionality",
          "19. Creating PostViewCell UI part 1",
          "20. Creating Postview UI Part 2",
          "21. CreatePost View UI",
          "22, Updating the UI for createPostView"
        ],
        "Handling User Profiles and Followers-Following Functionality": [
          "23. Profile image update functionality",
          "24. Creating Generic user profile view",
          "25. Implementing Following-Unfollow functionality",
          "26. Checking Follower Following functionality",
          "27. Fixing the follower - following bug"
        ],
        "Adding Improvements": [
          "28 . Adding Kingfisher to our project",
          "29. creating Custom UIViewController for Alerts",
          "30. Adding overlay loader and custom alerts to all functions"
        ],
        "Implementing Home feed for the User": [
          "31. Implementing Home feed",
          "32. Fixed Follow- unfollow bug",
          "33. Making post view dynamic"
        ],
        "Adding In App Purchases and Releasing to the App Store": [
          "34. Adding in App Purchases to our app",
          "35 .Testing out in App purchases",
          "36. Releasing to Testflight and Publishing to AppStore"
        ]
      },
      "requirements": [
        "Basic knowledge about swift language"
      ],
      "description": "In this comprehensive iOS app development course, you’ll embark on a journey to build professional, real-world apps from start to finish. Whether you're just getting started or looking to expand your skills, this course covers everything you need to know to confidently develop, test, and publish iOS apps using SwiftUI and UIKit. From creating dynamic interfaces and custom components to handling backend integration, we’ll equip you with the tools to bring your app ideas to life.\nYou’ll begin by mastering SwiftUI and UIKit, learning how to build stunning, responsive user interfaces with custom shapes, fonts, colors, and animations. As you move forward, you’ll dive into essential programming concepts like completion handlers, async/await, and Dispatch groups, which will allow you to manage complex workflows, ensuring your app runs efficiently.\nThe course delves deep into Firebase integration, providing you with the ability to add robust backend functionality such as user authentication, real-time data management, and the ability to create dynamic posts. You’ll learn how to work with collections and subcollections, empowering users to publish posts, follow others, and interact in a dynamic feed within your app.\nWe also focus on user experience by teaching you how to implement custom loading indicators, haptic feedback, and engaging custom UI elements. But the course doesn’t stop there—you’ll learn to add revenue-generating features by implementing in-app purchases using StoreKit, allowing you to monetize your app effectively.\nOnce the app is built, you'll gain hands-on experience in testing on real devices, ensuring your app functions perfectly in real-world conditions. From there, you’ll upload your app to TestFlight for beta testing and refine it based on feedback. We’ll guide you through App Store Connect, teaching you how to prepare your app for submission, manage in-app purchases, and navigate the App Store’s submission process.\nBy the end of this course, you’ll have built a fully functional iOS app, complete with a polished UI, robust backend, and monetization features, and you'll have the skills to confidently publish it on the App Store. Whether you're building a social networking app, a productivity tool, or anything in between, this course provides you with the foundation and expertise to succeed as an iOS developer!",
      "target_audience": [
        "Aspiring iOS Developers looking to learn SwiftUI, UIKit, and iOS app development from scratch.",
        "Intermediate Developers aiming to deepen their skills in custom components, Firebase integration, and app publishing.",
        "Entrepreneurs wanting to build and publish their own apps on the App Store.",
        "Students and Hobbyists eager to master iOS development and explore advanced topics like async/await, custom design, and in-app purchases."
      ]
    },
    {
      "title": "How to use MIT App Inventor 2 course",
      "url": "https://www.udemy.com/course/how-to-use-mit-app-inventor-2-course/",
      "bio": "The easiest and fastest way to understand How MIT App Inventor 2 works",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Why is this course important for App Inventor beginners",
          "Why App Inventor is the best no code app development platform",
          "Understand How App inventor works in 4 minutes"
        ],
        "Create your first app": [
          "Let us create an app",
          "How to test your app in App inventor 2",
          "Why do we need blocks",
          "What is a Screen",
          "Advantages of Components tab"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "You should be able to use a computer"
      ],
      "description": "Even though App Inventor is the easiest no-code app development platform many people get confused while visiting its website for the first time. There are two major reasons behind this\n1. You may be confused as you are completely unaware of How programming works.\n2. You may be confused due to the numerous options available on its website.\nThe main aim of this course is to remove that confusion from your mind and help you to develop a good understanding of how the App inventor works.\n\n\n***This course is completely focussed to help you get started with app inventor easily***",
      "target_audience": [
        "A beginner of MIT App Inventor 2"
      ]
    },
    {
      "title": "Make Whatsapp Stickers App in Android Studio",
      "url": "https://www.udemy.com/course/whatsapp-stickers-app-development-in-android-studio/",
      "bio": "Whatsapp Stickers Android App Development, Without Knowledge of Coding - Android Studio Project",
      "objectives": [
        "How to create Whatsapp stickers app for android",
        "Whatsapp sticker app development",
        "whatsapp stickers design and integration with code",
        "Create different sticker packs & much more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Required Software": [
          "Required Software"
        ],
        "WhatsApp Conditions for Sticker Apps": [
          "WhatsApp Conditions for Sticker Apps",
          "Sticker size & Margin",
          "Feedback is important"
        ],
        "Find Free Stickers & Adjust Size For App": [
          "How to Find Free Stickers For Android WhatsApp Stickers App",
          "Adjust the size of Stickers for whatsapp Part 1",
          "Adjust the size of Stickers for whatsapp Part 2",
          "Create Tray Icons Design For Packs"
        ],
        "Whatsapp provided resources For Stickers App Development For Android": [
          "Whatsapp provided resources For Stickers App Development For Android",
          "Whatsapp Resource usage & Gradle Building",
          "Explore Whastapp Provided Resource"
        ],
        "Whatsapp Stickers Android App Development in Android Studio": [
          "Rename Package Name in Android Studio",
          "Run The App First Time",
          "Add Your Stickers in App",
          "How to Convert Stickers in WebP Formats",
          "Change Content Json File To Embed Stickers With Android App in Android Studio",
          "Android App Layout Design / Modify"
        ],
        "Whatsapp Stickers App Testing - Output": [
          "App Testing"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of computer"
      ],
      "description": "Do you want to create your own Android stickers app for whatsapp but do not know how to create a mobile application ?\nDo you want to create your first stickers app for android platform ?\n\n\nDon't worry i will teach you from very beginning to end, in very easy approach.\n\n\nWelcome to \"Make Whatsapp Stickers App in Android Studio\" Course.\n\n\nIn this course i will teach you whatsapp stickers app development in very easy way without coding, but we will use Android studio. I'll use Android studio for development of app. This course is designed in a way so that you can understand the conditions imposed by whatsapp for whatsapp stickers apps. I'll break down every condition and will give you solution for every problem.\nFirst of all I'll teach you how to find the free stickers for your app and how to download them free. After that will explain the sizing and margin requirements for stickers. Using Adobe Illustrator I'll show you how to adjust the size and margin of sticker for whatsapp stickers app.\nSecondly you will know how to create two packs of stickers for your app. Finally will embed stickers with Android studio code and Json files. Complete explanation of app development and layout design for this app. Finally testing of app on whatsapp.\n\n\nYou will get all resources which used in this course as well as source code.\n\n\n\n\n24/7 Support: If you have any question and problem about this course  then You can contact me anytime on given contact details in course. See you in",
      "target_audience": [
        "Beginners wants to create their first Android App",
        "Beginners wants to develop WhatsApp stickers app for Android",
        "People who wants to develop their own sticker app for Android whatsapp",
        "People who wants develop Android App without Coding"
      ]
    },
    {
      "title": "Multiplayer TicTacToe Game using Flutter, Socket and MongoDB",
      "url": "https://www.udemy.com/course/multiplayer-tictactoe-game-using-flutter-socket-and-mongodb/",
      "bio": "Learn Socket IO Integration and MongoDB Backend Customization for Cross-Platform Real-Time Gaming",
      "objectives": [
        "Develop a solid understanding of Flutter's framework and its application in game development.",
        "Implement real-time multiplayer functionality using Socket io to enable seamless communication between players.",
        "Integrate MongoDB as a backend database to store and retrieve game data, ensuring a persistent and scalable gaming experience.",
        "Utilize Provider state management to efficiently manage and update game state across multiple devices.",
        "Build a custom backend infrastructure tailored to the multiplayer Tic Tac Toe game, providing full control and flexibility over the game's functionality."
      ],
      "course_content": {
        "Flutter Configuration": [
          "Create a new Project",
          "Work on Main Menu UI",
          "Work on Responsiveness",
          "Register Named Routes",
          "Custom Reusable Widgets",
          "Create and Join Game UI",
          "Download the Code"
        ],
        "Node js Configuration": [
          "Setting up a Node Project",
          "Create an Express Server",
          "Setup MongoDB Atlas",
          "Download the Code"
        ],
        "Connecting to Socket IO": [
          "Install Socket IO Client",
          "Socket Method Class",
          "Socket Server Connection",
          "Download the Code"
        ],
        "Listening and Emitting Events": [
          "Creating Room Model",
          "Work on CreateRoom Event",
          "Room Success Event Listener",
          "Room Provider Class",
          "Join Room Listener",
          "Work on Join Success Event",
          "Player Dart Model Class",
          "Player State in Provider",
          "Download the Code"
        ],
        "Waiting Lobby and Scoreboard": [
          "Work on Waiting Lobby",
          "Listen to UpdateRoom Event",
          "Work on Scoreboard",
          "Download the Code"
        ],
        "TicTacToe Game Board": [
          "Create the board UI",
          "Keep track of game values",
          "Playing according to turns",
          "Check Winner of the Game",
          "Display Winner in Dialog Box",
          "Displaying X and O",
          "Play Again Functionality",
          "Listen to Winner Event",
          "Listen to EndGame Event"
        ],
        "Working of the Application": [
          "Test the Complete Application",
          "Download the Complete Code"
        ]
      },
      "requirements": [
        "Basics of Dart and Flutter",
        "Basics of Node js and MongoDB",
        "Flutter SDK and VS Code installed"
      ],
      "description": "In a world where digital connections are more important than ever, how about building something fun and engaging? Introducing 'Build a Multiplayer Tic Tac Toe Game using Flutter, Socket, and MongoDB.\n\n\nImagine the thrill of challenging your friends, family, or even players from around the globe to a game of Tic Tac Toe. With this course, you'll learn how to leverage Flutter's powerful framework, Socket io's seamless real-time communication, MongoDB's flexible database, and Provider state management to create an immersive multiplayer gaming experience.\n\n\nWhether you're a beginner or an experienced developer looking to expand your skills, this will guide you through every stage of the development process. We'll start with the configuration of Flutter and Node js, ensuring you have a solid foundation. Then, we'll dive into Socket io to establish real-time connections and sync game data effortlessly. But that's not all!  You will understand how to build your own custom backend, giving you full control and flexibility over your game's functionality. No more relying on Firebase alone.\n\n\nUpon completing this course, you'll have all the skills necessary to develop your own multiplayer games with build custom backends. You'll be equipped with the ability to create memorable experiences and entertain people worldwide. So without wasting any more  time, let's get started on this exciting adventure together!",
      "target_audience": [
        "Beginner and intermediate Flutter developers interested in game development and real-time multiplayer experiences.",
        "Backend developers seeking to integrate custom backends with Flutter and explore Socket io and MongoDB.",
        "Game development enthusiasts eager to learn how to create multiplayer games using modern technologies.",
        "Students who want to master the most in demand technologies."
      ]
    },
    {
      "title": "Flutterflow : Learn the Absolute basics of Flutterflow",
      "url": "https://www.udemy.com/course/learn-the-absolute-basics-of-flutterflow/",
      "bio": "Learn frontend and backend integration with firebase",
      "objectives": [
        "Navigate the FlutterFlow Interface with Confidence Students will become familiar with FlutterFlow's user-friendly, drag-and-drop interface, learning how to acce",
        "Design Basic User Interfaces Using Core Widgets Students will learn to create simple and responsive user interfaces by employing fundamental FlutterFlow widgets",
        "Implement Basic Navigation Between Screens Students will understand how to set up navigation within their apps, enabling users to move seamlessly between differ",
        "Build a Simple Movie Blog App from Scratch Students will apply their foundational knowledge to create a basic movie blog application. This project will involve"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you can build with flutterflow"
        ],
        "Flutterflow Interface and Basic design": [
          "Understanding Flutterflow layouts",
          "Building a login page",
          "Test your knowledge"
        ],
        "Building a movie blog App - Frontend": [
          "Homepage",
          "Profile page",
          "Sign page",
          "Watch page",
          "Upload profile photo",
          "Pageview",
          "Search page"
        ],
        "Building a Movie blog App - Backend": [
          "User Authentication",
          "Adding Dark mode",
          "Creating collections",
          "Creating post",
          "Create post 2",
          "Profile",
          "Profile2"
        ],
        "Extra knowledge": [
          "Search Feature",
          "Responsiveness"
        ],
        "New: Designing a tasks management App": [
          "Introduction",
          "Home page design1",
          "Home page design2",
          "Todo details page",
          "Create tasks page design",
          "Edit tasks page design",
          "menu design",
          "Delete page design",
          "Authentication design page"
        ],
        "New: Master CRUD in firestore (Tasks management App Backend)": [
          "Authentication",
          "Creating schema",
          "create document",
          "Edit Feature (did you know? it's amazing)",
          "Reset password and delete doc",
          "Test App",
          "Search task"
        ]
      },
      "requirements": [
        "No Prior Programming Experience Needed",
        "Basic Computer Skills",
        "A Computer with Internet Access",
        "A Free FlutterFlow Account",
        "A Willingness to Learn"
      ],
      "description": "Are you curious about building apps without writing a single line of code?\nWhat’s New (Update):\nRe-recorded lessons in Sections 3–4 for clearer explanations.\nAdded a Task Management App project to master Firestore CRUD.\nUpdated lessons are marked with “NEW” for easy navigation.\n“Learn the Absolute Basics of FlutterFlow” is the perfect course to help you get started in the exciting world of no-code development using FlutterFlow  a powerful visual app builder backed by Google’s Flutter framework.\n\n\nThis course is designed especially for absolute beginners who want to learn how to turn their app ideas into real, functional projects   without needing to become a programmer first.\nWhat You’ll Learn:\nWhat FlutterFlow is and why it’s so powerful\nThe kind of apps you can build without writing code\nA guided tour of the FlutterFlow interface\nHow to design a basic login page\nBuild and preview your first mini project\nIntroduction to backend, user authentication, and responsive design\nWhether you're a student, entrepreneur, creative thinker, or aspiring app developer — this course gives you the tools to start building right away with confidence.\nRequirements:\nNo coding experience needed\nJust a laptop, internet connection, and curiosity\nA free FlutterFlow account (we’ll guide you through)\nHave a great desire for learning\nWho This Course is For:\nAbsolute beginners in no-code or app development\nDesigners or entrepreneurs wanting to create app prototypes\nAnyone curious about building beautiful apps quickly and visually,",
      "target_audience": [
        "Absolute Beginners in App Development-Flutterflow",
        "Aspiring No-Code Developers:",
        "Educators and Trainers"
      ]
    },
    {
      "title": "Website Development with Bootstrap 5 Hands-On for Beginners",
      "url": "https://www.udemy.com/course/hands-on-bootstrap-5-create-a-fully-responsive-website/",
      "bio": "Learn Bootstrap Step by Step: Build 8 Responsive HTML Pages with Layouts, Components, and Interactive Features",
      "objectives": [
        "Concise and focused lectures designed for flexible, self-paced learning.",
        "Build a complete multi-page responsive website using Bootstrap components, structured step-by-step for clarity and confidence.",
        "Integrate multimedia and interactive features such as off-canvas navigation, carousel slideshows, tabbed navigation, progress bars, and much more.",
        "Apply responsive design techniques to ensure optimal layout and functionality across various devices and viewport sizes."
      ],
      "course_content": {
        "Introducing the Course": [
          "What the Course Covers",
          "Final Website Video Walkthrough"
        ],
        "Setting Up Bootstrap": [
          "Setting Up Main Directory",
          "Bootstrap Files",
          "Index HTML File",
          "Referencing Bootstrap Files"
        ],
        "Homepage - Navigation": [
          "Website Navigation",
          "Placing Navigation",
          "Navigation Links",
          "Custom Stylesheet & Google Fonts",
          "Styling Navigation",
          "Navigation SVG Logo",
          "Navigation Toggler Icon"
        ],
        "Homepage - Hero Section": [
          "Cropping Hero Image",
          "Setting Up Hero Section",
          "Hero Section CSS Rules"
        ],
        "Homepage - About Section": [
          "Cropping Image",
          "Setting Up About Info",
          "Adding A Button",
          "Making Image Responsive",
          "Column Breakpoints",
          "Reversing Column Order",
          "Typography Rules"
        ],
        "Homepage - Carousel Component": [
          "Cropping Photo",
          "Container Heading",
          "Setting Up Carousel",
          "Adding Content",
          "Carousel Functionalities",
          "Styling Indicators",
          "Captions Visibility"
        ],
        "Homepage - Cards Component": [
          "Cropping Photo",
          "Setting Up Card Group",
          "Adding Card Content",
          "Breakpoint",
          "Styling Cards",
          "Rounding Images",
          "Styling Headings and Paragraphs",
          "Linking Card Posts",
          "Bootstrap Icons"
        ],
        "Homepage - Footer Section": [
          "Setting Up Footer",
          "Styling the Footer",
          "Footer Breakpoints",
          "Removing Right Margin",
          "Sticky Navigation Bar"
        ],
        "Sites HTML Page": [
          "New HTML Page",
          "Active Page",
          "Hero Section",
          "Setting Up About Sites",
          "Styling Photo and H2 Tag",
          "Reversing Column Order",
          "Setting Up Additional Sites",
          "Background Image and Gradient",
          "Button Glass Effect",
          "Adding the Button",
          "Icon & Heading Alignment",
          "More Container Boxes",
          "Icon & Heading",
          "Spaces for Extra Small Devices"
        ],
        "Sites - Fener & Balat Page HTML Page": [
          "Cropping Image",
          "Creating New HTML Page",
          "Hero Section",
          "Setting Up Breadcrumb",
          "Styling Breadcrumb",
          "Headings",
          "Drop Cap",
          "Drop Cap Placement",
          "Tabbed Navigation",
          "Tabbed Navigation Styling",
          "Tabbed Navigation Content",
          "Bootstrap Icons Part A",
          "Bootstrap Icons Part B",
          "Additional Site Links",
          "Tabbed Navigation Breakpoints"
        ]
      },
      "requirements": [
        "Prior exposure to HTML tags and CSS properties is recommended for a smoother learning experience.",
        "This is a build-as-you-go course. Be ready to actively code along and create a fully responsive website from scratch using Bootstrap.",
        "Students should have access to a browser like Chrome or Firefox, and a code editor such as Visual Studio Code, Sublime Text, BBEdit, or any editor they’re comfortable with."
      ],
      "description": "Website Development with Bootstrap 5 Hands-On for Beginners\nOver 134 concise and focused lectures designed for flexible, self-paced learning.\nOne Bootstrap Component at a time.\nThe entire website was developed based on Bootstrap version 5.3x.\nBuild fully responsive websites with confidence.\nAcross eight (8) HTML pages, you’ll master Bootstrap’s core features, from navigation bars, hero sections, modals, carousels, cards, accordions, Offcanvas, and more.\nLearn Bootstrap by building not just watching. In this hands-on course, you’ll create a fully responsive, professional-grade website one component at a time.\nWhether you're a beginner with basic HTML/CSS knowledge or a freelancer looking to sharpen your responsive design skills, this course offers a structured, build-as-you-go experience. You’ll learn how to make each component mobile-ready, visually engaging, and semantically sound.\nYou’ll also gain insight into best practices for layout, spacing, and accessibility, ensuring your websites are not only beautiful but also user-friendly and inclusive. The course emphasizes clean code, semantic HTML, and modular design principles that scale across projects.\nBy the end, you’ll have a polished website and the skills to apply Bootstrap to any future project with confidence, precision, and purpose. You’ll be equipped to tackle freelance gigs, contribute to team projects, or build your own portfolio with professional-grade results.\nWhether you’re aiming to become a front-end developer or simply want to enhance your web design toolkit, this course provides the practical foundation you need to succeed.",
      "target_audience": [
        "This course is designed for beginners and early-stage web developers who want to build responsive websites using Bootstrap without getting overwhelmed by theory or bloated templates.",
        "Aspiring web designers looking to create polished portfolio sites with modern layout techniques.",
        "Freelancers and creatives who want to deliver client-ready websites with clean, responsive design.",
        "Students and hobbyists are eager to learn Bootstrap by building real-world projects, one component at a time.",
        "Anyone with basic HTML/CSS knowledge who’s ready to level up their skills and bring structure, style, and interactivity to their web pages."
      ]
    },
    {
      "title": "Design Android interface from A - Z",
      "url": "https://www.udemy.com/course/design-android-interface-from-a-z/",
      "bio": "Android interface design, Material Design.",
      "objectives": [
        "Understand the fundamental principles of user-centered design and apply them to the development of Android interfaces.",
        "Become proficient in using the Android Studio development environment and the XML language to create custom views, layouts, and animations.",
        "Learn how to work with the Material Design guidelines and apply them to create visually appealing and intuitive interfaces.",
        "Develop the ability to create interactive interfaces using touch gestures, animations, and transitions, and implement user interactions and navigation within th"
      ],
      "course_content": {
        "Introduction": [
          "Style and Theme"
        ],
        "Material Design": [
          "Material Design is a design system developed by Google that provides a visual"
        ],
        "Colors.xml": [
          "Colors.xml"
        ],
        "Themes.xml": [
          "Themes"
        ],
        "Applying the custom style": [
          "Applying the custom style"
        ],
        "Night Mode": [
          "Night Mode"
        ],
        "Landscape Variation": [
          "Landscape Variation"
        ],
        "Lesson summary": [
          "Lesson summary"
        ]
      },
      "requirements": [
        "Familiarity with Java programming language",
        "Basic understanding of object-oriented programming concepts",
        "Experience with an integrated development environment (IDE)",
        "Access to a computer running Windows, macOS, or Linux operating system",
        "Installation of Android Studio development environment."
      ],
      "description": "The course \"Design Android interface from A - Z\" provides an overview of how to design user-friendly and user-friendly interfaces for Android applications. The course covers the foundations of user-based design and uses the XML language and Android Studio development environment to create views, local layouts, and custom image operations.\n\n\nThrough hands-on exercises and projects, students will gain hands-on experience in implementing Material design principles to create easy-to-use and engaging interfaces. The course will also cover the development of interactive interfaces using touch, animation and transitions, as well as user interaction and navigation development in Android applications.\n\n\nBy the end of the course, students will have a solid background in Android interface design and be able to create high-quality user-based Android applications.\n\nThis course is suitable for both novice and intermediate developers with a basic knowledge of the Java programming language and browser-oriented object concepts.\n\nThe course also provides students with the knowledge of intuitive interface design and effective use of interface elements such as buttons, menus, tabs, etc. Students will also learn about using APIs to create interface effects and operations.\n\n\nFinally, the course will help students better understand how to optimize the interface for use on different devices, including mobile phones and tablets.\n\n\nWith the completion of this course, students will be able to design and develop Android applications with easy to use and user-friendly interfaces.",
      "target_audience": [
        "This course is intended for developers who are interested in designing engaging and user-friendly interfaces for Android applications. It is suitable for both beginner and intermediate developers who have a basic understanding of Java programming language and object-oriented programming concepts. The course content is valuable for those who want to enhance their skills in the area of user experience design and learn how to apply Material Design guidelines to create visually appealing and intuitive interfaces. This course will also benefit those who want to gain hands-on experience with creating interactive interfaces and implementing user interactions and navigation within Android applications. Overall, this course is designed for developers who are looking to expand their skill set and create high-quality, user-centered Android applications."
      ]
    },
    {
      "title": "Build Flutter App with ChatGPT: AI‑Powered Mobile Developmet",
      "url": "https://www.udemy.com/course/build-flutter-app-with-chatgpt-aipowered-mobile-developmet/",
      "bio": "Master Flutter & Dart while using ChatGPT to write code, debug errors, and design UIs. Build production-ready Apps",
      "objectives": [
        "Use ChatGPT as a coding assistant to write, debug, and optimize Flutter code faster",
        "Build real-world mobile apps using Flutter and Dart—from scratch to production-ready",
        "Design beautiful, functional user interfaces with AI-powered suggestions and tools",
        "Master Flutter basics (widgets, state management, navigation) while leveraging AI for complex logic"
      ],
      "course_content": {},
      "requirements": [
        "Basic Flutter Development knowledge is Plus"
      ],
      "description": "Are you ready to supercharge your mobile app development skills with the power of AI?\nWhat if you could build apps faster, design beautiful UIs effortlessly, and let AI handle the heavy coding for you?\nWelcome to “Flutter Mobile App Development with ChatGPT”—a complete course that shows you how to merge Flutter’s flexibility with ChatGPT’s AI magic.\n\n\nThis course is designed for everyone—whether you’re a complete beginner in app development or a seasoned coder curious about AI workflows.\n\n\nYou’ll learn to:\nUse ChatGPT as your personal coding assistant to write code, debug errors, and design user interfaces.\nBuild a full-featured Flutter app with screens like Splash, Sign Up, Sign In, OTP Verification, Product pages, and more.\nCreate app graphics and UI designs with AI tools—no need for complex Photoshop skills!\n\n\nBy the end of this course, you’ll not only master Flutter basics but also know how to use AI tools to:\nSpeed up development\nSolve coding challenges\nBring your app ideas to life faster than ever\nBring your app ideas to life faster than ever\n\n\n> Who this course is for\nBeginners who want to learn mobile app development step by step\nDevelopers seeking to boost productivity using AI like ChatGPT\nTech enthusiasts curious about AI’s role in coding and design\nDesigners or entrepreneurs wanting to prototype apps without deep coding knowledge\nAnyone eager to build Android and iOS apps with Flutter\n\n\n> Why take this course?\nHands-on learning: Build real apps, not just theory\nAI + Flutter = Faster results: Save hours of Googling and debugging\nFuture-proof skills: Stay ahead with AI-integrated development\nTaught by a professional: I’m Hafiz Shahzad, a mobile app developer based in Dubai with years of experience building production-ready apps\n\n\n> What’s included?\n2+ hours of HD video content\nDownloadable resources & code files\nLifetime access\nCertificate of Completion\nReal-world app project\n\n\nEnroll now and start building smarter apps today!\nStop spending weeks stuck in tutorials. With Flutter + ChatGPT, you’ll build apps faster, smarter, and better.\nClick “Enroll Now” and join thousands of learners building the future of mobile apps!",
      "target_audience": [
        "Beginner developers, Students , Designers or tech enthusiasts"
      ]
    },
    {
      "title": "Build Music Player with React Native Production Ready",
      "url": "https://www.udemy.com/course/mastery-react-native-build-a-dynamic-music-player-app/",
      "bio": "Unlock React Native Proficiency, Create Stunning UIs, Implement Advanced Features, Mastery React Native Track Player",
      "objectives": [
        "Mastery of React Native by developing a fully functional music player application with theme integration.",
        "Implementation of advanced features such as player controls, dynamic data binding, and theme customization.",
        "Understanding of React Native concepts and best practices through hands-on project-based learning.",
        "Proficiency in building scalable and robust mobile applications using React Native."
      ],
      "course_content": {
        "Introduction and Music Player Application Demonstration": [
          "Introduction And App Demo"
        ],
        "Initial Setup and Navigation": [
          "React Native Project Setup",
          "Stack Navigation Setup"
        ],
        "Designing the Home Screen": [
          "Crafting a Captivating Home Screen And Creating The Color Constants",
          "Implementing React Native Vectors Setup",
          "Header Component",
          "Font Family Setup And Creating The Constants Of Font Size"
        ],
        "Advanced Navigation (Drawer Navigation) Setup and Design The Floating Player": [
          "Home Screen Design Continued",
          "Floating Player Design"
        ],
        "Designing The Floating Player": [
          "Floating Player Slider And React Native Gesture Handler and Reanimated Setup",
          "Moving Animated Text on Floating Player Like Real Worlds Apps"
        ],
        "Exploring Additional Features and Design Music Player Screen": [
          "Like Songs and State Management with AsyncStorage",
          "Music Player Screen Header Component Designing",
          "Music Player Screen Title And Cover Image UI",
          "Player Screen Continued"
        ],
        "Conclusion and Next Steps": [
          "Custom Drawer Navigation",
          "Creating Sample Data for App Continued",
          "Data Mapping on Home Screen Continued",
          "Track Player Setup and Play Single Song Continued",
          "React Native Track Player Play Song in Queue Continued",
          "Use Setup Player and Remote Service React Native Track Player Continued",
          "Player Screen Data Binding",
          "Player Repeat Mode, Shuffle, Progress Bar, and Duration Text"
        ],
        "Additional Features and Testing": [
          "Like Songs, AsyncStorage, and Zustand",
          "Light Theme and Dark Theme App Testing"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and React concepts.",
        "Familiarity with mobile app development concepts would be beneficial but not required.",
        "Access to a computer with internet connectivity for downloading necessary software and tools.",
        "A willingness to learn and experiment with React Native development."
      ],
      "description": "Embark on a transformative learning journey where theory seamlessly integrates with practice, empowering you to translate concepts into impactful solutions. This immersive course goes beyond traditional learning approaches, offering a dynamic blend of theoretical insights and practical applications through hands-on projects and exercises.\n\n\nDiscover the art of crafting robust, high-performance mobile applications that captivate users with React Native, as you:\n- Gain a comprehensive understanding of React Native's foundational concepts, including its component-based architecture, state management solutions, and advanced navigation techniques.\n- Explore a myriad of libraries, tools, and features integral to React Native development, such as Redux for state management, React Navigation for navigation solutions, and AsyncStorage for local data persistence.\n- Learn to integrate third-party libraries for enhanced functionality, leverage React Native's powerful UI components for visually stunning designs, and implement advanced features like animations and gestures.\n- Dive into practical application, experimenting with various techniques and methodologies to refine your skills and expand your development toolkit.\n- By the course's conclusion, emerge as a proficient React Native developer, equipped with the knowledge, skills, and confidence to tackle real-world projects with finesse.\n\n\nJoin us on this transformative learning experience and unlock the full potential of React Native as you embark on a journey towards mastery in mobile app development.",
      "target_audience": [
        "JavaScript developers interested in mastering React Native for mobile app development.",
        "React developers looking to expand their skills into mobile app development.",
        "Students and professionals seeking practical experience in building real-world applications with React Native.",
        "Anyone passionate about music and mobile app development, eager to create their own music player app."
      ]
    },
    {
      "title": "Master SwiftUI App Development for iOS",
      "url": "https://www.udemy.com/course/master-swiftui-app-development-in-ios/",
      "bio": "Get In-Depth and Hands On Learning By Building A Ton Of Apps From A Proven Trainer & App Developer",
      "objectives": [
        "Become proficient with XCode",
        "Become proficient with the Swift programming language",
        "Become proficient with UI design using the newest SwiftUI framework",
        "Get your app published on the app store",
        "Get a job as an iOS app developer"
      ],
      "course_content": {
        "Introduction": [
          "Lets Begin!",
          "App #1: Hello World",
          "App #2: A Simple Calculator"
        ],
        "Page Navigation": [
          "Page Navigation",
          "App #3: Page Navigation"
        ],
        "iPadOS": [
          "iPadOS, PencilKit, TextField's & WebKitViews",
          "App #4: Drawing App Using PencilKit"
        ],
        "Sound And Animations": [
          "Sounds & Animations",
          "App #5: Music Player App With Animations"
        ],
        "Lists": [
          "Lists",
          "App #6: List App With Both Basic and Custom List Cells",
          "Advanced List",
          "App #7 : Advanced List App with Cell Swiping, Cell Searching and Expanding"
        ],
        "Core Data, UserDefaults & Gestures": [
          "Core Data, UserDefaults & Gestures",
          "App #8: Food management app using Core Data, UserDefaults and Gestures"
        ],
        "Remote Database Parsing Using JSON, MySQL, PHP and SwiftUI": [
          "Remote Database Parsing Using JSON, MySQL, PHP & SwiftUI",
          "App #9: Creating a MySQL Database using PHPMyAdmin",
          "App #10: PHP & JSON",
          "App #11: JSON Downloading & Parsing in a SwiftUI App"
        ],
        "Mixing UIKit & SwiftUI": [
          "Mixing UIKit & SwiftUI",
          "App #12: Mixing Swift & SwiftUI"
        ],
        "Gaming": [
          "Gaming in iOS",
          "App #13: Creating a SpriteKit Game in SwiftUI 2"
        ],
        "MapKit": [
          "Exploring MapKit in SwiftUI 2",
          "App #14: Searchable Map with Turn By Turn Navigation"
        ]
      },
      "requirements": [
        "Have some coding knowledge in another programming language.",
        "Have access to a Mac with XCode installed",
        "Device (iPhone, iPad or iPod Touch) Optional"
      ],
      "description": "Get on the edge of development and be ahead of the curve with this brand new way to build iOS apps, SwiftUI!\nOur philosophy is simple - keep the theory at a minimum and focus heavily with hands on learning.\nWho better to learn how to build iOS apps than from a seasoned teacher and accomplished real world app developer.  In this course, we take your existing programming knowledge of other languages and move cutting edge SwiftUI app development.  We get right into the meat and potatoes and start building apps step by step.\nDon't waste your time with other courses.  The materials here are based on our live courses taught to 1000's students who have paid thousands of dollars to be there so you're not getting second rated material and you will retain everything as we reinforce the material into you.\nSure anyone can teach you to build an app, but will your app satisfy Apple's rules and allow you to get published.  Don't waste your valuable time learning lessons and designs that Apple may reject.\nWe made the mistakes in the past so that you don't have to in the future!\nWhat you will get:\nThe experience of building tons of apps while satisfying Apple's design guidelines.\nTake your beginner (or expert for that matter) programming experience and turn it into expert SwiftUI development.\nLearn to build key features in the Apple ecosystem including:\nThe basics of SwiftUI\nGaming using SpriteKit\nMaps & Searchable Directions\nApple Watch Connectivity\nApple Watch Complications\nDrawing using Apple Pencil\nDownloading data off the internet\nMusic playback\nCore Data\nJSON parsing\nand much more!\nLearn the basics of app design - we give you tips and tricks on how to make your app look beautiful so that your future users will enjoy your eye-candy.\n\n\nWhat are you waiting for?  Get started today!",
      "target_audience": [
        "Anyone looking to publish their own apps on the app store or get a job as an iOS developer"
      ]
    },
    {
      "title": "Leaflet Mobile GIS Mapping",
      "url": "https://www.udemy.com/course/mobile-gis-leaflet-mapping/",
      "bio": "Using Flutter Mobile UI Framework",
      "objectives": [
        "Integrate Flutter with Leaflet",
        "Build Cloud Based Mobile GIS App",
        "Use the OpenRoute Service API",
        "Implement Flutter Asynchronous Programming Features",
        "Use Backendless to Store data and Authenticate Users",
        "Create Polygons, Circles, Rectangles, Lines, Markers and Popups",
        "Create GeoJson Types",
        "Add Shapes and GeoJSON Types to Maps",
        "Draw Routes between two points on maps",
        "Get Route Directions, Distance and Duration"
      ],
      "course_content": {
        "Introduction": [
          "About the Course",
          "Course Outline",
          "How the App will work",
          "Technologies and Skills Application"
        ],
        "Introduction to Leaflet": [
          "Leaflet Overview",
          "Creating a Map",
          "Adding Shapes and Events",
          "GeoJson Introduction",
          "Adding GeoJson Objects to the Map",
          "Open Route Service",
          "Draw Six corner GeoJson Polygon"
        ],
        "Backendless mBaaS": [
          "Signing Up",
          "Creating and Configuring the App",
          "Users Management",
          "Rest API Console Usage",
          "Files Management",
          "Creating App Tables"
        ],
        "User interface Implementation": [
          "Creating a Login Screen",
          "Creating a Registration Menu Screen",
          "Creating a Registration Screen",
          "Creating a Customer Menu",
          "Creating a Settings Screen",
          "Creating an Order Management Screen",
          "Creating a WebView",
          "Creating a Farmer Menu Screen",
          "Creating an Inventory Management Screen",
          "Resolve the Pixel overflow problem"
        ],
        "Helper and Customer Model Classes Implementation": [
          "Creating Helper Classes",
          "Creating User Class",
          "Creating Customer Class and a getFarmer Method",
          "Creating a Save Method",
          "Helper Class"
        ],
        "Model Farmer Class Implementation": [
          "Create the Farmer Class",
          "Creating getFarmer Methods",
          "Creating an order Method",
          "Creating an updateQtyBalance Method",
          "Creating a post Method",
          "Creating a save Method",
          "Modify Post Method to reduce or increase Milk quantities"
        ],
        "Leaflet Map Class Implementation": [
          "Creating the Map Class and createMap method",
          "Creating Drawmarker Methods",
          "Creating a Drawroute Method",
          "Creating an onEachFeature Method",
          "Create Application User Support Marker"
        ],
        "Customer and Farmer Map Pages Implementation": [
          "Creating a Customer Web page and JS Variables",
          "Creating a getCustomer Function",
          "Creating a getRoute Function",
          "Creating an openpopup Function",
          "Creating the Farmer web Page and a getFarmer Function",
          "Draw the Application User Support Markers in the Maps"
        ],
        "Finalising the Mobile Application": [
          "Adding Logic to the Registration Screen I",
          "Adding Logic to the Registration Screen II",
          "Adding logic to the Login Screen I",
          "Adding logic to the Login Screen II",
          "Adding Logic to the Settings Screen I",
          "Adding Logic to the Settings Screen II",
          "Adding Logic to the Settings Screen III",
          "Adding Logic to the Settings Screen IV",
          "Adding Logic to the Settings Screen V",
          "Adding Logic to the Inventory Management Screen I",
          "Adding Logic to the Inventory Management Screen II",
          "Adding Logic to the Order Management Screen I",
          "Adding Logic to the Order Management Screen II",
          "Adding Logic to the WebView",
          "Add Radio Widgets to increase or reduce Milk Inventory Quantities"
        ],
        "Full Source Code": [
          "Full Source Code"
        ]
      },
      "requirements": [
        "Basic Knowledge of Geographic Information Systems (GIS)",
        "Knowledge of Android Studio, Visual Studio Code, Android Emulators, iPhone Simulators",
        "Knowledge of Flutter SDK UI toolkit, Dart programming, Javascript, HTML, CSS, JSON, SQL"
      ],
      "description": "Are you are a Full Stack Mobile App Developer or GIS expert that would like to build aesthetically pleasing interactive cross-platform Mobile GIS Mapping Applications quickly? If so, then you have come to the place you have been looking for.\nWhy use Leaflet and Flutter to build  Mobile GIS Mapping Applications? Leaflet is a JavaScript Library with a small footprint of about 39KB in size that has the mapping features that you will need in your mapping projects. It was designed with simplicity, performance and usability in mind and works very well on mobile and desktop platforms. These characteristics have made Leaflet to be trusted by companies that include Flickr, Facebook, The Washington Post, and Foursquare.\nFlutter uses an interface declarative language that will enable you to develop sleek and fluid user interfaces quickly using google material design tools. In addition, it uses a single code base for  Android and iOS platforms that will save you time and effort without sacrificing the performance of the application. You will also increase the time to the market speed because of Hot Reload feature that applies changes almost instantly, without losing the current application state and because the framework provides a  variety of ready-to-use widgets.\nA practical approach has been used in delivering the course by developing a mobile Dairy application to link Dairy Farmers and Customers. The application will be built from scratch line by line. Furthermore, the course has been designed with engaging assignments at the end of sections that have a component of coding. The approach is aimed at providing a hands-on mastery of Leaflet GIS mapping skills using Flutter. The Full Source code for the Dairy App is available for download in the second  last lecture.\nBy the end of the course, you will have acquired practical mobile GIS Leaflet mapping skills that will enable you to develop applications that will include Contact Tracing, Transport Routes Mapping, Property Management, Crime Mapping and Customer Location",
      "target_audience": [
        "Developers and GIS experts who would like to build cross platform mobile friendly Interactive Mapping Applications quickly using Leaflet and Flutter"
      ]
    },
    {
      "title": "Flutter and Firebase: Learn by developing Contacts app",
      "url": "https://www.udemy.com/course/flutter-and-firebase/",
      "bio": "Build contacts list app with Firebase at backend. Call, SMS, and WhatsApp functionality in app.",
      "objectives": [
        "Setup Flutter Development Environment",
        "Integrate Firebase with Flutter",
        "Implement call, SMS and WhatsApp functionality in Flutter",
        "Export data from Excel/CSV format and Google Sheets to Firebase",
        "Populating Widgets (ListView, Chip) from Firestore Database"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Introduction to Phone Directory App",
          "Demo of the target app"
        ],
        "Setting up the Flutter Development Environment": [
          "What is Flutter?",
          "Setup Flutter Development Environment",
          "Layout of App User Interface",
          "Creating User Interface in Flutter",
          "Overview of UI"
        ],
        "Integrating Firebase in Flutter": [
          "Setup Firebase Project",
          "Read Data from Firebase Firestore Database in Flutter",
          "Refining the User Interface"
        ],
        "Implementing Call and Message Functionality": [
          "Make Phone Call in Flutter",
          "Send SMS in Flutter",
          "Send WhatsApp message in Flutter"
        ],
        "Export Data from Excel/CSV to Firebase": [
          "Export Data from Excel/CSV to Firebase",
          "Read Data from Google Sheets in Flutter",
          "Export Data from Google Sheets to Firebase"
        ],
        "Populating Dropdown and Chips Widgets from Firebase": [
          "Populating Chips Widgets from Firebase Firestore Database",
          "Populating DropdownButton from Firebase Firestore Database",
          "Populate Chips Widgets from Firebase (Method#2)",
          "Source code on Github"
        ]
      },
      "requirements": [
        "Basic Programming Concepts"
      ],
      "description": "If you want to learn Flutter and add Firebase Firestore Database functionality in it, this course is for you.\nCourse Objective is to develop a contacts list app for Android and iOS. Uniqueness of this contacts app is that the user don't need to maintain contact list of the company/organization him/herself but rather it is maintained at single central location, updated at one point and all contact lists on user device are updated automatically.\nThe app uses Firebase Firestore Database at the backend.\nAfter completing this course you will be able to write any Flutter apps with Firebase Firestore integration.\nThe course is a hands on tutorial using Android Studio.\nCourse is taught in the following sequence:\nIntroduction to Course and Contacts App\nSetting up Flutter Development Environment\nIntegrating Firebase in Flutter\nImplementing phone call, sending text and WhatsApp message in Flutter\nExporting Excel/CSV data to Firebase Firestore Database\nExporting data from Google Sheets to Firebase Firestore Database\nPopulate Widgets from Firebase Firestore Database\nWhen course is finished you will get a complete contact list app that can be used for calls, sending SMS text and WhatsApp messages.\nThe course is developed by experienced Flutter developer. This app is in use by few organizations.\nHope you will enjoy the course.\nBest of Luck!",
      "target_audience": [
        "Beginners in Flutter who want to use Firebase in Flutter",
        "Flutter developers who want to learn use of external data sources"
      ]
    },
    {
      "title": "The FAANG Coding Challenge Vault",
      "url": "https://www.udemy.com/course/the-faang-coding-challenge-vault/",
      "bio": "The Only FAANG Prep Course That Teaches You What’s Really Asked",
      "objectives": [
        "Solve real-world coding challenges commonly asked in FAANG technical interviews.",
        "Break down complex algorithmic problems using proven step-by-step strategies.",
        "Develop reusable patterns for solving recursion, dynamic programming, and graph problems.",
        "Strengthen your understanding of core data structures like arrays, stacks, queues, and trees.",
        "Practice coding under time constraints to simulate real interview pressure.",
        "Recognize and implement optimal solutions using time and space complexity analysis.",
        "Improve problem-solving speed, clarity, and confidence in coding assessments.",
        "Learn how to approach unfamiliar problems using a repeatable, structured method.",
        "Build the mental discipline and strategy needed to excel in six- and seven-figure coding interviews."
      ],
      "course_content": {
        "Coding assesment explanation -- introduction": [
          "What Is a Coding Assessment? | Mastering the FAANG Gateway"
        ],
        "Coding Challeenges": [
          "Merge Character Alternately",
          "Pointers and Loops",
          "Binary Tree Right Side View",
          "Palindromic Subsequence",
          "Rank Teams by Votes",
          "Spiral Matrix",
          "Reorganizing a String",
          "Group Angrams",
          "Number of Islands",
          "Binary Tree Maximum Path Sum",
          "Diameter of a Binary Tree",
          "Sub Array Less Than K",
          "LRU Cache",
          "Make Valid Parentheses",
          "Conlusion"
        ]
      },
      "requirements": [
        "Solid understanding of Swift fundamentals (variables, functions, optionals, closures).",
        "Familiarity with Xcode and its basic workflow.",
        "Experience working with arrays, dictionaries, sets, and other core Swift collections.",
        "Basic knowledge of control flow: if statements, loops, and switch cases.",
        "Ability to read and write Swift functions and work with value/reference types.",
        "Some experience solving basic coding problems or algorithms in Swift.",
        "A serious mindset and the willingness to train like you're prepping for a six-figure role."
      ],
      "description": "Stop Struggling with Glider and LeetCode Challenges—Start Mastering Them\nThis isn’t theory. It’s not fluff. And it’s definitely not another endless dump of problems with no real guidance.\nThe FAANG Coding Challenge Vault is built specifically for developers who are smart, experienced, and motivated—but still hitting walls with technical interviews.\nMaybe you’ve been writing code on the job for years, but those timed challenges trip you up.\nMaybe you're self-taught and never quite “got” recursion, binary trees, or graph traversal.\nOr maybe you’re brilliant, pivoting into tech, and just need a clear path to get past the final hurdle.\nThis course breaks it all down for you. Step by step. No ego. No jargon. No talking over your head. Just clear explanations, real patterns, and practical walkthroughs of the exact coding problems being asked right now at companies like Google, Amazon, and Meta.\n\n\nYou’ll learn:\nHow to recognize patterns that repeat in top-tier interviews\nHow to approach problems under pressure and avoid panic\nHow to truly understand recursion, trees, and dynamic programming—without memorizing\nHow to think and communicate like an engineer at a top company\nAnd here’s the best part:\nWe don’t just show the solution—we explain why it works, how to think through it, and how to adapt it to variations you’ll see in real interviews.\nYou don’t need a $15,000 bootcamp. If you’re aiming for a six- or seven-figure role, your journey starts right here—with practical, real-world coding prep that actually gets you hired.\nWhether you're preparing for your first technical interview or trying to level up for a senior engineering role, this course will give you a massive edge.\nSkip the gimmicks. Get the training that actually works—and join the thousands of serious, motivated engineers already leveling up their careers worldwide today.",
      "target_audience": [
        "iOS developers preparing for technical interviews at top tech companies.",
        "Swift programmers aiming to master algorithmic thinking and coding challenges.",
        "Junior developers looking to break into mid-level or senior iOS roles.",
        "Engineers who want to practice real-world interview questions used by FAANG companies.",
        "Self-taught developers seeking structure and expert guidance on solving hard problems.",
        "Bootcamp grads or CS students preparing for whiteboard-style interviews.",
        "Mobile engineers who want to sharpen their problem-solving speed and clarity.",
        "Anyone tired of watered-down practice problems and ready for elite-level preparation."
      ]
    },
    {
      "title": "Learning iOS 7. Build iPhone & iPad Apps A IOS 7 Tutorial",
      "url": "https://www.udemy.com/course/iphone-ipad-apps-with-ios-7/",
      "bio": "Learn How To Create iOS 7 iPad / iPhone Apps Quickly. A Comprehensive iOS 7 Training Course From Infinite Skills",
      "objectives": [
        "Everything you need to develop iOS apps for the iPhone and iPad"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 So You Want To Go Native?",
          "0102 What Should You Expect From This Course",
          "0103 How To Access Your Working Files"
        ],
        "The View From The Top": [
          "0201 Apps, Apps, Apps - What Users Expect",
          "0202 Web Development Vs. Native",
          "0203 Learning To Love Objects, Interfaces And Delegates",
          "0204 The iOS SDK",
          "0205 Registering With Apple As An iOS Developer"
        ],
        "Hello World": [
          "0301 Your First iOS App - Creating A Project",
          "0302 Adding Controls",
          "0303 Completing Hello World",
          "0304 Using XCode",
          "0305 Understanding Objective C - Part 1",
          "0306 Understanding Objective C - Part 2"
        ],
        "User Interfaces - The Basics Of UIKit": [
          "0401 Windows And Views",
          "0402 Interface Builder - Part 1",
          "0403 Interface Builder - Part 2",
          "0404 Exploring UILabel - Part 1",
          "0405 Exploring UILabel - Part 2",
          "0406 Exploring UIButton - Part 1",
          "0407 Exploring UIButton - Part 2",
          "0408 Exploring UISegmentedControl",
          "0409 Exploring UISlider",
          "0410 Exploring UISwitch",
          "0411 Exploring UIProgressView",
          "0412 Exploring UIStepper",
          "0413 Exploring UIActivityIndicator",
          "0414 Exploring UIImageView",
          "0415 Exploring UIDatePicker",
          "0416 Exploring UIPageControl",
          "0417 Exploring UIPicker",
          "0418 Exploring UITextView",
          "0419 Review"
        ],
        "A List For Everything - Tables View": [
          "0501 Exploring UITableView - Part 1",
          "0502 Exploring UITableView - Part 2",
          "0503 Exploring UITableView - Part 3",
          "0504 Exploring UITableView - Part 4"
        ],
        "More Controls": [
          "0601 Responding To Alerts",
          "0602 Intro To WebView",
          "0603 Driving UIWebView",
          "0604 Implementing UIWebView Navigation",
          "0605 MapView",
          "0606 UICollection View"
        ],
        "Advanced View Controllers": [
          "0701 Navigation Controller",
          "0702 Exploring UITabBar",
          "0703 Exploring UIToolbar"
        ],
        "Advanced Features": [
          "0801 Geolocation",
          "0802 Going Async",
          "0803 Getting Social",
          "0804 Reminders And Alarms",
          "0805 Accessing The File System"
        ],
        "Data Storage": [
          "0901 XML And JSON",
          "0902 NSDictionary File I/O",
          "0903 Databases",
          "0904 SQLite Walkthrough",
          "0905 Cloud Storage"
        ],
        "Talking To The Cloud": [
          "1001 Web Connectivity",
          "1002 Becoming A Web Server"
        ]
      },
      "requirements": [
        "A basic understanding of programming"
      ],
      "description": "This Learning To Build iOS Apps training course from Infinite Skills will teach you about the world of iPhone and iPad App development and how to use xCode and Objective-C to create a functional IOS App. This tutorial is designed for the absolute beginner, and no previous iPhone / iPad App development experience is required.\n\nYou will start with an introduction to iOS and the SDK. The course then jumps right into teaching you to create your first functional Mobile App. As the lessons progress, you will cover topics such as: using the UIKit to build your interface, exploring the UITableView, implementing UIWebView navigation, and a number of advanced view controllers and features. This video tutorial also covers Geolocation, working with the social features of iOS, and how to communicate with the Cloud. You will also work with the iOS Dev Center and learn how to submit your completed iPhone / iPad App for inclusion in the iTunes App store.\n\nOnce you have completed this computer based training course, you will have developed the necessary skills required to create your own iOS App and submit it to the iTunes store for millions of people to download and enjoy. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers, Developers and Marketers"
      ]
    },
    {
      "title": "Swift-Charts framework with SwiftUI",
      "url": "https://www.udemy.com/course/swift-charts-framework-with-swiftui/",
      "bio": "Swift-Charts: Effortless Data Charting for SwiftUI",
      "objectives": [
        "Getting Started with Swift Charts: Introduction to charting libraries and their importance in data visualisation",
        "Integrating Charts into SwiftUI: Step-by-step instructions on how to integrate a Charts into a SwiftUI project.",
        "Customisation and Styling: Learn how to customise the appearance and styling of charts to match your app's design.",
        "Data Binding and Interaction: Understand how to bind chart data to your SwiftUI views and Implement interactive features such as tapping on the charts."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Bar Chart": [
          "Bar Chart",
          "Basic Bar Chart",
          "Stacked Bar Chart",
          "Customising the Stacked Bar Chart",
          "Group Bar Chart",
          "One D Bar Chart",
          "Interval Bar Chart",
          "Mastering Bar Charts: A Comprehensive Quiz for iOS Developers"
        ],
        "Line Chart": [
          "Line Chart",
          "Basic Line Chart",
          "Group Line Chart",
          "Step Chart",
          "Mastering Line Charts: A Comprehensive Quiz for iOS Developers"
        ],
        "Point Chart": [
          "Point Chart",
          "Point Chart",
          "Rectangle Chart"
        ],
        "Area Chart": [
          "Area Chart",
          "Area Chart",
          "Stacked Area Chart",
          "Range Area Chart"
        ],
        "Pie Chart": [
          "Pie Chart",
          "Pie Chart",
          "Donut Chart"
        ],
        "Custom Charts": [
          "Bar Chart With Point Chart",
          "Bar Chart with Rectangle Chart",
          "Line Chart with Area Chart",
          "Line Chart with Point Chart",
          "Line Chart with Gradient",
          "Candlestick Chart"
        ]
      },
      "requirements": [
        "Basic familiarity with SwiftUI and iOS app development fundamentals. Requirements: A Mac computer running Xcode for hands-on coding exercises."
      ],
      "description": "Are you ready to take your SwiftUI skills to the next level by mastering data visualization and charting? Look no further! Welcome to the comprehensive \"Swift-Charts Framework with SwiftUI\" course.\n\n\nIn today's data-driven world, the ability to present information effectively through charts and graphs is a critical skill for app developers. Whether you're building a financial app, fitness tracker, or any application that relies on data representation, Swift-Charts is the perfect tool to help you create beautiful and interactive charts with ease.\n\n\nWhat you'll learn:\n\n\n1. SwiftUI Fundamentals: We'll start with a brief recap of SwiftUI basics for those new to the framework. If you're already familiar with SwiftUI, this will serve as a great refresher.\n\n\n2. Swift-Charts Integration: You'll learn how to seamlessly integrate the Swift-Charts framework into your SwiftUI projects, allowing you to create a wide range of chart types, from line charts to pie charts.\n\n\n3. Customization: Discover how to customize your charts to match your app's branding. Change colors, styles, and labels to create charts that are uniquely yours.\n\n\n4. Interactive Charts: Learn how to make your charts interactive. Enable zooming, panning, and tooltips, ensuring your users can explore data intuitively.\n\n\n5. Real-World Applications: We'll explore real-world examples, such as tracking financial data, visualizing workout progress, and monitoring weather trends.\n\n\n6. Data Integration: Understand how to fetch and integrate data from various sources, including JSON files and online APIs, to dynamically update your charts.\n\n\n7. App Deployment: Explore the process of integrating your Swift-Charts-enhanced SwiftUI app into your deployment pipeline.\n\n\nWho should take this course:\n\n\n- SwiftUI developers looking to expand their skills into data visualization.\n- App developers who want to create professional and visually appealing charts.\n- Anyone interested in building applications that require data representation and charting.\n\n\nBy the end of this course, you'll be equipped with the knowledge and skills to create stunning charts and graphs within your SwiftUI apps.\n\n\nEnroll now and take your SwiftUI app development to the next level with Swift-Charts. Join us on this journey, and let's transform your app's data into engaging, insightful, and beautiful visualizations.\n\n\nDon't wait; start charting your path to success today!",
      "target_audience": [
        "This course is designed for intermediate iOS developers looking to elevate their SwiftUI skills by seamlessly integrating dynamic charts into their applications for enhanced data visualization and user engagement. It's also suitable for app designers and entrepreneurs seeking to create visually appealing and data-driven mobile interfaces."
      ]
    },
    {
      "title": "Build Godzilla AR With Unity3D & New Immersive Technologies.",
      "url": "https://www.udemy.com/course/build-godzilla-ar-with-unity3d-new-immersive-technologies/",
      "bio": "Learn Fundamentals of Augmented Reality, Unity3D, Unreal Engine, Blender, Convai Artificial Intelligence AR.",
      "objectives": [
        "Introduction to AR",
        "Introduction to AR Hardware,AR in Standalone,AR in Smartphone",
        "Solid augmented assets",
        "Solid augmented assets",
        "Hardware available for AR,Assets in AR",
        "Working with ARCore",
        "AR in shopping, AR in business,AR in gaming,AR in education,AR in healthcare",
        "Setting-up the development environment to design AR applications",
        "Select free and compatible 3D models for designing AR applications",
        "Build and deploy AR applications to mobile phones",
        "Understand the potential of augmented reality for businesses",
        "Understand the potential of augmented reality for businesses",
        "Propose Augmented Reality applications as solutions to real-world problems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What's Inside the Course.": [
          "What's Inside the Giveaway.",
          "How to Avail Giveaway.",
          "Blender 300+ Addons Giveaway."
        ],
        "AR Apps That Will You Learn To Build.": [
          "Godzilla New AR App.",
          "Convai - Conversational AI for Virtual Worlds.",
          "Space AR Marker Based AR App.",
          "Ground Plane And Mid Air AR App.",
          "Heart AR Marker less Augmented Reality App.",
          "Space AR Marker less Augmented Reality App."
        ],
        "Information about Augmented Reality.": [
          "Types of augmented reality and How it works ?"
        ],
        "Getting Started with Installation of Development Setup.": [
          "What is Unity3d and Use of it ?",
          "Create Unity3d Account and See How To Install It On Our PC.",
          "What is Vuforia and How To Create Vuforia Developer Account ?",
          "How To Import Vuforia SDK In Unity3d ?"
        ],
        "Getting Ready to Build Augmented Reality Application.": [
          "Basics of Unity3d.",
          "Download 3D Model For Free and How To Import In Unity3d ?",
          "Create Godzilla AR Unity Project and Import 3D Model.",
          "Configure Vuforia SDK and Setting Up Image Target.",
          "Place 3D Model on Image Target and Testing With Webcam.",
          "Setup Animator Controller For 3D Model.",
          "Import unity VFX Asset In Our Godzilla AR Unity Project.",
          "Add VFX Prefabs On Our 3D Model.",
          "Create New Character Animation With Unity VFX.",
          "Add Audio FX To Our Character Animation.",
          "Setup UI and Set Trigger Function For Character Interaction.",
          "Android App Build Setting For Godzilla AR."
        ],
        "Vuforia Mid Air & Ground Plan.": [
          "Vuforia Ground Plan IronMan AR.",
          "Vuforia Mid Air Drone AR."
        ],
        "Godzilla AR Ground Plane.": [
          "Create Unity AR URP project & Setup Vuforia SDK.",
          "Setup Vuforia Ground Plane & Import Godzilla 3D Model.",
          "Setup Animation Controller & Import Unity VFX.",
          "Attach VFX Particle system and audio file on Godzilla 3D Model.",
          "Create New Animation With VFX & Audio."
        ],
        "Convai - Conversational AI for Virtual Worlds.": [
          "What Is Convai & Main Features of Canvai.",
          "Setup Convai Unity Project & Build App.",
          "How To Fix Convai AR Light Issue."
        ],
        "Bonus Video.": [
          "Download Godzilla AR Unity Project and How to Configure it properly.",
          "How To Avail Unity3D 100+ Assets Giveaway."
        ]
      },
      "requirements": [
        "Computer and an internet connection",
        "You just need to have the passion and interest to learn new technologies",
        "No coding experience is needed",
        "Android SmartPhone or an iPhone",
        "Basic programming knowledge will be of Great help"
      ],
      "description": "This course covers below mentioned topics\n\n\n1. Augment Reality basics\n•Introduction to AR\n•Introduction to AR Hardware\n•AR in Standalone\n•AR in Smartphone\n•Augmented Reality vs Virtual Reality – Difference and Similarities\n\n\n2. Augmented Reality-Intermediate\n•AR in shopping\n•AR in business\n•AR in gaming\n•AR in education\n•AR in healthcare\n•Hardware available for AR\n•What are assets in AR\n•Solid augmented assets\n•What is occlusion in AR\n\n\n3. Tracking in AR\n•Outside-in tracking\n•Inside-out tracking\n•Motion tracking\n4. Augmented reality advance\n•Understanding AR environment – features and planes\n•Light Estimation Anchors\n•Introduction to ARCore\n•Fundamental to ARCore\n•AR technical constraints\n•Computer Vision constraints\n•Understanding AR essentials\n•Working with ARCore\n•The 3D barrier\n•Future of AR\n\n\nAugmented Reality is a technology that enhances the real world by affixing layers of digital elements onto it. These elements include computer-generated graphics, sound or video effects, haptic feedback, or sensory projects.\nThe intention behind adding this digital information is to provide an engaging and dynamic customer experience that is enabled with the input received from varied hardware like smart glass, smart lenses, and smartphones.\nAugmented Reality (AR) is often mistaken with Virtual Reality (VR). The main difference between the two is that while Virtual Reality replaces the entire real environment with an artificial one, Augmented Reality is applied in a direct view of an existing real environment and adds elements like sounds, videos, or graphics onto it.",
      "target_audience": [
        "Those who want to marke carreer in Auguemented reality field , will be helpful to buid career in the field.",
        "Unity Developers interested in Augmented Reality platforms",
        "Anyone who wants to develop their own AR Applications",
        "Computer programming students interested in C# programming for building Augmented Reality applications"
      ]
    },
    {
      "title": "Android for Beginners",
      "url": "https://www.udemy.com/course/s2k-android-beginners/",
      "bio": "Expand your prior knowledge of Java to build basic apps for Android devices!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Eclipse vs. Android Studio",
          "Installation(s)",
          "Creating an Emulator",
          "Setting up Your First App"
        ],
        "Hello Android": [
          "Creating an Activity",
          "Creating a Layout",
          "Making Your Activity Layout Interactive",
          "SharedPreferences - Storing App Data"
        ],
        "Splash!": [
          "Creating a Splash Screen",
          "Directing a Splash Screen",
          "Storing More Data",
          "Communicating Between Two Activties"
        ],
        "Finalization": [
          "Debugging Your App",
          "Signing & Exporting Your App",
          "Next Steps"
        ]
      },
      "requirements": [
        "Download the Android Studio software bundle from https://developer.android.com/studio/index.html, but DON'T INSTALL IT! We'll do this in Lecture 3",
        "Know basic Java concepts and how to write Java code"
      ],
      "description": "This course is essentially for people who have prior experience working with Java and would like to expand their horizons to mobile app development.\n\nAndroid is a strong platform for such people, and we will be providing you a good overview and understanding of the basic tools every Android programmer should be able to use.\nAs far as prerequisites are concerned, just be familiar with Java and Java-related terminology, and you'll be good to go!\nThe course is broken into 4 sections - first we'll set you up, then we'll put some content on your screen and save app data. After this, we'll get an app-launching screen (Splash screen) set up, and we'll teach you how to store and access data in your app. Finally, we'll debug and export your app, making it ready for the Play Store!\nThis course should take around less than 5 hours to complete, but if you really want to get something out of it, you might want to watch some of the videos over and over until you completely understand what's going on.",
      "target_audience": [
        "This course is meant for programmers who are generally familiar with Java concepts and code",
        "This course is for newbies looking to learn the basics of an Android app",
        "This course is NOT for people looking for a way to create a next-generation Snapchat"
      ]
    },
    {
      "title": "OWASP Top 10 for Mobile Apps – 2025 Edition",
      "url": "https://www.udemy.com/course/owasp-top-10-for-mobile-apps-2025-edition/",
      "bio": "Secure Android & iOS apps using OWASP Mobile Top 10 2025, MobSF, MASVS, secure coding, and mobile app testing practices",
      "objectives": [
        "Identify and explain each OWASP Mobile Top 10 (2025) security risk in real-world mobile app scenarios.",
        "Apply secure coding practices to mitigate vulnerabilities in Android, iOS, and hybrid mobile apps.",
        "Perform mobile app security testing using tools like MobSF and align with OWASP MASVS standards.",
        "Conduct mobile app risk assessments and build mitigation plans using case studies like HealthPlus Mobile."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "M1 – Improper Credential Management": [
          "M1 – Improper Credential Management",
          "Identify and Mitigate Improper Credential Management in HealthPlus Mobile"
        ],
        "M2 – Insecure Communication": [
          "M2 – Insecure Communication",
          "Evaluate and Secure Data-in-Transit for HealthPlus Mobile"
        ],
        "M3 – Inadequate Supply Chain Security": [
          "M3 – Inadequate Supply Chain Security",
          "Analyze and Secure the Supply Chain for HealthPlus Mobile"
        ],
        "M4 – Insecure Authentication": [
          "M4 – Insecure Authentication",
          "Assess and Strengthen Authentication in HealthPlus Mobile"
        ],
        "M5 – Insufficient Cryptography": [
          "M5 – Insufficient Cryptography",
          "Evaluate and Strengthen Cryptographic Protections in HealthPlus Mobile"
        ],
        "M6 – Insecure Authorization": [
          "M6 – Insecure Authorization",
          "Identify and Fix Authorization Flaws in HealthPlus Mobile"
        ],
        "M7 – Client Code Quality Issues": [
          "M7 – Client Code Quality Issues",
          "Analyze and Strengthen Client Code Quality in HealthPlus Mobile"
        ],
        "M8 – Code Tampering": [
          "M8 – Code Tampering",
          "Assess and Strengthen Anti-Tampering Measures in HealthPlus Mobile"
        ],
        "M9 – Inadequate Privacy Controls": [
          "M9 – Inadequate Privacy Controls",
          "Evaluate and Improve Privacy Controls in HealthPlus Mobile"
        ]
      },
      "requirements": [
        "Basic understanding of mobile app development (Android/iOS) is recommended."
      ],
      "description": "In the rapidly evolving mobile threat landscape, securing your apps is no longer optional—it’s essential. This course, “OWASP Top 10 for Mobile Apps – 2025 Edition,” gives you a practical, step-by-step approach to understanding and mitigating the top mobile security risks as defined by the latest OWASP Mobile Top 10 framework.\nWhether you’re developing for Android, iOS, or hybrid platforms, this course will help you understand how attackers exploit vulnerabilities—and more importantly, how to prevent them. You’ll walk through each of the OWASP Top 10 Mobile risks including improper credential management, insecure communication, weak authentication, insufficient cryptography, and more.\nWe’ll guide you through securing mobile applications using real-world examples from our model app: HealthPlus Mobile, a simulated healthcare app designed specifically for this course. You’ll learn how to detect issues using tools like MobSF (Mobile Security Framework), and implement secure coding practices aligned with OWASP MASVS (Mobile Application Security Verification Standard).\nThis course includes:\nIn-depth coverage of all OWASP Mobile Top 10 (2025 Edition) categories\nHands-on testing, code analysis, and mitigation strategies\nReal-world demonstrations using HealthPlus Mobile\nAutomated security testing in CI/CD environments\nCompliance awareness with GDPR, CCPA, and mobile privacy best practices\nDownloadable checklists, templates, and a final case study project\nBy the end of this course, you’ll be able to:\nIdentify, assess, and mitigate mobile app vulnerabilities\nUse MobSF and OWASP MASVS to evaluate app security\nBuild more secure, privacy-conscious, and resilient apps\nApply security principles directly into mobile SDLC workflows\nPerfect for mobile developers, security testers, DevSecOps engineers, and IT auditors—this course bridges the gap between secure coding and real-world mobile app delivery.\nEnroll now to future-proof your mobile development skills with the OWASP Mobile Top 10 (2025 Edition).",
      "target_audience": [
        "Mobile app developers, DevSecOps engineers, QA testers, cybersecurity students, and tech auditors seeking hands-on mobile security skills."
      ]
    },
    {
      "title": "SwiftUI Design Course- Make Tinder UI",
      "url": "https://www.udemy.com/course/tinder-clone/",
      "bio": "Build functional apps using the newest SwiftUI 2 features announced at WWDC 2020. learn UI design in SwiftUI",
      "objectives": [
        "Features and functionality of new Xcode 12",
        "Using new SwiftUI views for iOS 14",
        "UX UI DESIGN IN SWIFTUI",
        "Quickly building reusable views",
        "New Swift 5 syntax",
        "Using property wrappers and modifiers in SwiftUI",
        "get good at designing your apps"
      ],
      "course_content": {},
      "requirements": [
        "no, i will teach you everything from the basic"
      ],
      "description": "Building real apps is always the most efficient way to quickly learn new software engineering concepts. In this course, you will learn how to use SwiftUI 2 for more than just playing with small prototypes.\n\n\nyou get a complete Tinder design course\nfor now, it includes UI/UX design API/JSON watchOS game and soon the firebase module and ARkit and CoreML modules would be added!!\nYou will be building a functional Tinder clone that has most of the features of the real app. The focus of this course is learning & perfecting SwiftUI concepts. We will be building all of the visual UI components from the Tinder app. We won’t handle networking and we’ll be loading our data locally to show up within the UI.  you'll be able to easily integrate your own networking layer.\nthe course requires iOS 14 and Xcode 12.\nMany lessons can be followed using Xcode 11 and the important concepts learned will still apply to iOS 13. But some views & functionality are only available in iOS 14 using Xcode 12. For example, the ‘Grid’ view is only available in iOS 14+. For iOS 13, you would have to build your own implementation using a combination of VStacks & HStack.\n\nWhat is SwiftUI 2?\nApple has provided this new framework as a way to quickly build beautiful user interfaces for any Apple device using just one set of easy-to-use tools. With the new declarative syntax of SwiftUI, it takes less code to keep your code and design perfectly in sync.\nSwiftUI works seamlessly with new Xcode design tools and significantly speeds up development by showing your code changes in real-time!\nAfter the latest features for iOS 14 announced at WWDC 2020, SwiftUI 2 is even more robust! New views, new functionality, fewer bugs, and faster performance.\n\nNo excuses to skip out on SwiftUI 2 now.\nStart learning today!\n\nThis course is in no way affiliated with Tinder, Inc. No source code of the real Tinder application is ever shown. This code is my interpretation of how I would build the app using SwiftUI 2.\nwho is this course for?\nExperienced developers ready to jump into SwiftUI 2\nBeginner developers learning how to build real applications with SwiftUI 2\nDevelopers looking to practice their design skills\nDevelopers who learn best by building a real project\nWe will create a Food Ordering app with  SwiftUI\nWelcome to Build A Food Ordering IOS App with SwiftUI as a beginner! Course, you will learn a lot of things in this tutorial and as a beginner, it's the perfect path for you to create your very own feature-rich fully functional app in no time, this course is highly edited to save your time and with no irrelevant talk direct coding and only important stuff that is what you are here for obviously\nWho this course is for:\niOS developers who want to learn about the new SwiftUI Framework\nSwift developers who want to learn about SwiftUI Framework\n\nSwiftUI is an innovative, exceptionally simple way to build user interfaces across all Apple platforms with the power of Swift. Build user interfaces for any Apple device using just one set of tools and APIs. With a declarative Swift syntax that’s easy to read and natural to write, SwiftUI works seamlessly with new Xcode design tools to keep your code and design perfectly in sync. Automatic support for Dynamic Type, Dark Mode, localization, and accessibility means your first line of SwiftUI code is already the most powerful UI code you’ve ever written.\nWe know that you're here because you value your time. If you wanted to watch someone's program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can rest assured that the course is carefully thought out and edited. and the videos are fully up to date with the latest versions of Swift and Xcode.\nCheck out the list of topics covered in the course:\nCreating and Combining Views\nBuilding List and Navigation\nBuilding ScrollView in SwiftUI\nUnderstanding State and Binding\nLearning how to Parse JSON\nfood Ordering App in SwiftUI\nMastering Xcode Previews\nBuilding Custom Views with SwiftUI\nProperty Wrappers in SwiftUI\nForms\nSwiftUI for All Devices\nSwiftUI Animations\nSwiftUI 2.0\nSo by the end of the course, you'll completely understand:\nHow to Parse JSON, store and retrieve data from the file.\nControl Structures: Using If/­Else clauses, Switch statements, and logic to control the flow of execution.\n\n\n\nData Structures: How to work with collections, such as arrays and dictionaries.\n\n\nWe have included\n\nAll the knowledge you need to start building any app you want\n\n\nA bundle of design assets\n\nConcepts of Object-Oriented Programming (OOP): The type system, variables, functions and methods, structures, classes, and protocols.\nSwiftUI: How to use Apple's brand new UI framework to create user interfaces programmatically that look good across all Apple products.\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can't understand. Or teachers who have no real-world in-person teaching experience. Your time is precious.\nDon't waste your money\nInside this course, you're getting exactly the same course materials and curriculum as other instructors' 12-week in-person programming Bootcamp. Instead of spending $8000 dollars and taking time off work, save loads of money by getting this course and do it at your own pace!",
      "target_audience": [
        "students who want to work with Apple's latest UI Framework - SwiftUI 2.0",
        "students who want to learn ios development",
        "students who want to learn swift",
        "students who want to learn swiftUI"
      ]
    },
    {
      "title": "Android Basics Course",
      "url": "https://www.udemy.com/course/android-basics-course/",
      "bio": "Android Basics Course Java programming language version",
      "objectives": [
        "Find best android mobile application idea",
        "Create Android mobile application from scratch",
        "Publish your new Android application on markets",
        "Create a marketing website for the new Android application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Full Apps",
          "Introduction To Android Studio",
          "Installing Android Studio",
          "Overview of Android Studio and Main Interfaces for Programmers",
          "Virtual Emulators",
          "Formatting Text",
          "Buttons",
          "Text Inputs",
          "Alert Dialogs",
          "Image Views",
          "Assignment Brief: Currency Converter Lite Version",
          "Currency Converter Lite Version Quiz"
        ]
      },
      "requirements": [
        "Basic Java programming language skill"
      ],
      "description": "In this comprehensive course, you will embark on an exciting journey to learn the intricacies of creating a fully functional Android application from the ground up, utilizing the power of Java programming language. Whether you're a complete beginner or have some programming experience, this course is designed to equip you with the essential skills needed to develop Android applications with confidence.\nThroughout the course, you will delve into the fundamentals of programming and object-oriented programming in Java, laying a solid foundation for your Android development endeavors. From understanding variables, data types, and control structures to mastering concepts like classes, objects, and inheritance, you will gain a deep understanding of Java's core principles, essential for Android app development.\nAs you progress, you will learn how to leverage your newfound knowledge to build a real Android application, step by step. Guided by expert instructors, you will explore the key components of Android development, including user interfaces, activities, intents, and more. By the end of the course, you will not only have developed your own Android mobile application but also gained the skills and confidence to publish it to the Google Play Store, making your mark in the world of Android development. Get ready to unleash your creativity and embark on an exciting journey into the realm of Android app development!",
      "target_audience": [
        "Beginner Java developers who are curious about creating new Android applications",
        "Intermediate Java developers who are curious about creating advanced Android applications",
        "Advanced Java developers who are curious about creating professional Android applications"
      ]
    },
    {
      "title": "Flutter 101-Your Ultimate Guide to Flutter Development",
      "url": "https://www.udemy.com/course/flutter-101/",
      "bio": "Learn Flutter from scratch by working on some awesome projects.",
      "objectives": [],
      "course_content": {
        "Installation": [
          "Flutter Installation on MAC",
          "Flutter Installation on WINDOWS",
          "Flutter Installation on LINUX"
        ],
        "Setup": [
          "Flutter ANDROID STUDIO SETUP",
          "Flutter VS CODE SETUP",
          "Setting Up a REAL DEVICE"
        ],
        "Basics": [
          "Create and Run App From Terminal",
          "Stateless VS StateFul Widgets",
          "How Flutter RENDERS WIDGETS?",
          "Hot Reload And Hot Restart"
        ],
        "First basic app": [
          "Default counter app from scratch"
        ],
        "File Architecture": [
          "Basic File Architecture",
          "Intermediate File Architecture",
          "Advanced File Architecture"
        ],
        "Widgets and Features": [
          "Images and UI's"
        ],
        "Updates": [
          "Updated"
        ]
      },
      "requirements": [
        "Basic knowledge about object oriented programming"
      ],
      "description": "Welcome to flutter 101, your ultimate guide for learning flutter development.\n\n\nThroughout this course, you will be learning various essential things that are mostly used by a flutter developer when he/she is working at some firm.\nThis course will help you learn how to create fast and stunning mobile applications with so much ease. The projects/apps which you will be making throughout the course will be working on android as well as ios. Some changes to the projects make them compatible will web browsers as well.\nYou will also be building a large number of apps with the difficulty level ranging from beginner to advanced and these projects/apps will help you get better with the concepts eventually.\nI will also be covering some of the most used flutter packages which are generally used while we are developing a flutter app.\nFlutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. Delight your users with Flutter's built-in beautiful Material Design. Flutter's hot reload helps you quickly and easily experiment, build UIs, add features, and fix bugs faster. Cross-platform development with Flutter.\nFlutter’s widgets incorporate all critical platform differences such as scrolling, navigation, icons, and fonts to provide full native performance on both iOS and Android.\nHappy Learning!!",
      "target_audience": [
        "Begineer",
        "Flutter developers",
        "android developers",
        "ios developers",
        "cross platform developers"
      ]
    },
    {
      "title": "AR app development using Unity in 2023",
      "url": "https://www.udemy.com/course/no-code-ar-appdev-unity2022/",
      "bio": "Learn to make three Augmented Reality (AR) apps without writing a single line of code with step-by-step tutorial.",
      "objectives": [],
      "course_content": {
        "Unity Crash Course": [
          "Setting up Unity 3d for Windows",
          "Setting up Unity 3d for MacOS",
          "Unity Editor Overview",
          "Understanding Camera, Scene, and Objects in Unity",
          "Learn to apply textures and some camera tricks",
          "Understanding materials in unity",
          "Import 3d asset from asset store and 3rd party websites",
          "Understanding prefabs and unity's physics system",
          "How to build our app for android",
          "How to build our app for iOS"
        ],
        "AR app development with ARFoundation and Unity": [
          "Setting up ARFoundation in Unity",
          "Detecting ground plane using phone camera",
          "Placing virtual objects into your room",
          "Add a 3d model from sketchfab to our app",
          "Make the object interactive",
          "Image targets in ARFoundation",
          "Getting started with face filter"
        ]
      },
      "requirements": [
        "Windows or Mac Computer / Laptop",
        "ARCore supported Android smartphone or ARKit supported iOS device",
        "No Programming Language required."
      ],
      "description": "Why Take the Course?\n\nAccording to a recent report, Goldman Sachs, Morgan Stanley, KPMG estimate the metaverse to be $13 to $16 trillion by the end of the decade. From big tech companies to small startups to local small business owners, everyone is trying to take a piece of the pie. Augmented Reality (AR) and Virtual Reality (VR) will take a huge part in this metaverse revolution. With more and, more companies moving into AR marketing, AR navigation, AR product showcasing, AR try-ons and so on, there is no better time to learn this new technology to get the advantage of Early Adaptors. The good news is you don't have to be a tech-savvy person to learn this. With the latest enhancement in NO/Low CODE tool, it's really easy to get started with AR development. Keeping these in mind we have created a brand new AR app development course that will prepare you for the high-demand AR market. This course will help you get started with AR app development with no prior experience in coding.\n\nWhat will you learn?\n\nIn this course, you will learn some of the foundational concepts of AR app development. We will learn the different features Unity provides with its AR Foundation package without writing a single line of code. Some of the concepts that we will learn include Ground Plane Detection, Object Placement, Object Manipulation, Face Filter, Image targets etc. By the end of the course, you should have enough understanding to make AR prototypes and apps for iOS and Android devices.\n\n1. How to build a cross-platform (iOS + Android) mobile AR application.",
      "target_audience": [
        "Anyone interested to learn about metaverse and augmented reality.",
        "Non-tech startup owner who wants to explore the potential of AR.",
        "Students who are looking forward to improving their portfolio with some fun project",
        "Beginner programmers who want to explore AR app development"
      ]
    },
    {
      "title": "Python Apps on Android For Beginners",
      "url": "https://www.udemy.com/course/python-on-android-essentials/",
      "bio": "Lost with Kivy? Learn how to professionally install Kivy in one afternoon with this course! Be a Kivy expert now!",
      "objectives": [
        "Recreate pixel perfect Figma UI templates in Kivy",
        "Learn canvas instructions and create professional layouts - no KivyMD required!",
        "Skip the hassle of wasting hours waiting for your .apk to rebuild!",
        "Create your first Android app using only Python!",
        "Design custom and beautiful interfaces from scratch",
        "Use KivySchool's custom KivyReloader to hot reload your Kivy apps on Android phones!",
        "Learn how to use Kivy Properties to create dynamically updated UI",
        "Learn how to properly debug your Kivy apps!",
        "Learn how to create any screen you want! You will learn how to use canvas and KV language to draw beautiful UI elements!",
        "For first timers: learn how to use git versioning software!",
        "For first timers: learn how to properly set up a Python development environment with poetry!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "You can get on Steam with Kivy!"
        ],
        "Kivy Setup & Installation": [
          "Windows - Kivy installation - Installing Git, Pyenv and Poetry - VIDEO",
          "Windows - Kivy installation - Installing Git, Pyenv and Poetry - ARTICLE",
          "macOS - Kivy installation - Installing Git, Pyenv and Poetry - VIDEO",
          "macOS - Kivy installation - Installing Git, Pyenv and Poetry - ARTICLE",
          "Ubuntu - Kivy installation - Installing Git, Pyenv and Poetry - VIDEO",
          "Ubuntu - Kivy installation - Installing Git, Pyenv and Poetry - ARTICLE",
          "As a Python developer, what do you know about Pyenv, Poetry and Git?"
        ],
        "Layouts - How to Size and Position Widgets on the Screen using KV Language": [
          "What you will learn on this section",
          "Installing the Kivy Viewer",
          "Learning KV Language basics: rule context, properties, values and inheritance",
          "KV Basics 1: properties and inheritance",
          "Learning the basics of Button and Canvas instructions",
          "KV Basics 2: Button and canvas instructions",
          "Learning KV Language: declaring variables and importing libraries / classes",
          "KV Basics 3: variables and importing",
          "Implementing your first Onboarding Screen using a Figma template from scratch!",
          "Onboarding Screen Quiz",
          "Finishing the Onboarding Screen - How to use Image, Label and Button",
          "Git Primer Quiz",
          "Image, Label, Button Quiz",
          "Git Primer",
          "Screen 2 Quiz",
          "Creating Screen 2",
          "Creating Screen 2 Continued",
          "Creating Screen 2 Final Step",
          "Creating Screen 2 Final Step Quiz",
          "Creating Screen 3 Start",
          "Creating Screen 3 Continued",
          "Creating Screen 3 Final"
        ],
        "Kivy Reloader - Compile your app on Android on any OS and update it in real time": [
          "Kivy Reloader PRE-Quiz",
          "Ubuntu & macOS - Installation and how to use Kivy Reloader",
          "Windows WSL2 - Kivy Reloader Targeting Android Setup [Part 1/3]",
          "Windows WSL2 - Kivy Reloader Targeting Android: Kivy Reloader Install [Part 2/3]",
          "Windows WSL2 - Kivy Reloader Targeting Android: Debugging Android [Part 3/3]",
          "Windows Targeting .EXE - Installation and using Kivy Reloader [Part 1/2]",
          "Windows Targeting .EXE - Installation and using Kivy Reloader [Part 2/2]",
          "Kivy Reloader Quiz"
        ],
        "Kivy Events and Properties - Dynamic Updates, Binding and Event Dispatching": [
          "[BEGINNER] Kivy Properties and Event Dispatching – Dynamic Updates and Bindings",
          "[BEGINNER] Kivy Properties - Using CheckBox to control an OptionProperty",
          "[ADVANCED] Kivy Properties and Events",
          "[ADVANCED] Kivy Properties Example",
          "[ADVANCED] How to observe Kivy Properties",
          "[ADVANCED] Events Binding",
          "[ADVANCED] Kivy AliasProperty",
          "[ADVANCED] Kivy Events and Properties Part 2",
          "[BEGINNER] Kivy Clock"
        ],
        "Delivery App - from Figma to Android": [
          "What You'll Learn in Building a Delivery App",
          "Project setup: GitHub repo, Kivy Reloader, VS Code extensions (ruff, isort)",
          "Project Setup Quiz",
          "Delivery App - Splash Screen - Folder Structure & App Theme",
          "Delivery App - Splash Screen - Custom Components",
          "Delivery App - Code Review, Git, Debug Screen & Development Tools",
          "Delivery App - How to use ScreenManager and how to Lazy Load screens",
          "Delivery App - Categories Screen - NavigationBar and SearchField",
          "Delivery App - Categories Screen - ItemCard"
        ],
        "[BONUS] Example desktop app - Kivy Whisper": [
          "Creating a cross platform GUI for OpenAI's Whisper",
          "Finishing the Kivy GUI",
          "Prepare to connect Kivy and Whisper",
          "Connecting Kivy and Whisper",
          "Create EXE with PyInstaller"
        ]
      },
      "requirements": [
        "Basic Python knowledge: strings, integers, lists, dictionaries, functions, classes, and class inheritance.",
        "Please attempt our FREE Kivy Reloader instructions under \"Kivy Setup & Installation\" before buying this course. If it does not work, please let us know!"
      ],
      "description": "Transform from Python enthusiast to Android developer! Get access to the course that teaches you how to get your Python app to Android!\nIn this course you will learn how to make Python apps on Android, how to set up a professional Python dev environment and create beautiful apps!\nWho is this course for?\nThis course will be constructed for beginners and advanced users. Advanced users can skip our beginner advice, and each beginner section will be marked appropriately.\nAnybody that wants to take their Python apps to Android mobile. We will teach you how to use the Kivy GUI and become a master at making Android apps by yourself using free tools as much as possible!\nPython users that already have working Python code. If you really want to learn Java/Swift, go ahead. But if you already know Python, have already spent hundreds of hours mastering Python, and want to stay with Python, we have the cross platform solution for you!\nIf you have a dream app that you want to make real, this course can teach you the skills you need to make it happen!\nWe will answer these questions:\nHow do I set up an environment for Python development?\nHow do I set up a Kivy/Python/Python for Android project?\nHow do I use basic git commands to save, rewind, and recover progress?\nHow do I use VS Code for basic git commands (commit, partial commits)?\nWe will also answer Python on Android specific questions like:\nHow do I set up WSL (Windows subsystem for Linux)?\nHow do I use adb (Android Debug Bridge) to connect to your Android phone?\nHow do I set up xserv to see Kivy on your Windows OS through WSL?\nHow do I mirror my Android phone to desktop with Kivy? Some people don't even know this is possible!\nHow do I hot reload my Kivy app on Android to see my changes in real time?\nHow do I use pyjnius to access the Android API?",
      "target_audience": [
        "Python developers that want to create Android apps using only Python"
      ]
    },
    {
      "title": "Flutter Voice Translation App: Real-Time & On-Device in 2025",
      "url": "https://www.udemy.com/course/flutter-nlp-build-text-voice-document-translation-app/",
      "bio": "Build a Smart App for Real-Time Voice, Text, and Document Translation Using Flutter and NLP for Android and iOS",
      "objectives": [
        "Build Machine Learning Powered beautiful & high Performance Apps with Flutter",
        "Build a feature-rich translation app for Android and iOS using Flutter and NLP",
        "Perform text, voice, and document translation in Flutter",
        "Work with state-of-the-art text translation, language identification, and text recognition models.",
        "Implement text-to-speech and speech-to-text functionalities for real-time translation in Flutter Apps.",
        "Set up Flutter App Development Environment for both Windows & MacOS",
        "Capture or upload document images and translate entire documents into multiple languages.",
        "Customize UI elements, dropdowns, and toggle features for a professional app experience.",
        "Explore Flutter’s custom painting tools to manipulate document images dynamically.",
        "Gain hands-on experience combining AI models with mobile development in Flutter."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is NLP",
          "What is Flutter",
          "Source Codes"
        ],
        "Setup & Installations for Flutter": [
          "Windows: Installing and Setting Up Flutter",
          "Windows: Installing Android Studio for Flutter",
          "Windows: Creating an Android Emulator for Testing Flutter Apps",
          "MacOS: Setting Up the Flutter SDK",
          "MacOS: Installing Android Studio for Flutter Development",
          "MacOS: Setting Up Xcode for iOS Development with Flutter",
          "Creating a New Flutter Project and Running It on the iOS Simulator",
          "Creating an Android Emulator and Running a Flutter App on It"
        ],
        "Text Translation in Flutter: Your First Steps": [
          "Creating a New Flutter Project and Designing the App's GUI",
          "Setting Up Text Translation and Exploring the Documentation",
          "Building the Translator and Downloading Language Models",
          "Implementing Text Translation Functionality in Flutter",
          "Enabling Real-Time Translation in Flutter",
          "Improving Code: Declaring Source and Target Languages Globally",
          "Designing and Refining the Flutter App's User Interface"
        ],
        "Speech Recognition for Seamless Text Translation": [
          "Designing the User Interface for Speech Recognition",
          "Setting Up Speech Recognition for Android and iOS",
          "Recognizing Voice and Converting It to Text in Flutter",
          "Translating Text from Voice Input",
          "Handling Long Text in TextField and Text Widgets",
          "Using Multiple Languages with Speech Recognition",
          "Major Fixes and Improvements in Speech Recognition"
        ],
        "Text-to-Speech: Bringing Translations to Life": [
          "Designing the User Interface for Text-to-Speech (TTS)",
          "Setting Up Text-to-Speech for Android and iOS",
          "Implementing and Testing Text-to-Speech Functionality",
          "Changing the Language in Flutter Text-to-Speech",
          "Play Translations in different Voices in Flutter"
        ],
        "Adding Language Selection Dropdown and Dynamic Language Switching": [
          "Implementing Language Selection Dropdowns in Flutter App",
          "Testing Language Selection and Switching with Dropdown",
          "Improving the User Interface for Better Language Selection",
          "Changing Speech-to-Text Language Based on Dropdown Selection",
          "Testing Speech Recognition with Multiple Languages",
          "Implementing Text-to-Speech for Multiple Languages",
          "Enabling Speech Recognition and TTS for All Languages",
          "Implementing Text-to-Speech for Multiple Languages"
        ],
        "Code Structure Improvements": [
          "Separating Screens from Rest"
        ],
        "Language Identification: Automatically Detect and Translate Text": [
          "Language Identification in Flutter",
          "Identifying the Language of Text Automatically in Flutter",
          "Detecting Language and Automatically Performing Translation",
          "Enabling and Disabling Language Identification",
          "Copy Translated Text in Flutter"
        ],
        "Text Recognition in Flutter: Extracting Text from Images": [
          "Designing the GUI for Document Translation",
          "Creating the Vision Screen for Document Translation in Flutter",
          "Selecting and Capturing Document Images in Flutter",
          "Enhancing the Vision Screen GUI for Professional Text Recognition",
          "Introduction to Text Recognition Feature",
          "Implementing Text Recognition in Flutter Apps"
        ],
        "Translating Recognized Text and Displaying Translated Document": [
          "Translating Recognized Text from Images in Flutter",
          "Using Custom Painter in Flutter to Draw Images on Canvas",
          "Hiding Text from the Original Document in Flutter",
          "Displaying Translated Text on the Original Document"
        ]
      },
      "requirements": [
        "A computer with Windows & macOS",
        "All the software we'll use in this course is free to download and install.",
        "While you can develop iOS apps on a Windows computer with Flutter, a Mac is required for testing iOS apps."
      ],
      "description": "Build a Real-Time Translator App with Flutter and NLP – Translate Text, Voice & Documents Instantly!\nAre you ready to level up your Flutter skills and build a real-time AI-powered translation app for both Android and iOS?\nWelcome to “Build NLP-Powered Apps with Flutter (Dart)” – the ultimate hands-on course where you’ll create a feature-rich mobile translation app using Flutter and Natural Language Processing (NLP).\nWhether you're building for Android or iOS, you'll learn to combine machine learning, voice processing, and text recognition to create intelligent, real-time translation apps.\nWhat You’ll Learn\n\n\nIn this project-based course, you’ll build a powerful real-time translator app in Flutter with features like:\nText & Voice Language Translation – Translate between multiple languages in real time\nSpeech-to-Text – Convert spoken words into text in various languages\nText-to-Speech – Read out translated content in the selected language\nLanguage Detection – Automatically detect and process the input language\nDocument Translation – Scan documents via camera, extract text, and translate\nOverlay Translations on Images – Display translated text directly on the scanned document image\nProfessional UI/UX – Build clean, modern, and user-friendly app designs\nCross-Platform Support – Build once, run on both Android and iOS devices\n\n\nTechnologies & Tools You’ll Use\nFlutter (Dart) – For cross-platform mobile development\nNatural Language Processing (NLP) – To build intelligent language features\nMachine Learning Models – For translation, detection, and recognition\nOCR (Optical Character Recognition) – To extract text from images and documents\nSpeech Recognition – To convert user voice input into text\nText-to-Speech (TTS) – To convert translated text into spoken output\nGoogle ML Kit / AI APIs – For seamless AI integrations\n\n\nWho This Course is For\nThis course is ideal for:\nBeginner Flutter developers wanting to explore AI and real-world apps\nMobile developers looking to integrate powerful NLP features\nAI & NLP enthusiasts eager to build hands-on intelligent apps\nFreelancers & indie developers aiming to create and sell AI-powered apps\nAnyone interested in real-time translation, language apps, and cross-platform development\n\n\nWhy Take This Course?\nBuild a Complete Real-Time Translation App – From scratch to deployment\nLearn Real-Time Voice & Text Processing – With speech-to-text and OCR\nIntegrate Machine Learning into Flutter – NLP, language ID, and translation models\nGain Career-Boosting Skills – AI, Flutter, and mobile development combined\nCreate a Portfolio-Ready Project – Impress clients or employers with your work\nBy the End of This Course, You Will:\nBuild and deploy a real-time NLP-powered app for Android and iOS\nIntegrate AI and NLP technologies in your Flutter apps\nGain expertise in OCR, voice recognition, translation, and text-to-speech\nConfidently use Google’s ML Kit or similar AI tools in mobile apps\nBuild real-world apps that solve language problems across text, voice, and documents\nWhy Choose Flutter + NLP?\nFlutter: A fast, flexible, and powerful UI toolkit by Google for cross-platform development\nNLP (Natural Language Processing): The AI field that powers intelligent communication and language understanding\nTogether: They help you build next-generation apps that read, speak, and translate in real-time\n\n\nCourse Highlights\n5+ Hours of HD Video Lessons\nDownloadable Source Code Worth $4000+\nStep-by-Step Project-Based Instruction\nBuild & Run Apps on Android & iOS\nHands-On Learning with Real-World Use Cases\nLifetime Access + Free Updates\nThis course is your complete guide to building real-time voice and document translator apps with Flutter and NLP.\nJoin today and start creating intelligent apps that understand and speak any language!",
      "target_audience": [
        "Whether you're a beginner or experienced Flutter developer looking to integrate AI and NLP features into your mobile apps.",
        "This course will help you master mobile development using Flutter, allowing you to build both iOS and Android apps with a single codebase.",
        "Anyone interested in learning how to apply machine learning, particularly Natural Language Processing (NLP), to real-world mobile applications."
      ]
    },
    {
      "title": "Learn to master Swift fast and easy with real world examples",
      "url": "https://www.udemy.com/course/learn-to-master-swift-fast-and-easy-with-real-world-examples/",
      "bio": "The A-Z guide for learning to develop apple apps with Swift. Learn from hundreds of real world examples on how to code!",
      "objectives": [
        "Code in Swift",
        "Build your own apps in swift",
        "Have tons of useful knowledge about programming",
        "Tons of productivity tips when building apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "FAQ"
        ],
        "How to Access free content": [
          "Get an iPhone XCode Template for FREE!"
        ],
        "Let's Learn Swift": [
          "01. Introduction to the how do I do this in Xcode course.mov",
          "02. Setting up the tutorial.mov",
          "03. Using the main storyboard.mov",
          "04. Adding items to the storyboard.mov",
          "05. Running the simulator.mov",
          "06. Hooking up the code to the swift file.mov",
          "07. Change the text of a label.mov",
          "08. Chaging the color of a lablel",
          "09. Changing the background color of the label.mov",
          "10. Changing the background color of a button.mov",
          "11. Changing the button properties.mov",
          "12. Changing the alpha of an object.mov",
          "13. Changing the alignment of the label.mov",
          "14. Changing the font and size of a label.mov",
          "15. Changing the font color, size and alignment for the button.mov",
          "16. Printing properties and computer values in a string.mov",
          "17. Introduction to variables.mov",
          "18. Putting data into variables.mov",
          "19. Changing the background color programatically.mov",
          "20. How do I clean up my swift file?.mov",
          "21. Adding in an image.mov",
          "22. Adding a background image.mov",
          "23. Accessing the image properties.mov",
          "24. Changing the content mode programatically.mov",
          "25. Changing an image programatically.mov",
          "26. Using string for productivity.mov",
          "27. How to rotate your image.mov",
          "28. Image size.mov",
          "29. Hiding an object in swift.mov",
          "30. Segmented control.mov",
          "31. Finding out the segmented control and if statements.mov",
          "32. Adding in the .mov",
          "33. Changing the color of the segmented control.mov",
          "34. Adding other UIColor attributes.mov",
          "35. Setting up white and off white UIColors.mov",
          "36. Inserting a segment programatically.mov",
          "37. Changing the button programatically.mov",
          "38. Changing the name of a segmented index.mov",
          "39. Finding the number of segments.mov",
          "40. How do you add a slider.mov",
          "41. Adding in the slider to the swift file.mov",
          "42. Making a simple color app.mov",
          "43. Making the color app part 2.mov",
          "44. Finishing off the color app.mov",
          "45. Changing the maximum and minimum value of a slider.mov",
          "46. Adding a switch.mov",
          "47. Enabling a swtich programatically.mov",
          "48. Checking to see if a switch is on or not.mov",
          "49. Setting up the switch logic when the app is loaded.mov",
          "50. Changing the colors of the switch.mov",
          "51. How do I add in a stepper.mov",
          "52. Printing a stepper value.mov",
          "53. Setting a minimum stepper value.mov",
          "54. Setting the maximum value of a stepper.mov",
          "55. Setting the maximum step value.mov",
          "56. Wrapping the stepper value.mov",
          "57. Changing the color of the stepper .mov",
          "58. Adding in a text field.mov",
          "59. Using the keyboard in the iOS simulator.mov",
          "60. Adding an action to a text field.mov",
          "61. Placeholder text and text in the text box.mov",
          "62. Adding in different events and changing the background color.mov",
          "63. Changing the font of a textbox.mov",
          "64. Changing the textbox text color.mov",
          "65. Aligning the text box.mov",
          "66. Changing the placeholder text.mov",
          "67. Changing the boarder style.mov",
          "68. Fit text to text feild.mov",
          "69. Check to see if a TextBox is in edit mode.mov",
          "70. How to change the keyboard in Xcode.mov",
          "71. Setting up text in a textbox.mov",
          "72. Checking to see if the textbox is empty or not.mov",
          "73. Changing the keyboard type programatically.mov",
          "74. Setting up a dark keyboard programatically.mov",
          "75. Setting up the return key functionality.mov",
          "76. Spell checking type.mov",
          "77. Adding emjoi's to your app.mov",
          "78. Hiding the keyboard .mov",
          "79. Adding in a text view.mov",
          "80. Setting up the properties for the text view.mov",
          "81. Calling functions when properties get reset.mov",
          "82. Making text views editable and select able.mov",
          "83. Setting in the data detection programatically.mov",
          "84. Moving in between views.mov",
          "85. Animating the view controller.mov",
          "86. Adding in items from a different view.mov",
          "87. Setting up a tab bar application.mov",
          "88. Adding in the other view.mov",
          "89. Changing the nam eof the tab.mov",
          "90. Setting up your tab application to only have one viewcontroller.mov",
          "91. UIWebView and HTML 5 content in your app.mov",
          "92. Loading the website on the UIWebView.mov",
          "93. Adding a filter to an image.mov",
          "93. Adding a filter to an image.mov",
          "95. Adding latitude and longitude.mov",
          "96. Setting up the map.mov",
          "97. Changing the features of the map kit.mov",
          "98. Centering coordinate on a map.mov",
          "99. Adding in an annotation.mov",
          "100. Talking about functions.mov",
          "101. Adding in fi statements for functions.mov",
          "102. Adding a string function.mov",
          "103. Taking in more than one item.mov",
          "104. Printing a return value on the function.mov",
          "105. Returning an int function with a string.mov",
          "106. Chaning functions together.mov",
          "107. Combining functions.mov",
          "109. Fixing the grammar.mov",
          "110. Adding plural functionality.mov",
          "111. Adding in an emoji to an array.mov",
          "112. Counting the items in the array.mov",
          "113. Appending items to an array.mov",
          "114. Adding an item at an index.mov",
          "115. Removing the last from an array.mov",
          "116. If statements and booleans.mov",
          "117. Adding in a failsafe.mov",
          "118. Removing an element at an index.mov",
          "119. Starting and ending index plus finding a bug.mov",
          "120. Seeing the entire array.mov"
        ],
        "Introduction to OSX": [
          "01. Introduction to OSX.mov",
          "02. How to stop the window from resizing.mov",
          "03. Adding a label and highlighting the differences between iOS and OSX.mov",
          "04. Adding in a button and talking about different buttons.mov",
          "05. Changing the color of the text of a label.mov",
          "06. Changing the background color.mov",
          "07. Changing the font of a label.mov",
          "08. Changing the font of a button.mov",
          "09. Change the alignment of a button or a label.mov",
          "10. Adding a border to the button programatically.mov",
          "11. Setting up an NSTextField.mov",
          "12. Setting up a function and calling a function for preloaded properties.mov",
          "13. Changing the text of a label to the textbox.mov",
          "14. Printing numbers to the screen through a text.mov",
          "15. Printing multiple strings.mov",
          "16. Changing the text of an NSTextField.mov",
          "17.Changing the placeholder text.mov",
          "18. Changin the color of a textbox.mov",
          "19. Changing the background color and finding an aproximation.mov",
          "20. Optimising the workflow of your app.mov",
          "21. Adding in a multi line label.mov",
          "22. Tips for scaling your app.mov",
          "23. Adding in a clear button and resetting the app.mov",
          "24. Adding in a combo box.mov",
          "25. Accessing the string of the combo box.mov",
          "26. Getng the combobox to update automatically.mov",
          "27. Adding in an item to the combo box.mov",
          "28. Adding an item at an index.mov",
          "29. Removing an item at an index.mov",
          "30. Removing a specific item by a string.mov",
          "31. Removing all of the items.mov",
          "32. Finding how many items are in the combo box.mov",
          "33. Finding the value of a selected item.mov",
          "34. Changing the combo box size and font.mov",
          "35. Talking about warnings and app store certification.mov",
          "36. Changing the background color of a combo box.mov",
          "37. Adding in a segmented control.mov",
          "38. Hooking up the multiline label.mov",
          "39. Changing the style programatically.mov",
          "40. Getting the string value of a selected index.mov",
          "41. Adding in a selected segmented index to the sreen.mov",
          "42. Changing the index of a segmented control.mov",
          "43. Setting the segmented control programatically.mov",
          "44. Counting the segments.mov",
          "45. Adding in a color well.mov",
          "46. Changing the color well.mov",
          "47. Using the NSColor well to change the color.mov"
        ],
        "Making a simple app": [
          "01. Talking about universal apps.mov",
          "02. Talking about the adaptive layout.mov",
          "03. Adding in a storyboard.mov",
          "04. Testing on your device.mov",
          "05. Adding in the design elements.mov",
          "06 Hooking up the code to the file .mov",
          "07. Testing the application.mov",
          "08. Adding in the box color.mov",
          "09. Variables and conversions.mov",
          "10. Adding in a failsafe.mov",
          "11. Adding in another level of logic.mov",
          "12. Setting up the iPad version of the app.mov",
          "13. Changing properties of objects.mov",
          "14. Designing the app.mov",
          "15. Dismissing the keyboard and talking about different keyboards.mov\\",
          "Inspiring quotes"
        ]
      },
      "requirements": [
        "Just to know how to use a computer",
        "You will also need to download Xcode",
        "You will also need a mac"
      ],
      "description": "This course was funded through a massively successful Kickstarter campaign.\nLearn to master Swift through real world examples. This course will show you practical examples that come from a teacher that actively produces apps and makes money off of them. This course is the course I wish I had before releasing my apps. Learn valuable secrets, time saving productivity tips and monetization strategies that will blow you away. Learn from hundreds of pure real world examples that will turn you into a hero developer.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\n·I have released over 40 games and apps that have done very well in the app store.\n·I run a company called Mammoth Interactive so I am actively in the field building apps and making money\n·I have been teaching since 2002\n·I personally love learning online and my life is much better because I have learned online rather than a classroom\n·I am one of the top 10 highest grossing Udemy teachers\n·I have been a Udemy instructor since 2011.\n·I make sure people learn how to make money from their creations.\n·I have over 110k students worldwide\nWho is this class for?\n·People who want to improve their technical skills\n·Complete beginners\n·People who want to make money. I show people the tools on how to make money through various methods of passive income\n·People who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\n·Learn practical skills\n·Learn about how leverage your new skills to greater wealth\n·Learn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\n·Motivated me\n·Helped my career\n·Helped me as a teacher\n·Impacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "If you a beginner you should take this course",
        "If you are not a beginner this course will be too easy for you"
      ]
    },
    {
      "title": "Practice Exams for Google Associate Android Developer (AAD)",
      "url": "https://www.udemy.com/course/practice-exams-for-google-associate-android-developer-aad/",
      "bio": "Sharpen Your Android Development Skills and Pass the Google Associate Android Developer (AAD) Certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for the Google Associate Android Developer (AAD) Certification and looking for the perfect tool to assess your readiness? This course offers a comprehensive set of realistic, exam-style practice tests that closely mirror the actual certification exam format.\nThe Google AAD Certification validates your ability to build and debug Android applications using key Android components like Activities, Intents, Services, Content Providers, and Broadcast Receivers. It also tests your knowledge of Android UI/UX design, data storage, REST API integration, and app testing fundamentals. This course is designed to help you master these critical exam domains through targeted practice.\nEach practice exam is carefully crafted to reflect the difficulty level, question types, and exam structure of the real Google AAD certification. Detailed explanations accompany every answer, helping you understand the reasoning behind each solution and learn from your mistakes.\nThese practice tests not only test your technical knowledge but also improve your time management skills, exam strategy, and confidence under timed conditions. Whether you're a student, junior developer, or an experienced mobile developer seeking official recognition of your skills, this course will help you identify knowledge gaps and strengthen your Android development expertise.\nBy enrolling today, you’ll take a major step toward achieving your goal of becoming a Google Certified Associate Android Developer!",
      "target_audience": [
        "Aspiring Android Developers preparing for the Google Associate Android Developer (AAD) certification exam who want to practice real exam-style questions and boost their confidence."
      ]
    },
    {
      "title": "React Native Practice Tests from Beginner to Expert Level",
      "url": "https://www.udemy.com/course/react-native-practice-tests-from-beginner-to-expert-level/",
      "bio": "Four Strategic Tests to Validate Your Mobile Development Expertise",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "# React Native Complete Skills Validation Practice Tests\n\n\n## Course Overview\n\n\nMaster React Native development through comprehensive practice tests designed to assess and enhance your mobile app development skills, Whether you're a beginner looking to validate your knowledge or an experienced developer wanting to test your skills, this course provides the perfect platform to assess your expertise.\n\n\n## Who Should Take This Course\n\n\n- Beginner React Native developers\n\n\n- Web developers transitioning to mobile development\n\n\n- Students learning React Native\n\n\n- Developers preparing for technical interviews\n\n\n- Anyone interested in measuring their React Native knowledge\n\n\n## Prerequisites\n\n\n- Basic JavaScript understanding\n\n\n- Basic React knowledge\n\n\n- Basic English comprehension\n\n\n## Course Structure\n\n\nOur carefully structured testing program includes:\n\n\nA) Testing Details\n\n\n- 4 test modules\n\n\n- 25 questions per test\n\n\n- Each test has Time limit to solve\n\n\n- Multiple-choice and programming questions, Fill in the blanks\n\n\n- Instant results with detailed explanations\n\n\n- Real life examples also included\n\n\nB) Test Topics\n\n\n1. **React Native Fundamentals**\n- Component lifecycle\n- State and props management\n- Mobile event handling\n- Performance optimization\n\n\n2. **UI Design & Implementation**\n- Layout and Flexbox\n- Responsive design\n- Cross-platform styling\n- Custom component creation\n\n\n3. **UX Best Practices**\n- Gesture handling\n- Navigation patterns\n- Form implementations\n- Error handling\n\n\n4. **Technical Implementation**\n- CRUD operations\n- API integration\n- State management\n- TypeScript integration\n\n\n5. **And Remaining all points**\n\n\n## Key Benefits\n\n\n- Validate React Native skills\n\n\n- Identify knowledge gaps\n\n\n- Learn industry best practices\n\n\n- Prepare for technical interviews\n\n\n- Improve problem-solving abilities\n\n\n- Track your progress\n\n\n- Take tests at your own pace , multiple time solve\n\n\n## Learning Outcomes\nBy completing these practice tests, you'll:\n\n\n- Assess your React Native knowledge\n\n\n- Understand modern UI/UX practices\n\n\n- Master cross-platform development concepts\n\n\n- Enhance code quality\n\n\n## Support & Updates\n\n\n- Technical support available\n\n\n- Feedback implementation\n\n\n* I request specially crack Third practice test , which makes you more expert in field of app development\n\n\n## Special Focus\n\n\nBasic to advance complete React native includes, The third practice test provides an advanced challenge to elevate your app development expertise.\n\n\n! Start testing your React Native skills today !\n\n\nBest of Luck!",
      "target_audience": [
        "This course is designed for developers, students, and professionals who want to test and enhance their React Native skills. Whether you're a beginner starting your journey in mobile app development or an experienced developer seeking advanced practice, this course provides valuable tests and insights to help you grow."
      ]
    },
    {
      "title": "Build AI Song Generator App with React Native and tRPC",
      "url": "https://www.udemy.com/course/ai-song-generator-app/",
      "bio": "Create an AI Song Generator App with Voice Cloning: React Native, tRPC, Next.js, Replicate, and Modern Tooling",
      "objectives": [
        "Develop an AI-Powered Song Generator",
        "Implement Voice Cloning Technology",
        "Design User-Friendly Mobile Interfaces using React Native",
        "Learn to build NextJs API routes, Webhooks, tRPC routes, turborepo",
        "Learn to design the app using Nativewind (tailwind css but for react native)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Understanding the app at high level"
        ],
        "Building the Mobile app UI using React Native and Nativewind": [
          "Setting up project in VS Code",
          "Designing and building onboarding screen",
          "Designing and building auth screens",
          "Building Home Screen",
          "Building Generate Song Screen",
          "Building Play Song Screen",
          "Building Custom Voice Screen"
        ],
        "Authentication": [
          "Auth using Supabase",
          "Connecting React Native frontend to NextJs backend using tRPC"
        ],
        "Building Backend and AI stuff": [
          "Creating custom voice dataset",
          "Training the custom voice AI model",
          "Generating song from custom voice model",
          "Generating song and testing out the functionality from the app",
          "Building + deploying youtube to mp3 API using FastAPI and ChatGPT"
        ]
      },
      "requirements": [
        "Basic to Intermediate Understanding of Programming",
        "Fundamentals of React, React Native, NextJs, tRPC, Tailwind CSS & TypeScript",
        "Interest in AI and Machine Learning"
      ],
      "description": "Become a Full-Stack Mobile Developer: Build an AI Song Generator\n\nAre you tired of building basic apps that blend into the background? Ready to tackle a truly unique project that will make your portfolio stand out?\nImagine having a cutting-edge AI song generator app on your resume. One that uses your own voice to create music! That's exactly what you'll build in this course.\nWe'll dive headfirst into React Native, tRPC, and Next.js – the in-demand tech stack that makes incredible mobile experiences possible. You'll integrate the mind-blowing voice cloning power of Replicate, letting your app create songs like nothing else out there. And with tools like TurboRepo and NativeWind, your app will be sleek, efficient, and ready for the spotlight.\nThis isn't just another app tutorial. It's a chance to merge music, AI, and your development skills into something that will turn heads. Whether you dream of building the next viral app or want to impress potential employers, this project is your ticket.\nEnroll now, and let's transform your app-building journey. I'll guide you every step of the way as you unleash the power of React Native, cutting-edge AI, and your own creativity.\nDon't miss your chance to build a standout app that showcases your true potential!\nLet's make some (AI-powered) music together!",
      "target_audience": [
        "Developers who are looking to skill up",
        "Aspiring App Developers",
        "React Developers",
        "AI Enthusiasts and Hobbyists",
        "Music Technologists and Producers",
        "Career Changers"
      ]
    },
    {
      "title": "Android & ML 2025 - Train Tensorflow Lite Models for Android",
      "url": "https://www.udemy.com/course/android-machine-learning-with-tensorflow-lite-using_kotlin_masterclass/",
      "bio": "Train Image Classification, Object Detection and Regression models for Android - Build Smart Android Kotlin Applications",
      "objectives": [
        "Train Machine Learning models for Android Applications",
        "Train Image Classification and Object Detection Models for Android Apps",
        "Train Linear Regression Models for Android Apps",
        "Integrate Tensorflow Lite models in Android kotlin Apps",
        "Use Computer Vision Models in Android with both Images and Live Camera Footage",
        "Train Object Detection model to count and detect fruits and build Android Application",
        "Train a fruit classification model and build a Fruit Recognition Android Application",
        "Train a brain tumor classification model and build Android App",
        "Train a machine learning model and build a fuel efficiency prediction Android Application",
        "Train a machine learning model and build a house price prediction Android Application",
        "Train Any Prediction, Classification & Object Detection Model & use it in Android Applications",
        "Analysing & using advance regression models in Android Applications",
        "Data Collection, Data Annotation & Preprocessing for ML model training for Android Application",
        "Basics of Machine Learning & Deep Learning for training Machine learning Models for Android",
        "Understand the working of artificial neural networks for training machine learning for Android",
        "Basic syntax of Python programming language to train ML models for Android",
        "Use of data science libraries like numpy, pandas and matplotlib"
      ],
      "course_content": {
        "Machine Learning & Deep Learning for Android App Development": [
          "What is Machine Learning",
          "Supervised Machine Learning",
          "Regression and Classification",
          "Unsupervised Machine Learning & Reinforcement Learning",
          "Deep Learning and Neural Network Introduction",
          "Neural Network Example",
          "Working of Neural Networks for Image Classification",
          "Basic Deep Learning Concepts"
        ],
        "Python Programming Language Short Course": [
          "Google Colab Introduction",
          "Python Introduction & data types",
          "Python Numbers",
          "Python Strings",
          "Python Lists",
          "Python dictionary & tuples",
          "Python loops & conditional statements",
          "File handling in Python"
        ],
        "Data Science Libraries for Android": [
          "Numpy Introduction",
          "Numpy Functions and Generating Random Values",
          "Numpy Operators",
          "Matrix Multiplications and Sorting in Numpy",
          "Pandas Introduction",
          "Loading CSV in pandas",
          "Handling Missing values in dataset with pandas",
          "Matplotlib & charts in python",
          "Dealing images with Matplotlib"
        ],
        "Tensorflow & Tensorflow Lite for Android": [
          "Tensorflow Introduction | Variables & Constants",
          "Shapes & Ranks of Tensors",
          "Matrix Multiplication & Ragged Tensors",
          "Tensorflow Operations",
          "Generating Random Values in Tensorflow",
          "Tensorflow Checkpoints",
          "Tensorflow Lite Introduction & Advantages"
        ],
        "Training a basic regression model for Android": [
          "Train a simple regression model for Android",
          "Testing model and converting it to a tflite(Tensorflow lite) format for Android",
          "Model training for Android app development overview",
          "Creating a new Android Studio Project and GUI of Application",
          "Adding Tensorflow Lite Library In Android & Loading Tensorflow Lite Model",
          "Passing Input to Tensorflow Lite Model in Android and Getting Output"
        ],
        "Fuel Efficiency Prediction: Training an advance regression model": [
          "Section Introduction",
          "Data Collection: Finding Fuel Efficiency Prediction Dataset",
          "Loading Dataset in Python for Model Training",
          "Handling missing Values in Fuel Efficiency Prediction Dataset",
          "Handling Categorical Columns in Dataset for Model Training",
          "Training and testing datasets",
          "Normalization Introduction",
          "Dataset Normalization",
          "Training Fuel Efficiency Prediction Model in Tensorflow",
          "Testing Trained Model and converting it to Tensorflow Lite Model",
          "Training Fuel Efficiency Prediction Model Overview"
        ],
        "Fuel Efficiency Prediction Android Application": [
          "Setting up Android Application for fuel efficiency prediction",
          "Loading Tensorflow Lite models & performaning normalization in Android",
          "Passing input to Tensorflow Lite model in Android and getting output",
          "Testing fuel efficiency prediction android application"
        ],
        "Training a House Price Prediction Model & Building Android App": [
          "Section Introduction",
          "Getting dataset for training house price prediction model",
          "Loading dataset for training tflite model",
          "Training & Evaluating house price prediction model",
          "Retraining House Price Prediction Model",
          "House Price Prediction Android App",
          "Test the Android App"
        ],
        "Image Classification": [
          "Image Classification Introduction & Applications"
        ],
        "Data Collection - Collecting Dataset for Training Image Classification Model": [
          "Data Collection Introduction",
          "Finding ready to use dataset for training image classification models",
          "Exploring Downloaded dataset for training custom image classification models"
        ]
      },
      "requirements": [
        "Visual Studio Code or Android Installed on Your System"
      ],
      "description": "Do you want to train different Machine Learning models and build smart Android applications in 2025 then Welcome to this course.\nIn this course, you will learn to train powerful\nImage Classification\nObject Detection\nLinear Regression\nmodel in python from scratch. After that you will learn to\nUse your custom trained Machine Learning Models in Android\nUse existing tensorflow lite models in Android Apps\n\n\nRegression\nRegression is one of the fundamental techniques in Machine Learning which can be used for countless applications. Like you can train Machine Learning models using regression\nto predict the price of the house\nto predict the Fuel Efficiency of vehicles\nto recommend drug doses for medical conditions\nto recommend fertilizer in agriculture\nto suggest exercises for improvement in player performance\nand so on. So Inside this course, you will learn to train your custom linear regression models in Tensorflow Lite format and build smart Android Applications.\n\n\nImage Classification & Applications\nImage classification is the process of recognizing different entities or things in an image or video. You can recognize animals, plants, diseases, food, activities, colors, things, fictional characters, drinks, etc with image recognition.\nIn e-commerce applications image classification can be used to categorize products based on their visual features, So it is used to organize products into categories for easy browsing.\nImage classification can be used to power visual search in mobile apps, so users can take a picture of an object and then find similar items for sale.\nImage classification can be used in medical apps to diagnose disease based on medical images, such as X-rays or CT scans.\nWe can use image classification to build countless recognition applications for performing number of tasks, like we can train a model and build applications to recognize\nDifferent Breeds of dogs\nDifferent Types of plants\nDifferent Species of Animals\nDifferent kind of precious stones\n\n\nImage Classification & Applications\nObject detection is a powerful computer vision technique that can accurately identify and pinpoint the location of various objects within images or videos. By recognizing objects like cars, people, and animals, this technology empowers applications such as security surveillance, autonomous vehicles, and smartphone apps that can identify objects through the camera lens.\nKey Applications:\nAutonomous Vehicles: Cars equipped with object detection can safely navigate roads, avoid collisions, and enhance driver assistance systems.\nSurveillance Systems: Security cameras can identify individuals, track suspicious activity, and detect intrusions.\nRetail: Stores can monitor customer behavior, manage inventory, and prevent theft.\nHealthcare: Medical imaging systems can detect anomalies like tumors and fractures.\nAgriculture: Farmers can monitor crops, livestock, and detect pests or diseases.\nManufacturing: Quality control and automation can be improved through object inspection and robotic guidance.\nSports Analytics: Tracking player movements and equipment can enhance performance analysis and fan experience.\nEnvironmental Monitoring: Wildlife conservation and habitat protection can benefit from object detection.\nSmart Cities: Traffic management, public space monitoring, and waste management can be optimized.\n\n\nI'm Muhammad Hamza Asif, and in this course, we'll embark on a journey to combine the power of predictive modeling with the flexibility of Android app development. Whether you're a seasoned Android developer or new to the scene, this course has something valuable to offer you\n\n\nCourse Overview: We'll begin by exploring the basics of Machine Learning and its various types, and then dive into the world of deep learning and artificial neural networks, which will serve as the foundation for training our machine learning models for Android.\n\n\nThe Android-ML Fusion: After grasping the core concepts, we'll bridge the gap between Android and Machine Learning. To do this, we'll kickstart our journey with Python programming, a versatile language that will pave the way for our machine learning model training\n\n\nUnlocking Data's Power: To prepare and analyze our datasets effectively, we'll dive into essential data science libraries like NumPy, Pandas, and Matplotlib. These powerful tools will equip you to harness data's potential for accurate predictions.\n\n\nTensorflow for Mobile: Next, we'll immerse ourselves in the world of TensorFlow, a library that not only supports model training using neural networks but also caters to mobile devices, including Android\n\n\nRegression Models Training\nTraining Your First Machine Learning Model:\nHarness TensorFlow and Python to create a simple linear regression model\nConvert the model into TFLite format, making it compatible with Android\nLearn to integrate the tflite model into Android apps for Android\nFuel Efficiency Prediction:\nApply your knowledge to a real-world problem by predicting automobile fuel efficiency\nSeamlessly integrate the model into a Android app for an intuitive fuel efficiency prediction experience\nHouse Price Prediction in Android:\nMaster the art of training machine learning models on substantial datasets\nUtilize the trained model within your Android app to predict house prices confidently\nComputer Vision Model Training\nImage Classification in Android:\nCollect and process dataset for model training\nTrain image classification models on custom datasets with Teachable Machine\nTrain image classification models on custom datasets with Transfer Learning\nUse image classification models in Android with both images and live camera footage\nObject Detection in Android\nCollect and Annotate Dataset for Object Detection Model Training\nTrain Object Detection Models\nUse object detection models in Android with Images & Videos\n\n\nThe Android Advantage: By the end of this course, you'll be equipped to:\nTrain advanced machine learning models for accurate predictions\nSeamlessly integrate tflite models into your Android applications\nAnalyze and use existing regression & vision (ML) models effectively within the Android ecosystem\n\n\nWho Should Enroll:\nAspiring Android developers eager to add predictive modeling to their skillset\nBeginner Android developer with very little knowledge of mobile app development\nIntermediate Android developer wanted to build a powerful Machine Learning-based application\nExperienced Android developers wanted to use Machine Learning models inside their applications.\n\n\nStep into the World of Android and Machine Learning: Join us on this exciting journey and unlock the potential of Android and Machine Learning. By the end of the course, you'll be ready to develop Android applications that not only look great but also make informed, data-driven decisions.\nEnroll now and embrace the fusion of Android and Machine Learning!",
      "target_audience": [
        "Beginner Android Developers who want to train ML models and build Machine Learning based Android Applications",
        "Aspiring Android developers eager to add ML modeling to their skillset",
        "Enthusiasts seeking to bridge the gap between Machine Learning and mobile app development.",
        "Machine Learning Engineers looking to build real world applications with Machine Learning Models"
      ]
    },
    {
      "title": "In-App Purchases in iOS7 - the lazy man's guide",
      "url": "https://www.udemy.com/course/in-app-purchases-in-ios7-the-lazy-mans-guide/",
      "bio": "Learn to add In-App Purchases in your iOS game in under one hour",
      "objectives": [
        "You will learn to add In-App Purchases to your app"
      ],
      "course_content": {
        "Welcome": [
          "Be the first... or the second... or the third... well, don't be the last one!",
          "In-App Purchases are King"
        ],
        "RMStore": [
          "Download RMStore",
          "Adding RMStore",
          "Overview of the example project",
          "The app ID",
          "Provisioning profiles",
          "Creating an app in iTunes Connect",
          "In App Purchase IDs",
          "RMAppDelegate",
          "RMStoreViewController",
          "RMPurchasesViewController"
        ],
        "A step by step example": [
          "Create the app ID and the development provisioning profile",
          "Create the app and In-app IDs in iTunes Connect",
          "Starting a new project and adding some buttons",
          "Adding IBActions and connecting the buttons to them",
          "Creating the IBAction methods",
          "Download resources",
          "Downloading RMStore and adding it to your project",
          "Setting up RMStore in AppDelegate",
          "Is the product purchased?",
          "Buying a Non-Consumable",
          "Buying a Consumable",
          "Consuming a Consumable",
          "Restoring Purchases",
          "Testing",
          "Take a look at the fully commented final project too"
        ],
        "Conclusion": [
          "Last thoughts on RMStore"
        ]
      },
      "requirements": [
        "A Mac",
        "You need to be enrolled in the iOS Developer Program"
      ],
      "description": "IMPORTANT UPDATE: Now you can follow along a step by step example of me implementing RMStore into a project. Hurray!\n\n\nI'll be sweet and short.\n\"Lazy\" here means \"simple and straight to the point\".\nAll of us heard about the FREE2PLAY model. You give your app for free, than you put some ads in or offer In-App Purchases. You may offer In-App Purchases for removing the ads or for buying coins, new levels, upgrades etc.\nThe problem is that adding In-App Purchases to your app or game can be a lot of hard work. It can be confusing and frustrating. You could spend days or even weeks figuring out how it works and how it all comes together.\nHere's where this course can help you.\nIn under less than an hour you will learn to add In-App Purchases to your apps.\nWe will be using RMStore, a lightweight iOS library. RMStore adds blocks and notifications to StoreKit, plus receipt verification and transaction persistence. All in one class without external dependencies. Also, it is well maintained and supports iOS7. Now, that's music to my ears :)\nStop spending your time on unmaintained libraries or hundreds of dollars on outsourcing.\nYou have to do three things:\nTake this course\nAdd In-App Purchases to your apps\nProfit!\nNote: RMStore supports consumables and non-consumables. It needs a little adjusting to support auto-renewable subscriptions (not covered in this course). If you are interested in adding auto-renewable subscriptions to your app stay tuned, a new course on the topic is on its way.",
      "target_audience": [
        "all iOS developers"
      ]
    },
    {
      "title": "NS0-003: NetApp Technology Associate Professional",
      "url": "https://www.udemy.com/course/ns0-003-netapp-technology-associate-professional/",
      "bio": "\"Mastering the Fundamentals of NetApp Storage Solutions and Cloud Technologies\"",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "The NS0-003: NetApp Technology Associate certification course is designed for individuals who are looking to build foundational knowledge in NetApp storage solutions and cloud technologies. This entry-level course covers the essentials of data storage, protection, and management using NetApp products, focusing on both traditional on-premises and cloud environments.\nThrough this course, you will gain a solid understanding of NetApp’s core technologies, including ONTAP, storage provisioning, data protection methods, and hybrid cloud solutions. You will also learn how to manage and troubleshoot storage systems, as well as leverage cloud technologies to meet modern data management needs.\nKey Learning Outcomes:\nNetApp Storage Systems: Understand the architecture, components, and configurations of NetApp storage solutions.\nData Protection & Security: Learn the basics of data protection, including backup, disaster recovery, and data security features in NetApp environments.\nCloud Integration: Explore NetApp’s cloud solutions, including Cloud Volumes ONTAP and hybrid cloud strategies.\nStorage Management: Gain hands-on experience in provisioning, monitoring, and troubleshooting NetApp storage systems.\nThis course is ideal for IT professionals, storage administrators, cloud enthusiasts, and anyone looking to start a career in storage and data management. By the end of this course, you'll be equipped with the knowledge to manage NetApp storage solutions and take the next step toward achieving your certification.",
      "target_audience": [
        "Entry-Level IT Professionals, Storage and Data Management Specialists"
      ]
    },
    {
      "title": "The Ultimate React Native Mastery Bootcamp",
      "url": "https://www.udemy.com/course/complete-react-native-course-from-zero-to-mastery/",
      "bio": "Learn React Native from scratch. Build real-world full-stack apps using Expo, CLI, and Firebase with modern UI/UX.",
      "objectives": [
        "Build Mobile Applications from Scratch",
        "Master State and Props Management",
        "Implement Advanced Navigation Techniques",
        "Integrate APIs and Handle Data",
        "Utilize Modern UI Components",
        "Optimize Performance and Debugging",
        "Customize and Extend React Native Apps",
        "Prepare and Publish Apps to the Play Store"
      ],
      "course_content": {
        "Introduction to React Native": [
          "Introduction"
        ],
        "Environment Setup": [
          "React Native Environment Setup in Windows"
        ],
        "Getting Started": [
          "React Native Make Your First Program",
          "React Native App File Structures"
        ],
        "Basic Components": [
          "React Native Basics: Text, View, and Button UI",
          "Introduction to JSX in React Native: What is JSX?",
          "Understanding Components in React Native",
          "Handling Buttons and onPress Events in React Native"
        ],
        "State and Props": [
          "React Native State",
          "React Native Props",
          "State and Props in Class Component"
        ],
        "Form Handling": [
          "Handling Text Input in React Native",
          "Handling Forms in React Native"
        ],
        "Mastering List Rendering: Map Function, FlatList, and SectionList": [
          "FlatList in React Native",
          "Creating Lists with Map Function",
          "Grid Layout in React Native",
          "Component Loop with FlatList",
          "Section List in React Native"
        ],
        "Class Components and State Management: Fundamentals, State, and Lifecycle Method": [
          "Class Components in React Native",
          "State and Props in Class Components",
          "Lifecycle Methods in React Native",
          "Hooks & useState Hook | Build Counter App"
        ],
        "useEffect Hook Lifecycle Methods & Rendering and Styling:": [
          "Component Did Mount",
          "Component Did Update",
          "Conditional Rendering",
          "Component Will Unmount",
          "Responsive Layout with Flexbox",
          "Button Styling with TouchableOpacity and TouchableHighlight"
        ],
        "UI Components": [
          "Custom Radio Buttons",
          "Dynamic Radio Buttons",
          "Activity Indicator (Loader)",
          "Dialog Box and Modal",
          "Pressable Component Overview",
          "Mastering the Status Bar Component",
          "Using the Platform Module in React Native",
          "Building Custom Dialog Boxes in React Native",
          "Installing NPM Packages & Converting Websites to Apps in React Native"
        ]
      },
      "requirements": [
        "Familiarity with JavaScript fundamentals such as variables, functions, and loops will be helpful, though not strictly required."
      ],
      "description": "Master React Native and Become a Full-Stack Mobile App Developer — Build and Deploy Real Apps from Day One.\nUnlock the full potential of mobile development with The Ultimate React Native Mastery Bootcamp — a comprehensive course designed to take you from beginner to confident, full-stack React Native developer.\nWhether you're just starting out or leveling up your skills, this course equips you with everything you need to build production-ready mobile apps. We go beyond syntax and focus on building real, usable apps with industry-standard tools and practices.\nWhat You’ll Learn:\nReact Native fundamentals: JSX, Props, State, Hooks\nNavigation using Stack, Tab, and Drawer Navigators\nForm handling, validation, and user authentication\nIntegrating REST APIs with Axios & JSON Server\nWorking with local storage, AsyncStorage, and Firebase\nFull-stack authentication with JWT\nDebugging, performance optimization & app deployment\nExpo and React Native CLI workflows\nWhat You’ll Build:\nAI Image Generator App (with Replicate API)\nFull-featured Music Player with Media Controls\nE-commerce Watch Store (with cart & product details)\nAuthentication System with JWT & Secure Storage\nWallpaper Gallery App with Grid View & Downloads\nBook Listing App with Search and Filters\nAnd more — with every project taught step-by-step\nWho Is This Course For?\nBeginners who want to break into app development\nWeb developers expanding into mobile apps\nFreelancers and entrepreneurs building their own products\nAnyone who wants to learn by building, not just watching\nWith 15+ hours of content, lifetime access, downloadable source code, and instructor support — this is more than a course. It’s your roadmap to becoming a professional mobile developer.\nStart building real apps today — enroll now and join the full-stack React Native revolution.",
      "target_audience": [
        "Beginners in Mobile Development: Individuals new to mobile app development who want to learn how to build cross-platform mobile apps using React Native.",
        "JavaScript Developers: Developers with a background in JavaScript or web development looking to expand their skill set to mobile app development.",
        "Aspiring App Developers: Students and professionals aspiring to build a career in mobile app development and want to master React Native from scratch.",
        "Entrepreneurs and Business Owners: Those interested in creating mobile apps for their startups or businesses without relying on external developers."
      ]
    },
    {
      "title": "The Complete Android App Development Bootcamp - Zero to Hero",
      "url": "https://www.udemy.com/course/the-complete-android-app-development-bootcamp-zero-to-pro/",
      "bio": "From Beginner to Android App Developer with Just One Course!",
      "objectives": [
        "You will learn by doing, where every lesson is incorporated into a real-world app project",
        "Start your own app based business",
        "After the course, you will be able to build any app you want",
        "Become a digital nomad by working as a freelance Android developer",
        "Master Android App Development from scratch",
        "Go from a complete beginner - even with no previous programming experience - to a real Android App Developer"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course"
        ],
        "Setting up Environment": [
          "Downloading and Installing Android Studio on Windows",
          "Download and Run a Second Copy of Android Studio using the ZIP Archive",
          "Setting up a Virtual Device"
        ],
        "Getting Started": [
          "Creating an Android Studio project for your app",
          "Building a first screen Hello World"
        ],
        "Android Foundation - Platform and Framework": [
          "Android Application Project Folder Structure",
          "Discovering the Android Manifest file",
          "Android Manifest file - Example",
          "Android Permissions - Protecting User Data in Android Apps"
        ],
        "Android Foundation - Gradle Build System": [
          "Introduction and Roles of Gradle in Android Development",
          "Structure of Gradle Build Files in Android Development",
          "settings.gradle.kts file (Project Settings)",
          "Project-level build.gradle.kt file",
          "Module-level build.gradle.kts file",
          "gradle.properties file(Project Properties)",
          "libs.versions.toml file(Version Catalog)",
          "local.properties file(SDK Location)",
          "gradle-wrapper.properties file(Gradle version)",
          "proguard-rules.pro file(ProGuard Rules for “:app”)",
          "Example for Using Dependencies in Gradle Build Files in Android"
        ],
        "Kotlin Basics": [
          "Variables Declaration with Val and Var",
          "Type Inference",
          "Basic Data Type - Numbers",
          "Basic Data Type - Unsigned Integers",
          "Basic Data Type - Boolean",
          "Basic Data Type - Char",
          "Basic Data Type - String",
          "Basic Data Type - Array",
          "Comments",
          "Packages",
          "Imports",
          "String Templates",
          "Loop",
          "Range",
          "Exception Handling",
          "Referential Equality and Structural Equality",
          "'this' expression and scope",
          "Class Instantiation"
        ],
        "Android Layouts": [
          "Android Layouts - Introduction, What and Why",
          "Android Layouts - Layout XML, View Hierarchy and Layout Tree, Common Layout Type",
          "Android Layouts - LinearLayout",
          "Android Layouts - RelativeLayout",
          "Android Layouts - ConstraintLayout",
          "Android Layouts - Other Useful Layouts",
          "Android Layouts - Best Practices for Using Layouts",
          "Android Layouts - Conclusion"
        ],
        "Android Studio Layout Editor": [
          "Layout Editor - Introduction, What and Why, Interface, View Mode, Drag-and-Drop",
          "Layout Editor - Constraints, Attributes, Previewing, Example, Best Practices"
        ],
        "Android Foundation - Activity": [
          "Understanding of Activity in Android Development",
          "Activity Lifecycle - Logging the Activity Callback Methods",
          "Activity Lifecycle - Saving and Restoring the Activity State"
        ],
        "Android Foundation - Intent": [
          "Intents in Android Development",
          "Intent example – Starting Activity using Intent",
          "Intent example – Retrieving a Result from an Activity"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "No paid software required - all apps will be created in Android Studio (which is free to download)",
        "I'll walk you through, step-by-step how to get Android Studio installed and set up",
        "A Windows PC or Mac with access to the internet"
      ],
      "description": "Important Note Before You Buy This Course: This is not a course that is just for the purpose of selling it to you for profit. Of course, I made this course and want to sell it to you for profit, but that is not the first reason I made this course! I made this course for myself first. The main purpose of making this course is that it is like a notebook for my programming career path, firstly. In this notebook, I will always take notes of the experiences that I have learned during my study and work. The content of the course will always be updated by me in the way I keep a daily and weekly diary. I also want to share this notebook of mine with you by selling this course. Coming to this course, you will have a notebook recording all the experiences in the learning and working process of a developer in the profession (that's me - up to now I have more than 10 years working in the programming profession), and moreover, you will have this course will continue to be updated until I am still on this programming career path. Rest assured, I will stick with this programming path for a very long time, because it can be seen that I have been attached to it for more than 10 years, it has become an important part, a hobby, a passion in my life. If you are also curious or interested in this course, I invite you to open this diary of mine. Sincerely, thank you!\n\nThe Complete Android App Development Bootcamp - Zero to Hero!\nDo you want to build real Android apps from scratch and publish them to the Google Play Store? This course is your one-stop guide to becoming a professional Android developer – even if you’ve never written a single line of code before!\nIn The Complete Android App Development Bootcamp - Zero to Hero!, you’ll learn step by step how to design, develop, and launch fully functional Android applications using both Java and Kotlin.\nWhat you’ll learn\nMaster the fundamentals of Android development with Java and Kotlin.\nSet up and use Android Studio like a pro.\nBuild beautiful and responsive user interfaces with XML and Material Design.\nWork with databases (SQLite, Room) to store and manage data.\nConnect apps to the internet, use APIs, and handle JSON data.\nCreate real-world apps such as a to-do list, notes app, and weather app.\nLearn debugging, testing, and performance optimization techniques.\nPublish your own apps to the Google Play Store.\nWhy this course?\nBeginner-friendly – no prior coding experience required.\nClear, structured learning path from fundamentals to advanced concepts.\nHands-on projects that give you real, portfolio-ready apps.\nAlways updated with the latest Android tools and best practices.\nWho is this course for?\nComplete beginners who want to start a career in Android development.\nDevelopers from other backgrounds (web, iOS, backend) who want to expand into mobile.\nStudents or tech enthusiasts who want to create their own Android apps.\nBy the end of this bootcamp, you’ll have the skills and confidence to build, test, and publish Android apps – and kickstart your journey as a professional Android developer.\nThis course is assisted by Artificial Intelligence (AI) tools.",
      "target_audience": [
        "If you are an absolute beginner to coding, then take this course.",
        "If you are a seasoned programmer, then take this course to to get up to speed quickly with Android native app development. We'll get you familiar with Android development in no time!",
        "If you are switching from Java to Kotlin then this is a fast-track way of doing it. You can get started straight away with the Intermediate Kotlin Language module.",
        "Aspiring app developers looking to create a portfolio of apps, land a job, or launch their own Android apps on Google Play."
      ]
    },
    {
      "title": "Create a gmail clone with flutter and firebase",
      "url": "https://www.udemy.com/course/gmail-clone-with-flutter-and-firebase/",
      "bio": "Learn how to build the exact gmail app with flutter and firebase",
      "objectives": [
        "Full gmail clone with flutter",
        "How to upload and retrieve Image files from Firebase Storage and Firebase Firestore",
        "Firebase Firestore",
        "Flutter Frontend Development",
        "Firebase Storage",
        "Complex data-structure with firestore",
        "Streambuilder with real-time data",
        "Flutter Backend Development"
      ],
      "course_content": {
        "App showcase": [
          "App demo"
        ],
        "Setup": [
          "Setting up project and firebase"
        ],
        "Authentication": [
          "User authentication"
        ],
        "Inbox and AddMail": [
          "Inbox and AddMail page design",
          "Add and recieve mail"
        ],
        "View,star,delete and searchmail": [
          "View,star,delete and search mail"
        ]
      },
      "requirements": [
        "Some experience with flutter",
        "Good internet with laptop"
      ],
      "description": "Hello guys. So you wanna learn how to make the exact clone of gmail with flutter and firebase. Then you are at the right place. I will teach you everything you need to build that app. We will develop this app using Flutter (Dart Programming Language) with Firebase Firestore as backend. At the end of this course you will be able to make your own fully functional backend flutter applications with Firebase Firestore.\n\n\nThings we will learn\nUser authentication\nStoring images in a storage bucket\nComplex data-structure for firebase\nNeat and Clean UI\nQuerying in firestore\nFlutter widgets\nReal-time data with stream-builder",
      "target_audience": [
        "Flutter developers who want to learn making really complex apps"
      ]
    },
    {
      "title": "Code Smart: Flutter + AI Tools to Build SpendSage",
      "url": "https://www.udemy.com/course/code-smart-flutter-ai-tools-to-build-spendsage/",
      "bio": "Master AI-assisted Flutter development: Create a full-featured expense app using Claude ai and GitHub Copilot",
      "objectives": [
        "How to effectively use Claude AI for code generation and Leveraging GitHub Copilot and Cody in VSCode",
        "Writing effective prompts for AI tools and Validating and debugging AI-generated code",
        "Building reusable widgets efficiently and Implementing complex UI layouts with AI help",
        "State management solutions recommended by AI",
        "Custom animated dialogs, Local data storage for expenses, Expense tracking and categorization and Interactive charts and data visualization",
        "Currency handling and conversion, Spending limits and warnings system, Profile management and Adaptive expense parsing",
        "Integrating multiple AI tools in development and Balancing AI assistance with manual coding"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Claude AI Application prompt",
          "Run the base Application",
          "Complete The Claud AI base Application"
        ],
        "Enhancing UI & User Experience with AI": [
          "Add Bottom Navigation Bar",
          "HomeScreen UI update and reusable widgets",
          "Create a profile screen",
          "Add local expense",
          "Animated Dialog",
          "Reuse animated dialog"
        ],
        "Advanced Features & Smart Expense Tracking": [
          "Adaptive expense parser",
          "ChartsScreen",
          "Currency and Limit refactor",
          "Spending warnings"
        ]
      },
      "requirements": [
        "Just some basic programming experience needed, you will learn almost everything you need to know.",
        "Flutter 3.24.3 or newer, Dart 3.5.3 and VSCode"
      ],
      "description": "Are you ready to revolutionize your Flutter development workflow? This course teaches you how to build professional Flutter applications using the power of AI tools like Claude ai, GitHub Copilot, and Cody.\nIn this hands-on course, you'll learn how to create SpendSage, a complete expense tracking application, while mastering the art of AI-assisted development. Instead of writing every line of code manually, you'll discover how to leverage AI tools effectively to accelerate your development process without compromising code quality.\nWhat makes this course unique:\nLearn to write effective prompts for AI tools to generate quality code\nUnderstand how to validate and modify AI-generated solutions\nBuild a production-ready app with minimal manual coding\nMaster the integration of multiple AI tools in your development workflow\nThroughout the course, you'll build SpendSage from scratch, implementing features like:\nBeautiful, responsive UI with custom animations\nLocal expense tracking and categorization\nInteractive charts and data visualization\nSmart expense parsing\nSpending limits and warning systems\nCurrency handling and conversion\nProfile management\nThis course is perfect for:\nFlutter developers looking to boost their productivity with AI tools\nDevelopers interested in modern AI-assisted development workflows\nAnyone who wants to build professional Flutter apps faster\nDevelopers curious about practical applications of AI in coding\nPrerequisites:\nBasic understanding of Flutter and Dart\nFamiliarity with mobile app development concepts\nNo prior experience with AI tools required\nBy the end of this course, you'll have:\nA complete, production-ready expense tracking application\nPractical experience with AI-assisted development\nThe ability to use AI tools effectively in your projects\nUnderstanding of best practices for AI-assisted Flutter development\nJoin us in exploring the future of Flutter development, where AI tools become your coding partners, helping you build better applications faster.\nStart your journey into AI-assisted Flutter development today and transform the way you build apps forever!",
      "target_audience": [
        "Beginner or advanced Developer"
      ]
    },
    {
      "title": "React Native & Expo: Build a Modern eCommerce App Fast 2025",
      "url": "https://www.udemy.com/course/react-native-expo-build-a-modern-ecommerce-app-fast-2025/",
      "bio": "Design and Develop a Full Stack Stunning eCommerce App with React Native, Expo, MongoDB, Express, Nativewind.",
      "objectives": [
        "Learn to build a pixel-perfect eCommerce app frontend inspired by professional Figma designs using React Native and Expo.",
        "Gain proficiency in using React Native’s core components and Expo libraries to craft modern, responsive interfaces.",
        "Build seamless multi-screen navigation using React Navigation to enhance the app's user experience.",
        "Add interactivity with animations, modals, and dropdowns to create a dynamic user experience."
      ],
      "course_content": {
        "Frontend - App Development": [
          "Introduction",
          "App Setup for Development",
          "Ecommerce App Github Repository",
          "Setup Nativewind",
          "Setup Fonts",
          "Setup Splash Screen",
          "Developing Custom Components",
          "Developing Tab Navigational Bars",
          "Developing Login Screen",
          "Developing Password Screen",
          "Developing Register Screen",
          "Developing Reset and Email Sent Screens",
          "Developing On-Boarding Screens",
          "Developing Home Screen",
          "Developing Categories Product Screen",
          "Developing Orders Screen",
          "Developing Individual Product Detail Screen",
          "Developing Cart Screen",
          "Developing Checkout Screen",
          "Developing Order Success Screen",
          "Developing Profile Screen",
          "Developing Address Screen",
          "Developing Favorites Screen",
          "Developing Notifications Screen",
          "Developing Category Search, Filter Logic Screen"
        ]
      },
      "requirements": [
        "Familiarity with JavaScript fundamentals, including ES6+ syntax, is recommended.",
        "A foundational understanding of React concepts like components, props, and state will be helpful.",
        "Prior installation of Node.js and npm is required to set up the development environment.",
        "A willingness to explore React Native and build visually appealing apps!"
      ],
      "description": "Are you ready to create a visually stunning and modern eCommerce app? In this course, you’ll learn how to design and develop a professional mobile app frontend using React Native and Expo. From translating Figma designs to building reusable components, this course provides everything you need to create a responsive, interactive, and user-friendly app.\nThis course is ideal for developers and designers who want to bring their ideas to life or start a career in mobile app development. Whether you’re a beginner or have prior experience, the step-by-step approach ensures you can follow along and build something amazing.\nWhat Makes This Course Unique:\nFigma-to-App Workflow: Learn how to take professional designs from Figma and implement them into code.\nFocus on Frontend: This course focuses entirely on crafting a beautiful and functional UI, preparing you for future backend integration.\nHands-On Experience: Build real-world components such as product listings, cart interfaces, and navigation menus.\nModern Techniques: Utilize the latest React Native and Expo tools to create responsive layouts and engaging animations.\nWhat You’ll Learn:\nHow to set up and configure your development environment with Expo and React Native.\nBest practices for implementing professional UI/UX designs in your app.\nBuilding reusable components for scalability and maintainability.\nCreating interactive features like modals, dropdowns, and animations to enhance the user experience.\nUsing React Navigation to implement seamless navigation between pages.\nStructuring your codebase for easy backend integration in the future.\nWhy Should You Take This Course?\nPractical Skills: Learn by doing! This course walks you through building a real eCommerce app, step by step.\nCareer Opportunities: With React Native’s growing popularity, these skills are in high demand among employers and clients.\nFoundation for Full-Stack Development: While this course covers the frontend, it prepares you for backend integration, which will be added in future updates.\nFlexible Learning: Suitable for self-learners, students, and professionals at any stage of their career.\nWho This Course is For:\nDevelopers looking to expand their skills in mobile app development.\nUI/UX designers who want to bring their Figma designs to life.\nBeginners with basic knowledge of JavaScript and React who want to build their first professional app.\nEntrepreneurs or freelancers who want to create their own eCommerce apps.\nBy the end of this course, you’ll have a fully designed, responsive eCommerce app frontend ready to impress users, clients, and employers.\nFuture Updates:\nThis course will be updated to include backend development, covering user authentication, database integration, payment gateways, and more. Stay tuned to take your app to the next level!\nTake the first step in building your dream eCommerce app today. Enroll now and start creating!",
      "target_audience": [
        "Aspiring Mobile App Developers",
        "Frontend Developers",
        "UI/UX Enthusiasts",
        "Entrepreneurs and Freelancers"
      ]
    },
    {
      "title": "Build a Google Docs Clone with Flutter and Mongodb",
      "url": "https://www.udemy.com/course/build-a-google-docs-clone-with-flutter-and-mongodb/",
      "bio": "Unleash the Power of Node js and Socket IO for Seamless Real-time Collaboration",
      "objectives": [
        "Understand the fundamentals of Flutter and Node js development.",
        "Implement Google Sign-In functionality for user authentication.",
        "Utilize Socket IO to enable real-time collaboration in your app.",
        "Store and retrieve data using MongoDB, a NoSQL database.",
        "Implement state persistence using JsonWebToken and Shared Preferences.",
        "Utilize the Riverpod state management solution for a scalable and maintainable codebase."
      ],
      "course_content": {
        "Module 1 - Flutter Configuration": [
          "Create a New Project",
          "Design Login Screen",
          "Download the Code"
        ],
        "Setup Google OAuth": [
          "Setup Google Auth for Android",
          "Setup Google Auth for IOS",
          "Setup Google Auth for Web",
          "Create Auth Repository",
          "Assign the Functionality",
          "Download the Code"
        ],
        "Configure Node Js Project": [
          "Create a Node Js Project",
          "Creating an Express Server",
          "Establish MongoDB Connection",
          "Create a Signup Route",
          "Model User Data",
          "Test Api with Postman",
          "Download the Code"
        ],
        "Implement Authentication": [
          "Creating User Dart Model",
          "Call Signup Api from Client",
          "Test the Sign In Functionality",
          "Create Auth Middleware",
          "Video 18 - Route to get user data",
          "Store Token in Shared Preferences",
          "Check Auth State",
          "Implement Routemaster Package",
          "Sign Out Functionality",
          "Download the Code"
        ],
        "Work on Document Screen": [
          "Route for Creating Document",
          "Document Repository",
          "Function to Create Document",
          "Fetch all my Documents",
          "Document Screen UI",
          "Flutter Quill Text Editor",
          "Method to Update Title",
          "Get Document by id",
          "Download the Code"
        ],
        "Socket IO Integration": [
          "Establish Socket Connection",
          "Realtime Collaborative Editing",
          "Implement Auto Save",
          "Copy link to Share",
          "Download the Complete Code"
        ]
      },
      "requirements": [
        "Familiarity with Flutter framework and Dart programming language.",
        "Basic Knowledge of Node js and Mongodb.",
        "Willingness to engage in hands-on coding.",
        "Flutter SDK and VS Code installed"
      ],
      "description": "Are you ready to take your app development skills to new heights? Join us on an exciting journey as this course will guide you through building a Google Docs Clone, a cutting-edge app that enables real-time collaboration and document sharing.\n\n\nIn this comprehensive course, you'll dive deep into the world of Flutter, the revolutionary framework for building beautiful and responsive user interfaces. With Flutter as our frontend, you'll learn how to create stunning and dynamic app screens that captivate users and provide an exceptional user experience. But we don't stop there. We'll delve into the power of Node js and MongoDB, creating a robust backend that seamlessly handles user authentication, data storage and real-time updates. We will learn to harness the potential of Google Sign In functionality to provide secure and convenient access to your app, and leverage Socket IO to enable users to collaborate in real-time.\n\n\nState persistence is crucial for any app, and we'll equip you with the knowledge to implement token-based authentication and store them efficiently using Shared Preferences. Managing app state is a breeze with Riverpod, a state management solution that provides scalability and maintainability. You'll gain full control over your app's state, allowing for easy expansion and future-proofing.\n\n\nUpon completing this course, you'll have all the skills necessary to develop cross platform applications with build custom backend. That means no more relying on Firebase all the time.",
      "target_audience": [
        "Beginner and intermediate Flutter developers who are looking to advance their skills in app development.",
        "Backend developers seeking to integrate custom backends with Flutter and explore Socket io and MongoDB.",
        "Students who want to master the most in demand technologies."
      ]
    },
    {
      "title": "Apple Watch for Beginners, Learn by Making 5 Real-World Apps",
      "url": "https://www.udemy.com/course/apple-watch-tutorial/",
      "bio": "Create and Sell Your Own Apple Watch Apps. 100% Beginners Friendly. Learn Swift from Total Scratch.",
      "objectives": [
        "Create 5 Full Apple Watch apps from Scratch",
        "Start a new career into wearables programming world",
        "Publish your own Apple Watch apps on the AppStore and get profit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Xcode"
        ],
        "Build a To-Do List Watch App": [
          "Get to know Xcode",
          "Setup the table",
          "Styling our app",
          "Fun with colored tasks",
          "Screens & features",
          "Challenge"
        ],
        "Build a Stopwatch App": [
          "What are we going to build",
          "Starting from the bottom",
          "Creating the UI",
          "Make it work!",
          "Wrap up the app",
          "Challenge"
        ],
        "Build a Weather App": [
          "What we're going to build",
          "Crafting the UI",
          "Make it prettier",
          "Adding functionality",
          "Make it usefull",
          "Enhancing the app",
          "End it with colors",
          "Challenge"
        ],
        "Create a Twitter App using Glances & Notifications": [
          "Warming up",
          "A glance at Glances",
          "Make it Glance",
          "What are notifications!?",
          "Notify me",
          "Challenge"
        ],
        "Build a Water Intake Calculator": [
          "Concept Overview",
          "Get the interface done",
          "Persistent water!?",
          "Thirsty for functionality",
          "\"Prep-animating\"",
          "Animate it!",
          "Challenge"
        ],
        "Conclusion": [
          "Congratulations!"
        ]
      },
      "requirements": [
        "Xcode 6+",
        "Mac OS X"
      ],
      "description": "-Over 65,000 Udemy students are currently taking courses by Sebastian, with hundreds of positive (4-5 star) reviews.\n-We've been building Udemy courses since 2012, with 38 Udemy courses published and have created educational content for Amazon and Intel.\nBecome a professional Apple Watch developer by learning how to build your own 5 Real-World wearable apps from scratch using Swift and XCode.\nNo prior programming experience is required!\nBy the hand of seasoned iOS developer and consultant Sebastian Dobrincu, you'll build your first 5 Real-World Applications. You can modify these apps and publish them as your own. By enrolling in this course you get full, life-long access to all the material including source code, videos and other assets.\nYou'll learn how to build 5 different, full apps from scratch:\nTo-Do List App (use Tables, Groups, Targets, Transitions, Passing Data)\nStopwatch App (use Timers, Buttons, Design Patterns)\nWeather App (use Networking, Data Fetching, JSON Format, Custom Menus)\nTwitter Clone App (use Notifications, Glances, App Icons)\nWater Intake Calculator App (use Sleek Animations, Data Persistency, Pages)\nNot only you will learn how to create useful and interesting apps, but we'll also keep a close eye on design patterns and assure that our creations look as good as possible.\nMake your ideas a reality, gain new skills and make money as a freelance Apple Watch developer or by selling your own wearable apps on the App Store!",
      "target_audience": [
        "Anyone with basic to none programming experience",
        "People who want to learn how to program Apple Watch apps, for their career or for fun."
      ]
    },
    {
      "title": "Introducing Maps in SwiftUI using MapKit",
      "url": "https://www.udemy.com/course/introducing-maps-in-swiftui-using-mapkit/",
      "bio": "Build map enabled apps in SwiftUI",
      "objectives": [
        "Map view in SwiftUI",
        "MKMapView from UIKit to SwiftUI",
        "Core location integration into SwiftUI",
        "Integration of Maps in SwiftUI based apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started with Maps in SwiftUI": [
          "Maps in SwiftUI",
          "Map Interaction Modes"
        ],
        "Map Annotations": [
          "Map Markers and Map Pins",
          "Custom Map Annotation in SwiftUI"
        ],
        "Advanced Map Features": [
          "Map Types",
          "User Location Tracking",
          "Custom Annotation with Callout animation"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Knowledge of SwiftUI"
      ],
      "description": "Map view was introduced in the world of SwiftUI with the release of iOS 14. Map is a view that displays an embedded map interface. Map view displays a region and you can use this view natively in SwiftUI view. Map view has many configuration options which will allow you to display or track a location and even interact with the map on the view.\n\n\nSwiftUI map is great to bring up maps and display some of the basic functionalities in the map but its no match to UIKit version of MKMapView. But the porting over UIKit map is easy. In this course we will start with a simple map and explore all the functionalities there are for maps to offer from SwiftUI's. From there we will explore some of the advance options map map annotations and map markers. We will also build map marker using pure SwiftUI views.\n\n\nSwiftUI map version doesn't support different types of maps yet but we can add that support by building UIKit version of the map. This map will allows us to support map type of SwiftUI world.\n\n\nWe will also explore ability to add core location framework to support user's location tracking along with subscribing to receive published user location as they move in the map.",
      "target_audience": [
        "Developers who wants to integrate Maps in SwiftUI and build map based apps for iOS in SwiftUI"
      ]
    },
    {
      "title": "Create a CRUD Application with Ionic 3 and Firebase",
      "url": "https://www.udemy.com/course/create-a-crud-application-with-ionic-3-and-firebase/",
      "bio": "Create a Shopping List with Ionic 3, Angular 4.3 and Firebase",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Project Introduction"
        ],
        "Ionic 3 and Firebase - Shopping List": [
          "Create the Project and Install Dependencies",
          "Lazy Loading Pages",
          "Adding AngularFire2",
          "Firebase Rules",
          "Adding the Add ShoppingItemPage",
          "AddItemPage View",
          "ShoppingItem Model",
          "Adding Shopping Items",
          "Displaying Shopping Items",
          "Editing Shopping Items",
          "Adding a ToastService",
          "Removing Items from the List",
          "Source Code"
        ]
      },
      "requirements": [
        "You should have NodeJS and the Ionic CLI installed",
        "You should have a basic understanding of Angular and Ionic"
      ],
      "description": "Create a CRUD Application with Ionic 3 and Firebase\nIn this course by Paul Halliday, author of Learn Ionic 3 From Scratch and Master Ionic Native; we create a Shopping List application with Ionic 3 and Firebase.\n\nAt the end of this course you will be able to:\nCreate a high performance mobile application using web technologies (HTML5 and JavaScript).\nUnderstand the Create, Retrieve, Update, Delete pattern(s) with AngularFire2\nUse the Observable pattern and RxJS\nWe use Firebase for our real-time database and authentication, as well as the latest release candidate which includes the modularisation of AngularFire2 into different modules.\nPaul Halliday is a Progress Telerik Developer Expert, BSc (Hons) Computer Science @ UoS and a Google Accredited Mobile Site Professional. Paul releases daily videos on his YouTube channel.",
      "target_audience": [
        "Anyone who wants to create a cross platform mobile application with Ionic and Firebase"
      ]
    },
    {
      "title": "Create Business Applications with AppSheet",
      "url": "https://www.udemy.com/course/create-business-applications-with-appsheet/",
      "bio": "A Basic Guide to Build Data Driven Mobile Apps & Web-Apps in Minutes",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "What is AppSheet?"
        ],
        "Working with data": [
          "Types of Data Sources",
          "Connecting Data Sources",
          "Adding Tables",
          "Setting Table Permissions",
          "Establishing Column Types",
          "Column Types: Dates & Times",
          "Column Types: Lists & Dropdowns",
          "Column Types: Content, Media & Signatures"
        ],
        "Define the UX of your app": [
          "Positioning & Labeling App Views",
          "View Types",
          "Calendar View",
          "Form Views",
          "Detail Views",
          "Map Views",
          "XY Map Types",
          "Deck Views",
          "Table Views",
          "Gallery Views",
          "Chart Views",
          "Dashboard Views"
        ],
        "Behaviors & Automation": [
          "Introduction to App Behaviors",
          "Creating Custom Actions, Buttons & Links",
          "Examples of Actions",
          "Automating with Workflows",
          "Customizing Generated Emails & PDFs",
          "Determining How App Data Syncs",
          "Example of App Syncing"
        ],
        "Keeping apps secure": [
          "Understanding app security",
          "Requiring User Sign-In",
          "Filtering Data with 'Security Filters'",
          "Encrypting Your Data"
        ],
        "Managing and publishing your apps": [
          "Deploying Applications",
          "Inviting Users",
          "Sending Notifications & Announcements to Users",
          "Follow-Up: Broadcasting Notifications"
        ]
      },
      "requirements": [
        "You should be knowledgable of spreadsheet software like Excel, Google Sheets, or Smartsheet. Database knowledge is also applicable.",
        "We'll teach you how to create mobile apps with AppSheet, so some general knowledge of the AppSheet platform is helpful."
      ],
      "description": "Learn how to build mobile, tablet & browser applications without using any code, and how to solve a variety of workflow & automation scenarios for your business.\nThis beginner-level course walks new app creators through the process of defining & connecting data sources, customizing app interfaces, incorporating basic layers of automation, generating notifications & reports, and deploying apps to teams of users.\nLearn how to incorporate features like:\nData Collection\nBarcode Scanning\nImage & Signature Capture\nGPS & Maps\nOffline Functionality\nCalendars, Charts & Image Galleries\nTo help support common scenarios such as:\nPerform Inspections & Surveys\nManage Field Service Teams\nAutomate Team Notifications\nBuild Analytics Dashboards & Reports\nControl & Update Inventory\nShare Team Resources",
      "target_audience": [
        "Anyone that wants to create mobile apps without having to write code.",
        "People who have data in spreadsheets and want to manage access to the data from multiple devices and by multiple users",
        "Anyone interested in mobile app creation"
      ]
    },
    {
      "title": "iOS 7 Development Workshop- Using iOS 7 Location Services",
      "url": "https://www.udemy.com/course/ios-7-development-location-services/",
      "bio": "An iOS Programming Workshop By Infinite Skills To Further Your iOS Development Skills.",
      "objectives": [
        "Learn How To Use Location Services In Your iOS 7 Application Development"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction To iOS Location Services",
          "0102 Options For Mapping Locations",
          "0103 Geocoding",
          "0104 How To Access Your Working Files"
        ],
        "Using MKMapItem": [
          "0201 Displaying A Map",
          "0202 Getting Directions"
        ],
        "Locations": [
          "0301 Getting The Current Location",
          "0302 Calculating Distance"
        ],
        "Using MapKit": [
          "0401 Setup And MKMapView UI",
          "0402 Setting The Region And Map Type",
          "0403 Displaying The Current Location",
          "0404 Map Annotations"
        ],
        "EventKit - Location Based Reminders": [
          "0501 Creating Reminders",
          "0502 Location Based Reminders"
        ]
      },
      "requirements": [
        "Apple Mac"
      ],
      "description": "In this Mastering iOS 7 Development – Location Services training course, expert author Keith Welch demonstrates and explains how to develop iOS location services for the iPhone and iPad. This course assumes you already have experience working with xCode and building iOS 7 apps.\n\nYou will start out by learning the different options for mapping locations and how to get the users current location. You will learn about displaying a map and creating a map that zooms. Keith will teach you how to provide turn-by-turn directions, calculate the distance, and switch from road to satellite views. Finally, this video tutorial will teach you how to create reminders and location based reminders.\n\nBy the completion of this computer based training course, you will have gained the necessary knowledge and skills needed to work with location services while building your iOS 7 apps using xCode. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Mobile Application Developers"
      ]
    },
    {
      "title": "iOS App Development with Swift 5 and iOS 14",
      "url": "https://www.udemy.com/course/ios-app-development-with-swift-5-and-ios-14/",
      "bio": "Learn how to build real world apps with Swift using advanced iOS development techniques made simple for beginners",
      "objectives": [
        "\"Best storyboard constraints usage and explanation ever\"",
        "Xcode 12",
        "Swift 5",
        "iOS 14",
        "Storyboards",
        "Model-View-Controller Design Pattern",
        "Master-Detail Application",
        "Networking",
        "Decoding JSON Data",
        "And so much more..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction - What You Will Learn In This Course",
          "Tools and Tips for Success"
        ],
        "Convert Me! - Currency Converter App": [
          "Building A New Project In Xcode",
          "Storyboards Pt 1: Adding and Styling Our Views",
          "Storyboards Pt 2: Constraints",
          "Coding the Currency Model",
          "Creating the Controller Functions",
          "Connecting Our Code to the Storyboard",
          "ConvertViewController Pt 1: Making Our IBActions Work",
          "ConvertViewController Pt2: Coding the Picker View",
          "Testing, Fixing, and Adding Finishing Touches",
          "Convert Me! Coding Challenge"
        ],
        "Doggy Data - Master Detail App": [
          "See Finished App and Set Up New App Project",
          "Storyboards Pt 1: Controllers and Segues",
          "Storyboards Pt 2: Adding Views and Constraints",
          "Scrolling",
          "Coding Our Model and Controller",
          "Coding the TableViewController",
          "Viewing the Doggy Data",
          "Doggy Data Coding Challenge #1: Add More Info Link",
          "Doggy Data Coding Challenge #2: Sorting the Doggies"
        ],
        "Office Quotes - Build A Networking App": [
          "See Finished App and Set Up New App Project",
          "Designing Our App In the Storyboard",
          "Coding Our Quote Model",
          "Coding Our Quote Controller",
          "Connecting It All Together",
          "Office Quotes Coding Challenge: Fetch Random Episode"
        ],
        "Conclusion": [
          "Course Complete: Congratulations! You Did It!"
        ]
      },
      "requirements": [
        "Course is for absolute beginners",
        "iOS Development requires Xcode (free), running on a Mac"
      ],
      "description": "Developing mobile apps for iOS is a great way to supplement your income and create the apps that you've always wanted. Every year Apple releases new and better tools for developers and users to create apps that push the boundaries of technology and imagination.\nWhat used to be just iOS development has now become a full ecosystem of devices to develop for, including the iPhone, iPod Touch, iPad, Mac, Apple TV, and Apple Watch. Learn iOS app development with Swift 5 and automatically you will be prepared to develop for all the different Apple devices.\nIn this course you will learn the essentials for designing and coding useful, real-world mobile apps using Swift 5 and Xcode, along with hundreds of Apple developed APIs to make developing for their devices smooth, simple, and fun!\nWhich apps will I build?\nFirst, we'll create a Currency Converter app that allows the user to enter an amount in US dollars and get it converted to other currencies from around the world.\nWe'll be learning all about Storyboards, the Model-View-Controller design pattern, functions in Swift 5, how to use Constraints and AutoLayout to design our app for all the different screen sizes at once, and so much more.\nNext, we'll build an app using tables and lists, something every developer needs to know, in our app Doggy Data.\nWe'll learn about Scroll Views, how to build a master-detail application, how to transfer data between different screens in your app, and how to decode raw JSON data to use in your app.\nAfter that, we'll build a fun little app that connects to the internet and pulls random The Office quotes from online and displays them in our app.\nWe'll learn all about networking and running code in the background to avoid lags, as well as diving deeper into decoding and organizing data that may come in a less organized manner than we would like it too. We'll also learn how to read, understand, and use an online API.\nWhere can I use iOS development skills?\nMobile developers are in very high demand in the job market, with an average salary of over $100,000 a year in the USA. Every company wants an app, because they know everyone has a mobile phone that they carry with them at all times. Mobile is the future, and more and more employers are jumping on that train every single day.\nMany mobile developers have also started indie development studios to develop apps or games for Apple devices. Many of these indie studios have gone on to create some of the biggest and most successful apps on the App Store.\nMobile development skills can also give you a sense of satisfaction and purpose, knowing that anytime you think of a new app idea, you can be the one to create it and bring it to life! There's just no other feeling like it!\nLet's get started!\nI appreciate you considering this course as you take the first steps to becoming an expert iOS developer. I can't wait to see what you create!\nCome on, let's get started!",
      "target_audience": [
        "Beginner iOS developers with a passion for creativity and learning"
      ]
    },
    {
      "title": "AI-Powered Android Apps with GPT-3",
      "url": "https://www.udemy.com/course/ai-powered-android-apps-with-gpt-3/",
      "bio": "Master AI Integration and Elevate Your Android Apps with GPT-3 Power",
      "objectives": [
        "Integrate GPT-3 into Android apps",
        "Learn to use OpenAI API",
        "Implement GPT-3 functionalities into your backend server",
        "Build fully functional Android apps powered by OpenAI's GPT-3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Open AI and GPT-3?",
          "What can you create with GPT-3?",
          "Installing the necessary tools"
        ],
        "Next.js Backend": [
          "Creating Open AI account",
          "Open AI API Documentation",
          "Playground",
          "CreatingNext.js project",
          "API key",
          "Creating route",
          "Testing"
        ],
        "Android app": [
          "Project creation",
          "Project Structure",
          "Styling",
          "Retrofit Setup",
          "Connecting to Room database",
          "Creating a repository",
          "Dagger Hilt setup",
          "Navigation",
          "All questions screen",
          "Ask a question screen",
          "Answer screen"
        ],
        "Final Seection": [
          "Congratulations!"
        ]
      },
      "requirements": [
        "Basic Android app development skills",
        "Willingness to learn AI integration.",
        "Computer or laptop with internet connection"
      ],
      "description": "Embark on an exciting journey into the world of advanced app development with this comprehensive course, \"AI-Powered Android Apps with GPT-3\". As the tech landscape continues to evolve, the integration of Artificial Intelligence (AI) into mobile applications has become a game-changer. This course empowers aspiring Android developers, from novices to experienced programmers, with the skills and knowledge needed to infuse AI capabilities into their apps seamlessly.\nWhether you're a student, hobbyist, or professional developer, this course welcomes all skill levels. No prior AI experience is necessary; you will be guided through every step of the process. By the end of the course, you'll possess the expertise to craft cutting-edge Android applications that stand out in the competitive app market. Join me today to harness the immense potential of GPT-3 and redefine the future of Android app development.\nWhat will the course cover:\nOpenAI API integration\nGPT-3\nNext.js 13 as a backend server\nJetpack Compose\nRetrofit, Room, Dagger Hilt\nMVVM Clean architecture\nDeployment\nAt the end of the course, you will receive a certificate!\nAbout the instructor:\nI am an Android developer with 6 years of experience. I have successful apps in Google Play (150k+ downloads). I am willing to help and guide anybody who wants to learn how to become a great Android developer!\nClick the BUY NOW button and start learning. Take the first step toward revolutionizing your Android apps!",
      "target_audience": [
        "Aspiring Android developers looking to add AI features to their apps",
        "Android app developers seeking to expand their skill set into AI integration",
        "Individuals with basic Android app development skills",
        "Students, hobbyists, and professionals interested in AI-powered app development"
      ]
    },
    {
      "title": "Mobile App Development in 27 Minutes: Android",
      "url": "https://www.udemy.com/course/create-an-android-app-in-12-minutes-with-android-studio/",
      "bio": "Android app in Android studio. Learn Android app development now!",
      "objectives": [],
      "course_content": {
        "Introduction and setup": [
          "Introduction",
          "How to set up Android Studio and Android simulators"
        ],
        "Creating a basic Android App in 15 minutes": [
          "How to create a new Android project in Android Studio",
          "How to configure the main screen of an Android app (activity_main.xml)",
          "How to write Java code inside MainActivity.java"
        ],
        "Bonus app features (Complete in 11 minutes)": [
          "Bonus 1: How to add an alpha animation to an Android button",
          "Bonus 2: How to debug an Android app",
          "Farewell and your next steps in Android Development",
          "BONUS: Your Next Course Awaits"
        ]
      },
      "requirements": [
        "You will need a PC / Mac / Linux machine (Android Studio runs on all of them)",
        "No prior knowledge of programming needed!"
      ],
      "description": "Tired of seeing endless 'How to code 50 Android apps in 10 days' courses?\nEver just wanted to get stuck in to Android app development right away?\nWell, that's why I created this Android development course! No other course takes you from beginner (with no experience) to a full Android app in less time than it takes to make a sandwich! I will show you how to:\nInstall Android Studio (and required extras)\nSetup the graphical look of your app\nConnect layout elements like buttons and Text Fields to your java code\nCode in Java within an Android activity\nStore items in Android Shared Preferences, making them accessible across app restarts\nThis course is for you if you:\nAre a beginner or novice to Android App development\nWant to understand Android apps in a short period of time\nLove proceeding at an awesomely brisk pace!\nThis course is not for you if:\nYou are an expert or intermediate programmer\nWhat software do you need?\nAndroid Studio (free) which runs on PC / Mac / Linux\nDo you need experience?\nNo. I assume you are a complete beginner to apps and development in general\nWhat makes this course different?\nIt's just so quick! Take i right now and you'll learn Android apps before you can even blink! Everyone used to tell me apps were hard to make - but they're wrong. It's probably because they had bad teachers - join me and I'll show you what good teaching is!\n------------------------------------------------\nPLEASE NOTE: This course is designed to get you up and running with Android and Android Studio in record time. Therefore we have limited time to actually explain everything. My other course on Android app development explains everything we do in much more detail.",
      "target_audience": [
        "Beginners should take this course",
        "Experts should not take this course (unless they don't yet know Android Studio)"
      ]
    },
    {
      "title": "Android Programming for the Absolute Beginner",
      "url": "https://www.udemy.com/course/android-for-beginners/",
      "bio": "Want to learn how to write your own Android apps? This Android course for beginners is for you..",
      "objectives": [
        "Create your own apps",
        "Learn the structure of the Android SDK",
        "Understand different xml elements",
        "Learn to code in Java"
      ],
      "course_content": {
        "The Basics": [
          "Installing Eclipse ADT and Android SDK",
          "Setting up a Project and Explaining how to import an Image"
        ],
        "Getting Started": [
          "Intro to XML and Custom Layouts",
          "XML programming & background image",
          "XML made Simple & Java Intro",
          "Introduction to Java & Raw folder",
          "Setting up our Splash Activity",
          "Intro to Threads (finish splash Activity)",
          "Adding Sound with MediaPlayer",
          "Introduction to the Button",
          "Button & Sound Review",
          "Setup a More Advanced XML",
          "Finish new XML and Learn about Weight",
          "Using the getText() and setText() methods",
          "Finish programming our RadioGroup for Style/Gravity",
          "Hardware Menu Button & Menu inflater items",
          "Toast to Built-in Themes",
          "Creating a ScrollView",
          "String Array and ListView",
          "Using ListView to open Activities",
          "Setting up XML for Wallpaper App",
          "Using an ImageView as a Button",
          "Set Wallpaper w Bitmap",
          "Setting Fullscreen and Fixed Screen",
          "Custom View and Constructors",
          "Drawing Rectangles on a Canvas",
          "Animating a Bitmap",
          "Introduction to the SurfaceView",
          "Setting up a SurfaceView Thread",
          "Canvas Lock, Draw, and Post",
          "Drawing Bitmaps on a SurfaceView Canvas",
          "Android's OnTouchListener and MotionEvent",
          "Review of SurfaceView and Thread setup",
          "Sprites, sprite sheet, & animation on Android",
          "Drawing the Spritesheet to Canvas",
          "Creating a sprite update method for animation",
          "Changing Sprite's Direction (row)",
          "Finalizing our sprite sheet animation (modulus)",
          "VideoView for videos in Android",
          "MediaControllers controls MediaPlayers"
        ],
        "Resources": [
          "Download Resources"
        ]
      },
      "requirements": [
        "No prior requirements are necessary, except a computer and being someone that is willing to learn"
      ],
      "description": "In this beginning Android course you will learn everything you will need to start developing your very own android apps, which you can sell in the play store and start making money!  The course is taught in a walk-through fashion by developing our own app and explaining a new key component in each video.  The course will take anywhere from 5-15 hours depending on how comfortable you are with the new material of each lesson.  Subscribe and go from zero to hero.\nTake this Android beginners course now and learn how to write android apps and start making money.",
      "target_audience": [
        "Absolute beginners"
      ]
    },
    {
      "title": "Build an OLX / Ebay clone with Flutter, Firebase and Getx",
      "url": "https://www.udemy.com/course/build-an-olx-clone-with-flutter-firebase-and-getx/",
      "bio": "Create a Full Stack Second Hand Online Market Place App with Flutter, Firebase and Getx",
      "objectives": [
        "Full Stack Mobile Application Creation",
        "User authentication with Firebase",
        "Retrieval of User Location",
        "Getx statemanagement",
        "Uploading images to firebase",
        "Storing data in firebase",
        "Good file structure",
        "Implementing Real Time Chats",
        "Viewing and Searching Products",
        "Selling Products",
        "Deleting Products",
        "Beautiful UI/UX",
        "Refresh Products",
        "Viewing Own Ads",
        "Updating Profile",
        "Sign out functionality"
      ],
      "course_content": {
        "Getx Crash Course": [
          "Getx state management overview",
          "Getbuilder",
          "Getx and Obx",
          "Getx navigation"
        ],
        "Project and Firebase Setup": [
          "Getting the packages",
          "Firebase setup",
          "Configuration of files"
        ],
        "Authentication with Google Sign-in": [
          "Building login screen UI",
          "Building register screen UI",
          "Creating authcontroller with getx",
          "Getting location of user",
          "Firebase authentication setup",
          "Authenticating the user",
          "Implementing login functionality",
          "User navigation depending on authentication"
        ],
        "Navigation": [
          "Building bottom navigationbar",
          "Adding getx state"
        ],
        "Sell Products Screen": [
          "Starting screen UI",
          "Title and description screen UI",
          "Getx state for categories",
          "Product model",
          "Photos screen UI",
          "Getx state for adding photos",
          "Saving product to firebase"
        ],
        "Homescreen UI": [
          "Search bar UI",
          "Categories scroller UI",
          "Featured products UI",
          "Recommended products UI"
        ],
        "Displaying featured products": [
          "Getx home controller",
          "Getting featured products from firebase",
          "Showing them in UI"
        ],
        "Displaying recommended products": [
          "Recommended products from firebase",
          "Show them in UI",
          "Showing user location of product"
        ],
        "View products screen": [
          "Product image",
          "Product description",
          "Product location map",
          "User report and message options",
          "User information of product",
          "Adding user data on UI",
          "Address popup for location",
          "Report user functionality"
        ],
        "My products screen": [
          "Tab bar UI",
          "Getx state for tab bar",
          "Getting current user products",
          "My product card UI",
          "Showing products depending on state",
          "Popup for deleting or changing status"
        ]
      },
      "requirements": [
        "Basic knowledge about Flutter and Dart",
        "Flutter , Dart and IDE installed"
      ],
      "description": "Welcome to \"Build an OLX Clone with Flutter, Firebase, and GetX\"! In this comprehensive course, you will learn how to create a fully functional second-hand marketplace app similar to OLX or Ebay using Flutter, Firebase, and GetX. Whether you're a beginner looking to start your journey into app development or an experienced developer seeking to expand your skills, this course is designed to provide you with the knowledge and hands-on experience needed to build real-world applications.\nFeatures:\nEmail & Password Authentication\nGetting Location of User\nPersisting Auth State\nSelling Products\nFeatured and Recommended Products\nProduct Details\nProduct Location\nSearching Products\nBrowse Categories\nReal-Time Chat with Sellers\nRefresh Products\nViewing My Own Ads\nDeleting my Ads\nViewing my Profile\nUpdating my Profile\nUpdating my Location\nSign Out\nBy the end of this course, you will have gained the skills and confidence to build your own fully functional second-hand marketplace app using Flutter, Firebase, and GetX. Whether you're looking to launch your own startup, enhance your portfolio, or simply expand your Flutter development skills, this course will equip you with the knowledge and experience needed to succeed in the rapidly growing field of mobile app development. Enroll now and start building your OLX clone today!",
      "target_audience": [
        "Developers who want to build real world apps",
        "Flutter devs who want to gain practical knowledge in flutter",
        "Beginner Flutter developers looking to build bigger applications",
        "Flutter devs who want to learn getx by building apps"
      ]
    },
    {
      "title": "Flutter Riverpod For Complete Beginner",
      "url": "https://www.udemy.com/course/flutter-riverpod-for-complete-beginner/",
      "bio": "Master Flutter State Management with Riverpod",
      "objectives": [
        "Flutter",
        "Riverpod",
        "Lint",
        "Freezed"
      ],
      "course_content": {
        "Introduction": [
          "Source Code & Support",
          "Setup IDE",
          "Getting Started With Riverpod - StateProvider",
          "Notifier Provider",
          "Async Notifier Provider",
          "Auto Dispose Provider",
          "Custom State Class",
          "Provider Listener",
          "Filter Provider State Change",
          "Provider Listen Manual",
          "Read vs Watch vs Listen",
          "Consumer Widget",
          "Provider Refresh and Invalidate",
          "Riverpod Generator",
          "Dependency Injection",
          "Passing parameters",
          "Future Provider",
          "Stream Provider",
          "GoRouter Provider",
          "Riverpod Lint",
          "What's Next?"
        ]
      },
      "requirements": [
        "Basic of Flutter and Dart"
      ],
      "description": "Unlock the power of Flutter and take your app development skills to the next level with \"Flutter Riverpod for Complete Beginners\"! This course is designed for those who want to master state management in Flutter using Riverpod, one of the most efficient and scalable packages available today.\nWhether you're new to Flutter or looking to enhance your understanding of state management, this course covers everything you need to know—from the basics of Flutter to integrating Riverpod for managing app-wide state. We’ll guide you through practical, real-world examples, ensuring you gain a solid foundation in Riverpod while building responsive and dynamic apps.\nBy the end of this course, you’ll learn how to efficiently manage state, handle dependencies, and create reactive applications that are clean and maintainable. You’ll also explore key concepts like Providers, Consumers, StateNotifiers, and asynchronous state handling with StreamProvider and FutureProvider.\nWhether you're working on small projects or complex, scalable applications, this course equips you with the skills to build robust apps with confidence. You’ll also gain hands-on experience building real apps, making the learning process engaging and interactive. Join us and get started with Riverpod—an essential tool for any Flutter developer aiming to create powerful and responsive applications!",
      "target_audience": [
        "Flutter Developer"
      ]
    },
    {
      "title": "\"Build and Monetize Android Apps with AI(using Lovable)",
      "url": "https://www.udemy.com/course/monetize-lovable-apps-android-apk-conversion-for-amazon-app/",
      "bio": "Convert Your Lovable Projects into Android Apps – Publish on Amazon app store & Start Earning.",
      "objectives": [
        "how to use lovable app creator",
        "how to use github",
        "Create android apps from web apps",
        "market on app store"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Explore the Amazon app store": [
          "Explore app Niches on amazon App Store",
          "Selecting the app to build"
        ],
        "Building our app": [
          "Sign Up on Lovable and create our App",
          "Download the app and run locally",
          "Prepare the project for ANDRIOD studio",
          "Build the android Apk (in Andriod studio)"
        ],
        "Publish the app on AMAZON APP STORE": [
          "Upload The app on amazon app store"
        ]
      },
      "requirements": [
        "basic Programing skills, java script, how to use visual studio code"
      ],
      "description": "Turn Your App Ideas into Passive Income — Without Writing a Single Line of Code!\nWant to build real Android apps and earn money—without coding? This beginner-friendly course teaches you how to use AI + Lovable dev to create, customize, and publish apps on the Amazon App store, even if you’ve never programmed before.\nHere’s What You’ll Learn:\nFind Profitable App Ideas – Use data-driven strategies to pick winning concepts.\nBuild with AI & Lovable – Turn plain English prompts into fully functional apps.\nCustomize in VS Code – Enhance your app with GitHub Copilot Chat (GPT‑4)—no manual coding required.\nGenerate an Android APK – Use Android Studio to convert your project into a publishable app.\nLaunch on Amazon App store – Monetize through installs, ads, or in-app purchases and start earning.\nWho Is This For?\nAspiring developers who want to break into tech without learning to code.\nEntrepreneurs & side hustlers looking for a low-effort, high-reward income stream.\nCreators & idea-makers who want to turn concepts into real, money-making apps.\nWhy This Works?\nNo experience needed – AI handles the heavy lifting.\nPassive income potential – Earn while you sleep.\nReal-world results – Publish apps that users love.\nNo code. No fluff. Just results. Enroll now and start monetizing your ideas today",
      "target_audience": [
        "Beginners AND intermediate ,experts"
      ]
    },
    {
      "title": "Reskin And Publish Amazon App On Amazon App Store",
      "url": "https://www.udemy.com/course/reskin-and-publish-amazon-app-on-amazon-app-store/",
      "bio": "Guide To Learn How To Reskin And Publish Amazon App On Amazon App Store",
      "objectives": [],
      "course_content": {
        "Intro Of The Game": [
          "Intro Of The Game",
          "Introduction Of The Source Code Of The Game"
        ],
        "Importing Project Into Eclipse And Making Necessary Change": [
          "Importing Project Into Eclipse",
          "Making Change In AndroidManifest And SRC Folder Of Code"
        ],
        "Adding Advertising ID To The Code": [
          "Adding Advertising ID To The Code"
        ],
        "Additional Change In Code": [
          "Additional Change In Code"
        ],
        "Reskin Of Code": [
          "Reskin Of Code"
        ],
        "Uploading Game To Amazon Developer Dashboard - Process One": [
          "Uploading Game Process One"
        ],
        "Create Game Leaderboard For Your Game - Process Two": [
          "Create Game Leaderboard For Your Game - Process Two",
          "New Process Of Creating Leaderboard In Amazon App Dashboard"
        ],
        "Uploading Binary .apk File To Amazon Developer Dashboard - Process Three": [
          "Uploading Binary .apk File To Amazon Developer Dashboard"
        ],
        "Updated Code With Multiple Character Features And IAP Features": [
          "Updated Game Intro",
          "Updated Code Intro",
          "Updated Code In Eclipse Necessary Change",
          "Updated Code Additional Change In Eclipse Engine",
          "Updated Code IAP Settings"
        ],
        "Bouns": [
          "Android Source Code",
          "iOS Source Code"
        ]
      },
      "requirements": [
        "Eclipse Engine",
        "Windows PC, MAC",
        "Photoshop CS5, CS6, CC"
      ],
      "description": "Are you ready for an adventure?! Join Udemy's class and learn how to Reskin your own Amazon Apps! No prior programming experience necessary.\nThank you for your interest in this course, my name is Dusan, I will be your instructor.\nWith this course we will give you the full Source Code of a game called Dot In Dark.\nWe'll walk you through everything needed to reskin and submit your App to the Amazon App Store.\nI’m assuming you know nothing or very little, and I’m gonna help you succeed having your very own game, published in the Amazon App Store, without having to write not even one single line of code!\nThis game is easy to pick up, fun, and extremely addictive. It have all important ingredients needed to make it to the Top Charts of Amazon App Store.\nBy the way this game will bring you passive income because the Source Code comes with Advertising already integrated for you.\nNow, if you ever wanted to create a game really quickly, this is the right course for you.\nI don’t have to tell you that in the Mobile App Industry, these are priceless skills to add to your toolbox.\nMake the right decision and join us now. I’ll see you in the classroom.",
      "target_audience": [
        "This Course In Meant To Get You Familiar With Amazon App Store Submission Process",
        "Entrepreneurs",
        "Indie Develpers",
        "People Interested In Making New Way Of Income"
      ]
    },
    {
      "title": "Algorithms and Data Structures",
      "url": "https://www.udemy.com/course/algorithms-data-structures/",
      "bio": "Develop your programming logic by creating Algorithms and learn how to implement different Data Structures.",
      "objectives": [
        "Algorithm creation",
        "Development of programming logic",
        "How to optimize resources, operations and execution times",
        "Different data structures, how they work and how to implement them in code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get the most out of this course",
          "Familiarize yourself with the Udemy environment"
        ],
        "Algorithms - Development of programming logic": [
          "Development of programming logic",
          "Exercises (Includes best practice tips)",
          "Exercises (Includes tips on how to learn from others)",
          "Exercises",
          "Optimization of an Algorithm",
          "Algorithm for perfect numbers",
          "How to Debug an Algorithm (Debugging) Part 1",
          "How to Debug an Algorithm (Debugging) Part 2",
          "Source code of this section",
          "Check if a number is cool"
        ],
        "Introduction to data structures": [
          "Main data structures",
          "Other data structures (Struct)",
          "Other data structures (UNION)",
          "Other data structures (ENUM)",
          "Source code of this section",
          "Data Structures Quiz"
        ],
        "ARRAYS: Static and dynamical data structures": [
          "Static Arrays",
          "Dynamic Arrays",
          "Character Strings - Part 1",
          "Character Strings - Part 2",
          "Character Strings - Part 3",
          "Source code of this section",
          "CHALLENGE with arrays"
        ],
        "Sorting Algorithms": [
          "Sorting Algorithms. Types and why they are important",
          "Exchange Algorithms (Bubble Sort)",
          "Code implementation of the Bubble Sort algorithm - Part 1",
          "Code implementation of the Bubble Sort algorithm - Part 2",
          "Sorting by selection algorithm",
          "Code Implementation of the Algorithm by Selection - Part 1",
          "Coding Implementation of the Selection algorithm - Part 2",
          "Insertion Algorithm",
          "Code Implementation of the Insertion Algorithm - Part 1",
          "Code Implementation of the Insertion Algorithm - Part 2",
          "Measuring Algorithm Execution Time",
          "Creating Your Own Sorting Algorithm Project - Part 1",
          "Project on Creating Your Own Sorting Algorithm - Part 2",
          "Project on Creating Your Own Sorting Algorithm - Part 3",
          "Final Tips to improve development skills",
          "Source code of this section",
          "Create your own sorting algorithm"
        ],
        "BONUS: RECURSION": [
          "What is recursion?",
          "Recursion Basic Level - Part 1",
          "Recursion Basic Level - Part 2",
          "Recursion Intermediate Level",
          "Recursion Advanced Level (Towers of Hanoi explained in detail) - Part 1",
          "Recursion Advanced Level (Towers of Hanoi explained in detail) - Part 2",
          "Recursion Advanced Level (Towers of Hanoi explained in detail) - Part 3",
          "Source code of this section",
          "Make a recursive function"
        ],
        "MATRICES (ARRAY OF ARRAYS)- DATA STRUCTURES": [
          "Matrices",
          "Static Matrices. Real examples of use - Part 1",
          "Static Matrices. Real examples of use - Part 2",
          "Static Matrices. Real examples of use - Part 3",
          "Matrix Index Manipulations (Exercise) - Part 1",
          "Matrix Index Manipulations (Exercise) - Part 2",
          "Matrix Index Managements (Exercise) - Part 3",
          "Dynamic Matrices - Part 1",
          "Dynamic Matrices - Part 2",
          "Dynamic Matrices - Part 3",
          "Clearing Memory",
          "MultiDimensional Arrays - Part 1",
          "MultiDimensional Matrices - Part 2",
          "Source code for this section",
          "Create an agenda engine"
        ],
        "LISTS (Linear Dynamic Data Structures)": [
          "Lists, types and logic",
          "Code implementation of a list - Part 1",
          "Code implementation of a list - Part 2 -",
          "Code implementation of a list - Part 3",
          "Insert item in the list - Part 1",
          "Insert element in the list - Part 2",
          "Delete element from a list - Part 1",
          "Delete element from a list - Part 2",
          "BONUS: insert element in a specific position - Part 1",
          "BONUS: insert element in a specific position - Part 2",
          "Source code of this section",
          "Complete the schedule we created in the previous section!"
        ],
        "QUEUES (Linear Dynamic Data Structures)": [
          "Logic of a queue",
          "Implementation in Code. Insertion and traversal of elements - Part 1",
          "Implementation in Code. Insertion and Traversal of Elements - Part 2",
          "Remove element and CHALLENGE - Part 1",
          "Remove element and CHALLENGE - Part 2",
          "Source code of this section",
          "Develop the management logic for all the payboxes"
        ],
        "STACKS (Linear Dynamic Data Structures)": [
          "Logic of a stack",
          "Implementation in Code. Insertion and traversal of elements - Part 1",
          "Implementation in Code. Insertion and traversal of elements - Part 2",
          "Remove element and RETO - Part 1",
          "Remove element and CHALLENGE - Part 2",
          "Source code of this section",
          "Develop the management logic of the offered products",
          "FINAL EXAM ON LINEAR DATA STRUCTURES",
          "Other situations"
        ]
      },
      "requirements": [
        "Basic programming knowledge"
      ],
      "description": "In this Algorithms and Data Structures course you will learn in a basic and very complete way the most elementary notions about these pillars of software development. This course will give a complete tour of all the most basic concepts to learn how to create your own algorithms, thanks to the global vision that you will acquire. In fact throughout the course you will learn how to apply each idea to any programming language.\nYou will learn fundamental programming skills:\n- Elementary Algorithms\n- Development of programming logic\n- Best practices when writing code\n- Optimization of resources, time and operations in an algorithm\n- Data Structures implementation in code\nIn addition you will have downloadable didactic material, advice from my +15 years of programming experience, solved exercises and examples of use for real life situations, so that you understand what logic follows each algorithm and know how to implement it in the language of your choice.\n\n\nThe course is divided into 2 main blocks addressed throughout the different sections:\n\n\nAlgorithms\n\n\nIn this block you will learn how to develop from scratch algorithms to solve problems no matter what programming language or technology you use. We will mainly focus on the development logic so that you will be able to transfer the idea to your own development environment. Therefore, no matter what language you use, the contents of these classes will be totally useful for you.\nAmong the different algorithms that we will see are included the sorting algorithms with a detailed explanation of how they work and each line and element of the code that they have. Did you know that in this course we will create a sorting algorithm faster than the famous Bubble Sort, Selection or Insertion? If you want to know how to create algorithms with optimization and efficiency in mind...this is the ideal course for you.\n\n\nData Structures\n\n\nIn this block you will learn about the different Data Structures that exist, from the most basic to the most complex ones, and both static and dynamic data structures. What is a static data structure? And a dynamic one? What are they for? How to use one or the other? All this is explained in the course.\nDid you know that in everyday life there are many situations in which algorithms can be applied to Data Structures? For example in a simple supermarket we find several situations that could be handled with Lists, Stacks and Queues. Precisely in this course we will develop along a complete project, the management of these issues by means of Dynamic Data Structures.\n\n\nWe will develop each one of the functionalities in code explained in detail of the following data structures:\nStatic and Dynamic Data Structures (Arrays and Multidimensional Arrays).\nLinear Dynamic Data Structures (Lists, Stacks and Queues)\nNon-Linear Dynamic Data Structures (Trees)\nAll concepts are explained in detail, step by step and understanding the why of each thing. This way you will be able to grasp a correct foundation on these programming pillars from the very beginning of your professional development. This course will allow you to expand into any area of software development.\nIsn't it great? Well, the best of all is that it is at your fingertips.\nBuy the course and enjoy all that is waiting for you.\nSee you soon!\n\n\nJosé Javier Villena",
      "target_audience": [
        "Programming students",
        "Interested in improving their programming skills"
      ]
    },
    {
      "title": "Build AI Image Generator App With React Native and Publish",
      "url": "https://www.udemy.com/course/build-ai-image-generator-app-with-react-native-and-publish/",
      "bio": "Learn React Native by building an AI-powered image generator app, deploy backend APIs, and publish your app on the Play",
      "objectives": [
        "Build a complete AI image generator app using React Native from scratch.",
        "Deploy a backend server with Node.js, MongoDB, and AI-powered APIs.",
        "Integrate advanced features like image downloading, sharing, and ads monetization.",
        "Publish your app on the Google Play Store with optimized app icons and splash screens."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course"
        ],
        "React Native App Setup": [
          "React Native Project Setup",
          "Setting Up React Native Vector Icons",
          "Bottom Tab Navigation Setup",
          "React Native Vecor Icon Setup"
        ],
        "UI Development": [
          "Home Screen UI",
          "Image Card Component UI",
          "Discover Screen UI",
          "Like Screen UI"
        ],
        "Core Features Development": [
          "Build a Download Modal with Percentag",
          "Download Images to Gallery with React Native Blob",
          "Share Images Using React Native Share",
          "Copy Image URLs in React Native"
        ],
        "Backend Development": [
          "Creating a Node.js Express Server",
          "Generate Image API Using Together and Flux",
          "Connecting MongoDB to Node.js Server",
          "Creating Image Collections in MongoDB",
          "Get All Generated Images API"
        ],
        "Deployment": [
          "Deploy Node.js Server on Vercel",
          "Integrate Frontend with Backend"
        ],
        "Advanced Features": [
          "Flatlist Pagination with Discover Images API",
          "Like Image Feature Using useContext and Async Storage",
          "Implementing Banner Ads in React Native",
          "Setting Up Interstitial Ads in React Native"
        ],
        "App Optimization and Publishing": [
          "Update App Icons in React Native",
          "Add Splash Screens in React Native",
          "Fix App Icon Before Splash Screen Issue",
          "Update App Name for Android and iOS",
          "Generate APK & AAB Files for Google Play Store",
          "Publish App on Google Play Console"
        ],
        "Bonus": [
          "Create Stunning App Mockups for App Store & Play Store",
          "React Native CLI Vs Expo"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript or React is helpful but not mandatory.",
        "A computer with Node.js, npm, and Android/iOS emulator installed.",
        "Enthusiasm to learn app development and a willingness to explore AI tools.",
        "Internet connection to install packages and test APIs."
      ],
      "description": "Unlock the power of AI and mobile app development by creating a fully functional AI Image Generator app using React Native. This course is your ultimate guide to building modern, real-world apps with cutting-edge AI integration. You'll start by setting up your development environment and progress to building a stunning app with an intuitive UI, integrating advanced AI-powered APIs for generating high-quality images, and creating a robust backend with Node.js and MongoDB for seamless data handling.\nNot only will you learn to develop the app, but you'll also explore strategies to monetize it, such as integrating ads to generate passive income. By the end of this course, you'll have the skills to optimize and publish your app on the Play Store, ensuring maximum visibility and downloads.\nWhat you'll learn:\nBuild a React Native app with a sleek and user-friendly design.\nIntegrate AI-powered APIs to generate unique images.\nDevelop and manage backend systems with Node.js and MongoDB.\nOptimize and publish your app to the Play Store.\nMonetize your app effectively with in-app ads.\nWho is this course for:\nBeginner developers eager to learn React Native and AI integration.\nExperienced developers exploring AI-powered app features.\nEntrepreneurs aiming to build and monetize unique mobile apps.\nEnthusiasts passionate about solving real-world problems with tech.\nJoin this course and take a step towards mastering AI-driven app development. Get ready to transform your ideas into impactful, revenue-generating mobile apps!",
      "target_audience": [
        "Beginners who want to learn React Native app development step-by-step.",
        "Developers looking to build and publish AI-powered mobile applications.",
        "Entrepreneurs aiming to create apps with practical monetization features.",
        "Anyone curious about combining AI, mobile development, and backend technologies."
      ]
    },
    {
      "title": "Instagram iOS App in 44 minutes: Photo Sharing on iOS",
      "url": "https://www.udemy.com/course/instagram-ios-app-in-44-minutes-photo-sharing-on-ios/",
      "bio": "Create an Instagram clone in less time than it takes to make dinner!",
      "objectives": [],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Xcode Installation and Simulator Setup"
        ],
        "Creating The Photo Sharing App": [
          "How to Create a New iOS Project in Xcode 7 and Swift 2",
          "Installing Ostetso - A Free Photo Sharing Service",
          "Initialising Ostetso and Showing the Default Gallery",
          "Grabbing a Photo from an iPhone Gallery - Part 1",
          "Grabbing a Photo from an iPhone Gallery - Part 2",
          "How to Share an Image"
        ],
        "Thank you and Where to go Next": [
          "Thank you and Where to go Next"
        ]
      },
      "requirements": [
        "NO programming knowledge needed (but a little helps)"
      ],
      "description": "Ever wanted to make an Instagram clone?\nBefore now you would have to create a server, learn PHP and image handling as well as app coding!\nThat's all changed now. I will take you through the Ostetso framework which is a free photo sharing network. Leverage the power of Instagram in less than an hour! I will show you how to:\nInstall Xcode (and iOS simulator)\nInstall Ostetso\nImport your photos into the app\nCreate a simple sharing function\n\n\n------------------------------------------------\nPLEASE NOTE: This course is designed to get you up and running with Xcode and iOS in record time. Therefore I have limited time to actually explain everything. My other courses on iOS app development explain everything we do in much more detail.\n\n------------------------------------------------",
      "target_audience": [
        "Beginners to iOS or beginners to photo sharing should take this course"
      ]
    },
    {
      "title": "Crash Course in Android Development with Firebase and AdMob",
      "url": "https://www.udemy.com/course/crash-course-in-android-development-with-firebase-and-admob/",
      "bio": "A Crash Course with Firebase, AdMob, Figma, and Play Console Deployment – Design, Develop, Monetize, Publish.",
      "objectives": [
        "Students will confidently use Android Studio, understanding its features and capabilities for efficient Android app development.",
        "Students will be proficient in creating wireframes, designing layouts, and exporting assets from Figma for integration into Android Studio.",
        "Students will grasp the fundamentals of Firebase, covering authentication, real-time data storage with Firestore, and practical implementation in Android projec",
        "Students will understand the concepts of ad integration, create AdMob accounts, and implement ads in Android apps.",
        "Students will confidently navigate the Play Console, ensuring successful app releases, updates, and global distribution to a wide audience of Android users."
      ],
      "course_content": {
        "Introduction": [
          "Setting up development environment"
        ],
        "Widgets": [
          "TextView",
          "EditText",
          "Button",
          "ImageView"
        ],
        "Image Loading and Caching Libraries": [
          "Glide"
        ],
        "Layouts": [
          "LinearLayout",
          "RelativeLayout",
          "ConstraintLayout",
          "ScrollView"
        ],
        "Intent": [
          "Explicit Intent",
          "Implicit Intent"
        ],
        "Recycler View": [
          "ListView",
          "Item design",
          "Model and Adapter",
          "Full integration"
        ],
        "ADMOB": [
          "Banner Ads",
          "Interstitial Ads",
          "App Open Ads"
        ],
        "Flashlight App - PROJECT 1": [
          "Introduction on Flash App",
          "XML Code",
          "JAVA"
        ],
        "Atlas - PROJECT 2": [
          "Introduction on Atlas",
          "Figma Design",
          "Splash Screen",
          "Item Design",
          "Model and Adapter",
          "OnClick in Adapter",
          "Detail Activity XML Coding - Part 1",
          "Detail Activity XML Coding - Part 2",
          "Data Placing",
          "ADS",
          "Publishing the App"
        ],
        "Dialog": [
          "AlertDialog",
          "Custom Dialogs - Figma Design",
          "Custom Dialogs - Coding"
        ]
      },
      "requirements": [
        "Participants should have a foundational understanding of programming concepts and logic. Prior experience in a programming language, preferably in Java, would be beneficial.",
        "It's helpful if participants have a basic familiarity with using Android devices and are comfortable navigating through mobile applications.",
        "A computer or laptop capable of running Android Studio. Specify the minimum system requirements for Android Studio.",
        "Participants should have a stable internet connection to download necessary software updates, SDKs, and other resources during the course."
      ],
      "description": "In this Android development crash course, students will acquire a comprehensive set of skills covering various aspects of Android app development. By the end of the course, students will have a strong foundation in both the technical and design aspects of creating Android applications. Here's an overview of what students will learn:\n1. Introduction to Android Development:\nUnderstand the fundamentals of Android development.\nSet up and navigate Android Studio, the official IDE for Android development.\nCreate a basic Android project and explore the project structure.\n2. User Interface Design with Figma:\nLearn how to use Figma for UI/UX design.\nCreate wireframes and design app layouts.\nExport assets and integrate designs into Android Studio.\n3. Building User Interfaces with Jetpack Compose:\nDive into Jetpack Compose for modern UI development in Android.\nBuild layouts, components, and navigation in Compose.\nImplement Figma designs using Compose.\n4. Firebase for Backend Services:\nUnderstand the role of Firebase in Android development.\nSet up a Firebase project and configure it in Android Studio.\nImplement Firebase Authentication for user sign-in.\nWork with Firestore for real-time data storage.\n5. Integrating AdMob for Monetization:\nExplore AdMob and mobile advertising concepts.\nCreate an AdMob account and set up ad units.\nIntegrate AdMob ads into Android apps.\nLearn best practices for app monetization.\n6. Advanced Android Concepts:\nExplore advanced concepts like Kotlin Coroutines for asynchronous tasks.\nUnderstand and use Android Jetpack components such as ViewModel and LiveData.\nImplement Room Database for local data storage.\nIntegrate third-party libraries and APIs into Android projects.\n7. Testing and Debugging:\nWrite unit tests and UI tests in Android.\nUtilize the Android Profiler for performance analysis.\nDebug common issues and optimize app performance.\n8. Publishing the App to Google Play Console:\nPrepare the app for release and generate a signed APK or App Bundle.\nCreate a developer account on Google Play Console.\nUpload the app, set up store listing, and manage releases.\n9. Final Project and Capstone:\nApply the acquired skills in a final project.\nBuild and refine a complete Android app with instructor guidance.\nPresent and submit the final project.\n10. Continuous Learning Resources:\nAccess recommended books, blogs, and websites for ongoing learning.\nJoin Android developer communities and forums.\nStay updated with the latest Android trends and technologies.\nThe course is designed to provide a hands-on, practical learning experience, allowing students to build a real-world Android application while gaining proficiency in essential tools and technologies. Through this crash course, students will develop the skills needed to design, develop, and deploy Android apps, with a focus on creating a seamless user experience and exploring avenues for app monetization.",
      "target_audience": [
        "Beginner Programmers: Individuals who are new to programming and want to start their programming journey with a focus on Android app development.",
        "Aspiring Android Developers: Individuals with a passion for mobile technology and a specific interest in becoming Android app developers.",
        "Tech Enthusiasts: Tech enthusiasts who want to explore the world of mobile app development and gain hands-on experience in creating Android applications.",
        "Students and Recent Graduates: College students or recent graduates in computer science or related fields looking to enhance their skills in mobile app development.",
        "Career Switchers: Professionals from other fields who aspire to transition into a career in Android app development and require a quick but comprehensive introduction.",
        "Self-Learners: Individuals who prefer self-paced learning and want to acquire practical skills in Android development with a focus on the essentials."
      ]
    },
    {
      "title": "Flutter & Firebase E-commerce (Main, MultiVendor, Admin) app",
      "url": "https://www.udemy.com/course/flutter-firebase-e-commerce-main-multivendor-admin-app-e/",
      "bio": "From Online Shopping to Cars to Real Estate. This is your ultimate flutter course. Master flutter like never before!",
      "objectives": [
        "Create a new flutter project / Import an existing flutter project",
        "Design UI for the apps to improve UX",
        "Understand the code written in dart for the Main app",
        "Understand the code written in dart for the Vendor app and Admin app."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup": [
          "Flutter SDK Setup",
          "Install Git",
          "Install Android Studio",
          "Enable Flutter to locate Android Studio (cmd)"
        ],
        "Import Project": [
          "Flutter Doctor (cmd) & Flutter Plugins - Importing Project",
          "Import Project",
          "Setup Flutter - Dart SDK Path",
          "Connect Project to Firebase"
        ],
        "Cheki Shopping (Customers App)": [
          "Splash Screen",
          "main.dart",
          "Main Screen Shopping",
          "Category Screen",
          "Category-Sub Fashion Screen - Fetching sub-categories from firebase",
          "Category-Sub Fashion Screen - App Bar",
          "Category-Sub Fashion Screen - Displaying sub-categories",
          "Category-Sub Fashion Screen - Displaying products",
          "Category-Sub Fashion Screen - Add To Cart button",
          "Category-Sub Fashion Screen - Select Size as you Add To Cart",
          "Category-Sub Fashion Screen - Add item To Cart",
          "All Products Screen",
          "Product Detail Screen - Overview",
          "Product Detail Screen - Images CarouselSlider",
          "Image Slider Screen - Zoom In & Out",
          "Product Detail Screen - Product Name, Brand Name, Price, Size",
          "Product Detail Screen - Delivery Information",
          "Product Detail Screen - Key Features & Product Details",
          "More Detail Screen - Description Screen",
          "Seller Store Screen",
          "Cart Screen - Overview",
          "Cart Screen - Displaying products",
          "Cart Screen - Total price",
          "Checkout Screen - Overview",
          "Checkout Screen - Delivery Address",
          "Edit Profile Screen",
          "Checkout Screen - Items in Cart, Payment",
          "Success Screen",
          "Orders Screen",
          "Order Detail Screen",
          "Account Screen",
          "Inbox Screen",
          "Country Screen",
          "Account Management, Edit Profile, Delete My Data... Screens",
          "Home Screen - Cheki Shopping app & NestedScrollView behaviour",
          "Home Screen - Cheki Super app",
          "Home Screen - Banner Images",
          "Home Screen - Passing selected category",
          "Home Screen - Products ListView (Horizontal)"
        ],
        "Cheki Vendor (Sellers App)": [
          "Login & Signup",
          "Destination Screen",
          "Main Vendor Screen - Earnings Screen",
          "Upload Screen",
          "Edit Product Screen",
          "Orders Screen",
          "Logout Screen",
          "Cars, Real Estate etc."
        ],
        "Cheki Admin (App)": [
          "Introduction & Splash Screen",
          "Admin Login",
          "Main Screen Admin",
          "Admin Orders Screen - Overview",
          "Admin Orders Screen - AdminOrdersModel",
          "Admin Order Details Screen - Overview",
          "Admin Order Details Screen - Order ID, Price, Size",
          "Admin Order Details Screen - Item in customer's order",
          "Admin Order Details Screen - Update current delivery stage",
          "Admin Order Details Screen - Send a message to customer",
          "Admin Order Details Screen - Draft messages",
          "Deals Shopping - Overview",
          "Deals Shopping - SearchTab",
          "Deals Shopping - DealsTab",
          "Deals - Cars, Real Estate etc.",
          "Logout Screen"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know!"
      ],
      "description": "Welcome to this Flutter & Firebase E-commerce (Main, Vendor, Admin) app course.\n\n\nThis course is designed for computer users who have limited or no previous exposure to Flutter.\n\n\nYou don't need any previous programming experience to follow along and all you need to code in dart language under the Flutter framework, is either Android Studio or Visual Studio.\n\n\nIn this full course, you will learn how to develop (complete apps) the Main Shopping app for customers, the Vendor app for sellers and the Admin app.\n\n\nUpon completion of this training, you should have a good working knowledge of Flutter, allowing you to develop apps using the dart language - flutter framework, not only in the field of e-commerce, but also in the fields of Real Estate and Automobiles like (cars).\n\n\nIn this course, you'll understand the code written in dart for the Main app, Vendor app and Admin app.\n\n\nSome of the things that you will learn include but are not limited to;\n\n\nMain App\n\n\nOnline Shopping Stand-alone App OR Super App\nPush Notification\nSplash Screen\nHome Screen (Banner Ads/Images, Deals / Products on offer)\nCategories Screen\nProducts Screen (Filter using sub-categories)\nProduct Detail Screen (Product Name, Brand Name, Price, Delivery Information, Key Features, Description, Seller Information)\nImage Slider Screen (Zoom In / Out)\nSeller Store\nAccount Screen\nAdd Item to Cart (Select sizes as you Add Item to Cart)\nCart Screen\nCheckout Screen\nConfirmation Screen\nOrders Screen & Order Detail Screen\nInbox Screen\nSearch Screen\nCountry Screen (Select Your Country)\nAbout Screen\nPrivacy Policy Screen\nCustomer Login & Signup\nAccount Management (Edit Profile Screen & Delete My Data / Close Account Screen)\nCars / Real Estate\n\n\nVendor App\n\n\nSplash Screen\nSeller Login & Signup\nEarnings Screen (Store Management Dashboard for Sellers)\nAdd Item (Details, Sizes, Images)\nEdit Item (Details, Sizes)\nPublishing And Unpublishing  Products\nOrders Screen & Order Detail Screen\n\n\nAdmin App\n\n\nSplash Screen\nAdmin Login\nShopping: Manage Products (Approve/Reject new vendor's products)\nShopping: Manage Orders - Orders Screen & Order Detail Screen (Confirm/Approve new orders)\nShopping: Manage Orders - Update current delivery stage\nShopping: Manage Orders - Send message to customer\nShopping: Put and Remove Deals on Home Screen of the Main App\n\n\nAnd many more...\n\n\nOk... Let's get started!",
      "target_audience": [
        "Flutter beginners curious on how to develop a complete e-commerce platform (Main app, Vendor app, Admin app)."
      ]
    },
    {
      "title": "Build a Full Stack Wallpaper App: From Design to Deployment",
      "url": "https://www.udemy.com/course/build-a-full-stack-wallpaper-app-from-design-to-deployment/",
      "bio": "Learn to build a full-stack Wallpaper App using React Native, Next.js, MongoDB, and Express.js with hands-on projects.",
      "objectives": [
        "Design and develop a complete wallpaper app using React Native, Next JS, Express JS and Mongo DB.",
        "Implement user authentication, database management, and RESTful API integration.",
        "Deploy the app to production, optimizing it for performance and scalability.",
        "Create a visually appealing and user-friendly UI using Figma and modern design principles."
      ],
      "course_content": {
        "Introduction": [
          "Introduction and App Design",
          "Frontend Development with React Native",
          "Backend Development and API Integration",
          "Deploy your application using Next.js, making it fast, reliable, and scalable",
          "Generate apk and aab file to publish on Google Play Store"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is beneficial but not required—you'll learn everything step-by-step.",
        "A computer with access to the internet for downloading necessary software and tools.",
        "No prior experience with full-stack development or app design is required.",
        "A desire to build a real-world app and gain hands-on experience with modern tech stacks."
      ],
      "description": "Welcome to \"Build a Full Stack Wallpaper App: From Design to Deployment.\" This comprehensive course is tailored for aspiring developers, tech enthusiasts, and professionals eager to master full-stack development through a hands-on, real-world project. Whether you're just starting or looking to enhance your existing skills, this course will guide you step-by-step through creating a professional-grade Wallpaper App from the ground up, using the latest tools and technologies.\nCourse Highlights:\nThroughout this course, you will gain in-depth knowledge of frontend development with React Native, empowering you to build stunning and responsive mobile interfaces. You’ll set up the backend with Node.js and Express.js, learning how to create robust, efficient server-side applications. The course also covers database management using MongoDB, where you'll learn how to design, integrate, and manage your data seamlessly.\nWe’ll kick things off with the design phase using Figma, crafting an engaging and user-friendly interface that stands out. From wireframes to high-fidelity designs, you’ll learn how to bring your app’s vision to life. Next, you'll dive deep into developing the mobile frontend, ensuring the app is visually appealing and responsive across all devices. You'll move on to backend development, where you’ll set up the server, build APIs, and ensure smooth communication between your frontend and backend components.\nAdvanced Features and Deployment:\nThis course will also teach you to develop and integrate RESTful APIs to handle data requests and responses efficiently. You'll explore user authentication and security, protecting your app with login systems, encryption, and session management. In addition, you'll learn how to add advanced functionalities such as search capabilities, filtering options, pagination, and image uploads, providing users with a seamless and dynamic experience.\nFinally, we’ll guide you through deploying your app using Next.js, a powerful React framework that enables you to build fast and scalable web applications. You'll learn to handle server-side rendering, optimize performance, and deploy your app to the cloud, ensuring that it’s not just functional but also ready for production.\nWhat You'll Achieve:\nBy the end of this course, you’ll have a comprehensive understanding of full-stack development and the confidence to create, deploy, and maintain your own complex applications. This isn't just a theoretical journey; it’s a practical learning experience designed to equip you with the real-world skills needed to build, scale, and maintain high-quality applications. You'll walk away with an impressive project for your portfolio and the knowledge to tackle your own app ideas with expertise.\nEnroll now and take your development skills to the next level. Whether you're aiming to become a full-stack developer, build your startup, or simply want to deepen your understanding of app development, this course is your gateway to achieving your goals!",
      "target_audience": [
        "Aspiring developers who want to learn full-stack development by building a complete project.",
        "Beginners looking to dive into React Native, Next JS and backend development with Node Js.",
        "Entrepreneurs and hobbyists interested in creating their own wallpaper app.",
        "Students and professionals eager to expand their portfolios with a real-world project."
      ]
    },
    {
      "title": "Build a Tic Tac Toe iOS App – SwiftUI, MVVM & Clean Code",
      "url": "https://www.udemy.com/course/build-a-tic-tac-toe-ios-app-swiftui-mvvm-clean-code/",
      "bio": "Build a real iOS app from scratch with SwiftUI, MVVM, and clean architecture like a professional.",
      "objectives": [
        "Build a complete iOS Tic Tac Toe app using SwiftUI and MVVM",
        "Apply clean code principles and dependency injection in a real-world iOS project",
        "Learn how to structure scalable, testable SwiftUI apps like a senior developer",
        "Gain confidence in using SwiftUI for production-ready projects with modern app design",
        "Design a modular system architecture that separates UI, business logic, and services",
        "Use Git and source control effectively to manage code changes and versioning"
      ],
      "course_content": {
        "Welcome to Tic Tac Toe – The One": [
          "Welcome to the Course"
        ],
        "System Design": [
          "System Design Part 1 – Defining App Requirements & Use Cases",
          "System Design Part 2 – Planning the Data Models & Core Entities",
          "System Design Part 3 – Visualizing the Architecture with Diagrams"
        ],
        "Environment & Project Setup": [
          "Dev Environment Setup & Git Source Control",
          "Xcode Project & SwiftUI Setup"
        ],
        "App Styling & Reusability": [
          "App Mode Screen + Factory Overview",
          "Project Colors",
          "Importing Useful SwiftUI Extensions"
        ],
        "Building the Game Setup Components": [
          "Building the Player Selection Component",
          "Creating Reusable Selection Pills (Difficulty & Turn)",
          "Assembling the Game Setup View + ViewModel"
        ],
        "Core Game UI": [
          "Designing the Player Stats In-Game View",
          "Building the Tic Tac Toe Game Board UI",
          "Creating the Game Result Screen (Win, Lose, Tie)"
        ],
        "Game Services & Logic": [
          "Error Handling & Analytics Services",
          "Implementing the AI Bot Engine Service",
          "Board Logic Service & Game Store",
          "The GameViewModel – Main Game Logic"
        ],
        "Completing the App": [
          "Building the GameView & Playing the Full Game",
          "Full Project Review & Architecture Recap",
          "Next Steps & What to Build After This Course",
          "Project Source Code"
        ],
        "Extra Resources": [
          "Beyond This Course"
        ]
      },
      "requirements": [
        "Basic understanding of Swift and SwiftUI. No prior experience with MVVM or clean architecture required — everything is explained step by step."
      ],
      "description": "Want to build professional iOS apps with SwiftUI — the kind that look clean, work flawlessly, and feel ready for the App Store?\n\n\nIn this course, you’ll build Tic Tac Toe – The One, a polished iOS game developed from the ground up using SwiftUI, MVVM, and clean architecture principles. Whether you’re preparing for iOS interviews, freelancing, or aiming for senior-level coding confidence, this course will teach you how professionals design, structure, and ship production-ready apps.\n\n\nWe’ll begin with system design and architecture planning, where you’ll learn how to translate ideas into functional and non-functional requirements. From there, we’ll move into creating reusable SwiftUI components, managing state effectively with view models, and structuring services for board logic and gameplay. You’ll also build an AI bot with multiple difficulty levels, add analytics and error handling for debugging, and finally bring everything together into a complete, testable app.\n\n\nAlong the way, you’ll gain hands-on experience with:\nSwiftUI and MVVM architecture\nReal-world system design workflows\nPlayer selection, scoreboard, and game board components\nService-based logic for AI intelligence and move validation\nGit & source control setup for professional workflows\nClean layering, dependency injection, and separation of concerns\n\n\nThis course isn’t just about coding a simple game — it’s about thinking like a senior iOS engineer. By the end, you’ll have the skills, patterns, and confidence to build scalable, testable apps, plus a fully functional SwiftUI project to showcase in your portfolio or use as a reference for future apps.",
      "target_audience": [
        "iOS developers who want to level up from beginner or intermediate to a more professional, senior-like coding style using SwiftUI. Perfect for devs preparing for job interviews, building portfolio apps, or freelancing with confidence.",
        "If you want to learn how real-world iOS apps are structured and go beyond just making things work — this course is for you."
      ]
    },
    {
      "title": "Flutter From Scratch: The Complete Developer Course",
      "url": "https://www.udemy.com/course/flutter-from-scratch-the-complete-developer-course/",
      "bio": "Master Flutter App Development. Build UIs, manage state with BLoC & Riverpod, integrate APIs, and create animations.",
      "objectives": [
        "Build beautiful, high-performance mobile apps for both Android and iOS using Flutter and Dart from a single codebase.",
        "Understand and apply core Flutter concepts, including widgets, layout structures, navigation, forms, and state management (Provider, Riverpod, and BLoC).",
        "Integrate backend functionality using HTTP requests, parse JSON data, and implement local storage with SharedPreferences and SQLite.",
        "Create smooth and engaging animations using Flutter’s implicit, explicit, and custom animation tools including SVG and Lottie animations."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Flutter Fundamentals": [
          "Creating Your First Flutter App",
          "Understanding Flutter Widgets",
          "Flutter Widgets Deep Dive",
          "Flutter Fundamentals Quiz"
        ],
        "Building Responsive User Interfaces": [
          "Using Padding, Center & Align",
          "Responsive Layouts with Flex",
          "Building Advanced UI Components",
          "UI Quiz"
        ],
        "State Management in Flutter": [
          "Introduction to State Management",
          "Understanding InheritedWidget",
          "Working with ScopedModel",
          "Provider & Riverpod Essentials",
          "Managing State with BLoC Pattern",
          "State Management Quiz"
        ],
        "Navigation & Routing": [
          "Navigation Fundamentals",
          "Advanced Navigation Techniques",
          "Navigation & Routing Quiz"
        ],
        "Handling User Input & Forms": [
          "Creating Forms and Validating Input",
          "Managing Form State Effectively",
          "Handling User Input and Gestures",
          "Quiz on Forms"
        ],
        "Data Persistence & API Integration": [
          "Making HTTP Requests",
          "Parsing JSON Responses",
          "Using Shared Preferences",
          "Shared Preferences Continued",
          "Introduction to SQLite",
          "Working with SQLite",
          "Data Persistence & API Integration Quiz"
        ],
        "Flutter Animations": [
          "Implicit Animations",
          "Explicit Animations",
          "Custom Animations and Canvas Drawing",
          "SVG and Lottie Animations",
          "Quiz on Animations"
        ]
      },
      "requirements": [
        "No prior app development experience is required, this course is beginner-friendly.",
        "A computer with internet access (Windows, macOS, or Linux).",
        "Android Studio and Flutter installed.",
        "A willingness to learn and build real apps using Flutter and Dart."
      ],
      "description": "Have you ever wanted to build beautiful, high-performance mobile apps for both iOS and Android from a single codebase? Welcome to Flutter From Scratch: The Complete Developer Course- your comprehensive journey into the world of modern app development.\nThis course is designed for absolute beginners and aspiring developers who want to master Flutter from the ground up. In over 4 hours of practical, hands-on, Full HD video content, we'll guide you step-by-step through clear, bite-sized lessons. You won't just watch: you'll code along with us in Android Studio, building real skills and confidence with every single video. There are also interactive quizzes at end of every section to revise and test your learnings\n\nBy the end of this course, you will be able to:\nMaster the Fundamentals: Go from zero to having your first Flutter app running in under an hour.\nBuild Beautiful & Responsive UIs: Use Flutter's layout system to create interfaces that look stunning on any device size.\nManage App State Like a Pro: Learn the most important concept in app development, covering everything from setState to advanced patterns like Provider, Riverpod, and BLoC.\nNavigate & Route Seamlessly: Create intuitive, multi-screen applications with powerful navigation techniques.\nConnect to the Web & Handle Data: Make HTTP requests to real servers, parse JSON, and store data locally using SQLite and Shared Preferences.\nBring Your App to Life: Create engaging user experiences with implicit, explicit, and even custom-painted animations.",
      "target_audience": [
        "Aspiring app developers who want to build real-world Android and iOS apps using a single codebase with Flutter.",
        "Students and computer science graduates looking to enhance their resume with in-demand Flutter skills.",
        "Entrepreneurs and hobbyists who want to build their own apps without hiring a development team."
      ]
    },
    {
      "title": "Master React Native by Building an Ecommerce App",
      "url": "https://www.udemy.com/course/master-react-native-by-building-an-ecommerce-app/",
      "bio": "Build E-commerce App using React Native| Beginner Friendly",
      "objectives": [
        "Build android and iOS e-commerce app using React Native",
        "React Native basics and advanced knowledge",
        "React Native Navigation (Bottom Tab Navigation and Nested Navigation)",
        "Global State Management Using Use Context Hook",
        "Learn to Design Any Kind of Apps"
      ],
      "course_content": {
        "Introduction to React Native Ecommerce App Development": [
          "Build React Native Ecommerce App - Introduction and App Demo",
          "Project Setup, Bottom Tab Navigation, React Native Vector Icons",
          "Adding Icons to Bottom Tab Navigation and Linear Gradient Background"
        ],
        "Crafting User Interface Components": [
          "Building Reusable Header Component with Search Input Field",
          "Implementing Horizontal Scrollable Category List",
          "Creating Product Cards with Flatlist and Like Icon"
        ],
        "Dynamic Content Rendering": [
          "Developing Product Details Screen and Rendering Dynamic Data",
          "Designing the Cart Screen for Seamless Shopping Experience",
          "Managing Cart State with Context, Adding and Removing Items"
        ]
      },
      "requirements": [
        "Basic Understanding of Javascript"
      ],
      "description": "In this comprehensive course, you'll master React Native by building a cutting-edge Ecommerce mobile app from scratch! Whether you're a beginner or an experienced developer, this course offers a hands-on approach to learning React Native while creating a real-world application.\n\n\n**What You'll Learn:**\n- Set up a React Native project and navigate its structure.\n- Design intuitive user interfaces with bottom tab navigation, custom icons, and gradient backgrounds.\n- Implement essential features like search functionality, horizontal category lists, and product cards.\n- Render dynamic data and create detailed product screens with React Native components.\n- Manage application state using context and efficiently handle cart functionality.\n- Secure your app with JWT authentication for user login and authentication.\n- Integrate Stripe payment for seamless transactions.\n- Deploy your React Native app to the Railway server for global accessibility.\n\n\n**Why Take This Course:**\n- Hands-on learning: Build a fully functional Ecommerce app while mastering React Native concepts and best practices.\n- Real-world projects: Gain practical experience by working on a project that mirrors industry standards and requirements.\n- Expert guidance: Learn from an experienced instructor with a passion for teaching and a wealth of knowledge in mobile app development.\n- Career advancement: Enhance your skill set and boost your career prospects as a React Native developer in the booming mobile app industry.\n\n\nDon't miss this opportunity to elevate your React Native skills and build a portfolio-worthy Ecommerce app that showcases your expertise! Enroll now and start your journey towards becoming a proficient React Native developer.",
      "target_audience": [
        "React Native beginners to advanced learners."
      ]
    },
    {
      "title": "AR and Vuforia: Learn Augmented Reality with Unity AR",
      "url": "https://www.udemy.com/course/ar-and-vuforia-augmented-reality-with-unity-ar/",
      "bio": "Discover how to create immersive augmented reality apps with Unity AR and Vuforia, bridging the gap to virtual reality.",
      "objectives": [
        "Build your own augmented reality projects - even if you're a beginner!",
        "Learn to navigate and master the Unity interface",
        "Integrate Vuforia SDK into Unity with ease",
        "Use Mixamo to bring 3D characters to life",
        "Add depth and realism to your AR projects with advanced tracking",
        "Use ground tracking to anchor AR objects to real-world surfaces",
        "And SO much more!"
      ],
      "course_content": {
        "Dive into AR: Master the Basics and Set Your Goals": [
          "Introduction",
          "Article: 5 Amazing AR Apps Created with Unity and Vuforia (Inspiration)"
        ],
        "Equip Yourself for Success: Set Up Unity and Start Creating": [
          "Download Unity 3D",
          "Exploring Unity",
          "Download and Import 3D Models for Free",
          "Creating a Simple Animation",
          "Article: How to Choose the Right 3D Models for AR Projects",
          "Article: How to Optimize 3D Models for Augmented Reality in Unity and Vuforia",
          "Article: Best Practices for Optimizing AR App Performance in Unity"
        ],
        "Power Up Your Project: Set Up Vuforia and Build Your First AR Scene": [
          "What is Vuforia: Create an Account on Vuforia",
          "Add Vuforia SDK to Unity 3D and Setup a AR Scene",
          "Build Our First AR App for an Android Device",
          "Article: 10 Best Practices for Developing AR Experiences with Vuforia and Unity",
          "Article: Understanding Image Targets in Vuforia",
          "Article: Creating Markerless AR Experiences with Vuforia"
        ],
        "Animate Like a Pro: Add Ground Tracking and Bring Models to Life": [
          "What is Ground Tracking | Setup Unity for Ground Tracking",
          "Add Model, Animations and Build the App",
          "Making 3D Model Interactable",
          "Article: Exploring Ground Plane Tracking and Its Uses in Vuforia"
        ],
        "Level Up with UI: Add and Connect Interface Elements in AR": [
          "What is UI? How to Add and Interact",
          "How to Connect UI Elements With AR Objects",
          "Article: Using Image Recognition to Enhance Your AR Apps with Vuforia"
        ],
        "Game On: Create an Exciting AR Driving Game": [
          "Making an AR Car Driving Game"
        ],
        "Control Collisions: Set Up Object Interactions in AR": [
          "How to Create an Event When Two Objects Collide",
          "Article: How to Incorporate Physics in AR with Unity and Vuforia"
        ],
        "Add Character with Mixamo: Download and Animate 3D Models": [
          "Using Mixamo",
          "Article: Animating 3D Models with Mixamo for Augmented Reality",
          "Article: Integrating Sound and Audio Effects into AR Applications"
        ],
        "Prove Your Skills: Take the Ultimate Unity and Vuforia Quiz": [
          "Unity and Vuforia Quiz: Test Your AR Development Knowledge!",
          "Article: Top Resources for Continuing Your Augmented Reality Education",
          "Article: Comparing AR SDKs: Vuforia, ARKit, and ARCore"
        ]
      },
      "requirements": [
        "Absolutely no requirements. As long as you have basic computer skills and a curious mind, we will teach you how to leverage Vuforia and Unity for your next AR project!"
      ],
      "description": "Welcome to the Complete Augmented Reality & Vuforia Mastery Course, the only course you need to build immersive AR experiences using Unity and Vuforia. Designed for 2024 and beyond, this course is your gateway to the cutting-edge world of AR and VR development.\nWith 16 lessons, this crash course will teach you what you need to know about Vuforia and Unity AR. No fluff.\nEven if you’re new to AR or Unity, we’ll take you from beginner to advanced developer. Here’s why:\n\nThe course is taught by an experienced instructor who has helped hundreds of students master AR development and create engaging, real-world applications.\nWith step-by-step tutorials, stunning animated explanations, and practical projects, you’ll learn the latest AR tools and techniques used in top companies.\nThis curriculum has been crafted based on student feedback and industry insights, ensuring you’re learning exactly what you need to succeed.\nYou'll save thousands by enrolling in this course, gaining access to the same quality instruction as an in-person AR bootcamp at a fraction of the cost.\nThroughout this in-depth course, you’ll cover essential skills, including:\n\nUnity Setup and Project Creation\nVuforia SDK Integration\nAugmented Reality Basics and Ground Tracking\nAnimating 3D Models with Mixamo\nCreating Interactive AR Experiences\nBuilding AR Games and Real-World Apps\nCollision Events, UI Integration, and Scene Management\nBy the end of the course, you’ll be equipped to design AR apps and interactive experiences, ready to impress employers or launch your startup.\nSign up today to enjoy:\n\nEngaging Video Tutorials and Real-World Projects\nDownloadable Resources and Cheat sheets\nQuizzes & Practice Tests\nLifetime Access to Course Materials\nWhat are you waiting for? Click “Buy Now” and begin your AR journey with the highest-rated Vuforia course available.",
      "target_audience": [
        "Aspiring AR Developers eager to learn the fundamentals of AR development and create their first projects.",
        "Game Designers looking to integrate AR features into their games or explore new design possibilities.",
        "3D Artists and Animators wanting to expand their skills by applying their 3D models and animations in AR environments.",
        "Hobbyists and Tech Enthusiasts passionate about exploring new technologies and experimenting with AR for fun or personal projects.",
        "Or ANYONE who wants to experience the best crash course into the world of AR!"
      ]
    },
    {
      "title": "Android App Development in 2 hours",
      "url": "https://www.udemy.com/course/android-app-development-in-2-hours/",
      "bio": "Learn how to get started with Android App development in just 2 hours.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Android Studio",
          "Android Virtual Device",
          "Layout Editor",
          "Accessing UI Components",
          "Buttons",
          "Image Views",
          "break",
          "Functions",
          "Touch an Object",
          "Object Animator",
          "Maps",
          "Camera",
          "Outro"
        ]
      },
      "requirements": [
        "Basics understanding of the use of computers",
        "A Windows of Mac computer"
      ],
      "description": "In this short course, I will give you a basic introduction to the use of Android Studio and Android Virtual Device to begin developing Android applications.\nUsing Kotlin programming language, we will see some of the basics of making apps, such as making user interface elements, accessing the camera, adding maps to our app, and dealing with user touches. The course content is as follows:\nIntroduction\nAndroid Studio\nAndroid Virtual Device\nLayout Editor\nAccessing UI Components\nButtons\nImage Views\nbreak\nFunctions\nTouch an Object\nObject Animator\nMaps\nCamera\nFinal thoughts",
      "target_audience": [
        "Beginner mobile app developers",
        "Beginner Android app developer",
        "Entrepreneurs planning to develop their own apps"
      ]
    },
    {
      "title": "iPhone Product Creation: (Beginners & Advanced): Fast Track",
      "url": "https://www.udemy.com/course/iphone-product-creation-beginners-advanced-fast-track/",
      "bio": "The Simple Process To Create Info-products Using Your iPhone - From Start To Finish - Using Photography & Filmmaking",
      "objectives": [
        "How To Create A Product In Hours With Your iPhone",
        "No Fancy Software Or High-tech Equipment Required",
        "Brand New Over-The-Shoulder Video Series",
        "The Simple Process To Create Info-product Using Your iPhone - From Start To Finish."
      ],
      "course_content": {
        "iPhone Product Creation For Beginners: Fast Track Training": [
          "Overview - Beginners",
          "Minimum iPhone Equipment Adapter",
          "Hardwiring-Your-iPhone-to The Ethernet",
          "Minimum Camera Equipment",
          "Alternative Sound Equipment",
          "Speech To Text Content",
          "Editing Written Content",
          "Dragon Anywhere App Alternative",
          "Recording Your iPhone Screen",
          "Taking Talking Head Videos",
          "Recording Live Video",
          "Editing Video",
          "Recording Audio",
          "Editing Multi Track Audios",
          "Creating PDFs and Screenshots",
          "Creating Presentations",
          "Displaying Presentations",
          "File Management - Part 1",
          "File Management - Part 2",
          "Conclusion - Beginners"
        ],
        "iPhone Product Creation Advanced: Fast Track Training": [
          "Overview - Advanced",
          "Minimum iPhone Equipment Adapter",
          "Bluetooth Connection Management",
          "Manage Device Storage",
          "Managing Online Storage",
          "Backing Up Your iPhone",
          "Downloaded File Management",
          "Editing Graphics",
          "Wordpress Based Sales Pages",
          "Cloud Based Sales Page Systems",
          "Managing Membership Pages",
          "Cloud Based Delivery Systems",
          "Monitoring Your Help",
          "Writing And Managing Emails",
          "Managing Payments - Part 1",
          "Managing Payments - Part 2",
          "Hosting and Recording Client Meetings and Webinars",
          "Client Scheduling - Part 1",
          "Client Scheduling - Part 2",
          "Conclusion - Password Manager"
        ]
      },
      "requirements": [
        "An iPhone with internet access",
        "A willingness to learn and take action"
      ],
      "description": "iPhone Product Creation: (Beginners & Advanced): Fast Track Training:\nUpgrade Your Skills And Expertise With Our Advanced Video Training…\nHere's What You'll Learn In These Upgraded Video Series:\nSimple but very effective way to make your videos look professional\nUnknown tricks used by gurus to capture super high quality videos from their iPhone.\nWhat is the best conversion software to use for your videos.\nPreparing your info-products for delivery - fast and convenient.\nThe step by step method to ensure your info-product is appealing.\nAdvanced tips and tricks about product creation that only a handful of people know about.\nYour iPhone can make you money...\nBrand New Over-The-Shoulder Video Series On How To Create A Product In Hours With Your iPhone.\nDo you have an iPhone? Then you've everything you need to start making money online.\nWith it, you can create your own info-product.\nWhy an info-product?\nFirst it has a wider profit margin than physical products.\nIt's cheap to create and you can sell it for almost the same price as a physical product.\nYou Can Make A Big Profit!\nAs you can see, it's extremely profitable and you can get started very quickly.\nNo need to worry about the delivery process and other things like that. Just upload the products to your site and you can automate everything.\nYou Can Do It With Your iPhone.\n“If it's so profitable and easy then why only a few people do it?\"\nThe answer is simple.\nIt's because most people think creating info product is hard.\nThe misconception is that people believe they need expensive equipment and software or even need to set up a home studio.\nThat's completely wrong!\nIn fact, you can create your own info product today using your own iPhone.\nNo fancy software and high-tech equipment's are required.\n...and I can show you how to do it starting today.\nWhy You Need To Get Started Now:\nIf you're interested to learn how to quickly and easily create info products with your iPhone, then you get started today.\nIn some niches, there are still only a few people who already created info products. That means it's easier for you to make a big profit.\nMany people are interested to create info products but they don't know it can be by just using their iPhones. It's EASY.\nThere's no better time to start making more money than today. If you let this opportunity pass you by, you may forget about it, and you’ll be missing out completely.\nIf you still don't have a solid online business, then sell info-products is the fastest path to success.\nYou don't need to be an expert. Just gather information online, use it to create your own product, and start making more money.\nAnd the list goes on and on.\nListen...\nI decided to come up with this unique over the shoulder video series to get you started very quickly with it.\nIntroducing…\nCreate A Product With iPhone:\nQuickly & Easily Create Info-Products Starting Today!\nThere’s nothing like this video series.\nWatch as I show you how you can use your iPhone to create your first info-product and sell it for passive income.\nI reveal my best tips for using some unknown tactics that only a few elite few knows.\nYou get to see everything. I explain everything to you.\nThere will be no guesswork.\nAll you need is just a short hour of your time to learn everything and you’d be ready to get started with it instantly.\nHere’s What You’ll Discover Inside This Video Training:\nA quick overview of how to create products with your iPhone.\nDiscover all the powerful apps to create info products, which you can download for free. (You probably use some of these apps but you never realized it could be used to create products. Prepare yourself to be shocked)\nThe simple process to create an info-product using your iPhone - from start to finish.\nHow to create products in audio format, and edit it like a pro, with no computer and no expensive audio editing software at all.\nThe secretly-guarded method I personally used to create a video training anytime anywhere with my own iPhone.\nThe fastest way to do a research for your info products, and use it as a source for your own products.\nAll the overlooked features of iPhone that could be used to create products, which looks professional as it was creating using expensive tools.\nHow creating products on your iPhone will make the creation process faster and easier than on a computer.\niPhone Product Creation: (Beginners & Advanced): Fast Track Training:\n--------------------------------------------------------------------\niPhone Product Creation For Beginners: Fast Track Training\n1 - Overview - Beginners\n2 - Minimum iPhone Equipment Adapter\n3 - Hardwiring-Your-iPhone-to The Ethernet\n4 - Minimum Camera Equipment\n5 - Alternative Sound Equipment\n6 - Speech To Text Content\n7 - Editing Written Content\n8 - Dragon Anywhere App Alternative\n9 - Recording Your iPhone Screen\n10 - Taking Talking Head Videos\n11 - Recording Live Video\n12 - Editing Video\n13 - Recording Audio\n14 - Editing Multi Track Audios\n15 - Creating PDFs and-Screenshots\n16 - Creating Presentations\n17 - Displaying Presentations\n18 - File Management - Part 1\n19 - File Management - Part 2\n20 - Conclusion - Beginners\n---------------------------------------------------------------\niPhone Product Creation Advanced: Fast Track Training\n21 - Overview - Advanced\n22 - Minimum iPhone Equipment Adapter\n23 - Bluetooth Connection Management\n24 - Manage Device Storage\n25 - Managing Online Storage\n26 - Backing Up Your iPhone\n27 - Downloaded File Management\n28 - Editing Graphics\n29 - Wordpress Based Sales Pages\n30 - Cloud Based Sales Page Systems\n31 - Managing Membership Pages\n32 - Cloud Based Delivery Systems\n33 - Monitoring Your Help\n34 - Writing And Managing Emails\n35 - Managing Payments - Part 1\n36 - Managing Payments - Part 2\n37 - Hosting and Recording Client Meetings and Webinars\n38 - Client Scheduling - Part 1\n39 - Client Scheduling - Part 2\n40 - Conclusion - Password Manager",
      "target_audience": [
        "Anyone With An iPhone Who Would Like To Start An Online Business",
        "Professionals, Business Owners, Internet Marketers, Entrepreneurs, Hobbyists"
      ]
    },
    {
      "title": "Power Apps Interview Mastery: 600+ Questions & Practice Test",
      "url": "https://www.udemy.com/course/microsoft-power-apps-interview-questions/",
      "bio": "Get job-ready with structured Power Apps interview questions, covering basics to advanced and hands-on scenarios",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "The demand for Power Apps professionals is growing rapidly, with organizations worldwide leveraging Microsoft's low-code platform to build powerful business applications. Whether you're preparing for your first interview or aiming to advance your career, this practice test course is designed to give you the knowledge, confidence, and strategic thinking needed to stand out from the competition.\nWith 600+ real-world interview questions and expert explanations, this course covers everything from fundamental concepts to advanced Power Apps development, security, and deployment strategies.\nThis is not just another question bank. This course challenges you with scenario-based questions that reflect actual interview settings, helping you develop the problem-solving skills required to succeed. Every answer is carefully explained to deepen your understanding, ensuring that you not only memorize but truly master Power Apps.\n\n\nWhy You Should Enroll in This Course\n1. Gain an Unfair Advantage in Power Apps Interviews\nThis course covers frequently asked interview questions at every level—beginner, intermediate, and advanced—so you're fully prepared for any challenge. Whether you're facing conceptual questions or complex real-world scenarios, you'll know exactly how to respond with confidence.\n2. Master Every Key Concept with In-Depth Explanations\nEach question is paired with a detailed, easy-to-understand explanation, breaking down core concepts, best practices, and Power Apps functionality. You'll gain practical knowledge that goes beyond rote memorization.\n3. Hands-On, Scenario-Based Learning for Real-World Applications\nEmployers look for candidates who can apply Power Apps skills in real-world situations. Our scenario-based questions mimic real challenges you'll face in the workplace, ensuring that you develop the critical thinking skills needed to excel in a professional environment.\n4. Stay Ahead with Up-to-Date Content\nThe Power Apps ecosystem evolves rapidly. Unlike static PDFs or outdated question banks, this course continually updates its content to reflect industry trends and Microsoft’s latest updates, so you're always learning the most relevant material.\n5. Learn at Your Own Pace, with Lifetime Access\nNo deadlines, no pressure. You get full lifetime access to all practice tests and questions, allowing you to study at your convenience and revisit the content whenever needed.\n6. Confidence-Building Practice Tests\nStructured as full-length interview simulations, these practice tests give you the experience of a real interview, so you’ll walk into your actual interview fully prepared.\n\n\nCourse Structure & Key Features\n600+ Real Interview Questions with detailed, step-by-step explanations.\n6 Full-Length Practice Tests covering foundational to advanced topics.\nScenario-Based Questions to help develop real-world problem-solving skills.\nComprehensive Coverage of Power Apps fundamentals, development, data management, security, governance, and deployment.\nLifetime Access with continuous updates reflecting Microsoft’s latest Power Apps features.\n\n\nTake the Next Step in Your Power Apps Career\nThis is your chance to get ahead of the competition and secure your dream job in Power Apps development. Whether you’re a job seeker, career changer, or Power Platform professional, this course is designed to help you think like an expert, answer with confidence, and impress hiring managers.\nDon't leave your interview preparation to chance. Enroll now and start practicing today!",
      "target_audience": [
        "Job seekers preparing for Power Apps interviews and aiming for roles in app development or IT.",
        "Fresh graduates or students looking to build a strong foundation in Power Apps and enter the job market with confidence.",
        "Professionals already working with Power Platform tools who want to expand their skill set to include Power Apps.",
        "Software developers and IT professionals transitioning into low-code application development.",
        "Business analysts and solution architects who need to understand Power Apps for process automation and digital transformation.",
        "IT administrators and Microsoft 365 professionals seeking to leverage Power Apps for business solutions.",
        "Entrepreneurs and small business owners looking to create custom applications without extensive coding.",
        "Technology enthusiasts eager to learn Power Apps and explore its potential for building business applications.",
        "Managers and team leaders who want to understand Power Apps capabilities for workflow automation and business optimization.",
        "Anyone interested in mastering Power Apps interview questions and gaining hands-on experience with real-world scenarios."
      ]
    },
    {
      "title": "Property List Driven Apps with Swift",
      "url": "https://www.udemy.com/course/property-list-driven-apps-with-swift/",
      "bio": "Peruse dynamic tables, and embed any web content you like, all based on property lists that control your app's data.",
      "objectives": [
        "Update an entire app without ever resubmitting a new build to Apple by using a Property List saved to your website.",
        "Create a multi-tiered Table view, one with sections, sub-sections, and unlimited links (all populated via a property list) which can provide users the option to open web pages, images, videos, or do anything your app requires. For example, choose levels in a game.",
        "Display web pages with embedded content from YouTube, Vimeo, Vine, Instagram, or wherever, using query string variables added to the end of URL’s.",
        "Pull html data / variables from a web page back into your app. Useful for any number of things, for example, allowing or denying access to an area of the app.",
        "Display and cache images in your app from files stored on your website. Imagine updating banners in your app by simply uploading new images.",
        "Gain more knowledge of Swift 1.2"
      ],
      "course_content": {
        "Initial Setup with Auto Layout": [
          "Introduction",
          "Course Projects",
          "Initial Setup and Auto Layout Tutorial (optional viewing)",
          "Auto Layout (continued)"
        ],
        "Displaying a Web View and Parsing the Property List": [
          "How to Setup IBOutlets, IBActions and make a WebWiew Request",
          "Setting up the Property List",
          "First Pass at Parsing the Property List",
          "Fully Parsing the Property List",
          "Fully Parsing the Property List (continued)"
        ],
        "Sending Query String Variables from the App and Receiving HTML Data Back": [
          "Query String Variables and Dynamic Embeds with PHP Files",
          "Using HTML Data as an App Gateway (or for any String Data)",
          "Reversing the Back though the Property List Tiers and Setting the Nav Title"
        ],
        "Updating the Property List from a copy stored on your website": [
          "Saving all the Property List Data as a Dictionary Variable",
          "Updating the Property List from a Server-Stored Copy",
          "Updating the Property List from a Server-Stored Copy (continued)",
          "Project Wrap Up"
        ],
        "Adding Thumbnail Images to the UITableView": [
          "Bonus Lesson - Adding Thumbnails or Any Size Image to the UITableView",
          "Adding Thumbnails (continued)",
          "Conclusion?"
        ]
      },
      "requirements": [
        "Xcode 6.3 or higher",
        "Work on a Mac",
        "Be able to upload files to a server (optional, but recommended)"
      ],
      "description": "Have you ever wanted to update an app without resubmitting a new build to Apple? Have you ever wanted to dynamically display web pages in your app, each with the potential to contain embeds of YouTube videos, Vimeo video, Vine embeds, images, etc. Or have you ever thought about pulling in data from a web page into your app, perhaps with a little sprinkle of PHP? How to do all that and more awaits you in this latest iOS video tutorial series with Swift 1.2!\nRead the course curriculum below.\nInitial Setup with Auto Layout\nIn this first video we will look at the initial layout of the app. This involves adding a UITableView, UIWebView and Navigation Bar to our Main storyboard file. If you have no interest in learning (or relearning Auto-Layout) than this lesson is completely skippable and you can download the starting project, with the layout already included.\nDisplaying a Web View and Parsing the Property List\nIn these next video tutorials we will connect our IBOutlets and IBActions, make our first web request (display any site/page you want in the app), do a quick parse of the Property List, then fully parse the property list and feed all of our data into a UITable. The data is sub-sectioned so for example, we will click on a broad section of data (like Topics), then click another section (like Courses), then choose from links within that section (for example, a specific Lesson to view). This setup can be used for any kind of data.\nSending Query String Variables from the App and Receiving HTML Data Back\nIn this video tutorials we will learn how to send query string variables from an iOS app and use them within the content shown in our UIWebView. So for example, we might open a webpage like….video_player?id=12345 , where the page then displays a YouTube or Vimeo embed with the ID of 12345. So using this method your Property List can open a single page and feed in countless variables for different links, or information of any sort. Along with that we can include custom titles within the app based on what we're displaying. We will also experiment with reading data back in from a webpage (without actually showing it). So for example, this could be used to act as a kind of gateway within the app, if a particular webpage's content displayed the word “no\", then the app wouldn't allow a particular set of functionality. Or this could just be used to display the “message of the day\" . Finally we will setup a back button so users can reverse back up the Property List data in the UITableView.\nUpdating the Property List from a copy stored on your website\nIn these next videos we mostly deal with an optional add on to the course which involves uploading a second copy of the Property List to a server and making the app use it as the primary source of data. If that Property List is unreachable, the app will fallback to checking on a locally saved version of that updated property list, and if that fails, the app will resort to using the original Property List submitted with the bundle to the App Store.\nAdding Thumbnail Images to the UITableView\nThis video tutorial teaches how to include an image (of any size) in the UITableView to make for an obviously more eye-popping visual experience to a normal list-only table view. The property list can define either an image in the main app bundle, or an image stored on a server (both can be used in the same table). We will then write the code to load either. If an image stored at a URL is defined, we will cache that image, so after the initial load, our UITableView loads only the cached version. Creating an image cache sounds fancy but it is simply a mutable dictionary (which is useful for many projects!)",
      "target_audience": [
        "Preferably students with some knowledge of Swift or a comparable programming language",
        "An existing familiarity with programming concepts like for statements, variables, etc",
        "Anyone looking to build up their personal arsenal of Swift knowledge"
      ]
    },
    {
      "title": "Flutter Plugin Creation & Publishing on Pub. dev",
      "url": "https://www.udemy.com/course/how-to-create-flutter-plugin-and-publish-plugin-in-pub-dev/",
      "bio": "Unlock the Power of Flutter: Create and Publish Your Own Plugins on Pub. dev with Step-by-Step Guidance!",
      "objectives": [],
      "course_content": {
        "How to Create Flutter Plugin and Publish Plugin in pub dev | FULL TUTORIAL": [
          "Intro",
          "First Thing to do",
          "How to create Flutter plugin",
          "How to Publish plugin in pub dev",
          "Learn all about the Flutter payments setup"
        ]
      },
      "requirements": [
        "Flutter Basics"
      ],
      "description": "Are you ready to take your Flutter app development skills to the next level? In this exciting Udemy course, you'll learn how to create and publish your own Flutter plugins on Pub. dev with step-by-step guidance from an expert instructor.\nFlutter plugins can unlock a world of new possibilities for your app, but creating and publishing them can seem daunting. That's where this course comes in. With a focus on practical, hands-on learning, you'll gain the skills and knowledge needed to create custom plugins that can enhance your app's functionality and take it to the next level.\nWe'll start by covering the basics of plugin creation, including how to use Dart and Flutter to create native code that can be integrated with any Flutter app. From there, we'll dive into the specifics of plugin publishing on Pub. dev, including how to properly package and version your plugin, as well as how to test and debug it to ensure maximum compatibility.\nThroughout the course, you'll work on real-world examples and projects, learning best practices for plugin creation and publication that you can apply to your own app development projects. Plus, you'll have access to support and guidance from an expert instructor every step of the way.\nDon't wait any longer to unlock the full power of Flutter. Enroll now and learn how to create and publish your own custom plugins on Pub. dev today!",
      "target_audience": [
        "Flutter developers looking to take their app development skills to the next level",
        "Developers interested in creating custom plugins to enhance their app's functionality",
        "Those who want to learn how to publish their own Flutter plugins on Pub. dev",
        "Anyone looking to gain practical, hands-on experience in plugin creation and publication",
        "Those who want to learn best practices for plugin creation and publication to apply to their own app development projects."
      ]
    },
    {
      "title": "Learn To Build Apps with Flutter and Dart",
      "url": "https://www.udemy.com/course/learn-to-build-apps-with-flutter-and-dart/",
      "bio": "The quickest guide to learn and master app development with Flutter",
      "objectives": [
        "Learn the fundamentals of app development with Flutter",
        "Learn the Dart programming language",
        "Learn app development building real world projects",
        "Learn the tips and tricks of Flutter"
      ],
      "course_content": {
        "Getting Started with Flutter": [
          "Introduction",
          "What is Flutter?",
          "Why Flutter?",
          "Benefits of Cross Platform Coding",
          "Install Flutter sdk",
          "Install Android Studio",
          "Install Xcode and Xcode command line tools",
          "Install Android emulator",
          "Testing demo application on Android emulator and iOS simulator"
        ],
        "Anatomy of a Flutter App": [
          "Stateful Widgets",
          "Stateless Widgets",
          "Application Life Cycle"
        ],
        "Introduction to the Dart programming Language": [
          "Date Types and Variables",
          "Lists and Maps",
          "Conditional Statements",
          "Ternary Operator",
          "Printing Methods",
          "Extensions",
          "Functions and Arrow Functions",
          "Classes",
          "Scaffolds and Material App",
          "Columns and Rows",
          "Container and Margin, Padding",
          "Texts and Rich texts",
          "Text Fields",
          "Image Providers",
          "Buttons, Custom Buttons",
          "List views and Grid Views, List Tiles",
          "Building Custom Slider",
          "Alert Dialogs",
          "Generating Routes and Navigating Between Pages Using Context",
          "Handling Back Interceptor in Android",
          "Navigating with Routes",
          "Form widget and form key",
          "Adding text fields with validator",
          "Validate forms",
          "Stateless and Stateful widgets and Why States are so important?",
          "Value notifiers and Change notifiers",
          "Adding provider",
          "Adding bloc",
          "HTTP methods and API and JSON structure",
          "Adding Qutoes App API handling",
          "Changing default Icons of our application",
          "Http response codes and Adding internet connection alert",
          "Project: Building Qutoes Application UI",
          "Project: Building Quotes application UI and finishing up",
          "Adding location detector Libraries",
          "Adding Google maps",
          "Tracking user Live Location",
          "Add custom Markers to Google Map",
          "Adding Local Notification",
          "Adding push notifications and postman notification API",
          "What is notification",
          "Building drug reminder app Models and repositories",
          "Testing out the Models",
          "Building application UI and finishing up"
        ],
        "Unit Testing": [
          "Unit Testing",
          "Widget Testing",
          "Integration Testing",
          "Uploading app to Google play",
          "Uploading app to app store"
        ]
      },
      "requirements": [
        "Basic programming knowledge is sufficient to complete this course"
      ],
      "description": "Master Flutter & Dart programming by building applications in real-time!\nChoosing the right language, & tools is crucial for any app developer who is looking to earn programming skills. Currently, mobile app developers have numerous programming tools & languages that they can use to build & test mobile apps, but among all, one such tool that stood out is Flutter. And over time, It has gained significant popularity because of its easy learning curve, cross-platform development, tons of features, use of Dart programming, & so much more.\nAnd to make everyone master app development with Flutter, we have curated this online app development course that covers everything from Dart programming to app testing & even publishing on the Google Play Store & App Store. It also includes a couple of projects that will make you more confident in app development in no time.\nWhy Should You Learn Flutter With Dart?\n- It can be used for developing cross-platform applications.\n- Flutter uses Dart language that enhances the speed and quality of work.\n- It is easier to learn & it is ideal for a minimal viable product.\nHow This Course Can Help You?\nIt is an in-depth course having around 60 lectures for anyone who wants to learn cross-platform app development using Flutter & Dart programming. It covers everything you need to know for developing, testing, & publishing your application to Google Play Store & AppStore.\nThis online course on app development unfolds with the basic introduction to Flutter, its installation, & setup. As you will progress, you will get to know about all the features of Flutter, its importance, & an app life cycle. After learning the basics of Flutter, you will get hands-on experience with Dart programming for building your own application.\nEach of its sections is backed by a quiz that will help you to grasp maximum content at one go. In the end, the instructor will show you how to develop, test & publish a drug reminder application. After learning everything, you will be presented with an assignment wherein, you have to create a Note Reminder Application on your own.\n\n\nMajor Topics Covered\nIntro to Flutter & Dart\nImportance Flutter\nThe need for cross-platform coding\nAndroid Studio & Xcode\nApp lifecycle\nWorking with Dart language\nWidget applications in Flutter\nState management\nHTTP request\nNotifications with Firebase\nApp testing\nPublishing- Play store & AppStore\nProject- Building drug reminder app\nProject- Note reminder app\nGet started today to learn the concept of cross-platform app development with Flutter & Dart!",
      "target_audience": [
        "Anyone who wants to learn app development with Flutter will find this course very useful"
      ]
    },
    {
      "title": "Creating Windows Apps with Visual Studio 2013",
      "url": "https://www.udemy.com/course/creating-windows-apps-with-visual-studio/",
      "bio": "Learn how to create Windows based Apps using Visual Basic. I cover planning an app, designing the interface & coding.",
      "objectives": [
        "At the end of this course students will be able to create Apps that will run in the Windows 8.1 or Windows Phone environment."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Start Here": [
          "Visual Studio Tips"
        ],
        "Introduction to Computers and Programming": [
          "Introduction to Programming",
          "Planning an App"
        ],
        "Learning About Variables in a Computer App": [
          "Using Variables in a Program",
          "Data Types",
          "Using Math within a Project",
          "Creating My First App",
          "Tip Calculator",
          "Simple Math Calculator Challenge"
        ],
        "Basic Programming Controls": [
          "Basic Controls",
          "Basic Control Samples",
          "XAML Resources",
          "XAML Control Resources",
          "Control Naming Guideline",
          "Using Basic Controls Challenge",
          "Exception Handling",
          "Formatting Display Data",
          "Formatting Numbers & Dates",
          "Sample App Using Exception Handling -Formatting"
        ],
        "Decision Structure": [
          "Decision Structure",
          "Input Validation",
          "Using IF Decision Structure Sample App & Input Validation",
          "Using Select Case Decision Structure & Input Validation",
          "Decision Structure Challenge"
        ],
        "Loop Structures": [
          "Loop Structures",
          "Sample App demonstrating the use of the For Next Loop Structure",
          "Sample App using a Do loop Structure",
          "Using Looping Structure Challenge"
        ],
        "Random Numbers": [
          "Creating Random Numbers",
          "Coin Flip Using Random Numbers Sample Project",
          "Dice Game Challenge"
        ]
      },
      "requirements": [
        "Students will need to download and install a copy of either Visual Studio 2013 Express or if their school is a member of DreamSparks they can download the professional version of Visual Studio. Additionally students should watch the first course video before signing up for the course. as it has some additional tips."
      ],
      "description": "This course focuses on WIndows based app development for Windows 8.1 and Windows Phone. We will use the FREE version of Visual Studio 2013 Express or the community version for this class. This is an introductory level course that also focuses on the basics of programming logic.\nThe course has roughly 2 hours of video content and requires additional outside work for you to be able to create some of the apps on your own. This course is structured with short topical videos related to a particular programming concept, followed by videos that demonstrate the use of the content within an app or program.\nIf you are interested in learning to develop Windows based apps for the Windows Platform whether it is for a laptop, tablet or phone then this course is for you.",
      "target_audience": [
        "This is an introductory course for persons that have little or no programming experience. Students will learn about programming concepts as well as how to write basic Visual Basic code using Visual Studio 2013."
      ]
    },
    {
      "title": "Advanced Flutter[2025]: BLoC, Injectable, Flavors, i18n, Dio",
      "url": "https://www.udemy.com/course/advanced-flutter2025-bloc-injectable-flavors-i18n-dio/",
      "bio": "Build an e-commerce app using Flutter with BLoC, Injectable, Flavors, AutoRoute, i18n, Flavors, Dio & API integration",
      "objectives": [
        "Learn how to connect your app to real-world backend services using Dio, handle responses, errors, and apply clean separation of concerns.",
        "Implement a scalable error-handling architecture to gracefully manage network failures, timeouts, and server errors with custom exceptions",
        "(Search &Filters) Implement powerful search features with advanced filtering capabilities to enhance the product discovery experience",
        "(Pagination) Efficiently load large datasets from APIs using scroll-based pagination techniques.",
        "(BLoC) State Management with BLoC along with Freezed to manage complex app states in a clean, scalable, and testable way",
        "(Code Generation with Freezed) Eliminate boilerplate by generating immutable model classes, union states for BLoC, and more using freezed.",
        "(Dependency Injection) Set up scalable and testable architecture using injectable and get_it, including support for multiple environments (flavors).",
        "(Dio) Build a robust and reusable API layer with Dio interceptors, and switch configurations based on app flavor (dev, staging, production).",
        "(AutoRoute with Guards) Use auto_route navigation 2.0 for clean, declarative navigation with route guards for protected routes (e.g., authentication).",
        "(Authentication Flow) Implement complete user authentication: login, signup, logout, and session persistence using Hive.",
        "(Offline Support with Hive) Store data locally with Hive for fast offline access and smoother user experience.",
        "(Internationalization (i18n) ) Add multi-language support to your app using Flutter's internationalization capabilities, making your app globally accessible.",
        "Implement Cart Management"
      ],
      "course_content": {
        "Welcome Welcome": [
          "Welcome to the course",
          "Demo the App itself"
        ],
        "Flutter Flavors Setup": [
          "What are flavors",
          "Setup flutter flavors",
          "Setup flutter flavors for Android",
          "Setup flutter flavors for VSCode",
          "Setup flutter flavors for Android Studio [Android]"
        ],
        "Injectable Setup": [
          "What is dependency injection? [Injectable]",
          "Setup Injectable"
        ],
        "Auto Route Setup": [
          "What is auto route?",
          "Configuring Auto route",
          "Adding auto route Observer"
        ],
        "Internationalization (i18n) Setup": [
          "Internationalization (i18n) Flutter Setup",
          "Internationalization (i18n) docs",
          "Testing internationalization (i18n)"
        ],
        "Onboarding Feature": [
          "OnBoarding Intro [Hive]",
          "Register Adapters, Setup Hive",
          "Creating AppSettings Cubit",
          "Registering AppSettings Cubit [BlocProvider]",
          "Creating Pages, Splash Screen Logic",
          "Choose Language Screen Logic",
          "OnBoarding Screen Logic",
          "Splash Screen Animation"
        ],
        "Networking Setup (Dio & Error Handling)": [
          "Creating Global App Logger",
          "Dio Environment Configuration[Flavors]",
          "Creating Dio Interceptors",
          "Dio Client Setup",
          "Api Exception",
          "Api result Class",
          "Creating Api Service Wrapper Class [Api calls & Error Handling]",
          "Creating Dio Network Service Class",
          "Creating Global Api Response",
          "Recap [Networking setup]"
        ],
        "Category Feature": [
          "Inspecting API Response for Categories in Postman",
          "Creating Category Model with Freezed",
          "Fetching Categories via Repository Pattern",
          "Set Up the BLoC, States, and Events for Fetching Categories",
          "Adding Business Logic for Fetching Categories in the BLoC",
          "Folder Structure, Defining Pages [Category]",
          "Register Pages and Adding Bottom Navigation with AutoRoute",
          "Home Screen UI walkthrough",
          "Display Categories in the UI [BlocBuilder]",
          "Testing Fetching Categories and Quick Recap"
        ],
        "Product Feature [Pagination Support]": [
          "Inspection API Response for all products in Postman",
          "Building a Generic Pagination Model using Freezed",
          "Defining Pagination Meta Model with Freezed for API Metadata",
          "Creating the ProductModel Using Freezed and JSON Deserialization",
          "Creating ProductResponse Model with Freezed for Paginated API Results",
          "Fetching all Products via Repository Pattern",
          "Setup States and Events for fetching all Products with pagination support",
          "Adding Business Logic for Fetching all Products in BLoC",
          "Adding Business Logic for Fetching more Products in BLoC",
          "Displaying Products in a SliverGrid with BlocBuilder",
          "Implementing Infinite Scroll Pagination with BLoC and CustomScrollView",
          "Testing Fetching all Products with Pagination support",
          "Fetching all ProductByCategory via Repository Pattern",
          "Setup States and Events for fetching all ProductsByCategory",
          "Adding Business Logic for fetching all ProductsByCategory in BLoC",
          "Adding ProductsByCategory Screen",
          "Fetching and Implement infinite scroll Pagination for all ProductsByCategory",
          "Testing fetching all ProductsByCategory with Pagination support",
          "Inspecting API Response for Product Details in Postman",
          "Fetching Product Details via Repository Pattern",
          "Setup States and Events for fetching Product Details",
          "Adding Business Logic for fetching Product Details in BLoC",
          "Adding ProductDetails Screen",
          "Implementing Fetching Product Detail UI",
          "Testing Fetching Product Details"
        ],
        "Product Search Feature [Filtering & Pagination Support]": [
          "Inspecting API Response for searching products in Postman",
          "Searching of Products via Repository Pattern",
          "Setup States and Events for Searching of Products",
          "Adding Business Logic for searching products By Keyword in BLoC",
          "Implementing Search Products By Keyword UI with [BlocBuilder]",
          "Testing Search Products By Keyword",
          "Implementing Search Filter",
          "Testing Search Filter"
        ]
      },
      "requirements": [
        "You should know how to create simple Flutter apps.",
        "Understanding of widgets, navigation, and UI layouts."
      ],
      "description": "Are you ready to take your Flutter skills to the next level?\nIn this advanced course, you'll build a complete e-commerce application from scratch using powerful Flutter tools and architectural patterns trusted by professionals.\nYou'll go beyond the basics and learn how to structure scalable, maintainable, and testable Flutter applications using:\n\nBLoC (Business Logic Component) for state management\nInjectable + GetIt for dependency injection\nDio for complete networking setup, API integration, interceptors, and error handling\nAutoRoute for advanced navigation\nFreezed for immutable models, union types, and sealed classes\nFlutter i18n for internationalization\nFlavors for environment-based builds (dev, staging, production)\nHive for local storage and lightweight data persistence\nAlong the way, you'll implement real-world features like user authentication, product listing with pagination support, cart management, search functionality with filtering support, and secure API communication — all while following best practices used by top Flutter developers.\nThis course is perfect for Flutter developers who are comfortable with the basics and want to build production-ready apps with professional tooling, advanced patterns, and scalable code structures.\nWhether you're preparing for a job, freelancing, working on a team, or launching your own product — this course gives you the skills, confidence, and reusable code patterns to succeed in any advanced Flutter project.",
      "target_audience": [
        "Flutter developers looking to level up by building real-world apps with best practices",
        "Anyone preparing for Flutter job interviews or building an MVP",
        "Developers who want to learn BLoC, Freezed, Dio, and dependency injection in-depth",
        "Anyone building scalable Flutter projects with clean architecture principles"
      ]
    },
    {
      "title": "1 - Day Intro to iOS7 and App Building",
      "url": "https://www.udemy.com/course/1-day-intro-to-ios-and-app-building/",
      "bio": "Setup Xcode and build your first app today!",
      "objectives": [],
      "course_content": {
        "1-Day Intro to iOS and App Building": [
          "Intro - How to Install XCode",
          "Step-by-step Downloading and Installing Code",
          "Overview - Building your First App",
          "Opening XCode and Creating your First Project",
          "Label Use",
          "Adding a UIButton to our First Project",
          "Multiple Choice",
          "Changing Colors!",
          "UITextField",
          "UINavigationController and UIImageView"
        ],
        "iOS 102 Preview": [
          "Coming Soon, a Preview of iOS 102",
          "What is a variable?",
          "Commenting",
          "Operations on Variables",
          "Logging to the Console",
          "Valid Variable Names",
          "Token"
        ],
        "Variables Demo": [
          "Converting Units Part 1",
          "Converting Units Part 2"
        ],
        "Age of Laika": [
          "The Challenge",
          "Age of Laika: Solution Part 1",
          "Age of Laika: Solution Part 2"
        ]
      },
      "requirements": [
        "Mac running OS 10.8+",
        "XCode 5 (We'll walk you through it)"
      ],
      "description": "This course is a quick introduction to XCode and Apple's app building environment. At the end of the course you will have built your first simple button app in XCode 5.\n**Please note: Since we build in Apple's native environment this course requires you to have a Mac running OS 10.8+ in order to install XCode. This is an Apple mandate.",
      "target_audience": [
        "Zero Previous Experience Required!"
      ]
    },
    {
      "title": "Create Quiz App From Scratch With Firebase Realtime Database",
      "url": "https://www.udemy.com/course/android-studio-quiz-app-using-firebase-realtime-database/",
      "bio": "Creating a Simple Quiz App in Android Studio with Firebase Realtime Database and launching it in Google play store",
      "objectives": [
        "Create a new Android Studio project",
        "Adding Firebase Realtime Database to your project",
        "Creating Database using DBBrowser for SQLite",
        "Create a data model for your quiz questions and answers",
        "Store the quiz data in Firebase Realtime Database",
        "Display the quiz questions and answers to the user",
        "Publishing App to PlayStore"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Designing Quiz App": [
          "Creating New Project",
          "Creating New Firebase Project",
          "Adding a Question",
          "Displaying Question in App",
          "Validating Answer",
          "Installing DBBrowser for SQLite",
          "Creating Data",
          "Adding Levels",
          "Next Button",
          "Calculating Score",
          "Timer",
          "Final Score Card",
          "High Score for Each Level",
          "Questions in Random Order",
          "ActionBar Title",
          "Exit Button"
        ],
        "Making the App launch ready": [
          "Adding Button Background",
          "Adding Color Gradient",
          "Changing App Name and Package Name",
          "App Icon",
          "Privacy Policy",
          "About Section",
          "Generating Signed App Bundle"
        ],
        "Uploading App to Google Play Store": [
          "Uploading App to Play Store"
        ],
        "Source Code": [
          "Source Code"
        ],
        "Thank You": [
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of Android development",
        "Basic knowledge of Firebase"
      ],
      "description": "This course is designed to teach you how to create a quiz app using Android Studio and Firebase Realtime Database. You will learn how to create a quiz app with multiple questions and answers, how to store the quiz data in a Firebase Realtime Database, and how to display the quiz questions and answers to the user.\n\n\nThis course is highly recommended for anyone who wants to learn how to create a quiz app using Android Studio and Firebase Realtime Database. The course is well-organized and easy to follow. However, it is important to note that this course is not for everyone. If you are not already familiar with Android development or Firebase, then you may find this course to be too difficult. Additionally, the course is relatively short, and it does not cover all of the concepts that a beginner Android developer may need to know. Overall, this is a good course for anyone who wants to learn how to create a quiz app using Android Studio and Firebase Realtime Database. However, it is important to note that this course is not for everyone and that it does have some limitations.\n\n\nYou will learn the following topics in this course\n\n\nCreating New Android Studio Project\nCreating New Firebase Project\nAdding Data to Firebase Realtime Database\nAccessing Data from Firebase Realtime Database from Android App\nDisplaying Quiz Questions\nValidating Quiz Answers\nInstalling DBBrowser for SQLite\nCreating and Saving Data using DBBrowser for SQLite\nUploading the tables manually to Firebase Realtime Database\nDisplaying Timer and Score\nDisplaying Score card\nSaving and Displaying High Scores\nSetting Action Bar title\nCreating custom button background\nCreating custom gradient background\nCreating App Icon\nGenerating Signed App Bundle\nUploading App Bundle to Google Play Store\n\n\nAt the end of this course, you will be in a position to implement the topics taught in this course.",
      "target_audience": [
        "This course is intended for Android developers who want to learn how to create a quiz app using Firebase Realtime Database."
      ]
    },
    {
      "title": "Android App Development Masterclass using Kotlin",
      "url": "https://www.udemy.com/course/android-app-development-masterclass-using-kotlin/",
      "bio": "Android App Development for complete beginners using kotlin, Become an Android Developer and make professional apps",
      "objectives": [
        "Android App Development and Become a professional Android developer",
        "Learn how to develop android apps using kotlin",
        "Learn how to make real working android apps that work properly, looks great and upto date",
        "Learn the core Android App Development Skills",
        "Learn how to use kotlin to develop android apps",
        "Learn how to develop android apps using kotlin",
        "Learn Android App Development using kotlin"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Overview on how to create an Android App from Scratch"
        ],
        "Android Studio IDE": [
          "Installing Android Studio on Windows",
          "Installing Android Studio on MAC PC",
          "Create your first Android Studio Project",
          "Android Project Structure",
          "Android Studio User Interface",
          "Android Studio Emulator ( creating, running and testing our project )"
        ],
        "Building and Deploying Android App": [
          "Building and Deploying Introduction",
          "Building and Deploying Locally",
          "Building and Deploying to Play Store",
          "Overview Android Apps User Interface"
        ],
        "Android Kotlin Fundamentals": [
          "Why use kotlin",
          "Variable in Kotlin",
          "Type Inference"
        ],
        "Layout File and XML in Android Studio": [
          "Introduction to User Interface",
          "Layouts",
          "XML",
          "Types of Layouts",
          "Login App User Interface"
        ],
        "Android Navigation Drawer Component": [
          "OverView",
          "Android Navigation Drawer Implementation"
        ],
        "GridLayout in Android App ( grocery app )": [
          "Overview",
          "Android Studio Grid Layout"
        ],
        "RecyclerView in Android App ( Users List App )": [
          "Application Overview",
          "Android RecyclerView Setup and Customization",
          "Android RecyclerView Layout Setup",
          "Android RecyclerView Implementation Logic",
          "RecyclerView Open new Activity On Item Click",
          "RecyclerView SearchView",
          "Conclusion"
        ],
        "Android Simple Calculator App": [
          "Overview of calculator app",
          "Create New Android Calculator Project",
          "Android Calculator User Interface",
          "Performing Math Operations using Kotlin"
        ]
      },
      "requirements": [
        "Windows or Mac PC",
        "No programming - Complete beginner friendly",
        "Basic computer understanding is an added advantage"
      ],
      "description": "Android App Development Master using Kotlin, Move from a complete beginner and start making professional and beautiful Android Apps.\nThis course will take you from installing android studio to building real apps that are useful and look great.\nYou will gain a deep understanding of the core important aspects of android app development using kotlin.\nThis course will help open many doors for you since android is the most popular operating system in the world.\nWhether you are a complete beginner or are switching from another language this course will give you core to android apps development using kotlin that you require.\n\n\nYou may have a lot of ideas for android apps but you don't know where to start. With this course, you will be able to understand everything from installing android studio which is used to develop android apps to deploying your Android app.\nNo prior programming knowledge is needed, this android development course is designed with beginners' minds.\n\n\nSince kotlin is now the official android programming language it makes this course a good to go for anyone who wants to develop an android application.\n\n\nYou will learn with practical examples created using kotlin to help you become a master in android app development.\nOur practical examples covers the most using features in android apps and will help you form proper ground in developing your android application\n\n\nWhy you should take this course:\nYou are interested in making android apps.\nThe course is designed with a beginner's mind - no prior programming skills are needed.\nYou are interested in becoming a self-employed android developer.\n\n\nOnce you understand the basics of Android development, you will able able to develop any type of android app.\nHere you will get basics even if you have no prior knowledge of developing android applications.\n\n\nBecome an android developer to do and unleash the great ideas you have been having.\nLet's meet inside the course",
      "target_audience": [
        "Anyone who want to become android apps developer",
        "Someone who wants deep understanding on Android Apps Development",
        "Complete beginner to Android Apps Development with no Prior programming skills"
      ]
    },
    {
      "title": "Ultimate Android Bootcamp: 100 Days of Android",
      "url": "https://www.udemy.com/course/ultimate-android-bootcamp/",
      "bio": "Learn Android from scratch in 100 hands-on days. Build real apps, master Compose, and publish to the Play Store.",
      "objectives": [
        "Build Android apps from scratch using Kotlin, Jetpack Compose, and modern architecture in 100 bite-sized daily lessons.",
        "Create and publish real apps with custom icons, Play Store listings, and monetisation using AdMob banners",
        "Learn to debug, structure, and scale your projects using best practices like MVVM and modular code.",
        "Master layout design, user input, and UI interactions through fun, hands-on mini-projects."
      ],
      "course_content": {
        "Introduction": [
          "Android Dev is not easy. And it WILL sometimes get frustrating!"
        ],
        "Introduction of the tool-Android Studio": [
          "Intro and two ways of download and install Android Studio"
        ],
        "(Updating) Your first Android app": [
          "I am updating this section"
        ],
        "100 Days of Android Development-The Basic": [
          "DAY 1 Project Structure Overview",
          "DAY 2 Container and Modifier",
          "DAY 3 Modulize your code",
          "DAY 4 Add List and Button",
          "DAY 5 Add condition and color change",
          "DAY 6 Customize background",
          "DAY 7 Transparent status bar",
          "DAY 8 Intro of LazyColumn",
          "DAY 9 Saving the State in Compose",
          "DAY 10 How to use offline kotlin compiler to practice",
          "DAY 11 Why call greeting directly won't work",
          "DAY 12 How to get user input",
          "DAY 13 How to make custumized preview",
          "DAY 14 Add Interaction to the Textfield",
          "DAY 15 Let's make a toast MSG",
          "DAY 16 Learn layout from the best",
          "DAY 17 Let's add some modifier and add spacing",
          "DAY 18 Let's make an logo and add image inside",
          "DAY 19 How to make a customized Text",
          "DAY 20 Intro of icons and some resources",
          "DAY 21 How to make a selectable button",
          "DAY 22 Estimate how many state var we need",
          "DAY 23 Why sometimes text filed click and not response",
          "DAY 24 How to collapse drop down menu PART 1",
          "DAY 25 How to collapse drop down menu PART 2",
          "DAY 26 Finish our translation Mock App",
          "DAY 27 Intro of lazy column",
          "DAY 28 Using AlertDialog to make pop up window",
          "DAY 29 Use Log and println to debug and find the d",
          "DAY 30 Add multiple data to our mock database",
          "DAY 31 How to show multiple data in lazy column",
          "DAY 32 Modify the structure of our lazy column",
          "DAY 33 Achieve the delete function",
          "DAY 34 MVVM architecture Intro",
          "DAY 35 A quick demo of MVVM architecture",
          "DAY 36 How to navigate between multiple screens PART １",
          "DAY 37 How to navigate between multiple screens PART２",
          "DAY 38 How to navigate between multiple screens PART３",
          "DAY 39 How to navigate between multiple screens PART 4",
          "DAY 40 How to navigate between multiple screens PART 5"
        ],
        "100 Days of Android Development-The To Do List Project": [
          "DAY 41-42 Let's make a Super To Do List App PART 1",
          "DAY 43-44 Let's make a Super To Do List App PART 2",
          "DAY 45 Let's make a Super To Do List App PART 3",
          "DAY 46-47 Let's make a Super To Do List App PART 4",
          "DAY 48 Let's make a Super To Do List App PART 5",
          "DAY 49 Let's make a Super To Do List App PART 6",
          "DAY 50 Let's make a Super To Do List App PART 7",
          "DAY 51 Let's make a Super To Do List App PART 8",
          "DAY 52 Let's make a Super To Do List App PART 9",
          "DAY 53 Let's make a Super To Do List App PART 10",
          "DAY 54 Let's make a Super To Do List App PART 11",
          "DAY 55 Let's make a Super To Do List App PART 12",
          "DAY 56-57Let's make a Super To Do List App PART 13"
        ],
        "100 Days of Android Development-Simple Xylophone Project": [
          "DAY 58-59 Simple Xylophone Project PART 1",
          "DAY 60-61 Simple Xylophone Project PART 2",
          "DAY 62 Simple Xylophone Project PART 3",
          "DAY 63 Simple Xylophone Project PART 4",
          "DAY 64-65 Simple Xylophone Project PART 5",
          "DAY 66 Simple Xylophone Project PART 6",
          "DAY 67 Simple Xylophone Project PART 7",
          "DAY 68 Simple Xylophone Project PART 8",
          "DAY 69 Simple Xylophone Project PART 9",
          "DAY 70 Simple Xylophone Project PART 10",
          "DAY 71-72 Simple Xylophone Project PART 11",
          "DAY 73 Simple Xylophone Project PART 12",
          "DAY 74-75 Simple Xylophone Project PART 13",
          "DAY 76 Simple Xylophone Project PART 14",
          "DAY 77 Simple Xylophone Project PART 15",
          "DAY 78 Simple Xylophone Project PART 16",
          "DAY 79-80 Simple Xylophone Project PART 17"
        ],
        "100 Days of Android Development-Publish to Play Store/Design Your App‘s Own Icon": [
          "DAY 81-85-Publish to Play Store PART 1 Listing",
          "DAY 86-Icon Design-Intro",
          "DAY 87-Icon Design-Look at guideline",
          "DAY 88-Icon Design-If the artboard is missing, how to get it back",
          "DAY 89-Icon Design-How to move and pan",
          "DAY 90-Icon Design-Why I can't click anywhere else",
          "DAY 91-Icon Design-Normal direct selection",
          "DAY 92-Icon Design-Why am I drawing vector shape but still seems pixelated",
          "DAY 93-94-Icon Design-Make App Logo PART 1",
          "DAY 95-Icon Design-Make App Logo PART 2",
          "DAY 96-97-Icon Design-Make App Logo PART 3",
          "DAY 98-Icon Design-Make App Logo PART 4",
          "DAY 99-100-Publish to Play Store PART 2 Admob Banner"
        ]
      },
      "requirements": [
        "No prior Android experience needed — this course is built for absolute beginners."
      ],
      "description": "Are you ready to become an Android developer? This 100-day bootcamp is designed to take you from complete beginner to confident app creator — one practical project at a time.\nIn this hands-on course, you'll learn modern Android development using Kotlin, Jetpack Compose, and Android Studio. You'll start with the basics and gradually build up your skills through daily lessons, challenges, and projects. Each day introduces a new concept or feature, helping you absorb and apply what you’ve learned immediately.\nYou’ll work on real-world projects, including a To-Do List App and a Xylophone App, all while gaining a solid understanding of layouts, user input, state management, navigation, debugging, and more. By the end of the bootcamp, you’ll not only be able to build beautiful and functional Android apps — you’ll also know how to publish them to the Google Play Store and monetize them with AdMob ads and banners.\nThis course is perfect for beginners, students, hobbyists, or developers from other platforms looking to transition into Android. No prior experience is needed — just a computer, Android Studio, and a commitment to learning something new each day.\nLet’s build your Android development skills together — one day at a time. Join today and start creating!",
      "target_audience": [
        "Beginners who want to become confident Android developers from the ground up"
      ]
    },
    {
      "title": "How To Make An App For Beginners (iOS/Swift - 2019)",
      "url": "https://www.udemy.com/course/how-to-make-an-app-for-beginners-iosswift-2019/",
      "bio": "Learn to build an iOS app using Swift",
      "objectives": [],
      "course_content": {
        "How to make an app in Swift": [
          "Xcode",
          "Auto Layout",
          "Bonus Auto Layout",
          "Auto Layout Exercise",
          "Stack View",
          "Stack Views Exercise",
          "Your First User Interface",
          "Your First User Interface Exercise",
          "Swift Basics (I)",
          "Swift Basics (II)",
          "Swift Basics (III)",
          "Connect Elements",
          "User Interaction",
          "Coding Logic",
          "Conclusion"
        ]
      },
      "requirements": [
        "None, we teach all from scratch!"
      ],
      "description": "Hi I’m Chris!  I’m dedicated to teaching fundamentals about how to make an app.  This is important if you’re trying to land an iOS job, be a freelancer, increase or start a business with an app idea.  On this series, you'll find a free tutorials to aid you on your journey to learn iOS development. Many people have successfully picked up Swift 5, Xcode 10 and app building from my course and materials!",
      "target_audience": [
        "Beginners",
        "Developers who want to start in iOS"
      ]
    },
    {
      "title": "Learn Swift: Build an MVP using Gamification",
      "url": "https://www.udemy.com/course/learn-swift-building-an-mvp/",
      "bio": "Learn the new programming from Apple in a fun unique way. Apple made much easier to create an iOS app with Swift.",
      "objectives": [
        "You'll be able to create iOS applications from the ground up using the Swift Language",
        "You'll learn how to create an MVP (Minimum Viable Product) for your app, so you can test it with your clients before investing a lot of money and time.",
        "You'll learn general programming language concepts like Objective Oriented Programming, Variables, Collection Types, Control Flow and much more",
        "You'll learn basic concepts of iOS design using native elements"
      ],
      "course_content": {
        "Introduction": [
          "About the course",
          "The Swift Files for The MVP"
        ],
        "Creating the first Screen - Team Selection": [
          "Getting Started - Create a Project",
          "First Screen - Edit View Controller",
          "Putting Stuff on the Screen - Creating Labels",
          "External Source - Images for The Home Screen",
          "Creating Buttons and Images",
          "Skills Panel 1 (Gamification)"
        ],
        "Creating the second Screen - Match Teams": [
          "Second Screen - Add a View Controller",
          "Creating the Labels",
          "Team Match Flags",
          "Navigation Bar",
          "Segues - Navigating through the app",
          "Create a Class",
          "Skills Panel 2 (Gamification)"
        ],
        "Conding on the Playground - The Basics": [
          "The Playground",
          "Variables",
          "Constants",
          "Working With Strings and Integers",
          "Arrays",
          "Comments",
          "Skills Panel 3 (Gamification)"
        ],
        "Begin Coding - Creating Magic with the iOS Elements": [
          "Button Actions - Now the Buttons do Something Cool",
          "Dynamic Labels - They Change on the Fly (check discussions if you have problems)",
          "Dynamic Buttons - Team Flags Change According to Selection",
          "Array With the Six Teams",
          "Coding on The Playground - Functions",
          "Random Number Function and Type Conversion",
          "Get Organized - Creating Files Structure",
          "Update the Second Team",
          "Coding on The Playground - Dictionaries",
          "Creating the Team Ratings - Using Dictionaries",
          "Skills Panel 4 (Gamification)"
        ],
        "Creating The Players List - Part 1": [
          "Creating a Temporary Players List",
          "Creating the 3rd Screen - Team Players View Controller",
          "Creating The Players List UI - Table View",
          "Connecting the Table View",
          "Fill the Players List - Create a Cell",
          "Getting Players Number",
          "Getting Players Name",
          "Getting Ratings",
          "Filling Player's Number - DetailTextLabel",
          "Skills Panel 5 (Gamification)"
        ],
        "Creating The Players List - Part 2": [
          "Updating Teams 1 Flag",
          "If Statement",
          "Switch Statement",
          "Creating Team Players with switch",
          "Giving the right names",
          "For Loop",
          "Generating Random Ratings Part 1 - Equalizing Team",
          "Generating Random Ratings Part 2 - Add chance to the game",
          "Skills Panel 6 (Gamification)"
        ],
        "Creating The Power Ups": [
          "Creating The Power Up View Controller",
          "Images for The Power Up Screen",
          "Creating The Power Up Screen",
          "Connecting The Elements To The Code",
          "Skills Panel 7 (Gamification)",
          "Selecting the Player",
          "Updating Player Name and Rating",
          "PowerUp Class - Object Oriented - Attributes",
          "Creating Objects",
          "Updating the Power Ups on the screen",
          "Skills Panel 8 (Gamification)"
        ],
        "The Battle Screen - Part 1": [
          "Creating The Battle View Controller",
          "Images for The Battle Screen",
          "Filling The Battle Screen",
          "Connecting The Elements to The Code",
          "Creating The Segues",
          "Skills Panel 9 (Gamification)"
        ],
        "The Battle Screen - Part 2": [
          "Setting Up Team 2",
          "Updating The Battle Screen - Team 1",
          "Updating The Battle Screen - Team 2",
          "Adding Up Power Ups",
          "The Opponent Power Up - Working with Methods",
          "Chance Points - Adding Fun to the Game",
          "Goaaaal - Updating the score",
          "Skills Panel 10 (Gamification)"
        ]
      },
      "requirements": [
        "Macintosh with Xcode 6",
        "No coding experience required"
      ],
      "description": "In this course you'll learn Apple's new programming language, Swift by building and MVP and using gamification to keep track of the skills you master.\nThis course is not about theory (there are some lectures about that to help you), instead you are going to be presented with the techniques you need while building a multi-screen iOS real game.\nAn MVP (Minimum Viable Product) is definitely the best way to start an app development. Using this technique, you build just the essentials to start testing your app with your clients before spending huge amounts of money an time.\nAfter completing the course, you'll be able to build any basic version of your idea. With that app in hand you can validate your idea with key costumers and can get an investor to put some money on your company.\nFor every section you finish, a gamified panel will be presented showing what you have done and what skills were mastered, making it easy to keep track and most importantly giving you the motivation you need to become a Swift especiatlist.",
      "target_audience": [
        "Experienced and wanna be iOS developers",
        "Entrepreneurs who wants to learn iOS development with Swift or train it's team"
      ]
    },
    {
      "title": "SwiftUI iOS Animations: Transform Code into Motion",
      "url": "https://www.udemy.com/course/swiftui-ios-animations/",
      "bio": "SwiftUI Basic and Custom Animations, Phase and KeyFrame animations, Transitions, Metal, Spritekit Emitters and more",
      "objectives": [
        "Learn how to create smooth, dynamic animations using implicit and explicit animations for seamless user interactions.",
        "Explore advanced animation effects like transitions, keyframe animations, and interactive gestures to enhance app experiences.",
        "Understand and apply powerful SwiftUI animation modifiers, including .animation(), .transition(), and .matchedGeometryEffect().",
        "Explore phase animations, keyframe animations, and interactive gestures to design captivating and engaging app experiences.",
        "Harness the power of Metal in combination with SwiftUI’s visualEffect modifier to create next-level animations and effects."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting Started"
        ],
        "Basics": [
          "Animations using withAnimation and the Animation Modifier",
          "Animate Everything - Setting up the View",
          "Animating Everything - Adding the Animations",
          "Overview of Animation Types",
          "More Default Animations",
          "Cubic Bezier Animations using Timing Curves",
          "Custom Ease Animations",
          "Spring and Interpolating Spring Animations",
          "ConcentricCirclesEffectView",
          "AnimatedBackgroundView",
          "Rotating Flower - Gradient Circle View",
          "Rotating Flower - Circle Pair",
          "Rotating Flower View",
          "Next Song Exercise",
          "Next Song Solution"
        ],
        "Person Picker Exercise": [
          "Getting Started with the Animated Person Picker Exercise",
          "Download the Images from Flaticons",
          "Masked Person View",
          "Implementation of Person Picker View"
        ],
        "An Excursion into SVG Files and Animations": [
          "SVG to Path",
          "Generic Draw Path View"
        ],
        "Rotating Purple Triangles Challenge": [
          "Introduction to Challenge",
          "Creating the Triangles",
          "Refactoring the Triangles",
          "Triple Triangle View",
          "Implementing the Animations"
        ],
        "Mesh Gradient Dynamics and Texture Blending": [
          "Creating an Animated Mesh Gradient",
          "Blending in a Texture"
        ],
        "Completion Callback Animations": [
          "Hamburger Icon - Offset Rectangle",
          "Hamburger Icon using Animation Completions",
          "Radial Gradient Completion Demo - Part 1",
          "Radial Gradient Completion Demo - Part 2 - Animations"
        ],
        "Splash Screen Animation Completion Challenge": [
          "Introduction to the Splash Screen Challenge",
          "Setting up the Project and View Parameters",
          "The Logo",
          "The Text",
          "Creating the Animations",
          "Tweaking the Animations",
          "Customizing the Colors"
        ],
        "Paths and Animations": [
          "Pacman View",
          "Winter Stars - The Glow and Setting up the Background",
          "Winter Stars - Setting the Star y-Offset",
          "Winter Stars - Rotate and Spawn Stars",
          "Winter Stars - Removing Stars",
          "Winter Stars - Creating the Star Shape",
          "Let's Create a Speech Bubble!",
          "Implementing the Speech Bubble"
        ],
        "Exploring Transitions in SwiftUI with AnyTransition": [
          "Introduction to Transitions",
          "Custom Sliding Disclosure Group"
        ]
      },
      "requirements": [
        "A basic understanding of Swift programming and familiarity with SwiftUI."
      ],
      "description": "In this course, you’ll take your SwiftUI animations to the next level by learning:\nAnimation Basics: Explore the default animations in SwiftUI and how to group them seamlessly.\nCore Fundamentals: Master transitions, timing curves, and effects that bring your designs to life.\nCustom Animations: Create reusable ease animations using cubic Bézier curves.\nAdvanced Techniques: Dive into complex animations with animation completions, phase animators, and keyframe-based animation.\nPath Animations: Use SVG files, trims, and the Animatable protocol to create smooth and dynamic path animations.\nStunning Visual Effects: Implement zoom transitions and other mesmerizing effects.\nMesh gradients: Create animated mesh gradients.\nMetal Integration: Learn how to leverage Metal for high-performance, smooth-rendering animations.\nSpriteKit Particle Emitters: Design jaw-dropping animations using SpriteKit particle emitters.\nBy mastering these topics, you’ll gain the skills to create animations that elevate your iOS apps and deliver an unforgettable user experience.\nCourse Highlights\nThis course is designed for students with some prior knowledge of Swift and SwiftUI, making it an intermediate-level course. It’s perfect for iOS developers looking to add a professional touch to their apps with dynamic and interactive animations.\nIn addition, we’ve created a Discord group where you can connect with fellow students, share your work, and get inspired by each other’s creativity. There’s also a Q&A section within the course to address any questions or challenges you encounter along the way.\nWe encourage you to showcase your animations and provide feedback to others—collaboration makes learning even more enjoyable! Plus, this course will be regularly updated to include the latest SwiftUI features and animation techniques, ensuring you always stay ahead.\nWishing you a fantastic day and happy coding! I can’t wait to see the amazing animations you’ll create.\n—Ron",
      "target_audience": [
        "Aspiring iOS developers who want to create apps with smooth, interactive animations.",
        "UI/UX designers seeking to translate their creative designs into functional and animated SwiftUI components.",
        "Intermediate SwiftUI users eager to explore advanced concepts like phase animations, keyframes, and Metal-powered effects.",
        "Tech enthusiasts with a passion for animation and motion design in mobile applications."
      ]
    },
    {
      "title": "Introduction to SwiftUI - Create Your First App",
      "url": "https://www.udemy.com/course/swiftui-introduction/",
      "bio": "Create your first SwiftUI App within iOS 13",
      "objectives": [
        "Full understanding of the basics of SwiftUI and all it has to offer",
        "Learn how to program for SwiftUI to create your own apps",
        "Be able to support all devices and screen sizes",
        "Develop in SwiftUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What is SwiftUI?": [
          "Creating a SwiftUI Project",
          "Displaying Text",
          "Text Properties",
          "Displaying Images",
          "Using Stack Views",
          "Combining and Displaying Views",
          "Creating Buttons",
          "Source Code"
        ],
        "Xcode 11 Previews": [
          "What are Previews?",
          "Previews on Different Devices",
          "Scale and Adjust Content",
          "Source Code"
        ],
        "Creating Lists and Table Views": [
          "Creating the Project",
          "Creating the Table View Cells",
          "Adding the List Data",
          "Populating the List",
          "Creating the Detail View",
          "Passing Data Between Views",
          "Source Code"
        ],
        "Implementing Map Views": [
          "Map View Introduction",
          "Creating a Map View",
          "Adding Locations to a Map View",
          "Adding Map Annotation Pins",
          "Source Code"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS Apps but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis Introduction to SwiftUI - Create Your First App! will give you everything your need to start your new career in SwiftUI development, The course has been structured to support SwiftUI & Swift programming language, Teaching you all you need to know and covering all the basics of SwiftUI.\nSell Your App to Millions of Users and earn extra revenue from Ad networks, Making money has never been so easy!\nNot only do you get the best online IOS development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose My Course?\nMy names Aaron Caines and i have created over 15+ Best Selling iOS courses for Swift and Objective-C, if you have already enrolled into one of my courses int he past you already know how exciting and fun they can be and how jam packed they are with information!\nWhy Choose This SwiftUI Course?\nMany programmers learning to create there first iOS application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This SwiftUI course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode and to offer any advice needed and before you know if you will have created your first iOS app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nUnderstanding Xcode, SwiftUI, iOS 13, Interface Builder, Simulator and Project Types\nLanguage basics and building blocks\nSwiftUI: Get to know the new way to build\nUniversal Support and Screen Size Support\nCombining Views\nUsing Previews to Display Live Interfaces\nBuilding and Integrating Lists\nScaling and Adjusting Content\nMap View Integration\nImages and Sounds Integration\nFull Featured iOS 13 Apps",
      "target_audience": [
        "Anyone who wants to learn SwiftUI",
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "The Complete Android Animations Course with Kotlin",
      "url": "https://www.udemy.com/course/the-complete-android-animations-course-with-kotlin/",
      "bio": "Add engaging animations to your Android apps using Kotlin",
      "objectives": [
        "View Animations",
        "View Property Animation",
        "Animated Vector Drawables",
        "Physics-based Animations",
        "Transitions"
      ],
      "course_content": {
        "Introduction to the Course": [
          "What Is Animation?",
          "Why Animation",
          "Why Kotlin",
          "What You Will Learn In This Course"
        ],
        "View Animations": [
          "Introduction to the Section",
          "Create Animation In Code",
          "Create Animation in XML",
          "View Animation for Activity",
          "Define an Animation Listener",
          "Create A Frame Animation",
          "Create A Background Selector"
        ],
        "View Property Animation": [
          "Introduction to View Property Animation System",
          "Animate using ValueAnimator",
          "Animate using ObjectAnimator",
          "Animate Multiple Views using AnimatorSet",
          "Animate a Custom Type",
          "Define View Property Animators in XML"
        ],
        "Transitions": [
          "What You Learn in This Section",
          "What is a transition?",
          "Define Transition in Code",
          "Define Transition in XML",
          "Run a Transition with Back Button",
          "Transition with ConstraintLayout Group",
          "Transition with ConstraintSet",
          "Transition with Placeholder"
        ],
        "Advanced Transitions": [
          "Introduction",
          "Advanced Transitions API",
          "Eplode and Slide Transitions",
          "Coordinated Slide Motion",
          "Reverse Coordinated Slide Motion",
          "Transform Transitions",
          "Shared Element Transition",
          "Animate Multiple Shared Elements",
          "Activity Content Transition",
          "Fragment Content Transition"
        ],
        "Animated Vector Drawables": [
          "Introduction",
          "Create SVG using Inkscape",
          "Import SVG in Android Studio",
          "Create Animated Vector Graphics (Multi-file Approach)",
          "Create Animated Vector Graphics (Single-File Approach)",
          "Animate Path in ShapeShifter",
          "Animate Trim-Path using ShapeShifter",
          "Animate Clip Path using ShapeShifter",
          "Run Animated Vector Drawables",
          "Handling Animated Vector Drawables in Android"
        ],
        "Physics-Based Animation": [
          "Introduction",
          "Make A Fling Animation",
          "Make Fling Work Horizontally",
          "Make A Spring Animation"
        ],
        "MotionLayout": [
          "Introduction to Section",
          "How MotionLayout Works",
          "Create A Basic Motion",
          "Create Complex Motion with Visual Motion Editor",
          "MotionLayout with CoordinatorLayout",
          "Make a Carousel with MotionLayout",
          "Tilting Carousel"
        ]
      },
      "requirements": [
        "Average Kotlin Language and Basic Android Studio Knowledge"
      ],
      "description": "Animations are important visual elements that can add enagement, meaning, and better overal user experience to your Android applications.\nIn this course, you will learn about Android animation APIs and how to use them in your Android apps. You will learn about animations, property animation, transitions, animated vector drawables, physics-based animation, MotionLayout and more using the Kotlin programming language. Therefore, the course takes advantage of the great state-of-the-art features of Kotlin.\n\n\nThe course is a remake of my 2017 Android animations course which was in Java. The whole course has been re-recorded and in many cases, redesigned, to help you more quickly get started with Android animations.\nBy the end of the course, you will have a firm grasp of how animation in Android works. Based on the knowledge and skills you pick up here, you will be able to implement your custom animations for different views, screens, layouts, and different scenarios. The course covers simple to advanced animations in a step by step manner, empowering you with strong and modern animations  as you go.\nWhether you are a beginner Android developer looking to get started with Animations or a seasoned professional developer keen on adding meaningful motion elements to your Android apps, or even if you have worked with Android animations before, but want to refresh your knowledge, this course is for you.\nSo, do yourself a favor, buy the course now and start working with Android animations.\nLast but not least, the course is backed by Udemy's 30-day moneyback guarantee.\nThen, take the course now and join me in this exciting journey with Android animations.",
      "target_audience": [
        "Beginner to Advanced Android Developer Looking to Learn Animations"
      ]
    },
    {
      "title": "Publish a Simple & Addictive iPhone Game that Monetizes",
      "url": "https://www.udemy.com/course/publish-a-simple-addictive-iphone-game-that-monetizes/",
      "bio": "Flappy Bird game creator 2nd best seller game is ready for reskinning. Full source code with detailed video instructions",
      "objectives": [
        "Publish your very own 'Super Ball Juggling' iPhone game clone to the apple app store today"
      ],
      "course_content": {
        "Initial Setup": [
          "Apple Developer Registration",
          "Get XCode Tool",
          "Testing the original source code in the Simulator",
          "Troubleshooting newer XCode with iOS 7.1+",
          "iOS Distribution Certificates",
          "Provisioning Profile",
          "Setting Up Applovin Advertising Account",
          "Chartboost Advertising Account Setup"
        ],
        "Reskinning Game Graphics Process: The main character": [
          "Finding & Choosing Graphics",
          "Modifying Main Character Graphics & Animations - part 1",
          "Modifying Main Character Graphics & Animations - part 2",
          "Modifying Main Character Graphics & Animations - part 3",
          "Modifying Main Character Graphics & Animations - part 4 - Testing in Simulator"
        ],
        "Reskinning Game Graphics Process: Misc Graphics": [
          "Modifying Game Background Images",
          "Modifying Game Main Menu Background Image",
          "Modifying the Ball Image",
          "Modifying Game Medals images",
          "Modifying Game Overlay Labels",
          "Creating Game Icons",
          "Adding Game Launch Images",
          "Testing Game Graphics Modifications in the iPhone Simulator"
        ],
        "Game Graphics Alternative Way": [
          "Modifying Graphics the Easy Way"
        ],
        "Preparation for App Store Publishing": [
          "Taking Game Screenshots and Resizing them",
          "Creating Itunnesconnect App Settings",
          "Updating Source Code Project Settings in Xcode",
          "Updating Game Advertising Network ids",
          "Setting Up In-app Purchases to Remove Ads",
          "Setting Up Inapp purchase - part 2",
          "Adding the Leaderboard in Game Center",
          "Testing the Game before Publishing",
          "Getting Ready to Upload Binary File",
          "Publishing to the itunes App Store"
        ],
        "What to Do Now?": [
          "Grow your app portfolio",
          "Finding the Best Game Theme - Anticipating Upcoming Trends",
          "Podcast: The Mobile App Flipping show",
          "Get informed of the latest trends and deals",
          "Become a pro: App icon templates for professionals",
          "Optional: Playing with the ball speed, bounciness, and gravity",
          "BONUS"
        ]
      },
      "requirements": [
        "a MAC computer or a virtual image ( http://virtualmacosx.com/index.php/xcode-plans or macInCloud.com )"
      ],
      "description": "Hi,\nMy name is Yohann, I will be your instructor.\nI want to thank you for your interest in this course.\nThis course comes with the Super Zombie Juggle source code. Now I’m sure you’ve heard about the Flappy Bird game, haven’t you?.\nThe source code we give you is a clone of the flappy bird’s owner second best selling game called Super Ball Juggling.\nMany of my students have been riding the Flappy Bird trends and made tons of money with it, and I’ve got to admit I did too!\nIf you’ve ever tried to make a mobile app, you know how hard it can be especially if you’re missing a step, you could get stuck for hours or even days, and would end up giving up.\nNow you’ve come to the right place. In this course I show you every single step you need to get the game published in the app store,\nThis game will bring you passive income because we’ve integrated advertising banners and in-app purchases right out of the box.\nNow the game Super Ball Juggling is gaining popularity and you don’t want to be late to the party,\nSo don’t wait for another opportunity and come ride the wave with us\nSee you in the classroom.",
      "target_audience": [
        "really for anyone that's got an afternoon to spare"
      ]
    },
    {
      "title": "Top Destinations App in SwiftUI w/ Maps & Lottie Animation",
      "url": "https://www.udemy.com/course/top-destinations-app-in-swiftui-w-maps-lottie-animation/",
      "bio": "Learn to build custom Hero Animation while building out complete app from start to finish with maps & Lottie annotation",
      "objectives": [
        "SwiftUI",
        "SwiftUI Animations",
        "Maps in SwiftUI",
        "JSON Parsing in SwiftUI",
        "Generics in SwiftUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "App Setup": [
          "Project Setup",
          "JSON File Parsing",
          "Generic File Decoder"
        ],
        "Top Destination App": [
          "Home View",
          "Home View Expanded State",
          "Card View",
          "Card View Hero Animation",
          "Detail View Layout"
        ],
        "MapKit": [
          "Map View",
          "Custom Map Annotation with Lottie Animation"
        ],
        "Resources": [
          "Project files"
        ]
      },
      "requirements": [
        "Knowledge of iOS Development",
        "Basics of Swift"
      ],
      "description": "Welcome to the top destinations video course. In this video course, you will learn to build out Top Destinations app from start to finish. In this video course you will learn to build app in SwiftUI. This course will cover Hero animation and you will see how iOS platform's internals of building matchedAnimation by building it from scratch on your own.\nYou will learn to build out UI from data that has been parsed from JSON file. You will learn to parse JSON file using generics but will also learn to map custom keys to swift objects using CodingKey enumeration.\nYou will be building Home Screen with data that has been parsed from JSON file and then use SwiftUI animation techniques to build and launch hero animation.\nYou will be building custom card layout which will expand via hero animation to show more details about the selected destination.\nYou will learn basics of Maps in SwiftUI and how to integrate MapKit into SwiftUI apps. You will look at various overloads that can be used to customize the maps along with SwiftUI modifiers that can be applied on Map views itself.\nYou will learn Swift Package Manager by integrating Lottie animation package into the app.\nWe will create custom annotations to mark locations on map and we will use Lottie animation for those marked locations so you will learn to integrate Lottie animation into SwiftUI as well\nPlease join me in this journey to explore SwiftUI at its best.",
      "target_audience": [
        "Developers who wants to build apps start to finish while learning SwiftUI, Maps, Animations, Json parsing and Generics"
      ]
    },
    {
      "title": "NanoApps Starter- Fundamental of Mobile App Development",
      "url": "https://www.udemy.com/course/nanoappsstarter-fundamentalofmobileapp/",
      "bio": "Build and deploy Android apps using Visual Studio and C#",
      "objectives": [
        "Build your first working Android app.",
        "Gain practical experience in UI design",
        "Gain practical experience in Mobile App Coding",
        "Certificate by completion of Course and project"
      ],
      "course_content": {
        "Introduction (15 min)": [
          "Welcome to the App World - 3 min",
          "The App Eco System - 6 min",
          "Your Journey as Creator - 5 min",
          "Section 1 Summary - 1 min",
          "Section 1 Quiz"
        ],
        "Overview of Mobile App Development Tools (22 min)": [
          "Introduction to Mobile App Development Tools - 5 min",
          "Visual Studio with Xamarin/.NET MAUI (5 min)",
          "Figma for UI Design (5 min)",
          "Other Cross-Platform Tools (5 min)",
          "Key Takeaways (2 min)",
          "Section 2 Quiz"
        ],
        "The Rise of the Intelligent App (5 min)": [
          "Rise of the Intelligent App - 5 min"
        ],
        "Introduction to Visual Studio (45 min)": [
          "What is Visual Studio? (3 min)",
          "Installing Visual Studio (7 min)",
          "Key Feature of Visual Studio (13 min)",
          "Exploring Interface (7 min)",
          "Extension & Productivity Tools (9 min)",
          "Debugging Basics (3 min)",
          "Key Takeaway and Mini Challenge (2 min)",
          "Section 4 Quiz"
        ],
        "Basic App Development in Visual Studio (50 min)": [
          "Starting New Project (5 min)",
          "Understanding Project Structure (6 min)",
          "Designing the UI (13 min)",
          "Add Logic with C# (11 min)",
          "Running the App (8 min)",
          "Key Takeaway & Mini Challenge (2 min)",
          "Section 5 Quiz"
        ],
        "Android App Deployment (22 min)": [
          "Running on Physical Device (5 min)",
          "Preparing for Deployment (10 min)",
          "Building for Release (3 min)",
          "Publishing to Google Play (12 min)",
          "Key Takeaway & Mini Challenge (2 min)",
          "Section 6 Quiz"
        ]
      },
      "requirements": [
        "No prior programming experience required."
      ],
      "description": "NanoApps Starter Course: Fundamental of Mobile App Development\nThe NanoApp Starter Course for Fundamental of Mobile App Development is your gateway into the exciting world of mobile app development. Designed for beginners and aspiring creators, this course guides you step by step through the fundamentals of building, designing, and deploying mobile applications using modern tools and platforms.\nAcross 28 instructor-led video lessons, you’ll gain practical knowledge of how apps are built, tested, and published. The course also includes 5 quizzes to reinforce your learning and 3 hands-on challenges that let you apply your skills in real-world scenarios.\nYou’ll explore essential topics such as:\nIntroduction to Mobile Apps – understanding the app world and ecosystem.\nOverview of Mobile App Development Tools – discovering frameworks, platforms, and design tools.\nThe Rise of Intelligent Apps – how AI is shaping the future of mobile experiences.\nIntroduction to Visual Studio – setting up your environment and workflow.\nBasic App Development in Visual Studio – writing your first app with C# and XAML.\nAndroid App Deployment – packaging and publishing your app to reach users worldwide.\nBy the end of this course, you’ll have the confidence to start your journey as an app creator—equipped with the knowledge to design, develop, and deploy your own apps.",
      "target_audience": [
        "All Level",
        "High school/college students, professionals, entrepreneurs, or hobbyists"
      ]
    },
    {
      "title": "Build AI Fitness Apps in Android with Pose Detection 2025",
      "url": "https://www.udemy.com/course/build-ai-fitness-apps-in-android-kotlin-with-pose-detection/",
      "bio": "Create AI-powered fitness & workout apps in Android 16 with Kotlin and Pose Detection. Build Yoga, Exercise Counter Apps",
      "objectives": [
        "Build AI-powered fitness apps that detect poses and track exercises in real time",
        "How to integrate Google’s ML Kit Pose Detection into native Android apps using Kotlin",
        "Capture human body poses from both images and live camera feed",
        "Process and visualize key body landmarks like shoulders, elbows, knees, and more",
        "Develop a Yoga Trainer App that recognizes and evaluates yoga postures",
        "Create an Exercise Counter App that tracks repetitions using body movements",
        "Understand best practices for optimizing performance and accuracy in motion tracking apps",
        "Build mobile apps that combine Kotlin, AI, and real-time camera processing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pose Detection & Applications"
        ],
        "Image Picker Android(Choose or Capture Images)": [
          "Creating a New Android Project & Designing the Image Picker App UI in Kotlin",
          "Choosing Images from the Gallery in Android with Kotlin",
          "Capturing Images from the Camera in Android using Kotlin",
          "Converting Images to Bitmaps in Android with Kotlin"
        ],
        "Pose Detection in Android with Images": [
          "Setting Up Starter Code for Pose Detection with Images in Android (Kotlin)",
          "Adding Pose Detection Library & Exploring Google ML Kit Documentation in Android",
          "Creating a Pose Detector & Passing Images for Analysis in Android Kotlin",
          "Drawing Body Landmark Points on Images in Android with Kotlin",
          "Drawing Lines Connecting Body Landmarks on Images in Android Kotlin",
          "Best Way to Draw Lines Between Body Landmarks in Android Kotlin",
          "Build a Digital Skeleton Using Pose Detection in Android Kotlin",
          "Assignment Solution: Drawing a Complete Digital Skeleton in Android Kotlin"
        ],
        "Yoga Pose Detection in Android": [
          "Detecting Yoga Poses in Images Using Pose Detection in Android Kotlin",
          "How Yoga Poses Are Detected Using Pose Landmarks in Android Kotlin",
          "Using ChatGPT for Detecting Different Yoga Poses in Android Kotlin"
        ],
        "Display Live Camera Feed in Android Using Camera2 API with Kotlin": [
          "Creating a New Android Project and Handling Permissions in Kotlin",
          "Display Live Camera Feed in Android Using Kotlin",
          "How Live Camera Footage Is Displayed in Android Using Kotlin",
          "Extracting Camera Frames as Bitmaps from Live Feed in Android Kotlin"
        ],
        "Realtime Pose Detection in Android Kotlin": [
          "Performing Real-Time Pose Detection with Live Camera Feed in Android Kotlin",
          "Pose Overlay View to Draw Detection Results on Live Camera Feed in Android",
          "Drawing Body Landmark Points on Live Camera Feed in Android Kotlin",
          "Scaling Pose Detection Results in Android Kotlin",
          "Precisely Scaling Pose Detection Points for Accurate Overlay in Android Kotlin",
          "Drawing a Digital Skeleton on Live Camera Feed in Android Kotlin",
          "Handling Frame Rotation for Accurate Pose Detection in Android Kotlin"
        ],
        "Exercise Detection & Counting in Android Kotlin": [
          "Detecting and Counting Push-Ups Using Pose Detection in Android Kotlin",
          "How Push-Ups Are Counted Using Pose Detection Logic in Android Kotlin",
          "Detecting and Counting Squats with Pose Detection in Android Kotlin",
          "Workout Selection in Android Kotlin",
          "Creating and Setting a Custom ListView Adapter in Android Kotlin",
          "Displaying GIF Animations in Android Using Glide Library in Kotlin",
          "Building a Beautiful Tile-Based GUI for Exercises in Android Kotlin",
          "Detecting the Selected Workout in Android Kotlin",
          "Enhancing Pose Detection Logic Using ChatGPT in Android Kotlin",
          "Enhancing the Detection Activity UI for a Better Fitness App Experience"
        ]
      },
      "requirements": [
        "Basic knowledge of Android development using Kotlin or Java",
        "A computer with Android Studio installed (Windows, macOS, or Linux)",
        "No prior machine learning or AI experience is required — everything will be explained step by step"
      ],
      "description": "Are you an Android developer who wants to build intelligent fitness apps that detect yoga poses, count exercises, and track workouts in real time?\nThis course is for you!\nIn this practical, hands-on course, you’ll learn how to integrate pose detection models into native Android apps using Kotlin and Google’s ML Kit. Whether you’re building fitness trackers, AI yoga coaches, or interactive workout apps, you’ll discover how to use pose detection to analyze human body movements by identifying key points like shoulders, knees, and ankles.\n\n\nWhat You’ll Learn\n1: Introduction to Pose Detection and real-world use cases in fitness, healthcare, and sports\n2: How to use Google’s ML Kit Pose Detection API in Kotlin-based Android apps\n3: Capture and analyze poses from images and live camera feed\n4: Build AI fitness apps like:\nYoga Pose Detection App – Evaluate yoga poses in real time\nExercise Repetition Counter App – Count push-ups, squats, and more\nPosture Analysis App – Detect user posture and provide feedback\nProcess pose detection results to detect key points and track movements\nDisplay real-time pose data using Android’s camera and drawing overlays\n\n\nCourse Structure\nModule 1 – Introduction to Pose Detection and ML Kit in Android\nModule 2 – Pose Detection with Static Images (Gallery or Camera)\nModule 3 – Real-Time Pose Detection Using Live Camera Feed\nModule 4 – Building Hands-On AI Fitness Apps in Kotlin\nModule 5 – Optimize User Experience and Detect Movements Accurately\nWho Is This Course For?\nAndroid developers (beginner to advanced)\nKotlin developers looking to integrate AI/ML in their apps\nApp creators building fitness, yoga, or wellness platforms\nTech enthusiasts who want to learn real-time body movement tracking\nNo ML experience needed — just basic Android & Kotlin knowledge!\n\n\nWhy Take This Course?\nBuild real AI-powered fitness apps in native Android\nHands-on projects with source code & visual feedback\nStep-by-step guidance on pose detection integration\nUse Google ML Kit for accurate and reliable pose tracking\nCreate apps that stand out in fitness, sports, and health domains\nLet’s Get Moving!\nBy the end of this course, you'll be ready to develop real-world Android apps that understand human motion and respond intelligently. Start building the next generation of AI fitness and workout apps — all with Kotlin and ML Kit!",
      "target_audience": [
        "Android developers (beginners to intermediate) who want to add AI capabilities to their apps",
        "Kotlin programmers looking to build real-time fitness and workout tracking applications",
        "Students and tech enthusiasts eager to learn AI-powered motion tracking in mobile apps",
        "Anyone who wants to create smart Android apps that detect human body movements in real time",
        "App creators building fitness, yoga, health, or sports-based mobile applications"
      ]
    },
    {
      "title": "ARKit & SceneKit Fundamentals",
      "url": "https://www.udemy.com/course/arkit-scenekit-fundamentals/",
      "bio": "Turn your living room into augmented reality environment",
      "objectives": [
        "How to create an ARKit project from scratch.",
        "How to add a UIButton, box to an ARKit game",
        "How to remove objects from ARKit Game Scene",
        "How to reset your scene.",
        "How to detect planes in ARKit",
        "And much more"
      ],
      "course_content": {
        "ARKit & SceneKit Game Development": [
          "Introduction",
          "Source code",
          "ARKit Game from a Single View Application",
          "UIButton in an ARKit game and LBTAComponents",
          "How to Add a box in an ARKit Game with SCNBox",
          "Remove Objects from ARKit Game Scene Tutorial",
          "Reset ARSCNView in ARKit and Default Shapes",
          "Plane Detection in ARKit with ARPlaneAnchor and ARSCNViewDelegate",
          "Add a Floor with SCNPlane and ARPlaneAnchor to an ARKit game",
          "Hit-Testing with UITapGestureRecognizer in an ARKit game Swift 4",
          "Textures Materials in ARKit",
          "UILabel in ARKit- UI Setup for Distance Measuring App in Swift 4",
          "Measure Distance in ARKit",
          "Drawing App in ARKit in Swift 4 Tutorial",
          "Vertical Plane Detection in ARKit 1.5 NEW TUTORIAL",
          "How to build an AR Joystick in Swift4 New Step-by-Step Tutorial"
        ]
      },
      "requirements": [
        "You should have a Mac.",
        "You must have one of these devices: iPhone 6s or 6s Plus iPhone 7 or 7 Plus iPhone SE iPad Pro (9.7, 10.5 or 12.9) – both first-gen or 2nd-gen iPad (2017) iPhone 8 or 8 Plus iPhone X (some issues may arise)"
      ],
      "description": "AR is the core technology behind amazing apps such as Pokémon Go, Snapchat's animated emojis, and Instagram's 3D stickers. And today we will learn how to Build Augmented Reality apps using ARKit in iOS 12 and Swift 4.\nIn this series you will learn everything that you need to know to make your own cool ARKit games. Of course we will use quite a lot of SceneKit too. We will go through the basics of Augmented Reality and Apple’s ARKit. We apply the lessons and craft an application that adds 3D models to the world using different methods.\nBy doing so, you will learn how to:\nadd and remove Objects;\nuse Plane Detection;\nadd Floor, Textures and Materials;\nMesure Distance;\nbuild Drawing App in ARKit;\nbuild an AR Joystick.\nThe code for this demo can be found on GitHub too.\nGot a question? Ask it in the comments section. I answer each and every question in less than 24 hours, but mostly within 3 hours (if we're not asleep). Customer happiness is our #1 priority.\nStart your AR journey today! Enroll the course and be part of the Rebeloper learning community!",
      "target_audience": [
        "iOS Developers who want's to learn Apple’s biggest innovation for years: ARKit & SceneKit Game Development",
        "People who want to design for AR game, building a demo app, exploring and testing many of the features of ARKit."
      ]
    },
    {
      "title": "How to add In App Purchases to your iPhone app the easy way",
      "url": "https://www.udemy.com/course/how-to-add-in-app-purchases-to-your-iphone-app-the-easy-way/",
      "bio": "The fastest and easiest way to implement MKStoreKit and boost your sales! Learn how to monetize your app now!",
      "objectives": [
        "learn how to add In App Purchases to you app",
        "by the end of this course you will have learnt all the necessary ins and outs of In App Purchases, NOT more, NOT less."
      ],
      "course_content": {},
      "requirements": [
        "minimum objective-C and Xcode knowledge"
      ],
      "description": "IMPORTANT NOTICE:\nThis course was originally sold for $97 but now I am selling it at $19. If you want to learn about MKStoreKit than this is your course. It's the only course on the market covering MKStoreKit so feel free and tai it for only $19.\nIf you won't like what you see, don't worry: there is a 30 day money back guaranty on all Udemy courses :)\n\nIn App Purchases are the Holy Grail of app monetization.\nBut for years it has been a real hassle for newbie developers to add In App Purchases to their apps. One had to be a coding genius to understand all the aspects of implementing IAP. Just take a look at Apple's documentation.\nThis was just overly complicated for me! I wanted something simple and fast!\nThan I found MKStoreKit by Mugunth Kumar.\nMKStoreKit does all the magic of dealing with all that complicated stuff. Hurray!!!\nBut, wait. I found no comprehensive MKStoreKit tutorial explaining how to use MKStoreKit. There isn't any documentation at all on how to implement it into your Xcode project!(besides Kumar's brief description which just isn't enough) I have dug myself into the code and after countless sleepless nights I have made this MKStoreKit tutorial course for you. It documents every step you have to make to learn in order to take advantage of in app monetization.\nNote: for now MKStoreKit is not advised for auto-renewable subscriptions, but if you want to add consumabels or non-consumables, take this course now:)\nThis course covers all you will ever need to know about adding In App Purchases to your app using MKStoreKit.\n☛ Take a look at the FREE lecture inside\n☛ iOS6 ready\n☛ simple, fast, easy\nWhat are you waiting for?\nTake this course now and boost your sales with In App Purchases!\n⬇⬇⬇ TAKE A LOOK AT THE FREE LECTURES ⬇⬇⬇",
      "target_audience": [
        "any iOS developer from newbie to advanced who wants to shorten development time and simplify adding In App Purchases to their apps"
      ]
    },
    {
      "title": "iOS Development Crash Course - Learn How to Create iOS Apps",
      "url": "https://www.udemy.com/course/swift-5-basics-learn-the-fundamentals-of-swift-for-beginner/",
      "bio": "Create iOS Apps like Todo list app. Quick and Easy way to learn Swift Programming and Xcode in this Crash Course",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Xcode Installation"
        ],
        "Variables and Constants in Swift": [
          "Variables and Constants"
        ],
        "Collection types in Swift": [
          "Arrays and Arrays Operation in Swift",
          "Sets and Tuples in Swift",
          "Dictionaries in Swift"
        ],
        "Operators in Swift": [
          "How to use Operators in Swift"
        ],
        "Enumeration in Swift": [
          "Enums in Swift"
        ],
        "Control Flow in Swift": [
          "Conditions in Swift",
          "Switch Statements and Range Operators in Swift",
          "For Loops and While Loops Construct in Swift"
        ],
        "Functions": [
          "How to use Functions in Swift"
        ],
        "Class and Struct in Swift": [
          "Struct in Swift",
          "Class in Swift"
        ],
        "Creating a Todo List iOS Application": [
          "Learning the Xcode Environment and Setting up the TableView",
          "Adding Items in the TableView",
          "Deleting Items From the TableView"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Absolutely No Programming Experience Needed",
        "You will need a Mac Computer"
      ],
      "description": "Welcome to the Swift Basics Course where we aim to start learning about Swift Programming from SCRATCH!\nYou don't need any past programming experience and/or mobile app development experience in any programming language to take this course, we will learn to Code Swift from Scratch.\nWhat is Swift\nSwift is a general-purpose programming language developed by Apple to create apps for iOS, iPadOS, macOS, watchOS and even for tvOS.\nWhat you are going to learn\nUse of Xcode's Playground Environment - Learn to use Playground which is very powerful Interactive work Environment for Swift Programming\nSwift Variables and Constants - Learn the basics of Variables, Constants and their Data Types in Swift\nOperators in Swift - Learn how to use various operators in Swift that includes Arithmetic Operators, Compound Assignment Operators, Comparison Operators and Logical Operators.\nCharacters and Strings - Learn to manipulate Strings and Characters in your code and different functions associated with them.\nCollection Types in Swift - Learn about Arrays, Dictionaries, Sets and Tuples in Swift and how to use them. Also learn about different method associated with them.\nSwift Control Flow - This section deals with iterators and conditionals. Learn how to use while loops, For loops in Swift.\nSwift Functions - We will learn about Functions, how to create them, pass parameters to a function and get return values from a function.\nClasses in Swift - Learn how to use blueprint like Class in Swift.\nStruct in Swift - Learn how to use blueprint like Struct in Swift.\nAdditional Content: We will create a TODO List iOS Application for your iPhone\n\n\nBy the end of this course, you will be well versed with:\nSwift Fundamentals\nVariables and Constants in Swift\nOperators in Swift\nCreating Functions\nCreating Loops\nConditions in Swift\nCollection Types in Swift\nEnums in Swift\nSwitch Statements in Swift\nStruct in Swift\nClasses in Swift\nAnd much more\nAnd you will be ready to create your first iOS App\nYou would have created a Todo list App yourself\nYou'll get friendly support in the Q&A area.\nTake this course now and start learning Swift Programming Language",
      "target_audience": [
        "Anyone Who wants to Start learn Swift",
        "If you are a Complete Beginner, then this course is just for you.",
        "New programmers who want to get started with programming languages",
        "Beginners Who want to Dive in iOS App Development"
      ]
    },
    {
      "title": "Interactive Image Carousel with ScrollView, Swift UI & iOS17",
      "url": "https://www.udemy.com/course/interactive-image-carousel-with-scrollview-swiftui-ios17/",
      "bio": "Practical exploration of ScrollView in Swift UI 5, Swift 5.9 and iOS 17",
      "objectives": [
        "Developers who wants to learn SwiftUI 5",
        "Developers who wants to explore iOS 17",
        "Engineers who wants to build custom controls using SwiftUI",
        "Developers who wants to learn new additions in ScrollView for SwiftUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "ScrollView Examples": [
          "Example 1",
          "Example 2",
          "Example 3",
          "Example 4",
          "Example 5",
          "Example 6",
          "Example 7",
          "Example 8",
          "Example 9",
          "Example 10",
          "Example 11",
          "Example 12"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI",
        "Knowledge of Xcode"
      ],
      "description": "SwiftUI's ScrollView is a versatile container view that allows users to scroll through a list of content vertically or horizontally. It provides a convenient way to display a large amount of data within a limited screen space. With ScrollView, you can create dynamic and interactive interfaces for iOS, macOS, watchOS, and other Apple platforms.\nTo use ScrollView, you wrap your content inside it, and if the content exceeds the available space, the ScrollView automatically enables scrolling. You can customize the ScrollView's behavior by specifying its axis (vertical or horizontal) using the .vertical or .horizontal modifiers.\nScrollView can handle a wide range of content, including text, images, controls, and other SwiftUI views. It supports a variety of scrolling gestures, such as swipe, drag, and bounce effects. Additionally, you can add additional modifiers like padding, frame, and alignment to control the layout and appearance of the ScrollView.\nScrollView provides a performant and efficient scrolling experience by efficiently recycling views and loading only the necessary content on demand. This helps improve the overall performance and memory usage of your app.\nOverall, SwiftUI's ScrollView simplifies the process of creating scrollable interfaces and enhances the user experience by allowing seamless navigation through large datasets. It offers a flexible and intuitive way to build dynamic and engaging UIs across various Apple platforms.\n\n\nWWDC23 brought new additions to ScrollView that makes the UI development with ScrollView not only fun and easy but it can make your app UI stand out with just few lines of code.\n\n\nSo Join me in this course and let's explore ScrollView in SwiftUI 5 and iOS 17 together.",
      "target_audience": [
        "Anyone who wants to take a deep dive into the new changes in SwiftUI ScrollView with iOS 17"
      ]
    },
    {
      "title": "What Is ARC In iOS? Swift Memory Management System",
      "url": "https://www.udemy.com/course/swiftui-arc/",
      "bio": "Created by iOSBFree. Exposing the iOS ARC memory management system, how it works and how to use it.",
      "objectives": [],
      "course_content": {
        "Welcome": [
          "This Course",
          "Download Sample Code",
          "Free Online Courses",
          "Free Stuff On iOSBFree.com"
        ],
        "What Is ARC?": [
          "What Is ARC? (Automatic Reference Counting)"
        ],
        "3 Reference Types (strong, weak and unowned)": [
          "Strong References",
          "Weak References",
          "Unowned References"
        ],
        "Capturing Objects Inside Closures": [
          "How Closures Capture Objects",
          "Engineering Decisions Using Strong References In Closures",
          "Always Execute Your Callbacks Using Strong References"
        ]
      },
      "requirements": [
        "Basic iOS knowledge"
      ],
      "description": "Learn From One Of The 1st iOS Developers In The World\nOur instructor Matt, has 13 years of experience in iOS and created the world's first iPhone, iPad and Apple Watch apps. Now, he dedicates his time to recording courses for iOSBFree (pronounced \"iOS Be Free\").\n\n\nIn This Course\n1. We introduce the concept of ARC (Automatic Reference Counting) and the 3 different options available for storing objects in memory.\n2. We create some simple code within a Swift Playground. The Playground files are always included and attached to each video as a resource (the same with all our courses). Please follow along and try it for yourself!\n\n\nLearning Objectives\n· What is ARC\n· About the counter system\n· The 3 options for storing data in memory\n· How objects are captured within a closure\n· Engineering decisions when altering the way objects are stored or released from memory\n· Networking requests should always fire their callbacks. Always.\n\n\nSample Code\nSample Code Is Always Included and attached to each video. You can download the same project used in each episode of the course.\n\n\n\nThis Course Is Free\nThis course is free. We aim to publish as many short courses as we can to help new iOS Developers apply for jobs in iOS and enter a high paying profession. We want those developers to write great apps that are robust, work correctly, and are maintainable. By supplying this information for free we hope we can reach as many people studying in the pandemic as we can.\n\n\nOur Service (iOSBFree Ltd)\nWe are a unique career-building service sharing over 13 years of successful experience shaping the iOS industry into what it is today. Our unique information, point-of-view and service can be utilised to build highly successful and profitable careers in iOS.\n\n\nA Career In iOS\niOS developers are the most sought after developers in the world! They can earn over £100,000 per year, work remotely and B in high demand for their skills! Subscribe to our YouTube channel and let us reveal all our insider secrets completely for free.\n\n\nWhat We Teach\nCareer building, CV writing, interviewing skills, industry secrets, industry stories, real-life experience, iOS fundamentals, ARC memory management, Swift, architecture and best engineering practices.\nPlease show your support by enrolling in our course!\n\n\n\nWhat Is SwiftUI?\nSwiftUI is a newly released UI Framework introduced to iOS. It aims to solve a lot of problems with apps, such as running on all platforms, reducing bugs, improving stability and bringing more developers to iOS - because it's easier to write apps!\nLearning SwiftUI is an absolute must for any iOS developer looking to develop a career over the next 5 years.\n\n\nThe Instructor\nCheck out our Instructor profile (just briefly) and glance over Matt's incredible unparalleled experience. After 13 years of specialising in iOS, he created a company helping people build their own successful and profitable careers in iOS too.\nOur unique information cannot be found anywhere else on any platform. We not only teach code, syntax and architecture but we provide tried & tested strategies to boost your career forwards and build a better life!\n\n\n\nWant To Learn More Topics?\nPlease send us an email with the topic you would like to learn in a swift playground and we will happily record, edit and publish it for you. Absolutely for free. Simply email community@iOSBFree.com with the subject heading, \"Topic I Want To Learn\".\n\n\nFirst In The World\nNot only is our instructor one of the first iOS developers in the world, but our service is also the first of its kind in the world!\niOSBFree is a truly unique one-of-a-kind service. There is no single other service offering Matt’s level of experience in any other coding course, software engineering tutorial, or career-building service anywhere in the world.\n\n\nMore From iOSBFree\n· Download Our FREE CV Template\n· Download Our Career BOOSTER Pack\n· Enrol In FREE Online Courses (iOS & Swift)\n· Read Our Blog\n\n\nMuch love.\nThe iOSBFree team.\nBuild a profitable iOS career with iOSBFree!",
      "target_audience": [
        "Beginners who want to know about iOS"
      ]
    },
    {
      "title": "Create iPhone Apps from Scratch with iOS7 – Starter Course",
      "url": "https://www.udemy.com/course/create-iphone-apps-from-scratch-with-ios7-free-course/",
      "bio": "Use a Mac or PC to create your first iPhone app using Xcode 5. No programming experience required to learn Objective C",
      "objectives": [],
      "course_content": {
        "Intro and Getting Started": [
          "Introduction",
          "Setting up Your Mac",
          "Setting Up Mac in Cloud (PC Users)"
        ],
        "Your First iPhone App": [
          "How to Program iPhone Apps",
          "Your First iPhone App",
          "Troubleshooting Bugs"
        ],
        "Variables and Types": [
          "Lecture - Variables and Types",
          "Xcode - Variables and Types"
        ],
        "Decision Making": [
          "Lecture - Decision Making",
          "Xcode - Decision Making"
        ],
        "Functions": [
          "Lecture - Functions",
          "Xcode - Functions"
        ],
        "Advanced Functions": [
          "Lecture - Advanced Functions",
          "Xcode - Advanced Functions",
          "Lecture - Global Variables"
        ],
        "Numbers": [
          "Lecture - Numbers",
          "Xcode - Numbers"
        ],
        "Loops": [
          "Lecture - Loops",
          "Xcode - Loops"
        ],
        "Want to Learn More?": [
          "Check out http://iPhoneDev.tv for more advanced courses and topics.",
          "Thank You!"
        ]
      },
      "requirements": [
        "Mac OS X Mountain Lion (10.8.4+) or Mavericks (10.9+)",
        "iMac, Mac Mini, Macbook, or Mac Pro (2009+)",
        "Xcode 5",
        "PC Users - MacinCloud.com"
      ],
      "description": "In this course you'll learn how to create a fully functional iPhone app.\nNo programming experience required!\nThroughout this starter course you will learn important Objective C programming topics. Using Xcode 5 you can begin turning your ideas into real world iPhone apps.\nMobile apps are the future of computing and if you want to sell apps you will need to learn how to get started.\nIf you enjoy this course, my full iOS7 course is available to teach you everything.\nSign and you can make your first iPhone app today!",
      "target_audience": [
        "Non-Programmers",
        "Designers",
        "Aritists",
        "Web Designers",
        "Idea People",
        "Web Developers"
      ]
    },
    {
      "title": "Learn SwiftUI 5 & iOS 17 by Building Complete Goals App",
      "url": "https://www.udemy.com/course/learn-swiftui-5-ios-17-by-building-complete-goals-app/",
      "bio": "Master SwiftUI, Firebase, and Advanced iOS Techniques: Build, Deploy, and Elevate with Your Goals App",
      "objectives": [
        "Learn to build iOS app from beginner to professional using SwiftUI",
        "Learn Design Patterns in SwiftUI",
        "Learn Firebase backend with SwiftUI",
        "Learn to write unit tests for business logic"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Configurations": [
          "Project Creation",
          "Firebase Configuration",
          "Folder Setup"
        ],
        "Models": [
          "Model Creation"
        ],
        "Repository Design Pattern": [
          "Understanding the Basics"
        ],
        "Repository Protocol": [
          "Goal Repository Protocol"
        ],
        "Mock Goal Repository": [
          "Mock Goal Repository Creation",
          "Mock Goal Repository Unit Tests"
        ],
        "Firebase Goal Repository": [
          "Setup",
          "Get All Goals",
          "Add New Goal",
          "Delete Goal",
          "Add New Goal Item",
          "Delete Goal Item",
          "Firebase Goal Repository Unit Tests"
        ],
        "Color Extensions": [
          "Color Extension - Part 1",
          "Color Extension - Part 2",
          "Color Extension Unit Tests"
        ],
        "Date Extensions": [
          "Date Extension"
        ],
        "UIKit to SwiftUI": [
          "UIViewRepresentable Explained",
          "Emoji TextField"
        ]
      },
      "requirements": [
        "Knowledge of Swift Language",
        "Knowledge of Xcode"
      ],
      "description": "Welcome to the comprehensive course on building a Goals app using SwiftUI and Firebase. This course will equip you with the skills to create a polished iOS application ready for publication. With a focus on hands-on learning, you will master SwiftUI for creating engaging user interfaces. Explore Firebase as a powerful backend solution for data storage, enabling seamless cloud-based integration.\nLearning Objectives:\nSwiftUI Mastery: Gain expertise in SwiftUI's declarative approach to UI design, creating visually appealing and responsive interfaces effortlessly.\nFirebase Integration: Learn to seamlessly integrate Firebase for backend services, mastering real-time data storage and retrieval.\nMVVM Design Pattern: Understand the Model-View-ViewModel design pattern, creating modular and maintainable code for efficient development.\nRepository Design Pattern: Discover the Repository pattern to manage data sources, enhancing code organization and reusability.\nDependency Injection: Implement dependency injection to improve code testability, flexibility, and separation of concerns.\nUnit Testing Proficiency: Develop robust business logic through unit testing, ensuring app stability and reliability.\nSwift Standard Library Extension: Extend the Swift standard library with custom functionalities, enhancing the app's capabilities.\nUIKit in SwiftUI: Incorporate UIKit components into SwiftUI interfaces, leveraging existing resources effectively.\nUIKit Delegation in SwiftUI: Learn to manage delegation from UIKit to SwiftUI, effectively responding to delegate-based events.\nCustom Animation Extensions: Create captivating user experiences with custom animation extensions, making your app visually appealing and engaging.\nEmbark on this journey to transform your SwiftUI skills, Firebase knowledge, and app-building proficiency. By the end of this course, you'll be empowered to develop feature-rich iOS applications that combine the best of SwiftUI's modern approach, Firebase's robust backend capabilities, and advanced techniques like dependency injection for well-structured and testable code.",
      "target_audience": [
        "Learn to build complete iOS app from beginner to professional using SwiftUI"
      ]
    },
    {
      "title": "The Complete Swift Guide for IOS 8 and Xcode 6",
      "url": "https://www.udemy.com/course/the-complete-swift-guide-for-ios-8-and-xcode-6/",
      "bio": "A Guide to iPhone and iPad development. A Complete Xcode 6 and IOS 8 Course with Swift Beginner to pro.",
      "objectives": [
        "Full understanding of Xcode and all it has to offer",
        "Learn how to program for IOS 8 to create your own apps",
        "Be able to support all devices and screen sizes",
        "Full explanation of all objects and functions within IOS development",
        "Earn revenue from your apps",
        "Start a new career"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Getting To Grips!": [
          "Downloading and Installing Xcode",
          "Creating an App ID",
          "Purchasing a Developer Licence",
          "Project Types, What's Best For Me?",
          "What are Classes, InfoPLists and Delegates?",
          "Using the Interface Builder",
          "Building on the IOS Simulator",
          "Create, Download and Install Certificates",
          "Building to a Device"
        ],
        "Understanding Swift": [
          "Variables",
          "Arrays",
          "Functions",
          "Actions and Outlets"
        ],
        "Understanding Functions": [
          "Hello World",
          "Dismissing The Keyboard",
          "Using If Statements",
          "Creating a Tap Counter",
          "Random Number Generator",
          "Random Word Generator"
        ],
        "Creating Actions": [
          "UISwitches",
          "UISegmentedControl",
          "Using UISliders",
          "Creating Shake Gestures",
          "Creating URL Links"
        ],
        "Getting a Good View!": [
          "Universal Views - Constraints",
          "Controlling UIScrollViews",
          "Displaying UIAlertViews",
          "Using UIWebViews",
          "Controlling UIWebViews",
          "Activity Indicator",
          "Using UIMapViews",
          "Controlling UIMapViews",
          "Switching Views in Storyboards",
          "UICollectionView Part 1",
          "UICollectionView Part 2"
        ],
        "Looking and Sounding Right": [
          "Displaying Images",
          "Displaying Launch Images",
          "Displaying App Icons",
          "Creating a Launch Screen",
          "Playing Animations",
          "Changing The Background Colour",
          "Playing Audio Files",
          "Adjusting Audio Volume"
        ],
        "Getting Social With Your App!": [
          "Posting to Facebook",
          "Tweeting to Twitter",
          "Sending In App Emails",
          "Sending an SMS Messages"
        ],
        "Creating A Table View Application": [
          "Populating a Table View",
          "Pushing to a Detail View Controller",
          "Populating a Detail View Controller"
        ],
        "Core Data": [
          "Setting Up a Database Part 1",
          "Setting Up a Database Part 2",
          "Adding and Saving Database Data",
          "Editing Database Data",
          "Deleting Database Data"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad Apps in Swift but are not sure where to start? Are you ready to jump right into the exciting world of Swift mobile development but have little or no programming experience? Then this is your course!\nThis Complete Swift Course for iOS 8 and Xcode 6 will give you everything your need to start your new career in IOS development, The course has been structured very carefully, Teaching you all you need to know from creating your first project to Submitting to the AppStore.\nSell Your App to Millions of Potential Users and earn extra revenue from Ad networks and in app purchases, Making money has never been so easy!\nNot only do you get the best online IOS development course money can buy or your money back! You also get first class responsive support by email, Twitter or on the Udemy forums, So you can rest assure you have full guidance in your new career!\nTopics Covered:\nUnderstanding Xcode, Interface Builder, Simulator and Project Types\nSwift: Full guide to creating full featured apps\nSwift: Get to know the new language\nAll Objects, Actions and Outlets possible in App Development\nSocial Integration: Facebook, Twitter, SMS, Email and more\nStoryboards and nib Files\nUniversal Support and Screen Size Support\nImages and Sounds Integration\nSaving and Loading: From text to data\nCore Data Applications\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS Apps"
      ]
    },
    {
      "title": "Responsive UI Design in Flutter Made Simple | Dashboard UI",
      "url": "https://www.udemy.com/course/responsive-ui-design-in-flutter-made-simple-dashboard-ui/",
      "bio": "Master responsive UI design in Flutter. Learn best practices to create seamless experiences across all devices.",
      "objectives": [
        "Build a responsive Flutter dashboard that adapts to desktop, tablet, and mobile screen sizes using layout widgets.",
        "Organize Flutter apps using clean architecture with reusable widgets, constants, and modular folder structures.",
        "Create interactive charts and graphs in Flutter using the fl_chart package to visualize real-time dashboard data.",
        "Implement device-specific logic to conditionally show or hide UI elements based on screen size using MediaQuery.",
        "Develop scrollable and adaptive UI layouts that prevent overflow issues and enhance UX on all device types."
      ],
      "course_content": {
        "Getting Started with the Project": [
          "Welcome & Course Overview",
          "Setting Up the Flutter Project",
          "Organising Assets for the Dashboard"
        ],
        "Laying the Foundation": [
          "Adding Essential Dependencies",
          "Planning the Dashboard Layout"
        ],
        "Building the Desktop Dashboard": [
          "Building the Main Layout",
          "Creating the Interactive Side Menu",
          "Designing the Dashboard Content Widgets",
          "Adding the Summary Panel & Schedule Tasks"
        ],
        "Making the App Responsive": [
          "Making the Dashboard Responsive",
          "Optimizing for Tablet Screens",
          "Mobile Layout Enhancements"
        ],
        "Wrapping Up - Outro": [
          "Final Thoughts & Next Steps"
        ]
      },
      "requirements": [
        "No advanced programming skills needed! If you’re comfortable with basic Flutter and Dart, you’re perfectly equipped to dive right in and start building.",
        "his is the perfect opportunity to build your skills and bring your ideas to life with confidence."
      ],
      "description": "Are you ready to take your Flutter development skills to the next level by building a real-world, responsive dashboard UI that looks amazing on desktop, tablet, and mobile? Whether you're a Flutter beginner looking to build confidence or an experienced developer aiming to enhance your UI/UX skills, this course will guide you step by step through the creation of a fully responsive and visually appealing dashboard application.\nIn this hands-on course, you will design and build a modern fitness dashboard from scratch using Flutter. You’ll start by learning how to properly set up and structure a Flutter project, organize assets, and configure app theming for scalable design. Then, you’ll dive into building each part of the dashboard using reusable, modular widgets: a side navigation menu, interactive activity cards, line and bar charts, and a summary panel that includes a pie chart and scheduled task list.\nBut the true power of this course lies in its focus on responsive design. Using Flutter best practices, you will learn how to build a layout that dynamically adapts to screen size. This includes implementing screen breakpoints, hiding and reordering UI elements, using conditional rendering, and integrating a drawer-based navigation system for smaller devices.\nWhat You’ll Learn\nScaffold and structure a Flutter project for a complex UI\nManage assets and define consistent themes using constants\nBuild a professional dashboard layout with Row, Expanded, and SafeArea\nDesign and code a dynamic side menu with state management\nUse packages like fl_chart and flutter_svg to add charts and icons\nBuild custom reusable widgets to keep your code clean and efficient\nImplement responsive layouts for desktop, tablet, and mobile screens\nHandle overflow issues and UI scaling using real device conditions\nWho Is This Course For?\nFlutter developers who want to build real-world, portfolio-worthy projects\nDesigners or UI developers looking to convert their ideas into responsive apps\nAnyone who wants to master adaptive layout techniques in Flutter\nBy the End of This Course\nYou’ll have a fully functional, interactive, and responsive dashboard app built with Flutter. You'll not only understand how to design for different devices, but also how to write scalable, maintainable code using real-world techniques.",
      "target_audience": [
        "This course is perfect for Flutter developers who want to master responsive UI design, especially those interested in building sleek and functional dashboard interfaces. Whether you’re a beginner with basic Flutter and Dart knowledge or an intermediate developer looking to enhance your design skills, this course will help you create clean, adaptable, and user-friendly dashboard UIs that work seamlessly across all devices."
      ]
    },
    {
      "title": "Android Development for Beginners (2025 edition)",
      "url": "https://www.udemy.com/course/android-development-for-beginners-2025/",
      "bio": "Build your first Android app with the modern tech stack: Kotlin, Jetpack Compose, Kotlin Coroutines, MVVM",
      "objectives": [
        "Learn the fundamentals of building Android apps, so you can dive deeper",
        "Build a simple Android app which fetches data from server and displays it",
        "Take the first steps into the world of Android app development",
        "Gain confidence so that you can start building your own Android apps"
      ],
      "course_content": {
        "Getting Started with Android Development": [
          "Introduction",
          "Install Android Studio",
          "Create a new project",
          "Meet Android Studio",
          "Connect a device or emulator",
          "Compile and Run the app",
          "App components"
        ],
        "Build your first Android app": [
          "Implement the layout",
          "Create a Theme",
          "Fetch data from server",
          "MVVM architecture",
          "Provide data to UI",
          "Observe the data"
        ]
      },
      "requirements": [
        "Familiar with Object Oriented Programming",
        "Having some coding experience"
      ],
      "description": "In this mini course, you’ll take the first steps into the world of Android app development.\n\nSince the course is created in 2025, you’ll build a real app using a modern Android tech stack that’s used in the industry today:\nKotlin – a modern, expressive, and concise programming language\nJetpack Compose – Android’s modern UI toolkit\nKotlin Coroutines – a powerful tool for handling asynchronous operations\nKtor – a lightweight HTTP client library\nMVVM architecture – an architectural pattern that helps organize your code\n\n\n\n\nWhat You’ll Build\nIn this course, you’ll build a simple, one-screen app that mimics the core behavior of an e-commerce app.\nIt fetches real product data from a server and displays it in a clean, scrollable list — just like what you see in shopping apps. While the app is simple, it introduces powerful concepts like network requests, UI rendering, and clean architecture.\n\n\nAbout your instructor\nHey! I’m Shayan.\nBorn in Iran, based in The Netherlands.\nI’ve been a software engineer since 2013, focusing mostly on Android development. Over the years, I’ve built apps of my own, contributed to apps loved by millions, and worked with all sorts of companies from tiny startups to big tech companies like eBay. Now, I’m sharing what I’ve learned with other developers to help them craft great Android apps!",
      "target_audience": [
        "Software developers who want to learn Android development and build Android apps"
      ]
    },
    {
      "title": "Deploying Android Apps to Different App Stores - Correctly!",
      "url": "https://www.udemy.com/course/deploying-android-apps-to-different-app-stores-correctly/",
      "bio": "Use 30 minutes to learn how to deploy your mobile app to Google Play the RIGHT way and explore other alternatives.",
      "objectives": [],
      "course_content": {
        "Google Play Developer Console Registration": [
          "What are the criteria you need to know?"
        ],
        "Uploading the Binary file": [
          "What you need to do before uploading your binary file?"
        ],
        "Store Listing": [
          "What are the properties needed for Store Listing?"
        ],
        "Pricing and Distribution": [
          "The Price, Distribution and Consent Properties"
        ],
        "Alternative Android Stores": [
          "Deploy your mobile app to these Android Stores",
          "Alternative Android Stores - At a Glance",
          "Alternative Store #1",
          "Alternative Store #2",
          "Alternative Store #3"
        ]
      },
      "requirements": [
        "Your should already generate your .apk file before starting this course."
      ],
      "description": "[Let's put your apps (\"eggs\") into different mobile app stores (\"baskets\")]\n\nLearning long hours is not always the right approach when you want to apply your knowledge in your life. This is why this course is produced short enough (about 30 minutes in the time of writing) for everyone. No one like to take their valuable time sitting in front of the screen.\n\nThis is a step-by-step course about how to upload your binary file to available mobile app stores out there.\n\nThese steps are considered the very last steps of Android development. Hence, it is better to do it RIGHT on your last steps.\n\n[Note: You have to MODIFY your apk file when you plan to upload your app to Samsung GALAXY Apps Store]\n\nWhat does it mean? The apk uploaded to Google Play Store CANNOT be uploaded to Samsung GALAXY Apps Store. You need to make some modifications on your apk file. You can sign up to our course to know about it. We will tell you where to put this code inside Eclipse (i.e., an Android Integrated Development Environment). Whether it is Android KitKat or Lollipop, it is just a single line of code, tough.\n\nOur videos are in HD mode. Just make sure you press the HD button when playing the video.\n\nThis course is designed to help you get the skills you need so you will have more exposure on different mobile app stores.\n\nThere are properties that you may be uncertain - whether to uncheck or check the box. No worry, we provided you a solution!\n[What the course focusing on?]\n\nThere are bunch of Android App Stores out there, but we focus on a few, notably:\nGoogle Play Store\nAmazon App Store\nOpera Mobile Store\nSamsung GALAXY Apps Store\nYou’ll come away with a solid knowledge of how to upload and make some modifications on your binary file so that your Android apps can be successfully uploaded to the stores.\nNo headache anymore. The contents will added from time to time if we discover something new. So, stay tune!",
      "target_audience": [
        "This course is aimed at beginners in Android development and would like to deploy their mobile app correctly on different app stores.",
        "If you are an expert Android developer, this course is probably not suitable for you."
      ]
    },
    {
      "title": "Reskin an iOS App",
      "url": "https://www.udemy.com/course/how-to-reskin-an-app-free-tutorial/",
      "bio": "Learn the complete process of reskinning a Personality Quiz source code for iOS using XCode, from start to finish.",
      "objectives": [],
      "course_content": {
        "Welcome!": [
          "Introduction"
        ],
        "Steps for Brand New iOS Developer Accounts": [
          "Creating Certificates",
          "Adding Test Devices and Test Accounts"
        ],
        "Setting Up a New App": [
          "Prepare the App for Testing: App ID, iTunes Connect, and 2 Provisioning Profiles",
          "Testing the App"
        ],
        "Reskin It!": [
          "Change the Theme and Content",
          "Change the Theme and Content Part 2",
          "Change the Images",
          "In-App Purchases",
          "Ads",
          "Ads Part 2"
        ],
        "Submit It!": [
          "Submitting an App to the App Store for Review"
        ]
      },
      "requirements": [
        "Mac with Xcode (free in the App Store)",
        "Mac with Xcode (free in the App Store) iOS Developer account ($99/year through Apple)",
        "iTunes Connect account (free)"
      ],
      "description": "Free course with a nearly free source code... it doesn't get any better than that!\nReskinning apps is the fastest way to learn about making money from apps.\nThis course will show you exactly what you need to do to reskin a Personality Quiz style source code in Xcode so that you can create your own iPhone quizzes very quickly and inexpensively and start making money almost immediately. This is an easy reskin of an iOS app source code!\nYou will see all the steps you need to take to launch an app, and in less than 2 hours. This includes the very beginning (learning how to test the app) to editing the app in Xcode, and all the way to submitting the app to the App Store for review. The tutorial uses a REAL and nearly FREE source code example and completes every single step necessary to reskin the app from start to finish. While this uses a specific code, the course is still very useful for reskinning any app you can imagine.\nThis is perfect for any beginner that is interested in entering the world of app development, but does not want to spend a ton of money or time creating an app from scratch and hiring developers. Instead, you can focus on monetization through in-app purchases and ad networks, which, by the way, is part of this course. You can literally reskin one source code 100 times using this tutorial to generate large profits incredibly quickly.\nThis system also works for experienced developers who want to supplement their incomes by hundreds and even thousands of dollars.\nJoin the course now!",
      "target_audience": [
        "Beginners interested in creating an iOS app",
        "Experts looking to supplement their incomes",
        "\"Do It Yourself\"-types interested in low cost and fast app development",
        "No experience necessary"
      ]
    },
    {
      "title": "iOS 18 HealthKit: Create Interactive Dashboards with SwiftUI",
      "url": "https://www.udemy.com/course/ios-18-healthkit-create-interactive-dashboards-with-swiftui/",
      "bio": "Build Stunning Health Dashboards with SwiftUI and HealthKit in iOS 18",
      "objectives": [
        "Implementing Advanced Features in iOS 18",
        "Integrating HealthKit into iOS Apps",
        "Designing Dynamic Dashboards with SwiftUI",
        "Querying and Managing Health Data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HealthKit Models": [
          "Project Setup",
          "Chart Data",
          "HealthKit Metric Part 1",
          "HealthKit Metric Part 2",
          "Health Records"
        ],
        "ViewModels": [
          "HealthKit Manager ViewModel - Part 1",
          "HealthKit Manager ViewModel - Part 2"
        ],
        "User Interface": [
          "Permissions View",
          "Metric Card View",
          "Metric Detail View Part 1",
          "Metric Detail View Part 3"
        ]
      },
      "requirements": [
        "Basic Knowledge of Swift Programming",
        "Familiarity with SwiftUI Basics",
        "iOS Development Experience",
        "Access to a macOS System with Xcode Installed"
      ],
      "description": "Are you ready to create stunning health and fitness dashboards for iOS? This course will teach you how to harness the power of SwiftUI and HealthKit in iOS 18 to build interactive, data-driven health-tracking applications.\nYou’ll start by learning the basics of HealthKit integration, including how to request permissions, access user health data securely, and work with key health metrics like steps, heart rate, and sleep patterns. From there, we’ll dive into designing dynamic dashboards using SwiftUI, leveraging advanced features like charts, animations, and interactive  layouts to create visually engaging experiences.\nThe course also explores the latest updates in iOS 18, which enhance how users interact with health data in real-time. You’ll gain practical experience by building a complete HealthKit-powered dashboard app, step by step.\nWhether you’re an iOS developer looking to expand your skill set or someone passionate about creating innovative health and wellness applications, this course is for you. By the end, you’ll have the knowledge and confidence to design and implement professional-grade health-tracking apps that users will love.\nWhat You’ll Learn:\nIntegrate HealthKit into your iOS projects and manage health data securely.\nCreate stunning, interactive dashboards with SwiftUI.\nUse HealthKit queries to fetch and display health metrics dynamically.\nExplore iOS 18 features to enhance user engagement.\nNo matter your current level, this course will empower you to take your app development skills to the next level and build solutions that make a meaningful impact in the health and wellness space.",
      "target_audience": [
        "This course is designed for iOS developers and aspiring app creators who are eager to build interactive health-tracking applications using SwiftUI and HealthKit. Whether you're a beginner in health-related app development or an experienced developer looking to explore the new capabilities of iOS 18, this course will provide valuable insights and hands-on experience."
      ]
    },
    {
      "title": "Testing in Compose Multiplatform Environment (Android & iOS)",
      "url": "https://www.udemy.com/course/testing-in-compose-multiplatform-environment-android-ios/",
      "bio": "Concise and Straight-to-the-point Cross-Platform Testing in Compose Multiplatform for Android and iOS",
      "objectives": [
        "UI Testing",
        "Android App Testing",
        "iOS App Testing",
        "Compose Multiplatform Testing",
        "How to write more testable code",
        "What is Testing and why it is important",
        "Using a common Testing API",
        "Verify UI components behaviour",
        "Testing the Navigation between screens",
        "Creating a Test Double",
        "Debugging and troubleshooting while testing",
        "Breaking the fear of Testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Compose Multiplatform?",
          "What is Testing and Why do we Need it?",
          "Project Source Code",
          "Introducing with our Testing Project",
          "Preparing a Testing Environment & Writing a First Test Case"
        ],
        "Let's do some Testing!": [
          "Implementing a Fake Data Repository",
          "Testing the Home Screen",
          "Testing the Navigation"
        ]
      },
      "requirements": [
        "Basic knowledge about Kotlin programming",
        "Basic knowledge about Jetpack Compose",
        "Basic knowledge about Kotlin/Compose Multiplatform"
      ],
      "description": "In today’s fast-paced world of app development, the ability to create and maintain applications across multiple platforms is crucial. With more businesses and developers seeking solutions that cater to both Android and iOS users, Compose Multiplatform has emerged as an incredible tool that allows us to write reusable code for both platforms while keeping the native feel intact.\nHowever, as with any mobile app development, ensuring your application runs smoothly across platforms requires robust and efficient testing strategies. And that’s exactly what this course is all about.\n\nThroughout this course, you’ll learn how to:\nSet up a Compose Multiplatform testing environment for both Android and iOS.\nWrite and run unit tests, UI tests, and integration tests in a Compose Multiplatform project.\nUtilize test automation tools for streamlining the testing process.\nDebug and troubleshoot cross-platform issues that may arise during testing.\nImplement effective test-driven development (TDD) practices across both Android and iOS projects.\nEnsure code quality and maintainability through automated testing.\n\n\nThis course highlights the advantages of testing your Compose Multiplatform app, focusing on how to write code that is more testable for both Android and iOS. You’ll gain insights into creating reliable tests that ensure your app performs as expected on both platforms.\nI’ve set up a project for you, ready to go, so you can dive straight into writing tests and verifying that your code works as intended. With Jetpack Compose, testing becomes significantly easier, helping you reduce the time spent on writing test cases while improving the quality of your app. We'll begin by covering the fundamentals of testing and discussing why it’s essential for delivering a high-quality project.\nNext, I’ll introduce you to a simple two-screen app project that we’ll test together. As we go through it, I’ll explain the logic behind various design choices, all aimed at simplifying the testing process for you. From there, we’ll set up the necessary testing dependencies to get started.\nInstead of using a real local database for testing, we’ll create a mock data source that replicates the behavior of our data source. This will give us full control over the data, allowing us to test in a controlled, isolated environment.\nOur first focus will be testing the home screen. The goal will be to create test cases for every possible scenario, including loading states, successfully displaying data, and handling errors.\nThe second test will cover navigation between the two screens, simulating user input, button presses, and other UI interactions, while also testing how the app interacts with the data layer.\nUltimately, I’ll guide you through the process of making testing less intimidating and more enjoyable, showing how rewarding it can be when done right.",
      "target_audience": [
        "Android Developers",
        "iOS Developers",
        "Mobile Developers",
        "Anyone who wants to learn how to test Compose Multiplatform app for both Android/iOS",
        "Anyone who wants to learn testing in general"
      ]
    },
    {
      "title": "SwiftUI Bootcamp: Hands-On Projects for iOS 26 Development",
      "url": "https://www.udemy.com/course/swiftui-bootcamp-hands-on-projects-for-ios-development/",
      "bio": "The Ultimate SwiftUI & iOS Development Learning Experience",
      "objectives": [
        "Master the fundamentals of SwiftUI, including views, modifiers, and layouts.",
        "Build real-world iOS projects using SwiftUI from scratch.",
        "Understand and implement navigation, data binding, and state management.",
        "Integrate SwiftUI with UIKit for hybrid applications.",
        "Develop skills to create responsive, user-friendly interfaces for iOS apps.",
        "Use animations and transitions to enhance the user experience.",
        "Gain confidence in building professional-grade iOS apps independently."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "SwiftUI Architecture"
        ],
        "Basics": [
          "Layout Containers",
          "VStacks",
          "HStack",
          "ZStack",
          "Using Layout Containers to Build a View"
        ],
        "State Management in SwiftUI": [
          "State and Binding Properties",
          "StateObject and ObservableObject",
          "ObservedObject vs StateObject"
        ],
        "Color Mixer App": [
          "Color Mixer App View",
          "Color Slider View"
        ],
        "Images": [
          "SF Symbol Images",
          "Multicolor SF Symbols",
          "Variable Color SF Symbol",
          "Bring your own image",
          "Creating Circular Image & Adjust Opacity",
          "Overlay on Images"
        ],
        "Image Gallery App": [
          "Photo Gallery App View",
          "Enlarged Photo View"
        ],
        "SwiftUI Lazy Views": [
          "LazyVStack",
          "LazyHStack",
          "LazyVGrid",
          "LazyHGrid"
        ],
        "Text View": [
          "Text View Intro",
          "Multiline Text",
          "Text View Formatting",
          "Date Formatting"
        ],
        "Lists and ForEach View": [
          "Simple List",
          "List with Image and Text",
          "List Customizations"
        ],
        "ToDo List App": [
          "ToDo list App"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts (variables, functions, and loops).",
        "Familiarity with the Swift programming language is recommended but not mandatory.",
        "Access to a Mac computer with macOS (Big Sur or later) installed.",
        "Xcode (latest version) installed and ready to use.",
        "A willingness to learn and experiment with SwiftUI and iOS development."
      ],
      "description": "Are you ready to dive into the exciting world of iOS development? SwiftUI Bootcamp: Hands-On Projects for iOS Development is the ultimate guide to mastering Apple’s modern declarative framework, SwiftUI. Designed for beginners and intermediate developers, this course combines theory with hands-on projects to help you build professional-grade iOS apps efficiently.\nIn this course, you'll start with the fundamentals of SwiftUI, learning how to create views, use modifiers, and structure layouts. As you progress, you’ll tackle essential concepts like state management, data binding, and navigation. Each module is packed with practical examples and interactive projects to solidify your understanding.\nYou’ll work on real-world applications, such as a task manager, weather app, and even a PDF scanner, gaining skills to build responsive, user-friendly interfaces. The course also explores animations, transitions, and integrating SwiftUI with UIKit for hybrid apps.\nBy the end of the course, you’ll not only understand how to use SwiftUI but also learn best practices for designing, testing, and deploying your apps. Whether you’re a beginner stepping into app development for the first time or an experienced developer transitioning from UIKit, this course offers valuable insights and techniques.\nWhat You’ll Gain:\nProficiency in SwiftUI for iOS development.\nConfidence in building and deploying apps to the App Store.\nSkills to create visually appealing and interactive user interfaces.\nPractical experience with real-world projects to showcase in your portfolio.\nIncludes new videos recorded for iOS 26\nEmbark on this journey to unlock your potential as an iOS developer and take your app-building skills to the next level. Enroll today and start creating amazing apps with SwiftUI!",
      "target_audience": [
        "Aspiring iOS developers looking to learn SwiftUI from the ground up.",
        "Beginner programmers who want to build real-world iOS apps with modern tools.",
        "Intermediate developers transitioning from UIKit to SwiftUI.",
        "Designers or product enthusiasts interested in creating iOS prototypes using SwiftUI.",
        "Developers seeking hands-on experience with SwiftUI through practical projects.",
        "Anyone eager to explore Apple’s declarative framework for building iOS applications."
      ]
    },
    {
      "title": "Building a Firework Animation in SwiftUI - Hands on guide",
      "url": "https://www.udemy.com/course/building-a-firework-animation-in-swiftui-hands-on-guide/",
      "bio": "Create Stunning Firework Animations in SwiftUI – A Step-by-Step Guide",
      "objectives": [
        "SwiftUI",
        "Animation",
        "View Composition",
        "Special Effects using Native SwiftUI components"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fireworks App": [
          "Models",
          "View Model : Part 1",
          "View Model : Part 2",
          "View Model : Part 3",
          "Custom Shape using Path",
          "Drawing Area View",
          "Flame View & Main View"
        ]
      },
      "requirements": [
        "Knowledge of Swift"
      ],
      "description": "Bring Your SwiftUI Apps to Life with Stunning Firework and Confetti Animations!\nAre you looking to enhance your SwiftUI skills with eye-catching animations? This hands-on course will teach you how to create dynamic firework and confetti effects using SwiftUI’s powerful animation framework. Whether you’re designing celebratory visuals, adding interactive feedback, or making your app more engaging, this course provides a step-by-step guide to crafting smooth and immersive animations.\nWhat You'll Learn:\nSwiftUI Animations – Master essential techniques like withAnimation, TimelineView, and Canvas to create fluid motion effects.\nCustom Shapes – Use Shape and Path to design unique firework particles and confetti elements.\nReusable Firework & Confetti Views – Build modular components that can be easily integrated into any SwiftUI project.\nGesture Interactions – Implement onTapGesture and other gestures to trigger animations dynamically.\nRealistic Motion Effects – Add physics-based behaviors such as explosion trajectories, fading particles, and randomized motion for a natural look.\nThis course is perfect for iOS developers who want to explore creative animations in SwiftUI. By the end, you’ll have the skills to build custom firework and confetti effects that bring excitement to your apps. Whether you're a beginner or an experienced developer, this course will take your SwiftUI animation expertise to the next level!",
      "target_audience": [
        "Anyone who wants to learn advanced animation techniques"
      ]
    },
    {
      "title": "Android App Development : Build a Modern Music Player",
      "url": "https://www.udemy.com/course/build-offline-music-player-app-android-studio-for-beginners/",
      "bio": "Learn to Build a Full-Featured Music Player App in Android Studio: From Basics to Advanced Techniques for Beginners.",
      "objectives": [
        "Understanding the fundamentals and advanced techniques to create a fully functional offline music player in Android Studio.",
        "Mastering the tools and environment of Android Studio, including setting up projects, debugging, and using Android SDK.",
        "Implementing features to handle audio files, including file storage, retrieval, and playback controls.",
        "Creating an intuitive and user-friendly interface for the music player, incorporating modern design principles and best practices in UI/UX."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "00 - Setting Up Android Studio Environment": [
          "00 - Setting Up Android Studio Environment"
        ],
        "01 - Project Initialization: Creating Your First Android Project": [
          "01 - Project Initialization: Creating Your First Android Project"
        ],
        "02 - Configuring Your App: Setting Up the Android Manifest File": [
          "02 - Configuring Your App: Setting Up the Android Manifest File"
        ],
        "03 - Managing Dependencies: Setting Up Gradle for Your Android Project": [
          "03 - Managing Dependencies: Setting Up Gradle for Your Android Project"
        ],
        "04 - Customizing Appearance: Setting Fonts and Themes in Your Android App": [
          "04 - Customizing Appearance: Setting Fonts and Themes in Your Android App"
        ],
        "05 - Crafting the Core: Creating the Main Activity File for Your Android App": [
          "05 - Crafting the Core: Creating the Main Activity File for Your Android App"
        ],
        "06 - Crafting Visual Identity: Creating Colors and Themes for Your Android App": [
          "06 - Crafting Visual Identity: Creating Colors and Themes for Your Android App"
        ],
        "07 - Finishing Touches: Completing the Main Activity for Your Android App": [
          "07 - Finishing Touches: Completing the Main Activity for Your Android App"
        ],
        "08 - Architecting Your App: Creating the MusicViewModel for Effective Data Man": [
          "08 - Architecting Your App: Creating the MusicViewModel for Effective Data Man"
        ]
      },
      "requirements": [
        "No programming expertise required! Everything you need to know, from UI design to advanced coding techniques, is covered in this course."
      ],
      "description": "Welcome to \"Build an Offline Music Player App: Android Studio for Beginners\". This comprehensive course is designed to take you from a novice to a confident Android app developer, capable of creating a fully functional offline music player.\nThroughout this course, you will:\n\n\nLearn Android Studio Essentials: Set up your development environment, understand project structure, and master debugging techniques.\nDevelop Core Features: Implement key functionalities such as file storage, retrieval, and audio playback. You'll learn to manage media files and build a robust music library.\nDesign an Intuitive UI: Create a user-friendly interface that enhances user experience. Learn about layouts, themes, and design best practices.\nAdvanced Audio Handling: Dive into advanced topics like background playback, audio focus management, and integrating media controls.\nOur step-by-step approach ensures that you grasp each concept thoroughly, with practical examples and hands-on projects. By the end of this course, you'll have a solid understanding of Android development and a complete offline music player app to showcase in your portfolio.\nWhether you're a complete beginner or looking to enhance your Android skills, this course provides the knowledge and confidence to build sophisticated apps. Join us and start your journey in Android development using android studio today.",
      "target_audience": [
        "Perfect for beginner Android developers eager to dive into Android Studio, this course guides you through creating offline music player from scratch."
      ]
    },
    {
      "title": "Building Video Call App with WebRTC & JetpackCompose Android",
      "url": "https://www.udemy.com/course/building-video-call-app-with-webrtc-jetpackcompose-android-kotlin/",
      "bio": "Master WebRTC setup, Jetpack Compose UI design, and Android navigation to build a robust video call app for beginners.",
      "objectives": [
        "You will gain a solid understanding of WebRTC, its architecture, and how it facilitates real-time communication within mobile applications.",
        "You will learn how to design and develop a video call app from scratch, utilizing the modern UI toolkit Jetpack Compose for a seamless user experience.",
        "You will be equipped to create intuitive app navigation and user interface workflows, ensuring optimal user interaction and engagement.",
        "You will acquire the skills to set up, configure, and optimize Android projects specifically for implementing WebRTC features, including video calls."
      ],
      "course_content": {
        "WebRTC (Web Real Time Communication)": [
          "Introduction",
          "Introduction to WebRTC",
          "Deep Dive into Signaling Servers",
          "Understanding NAT and NAT Traversal",
          "ICE: Interactive Connectivity Establishment",
          "STUN: Session Traversal Utilities for NAT",
          "TURN: Traversal Using Relays around NAT",
          "WebRTC vs. WebSockets",
          "WebRTC Basic Quiz!!"
        ],
        "Video Call App : WebRTC on Android": [
          "Video Call App: Demo and Workflow",
          "New Project Setup & Dependencies",
          "Jcenter Deprecation and Alternative WebRTC Source Repository Update",
          "App Skeleton & Navigation"
        ],
        "Permission Screen": [
          "Designing Permission Screen UI with Jetpack Compose",
          "Permission Screen: Functionality Implementation"
        ],
        "Home Screen": [
          "Understanding Room ID Usage",
          "Scaffold in Jetpack Compose: The Foundation of Your UI",
          "Designing the Home Screen: UI/UX",
          "Home Screen Functionality & Navigation"
        ],
        "Video Call Screen": [
          "Designing the Call Screen: UI/UX",
          "Configuring Signalling Server : Firebase",
          "Setup Signalling Server - Room Capacity Check",
          "Building the Peer Connection Factory",
          "Establishing a Peer Connection",
          "Handling ICE onIceCandidate Callback",
          "Sending Data to Server & Adding Listeners",
          "Managing Executors and ICE Candidates",
          "Creating and Managing SDP Offers",
          "Processing Offer and Answer Callbacks with SDP Creation",
          "Rendering Local & Remote Video Feeds",
          "Application Demo",
          "Firebase Firestore DB Analysis - How Data stored?",
          "Resource and Memory Cleanup - Avoid Memory Leaks",
          "Cource Wrap-up"
        ],
        "Resources": [
          "Download the Source Code Here!!!",
          "Download Presentation PPT"
        ]
      },
      "requirements": [
        "Familiarity with Android app development and the Kotlin programming language will help learners follow along with the course content effectively.",
        "While not a technical requirement, a keen interest in exploring WebRTC and building real-time communication applications will enhance the learning experience."
      ],
      "description": "Discover the power of real-time communication by building a video call app using WebRTC and Jetpack Compose. This comprehensive course is designed to equip you with the skills and knowledge necessary to develop and deploy a functional video call application on the Android platform. Throughout this course, you will delve into the fundamentals of WebRTC, understanding its architecture and operation, which are essential for implementing video calling features.\nYou’ll learn to design and structure the app’s layout using Jetpack Compose, Android’s modern UI toolkit, and create intuitive navigation and user interface workflows. This course provides practical, hands-on experience, guiding you through every step of the development process—from setting up your Android project to optimizing it for WebRTC functionality and ensuring high performance.\nWhether you’re a seasoned Android developer looking to enhance your skills or a tech enthusiast eager to explore the world of real-time communication technologies, this course offers a supportive learning environment for all. By the end of this course, you’ll have the confidence and expertise to create your own video call app, seamlessly integrating WebRTC and Jetpack Compose, and opening the door to more advanced Android development projects and opportunities.\n\n\nBuild a Video Call App: Learn to develop a functional video call application using WebRTC and Jetpack Compose.\nMaster WebRTC Basics: Understand WebRTC architecture and how it supports real-time communication.\nDesign with Jetpack Compose: Create modern, intuitive UIs with Jetpack Compose and manage app navigation effectively.\nEnhance User Experience: Explore app permissions, user experience design, and troubleshooting techniques.\nPractical Hands-On Learning: Gain practical skills through guided, step-by-step development and integration processes.\nThis course is perfect for Android developers and tech enthusiasts who want to build real-time communication applications and advance their development skills.",
      "target_audience": [
        "If you’re passionate about real-time communication technologies and want to explore building video call applications, this course will offer a comprehensive guide to getting started.",
        "This course will be valuable for anyone looking to enhance their mobile development skills by incorporating cutting-edge technologies like WebRTC in their projects.",
        "Whether you’re a seasoned Android developer or just starting out, this course will deepen your understanding of WebRTC and how to integrate it into Android applications using Jetpack Compose."
      ]
    },
    {
      "title": "The 14 Day Beginner Challenge - Intro to iOS/SwiftUI (2021)",
      "url": "https://www.udemy.com/course/the-14-day-beginner-challenge-intro-to-iosswiftui-2021/",
      "bio": "Designed for the complete beginner, learn how to build iPhone apps with SwiftUI",
      "objectives": [],
      "course_content": {
        "The 14 Day Challenge - An iOS and SwiftUI Free Course (2021)": [
          "Welcome",
          "01: The Apple Developer Ecosystem",
          "02: Xcode Tutorial",
          "03: How to Build User Interfaces",
          "04: SwiftUI Views and Containers",
          "05: War Card Game UI Construction",
          "06: Variables, Constants, and Data Types",
          "07: Swift Programming - Functions",
          "What's Next?"
        ]
      },
      "requirements": [
        "Nothing is required to start learning but in order to follow along, students should have access to a Mac computer."
      ],
      "description": "Hey, it's Chris here.\nI just want to congratulate you on taking the first step in your App Journey and to offer a few words of advice and encouragement.\nAt a glance, this might seem like just another course that you've taken before but it's far more than that.\nThis is training material that I've been using and refining since 2013 and thousands of students have gone through it with much success.\nFurthermore, this has been my full time effort for the last 8 years which means people are happily supporting me and paying for this training because they're getting results. I'm saying all of this because I hope you don't underestimate the transformation that you'll go through in the next 14 days.\nThese lessons are designed to bring you into the world of iOS app development even if you've never touched a line of code.\nYou'll get a glimpse into how apps are made, how Swift code can be understood and written even by non-coders and you'll also make your first app by completing this challenge.\nAfter you complete these 14 days, you have a decision to make.. do you want to continue down the learning path that can potentially result in a new career or business?\nOr maybe you found out that app development isn't for you and that's ok too.\nEither way, this is a solid and earnest way to get into iOS App Development and I'm so humbled that you're here learning with me.\nI appreciate that. Thank you.\nAlright, I can't wait to get started, let's go!\nChris",
      "target_audience": [
        "This iOS development course is meant for absolute beginners with no programming experience."
      ]
    },
    {
      "title": "Flutter YouTube Clone App: Complete Flutter Project Course",
      "url": "https://www.udemy.com/course/flutter-bootcamp-learn-basics-to-advanced-with-real-project/",
      "bio": "Learn to build a fully functional YouTube clone app using Flutter with real API integration and hands-on projects.",
      "objectives": [
        "Build a fully functional YouTube clone mobile app from scratch using Flutter",
        "Integrate the YouTube Data API (or any REST API) to fetch videos, channels, and search results",
        "Design and develop a responsive user interface compatible with both Android and iOS devices",
        "Master core Flutter widgets like ListView, GridView, Slivers, and custom components",
        "Implement video playback using the video_player package with custom controls",
        "Manage app state effectively using Provider, with insights into alternatives like Riverpod and Bloc",
        "Build a scrollable home screen with lazy loading, pull-to-refresh, and infinite scroll"
      ],
      "course_content": {
        "Flutter YouTube Clone Complete Project": [
          "Project Overview",
          "Initializing New Flutter Project Part - 1",
          "Rewriting Main File Part - 2",
          "Building Home Page UI Part - 3",
          "Building YouTube Appbar Part - 4",
          "Category Wise Filter Part - 5",
          "Filter Chip Category Widget Part - 6",
          "Bottom Navigation Bar Part - 7",
          "YouTube Data API Part - 8",
          "Helper Function Try Catch Part - 9",
          "Fetch Video YouTube API Part - 10",
          "Hitting The YouTube Data API Part - 11",
          "Printing YouTube API Response Part - 12",
          "Video Model Part - 13",
          "Using Regexp for Video Duration Part - 14",
          "Video Published Time Logic Part - 15",
          "API Data Parsing Part - 16",
          "Handling API Data Part - 17",
          "Home Page Loading Part - 18",
          "Home Page Scroll Controller Part - 19",
          "Video List Widget Part - 20",
          "Video List Item UI Part - 21",
          "Video Page State-full Widget Part - 22",
          "Navigation to Video Page Part - 23",
          "Understanding Comments From YouTube Data API Part - 24",
          "Understanding Comments Response From YouTube API Part - 25",
          "Fetch Comments From YouTube API Part - 26",
          "Comments Data on Video Page Part - 27",
          "YouTube Player Widget Control Setting Part - 28",
          "Building Video Player for YouTube Video Part - 29",
          "Viewing Video Player Part - 30",
          "Video Info Section Part - 31",
          "Viewing Video Info on Video Page Part - 32",
          "Comments Section Collapse View Part - 33",
          "Header and Tabs for Comments Expanded View Part - 34",
          "Building Comment Item Part - 35",
          "Comments Section Expanded View Implementation Part - 36",
          "Displaying Comments on Video Screen Part - 37",
          "Expanded View Comments Bug Part - 38",
          "Showing Recommended Videos Part - 39",
          "Creating Channel Model Part - 40",
          "Fetching Channel Details Part - 41",
          "Fetching Channel Videos Part - 42",
          "Channel Page Class Part - 43",
          "Channel Page Appbar Part - 44",
          "Loading Channel Data Part - 45",
          "Channel Page Cover Image Part - 46",
          "Channel Info Section Part - 47",
          "Channel Description Part - 48",
          "TabBar View Part - 49",
          "Showing Channel Videos Part - 50",
          "Navigating to Search Page Part - 51",
          "Getting Search Results Part - 52",
          "Showing Search Results Part - 53",
          "Course Wrap Up"
        ]
      },
      "requirements": [
        "No prior skills are required. You will learn from the basics with clear and proper explanations."
      ],
      "description": "Flutter YouTube Clone App: Complete Flutter Project Course\n\n\nAre you ready to master Flutter by building a real-world, fully functional YouTube clone app? This comprehensive course takes you step-by-step through creating an impressive mobile app that mimics YouTube’s core features, using Flutter’s powerful framework.\nIn this course, you will learn how to integrate the YouTube Data API to fetch videos, channels, and search results dynamically. You’ll design a sleek, responsive UI that works flawlessly on both Android and iOS devices. From implementing video playback controls to creating smooth navigation and engaging layouts, this course covers all essential Flutter concepts needed to build modern apps.\nWhether you’re a beginner with basic Flutter knowledge or an intermediate developer looking to level up, this hands-on project will help you sharpen your skills and build a strong portfolio piece.\nWhat you’ll learn:\nBuild a fully functional YouTube clone app using Flutter\nIntegrate YouTube Data API to fetch and display dynamic content\nDesign responsive layouts with ListView, GridView, and custom widgets\nImplement video playback using Flutter’s video_player package\nCreate smooth navigation and intuitive UI/UX\nHandle infinite scrolling and pull-to-refresh features\nApply dark mode support and theming for better user experience\nOptimize app performance with caching and efficient API calls\nTest your Flutter app to ensure reliability and stability\nBy the end of this course, you’ll have a deep understanding of Flutter app development through a real-world project and be ready to create your own apps or advance your career as a mobile developer. Enroll now and start building your YouTube clone app today!",
      "target_audience": [
        "Flutter developers who want to build a real-world YouTube clone app",
        "Beginners with basic Flutter/Dart knowledge looking to improve their skills through a hands-on project",
        "Mobile app developers interested in working with APIs and dynamic content",
        "Students eager to learn video playback integration and UI/UX best practices",
        "Developers who want to master responsive design for both Android and iOS using Flutter",
        "Anyone looking to create apps that fetch and display data from REST APIs",
        "Programmers wanting to learn how to structure medium to large-scale Flutter apps",
        "Tech enthusiasts curious about how video streaming apps like YouTube are built",
        "Developers preparing for jobs or freelance projects involving Flutter and Firebase/Google APIs",
        "Existing Flutter learners who want a practical project to strengthen their portfolio"
      ]
    },
    {
      "title": "Build Interactive Forms with SwiftUI & Compose Frameworks",
      "url": "https://www.udemy.com/course/build-interactive-forms-with-swiftui-and-compose-frameworks/",
      "bio": "A Comprehensive Guide to Designing, Building, and Testing Interactive Forms for iOS Developers",
      "objectives": [
        "How to build an interactive form with SwiftUI and Compose frameworks",
        "Spend time in understanding the requirement and design software before writing code",
        "How to write testable and maintainable code for iOS project",
        "Do unit tests and snapshot tests for SwiftUI Apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction about myself",
          "Why did I make this course",
          "What will you learn"
        ],
        "Preparation": [
          "Understand the requirement",
          "Technical design"
        ],
        "Build the iOS App": [
          "Create the Xcode project",
          "Create the name field",
          "Create the phone field",
          "Create the gender field",
          "Create the uniform fields",
          "Create the submit button"
        ],
        "Testing": [
          "Unit test data types",
          "Unit test validators",
          "Unit test FormData",
          "Snapshot tests"
        ],
        "Conclusion": [
          "What have you built so far",
          "What are the key takeaways from this course",
          "Where to go from here"
        ]
      },
      "requirements": [
        "Know how to build a very simple iOS App"
      ],
      "description": "To build a \"web\" form, you usually need to validate data, hide or show related fields, display errors, and update the \"submit button\" status. I always find it challenging to create an interactive form in an iOS App because we don’t have a certain architecture or design pattern to follow.\nAfter Apple released SwiftUI and Compose frameworks in 2019, things got much easier. However, it still needs a bit of design effort to make the code testable and maintainable. That’s why I was inspired to make this course, in which I will teach you how to build an interactive form with SwiftUI and Compose frameworks.\n\n\nSteps:\n\n1. Understand the requirements of the project\n2. Do the technical design with software design principles\n3. Build the App step by step from scratch with Xcode\n4. Add unit testing and snapshot testing and reach a testing coverage around 93%\n\n\nWhat you will learn within this course :\n\nHow to leverage SwiftUI to build interactive iOS Apps.\nHow to decouple logics to make the code more testable and maintainable.\nA well-designed template for building interactive forms that you can use in your project for free.\nThe best software engineering practices like designing before coding, unit testing, and snapshot testing, etc.",
      "target_audience": [
        "Junior to middle level iOS developers."
      ]
    },
    {
      "title": "ChatGPT,Dall-E Course – Use The OpenAI API to build chatbots",
      "url": "https://www.udemy.com/course/1-hour-masterclass-on-openai-chat-gpt-dall-e-flutter/",
      "bio": "Build next generation Text Chatbot & Image Chatbot using OpenAI, Chat GPT, Dall-E, Generative AI,Flutter",
      "objectives": [
        "Integration on Open AI APIs integration",
        "Generate text output using Chat GPT-3 API",
        "Generate Images using Dall-E API",
        "Generate corrected text using Edit Generation API",
        "State management using provider",
        "Create text chatbot",
        "Create image chatbot",
        "Working with posting for API testing",
        "Handling http request in flutter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Open AI setup guide": [
          "Open AI setup guide",
          "APIs testing using Postman"
        ],
        "Flutter Project setup": [
          "Adding required packages, widgets, images",
          "Important link"
        ],
        "Converting Speech to Text": [
          "Speech to text using speech_to_text package"
        ],
        "Making Open AI Chat GPT-3 API request": [
          "Using Open AI chat completion API to generate text based on the prompt",
          "Display the message generated by Chat GPT-3 API into the chat",
          "Display a loading progress indicator while waiting for a response from Chat GPT"
        ],
        "Working with Dall-e APIs": [
          "Testing Dall-e API on postman",
          "Creating Image chat bot using Dall-e APIs"
        ],
        "Working with Open AI Edit Generation API": [
          "Create method for Edit Generation API",
          "Assignment"
        ]
      },
      "requirements": [
        "Basic understanding of flutter",
        "Will to learn",
        "Laptop with at least 4 GB RAM and 10 GB Free storage"
      ],
      "description": "Welcome to this comprehensive course on building mobile applications with AI and integrating OpenAI APIs using Flutter and Provider as state management.\nIn this course, you'll learn:\nHow to build advanced chatbots that can generate text and images based on given prompts\nHow to use the Chat GPT edit APIs to correct grammar and spelling errors\nHow to integrate various OpenAI APIs, such as Chat GPT and DALL-E, into your Flutter application\nHow to use the Provider package to manage the state of your Flutter application\nFlutter is a powerful SDK that allows developers to build high-quality, native mobile applications for both iOS and Android platforms using a single codebase. OpenAI APIs, on the other hand, are a suite of powerful tools that allow developers to incorporate advanced AI and machine learning functionalities into their applications.\nThis course is designed for anyone interested in building chatbots and other AI-powered applications using Flutter and OpenAI APIs. Whether you're a seasoned developer or just starting out, this course will provide you with the knowledge and skills you need to create cutting-edge mobile applications.\nThroughout this course, you'll explore how to build a chatbot that generates text responses based on given prompts and a chatbot that generates images based on prompts using the powerful DALL-E APIs. You'll also learn how to use the Chat GPT edit APIs to correct grammar and spelling errors in the input prompt, which will ensure that the generated text responses are accurate and of high quality.\nIn addition to learning about OpenAI APIs, you'll also learn how to use the Provider package to manage the state of your Flutter application. You'll learn how to use Provider to efficiently manage and share state data between widgets, making your application run smoother and more efficiently.\nBy the end of this course, you'll have a solid understanding of how to integrate OpenAI APIs into your Flutter application, how to build advanced chatbots that can generate text and images based on prompts, and how to use Provider as state management. You'll be equipped with the skills and knowledge needed to build cutting-edge, AI-powered mobile applications.\nDon't just take our word for it - here are some reviews from our former students:\n\"I am blown away by how much I've learned from this Flutter course. The material was presented in an easy-to-understand way, and the instructor was knowledgeable and engaging. I would definitely recommend this course to anyone interested in learning Flutter.\" - Cahyono\n\"An excellent tutorial that goes straight to the point. Anmol is a true expert, and I would recommend this course to anyone looking to learn Flutter and Dart.\" - Helvecio Borges Guimarães\n\"100% recommended for anyone looking for a new course on Flutter and Dart. Engaging and well-explained. Great work!\" - Innon tech\nSo, whether you're a seasoned developer or just starting out, this course is the perfect place to start your journey into building AI-powered mobile applications using Flutter and OpenAI APIs. With concise, easy-to-follow lessons and hands-on projects, you'll be well on your way to building the next generation of mobile applications.",
      "target_audience": [
        "Flutter developer",
        "Chat GPT",
        "Open AI",
        "AI ML Enthusiast"
      ]
    },
    {
      "title": "Workshop Recording - Introduction to Vapor in Swift",
      "url": "https://www.udemy.com/course/workshop-recording-introduction-to-vapor-in-swift/",
      "bio": "Take your Swift skills to the cloud!",
      "objectives": [
        "Understand routing concepts and endpoint organization.",
        "Extract parameters from URLs and query strings.",
        "Group routes for better management.",
        "Learn Model-View-Controller design pattern.",
        "Segregate data logic (Model), presentation layer (View), and application logic (Controller).",
        "Improve maintainability and scalability.",
        "Integrate server with databases.",
        "Connect to different database systems.",
        "Implement CRUD operations for data management.",
        "Integrate SwiftUI app with Vapor server.",
        "Implement CRUD operations via HTTP client layer.",
        "Establish communication between front-end and back-end for data manipulation."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Workshop Recording": [
          "Watch the Recording",
          "Source Code"
        ],
        "Congratulations! You are finished!": [
          "Resources",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic familiarity with Swift programming language.",
        "Understanding of iOS app development concepts.",
        "Access to a computer with internet connection.",
        "Eagerness to learn backend development principles."
      ],
      "description": "Welcome to the Introduction to Server Side Swift Workshop!\nThis workshop is designed to introduce you to the fundamentals of backend development using the Vapor framework. From setting up Vapor on your machine to integrating it with databases, we'll guide you through each step with practical, hands-on projects.\n\n\nCheck out all the topics covered in this workshop:\nRouting\nExplore the foundational concepts of routing and endpoint organization. This includes understanding how to extract parameters from URLs and query strings, as well as grouping routes for improved management and clarity.\nMVC Pattern\nExplore the MVC (Model-View-Controller) design pattern to elevate the quality of your backend Vapor code. Discover how to systematically segregate your data logic (Model), presentation layer (View), and application logic (Controller) to enhance maintainability and scalability. Embrace MVC principles to streamline your codebase and foster cleaner, more efficient development practices.\nDatabase Integration\nDiscover the intricacies of integrating your server with a database, enabling efficient data management and retrieval for your applications. Gain proficiency in connecting your server to various database systems and implementing CRUD (Create, Read, Update, Delete) operations to effectively interact with your data.\nConsuming API\nLearn how to seamlessly integrate your SwiftUI application with your custom Vapor server. Explore the implementation of CRUD (Create, Read, Update, Delete) operations utilizing a generic HTTP client layer. Through this process, you'll gain practical experience in establishing communication between your front-end SwiftUI app and the back-end server, enabling efficient data manipulation and management.\n\nBy the end of this workshop, you'll have gained the essential skills to set up your own server and seamlessly integrate it into your iOS applications.",
      "target_audience": [
        "Aspiring iOS developers looking to expand their skills into backend development.",
        "Students or professionals interested in learning Server Side Swift using Vapor.",
        "Those who want to build comprehensive iOS applications with integrated backend functionality.",
        "Anyone seeking to enhance their understanding of backend architecture and database integration in Swift."
      ]
    },
    {
      "title": "RxJava | RxAndroid - III",
      "url": "https://www.udemy.com/course/rxjava-rxandroid-iii/",
      "bio": "Beginner guide to RxJava and RxAndroid With Kotlin",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How To Get Course Project File"
        ],
        "Schedulers": [
          "RxJava Schedulers",
          "RxJava and RxAndroid Schedulers"
        ],
        "RxJava Hot and Cold Observable": [
          "What is Cold Observable",
          "RxJava Cold Observable",
          "What is Hot Observable",
          "RxJava Hot Observable",
          "What is Connectable Observable"
        ],
        "RxJava Subject": [
          "RxJava Subject",
          "What is AsyncSubject",
          "AsyncSubject Implementation",
          "What is BehaviorSubject",
          "BehaviorSubject Implementation",
          "What is PublishSubject",
          "PublishSubject Implementation",
          "What is ReplaySubject",
          "ReplaySubject Implementation"
        ]
      },
      "requirements": [
        "Basic of Kotlin",
        "Basic of Android development",
        "RxJava | RxAndroid - I (Student should complete part I of this course)",
        "RxJava | RxAndroid - II (Student should complete part I of this course)"
      ],
      "description": "This is a RxJava and RxAndroid beginner course Part III. The aim of this course is to teach fundamental concepts of RxJava that takes you from a novice to intermediate RxJava developer. Every concept is explained in detailed manner with code examples.\nIf you have some basic experience in developing Android application with Kotlin then this course is for you. By the end of this course you should be able to implement  Rxjava in your Android application.",
      "target_audience": [
        "Android developer who want to learn RxJava and RxAndroid"
      ]
    },
    {
      "title": "Android & Web App Development using the Backendless Platform",
      "url": "https://www.udemy.com/course/android-web-app-development-using-the-backendless-platform/",
      "bio": "Build Multiplatform Project. Backend & Frontend with No-Code approach, and Android with Kotlin and Jetpack Compose!",
      "objectives": [
        "Build an Android App with Kotlin and Jetpack Compose",
        "Build an Android app by using a Backendless Android SDK",
        "Create Custom UI components",
        "User Authentication",
        "Sign in with Google",
        "Access Token",
        "Server Auth Code",
        "Clean Architecture",
        "Compose Navigation",
        "Dagger-Hilt Dependency Injection",
        "Color Picker UI Component",
        "Build both Front-End and Back-End with NO-CODE approach",
        "Develop a Web Application with Codeless",
        "How Android and Web App can communicate with the same Database",
        "Backendless UI Builder",
        "Backendless Codeless Editor",
        "Backendless Back-End",
        "Backendless Front-End",
        "Build your Back-End like with a Puzzle Game",
        "Develop a Web App that will be responsive on different screen sizes",
        "And much more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introducing with Backendless": [
          "Introducing with Backendless",
          "Backendless Dashboard Overview",
          "Backendless Support"
        ],
        "Let's Build an Android App!": [
          "Github Repository",
          "Application Design Preview + Resources",
          "Backendless Database Schema Overview",
          "Dependency Overview",
          "Initialize Backendless SDK for Android",
          "Navigation Setup",
          "Dagger-Hilt Setup",
          "Create MessageBar",
          "Create GoogleButton",
          "Design Login Screen",
          "Configure Sign in with Google",
          "Implement Sign in with Google",
          "Create Navigation Drawer",
          "Create PaletteHolder and HomeTopBar",
          "MainModule, Repository and BackendlessDataSource",
          "Display Color Palettes in Home Screen",
          "Implement Real-Time Database - Likes Relation",
          "Implement Real-Time Database - Approved and Deleted cases",
          "Design Details Screen",
          "DetailsScreen - Save/Remove Palette",
          "DetailsScreen - Like/Remove Like",
          "Implement Saved Screen",
          "Saved Screen - Improvements",
          "Details Screen - Show Fab",
          "Design Submitted Screen",
          "Submitted Screen - Implementation",
          "Create Color Picker",
          "Design Create Screen",
          "Create Screen - Implementation",
          "Fix Login Issue"
        ],
        "UI Builder and Codeless": [
          "UI Builder Interface",
          "UI Containers and Pages",
          "Data Models and Data Binding",
          "Theme and Extensions",
          "Introducing with Codeless",
          "Variables and Data Types",
          "Conditions",
          "Lists and Loops",
          "Objects"
        ],
        "Let's Build a Web App!": [
          "Web App Preview",
          "Create Header",
          "Header's Menu Visibility",
          "Get Approved Color Palettes",
          "Create Palette Holder",
          "Implement Palette Holder Logic",
          "Create Saved Page",
          "Handle Header Navigation",
          "Modify Home Page Logic",
          "Details Page - Parse Colors",
          "Details Page - Like/Remove a Like",
          "Details Page - Save the Palette",
          "Details Page - Copy to Clipboard",
          "Details Page - Animations",
          "Design the Create Page",
          "ColorPicker - Custom Component",
          "Create Page - Handle Icon Logic",
          "Create Page - Submit a Color Palette",
          "Design the Submitted Page",
          "Add Waiting for Approval Overlay",
          "Submitted Page - Display Empty Content",
          "Responsive Header - Create Overflow Menu",
          "Create Page - Add Media Query",
          "Details Page - Hide Like Button",
          "Final Word"
        ],
        "Course Updates": [
          "Web Update #1 - Updating the Database Schema",
          "Android Update #1 - Updating the Database Schema"
        ]
      },
      "requirements": [
        "Basic knowledge about Android Development with Kotlin and Jetpack Compose",
        "Motivation to Learn!"
      ],
      "description": "In this course I'm going to teach you how to build your own startup project, that will be available on multiple platforms like Android and Web.\nThe startup application that we are going to build, will include a user authentication, so that we can create our own user database. And the purpose of that application will be to provide different kind of a color palettes to our users or visitors.\nNow everyone will be able to check out those color palettes in our applications, but also we are going to create the logic that will allow our users to submit their own color palettes as well. And you as an admin will have a full control over the process of approving those submitted colors from those users.\nWhen it comes to an Android application, we are going to develop that application in Android Studio, by using the modern UI toolkit called Jetpack Compose and a Kotlin programming language as well.\nNow the most exciting part comes after that, when we should focus on creating the Web application as well. Now for creating a web application you are not going to need any prior knowledge about Web Development itself, because the front and the back end part will be developed with No-Code approach. Codeless approach means that you are going to play with puzzles, and create your Web App at the same time!\nAnd that's just the beginning, there are a plenty of other things that you're going to learn through this course. So what are you waiting for, let's get started!",
      "target_audience": [
        "Mobile Developers",
        "Web Developers",
        "Full Stack Developers",
        "Anyone who wants to learn how to Build Multiplatform Applications",
        "Anyone who's interested in the Backendless Platform itself",
        "Anyone who's interested in creating a real Startup",
        "Anyone who wants to learn how to build both back-end and front-end with NO-CODE approach",
        "Anyone who's interested in Codeless development approach"
      ]
    },
    {
      "title": "Android Internals and Working with the source",
      "url": "https://www.udemy.com/course/android-internals-and-working-with-the-source/",
      "bio": "Learn android from the core and customise it to your requirements",
      "objectives": [
        "Create a working Android build for a Nexus device",
        "Modify the Android source code and flash it onto their device"
      ],
      "course_content": {
        "Making an Android build": [
          "Introduction",
          "Host machine for development",
          "Build Environment setup for OS X",
          "Build Environment setup for Ubuntu",
          "Syncing the AOSP source code",
          "Making the build - Part 1",
          "Making the build - Part 2",
          "Making the build - Part 3",
          "Tools to browse the AOSP code"
        ]
      },
      "requirements": [
        "Be comfortable with working on the terminal",
        "Version control (git)"
      ],
      "description": "Being seasoned Android systems engineers, we wanted to setup a evolving course for all the would be Android Engineers.\nTo begin with the few videos that we have uploaded will serve as testing the waters for demand for this content. Based on the feedback we would be evolving the course to cover a lot more topics which would start diving deep into Android internals and design.\nThe price for the course is only for covering the costs of making the video and time we have dedicated to this project.\nIf you have any suggested topics then please send us a message in udemy or update in the comments section of the course.\nThanks\nRiaz & Naseer",
      "target_audience": [
        "Computer science students, professionals working in Android or going to start working on Android",
        "Enthusiasts interested on knowing the internals of Android"
      ]
    },
    {
      "title": "Learning App Development in iOS 8",
      "url": "https://www.udemy.com/course/learning-app-development-in-ios-8/",
      "bio": "Learn the skills required to become a iOS developer. An easy to follow course that teaches key fundamental skills",
      "objectives": [
        "Learn how to create professional iOS 8 apps",
        "Easy to follow course that teaches the key principals of iOS development"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction",
          "Web Development Versus Native",
          "Object Orientated Basics",
          "How To Access Your Working Files"
        ],
        "Getting Started": [
          "Registering With Apple As An iOS Developer",
          "The iOS SDK"
        ],
        "Hello World": [
          "Your First iOS App - Creating A Project",
          "Adding Controls",
          "Completing Hello World",
          "Using XCode",
          "Understanding Objective C - Part 1",
          "Understanding Objective C - Part 2"
        ],
        "User Interfaces - The Basics Of UIKit": [
          "Storyboard Basics",
          "Storyboard Views And Segues",
          "UILabel - Part 1",
          "UILabel - Part 2",
          "UIButton",
          "UITextField",
          "UITextView",
          "UISegmentedControl",
          "UISlider",
          "UISwitch",
          "UIProgressView",
          "UIActivityIndicator",
          "UIStepper",
          "UIImageView",
          "UIDatePicker",
          "UIPageControl",
          "UIPicker"
        ],
        "Table Views": [
          "UITableView - Part 1",
          "UITableView - Part 2",
          "UITableView - Part 3",
          "UITableView - Part 4",
          "UICollection View"
        ],
        "Navigation And Toolbars": [
          "Navigation Controller",
          "Passing Data",
          "UITabBar",
          "UIToolbar"
        ],
        "More Controls": [
          "User Alerts And Messages",
          "Intro To WebView",
          "Driving UIWebView",
          "Implementing UIWebView Navigation"
        ],
        "Location Services": [
          "Geolocation",
          "Using MKMapITem",
          "Using MapKit",
          "Getting The Current Location"
        ],
        "Social APIs": [
          "Posting Using The UIActivityViewController",
          "Posting To Twitter Using The SLComposeViewController",
          "Posting To Facebook Using The SLComposeViewController"
        ],
        "Other Features": [
          "Going Async - Part 1",
          "Going Async - Part 2",
          "Reminders And Alarms",
          "Accessing The File System"
        ]
      },
      "requirements": [
        "Mac Only"
      ],
      "description": "This Learning App Development in iOS 8 training course from Infinite Skills will teach you how to use Xcode and Objective-C to create iPhone and iPad apps. This course is designed for the absolute beginner, meaning no iOS app development experience is required.\n\nYou will start by learning the basics of Xcode and Objective-C, as well as the iOS SDK. From there, this course will teach you how to build a user interface using storyboard. This video tutorial will cover basic user interface elements such as labels and text views, and more advanced controls like collection views and tab bars. You will also cover iOS features, including location services, mapping, social networking, reminders, and alarms. Keith will also teach you about the new iOS features, including CloudKit, HomeKit, and PhotoKit. Finally, you will work with the Dev Center and learn how to submit your completed iPhone or iPad app for inclusion in the iTunes App Store.\n\nOnce you have completed this computer based training course, you will be fully capable of creating your own iOS apps for the iPhone and iPad. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Users who wish to gain a solid understanding of mobile app development on iOS 8"
      ]
    },
    {
      "title": "Mastering iOS Development - Integrating Social APIs",
      "url": "https://www.udemy.com/course/mastering-ios-development-integrating-social-apis/",
      "bio": "A Programming Workshop To Further Your iOS Development Skills.",
      "objectives": [
        "Learn How To Develop Social APIs with iOS"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction And Course Overview",
          "Options For Social Integration"
        ],
        "Using The UIActivityViewController": [
          "Posting To Twitter Or Facebook"
        ],
        "Using The SLComposeViewController": [
          "0301 Posting To Twitter",
          "0302 Posting To Facebook"
        ],
        "Using The SLRequest API": [
          "0401 Account Access",
          "0402 Posting To Twitter",
          "0403 Reading The Twitter Timeline",
          "0404 Posting To Facebook"
        ],
        "Facebook SDK": [
          "0501 Setting Up And Logging In",
          "0502 Using The Facebook Session",
          "0503 Posting To The Wall",
          "0504 Getting The User Profile",
          "0505 Retrieving Friends",
          "0506 Using The Location Of The User"
        ],
        "Conclusion": [
          "0601 Resources And About The Author"
        ]
      },
      "requirements": [
        "Apple Mac"
      ],
      "description": "This Mastering iOS Development – Integrating Social APIs training course explains how to work with the iOS social API. This course assumes you already have experience working with xCode and building iOS apps.\n\nYou will start out by learning to use the UIActivityViewController and SLComposeViewController to post to Twitter or Facebook. This video training course will teach you about the SLRequest API, and allows you to follow along with the author as he teaches you about posting to Twitter and Facebook and reading the Twitter timeline. Finally, you will learn to work with the Facebook SDK, including how to set up and log in, post to the Facebook wall, and retrieve friends.\n\nBy the completion of this video based training course, you will fully understand the iOS social API and how to social network with your mobile app. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Mobile Application Developers"
      ]
    },
    {
      "title": "Flutter - SQLite Database - CRUD - SUPER EASY!",
      "url": "https://www.udemy.com/course/flutter-sqlite-database-crud-super-easy/",
      "bio": "Create awsome apps with SQLite & Flutter!",
      "objectives": [],
      "course_content": {
        "Creating our SQLite CRUD Application": [
          "Introduction",
          "App introduction",
          "Setup Layout 1",
          "Setup Layout 2",
          "Project setup",
          "Model",
          "Create Database",
          "onCreate -> create table",
          "Check if Database already exists",
          "Create Data Method",
          "Update Data Method",
          "Update Data Fix",
          "Delete Data Method",
          "Read Data Method",
          "Create Data Method call",
          "Update Data Method call",
          "Delete Data Method call",
          "Read Data Method call",
          "Read all data Method",
          "Read all Data call",
          "FutureBuilder",
          "App testing",
          "Bye!"
        ]
      },
      "requirements": [
        "Flutter / Dart Beginner knowledge"
      ],
      "description": "We will connect our Flutter project with a SQLIte Database. Our App will have all important functionallity you need to know when working with a SQLite Database. We will cover create, read, update, delete and read all functionallity in our example app.\n- Connect Flutter project with SQLite database\n- learn to create, read, update, delete items in your database\n- Streambilder to display all your data\n\n\nHave fun, enjoy! :)",
      "target_audience": [
        "Flutter Beginner which want to take the next step and add an backend"
      ]
    },
    {
      "title": "Advanced Android: Create a Real-REST API Client Application",
      "url": "https://www.udemy.com/course/advanced-android-development/",
      "bio": "Quick Course to learn how to build a beautiful Wallpaper Android App with Retrofit, GSON, Realm, ButterKnife, Glide",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction - What are we building in this course?",
          "Download code, resources and some notes"
        ],
        "Create our basic Application": [
          "Create our Basic Application",
          "Create Main Fragments",
          "Register Unsplash Developer Account"
        ],
        "Photos Fragment - ButterKnife, Retrofit, GSON": [
          "Import ButterKnife",
          "Create Photos View",
          "Import GSON, Retrofit, Glide",
          "Config GSON, Retrofit, Glide",
          "Create models",
          "Create PhotosAdapter",
          "Get Photos From Unsplash"
        ],
        "Collections Fragment": [
          "Create Collections - View",
          "Create Collection Model",
          "Create CollectionsAdapter",
          "Get Collections from Unsplash",
          "Create Collection View",
          "Get Photos of Collection by ID"
        ],
        "Set Wallpaper - Fullscreen Photo": [
          "FullscreenPhoto - View",
          "FullscreenPhoto - Activity",
          "Get photo from Unsplash by ID",
          "Set Wallpaper function"
        ],
        "Favorite Photos - Realm": [
          "Import and Initialize Realm",
          "Create RealmController",
          "Handle Favorite Button",
          "Get all photos from Realm"
        ]
      },
      "requirements": [
        "You should understand basic Java programing language",
        "You should have some experiences with Android (this course isn't for Android fresher)"
      ],
      "description": "Every developers want to build a REAL THING, a REAL APPLICATION not just something for learning.\n\nIn this course, you will learn how to build a real and beautiful Wallpaper Application by using Unsplash API.\nAnd of course, you will learn how to use a lots popular Android libraries such as Retrofit, GSON, Realm, ButterKnife, Glide 4.\nIf you are an Android Developer but don't know exactly how to build a REST API Client App .\nAre you an Android developer who wants to upgrade your Android skill ?\nOr you want to build a beautiful stuff.\nThis is THE COURSE for you.\nWith only few hours of content, this course will CHANGE your Android skill.\nDon’t wait and enroll today. I hope to see you in my course!\nP/s: This course has ENGLISH subtitle. So don't worry !",
      "target_audience": [
        "Anyone who wants to upgrade their Android skills",
        "Anyone who wants to learn how to create an app using a RESTFul Web Service",
        "Anyone who wants to a build a modern and beautifull Android application",
        "This course is for intermediate and advanced application developers"
      ]
    },
    {
      "title": ".NET MAUI - Screen Building Techniques",
      "url": "https://www.udemy.com/course/net-maui-screen-building-techniques/",
      "bio": "Learn to create beautiful and consistent graphical interfaces for cross-platform applications using C# and XAML.",
      "objectives": [
        "Techniques for screen development in .NET MAUI technology",
        "Using development kit controls like Uranium UI",
        "Creating your own controls in .NET MAUI",
        "Building templates with ControlTemplate"
      ],
      "course_content": {
        "Introdução": [
          "Introduction",
          "Requirements",
          "Course Source Code",
          "Rate the Course"
        ],
        "UI - Libraries": [
          "01 - List of Components and Usage Examples",
          "02 - Syncfusion - Community License",
          "03 - DevExpress - Free for a Limited Time",
          "04 - Telerik and Grial UI Kit"
        ],
        "Animation": [
          "01 - What is Lottie",
          "02 - Creating your own animation in Figma",
          "03 - Using Lottie with MAUI"
        ],
        "Important Border": [
          "01 - Dribbble - Showing some prototypes and the importance of Border",
          "02 - Using the Border Component"
        ],
        "Horziontal List": [
          "01 - Explaining Horizontal List",
          "02 - Horizontal List"
        ],
        "Acrylic Effect": [
          "01 - Acrylic Effect",
          "02 - Acrylic Effect in MAUI"
        ],
        "Componentization": [
          "01 - Componentization - Part 1",
          "02 - Componentization - Part 2"
        ],
        "Creating our own tabview": [
          "01 - Creating the Project and Design - Part 1",
          "02 - Finalizing our TabView - Part 2"
        ],
        "Using ControlTemplate": [
          "01 - ControlTemplate - Part 1",
          "02 - ControlTemplate - Part 2",
          "03 - ControlTemplate - Part 3"
        ],
        "Uranium UI - Free UI Kit": [
          "01 - Configuring UraniumUI",
          "02 - Configuring Icons in UraniumUI"
        ]
      },
      "requirements": [
        ".NET MAUI",
        "C#"
      ],
      "description": "Important Notice\nThis course was originally recorded in Portuguese and has been dubbed into English. Please be aware that some elements, such as text in images, examples, or cultural expressions, may appear in the original recording language.\nThank you for your understanding and we hope you enjoy the course!\nAbout the course\nIf you want to learn how to create elegant screens for your applications using .NET MAUI, this is the perfect course for you.\nIn this comprehensive course, you will master various techniques to achieve the creation of elegant and sophisticated screens using .NET MAUI (Multiplatform App UI). .NET MAUI is a powerful cross-platform framework that enables you to develop both the user interface and the application logic in C# and XAML from a single shared codebase. This course will guide you through the process of using Visual Studio to create .NET MAUI projects, define the layout and design of the user interface with native and custom controls, access platform-specific resources, and ultimately publish your applications to app stores. By the end of the course, you will have the skills to create beautiful, high-performance applications that look consistent across multiple platforms using .NET MAUI.\nThe primary focus of this course is to teach you the techniques needed to build elegant screens using .NET MAUI. Unlike other courses, we will not be building a complete application or delving deeply into programming logic or best practices with MAUI. Instead, we will concentrate on providing solutions to specific design-related challenges. You will learn how to effectively use development kit controls like Uranium UI, create your own custom controls, and build templates with ControlTemplate. This targeted approach ensures that you gain the necessary skills to create visually appealing and functional user interfaces. Whether you are a mobile app developer or a student with knowledge of .NET MAUI, this course will equip you with the expertise to enhance your application's user experience.",
      "target_audience": [
        "Mobile app developers in .NET MAUI",
        "Students with knowledge in .NET MAUI"
      ]
    },
    {
      "title": "Android App Development with Kotlin & Java & Jetpack Compose",
      "url": "https://www.udemy.com/course/android-app-development-with-kotlin-java-jetpack-compose/",
      "bio": "Android Development | Install Android Studio, Learn App Development with Kotlin & Java & Jetpack Compose from scratch",
      "objectives": [
        "Learn Android App Development with Jetpack Compose",
        "Jetpack Compose with Android Studio",
        "App Design with Material3 Library",
        "Jetpack Compose with new Material 3",
        "Learn the latest version of Android",
        "Android Studio",
        "Develop 2 Big Android Jetpack Compose Project and make more than 20 exercises",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "You will be able to develop modern Android apps",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Firebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer."
      ],
      "course_content": {
        "Introduction to Android App Development with Kotlin & Java & Jetpack Compose": [
          "What will you learn in this course in this Jetpack Compose Course?",
          "Why Jetpack Compose?",
          "Kotlin Overview",
          "Some Information about Android Ecosystem",
          "Basic Android App Development Programming Terms",
          "Project Files",
          "FAQ About Android App Development",
          "Quiz"
        ],
        "Environment Setup": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Installing Android Studio - Part 1",
          "Installing Android Studio - Part 2",
          "Quiz"
        ],
        "More About the Android Studio": [
          "First Project in Android Studio",
          "Android Studio Interface",
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "General Information About Gradle Build System",
          "Introduction to Manifest File",
          "Introduction to resources",
          "Quiz"
        ],
        "Components in Jetpack Compose": [
          "Layouts in Android Jetpack Compose (Column - Row - Box)",
          "Arrangements and Alignments",
          "Buttons",
          "TextField",
          "Image",
          "CheckBox",
          "Radio Buttons",
          "Switch",
          "Dropdown Menu",
          "Quiz"
        ],
        "User Interactions in Jetpack Compose": [
          "Toast Message",
          "Snackbar Message",
          "Dialog Message",
          "Top App Bar in Compose",
          "Options Menu in Jetpack Compose",
          "Quiz"
        ],
        "Navigation in Jetpack Compose": [
          "Navigation in Jetpack Compose - Part 1",
          "Navigation in Jetpack Compose - Part 2",
          "Navigation in Jetpack Compose - Part 3",
          "Navigation in Jetpack Compose - Part 4",
          "Quiz"
        ],
        "Lists in Jetpack Compose": [
          "Introduction to Lists in Jetpack Compose",
          "Lazy Column - Part 1",
          "Lazy Column - Part 2",
          "Lazy Column - Part 3",
          "Lazy Column - Part 4",
          "Lazy Row",
          "Lazy Grid",
          "Quiz"
        ],
        "Project 1: TODO List with Jetpack Compose": [
          "TODO List - Part 1",
          "TODO List - Part 2",
          "TODO List - Part 3",
          "TODO List - Part 4",
          "TODO List - Part 5",
          "Quiz"
        ],
        "Publishing Your App on Google Play": [
          "App Release Version",
          "Building APK & AAB Files",
          "Creating a Google Play Developer Account",
          "Publishing the App on Google Play Store",
          "Quiz"
        ],
        "Project 2: Math Game with Jetpack Compose": [
          "Introduction to Math Game Project",
          "Design of the First Page",
          "Design of the Second Page – Part 1",
          "Design of the Second Page – Part 2",
          "Creating Game Logic – Part 1",
          "Creating Game Logic – Part 2",
          "Creating Count Down Timer",
          "Creating the Result Page",
          "Quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We preferred Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Basic knowledge of Kotlin is required.",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to \" Android App Development with Kotlin & Java & Jetpack Compose \" course.\nAndroid Development | Install Android Studio, Learn App Development with Kotlin & Java & Jetpack Compose from scratch\n\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android and jetpack compose?\nDo you want to learn android app development from Scratch with Java?\nDo you want to learn android app development from Scratch with Kotlin?\nDo you want to learn android app development from Scratch with Jetpack Compose?\nDo you want to learn android development from Scratch with Jetpack Compose?\nDo you want to be an android studio master?\nDo you want to build your first android app with Jetpack Compose, Java and Kotlin?\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nIf your answer is “yes”, you are at the right place!\n\nI really like the approach of this course about the Android app. In this course, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learning android application development with Kotlin, Java and Jetpack Compose.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\nJetpack Compose is Android’s recommended modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design with Jetpack Compose.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nMy \"Android App Development Course with Jetpack Compose\" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps.\n\n\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nJava Development Kit - JDK\nCreating a New Project in Android Studio\nCreating and running android virtual device – AVD - Emulator\nMuch more about Android Studio\nAndroid Components in Jetpack Compose\nAndroid Components in Kotlin and Java\nUser interactions in Android App Development\nNavigation and Lists in Jetpack Compose\nIntent and Lifecycles in Android Java Kotlin\nCreating UI design with XML codes and Jetpack Compose\nDeveloping Android Apps with Jetpack Compose\nDeveloping Android Apps with Kotlin\nDeveloping Android Apps with Java\nPublishing Your App on Google Play and more\n\n\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\n\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\nWhat is the use of Jetpack Compose?\nJetpack Compose is a modern toolkit for building native Android UI. Jetpack Compose simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs. In this tutorial, you'll build a simple UI component with declarative functions.\nWhy we use Jetpack in Android?\nJetpack is a suite of libraries to help developers follow best practices, reduce boilerplate code, and write code that works consistently across Android versions and devices so that developers can focus on the code they care about.\nIs Jetpack Compose an API?\nJetpack Compose is Android's recommended modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\nIs Jetpack a framework?\nAndroid Jetpack is a set of software components, libraries, tools, and guidance to help in developing robust Android applications. Launched by Google in 2018, Jetpack comprises existing android support libraries, android architecture components with an addition of the Android KTX library as a single modular entity.\n\n\n\n\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\n\n\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow latest trends.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the \" Android App Development with Kotlin & Java & Jetpack Compose \" course.\nAndroid Development | Install Android Studio, Learn App Development with Kotlin & Java & Jetpack Compose from scratch",
      "target_audience": [
        "Anyone who wants to learn to Jetpack Compose",
        "Programmers who are interested in building Android apps with Jetpack Compose",
        "Anyone who wants to create Android Applications using the Kotlin programming language and Jetpack Compose",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing Android App Development Kotlin knowledge with Jetpack Compose"
      ]
    },
    {
      "title": "Build Flutter Apps Using AI: No Code Memorization",
      "url": "https://www.udemy.com/course/build-flutter-apps-using-ai-no-code-memorization/",
      "bio": "From beginner to pro: Build real Flutter apps using AI, APIs, AdMob, Play Store, Notifications & more!",
      "objectives": [
        "Build fully functional Flutter apps using AI tools like ChatGPT",
        "Understand app development logic without memorizing code",
        "Use prompts to generate, debug, and improve Flutter code",
        "Develop smart project workflows using AI assistance"
      ],
      "course_content": {
        "Welcome & The Future of App Development": [
          "What Companies Expect from a Flutter Developer in 2025 (And How You'll Learn It",
          "My Learning Philosophy: Logic, Not Syntax",
          "Tools Setup: Flutter, Android Studio, Git, ChatGPT, Copilot",
          "Getting Started with Android Studio"
        ],
        "Mini Projects to Build Confidence": [
          "Random Quotes Generator(Project 1)",
          "Animated ToDo App",
          "Background Animations"
        ],
        "Firebase Power & Realtime Apps": [
          "Firebase Setup",
          "Firebase Firestore – Cloud Database Integration",
          "Firebase Authentication – Part 1",
          "Firebase Authentication – Part 2 (Advanced)"
        ],
        "Firebase Notifications & Monetization": [
          "Firebase Cloud Messaging – Push Notifications",
          "Firebase AdMob – Monetize Your App"
        ],
        "App Release & Deployment": [
          "App Release & PlayStore Deployment"
        ]
      },
      "requirements": [
        "No coding experience needed — just a curious mind"
      ],
      "description": "Want to build real Flutter apps without memorizing endless lines of code? In this course, you'll learn how to create production-ready apps faster and smarter by using AI tools like ChatGPT, Claude, and more — tools that are transforming how developers code today.\n\n\nWhether you're a beginner or someone who has struggled with syntax-heavy tutorials, this course will help you think like a developer, use logic-first methods, and bring your app ideas to life using modern AI-assisted workflows.\n\n\nWhat You’ll Learn:\nBuild apps using Flutter from scratch — without code memorization\nUse AI tools (ChatGPT, Claude, Copilot) to write, explain, and debug Flutter code\nImplement custom UI designs, splash screens, and multi-page navigation\nIntegrate real-time APIs like weather, AI chatbot, and image generator services\nAdd push notifications using Firebase Cloud Messaging\nMonetize your apps with Google AdMob (banners & interstitials)\nSet up automatic app updates and user-friendly version control\nDeploy your apps to the Google Play Store with best practices\nTest your app on real Android devices (no emulator needed)\nOptimize app performance for a smooth user experience\nBy the end of this course, you'll have built multiple Flutter apps, learned how to use AI as your coding assistant, and gained the confidence to launch your own apps and even start freelancing or monetizing your skills.",
      "target_audience": [
        "Beginners who want to build apps but fear coding",
        "Students who want to learn smart, fast development using AI",
        "Busy professionals or non-techies curious about Flutter",
        "Anyone looking to create real-world apps with AI guidance"
      ]
    },
    {
      "title": "SwiftUI And MVVM. Adding MVVM into a sample project.",
      "url": "https://www.udemy.com/course/swiftui-mvvm/",
      "bio": "Created by iOSBFree. Quickly inject MVVM into a SwiftUI sample project. This is a simple architecture course.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Only basic experience required"
      ],
      "description": "Learn From One Of The 1st iOS Developers In The World\nOur instructor Matt, has 13 years of experience in iOS and created the world's first iPhone, iPad and Apple Watch apps. Now, he dedicates his time to recording courses for iOSBFree (pronounced \"iOS Be Free\").\n\n\nIn This Course\n1. This course is free. I hope that it helps to continue the discussions on architecture with the new realise of SwiftUI, which is using a new type of programming paradigm (known as Reactive Programming). We discuss MVVM and architectural design principles such as layered architecture.\n2. We introduce the MVVM architectural design pattern into a sample project using a really simple approach that only takes a few minutes.\n3. We focus on what's known as having a layered architecture. A layered architecture is when you separate the responsibilities into layers that sit on top of each other. As an example, we could have an application with 3 layers. Layer 1 (the lowest layer) could be the networking layer, layer 2 would sit on top consisting of our business logic and ViewModels and finally layer 3 (the top layer) would only display UI and is known as the presentation layer. The layers communicate with each other but the information passes between layers and so Layer 1 would not communicate to Layer 3 directly without passing the communication to Layer 2.\nThe alternative to a layered architecture is known as 'spaghetti code', which you may be familiar with. Spaghetti code doesn't have much of a structure and individual classes seem to talk to each other on an individual to individual basis. Also, each file type isn't reduced to having just one Single Responsibility (my advice: don't write a class that does more than one thing!). With spaghetti code, the classes and structs tend to do a lot of things.\nTip: Avoid writing spaghetti code because it is untidy, harder to read, lacks structure and ultimately makes it more difficult (and more expensive) to maintain.\n\n\nLearning Objectives\n• Quickly add MVVM to an existing project\n• Understand the architecture of the MVVM design pattern\n• To evaluate someone else's project, code and code-structure\n\n\nSample Code\nSample Code Is Always Included and attached to each video. You can download the same project used in each episode of the course.\n\n\n\nWhat Is SwiftUI?\nSwiftUI is a newly released UI Framework introduced to iOS. It aims to solve a lot of problems with apps, such as running on all platforms, reducing bugs, improving stability and bringing more developers to iOS - because it's EASIER to write apps!\nLearning SwiftUI is an absolute MUST for any iOS developer looking to develop a career over the next 5 years.\n\n\n\nThis Course Is Free\nThis course is free. We aim to publish as many short courses as we can to help new iOS Developers apply for jobs in iOS and enter a high paying profession. We want those developers to write great apps that are robust, work correctly, and are maintainable. By supplying this information for free we hope we can reach as many people studying in the pandemic as we can.\n\n\nOur Service (iOSBFree Ltd)\nWe are a unique career-building service sharing over 13 years of successful experience shaping the iOS industry into what it is today. Our unique information, point-of-view and service can be utilised to build highly successful and profitable careers in iOS.\n\n\nA Career In iOS\niOS developers are the most sought after developers in the world! They can earn over £100,000 per year, work remotely and B in high demand for their skills! Subscribe to our YouTube channel and let us reveal all our insider secrets completely for free.\n\n\nWhat We Teach\nCareer building, CV writing, interviewing skills, industry secrets, industry stories, real-life experience, iOS fundamentals, ARC memory management, Swift, architecture and best engineering practices.\nPlease show your support by enrolling in our course!\n\n\n\nThe Instructor\nCheck out our Instructor profile (just briefly) and glance over Matt's incredible unparalleled experience. After 13 years of specialising in iOS, he created a company helping people build their own successful and profitable careers in iOS too.\nOur unique information cannot be found anywhere else on any platform. We not only teach code, syntax and architecture but we provide tried & tested strategies to BOOST your career forwards and build a better life!\n\n\n\nWant To Learn More Topics?\nPlease send us an email with the topic you would like to learn in a swift playground and we will happily record, edit and publish it for you. Absolutely for free. Simply email community@iOSBFree.com with the subject heading, \"Topic I Want To Learn\".\n\n\nFirst In The World\nNot only is our instructor one of the first iOS developers in the world, but our service is also the first of its kind in the world!\niOSBFree is a truly unique one-of-a-kind service. There is no single other service offering Matt’s level of experience in any other coding course, software engineering tutorial, or career-building service anywhere in the world.\n\n\nMore From iOSBFree\n• Download Our FREE CV Template\n• Download Our Career BOOSTER Pack\n• Enrol In FREE Online Courses (iOS & Swift)\n• Read Our Blog\n\n\nMuch love.\nThe iOSBFree team.\nBuild a profitable iOS career with iOSBFree!",
      "target_audience": [
        "Juniors who want to learn - for free :)"
      ]
    },
    {
      "title": "Mobile App Development for Beginners",
      "url": "https://www.udemy.com/course/mobile-app-development-for-beginners-h/",
      "bio": "Learn the basics of mobile app development with Android, iOS, and Flutter!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What should you use to build mobile apps?"
        ],
        "Mobile App Development Concepts": [
          "Section Introduction",
          "User Interface (UI)",
          "User Experience (UX)",
          "System Bar, Navigation Bar, and Action Bar",
          "Modals",
          "Toasts",
          "Push Notifications",
          "App Icons",
          "App Icon Badges",
          "Deep Links",
          "First Time User Experience (FTUE)",
          "Analytics Events",
          "Hamburger Menus",
          "Share Sheets",
          "Web Views",
          "Section Summary"
        ],
        "Mobile App Architecture Patterns": [
          "Section Introduction",
          "Model-View-Controller (MVC)",
          "Model-View-Presenter (MVP)",
          "Model-View-ViewModel (MVVM)",
          "Model-View-Intent (MVI)",
          "View-Interactor-Presenter-Entity-Router (VIPER)",
          "Section Summary"
        ],
        "Developing an Android app using Kotlin": [
          "Section Introduction",
          "Android Development Concepts",
          "Download & Install Android Studio for Mac",
          "Download & Install Android Studio for Windows",
          "Creating a Project",
          "Laying out the UI",
          "Coding the logic",
          "Running the app",
          "Section Summary"
        ],
        "Developing an iOS app using Swift (Mac only)": [
          "Section Introduction",
          "iOS Development Concepts",
          "Download & Install XCode for Mac",
          "Creating a Project",
          "Laying out the UI",
          "Coding the logic",
          "Running the app",
          "Section Summary"
        ],
        "Developing a cross-platform app using Flutter & Dart": [
          "Section Introduction",
          "Flutter Development Concepts",
          "Download & Install Visual Studio Code for Mac",
          "Download & Install Visual Studio Code for Windows",
          "Creating a Project",
          "Laying out the UI",
          "Coding the logic",
          "Running the app",
          "Section Summary"
        ],
        "Course Summary & Wrap-Up": [
          "Course Summary & Wrap-Up",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer running Windows, Mac, or Linux (note that a Mac is required to follow along with the iOS section)"
      ],
      "description": "In this course you will learn the basics of mobile app development and get hands-on experience creating an Android, iOS, and Flutter app.\n\n\nHave you ever wondered how mobile apps are created or had an idea for an app you wanted to create? With so many tools and programming languages available to create apps, it can be confusing and even overwhelming for a beginner to decide where to start. We'll be taking a look at the main tools and get a high level understanding of the pros and cons of each. Based on your goals for the mobile application that you want to build, you'll be able to decide what tech stack will be the best fit.\n\n\nFirst we will dive into the various concepts you'll hear in the industry, like push notifications, modals, deep links, and share sheets. If you are looking to create a mobile app, there are certain features that users will expect to see based on the landscape of modern mobile apps they are used to interacting with on a daily basis. Under-the-hood, the code for any well-built mobile app follows a software architecture pattern like MVC, MVP, or MVVM. This course will cover the major architectures utilized in mobile app development in an easy to understand way.\n\n\nWe'll build three mobile app projects hands-on in this course: an Android app using Kotlin, an iOS app using Swift, and a cross-platform Flutter app using Dart. These industry standard technologies are used by millions of professional developers daily to create the most popular apps you are used to using from the Google Play Store and Apple App Store. Software development is not just a theoretical topic, but a topic you need hands-on, practical coding experience to get good at. Each section will go over how to create a project in that tech stack, laying out the user interface elements, coding the logic, and running the app on an emulator, simulator, or physical device. By the end of this course you will be well-versed in the basics of mobile app development and have the tools and skills you need to take an idea for an app and turn it into a real product.",
      "target_audience": [
        "Anyone that has an idea for a mobile app and doesn't know how to start building it",
        "Anyone that wants to learn the basics of mobile app development",
        "Anyone that wants to work as a mobile app developer"
      ]
    },
    {
      "title": "Windows Phone - Programming for Beginners",
      "url": "https://www.udemy.com/course/windows-phone-programming-for-beginners/",
      "bio": "Learn from scratch how to create mobile apps.",
      "objectives": [
        "Find out how to create Silverlight applications",
        "Learn how to load files and communicate with a database",
        "Find out what the application lifecycle is",
        "Learn how to create pointers",
        "Learn how to use a navigation model",
        "Find out how to use Launchers and Choosers",
        "Find out how to import style sheets",
        "Find out what are the ways to connect applications with networks",
        "Discover C# in more detail"
      ],
      "course_content": {},
      "requirements": [
        "Visual Studio"
      ],
      "description": "LAST UPDATED: 11/2020\nGain prestige Microsoft Certified Proffesional Developer (MCPD) title.\nThis course will help to prepare for following exams:  (70-506), (70-516), (70-599)\n\n\nProgramming Windows Phone step by step\nWe have prepared 22 professional lectures, during which you will learn from sctrach, how to create mobile apps for one of the quickest growing system in the world! This course is full of theory and Case Studies, preview code created during exercise.\nAre you a beginner in programming or you can already program on iOS or Android platform, but you want to be multiplatform developer and expand your skills? This course is for you!\n\n\nComprehensive knowledge and solid base for everyone\nThe course is prepared in an attractive, multimedia package, trainer demonstrates step by step how to properly code and together you will create your first application. Completion of the course provides a solid base and a comprehensive understanding of the key issues of programming for Windows Phone. Additionaly lecturer is an experienced programmer and Nokia Developer Certified Trainer!\n\n\nWhat you will learn?\nOur trainer will present you from scratch the architecture of Windows Phone platform, will show you how to install the Visual Studio, how to get around it. Then you will find out what are the basic structure of the application, you will learn how to create your first project, and run it on the simulator or on your own device. Don't worry, If you don't know C# - in this course you will find basics of this programming language (4 lectures).   More about the course content in the section: What am I going to get from this course?\n\n\nIt's one and only course for beginning Windows Phone programmers that you'll find on Udemy. Full of basic theory and practice. Create your first application with Educativo - Nokia Developer Certified Trainer!! Try it now!",
      "target_audience": [
        "beginning Windows Phone developers",
        "for anyone who wants to get started in programming for Windows Phone platform"
      ]
    },
    {
      "title": "Recursion Fundamentals in Swift",
      "url": "https://www.udemy.com/course/recursion-fundamentals-in-swift/",
      "bio": "A Practical Guide for Beginners Without a Computer Science Degree",
      "objectives": [
        "Understand the concept of recursion and how it differs from iteration.",
        "Identify the base case and recursive case in a recursive Swift function.",
        "Build recursive solutions to common Swift problems involving strings and numbers.",
        "Trace the call stack of recursive functions step-by-step.",
        "Use recursion to navigate and process nested arrays and data structures.",
        "Write Swift functions that manipulate data without using loops.",
        "Apply recursion to solve file system traversal and tree-based logic.",
        "Debug common recursion errors like infinite calls and stack overflows.",
        "Solve interview-style coding challenges using recursion in Swift.",
        "Develop confidence in reading and writing recursive Swift code, even without a CS degree."
      ],
      "course_content": {
        "What is recursion?": [
          "introduction",
          "Introduction to factorials.",
          "What is a factorial?",
          "Understanding Factorials in Programming and Mathematics",
          "Practical Applications of Recursion in Swift, and iOS Mobile Development",
          "What is the Fibonacci Sequence?",
          "Using Recursion to Detect Fibonacci Membership in Swift",
          "Solution: Using Recursion to Detect Fibonacci Membership in Swift"
        ],
        "Recursion for Tree Structures": [
          "Using Recursion to Process an HTML String in Swift",
          "Using Recursion to Process XML Documents in Swift"
        ],
        "Recursive Function Coding Challenges": [
          "What Are Natural Numbers?",
          "Sum of Natural Numbers",
          "Solution to Sum of Natural Numbers",
          "Counting Digits in an Integer",
          "Count Occurrences of a Digit in an Integer",
          "Coding the Solution: Count Occurrences of a Digit in an Integer",
          "Reverse a String with Recursion in Swift: Step-by-Step Explanation",
          "Challenge: Sum of All Elements in an Array Using Recursion",
          "Coding the Solution: Sum of All Elements in an Array Using Recursion",
          "Challenge: Check If a String Is a Palindrome (Using Recursion)",
          "Coding the Solution: Check if a String Is a Palindrome (Using Recursion)",
          "Challenge: Count Nested Arrays Recursively",
          "Coding the Solution: Count Nested Arrays Recursively",
          "Challenge: Determine If an Array Contains a Target Value (Recursively)",
          "Coding the Solution: Determine If an Array Contains a Target Value (Recursively)",
          "Challenge: Find the Maximum Value in a Nested Array",
          "Coding the Solution: Find the Maximum Value in a Nested Array",
          "Challenge: Remove All Instances of a Character from a String (Recursively)",
          "Coding the Solution: Remove All Instances of a Character from a String",
          "Challenge: Check if an Array Is Sorted (Recursively)",
          "Coding the Solution: Check if an Array Is Sorted (Recursively)",
          "Challenge: Count Occurrences of a Substring in a String (Recursively)",
          "Coding the Solution: Count Occurrences of a Substring in a String (Recursively)",
          "Challenge: Repeat a String N Times Recursively",
          "Coding the Solution: Repeat a String N Times Recursively",
          "Challenge: Capitalize Every Letter in a String Recursively",
          "Coding the Solution: Capitalize Every Letter in a String Recursively"
        ]
      },
      "requirements": [
        "Basic understanding of Swift syntax (e.g., functions, variables, conditionals).",
        "Familiarity with writing simple Swift functions.",
        "Experience using Xcode or Swift Playgrounds to run Swift code.",
        "Comfort with reading and editing code in a code editor.",
        "Ability to follow logic step-by-step (no advanced math required).",
        "An interest in solving problems and learning how things work under the hood.",
        "Motivation to improve coding interview skills.",
        "Willingness to experiment, test, and debug your own code.",
        "Some exposure to arrays, strings, and integers in Swift.",
        "No computer science degree required — this course is designed for self-taught and bootcamp learners."
      ],
      "description": "Are you self-taught or bootcamp-trained — and feel like recursion is still a mystery?\nThis course was built for you.\nIf you've tried to learn recursion from YouTube or textbooks but walked away confused, you're not alone. Most resources either rush through the topic or assume you already have a computer science degree. This course doesn't do that.\nInstead, Recursion Fundamentals in Swift takes a slow, clear, and example-driven approach to help you understand exactly what recursion is, how it works under the hood, and how to confidently apply it in real-world Swift development.\nWho This Course Is For:\nAspiring iOS developers who learned Swift through bootcamps or self-study\nJunior developers preparing for technical interviews\nMobile devs who want to strengthen their problem-solving skills\nAnyone who's struggled to \"get\" recursion in a practical way\nWhat You’ll Learn:\nWhat recursion actually is — and why it's not as scary as it sounds\nHow to trace recursive calls step-by-step and understand the call stack\nHow to write recursive functions using clean base and recursive cases\nCommon recursion patterns: string building, array processing, tree-like structures\nHow to avoid common mistakes like infinite recursion or stack overflows\nPractical use cases in Swift: working with strings, arrays, file systems, and more\nHow to spot when recursion is a better fit than iteration\nHow to use recursion to answer coding interview questions with confidence\nChallenges You'll Solve:\nCount digits in an integer\nReverse strings recursively\nSearch arrays for values recursively\nRemove characters from strings\nTraverse nested arrays\nAnd more — with step-by-step explanations\nWhy This Course is Different:\nYou're not just copying code — you're building understanding. By the end of this course, recursion will stop being a buzzword and start being a tool you can actually use. You'll feel confident explaining your code and tackling recursive problems in interviews — without memorizing solutions.\nWhether you're aiming to become an iOS developer or just want to fill a crucial gap in your Swift knowledge, this course gives you the solid foundation you need — without requiring a computer science degree.",
      "target_audience": [
        "Self-taught Swift developers who want to strengthen their problem-solving skills.",
        "iOS development bootcamp graduates looking to fill gaps in foundational knowledge.",
        "Aspiring iOS engineers preparing for technical coding interviews.",
        "Junior developers who struggle to understand recursion in practice.",
        "Students new to programming who want to grasp core computer science concepts.",
        "Developers transitioning to Swift from another language (like JavaScript or Python).",
        "Swift learners who feel lost when recursion comes up in tutorials or books.",
        "Coders looking to practice Swift through hands-on, real-world coding challenges.",
        "Interview candidates seeking confidence with common recursion-based questions.",
        "Anyone who’s tired of skipping recursion problems and wants to finally understand them."
      ]
    },
    {
      "title": "Swift & iOS:Everything to know when starting a full-time job",
      "url": "https://www.udemy.com/course/swift-ioseverything-to-know-when-starting-a-full-time-job/",
      "bio": "as an iOS Developer, you'll learn all these necessary things that will deliver your skills to the next",
      "objectives": [
        "Learn how to build apps with Firebase",
        "upload builds to the TestFlight",
        "use Git and GitHub and keep update push the project",
        "Build app using MVC pattern",
        "Learn Xcode interface like AutoLayout",
        "Add Authentication to sign in with Google and with Apple from the Firebase to the app",
        "parsing data from JSON to Custom table view cell",
        "create shared network file for all project in best modern way",
        "create codable Models"
      ],
      "course_content": {
        "Introduction and Creating Xcode Project": [
          "Introduction",
          "Creating the project",
          "Storyboard AutoLayout with @IBOutlet",
          "Custom TableView Cell",
          "Employee Details part 1",
          "Employee Details part 2"
        ],
        "Git and Github": [
          "Github",
          "Git Terminal (The Command Line)"
        ],
        "Cocoapods and Pods libraries": [
          "Install Cocoapods and Pods",
          "solve git large files (.gitignore)"
        ],
        "Network request | Web API called | parse JSON": [
          "Create Shared Network file with Alamofire (get | post)",
          "static API Services and install postman",
          "Handle JSON response with Model",
          "Parsing response data to the employee details view controller",
          "EmployeeDetails | WebView | Google Map direction"
        ],
        "TestFlight and Upload builds to iPhone users": [
          "Create app icon",
          "TestFlight",
          "Approve TestFlight Build"
        ],
        "Firebase and signing in with Google and Apple": [
          "setup firebase with sign in method",
          "Login storyboard and VC",
          "Sign in with Google",
          "Archive Second build to TestFlight",
          "Sign in with Apple",
          "Change Appearance to Light",
          "Splash Screen",
          "ProgressHUD",
          "Push notifications from Firebase"
        ]
      },
      "requirements": [
        "Must have a computer running macOS High Sierra or Mojave",
        "Should have Xcode",
        "have apple developer account developer the paid one (for some sections)"
      ],
      "description": "Hello and welcome to the Swift & iOS: Everything to know when starting a full-time job\nmy names Ahmad Mustafa, and I'll your instructor in this course, a bit about myself I'm an iOS Developer with years of experience developing many apps for iPhone and iPad, one of my successful apps is 'Rodha' which is one of the best food delivery app in the Saudia Arabia\n\n\nAbout this course:\nif you start work full-time iOS developer definitely there's several skills, that every iOS Developer have to know in his daily work,\n\n\nso in this course, you'll learn all these necessary things in the best modern ways that will deliver your skills to the next level\n\n\nthe course cover six sections and the process will be\n\n\n- in section one, you'll learn to create a project using Model View Controller which stands for (MVC) design pattern, you'll learn Xcode & interface builder, create tableView with custom table view cell\n\n\n- in section two you'll learn about Git and the Github\n\n\n- in section three you'll learn how to install libraries or (Pods) from cocoapods and how to solve push git large files the (gitignore)\n\n\n- in section four you'll learn How to work with web API, How to handle JSON so, the app will take information from the internet again in the best modern way\n\n\n- in section five you'll learn about the Testflight and how to upload your build to any iPhone user and how to create an app icon\n\n\n- in section six you'll learn how to connect the app to the firebase, create login with Google and with Apple in addition save the login, and the bones how to push notification from the firebase\n\n\nby the end of this course, you'll never feel lost and your knowledge in iOS and swift framework, will increase and reach the next levels rapidly, so join us and let's start coding",
      "target_audience": [
        "all iOS Developer / Engineer who wanna expand their knowledge in iOS and Xcode",
        "developer who want to know better MVC pattern in a modern way",
        "developer who wants to know API build Codable models shared Network (get and post)",
        "Anyone who wants to get a job as an iOS developer",
        "developer who want to work with Git and Git",
        "developer who want to upload builds to TestFlight"
      ]
    },
    {
      "title": "Flutter - RestApi & MySQLi te: Todo App",
      "url": "https://www.udemy.com/course/flutter-restapi-mysqli-te-todo-app/",
      "bio": "A Complete Flutter Developer's Guide to the Flutter SDK & Flutter Framework for building native iOS and Android apps",
      "objectives": [
        "Setup Dart&Flutter environment",
        "Become a fully-fledged Flutter developer",
        "Understand all the fundamental concepts of Flutter development",
        "Build iOS and Android apps with just one codebase"
      ],
      "course_content": {
        "Introduction": [
          "Flutter Introduction",
          "How to Connect Real Device with Android Studio",
          "Basic Intro About Flutter",
          "Flutter Folder Structure",
          "create flutter project from scratch",
          "Flutter Architecture"
        ],
        "Widget": [
          "Material App Widget",
          "Scaffold Widget",
          "AppBar",
          "Bottom Navigation Bar",
          "Navigation Drawer",
          "Text Widget",
          "Rich Text",
          "Floating Action Button",
          "Container Widget",
          "Row Widget",
          "Column Widget",
          "Gesture Detector"
        ],
        "Picker": [
          "DatePicker",
          "TimePicker"
        ],
        "Input Section": [
          "Form Part -1",
          "TextFieldWidget"
        ],
        "Dialog and Sheet": [
          "Alert Dialog",
          "Bottom Sheet"
        ],
        "Scrolling Widget": [
          "Single Child Scrollview",
          "Pageview Widget"
        ],
        "List and GridView": [
          "Basic intro about listview and listview()",
          "Listview Builder Constructor",
          "Listview Separated Example",
          "Grid view Widget"
        ],
        "Navigation and Routing": [
          "Introduction to Navigation and Routing",
          "Basic Routing With Naivigator Class",
          "Name Route",
          "Data PassingIn One Screen To Another Screen"
        ],
        "Tabbar Widget": [
          "Tab Bar Widget"
        ],
        "Todo Application with SQLite DB": [
          "Sqlite Basic and Setup",
          "Sqlite create operation",
          "Sqlite Read Operation",
          "Sqlite Update Operation",
          "Sqlite delete operation"
        ]
      },
      "requirements": [
        "This course is suitable for programming beginners and for people who come from another language and want to get started with app development with Flutter.",
        "Basic programming language will help but is not a must-have",
        "You can use either Windows, macOS or Linux for Android app development",
        "NO Exprice about Flutter or Dart - this course starts at zero!"
      ],
      "description": "This comprehensive course will teach students how to build high-quality, responsive mobile applications using Flutter - Google's UI toolkit for building natively compiled applications for mobile, web, and desktop from a single codebase.\nThroughout the course, students will learn the fundamentals of Flutter development, including how to set up their development environment, build user interfaces, handle user input, manage state, and work with APIs. They will also learn how to incorporate third-party packages and plugins to enhance the functionality of their applications.\nThe course is designed to be hands-on and project-based, with students building a range of applications throughout the course to put their newfound skills into practice. By the end of the course, students will have built several fully functional mobile applications, including a weather app, a social media app, and a music player app.\nThis course is suitable for beginners with little to no experience in Flutter development, as well as experienced developers who want to enhance their skills and build high-quality mobile applications more efficiently.\nCourse Outline:\nIntroduction to Flutter Development\nIntroduction to Flutter\nSetting up the development environment\nCreating a new Flutter project\nUnderstanding the Flutter architecture\nBuilding User Interfaces\nIntroduction to widgets\nCreating a layout using widgets\nHandling user input with widgets\nBuilding responsive layouts\nManaging State\nUnderstanding state in Flutter\nUsing setState() to manage state\nImplementing streams to manage state\nWorking with APIs\nIntroduction to APIs\nMaking API calls in Flutter\nParsing JSON data\nError handling\nIncorporating Third-Party Packages and Plugins\nIntroduction to third-party packages and plugins\nAdding packages to a Flutter project\nUsing plugins to enhance functionality\nBuilding Mobile Applications\nBuilding a weather app\nBuilding a social media app\nBuilding a music player app\nConclusion\nReview of course content\nNext steps for further learning and development.\nCourse Requirements:\nA basic understanding of programming concepts (e.g., variables, functions, control structures)\nFamiliarity with a programming language (e.g., JavaScript, Python, Java)\nA computer running Windows, macOS, or Linux\nAn internet connection.",
      "target_audience": [
        "Beginner and experienced developers who are interested in developed into mobile app using single language for both platforms."
      ]
    },
    {
      "title": "Apple's iPhone, Desktop and watch development with Swift 2",
      "url": "https://www.udemy.com/course/complete-ios-development-course/",
      "bio": "Join the train for Apple's App store. Learn by building Apps with professional tips for Apple's development Program",
      "objectives": [
        "Publish App in Apple's App Store",
        "Learn to code in Swift 2.x",
        "Learn to design Apps for Mobile, desktop and Apple Watch",
        "Code for the first time in swift",
        "Take few designed templates for free",
        "Explore exercise files, already included with course"
      ],
      "course_content": {
        "Introduction to course": [
          "Introduction to entire course structure and watching strategy"
        ],
        "Before you get into Apple Development": [
          "Hardware and Software Point",
          "Getting Xcode from Appstore",
          "Apple vs other platforms",
          "Be an Apple Developer"
        ],
        "Time to launch our first App": [
          "Getting Exercise Files",
          "Say thanks to Jobs in your first App",
          "Questions in mind",
          "Fundamentals for iOS development",
          "Fahrenheit to celsius converter App"
        ],
        "Swift in comprehensive detail": [
          "Playgrounds basics",
          "swift REPL and creating new playground files",
          "Variables and type inferred Values",
          "Constants and string interpolation",
          "Different operators in swift",
          "Conditionals in swift",
          "Switch and case basics",
          "Loops in swift",
          "Arrays in swift",
          "Dictionary",
          "Tuples and optionals",
          "Functions in swift",
          "currying the functions in swift",
          "Enums in swift",
          "Closures in swift",
          "classes and initialisers in swift",
          "inheritance and overrides",
          "Structures",
          "Properties",
          "observers and access modifiers",
          "Subscript",
          "Error Handling",
          "Protocols",
          "Extensions"
        ],
        "Basics to APP design": [
          "Xcode Tour",
          "Runner's Watch App interface Design",
          "Runner's Watch App code guide",
          "What is a delegate file",
          "Dismiss keyboard using FirstResponder",
          "Solving Connection problems",
          "Getting started with table view",
          "why square story board and views basics",
          "Auto Layout with constraints",
          "Swipe to delete in table view",
          "Swipe to share in table view",
          "Permanent Storage and App Icons"
        ],
        "App Background Information": [
          "Application Life Cycle",
          "Application life Cycle in code",
          "3-D view of App",
          "WHOIS App idea and interface Design",
          "WHOIS App - InfoPlist for http connection",
          "Fetch Data from web in WHOIS App",
          "Filter data from web - Complete WHOIS App",
          "Tabbed Application - Multiple Segues",
          "Bike Collection App - InterFace",
          "Bike Collection App - Code"
        ],
        "Sticky Notes APP - Quick small App to get going": [
          "Simple notes App Basics",
          "Sticky Notes - App icon and UIDesign",
          "Sticky Notes - Solving Errors",
          "Detail view controller design and code",
          "Master view controller design and code",
          "Assignment"
        ],
        "Exploring features in Iphone": [
          "Bring Spy Back - User Interface",
          "Bring Spy Back - Code",
          "Change button Label",
          "Play Audio in App",
          "Google-Apple wiki Audio - UI Design",
          "Google-Apple wiki Audio - Code",
          "solving errors in last app",
          "Taj Mahal On a Map App",
          "Adding red pin on the Taj Garden",
          "Adding custom red pin on the Taj Garden",
          "including camera and photo library",
          "Core Data feature to add up"
        ],
        "Parse and Firebase details and examples": [
          "Intro to Parse and firebase",
          "Sending and getting objects in parse",
          "parse signup and error resolving",
          "log In and Email verification",
          "Complete the Harley App challenge",
          "Facebook login and reading documentation"
        ],
        "Further updates and conclusion": [
          "Further updates and conclusion"
        ]
      },
      "requirements": [
        "should have Apple hadware like iMac MAC mini/pro/air etc",
        "Xcode (free and installation detail is in the course)",
        "No coding experience is required."
      ],
      "description": "Looking for a course on Apple development for IPhone?\nYour search ends here. Learn Apple’s IPhone development as well as iPad, Desktop and watch development in one course. The course is evolving and more videos are added at rapid rate. The course not only design Apps but will also talk about the background basics and covers the latest Swift in very detailed manner. By learning iPhone development, you are already very much into the battle, take a few more steps and dive into the desktop and Apple watch development too.\nAm I ready to take the course?\nIf you have Any Apple computer or laptop, then you are ready to take this course. IPhone is not required for this course. All the time, you will be using simulated version of iPhone, ipad and watch to run your apps. This simulator is already built in Xcode, which is a piece of software taken care of in the course.\nAbout the content.\nThis course will be updated frequently as the course is on full-scale production. Already the course is massive and we are not yet finished with iPhone. Giving student the access to what is going right now makes them updated in the market.\nWhat’s the end Goal of the course?\nThe course is designed for the beginners as well as for those who bits about development but wants to explore behind the scene basics. On regular intervals, we will be designing fully functional Apps and the material as Exercise files are also provided. Feel free to use all the material in your project also. At the end of the course, you will have many apps on different apps in your pocket for multiple platform as well as you will learn to read documentation and solve problems by looking online help.\nSwift is fairly new in the world, language will for sure mature more. No one is expert at this time and thus, This is the perfect time to get into IPhone development. Otherwise there will be versions after version and you will always be thinking to start it in next vacations.\nTake some time out of your busy life and let’s get rolling!",
      "target_audience": [
        "If you are interested in any kind of development for Apple device, this course perfect for you.",
        "If you have any Apple device like iMac, Mac Mini/pro/air, just jump into the course",
        "interested to see you app to hit the App market or want to get refresher for swift development, jump in",
        "Expecting WINDOWS or ANDROID development, this course is NOT FOR YOU",
        "Age is no bar to join in the course."
      ]
    },
    {
      "title": "Android App Development for Beginners",
      "url": "https://www.udemy.com/course/android-development-quick-start-for-beginners/",
      "bio": "Learn to build Android apps from scratch using Java and Android Studio. Master UI design, logic, and real-device testing",
      "objectives": [
        "Setup local android development environment",
        "Create new android project",
        "Add widgets",
        "Apply constraints to layout",
        "Run your app on multiple virtual devices",
        "Run your app on a physical device",
        "Create an icon for your app",
        "Create a currency pair conversion tool",
        "Explore XML Code",
        "Link widgets to java code"
      ],
      "course_content": {
        "Introduction to Android Development": [
          "Understanding Android - History and Features",
          "Android Architecture",
          "HTML Document Structure",
          "Android Ecosystem - Devices, Market, Users",
          "How to Set Up the Android Development Environment",
          "Setup of Android Development Environment",
          "Introduction to Android Studio"
        ],
        "Java Programming for Android": [
          "Introduction to Java Programming Language",
          "Object Oriented Programming Concepts",
          "Data Structures in Java",
          "Control Flow in Java",
          "Exception Handling"
        ],
        "Setting Up Android Development Environment": [
          "Introduction",
          "What is Java",
          "What is an Android App",
          "What is Android Studio",
          "Installation requirements for android studio",
          "Installing Android Studio 4.1.3 on Windows",
          "Installing Android 2.3.3 on Windows",
          "Installing Android on Macs",
          "Create a test android app part 1",
          "Create a test android app part 2",
          "Create a test android app part 3",
          "Modifying the test app",
          "Running your app in multiple devices"
        ],
        "Android Studio Interface": [
          "Project structure",
          "Accessing your projects",
          "Component tree",
          "The Palette",
          "Gradle Build System",
          "Constraint Layout",
          "User interface"
        ],
        "Creating your own currency pair conversion app": [
          "What we will create",
          "Creating a new project",
          "Designing your app",
          "Adding image to your app",
          "Adding a texfield",
          "Adding a button",
          "Creating the app logic",
          "Adding an icon for your app",
          "Accessing your app on a real device"
        ],
        "Basic XML Introduction": [
          "What is XML",
          "XML Syntax",
          "XML Attributes",
          "XML Document structure",
          "XML Tags",
          "XML Elements"
        ],
        "Basic Java introduction": [
          "What is Java",
          "Setting up java development environment",
          "Coding your first java program",
          "What is a java package",
          "Data Types",
          "Basic operators",
          "Variables",
          "Arrays",
          "Using Comments",
          "Running Java Outside IDE",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Basic XML knowledge"
      ],
      "description": "Are you ready to step into the world of mobile app development? This beginner-friendly course is designed to teach you how to build Android apps from scratch using Java and Android Studio, the official development environment for Android applications. Whether you are an aspiring developer, a student, or someone curious about mobile development, this course will provide you with a solid foundation in Android app development.\nWhy Learn Android Development?\nAndroid powers over 70% of mobile devices worldwide, making it one of the most in-demand skills in tech. With millions of users, businesses and startups are constantly looking for developers who can create powerful and engaging mobile apps. By learning Android development, you can:\nCreate your own mobile applications and publish them on the Google Play Store.\nStart a career in mobile development as a freelancer or full-time developer.\nAutomate tasks, build productivity apps, or create games for mobile users.\nDevelop skills that are applicable across industries, from finance to healthcare and e-commerce.\nWhat Makes This Course Unique?\nThis is a hands-on, project-based course that takes you from zero to building real Android apps. Instead of just learning theory, you will apply what you learn immediately by building your own currency conversion app and running it on an actual Android device.\nWhat You Will Learn\nUnderstanding Android & Development Tools\nHistory, features, and architecture of Android\nOverview of the Android ecosystem, devices, and user base\nSetting up the Android development environment step by step\nInstalling and configuring Android Studio\nJava Programming for Android Development\nIntroduction to Java programming for Android\nUnderstanding object-oriented programming (OOP) concepts\nUsing data structures, control flow, and exception handling in Java\nBuilding & Running Your First Android App\nCreating your first test application\nModifying the test app and running it on multiple devices\nIntroduction to Gradle Build System\nAndroid Studio & User Interface (UI) Design\nUnderstanding project structure and component tree\nUsing the Palette and Constraint Layout for UI design\nBuilding intuitive user interfaces for Android apps\nCreating Your First Functional App\nDesigning and developing a currency conversion app from scratch\nAdding buttons, text fields, and images\nWriting app logic using Java\nRunning the app on a real Android device\nXML Basics for Android UI Design\nUnderstanding XML structure, attributes, and syntax\nDesigning UI elements using XML-based layouts\nJava Basics for Android Development\nSetting up a Java development environment\nWriting your first Java program\nUnderstanding variables, data types, arrays, and loops\nRunning Java programs inside and outside the IDE\nWho Should Take This Course?\nThis course is perfect for:\nComplete Beginners in Programming – No prior coding experience required\nAspiring Android Developers – Learn mobile app development step by step\nStudents & Hobbyists – Build your first real-world Android app\nAnyone Interested in Mobile Development – Start a new career or explore a new skill\nWhy Take This Course?\nHands-on Learning – Build real-world Android applications\nStep-by-Step Guidance – No prior coding knowledge needed\nPractical Projects – Apply what you learn immediately\nCareer-Ready Skills – Develop skills for freelancing or full-time Android development\nBy the end of this course, you will have the skills and confidence to build and run Android applications, setting the foundation for a successful journey into mobile app development.",
      "target_audience": [
        "Absolute beginners to Android development",
        "Beginner App Developers"
      ]
    },
    {
      "title": "Vibing with Base44 to Jetpack Compose: Android Development",
      "url": "https://www.udemy.com/course/vibing-with-base44-to-android/",
      "bio": "Turn Ideas into Android Apps: Build, Code, and Publish with Base44, Kotlin, and Jetpack Compose",
      "objectives": [
        "Quickly prototype ideas using Base44 and AI-assisted coding.",
        "Transition from Base44 to Jetpack Compose, understanding how to convert prototypes into real apps.",
        "Write clean, idiomatic Kotlin and Jetpack Compose code that follows best practices.",
        "Identify common pitfalls and gotchas in Android development and learn how to avoid them.",
        "Build fully functional Android apps from concept to deployment"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure and How to get help?"
        ],
        "Base44": [
          "A Quick Introduction to Base44"
        ],
        "Prototyping Apps Quickly with Base44": [
          "The Prompt",
          "Base44 App Generation"
        ],
        "Kotlin Basics": [
          "Variables, Values, Strings and String Templates",
          "Lists, Loops and the If Statement/Expression",
          "Optionals, Data Class and the Billion Dollar Error",
          "Data Types - Int, Double, Float",
          "Strings - Escape Sequences, Raw Strings",
          "More on Loops",
          "Functional Approach to Loops and Higher Order Functions",
          "Repeat Loop",
          "Pairs and Triples",
          "When Expression",
          "Enums with parameters and iterating over enums"
        ],
        "Setting Up Android Studio: Your Development Environment": [
          "Downloading Android Studio"
        ],
        "Jetpack Compose & Android Basics: UI, State, and Layouts": [
          "Exploring Row, Column, and Box Layouts with Images and Shapes",
          "\"Creating an Avatar with Box and Clipping\"",
          "Jetpack compose Basics - Setting up the Project",
          "Creating a Gradient Background",
          "Fading in using animateFloatAsState and LaunchEffect",
          "State-Based Animations",
          "Animating Opacity using animateFloatAsState",
          "Text Composable and Modifiers - A Nice Greeting",
          "Text Composable and Modifiers - Text Modifiers Demo",
          "Decorated Text Examples",
          "Text With Shadow And Shape",
          "Clickable Text",
          "Adding Vertical Scroll",
          "Gradient Text",
          "Shadow and Blur Text",
          "Annotated Build String"
        ],
        "Create a Flashcard Quiz App: From Base44 Prototype to Jetpack Compose": [
          "Flashcards Prompt",
          "Base44 Flashcards App Generation",
          "Converting the App to Kotlin and Jetpack Compose",
          "Creating the Android Studio Flashcards Project",
          "Flashcard Model",
          "Circle Label",
          "Add Flashcard Form",
          "onAddCard Function Parameter",
          "FlashCardItem Screen",
          "Adjusting Flash Card Flip",
          "Study Mode Screen",
          "Flashcards App",
          "Quiz Mode Screen",
          "Flashcards App",
          "Adding the Flashcards App to the Main Activity",
          "Reviewing the Flashcard Model",
          "Restructuring the Project"
        ]
      },
      "requirements": [
        "No prior experience with Kotlin or Jetpack Compose required",
        "Willingness to experiment, learn, and put in the work",
        "A free Base44 account (we’ll use the free version throughout the course)."
      ],
      "description": "Vibe to Code on Android: From Base44 to Kotlin & Jetpack Compose Apps\nLearn Android development the fun and easy way! This course guides you from mocking up app ideas in Base44 to building fully functional Android apps with Kotlin and Jetpack Compose. Perfect for beginners, hobbyists, and anyone curious about coding without stress.\nIn this hands-on course, you’ll:\nTurn app ideas into prototypes using Base44 and ChatGPT prompts, learning how to speed up development, explore creative solutions, and experiment with innovative app concepts.\nMaster Kotlin programming fundamentals and Jetpack Compose UI design to create interactive, modern, visually appealing, and responsive apps.\nBuild a Flashcards App from scratch, learning state management, Room Database for persistent storage, and practical techniques for real-world Android development.\nPrepare your app for real-world use, optimize it for performance, test it thoroughly, and successfully publish on Google Play to reach users worldwide.\nBy the end of this course, you’ll have the confidence, skills, and practical experience to create polished, professional Android apps from scratch. You’ll be able to showcase your apps in a portfolio, share them with friends, clients, or potential employers, and continue building more advanced, feature-rich projects with Kotlin and Jetpack Compose. Whether it’s designing interactive user interfaces, implementing persistent data storage with Room Database, or optimizing app performance, you’ll have the tools to bring your ideas to life. No prior coding experience is required, just curiosity, creativity, and a passion for learning Android app development. This course is perfect for beginners, hobbyists, and aspiring Android developers who want to turn app concepts into real, market-ready applications.",
      "target_audience": [
        "Ready to go from “vibe coding” to confidently creating functional Android apps",
        "Absolute beginners eager to learn Android development in a fun and engaging way",
        "Looking to turn ideas into real apps",
        "Willing to put in the work and experiment with code",
        "Wanting to build clean, idiomatic Android applications"
      ]
    },
    {
      "title": "Apple Watch Design & Program a Slot Machine App",
      "url": "https://www.udemy.com/course/watchkit-apple-watch-design-program-a-slot-machine-app/",
      "bio": "Hands on step-by-step guide on how to design a casino slot machine Apple Watch app and program it with Objective-c.",
      "objectives": [
        "Build a useful Apple Watch app from scratch, a casino sloth machine app, while learning the standard watchkit elements and programming patterns",
        "Ability to design an Apple Watch user interface",
        "Ability to connect the User Interface to the code",
        "Ability to create simple and advanced code logic",
        "Ability to use the Apple Watch simulator",
        "Ability to animate an Apple Watch app",
        "Knowledge and usage of the watchkit framework",
        "Usage of the Objective-c language",
        "Usage of XCode Interface Development Environment"
      ],
      "course_content": {
        "Initial Setup": [
          "Demo of the Slot Machine Watch App",
          "Download XCode tool",
          "Create project and run it in the Apple Watch simulator",
          "Add Slot Machine Images to your Apple Watch Project"
        ],
        "Slot Machine User Interface Design": [
          "Design the Slot Machine User Interface with Interface Builder",
          "Verify Apple Watch Slot Machine User Interface Design in Simulator"
        ],
        "Connecting User Interface to code": [
          "Connecting User Interface to code part 1",
          "Connecting Interface Elements to code - part 2",
          "Trigger code action when pressing button"
        ],
        "Writing Initial Code Logic": [
          "Keeping track of currency score tokens",
          "Programming the preparation for next spin",
          "Coding the Update action",
          "Creating Collection of array of items",
          "Programming the Arrays of items"
        ],
        "Manipulating images and buttons": [
          "Programming the Logic to call image rotation",
          "Programming code that switch slot images part 1",
          "Programming code that switch slot images part 2"
        ],
        "Programming Score and Winning Proceeds": [
          "Programming logic to stop slots from spinning",
          "Defining values of each wins",
          "Calculating score: 3 items in a row",
          "Calculating score: 2 matching items in a row",
          "Displaying Win Texts"
        ],
        "Taking the app functionality to the next level": [
          "Change Win text color then reset settings",
          "Making row blink on Win"
        ]
      },
      "requirements": [
        "access to a mac OS computer",
        "or access to a mac OS virtual machine",
        "access to the internet to download free tools",
        "basic knowledge of using a MAC is a plus",
        "Having used an iPhone or iPad before"
      ],
      "description": "Learn the fundamentals of Apple Watch Kit by creating a real Casino Slot Machine Watch app. You will learn how to design the user interface, and write the code logic that makes the application interact with the player.\nThis course is all about diving in and getting your hands dirty from the very top.\nThroughtout this course you will be guided on a step by step journey and be transformed from a total beginner to an confident Watch app developer who has all the right tools to begin coding your own watch apps, whether personal or professional.\nYou don’t need any experience taking this course. Now if you already have some experience with iOS, then this course will be a great way to transition to the watch kit.",
      "target_audience": [
        "Anyone who wants to learn about the Apple Watch App Development",
        "Students in Computer science",
        "Students in Graphic Designs, and Fine Arts",
        "App Reskinners",
        "Mobile App Entrepreneurs",
        "Software Developers",
        "Side entrepreneurs, side business start"
      ]
    },
    {
      "title": "How to maximise Chartboost eCPM and in iPhone apps",
      "url": "https://www.udemy.com/course/how-to-maximise-chartboost-revenue-in-your-iphone-apps/",
      "bio": "Advanced Chartboost setup including using more screens,tiered campaigns, filtering ads and direct deals. With examples.",
      "objectives": [
        "Register app with Chartboost",
        "Set up more screens",
        "Cross promote your apps",
        "Create tiered campaigns",
        "Apply for direct deals",
        "How to filter ads in your campaigns"
      ],
      "course_content": {
        "Introduction": [
          "Chartboost"
        ],
        "Register a game on Chartboost": [
          "How to add a game to the Chartboost dashboard"
        ],
        "Setting up more screens and tiered campaigns": [
          "More screens: What, why and how to optomise",
          "How to create tiered campaigns"
        ],
        "What to do when your app is live": [
          "My app is live what do I do now? Part 1",
          "My app is live what do I do now? Part 2"
        ],
        "How to filter low performing ads and identify high performing game ads": [
          "Ad filtering"
        ],
        "Direct deals overview and real life example": [
          "Direct deals"
        ],
        "Chartboost in review": [
          "Course completion"
        ],
        "BONUS: Introduction to being an App Producer": [
          "App Business Producer Course",
          "BONUS: Chocolate Lab Apps Radio - Episode 1",
          "MASTERMIND GROUP"
        ]
      },
      "requirements": [
        "Interest in using Chartboost in your mobile games"
      ],
      "description": "This course will walk you through how to maximise your mobile ad revenue and eCPM using Chartboost, one of the leading iOS developer ad networks available today.\nCreated by Chocolate Lab Apps, publisher of over 180 apps and games with #1s in over 50 countries in the past 12 months, this course walks you through the entire Chartboost optimization process.\nCOURSE CONTENT:\n- How to register a game in the Chartboost dashboard\n- How to generate the Chartboost IDs for your developer to use in your game\n- How to create more screen campaigns to earn you money\n- How to cross promote your games in your more screen\n- How to set up tiered campaigns to maximise revenue\n- Ad filtering\n- How to discover the ads that are earning you the most money\n- How to qualify and set up direct deals\n- Real life example of how to approach a large ad company and request a direct deal successfully\nNote: Chartboost is only suitable for games, it is not accepting non-game apps any more.\nThis course does not include instructions of any of the technical integration of Chartboost.\n_________________________________________________",
      "target_audience": [
        "People who want to use, or are currently using Chartboost in their iPhone/iPad games"
      ]
    },
    {
      "title": "Build a LIVE Weather Application with Xcode! PROMO: EASY13",
      "url": "https://www.udemy.com/course/ios-9-swift-2-xcode-73-build-a-live-weather-app/",
      "bio": "Learn how to build a live weather application from scratch with the new Xcode 7.3. Macbook OS X El Capitan.",
      "objectives": [
        "Build a complete Weather Application.",
        "Grab information from the internet and into their application",
        "Parse internet data to JSON language"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Video for Live Weather Application"
        ],
        "Swift Basics": [
          "Swift2 Variables",
          "Swift2 Comments",
          "Swift2 If, For, While and Switch Statements",
          "Swift2 Strings",
          "Swift2 Arrays",
          "Swift2 Dictionaries",
          "Swift2 Functions"
        ],
        "Creating the Main Part of the Application": [
          "Start the Build of your Weather Application",
          "Adding an Alert Controller",
          "Creating an Alert Text",
          "Adding a Delegate Function",
          "Creating a Struct",
          "Create a Free account on openweathermap.org",
          "App Transport Security work around",
          "JSON Conversion",
          "Display Weather Information",
          "Call City Name",
          "Change Select City Button to the City called"
        ],
        "Create Weather Icons Using Sketch": [
          "Creating Weather Icons with Sketch Part 1",
          "Creating Weather Icons with Sketch Part 2",
          "Creating Weather Icons with Sketch Part 3"
        ],
        "Design and Clean up the Application": [
          "Add Weather Icons to Xcode",
          "Application Design Part1",
          "Application Design Part2",
          "Add Degree Symbol",
          "Internet Error Message",
          "Internet Error Message Part 2"
        ],
        "Extras": [
          "Weather Conversion"
        ]
      },
      "requirements": [
        "Download Xcode 7.3.1",
        "You should be semi familiar with Swift 2",
        "You may have to create a free account with openweathermap.com"
      ],
      "description": "Live Weather Application!\nIf you are a beginner in application development, or expert developer looking for some new tricks, you've come to the right place. In this course you will not only learn the basics in building a application from scratch you will also learn how to pull LIVE information from the internet and into your application. Here's what we'll cover:\nHow to create a full work application\nHow to create an alert controller\nHow to create an alert action\nHow to add a struct in your project\nHow to pull live data from the internet\nHow to parse data from the internet to JSON\nHow to adjust info.plist in order to except http URLs\nHow to create images and icons through Sketch\n... and etc.\nWhat are the requirements?\nXcode 7\nAt least a beginner knowledge in iOS programming with Swift\naccess to the internet\nWhat is the target audience?\niOS developer who want to enhance their skills in coding Swift Language\niOS application designers\nAll level developers looking for something new!",
      "target_audience": [
        "This development course is for any developer looking to exercise their skills."
      ]
    },
    {
      "title": "Send transactional emails in-app with SendGrid API & Swift 5",
      "url": "https://www.udemy.com/course/ios-13-swift-5-send-transactional-emails-with-sendgrid/",
      "bio": "Send transactional emails (without building a server) from your iOS app with SendGrid",
      "objectives": [
        "Send emails (digital event tickets) from our iOS app without building a server",
        "Obtain an API key with SendGrid",
        "Send templated and non-templated emails from our app alone",
        "Add a dynamic QR code into our email",
        "Create a customisable email template design",
        "Manage API callbacks from SendGrid",
        "Build a modal view",
        "Build a form with Combine framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Resources": [
          "Image Assets"
        ],
        "Getting Started": [
          "Setup Base UI and add Pods"
        ],
        "Feedback Controller": [
          "Setup Feedback UI",
          "Add large titles & bar button item",
          "Add Picker view",
          "Add toolbar done button",
          "Refactor toolbar",
          "Add textview editing event",
          "Observe form with Combine",
          "Handle submit button event",
          "General Refactoring",
          "Optimise feedback flow"
        ],
        "Email Manager": [
          "Add SendGrid API key",
          "Send test email",
          "Email form feedback"
        ],
        "Events Controller": [
          "Setup Events UI",
          "Add background images to cell",
          "Add button label UI to TableViewCell",
          "Update event label",
          "Handle Join button click event",
          "Setup ticket confirmation ViewController",
          "Update Modal view",
          "Add tap gesture to Modal view",
          "Setup stepper",
          "Add loading button",
          "Handle happy path",
          "Handle ticket confirmation",
          "Send template email",
          "Add data to email template",
          "Add image data",
          "Add QR code"
        ],
        "Closing": [
          "Refactor Email Manager",
          "Clean up and closing thoughts"
        ],
        "Complete Source Code": [
          "Project Files"
        ]
      },
      "requirements": [
        "1 year experience with iOS",
        "Basic Competency with Swift & XCode",
        "SendGrid account (free tier)"
      ],
      "description": "Welcome to the Send transactional emails in-app with SendGrid API & Swift 5 course.\nIn this course, we will build an Events app and learn to:\nSend emails from your iOS app without building a server\nObtain an API key with SendGrid\nSend templated and non-templated emails from our app alone\nAdd dynamic QR code into our email\nCreate a customisable email template design\nThis course is designed for iOS developers with at least 1 year experience and is not a beginners' course.\nThese are some comments from some of my students:\nExcellent Content, I appreciate the different styles of onboarding screens and all the great explanation! - Carey M\nThe course is very concise but informative . I really like the project based approach that this course takes. It cuts straight to the chases and show you how these abstract concepts are put into real life problems . Highly recommended - AN Dinh\nReally easy to follow and great for beginners. Really enjoyed the course, thanks Kelvin! - Atiqah A.K\nPerfect course to help me get started on ios programming! - Tan Kel Vin\nThe instructor is knowledgeable and clear with his instructions. The course is great and informative for those who are planning to build a skeleton they can build on their own app projects Instructor is also helpful. - Raphael Lim",
      "target_audience": [
        "Developers who want to send transactional emails with SendGrid"
      ]
    },
    {
      "title": "Build a Quiz App with Java on Android Studio",
      "url": "https://www.udemy.com/course/build-a-quiz-app-with-java-on-android-studio/",
      "bio": "An easy, fun, step-by-step guide to building an app with Java",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Some knowledge of Java programming or object-oriented programming will help understand what is going on better."
      ],
      "description": "In this project, you are going to code the back-end of a simple app in a platform called Android Studio. The front-end or the design of this app has already been made in the previous project, so if you haven’t done that project yet, you might want to check out my previous project that shows you how to design all the components of this specific quiz app.\n\n\nThis project is perfect for you if :\n\n\nThis is your first time writing the code for the back-end of an app, especially in Java.\nThis is your first time building the back-end of an app in Android Studio and you want to see how coding an app in Android Studio works.\nYou want to apply your basic knowledge of Java programming or object-oriented programming to build a real app.\n\n\nAndroid Studio is a platform that is used by many professional developers to develop Android apps. You can use several programming languages to build the front-end and back-end of an app in Android Studio, including XML and Java. This project will show you how to build the back-end (functionalities) of a simple quiz app in Java, for which the design has already been made in XML in a previous project.\n\n\nIn this project, you will be walked through a tutorial that shows you how to code the back-end of the app in Java from scratch: creating files, creating classes, creating objects, connecting references to views and buttons, etc. The tutorial codes the entire app and explains the code and how the app will work along the way.",
      "target_audience": [
        "People who have just learned Java programming or the basics of object-oriented programming and are looking to apply their skills to build a real tool."
      ]
    },
    {
      "title": "Intermediate and Advanced iOS Development – Volume 1",
      "url": "https://www.udemy.com/course/intermediate-and-advanced-ios-development-volume-1/",
      "bio": "Level Up Your iOS Skills with Modern SwiftUI, Networking, and Caching",
      "objectives": [
        "Build real-world iOS apps using SwiftUI with async/await",
        "Create reactive UIKit components using the new @Observable API",
        "Speed up Xcode Previews by using mock HTTP clients",
        "Implement secure user authentication using JWT and Node.js",
        "Manage loading states and network responses effectively in SwiftUI",
        "Build modern onboarding flows using enums and data binding",
        "Optimize app performance using Instruments and caching strategies",
        "Use NSCache to handle efficient image caching in Swift",
        "Create reusable view modifiers for advanced UI behavior (e.g., debounce)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Exercise Files"
        ],
        "Videos - Volume 1": [
          "Bring Reactivity to UIKit with @Observable",
          "Managing Loading States in SwiftUI App",
          "Speed Up Xcode Previews with MockHTTPClient in SwiftUI",
          "Building the Car Price Prediction Model – Start to Finish",
          "Build a Modern Onboarding Flow in SwiftUI with Enums and Data Binding",
          "How to Implement JWT Auth in iOS with SwiftUI and Node.js",
          "How to Implement Infinite Scrolling in SwiftUI with Real API Data",
          "How to Cache Images in Swift with NSCache and Async/Await",
          "Fix Slow iOS Apps: Find Network Bottlenecks with Instruments + Caching",
          "Build a Debounce View Modifier in SwiftUI Without Combine (Async/Await Approach)"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift programming language",
        "Familiarity with SwiftUI and iOS app structure",
        "Xcode installed on a Mac (latest stable version recommended)",
        "Some experience with REST APIs and asynchronous programming is helpful",
        "Willingness to learn intermediate and advanced iOS development techniques"
      ],
      "description": "Take your iOS development skills to the next level with this hands-on course designed specifically for intermediate and advanced developers.\nIn Volume 1 of this multi-part series, you'll build real-world app features using modern SwiftUI and iOS development techniques. From integrating async/await networking to securing your app with JWT authentication, this course focuses on production-level tools and patterns that help you build fast, scalable, and user-friendly applications.\nYou'll learn how to:\nUse @Observable to bring reactivity to UIKit\nCreate mock HTTP clients to speed up Xcode previews\nImplement JWT-based login flows with SwiftUI and Node.js\nOptimize performance using Instruments and NSCache\nHandle loading states and build reusable SwiftUI components\nImplement infinite scrolling, debounce view modifiers, and onboarding flows with real-world logic\nEvery lesson is backed by code you can use in your own projects, and each topic is presented with clarity, structure, and purpose—so you walk away with knowledge you can apply right away.\nWhether you're working on a side project, preparing for an interview, or just ready to go deeper into SwiftUI, this course will give you the confidence and skills to write better iOS apps.\nThank you for taking this course. I hope you enjoy it.\nAzam",
      "target_audience": [
        "iOS developers who are comfortable with the basics of Swift and SwiftUI and want to level up",
        "Developers looking to build real-world features like authentication, caching, and API integration",
        "SwiftUI developers who want to write more scalable, testable, and high-performance apps",
        "iOS engineers interested in async/await, @Observable, and modern architecture techniques",
        "Professionals preparing for iOS interviews or aiming to build production-ready apps",
        "Anyone who wants to improve their app performance, preview speed, and networking skills"
      ]
    },
    {
      "title": "Ktor - REST API Development for Android",
      "url": "https://www.udemy.com/course/ktor-rest-api-development-for-android/",
      "bio": "Build a Ktor backend server and fetch data from an Android app via REST API",
      "objectives": [
        "Design and develop a robust Ktor backend REST API for Android apps",
        "Seamlessly integrate Ktor backend with Android client",
        "MVVM Notes app with Ktor backend",
        "Modern Android development best practices",
        "REST API development with Ktor",
        "Ktor Authentication",
        "Ktor Routing",
        "MongoDB"
      ],
      "course_content": {
        "Introduction": [
          "Promo",
          "Introduction",
          "Why should you use Ktor as backend?",
          "How does a REST API work?",
          "Installing the required software"
        ],
        "Backend Development - Creating the Ktor Notes Server": [
          "Creating our Ktor project",
          "Setting up MongoDB",
          "Registering users",
          "Logging in users",
          "Authenticating users",
          "Getting notes for a user",
          "Adding and updating notes",
          "Deleting notes",
          "Deployment"
        ],
        "Frontend Development - Creating the Android Client Notes App": [
          "Project Creation",
          "Project Structure",
          "Retrofit Setup",
          "Dagger Hilt",
          "Navigation",
          "Logging in users",
          "Registering users",
          "Showing user's notes",
          "Adding and updating notes",
          "Deleting notes"
        ],
        "Final Section": [
          "Congratulations!"
        ]
      },
      "requirements": [
        "General knowledge of Android development",
        "Jetpack Compose basics",
        "Kotlin basics"
      ],
      "description": "Are you a Kotlin or Android app developer looking to level up your skills and create powerful backend systems for your applications? Welcome to \"Ktor - REST API Development for Android\" an immersive online course designed to transform you into a proficient full-stack developer.\nIn this course, you'll embark on an exciting journey, starting with building a robust Ktor backend server from scratch. Learn how to handle data and API requests efficiently, and implement secure authentication to safeguard your backend.\nWith your backend in place, dive into Android app development using Kotlin and Jetpack Compose. Build a feature-rich Android application, and seamlessly connect it to your Ktor backend through RESTful APIs. Fetch and handle data with ease, creating a seamless user experience.\nWhen your project is ready for the world, you'll discover how to deploy your Ktor backend to make your app accessible to users. Gain insights into scalability, ensuring your backend can handle increased traffic without compromising performance.\nThroughout the course, we will develop a Notes app connected to a backend REST API server.\nWhat you will learn:\n•   Ktor Server - HTTP requests, Authentication, Routing, Architecture\n•   MongoDB\n•   Jetpack Compose\n•   Dependency Injection with Dagger Hilt\n•   Retrofit\n•   MVVM Clean Architecture\n•   How to make high-quality apps connected to your own backend!\n•   Deployment\nAt the end of the course, you will receive a certificate!\nCourse requirements:\n•   You want to make Android apps\n•   You know the basics of Jetpack Compose\n•   You need a computer, either a PC (Windows, Linux) or a Mac, with an internet connection\nWhether you're a seasoned developer or a beginner eager to explore the world of full-stack Kotlin development, \"Ktor - REST API Development for Android\" equips you with the skills to build robust Android apps connected to powerful Ktor backend systems. Join us and unlock the potential of your applications with this comprehensive and hands-on course.\nClick the BUY NOW button and become a master of Ktor backend development for Android apps!",
      "target_audience": [
        "Developers who want to learn how to create a REST API with Ktor",
        "Developers seeking to master backend development with Ktor",
        "Developers who love learning new things"
      ]
    },
    {
      "title": "Flutter WebSocket Connection With Riverpod",
      "url": "https://www.udemy.com/course/flutter-websocket-connection-with-riverpod/",
      "bio": "Real-Time Data with Coinbase API",
      "objectives": [
        "Flutter",
        "WebScoket",
        "Riverpod",
        "GoRouter"
      ],
      "course_content": {
        "Introduction": [
          "Support and Source Code",
          "Course Requirment",
          "Setup IDE"
        ],
        "Coinbase WebSocket": [
          "Setup Project & Dependencies",
          "Setup Riverpod",
          "Setup WebSocket Connection",
          "Status Channel Repository",
          "Subscribe To Status Method",
          "Listen to To Status Stream Method",
          "Status Repository Provider",
          "Status Screen",
          "Status ViewModel",
          "Retry on Error",
          "Reset WebSocket Connection",
          "Price Repository",
          "Price ViewModel",
          "Price Screen",
          "GoRouter Provider",
          "Riverpod Lint"
        ]
      },
      "requirements": [
        "Basic of Flutter",
        "Basic of Riverpod",
        "Basic of Stream"
      ],
      "description": "Course Title: Flutter WebSocket Connection with Riverpod: Real-Time Data with Coinbase API\n\nUnlock the power of real-time data in your Flutter applications! In this course, you’ll learn how to integrate WebSocket connections in Flutter using the popular Riverpod package for state management. We’ll work hands-on with the Coinbase WebSocket API, streaming live cryptocurrency data directly into your app.\nThroughout the course, you'll explore essential concepts like establishing and managing WebSocket connections, handling incoming data streams, and efficiently updating app state with Riverpod. You’ll also learn how to manage WebSocket events such as connection establishment, disconnections, and reconnections while ensuring a smooth user experience.\nThe course also covers error handling, debugging WebSocket connections, and implementing best practices to optimize app performance when dealing with real-time data. By the end, you’ll have built a fully functional Flutter app that displays live crypto price updates, and you'll have the skills needed to implement WebSockets in any project.\nWhether you’re building trading platforms, live feeds, or chat applications, this course equips you with the tools to handle live data seamlessly. Perfect for Flutter developers looking to enhance their skillset, this course will take your expertise to the next level!\nSee you guys in the next lesson.",
      "target_audience": [
        "Flutter Developer"
      ]
    },
    {
      "title": "Building iOS Question Answering App with BERT",
      "url": "https://www.udemy.com/course/building-ios-question-answering-app-with-bert/",
      "bio": "Learn how to build iOS Question Answering with BERT , CoreML and Speech API from Apple",
      "objectives": [
        "Learn to develop machine learning based question answering iOS application",
        "Learn to convert speech into text",
        "Learn to convert text into speech",
        "Learn state of the art Natural Language Processing language modeling technology called BERT"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About Author",
          "Preview of app that we are going to build"
        ],
        "World of word embeddings": [
          "What are word embeddings?",
          "One hot encodings",
          "Deep neural network",
          "Word2vec",
          "Glove embeddings",
          "BERT"
        ],
        "Mobile App": [
          "Source Code",
          "Creating Single View App"
        ],
        "BERT Module": [
          "BERT model",
          "BERT Vocabulary",
          "Tokenizer Part I",
          "Tokenizer Part II",
          "BERT Input",
          "BERT output",
          "BERT Facade"
        ],
        "Speech": [
          "Converting speech to text",
          "Converting text to speech"
        ],
        "Bringing it all together": [
          "Finding answer to question",
          "Building App",
          "Running app",
          "Next Steps"
        ]
      },
      "requirements": [
        "Basic Swift"
      ],
      "description": "This course teaches you step by step on how tp build iOS question answering application. It explores the world of machine learning from application developer's perspective. It explains the world of word embeddings which is fundamental technology behind text processing. As Andrew Ng has said \"AI is new electricity\". The course highlight difference among AI (Artificial Intelligence, Machine learning and deep learning.  It also teaches few embedding technologies like glove, word2vec and BERT.\n\n\nBERT is state of art transformer model developed by Google and has proven to be equivalent of CNN in computer vision technology. This course uses pretrained BERT model and explains how to use it in IOS question answering app.\nThe students once armed with this knowledge will be able to demonstrate their command  on machine learning and can use this technology for several different apps.\nThe author assumes that the student does not have any background in machine learning.\nThe course is structured as follows\nApp Preview : Shows preview of app that we are going to build\nEmbeddings : Explains what word embeddings are and why are they important\nDeep Neural Network : It covers fundamentals of deep learning, and multi layer perceptron\nBERT, Glove, Word2Vec : Popular word embedding technologies\nBuild UI from scratch :  Shows how to build UI by using basic controls in iOS swift\nStep by Step Coding : Each function is explained in details with step by step walkthrough of the code\nText to Speech and Speech to text : This sections explains how to use test to speech and speech top text conversion libraries in iOS app so that user can speak question into the app and hear the answer . This is extremely useful for physically challenged users who can not type using keyboard\nRun the app on iPhone : Shows the flow of the app on the phone.",
      "target_audience": [
        "Beginner iOS developers who would like to build mobile apps using deep learning"
      ]
    },
    {
      "title": "Figma for Flutter : Better design your app",
      "url": "https://www.udemy.com/course/figmaflutter/",
      "bio": "Plan Well Before You Code",
      "objectives": [
        "Figma for designing app",
        "Design App online"
      ],
      "course_content": {
        "Design Our Dating App": [
          "101-Introuduction to the course",
          "102- Create account, Go through the Figma",
          "103- Introduce Dribbble for design inspiration",
          "104-import images, create bottom nav bar",
          "105-create status bar, and top bar",
          "106- horizontal scrolling of \"friend suggestions\" bar",
          "107- create main page, vertical scroll items",
          "108- small amendment of the feature images",
          "109- create another page (user detail)",
          "110-navigation between different pages",
          "111- add notification page, add linkages",
          "112- create chat detail screen",
          "113-create exploration page",
          "114- Final-- Profile page and linkages"
        ]
      },
      "requirements": [
        "All students are welcomed"
      ],
      "description": "Do you feel hard when you jump right to coding your app? You will face a lot of problems when you do not know how your app should look like.\n\n\nCoding without planning is Just like building a house without blueprint, it would be very hard and NOT SAFE!\n\n\nMental planning of your app is the worst thing because you have no idea of the actual positioning of the components.\n\n\nNo worry!!! I will teach you how to plan your app using the most powerful online tool --- \"Figma\".  In this course, we will work on a new project -- a dating app \"2GETHER\". In the first part of the course, you will learn about the technique for Figma, and we will adopt some design from Dribbble.\n\n\nHopefully, at the end of this course, you will learn a lot of astonishing technique that help you plan an app before coding, and saves a lot of struggling time!!!",
      "target_audience": [
        "Intermediate flutter users",
        "Who want to make better looking app"
      ]
    },
    {
      "title": "Flutter tutorial for beginners to expert level",
      "url": "https://www.udemy.com/course/flutter-tutorial-for-beginners-to-expert-level/",
      "bio": "Become a Flutter Developer",
      "objectives": [
        "Flutter UI Design",
        "Database Connectivity",
        "Crud operations using (PHP-MySQL and Firebase)",
        "Complex UI design with backend",
        "Deploy application on android and IOS",
        "Agora video calling",
        "How to use plugin",
        "Google Authentication",
        "Integrate Google Pay + Apple Pay"
      ],
      "course_content": {
        "Basics and UI concept of Flutter": [
          "Creating New Flutter Project",
          "What is Scaffold, Column and Row and Styling in Text widget by giving color ,etc",
          "Images and Single scroll child view",
          "Form in Flutter",
          "Appbar in Flutter",
          "Choice the correct answer",
          "Bottom Navigation Bar",
          "Writing Algorithm of Designing a Horizontal Card",
          "Write Algorithm of Designing a Horizontal card.",
          "Implementing code of a Horizontal Card",
          "Packing a card into Widget and Stateless Widget",
          "Short Quiz related to previous class",
          "Creating Vertical Card",
          "Create a Vertical Card",
          "Floating Action Button",
          "Bottom Sheet",
          "SnackBar and Toast Message",
          "Drawer",
          "Color Gradient Screen",
          "Carousel Slider",
          "Animated Button"
        ],
        "Navigate from one activity to another activity": [
          "Navigate from one activity to another activity",
          "Short Quiz from Section 18",
          "Sending Data from Activity 1 to Activity 2",
          "Creating an individual appbar and including that appbar in Activities"
        ],
        "Building credential pages": [
          "Creating Login Screen Part 1",
          "Creating Login Screen Part 2"
        ]
      },
      "requirements": [
        "Android Studio",
        "Java",
        "Genymotion Emulator (optional)",
        "As a learner windows system preferred",
        "Flutter",
        "For deployment MacBook (compulsory)"
      ],
      "description": "In this course, you will learn how to design complex UI's and database operations and how to deploy your application. I will teach this course from full beginners to expert level, and after this course, you will be able to work on flutter live projects. I will also provide notes and source code of every lecture which we done in the class.\nYou can easily ask any query regarding flutter and i will make sure that i will answer your all queries.\nAbout Flutter:\nFlutter is hybrid language which build cross platform application development  Flutter is developed by google and top trending mobile application development platform. Flutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers. Flutter is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase. Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase. Flutter combines ease of development with performance similar to native performance while maintaining visual consistency between platforms. Flutter’s programming language, Dart, was initially intended as a replacement for JavaScript. Most importantly, Flutter is open-source and completely free. At the moment, Flutter has equal popularity with React Native on both GitHub and Stack Overflow.\nNote:\nMake sure you have Installed (Android Studio + Java + Flutter + Emulator)\nThank You",
      "target_audience": [
        "Flutter Complete Tutorial",
        "Become a Flutter Developer",
        "MAD",
        "Mobile Application",
        "Complete Flutter Tutorial for Beginners"
      ]
    },
    {
      "title": "+99 Interview Questions in 7 days - SWIFT (Intern/Junior)",
      "url": "https://www.udemy.com/course/99-projects-in-7-days-in-swift-internjunior-level/",
      "bio": "Learn BY DOING Coding Interviews Problems and TEST yourself",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "1st-99th student = 19.99$\n100th-499th student = 44.99$\n500th student and beyond = 199$\n\n\nDo you tremble with anxiety because you’re unprepared for technical interviews and real-world hiring processes?\nAre you lacking experience with the real challenges tested in assessments?\nDo you feel unprepared to work under time pressure?\nUnsure how to stand out from other candidates?\n\n\nThe best teacher in the world is called \"practice.\"\nAnd the most valuable lessons ever recorded are your own mistakes.\n\n\n12H in 6 Tests\n2 Modes: Practical and Exam\n+30 Multiple-Choice Teorical Problems\n+70 Multiple-Choice Teorical and Practical Problems (at the same question)\n\n\nDoes a Formula 1 driver compete because he watched a lot of races or because he has a million hours of practice on the track?\nPause when needed and retry as many times as you like.\nChallenges aligned with the expectations of technical interviews, integrating different areas of programming.\nProblems with “tricky twists” that demand creativity and critical thinking.\nDetailed and explanatory feedback on solutions and mistakes, clarifying why a particular concept is the correct one for a given problem, why the other options are incorrect, and the scenarios in which they could be applicable.\nThe most successful people in the world all did one thing: They got the timing right.\nMuch more details and real examples in the Promotional video",
      "target_audience": [
        "Swift is for people who want to build innovative apps and experiences in the Apple ecosystem, combining efficiency and elegance in every line of code."
      ]
    },
    {
      "title": "Master TLS/SSL Fundamentals - Mobile & Web Developer 2025",
      "url": "https://www.udemy.com/course/master-ssl-pinning-man-in-the-middle-attack-nishant-shukla/",
      "bio": "Learn SSL Pinning, Certificate Handling, and MITM Attack Prevention with a Practical, Step-by-Step Approach",
      "objectives": [
        "SSL Pinning - Certificate Pinning, Public key pinning - From Basics to Advance Level",
        "All Concept and connect the dots for man in middle attack",
        "Mobile & Web application Security - Man in the middle attack & Solution",
        "What is CA (Certificate Authority) and how chain of trust is built",
        "How TLS certificate is structured (subject name, issuer name, validity period, signature etc.)",
        "Understand how the SSL/TLS certificate system works.",
        "Understand how encryption/decryption works together",
        "Understand why SSL/TLS is important."
      ],
      "course_content": {
        "SSL Pinning & MITM Attack - Introduction And Approach To Learn": [
          "Our Approach to learn And Topics to Cover in this Section"
        ],
        "Problems in World Without TLS": [
          "Why TLS ?"
        ],
        "Solution Attempt 1 - Using Symmetric Cryptography": [
          "Learn Symmetric Cryptography & Solution Attempt 1"
        ],
        "Problem in Symmetric Cryptography & Solution attempt 1": [
          "Limitations of Symmetric Cryptography & Problem in Solution attempt 1",
          "Solution Attempt 2: Establishing the Session"
        ],
        "Solution Attempt 3: Using Asymmetric Cryptography": [
          "Learn Asymmetric Cryptography & Understand Solution Attempt 3"
        ],
        "Understand Middle Man Concept & Man in the middle Attack": [
          "The Man in the middle attack - MITM Attack"
        ],
        "Authenticity of Server's Public Key": [
          "How to make sure Authenticity of Server's Public Key ?"
        ],
        "Message Digest & Digital Signature Concepts": [
          "Learn Message Digest & Digital Signature Concepts"
        ],
        "X509 Certificates Overview": [
          "X509 Certificates Overview"
        ],
        "Certificate Authorities Overview": [
          "Certificate Authorities Overview"
        ]
      },
      "requirements": [
        "You should have an interest in cryptography as well as some programming knowledge in Swift or Kotlin ( For practical Use case Only - Theory is common for everyone )",
        "Basic Computer & IT Knowledge: A fundamental understanding of computer systems, networking, and general IT concepts will be helpful."
      ],
      "description": "Master TLS/SSL Fundamentals - Mobile & Web Developer 2025\nIf you're serious about securing your applications and want to understand SSL pinning, TLS communication, and how to prevent man-in-the-middle (MITM) attacks, this course will give you the solid foundation you need. We'll break down complex topics into simple, practical steps so you can not only implement security correctly but also understand why each step matters.\nWe’ll start with the cryptographic basics every developer should know before diving into real-world app security. You’ll learn the difference between symmetric and asymmetric cryptography, how digital signatures and message digests (hashing) work, and how these are used to ensure data integrity and authenticity.\nNext, we’ll go deep into SSL/TLS certificates. You’ll understand how certificate authorities (CAs) operate, what a self-signed certificate is, how the chain of trust is built, and how trust stores validate certificates in modern systems. We’ll also show you how to safely disable SSL verification in development or testing environments and the risks of doing it incorrectly.\nThen, we’ll walk through the fundamentals of TLS communication, explaining what happens under the hood when your app connects to a server over HTTPS. Once you understand how TLS works, we’ll show you exactly how attackers perform MITM attacks, and how you can defend against them with proper implementation of SSL security.\nThe core part of this course focuses on certificate pinning. You’ll learn:\nWhat SSL pinning is and why it’s critical\nHow public key pinning differs from full certificate pinning\nHow to implement hostname verification\nHow to properly apply pinning with both CA-signed and self-signed certificates\nBest practices to avoid common mistakes in real-world apps\nThis course is especially useful for front-end developers, including those working on Android, iOS, React Native, or any client that communicates over HTTPS. It’s also highly relevant if you're preparing for technical interviews — especially for roles that involve application security, from software developer to architect-level positions. You’ll be able to speak confidently about SSL/TLS, cryptography, certificate validation, and security best practices.\nBy the end of the course, you’ll have a complete, connected understanding of how to secure app communication, detect and prevent MITM attacks, and apply SSL pinning in a way that’s both effective and maintainable.\nWhether you're building web or mobile apps, or just want to grow your knowledge of network security, this course will give you the skills and confidence to do it right.",
      "target_audience": [
        "Mobile ( iOS, Android , Cross platforms - Flutter, React ) Developers",
        "Web developers - All Front End Developers",
        "DevOps Engineers",
        "Internet users who are keen to know how SSL is protecting the web. SREs, Developers and DevOps who manage or deal with SSL/TLS for production web sites.",
        "Who love coding & have desire to deep dive into software development concept",
        "Anyone interested in learning more about SSL/TLS",
        "Anyone it the IT field"
      ]
    },
    {
      "title": "Master Android Jetpack Compose: Complete Guide",
      "url": "https://www.udemy.com/course/master-android-jetpack-compose-complete-guide/",
      "bio": "Learn declarative UI development, state management, animations, and build modern Android apps with Jetpack Compose",
      "objectives": [
        "Master declarative UI development with Jetpack Compose, including composable functions, modifiers, and layout systems",
        "Implement robust state management patterns using remember, mutableStateOf, state hoisting, and side effects",
        "Build complex navigation systems with type-safe navigation, deep linking, and nested navigation graphs",
        "Create smooth animations and transitions using Compose animation APIs, gesture-based interactions, and shared elements",
        "Design responsive layouts with Material Design 3 theming, dark mode support, and accessibility features",
        "Optimize app performance through recomposition optimization, lazy loading, and memory management techniques",
        "Develop custom composables and integrate Compose with existing View systems for gradual migration",
        "Build a complete production-ready app (Jetnews) demonstrating all learned concepts in a real-world project",
        "Apply advanced topics including internationalization, accessibility, and testing strategies for Compose apps",
        "Understand Compose architecture patterns, best practices, and how to structure scalable Android applications"
      ],
      "course_content": {
        "1.1 Getting Started with Compose": [
          "1.1.1. What is Jetpack Compose"
        ],
        "1.2 Compose Fundamentals": [
          "1.2.1. Compose Vs Traditional Views",
          "1.2.2. Understanding the Compose Compiler"
        ],
        "2.1 Basic Composables": [
          "2.1.1. Creating Your First Composable",
          "2.1.2. Text and Basic Styling",
          "2.1.3. Layout Composables"
        ],
        "2.2 Layout and Positioning": [
          "2.2.1. Box and Stacking Elements",
          "2.2.2. Size and Constraints",
          "2.2.3. Responsive Layouts"
        ],
        "2.3 Modifiers and Styling": [
          "2.3.1. Modifiers - The Building Blocks",
          "2.3.2. Padding, Margins, and Spacing",
          "2.3.3. Background and Borders"
        ],
        "2.4 Interactivity": [
          "2.4.1. Clickable and Interactive Elements"
        ],
        "3.1 State Fundamentals": [
          "3.1.1. Understanding State in Compose",
          "3.1.2. Remember and MutableState",
          "3.1.3. State Hoisting Patterns"
        ],
        "3.2 State Architecture": [
          "3.2.1. Stateful Vs Stateless Composables",
          "3.2.2. Managing Complex State",
          "3.2.3. State Updates and Recomposition"
        ],
        "3.3 Advanced State Management": [
          "3.3.1. Side Effects in Compose",
          "3.3.2. State Restoration",
          "3.3.3. State Testing",
          "3.3.4. State Management Best Practices"
        ],
        "4.1 Advanced Layouts": [
          "4.1.1. ConstraintLayout in Compose",
          "4.1.2. Custom Layouts",
          "4.1.3. Responsive Design"
        ]
      },
      "requirements": [
        "Basic knowledge of Kotlin programming language including functions, classes, and object-oriented concepts",
        "Familiarity with Android development fundamentals such as activities, fragments, and the Android Studio IDE",
        "No prior experience with Jetpack Compose is required as this course starts from the fundamentals"
      ],
      "description": "Transform your Android development skills with the complete Jetpack Compose course! This comprehensive program takes you from absolute beginner to expert level in Android's revolutionary declarative UI framework. Whether you're a seasoned Android developer looking to modernize your skills or a newcomer to mobile development, this course provides everything you need to master Jetpack Compose.\n\n\nWhat You'll Master:\n\n\nFundamentals & Core Concepts - Understand declarative UI programming, the Compose compiler, and how Compose differs from traditional Android Views\nComposable Functions & UI Building - Create your first composables, master layout systems, modifiers, and interactive elements\nState Management Mastery - Learn state fundamentals, hoisting patterns, side effects, and advanced state management techniques\nAdvanced Layouts & Design - Master ConstraintLayout, custom layouts, responsive design, and Material Design 3 components\nLists & Data Display - Build performant lists with LazyColumn/LazyRow, implement search, filtering, and pagination\nNavigation & Routing - Set up type-safe navigation, handle deep linking, and implement complex navigation patterns\nAnimations & Transitions - Create smooth animations, gesture-based interactions, and shared element transitions\nTheming & Styling - Implement Material Design 3 theming, dark mode support, and custom styling systems\nPerformance Optimization - Learn recomposition optimization, memory management, and performance best practices\nAdvanced Topics - Custom components, accessibility, internationalization, and integration with existing View systems\n\n\nReal-World Application:\nThe course culminates with building the complete Jetnews app, demonstrating how all concepts work together in a production-ready application. You'll implement a full-featured news app with navigation, state management, animations, and modern Material Design.\n\n\nWhy This Course?\nJetpack Compose is the future of Android development, offering faster development, more maintainable code, and better performance. This course provides hands-on experience with real projects, ensuring you're job-ready with modern Android development skills.\n\n\nPerfect for developers who want to stay ahead of the curve and build cutting-edge Android applications that users love!",
      "target_audience": [
        "Android developers who want to modernize their skills and transition from traditional View-based UI to Jetpack Compose",
        "Mobile app developers with experience in other platforms who want to learn Android development using modern tools",
        "Computer science students and programming bootcamp graduates looking to specialize in mobile app development",
        "Software engineers working on Android projects who need to understand and implement Compose in their applications",
        "Anyone interested in learning declarative UI programming patterns that are becoming standard across mobile platforms"
      ]
    },
    {
      "title": "Learn to Build iOS Apps with Swift 2",
      "url": "https://www.udemy.com/course/learn-to-build-ios-apps-with-swift-2/",
      "bio": "A Complete iOS Programming Tutorial using Swift",
      "objectives": [
        "Learn programming using Swift 2",
        "Build iOS Apps using Swift 2",
        "Learn the new features of Swift programming language",
        "Build professional programming skills"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Introduction"
        ],
        "iOS Developer Requirements": [
          "Xcode"
        ],
        "Swift Language Introduction": [
          "Playground",
          "Varibles and constants",
          "String Manipulation",
          "Arrays",
          "Dictionaries",
          "Sets",
          "Tuples",
          "Loops - Arrays",
          "Loops - Dictionary",
          "Conditional Flow",
          "Switch Statement",
          "Enums",
          "Classes",
          "Functions Basic",
          "Functions Advanced",
          "Using Functions In Classes"
        ],
        "Building Your First App": [
          "Intro",
          "Parts of The User Interface",
          "Pickerview",
          "Hiding keyboard",
          "Calculating Total Value",
          "Creating Transactions",
          "Adding Sound Effects",
          "NSUserDefaults_starter",
          "NSCoding Transaction",
          "NSUserDefaults Persisting",
          "UITableView",
          "UITableView Dynamic Data",
          "UITableView Detailed Label",
          "Animations",
          "Building Your First App_summary"
        ],
        "Working With PLIST Files": [
          "Working With plist",
          "Formatting plist Code"
        ],
        "Debugging": [
          "Debugging"
        ],
        "CoreData": [
          "Coredata"
        ],
        "Course Project": [
          "Course Project",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic programming knowledge is essential",
        "A Mac OS system with latest Xcode"
      ],
      "description": "Learn to build iOS Apps with the latest version of Swift. This course which focus on the swift programming language teaches you the best techniques for iOS App development with all the power packed features that the new and improved version of Swift promises. This course will take you deeper into the swift concepts and constructs and will then help you quickly learn and master professional iOS development.\nThe course starts with basic introduction to swift programming and Xcode IDE and then help you learn programming concepts covering the general programming paradigms and the ideas unique to swift. As with all our courses you will be creating an real world iOS App along with the course. This will allow you to assimilate all the concepts as they are covered by the instructor.\nAfter this course you will be able to:\nBuild iOS Apps using the latest version of Swift\nMaster Swift programming concepts such as Sets, Tuples, Arrays, Dictionaries\nUnderstand the Swift programming paradigm\nLearn professional app development techniques\nMaster iOS Programming\nThis course also provides you with a programming lab project which you are encouraged to try out. Get all this and much more on the other side. Get started and start building you App.",
      "target_audience": [
        "Beginners who want to start developing ios apps with Swift 2"
      ]
    },
    {
      "title": "Beginning with Android Development : First App and Beyond",
      "url": "https://www.udemy.com/course/beginning-with-android-development-first-app-and-beyond/",
      "bio": "Learn creating and running first android app. Also learn making more advanced app and cover all topics side by side.",
      "objectives": [],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Setting Up the Android Development Environment": [
          "Setting Up Android Development Environment",
          "Overview of SDK Manager",
          "Overview of Eclipse IDE",
          "Project Steps to Do",
          "Additional Resources"
        ],
        "2. Create and Run First Android (HelloWorld) App": [
          "Creating First HelloWorld Android Application",
          "Understanding First Android Project",
          "Create AVD and Run first App",
          "Understanding Parts of Android Project",
          "Project steps - Home Work",
          "Additional Resources"
        ],
        "Layouts and Controls in Android": [
          "Layouts in Android Project",
          "Basic Controls in Android",
          "Project Steps - Home Work",
          "Additional Resources"
        ],
        "Moving Beyond HelloWorld First Application": [
          "Do some action on Button Click",
          "Using Intent to Open Link",
          "Create New Layout and Activity in Android",
          "Passing Message Between Activities",
          "Project Steps - Home Work",
          "Additional Resources"
        ],
        "Creating a ToDo Application in Android": [
          "Starting with ToDo App",
          "Adding and Understanding EventListeners",
          "Adding Task in List using Listener",
          "Adding Menu and Pop up options(DialogInterface)",
          "Adding Task Using DialogInterface - ToDo App",
          "Project Steps - Home work",
          "Additional Resources"
        ],
        "Some Important Features in Android": [
          "2 Basic Important Features in Android",
          "Project Steps - Home work",
          "Additional Resources"
        ],
        "Bonus : Exporting, Importing and Running Sample Apps": [
          "Exporting Apps in Android",
          "Importing an Android Project",
          "Creating Project using Sample Code",
          "Project Steps - Home Work"
        ],
        "Bonus : Idea Generation and Creating App without Coding": [
          "Idea Generation and Creating App without coding",
          "Project Step - Home work",
          "Conclusion and Recap of course"
        ]
      },
      "requirements": [
        "Basics of Java or any other object oriented programming language.",
        "Computer or a laptop plus internet"
      ],
      "description": "Who should take this class ?\nAnyone who wants to start with android application development or wants to have an idea how an android application is developed. This Class will give you a base to start with Android Development and you will be able to learn things in few weeks which may usually take more the few months when self learned. Perfect for aspiring Mobile Entrepreneurs (Mobipreneurs).\nThis Class will cover all these basic topics you should know to build any kind of android application -\n1.Setting Up Android Development Environment.\n2.Creating Android Emulator and Running First App.\n3.Creating First Simple Hello World Application and understanding Android Project Structure and Software Used.\n4.Learning beyond HelloWorld App features\n5.Creating another advanced Application (ToDo App)\n6.Layouts and controls in android\n7.Activity\n8.Understanding Intents\n9.Event Listeners\n10.Building Menus\n11.Creating Notifications\n12.Creating Dialogs\n13.Creating and using Toast\n14.and Some Bonus Videos",
      "target_audience": [
        "Beginners",
        "People who want to startup Android App development",
        "Entrepreneurs or aspiring entrepreneurs",
        "Those who want to start with android development easily and save months of initial frustration"
      ]
    },
    {
      "title": "C# From Beginner To Pro - Write Flip Book W Pages - Unity 3D",
      "url": "https://www.udemy.com/course/c-from-beginner-to-pro-build-a-flip-book-in-unity3d/",
      "bio": "Learn C# & Unity3D By Doing It",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "PC"
      ],
      "description": "In this mini course you will create a Book with pages that you can use in your own games and apps.\nI will show you how to find and create assets for the game, (plus: you will also be able to download resource zip files).\nI will also show you have to build assets in the unity and write scripts that make the objects work, and it is all put together in a FlipBook App.\nFirst 10 For 9.99 - Use Cupon CODE FIRST999",
      "target_audience": [
        "Anyone Interested In Building Assets In Unity 3D",
        "Beginning To Intermediate Programming In C#",
        "Anyone Interested in Learning Unity 3D",
        "Anyone Interested in Problem Solving"
      ]
    },
    {
      "title": "React Native Navigation: From Beginner to Pro",
      "url": "https://www.udemy.com/course/react-native-navigation-from-beginner-to-pro/",
      "bio": "Master React Native Navigation by learning Stack, Bottom Tab, Top Tab, and Drawer Navigators, and create custom solution",
      "objectives": [
        "Understand and implement various navigators in React Native, including Stack, Bottom Tab, Top Tab, and Drawer Navigators.",
        "Customize navigators with unique headers, buttons, and components to create a personalized user interface.",
        "Effectively pass data between screens and manage complex navigation flows in React Native applications.",
        "Build professional-grade mobile applications using advanced React Native navigation techniques and best practices."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Stack Navigator Setup",
          "Customizing Stack Navigator: Header Title, Background Color, and Visibility",
          "Customizing Stack Navigation: Changing Header Buttons and Components",
          "Passing Data Between Screens in React Native Navigation",
          "Implementing Bottom Tab Navigation in React Native",
          "Implementing Material Top Tab Navigator in React Native",
          "Implementing Drawer Navigator in React Native",
          "Custom Drawer Navigations with Nested Stack Navigation"
        ]
      },
      "requirements": [
        "No prior navigation experience is needed; this course will guide you from the basics to advanced topics.",
        "Basic understanding of JavaScript and React Native is recommended but not required.",
        "A computer with internet access for downloading necessary tools and following along with the course.",
        "An enthusiasm for learning mobile app development and improving your React Native skills."
      ],
      "description": "In this course, you’ll master React Native Navigation, a critical skill for any mobile app developer looking to create seamless, user-friendly experiences. Whether you're a complete beginner or have some experience with React Native, this course will guide you through both the fundamentals and advanced navigation techniques. You'll start by understanding the basics of React Native Navigation and how routing works within a React Native app. From there, you’ll dive into setting up the Stack Navigator, learning how to customize headers, change background colors, and pass data effectively between screens.\nAs you progress, you’ll explore Bottom Tab and Top Tab navigations, both essential for building intuitive and user-friendly mobile interfaces. The course also covers the implementation of Drawer Navigation, a popular feature in many modern apps, and guides you through creating custom drawer navigations with nested stack navigators for more complex applications. By the end of this course, you’ll have a deep and practical understanding of React Native Navigation, empowering you to build complex, professional-grade mobile applications with confidence.\nThis course is designed for developers aiming to enhance their React Native skills, entrepreneurs looking to build polished mobile apps, or hobbyists passionate about mobile development. With over 1 hour of content, this course is packed with hands-on examples, practical insights, and tips to help you master React Native Navigation. Enroll now and elevate your React Native development skills to the next level!",
      "target_audience": [
        "Beginner to intermediate React Native developers looking to enhance their navigation skills.",
        "Mobile app developers who want to create seamless, user-friendly navigation in their apps.",
        "Entrepreneurs and hobbyists interested in building or improving mobile applications with React Native.",
        "Anyone eager to learn how to manage complex navigation flows and user interfaces in React Native."
      ]
    },
    {
      "title": "600+ Ionic Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/ionic-interview-questions/",
      "bio": "Ionic Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Ionic Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for an interview in Ionic development? Do you want to ace your interview with confidence? Welcome to the ultimate Ionic Framework Interview Questions Practice Test course, designed to help you master the key concepts and topics necessary to excel in your Ionic interview.\nIn this practice test course, we cover six essential sections, each packed with vital subtopics, to ensure you are well-prepared for any interview scenario. Whether you're a beginner or an experienced developer looking to brush up on your skills, this course has everything you need to succeed.\nIntroduction to Ionic Framework:\nGain an in-depth understanding of the Ionic Framework, its advantages, and key features.\nExplore the Ionic CLI and learn how to utilize Ionic Components and Ionic Native for efficient app development.\nIonic Basics:\nDive into the fundamentals of Ionic development, including project structure, CSS components, and navigation.\nMaster the Ionic Grid System and learn how to apply theming to your applications.\nIonic Angular:\nDiscover the integration of Angular with Ionic, covering components, services, and routing.\nExplore form handling and data binding in Ionic Angular applications.\nIonic Cordova:\nLearn about Ionic Cordova, its deployment process, and the integration of Cordova plugins.\nUnderstand how to handle platform-specific code and debug Ionic Cordova applications effectively.\nAdvanced Topics in Ionic:\nDelve into advanced concepts such as Ionic Storage, authentication, and HTTP requests.\nExplore the usage of Capacitor with Ionic and learn to build Progressive Web Apps (PWA) with Ionic.\nBest Practices and Troubleshooting:\nDiscover best practices for Ionic development, including debugging techniques and performance optimization.\nLearn how to address common errors and implement security best practices in your Ionic applications.\nEach section is accompanied by a practice test, consisting of multiple-choice questions designed to assess your understanding of the topics covered. These practice tests mimic real interview scenarios, allowing you to gauge your knowledge and identify areas for improvement.\nBy enrolling in this course, you will:\nGain a comprehensive understanding of Ionic development concepts and principles.\nEnhance your problem-solving skills through practical exercises and real-world scenarios.\nBoost your confidence and readiness to tackle any interview with ease.\nWhether you're a student, a job seeker, or a seasoned developer aiming for career advancement, this course is your ultimate guide to mastering Ionic development and acing your interviews. Enroll now and take the first step towards a successful career in Ionic development!",
      "target_audience": [
        "Aspiring Mobile App Developers: Beginners who are eager to enter the field of mobile app development and want to learn the fundamentals of Ionic Framework from scratch will find this course invaluable. By providing comprehensive explanations and practice tests, we ensure a smooth learning curve for beginners.",
        "Experienced Developers: Seasoned developers with experience in other frameworks or technologies who wish to expand their skill set to include Ionic development will benefit from this course. The structured content and advanced topics covered will help experienced developers transition seamlessly into Ionic development.",
        "Job Seekers Preparing for Interviews: Individuals preparing for job interviews in the mobile app development field, particularly those targeting positions requiring knowledge of Ionic Framework, will find this course indispensable. The practice tests and real-world scenarios provided will help candidates build confidence and readiness to ace their interviews.",
        "Students and Professionals Seeking Career Advancement: Students pursuing degrees or certifications in computer science, software engineering, or related fields, as well as professionals seeking career advancement opportunities in mobile app development, can leverage this course to enhance their skills and stay competitive in the job market.",
        "Entrepreneurs and Business Owners: Entrepreneurs and business owners looking to develop their own mobile applications or manage development teams will find value in understanding the fundamentals of Ionic Framework. This knowledge enables them to make informed decisions and effectively communicate with development teams."
      ]
    },
    {
      "title": "Make an iPhone game without Programming: Round Flappy Bird",
      "url": "https://www.udemy.com/course/make-an-iphone-game-without-programming-round-flappy-bird/",
      "bio": "Publish your own Radial Flappy Bird clone in a couple hours to the Apple iTunes app store and make passive income now",
      "objectives": [
        "build your on iOS game",
        "Publish an app to the iTunes store",
        "Become an Apple iOS Developer"
      ],
      "course_content": {
        "Initial Setup": [
          "Apple Developer License",
          "Get XCode Tool and Open it",
          "Download Source Code and Verify Game Works",
          "iOS Certificates",
          "App Provisioning Profile"
        ],
        "Advertising Networks": [
          "Chartboost Setup",
          "AppLovin (Upsight) setup",
          "Admob Setup"
        ],
        "Working on Main Graphics": [
          "Graphic Assets Overview",
          "Modifying Game Theme",
          "Getting a New Game Theme the Quick and Easy Way",
          "Reskinning Graphic Pack - Planet Flappy Bird Theme"
        ],
        "Game Icons": [
          "The Main Icon file",
          "Resizing Game Icons"
        ],
        "Screenshots": [
          "Taking Screenshots"
        ],
        "Game Title": [
          "Getting a Great Font for Free",
          "Modifying the Title Text"
        ],
        "Itunes Connect Settings": [
          "Create iTunes Connect Settings",
          "App ID for game review and ratings",
          "Social Media Messages (Facebook and Twitter)",
          "Adding Chartboost Advertising IDs",
          "Setting up Upsight Advertising",
          "Admob Banner setup",
          "In-app purchase: Remove Ads",
          "Verify Game Works and Archiving Process",
          "Uploading to the App Store",
          "App Upload Success"
        ]
      },
      "requirements": [
        "a MAC OS computer or macincloud.com"
      ],
      "description": "Thank you for your interest in this course, my name is Yohann, I will be your instructor.\nWith this course, you get the full source code of a game called “Jumpy Surfer”.\nThis is an iOS game where the player controls a Surfer and you get one point every time you avoid from getting bitten by the shark by jumping over it.\nThe gameplay is simple & addictive, which are the main ingredients to make a small game successful in the app store. We call it the circular Flappy Bird game mechanics\nIn this course, I show you every single steps you need to start, and I’m assuming you know nothing or very little,and I’m gonna help you succeed having your very own game, published in the itunes app store, without having to write not even one single line of code!\nSince this source code comes with advertising banners you not only get an education but you also have the potential to make passive incomes from it.\nMany of my students that took my courses, just like this course, made it to the top iTunes charts and they are now making a living out of creating mobile games!\nThis game source code costs hundreds of dollars on its own, and you’re getting it for free with this course. You can keep using this code and make dozens of games out of it. You can make games about collecting gems, candies, pets, rainbows, or treasures and so much more, You imagination has no limits.\nThis is a perfect way to start your mobile app business or increase your app portfolio quickly.\nMake the right decision and join us now. I’ll see you in the classroom.",
      "target_audience": [
        "anyone that wants to create mobile apps the easy and fast way",
        "Anyone wanting to learn and make a real game that people can play worldwide!"
      ]
    },
    {
      "title": "Create & Monetize Your Facebook Messenger Bot like a Pro",
      "url": "https://www.udemy.com/course/chat-bot-create-facebook-messenger-bot-for-travelling/",
      "bio": "A complete guide on how to create and monetize your Facebook Messenger Bot using Foursquare API",
      "objectives": [
        "Create your own Facebook Messenger Bot",
        "Create a Bot that serves as a trip advisor",
        "Know how your travel-advisor bot can be monetized",
        "Have a good understanding how to build complex bots using API's of different services"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Final Product Overview"
        ],
        "Setting up necessary tools": [
          "Creating a Facebook Page",
          "Creating a Facebook App",
          "Generating Google API",
          "Creating a Foursquare Profile"
        ],
        "Creating a bot": [
          "Please Note!",
          "Creating a Bot and connecting it to our Facebook Page",
          "Adding a Foursquare API to our Bot Part 1 of 2",
          "Adding a Foursquare API to our Bot Par 2 of 2",
          "Review of the final code",
          "Publish your bot"
        ],
        "How to monetize your bot": [
          "Ways to monetize your bot",
          "Where to promote your bot"
        ],
        "That's it!": [
          "That's it!"
        ]
      },
      "requirements": [
        "Need to have a web page with a secure HTTPS",
        "You have to be familiar with PHP basics",
        "You should have an FTP client (for example: FileZilla)",
        "You should have a Facebook account",
        "You should have a Google account"
      ],
      "description": "in this course you will learn how to build your first awesome messenger bot that connects with Foursquare and gives users travelling advises on preferred location directly in their Facebook messenger app!\nYou will also have knowledge on how you can monetize and promote your bot.\nThis course is a great starting point for you to start working with bots and getting into that\nnew and soon-competitive market. Just imagine, Facebook Messenger has over 900 million users! How great would it be to develop something that will help the engagement between it's users?\nThis course includes video and article lectures. We have also included a full code for you, so instead of having to re-type everything that I show you from the screen, you will be able to work with the live code, play with it, edit it and upload it to your server (or even sell it!).\nMessenger bots are still very new to this world. While this course was being recorded, Messenger bot coding structure has changed twice. So keep an eye on this course as we will make sure all lectures are updated with an\nup-to-date material\n.\nWhy you should take this course?\nBecause Facebook Messenger bots (and other platform bots) will be a part of nearest future. Have you heard Facebook's plans? They want to have everything to take place within Messenger app: people to order flight tickets, buy clothes, groceries etc. If you are a developer or just a person who wants to be in touch with the technology world - this course is a must for you.",
      "target_audience": [
        "Marketers and sales people who are interested in the future of communicating with clients",
        "Developers who are willing to know how they can create bots for their clients",
        "Everyone who is interested in how new era of communication will work"
      ]
    },
    {
      "title": "Personal Travel Advisor - Fullstack Hybrid App Dev Course",
      "url": "https://www.udemy.com/course/personal-travel-advisor-fullstack-hybrid-app-dev-course/",
      "bio": "Building fullstack hybrid mobile applications using react native expo & Google places API, Rapid API, Tailwindcss",
      "objectives": [
        "How to build hybrid mobile apps with live API integration?",
        "How to build mobile apps?",
        "How to work with Google API's?",
        "How to build mobile apps using React Native Expo"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Setup & Configurations",
          "Installing Emulators & Project Startup's"
        ],
        "UI Integrations": [
          "TailwindCSS Setup & Configurations",
          "React Native Navigation"
        ],
        "Home Screen": [
          "Home Screen Header Section",
          "Text Container Part - 1",
          "Text Container Part - 2",
          "Home Screen Image Container",
          "Loading Hero image",
          "Adding Button",
          "Adding Animations"
        ],
        "Custom navigations & Discover Screen": [
          "Custom Navigation",
          "Discover Screen Header Section",
          "Google Places API Configurations",
          "Travel Advisor Rapid API Configurations"
        ],
        "Custom Components": [
          "Main Menu Container UI",
          "Main Menu Item Card UI",
          "Discover Screen Main Section",
          "Places ItemCard Container UI",
          "Animated Loading Spinner Component UI",
          "Data Not Found UI Component"
        ],
        "API Data integrations": [
          "Integrating Live Data from API",
          "Passing Data to another screen through navigation route as param",
          "Main Image Container Layout",
          "Main Item Image Container Customisation",
          "Changing API dynamically using Geographical location",
          "Publishing the APP to Expo-Go"
        ]
      },
      "requirements": [
        "Need a basic fundamental knowledge in javascript"
      ],
      "description": "In this course we are going to learn how to build hybrid mobile application using React-Native Expo CLI. This is course complete beginner friendly, even if you haven't develop any apps before don't worry we got your back.\nThis course you will learn all the following concepts.\nReact-Native\nReact-Native Expo CLI\nTailwindCSS\nReact-native Navigations\nReact-Native Animations\nWorking with cloud API\nBuilding Custom Hybrid Mobile Apps\n\n\nTechnologies Used\nReact Native Expo\nGoogle Cloud places API\nTravel Advisor - Rapid API\nTailwindCSS\nEditor: Visual Studio Code\nExtensions : ES7 React Snippets,  Tailwindcss\nReact Native\nReact Native is an open-source UI software framework created by Meta Platforms, Inc. It is used to develop applications for Android, Android TV, iOS, macOS, tvOS, Web, Windows and UWP by enabling developers to use the React framework along with native platform capabilities.\n\n\nExpo-CLI\nExpo is an open-source platform for making universal native apps for Android, iOS, and the web with JavaScript and React.\n\n\nGoogle Cloud API\nGoogle Cloud APIs are programmatic interfaces to Google Cloud Platform services. They are a key part of Google Cloud Platform, allowing you to easily add the power of everything from computing to networking to storage to machine-learning-based data analysis to your applications.\n\n\nReact Navigation\nReact navigation is the central feature of a web application by which a user can navigate from one page to another based on his request or some action.\n\n\nRapid API\nRapidAPI is the world's largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. Using RapidAPI, developers can search and test the APIs, subscribe, and connect to the APIs. Note: This course works best for learners who are based in the North American region.",
      "target_audience": [
        "Beginners who desperate to learn Hybrid Mobile App development"
      ]
    },
    {
      "title": "Flutter & Dart - The Complete Developer's Guide ED[2023]",
      "url": "https://www.udemy.com/course/flutter-dart-the-complete-developers-guide-edition-2023/",
      "bio": "A Complete Flutter Developer's Guide to the Flutter SDK & Flutter Framework for building native iOS and Android apps",
      "objectives": [
        "Setup Dart&Flutter environment",
        "Become a fully-fledged Flutter developer",
        "Understand all the fundamental concepts of Flutter development",
        "Build iOS and Android apps with just one codebase",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Dart Syntax. Learn and use the basics of the programming language Dart.",
        "All the important basics of the Flutter Framework in one small app. UI, navigation, animations, theming",
        "Professional Software Development: Clean software architecture implemented in an app that you can use as a template at any time.",
        "Learn how to upload images and how to send manual and automated push notifications",
        "Learn all the basics without stopping after them: Dive deeply into Flutter & Dart and become an advanced developer",
        "Learn Flutter and Dart from the ground up, step-by-step",
        "Unit Testing, Widget Testing, Golden Tests & Integration Testing"
      ],
      "course_content": {
        "Dart Introduction": [
          "Basic Discussion About Dart",
          "Download And Install Intelij IDEA",
          "Setup dart and run first dart programm",
          "First Dart Program and Dart Syntax"
        ],
        "Dart Data Type": [
          "Dart Variable",
          "Dynamic and Var Type",
          "Final and Const Keyword",
          "Dart data types",
          "Enum",
          "Dart keyword"
        ],
        "Dart Operator": [
          "What is Operator",
          "Arithmatic operator",
          "Assignment operator",
          "Relational Operator",
          "Type test and logical operator",
          "Conditional Operator",
          "Cascade notation operator"
        ],
        "Dart Control Statement": [
          "Basic discussion about control statement",
          "Discussion about loop and for loop",
          "For in loop",
          "While loop",
          "Do while loop",
          "Break and continue statements",
          "Simple Calculator"
        ],
        "Dart List": [
          "Introduction to dart list",
          "Fixed length list",
          "Growable list",
          "List methods",
          "Dart map"
        ],
        "Dart Function": [
          "what is function?",
          "Function part-1",
          "Function part-2"
        ],
        "Dart OOP": [
          "OOP Introduction",
          "Dart class and object",
          "Constructor",
          "Introduction of inheritence",
          "Singel level inheritence",
          "Multi-level inheritence",
          "Hiarchical-inheritence",
          "Polymorphism",
          "Encapsulation",
          "Abstraction part-1",
          "Abstraction part-2"
        ],
        "Dart Null Safety": [
          "Dart null safety"
        ],
        "Exception Handle": [
          "Exception Handeling"
        ],
        "Flutter Introduction": [
          "Introduction"
        ]
      },
      "requirements": [
        "This course is suitable for programming beginners and for people who come from another language and want to get started with app development with Flutter.",
        "Basic programming language will help but is not a must-have",
        "You can use either Windows, macOS or Linux for Android app development",
        "NO Exprice about Flutter or Dart - this course starts at zero!"
      ],
      "description": "This comprehensive course will teach students how to build high-quality, responsive mobile applications using Flutter - Google's UI toolkit for building natively compiled applications for mobile, web, and desktop from a single codebase.\nThroughout the course, students will learn the fundamentals of Flutter development, including how to set up their development environment, build user interfaces, handle user input, manage state, and work with APIs. They will also learn how to incorporate third-party packages and plugins to enhance the functionality of their applications.\nThe course is designed to be hands-on and project-based, with students building a range of applications throughout the course to put their newfound skills into practice. By the end of the course, students will have built several fully functional mobile applications, including a weather app, a social media app, and a music player app.\nThis course is suitable for beginners with little to no experience in Flutter development, as well as experienced developers who want to enhance their skills and build high-quality mobile applications more efficiently.\nCourse Outline:\nIntroduction to Flutter Development\nIntroduction to Flutter\nSetting up the development environment\nCreating a new Flutter project\nUnderstanding the Flutter architecture\nBuilding User Interfaces\nIntroduction to widgets\nCreating a layout using widgets\nHandling user input with widgets\nBuilding responsive layouts\nManaging State\nUnderstanding state in Flutter\nUsing setState() to manage state\nImplementing streams to manage state\nWorking with APIs\nIntroduction to APIs\nMaking API calls in Flutter\nParsing JSON data\nError handling\nIncorporating Third-Party Packages and Plugins\nIntroduction to third-party packages and plugins\nAdding packages to a Flutter project\nUsing plugins to enhance functionality\nBuilding Mobile Applications\nBuilding a weather app\nBuilding a social media app\nBuilding a music player app\nConclusion\nReview of course content\nNext steps for further learning and development.\nCourse Requirements:\nA basic understanding of programming concepts (e.g., variables, functions, control structures)\nFamiliarity with a programming language (e.g., JavaScript, Python, Java)\nA computer running Windows, macOS, or Linux\nAn internet connection.",
      "target_audience": [
        "Everyone who wants to quickly and effectively immerse themselves in mobile app development benefits here.",
        "Beginner and experienced developers who are interested in developed into mobile app using single language for both platforms.",
        "Experienced iOS or Android developers who want to build cross-platform (iOS + Android) apps."
      ]
    },
    {
      "title": "Creating iPhone & iPad Apps Training - No Coding Required",
      "url": "https://www.udemy.com/course/creating-iphone-and-ipad-apps-no-coding-required/",
      "bio": "Learn How To Create IOS Apps And Never Do A Hard Days Work Again.Zero Coding Needed in this ios app development tutorial",
      "objectives": [],
      "course_content": {
        "01. Introduction: What is Covered": [
          "Working Files - Download These First",
          "0101 What You Will Learn",
          "0102 An Overview Of The Development Cycle",
          "0103 The SDK With Xcode",
          "0104 Introducing The Sample Applications"
        ],
        "02. Making Great iPhone Apps": [
          "0201 What Makes An iPhone App Great?",
          "0202 Exploiting The iPhone's Features",
          "0203 Embracing The iPhone's Limitations",
          "0204 Why Develop iPhone Applications?"
        ],
        "03. Making Great iPad Apps": [
          "0301 What Makes An iPad App Great?",
          "0302 Exploiting The iPad's Features",
          "0303 Embracing The iPad's Limitations",
          "0304 Why Develop iPad Applications?",
          "0305 Developing Apps For Both iPhone And iPad"
        ],
        "04. Designing The User Experience": [
          "0401 Creating A Compelling User Experience",
          "0402 Apple's Suggestions For Developing iOS Apps",
          "0403 Avoiding Practices that Get Apps Rejected"
        ],
        "05. Getting The Developer Tools": [
          "0501 Joining The Developer Program",
          "0502 Using Resources In The Dev Center",
          "0503 Downloading The SDK"
        ],
        "06. Getting To Know Xcode": [
          "0601 Exploring An Xcode Project",
          "0602 Using The Xcode Text Editor",
          "0603 Accessing Documentation",
          "0604 Customizing Xcode"
        ],
        "07. Getting To Know The iOS Simulator": [
          "0701 Running Your App In The Simulator",
          "0702 Interacting With Simulated Hardware",
          "0703 Uninstalling Apps And Resetting The Simulator",
          "0704 Simulator Limitations"
        ],
        "08. Understanding How An App Runs": [
          "0801 Starting With The Utility Application Template",
          "0802 The App Life Cycle",
          "0803 Event And Interruption Processing",
          "0804 Termination And Memory Management"
        ],
        "09. Programming The App": [
          "0901 Introducing Objects And Classes",
          "0902 Using Header And Implementation Files",
          "0903 Allocating Objects",
          "0904 Working With Declared Properties",
          "0905 Using Frameworks And Design Patterns"
        ],
        "10. Understanding iPhone Interface Controls": [
          "1001 Looking At Interface Builder",
          "1002 Inspecting The Main View",
          "1003 Inspecting The Flipside View",
          "1004 Unraveling The Info And Done Buttons"
        ]
      },
      "requirements": [
        "A system running Mac OSX is required to develop for the iOS platform."
      ],
      "description": "Infinite Skills have a wide range of tutorials covering all the popular applications and programming languages. A full list of courses complete with free demos\ncan be seen here on the Infinite Skills Web Site\nAbout This Tutorial\nIn this iOS app development tutorial, you will learn how to create apps for iPhone and iPad devices. Expert trainer and published author Tony Bove introduces you to using the iOS Software Development Kit (SDK) and Xcode to build apps for the iPhone, iPad and Universal apps. Even if you have never programmed before or built apps before, by the end of this iOS app development tutorial you will be fully capable of building apps and submitting them to the App Store.\nBefore you even start building an app, Tony takes you through what makes a good app, and the limitations you will face on the iPhone and iPad platforms. You will learn how to design a good user interface, how to use the iOS simulator, how to program in Xcode, and how an app runs. From there, you will jump right into building apps: designing the interface, including iAds in your app, animating, timing, and much more. You will also learn how to build iPad specific apps to take advantage of a larger screen and additional features. Finally, you will learn how to package your apps, and prepare them for submission to the app store.\nBy the conclusion of this iOS app development tutorial you will be fully capable of designing, creating and submitting an app to the Apple App Store, using the iOS SDK and Xcode. The author has included working files, to allow you to work alongside him as he builds an app throughout this video based iOS app development tutorial.\nPlease Note:-\nThis is an older course on Creating iPhone & iPad Apps, if you want to view our more upto date iOS app development tutorial that covers all the latest techniques you should follow this link: https://www.udemy.com/beginners-guide-to-iphone-ipad-app-creation",
      "target_audience": [
        "Anyone who wants to learn how to build an iPhone or iPad application, including:",
        "Product Managers",
        "Designers",
        "Marketers",
        "Aspiring Developers (note advanced developers will likely find this class too elementary and should view our more advanced course)",
        "Startup Founders",
        "Students"
      ]
    },
    {
      "title": ".NET MAUI: Advanced UI and Custom Control Techniques",
      "url": "https://www.udemy.com/course/advanced-net-maui/",
      "bio": "Create professional mobile apps with custom animations, bindable properties, markup extensions, and reusable components",
      "objectives": [
        "Master .NET MAUI animations and transformations through practical examples, building responsive and engaging user interfaces for mobile applications",
        "Create custom controls and reusable components using Bindable Properties, enhancing code modularity and maintainability in .NET MAUI applications",
        "Implement Markup Extensions to extend XAML functionality and create dynamic UI elements with advanced data binding capabilities",
        "Develop interactive Visual States and custom animations to create polished transitions and enhance the user experience in mobile applications"
      ],
      "course_content": {
        "Markup Extensions": [
          "What are Markup Extensions?",
          "Understanding the problem",
          "Analyzing a markup extensión internally",
          "Using a markup extension",
          "Simplifying the use of a markup extension",
          "Using StaticExtension with own data",
          "Creating a markup extension"
        ],
        "Workshop - MauiFilters": [
          "Introduction",
          "Creating the Image Placeholder",
          "Creating the gradient buttons section",
          "Taking a photo",
          "Setting the photo in the Image control",
          "Applying a gradient to the photo",
          "Creating the gradient markup extension"
        ],
        "Bindable Properties": [
          "Introduction",
          "Creating a custom control for demonstrations",
          "Explaining the problem",
          "Understanding Bindable Properties",
          "Creating a Bindable Property",
          "Creating the Sub Title and Progress Bindable Properties"
        ],
        "Workshop - MauiShares": [
          "Introduction",
          "Creating the DashboardPage UI",
          "Creating the FileDetailsPage UI",
          "Selecting a file from the device",
          "5.- Creating the file uploads service",
          "Uploading a file",
          "Navigating to the details page",
          "Sharing the file and controlling Activity Indicator",
          "Creating reusable file upload control",
          "Creating reusable file upload control - Part 2"
        ],
        "Attached Properties and Attached Behaviors": [
          "What are Attached Properties?",
          "Creating an Attached Property",
          "Using an Attached Property",
          "What are Attached Behaviors",
          "Creating and using an Attached Behavior"
        ],
        "Workshop - Role based Dashboard": [
          "Introduction",
          "Creating the Dashboard screen",
          "Adding microcharts to the page",
          "Filling the chart with data",
          "Improving the chart",
          "Creating the Attached Property RoleManager",
          "Testing RoleManager to hide dashboard sections"
        ],
        "Transformations and Animations": [
          "Introduction",
          "Translation Transformation",
          "Scale Transformation",
          "Rotation Transformation",
          "RotationX and RotationY Transformation (Skew)",
          "Single animations",
          "Relative Animations",
          "Compound Animations",
          "Composite Animations",
          "Run multiple animations concurrently",
          "Canceling animations",
          "Easing Functions",
          "Testing Easing Functions in .NET MAUI",
          "Custom easing functions",
          "Custom Animations",
          "Child animations"
        ],
        "Workshop - Pizza Shop": [
          "Introduction",
          "Creating the User Interface",
          "Animating the size of pizzas",
          "Creating the Pulse Effect",
          "Changing the pizza specialty",
          "Animating the incoming pizza",
          "Fading the pizzas",
          "Changing static data to a Model",
          "Animating text controls",
          "Animation of adding pizza to shopping cart"
        ]
      },
      "requirements": [
        "Basic to intermediate knowledge of C# programming language",
        "Understanding of object-oriented programming concepts",
        "Familiarity with XAML and .NET MAUI fundamentals",
        "Experience with Visual Studio and basic mobile development concepts"
      ],
      "description": "Take your .NET MAUI development skills to the next level with this comprehensive course on advanced UI techniques and animations. Learn to create engaging, professional-grade mobile applications through practical, hands-on examples and real-world projects.\nThis course guides you through essential advanced topics in .NET MAUI development, starting with mastering transformations and animations to create fluid, responsive user interfaces. You'll learn to implement complex animations, manage visual states, and create smooth transitions that will make your apps stand out.\nDive deep into creating custom controls and reusable components using Bindable Properties, enhancing your code's modularity and maintainability. Master the implementation of Markup Extensions to extend XAML functionality and create dynamic UI elements with advanced data binding capabilities.\nThrough practical projects, you'll build a pizza ordering app and a photo filter application, learning to implement professional features like:\nCustom animations and transitions\nReusable components with Bindable Properties\nAdvanced UI state management\nComplex user interactions\nCustom Markup Extensions\nPerformance optimization techniques\nBy the end of this course, you'll have the skills to create sophisticated, animated user interfaces and maintain clean, modular code in your .NET MAUI applications.\nAre you ready to create professional-grade mobile applications with stunning animations and polished user interfaces? Join me in this advanced .NET MAUI course, and let’s take your development skills to the next level!",
      "target_audience": [
        ".NET developers looking to expand their skills into modern mobile development",
        "Software developers with experience in C# who want to create cross-platform mobile applications",
        "Mobile developers interested in learning advanced UI techniques and animations in .NET MAUI",
        "Professional developers seeking to create reusable, maintainable components for mobile applications",
        "Programmers who want to enhance their mobile apps with professional-grade animations and transitions"
      ]
    },
    {
      "title": "The Artist's Guide to Making an Apple Watch App",
      "url": "https://www.udemy.com/course/applewatchapps/",
      "bio": "Learn how to create an Apple Watch app , starting with creating the image assets and finishing in Xcode.",
      "objectives": [
        "Create vector based art in Flash to export to Xcode",
        "Import assets to Xcode specifically setup for an Apple Watch app",
        "Design any style of watch face using static or animated images",
        "Set specific images based on the current time (for example, the hour hand to 12)",
        "Get the current time in Swift and save variables for the hour, minute, second, day of week, month, day.",
        "Save NSUserDefaults that are shared between the Watch app and companion iPhone app",
        "Create and program a similar version of the Watch App clock face on the companion iPhone app",
        "Work with the Watch Kit interface controller, groups, images, and labels",
        "Programmably play sounds and set labels on either the Watch app or iPhone app",
        "Change screens (interface controllers) on the Watch app.",
        "Create a complete Watch app that tells time in style!"
      ],
      "course_content": {
        "Course Assets": [
          "Download the Course Assets"
        ],
        "Creating the Art in Flash": [
          "Introduction to Adobe Flash",
          "How Elements are Arranged on the Watch",
          "Drawing Precise Vector-Based Minute Markers",
          "Adding Hour Markers",
          "Drawing the Hour Hand",
          "Adding and Animating the Second and Minute",
          "Adding the Month, Day, Weekday and Adjusting Multiple Frames",
          "Animating Gears and Changing Fonts Across Multiple Frames",
          "Finishing Touches and Exporting",
          "Exporting at 144dpi or 72dpi?",
          "Copying Assets into Xcode and Wrap Up"
        ],
        "Creating the Apple Watch in Xcode": [
          "Xcode Introduction",
          "Installing Xcode",
          "Watch App Initial Setup",
          "Renaming the Bundle ID",
          "Testing on the Simulator",
          "Managing Your Workspace",
          "Layout Basics",
          "Adding Groups with Background Images to the Storyboard",
          "Connecting Outlets from the Swift File",
          "Getting the Time",
          "Setting the Hour, Minute, and Second Hand Images",
          "Setting the Month and Day Images",
          "Getting the Day of the Week",
          "Deactivate the Timer"
        ],
        "Creating the Companion App for the iPhone": [
          "Using Auto Layout in the iPhone App Storyboard",
          "Animating the UIImageView",
          "Reusing our Time Code",
          "Setting up the Segmented Buttons",
          "Changing Faces",
          "AppGroups and NSUserDefaults to Communicate Between Devices",
          "Wrapping Up the iPhone App"
        ],
        "Duplicating the Template and Preparing for Submission to Apple": [
          "Duplicating the Template and Preparing for Submission to Apple"
        ],
        "Adding More to the Xcode Template": [
          "Adding Audio",
          "Using Labels to Show Time and Adding Custom Fonts",
          "Paging to Different Screens on the Watch",
          "Programmably Opening Other Interface Controllers on the Watch",
          "Conclusion",
          "Update - Submitting the Watch-extended App to Apple Now that we can!"
        ]
      },
      "requirements": [
        "Any recent Mac",
        "Xcode 6.2",
        "A copy of Adobe Flash (if they want to follow along with the art creation section)"
      ],
      "description": "Create the Art\nJoin Justin Dike, as he teaches how to make a complete Apple Watch app from scratch. Seriously. We start with nothing, beginning in Flash with a blank scene. The course first teaches how to make a multi-layered vector clock face, complete with precise hour, minute and second hands, turning gears, the day of the week, the month and day of the month. This first section of the course essentially builds a template in Flash capable of producing hundreds of watch faces. We’ll talk about exporting images and animation sequences from the finished Flash file, and making mass changes to the file (for example, how to change the font of a label on every frame, or scale objects on multiple frames). The best part is you can make any style with this template, you are not just limited to watches with an analog clock face.\nThe Program It!\nIn this session, we will build an Apple Watch app, which is technically an extension of an iPhone app. So first we will cover everything it takes to build the watch app, then move onto programming the companion app for the iPhone. The finished Xcode project, or template, will build an iPhone app that gives users the option to choose and save a preferred face variation on the Apple Watch. So you could sell an app that has multiple clock faces, adding extra value to your buyer’s purchase.\nBoth parts of this session discuss importing the images exported from the first session, layering them in the Apple Watch interface controller / iPhone view controller, programming each element, and working with NSUserDefaults to save preferences for the preferred watch variation. We will also look at some optional add-ons, such as sounds, programming labels, swiping through multiple watch screens and opening new views on the watch.\nThe course also discusses some essentials for first-time app developers. Topics include: generating provisioning profiles, adding / changing bundle identifiers, adding the app listing to iTunes connect, submitting the app to Apple, and everything else we could think of to make working with Xcode for the first time as easy as possible.\nIn this session, we will build an Apple Watch app, which is technically an extension of an iPhone app. So first we will cover everything it takes to build the watch app, then move onto programming the companion app for the iPhone. The finished Xcode project, or template, will build an iPhone app that gives users the option to choose and save a preferred face variation on the Apple Watch. So you could sell an app that has multiple clock faces, adding extra value to your buyer’s purchase.\nBoth parts of this session discuss importing the images exported from the first session, layering them in the Apple Watch interface controller / iPhone view controller, programming each element, and working with NSUserDefaults to save preferences for the preferred watch variation. We will also look at some optional add-ons, such as sounds, programming labels, swiping through multiple watch screens and opening new views on the watch.\nThe course also discusses some essentials for first-time app developers. Topics include: generating provisioning profiles, adding / changing bundle identifiers, adding the app listing to iTunes connect, submitting the app to Apple, and everything else we could think of to make working with Xcode for the first time as easy as possible.",
      "target_audience": [
        "Artists, animators or anyone regardless of previous experience with Xcode.",
        "Past Xcode users that want to learn the basics of creating a Watch App"
      ]
    },
    {
      "title": "Mobile App Development for Special Needs / Neurodiverse",
      "url": "https://www.udemy.com/course/mobile-app-development-for-special-needs-people/",
      "bio": "Specifically tailored step by step for the Special Needs community whose hidden talents only needs uncovering.",
      "objectives": [
        "Neurodiverse: The students will be introduced to MIT app inventor, where they will be able to produce Apps based on their creativity",
        "You will learn all the steps required to fulfil the tasks to complete making Apps.",
        "Specially designed for Special Needs People",
        "See them picking up skills and express their hidden creativities"
      ],
      "course_content": {
        "Video lessons introducing MIT App Inventor": [
          "Introduction of MIT App Inventor and Account Creation",
          "How to link Mobile Device to MIT App Inventor",
          "How to link Emulator to MIT App Inventor (part 1)",
          "How to link Emulator to MIT App Inventor (part 2)"
        ],
        "Lessons on MIT App Inventor": [
          "Introduction to Designer Screen",
          "Selecting Components & Setting Properties",
          "Layout Arrangements – Horizontal",
          "Layout Arrangements – Vertical",
          "Quiz 1",
          "Introduction to Control Blocks – IF ELSE",
          "Control Blocks – For Loop",
          "Control Blocks – For Loop continuation",
          "Introduction to Logic Blocks",
          "Logic Blocks - continuation",
          "Introduction to Math Blocks",
          "Math Blocks - continuation",
          "Introduction to List Blocks",
          "List Blocks – continuation",
          "Introduction to Text Blocks",
          "Text Blocks – continuation",
          "Introduction to Procedure Blocks",
          "Quiz 2"
        ],
        "Tutorials": [
          "Tutorial 1",
          "Tutorial 2",
          "Tutorial 3",
          "Tutorial 4",
          "Tutorial 5"
        ],
        "Summary": [
          "End of course - summary"
        ]
      },
      "requirements": [
        "No prerequisites"
      ],
      "description": "This Digital Tech training course is part of a series of various other classes made Specifically for Special Needs People.\n\n\nThe Special Needs people are mainly those who are Autistic, Dyslexic, having Down Syndrome, Asperger’s, Cerebral Palsy and various others.\n\n\nThe Special Needs people are known to have exceptional talents, which only need to be uncovered. However, once their hidden talents are tapped, they are capable of producing wonders.\n\n\nUnfortunately, they are rarely given fair chances i.e. be it in schools, community or work place due to their ‘perceived’ limitations and inabilities. The Covid-19 situation has further narrowed their options to earn a living since there are more people now seeking jobs and alternative opportunities to earn a living.\n\n\nOur main motive is to train them to enable to be self-sustainable and not to be dependent on any donations on handouts from anyone.\n\n\nIf you are looking for an easy mobile app development course for people with special needs then you are at the right place!\n\n\nThe Mobile App Development course consists of 26 lectures which comprises of introductory videos, exercises and tutorials that would help our students familiarize themselves with the basic blocks available on MIT app inventor.\n\n\nOur lectures are focused on the individual blocks and the built-in functions that are provided under said blocks. For instance, math block embodies other blocks related to maths such as sqrt, bitwise, quotient, +,- etc.\n\n\nThe lectures briefly highlights how each block can be used by giving simple explanations and examples, hence students can use these blocks to perform tasks as needed. At the end of the lectures, tutorials are provided to students in the form of lectures, these tutorials can be followed through to see a complete design. The students would have the general idea of how to use those blocks on their personal projects once the course is completed.\n\n\nWe have had a wonderful journey in training these special needs people throughout these years. It has been wonderful to see our students growing from Zero to Heroes.",
      "target_audience": [
        "This class is specifically for the Special Needs people (Autistic / Autism, Down Syndrome, Asperger’s Syndrome, Dyslexia, Cerebral Palsy, Deaf and many others)",
        "Our main motive is to train them to enable to be self-sustainable and not to be dependent on any donations or handouts from anyone.",
        "We believe in empowering fellow humans with digital skills to enable them to make a decent living with full dignity.",
        "The whole world is moving towards digitalization, why should they be left behind. Let’s endeavor to give a new breath of hope to this community."
      ]
    },
    {
      "title": "The Future of App Development: Text to App AI Generation",
      "url": "https://www.udemy.com/course/the-future-of-app-development-text-to-app-ai-generation/",
      "bio": "Learn how to build & design app using AI text to app generator tools like Pico, Alta, Foxy, ZBrain, and Type Block",
      "objectives": [
        "Learning the basic fundamentals of AI text to app generator, getting to know its use cases, as well as its capabilities and limitations",
        "Learning how to write clear and effective prompts for AI text to app generator",
        "Learning how to build business solution & risk management app using Pico",
        "Learning how to build marketplace app using Alta",
        "Learning how to build budget optimiser app using Foxy Apps",
        "Learning how to build product research app using ZBrain",
        "Learning how to build ad copy generator app using Type Block",
        "Learning about app testing objectives: functionality testing, user experience testing, and performance testing",
        "Learning about several business models that you can start leveraging AI text to app generator tools",
        "Learning how to build AI & LLM app with Relevance AI",
        "Learning how to build LLM Excel formula generator app with Dify AI",
        "Learning how to build app with Bolt New & V0"
      ],
      "course_content": {},
      "requirements": [
        "No previous experience in app development is required",
        "No previous experience in app design is required",
        "Willingness to learn and explore new technologies"
      ],
      "description": "Welcome to The Future of App Development: Text to App AI Generation course. Here, in this course, you will be fascinated by how far artificial intelligence has advanced nowadays. If I told you last year that you can build a fully functioning app from just a single text prompt, most likely, you won’t believe that technology actually exists. However, what if I told you that today you actually can utilise AI to generate a fully functioning app without having to write a single line of code and with just a single AI prompt describing how the app should look and in a couple seconds AI can generate the app that you want. That’s exactly what you are going to learn in this course, you will extensively learn how to use Pico Apps, Alta, Foxy Apps, ZBrain, and Type Block which are AI texts to app generators to build your own custom app in less than a minute. In the introduction session, you will learn the basic fundamentals of AI text to app generation, you will get to know its use cases, how it works, as well as its limitations and capabilities that you should be aware of. Then, continue by learning how to write clear and effective prompts as it is going to be very essential since the clarity of the instruction will impact the output generated by AI. Afterward, you will also get to know several app ideas to build that you might want to consider when it comes to building your own app project. Before building our app projects, you will be fully guided step by step to learn how to use all AI text to app generator and once you have all the knowledge and skills required, we will begin the most exciting part which is building five app projects from scratch using Pico Apps, Alta, Foxy Apps, Z Brain, and Type Block. Once all those apps have been built, we will be conducting testing to make sure that those apps have been fully functioning and most importantly those apps are easy and comfortable to be used by the users. There will be three main app testing objectives that we will be concentrating on and those are functionality testing, user experience testing, and performance testing. Lastly, at the end of the course, you will get to know several business models that you can consider to start by leveraging these AI technologies to their fullest extents.\nFirst of all, before getting into the course, it would be very essential for us to ask this question. Why should we learn to build an app using AI text to app generators? I don’t know about you but to me learning this latest AI technology will not only enable me to automate app development process which saves a lot of of time but also to reduce spending, considering there are a lot of people coming from non technical background who want to build app but they do not have programming or app development skills which left them with no option beside hiring costly app developer, hence, by using this tool, those people would be able to reduce their spending very significantly as they will be outsourcing the app development works to AI.\nBelow are things that you will learn from this course:\nLearning the basic fundamentals of AI text to app generator, getting to know its use cases, as well as its capabilities and limitations that you need to be aware of\nLearning how to write clear and effective prompts for AI text to app generator\nGetting to know several app ideas to build\nLearning how to build business solution & risk management app using Pico\nLearning how to build marketplace app using Alta\nLearning how to build budget optimiser app using Foxy Apps\nLearning how to build product research app using ZBrain\nLearning how to build ad copy generator app using Type Block\nLearning how to build AI & LLM app with Relevance AI\nLearning how to build LLM Excel formula generator app with Dify AI\nLearning how to build app with Bolt New & V0\nLearning about app testing objectives: functionality testing, user experience testing, and performance testing\nLearning about several business models that you can start leveraging AI text to app generator tools",
      "target_audience": [
        "People who are interested in AI text to app generator tools",
        "App designers who want to use AI to generate cool app designs and templates",
        "Entrepreneurs who want to build an app for their businesses using AI tools"
      ]
    },
    {
      "title": "React Native: Beginner Practical Guide [2023]",
      "url": "https://www.udemy.com/course/react-native-beginner-guide/",
      "bio": "Build a cross platform app for iOS and Android using React Native CLI",
      "objectives": [
        "Developers that want to deepen their knowledge with React Native CLI",
        "Beginners that want to learn the complete stack of Mobile Development with React Native",
        "Web Developers that want to build cross platform applications",
        "Newcomers that want to learn fundamentals of React and React Native"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to use this course",
          "If you get stuck and errors",
          "Things change and technologies keep evolving",
          "Course Requirements",
          "What is React Native?",
          "Expo CLI or React Native CLI"
        ],
        "Environment Setup": [
          "Section Overview",
          "Installing Homebrew",
          "Installing Node NVM",
          "React Native Development Environment",
          "Setting Up Android",
          "Setting Up iOS",
          "Setting Up Ruby",
          "Setting Up IOS - Cocaopods",
          "Code Editor",
          "Setting Up XCode",
          "Running Android Emulator",
          "Running IOS Simulator"
        ],
        "Creating Your First React Native App": [
          "Create a React Native Project",
          "Code Editor",
          "Closer Look to The Created React Native Project",
          "Installing Extensions - React Native Extensions",
          "05-Installing Extensions - Prettier",
          "Installing Extensions - ESLint",
          "Hello World App and Logging",
          "Debugging with Chrome",
          "Debugging with VSCode"
        ],
        "Start Building our Movie App": [
          "Getting Movie Data - API Overview",
          "Creating Movie App Project",
          "Create Data Service - Display Popular Movies",
          "Display Movie Data",
          "Using Effects",
          "Services Error Handling",
          "Refactoring"
        ],
        "Movies App: Home Section": [
          "Creating Home Screen Component",
          "Latest Movies Image Slider",
          "Styling Movies Image Slider",
          "Working with Movie Lists - Carousels",
          "Create List Component",
          "Create Card Component",
          "Image Placeholder in Card Component",
          "Type Checking in React Native",
          "Adding ScrollView to Scroll Home Screen",
          "Popular TV Shows - Family Movies - Documentaries",
          "Refactoring",
          "Add Loading Spinner",
          "Add Error Component"
        ],
        "Movies App: Navigation": [
          "Installing React Native Navigation",
          "Creating a Stack Navigator",
          "Navigate to Movie Details Component"
        ],
        "Movies App: Movie Detail": [
          "Movies Detail Overview",
          "Pass Selected Movie Data to Details Component",
          "Movie Details Service",
          "Movie Title and Genres",
          "Movie Star-Rating Component",
          "Using Icons in React Native",
          "Movie Description and Release Date",
          "Movie Play Button",
          "Video Player Modal",
          "Play a Movie within a Modal",
          "Modal Closing Logic"
        ],
        "Movies App: Navigation Bar": [
          "Add Navigation Bar",
          "Home Screen Navigation",
          "Refactoring"
        ],
        "Movies App: Search Movies": [
          "Search Movies and TV Shows Service",
          "Search Movie Screen",
          "Search Form",
          "Search Results",
          "Merging Movies and TV Shows Results"
        ],
        "Movie App: Final Touches": [
          "App Theming",
          "Styling Fixes"
        ]
      },
      "requirements": [
        "Some JavaScript knowledge. Computer and connection to internet"
      ],
      "description": "About This Course\n\n\nReact Native is growing at a fast pace, while more and more companies of any size are adopting it to build cross platform applications with a single code base.\nIn this course we aim to teach React Native flow and its secrets by building a real world project where we aim to have a solid foundation into React Native framework as well React Hooks and Functional Components.\nYou will build a mobile application targeted for both iOS and Android environment while you learn the responsiveness of the style, navigation between screens and get and manage data from an external API.\nIn this course you will learn:\n- Set up your machine environment for React Native CLI development\n- Build cross platform applications with React Native CLI\n- Navigate between screens\n- Navigate to screens dynamically\n- Use of The Movie Database API\n- Add custom styles\n- Component base development\n- React Hooks\n- Functional Components\n- Get Movies by genre\n- Lists\n- Search Movie Method\n- Image Galleries\n- Video Player and its commands\nAfter this course you will be able to:\n- Set up the system correctly\n- Manage Errors a Debug React Native CLI applications\n- Build applications from scratch\n- Understand good architecture flow for an application\n- Get data from the server using Axios\n- Handle Data\n- Display and render custom Lists\n- Implement search methods\n- Add external packages\n- Tap in the native code of a iOS and Android application\nWe can't wait to have you in board with us.\nSee you there!",
      "target_audience": [
        "Beginners and developers that want to learn how to develop cross platform apps with React Native"
      ]
    },
    {
      "title": "Android Mastery 2024 :Interview Question and Practice Test",
      "url": "https://www.udemy.com/course/android-mastery-2024-interview-question-and-practice-test-q/",
      "bio": "Mastering Android Development Through Interview Preparation and Practical Exercises",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Android Mastery : Interview Question and Practice Test Course is designed to empower aspiring Android developers with the skills and knowledge necessary to excel in interviews and real-world projects. This comprehensive course covers a wide range of topics, from fundamental Android concepts to advanced techniques, all tailored to prepare students for success in the competitive field of Android development.\nThroughout the course, students will delve into essential Android topics such as user interface design, data persistence, networking, and security. They will also explore advanced concepts including architecture patterns, testing methodologies, and performance optimization strategies. Through a combination of theoretical lectures, hands-on exercises, and simulated interviews, students will gain practical experience and develop the problem-solving skills needed to navigate complex Android development tasks confidently.\nWith a focus on interview preparation, students will tackle targeted interview questions, participate in mock tests, and refine their communication skills to effectively articulate their solutions. By the end of the course, students will not only be well-prepared to succeed in interviews but also equipped to tackle real-world challenges and contribute effectively to Android development projects.\nWhether you're a beginner looking to kickstart your career in Android development or an experienced developer seeking to enhance your skills, this course provides the perfect platform to master Android development and advance your career to new heights. Join us on this exciting journey and unlock your full potential as an Android developer!",
      "target_audience": [
        "Aspiring Android developers seeking to enter the industry.",
        "Current Android developers aiming to enhance their skills.",
        "Computer science students interested in mobile app development.",
        "Professionals transitioning to Android development.",
        "Anyone passionate about mastering Android development for personal or professional growth."
      ]
    },
    {
      "title": "Build Mobile Apps with MIT App Inventor 2 | No CODE!",
      "url": "https://www.udemy.com/course/app-inventor-2-makeandroidapps/",
      "bio": "Learn App Building Concepts and Build mobile apps in a few minutes and become an app creator with no code - Beginners",
      "objectives": [
        "App development using MIT App Inventor 2",
        "Develop a no code app",
        "Mobile apps development with no code",
        "Framework for designing apps and other programs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started with app inventor": [
          "Getting started",
          "Creating projects and navigating between projects",
          "The Three Parts",
          "Quick tour",
          "Testing the App Inventor",
          "Testing your App| Option 1: AI Companian",
          "Testing your App| Option 2: Emulator",
          "Testing your App| Option 3: USB",
          "Toolkit (app inventor 2)",
          "Creating a new project",
          "More about toolkit"
        ],
        "App 1: Hello World": [
          "What you will create",
          "Download the files",
          "Creating the first app"
        ],
        "App 2: Xylophone": [
          "What you will create",
          "Download the files",
          "components for the xylophone app",
          "Design",
          "Blocks"
        ],
        "Programming Concepts 1": [
          "Where to find more information on the built-in blocks",
          "Math, Text and Logic",
          "Variables",
          "Procedures"
        ],
        "App 3: Dice": [
          "What you will create",
          "Starting file",
          "Download the starting file",
          "How to import projects from the computer",
          "Where to get images/ sounds and other media for your projects",
          "Components of the app",
          "Design",
          "Blocks 1",
          "Blocks 2"
        ],
        "Programming Concepts 2": [
          "Lists",
          "Download the starting file for Guess My Number App",
          "If... Else with Guess My Number | App 4",
          "Where to find more information on various components in App Inventor",
          "Notifier"
        ],
        "App 5: Quiz": [
          "What you will make",
          "App Components",
          "More places to find images/ sound files",
          "Where to get more fonts",
          "How to change fonts",
          "Preparation for this app",
          "Design",
          "Question and Answer files + Flow chart of app",
          "Flow chart of the app and the variables",
          "Blocks - Variables",
          "Blocks Part 2",
          "Testing the App"
        ],
        "App 6: To Do List": [
          "What you will make",
          "TinyDB",
          "Design",
          "Flowchart for To Do List",
          "Blocks"
        ],
        "Programming Concepts 3": [
          "Download the course resource for Dictionary",
          "Dictionary",
          "Json and API"
        ]
      },
      "requirements": [
        "computer or laptop",
        "access to internet (to access app inventor 2 online)",
        "a smart phone (preferable) to test the apps"
      ],
      "description": "Learn to build Mobile Apps in MINUTES with NO CODE.\n\n\nThis course is perfect for beginners who want to learn how to create their own apps without any coding, while learning the fundamentals of programming.\n\n\nAbout the instructor\nRL Wong is a self-taught programmer, and has build many apps on app inventor, as well as taught many students app development with App Inventor 2 for many years. She is also familiar with many other programming languages, and aims to teach core programming concepts while teaching App Inventor 2.\n\n\nMore about the course\nMIT App Inventor 2 is a powerful and user-friendly visual programming platform that allows you to build fully functional mobile apps for Android devices. With our course, you'll learn how to create your own custom apps with step-by-step instructions.\n\n\nOur course is designed to teach you everything you need to know to get started building your own apps. From creating the\nuser interface to adding functionality with blocks, you'll learn the fundamentals of app development with App Inventor 2.\n\n\nIn addition, we want to provide you with programming concepts that you can bring along when you learn to code another language, and hence, we also cover programming concepts using App Inventor 2 as an example.\n\n\nOur course is designed for beginners. We provide step-by-step guidance, hands-on exercises, and helpful tips to ensure that you're able to follow along and create your own apps.\n\n\nWhat are you waiting for? I'll see you inside the course!",
      "target_audience": [
        "Anyone interested to make apps with no code",
        "Parents who want to introduce their children to app development",
        "Beginners who want to make apps"
      ]
    },
    {
      "title": "Introduction to Foundation Models Framework",
      "url": "https://www.udemy.com/course/introduction-to-foundation-models-framework/",
      "bio": "A Hands-On Introduction to Building Smarter iOS Apps with Apple Intelligence",
      "objectives": [
        "Get started with Apple’s new Foundation Models Framework and understand its role in enabling Apple Intelligence",
        "Craft prompts to interact with Apple’s large language models using natural language",
        "Stream responses in real time to build dynamic and responsive SwiftUI interfaces",
        "Use @Guide and @Generable for structured and guided generation of content",
        "Create and integrate custom tools that respond to user intent via natural language",
        "Build end-to-end SwiftUI apps that leverage the Foundation Models API for intelligent user experiences"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites"
        ],
        "Hello Foundation Models Framework": [
          "Creating your First Foundation Models Framework App",
          "Streaming Responses",
          "Guided Generation",
          "Tools",
          "Integrating with SwiftUI",
          "Edit Scheme to Check Apple Intelligence Availability"
        ],
        "Project: Recipe App - Getting Started": [
          "Tour of the Starter Project",
          "Implementing Recipe Model and RecipeRecommender",
          "Suggesting Recipes",
          "IMPORTANT: Xcode 26 Beta 2 and macOS Beta 2 Changes",
          "Displaying Recipes on Screen",
          "Adding Recipe Steps",
          "Displaying Recipe Steps"
        ],
        "Project: Recipe App - Tools": [
          "Understanding the Tool",
          "Fetching Recipes from HTTPClient",
          "Implement Recipe Tool",
          "Integrating RecipeTool in SwiftUI App"
        ],
        "Project: Recipe App - Persisting Favorites": [
          "Starter Project",
          "Creating SwiftData Models",
          "Adding UI Changes to Support Persistence",
          "Persisting Changes Using SwiftData",
          "Displaying Persisted Recipes"
        ],
        "Conclusion": [
          "Bonus"
        ]
      },
      "requirements": [
        "A basic understanding of Swift and SwiftUI",
        "Experience using Xcode for iOS app development",
        "A Mac running macOS 26, Xcode 26 and Silicon Machine"
      ],
      "description": "This hands-on course is your gateway to understanding and using Apple’s powerful new Foundation Models Framework. Whether you're an iOS developer or just curious about integrating Apple Intelligence into your apps, this course will walk you through everything you need to get started and go beyond the basics.\nYou'll learn how to:\nGet started with the Foundation Models Framework\nInteract with Apple Intelligence models using prompts\nStream responses in real-time\nUse guided generation with @Guide and @Generable\nCreate and integrate tools for natural language tasks\nSeamlessly connect the Foundation Models API with your SwiftUI apps\nWhether you want to generate content, build creative tools, or enhance user experiences with natural language understanding, this course provides a solid foundation (pun intended).\nWho Is This Course For?\nThis course is designed for iOS developers, SwiftUI enthusiasts, and tech-curious professionals who want to explore the possibilities of integrating Apple Intelligence into their apps using the new Foundation Models Framework. Whether you're building productivity tools, creative assistants, or simply experimenting with AI-driven interfaces, this course will help you get up and running—fast.\nIt's also ideal for:\nDevelopers eager to explore prompt engineering and generative AI\nEngineers looking to leverage on-device Apple Intelligence\nSwift learners who want to stay ahead with cutting-edge frameworks\nWhy Take This Course?\nApple's Foundation Models Framework opens a new frontier for building apps that understand and respond to natural language in real-time—all running privately on device. This course helps you:\nLearn by doing: Build real SwiftUI features with AI assistance\nUnderstand key concepts: Prompting, streaming, and guided generation\nUse official Apple frameworks: No third-party AI dependencies\nLevel up your app experiences: Add intelligent features users will love\nStay future-ready: Be among the first to master Apple’s next-gen tools\nBy the end, you’ll be confident in using Apple Intelligence to build smart, seamless, and private-by-default apps powered by on-device machine learning.",
      "target_audience": [
        "iOS developers eager to integrate Apple Intelligence using official frameworks",
        "SwiftUI developers looking to add natural language understanding to their interfaces",
        "Engineers curious about prompt-based interaction and generative responses",
        "Developers who want to stay ahead by learning Apple's latest AI capabilities",
        "Product builders interested in creating tools, assistants, or content generators powered by on-device intelligence"
      ]
    },
    {
      "title": "SwiftUI Essentials: Kickstart Your iOS Development Journey",
      "url": "https://www.udemy.com/course/swiftui-essentials-kickstart-your-ios-development-journey/",
      "bio": "A beginner-friendly SwiftUI course. Learn layout, state management, MVVM, and navigation by building real iOS apps",
      "objectives": [
        "Master Swift fundamentals like variables, optionals, functions, structs, and classes",
        "Build responsive and modern iOS layouts",
        "Manage data and UI updates using @State, @Binding, @ObservableObject, and the MVVM pattern",
        "Create real-world iOS apps using core SwiftUI components like Button, List, TabView, and NavigationStack"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the SwiftUI Masterclass",
          "Devices & Software You’ll Need",
          "Quick Tour of Xcode"
        ],
        "Swift Fundamentals: The Core Concepts": [
          "Module Introduction",
          "Variables & Constants",
          "Why Swift is Type Safe: Understanding Data Types",
          "Understanding Optionals",
          "Using Operators Effectively",
          "Control Flow: Working with Conditionals",
          "Array Basics: Storing and Accessing Data",
          "Dictionary Basics: Key-Value Pairs",
          "Functions: Building Reusable Code",
          "Advanced Functions: Closures and More",
          "Scope: Managing Accessibility in Code",
          "Mastering Struct in Swift",
          "Mastering Class in Swift",
          "Module Summary"
        ],
        "Layout Foundation": [
          "Module Introduction",
          "VStack, HStack, and ZStack",
          "Building a Real Estate Card with Stacks",
          "Understanding View in SwiftUI",
          "Understanding View Modifiers",
          "Layout Principles & the Declarative Approach",
          "Controlling Size with Frame Modifier",
          "Aligning Views with Frame and Stacks",
          "Spacer: Push and Position Views",
          "Mastering View Placement with Offset & Position",
          "Responsive Layouts with GeometryReader",
          "Understanding the Lifecycle of a View",
          "Module Summary"
        ],
        "State Management: Let’s Build a Calculator": [
          "Module Introduction",
          "Building the Calculator UI",
          "Handling Actions with Button",
          "How State Powers UI",
          "Binding: Two-Way Data Flow",
          "Calculator App Part 1: From Idea to Layout",
          "Calculator App Part 2: Performing Math Operations",
          "Calculator App Part 3: Extra Features",
          "Module Summary"
        ],
        "Architecture Design Pattern: MVVM": [
          "Module Introduction",
          "Why Design Patterns Matter",
          "Understanding MVVM and Common iOS Architecture Design Patterns",
          "MVVM with ObservableObject",
          "MVVM with the Observable Macro",
          "Module Summary"
        ],
        "Component Deep Dive": [
          "Module Introduction",
          "Working with Text in SwiftUI",
          "Buttons: Adding Interactivity",
          "Working with Images",
          "Combining Icons and Text with Label",
          "ForEach: Create Repeating Views",
          "Building Scrollable Views with ScrollView",
          "Lists: Displaying Rows of Data",
          "Grid Layouts: Flexible and Modern Interfaces",
          "Tab Interface: Easy View Switching with TabBar",
          "Navigating Between Screens",
          "Demo Code",
          "Module Summary"
        ]
      },
      "requirements": [
        "No prior programming experience needed — this course is designed for complete beginners",
        "A Mac computer running macOS (for using Xcode)",
        "A willingness to learn and build real iOS apps step by step"
      ],
      "description": "Kickstart your iOS development journey with SwiftUI — no experience needed.\nThis beginner-friendly course teaches you how to build real apps using SwiftUI, Apple’s newest modern UI framework. You’ll start with the essentials of Swift, learning variables, optionals, arrays, functions, structs, and classes to build a solid programming foundation.\nThen you’ll dive into SwiftUI’s layout system, using VStack, HStack, ZStack, spacers, frames, and modifiers to design clean, responsive interfaces. Along the way, you’ll build practical UI components like cards and learn how SwiftUI’s declarative approach simplifies layout.\nThrough hands-on projects — including a fully functional calculator — you’ll explore how to manage data using @State, @Binding, @ObservableObject, and the new @Observable macro. These real examples will help you understand how data flows and updates your UI in real time.\nYou’ll also be introduced to the MVVM design pattern, giving you the skills to write organized and scalable code — a must-have for real-world app development.\nIn the final section, you’ll explore SwiftUI’s core components: Text, Image, Button, ScrollView, List, TabView, and NavigationStack. You’ll also learn how to navigate between screens and structure multi-view apps.\nBy the end, you’ll be confident using SwiftUI to create beautiful, interactive iOS apps — even if you’re just getting started.",
      "target_audience": [
        "Absolute beginners who want to start building iOS apps with SwiftUI",
        "Aspiring iOS developers looking for a clear, project-based introduction to app development",
        "Students or self-learners who want to understand Swift fundamentals before diving into advanced topics",
        "UIKit developers curious about transitioning to SwiftUI and learning modern patterns like MVVM",
        "Designers or tech enthusiasts who want to prototype and build simple iOS interfaces without deep coding experience"
      ]
    },
    {
      "title": "The Fast Track to Networking in Swift: Closures, Memory Leak",
      "url": "https://www.udemy.com/course/the-fast-track-to-networking-in-swift-closures-memory-leak/",
      "bio": "Unlock Swift Networking Mastery: Build Fast, Debug Smarter, Code for Big Tech",
      "objectives": [
        "Understand the core components of a networking service and how they enable modern apps to communicate with remote servers.",
        "Build and configure robust URLs and use the URLSession API to send and receive data efficiently.",
        "Parse JSON responses seamlessly using the Codable protocol and integrate them into your app's architecture.",
        "Implement CRUD operations (Create, Read, Update, Delete) to manage app resources effectively.",
        "Master closures in networking tasks and understand their impact on asynchronous programming in Swift.",
        "Identify and debug memory issues, including handling strong, weak, and unowned references to prevent leaks and retain cycles.",
        "Create custom errors for enhanced error handling and build custom object models for better data management.",
        "Ensure thread safety and manage shared state in networking services to maintain consistency and reliability across your app."
      ],
      "course_content": {
        "Dissecting the Components of a Networking Service": [
          "Introduction to API's and Documentation",
          "What is a Networking Service?",
          "Introduction to the Course",
          "Deciphering a JSON Response: What Does the Data Actually Tell Us?",
          "Creating, Updating and Deleting Resources in an API Call",
          "Error Handling in a Networking Service",
          "URL Construction in the Context of a Networking Service",
          "The Request in a Networking Service",
          "Handling the Response from a Remote API Call After a GET Request"
        ],
        "Custom Object Models in the Context of Networking Services": [
          "Custom Object Models and Parsing API Responses",
          "Why Use Structs Over Classes for Custom Object Models When Decoding API Data",
          "Structs Have Automatic Conformance to Protocols",
          "Thread Safety for Structs vs Classes",
          "Why You Might Need Shared State in an Object Model (Class)",
          "Key Concepts for Thread-Safe Modification: Example 1, A Shared Counter Class",
          "Key Concepts for Thread-Safe Modification: Example 2, A Serial Dispatch Queue"
        ],
        "Debugging Memory Leaks and Retain Cycles": [
          "What is a Memory Leak?",
          "Example of a Memory Leak with an Unowned Reference",
          "Example of a Retain Cycle in a Networking Service",
          "Conclusion"
        ]
      },
      "requirements": [
        "You should have a firm grasp of closure syntax.",
        "You should be knowledgeable about Swift's syntax.",
        "Be familiar with the contents of one of my previous courses, the 'iOS Job Interview Toolkit'",
        "Be familiar with the contents of one of my previous courses, 'Real World Closures'"
      ],
      "description": "Step into the world of Swift networking and gain the skills to thrive at big tech companies. The Fast Track to Networking in Swift: Closures, Memory Leak is the ultimate guide to mastering networking services, debugging, and writing clean, scalable code.\nThis course covers everything you need to build robust networking solutions, including:\nWhat is a networking service? Understand its components and how it powers modern apps.\nBuilding rock-solid URLs and effectively using URLSession for requests\nParsing JSON responses and leveraging the Codable protocol to simplify data handling\nUsing closures in networking tasks and understanding their impact on performance\nClasses vs. structs: Master reference and value semantics to avoid hidden pitfalls\nDebugging strong, weak, and unowned references to fix memory leaks and retain cycles\nUnderstanding and implementing CRUD operations to create, update, and delete resources in your apps\nCreating custom errors for better error handling and debugging\nBuilding custom object models to seamlessly integrate networking responses into your app's architecture\nManaging shared state in networking services to ensure consistency across your application\nThread safety techniques to avoid race conditions and maintain reliable, crash-free networking services\nWe’ll also explore practical strategies for solving tricky bugs, optimizing performance, and writing efficient code that meets the high standards of big tech environments.\nWith real-world examples, actionable insights, and expert guidance, this course goes beyond teaching theory—it equips you to confidently build, debug, and optimize Swift networking services for large-scale applications.\nDon’t settle for \"just working\" code—create networking solutions that are reliable, efficient, and professional. Enroll today and take a major step toward becoming an indispensable developer at any big tech company!",
      "target_audience": [
        "Aspiring iOS Developers – If you’re new to iOS development and want to understand one of the most critical aspects of building modern apps, this course will give you the solid foundation you need.",
        "Junior Developers Looking to Level Up – If you already know some Swift basics but feel uncertain about networking, closures, or debugging memory leaks, this course will fill those gaps and boost your confidence.",
        "Intermediate Developers – If you’ve built apps before but want a deeper understanding of networking services, JSON parsing, Codable protocol, and advanced debugging techniques, this course will sharpen your skills and take your code to the next level.",
        "Developers Transitioning to iOS – If you’re coming from a different programming background or platform, this course will help you quickly grasp the intricacies of Swift networking and become proficient in creating efficient and reliable services.",
        "Developers Preparing for Big Tech Interviews – Networking is a key area often tested in technical interviews. This course will equip you with the knowledge and hands-on skills to confidently tackle networking-related questions and challenges.",
        "Freelancers and Independent App Developers – If you’re building apps on your own, this course will give you the tools to create scalable, maintainable networking solutions for professional-grade applications.",
        "Anyone Interested in Building Better Apps – If you want to enhance your ability to build apps that communicate seamlessly with servers, handle data efficiently, and perform reliably under real-world conditions, this course is for you."
      ]
    },
    {
      "title": "Social App with Swift 4 & Firebase 4, Xcode 9 For iOS 11",
      "url": "https://www.udemy.com/course/social-app-with-swift-4-firebase-4-xcode-9-for-ios-11/",
      "bio": "Build your own Social App for iOS 11 in Swift 4 & Firebase 4 with Xcode 9",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "1.1 - Introduction",
          "1.2 - Why you should take this courses",
          "1.3 - App Demo"
        ],
        "Section 2 : Install Firebase 4": [
          "2.1 - Firebase project",
          "2.2 - App config",
          "2.3 - Install the Firebase SDK"
        ],
        "Section 3 : Dependencies of Firebase": [
          "3.1 - Firebase dependencies install",
          "3.2 - Connect the app withe Firebase"
        ],
        "Section 4 : Login Option": [
          "4.1 - Login anonymously",
          "4.2 - How to capture or select picture from the camera or photoLibrary"
        ],
        "Section 5 : Saving data to Firebase": [
          "5.1 - Create a post class",
          "5.2 - Saving data inside Firebase"
        ],
        "Section 6 : Retrieving data from Firebase": [
          "6.1 - Retrieve data from Firebase",
          "6.2 - Retrieve data from Firebase 2"
        ],
        "Section 7 : Conclusion": [
          "7.1 - Conclusion"
        ]
      },
      "requirements": [
        "Student should be able to use a PC & internet connection at a beginner level . The student should also have a programming knowledge in Swift 4, Firebase 4 and Xcode 9 tool."
      ],
      "description": "In this courses, student will be able to build his own Social Photo Sharing App .\nThe Social App can be use in iPhone 6, 6S, 7, 7 Plus, 8, 8 Plus and iPhone 10\nWe will use the new programming language of Apple Swift 4, the new Google database Firebase 4 and the new programming tool of Apple Xcode 9.\nBy the end of this courses, the student will be able to build his own Social App for iOS 11 with Swift 4, Firebase 4 and Xcode 9",
      "target_audience": [
        "Anyone who wants to learn to build his own Social App for iOS 11."
      ]
    },
    {
      "title": "Mastering Sencha Touch: From Beginner to Advanced",
      "url": "https://www.udemy.com/course/sencha-touch-application-designing/",
      "bio": "Unlock the power of mobile app development with Sencha Touch course—perfect for beginners and seasoned developers alike",
      "objectives": [
        "Understand the Basics of Sencha Touch: Grasp the fundamental concepts and architecture of Sencha Touch.",
        "Learn to set up the development environment and understand the necessary dependencies for running applications.",
        "Build and Design Applications: Create and design your first Sencha Touch application from scratch.",
        "Utilize Sencha CMD for application management and understand the various parts of application development. Learn to create headers, footers, and align items",
        "Work with Sencha Touch Components: Explore the different components available in Sencha Touch and their uses. Dive into practical examples.",
        "Learn to use the Sencha Touch documentation effectively and understand the source code of examples.",
        "Implement Advanced Features: Develop sophisticated layouts and menus, including hiding and displaying options dynamically.",
        "Manage data with stores and models, creating views that render data effectively. Add interactivity with buttons and controllers, and integrate with servers",
        "Optimize and Fine-Tune Applications: Understand the importance of empty cache and hard reload for application performance.",
        "Fine-tune your application by adding images and adjusting views for a better user experience.",
        "Advanced Development Techniques: Implement advanced functionalities like user controllers and adding more complex functions to views.",
        "Learn to connect to servers for collecting and rendering data in the application. Explore data views, list views, and manage products within the application."
      ],
      "course_content": {
        "Sencha Touch Beginner Level Tutorials": [
          "Introduction to Sencha Touch",
          "Building Sencha Applications",
          "Dependencies to Run Applications",
          "Creating a New Application",
          "Uses of Sencha CMD",
          "Parts of Application Development",
          "Creating and Designing Application",
          "Different Components in Sencha Touch",
          "Kitchen Sink Example",
          "Sencha Touch Documentation",
          "Examples Source Code",
          "Application Development",
          "Creating a Header",
          "Designing the Header",
          "Aligning the Items",
          "Creating the Footer",
          "Creating More Functions",
          "Documentation for Sencha Touch",
          "Designing the Login Screen",
          "Creating a Generic Function"
        ],
        "Sencha Touch - Advanced": [
          "Layout for the Class",
          "Options for Displaying",
          "Creating the Menu",
          "Hiding the Menu",
          "Adding the Icon",
          "Summary for Login Screen",
          "Learning Stores Models and View",
          "Creating the Product View",
          "Creating Example on Model Store",
          "Creating Products View",
          "Defining in the Products Class",
          "Rendering Data for View",
          "Showcasing the Items in List View",
          "Creating a Data View",
          "Adding Images and Fine Tuning",
          "Connecting to server for collecting data",
          "Creating and running the Menu",
          "Empty cache and Hard reload",
          "Products in items in application",
          "Adding more functions to user view",
          "Adding button to user view",
          "Creating a user controller"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript: Familiarity with JavaScript syntax and basic programming concepts is essential.",
        "Understanding of HTML and CSS: Basic understanding of HTML and CSS, as Sencha Touch applications involve front-end development.",
        "Development Environment Setup: Access to a computer with an internet connection. Ability to install software and set up a development environment.",
        "Willingness to Learn: A proactive attitude and eagerness to learn new concepts and tools in mobile application development.",
        "Familiarity with Command Line Interface (CLI): Basic knowledge of using the command line or terminal, as it will be necessary for using Sencha CMD and other tools.",
        "Text Editor or IDE: Access to a text editor or integrated development environment (IDE) like Visual Studio Code, Sublime Text, or WebStorm."
      ],
      "description": "Introduction\nEmbark on a comprehensive journey through Sencha Touch with our meticulously designed course, \"Mastering Sencha Touch: From Beginner to Advanced.\" This course is tailored for developers keen on building robust, high-performance mobile applications using the Sencha Touch framework. With a step-by-step approach, you'll gain a deep understanding of Sencha Touch's capabilities, from the basics to advanced functionalities, ensuring you're well-equipped to create dynamic and responsive mobile apps.\nSection 1: Sencha Touch Beginner Level Tutorials\nIn this foundational section, you'll get introduced to Sencha Touch and its powerful features. We'll start with the basics, guiding you through the process of building your first Sencha Touch application. You'll learn about the necessary dependencies and how to set up your development environment. Key concepts such as using Sencha CMD, application development parts, and various components in Sencha Touch will be covered. Practical examples, including the Kitchen Sink example, will help solidify your understanding. By the end of this section, you'll be able to create and design basic applications, understand the documentation, and utilize the examples' source code effectively.\nSection 2: Sencha Touch - Advanced\nBuilding on the basics, this section delves into more advanced aspects of Sencha Touch. You'll learn to create sophisticated layouts and menus, handle data with stores and models, and render data in various views. We'll cover adding interactivity with buttons and controllers, integrating with servers for data collection, and optimizing the application for performance. Practical exercises, such as creating a product view and managing user interactions, will enhance your skills. By the end of this section, you'll be proficient in creating complex, data-driven applications with Sencha Touch.\nConclusion\n\"Mastering Sencha Touch: From Beginner to Advanced\" is designed to transform you from a novice to an expert in Sencha Touch application development. By the end of this course, you'll have the skills to build high-quality, responsive mobile applications, leveraging the full potential of Sencha Touch.",
      "target_audience": [
        "Aspiring Mobile App Developers: Individuals looking to start a career in mobile application development, particularly those interested in building cross-platform apps using Sencha Touch.",
        "Web Developers: Web developers who want to expand their skill set to include mobile app development and leverage their existing knowledge of JavaScript, HTML, and CSS.",
        "Frontend Developers: Frontend developers aiming to learn a robust framework for creating mobile applications that offer a native look and feel.",
        "Software Engineers: Software engineers seeking to diversify their technical skills by adding mobile app development to their repertoire.",
        "IT Professionals: IT professionals who need to create mobile solutions for their organizations or clients.",
        "Students and Educators: Students studying computer science or software engineering, and educators looking to teach modern mobile app development techniques.",
        "Entrepreneurs and Business Owners: Entrepreneurs and business owners interested in developing mobile apps to enhance their business operations or create new products."
      ]
    },
    {
      "title": "Android Processes, Threads Slidenerd Style",
      "url": "https://www.udemy.com/course/master-android-zero-to-hero/",
      "bio": "Learn Android From null to stackoverflow, processes, threads, handlers, asynctask, xml parsing",
      "objectives": [],
      "course_content": {
        "Processes In Android": [
          "What Is A Process In Android?",
          "Inter-process Communication And Data Exchange",
          "Inter-process Communication And Data Exchange Example"
        ],
        "Threads": [
          "Understanding Multithreading In Android",
          "Android Multithreading API",
          "Multithreading Example Part 1",
          "Multithreading Example Part 2",
          "Multithreading Example Part 3",
          "Multithreading Example Part 4",
          "Multithreading Example Part 5"
        ],
        "Handlers": [
          "Thread Looper and Handler Architecture",
          "Handler Example 1",
          "Handler Example Post Runnable Messages",
          "Example Thread Intercommunication",
          "What is AsyncTask?",
          "AsyncTask Example",
          "AsycnTask Example Part 2",
          "Handling Rotation With Asynctask: Method 1",
          "Handling Rotation With AsyncTask Using Fragments Part 1",
          "Handling Rotation With AsyncTask Using Fragments Part 2",
          "Handling Rotation With AsyncTask Using Fragments Part 3",
          "Introduction XML Parsing Techniques: DOM, SAX, Stax",
          "Introduction to XML DOM Parsing",
          "XML DOM Parsing API"
        ],
        "Get Practical With BlogReader App": [
          "BlogReader App Part 1",
          "BlogReader App Part 2",
          "BlogReader App Part 3",
          "BlogReader App Part 4",
          "BlogReader App Part 5",
          "BlogReader App Part 6"
        ]
      },
      "requirements": [
        "Programming Basics",
        "Object Oriented Java",
        "Android Basics: Activities, Intents and Fragments"
      ],
      "description": "The 3 primary ways of running an operation in the background in Android is using Threads, Handlers and Services. Though Threads and Handlers are primitive and involve boilerplate code, a more sophisticated way to manage background processing such as loading of images, performing complex computations, downloading Network data is with the help of an AsyncTask, This course covers the following items\nProcesses in android, their architecture, operation\nThreads in android and why you can't use them\nHandlers and how they are superior to threads\nAsyncTask and how its clean and modular\nHandling AsyncTask lifecycle based on activity or fragment destruction\nXML Parsing APIs\nDOM API and a BlogReader app based on this API",
      "target_audience": [
        "This course is best suited for you if you are looking towards learning multi-threading techniques in Android using Threads, Handlers and AsycnTask",
        "This course is probably NOT meant for you if you are not familiar with the basics of Android such as Activities, Fragments, Intents etc."
      ]
    },
    {
      "title": "iOS App Development For Beginners - No Swift Skill Required",
      "url": "https://www.udemy.com/course/ios-app-development-for-beginners/",
      "bio": "Develop a complete app without writing a single line of code - iOS 11 and Xcode 9",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to Florist App",
          "Download Xcode from the App Store",
          "Things you need to follow along",
          "How to follow along and some useful tips",
          "About me"
        ],
        "Introduction to iOS Development - The Basics": [
          "Launching Xcode for the first time",
          "How to change Xcode settings",
          "Quick Xcode tour",
          "Add background image and duplicating view controllers",
          "Introduction to UILabels",
          "Introduction to UIButton",
          "How to use Xcode Preview feature",
          "Introduction to UITextView and how to set the initial view controller",
          "Adding missing constraints to views automatically",
          "Adding layout constraints manually to views",
          "Layout constraint errors",
          "Editing layout constraints and how to reset frames",
          "Introduction to Stack View",
          "Toggle between software and hardware keyboard on the simulator",
          "Introduction to storyboard segue",
          "Adding a UINavigationController to our app",
          "Clip the image view for smooth segue transition",
          "Customising the UINavigation bar",
          "Adding title to the UINavigation bar (hack)",
          "Changing the tint color of barbutton item and back button",
          "How to change back button text and how to have no back button text",
          "UINavigation Controller push segue error",
          "Introduction to Launch Screen Storyboard",
          "Introduction to plist.info and how to make app exit on suspend",
          "How to change view controller status bar color",
          "How to hide the status bar",
          "Using Flaticon.com to download icons for our app",
          "Creating icon on Canva.com",
          "App icon sizes and Asset catalog creator tool",
          "Adding icon to iOS app",
          "Resolving build time issues in the app",
          "How to debug View Hierarchy",
          "Memory usage basics",
          "How to simulate memory warnings",
          "Introduction to App delegates File",
          "Understanding ViewDidLoad and ViewWillAppear",
          "Apple documentation class reference",
          "Coordinate system in iOS",
          "Adding UILabel to the app programmatically",
          "Programmatically adding UIImageView and accessing class reference from Xcode",
          "Creating IBOutlets and reference",
          "Creating View Controller Swift file for other scenes",
          "Creating IBActions for UIButton click events",
          "IBOutlet connection error and how to recover",
          "Dynamically changing properties through button actions",
          "ViewWillAppear vs ViewDidLoad"
        ],
        "What's New in iOS 11 and Xcode 9": [
          "Introduction to the project file",
          "Add large title to navigation bar",
          "Disable large title on a view controller",
          "Increase or decrease font size",
          "Run multiple simulators at the same time",
          "Simulators now have hardware buttons",
          "Structure highlighting",
          "Resize simulator window freely",
          "Wireless building",
          "Refactoring - Renamed variables propagates throughout the project",
          "Ability to add named colors",
          "One click protocol stubs fix"
        ],
        "Conclusion and Bonus": [
          "Conclusion",
          "Bonus"
        ]
      },
      "requirements": [
        "You should have a Mac computer (e.g. MacBook, Mac mini, iMac etc)"
      ],
      "description": "Are you new to iOS app development? Do you want to learn how to develop app on the iPhone but have no programming skills? This course is for you.\nThis course is for anyone who is completely new to the Apple iOS platform, with no Swift programming skills. The app we’ll develop in this course will be a complete app but we will not write any code to make it work.\nWe’ll use native iOS development tools, which is the Xcode, and I’ll introduce you to other tools to make development a lot easier than you image.\nSome of the topics you will learn in this course include;\nSome cool features of Xcode to boost your productivity\nSimple design tips to make great looking apps\nIntroduction to some of the popular controls such as labels, buttons, text view etc.\nHow to add layout constraints to your app automatically and manually\nIntroduction to stack view – easier way to lay out your controls\nUINavigation controller and some of its unique properties\nStoryboard segue\nPlist.info property file\nLaunch screen storyboard file\nStatus bar and some of its cool features\nCreating icon and asset catalog\nView hierarchy\nMemory management\nApp delegate and view lifecycle\nHow to use the class reference\nIBOutlet and IBActions\nAnd many more…\nThe course will be updated with latest features for every new versions of iOS.",
      "target_audience": [
        "Anyone who wants to learn how to develop iOS apps without writing code",
        "Anyone who wants to make basic app for their business"
      ]
    },
    {
      "title": "Build a ChatGPT app in SwiftUI for iOS 16",
      "url": "https://www.udemy.com/course/build-a-chatgpt-app-in-swiftui-for-ios-16/",
      "bio": "Use OpenAISwift, SwiftUI, iOS, and more!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "What we will build",
          "Prerequisites"
        ],
        "Building the app": [
          "Starting the project",
          "Creating the model and importing package",
          "Implementing Modules enum",
          "NewChatView - Part 1",
          "NewChatView - Part 2",
          "NewChatView - Part 3",
          "ConceptView - Part 1",
          "ConceptView - Part 2",
          "Creating ResultView",
          "RelatedTopicsView",
          "DefinitionView",
          "ArticleView",
          "ExpandedView",
          "SummarizedView",
          "ComparisonView",
          "NextView",
          "AffirmationView",
          "Building the Settings Screen"
        ]
      },
      "requirements": [
        "Mac computer with Xcode installed",
        "Familiarity with Xcode",
        "Familiarity with Swift and SwiftUI",
        "Passion for learning and building apps"
      ],
      "description": "Learn how to build a GPT-powered iOS app with Xcode and SwiftUI. You will learn how to build a fully functional app that interacts with OpenAI's GPT3 API. You will be able to use the GPT3 API to craft modules such as \"random concept\" and \"article\" generation. This course will teach you the skills you need to create a GPT3 iOS app such as SwiftUI, OpenAISwift, and data management. Whether you are a beginner or an experienced developer, this course is perfect for anyone looking to add new skills to their toolbox. Enroll now and start building your own GPT-powered app today!\n\n\nWhat will you learn in this course?\nUse Xcode and SwiftUI to build a fully functional app\nIntegrate OpenAI’s GPT3 API into your app\nHow to create modules such as “random concept” and “article” generation\nHow to manage data in your app using SwiftUI\nHow to design a user interface with SwiftUI and support both dark and light mode\n\n\nBy the end of the course, you will have an understanding of how to build your own GPT-powered app and have the skills to create other similar applications. I hope you enjoy taking this course and find it to be a useful learning experience.",
      "target_audience": [
        "Intermediate SwiftUI developers",
        "Developers with some knowledge of SwiftUI",
        "Students seeking to understand how to implement GPT3 API in an iOS app"
      ]
    },
    {
      "title": "Android App Development using Jetpack Compose in Hindi",
      "url": "https://www.udemy.com/course/android-app-development-using-jetpack-compose-in-hindi/",
      "bio": "Learn Android App Development with Jetpack Compose & Kotlin in Hindi – From Basics to Advanced with Hands-on Projects.",
      "objectives": [
        "Learn basics and Advance Concepts of Jetpack Compose",
        "Build modern, responsive, and interactive Android apps using Jetpack Compose and Kotlin.",
        "Learn how to use layouts, modifiers, state management, and navigation in Compose.",
        "Connect Jetpack Compose apps with ViewModel, LiveData, and StateFlow for real-time data handling.",
        "Implement animations, theming, and Material 3 design for professional-looking apps."
      ],
      "course_content": {},
      "requirements": [
        "No prior programming or Android development experience required.",
        "A computer or laptop (Windows/Mac/Linux) with internet connection."
      ],
      "description": "Welcome to Android Development Course Using Jetpack Compose in Hindi – the complete Android development course designed for beginners and advanced learners.\nIn this course, you will learn how to build modern, beautiful, and responsive Android apps using Jetpack Compose and Kotlin. Unlike the old XML-based UI, Jetpack Compose makes app development faster, easier, and more powerful.\nWe will start from the very basics, so even if you have never coded before, you can follow along. Step by step, you will understand how to:\nCreate UI using Composable functions\nWork with layouts, modifiers, and states\nImplement navigation and data flow using ViewModel and StateFlow\nAdd animations, themes, and Material 3 design to make apps look professional\nBuild real-world projects and publish Android apps\nUse Kotlin Coroutines for background tasks and asynchronous programming\nWhy this course?\nTaught completely in Hindi for better understanding\nCovers both beginner-friendly concepts and advanced techniques\nIncludes Kotlin from basics to advanced, so no prior experience required.\nIncludes practical projects so you can apply what you learn\nPerfect for students, freelancers, and aspiring Android developers\nBy the end of this course, you will be able to build and launch your own modern Android applications using Jetpack Compose and Kotlin.",
      "target_audience": [
        "Anyone who wants to learn modern Android development with hands-on practice, explained in simple Hindi.",
        "Beginners who want to start Android app development, and intermediate or advanced developers who want to switch from XML to modern UI with Jetpack Compose and Kotlin."
      ]
    },
    {
      "title": "The Complete iOS9 Auto Layout Course",
      "url": "https://www.udemy.com/course/the-complete-ios9-auto-layout-course/",
      "bio": "The goal is to raise your AutoLayout confidence levels and design iOS interfaces that use space effectively",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Students will need to have access to a version of Xcode that uses Auto Layout. As per the documentation, this would be version 6 and beyond."
      ],
      "description": "In this course, my friend Ravi and I would like to raise your confidence levels, in that confounding but very important topic : iOS Auto Layout.\nBuilding an App involves 2 key components - Writing Code and designing the user interface\nWhen the app lands up with your audience, its interface design, plays a key role, in its success.\nSo a good grasp of AutoLayout will certainly help you design, better, user interfaces\nInterfaces that deal ,with different screen sizes and orientations.\nInterfaces that adapt to available space, smartly.\nAnd interfaces, that are quick to build, and easy to maintain.\nWe Aim to show you all the key elements of Auto-Layout and you need no programming experience, since we will start from scratch\nWe will begin with an introduction to Xcode and focus, on key elements that come into play when designing the look and feel of an App\nThen with the help of multiple case studies we will build, real world interfaces, and in the process, understand, the role various Xcode elements play.\nEach lesson is complemented with a word cloud of key terms along with concept reinforcing quizzes and reference material\nAt the end of this course you will walk away with much, more confidence.\nAnd lastly, we will continue to keep adding to the course material so that, its always up to date for you, our learner.\nSo, in conclusion, Ravi and I are proud to present this iOS Auto Layout course to you. We hope you will join us on this exciting journey and we look forward to chatting with you in the forum.",
      "target_audience": [
        "The course is structured in a way that makes it suitable for beginners as well as individuals with varied Auto Layout experience. The bottom line is that it covers all the key concepts of Auto Layout. So if you are starting from scratch or want to plug gaps in your Auto layout knowledge, this course is for you."
      ]
    },
    {
      "title": "Concurrency by Example: SwiftUI Projects that Teach You",
      "url": "https://www.udemy.com/course/concurrency-by-example-swiftui-projects-that-teach-you/",
      "bio": "Build Real Apps and Understand Task Groups and Actors in Depth",
      "objectives": [
        "Understand how to use Task, TaskGroup, and structured concurrency in Swift to manage asynchronous work efficiently.",
        "Learn how to use @MainActor and Actor types to safely update UI and manage state across threads.",
        "Build a Quote Loader app that fetches and displays data concurrently, demonstrating real-world async workflows.",
        "Develop an Image Loader app that uses actors for safe caching and concurrent image retrieval.",
        "Apply the MVVM architecture pattern to structure SwiftUI apps for clarity, scalability, and testability.",
        "Understand how to use protocols and dependency injection to write modular, testable SwiftUI code.",
        "Learn how to handle asynchronous sequences and lifecycle management in SwiftUI views.",
        "Gain experience debugging common issues in Swift concurrency, such as race conditions and cancellation.",
        "Explore how to architect apps that remain responsive and performant under real-world data loads.",
        "Build confidence transitioning from UIKit or beginner-level Swift into advanced, production-ready SwiftUI development."
      ],
      "course_content": {
        "Introduction": [
          "What is a Task Group?",
          "Explaining the Quotes App and why we are making it."
        ],
        "Quotes App": [
          "Coding of the Quotes App",
          "What is a Unit Test?",
          "Creating the Unit Test and Mock Service"
        ],
        "Image Gallery App": [
          "Introduction to the Image Gallery App",
          "Coding PexelsImageGallery application",
          "Coding the Unit Test and Debugging the Simulator",
          "Congratulations on Completing the Course!"
        ]
      },
      "requirements": [
        "You should have a basic understanding of Swift syntax, including variables, functions, and control flow such as if and for statements.",
        "You should be comfortable using Xcode to open projects, navigate SwiftUI previews, and run apps in the simulator or on a physical device.",
        "You must have access to a Mac computer with the latest version of Xcode installed to take full advantage of SwiftUI and Swift concurrency features.",
        "You do not need any prior experience with SwiftUI or the MVVM architecture, as both will be thoroughly introduced and explained.",
        "You are not expected to have any background in concurrency or multithreading, since this course is designed to teach you those concepts from the ground up."
      ],
      "description": "Feel like async code is a foreign language? You’re not alone — and you’re not behind.\nIf you’re a self-taught developer or someone just starting out with SwiftUI, chances are you’ve already run into the wall of confusing jargon: async, await, TaskGroup, @Actor, structured concurrency… and tutorials that assume you already understand it all. It’s frustrating. It’s discouraging. And worst of all — it slows you down.\nI built SwiftUI Download Lab to fix that.\nThis course is not a shallow overview or a lecture in disguise. It’s a hands-on, guided learning experience designed to help real beginners like you not just understand, but actually use modern Swift concurrency tools in everyday SwiftUI development.\nWe start at your level — no ego, no assumptions — and grow together. Each lesson is carefully crafted to demystify the abstract concepts and show you how to apply them in real-world scenarios.\nYou’ll work on two complete mini-projects that build real skills:\nProject 1: Quote Loader\nHere, you'll learn what @Actor really is — not in theory, but through a working example. You’ll see how it protects shared data, why it matters in real apps, and how to use it like a pro without having to memorize a whiteboard definition.\nProject 2: PexelsGalleryLoader\nYou'll tap into the power of TaskGroup to perform multiple image downloads in parallel using the Pexels API. We’ll talk through how concurrency works in Swift, why TaskGroup is a game-changer, and how to use it in a way that’s actually understandable.\nBy the end of this course, you’ll know:\nWhat async vs. sync really means (and when to use each)\nHow to avoid common bugs caused by race conditions or blocked threads\nHow to fetch data from APIs and display it in SwiftUI — the right way\nHow to reason through concurrent code like a senior developer\nHow @Actor and TaskGroup fit into your mental model of app architecture\nThis course doesn’t just teach you how to code — it helps you understand why the code works the way it does. And once you understand that, your confidence as a Swift developer goes through the roof.\nThis course is for you if:\nYou’re self-taught or transitioning into iOS development\nYou’ve felt overwhelmed by Swift’s concurrency model\nYou want to build SwiftUI apps with clean, modern async code\nYou want to feel like you're finally “getting it” instead of guessing\nLet’s cut through the confusion — together.\nJoin me in the SwiftUI Download Lab, and let’s turn your uncertainty into clarity, your confusion into confidence, and your curiosity into real skills.\nEnroll now — and start writing SwiftUI async code like you’ve been doing it for years.",
      "target_audience": [
        "Beginner iOS developers who want to understand Swift concurrency through hands-on SwiftUI projects.",
        "UIKit and Storyboard developers looking to transition into SwiftUI and modern async architecture.",
        "Self-taught programmers who struggle with async/await, TaskGroup, and @MainActor in Swift.",
        "Developers new to the MVVM design pattern and interested in writing clean, scalable SwiftUI code.",
        "Intermediate Swift learners who want to solidify their knowledge with real-world apps.",
        "Students or bootcamp graduates looking to deepen their SwiftUI skills with real concurrency tools.",
        "Mobile app freelancers who want to write more maintainable and testable iOS applications.",
        "Developers aiming to prepare for technical interviews that focus on Swift and modern iOS practices.",
        "Engineers from other disciplines moving into iOS who want practical concurrency experience.",
        "Anyone curious about Swift concurrency and ready to build production-quality features with confidence."
      ]
    },
    {
      "title": "Flutter Firebase UI Auth: The Complete Guide",
      "url": "https://www.udemy.com/course/flutter-firebase-ui-auth-the-complete-guide/",
      "bio": "Easily Implement Email, Phone & Social Auth in Flutter.",
      "objectives": [
        "Setting up Firebase and Flutter: Connecting a Flutter project to Firebase, configuring essential dependencies, and preparing the app for authentication.",
        "Implementing Core Authentication Methods: Mastering email/password login, phone authentication, and social logins with Google, Facebook, and Apple.",
        "UI Customization: Transform the default login, registration, and profile screens to reflect your app's unique brand identity.",
        "Avatar and Image Handling: Customize user avatars & profile images. Learn image uploading, cropping, compression, and storage for a polished user experience.",
        "Handling User Data: Storing and retrieving user information using Firestore, and managing user profiles effectively.",
        "Email Verification: Implementing and managing email verification processes to enhance security.",
        "Advanced Techniques: Utilizing providers for state management and implementing global navigation context for a smoother user experience.",
        "Best Practices: Learning industry best practices for secure authentication flows and data management within a Flutter environment."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Create Flutter App and install Firebase packages",
          "Change Flutter Bundle ID and App Name",
          "Connect A Flutter Application to Firebase",
          "Add Sign In Screen and initialize configurations"
        ],
        "Email Authentication and Verification": [
          "Handle Firebase Auth user creation",
          "Handle Sign in and email verification",
          "Email Verification part 2"
        ],
        "Profile Screen Development": [
          "Profile screen Installing packages",
          "Profile Screen, create user image avatar",
          "Profile Screen, image picker handler class",
          "Profile screen, create user model class"
        ],
        "Data Management with Firestore and Provider": [
          "Add Provider class",
          "Get and Save user data from Firestore",
          "File upload handler class",
          "Save user data to Firestore"
        ],
        "App Refinements and Phone Sign-in Preparation": [
          "Landing screen",
          "Show App Icon",
          "Add SHA1 and SHA256 keys",
          "Phone number Sign in method"
        ],
        "Phone Authentication Implementation": [
          "Check if user has data in firestore",
          "phone number sign in part 2",
          "phone number sign in part 3"
        ],
        "Navigation, State, and Social Login Prep": [
          "Add Global navigation context",
          "Configure Google sign In",
          "Add Environment variables file and clientID"
        ],
        "Social Login Implementation (Google & Facebook)": [
          "Sign In with Google",
          "Configure Facebook Sign in part 1",
          "Configure Facebook Sign In part 2",
          "Sign In with Facebook",
          "Email Login bug fix"
        ]
      },
      "requirements": [
        "Just some basic programming experience needed, you will learn almost everything you need to know.",
        "Need a windows PC or Macbook, Flutter installed in your operating system"
      ],
      "description": "Flutter Firebase UI Auth: The Complete Guide - Master Authentication in Flutter with Firebase UI Auth.\nAre you ready to build robust and user-friendly authentication into your Flutter applications? Do you want to save valuable development time and leverage the power of Firebase? Then this is the perfect course for you!\n\"Flutter Firebase UI Auth: The Complete Guide\" provides a comprehensive and hands-on learning experience, guiding you through every step of implementing authentication using the powerful firebase_ui_auth package. Whether you're a beginner or an experienced Flutter developer, this course will empower you to create secure and engaging login experiences for your users.\nWhat you'll learn:\nThis course covers a wide range of essential topics, ensuring you gain a complete understanding of Flutter Firebase UI Auth:\nSetting up Your Environment: We'll start by setting up your Flutter project and integrating the necessary Firebase dependencies. You'll learn how to connect your app to Firebase and configure the project correctly for authentication.\nCore Authentication Methods: Dive into the core authentication methods offered by Firebase UI Auth, including:\nEmail/Password Authentication: Implement secure email and password login and registration, including password reset functionality.\nPhone Authentication: Enable users to log in using their phone numbers via SMS verification.\nSocial Logins (Google, Facebook, Apple): Integrate seamless social login options with popular providers like Google, Facebook, and Apple, simplifying the login process for your users.\nCustomizing the User Interface: Learn how to personalize the default login, registration, and profile screens to match your app's branding. Create a cohesive and professional user experience by tailoring the UI elements to reflect your unique design. This includes:\nCustom Avatars and Profile Images: Empower users with personalized avatars and profile pictures. Master image handling techniques, including uploading, cropping, compressing, and efficient storage of user images.\nManaging User Data with Firestore: Explore how to seamlessly store and retrieve user information using Firestore, a powerful NoSQL database provided by Firebase. Learn how to create user profiles, manage user data, and integrate this data with your authentication flow.\nEmail Verification: Enhance the security of your application by implementing email verification. Learn how to send verification emails, handle verification responses, and manage user access based on verification status.\nAdvanced Techniques for a Smoother User Experience:\nProvider for State Management: Utilize the Provider package for efficient state management, simplifying the handling of user authentication and data across your application.\nGlobal Navigation Context: Implement global navigation context to enhance the navigation flow within your app, providing a more intuitive and seamless user experience.\nBest Practices for Secure Authentication: Throughout the course, we'll emphasize industry best practices for secure authentication flows and data management, ensuring your app is protected against potential vulnerabilities.\nWhy choose this course?\nHands-on Learning: The course features practical, hands-on exercises and real-world examples, solidifying your understanding of the concepts.\nClear and Concise Instruction: The content is presented in a clear and concise manner, making it easy to follow along, regardless of your experience level.\nComprehensive Coverage: The course covers all aspects of Flutter Firebase UI Auth, from basic setup to advanced customization and best practices.\nReal-world Application: The skills you learn in this course can be directly applied to your own Flutter projects, enabling you to build professional and secure applications.\nOngoing Support: Benefit from ongoing support and access to updates, ensuring you stay up-to-date with the latest best practices and changes in the Firebase ecosystem.\nBy the end of this course, you will be able to confidently:\nImplement various authentication methods in your Flutter applications using Firebase UI Auth.\nCustomize the user interface of login, registration, and profile screens to match your app's branding.\nEfficiently manage user data using Firestore.\nImplement email verification for enhanced security.\nUtilize advanced techniques like Provider and global navigation context to improve the user experience.\nApply industry best practices for secure authentication and data management.\nEnroll now and take your Flutter development skills to the next level! Start building secure and engaging authentication experiences for your users today!",
      "target_audience": [
        "Beginner or advanced Developer"
      ]
    },
    {
      "title": "600+ Android Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/android-interview-questions-test/",
      "bio": "Android Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Android Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to \"Master Android Development: Ultimate Interview Practice Tests,\" your comprehensive guide to acing Android developer interviews. This course is meticulously designed to provide you with in-depth knowledge and hands-on practice through a series of targeted practice tests. Whether you're a beginner aspiring to start a career in Android development or an experienced developer looking to brush up on your skills, this course offers invaluable resources to help you succeed.\nAndroid Basics\nActivity Lifecycle: Dive deep into the Android Activity lifecycle, understanding how to manage state changes and preserve user data.\nIntents and Intent Filters: Master the communication framework within Android apps, including explicit and implicit intents.\nUser Interface Components: Learn the building blocks of Android UIs, from buttons to text views, and how to effectively lay out your interfaces.\nAndroid Manifest: Uncover the essentials of the Android Manifest file, understanding its role in app configuration and permissions.\nData Storage Options: Explore various data storage options in Android, including shared preferences, internal and external storage.\nSupporting Different Screen Sizes: Learn techniques to ensure your app looks great on all devices, regardless of screen size or density.\nAdvanced Android Concepts\nFragments and their Lifecycle: Gain expertise in using Fragments, crucial for adaptable Android UIs, and understand their lifecycle.\nAndroid Services: Delve into the world of background processing with Services.\nBroadcast Receivers: Learn how apps can communicate with each other using broadcast receivers.\nContent Providers: Understand how to share data between different Android applications securely.\nAsynchronous Processing in Android: Master asynchronous processing techniques, crucial for smooth user experiences.\nAndroid Networking: Get familiar with networking in Android, covering APIs and libraries for web communication.\nAndroid User Interface\nLayouts and View Groups: Explore the various layout managers and how to create dynamic and responsive UIs.\nCustom Views: Learn to create bespoke UI components tailored to specific app requirements.\nAnimation and Graphics: Add life to your apps with animations and custom graphics.\nMenus and User Navigation: Understand how to create intuitive navigation and menus for a seamless user experience.\nDialogs and Toasts: Master the art of feedback and alerts with dialogs and toasts.\nAdapters and ViewHolders: Delve into adapters for efficient data presentation in lists and grids.\nAndroid System Components\nUnderstanding Context: Unravel the concept of Context, its uses, and best practices.\nManaging System Resources: Learn efficient management of system resources to build responsive applications.\nAndroid Application Components: Get a comprehensive understanding of the building blocks of Android apps.\nAndroid Application Threads: Understand threading in Android to maintain a responsive UI.\nIntent Resolution: Master how Android resolves intents to connect components.\nHandling Permissions: Learn best practices for managing app permissions in line with user privacy and security.\nAndroid Testing and Debugging\nAndroid Testing Framework: Familiarize yourself with the Android testing landscape, including unit and integration testing.\nUnit Testing in Android: Learn the importance and techniques of unit testing in Android applications.\nUI Testing with Espresso: Dive into UI testing with Espresso for robust, maintainable, and reliable UI tests.\nDebugging Android Applications: Master debugging techniques to efficiently find and fix issues in your apps.\nPerformance Optimization: Learn strategies for optimizing app performance and ensuring smooth operation.\nMemory Management in Android: Understand memory management to prevent leaks and optimize app performance.\nAdvanced Topics and Best Practices\nDependency Injection in Android: Learn about dependency injection and how it enhances testability and modularity in Android apps.\nMaterial Design Principles: Embrace Material Design principles for aesthetically pleasing and functional UIs.\nAndroid Architecture Components: Get up to speed with the latest Android Architecture Components for robust app design.\nReactive Programming with RxJava: Explore the power of reactive programming in Android with RxJava.\nSecuring Android Applications: Understand best practices for securing Android applications against common threats.\nLeveraging Kotlin in Android Development: Learn how Kotlin can make your Android development faster, safer, and more enjoyable.\nContinual Updates for Ever-Evolving Android Development:\nIn the dynamic field of Android development, staying updated with the latest trends, tools, and best practices is crucial. That's why our course, \"Master Android Development: Ultimate Interview Practice Tests,\" is regularly updated. We ensure that our questions reflect the most current standards and developments in the Android ecosystem. This commitment to continuous improvement means you're always preparing with relevant, up-to-date material.\nSample Practice Test Questions:\nQuestion: What is the primary function of the Android Manifest file?\nA) To list all the activities in the application\nB) To define the app's layout\nC) To declare permissions and application requirements\nD) To manage the app's data storage\nAnswer: C) To declare permissions and application requirements\nExplanation: The Android Manifest file is a crucial component in Android applications. It performs several key roles, such as declaring the app's package name, which uniquely identifies the app on the device and in the Google Play Store. It also specifies the app's entry points and components, such as activities, services, broadcast receivers, and content providers. Most importantly, it declares the permissions the app requires, such as internet access or access to the device's camera. It also lists the Android API levels that are compatible with the app, ensuring that users with devices running incompatible versions of Android cannot download the app.\nQuestion: What is the significance of the 'onCreate()' method in the Android Activity lifecycle?\nA) It is called when the app is updating UI elements.\nB) It initializes the activity and loads UI components.\nC) It saves the app's persistent state.\nD) It manages network connections.\nAnswer: B) It initializes the activity and loads UI components.\nExplanation: The 'onCreate()' method is the first step in the lifecycle of an activity. It's called when the activity is starting and is used to perform one-time initialization, such as setting up the user interface by inflating layouts and initializing class-scope variables. This method provides a Bundle parameter if the activity is being re-initialized after previously being shut down, allowing the activity to restore any saved state, such as UI elements and member variables. Understanding 'onCreate()' is crucial for properly setting up an activity and ensuring a smooth user experience.\nQuestion: How does Android handle different screen sizes and densities?\nA) By restricting app installation on certain devices\nB) Using a single, universal layout\nC) Through responsive layouts and resource qualifiers\nD) Automatically scaling down high-resolution assets\nAnswer: C) Through responsive layouts and resource qualifiers\nExplanation: Android provides a flexible framework for adapting app layouts to different screen sizes and densities. Developers can create different layout files for various screen sizes by using size-specific resource directories (like layout-small, layout-large). Additionally, Android supports density-independent pixels (dp) and scale-independent pixels (sp) for defining UI elements, ensuring that they appear similar across devices with different screen densities. Resource qualifiers allow for the customization of assets like images, ensuring they are optimized for various screen resolutions. This approach enables Android apps to provide an optimal user experience across a wide range of devices.\nQuestion: What role do Broadcast Receivers play in Android apps?\nA) They are used to persist data in a database.\nB) They respond to system-wide broadcast announcements.\nC) They handle layout inflation.\nD) They manage the app's background services.\nAnswer: B) They respond to system-wide broadcast announcements.\nExplanation: Broadcast Receivers in Android are used to respond to broadcast messages from the system or other applications. These messages can be system-wide events (like boot completed, battery low) or application-specific messages. For example, an app might broadcast a custom intent when new data is available for other components to use. Broadcast Receivers are registered either statically in the Android Manifest or dynamically in the code. They enable apps to react to events even when the app is not actively running, making them a powerful feature for creating responsive and context-aware applications.\nQuestion: What is Dependency Injection and how is it implemented in Android?\nA) A method to increase app size\nB) A technique to reduce the modularity of an app\nC) A design pattern to enhance testability and maintenance\nD) A process to manage memory in Android apps\nAnswer: C) A design pattern to enhance testability and maintenance\nExplanation: Dependency Injection (DI) is a design pattern that improves the modularity and testability of Android applications. It involves providing objects that an object needs (its dependencies) rather than having it construct them itself. This separation of concerns makes the code more modular, easier to test, and maintain. In Android, DI can be implemented manually or using frameworks like Dagger or Hilt. These frameworks handle the creation and lifecycle of dependencies, simplifying the development process. By using DI, developers can create loosely coupled and scalable Android applications.\nEnroll Now: Join \"Master Android Development: Ultimate Interview Practice Tests\" today to boost your confidence and competence for your next Android developer interview. This course is your key to unlocking the doors of opportunity in the ever-evolving world of Android development.",
      "target_audience": [
        "Aspiring Android Developers: If you are starting your journey in the world of Android app development and aiming to build a career in this field, this course will equip you with the foundational knowledge and practical skills needed. It's perfect for those who have a basic understanding of programming and are eager to dive into the specifics of Android development.",
        "Experienced Android Developers: For developers who already have experience in Android app development but are looking to refresh and update their knowledge with the latest practices and technologies, this course serves as an excellent resource. It's also ideal for experienced developers preparing for job interviews who need to brush up on their skills and knowledge.",
        "Computer Science Students: Students pursuing degrees in computer science or related fields who are interested in mobile application development will find this course particularly beneficial. It provides a practical extension to theoretical studies, offering hands-on experience with real-world scenarios and challenges in Android development.",
        "Career Changers: Individuals looking to transition into a career in tech, specifically in mobile app development, will find this course a valuable stepping stone. It covers the essentials and advances to more complex topics, providing a comprehensive overview of what it takes to become a successful Android developer.",
        "Freelance Mobile App Developers: Freelancers who want to expand their service offerings by including Android app development will benefit from this course. It will help in honing their skills, staying updated with the latest trends, and preparing for technical interviews with clients or project bids.",
        "Tech Enthusiasts: Even if you're not planning a career in Android development but have a keen interest in understanding how Android apps are built and function, this course offers an insightful and detailed exploration of Android development practices."
      ]
    },
    {
      "title": "Android App Development with Kotlin & Jetpack Compose",
      "url": "https://www.udemy.com/course/android-app-development-with-kotlin-jetpack-compose/",
      "bio": "Master building modern Android apps from scratch using Kotlin and the declarative power of Jetpack Compose.",
      "objectives": [
        "Master Kotlin fundamentals including variables, functions, classes, and collections.",
        "Build real-world Android applications from scratch using clean architecture.",
        "Design beautiful UIs using Jetpack Compose and responsive layouts.",
        "Manage UI state effectively using State, MutableState, and StateFlow.",
        "Implement asynchronous programming with Kotlin Coroutines and Flow.",
        "Use Room Database for local data persistence and observe changes in real-time.",
        "Apply dependency injection using Hilt to manage app components cleanly.",
        "Navigate between screens using Jetpack Navigation and SafeArgs.",
        "Structure your code using MVVM (Model-View-ViewModel) architecture.",
        "Handle user input and forms using Compose and ViewModel state management."
      ],
      "course_content": {
        "Kotlin fundamentals": [
          "Section Goals",
          "Why use Kotlin",
          "Data Types Overview",
          "Data Types in Detail",
          "val vs var",
          "Functions & when Expression",
          "Lists in Kotlin",
          "Null Safety",
          "Classes",
          "Classes and Objects",
          "init, Getters and Setters",
          "Inheritance Basics",
          "Inheritance Continued",
          "Abstract Classes",
          "Abstract classes continued",
          "Merging Lists with Polymorphism in Kotlin",
          "Interfaces",
          "Interfaces continued",
          "Comparing Objects in Kotlin",
          "equals() and hashcode()",
          "Data Classes",
          "Intro to Lambdas",
          "Lambdas as Function Parameters and map",
          "Lambdas with filter"
        ],
        "Jetpack Compose Basics": [
          "Section Goals",
          "Creating a new project in Android Studio",
          "Project Folder Structure and MainActivity Overview",
          "Introduction to Compose",
          "Previews and tooling",
          "Components overview",
          "Arranging Text and Components Inside a Column",
          "Styling Text",
          "Recomposition Explained",
          "Managing State in TextField with Compose",
          "Recomposition and UI Updates with TextField",
          "Designing a Pet Card Layout: Part 1",
          "Designing a Pet Card Layout: Part 2",
          "Designing the Main Layout for the Pets App - Part 1",
          "Designing the Main Layout for the Pets App – Part 2",
          "Finalizing the Layout and UI for the Pets App – Part 3"
        ],
        "Advanced Layouts: Modal Drawer and Lazy Lists": [
          "Inside This Section",
          "Drawer UI with ModalDrawer - Part 1",
          "Drawer UI with ModalDrawer- Part 2",
          "Drawer UI with ModalDrawer - Part 3",
          "Building Dynamic Lists with LazyColumn - 1",
          "Building Dynamic Lists with LazyColumn - 2"
        ],
        "Getting Started with Coroutines and flows in Kotlin": [
          "Learning Objectives",
          "Why Do We Need Coroutines?",
          "Understanding suspend Functions in Kotlin",
          "A Quick Introduction to Kotlin Flows"
        ],
        "Building the Focus Notes App – A Real Project": [
          "Section Goal",
          "Overview of the Focus Notes App",
          "Thinking in Compose",
          "Designing the Top App Bar UI",
          "Creating the Note Item Component",
          "Building the Notes List Screen",
          "Composing the Complete Notes Screen UI",
          "Designing the Drawer Header",
          "Building the Drawer Body with Options",
          "Final touches to the Drawer Layout",
          "Mastering Modifiers for Layout Styling",
          "Setting up Navigation Basics",
          "Connecting Screens with Navigation"
        ],
        "Room Database and Local Storage": [
          "Section Goal",
          "Why we use Room for Local Storage",
          "Setting Up Room Entities and DAO – Part 1",
          "Room Best Practices: Let ViewModel Handle the DAO",
          "Completing the Room Setup"
        ],
        "Architecture and ViewModels": [
          "Section Goals",
          "Clean Architecture in Android - Part 1",
          "Separating Concerns in Your App – Part 2",
          "Separating Concerns in Your App – Part 3",
          "What is UDF (Unidirectional Data Flow)?",
          "Implementing the DAO layer in the App",
          "Building the Notes Repository Interface"
        ],
        "Dependency Injection with Hilt": [
          "Section Goals",
          "Introduction to Hilt for DI",
          "Advanced Hilt Setup - Part 1",
          "Advanced Hilt Setup - Part 2"
        ],
        "Networking with Retrofit": [
          "Section Goals",
          "Retrofit Basics for API Integration",
          "Working with Retrofit and Data Classes"
        ],
        "ViewModel & State Handling": [
          "Section Goals",
          "Creating a State Class for the Notes Screen",
          "Using StateFlow to Expose State from the ViewModel",
          "Handling UI Events Inside the ViewModel",
          "Loading Notes from the Network into the ViewModel",
          "Understanding State Hoisting in Compose",
          "Focus Notes App – Final Demo and Behind the Scenes",
          "Conclusion"
        ]
      },
      "requirements": [
        "No prior Android development experience is required — this course starts from the basics.",
        "Basic programming knowledge (in any language) is helpful but not mandatory.",
        "A computer (Windows, macOS, or Linux) capable of running Android Studio.",
        "A stable internet connection to download tools and follow along with lessons.",
        "Curiosity and willingness to learn by building real Android apps."
      ],
      "description": "Here's a comprehensive course description for \"Android App Development with Kotlin & Jetpack Compose,\" incorporating best practices for Udemy:\n\n\nAndroid App Development with Kotlin & Jetpack Compose\n\n\nSubtitle Option 1: \"Master Mobile Development with Kotlin & Jetpack Compose: Build stunning UIs, manage State, and integrate Data.\"\nSubtitle Option 2: \"Learn Android Programming with Kotlin and Jetpack Compose: From UI Layouts to Navigation and Asynchronous Operations.\"\n\n\nCourse Description:\n\n\nWelcome to the ultimate guide to modern Android App Development! In this comprehensive course, you will learn how to build powerful, beautiful, and high-performance Android applications using the latest and most in-demand technologies: Kotlin and Jetpack Compose.\nAndroid development has evolved rapidly, and with Kotlin as the preferred language and Jetpack Compose as the revolutionary declarative UI toolkit, the landscape for building mobile apps is more efficient and enjoyable than ever before. This course is designed to take you from a complete beginner to a confident Android developer, equipped with the skills to create real-world applications.\nWe'll start with the fundamentals of Kotlin, ensuring you have a strong programming foundation. Then, we'll dive deep into Jetpack Compose, understanding its declarative nature and how it simplifies UI development. You'll learn to build complex user interfaces with less code, making your apps more maintainable and scalable. Through practical examples and hands-on projects, you'll gain a solid understanding of the entire Android app development lifecycle.\nBy the end of this course, you will be able to:\nMaster Kotlin Fundamentals: Understand variables, data types, control flow, functions, classes, objects, and more, forming a strong foundation for Android development.\nBuild Stunning User Interfaces with Jetpack Compose: Design responsive and aesthetically pleasing UIs using Composables, Modifiers, and Material Design principles.\nImplement Robust State Management: Learn how to effectively manage data and state within your Compose applications to create dynamic and interactive user experiences.\nHandle Navigation: Implement seamless navigation within your multi-screen Android apps using the Jetpack Compose Navigation component.\nIntegrate Data (APIs & Persistence): Learn to fetch data from remote APIs (e.g., using Retrofit) and persist local data using Room Database or DataStore.\nPerform Asynchronous Operations: Understand and implement Kotlin Coroutines for efficient background processing, ensuring your apps remain responsive.\nDevelop Clean Architecture Principles: Get an introduction to structuring your Android projects with best practices like MVVM (Model-View-ViewModel) for maintainability and testability.\nWhy learn Kotlin & Jetpack Compose?\nModern & Preferred: Kotlin is officially the preferred language for Android, and Jetpack Compose is the modern, declarative UI toolkit recommended by Google.\nIncreased Productivity: Write less code, achieve more, and develop features faster.\nBetter Performance: Create highly performant and fluid user interfaces.\nFuture-Proof Your Skills: Stay at the forefront of Android development and be ready for the industry's demands.\nWho is this course for?\nAbsolute beginners with no prior programming experience who want to learn Android app development.\nDevelopers from other programming languages (e.g., Java, Python, JavaScript) looking to transition into Android.\nExisting Android developers who want to migrate their skills to Kotlin and Jetpack Compose.\nAnyone aspiring to build their own mobile applications for Android devices.\nAre there any course prerequisites?\nNo prior Android development experience is required.\nNo prior Kotlin experience is required. We start from scratch!\nA computer (Windows, macOS, or Linux) capable of running Android Studio.\nAn internet connection to download software and course materials.\nJoin us on this exciting journey and start building amazing Android applications with Kotlin and Jetpack Compose today!",
      "target_audience": [
        "Beginners who want to start building Android apps using Kotlin and Jetpack Compose",
        "Self-taught programmers looking to strengthen their Android development skills",
        "Students or professionals transitioning into mobile app development",
        "Developers familiar with Java who want to switch to Kotlin and modern Android practices",
        "Anyone who wants to learn by building real-world apps using Room, Coroutines, and MVVM",
        "Tech enthusiasts curious about how Android apps are built and structured from scratch"
      ]
    },
    {
      "title": "Java Programming for beginners",
      "url": "https://www.udemy.com/course/java-programming-for-beginners-x/",
      "bio": "\"Learn Java from Scratch: Build Real-World Applications\"",
      "objectives": [
        "Introduction to JAVA",
        "Fundamentals of JAVA",
        "Error and Exception handling",
        "Object-Oriented Programming (OOP) Fundamentals"
      ],
      "course_content": {
        "Introduction": [
          "Introduction of java",
          "Discuss about variables, data types and java operators",
          "Setting up environment of java",
          "1.4install a extenction packs for java",
          "write a first program in vs code"
        ],
        "Fundamentals of java": [
          "variables in java",
          "how to initialize variables in java",
          "datatypes in java",
          "operators in java",
          "examples of operators in java"
        ],
        "java": [
          "3.1",
          "3.2",
          "3.3",
          "3.4",
          "3.5"
        ],
        "java oops concepts": [
          "oops in java",
          "types of oops concept in java",
          "explain the java objects",
          "file handling in java"
        ],
        "explain the arrays concepts in java": [
          "arrays in java",
          "explain the concepts of arrays",
          "bank chatting app project in java"
        ]
      },
      "requirements": [
        "Basic programming knowledge and familiarity with fundamental concepts such as variables, loops, and conditionals."
      ],
      "description": "Welcome to \"Java Programming for beginners\"!\n\n\nIn this comprehensive course, you will learn everything you need to know to become proficient in Java, one of the most popular and powerful programming languages. Whether you're starting from scratch or looking to enhance your existing skills, this course will guide you through the core concepts and advanced techniques of Java programming.\n\n\nWhat You'll Learn:\nFundamentals of Java: Understand variables, data types, operators, control structures, and syntax.\nObject-Oriented Programming (OOP): classes, objects, inheritance, polymorphism, encapsulation, and abstraction.\nAdvanced Java Concepts: Dive into exception handling, file I/O, collections framework.\nWeb Development: Explore the basics of building web applications with servlets and JavaServer Pages (JSP).\nWhy Take This Course?\nHands-On Projects: Apply your knowledge through practical projects and real-world examples.\nExpert Instruction: Learn from experienced instructors who provide clear, step-by-step guidance.\nComprehensive Curriculum: Gain a deep understanding of both basic and advanced Java topics.\nCareer Advancement: Equip yourself with skills that are in high demand in the tech industry.\n\n\nBy the end of this course, you will have the confidence and skills to develop robust, efficient Java applications. Join us and take the next step in your programming career!\n\n\nHappy coding and explore the world of JAVA!",
      "target_audience": [
        "This course is for aspiring programmers and developers who want to learn Java and build robust, object-oriented applications."
      ]
    },
    {
      "title": "Ionic Framework with VueJS: Build a CRUD App Using SQLite",
      "url": "https://www.udemy.com/course/ionic-framework-with-vuejs-build-a-crud-app-using-sqlite/",
      "bio": "Get you VueJS App running on IOS and Android Using Capacitor & Sqlite Plugin",
      "objectives": [
        "Using Ionic & Capacitor to Deploy VueJS Apps to Native Devices",
        "Working With SQLite Database",
        "Deploying VueJS App to Mobile Device with Capacitor",
        "Anyone who wants to create a cross platform mobile application with Ionic, Capacitor and SQLite"
      ],
      "course_content": {
        "The Basic of SQLite CRUD App Using Ionic VueJS": [
          "Introduction",
          "Install Plugin, Run IOS Simulator",
          "Create First Table In SQLite",
          "Create First Database Insert",
          "Create a Input Page For Adding Contacts",
          "Add Query To Create Contact and Reload Data",
          "IonList and Delete Contact",
          "Editing And Existing Contact",
          "Android Configuration - Video Overview",
          "Android Configuration Code"
        ],
        "Ionic UI Component Extras: Adding More Polish": [
          "Adding IonAlert Instead of Browser Alert",
          "Adding IonToast for Confirmation of Changes",
          "Adding IonAlert to Confirm/Prompt Before Delete"
        ],
        "Refactoring the SQLite Functionaliy Into A Service": [
          "Refactoring the Code : Database Setup And Initialization",
          "Refactoring The Code: All the CRUD Functions",
          "Android Configuration - Check Build"
        ],
        "Resources": [
          "Source Code - 1",
          "Source Code - 2 Ionic UI Component Extras",
          "Source Code - 3 SQLite DataService Refactor Completed"
        ]
      },
      "requirements": [
        "You should have NodeJS and the Ionic CLI installed",
        "You should have a basic understanding of VueJS",
        "Android Studio or XCode Installed"
      ],
      "description": "The new Ionic Framework VueJS Web Components are a great way to leverage your javascript skills with VueJS to build professional looking Mobile Applications and PWAs efficiently.\n\n\nThis course, including the final source code, is to get you prepped for the more advanced course that I have provided here on the Udemy platform. We are not expecting you to have a deep knowledge of Vue3 and Ionic Framework, but if you get stuck, don't worry, there is great documentation provided on the Ionic Framework Website\n\n\nCreate a CRUD Application with Ionic VueJS and Capacitor SQLite Plugin\nCreate the project and get the basic structure created\nCapture data using ionic input elements\nLearn CRUD actions ( Create, Delete ) for the data\nCreate an IonList to view the content\nUse IonItem, IonLabel, and IonInput to manage forms\nUse Ionic Lifecycle Methods\nUse Vue Provide Inject to access the database\nLearn to use Capacitor SQLite Plugin to query and update the database\nTest and run application on native devices using Ionic Framework Capacitor  live reload\nAaron Saunders is the CEO Clearly Innovative Inc web and mobile development firm I started 10 years ago. I have been working in the software development industry as a development, manager, and executive for over thirty years. I have taught at the university level and run an apprenticeship program within my company\nAt Clearly Innovative Inc, we have built solutions for large and small business and have been using Ionic Framework since version 1",
      "target_audience": [
        "Anyone who wants to create a cross platform solutions with Ionic, VueJS and SQLite"
      ]
    },
    {
      "title": "Intermediate Android: Jump Scare App Clone In Kotlin",
      "url": "https://www.udemy.com/course/shock-app-clone-in-kotlin/",
      "bio": "Learn the techniques used in the prank app Shock",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "How to use this course",
          "Materials"
        ],
        "Building Shock Clone": [
          "Setup",
          "Invisible Scare Activity",
          "Main Activity Setup",
          "Notification and Popups",
          "ImageStorer",
          "AudioStorer",
          "Image Downloader",
          "Update Ui Broadcast",
          "AudioPickerDialog",
          "ImagePickerDialogFragment",
          "Tying the Bow"
        ]
      },
      "requirements": [
        "Working PC or Mac that can run Android Studio",
        "Must be Android Developer(Kotlin)",
        "Must not be a beginner. This course moves fast."
      ],
      "description": "Note: This is not a beginner course. This course for people comfortable programming Android Apps that want to explore new possibilities.\nIn this course we will be learning how TempestStorm pulled off some of the techniques in the prank app Shock. This course walks you through the technique used. After exploring the prank screen we build out the rest of the app. This app covers downloading images from web, saving objects into Shared Preferences. Using LocalBroadcastManager to inform parts of the app to update itself. MediaPlayer is used to play scary sounds. TextToSpeech adds a unique touch to this app. This is the Kotlin version of this course. If you know Java, there is a Java version of this course.\nPlease Download and rate app, it helps.",
      "target_audience": [
        "Android Developers who know kotlin",
        "People wanting to expanding their Android knowledge and creativity",
        "People who like fun unique apps"
      ]
    },
    {
      "title": "Login Sign up UI from Scratch with Flutter",
      "url": "https://www.udemy.com/course/login-sign-up-ui-from-scratch-with-flutter/",
      "bio": "Build an awesome login sign up ui all from scratch with flutter",
      "objectives": [],
      "course_content": {
        "UI": [
          "Creating the Initial Widgets",
          "Adding Right Slide Animation and the initial part of Login Sign Up switcher",
          "Adding some widgets in Login Sign Up switcher screen",
          "Adding Left Slide Animation and Completing the Login sign up switcher screen",
          "Working on the Sign up screen",
          "Working on the Login screen"
        ],
        "Updates": [
          "Updates"
        ]
      },
      "requirements": [
        "Basic object oriented programming knowledge",
        "Basic flutter knowledge"
      ],
      "description": "Welcome to the Login Sign up UI from Scratch course with Flutter, your ultimate guide for developing a UI project with flutter.\nGoogle’s interface (UI) design tool, Flutter, has brought with it a raft of new perspectives with regards to application development. The Flutter toolkit has opened a gateway to allow for a multitude of UI/UX and, by using its own source code, evading platform limitations. All good so far!\nThroughout this course, you will be learning various essential things that are mostly used by a flutter developer when he/she is working at some firm.\nThis course will help you learn the different components which are involved in making a UI and we will be working on Login Sign UI with Flutter. In this app, I have used the basic flutter architecture to work on the UI and implement various different things in it. If you are unaware of the advanced file architecture in flutter then you can check my course Flutter 101, where I have explained various available flutter architectures.\nIn this course, you will learn everything in detail. After completing this course you will be able to work on UI's for various different apps and can develop them all by yourself from scratch.\n\n\nThis UI app/project will also help you enhance your CV.\n\n\nHappy Learning!!",
      "target_audience": [
        "Begineers",
        "Flutter developers",
        "Intermediate",
        "flutter ui developers",
        "flutter begineer developer",
        "intermediate flutter developer"
      ]
    },
    {
      "title": "Disney Plus Clone in SwiftUI with Remote Url Video Player",
      "url": "https://www.udemy.com/course/disney-plus-clone-in-swiftui-with-remote-url-video-player/",
      "bio": "Learn to build Disney Plus Clone app using SwiftUI and Learn about iOS app development",
      "objectives": [
        "SwiftUI",
        "Real App Clone in SwiftUI and iOS",
        "Video Playing Apps",
        "Building Custom Components and Views to Build Complex Apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "SwiftUI Package Dependency",
          "Disney Plus Animated Splash View"
        ],
        "Custom Tabbar in SwiftUI": [
          "TabView Router",
          "Tab Bar Icon View",
          "Custom Tab Bar"
        ],
        "Resources": [
          "Resource"
        ],
        "App Models": [
          "Color Constants",
          "Movie Model",
          "Asset Images",
          "Movie Section Model",
          "Channel Model",
          "Search Category Model",
          "Profile Model"
        ],
        "Shared Components": [
          "Gradient Background Component",
          "Logo Component",
          "Channel Component",
          "Movie Section Component",
          "Square Button Component",
          "Profile Picture Component",
          "Carousel Component"
        ],
        "App Views": [
          "Home View",
          "Search View",
          "Download View",
          "Profile View",
          "Movie Detail View",
          "Video Player View"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Knowledge of Xcode",
        "Knowledge of Programming"
      ],
      "description": "SwiftUI makes app development fun and easy. There are so many things SwiftUI makes easy to do on UI side so you can focus on the real logic while building the apps.\n\n\nIn this video course, we will be building Disney Plus Clone app while learning about SwiftUI. I will explain about the concepts along the way while building a practical app. You will receive suggestions as how to take app to the advance level along the way as well.\n\n\nWhile the main focus of this course is to teach you important concepts of SwiftUI and iOS development, we will also make sure to learn best practices along the way as well.\n\n\nYou will be building custom components for the app which you will later put together to build out complex views.\nYou will learn to build app models and will divide complex app business logic so your app can work like a well oiled machine.\nYou will learn to build custom tab bars and manage states of tabs upon selection, you will build our search filter functionality, stack, lazyVstacks, lazyGrids, view modifiers, video players and much more.\n\n\nYou will also build out a video player which will be capable of playing videos from a remote URL.\n\n\nSo join me into this course and let's build out Disney Plus App Clone together.",
      "target_audience": [
        "Developers who wants to build complete clone of app, in this case Disney Plus Clone app"
      ]
    },
    {
      "title": "Jetpack Compose & Kotlin for Modern Android App Development",
      "url": "https://www.udemy.com/course/jetpack-compose-kotlin-for-modern-android-app-development/",
      "bio": "Kotlin & Android Jetpack Compose | Learn Android App Development Kotlin with Jetpack Compose to build native Android UI",
      "objectives": [
        "Learn Android App Development with Jetpack Compose",
        "Jetpack Compose with Android Studio",
        "App Design with Material3 Library",
        "Jetpack Compose with new Material 3",
        "Learn the latest version of Android",
        "Android Studio",
        "Develop 2 Big Android Jetpack Compose Project and make more than 20 exercises",
        "Learn Publishing Android App on Google Play",
        "Submit your apps to Google Play",
        "You will be able to develop modern Android apps",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is popular for both Android developers and Java developers.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Firebase is a platform developed by Google for creating mobile and web applications. It was originally an independent company founded in 2011.",
        "Kotlin Programming Language",
        "What is Kotlin",
        "Kotlin Android Fundamentals",
        "Java Development Kit - JDK",
        "Android Studio",
        "Kotlin Data Types",
        "Variables in Android Kotlin",
        "Type Conversions in kotlin for android",
        "Arrays in The complete Android Kotlin Developer Course",
        "Operators in android app development kotlin",
        "Control Flow Statements",
        "Loops in Android App Development",
        "All concepts of Object-Oriented Programming",
        "kotlin java",
        "Kotlin is popular for both Android developers and Java developers.",
        "Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language.",
        "Kotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices",
        "Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.",
        "android studio kotlin",
        "kotlin for java developers",
        "java kotlin"
      ],
      "course_content": {
        "Introduction to Kotlin Programming For Android Developers": [
          "What will you learn in this Kotlin Course?",
          "Why Jetpack Compose?",
          "Kotlin Overview",
          "Some Information about Android Ecosystem",
          "Basic Android App Development Programming Terms",
          "Project Files",
          "FAQ about Kotlin For Android Development: Learn Kotlin From Scratch",
          "Quiz"
        ],
        "Environment Setup in Android Studio Kotlin": [
          "Installing Java on Windows",
          "Installing Java on Mac",
          "Installing Android Studio - Part 1",
          "Installing Android Studio - Part 2",
          "First Project in Android Studio",
          "Android Studio Interface",
          "Quiz"
        ],
        "Fundamentals of Kotlin": [
          "First Kotlin Program",
          "Variables in Kotlin",
          "Data Types in Android Kotlin",
          "Type Conversions",
          "String Data Types",
          "Arrays in android app (kotlin)",
          "ArrayList",
          "Set",
          "Map",
          "Quiz"
        ],
        "Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Unary Operators",
          "Equality and Relational Operators in ktln",
          "Conditional Operators in kotlin",
          "Operator Precedence in Kotlin",
          "The “rangeTo()” Function and “in” operator",
          "Console Input",
          "Quiz"
        ],
        "Control Flow Statements in Kotlin": [
          "If-Else Statement",
          "If-Else - If Ladder Statement, Nested If Statement",
          "Kotlin: When Statement",
          "Quiz"
        ],
        "Loops": [
          "Kotlin: For and For Each Loops",
          "Kotlin: While and Infinite Loop",
          "Kotlin: Do-While Loop",
          "Quiz"
        ],
        "Functions": [
          "Kotlin: Functions",
          "Types of Functions",
          "Quiz"
        ],
        "Kotlin: Object Oriented Programming (OOP)": [
          "Object and Class in Kotlin",
          "Access (Visibility) Modifiers",
          "Naming Convention",
          "Constructor - Part 1",
          "Constructor - Part 2",
          "Encapsulation",
          "Inheritance",
          "Function Overriding",
          "Abstract Classes",
          "Interfaces",
          "Quiz",
          "Quiz"
        ],
        "Introduction to Android App Development with Jetpack Compose": [
          "Installing Android Virtual Device (AVD - Emulator)",
          "Enabling Virtualization (VT-x or AMD-V, SVM) in BIOS",
          "General Information About Gradle Build System",
          "Introduction to Manifest File",
          "Introduction to resources",
          "Project Files",
          "FAQ About Android App Development with Kotlin",
          "Quiz"
        ],
        "Components in Jetpack Compose": [
          "Layouts in Android Jetpack Compose (Column - Row - Box)",
          "Arrangements and Alignments",
          "Buttons",
          "TextField",
          "Image",
          "CheckBox",
          "Radio Buttons",
          "Switch",
          "Dropdown Menu",
          "Quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required for Android Development",
        "No Android coding knowledge required!",
        "We preferred Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "Basic knowledge of Kotlin is required.",
        "Desire to learn Android Application Development",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to \"Jetpack Compose & Kotlin for Modern Android App Development\" course.\nKotlin & Android Jetpack Compose | Learn Android App Development Kotlin with Jetpack Compose to build native Android UI\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more. jetpack compose, kotlin, jetpack, compose, android, android compose, kotlin jetpack compose, android jetpack compose, android jetpack, android development, android app development, android studio\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android and jetpack compose?\nDo you want to learn android app development from Scratch with Jetpack Compose?\nDo you want to learn android development from Scratch with Jetpack Compose?\nDo you want to be an android studio master?\nDo you want to build your first android app with Jetpack Compose?\nIf your answer is “yes”, you are at the right place!\n\nI really like the approach of this course about the Android app. In this course, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learning android application development with Jetpack Compose.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\n\nJetpack Compose is Android’s recommended modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\n\nChances are, you’ve heard of Android many times, and Do u want to android developer? You may even have an Android smartphone, app android tablet, watch, or TV. But what is Android? Android is a mobile operating system (OS) that was designed and developed by Google. The Android OS is Linux kernel-based. So, what’s “Linux kernel,” and why is that such an essential detail about Android Development?\nIn a nutshell, Linux kernel is an OS, well, sort of — it’s partially an OS. More like a small part of an OS, but an important one. The Linux kernel is the layer responsible for interfacing with the device’s hardware and managing the device’s CPU and memory. The Android OS is Linux kernel-based because the Linux kernel allows for a more open and customizable OS, which is what Android promotes — any device manufacturer can take the Android OS and make it their own.\n\nImagine how bad it would be if, say, resources from application A read information from another application’s files and vice versa with no constraints — malicious, insecure interactions would take hold and bring the whole system to a halt.\nThe sharing of information (data) between applications is an essential part of building inter-connected applications, so the android OS requires developers to set permissions that users must grant to do certain things. For example, for an application to access the phone’s File System (internal files), the user must give access first. This means the app developer must let the user know, in advance, what the app they are installing wants to access. For example, when a user installs an android app that needs to access the photo gallery or the phone’s camera, the app will ask for permission to access the gallery or the camera. The app user has the power to either grant or deny permission. App permissions in Android ensure the user’s protection from malware and software viruses.\nThis course is built to help beginners to start making applications in android studio and android application development or android app design with Jetpack Compose.\nLearn how to use Jetpack Compose to build native Android UI! You’ll see how Compose simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs.\nIf you want to develop yourself in Android Apps, this course is for you. Improve yourself with different applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part. This course is designed to fill this gap.\nMy \"Android App Development Course with Jetpack Compose\" course will take you from beginner to advance level.\nOur passion is to carry our experience with the right examples to anyone who will enroll in this course. In this course, you will learn Android app development step-by-step. While doing kind of show and tell in our lectures we are also explaining whys. During the lectures, we will be practicing with more than 10 examples and we will be learning to build and publish 2 major apps.\n\n\nWhat’s important\nThis course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nIn this course you will learn;\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project in Android Studio\nMuch more about Android Studio\nWhat Kotlin is and how it works,\nProgramming Fundamentals with Kotlin,\nJava Development Kit – JDK\nVariables in android kotlin\nKotlin Data Types\nArrays in kotlin for android\nOperators in android app development kotlin\nControl Flow Statements\nLoops in android studio kotlin\nFunctions\nKotlin for java developers\nAll Concepts of Object-Oriented Programming such as Class, Object, Constructor, Encapsulation, Inheritance etc.\nAndroid Components in Jetpack Compose\nUser interactions with Android Jetpack Compos\nNavigation and Lists in Jetpack Compose\nPublishing Your App on Google Play and more\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\n\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\nWhat is Jetpack Compose?\nJetpack Compose is a modern toolkit for building native Android UI. Jetpack Compose simplifies and accelerates UI development on Android with less code, powerful tools, and intuitive Kotlin APIs.\n\nWhy do we use Jetpack Compose?\nJetpack Compose is Android's modern toolkit for building native UI. It simplifies and accelerates UI development on Android bringing your apps to life with less code, powerful tools, and intuitive Kotlin APIs. It makes building Android UI faster and easier.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow latest trends.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the Learn Kotlin & Develop Android Apps with Jetpack Compose course. Learn Kotlin & Jetpack Compose | Android app development with Jetpack Compose, android application development from scratch",
      "target_audience": [
        "Anyone who wants to learn to Jetpack Compose",
        "Programmers who are interested in building Android apps with Jetpack Compose",
        "Anyone who wants to create Android Applications using the Kotlin programming language and Jetpack Compose",
        "Anyone who has no previous Android Development coding experience but wants to become expert",
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone planning a job transformation and wants to become an Android developer",
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing Android App Development Kotlin knowledge with Jetpack Compose"
      ]
    },
    {
      "title": "Mastering Firebase Authentication with Swift & Xcode",
      "url": "https://www.udemy.com/course/mastering-firebase-authentication-with-swift-xcode/",
      "bio": "Learn to implement secure user authentication in iOS apps using Firebase, Swift, and Xcode. Master email/password login,",
      "objectives": [
        "Set up and configure Firebase Authentication in an iOS app using Swift and Xcode.",
        "Implement secure email and password authentication for user sign-up and login.",
        "Integrate Google Sign-In authentication for seamless third-party login access.",
        "Understand the role of JSON Web Tokens (JWT) in Firebase authentication and how they secure API requests.",
        "Understand and implement anonymous authentication for guest users and account linking.",
        "Learn how to manage user sessions, detect session hijacking, and prevent unauthorized access.",
        "Apply best practices for handling weak and reused passwords to enhance authentication security.",
        "Implement a logout functionality that securely clears session data and login credentials.",
        "Store and retrieve login credentials securely using Keychain Access when \"Remember Me\" is checked.",
        "Apply advanced security practices to protect authentication systems, including preventing session hijacking.",
        "Handle authentication errors effectively and provide user-friendly feedback in the login UI.",
        "Build a fully functional, industry-standard authentication system that meets security requirements for banking and financial applications."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Authentication in iOS Mobile Development with Swift & Xcode",
          "Firebase Authentication with Swift & Xcode",
          "Step by Step: Walkthrough for Creating Email, Password Login pt 1",
          "Step by Step: Walkthrough for Creating Email, Password Login pt 2",
          "Step by Step: Walkthrough for Creating Email, Password Login pt 3",
          "Step by Step: Walkthrough for Creating Email, Password Login pt 4",
          "Step by Step: Walkthrough for Creating Google Account SignIn",
          "A Basic Understanding of Phone Authentication is and Why it Uses Cloud Services",
          "Understanding Anonymous Authentication in Firebase",
          "Understanding JSon Web Tokens (JWT)",
          "Comprehensive List of Security Issues in Banking Apps & How to Address Them",
          "Dealing with Session Hijacking",
          "Dealing with Weak and Reused Passwords",
          "Clearing Login Fields for Security",
          "Store Credential Safely Using Keychain Access"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift programming and familiarity with SwiftUI or UIKit.",
        "A Mac computer running macOS Monterey or later to install Xcode.",
        "Xcode (latest version) installed for iOS app development.",
        "A Firebase account and basic understanding of how Firebase works.",
        "An iOS device or iPhone Simulator for testing authentication features.",
        "Basic understanding of how mobile apps communicate with backend services.",
        "Familiarity with asynchronous programming in Swift, such as using async/await or Combine.",
        "A working Google account for setting up Google Sign-In authentication.",
        "Willingness to learn security best practices for authentication and user data protection.",
        "Internet access for connecting to Firebase and testing authentication features.",
        "Basic knowledge of how databases store user data (Firestore is introduced in the course).",
        "No prior Firebase experience required—this course will guide you step by step."
      ],
      "description": "Are you building an iOS app and need a secure authentication system? Do you want to master Firebase Authentication while ensuring industry-standard security practices? This course is designed to teach iOS developers, students, and professionals how to implement authentication in Swift & Xcode using Firebase.\nIn this hands-on course, you will learn how to set up and integrate Firebase Authentication into your iOS apps, allowing users to securely sign in using email/password, Google Sign-In, phone authentication, and anonymous login. You will also explore session management, dealing with security threats like session hijacking, weak passwords, and login persistence using Keychain Access.\nWhat You Will Learn\nSet up and configure Firebase Authentication in an iOS app\nImplement secure email/password login and logout functionality\nIntegrate Google Sign-In authentication for third-party login\nUnderstand and implement anonymous authentication for guest users\nHandle phone authentication and understand how it works with cloud services\nManage user sessions and prevent session hijacking\nImplement best practices for handling weak and reused passwords\nSecurely store and retrieve login credentials using Keychain Access\nImplement Firebase authentication security rules to protect user data\nBuild a fully functional, real-world authentication system\nWho Is This Course For?\niOS developers who want to add authentication features to their apps\nJunior developers preparing for technical interviews on authentication\nFreelancers and indie developers who want secure login options for their apps\nAnyone interested in understanding authentication security best practices\nStudents and self-taught programmers looking to gain real-world skills\nRequirements & Prerequisites\nBasic knowledge of Swift programming and familiarity with SwiftUI or UIKit\nXcode installed and a Mac running macOS Monterey or later\nAn iOS device or iPhone Simulator for testing authentication\nWillingness to learn security best practices for mobile authentication\nNo prior Firebase experience required—this course provides step-by-step guidance\nBy the end of this course, you will have a fully functional authentication system that meets industry standards for secure mobile development.\nEnroll now and start building secure authentication systems for iOS apps today.",
      "target_audience": [
        "iOS Developers who want to integrate secure authentication in their Swift and SwiftUI apps.",
        "Junior Developers looking to strengthen their skills and advance toward mid-level or senior roles.",
        "Developers preparing for technical interviews where authentication and security concepts are commonly tested.",
        "Self-Taught Programmers who want to learn Firebase authentication without prior backend experience.",
        "Students and Computer Science Graduates interested in building real-world authentication systems.",
        "Freelancers and Indie App Developers who want to add user authentication to their mobile apps.",
        "Developers transitioning from another mobile platform (Android, React Native, or Flutter) to iOS development.",
        "Startups and Entrepreneurs who need authentication features in their iOS apps without building a backend from scratch.",
        "Cybersecurity Enthusiasts interested in understanding authentication security best practices",
        "Technical Product Managers who want to better understand authentication implementation for mobile apps.",
        "Developers looking to specialize in FinTech or banking applications where authentication security is critical.",
        "Anyone who wants to master Firebase authentication in Swift & Xcode and build secure, scalable login systems."
      ]
    },
    {
      "title": "Building Responsive Apps in Flutter - Responsive UI",
      "url": "https://www.udemy.com/course/building-responsive-apps-in-flutter-responsive-ui/",
      "bio": "Master responsive UI design in Flutter. Learn best practices to create seamless experiences across all devices.",
      "objectives": [
        "Design and implement responsive user interfaces in Flutter for apps that adapt to various screen sizes and orientations.",
        "Utilize Flutter's layout widgets, such as Flexible and Expanded, to create fluid and scalable designs.",
        "Apply best practices for handling device-specific screen resolutions and aspect ratios to ensure a consistent user experience.",
        "Integrate responsive design principles into Flutter apps using media queries, constraints, and adaptive widgets.",
        "Build dynamic and adaptive UI components that seamlessly adjust to different platforms, including mobile, tablet, and web."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is your Instructor?",
          "Responsive Design Theory"
        ],
        "App Architecture & Setup": [
          "Tour App Architecture Overview",
          "Screen Size using MediaQuerry"
        ],
        "Implementing Responsive Layouts": [
          "Creating Modal class and accessing data",
          "Creating Adaptive Layouts",
          "Adjusting UI to Tablet Screen",
          "Layout Builder"
        ],
        "Final Steps - Adjusting Ui to Desktop Layout": [
          "Adjusting Ui to Desktop Layout"
        ]
      },
      "requirements": [
        "A basic understanding of Flutter, along with familiarity with the Dart language and Flutter framework, is recommended."
      ],
      "description": "Are you looking to build mobile applications that look great on any device? In this course, \"Building Responsive Apps in Flutter - Responsive UI,\" you will learn how to design and develop adaptive, scalable, and user-friendly interfaces using Flutter. Whether you're a beginner or an experienced developer, this course will help you master responsive UI techniques to create seamless user experiences.\nWhat You’ll Learn:\nUnderstanding Responsive Design Principles – Learn how to make apps that look great on different screen sizes and orientations.\nUsing MediaQuery & LayoutBuilder – Master techniques to dynamically adjust UI elements based on screen dimensions.\nFlexible & Expanded Widgets – Explore powerful widgets that help create adaptable and fluid layouts.\nBreakpoints & Adaptive UI – Implement strategies to optimize your UI for different screen resolutions, from small phones to large tablets.\nReal-world Projects – Apply what you learn by working on hands-on projects that demonstrate responsive design in action.\nBy the end of this course, you’ll have the confidence and skills to build professional-grade Flutter apps that provide a consistent user experience across various devices.\n\n\nEnroll now and start building responsive Flutter apps today and you’ll have the confidence and skills to build professional-grade Flutter apps that are famous !\n\nCourse Instructor : Sajjad Javed, Flutter Developer",
      "target_audience": [
        "This course is suitable for both beginners and advanced learners. It covers all the fundamental concepts needed to create responsive apps and dives deep into advanced techniques for building adaptive UIs. Basic familiarity with Flutter is helpful but not required, as everything will be explained in detail."
      ]
    },
    {
      "title": "Android Preparation Practice Tests",
      "url": "https://www.udemy.com/course/android-preparation-practice-tests/",
      "bio": "Best Quality Practice Tests of Android",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Android is an open-source operating system primarily used in mobile devices such as smartphones and tablets. Developed by Google, Android is based on the Linux kernel and has become one of the most popular operating systems globally due to its versatility, extensive app ecosystem, and customization options. The operating system allows users to personalize their devices with a variety of themes, widgets, and applications available through the Google Play Store. Android’s flexibility also extends to developers, who can create apps using the Android Software Development Kit (SDK) and distribute them to a broad audience.\nOne of Android’s key strengths lies in its seamless integration with Google services, such as Gmail, Google Maps, and Google Drive, providing users with a unified experience across different applications. This integration enhances productivity and connectivity, making it easier for users to manage their digital lives. Additionally, Android supports a wide range of hardware, from budget-friendly devices to high-end smartphones, ensuring that there is an option available for every type of user. The operating system's frequent updates also bring new features, security enhancements, and performance improvements, ensuring that devices remain up-to-date with the latest technological advancements.\nAndroid’s open-source nature has fostered a vibrant community of developers and enthusiasts who contribute to its continuous improvement. Custom ROMs, which are modified versions of the Android operating system, allow users to further tailor their device’s performance and appearance to their liking. This openness has also enabled manufacturers to create unique user interfaces and features, leading to a diverse ecosystem of Android devices. Despite its many advantages, Android also faces challenges, such as fragmentation, where different devices run different versions of the operating system, potentially affecting app compatibility and user experience. Nonetheless, Android's adaptability and widespread adoption continue to drive its growth and evolution in the ever-changing landscape of mobile technology.",
      "target_audience": [
        "Want Practice Tests of Android"
      ]
    },
    {
      "title": "Master Generative AI for Android: Firebase & Jetpack Compose",
      "url": "https://www.udemy.com/course/master-generative-ai-for-android-firebase-jetpack-compose/",
      "bio": "Build Powerful Android Apps with Jetpack Compose, Firebase, and Generative AI with Gemini Pro Generative Model",
      "objectives": [
        "By the end of this course, you will be able to integrate pre-trained Generative AI models like Google's Gemini Pro into your Android applications.",
        "You will gain proficiency in using Google's Vision Pro API to extract insights from images within your Android apps.",
        "You will develop expertise in designing beautiful and responsive user interfaces using Jetpack Compose.",
        "You will implement secure user login functionalities using Firebase Authentication.",
        "You will solidify your understanding of core Android development concepts for a strong foundation in building modern apps."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Initial Project And Resources",
          "Connecting Firebase",
          "Gemini Api Overview",
          "Configuring Gemini Api With Android Studio",
          "What We Will Build"
        ],
        "Authentication Feature": [
          "Setting Firebase Authentication With Firebase Console",
          "Authentication Repository",
          "Authenticating Using Google Client",
          "SignUp Viewmodel Implementation",
          "SignUp Screen Implementation Using Compose",
          "Manual Dependency Injection and Test Run App",
          "Login Viewmodel Implementation",
          "Login Screen Implementation",
          "Navigation Routes Setup",
          "Navigation Actions",
          "Forgot Password Viewmodel",
          "Forgot Pawwsord Screen",
          "Connecting Navigation Graph"
        ],
        "Chat Feature with Gemini Generative AI": [
          "Intro",
          "Connecting Firebase Firestore",
          "Data Models",
          "Chat Repository",
          "Chatroom Viewmodel",
          "Chatroom Screen",
          "How we will display Bottom and TopApp bar",
          "Bottom and Top App Bar Logic",
          "Fixing Floating Action Button Icon",
          "Logout Navigation Logic",
          "Test run App",
          "Message Screen Intro",
          "Message ViewModel Implementation",
          "Message Screen Implementation",
          "ChatList Implementation",
          "ChatBubble and ChatList",
          "Navigation Graph Update",
          "Fixing A bug"
        ],
        "Photo reasoning Feature with Gemni Vision Api": [
          "Photo Reasoning Repository",
          "Photo Reasoning Viewmodel",
          "Photo Reasoning Screen",
          "User Input Composable",
          "Photo Reasoning Viewmodel",
          "Photo Reasoning Screen",
          "Display Result Logic",
          "Calling Photo Reasoning Composable",
          "Updating Navigation Graph",
          "Updating Firebase Rules",
          "Outro"
        ]
      },
      "requirements": [
        "Basic Android Development"
      ],
      "description": "Join us at the forefront of mobile development with Generative AI. In this course, you'll harness the power of this groundbreaking technology to revolutionize your Android apps, creating features that mesmerize users and elevate your projects to new heights.\nNo need to start from scratch! We'll utilize advanced pre-trained models such as Google's Gemini Pro, enabling you to focus on crafting innovative functionalities like:\nConversational Chatbots: Develop chatbots that engage users in natural, intelligent conversations, fueled by Gemini Pro's capabilities.\nImage Analysis Powerhouse: Tap into the potential of Google's Vision Pro API to extract invaluable insights from images seamlessly integrated within your apps.\nStunning & Responsive UI: Master the art of crafting beautiful and user-friendly interfaces using the modern Jetpack Compose framework.\nSecure User Management: Implement rock-solid Firebase Authentication for seamless and secure logins and user management.\nPlus, as a bonus, you'll delve into dependency injection best practices, ensuring your code remains clean and maintainable throughout.\nDon't miss this opportunity to shape the future of Android development with Generative AI. Enroll today and embark on a journey that will not only enhance your skills but also redefine what's possible in the world of mobile applications. Join us and become a pioneer in Generative AI Android development!",
      "target_audience": [
        "Android developers who want to level up their skills and integrate cutting-edge Generative AI technology into their apps ."
      ]
    },
    {
      "title": "Swift by Example; Make Apple Watch Apps with Apple Watchkit",
      "url": "https://www.udemy.com/course/swift-by-example-make-apple-watch-apps-with-apple-watchkit/",
      "bio": "Together we'll learn Apple's new cutting-edge programming language while building some useful Apple Watch applications!",
      "objectives": [],
      "course_content": {
        "Getting Started": [
          "Introduction & What You'll Need for this Course",
          "Getting Set Up; Apple Developer Account and Downloading XCode"
        ],
        "Swift Essentials": [
          "Swift Essentials: An Introduction",
          "Why Swift? Features and Enhancements",
          "Variables, Constants and Types",
          "Variables, Constants and Types - XCode - Objective-C",
          "Variables, Constants and Types - XCode - Swift Part 1 of 2",
          "Variables, Constants and Types - XCode - Swift Part 2 of 2",
          "Variables and Constants Quiz",
          "Optional Variables",
          "Optional Variables: XCode",
          "Optional Variables Quiz",
          "Operators",
          "Operators: XCode Part 1 of 2",
          "Operators: XCode Part 2 of 2",
          "Operators Quiz",
          "Arrays",
          "Arrays: XCode",
          "Arrays Quiz",
          "Dictionaries",
          "Dictionaries: XCode - Objective-C",
          "Dictionaries: XCode - Swift",
          "Dictionaries Quiz",
          "Control Flow",
          "Control Flow: XCode - Objective-C",
          "Control Flow: XCode - Swift Part 1 of 2",
          "Control Flow: Xcode - Swift Part 2 of 2",
          "Control Flow Quiz",
          "Functions",
          "Functions: XCode - Objective-C",
          "Functions: XCode - Swift",
          "Functions Quiz",
          "Enumerations",
          "Enumerations: XCode - Objective C",
          "Enumerations: XCode - Swift",
          "Enumerations Quiz",
          "Classes",
          "Classes: XCode - Objective-C",
          "Classes: XCode - Swift",
          "Classes Quiz",
          "Structures",
          "Structures: XCode - Objective-C",
          "Structures: XCode - Swift",
          "Properties",
          "Properties: Xcode - Swift",
          "Properties Quiz",
          "Methods",
          "Methods: XCode - Objective-C",
          "Methods: Xcode - Swift",
          "Methods Quiz"
        ],
        "Before We Begin": [
          "What's in this Thing?",
          "Apple Watch Development Guidelines",
          "Apple Watch Bezel Tool"
        ],
        "App #1 - Hello World!": [
          "Hello World! - Project Setup and Connecting Interface Objects to Code"
        ],
        "App #2 - Dice Roller!": [
          "Dice Roller! - App Design, Interface Setup and Connecting to Code",
          "Dice Roller! - Dice Class Creation",
          "Dice Roller! - Testing the Dice Class, Connecting UI Actions and Finishing Up"
        ],
        "App #3 - What's that Dog?": [
          "What's that Dog? - Introduction, Demonstration and What We'll Go Over",
          "What's that Dog? - Project Setup and Interface Design",
          "What's that Dog? - Interface Setup",
          "What's that Dog? - Loading Data into Tables",
          "What's that Dog? - Connecting UI to Code and Responding to Input",
          "What's that Dog? - Finalizing Assets and Finishing Up"
        ],
        "Conclusion - More Apps on the Way!": [
          "Stay Tuned! More Example Applications are Currently in Progress"
        ],
        "Student Q&A": [
          "Student Q&A Introduction"
        ]
      },
      "requirements": [
        "No previous programming experience is required",
        "A Macintosh computer with OSX Yosemite installed is required",
        "An Apple Developer account in order to download and install XCode is required"
      ],
      "description": "Updated August, 2015\nBe entered to win a free Apple Watch! *\nMake exciting applications for Apple Watch using WatchKit!\nLearn a new easy-to-use programming language called Swift!\nMigrate over to Swift from Objective-C with ease!\nIn this course, you will gain a deep understanding of Swift and WatchKit so you can develop your own Apple Watch apps! Whether you're developing an app from scratch, or you want to extend an already-existing application you've written for iPads and iPhones to support the Apple Watch, you've come to the right place! You will learn to do ALL of those things!\nThis course is both for new developers, and Objective-C developers who want to learn Swift!\nWhat is this course about?\nIt's about building a solid understanding of Apple's Swift programming language, and then taking that knowledge to build your own Apple Watch applications! This course will be evolving over time, with added content being added often!\nMore importantly, I want to urge you to START NOW! Apple Watch is going to be the next big thing. I say this with a heightened sense of urgency! So many manufacturers (I'm picking on Android Wear users here!) have tried to develop smart watches that would really take off and make a splash, but it just hasn't happened. Based on Apple's history of hardware launches, as well as the design of Apple's Watch, you can bet that people with Apple Watches will be the centerpiece of conversation for a while. The sheer number of style combinations that will be at the release will appeal to a very broad range of people!\nWhy take this course, and why take it from me?\nLearn Swift and XCode from a full time professional iOS developer!\nReally burn in the knowledge with lots of course quizzes!\nWe'll sketch, design and develop 3 Apple Watch applications from the ground up, with more being added in the future!\nAs more application tutorials are added, the price of the course will go up, so don't delay your purchase!\nMy regularly priced PPCH (Price Per Content Hour) is the lowest on Udemy, without sacrificing quality!\nWho wouldn't want a chance to win a free Apple Watch? :)\nHow is the course structured?\nThe 'Getting Started' section will talk about course structure in more detail. However, in short, each section has an introduction that explains what we'll be doing, and a conclusion to go over what we've learned. I use a presentation format to go over details about a topic, then I'll dive into XCode screencasts to show how to use what we've learned. Quizzes will appear at the end of each section. This applies for the entire course from start to end. Please preview some videos below so you know exactly what you're getting!\nThank you!\nLastly, I'd like to say thank you for taking a look at my course that I've created for you. I love talking to my students, so please know that I will always be available for support if any help is needed along the way!\n-\n*For every 500th paying student, I'll randomly select a student to receive a free Apple Watch Sport! Get in early to potentially have more chances to win. (Ex: If you're the 50th student, and I reach 1500 paid students, you'd have 3 chances to win!). Note that 30 days must elapse after joining this course before any prize is awarded. This promotion is valid for USA residents in the 48 contiguous states only. One entry per person. No purchase necessary to win.",
      "target_audience": [
        "New programmers who want to learn Swift",
        "Developers interested in creating apps for Apple Watch with Swift",
        "Developers who write applications using Objective-C who want to learn how to convert their code to Swift"
      ]
    },
    {
      "title": "From Feeds to Hired: SwiftUI Patterns That Pass Interviews",
      "url": "https://www.udemy.com/course/from-feeds-to-hired-swiftui-patterns-that-pass-interviews/",
      "bio": "Write clean, maintainable Swift code that hiring managers love to read.",
      "objectives": [
        "How to build a full-featured SwiftUI app using modern architectural patterns (MVVM + protocol-oriented design).",
        "How to write clean, testable networking code with async/await and error handling.",
        "How to parse RSS and Atom feeds using FeedKit’s updated API and Swift enums.",
        "How to handle API failures, bad responses, and retry logic like a professional.",
        "How to apply dependency injection to make your app modular, mockable, and interview-ready.",
        "How to structure a take-home coding assessment for maximum clarity and maintainability.",
        "How to use Swift’s type system and enums to write safe, expressive, and concise code.",
        "How to build adaptive SwiftUI views that respond to state changes (loading, error, success).",
        "How to debug and reason through problems like a senior engineer—before the interview.",
        "How to talk through your technical decisions confidently in a real-world interview setting."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Overview of the App - A Short Demo"
        ],
        "Coding the Feed App": [
          "Creating the Model",
          "Networking Service",
          "Parsing Service",
          "Creating the ViewModel",
          "Creating a View",
          "Unit Testing for a ViewModel"
        ]
      },
      "requirements": [
        "A working knowledge of basic Swift programming (variables, structs, functions, optionals, etc.)",
        "Some prior experience building simple iOS apps with SwiftUI or UIKit",
        "Familiarity with Xcode and running projects on the iOS simulator",
        "A Mac with macOS Monterey or later, and Xcode 15+ installed",
        "Curiosity, persistence, and a willingness to break through technical challenges"
      ],
      "description": "You’ve learned the basics. You’ve built a few projects. Maybe you’re even working in iOS development already. But when it comes to technical interviews—or writing code that feels senior-level—you keep hitting a wall.\nThis course is for you.\n“From Feeds to Hired” is designed specifically for intermediate Swift developers who want to rapidly level up and finally break through the technical portion of job interviews. Whether you're self-taught, coming from a non-traditional background, or tired of failing take-home tests, this course will show you how to build real, production-ready iOS features using industry-standard patterns.\nWe’ll walk through the creation of a fully-featured SwiftUI RSS reader app, but this is not just about fetching feeds—it’s about:\nWriting clean, modular, and testable code like a senior engineer\nUsing Swift Concurrency (async/await) with confidence in network and parsing layers\nApplying MVVM architecture in a way that’s actually scalable and interview-friendly\nStructuring a project the way companies expect in take-home assessments\nLearning error handling, protocol abstraction, and other “senior-level signals”\nYou’ll also learn why each architectural decision matters—because great engineers don't just write code, they design systems with maintainability and clarity in mind.\nThis course is built for learners who:\nAre intermediate iOS developers looking to take the next big step\nAre self-taught and want to bridge the “professional polish” gap\nStruggle with take-home tests or technical interviews and need a better strategy\nWant to build a portfolio project that actually shows off your capability\nBy the end of the course, you’ll not only have a polished SwiftUI app in your portfolio—you’ll understand how to write code that communicates senior-level thinking. You'll be ready to impress in interviews and finally move forward in your iOS career.\nIf you're serious about getting hired—and staying hired—this is the course that will get you there.",
      "target_audience": [
        "Self-taught developers without a formal CS degree who are serious about becoming senior engineers",
        "Developers who have built small Swift or SwiftUI apps but struggle with technical interviews or take-home projects",
        "Junior and mid-level engineers who want to write cleaner, more testable code and master architectural patterns like MVVM and dependency injection",
        "Developers who keep getting rejected after the technical portion of interviews and need a focused, project-based way to improve",
        "Anyone looking to build a portfolio-worthy SwiftUI app that demonstrates real engineering skill—not just basic tutorials"
      ]
    },
    {
      "title": "React Native & AI: Build Image Generator Apps with Expo",
      "url": "https://www.udemy.com/course/ai-image-generation-in-react-native-with-dalle3-mid-journey/",
      "bio": "Use DALLE-3 by OpenAI, Midjourney and other AI tools in React Native and Expo -Build Image Generator App with animations",
      "objectives": [
        "Integrate popular AI image generation APIs like DALL·E-3, MidJourney, and Imagine.",
        "Build sleek, responsive user interfaces for AI-powered apps.",
        "Set up a complete React Native development environment using Expo.",
        "Authenticate and connect to AI platforms to generate images from text prompts.",
        "Download and save AI-generated images directly to a mobile device.",
        "Add dynamic Lottie animations for an engaging user experience.",
        "Master API calls, handle responses, and display data within your React Native app."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "What is React Native"
        ],
        "Environment Setup": [
          "Set up Environment & create first React Native Project",
          "Set up Code Editor & Run App on Real Devices",
          "Run Apps on virtual devices"
        ],
        "Image Generator App GUI": [
          "Build GUI of Image Generator App",
          "Enhance Application GUI"
        ],
        "Image Generation in React Native": [
          "Explore Image Generation Platforms",
          "Application Programming Interface",
          "Explore API's of Image Generation Platforms",
          "Generating Images in React Native Applications",
          "Ensuring Image Generation",
          "Displaying Generated Images in React Native",
          "Image Genenration App Testing"
        ],
        "GUI Enhancement & Animations in React Native": [
          "Use Icons in React Native Apps",
          "Improve user experience in React Native",
          "Use Lottie Animations in React Native"
        ],
        "DALLE-3 by OpenAI": [
          "OpenAI & DALL-3 documentation",
          "Use DALLE-3 for Generating Images in React Native"
        ]
      },
      "requirements": [
        "No Prior Experience with React Native or AI Needed: This course is designed for beginners, so no prior experience with React Native, APIs, or AI is required.",
        "Willingness to Learn and Experiment: An eagerness to explore AI technologies and build hands-on projects."
      ],
      "description": "Are you fascinated by AI and eager to create stunning, AI-powered apps in React Native? This course, \"AI Image Generation in React Native: Master APIs of DALL·E-3, MidJourney, & More,\" is designed for beginners, experienced developers, and anyone curious about merging AI with app development. Gain hands-on experience building an AI-driven image generation app using popular platforms and mastering their APIs.\n\n\nWhat You’ll Learn:\nEnvironment Setup with React Native and Expo: Start with the essentials by setting up a robust development environment using Expo. Learn best practices for configuration, debugging, and testing, ensuring a smooth start to your React Native journey.\nBuilding a User-Friendly Interface: Design a sleek, responsive interface with intuitive navigation, enhancing user interaction with AI-powered features.\nExploring AI Image Generation Platforms: Dive deep into platforms like DALL·E-3, MidJourney, and Imagine. Discover how to leverage their unique capabilities for transforming text into captivating visuals.\nMastering API Integrations in React Native: Unlock the power of AI by integrating popular image generation APIs. You'll learn how to authenticate, make requests, handle responses, and display AI-generated images seamlessly within your app.\nDownloading & Saving AI-Generated Images: Implement functionality for users to download and save their AI-generated creations. Learn efficient file management to ensure optimal app performance.\nAdding Dynamic Lottie Animations: Elevate your app with engaging Lottie animations. We'll guide you through integrating animations for a polished and interactive user experience.\n\n\nWhy Enroll in This Course?\nHands-On Projects: Work on practical projects, ensuring you can apply what you learn to real-world scenarios.\nStep-by-Step Guidance: Clear instructions and demonstrations make even complex topics easy to understand.\nFor All Skill Levels: Whether you're a beginner in React Native or a seasoned developer, this course will enhance your skills in building AI-powered apps.\n\n\nWho Should Take This Course?\nReact Native Beginners: New to React Native? We'll guide you from setup to deployment.\nExperienced Developers: Expand your toolkit by integrating AI into your projects with ease.\nTech Enthusiasts & AI Hobbyists: If you're curious about AI image generation and want to build your own apps, this course offers a practical introduction with real-world applications.\n\n\nUnlock the potential of AI and API-driven app development in React Native. Enroll today to transform your skills and bring your creative ideas to life with stunning visuals from text prompts!",
      "target_audience": [
        "React Native Beginners: Perfect for those new to React Native, with step-by-step guidance from setup to deployment.",
        "Experienced Developers: Ideal for developers looking to integrate AI and master API usage in their mobile apps.",
        "Tech Enthusiasts & AI Hobbyists: Anyone curious about AI image generation and eager to build innovative apps.",
        "Students & Lifelong Learners: Anyone wanting to expand their skills in React Native, API integrations, and AI technologies."
      ]
    },
    {
      "title": "Complete Authentication Using Firebase and JetPack Compose",
      "url": "https://www.udemy.com/course/complete-authentication-using-firebase-and-jetpack-compose/",
      "bio": "Master Firebase Authentication in Jetpack Compose with Clean Architecture & Dagger Hilt",
      "objectives": [
        "Implement complete Email Authentication using Firebase in Jetpack Compose.",
        "Learn Clean Architecture principles and apply them in an authentication system.",
        "Integrate Dagger Hilt for dependency injection in a Jetpack Compose project.",
        "Manage user sessions and authentication state effectively."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic Design": [
          "Introduction",
          "Space Between",
          "Spaced By",
          "Basic Login Ui Design",
          "Basic SignUp Ui Design",
          "Notice"
        ],
        "Advance ui Components": [
          "KeyBoard Options",
          "Trailing And Leading Icon",
          "CustomOutlinedTextField",
          "CustomPasswordTextField",
          "Free Svg website open source"
        ],
        "Complete ui section": [
          "Login Ui",
          "Login Ui Part 2",
          "Fixing login ui issues",
          "Sign ui Complete"
        ],
        "Firebase and Dagger Hilt": [
          "Connecting firebase",
          "Adding Dagger dependencies",
          "Initial setup of Dagger Hilt"
        ]
      },
      "requirements": [
        "Basic knowledge of Jetpack Compose And Kotlin"
      ],
      "description": "Are you looking to master Firebase Authentication in Android apps using Jetpack Compose? Do you want to build a secure and scalable authentication system while following Clean Architecture principles and using Dagger Hilt for dependency injection? Then this course is for you!\nIn this course, you will learn how to implement complete Email Authentication using Firebase in a modern Android app with Jetpack Compose. We will also follow the best practices of Clean Architecture and use Dagger Hilt for better project structure and maintainability.\n\n\nWhat will you learn?\nImplement Firebase Email Authentication in Jetpack Compose\nUse Clean Architecture to structure your authentication system\nIntegrate Dagger Hilt for dependency injection in your project\nManage user sessions and authentication state effectively\nl̥ Build a modern and scalable authentication system with a clean UI\n\n\nWho is this course for?\nAndroid developers who want to learn Firebase Authentication with Jetpack Compose\nDevelopers interested in Clean Architecture and Dagger Hilt\nAnyone looking to build a complete authentication system from scratch\nBeginners with basic Jetpack Compose knowledge who want to level up\nBy the end of this course, you will have a fully functional authentication system that follows best practices and is ready for real-world applications.\nSo, let's get started and build a powerful authentication system together!",
      "target_audience": [
        "Android developers who want to learn Firebase Authentication with Jetpack Compose."
      ]
    },
    {
      "title": "Foldable and Responsive Android Apps with Jetpack Compose",
      "url": "https://www.udemy.com/course/foldable-and-responsive-android-apps-with-jetpack-compose/",
      "bio": "Build Foldable and Responsive Android Apps with Jetpack Compose for Foldable Phones, Tablets, Desktops, and Phones",
      "objectives": [
        "Measure and classify the size of a screen on a phone or tablet",
        "Understand how to extract data from the foldable hinge of a phone and its accelerometer to determine how the device is being used",
        "Build a unified API that can span all device types to report on the kind of display on the user's device",
        "Build an adaptive interface which can automatically optimize itself based on the information extracted from the display, hinge, and accelerometer"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "The Final Product"
        ],
        "Gathering Screen Metadata": [
          "Project Setup",
          "Measuring Flat Screens",
          "Learning Foldable Terminology",
          "Reading Foldable Data"
        ],
        "Adaptive Layouts": [
          "Building an Adaptive Layout",
          "The Final Touches"
        ]
      },
      "requirements": [
        "Be comfortable with Android development, preferably at an intermediate level",
        "Knowing how to use Jetpack Compose will be very beneficial",
        "Experience with Kotlin"
      ],
      "description": "The mobile device landscape is quickly changing. Consumers are now willing to pay $1000+ dollars for a cutting-edge foldable phone or a flagship tablet, and it is no longer acceptable to build applications that only cater to basic, flat-screen phones. Android developers have spent too much time developing for the lowest common denominator.\nGoogle has heard the collective voice of the consumers and has begun to offer first-class support and recommendations on how to build applications that feel optimized for each of these modalities. Despite this push from the vendor, knowing how to put all of the necessary moving parts in order for a clean developer and user experience can be a challenge.\nThat is where this course steps in to help. In just over 1 hour, I will teach you all that you need to know to build a fully-functioning, responsive, and optimized app that will display itself equally well on all of these device types:\nFoldable phones in book mode (vertical orientation, like the Samsung Galaxy Z Fold)\nFoldable phones in table-top mode (horizontal orientation, like the Samsung Galaxy Z Flip)\nFlat-screen phones\nSmall tablets\nLarge tablets\nDesktop devices, like Chrome OS and Windows 11\nAs more and more vendors add premium phones to their lineup that continue to present new ways of presenting information, the consumer expectation has continued to keep its pace. Application developers have no choice but to adapt to these changes or be left behind.\nIn this course, you will be building a fully responsive application that works on many screen types and form factors. The application we will create will be visually simple but will contain all of the elements and ideas necessary for a full-fledged, responsive app.\nYour final project will have:\nA screen that displays relevant information about the screen as derived from the display and accelerometer\nA classifier that can distinguish between phones, small tablets, and large tablets/desktops\nA master-detail view that combines the information gathered from your project's tooling to build an adaptive interface, much like the design of a popular email or messaging application",
      "target_audience": [
        "Android developers looking to build optimized applications for foldable devices, tablets, phones, and desktops"
      ]
    },
    {
      "title": "Flutter UI Coding Course for Designers and Beginners",
      "url": "https://www.udemy.com/course/flutter-ui-coding-course-for-designers-and-beginners/",
      "bio": "The course to learn the bits and pieces of Flutter widgets to compose and customize app user interfaces",
      "objectives": [
        "Flutter user interface layout design and coding",
        "Flutter + Dart coding skill",
        "Understand mobile app development with Flutter",
        "Use the skills to design or build web and desktop apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Installation",
          "VS Code setup",
          "Project setup"
        ],
        "Code starter": [
          "Understanding code and structure",
          "Preparing the base for coding",
          "Coding the first screen",
          "Code starter"
        ],
        "UI basics": [
          "Color",
          "Text: Setting up",
          "Text: Using custom fonts",
          "Text: Handling long text",
          "Text: RichText widget",
          "Text",
          "Image: Displaying image",
          "Image: Image in widgets",
          "Image: Image filter",
          "Icon",
          "Icon: FontAwesome",
          "Icon: SVG icon",
          "Image and icon"
        ],
        "Layout basics": [
          "Container",
          "Column",
          "Row",
          "Custom widget",
          "Column and row combination",
          "MediaQuery",
          "Stack",
          "Positioned",
          "Align",
          "Layout basics"
        ],
        "Container": [
          "Gradient background",
          "Image background",
          "Shape and shadow",
          "Advanced layout",
          "Container"
        ],
        "Buttons": [
          "Custom button with container",
          "Custom circle button",
          "Custom icon button",
          "Text button",
          "Outlined button",
          "Elevated button",
          "Square and Icon buttons"
        ],
        "Full screen layouts": [
          "Colored screen",
          "Image background screen",
          "Column and Row screen",
          "Stack screen"
        ],
        "Input widgets": [
          "Textfield part 1",
          "Textfield part 2",
          "Textfield part 3",
          "Textfield part 4",
          "Checkbox",
          "Radio button",
          "Switch",
          "Toggle buttons",
          "Input widgets"
        ],
        "Vertical list": [
          "ListView",
          "ListTile",
          "ListView with JSON data part 1",
          "ListView with JSON data part 2",
          "Vertical list"
        ]
      },
      "requirements": [
        "Basic knowledge of coding",
        "Windows or macOS computer"
      ],
      "description": "The problem in learning Flutter\nUnfamiliar with the code structure of Flutter\nNot having the knowledge of widgets and Flutter is all about widgets\nKnow the widgets, but don't know where things begin and end\nDon't understand what goes where and unable to compose UI as required\nUnable to find the bits and pieces required to customize UI elements or widgets as desired\nDon't know which code editor to use and how to set it up the right way for Flutter coding\n\n\nThe solution\nThis course, of course :)\n\n\nThis Flutter course is for all those who wish to be learning continuously.\n\n\nFlutter is an app development framework made by Google with the tag line \"Build apps for any screen\". So, Flutter could be used to build apps for mobile, web and desktop. The language used in Flutter is Dart. Knowledge of Dart is not really required since you'd be learning it along the way. It's really not that difficult. In fact, coding in Flutter is more like assembling lego pieces. It's kind of the knowledge of the lego pieces is more important than the coding language itself. That's if your focus is user interface development. Take the course and you'll see how fun it is ;)\n\n\nThis course is developed to solve the issues in learning Flutter as described above. It's in easy-to-follow show and tell format. From getting started to learning the basics, you'd be growing your Flutter skills until you could design and compose full app screens by the end of the course. Beyond just screens, you'll learn to wire up multiple screens into a proper app with navigation.  Source code provided (Attached to Project setup lesson).",
      "target_audience": [
        "Mobile app and web designers or coding beginners"
      ]
    },
    {
      "title": "The Scalable Flutter Code: Pro Architecture",
      "url": "https://www.udemy.com/course/the-scalable-flutter-code-pro-architecture/",
      "bio": "Unlock the Secrets of Scalable Flutter: Master Clean Architecture and Pro Design Patterns.",
      "objectives": [
        "Master Professional Project Structure – Organize your code for maximum clarity, scalability, and teamwork.",
        "Implement Clean Architecture – Separate your code into Presentation, Domain, and Data layers for ultimate maintainability.",
        "Apply GoF Design Patterns – Use timeless patterns like the Adapter, Observer, and Singleton to solve real-world Flutter problems.",
        "Architect Robust State Management – Understand the deep principles behind state management using the Observer pattern.",
        "Write Decoupled & Testable Code – Use Dependency Injection (DI) with GetX to create flexible, easily testable components.",
        "Validate with Architectural Testing – Write meaningful Unit and Widget Tests to refactor your code with confidence.",
        "Build a Complete E-commerce App – Apply every concept to a portfolio-ready \"G-Store\" app from scratch."
      ],
      "course_content": {},
      "requirements": [
        "You must be comfortable with Flutter widgets, Dart syntax, and have built at least one simple application.",
        "No prior knowledge of Clean Architecture or advanced Design Patterns is needed! We will teach you everything from the ground up."
      ],
      "description": "Ever have a Flutter project that starts clean, only to become a tangled nightmare that's slow, buggy, and hard to maintain as it grows? This is the \"Scaling Pain,\" and it's what stops talented developers like you from building truly professional, large-scale apps.\nThis course is the proven blueprint to move beyond that pain for good.\nWe don't just talk about vague theory. We will build a complete e-commerce app (the \"G-Store\") together, step-by-step, applying the principles of Clean Architecture combined with timeless, battle-tested Design Patterns. By the end, you will transform from someone who just writes code into a software architect who confidently engineers truly scalable systems.\nWhy Choose This Course?\nConcise & Clear: We focus on the core concepts you need without any unnecessary fluff, respecting your time.\nInstantly Applicable: You will have a reusable architectural blueprint that you can apply to every future Flutter project.\nUnique Approach: The definitive guide to connecting timeless Gang of Four (GoF) design patterns to modern Flutter development challenges.\nBattle-Tested: The techniques taught here are grounded in professional experience and industry best practices.\nLevel Up Your Career\nFlutter architecture is more than just a structure—it’s a gateway to building more complex, high-quality applications. Whether your goal is to lead a team, become a freelancer, or land a senior developer job, this course will set you on the right path.\nStop patching code. Start building scalable architectures.\nEnroll today and take your Flutter skills to the next level!\n\n\nAI-Generated Content Disclosure\nPlease note that this course utilizes AI-powered tools to enhance the learning experience. This includes the use of a high-quality text-to-speech narrator for clear and consistent audio in select videos, as well as the generation of some visual assets, such as the course image. The core curriculum, technical concepts, code examples, and instructional design are all originally created by the instructor based on their professional experience.\n\n\nWho this course is NOT for:\nAbsolute beginners to programming.\nDevelopers who are new to the Dart language or the Flutter framework.\nStudents who have never built a basic Flutter application before.\nAnyone looking for a beginner-level \"Hello World\" or UI-focused course (this is a course about software architecture).",
      "target_audience": [
        "Flutter developers feeling the \"scaling pain\" of messy, hard-to-maintain codebases.",
        "Developers who want to transition from simply writing code to engineering robust, professional architectures.",
        "Professionals or freelancers who want to build reusable code, deliver projects faster, and provide higher-quality apps for their clients.",
        "Intermediate-level developers ready to level up and master Clean Architecture and design patterns in Flutter."
      ]
    },
    {
      "title": "Learn to Build Your First Apache Cordova / PhoneGap App",
      "url": "https://www.udemy.com/course/learn-to-build-your-first-apache-cordova-app/",
      "bio": "Comprehensive guide to create a hybrid to-do app with JavaScript and HTML5 using Cordova, Onsen UI and Monaca.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Apache Cordova": [
          "Apache Cordova"
        ],
        "Monaca & Onsen UI": [
          "Overview of Monaca & Onsen UI",
          "Creating a Monaca Account",
          "Creating & Testing Blank Monaca Project",
          "Overview of Monaca Debugger"
        ],
        "To-Do App": [
          "Create To-Do App with Monaca Cloud IDE - Part 1",
          "Create To-Do App with Monaca Cloud IDE - Part 2",
          "Create To-Do App with Monaca Cloud IDE - Part 3",
          "Create To-Do App with Monaca Cloud IDE - Part 4",
          "Create To-Do App with Monaca Cloud IDE - Part 5",
          "Create To-Do App with Monaca CLI"
        ]
      },
      "requirements": [
        "You should be slightly familiar with HTML, CSS, and JavaScript.",
        "You will need to create a free Monaca account. This will be covered in lecture 4.",
        "You will need to install Monaca Debugger. This will be covered in lecture 6.",
        "You will need to install Monaca CLI. This will be covered in lecture 8."
      ],
      "description": "In this short course, you will learn about the basics of the hybrid app development, which is the fastest and most efficient way to build performant apps for multiple platforms (iOS, Android, Windows) simultaneously. You will get familiar with basic tools and platforms, as we will be using the Apache Cordova, the Monaca platform and Onsen UI for maintaining the native app look and feel.\nAll the tools used in this course are accessible free of charge, and we will be using basic and common web development languages (HTML5, JavaScript and CSS), setting no limitations for the students. This course is suitable for beginners, but understanding basic concepts of HTML5, JavaScript and CSS would be very helpful.\nAfter the introduction, you will learn about the basic tools and structure of hybrid app development, and dive into coding straight away. Within less than 2 hours, you will have your \"To-do\" app ready and available. You will learn how to create a list view, how to add and remove items to the list, as well as modify the status of the task.\nAnd the best thing about this course:\nYou will be able to utilize the new skills and knowledge to create further hybrid apps on your own (or using one of many templates or tutorials provided for future learning)!",
      "target_audience": [
        "This course is designed for students interested in app development, as well as HTML, CSS, and JavaScript.",
        "This course is probably too easy for you if you are looking for advance guides for Apache Cordova, Monaca, and Onsen UI."
      ]
    },
    {
      "title": "Flutter macOS App",
      "url": "https://www.udemy.com/course/flutter-macos-app/",
      "bio": "Learn how to build a macOS app with flutter",
      "objectives": [
        "Flutter Basic",
        "Flutter MacOS UI",
        "Flutter DataGrid",
        "Hive"
      ],
      "course_content": {},
      "requirements": [
        "Flutter Basic",
        "mac OS is required t build and run mac app"
      ],
      "description": "In this Flutter course we are going to learn to build a macOS app and a  local data storage using Hive package which help us to create NoSQL database, it internally make use of key-value and work well both with Android, iOS, Desktop and Web.\nWe will  build a native looking macOS app with flutter using the flutter library macos_ui and we will use a Hive for local storage. We will also lean about flutter DataGrid and create a DataTable\n\nmacos_ui\nFlutter widgets and themes implementing the current macOS design language.\n\n\nFlutter DataGrid (DataTable) library\nThe Flutter DataTable or DataGrid is used to display and manipulate data in a tabular view. It is built from the ground up to achieve the best possible performance, even when loading large amounts data.\n\n\nHive\nHive is a lightweight and blazing fast key-value database written in pure Dart. Inspired by Bitcask.\nFeatures\nCross platform: mobile, desktop, browser\nGreat performance (see benchmark)\nSimple, powerful, & intuitive API\nStrong encryption built in\nNO native dependencies\nBatteries included\nHive is also one of the best options when it comes to cross-platform support. You don't have to include binaries, and it works in the browser using IndexedDB.\n\n\nHive is very performant because it has little overhead compared to relational databases. The API is very close to how the data is stored on the disk.\nKey-value databases can be used to store almost any kind of data. For example:\nUser profiles\nSession information\nArticle/blog comments\nMessages\nShopping cart contents\nProduct categories\nBinary data\netc.",
      "target_audience": [
        "Flutter Developer"
      ]
    },
    {
      "title": "ChatGPT Clone App | OpenAI | iOS18 & Swift6 | Xcode 16",
      "url": "https://www.udemy.com/course/chatgptcloneapp/",
      "bio": "ChatGPT Clone App Swift OpenAI API REST Chat AI Onboarding",
      "objectives": [
        "To learn how a social media application can be designed at an advanced level and its functional features.",
        "Firebase Database and Authentication.",
        "Sending a request with RestAPI (OpenAI)",
        "In-app purchases with Storekit",
        "Auto layout UI design with Storyboard"
      ],
      "course_content": {},
      "requirements": [
        "You must have one of the Macbook Pro and Air models or install Xcode on your Windows computer",
        "No programming language knowledge is required.",
        "Xcode 13 and later is required."
      ],
      "description": "Unlock the potential of conversational interfaces with my groundbreaking Swift-based chatbot seamlessly integrated with the cutting-edge OpenAI API. Designed with meticulous attention to detail and crafted to deliver an exceptional user experience, this innovative application sets the standard for modern chat interfaces.\n\n\nFrom the moment users embark on their journey, they are greeted with intuitive onboarding screens featuring page control and collection view components. These elements guide users seamlessly through the initial setup process, ensuring they quickly familiarize themselves with the app's features and functionalities.\n\n\nOnce past the onboarding phase, users are seamlessly transitioned into the chat interface, where they can engage in dynamic conversations powered by the state-of-the-art GPT-3.5 turbo model from OpenAI. The chat experience is enhanced by fluid keyboard interactions and an aesthetically pleasing autolayout design, which elevate the user experience to unprecedented levels of sophistication and usability.\n\n\nMy expertise, acquired through comprehensive training including Udemy courses, is evident in every aspect of the chatbot's design and functionality. Each feature has been carefully crafted to meet the highest standards of professionalism and usability, ensuring that users feel empowered and engaged throughout their interaction with the application.\n\n\nExperience the future of conversational interfaces firsthand with my Swift-based chatbot. It represents a culmination of innovation, usability, and professional craftsmanship, setting a new benchmark for excellence in the realm of chat applications. Join the conversation today and discover the limitless possibilities that await!",
      "target_audience": [
        "iOS developers of all levels",
        "Those who want to design applications",
        "Entrepreneurs",
        "Those who want to learn Swift programming language",
        "Those interested in artificial intelligence"
      ]
    },
    {
      "title": "Self Care - The Whole Picture",
      "url": "https://www.udemy.com/course/the-whole-selfcare-course/",
      "bio": "How Personnal and Professional Experiences affect our Overall Self Care",
      "objectives": [
        "Identify the personal factors affecting growth",
        "List 2-3 positive and negative factors in personal growth",
        "Recall the positive personal experiences that had lasting impact",
        "List the professional experiences that affect growth",
        "Name 2-3 professional experiences that had a negative and positive impact on your life",
        "Design a CHART to compare the different experiences for personal and professional development in your life",
        "Formulate 3-5 plans/changes that were or could be made to modify current personal and professional state",
        "Examine how changes in daily rituals and new experience will affect overall wellbeing and productivity",
        "Summarize current behaviors and attitudes to past that support the importance of progress in personal and professional growth"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites are required for this course"
      ],
      "description": "This course is designed to help women have a look at the Whole Self Care movement as a way to analyze what has been restricting them. Looking at the reasons we may be circling the same cycle and finding ourselves in the same situation, one can analyze the spiritual, mental, emotional, physical, and nutritional areas that are stuck.\nNot until we really have a conversation with ourselves and those who hold us accountable will we start to move the stagnate areas into a more progressive direction. I help women look at the personal and professional experiences that help them excel and can also be holding them back. The Whole Self Care movement will allow us to work from the inside out.\nThrough my own journey of finding my lump and going through Chemo and a Stem Cell transplant to cure me. I didn't know my journey of Whole Self Care was just beginning. Trying to recover for me was the hardest part. I had to face things I had been tucking away and thinking they would dosappear by themselves. As, I still work on these areas, I want to encourage someone else using my platforms to take the fear out of saying \"it's ok to feel \"stuck\". But \"what are we going to do about it?\"\nCan anyone relate?\n\n\nBe well and hope this reaches someone who needs it!! I look forward to hearing about your journey!\n\n\nLove,\n\n\nDara",
      "target_audience": [
        "As personal and professional development is key for growth, it is imperative to examine how wholeness of ones own experience and goals are in alignment. Individuals are constantly looking to others for their growth when looking at our own lives will be the focus for making many personal and professional adjustments to remain on task. Have you ever thought about you as a whole? There are an abundance of information regarding SELF CARE. I can tell you quite a bit about this as an Esthetician it has been one of the many topics I hold dear to myself, clients, and those I educate in the industry. Today we will look at Self Care a little different then you may be used to. Visualize if you will your self care as it begins on the inside and works its way outward. Take a minute to think about all that includes. Breathe Organs Heartbeat Medical trauma Personal trauma Professional Trauma All that is before we see the results of this o the outside. In skin care we refer to pigmentation concerns for a client as if the problem started on the inside with a damged cell and may take years before it shows up as a darker spot then one is used to seeing. We blame the sun, age, and so forth. Or wrinkles, the same idea. Yu don’t have wrinkles at 20 because you havent been through the aging process. Now if we think of all the other baggage (good or bad) that we earn, get, deserve, don’t deserve, or just are a result of. Many of us know that stuff gets stuck. What is needed is EE (Emotional Exfoliation) Skincare is my all time favourite subject to teach. One of the most important aspects of the preventing many concerns of the skin is to Exfoliate regulary. What if we did that with our emotions, life, friends, personal and professional world. Many of you may already be in this mode. You evaluate circumstnaces and rid the bad to bring in the good. But what about those of you who have never even looked at life choices as just that…choices we make to get rid of what is no longer benefiting our life to allow the prosperity, finances, open doors, new jobs, and many other opportunities come forth."
      ]
    },
    {
      "title": "AI Apps with AWS & React: Full-Stack & Mobile Mastery",
      "url": "https://www.udemy.com/course/full-stack-generative-ai-with-aws-react-android-app/",
      "bio": "Master AI-powered web & mobile apps with AWS, React, & Stable Diffusion. Ideal for full-stack developers",
      "objectives": [
        "Build Full Stack Generative AI Web Apps: Develop applications using AWS, React JS, and Generative AI for image generation from text inputs.",
        "Configure CI/CD Pipeline with AWS Amplify and GitHub: Automate build, test, and deployment processes using Amplify and GitHub.",
        "Enhance User Experience and UI: Improve UI with prompt input, dynamic image rendering, and responsive design using React JS and Bootstrap.",
        "Convert Web App to Native Mobile: Convert React JS apps to native Android using Capacitor and Ionic for seamless mobile experiences.",
        "Implement Advanced AI Techniques: Explore stable diffusion models and deep learning architectures for enhanced generative AI.",
        "Solve CORS Errors & Ensure Security: Address CORS errors & implement security measures for data protection.",
        "Effective GitHub Repository Management: Master handling issues, pull requests & version control for collaborative development.",
        "Optimize App Performance & Deployment: Learn techniques to optimize performance & deploy apps using AWS services.",
        "Apply DevOps Principles in Full Stack Dev: Streamline workflow with infrastructure as code, automation, CI/CD.",
        "Mobile App Publishing & Distribution: Publish & distribute native mobile apps for maximum user reach."
      ],
      "course_content": {
        "Introduction and Setup - Deploying Stable Diffusion Model in SageMaker Domain": [
          "Introduction to AWS Generative AI Full Stack App with Stable Diffusion",
          "Creating Amazon SageMaker Domain",
          "Deploying Stable Diffusion Model in SageMaker Endpoint",
          "Multiple Choices",
          "Setting up the Development Environment"
        ],
        "App Architecture and Flow - Understanding Stable Diffusion App Architecture": [
          "Explaining Stable Diffusion App Architecture Diagram",
          "Explaining Flow Diagram for Stable Diffusion Architecture",
          "Multiple Choices",
          "Understanding Stable Diffusion App Architecture"
        ],
        "Backend Development - Creating and Deploying AWS Lambda Functions": [
          "Creating and Testing AWS Lambda Function",
          "Assigning Execution Role to AWS Lambda Function",
          "Creating S3 Bucket and Updating Lambda Environment Variables",
          "Writing Python Code in AWS Lambda to Fetch Image",
          "Creating and Using AWS Lambda Layers",
          "Testing and Deploying AWS Lambda Function",
          "Multiple Choices",
          "Testing and Deploying AWS Lambda Function",
          "Write a Python function called fetch_image_from_s3 that takes in the name of an image.",
          "Section 3 Practice Test: Backend Development - Creating and Deploying AWS Lambda"
        ],
        "API Gateway Integration - Seamless Integration with Amazon API Gateway": [
          "Creating a REST API in Amazon API Gateway",
          "Integrating AWS Lambda with Amazon API Gateway",
          "Invoke Amazon API Gateway Locally using POSTMAN",
          "Invoke Amazon API Gateway Locally using AWS Console",
          "API Gateway Integration - Seamless Integration with Amazon API Gateway"
        ],
        "Frontend Development - Building a React Web App and CI/CD Pipeline": [
          "Creating React Web App",
          "Initializing Git & Pushing Code to GitHub",
          "Configuring CI/CD Pipeline in AWS Amplify with GitHub",
          "Demo CI/CD with GitHub & AWS Amplify",
          "Updating React App for Prompt Input",
          "Creating a React Web App",
          "Initializing Git & Pushing Code to GitHub",
          "Configuring CI/CD Pipeline in AWS Amplify with GitHub"
        ],
        "Security and Error Handling - Implementing Security and Resolving CORS Errors": [
          "Adding Middleware Proxy in React App | React Security",
          "Validating CORS Error on AWS Amplify | Fixing CORS in React JS",
          "Fixing CORS Error and Running Gen AI Successfully in AWS",
          "Multiple Choices"
        ],
        "Responsive Design and Mobile App Conversion - Responsive UI and Mobile App": [
          "React App Responsive with React Bootstrap",
          "Introduction to Capacitor & Ionic: Convert React Web to Native Mobile App",
          "Installing Android Studio for React to Android",
          "Converting React JS App to Android App with Capacitor",
          "Multiple Choices"
        ],
        "Finalization and Next Steps - Managing GitHub Repo and Future Enhancements": [
          "GitHub Repo Management: Issues, Pull Requests & Merge",
          "Next Steps in Full Stack Generative AI | Challenge Yourself, Expand Your Skills",
          "Multiple Choices"
        ]
      },
      "requirements": [
        "No prerequisites? No problem! This course is designed to be beginner-friendly, providing a welcoming environment for learners of all levels. Join us and embark on an exciting learning journey!",
        "Basic programming knowledge: Prior understanding of programming concepts is helpful but not required. We'll explain the code as we go along.",
        "Familiarity with web development: Basic knowledge of HTML, CSS, and JavaScript will ease your learning experience, but we'll cover the necessary concepts.",
        "Curiosity and eagerness to learn: The most important requirement is a passion for learning and exploring generative AI and full stack development.",
        "Access to a computer: You'll need a computer or laptop with internet access to follow along with coding exercises and access the necessary tools."
      ],
      "description": "Unlock the Power of AI with Full-Stack Development: Build Generative AI Apps with AWS & React\n\n\nWelcome to the Full Stack Generative AI course, where you'll master the art of creating cutting-edge AI-powered applications using AWS and React. This comprehensive course is designed for developers eager to dive deep into generative artificial intelligence (AI) and gain hands-on experience in building full-stack applications that harness the power of AI models like GANs and transformers.\n\n\nWhat You’ll Learn:\nGenerative AI Development: Explore the captivating world of generative AI and learn how to create stunning images, mesmerizing music, and captivating text using state-of-the-art AI models.\nAWS Expertise: Get hands-on with AWS services like Amazon SageMaker for training and deploying generative models, and build robust backends using AWS Lambda, API Gateway, and DynamoDB.\nReact Mastery: Develop a sleek, responsive frontend with React that seamlessly integrates with your AI-powered backend to showcase generated content.\nMobile App Development: In an exclusive bonus section, extend your AI applications to mobile by learning React Native to deploy your creations on Android devices.\nCourse Highlights:\nFull-Stack Integration: Learn to combine AWS with React to build full-stack applications that can handle data processing, storage, and API interactions.\nResponsive Design: Master the art of creating web applications that adapt flawlessly to any screen size, ensuring a seamless user experience across devices.\nAdvanced Topics: Dive into mobile app development with React Native and take your AI projects to the next level by deploying them on Android.\n\n\nBy the end of this course, you'll have a solid foundation in full-stack generative AI development, equipped with the skills to create awe-inspiring applications that produce remarkable art, music, and text. Whether you're looking to enhance your web development skills or break into the exciting field of AI, this course offers the tools and knowledge you need to succeed.\nEnroll today to start building AI-powered web and mobile apps with AWS and React, and take your full-stack development skills to new heights!\n\n\nWhy Choose This Course?\nComprehensive Curriculum: Covers everything from backend development on AWS to frontend mastery with React, and even extends to mobile app development.\nHands-On Projects: Gain real-world experience by working on projects that apply generative AI techniques in practical scenarios.\nBonus Content: Access exclusive sections that explore responsive UI design and mobile app development, adding extra value to your learning experience.\nIgnite your creativity and unleash the potential of Full Stack Generative AI. Join now and embark on a journey that combines AI, AWS, and React to create innovative applications that push the boundaries of technology.",
      "target_audience": [
        "Beginner to intermediate developers: Learn Full Stack Generative AI app development with AWS & React.",
        "AWS learners: Explore AWS services for AI-driven web development and Generative AI.",
        "React web developers: Integrate React JS with Generative AI models and AWS infrastructure.",
        "Full Stack developers: Enhance skills in building end-to-end applications with Generative AI capabilities.",
        "AWS Solutions Architects & Customer Engineers: Deepen expertise in Full Stack Generative AI implementation.",
        "Technical Account Managers & Support Engineers: Gain practical knowledge in supporting Full Stack Generative AI solutions."
      ]
    },
    {
      "title": "Object-Based Search in Flutter: Build AI-Powered Gallery App",
      "url": "https://www.udemy.com/course/build-ai-gallery-app-in-flutter-with-circle-to-search-feature/",
      "bio": "Learn Flutter & AI by building a smart photo gallery app that sees, understands, and searches Images with gestures",
      "objectives": [
        "Build visually appealing, high-performance gallery apps using Flutter’s powerful framework",
        "Implement the innovative 'Circle to Search' functionality powered by AI for intuitive user interaction",
        "Develop apps that seamlessly run on both Android and iOS platforms with Flutter’s cross-platform capabilities.",
        "Integrate AI-driven features to enhance app usability and deliver a cutting-edge user experience.",
        "Replicate and adapt advanced AI features for other apps to expand your development skill set."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Application Demo"
        ],
        "Setup for MacOS": [
          "Install the Flutter SDK",
          "Install Android Studio",
          "Install and Setup XCode",
          "Creating A Flutter Project and Installing in IOS Simulator",
          "Install the Android Emulator"
        ],
        "Setup for Windows": [
          "Installing Flutter on Windows",
          "Installing Android Studio",
          "Creating Android Virtual Device"
        ],
        "Flutter AI Gallery App": [
          "Creating a New Flutter Project and Setting Up the Library",
          "Fetching Albums of Gallery In Flutter",
          "Dynamic Permission Handling in Flutter",
          "Creating GUI of Gallery App in Flutter",
          "Loading Thumbnails of Gallery Albums in Flutter",
          "Testing Flutter Application on Android Aswell",
          "Formatting Albums Thumbnails and Showing Albums Names in Flutter",
          "Showing Count of Album Items and Making Images Rounded in Flutter"
        ],
        "Album Detail & Image View Page of Flutter AI Gallery App": [
          "Creating Album Screen in Flutter Gallery App",
          "Showing Album Images in Flutter Gallery App",
          "Making UI Enhancements in Our Flutter Gallery Application",
          "Creating Image View Screen of Flutter Gallery App",
          "Displaying Selected Image in our Flutter Application"
        ],
        "Circle to Search: Drawing On Screen With Finger In Flutter Application": [
          "Drawing On Screen Using Signature Widget In Flutter",
          "Positioning of Widgets in Flutter for Circle to Search",
          "Capturing User Gestures in Flutter"
        ],
        "Circle to Search: Cropping Images in Flutter": [
          "Get the Points for Cropping Images in Flutter",
          "Cropping Original Image in Our Flutter Application",
          "Showing Cropped Images in Flutter",
          "Scaling Points and Showing Correctly Cropped Image in Flutter",
          "Showing Original Image and Removing Circle in Flutter"
        ],
        "Circle to Search: Perform Search from Flutter App": [
          "How Search Will Be Performed in Our Flutter Application",
          "Exploring Image Hosting Service For Flutter Apps",
          "Adding the networking library and preparing API Request",
          "Making API Request and Uploading Cropped Image in Flutter",
          "Creating Magic Url for Circle to Search in Flutter",
          "Creating Lens Screen and Showing Results in Flutter",
          "Configurations for Webview & testing Flutter App on Android"
        ],
        "Customisation of Circle to Search in Flutter": [
          "Adding Appbar in LensView Screen of our Flutter Gallery App",
          "Enabling and Disabling Circle to Search Feature in our Flutter App",
          "Enable and Disable CTS in Flutter With Long Press"
        ],
        "Adding Frame and Animations in Flutter": [
          "Adding Frame Image in Flutter App and Showing it",
          "Drawing Rectangle on Image at a selected location in Flutter",
          "Adding Animation to Rectangle and making process smooth in Flutter",
          "Drawing Frame in Flutter Overview"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts (preferably in any language)."
      ],
      "description": "Step into the future of mobile development with this hands-on course that fuses the power of Flutter with AI-based visual intelligence. In this project-based course, you'll build a Smart Gallery App that can recognize images, respond to gesture-based input, and offer intuitive search features like Circle to Search—all inspired by cutting-edge Android AI functionality.\nWhat Makes This Course Unique?\nAI Visual Intelligence in Action – Teach your app to detect and understand objects inside images\nGesture-Based Interaction – Implement the trending “Circle to Search” feature using gesture detection\nReal-Time Search with AI – Build intelligent search features powered by visual input\nBeautiful, Cross-Platform App – Use Flutter to deploy the app on both Android and iOS\nLearn by Doing – Build a real, portfolio-ready app with step-by-step coding tutorials\nWhat You’ll Learn\nBuild beautiful, responsive UIs using Flutter\nIntegrate AI features to recognize objects inside images\nUse Flutter gestures to enable Circle to Search-style interaction\nProcess images with ML models and deliver contextual search results\nExport and deploy your app to Android and iOS\nImprove UX using AI and gesture-based design patterns\nWho Is This Course For?\nFlutter developers who want to integrate AI and computer vision into their apps\nBeginners and intermediates looking to learn by building a real project\nApp developers who want to clone features from top-tier Android devices\nAnyone interested in mobile AI, image processing, or gesture-based apps\nWhat’s Included\nSource code and project files\nVisual walkthroughs of each feature\nReal-world use case demonstrations\nQuizzes and coding exercises (optional)\nCertificate of Completion\nWhy This Course?\nAI is reshaping how users interact with mobile apps. In this course, you won't just learn Flutter—you'll learn how to make your apps think and see. By the end, you’ll have a cutting-edge gallery app that combines visual intelligence, gesture recognition, and AI-driven search, ready for your portfolio or the app store.\nTake the Leap Today\nWhether you're a Flutter beginner or an experienced developer, this course will level up your skills in both app development and AI-powered UX design. Enroll now and start building intelligent mobile apps that stand out!",
      "target_audience": [
        "Anyone Interested in Building Innovative Mobile Applications in Flutter",
        "Flutter developers looking to enhance their skill set and incorporate advanced features like 'Circle to Search' and AI integration into their projects will find this course invaluable.",
        "Students and professionals aiming to explore the potential of AI in mobile app development.",
        "Mobile app developers seeking to create innovative, cross-platform apps for Android and iOS."
      ]
    },
    {
      "title": "Developing a Drawing App for Android",
      "url": "https://www.udemy.com/course/developing-a-drawing-app-for-android/",
      "bio": "Create a Drawing app for Android from Scratch",
      "objectives": [
        "Creating a Drawing App for Android from Scratch"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you should know?"
        ],
        "Exploring the Basic UI of Application": [
          "Exploring the Basic UI of the Application - I",
          "Exploring the Basic UI of the Application - II"
        ],
        "Skeleton of Application": [
          "Skeleton of Application"
        ],
        "Creating Application from Scratch": [
          "Creating Application From the Scratch"
        ],
        "Creating Basic Layouts of the Application main XML file": [
          "Creating main XML Layout",
          "Adding Linear layout and image view to main XML Layout",
          "Adding Graphics to the Buttons",
          "Registering Buttons on onclicklisteners"
        ],
        "Creating Basic Layout of second activity and menu options": [
          "Creating layout for second activity",
          "Designing layout for color dialog",
          "Designing layout for width dialog"
        ],
        "Coding Buttons of Main Activity": [
          "Coding Save Button Part - I",
          "Coding Save Button Part - II",
          "Coding Load Button",
          "Setting ImageView on Linear Layout"
        ],
        "Handling Touch Events and Running Code in Emulator": [
          "Handling Touch Events",
          "Running code in Emulator"
        ],
        "Coding Buttons and Exploring Second Activity": [
          "Coding Save Button of Second Activity",
          "Remaining Part of Save Button and Doing Code for Load and Cancel Button",
          "Creating Directory for save button to save image to External storage",
          "Putting Drawing Canvas in a Linear Layout",
          "Coding getCurrentTime method",
          "Coding getTodayDate and prepareDirectory methods",
          "Coding makeDirs Method"
        ],
        "Getting into DrawCanvas class for Drawing shapes": [
          "Using Paint class for Drawing Shapes",
          "Continuing save method with onTouch Events",
          "Covering Expand and Reset Dirty Methods",
          "Running Second Activity Code in Emulator"
        ]
      },
      "requirements": [
        "Android SDK Installed and Configured",
        "Eclipse IDE",
        "Windows, Linux or OS X"
      ],
      "description": "With \"Developing a Drawing App for Android\", you will learn everything about Drawing Apps, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in Android development. We'll start from the basics of Drawing App development to more advanced and the most popular techniques and features used now a days.\n\"Building a Drawing App for Android\" will give you a new perspective on how the Android SDK works and after you completed the course you will be able to create your own Drawing App with the latest API. Hope you enjoy!\nNOTE: In order to keep you up to date in the world of Android Development all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.\n\"The average annual salary for employed app developers in 2011 was nearly $90,000. By 2016, the total revenue from consumer mobile apps is expected to top $50 billion.\" By learning android development from this course you can also earn the same amount of salary or even more than that. Best of Luck",
      "target_audience": [
        "Should know Java Programming",
        "Should be familiar with Android SDK, no need to be an expert android developer"
      ]
    }
  ]
}