{
  "courses": [
    {
      "title": "Máster en Typescript: Desde Cero a Nivel Profesional",
      "url": "https://www.udemy.com/course/master-typescript-de-cero/",
      "bio": "Guía completa de typescript construyendo proyectos y utilizando técnicas de código limpio. Incluye React y Express",
      "objectives": [
        "Fundamentos de TypeScript.",
        "Aplicar Typescript en distintos proyectos.",
        "Refactorizar código typescript utilizando técnicas de código limpio.",
        "Utilizar typescript junto con React.",
        "Utilizar typescript junto con Express..",
        "Programación asíncrona en Typescript."
      ],
      "course_content": {
        "Primeros pasos": [
          "Qué es Typescript",
          "Instalar Typescript",
          "Ejecutando Typescript",
          "NPM- ts-node"
        ],
        "Tipos en Typescript": [
          "Introducción",
          "Tipos básicos",
          "Anotaciones y Inferencia de tipos",
          "Tipos Objects",
          "Arrays",
          "Tuplas",
          "Enums",
          "Any",
          "Union",
          "Literal",
          "Fin Sección",
          "Evaluación"
        ],
        "Funciones": [
          "Introducción",
          "Creando funciones",
          "Anotaciones en funciones",
          "Never en funciones",
          "Funciones como Tipos",
          "Funciones callbacks"
        ],
        "Entendiendo tsconfig": [
          "Modo watch",
          "Modo watch en mas de un archivo",
          "Include/Exclude",
          "Compilador Option/Target",
          "Lib",
          "Source map",
          "NoEmitOnError",
          "Outdir",
          "NullCheck",
          "AdditionalCheck"
        ],
        "Interfaces y clases": [
          "Introducciòn",
          "Interfaces",
          "types y interfaces",
          "Clases",
          "Keyword this",
          "Visibilidad atributos",
          "atributos en constructor",
          "Solo lectura",
          "Herencia",
          "Visibilidad en Herencia",
          "getter y setter",
          "Métodos estáticos",
          "Clases abstractas",
          "Clases y Interfaces"
        ],
        "Proyecto google map + typescript": [
          "Introducción",
          "Información Sección",
          "Creando proyecto",
          "Typescript en Navegador Web",
          "Ejercicio",
          "Estructura Proyecto",
          "Random data",
          "Archivos de definición",
          "Asignando datos",
          "Import/Export",
          "Modulos en el browser",
          "Herencia +ejercicio",
          "Habilitar google map",
          "Integración mapa",
          "Parámetros opcionales mapa",
          "Refactor index y map",
          "Agregar Marcadores: Primera Solución",
          "Agregar Marcadores: Segunda solución",
          "Agregar Marcadores: Tercera solución",
          "Marcador - InfoWindows",
          "Geolocalización",
          "Reverse Geolocalización",
          "Ejercicio Interfaz GeoCoding",
          "Ejercicio/Solucion Buscador"
        ],
        "Tipos avanzados": [
          "Introducción",
          "intersection types",
          "typeguard",
          "Discriminated unions",
          "typecasting",
          "index type",
          "Function overload",
          "Optional chaining",
          "Nullish Coallesing",
          "Fin Sección"
        ],
        "Genericos": [
          "Introducción",
          "Generic en clases",
          "Inferencias en Generic",
          "Generic funciones",
          "Constraints en Generic",
          "KeyOf",
          "Buit-in Generics",
          "Fin Sección"
        ],
        "Decoradores": [
          "Introducción",
          "decorador en clases",
          "decoradores en detalle",
          "Property descriptor",
          "Decorator method",
          "Decorator factory",
          "Decorator Property - Setup proyecto",
          "Metadata Decorator property",
          "Método validación",
          "Decoradores en parametros",
          "Fin Sección"
        ],
        "Patrones asíncronos": [
          "Introducción",
          "Qué es un callback?",
          "Demo callbacks",
          "Qué es un promise?",
          "Demo promise",
          "Async await",
          "Fin Sección"
        ]
      },
      "requirements": [
        "Conocimientos básicos en Javascript",
        "Ganas de aprender"
      ],
      "description": "TypeScript es un Superset de Javascript, es decir, un lenguaje que está construido encima del propio Javascript en el sentido que agrega nuevas características al lenguaje Javascript, ofreciendo nuevas herramientas y funcionalidades para los programadores.\nEn este curso aprenderás Typescript desde un punto de vista práctico, no solo revisaremos la sintaxis, si no aplicaremos cada uno de los conocimientos en distintos proyectos desafiantes.\nQue voy a obtener este curso:\nConocer el lenguaje Typescript desde cero hasta un nivel avanzado.\nAplicar los conocimientos del lenguaje en distintos proyectos:\nProyecto de Google map.\nProyecto utilizando React.\nProyecto utilizando Express.\nTécnicas de refactor para tener un código limpio y mantenible.\nMejorar el código utilizando genéricos y decoradores.\nEntender y trabajar utilizando patrones asíncronos.\nIntegrar Typescript en React.\nIntegrar Typescript en Express.",
      "target_audience": [
        "Personas que deseen aprender TypeScript.",
        "Personas que deseen mejorar su código utilizando técnicas de código limpio"
      ]
    },
    {
      "title": "Herkes İçin Python Programlama",
      "url": "https://www.udemy.com/course/herkes-icin-python-programlama/",
      "bio": "Sıfırdan ileri seviyeye python programlama öğrenin.",
      "objectives": [
        "Temel ve ileri Düzey Veri Yapıları",
        "Koşul Yapıları",
        "Döngü Yapıları",
        "Fonksiyon Yapıları",
        "Python Dahili Modülleri",
        "Nesne Tabanlı Programlama",
        "PyQt5 Arayüz Tasarlama",
        "Sqlite3 Veritabanı Programlama",
        "Hata ve istisnalar",
        "Threading yapıları",
        "Veri Analizi ve Veri Görselleştirme",
        "3 Boyutlu Modelleme ve Simülasyon",
        "Görüntü İşleme",
        "Gerçek Dünya Uygulamaları"
      ],
      "course_content": {
        "Giriş": [
          "Python idle kurulumu",
          "Python Veri Tipleri",
          "Python Veri Tipi Dönüşümleri",
          "Python'da Değişken Tanımlama",
          "Print Fonksiyonu",
          "Print Fonksiyonu Parametreleri",
          "Python Kaçış Dizileri",
          "Exec() , Eval() ve format() Fonksiyonlarının İncelenmesi",
          "İnput Fonksiyonu İle Kullanıcıdan Bilgi Almak"
        ],
        "Python Koşul Yapılarının İncelenmesi": [
          "Python'da Bool İfadelerinin İncelenmesi",
          "Python İf Yapısının İncelenmesi",
          "Python İf - Else - Elif Yapısının İncelenmesi",
          "Python Nested İf Else Yapısının İncelenmesi"
        ],
        "Python Döngü Yapıları": [
          "While Döngüsünün İncelenmesi",
          "For Döngüsünün İncelenmesi",
          "Nested For Döngülerinin İncelenmesi",
          "Break - Continue Deyimlerinin İncelenmesi",
          "Break - Continue Deyimlerinin İncelenmesi - 2"
        ],
        "Python fonksiyonlar": [
          "Fonksiyon Nedir ? Ve Fonksiyon Nasıl Yazılır ?",
          "Fonksiyon Parametreleri",
          "Fonksiyonlarda Parametre Varsayılanları",
          "Fonksiyonlarda Küresel Ve Yerel Değişkenlerin İncelenmesi",
          "Fonksiyonlarda Global Ve Return Deyimlerinin İncelenmesi"
        ],
        "Python liste ve demetler": [
          "Liste İndexlerine Ulaşma Ve Çok Boyutlu Listeler",
          "Liste len() fonksiyonu ve liste üreteçleri",
          "Liste ve Demetler",
          "append() ve extend() metodları",
          "index() ve sort() metodları",
          "count(), copy(), clear() metodları"
        ],
        "Python ile karakter dizi işlemleri": [
          "Karakter Dizileri Ve Index İşlemleri",
          "Dizi Öğelerinin Parçalanması (split() ve rsplit() metodu)",
          "Dizi Öğelerinde Değişiklik Yapılması (lower(),upper() metodları)",
          "Dizi Öğelerinin Son ve İlk Karakter İşlemleri (endswith() ,startswith () metodu)",
          "Dizi Öğe İşlemleri (swapcase(), title(), strip(), lstrip())",
          "Dizi Öğelerinin Son ve İlk Karakter İşlemleri (index(), zfill(), count() metodu)"
        ],
        "Python İle Aritmetik İşlemler": [
          "Python Aritmetik fonksiyonlar(abs(), divmod() )",
          "Python Aritmetik Fonksiyonlar - 2 ( max(), sum(), round(), pow() )"
        ],
        "Python Dictionary (Sözlük) Yapıları": [
          "Sözlük Yapısının İncelenmesi",
          "Sözlük Öğelerine Erişmek",
          "Sözlük Öğe Metodları (keys(), items(), get())",
          "Sözlük Öğe Metodları (copy(), clear(), fromkeys())",
          "Sözlük Metodlarının İncelenmesi (pop(), popitem(), update())"
        ],
        "Python Set (Küme) Yapıları": [
          "Küme Oluşturma",
          "Küme Üreteçleri Ve Metodları (copy(), clear()9",
          "Küme Metodları (add(), remove(), discard())",
          "Küme Metodları (union(), update(), pop())"
        ],
        "Python Dosya Okuma, Yazma İşlemleri": [
          "Text Dosyalarının Açılması Ve Veri Yazdırma Yöntemleri",
          "Text Dosyalarından Veri Okunması",
          "Text Dosyalarına Veri Ekleme",
          "Dosya İşlem Metodları (closed(), readable())",
          "Dosya İşlem Metodları - 2 (writeable(), truncate(), name(), mode())"
        ]
      },
      "requirements": [
        "Temel seviyede programlama bilgisi ve öğrenmeye meraklı bir zihin yeterli."
      ],
      "description": "Python programlama dili ile ilgili kapsamlı çalışmaların yoksunluğundan ortaya çıkan kurs sayesinde işlenen konularda başka kaynağa ihtiyaç duymadan detaylı bir şekilde öğreneceksiniz. Kurs temelden başlanarak ilerlediğinden python programlama dünyasını keşfetmek isteyen her bireye hitap etmektedir.\nKurs Kapsamında İşlenecek Konular:\nPython tanımlı veri tipleri ve veri tipi dönüşümleri\nPrint fonksiyonu ve parametreleri\nKarakter dizileri ve metotları\nListeler ve metotları\nKümeler ve metotları\nDemetler ve metotları\nFonksiyonlar\nDöngüler\nKoşul Bağlaçları\nArayüz Tasarlama\nVeri Tabanı Programlama\nHata ve istisnalar\nThreading İşlemleri\nNesne Yönelimli Programlama\nVeri Analizi\nVeri görselleştirme\n3 Boyutlu Modelleme Ve Simülasyon\nGörüntü İşleme\nGerçek Dünya Uygulamaları",
      "target_audience": [
        "Python programlama dilinin keyifli dünyasını keşfetmek isteyen ancak programlama konusunda yeterli bilgiye sahip olmayan kişiler",
        "Belli seviyede bilgi sahibi olan ancak kendini geliştirmek isteyen kişiler",
        "Python programlama dilinin yeteneklerini görmek ve python ile neler yapılabileceğini görmek isteyenler",
        "Veri analizi, Veri Görselleştirme,Arayüz Tasarlama,Görüntü işleme,Nesne tabanlı programlama gibi farklı alanlardaki konular için farklı kurslara ayrı ayrı para vermeden tek kaynaktan programlama öğrenmek isteyenler",
        "Gerçek dünya uygulamaları ile yazılım geliştirmeyi başka bir boyuta taşımak isteyenler"
      ]
    },
    {
      "title": "C 언매니지드 프로그래밍",
      "url": "https://www.udemy.com/course/c-unmanaged-programming-by-pocu/",
      "bio": "이 강좌는 선수 과목인 '실무 프로그래밍 입문'에서 배운 절차적 프로그래밍 지식을 기반으로 C언어가 언매니지드 언어로서 가지는 기능들에 대해서 알아봅니다. (김포프, POCU 포큐 아카데미)",
      "objectives": [
        "C 언어 사용법",
        "하드웨어 동작 원리",
        "C 언어가 언매니지드 언어로서 가지는 기능들"
      ],
      "course_content": {
        "과목 소개": [
          "이 과목에서 사용하는 서비스 및 도구",
          "강의 시청",
          "중요 정보",
          "실습과 과제 진행하기",
          "질문은 어디서, 어떻게 해야하나요?",
          "선수 과목",
          "수업 일정",
          "슬라이드 표기법 소개",
          "C를 배워야 하는 이유",
          "언매니지드 언어로써의 C",
          "C는 모든 언어의 어머니"
        ],
        "수업에 도움되는 자료": [
          "참고자료 안내",
          "동영상 강좌 관련 질문 안내"
        ],
        "C언어 기본 문법 1": [
          "C89 표준",
          "Hello World",
          "#include, stdio.h",
          "main(void) 함수",
          "printf() 함수",
          "주석(comment)",
          "복습 퀴즈",
          "C언어의 기본 문법",
          "자료형, unsigned와 signed",
          "char 형",
          "복습 퀴즈",
          "short 형",
          "영상 퀴즈",
          "int 형, long 형",
          "복습 퀴즈",
          "float 형, double 형, long double 형",
          "복습 퀴즈",
          "코드보기: 기본 자료형",
          "C언어의 bool 형",
          "열거형(enum)",
          "코드보기: 열거형",
          "변수 선언",
          "복습 퀴즈",
          "연산자",
          "sizeof 연산자",
          "size_t",
          "역 참조 연산자",
          "구조체/공용체 멤버 접근자",
          "비교 연산자, 논리 연산자, 조건 연산자",
          "복습 퀴즈",
          "조건문과 반복문, if 문, switch/case 문",
          "코드보기: switch/case",
          "for 문, while 문, do while 문",
          "코드보기: 조건문/반복문",
          "복습 퀴즈"
        ],
        "C언어 기본 문법 2, 빌드 단계": [
          "함수",
          "함수 정의의 문제",
          "함수 선언",
          "복습 퀴즈",
          "함수 매개변수 평가 순서, 피연산자 평가 순서",
          "연산자 우선순위와 평가 순서 1",
          "연산자 우선순위와 평가 순서 2",
          "영상 퀴즈",
          "평가 순서를 강제하는 연산자",
          "복습 퀴즈",
          "범위(scope)",
          "코드보기: 전역 변수",
          "복습 퀴즈",
          "const 키워드",
          "복습 퀴즈",
          "goto 문",
          "goto 문은 정말로 악마인가요?",
          "코드보기: goto 문",
          "복습 퀴즈",
          "배열",
          "코드보기: 배열",
          "스택 메모리",
          "스택 메모리에 대해서 간단히 알아보자!",
          "스택 메모리 안의 배열, 스택 오버플로",
          "배열의 요소 개수 구하는 방법",
          "길이가 명시된 매개변수 배열",
          "매개변수 배열의 길이, 배열 요소의 초기값",
          "다차원 배열",
          "코드보기: 다차원 배열",
          "정리",
          "소스코드에서 실행파일까지, C 프로그램의 빌드 과정",
          ".h와 .c 파일",
          "헤더 파일이 필요한 이유",
          "#include <>와 #include \"\"",
          "빌드 과정: 전처리 단계",
          "트랜슬레이션 유닛 보는 방법",
          "빌드 과정: 컴파일 단계",
          "어셈블리어 코드 보는 방법",
          "빌드 과정: 어셈블 단계",
          "오브젝트 코드 보는 방법",
          "빌드 과정: 링크 단계",
          "링크 단계가 분리되어 있는 이유",
          "라이브러리(library), 정적/동적 라이브러리와 링크",
          "분할 컴파일과 전역 변수",
          "다른 파일에 있는 전역 변수 사용 시 문제점",
          "extern 키워드",
          "코드보기: extern 키워드",
          "전역 변수의 문제, static 키워드",
          "코드보기: static 키워드",
          ".c와 .h 파일 정리, 순환 헤더 인클루드와 해결법",
          "인클루드 가드 작동법",
          "인클루드 가드 예제",
          "C 컴파일러의 종류와 특징",
          "정리"
        ],
        "포인터": [
          "포인터 (pointer)",
          "주소 연산자 &",
          "복습 퀴즈",
          "메모리 주소 저장하기",
          "포인터의 의미",
          "메모리 주소에 저장된 자료형",
          "포인터 변수를 선언하는 방법",
          "포인터 변수를 부르는 방법",
          "포인터 변수의 실제 메모리 뷰",
          "포인터의 비유: 현실 세계 예",
          "다른 포인터의 예",
          "포인터에 저장된 주소도 바꿀 수 있나요?",
          "복습 퀴즈",
          "역 참조 연산자 *",
          "참조와 역 참조",
          "역 참조를 이용한 값 변경 예",
          "복습 퀴즈",
          "포인터로 두 변수의 값 바꾸기",
          "값에 의한 전달 vs 참조에 의한 전달",
          "코드보기: Min, Max 한 번에 구하기",
          "포인터와 함수 반환 값",
          "댕글링 포인터(dangling pointer)",
          "널(NULL) 포인터",
          "NULL이 가지는 문제들",
          "널 포인터는 언제 사용하나요?",
          "복습 퀴즈",
          "포인터의 비교",
          "포인터의 크기",
          "포인터와 배열의 비교",
          "배열 포인터에 대입하기",
          "배열 속 각 요소의 위치, 각 요소의 위치 계산하기",
          "복습 퀴즈",
          "배열 요소에 포인터로 접근하기",
          "포인터 중간 정리, 포인터의 캐스팅",
          "영상 퀴즈",
          "딱 '한' 바이트만 옮기기",
          "코드보기: int 메모리 뷰어",
          "코드보기: 두 배열이 겹치는가?",
          "두 주소 간의 사칙연산",
          "자바와 C#에서는 모든 것이 포인터다",
          "포인터를 사용한 안전하지 않은 코드",
          "포인터와 배열의 차이",
          "복습 퀴즈",
          "다시 만나는 연산자 결합 법칙",
          "영상 퀴즈",
          "포인터와 연산자 우선순위 및 결합 법칙",
          "동일한 우선순위를 갖는 연산자들",
          "조금 더 빠른 배열의 요소 더하기 함수",
          "왜 *p++이 더 빠르죠?",
          "복습 퀴즈",
          "포인터와 const",
          "주소를 보호하는 const 포인터",
          "값을 보호하는 const를 가리키는 포인터",
          "두 const의 정리와 예",
          "주소와 값 모두 지키는 const",
          "const 포인터 읽는 방법 정리",
          "복습 퀴즈",
          "const는 절대 제거하지 말자",
          "코드보기: 벡터 덧셈",
          "포인터의 용도",
          "포인터 배열",
          "2차원 포인터 배열",
          "코드보기: 2D 배열을 배열의 배열로 바꾸기",
          "정리"
        ],
        "C 스타일 문자열, 출력": [
          "문자열의 표현과 길이",
          "문자열 관리 시 길이의 문제",
          "문자열 길이 문제 해결방법 1",
          "문자열 길이 문제 해결방법 2, C 스타일 문자열",
          "영상 퀴즈",
          "C 스타일 문자열의 장단점, 문자열 길이 구하기",
          "문자열 조작, 두 문자열의 비교",
          "문자열 비교 알고리듬",
          "더 효율적인 문자열 비교 함수 작성하기 1",
          "더 효율적인 문자열 비교 함수 작성하기 2, strcmp()와 strncmp()",
          "복습 퀴즈",
          "코드보기: 대소문자 구분없는 문자열 비교",
          "문자열 복사, strcpy(), strncpy()",
          "문자열 합치기, strcat(), strncat()",
          "코드보기: 문자열 버퍼를 이용한 출력",
          "복습 퀴즈",
          "문자열 찾기",
          "문자열 찾기 함수가 메모리 주소를 반환하는 이유",
          "문자열 토큰화",
          "복습 퀴즈",
          "코드보기: 문자열을 대문자 또는 소문자로 바꾸기",
          "출력, 서식 지정(formatted) 출력, 서식 문자열(format string)",
          "일반적인 서식 문자열 형식, 서식 지정자(format specifier)",
          "복습 퀴즈",
          "코드보기: ASCII 표 그리기",
          "코드보기: 바이트 단위 변환 표",
          "서식 문자열이 필요한 이유, fprintf(), stdout, 버퍼링, sprintf()",
          "출력 함수의 안정성, 기타 출력 함수",
          "정리"
        ],
        "콘솔 입력, 파일 입출력, 커맨드 라인 인자": [
          "입력",
          "한 글자씩 읽기, 한 글자씩 읽는 알고리듬 1",
          "getchar()와 EOF 키",
          "한 글자씩 읽기 알고리듬 2, EOF 키는 어디 있나요?",
          "복습 퀴즈",
          "코드보기: 공백(whitespace)과 줄 수 세기",
          "한 줄씩 읽기, gets()",
          "fgets()로 안전하게 한 줄 읽기",
          "한 줄씩 읽는 방법이 유용한 경우",
          "복습 퀴즈",
          "한 데이터씩 읽기, scanf()",
          "scanf()의 일반적인 서식 문자열 형식",
          "scanf() 사용 예",
          "문자를 읽을 때 scanf()의 문제점과 해결책, clearerr()",
          "코드보기: 게임 전적 쓰고 읽기",
          "복습 퀴즈",
          "한 블록씩 읽기",
          "파일 입출력",
          "파일 열기",
          "파일에 쓰기/읽기 예, fflush(), 파일에 이어 쓰기 예",
          "파일 닫기, 파일 오류처리, stderr, strerror(), perror()",
          "복습 퀴즈",
          "코드보기: 파일 복사하기",
          "파일 탐색",
          "코드보기: 도돌이표",
          "입출력 리디렉션",
          "커맨드 라인 인자",
          "복습 퀴즈",
          "커맨드 라인 인자 메모리 뷰",
          "코드보기: 제대로 된 파일복사",
          "정리"
        ],
        "구조체, 공용체, 함수 포인터": [
          "구조체, 구조체의 필요성",
          "구조체의 선언 및 사용",
          "typedef 이란?, typedef 사용법",
          "구조체 변수 초기화 하기",
          "구조체 매개변수",
          "복습 퀴즈",
          "함수 반환값으로서의 구조체, 구조체 배열",
          "영상 퀴즈",
          "얕은 복사, 깊은 복사",
          "구조체 사용 시 포인터 저장의 문제",
          "구조체를 다른 구조체의 멤버로 사용하기, 바이트 정렬",
          "복습 퀴즈",
          "코드보기: 점, 선, 직사각형",
          "비트 필드",
          "공용체",
          "코드보기: 색상 표현하기",
          "메모리 공유만을 위한 공용체의 예",
          "복습 퀴즈",
          "함수 포인터, 함수를 변수에 저장할 수 있을까?",
          "함수를 매개변수로 전달할 때 필요한 것들, 함수 포인터 선언",
          "함수 포인터 읽는 방법, 오른쪽-왼쪽 규칙(Right-Left Rule)",
          "함수 포인터 쉽게 읽기",
          "복습 퀴즈",
          "코드보기: 콜백 함수",
          "배열의 포인터, 퀵 정렬, void 포인터",
          "코드보기: 구조체를 사용한 퀵 정렬",
          "코드보기: 기수(radix) 정렬",
          "정리"
        ],
        "가변 인자 함수, 올바른 오류 처리 방법": [
          "가변 인자 함수",
          "va_로 시작하는 매크로 함수들",
          "가변 인자 함수가 인자를 읽어오는 방법",
          "함수에서 매개변수로 가변 인자만 받을 수 있을까?",
          "코드보기: 초간단 서식 지정자",
          "오류 처리",
          "안 좋은 오류 처리의 예",
          "버그와 오류의 차이, 올바른 오류 처리 전략",
          "오류 처리 후에도 발생하는 예외 상황",
          "정리"
        ],
        "레지스터, 스택 & 힙, 동적 메모리. 다중 포인터": [
          "메모리의 종류",
          "스택 메모리",
          "레지스터",
          "어셈블리어로 보는 레지스터",
          "register 키워드",
          "힙 메모리",
          "동적 메모리",
          "메모리 할당 및 해제 함수, malloc()",
          "free(), malloc() 사용 예",
          "동적 메모리 할당 시 문제",
          "복습 퀴즈",
          "free()는 몇 바이트를 해제할지 어떻게 알지?, calloc(), memset(), realloc()",
          "realloc()의 메모리 누수 문제, memcpy()",
          "복습 퀴즈",
          "memcmp(), 정적 vs 동적 메모리",
          "동적 메모리의 소유권 문제",
          "복습 퀴즈",
          "다중 포인터, 이중 포인터",
          "영상 퀴즈",
          "다중 포인터를 쓰는 이유, 다중 포인터 예",
          "코드보기: 단어 정렬",
          "복습 퀴즈",
          "정리"
        ]
      },
      "requirements": [
        "'실무 프로그래밍 입문(C#)' 과목 수료",
        "'컴퓨터 공학용 수학' 과목 수료"
      ],
      "description": "본 비디오 강좌는 POCU 아카데미에서 진행하는 COMP2200 수업의 동영상 강의입니다.\n\n\nC는 가장 널리 사용되는 언매니지드 언어들 중 하나이며, 2019년 7월 기준 전 세계에서 2번째로 많이 사용되는 언어입니다. (출처: TIOBE)\n현존하는 프로그래밍 언어는 크게 매니지드(Managed) 언어와 언매니지드(Unmanaged) 언어로 나눠지며, 이 둘의 차이는 프로그래머가 컴퓨터 하드웨어를 직접 제어할 수 있는지의 여부입니다. (예: 프로그래머가 직접 메모리를 관리하는가?) 대표적인 언매니지드 언어인 C는 하드웨어와 매우 가깝다는장점으로 40년이 넘는 세월 동안 살아남았을 뿐만 아니라 아직도 컴파일러, 운영체제, 임베디드 시스템 등 저수준의 제어 및 메모리 절약이 요구되는 곳에 왕성하게 사용되고 있습니다. 그리고 이런 트렌드는 한 동안 바뀌지 않을 전망입니다.\n프로그래머의 지속적인 성장에 반드시 필요한 지식 중 하나는 컴퓨터 하드웨어에 대한 이해입니다. C는 대부분의 매니지드 언어와 달리 언매니지드 언어 특유의 기능 (예: 메모리 관리) 들을 포함하고 있기 때문에, 하드웨어의 동작 원리를 공부하고 싶은 분 들, 혹은 컴퓨터를 더 잘 이해하고 싶은 분들에게 좋은 입문용 언매니지드 언어라고 할 수 있겠습니다.\n이 강좌는 선수 과목인 '프로그래밍 입문'에서 배운 절차적 프로그래밍 지식을 기반으로 C언어가 언매니지드 언어로서 가지는 기능들에 대해서 알 아봅니다. 이 코스를 성공적으로 마무리한 분들은 하드웨어에 대한 더 넓은 시야를 갖출 수 있을 것입니다.\n본 강좌는 첫 주에 '프로그래밍 입문'과목에서 배운 기초 프로그래밍 개념들이 C에 어떻게 적용되는지 살펴 본 뒤 다음과 같이 크게 세 부분으로 나뉘며, 강의 진행도 이 순서를 따릅니다.\nANSI C/C89: C의 기본이 되는 내용과 C로 구현하는 자료 구조들. (~11주 차)\nC99: C99 표준에서 추가된 기능들 (12주 차 ~ 13주 차)\nC++1x: C11/18 표준에서 추가된 최신 기능들 (14주 차~)\n위와 같이 강의를 세 부분으로 나눈 이유는 아직도 많은 C 프로젝트들이 89년도의 표준을 사용하기 때문이며, 이런 트렌드는 바뀌지 않을 전망이기 때문입니다. 따라서 모든 프로젝트에서 쓸 수 있는 C의 지식을 중심으로 배우되 가능할 경우 새로 추가된 기능을 사용할 수 있는 실력을 갖추게 하는 것이 강좌의 목표입니다.",
      "target_audience": [
        "컴퓨터 공학의 기본기를 배우고 싶은 분들",
        "프로그래머로서 평생 커리어를 꿈꾸는 분들"
      ]
    },
    {
      "title": "從零開始學 Kotlin 程式設計 - 零基礎開發 Android APP 應用程式",
      "url": "https://www.udemy.com/course/hkt-kotlin-basic/",
      "bio": "使用 Kotlin 開發 Android APP 最佳指南，Kotlin 程式語言基礎入門課程",
      "objectives": [
        "此課程為基礎入門課程，適合「初學入門者」。",
        "想要開發自己的 Android APP 應用程式",
        "這門課程適合初學者",
        "學習如何撰寫 Kotlin 程式碼",
        "掌握 Kotlin 基礎語法",
        "熟悉 IntelliJ Idea 開發工具",
        "希望成為 Kotlin 程式語言開發者",
        "熟悉 Android Studio 開發工具"
      ],
      "course_content": {},
      "requirements": [
        "無需任何程式撰寫經驗",
        "由淺入深，循序漸進，無痛學習",
        "無需額外購買付費軟體",
        "使用電腦的初級能力",
        "需要一台 Mac、Linux 或 Windows 的電腦"
      ],
      "description": "此課程為基礎入門課程，適合「初學入門者」。\n若購買前沒看到此訊息，購買後覺得此課程不適合，三十天內接受無條件退款服務。\n\n\n課程說明\nKotlin 又被稱之為 Android 界的 Swift， Google 2017年已正式宣布 Kotlin 成為 Android 官方開發語言。Android Studio 3 官方正式直接支援 Kotlin 語法，可以使用 Kotlin 來開發 Android APP 行動應用程式。\n這門課程完全適合初學者，無須任何編寫過程式碼經驗，我們將從零基礎開始介紹，編寫程式語言需具備的基礎知識。首先我們將安裝 Kotlin 開發環境，然後編寫並運行第一行 Kotlin 程式。接下來介紹 Kotlin 基礎語法、邏輯判斷條件控制並討論循環控制等Kotlin 語法基本與進階使用知識，完全從零開始，初學者無痛上手。\n如果你已經是一名 Android (Java) 開發者，你可以透過這門課程來了解超棒 Kotlin 程式語言。讓你可以編寫更乾淨、更強大的應用程式。\n\n網路自學 Kotlin 最常見的三大痛\n1. 學習資訊東拼西湊，無法有系統很完整性的學習\n2. 英文資料看得霧煞煞，一頭霧水\n3. 觀念混淆，挫折感超重\n本課程特色\n1. 由淺入深，無痛學習 Kotlin 的程式開發技巧\n2. 一次掌握 Kotlin 最常用的核心關鍵知識\n3. 繁體中文教材，系統化的課綱編排，HKT (侯光燦) 講師影片教學",
      "target_audience": [
        "想使用 Kotlin 程式語言來開發 Android APP 應用程式",
        "想從 Java 換跑道，成為 Kotlin 程式開發者"
      ]
    },
    {
      "title": "Le C par la pratique : plus de 100 exercices corrigés",
      "url": "https://www.udemy.com/course/programmation-c-100-exercices-corriges/",
      "bio": "Appliquez et améliorez vos compétences en C grâce à plus de 100 exercices corrigés allant de débutant à avancé",
      "objectives": [
        "Revoir et exercer les notions de base en C (variables, affichage et lecture saisie utilisateur)",
        "Revoir et exercer les notions d'opérateurs en C.",
        "Revoir et exercer les notions de structures conditionnelles en C.",
        "Revoir et exercer les notions de boucles en C.",
        "Revoir et exercer les notions de pointeurs en C.",
        "Revoir et exercer les notions de tableaux en C.",
        "Revoir et exercer les notions de chaînes de caractères (strings) en C.",
        "Revoir et exercer les notions de fonctions en C.",
        "Revoir et exercer les notions d'allocation dynamique en C."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Mise en place de l'environnement": [
          "Installer code-blocks",
          "Créer un projet en C",
          "Compiler et lancer son programme"
        ],
        "Les bases en C": [
          "Ressources: les bases en C",
          "Quiz: Les bases en C",
          "Exercice: Programme de base",
          "Exercice: Hello World",
          "Exercice: Déclaration et affichage de variables",
          "Exercice: Types de variables",
          "Exercice: Lecture au clavier",
          "Exercice: ASCII"
        ],
        "Les opérateurs en C": [
          "Ressources: les opérateurs en C",
          "Quiz: Les opérateurs en C",
          "Exercice: Convertisseur de devises",
          "Exercice: Inversion de variables",
          "Exercice: Calcul de moyenne et somme",
          "Exercice: Géométrie 2D",
          "Exercice: Géométrie 3D",
          "Exercice: Un monde de majuscules"
        ],
        "Les conditions en C": [
          "Ressources: les contions en C",
          "Quiz: les conditions en C",
          "Exercice: La majorité",
          "Exercice: Le million !",
          "Exercice: Comparaison de nombres",
          "Exercice: Jours de la semaine",
          "Exercice: Prendre un verre au bar",
          "Exercice: Pair ou impair",
          "Exercice: Nombre entier",
          "Exercice: Carré parfait",
          "Exercice: Conversion de date",
          "Exercice: Alphabet",
          "Exercice: Calculatrice"
        ],
        "Les boucles en C": [
          "Ressources: les boucles en C",
          "Quiz: les boucles en C",
          "Exercice: Compte a rebours",
          "Exercice: Sinus et Cosinus",
          "Exercice: Code PIN",
          "Exercice: Table ASCII",
          "Exercice: Nombre premier",
          "Exercice: Table de multiplication",
          "Exercice: Pierre Feuille Ciseaux",
          "Exercice: Juste prix",
          "Exercice: Triangle des étoiles"
        ],
        "Les pointeurs en C": [
          "Ressources: les pointeurs en C",
          "Quiz: les pointeurs en C",
          "Exercice: Adresses et variables",
          "Exercice: Variables et pointeurs",
          "Exercice: Inversion de variables",
          "Exercice: SOS crash"
        ],
        "Les tableaux en C": [
          "Ressources: les tableaux en C",
          "Quiz: les tableaux en C",
          "Exercice: Affichage de tableaux",
          "Exercice: Tableau et adresse",
          "Exercice: Statistiques",
          "Exercice: Recherche",
          "Exercice: Compteur de lettre",
          "Exercice: Tri par sélection",
          "Exercice: Tri bulle",
          "Exercice: Matrice unitaire",
          "Exercice: Addition matricielle",
          "Exercice: Produit matricielle",
          "Exercice: Jeu du Mastermind"
        ],
        "Les chaînes de caractères en c (strings)": [
          "Ressources: Les chaînes de caractères en c (strings)",
          "Quiz: les strings en C",
          "Exercice: Les strings",
          "Exercice: Carte d’identité",
          "Exercice: MAJUSCULES",
          "Exercice: Miroirs",
          "Exercice: Modification de mot de passe",
          "Exercice: Fonction strln",
          "Exercice: Fonction strcmp",
          "Exercice: Fonction strtol",
          "Exercice: SansEspaces",
          "Exercice: Statistiques",
          "Exercice: Palindrome",
          "Exercice: Sous chaîne",
          "Exercice: Jeux du pendus"
        ],
        "Les fonctions en c": [
          "Rappel: les fonctions en C",
          "Quiz: les fonctions en C",
          "Exercice: Min et Max",
          "Exercice: Pow",
          "Exercice: Lanceur de dés",
          "Exercice: Statistiques",
          "Exercice: Inversion",
          "Exercice: Modulo",
          "Exercice: Cryptage",
          "Exercice: Générateur de mot de passe",
          "Exercice: is a number",
          "Exercice: Fonction strcat",
          "Exercice: Jeu du morpion"
        ]
      },
      "requirements": [
        "Avoir des notions de base en C",
        "Avoir un ordinateur sous Windows, Linux ou Mac.",
        "Avoir les droits administrateur sur sa machine.",
        "Savoir installer un logiciel sur son ordinateur."
      ],
      "description": "Bonjour à tous et bienvenu dans ce regroupement de plus de 100 exercices sur la programmation C !\nApprendre un langage de programmation comme le C c’est bien. Mais il faut beaucoup pratiquer pour bien le maîtriser et surtout pour ne pas oublier ce que l’on a déjà appris. Malheureusement, il n’est pas toujours facile de trouver des sujets pratiques, ludiques et concrets pour s'exercer au développement logiciel...\nC’est pourquoi j’ai créé un regroupement de plus de 100 exercices corrigés sur le développement en C.\n\nA quoi ressemblent les exercices?\nVous allez voir, que les exercices sont organisés par catégories concrètes, comme par exemple:\nles variables\nles boucles\nles tableaux\nles strings\nles structures conditionnelles\nles fonctions\nles pointeurs\nles fichiers\net bien plus encore...\n\n\nDans chacune de ces catégories, les exercices sont classés par ordre croissant de difficultés. Pour chaque exercice, je vous donne un énoncé, puis je vous demande de mettre la vidéo en pause pour faire l’exercice de votre côté. Une fois l’exercice fait, vous pouvez visionner le correctif en vidéo. Je vous montre alors comment faire tout en expliquant un maximum le code que j'écrit.\n\n\nA qui s’adresse ces vidéos?\nAlors attention, cette suite de vidéos n’est pas une formation sur le langage C mais plutôt une suite d’exercices corrigés qui sont là pour vous permettre de pratiquer la programmation en C. Cela signifie donc que vous devez déjà avoir des notions de base dans ce langage.\n\nSi vous n’avez pas de base en C et que vous recherchez une formation complète sur ce langage, pas d’inquiétudes, j’ai également fait d’autres vidéos regroupées dans ma formation “Apprendre la programmation en C”.\nJustement, en parlant de ma formation complète sur le C, je l’ai découpée de la même manière que cette suite d'exercices. Ainsi, si vous suivez déjà ma formation, vous pouvez pour chaque chapitre, retrouver un ensemble d’exercices correspondant dans cette suite de vidéos. En gros vous allez clairement augmenter votre capacité d’apprentissage !\n\n\nAlors qu'attendez-vous? Rejoignez nous!\n\n\nA tout de suite\nArnaud",
      "target_audience": [
        "Débutants en développement C qui cherchent des exercices pratiques pour appliquer leur savoir.",
        "Personnes qui souhaitent tester leur niveau en C.",
        "Personnes qui souhaitent réviser, en exercice, leurs connaissances en C"
      ]
    },
    {
      "title": "Aprende de cero MongoDB - MongoDB Atlas - MongoDB Compass",
      "url": "https://www.udemy.com/course/aprende-de-cero-mongodb-mongodb-atlas-mongodb-compass/",
      "bio": "Aprende la base de datos No-SQL mas popular y solicitada en el mercado laboral",
      "objectives": [
        "Entender la diferencia entre una base de datos de tipo SQL y No-SQL",
        "Que es un documento y una colección",
        "Aprender a realizar filtrados , ordenaciones en MongoDB",
        "Las diferentes formas de insertar información y eliminar",
        "Los operadores lógicos y de comparación en MongoDB",
        "Actualizar en mongoDB : array , string , etc",
        "Aprender a modelar una base de datos en MongoDB",
        "Realizar agregaciones (Consultas mas avanzadas en mongoDB)",
        "Uso de indices y modificadores que pueden tener",
        "Usar interfaces gráficas para MongoDB como : MongoDBCompass y Robo3T",
        "Crear una vista y entender su importancia",
        "Realizar una CRUD completo , conectandonos con NodeJS con MongoDB"
      ],
      "course_content": {
        "Introduction a MongoDB , aprendiendo a realiza filtrados básicos": [
          "Grupo de Facebook para resolver las consultas de los Estudiantes del Curso",
          "¿Que es un documento y como esta formado?",
          "Creando una cuenta en MongoDB Atlas",
          "Instalando MongoDB en nuestra maquina",
          "Instalando MongoDB Compass - Interfaz gráfica de MongoDB",
          "Definiendo Mongo como variable de entorno",
          "Nociones Básicas MongoDB - Comando show dbs , use , createCollection",
          "Eliminando una base de datos y mostrar todas las colecciones",
          "Insertar Información - InsertOne",
          "Listar los documentos de una colección - Find",
          "Otros métodos a insertar - InsertMany - Insert",
          "Operador de Comparación - $eq",
          "Operador de Comparación - $gt y $gte",
          "Operador de Comparación - $lt $lte $in",
          "Operador de Comparación - $ne $nin between",
          "Filtrado por Expresiones Regulares /exp/ /^exp/ /exp$/",
          "Sort y Proyecciones",
          "Recorrer el resultado de las consultas",
          "Delimitar la salida de una consulta",
          "Convertir en un array - devolver el numero de resultados de una consulta",
          "Documentos embebidos - Relación de 1 a 1 y Relación de 1 a muchos",
          "Conectarnos a nuestra Cluster y MongoDB Compass"
        ],
        "Eliminar , Actualizar documentos en MongoDB Y operadores Lógicos": [
          "Eliminar Documentos en MongoDB",
          "Actualizar Información de un solo documento en MongoDB",
          "Actualizar varios documentos",
          "Actualizar eliminando una propiedad de un documento",
          "Incrementar el valor de una propiedad y cambiar el nombre de una propiedad",
          "Multiplicar el valor de una propiedad",
          "Actualización si cumple una condición - $min y $ max",
          "Actualizar a propiedades que tienen valores de tipo Array",
          "Actualizar insertando varios valores",
          "Actualizar Eliminar un elemento de un array e insertar elementos en una posicion",
          "Actualizar eliminando múltiples valores de un array",
          "Operador Lógico - Filtrar por varias condiciones",
          "Operador Lógico ($not - $or)",
          "Operador $nor y $exists",
          "Obtener el residuo en mongoDB para operar",
          "Consultas con documentos embebidos",
          "Eliminar documentos con : deleteOney - deleteMany"
        ],
        "Indices - Esquemas en MongoDB - Vistas": [
          "Teoría de los Indices (Listar , Crear y eliminar)",
          "Indice de tipo Unique",
          "Indice Background y crear un nombre al indice",
          "Crear Indices Compuestos",
          "Indices Sparce",
          "Indices Parciales",
          "Uso de indices compuesto , Hint e Indices Multillaves",
          "Indice Case Sensitive",
          "Indice de Texto",
          "Tipos de datos I",
          "Tipos de datos II",
          "Introducción a la creación de esquemas",
          "Esquemas : Relación de uno a muchos",
          "Esquemas : Relación de muchos a muchos",
          "Validaciones de los esquemas",
          "Manejo de Vistas"
        ],
        "Agregaciones (Consultas Avanzadas)": [
          "Importancia de una Agregación , mostrar ciertas propiedades",
          "Agregaciones Aritméticas: Suma , Promedio ,etc",
          "Agregaciones de Redondeo: Redondeo hacia arriba y hacia abajo",
          "Agregaciones Matemáticas : Restar y Multiplicar valores",
          "Agregaciones Cadena:Convertir mayúsculas , minusculas , quitar espacio en blanco",
          "Agrupaciones String: Obtener una parte de una cadena",
          "Agrupaciones Concatenación: Concatenar cadenas",
          "Agregaciones Comparación : Operaciones (Igual , Mayor que , Mayor o igual que)",
          "Agregaciones: Ejemplo y ejercicio de Operadores",
          "Agrupaciones de Fecha : Obtener año y mes",
          "Agrupaciones Fecha : Obtener día , semana correspondiente al año",
          "Agrupaciones Formato : Mostrar una fecha con un formato determinado",
          "Agrupaciones Array : Obtener un elemento , concatenar , revertir",
          "Agrupaciones Array : Obtener la longitud de un array y una parte de ello",
          "Agrupaciones de Conversion: Convertir de un tipo de dato a otra",
          "Agrupaciones Condicionales : Switch",
          "Agrupar valores por una propiedad",
          "Formas de calcular la cantidad de documentos en agregaciones",
          "Agrupaciones de Destructuración",
          "Agrupaciones de Salida y Join (Union de 2 collecciones)"
        ],
        "Interfaz Graficas : MongoDB Compass - Robo3T": [
          "Introducción a MongoDB Compass Creación de Bases de datos y collecciones",
          "Realizar consultas en MongoDB Compass",
          "Agregaciones en MongoDB Compass",
          "Uso de esquemas en MongoDB",
          "Creación de Indices y rendimiento de los indices",
          "Robo 3T",
          "Manipulación de datos con Robo 3T",
          "Edición en linea con Robo 3T"
        ],
        "MongoDB con Node.js (Realizar un CRUD)": [
          "Crear Servidor de nuestra aplicación",
          "Creando un Schema",
          "Creando una ruta que nos bote un JSON",
          "Listar Productos",
          "Elaborando formulario de registros",
          "Recuperar Información",
          "Eliminar información en MongoDB",
          "Actualizar información de productos en MongoDB",
          "Insertar información en MongoDB",
          "Validación de datos"
        ]
      },
      "requirements": [
        "Tener el Sistema Operativo Windows"
      ],
      "description": "En este curso aprenderemos que es una base de datos No-SQL y las diferencias que tenemos con una base de datos SQL.\nTrabajaremos con MongoCompass, Robo 3T como interfaz gráfica de mongoDB y MongoDB Atlas como proveedor que nos ofrece servicios de mongoDB\nAprenderemos el CRUD (Crear, Leer, Actualizar y Eliminar información), conoceremos los operadores lógicos y de comparación.Crear índices, vistas, funciones, agregaciones, etc.",
      "target_audience": [
        "Personas que desean aprender MongoDB"
      ]
    },
    {
      "title": "【Java-データベース入門】『JDBC』を利用したDB操作入門コース～MySQLを使った実践と解りやすい図解で学ぶ～",
      "url": "https://www.udemy.com/course/java-jdbc-mysql/",
      "bio": "「Java」からの「データベース」操作を学びたい『転職のためのプログラミング習得したいかた』『新入社員が業務で使うJavaを学びたいかた』『Javaスキルの幅を広げたいかた』のためのコース",
      "objectives": [
        "JDBC（Javaプログラムから DB操作をする時に必要な技術）を知ることができる。",
        "JDBC の構造と 基本的な使い方を 理解できる。",
        "Javaプログラムから JDBC を使ったデータベース操作ができる。",
        "データベースの CRUD(Create・Read・Update・Delete)操作 の行うJavaプログラムを作成できる。",
        "「Java-JDBC-MySQL」開発・実行環境をWindowsパソコンに構築できる。",
        "DAO（再利用性・保守性が上がる設計パターン）を用いてプログラミングできる。",
        "DTO（データをまとめて扱いやすくした構造）を活用した開発ができる。"
      ],
      "course_content": {},
      "requirements": [
        "パソコンを持っていて、プログラミングしながら学習できること。（解説はWindowsで行っています）",
        "Javaの基本文法・制御構造・実行方法・メソッドの扱い方など「Javaの基本」を知っている。",
        "SQL（データベースへの問い合わせ言語）の基本を知っている。（別コース『SQL入門』を修了しているレベル）",
        "「Java-JDBC-MySQL」環境の構築は コースの中で解説します。"
      ],
      "description": "【 このコースは…  】\n\n\nこのコースは、JavaからJDBCを使用して データベース(DB)を操作する 初心者向けの入門コースです。\n\n\nJDBCは、Javaプログラムから DB操作をする時に必要な技術で、JavaとDBの橋渡しをしてくれる大切な要素です。\n\n\nデータベースは、現代のアプリケーション開発において不可欠な要素となりました。\n\n\nそして、Javaプログラミング言語を使用してデータベースを操作するスキルは、エンジニアリングの世界で高く評価されています。\n\n\nこのコースは、プログラミング初心者の方々に向けて、JavaとJDBCを用いたデータベースの操作方法を 図解とプログラミング実践で解りやすく説明します。\n\n\n環境構築からはじめて、JavaプログラミングのDB操作に焦点を当てながら、ステップ・バイ・ステップでスキルを構築します。\n初心者の方でも理解しやすいように、図解の解りやすい解説と実際のコーディング演習を組み合わせています。\n\n\nコースの流れは以下の通りです：\n\n\n・Java環境・JDBC環境・データベース(MySQL)環境の構築を順を追って進めます。（イメージ図解と実際の操作解説で解りやすく進められます）\n\n\n・Javaを使用してデータベースに接続する方法を学びます。\n\n\n・Javaから データベースに SQL を送って、検索結果データを活用する方法と DB上のデータを更新する方法を学びます。\n\n\n・再利用性・保守性が上がる設計パターン DAO を用いたプログラミングを学びます。\n\n\n・データをまとめて扱いやすくした構造 DTO を活用した開発を学びます。\n\n\n・データベースの CRUD(Create・Read・Update・Delete)操作 の行うJavaプログラムを完成させます。\n\n\nデータベース操作の世界に足を踏み入れ、JavaとJDBCの力を手に入れましょう。\nこのコースは、プログラミングのスキルを向上させ、新たなキャリアパスを築くのに最適です。\n初心者でも安心して学べます。\n\n\nーーーーーーーーーーーーーーーー\n\n\n【 このコースの特徴 】\n\n\n・『Java』からの『データベース』操作を学ぶ上で\n初級者がつまずきやすい部分を 解りやすく丁寧に解説しています。\n\n\n・ プログラム の書き方のみでなく、Java-JDBC-DB連携のイメージを\nアニメーションを使って図解で理解できるようになっています。\n\n\n・「解説資料」をダウンロードできます。\n手元に置いて、適宜 参照して理解を深めることができます。\n\n\n・「サンプルプログラム」をダウンロードできます。\n動画を見ながら、一緒に動作させてることができるため\n理解しながら データベース実践を体感することができます。\n\n\n・各セクションに「演習問題」⇒「解答例」⇒「解説」が付属しています。\n学んだ内容を元に、実際にSQLを作成⇒答え合わせまでできます。\n\n\nーーーーーーーーーーーーーーーー\n\n\n【 使用するツール・環境 】\n\n\n・MySQL\n・JDBCドライバ(MySQL Connector/J)\n・DBeaver\n・Java11［※］\n・eclipse2022［※］\n\n\n… 説明は『Windows環境』で行います。\n… 環境構築は全てコースの中で説明します。\n… [※]部分は Pleiades を使用します。\n\n\nーーーーーーーーーーーーーーーー\n\n\n【 このコースで学ぶと 】\n\n\n・『転職のためのプログラミングを学びたい』かたは…\n\n\nプログラミングの中で データ活用の必須項目である\nデータベースを Javaから操作する方法を学んで\n転職に向けた実践感覚を身につけることができます。\n\n\nまた このような エンジニアリングの世界で高く評価される\n技術要素 を学び より実践的で転職に有利な知識・スキルを\n習得することもできます。\n\n\n・『新入社員で、業務で使うデータベース/SQLを学びたい』かたは…\n\n\n新入社員研修の現役講師から、実務で活きるデータベース活用方法を\n学ぶことで、実際の研修の予習復習や 実務の準備ができます。\n\n\neclipse環境で Java-JDBC-DB の連携プログラミングを学ぶことで\n業務にスムーズに入っていける「実践力」を養うことができます。\n\n\n・『マンネリの毎日の中でプログラミングスキルをブラッシュアップしたい』かたは…\n\n\nデータベースを Javaから操作する方法を学んで\nより実践的なプログラミングの楽しさを体感できます。\n\n\nまた このような エンジニアリングの世界で高く評価される\nJavaプログラム-DB連携の技術を学ぶことで\n周囲からの信頼を得て、自信と充実感を得ることができます。\n\n\nーーーーーーーーーーーーーーーー\n\n\n【 はじめましょう 】\n\n\n新たなスキルを身につけることは、自己成長とキャリアの発展につながります。\n\n\nJavaプログラムからの データベース操作 の学習に取り組むと\n実践的な プログラミングを学ぶことができ\nさらに高度なアプリケーションの開発に 挑戦することができます。\n\n\nまた このような エンジニアリングの世界で高く評価される\n技術要素 を学ぶことで 周囲からの信頼を得て、自信と充実感を得ることもできます。\n\n\nこの講座では、解りやすい図解の解説を聞いて 習得することができます。\n\n\nまた「サンプルプログラム」を一緒に動かすことで\nJavaプログラミングの実践の感覚を身に つけることもできます。\n\n\nそして何より、プログラミングしながら成長していくことができます。\n\n\nこの講座は、皆さんの成長と成功を応援する場です。\n皆さんが本当に輝けるよう、全力でサポートします！\n\n\nさあ『Javaプログラムからの データベース操作』に挑戦しましょう！\n\n\n一緒に学び、成長し、素晴らしい アプリケーションを開発する土台を身につけましょう。\n\n\nJavaの世界を探求し、自身の成長とキャリアの可能性を広げましょう！\n\n\n成功への第一歩を踏み出す勇気を持って『データベース活用』の旅に出かけましょう！\n\n\nそれでは、講座のスタートです！",
      "target_audience": [
        "新入社員で研修でJavaやデータベースを使うので予習しておきたいかた。",
        "転職のためにプログラミングを学びたいかた。",
        "Javaの基本を学んだ後に、より実践的なプログラミングがしたいかた。",
        "データ活用のための必須項目と言われる「データベース」の操作を Javaで実行したいかた。",
        "Java・データベースの学びを進めたい全てのかた。"
      ]
    },
    {
      "title": "HMI Siemens Tia Portal & Wincc adv. & prof.",
      "url": "https://www.udemy.com/course/hmi-siemens-tia-portal-wincc-advanced-professional/",
      "bio": "Learn how to create complete HMI/Wincc solutions from absolute zero in TIA Portal.",
      "objectives": [
        "سوف يتمكن المشاركون بعد الانتهاء من الدورة من برمجه كافة انواع شاشات",
        "HMI Siemens Tia Portal Basic, confort, wincc advanced, wincc professional",
        "plc و ربطها مع",
        "سوف يتعلم المشاركون",
        "all Objects, Elements, Alarms, Administration, Schedule tasks, Trend and Global&SlideIn Screen",
        "advanced objects: Face Plate, Recipe, PDF, Report and Styles",
        "Wincc Advanced /// Wincc Professional"
      ],
      "course_content": {},
      "requirements": [
        "سيتم شرح كافه المعلومات باسلوب مبسط و سهل و لا يحتاج اي معرفه مسبقه"
      ],
      "description": "By the end of this course, you will be able to design Siemens HMI Basic/confort in Siemens TIA Portal and create complete HMI projects using WinCC RT Advanced/Professional.\nThis course is perfect for anybody wanting to learn PLC / HMI development using the latest Siemens development platform(s) and also siutable for the beginners.\nمع نهايه الكورس سيكون المشاركون قد تعلموا  برمجه شاشات سيمنس\nهذا الكورس يبدأ من الصفر و يصل لمراحل متقدمه جدا في برمجه الشاشات\nI Will talk about\nAddition of HMI to program\nThe addition of basic objects in HMI.\nAddition of element objects.\nCommunication of HMI with PLC.\nSimulation of the program and controlling of our system from HMI.\nAdvanced objects (Recipe , scaling, trend, styles, layers, multi language screens, face plate, )\nAllarm (descrite-analog-groups-classes)\nUser administration\nScheduled Tasks\nGlobala/SlideIn screens, pop up screens, confirmation window\nPDF View und Reports\nA lot of examples\n\n\n\n\nمع نهايه الكورس سيكون المشاركون قد تعلموا  برمجه شاشات سيمنس\nهذا الكورس يبدأ من الصفر و يصل لمراحل متقدمه جدا في برمجه الشاشات\nI Will talk about\nAddition of HMI to program\nThe addition of basic objects in HMI.\nAddition of element objects.\nCommunication of HMI with PLC.\nSimulation of the program and controlling of our system from HMI.\nAdvanced objects (Recipe , scaling, trend, styles, layers, multi language screens, face plate, )\nAllarm (descrite-analog-groups-classes)\nUser administration\nScheduled Tasks\nGlobala/SlideIn screens, pop up screens, confirmation window\nPDF View und Reports\nA lot of examples",
      "target_audience": [
        "طلاب الهندسه الكهربائيه و الالكترونية و التحكم الالي و الميكاترونيك",
        "plc المهتمين بمواضيع التحكم الالي و",
        "المهندسين الراغبين بالعمل بالتحكم الالي او الراغبين بتوسيع معارفهم في هذا المجال"
      ]
    },
    {
      "title": "Aprenda Lógica de Programação",
      "url": "https://www.udemy.com/course/aprenda-logica-de-programacao/",
      "bio": "A lógica por trás de todas as linguagens de programação web.",
      "objectives": [
        "Entenda Lógica",
        "Variáveis",
        "Algorítimos",
        "Criando Algorítimos",
        "Testes Condicionais",
        "Aplicação MOD",
        "Switch",
        "Laços de repetição"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos básicos de programação recomendado."
      ],
      "description": "O curso de Lógica de Programação contém 30 aulas abordado tudo sobre a lógica usada para os programadores desenvolver seus aplicativos e programas.\nO curso te dará todo suporte para trabalhar com todo tipo de linguagem, abordando a elaboração, estruturação e desenvolvimento de um projeto.\nEstarei disponível para qualquer eventual dúvida durante o curso. Um certificado será enviado para aqueles alunos que completarem todos os módulos.\nTe vejo no curso!",
      "target_audience": [
        "Iniciantes na carreira de programação e pessoas que estejam aprendendo linguagem de programação e gostariam de entender como a lógica de programação funciona."
      ]
    },
    {
      "title": "The Complete Dart Language Guide for Beginners[Arabic]",
      "url": "https://www.udemy.com/course/learn-dart-from-zero-to-proficiency/",
      "bio": "تعلم لغة دارت من الصفر إلي الإتقان،دليل شامل للمبتدئين",
      "objectives": [
        "Data Types and variables",
        "Control Flow",
        "Oop Concepts",
        "Functions",
        "Collections",
        "Asynchronous programming",
        "Networking with dart",
        "Error handling",
        "Classes",
        "Advanced Classes",
        "Nullability"
      ],
      "course_content": {
        "Introduction": [
          "ليه بنتعلم دارت ومحتويات الكورس",
          "تجهيز بيئة العمل"
        ],
        "Data types and variables": [
          "What is compiler?",
          "Operators",
          "Data types and Variables",
          "Type safety and Type inference",
          "Const and Final",
          "Increment and decrement",
          "String operations",
          "Comments"
        ],
        "Control Flow": [
          "The Boolean data type",
          "IF statement",
          "Ternary Conditional Operator",
          "Variable Scope",
          "Switch statement",
          "While and For loops",
          "Foreach loop"
        ],
        "Functions": [
          "What is a Function?",
          "Parameters",
          "Anonymous and Named functions"
        ],
        "Classes": [
          "Classes and Objects",
          "Serialization, JSON and Cascade Notation",
          "Constructors",
          "Private variables",
          "Getters and Setters",
          "Static Keyword"
        ],
        "Nullability": [
          "Null safety",
          "Null aware operators"
        ],
        "Collections": [
          "Lists",
          "Sets",
          "Maps",
          "High order methods(map,where,reduce,sort,reversed)"
        ],
        "Advanced Classes": [
          "Inheritance",
          "Abstract Classes",
          "Business logic,interfaces and Factory Constructor",
          "Implements and Extends",
          "Mixins"
        ],
        "Asynchronous programming": [
          "Synchronous and Asynchronous",
          "Futures",
          "Async and await,Try and catch",
          "Api and http",
          "Making Network request part 1",
          "Making Network request part 2",
          "Error Handling",
          "Streams",
          "Conclusion and What is next?"
        ]
      },
      "requirements": [
        "لا تحتاج لخبرة مسبقة"
      ],
      "description": "أهلاً بيكم في كورس لغة دارت من الصفر إلي الإتقان،الكورس هنتعلم فيه كل حاجة بداية من تنزيل دارت علي جهازك وكل الأساسيات اللي هتحتاجها علشان يكون عندك أساس قوي في لغة دارت\nالكورس لا يتطلب خبرة مسبقة\nالكورس ده لمين\nسواء كنت مبتدئ بدون خبرة مسبقة وتريد تعلم لغة دارت كلغتك الأولي\nأو لديك خبرة مسبقة وتريد تعلم لغة قوية كلغة دارت\nتريد تعلم فلاتر ةتحتاج أن تبني أساس قوي أولاً\nتريد تعلم البرمجة بشكل عام\n\n\nمحتويات الكورس:\nintroduction\nليه بنتعلم دارت ومحتويات الكورس\nتجهيز بيئة العمل\nData types and variables\nWhat is Compiler\nOperators\nData Types and variables\nType safety and type inference\nConst and Final\nincrement and decrement\nString Operations\nComments\nControl Flow\nThe Boolean data type\nIF statement\nTernary Conditional operator\nVariable scope\nSwitch statement\nWhile and for loop\nForEach loop\nFunctions\nwhat is a Function\nparameters\nAnonymous and Named Functions\nClasses\nClasses and Objects\nserialization, Json  and Cascade Notation\nConstructors\nprivate variables\nGetters and Setters\nStatic Keyword\nNullability\nNull safety\nNull aware operators\nCollections\nLists\nsets\nmaps\nHigh order methods\nAdvanced Classes\ninheritance\nAbstract Classes\nBusiness Logic,interfaces and Factory Constructors\nimplements and extends\nMixins\nAsynchronous Programming\nSynchronous and Asynchronous\nFutures\nAsync and await,try and catch\nApi and http\nNetworking with dart\nMaking network request part 1\nmaking network request part 2\nError Handling\nStreams\nConclusion and what is next\nafter this course you will gain  a strong foundation in dart programming language ,and then you are ready to learn flutter or other programming languages with ease\n\n\nsee you in other courses",
      "target_audience": [
        "سواء كنت مبتدئ تريد تعلم لغة دارت كلغة أولي أو لديك خبرة مسبقة وتريد تعلم دارت",
        "تريد تعلم فلاتر وتحتاج لبناء أساس قوي",
        "تريد تعلم أساسيات البرمجة بشكل عام"
      ]
    },
    {
      "title": "Débuter en programmation C++",
      "url": "https://www.udemy.com/course/debuter-en-programmation-cpp/",
      "bio": "Programmer des applications et des algorithmes grâce au C++ un langage puissant",
      "objectives": [
        "Mettre en place des outils de développement",
        "Créer des applications et des algorithmes à base de C++",
        "Structurer vos sources",
        "Accéder aux mémoires physiques et virtuels",
        "Mettre en place vos algorithmes mathématique",
        "Coder avec des objets",
        "A optimiser un code de différentes manières",
        "A méta-programmer",
        "A compiler et utiliser une Lib dynamique ( à venir )"
      ],
      "course_content": {
        "Introduction": [
          "Le C++ ?",
          "Comment programmer C++",
          "La bibliotheque standard (STL) du C++",
          "Commprendre les premières lignes"
        ],
        "Base C++ : variables, mémoires.": [
          "Variables et mémoires",
          "Les types constants",
          "Le type \"auto\"",
          "Les types référencés",
          "Connaissances de base"
        ],
        "Base C++: opérations, tableaux, conteneurs": [
          "Opérations mathématique",
          "Les convertions entre types",
          "Opérations binaire",
          "Les tableaux",
          "Les conteneurs (std::array)",
          "Les conteneurs (std::vector)",
          "Les conteneurs (std::map)",
          "connaissances de base 2",
          "Calcule de Gaussienne",
          "Correction 1"
        ],
        "Base C++: Structures de contrôles": [
          "Les espaces de noms",
          "Diviser son programme (fonctions / pages )",
          "Conditions",
          "Switch",
          "Collision",
          "Boucles while",
          "Boucles for",
          "Suite de Fibonacci",
          "correction 3",
          "connaissances de base 3"
        ],
        "Base C++: pointeurs, erreurs , optimisations": [
          "Les pointeurs",
          "Les pointeurs nus",
          "Les pointeurs intelligents (std::unique_ptr)",
          "Les pointeurs intelligents (std:shared_ptr)",
          "Les iterators",
          "std::algorithme",
          "La gestion d' exception",
          "Conseils d'optimisations",
          "Connaissances de bases 4"
        ],
        "Programmation objet orienté": [
          "Un objet orienté?",
          "Coder un objet (constructeur/destructeur)",
          "Coder un objet (attributs)",
          "Coder un objet (méthodes)",
          "Les surcharges d'opérateurs",
          "Ebool",
          "Trigo",
          "Des objets hérité",
          "Polymorphisme"
        ],
        "Programmer en parallele avec les threads": [
          "Les threads",
          "Les mutex"
        ],
        "Les fluxs": [
          "Lire dans un fichier std::ifstream",
          "Ecrire dans un fichier std::ofstream",
          "std::fstream un code propre"
        ],
        "Méthodes de débugage": [
          "Méthodes de débugage manuel",
          "l'IDE aussi un outil de debugage"
        ],
        "Méta programmation": [
          "Récursivité et intro a la méta programation",
          "Le mot clé \"inline\"",
          "Créer une fonction template"
        ]
      },
      "requirements": [
        "Un niveau basique dans l'utilisation de son ordinateur",
        "De préférence utiliser OS Windows et/ou une distribution GNU/unix (linux)"
      ],
      "description": "Le C++ est un langage capable de cumuler plusieurs niveaux de programmation. Que ce soit de la programmation procédurale comme pour le langage c, ou bien de la programmation orientée objet, ou encore la programmation générique. Ce qui fait du C++ un langage capable de s'adapter aussi bien à un langage de bas niveau qu'a un langage de haut niveau. Un langage puissant et rapide.\n\nDans ce cours vous apprendrez donc à programmer dans chacun de ses procédés. En commençant bien sur par la base du langage. Ce cours vous donnera plus de notion que les bases de manière a pouvoir faire de vous des experts du C++.",
      "target_audience": [
        "Quiconque souhaite apprendre le C++"
      ]
    },
    {
      "title": "ビットコイン【プログラミング初心者でも安心】Pythonとチャットツールで仮想通貨 ボットを作ろう！",
      "url": "https://www.udemy.com/course/python-bitcoin-exchange-bot/",
      "bio": "slackやgooglehangoutで仮想通貨、ビットコインの取引所の値段を自動応答するボットを作ろう！(現在Macのみ対応 ,今後Windows追加予定)",
      "objectives": [
        "bitcoinの現在価格を教えてくれるボットを開発できるようになります",
        "bitflyerやcoincheckやzaifのAPIを見て開発できるようになります",
        "仮想通貨について理解できるようになります",
        "Pythonの基礎を習得できるようになります",
        "オリジナルのボットを開発できるようになります",
        "ブロックチェーンを他の人に簡単に説明できるようになります"
      ],
      "course_content": {},
      "requirements": [
        "初歩的なPC操作の知識",
        "やる気と根気",
        "メールアドレス(gmailなど)を所持している"
      ],
      "description": "※今回利用するAPIは、Publicで誰でも取得できるものを利用しています。自分のシークレットキーを利用したPrivateのAPIを利用される際には、シークレットキーを他の方に絶対に教えないでください。\nみなさんは、「仮想通貨」をご存知でしょうか？\n\n2017年10月現在、実は日本が一番取引量が多いBitcoinをはじめ、イーサリアムやリップスなど様々な「仮想通貨」の取引が行われており、Bitcoinに関しては1ビットコイン70万円となり2013年頃から比べると爆発的に急上昇しています。\nこれからは、人工知能やVR,ARと同じくらいニュースでも聞くキーワードとなることでしょう。\nまた、人工知能ほどではないですが、作業のアシスタントとして「Bot(ボット)」もキーワードとして上がっています。おすすめをレコメンドしてくれたり、あらかじめセットしたプログラムを欲しい時に実行してくれたりします。\nこのコースは、「仮想通貨」と「Bot(ボット)」をPython開発するコースです。\nPythonって何？という方でも、Pythonのダウンロードから実際にプログラミングをしてチャットツールボットを作るところまでをサポートしています。利用するツールは、無料で利用できるチャットツール「slack」「googlehangout」です。言語は、Pythonのver3.xを利用しています。\n最後は、自分でカスタマイズしたボットを使って色々なことを試したくなるでしょう！\nぜひ、一緒にあなただけの面白いボットを作っていきましょう！\n\n\n【デバイスについて】\n本コースでは、Mac PCを利用しています。\nしかし、開発のプログラミングでは、Mac PCでもWindowsPCのどちらでも大丈夫です。\nWindowsPCの方は、ダウンロード部分やコマンドプロンプトをMacではなく、WindowsPCとして補完してご覧いただけますと幸いです。\n\n\n【ソフトウェアについて】\n本コースのソフトウェアのバージョンは、下記のものを利用しています。\nPython version：3.6.2\n\n\n【カリキュラム構成】\n\nセクション1 ：コース説明\nセクション2：Pythonのダウンロードとフレームワークについて解説\nセクション3：Pythonでプログラミングしてみよう\nセクション4：仮想通貨の取引所に無料で登録しよう\nセクション5：APIについて解説\nセクション6：Slackで仮想通貨ボットを作ろう！\nセクション7：Google Hangoutで仮想通貨ボットを作ろう！",
      "target_audience": [
        "仮想通貨に興味がある方",
        "Pythonを使ってみたい方",
        "Bot(ボット)に興味がある方",
        "ブロックチェーンなどの知識が欲しい方",
        "プログラミングを学びたい方",
        "できたプログラムをドンドン新しくしていきたい方"
      ]
    },
    {
      "title": "Proceso CRUD (C Sharp y Microsoft SQL Server)",
      "url": "https://www.udemy.com/course/proceso-crud-c-sharp-y-microsoft-sql-server/",
      "bio": "C Sharp y Microsoft SQL Server",
      "objectives": [
        "Conocer el manejo y desarrollo de uno de los lenguaje de programación más usado en el mercado laboral",
        "Se realizará 100% práctico el aprendizaje de este curso.",
        "ejemplos claros al momento de nuestro proceso de desarrollo.",
        "Será nuestra formación base en el mundo del lenguaje de programación"
      ],
      "course_content": {
        "Introducción": [
          "00 - Intro - Proceso CRUD CSharp y SQLServer",
          "01- Creación de usuario SQL - Proceso CRUD CSharp y SQLServer",
          "02- Creación Base de Datos y Tablas - Proceso CRUD CSharp y SQLServer",
          "03- Procedimiento Almacenados SQL - parte 1 - Proceso CRUD CSharp y SQLServer",
          "04- Procedimiento Almacenados SQL - parte 2 - Proceso CRUD CSharp y SQLServer",
          "05 - Creación de Proyecto CSharp - Proceso CRUD CSharp y SQLServer",
          "06 - Crear Clase Conexion- Proceso CRUD CSharp y SQLServer",
          "07- Crear Clase Entidades - Proceso CRUD CSharp y SQLServer",
          "08 - Crear Clase Datos - Proceso CRUD CSharp y SQLServer",
          "09 - Crear Clase Datos parte 02- Proceso CRUD CSharp y SQLServer.mp4",
          "10 - Crear Clase Datos parte 03- Proceso CRUD CSharp y SQLServer",
          "11 - Crear Presentación Formulario Productos parte 01 - Proceso CRUD CSharp y",
          "12 -Crear Presentación Formulario Productos parte 02-Proceso CRUD CSharp y SQL",
          "13 -Crear Presentación Formulario Productos parte 03-Proceso CRUD CSharp y SQL",
          "14 -Crear Presentación Formulario Productos parte 04-Proceso CRUD CSharp y SQL",
          "15 -Crear Presentación Formulario Productos parte 05-Proceso CRUD CSharp y SQL",
          "16 -Crear Presentación Formulario Productos parte 06-Proceso CRUD CSharp y SQL",
          "17 -Crear Presentación Formulario Productos parte 07-Proceso CRUD CSharp y SQL",
          "18 -Crear Presentación Formulario Productos parte 08-Proceso CRUD CSharp y SQL",
          "19 -Crear Presentación Formulario Productos parte 09-Proceso CRUD CSharp y SQL",
          "20 - Crear Reporte - parte 01 - Proceso CRUD CSharp y SQLServer",
          "21 - Crear Reporte - parte 02 - Proceso CRUD CSharp y SQLServer",
          "22 - Crear Reporte - parte 03 - Proceso CRUD CSharp y SQLServer",
          "23 - Crear Reporte - parte 04 - Proceso CRUD CSharp y SQLServer",
          "24 - Crear Reporte - parte 05 - Proceso CRUD CSharp y SQLServer",
          "25 - Final del Curso - Proceso CRUD CSharp y SQLServer"
        ]
      },
      "requirements": [
        "Un equipo de cómputo con Sistema operativo Windows 10 en adelante y Conocimiento de C# y Microsoft SQL Server Nivel Básico y Sugerible Intermedio."
      ],
      "description": "En este curso vamos a lograr a realizar el paso a paso la construcción de un Proceso CRUD entre C Sharp y Microsoft SQL Server, utilizaremos en todo este proceso las herramientas informáticas de la actualidad como el lenguaje de programación de C# y el motor de base de datos Microsoft SQL Server y de apoyo utilizaremos el Ide de Microsoft Visual Studio Community 2022.\nEste curso pretende introducirte en el mundo de la programación, empleando un lenguaje de programación de mayor demanda en el mundo laboral.\nEste es un curso de programación C# y framework .NET a nivel intermedio. Un excelente curso a seguir una vez que conoces las bases de programación en C# Nivel Básico.\nAprenderás a interactuar datos con el usuario ya con un entorno gráfico apoyándote con los Formularios y Reportes que se diseñen en el IDE de Visual Studio.\nAdemás, aprender C# te ayudará a conocer las bases de otros lenguajes cuya sintaxis es muy parecida, como Java y C++.\nPara que puedas practicar, tienes ejercicios propuestos al final de cada video. Las soluciones a esos ejercicios las tienes compartidas al final del curso, para que puedas comparar tus intentos con la \"solución oficial\", y asegurarte de que estás aprendiendo.\n\n\nLo que aprenderás\nEn este curso aprenderás los manejos de los controles más usado en el entorno gráfico y sus funcionalidades usando C#.\nAprenderás sobre un escenario de enseñanza 100% práctico...\nTendrás ejemplos guiados.\n¿Hay requisitos para realizar el curso?\nSe necesita experiencia previa en lenguaje de programación como mínimo el Nivel Básico.\nManejo como mínimo el nivel básico en Microsoft SQL Server.\nNecesitarás un equipo cómputo con Windows para ejecutar Visual Studio.\n¿Para quién es este curso?\nEstudiantes o aficionados, con ganas de introducirse en el mundo de la programación de computadoras y en el lenguaje C#\nInstructores\nVíctor Ramos\nIT Sistemas\nInstructor | Programador | Diseñador\nHola que tal amigos, buen día.\nMi nombre es Víctor Ramos, soy de Perú.\nme dedico a:\n- Asistencia Técnica de Cómputo y Desarrollo de Aplicaciones para Pequeñas y Medianas Empresas.\n- Entrenador en programación de Visual FoxPro 9, VB NET, C#, MySQL Server, Maria DB, PostgreSQL, Oracle database y Microsoft SQL Server.",
      "target_audience": [
        "A todos los que desean aprender a programar en el lenguaje de programación más usado en el mercado laboral"
      ]
    },
    {
      "title": "Curso de Python 3.9 | Aprende el lenguaje del futuro",
      "url": "https://www.udemy.com/course/curso-de-python-39-aprende-el-lenguaje-del-futuro/",
      "bio": "Aprende Python3 desde cero, aun sin saber nada de programación",
      "objectives": [
        "Te iniciaras y aprenderás a programar con Python 3.9.x",
        "Aprenderás los fundamentos de la programación con este lenguaje de alto nivel.",
        "Aprenderás programación orientada a objetos",
        "Conviértete en un programador apto para ingresar en el mercado de trabajo y/o desarrollar softwares propios",
        "Tendrás una base en conceptos de programación lo suficientemente sólida como para aprender nuevos lenguajes de programación sin problemas"
      ],
      "course_content": {
        "¿Qué es PYTHON?": [
          "Introducción a Python"
        ],
        "Configuramos Python": [
          "Como instalar Python",
          "Como instalar Sublime",
          "Como instalar Atom"
        ],
        "Tipos de Datos y Operadores": [
          "Tipo de Datos",
          "Operadores Matemáticos",
          "Operadores a Nivel de Bits",
          "Operadores Lógicos y Relacionales",
          "Cadena de caracteres",
          "Métodos con cadenas"
        ],
        "Entrada y Salida": [
          "Funciones Input() - Print()"
        ],
        "Prueba de conocimientos": [
          "Examen 3",
          "Ejercicio para practicar",
          "Resolución de Ejercicio"
        ],
        "Colecciones": [
          "Listas",
          "Métodos con Listas",
          "Tuplas",
          "Diccionarios",
          "Métodos con Diccionarios"
        ],
        "Flujos de Control: Condicionales y Bucles": [
          "Sentencia Condicional : IF",
          "Bucle: WHILE",
          "Bucle: FOR"
        ],
        "Funciones": [
          "Funciones",
          "Modulo con Funciones"
        ]
      },
      "requirements": [
        "PC / notebook",
        "No hace falta ninguna experiencia en programación"
      ],
      "description": "¿Por qué estudiar Python?\nPython es un lenguaje multiparadigma, esto significa que combina propiedades de diferentes paradigmas de programación. Principalmente es un lenguaje orientado a objetos, todo en Python es un objeto, pero también incorpora aspectos de la programación imperativa, funcional, procedural y reflexiva.\n\n\nPython se utiliza en un sin fin de ambientes, como por ejemplo:\nLenguaje de scripting\nDesarrollo web\nBig data\nInteligencia Artificial\nMachine Learning\nDeep Learning\nData Science\n\n\nTemas que abordaremos en el curso\nFundamentos Iniciales\nConceptos Básicos\nLógica de la Programación\nLenguaje Python en su versión  3.9.x\n\n\nAprende el lenguaje del momento y del futuro - Aprende Python",
      "target_audience": [
        "Cualquier persona con ganas de aprender a programar Python"
      ]
    },
    {
      "title": "Visualizaciones Avanzadas en Excel para el Análisis de Datos",
      "url": "https://www.udemy.com/course/visualizaciones-avanzadas-en-excel-para-el-analisis-de-datos/",
      "bio": "Cómo crear visualizaciones impactantes y dashboards dinámicos en Excel para analizar datos como un experto.",
      "objectives": [
        "Dominio de Técnicas Avanzadas de Visualización en Excel.",
        "Desarrollo de Dashboards Dinámicos e Interactivos en Excel.",
        "Aplicación Efectiva de Data Storytelling en el Análisis de Datos.",
        "Casos prácticos de Dashboards con Funciones y Controles de Formulario.",
        "Comunicación Efectiva de Resultados de Análisis de Datos.",
        "Casos prácticos de Dashboards con Tablas Dinámicas y Segmentadores.",
        "Creación y Personalización Avanzada de Gráficos en Excel."
      ],
      "course_content": {
        "Antes de comenzar": [
          "Bienvenidos",
          "Presentación",
          "Evaluación",
          "Mensaje",
          "Material del curso",
          "Grupo para dudas",
          "¿Cómo formular preguntas en el curso?",
          "Complementos"
        ],
        "Introducción a Excel": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Introduccion a Excel y familiarización con la interfaz",
          "Importar y Exportar datos en Excel",
          "Trabajar con diferentes tipos de datos en Excel",
          "Tablas en Excel",
          "Formatos condicionales",
          "Minigráficos",
          "Tipos de Gráficos en Excel",
          "Tablas dinámicas en Excel",
          "Gráficos dinámicos en Excel",
          "Segmentación de Datos",
          "Listas desplegables",
          "Fórmulas y Funciones en Excel",
          "Generar Datos con Excel"
        ],
        "Visualizaciones avanzadas en Excel": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Visualizaciones de datos en Excel",
          "Gráfico de Barras y de Columnas",
          "Tarea: Gráfico de Barras y Columnas",
          "Histograma",
          "Tarea: Histograma",
          "Gráfico de Líneas",
          "Función HISTORIALCOTIZACIONES",
          "Tarea: Gráfico de Líneas",
          "Gráfico de Áreas",
          "Gráfico de Tarta y de Donut",
          "Gráfico de Dispersión (Scatterplot) y de Burbujas",
          "Gráfico de Cajas y Bigotes (Boxplot)",
          "Tarea: Gráfico Boxplot",
          "Gráfico de Cotizaciones (Stock Chart)",
          "Tarea: Gráfico de Cotizaciones",
          "Mapas",
          "Gráficos Combinados"
        ],
        "Introducción al Data Storytelling": [
          "Descarga aquí los archivos de Excel de esta sección",
          "¿Qué es Data Storytelling?",
          "Errores comunes con visualizaciones de datos",
          "Cómo conectar con la audiencia",
          "Elementos de percepción visual",
          "Técnicas narrativas para comunicar datos",
          "Caso práctico 1: Aplicando las técnicas narrativas y visuales a gráfico de área",
          "Caso práctico 2: Simulando un gráfico político",
          "Añadiendo un extra de interactividad al gráfico anterior",
          "Caso práctico 3: Reproduciendo un gráfico de línea de Internet",
          "Caso práctico 4: Reproduciendo un gráfico de áreas de Internet",
          "Caso práctico 5: Creando un gráfico informativo de regresión lineal"
        ],
        "Dashboards en Excel": [
          "Introducción a los dashboards y su importancia",
          "Diseñar el esquema del dashboard",
          "Uso de funciones y tablas dinámicas para alimentar dashboards",
          "Interactividad: desplegables y controles de formulario"
        ],
        "Caso práctico 1: Dashboard Venta de Seguros": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Caso práctico 1: Dashboard Venta de Seguros (Parte 1)",
          "Caso práctico 1: Dashboard Venta de Seguros (Parte 2)",
          "Caso práctico 1: Dashboard Venta de Seguros (Parte 3)",
          "Caso práctico 1: Dashboard Venta de Seguros (Parte 4)",
          "Caso práctico 1: Dashboard Venta de Seguros (Parte 5)"
        ],
        "Caso práctico 2: Dashboard Ingresos Personales": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Caso práctico 2: Dashboard Ingresos Personales (Parte 1)",
          "Caso práctico 2: Dashboard Ingresos Personales (Parte 2)",
          "Caso práctico 2: Dashboard Ingresos Personales (Parte 3)"
        ],
        "Caso práctico 3: Dashboard Empleabilidad": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 1)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 2)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 3)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 4)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 5)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 6)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 7)",
          "Caso práctico 3: Dashboard Empleabilidad (Parte 8)",
          "Solución a la Tarea Dashboard Empleabilidad"
        ],
        "Caso práctico 4 Dashboard Aerolíneas": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Caso práctico 4: Dashboard Aerolíneas (con tablas dinámicas)",
          "Caso práctico 4: Dashboard Aerolíneas (con funciones y botones de control)"
        ],
        "Caso práctico 5 (Extra): Dashboard Calculador de Hipotecas": [
          "Descarga aquí los archivos de Excel de esta sección",
          "Caso práctico 5 (Extra): Dashboard Calculador de Hipotecas"
        ]
      },
      "requirements": [
        "Conocimiento básico de Excel."
      ],
      "description": "Bienvenido al curso de \"Visualizaciones Avanzadas en Excel para el Análisis de Datos\", un curso diseñado para elevar tus habilidades en el manejo de datos a nuevas alturas.\nEn este emocionante viaje, te sumergirás en las complejidades de la visualización de datos, explorando no solo la creación de gráficos avanzados en Excel, sino también la magia de los dashboards dinámicos y la narración efectiva de historias a través de los datos, también conocida como Data Storytelling.\nEn las primeras lecciones, veremos una introducción a la interfaz de Excel y recordaremos todo lo que podemos hacer con ella, por ejemplo, mediante el uso de funciones, fórmulas, tablas dinámicas, gráficos dinámicos, minigráficos, formatos condicionales, y aprenderemos a crear elementos que nos serán muy útiles después, como por ejemplo las listas desplegables y los segmentadores.\nLuego, te sumergirás en el mundo de la visualización, y aprenderás todos los detalles sobre todos los tipos de gráficos que puedes crear con Excel. Aprenderás cómo personalizar cada elemento, desde los ejes hasta las leyendas, no solo para transmitir eficazmente la información, sino también para crear composiciones visualmente impactantes. La paleta de colores se convertirá en tu lienzo, dando vida a tus datos de una manera que no solo informa, sino que también cautiva. Por ejemplo, veremos con detalle cómo configurar los gráficos de barra y columna (tradicionales y apilados), histogramas, gráficos de línea, de áreas, de tarta, de anillos, de dispersión, de burbujas, los gráficos de cajas y bigotes, los de cotizaciones, los mapas y los gráficos combinados.\nProfundizaremos en la tarea de aprender a contar una historia con datos, discutiendo los errores comunes en visualización de datos, las recomendaciones para poder conectar con la audiencia, los elementos de percepción visual que podemos utilizar para reducir la carga cognitiva en nuestros gráficos, y las técnicas narrativas que podemos usar para comunicar datos. Con todo ello podremos explorar el arte de aplicar el Data Storytelling a tus visualizaciones, creando una narrativa visual convincente, incorporando comentarios, mensajes informativos y elementos multimedia en tus gráficos para enriquecer tus historias, y poder comunicar de manera efectiva lo que transmiten tus datos. Veremos todo ello a través de casos prácticos.\nPero este curso va más allá. Avanzando, nos adentraremos en la creación de dashboards dinámicos, donde la magia de la interactividad toma el centro del escenario. Descubrirás cómo visualizar un conjunto de datos de manera inteligente con dashboards que representen el mensaje que deseas transmitir. La implementación de funciones avanzadas no solo agregará dinamismo, sino que también proporcionará una experiencia de usuario fluida e intuitiva.\nCada módulo se construye sobre la base del anterior, creando una experiencia de aprendizaje integral que transformará tu enfoque hacia la visualización de datos en Excel, con la práctica como modus operandis.\nAl finalizar, no solo serás un experto en la herramienta, sino un narrador habilidoso, capaz de tejer historias cautivadoras a través de visualizaciones impactantes y dinámicas.\n¡Únete a nosotros en esta travesía y descubre cómo elevar tu análisis de datos y tus visualizaciones al siguiente nivel!",
      "target_audience": [
        "Analistas de datos que deseen mejorar sus habilidades de presentación de datos.",
        "Gerentes y ejecutivos interesados en comprender y comunicar mejor la información clave.",
        "Profesionales financieros que buscan mejorar la presentación de informes financieros.",
        "Especialistas en marketing que deseen crear dashboards visuales para análisis de campañas.",
        "Publicistas interesados en contar historias persuasivas utilizando datos.",
        "Estudiantes universitarios que deseen desarrollar habilidades prácticas en visualización de datos.",
        "Profesores e investigadores que buscan mejorar la presentación de resultados de investigación.",
        "Emprendedores que necesiten comunicar de manera efectiva la información clave de sus startups.",
        "Propietarios de pequeñas empresas que deseen crear dashboards para el seguimiento de rendimiento.",
        "Especialistas en recursos humanos que busquen visualizar datos relacionados con la gestión del talento.",
        "Individuos que deseen mejorar sus habilidades en Excel para crear visualizaciones atractivas."
      ]
    },
    {
      "title": "Aprendendo Algoritmos com VisuAlg",
      "url": "https://www.udemy.com/course/aprendendo-algoritmos-com-visualg/",
      "bio": "Aprenda lógica computacional e algoritmos com VisuAlg.",
      "objectives": [
        "Escrever seus primeiros programas de computador utilizando o VisuAlg.",
        "Aprender sobre lógica computacional.",
        "Escrever algoritmos computacionais.",
        "Utilizar o VisuAlg."
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Preparando o ambiente"
        ],
        "Variáveis e operadores": [
          "Conhecendo o VisuAlg",
          "Tipos de dados",
          "Nomes de variáveis",
          "Comando de atribuição",
          "Operadores aritméticos",
          "Entrada de dados",
          "Operadores relacionais"
        ],
        "Condicionais e loops": [
          "Condicionais",
          "Repetição",
          "Repetição novamente"
        ],
        "Vetores e matrizes": [
          "Conhecendo os vetores",
          "Vetores novamente",
          "Matrizes"
        ],
        "Funções e procedimentos": [
          "Criando funções",
          "Criando procedimentos",
          "Cálculo do IMC"
        ],
        "Considerações finais": [
          "Obrigado!!",
          "Aula bônus"
        ]
      },
      "requirements": [
        "Não é necessário conhecimento prévio."
      ],
      "description": "Nesse curso você aprenderá sobre lógica computacional e irá praticar algoritmos computacionais utilizando o programa VisuAlg. Esse curso é totalmente voltado para iniciantes em programação de computadores.\nAtravés de aulas dinâmicas e didáticas você entrará no mundo da programação de computadores. Tem-se um déficit muito grande de bons programadores, várias empresas ao redor do mundo querem contratar programadores, a demanda é muito grande e você não pode ficar de fora desse mercado!\nO que está esperando? Cadastre-se agora mesmo no curso para ter acesso às aulas! O curso é vitalício, tem direito a certificado e você irá aprender a programar com Marcos Castro que já publicou dezenas de cursos e possui centenas de alunos espalhados por vários países.\nO curso também possui um fórum onde você poderá tirar todas as suas dúvidas com o instrutor. Você aprenderá no seu tempo através de aulas práticas. Aguardo você no curso!",
      "target_audience": [
        "O curso é destinado totalmente a iniciantes em programação de computadores.",
        "Todos que querem aprender e praticar lógica computacional e algoritmos.",
        "Todas as pessoas podem fazer esse curso, basta ter vontade de aprender."
      ]
    },
    {
      "title": "Especialización en Visión Artificial 2025",
      "url": "https://www.udemy.com/course/python-para-vision-artificial/",
      "bio": "Actualizado a 2025 - Enfoque de 0 a maestro, Python, Bases de datos, Visión artificial, Machine Learning y Deep Learning",
      "objectives": [
        "Python desde 0 para principiantes",
        "Procesamiento digital de imágenes",
        "Visión artificial en conjunto con Machine Learning para clasificación",
        "Aplicación de algoritmos de visión artificial en Raspberry Pi 4B",
        "Programación multi hilo con Python"
      ],
      "course_content": {
        "Python - Introducción": [
          "Introducción",
          "Instalación de anaconda",
          "Nota importante",
          "Creación del entorno de trabajo",
          "Instalar y desinstalar librerías con pip",
          "Palabras reservadas",
          "Hola mundo"
        ],
        "Python - Nivel 1": [
          "Comentarios",
          "Mensajes en pantalla",
          "Variables y constantes parte 1",
          "Variables y constantes parte 2",
          "Ingresar datos por teclado",
          "Cierre nivel 1"
        ],
        "Python - Nivel 2": [
          "Intro",
          "Introducción a tipos de datos",
          "Datos numéricos",
          "Dato tipo bool",
          "Operadores de asignación",
          "Operadores aritméticos",
          "Operadores relacionales",
          "Ejemplos operadores relacionales",
          "Ejercicio integrador 1",
          "Operadores lógicos",
          "Ejemplo operadores lógicos",
          "Ejercicio operadores lógicos",
          "Cadenas parte 1",
          "Cadenas parte 2",
          "Cadenas parte 3",
          "Cadenas parte 4",
          "Listas parte 1",
          "Listas parte 2",
          "Listas parte 3",
          "Listas parte 4",
          "Listas parte 5",
          "Listas parte 6",
          "Tuplas",
          "Diccionarios parte 1",
          "Diccionarios parte 2",
          "Diccionarios parte 3",
          "Diccionarios parte 4",
          "Conjuntos parte 1",
          "Conjuntos parte 2"
        ],
        "Python - Nivel 3": [
          "Introducción",
          "Control de flujo parte 1",
          "Control de flujo parte 2",
          "Ejercicio integrador 2",
          "Ciclo While parte 1",
          "Ciclo While parte 2",
          "Ejercicio integrador 3",
          "Ciclo For parte 1",
          "Ciclo For parte 2",
          "Reto",
          "Reto",
          "Bucles anidados parte 1",
          "Bucles anidados parte 2",
          "Bucles anidados parte 3",
          "Solución al reto"
        ],
        "Python - Nivel 4": [
          "Introducción",
          "Definición, llamada y retorno",
          "Argumentos por nombre y posición",
          "*args",
          "**kwargs",
          "Variables en las funciones",
          "Paso por valor y paso por referencia",
          "Control de excepciones"
        ],
        "Reconocimiento facial mediante Deep Learning(Proyecto Python)": [
          "Presentación del proyecto",
          "Instalación de librerías",
          "Proyecto"
        ],
        "Bases de datos con SQLite": [
          "Introducción a SQL",
          "La base de datos relacional",
          "Introducción a SQLite",
          "Instalación de SQLite",
          "Tipos de datos",
          "Mi primera base de datos",
          "Insertar y consultar datos",
          "Primer acercamiento al lenguaje SQL",
          "Introducción al lenguaje SQL",
          "Flexibilidad del lenguaje SQL",
          "CREATE TABLE",
          "Cuestionario",
          "ALTER TABLE",
          "Ejercicio",
          "INSERT INTO",
          "PRIMARY KEY",
          "Repaso SELECT",
          "DISTINCT",
          "ORDER BY",
          "Práctica ORDER BY",
          "Solución-práctica ORDER BY",
          "LIMIT",
          "COUNT",
          "Ejercicio COUNT",
          "Solución ejercicio COUNT",
          "Repaso SELECT + WHERE",
          "Comparaciones 1",
          "Comparaciones 2",
          "Comparaciones 3",
          "BETWEEN",
          "IN -",
          "Operadores lógicos",
          "IS NULL y NOT",
          "DELETE",
          "UPDATE",
          "JOIN Y ALIAS",
          "JOIN Y ALIAS 2",
          "Resultado ejercicio JOIN ALIAS",
          "Introducción UNION",
          "UNION y UNION ALL",
          "EXCEPT",
          "Ejercicio EXCEPT",
          "SUM Y CAST",
          "MIN y MAX",
          "LOWER y UPPER",
          "SUBSTR",
          "Concatenación de cadenas",
          "Reto GROUP BY",
          "Solución GROUP BY",
          "Reto consultas anidadas y vistas",
          "DATETIME",
          "DATETIME Formatos fraccionarios",
          "DATETIME Modificadores"
        ],
        "Python + SQLite": [
          "Python + SQLite parte 1",
          "Python + SQLite parte 2",
          "Python + SQLite parte 3",
          "Modificación del proyecto de Reconocimiento Facial"
        ],
        "Procesamiento digital de imágenes (PDI) - Parte 1": [
          "Nota y recursos",
          "Introducción al PDI",
          "Introducción a OpenCV",
          "Leer imágenes en escala de grises",
          "Jugando con waitKey y namedWindow",
          "Conversión entre espacios de color parte 1",
          "Conversión entre espacios de color parte 2",
          "Trabajando con pixeles parte 1",
          "Aplicar slicing a listas y vectores",
          "Trabajando con pixeles parte 2(Sustitución de zonas)",
          "Trabajando con pixeles parte 3(SelectROI)"
        ],
        "Procesamiento digital de imágenes (PDI) - Parte 2": [
          "Temario operaciones con imágenes",
          "Traslación",
          "Trasladando una imagen",
          "Rotación",
          "Rotando una imagen",
          "Escalado",
          "Escalando una imagen",
          "Transformación de perspectiva",
          "Ejemplo de transformación de perspectiva",
          "Operaciones aritméticas con imágenes",
          "Base de la detección de movimiento en sistemas de video vigilancia",
          "Creando nuestro propio sistema de detección de movimiento"
        ]
      },
      "requirements": [
        "Contar con computadora",
        "Acceso a internet"
      ],
      "description": "Domina Python, Visión Artificial y Deep Learning desde Cero\n¿Quieres llevar tus habilidades tecnológicas al siguiente nivel? Este curso te guiará paso a paso para convertirte en un experto en procesamiento digital de imágenes, bases de datos y visión artificial, utilizando herramientas modernas como Raspberry Pi y el poder del deep learning.\n¿Qué aprenderás?\nCrea soluciones inteligentes con Python, desde la programación básica hasta proyectos avanzados.\nDiseña y gestiona sistemas con SQLite para manejar tus datos de manera eficiente.\nAplica técnicas de machine learning para resolver problemas reales de visión artificial.\nExperimenta con Raspberry Pi y transforma ideas en proyectos innovadores.\nConquista el mundo del deep learning con YOLO y aprende a detectar objetos con precisión.\nTodo está cuidadosamente diseñado para que aprendas a tu ritmo, con explicaciones claras, ejemplos prácticos y ejercicios guiados que te inspirarán a desarrollar tus propias soluciones.\nNo importa si eres principiante o ya tienes experiencia, este curso es tu oportunidad de adquirir habilidades altamente demandadas en la industria tecnológica, explorando desde las bases de la programación hasta la implementación de proyectos avanzados de visión artificial.\n¡Transforma tu pasión por la tecnología en proyectos impactantes y abre nuevas oportunidades profesionales! Inscríbete ahora y comienza a construir el futuro.",
      "target_audience": [
        "Toda aquella persona que desee aprender Python aplicado a la visión artificial",
        "Personas con conocimiento en Python que deseen aprender visión artificial"
      ]
    },
    {
      "title": "C#: Yeni Başlayanlar İçin Visual Studio ile C# Programlama",
      "url": "https://www.udemy.com/course/c-yeni-baslayanlar-icin-visual-studio-ile-c-programlama/",
      "bio": "C# programlamayı sıfırdan öğrenmek, etkin C# Visual Studio ve C# kullanmak için ideal C# programlama kursu",
      "objectives": [
        "C#, öğrenmesi ve bakımı nispeten kolay bir dil olsa da, sadece yeni başlayanlar için değildir.",
        "Microsoft'un sunduğu C#, .NET Framework'un temelinde yer alan bir programlama dilidir.",
        "Platformlar arası kullanılabilen bir kod olmasına rağmen C# genellikle Microsoft ekosistemindeki programcılar tarafından kullanılır.",
        "C# (see-sharp olarak telaffuz edilir) genel amaçlı, nesne yönelimli bir programlama dilidir.",
        ".NET çerçevesi sayesinde C#, C++'a göre birçok avantaja sahiptir. C#, C++'ın rafine edilmiş ve modernize edilmiş bir sürümüdür.",
        "C#, web uygulamaları, Windows uygulamaları ve oyun geliştirme gibi çok çeşitli programlar ve uygulamalar oluşturmak için kullanılır",
        "Kurs boyunca kullanılacak araçlar ücretsizdir",
        "Kod veya kodlama bilmenize gerek yok",
        "Bilgisayarınız MAC ve Windows olabilir. Her ikisinde de çok rahat çalışıyor olabileceksiniz",
        "Uygulamalı örneklerle en baştan C# öğreneceksiniz",
        "Her konuyu gerçek hayattan projelerde nasıl kullanacağınızı öğreneceksiniz",
        "Diğer programlama dillerini kısa sürede öğrenecek altyapıya sahip olacaksınız",
        "Java, Python gibi dilleri kısa sürede öğrenebileceksiniz",
        "Visual Studio'yu etkili şekilde kullanaksanız",
        "C# ve .NET Visual Studio Kurulumu",
        "Mac için Visual Studio Kurulumu",
        "Console Uygulamaları",
        "Değişkenler",
        "Visual Studio İncelenmesi",
        "Tool Box Elemanları",
        "Random Sınıfı",
        "Timer Sınıfı",
        "Math Sınıfı",
        "c sharp programming",
        "Yeni başlayanlar için c# ( c sharp for beginners )",
        "Baştan sona c# ( c sharp from scratch )"
      ],
      "course_content": {
        "Visual Studio ile C# Programlama": [
          "C# Programlama Kursunda Neler Var?",
          "Kurs Dökümanları ve Proje Dosyaları",
          "C# ile alakalı sıkça sorulan sorular"
        ],
        "c# ve .Net Programlamaya Giriş": [
          "Programlama",
          "C# ve .Net Kavramları"
        ],
        "C# için Geliştirme Ortamları": [
          "Geliştirme Ortamlarının İncelenmesi",
          "Windows İşletim Sisteminde Visual Studio Kurulumu",
          "Mac İşletim Sisteminde Visual Studio Kurulumu"
        ],
        "C# Kodlamaya Giriş": [
          "Console Uygulamalarına Giriş",
          "Write, WriteLine ve ReadKey Komutları",
          "Console Read Readlıne"
        ],
        "Değişkenler": [
          "Değişkenler",
          "Değişkenlerde Tür Dönüşümleri",
          "Quiz"
        ],
        "Winforma Giriş": [
          "İlk Win Form Uygulaması",
          "Visual Studiodaki Önemli Pencereler"
        ],
        "Form Nesnesi": [
          "Form Nesnesinin İncelenmesi"
        ],
        "Form Elemanları": [
          "MessageBox",
          "Button",
          "Label",
          "TextBox",
          "GroupBox",
          "RadioButton",
          "CheckBox",
          "Combobox",
          "DateTime Picker",
          "Formlar Geçiş ve Veri Transferi"
        ],
        "Operatörler": [
          "Operatörler"
        ],
        "Kodlamaya Başlamadan Bilinmesi Gerekenler": [
          "Comment (Yorum Satırları)",
          "Region Kullanımı",
          "İsimlendirme Kuralları",
          "BreakPoint Kullanımı",
          "Visual Studio’ da Kısa Yollar"
        ]
      },
      "requirements": [
        "Bilgisayarınız MAC ve Windows olabilir. Her ikisinde de çok rahat c# çalışıyor olabileceksiniz",
        "Kod veya kodlama bilmenize gerek yok",
        "Kurs boyunca kullanılacak araçlar ücretsizdir",
        "Tecrübeli olmanıza gerek yok",
        "İnternet bağlantısı olan bir bilgisayar",
        "Eğitimi başarılı bir şekilde tamamlamak için c sharp programming 'e istek ve motivasyon",
        "Kısacası simdi tek ihtiyacınız olan bilgisayarınız ve sizsiniz!"
      ],
      "description": "Merhabalar,\n\"C#: Yeni Başlayanlar İçin Visual Studio ile C# Programlama\" kursuna hoşgeldiniz.\nC# programlamayı sıfırdan öğrenmek, etkin C# Visual Studio ve  C# kullanmak için ideal C# programlama kursu\nC# becerilerini sürekli olarak geliştirmek isteyen büyük bir Cloud hosting firması için kod yazıyorsun ya da programlama konusunda kendini geliştirmek isteyen bir öğrencisin ve C# programlama öğrenmek istiyorsun. Kendine hangi seçeneği daha yakın hissediyorsan hisset bu kurs tam sana göre.\n\nİster platformlar arası uygulamalar oluşturmak için Xamarin Forms ile birlikte C # kullanıyor olun, ister C# ile Unity'de yeni bir video oyunu tasarlıyor olun, OAK Academy'de size uygun bir kurs vardır. OAK Academy, C# programlama ile ilgili temel bilgilerden veri tabanları ve senkronize olmayan programlama gibi daha gelişmiş konulara kadar, her konuda en yüksek puan alan kurslar sunar.\nMicrosoft'un sunduğu C#, .NET Framework'un temelinde yer alan bir programlama dilidir. Platformlar arası kullanılabilen bir kod olmasına rağmen C# genellikle Microsoft ekosistemindeki programcılar tarafından kullanılır.\nBu eğitimde çeşitli uygulamalar oluşturmak için kullanılabilecek çapraz bir platform dili olan C# i öğretiyor olacağız.  C# ile mobil uygulamalar (Windows, Android ve iOS için), oyunlar geliştirip  aynı zamanda masaüstü uygulamaları oluşturabilirsiniz.\nİşte bu yüzden C # ile başlamak için harika bir yerdesin.\nC# programlama dilini öne çıkaran özelliklerden biri de C#'ın Unity geliştiricileri arasında yaygın olarak kullanılan ve en popüler oyun geliştirme dili olması.\nC#'ı sıfırdan öğrenmeye başlayıp adım adım uygulamalı örneklerle öğreneceksin. Uygulamalı örneklerle öğrenirken hangi eylemi neden ve niçin yapıldığının da açıklamalarını bu eğitimde buluyor olacaksın.\nC# eğitiminde hangi konuları ele aldık;\nC# .NET\nVisual Studio Kurulumu\nMac için Visual Studio Kurulumu\nConsole Uygulamaları\nDeğişkenler\nVisual Studio İncelenmesi\nTool Box Elemanları\nIf Else Yapısı\nSwitch Case Yapısı\nWhile / Do While Döngüleri\nFor / For Each Döngüleri\nDiziler\nMetotlar\nSınıflar\nLıst Sınıfı\nRandom Sınıfı\nTimer Sınıfı\nMath Sınıfı\nc#\nc# .net\nunity c#\nc# unity\nc sharp\nc sharp programming\nselenium webdriver with c sharp\nselenium with c sharp\nc sharp for beginners\nselenium c sharp\nc sharp from scratch\n.net\n.net core\nc# .net\n.net Core 3\nC# Nedir?\nC# (see-sharp olarak telaffuz edilir) genel amaçlı, nesne yönelimli bir programlama dilidir. 2000 yılında Microsoft tarafından .NET girişiminin bir parçası olarak çok paradigmalı bir programlama dili olarak tasarlandı. .NET çerçevesi ve .NET uygulamaları, C++, C#, Visual Basic ve COBOL gibi programlama dilleriyle kullanabileceğiniz çok platformlu uygulamalardır. C# açık kaynaklıdır ve basit ancak modern, esnek ancak güçlü ve çok yönlü ancak öğrenmesi ve programlaması kolay olacak şekilde tasarlanmıştır. Geçmişte birçok programlama dili belirli amaçlar için tasarlandı. C#, iş ve kurumsal ihtiyaçlar göz önünde bulundurularak geliştirildi. Web uygulamaları, mobil ve yanıt uygulaması ihtiyaçları gibi modern yazılım geliştirmeyi desteklemek için işlevsellik sağlayan C#, günümüz programlama dillerinin birçok özelliğini destekler. Buna jenerikler, var türleri dahildir.\n\nC++'a göre C# avantajları nelerdir?\n.NET çerçevesi sayesinde C#, C++'a göre birçok avantaja sahiptir. C#, C++'ın rafine edilmiş ve modernize edilmiş bir sürümüdür. C++, daha eski fakat yaygın olarak kullanılan bir dil olan C'ye nesne yönelimi getirmek için geliştirildi ve C++, Windows için uygulamaların yanı sıra altyapı ve düşük seviyeli uygulamalar oluşturmak için fiili dil haline geldi. Visual Basic iş uygulamaları içindi. C#'ın yaptığı, VB'nin hızlı geliştirme yeteneklerini C++'ın gücüyle birleştirmektir. C# ayrıca, başlatılmış değişkenleri bilmeden yeniden kullanmamanızı sağlamak için birçok yeni veri türüne, tür güvenliğine sahiptir. Basitleştirilmiş bir sözdizimi kullanır; bu, genellikle C++'da gerekli olan karmaşık kodlamaya göre büyük bir gelişmedir. C#, .NET'in çöp toplama şeması sayesinde bellek yönetimi sorunlarını da ortadan kaldırır. Çöp toplama için öğelere başvurmanız gerekmez; sistem bu belleği gerektiği gibi geri alabilir.\n\nC# ne için kullanılır?\nC#, web uygulamaları, Windows uygulamaları ve oyun geliştirme gibi çok çeşitli programlar ve uygulamalar oluşturmak için kullanabileceğiniz genel amaçlı bir programlama dilidir. Web uygulaması geliştirmede, .NET veya seçtiğiniz başka bir açık kaynaklı platform kullanarak dinamik web siteleri ve uygulamalar oluşturabilirsiniz. Ayrıca Microsoft, Microsoft için C# oluşturduğundan, C#, Windows uygulamaları oluşturmak için popüler bir dildir. Microsoft platform mimarilerine özgü uygulama ve programları destekleyebilen ve belgeleyebilen, bu alanda uygulama geliştirmeyi her zamankinden daha kolay hale getiren zengin kaynaklar ve canlı bir C# topluluğu vardır. Son olarak, C#, özellikle C++ ve C# üzerinde çalışan bir oyun motoru olan Unity ile oyun oluşturmada kullanılan popüler bir dildir.\nC#'ı nasıl öğrenirim?\nBirçok beceri için geçerli olduğu gibi, Udemy kurslarına katılarak, belgeleri okuyarak ve uygulamalı kodlama pratiği yaparak C# öğrenebilirsiniz. Siz yazarken kodunuzun çıktısını size gösterecek olan gerçek zamanlı derleyici uygulamaları da dahil olmak üzere, yukarıdakilerin tümü için birçok kaynak mevcuttur. Ancak, önceden plan yapmak en iyisidir ve yolculuğunuza başlamadan önce öğrenmeniz gerekenlerin bir taslağını yapmalısınız. İlk öğrenilmesi gereken şey C#'ın ne olduğu, nasıl ve nerede kullanıldığı ve neden geliştirildiğidir. Oradan veri türleri, değişkenler, anahtar kelimeler ve işlevler hakkında bilgi edinebilirsiniz. Temel bilgileri kavradıktan sonra, koşullu testler ve operatörler, işlevler, bağımsız değişkenler, nesne yönelimi, diziler, diziler, sınıflar, yöntemler, yapılar, hata ayıklama ve istisna işleme hakkında bilgi edinebilirsiniz.\nKursiyerlerimiz,\nSoru&Cevap bölümünde hızlı cevaplar alabilecek,\nKursu bitiren tüm kursiyerlerimiz kurs bitirme sertifikalarını Udemy'den indirebilecek\nDaha fazla zaman kaybetmeyin ve C#: Yeni Başlayanlar İçin Visual Studio ile C# Programlama kursumuza siz de kayıt olun!\nKursta görüşmek üzere!\n\n\nEnglish Version:\n\nWhether you’re using C# in conjunction with Xamarin Forms to build cross-platform apps, or designing a new video game in Unity with C#, OAK Academy has a course for you. OAK Academy hosts top-rated courses on everything from the fundamentals of C# programming to more advanced topics like databases and asynchronous programming.\n\nEven though C# is a language that’s relatively easy to learn and maintain, it isn’t just for beginners. Its scalability and large support community make C# the language of choice for Microsoft app developers and video game developers working with the Unity Engine. Like C++ and Java, C# is a high-level object-oriented programming language. It is generally more efficient than Java and has useful features such as operator overloading. C# is based on C++ but has several advantages over this older language: it is type-safe, more comprehensively object-oriented, and the syntax has been simplified in several important ways. Most importantly, C# interoperates exceptionally well with other languages on the .NET platform. For this reason, C# is a better choice for building applications for .NET.\n\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its .NET initiative. The .NET framework and .NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL. C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with. Many programming languages in the past were designed for specific purposes. C# was developed with business and enterprise needs in mind. By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages. That includes generics, var types.\nWhat are the advantages of c# over C++ ?\nThanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications. Visual Basic was for business applications. What C# does is combine the rapid development capabilities of VB with the power of C++. C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables. It uses a simplified syntax, a huge improvement over the complex coding often required in C++. C# also removes memory management issues thanks to .NET’s garbage collection scheme. You do not have to reference items for garbage collection; the system can reclaim that memory as required.\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members so that they are treated as a single object. It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer. Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs. For example, suppose you have an object called “Patient” that contains patient-related data. In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data. In addition to information hiding, you can use encapsulation in C# to improve your code's reusability.\n\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development. In web application development, you can build dynamic websites and apps using .NET or another open-source platform of your choice. Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications. There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space. Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#.\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods. A method is a block of code that contains a series of statements. Programs run by executing methods. A constructor is a special method of a class that is automatically called whenever an instance of a given class is created. A constructor contains the instructions that execute when an object is created. Developers use it to assign specific initial values to the data members of the same class. In C#, you will get a compile-time error if you try to read from an uninitialized variable. You must first initialize your variables by giving them an initial value, which is what the constructor does. On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed. Destructors are called implicitly by the garbage collector in .NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on. There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it. However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey. The first thing to learn about is what C# is, how and where it is used, and why it was developed. From there, you can learn about data types, variables, keywords, and functions. Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling.",
      "target_audience": [
        "C# programlama dilini sıfırdan öğrenmek isteyenler",
        "C# ( c# .net ) etkili tekniklerle öğrenmek isteyenler",
        "Visual Studio`yi etkili kullanmak isteyenler",
        "C # ( c sharp programming ) ile kodlamayı öğrenmek isteyenler",
        "C# ( c sharp from scratch ) öğrenip yeni bir meslek dalına geçmek isteyenler",
        "unity c# ile Oyun geliştirmek isteyenler"
      ]
    },
    {
      "title": "Programación estructurada desde CERO: 4 lenguajes en 1 curso",
      "url": "https://www.udemy.com/course/programacion-estructurada-desde-cero-4-lenguajes-en-1-curso/",
      "bio": "C++, Java, Pascal y JavaScript - Las bases más solidas de la programación estructurada",
      "objectives": [
        "Programación estructurada en C++",
        "Programación estructurada en Java",
        "Programación estructurada en Pascal",
        "Programación estructurada en JavaScript",
        "Bases sólidas de programación en 4 tecnologías a la vez",
        "Lenguajes compilados, semi-interpretados e interpretados",
        "Bases de HTML y JavaScript",
        "Diagramas de flujo",
        "Secuencias de instrucciones",
        "Tipos de datos primitivos",
        "Uso de variables y constantes",
        "Sentencias de selección IF simples, concatenadas y anidadas",
        "Composición de condiciones con operadores lógicos booleanos",
        "Tablas de verdad",
        "Secuencia de repetición FOR simple y anidada",
        "Bucle condicional WHILE",
        "Bucle condicional DO..WHILE y REPEAT",
        "Proyectos de aplicación"
      ],
      "course_content": {},
      "requirements": [
        "No se requiere ningún conocimiento previo, se aprende desde cero.",
        "Preferentemente utilizar un sistema operativo Windows o Linux."
      ],
      "description": "Aprender a programar es de las cosas más importantes y provechosas que puedes hacer en la era actual, donde la automatización domina cada vez más el mercado laboral y el desempleo se acrecienta día tras día. Desarrollar las habilidades de un/a programador/a te permitirá entrar mucho más rápida y fácilmente a un mercado laboral de alta demanda y alta remuneración, además de dotarte de la posibilidad de desempeñarte como freelance y trabajar para ti a distancia, desde la comodidad de tu hogar.\nAdemás de todo lo anterior, aprender a programar hace que rompas las barreras que puedas tener frente a la tecnología, a la manipulación de información y al provecho que le sacas a todas las herramientas que hay a tu disposición. Si eres capaz de aprovechar las páginas Web, las redes sociales y los sistemas de información en tu beneficio y provecho, estarás encima de la ola de esta era, pudiendo lograr cosas que jamás creíste.\nEn este curso abarcaremos las bases indispensables para que domines cualquier lenguaje de programación, lográndolo a través de un entrenamiento intensivo utilizando 4 tecnologías a la vez:\nPascal\nC++\nJava SE\nHTML-CSS-JavaScript, enfocándonos más que nada en este último.\n¿Y por qué utilizar 4 lenguajes a la vez? Porque todos y cada uno de ellos aporta algo al aprendizaje, y al ser tecnologías diferentes cada una tiene una visión distinta sobre los mismos conceptos, dotándonos de un contraste que no encontrarás en ningún otro curso de programación, y mucho menos de un taller. He aquí, a grandes rasgos, el por qué de cada tecnología en este taller:\n\n\nPascal: Es tan poderoso como cualquier lenguaje moderno, pero mucho más fácil de aprender y con mayor facilidad para introducir conceptos nuevos, sin que exista un choque tan fuerte con temas avanzados. Lo usaremos como herramienta para introducir cada nuevo concepto.\nC++: Uno de los más usados y demandados hoy día. Permite que traslades lo aprendido en Pascal, que no tiene tanta demanda laboral, a una de las herramientas más usadas en la actualidad, logrando un dominio excelente de ambas.\nJava: Como verás en el curso, a diferencia de los dos anteriores, Java utiliza una máquina virtual para funcionar, lo cual implica que sus códigos son semi-interpretados y, casi en todos los casos, multiplataforma. Esto genera un salto bastante amplio entre la visión que aportan Pascal y C++. Además, al ser Java un lenguaje que nació a partir de C++ comparte muchas estructuras con este último, siendo más fácil trasladar lo aprendido.\nHTML-CSS-JavaSript: Aquí el salto y cambio de paradigma es brutal. En primer lugar HTML y CSS no son lenguajes de programación, su utilidad es otra, pero JavaScript (JS) sí lo es, dotando a las páginas web de dinamismo y de la capacidad y poder que tienen otras herramientas como Pascal, C++ y Java. Al ser, además, JS un lenguaje interpretado, hay drásticos cambios en el uso de las mismas herramientas que se vieron en las tres tecnologías anteriores. Finalmente, estas tecnologías son altamente demandadas en el mercado laboral, y por tanto no pueden faltar.\nAbarcaremos los 3 pilares que el Teorema del Programa Estructurado propone como esenciales y suficientes para lograr construir cualquier sistema informático:\n\n\nSecuencia\nSelección\nIteración o repetición\nCompletados estos tres pilares, cada estudiante podrá luego optar por especializarse en cualquiera de estas 4 tecnologías u otra de su elección, porque será más capaz que cualquier aprendiz de cualquier otro curso.\nTemas\nEntrada y salida estándar de información\nVariables\nConstantes\nInferencia de tipos\nTipos de datos primitivos\nEstructura de una página Web\nEmbeber código JavaScript en HTML\nEventos básicos de JavaSript\nSentencia IF y selección\nCondiciones compuestas y operadores lógicos\nTablas de verdad\nDiagramas de flujo\nRepetición iterativa finita con FOR\nRepetición iterativa condicional con WHILE\nRepetición iterativa condicional con DO-WHILE o REPEAT\nRepetición condicionada por centinela\nDinamismo básico en páginas Web\nActualización de etiquetas específicas HTML mediante JS\nTodo estará acompañado de proyectos que requerirán la aplicación de todo lo visto en el curso para que puedas aprenderlo e incorporarlo realmente a tus habilidades. Lograrás así un dominio de la PROGRAMACIÓN ESTRUCTURADA que te permitirá luego enfocarte en cualquier lenguaje o tecnología que quieras.",
      "target_audience": [
        "Personas que quieran aprender a programar"
      ]
    },
    {
      "title": "जावा प्रोग्रामिंग",
      "url": "https://www.udemy.com/course/java-programming-f/",
      "bio": "जावा पेशेवर के रूप में प्रमाणित हो जाएं और काम में उत्कृष्टता प्राप्त करने के लिए एक पूर्ण आश्वस्त उद्योग तैयार कोर जावा",
      "objectives": [
        "यह केंद्र प्रोग्रामिंग विचारों को सीखने में छात्रों की मदद करेगा",
        "जावा भाषा में प्रोग्राम लिखना सीखें।",
        "जटिल मुद्दों वाले नवीन परियोजनाओं के निर्माण के लिए उन्हें तैयार करना।",
        "Ubuntu ऑपरेटिंग सिस्टम पर बोर्ड और उनके संबंधित कार्यक्रमों पर हर विषय को जानने के लिए।"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Of Java Programming",
          "Why Java",
          "Example of Java Application",
          "Types of Java Application",
          "History Of Java",
          "Java Version",
          "Features Of Java",
          "JVM, JDK & JRE",
          "Install Java in Ubuntu",
          "First Java Program",
          "Hello World Program Implementation"
        ],
        "Scanner Class": [
          "Introduction Of Scanner Class",
          "Write A Program To Read Student Roll Number, Name And Fee Using Scanner Class"
        ],
        "Variables": [
          "Introduction Of Variable",
          "Strongly Typed Vs Weakly Typed Language",
          "Rules For Declaring Variable Name",
          "Variable Declaration & Initialization",
          "Scope & Lifetime Of Variable",
          "Types Of Variable-1-2-3",
          "Example 1 Of Local Variable",
          "Example 2 Of Local Variable",
          "Introduction Of Instance Variable",
          "Example Of Instance Variable",
          "Static Variable",
          "Example Of Static Variable",
          "Example Of Static & Instance Variable",
          "Example 2 Of Static & Instance Variable",
          "Summary On Variables"
        ],
        "Data Type": [
          "Introduction of Datatype",
          "Primitive Datatypes",
          "Integer Data Types",
          "Size & Range Of Integer Data Type",
          "Example Of Integer Data Type",
          "Floating-point Data Type",
          "Example Of Floating Point Data Type",
          "Char Data Type",
          "Example Of Char Data Type",
          "Escape Sequence",
          "Boolean Data Type",
          "Derived Data Type",
          "User Defined Data Type",
          "Summary Of Data Types",
          "Type Conversion",
          "Example Of Type Conversion",
          "Introduction Of Literal",
          "Literals(Part 2)"
        ],
        "Operators": [
          "Introduction Of Operator",
          "Precedence & Associativity Table",
          "Arithmetic Operator",
          "Assignment Operator",
          "Relational Operator",
          "Logical Operator",
          "Bitwise Operator",
          "Conditional Operator",
          "Miscellaneous Operator"
        ],
        "Flow Control": [
          "Introduction Of Flow Control",
          "If Else Statement",
          "If Else If Ladder",
          "Nested If Statement",
          "Introduction Of Loops",
          "Do while loop",
          "For Loop",
          "Break Statement",
          "Continue Statement"
        ],
        "Class & Object": [
          "Introduction Of Class & Object",
          "Introduction Of Class",
          "Class & Classfields",
          "Memory Allocation For Class & Object",
          "Introduction To Method",
          "Introduction to Method Overloading",
          "Introduction Of Constructor",
          "Types Of Constructor"
        ]
      },
      "requirements": [
        "No"
      ],
      "description": "समय के साथ, जावा को एक मंच-अनुकूल भाषा होने से प्रोग्रामिंग भाषा को समझने में आसानी से विकसित किया गया है। जावा में एक सर्टिफिकेट कोर्स करने से छात्रों को मुख्य प्रोग्रामिंग अवधारणाओं को सीखने में मदद मिलेगी और उन्हें जटिल समस्याओं को हल करने के लिए प्रोग्राम लिखने के लिए सुसज्जित किया जाएगा\nहमने विभिन्न वातावरणों पर पर्याप्त कार्यक्रमों के साथ जावा पर पूर्ण पाठ्यक्रम को कवर किया है जो आपको अच्छे अंक प्राप्त करने, असाधारण परियोजनाओं का आविष्कार करने और औद्योगिक साक्षात्कार को दरार करने के लिए पर्याप्त अनुभव देता है।\nक्यों नामांकन करें?\nहम सुनिश्चित करते हैं कि जावा में हमारा नामांकन प्रमाणपत्र पाठ्यक्रम छात्रों को केंद्र प्रोग्रामिंग विचारों को सीखने में मदद करेगा और उन्हें जटिल मुद्दों वाले अभिनव परियोजनाओं के निर्माण के लिए तैयार करेगा। एक सफल जावा प्रोग्रामर बनने के लिए, एक छात्र को एक प्रभावी जावा डेवलपर में बदलने के लिए नई अवधारणाओं को सीखने के लिए एक अच्छे धैर्य स्तर के साथ विस्तार और विश्लेषणात्मक क्षमताओं पर ध्यान देना चाहिए।\nकरियर की संभावनाएँ\nहम यह सुनिश्चित करते हैं कि आपको सभी बुनियादी क्षमताएं मिलेंगी जो एक सॉफ्टवेयर इंजीनियर को वास्तविक जीवन की समस्याओं को हल करने के लिए चाहिए, उदाहरण के लिए, जावा पाठ्यक्रम पूरा करने के बाद परियोजनाओं की गणना, परीक्षण और जांच करना। इस पाठ्यक्रम के पूरा होने पर छात्र उद्योगों में विभिन्न प्रोफाइलों में से किसी का भी उल्लेख कर सकते हैं।\nसॉफ्टवेयर डेवलपर\nजावा प्रोग्रामर\nजावा डेवलपर\nJava EE Application Engineer\nकोई भी व्यक्ति जिसे इस भाषा का इक्का होना चाहिए और विशाल एमएनसी में काम करना चाहता है, उसे जावा में इस अच्छी तरह से डिज़ाइन किए गए सर्टिफिकेशन कोर्स की तलाश करनी चाहिए।\nकोर्स का विवरण\nजावा प्रोग्रामिंग भाषा का उपयोग सुरक्षित, पोर्टेबल, उच्च-प्रदर्शन अनुप्रयोगों को बनाने के लिए किया जाता है। जावा भाषा वर्ग-आधारित है, वस्तु-उन्मुख है और स्पष्ट रूप से उपयोग की कुछ शर्तों के लिए इरादा है जैसा कि परिस्थितियों में उम्मीद की जा सकती है। यह कोर्स आपको जावा भाषा में प्रोग्राम लिखने का तरीका सिखाएगा। आप जावा प्रोग्रामिंग की विभिन्न अवधारणाओं जैसे चर, वर्ग, डेटा प्रकार, फ्लो कंट्रोल स्टेटमेंट और, ऑपरेटर, वर्ग, ऑब्जेक्ट ओरिएंटेशन आदि सीखेंगे और हर विषय को उबंटू ऑपरेटिंग सिस्टम पर बोर्ड और उनके संबंधित कार्यक्रमों पर समझाया गया है।",
      "target_audience": [
        "जावा सीखने वाले",
        "जावा उत्साही"
      ]
    },
    {
      "title": "VBA Excel - Preparazione al Corso Master",
      "url": "https://www.udemy.com/course/vba-excel-preparazione-gratuita-al-corso-master/",
      "bio": "Imparare le Basi della Programmazione in VBA",
      "objectives": [
        "La programmazione ad Oggetti",
        "Objects e Collections",
        "Metodi e Proprietà di un Oggetto",
        "I costrutti del VBA: With - End With | For Each - Next",
        "Controllare esecuzione del Codice: If - Then | GoTo | Select Case",
        "Loops: For - Next | Do - While | Do - Until"
      ],
      "course_content": {},
      "requirements": [
        "Avere terminato il nostro Corso Intermedio e/o Avanzato",
        "Essere in grado di lavorare con le Formule e le Funzioni di Excel senza problemi",
        "Un PC con un sistema Windows",
        "Excel installato per lavorare dinamicamente con il Docente",
        "Possedere una di queste versioni di Excel: 2010 - 2013 - 2016"
      ],
      "description": "Ciao, il mio nome è Casegna Alfonso è sono un Docente informatico specializzato in ambito Office e non solo.\nATTENZIONE:\n\"Purtroppo il Corso, per una politica di Udemy, non è più gratuito come lo era inizialmente e questo mi dispiace.\"\nIL MIO CONSIGLIO E' QUELLO DI COMPRARE DIRETTAMENTE  IL CORSO  VBA - LA GUIDA COMPLETA POICHE' TROVERETE ALL'INTERNO ANCHE QUESTA PARTE.\nTorniamo a noi ...Un altro motivo per cui ho deciso di creare questo corso è perché reputo fondamentale che lo studente metta alla prova il Docente. Questo deve essere in grado di spiegare concetti complessi in modo estremamente semplice. Lo studente deve valutare se chi insegna possiede la giusta competenza nel campo e affidargli, in modo totale, la propria fiducia.\nLa prima cosa che voglio sottolineare è che: \"questo corso è stato creato per coloro che non hanno mai avuto a che fare con la programmazione in VBA o altri linguaggi.\"\nUn requisito IMPORTANTE è il fatto di saper utilizzare bene Excel ...quindi Formule, Funzioni, Macro, etc devono far parte del proprio repertorio. Nel caso ti suggerisco vivamente di iniziare dai miei Corsi: Base, Esperto, Master Level.\nQualcosa in più sul Corso\nIn realtà non si tratta di un corso a sé stante, infatti, è un’estrapolazione del CORSO VBA - LA GUIDA COMPLETA che pubblicherò tra non molto.\nLa decisione di intraprendere questa strada è dettata dal fatto che chi si avvicina per la prima volta alla Programmazione, deve essere guidato passo dopo passo fino ad acquisire una SOLIDA BASE. Quindi il percorso sarà pieno di Esempi, Test, Domande e soprattutto tanta pratica. Credimi quando ti dico che argomenti come, Programmazione ad Oggetti, Programmazione Strutturata, Variabili, Costanti, Proprietà, Metodi, Routine, Function, Costrutti devono diventare il tuo pane quotidiano per poi fare il grande passo.\nPer esperienza posso dirti che:\n1.    Tutti possono imparare a programmare in VBA.\n2.    Il VBA di Excel è un linguaggio semplice e versatile che permette di creare applicazioni davvero potenti.\n3.    Per diventare utilizzatori Avanzati, in ambito VBA, bisogna necessariamente fondarsi su Basi Solide.\n4.    Dedicare il giusto tempo a qualcosa rispettando Regole e Metodi porta sempre a centrare l'obiettivo prefissatosi.\nIl Corso VBA Excel - Preparazione al Corso Master ti permetterà di imparare le Basi della programmazione in modo da affrontare, come davvero si dovrebbe, lo step successivo e cioè il CORSO VBA - LA GUIDA COMPLETA\nIl CORSO, strada facendo, verrà integrato anche di materiale aggiuntivo utile a rafforzare e testare quanto lo studente ha appreso.",
      "target_audience": [
        "Programmatori VBA",
        "Programmatori che vogliono imparare il VBA di Excel",
        "Chi vuole diventare un utilizzatore davvero avanzato di Excel",
        "Chi vuole imparare a realizzare applicazioni con il VBA di Excel"
      ]
    },
    {
      "title": "Der komplette C Kurs - Programmieren lernen von Anfang an",
      "url": "https://www.udemy.com/course/c-komplettkurs/",
      "bio": "Lerne die Mid-Level Programmiersprache C und alle dazugehörigen Themen wie Structs, Speicherverwaltung, Headers uvm.",
      "objectives": [
        "Programmieren mit C",
        "Computer Technik in Bezug auf C",
        "Variablen, Funktionen, Schleifen, Structs, Unions uvm.",
        "Headerdateien und DLLs erstellen",
        "Pointer, Heap und Stack",
        "Speicherverwaltung"
      ],
      "course_content": {},
      "requirements": [
        "Windows PC (um dem Kurs am besten folgen zu können)",
        "Spaß am Umgang mit Technik"
      ],
      "description": "Willkommen zu meinem kompletten C Programmierungskurs. In diesem Kurs lernst du alles, was du über die Mid-Level Programmiersprache C wissen musst!\n\n\nIn einer Welt, die angetrieben wird durch Systeme die in C entwickelt sind (Windows, Linux, Macintosh, Maschinen, Platinen uvm.), kannst du nur als absoluter TOP Entwickler herausstechen, wenn du verstehst wie diese Systeme aufgebaut sind und wie sie funktionieren. Mit C lernst du also nicht nur DIE fundamentalste Programmiersprache überhaupt, sondern du gewinnst auch noch ein unglaublich Wissen über die Funktionalität von Computertechnik im Allgemeinen.\n\n\nDu willst beispielsweise eigene Betriebssysteme programmieren oder Spiele hacken? Ohne zu wissen, wie Daten innerhalb deines Programmes gespeichert und manipuliert werden können ist das nicht möglich. Mit C lernst du also ganz genau wie all das funktioniert.\n\n\nWusstest du beispielsweise, dass eine Funktion in C bis zu 1000x schneller laufen kann als in anderen High-Level (C#, Python, Java, JavaScript etc.)?\n\n\nIch verspreche dir, dass du nach Abschluss dieses Kurses nicht nur eigene C Programme schreiben kannst, sondern außerdem noch versteht wie die Programme auf deinem Computer überhaupt so umgesetzt werden, dass sie von deiner Maschine ausgeführt werden können.\n\n\nWerde zum Top-Entwickler in dem du beim Grundstein der Programmierung anfängst. Im Kurs werden dir folgende Inhalte praktisch vermittelt:\nProgramme kompilieren\nDatentypen, Variablen, If-Statements, Funktionen\nStructs, Unions, Typen\nSpeicherverwaltung im Heap und Stack\nVerwendung von diversen Headerdateien\nEigene Programme entwickeln\nVieles mehr\nAlle Themen werden anhand von echtem Code (den du mit programmierst) erklärt. Außerdem gibt es zu jedem Thema ein Quiz, mit dem du deinen Wissenstand prüfen kannst, ein Dokument (Spickzettel) wo alle wichtigen Fakten und Beispiele des Themas aufgelistet sind und eine Programmierübung in der du selber alleine aktiv werden kannst (nicht musst).\n\n\nKurz zu mir, mein Name ist Jannick und ich arbeite als freiberuflicher Softwareentwickler und Dozent. Mit mehr als 75.000 Teilnehmern in meinen Kursen kann ich dir einen Lernerfolg garantieren. Im Jahr 2019 habe ich mich von Microsoft als Entwickler zertifizieren lassen um dir die spannendsten Inhalte präsentieren und beibringen zu dürfen. Mit meiner langjährigen Erfahrung in der Entwicklung von Anwendungen, Servern und Einplatinen-Computern weiß ich ganz genau wovon ich rede.\n\n\nGanz egal ob du dich als Entwickler weiterbilden möchtest oder einen Einstieg in die Welt der Entwicklung suchst, mein Kurs hilft dir so oder so ans Ziel zu kommen :-)\n\n\nTrage dich jetzt in den Kurs ein und werde zu einem der wenigen Programmierer, die den Durchblick haben.",
      "target_audience": [
        "An jeden, der Programmieren lernen will",
        "An Entwickler anderer Programmiersprachen (C#, Java, Python), die eine Mid-Level Programmiersprache lernen wollen",
        "An jeden, der Maschinen programmieren lernen möchte",
        "An jeden, der eigene Betriebssysteme programmieren lernen möchte"
      ]
    },
    {
      "title": "C#で帳票ライブラリを使って印刷プログラムを作る方法",
      "url": "https://www.udemy.com/course/cs_print/",
      "bio": "マイクロソフトの無料帳票ツール「Microsoft RDLC Report Designer」を使って， 一覧やグラフ表示のできる帳票プログラムを作成する方法を解説しています。",
      "objectives": [
        "Microsoft RDLC Report Designerの使い方",
        "一覧表の印刷プログラムの作り方",
        "一覧表で小計や合計を出す方法",
        "画像を制御する方法",
        "棒グラフや折れ線グラフの帳票を作る方法"
      ],
      "course_content": {},
      "requirements": [
        "WindowsPCでVisualStudio2019が動作すること",
        "C#の基本的な文法が分かる事"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n今回はC#で帳票プログラムを作成する方法を解説しています。\n\n\n帳票作成に使用するツールは\nマイクロソフト純正の，「Microsoft RDLC Report Designer」という\n無料ツールで作成するので，\nこの技術を習得すると，\n一覧表の作成や，棒グラフ，折れ線グラフなどの\n印刷プログラムを無料で作成できるようになります。\n\n\n印刷プログラムを作成するうえで，\n基本的なことは一通り解説しているので\n是非楽しんでご覧ください。\n\n\n#01_はじめに\n#02_Microsoft RDLC Report Designerのインストール\n#03_プロジェクトの作成\n#04_Microsoft.ReportingServices.ReportViewerControl.Winformsのインストール\n#05_もっとも簡単な印刷プログラムの作成\n#06_プレビュー画面からの印刷やPDFやWordやExcelに出力する方法\n#07_レポートに文字を表示して日本語フォントに変更する方法\n#08_パラメータを使って動的に文字を切り替える方法\n#09_ヘッダーを追加して印刷日時を表示する方法\n#10_フッターを追加してページ番号を表示する方法\n#11_一覧の表示_一覧に表示するオブジェクトの作成\n#12_一覧の表示_テーブルにデータセットを設定する\n#13_一覧の表示_テーブルにデータソースをマッピングする\n#14_一覧の表示_画面からデータソースを設定する方法\n#15_ヘッダーの文字を変更したり罫線を引いたりする方法\n#16_項目をグルーピングする方法\n#17_グルーピング単位で小計を出す方法\n#18_顧客ごとの合計を表示する方法\n#19_総合計の行を表示する方法\n#20_顧客が変わるたびに改ページする方法\n#21_2ページ目以降も一覧のヘッダーを出す方法&一覧のまとめ\n#22_条件に合わせてセルのバックカラーを変更する方法\n#23_イメージ(画像)を表示する方法\n#24_条件に合わせて画像を切り替える方法\n#25_画像の表示非表示を切り替える方法\n#26_棒グラフの表示_新しいレポートの追加\n#27_棒グラフの表示_棒グラフ用のオブジェクトを作成\n#28_棒グラフの表示_棒グラフの設定\n#29_棒グラフの表示_棒グラフを表示する\n#30_棒グラフの表示順序を変更する方法\n#31_棒グラフの系列を増やす方法\n#32_突き抜けた棒グラフを区切り表示する方法\n#33_折れ線グラフ表示_レポートの追加\n#34_折れ線グラフ表示_オブジェクトの作成\n#35_折れ線グラフ表示_折れ線グラフの設定\n#36_折れ線グラフ表示_データソースの設定\n#37_折れ線グラフのラインの名前を指定する\n#38_折れ線グラフのラインの色など各種設定\n#39_折れ線グラフの軸の設定とグリッド線の設定\n#40_グラフタイトルの設定方法\nさいごに",
      "target_audience": [
        "C#で帳票プログラムの作成をしたい方"
      ]
    },
    {
      "title": "Yeni Başlayanlar için C Programlama Dili",
      "url": "https://www.udemy.com/course/yeni-baslayanlar-icin-c-programlama-dili/",
      "bio": "Herkes için C Programlama",
      "objectives": [
        "Algoritmanın ne olduğunu ve algoritma oluşturma süreçlerini",
        "C dilini",
        "C dili ile alakalı örnek",
        "C diline hakim olduktan sonra diğer yazılım dillerine geçecekler"
      ],
      "course_content": {
        "Giriş": [
          "Gerekli Dosyalar",
          "Merhaba Dünya",
          "Değişkenler Ve Kullanım Mantıkları",
          "Dizeler - Arrays",
          "Türkçe Karakter Sorunu Çözümü",
          "Koşullar Teorik Anlatım",
          "Koşullar ve Operatörler",
          "#Basit Uygulama - Ortalama Hesaplama",
          "#Basit Uygulama - Not Aralığı Hesaplama",
          "Aritmetik İşlemler",
          "Genel Döngü Çeşitleri - While and For",
          "#Basit Uygulama - Fonksiyonlar ile Hesap Makinesi",
          "Switch Case",
          "Break and Continue",
          "TypeDef",
          "#Orta Seviye Uygulama - Return Komutu ile Çoklu Fonksiyonlu Not Hesaplama"
        ],
        "Alıştırmalar": [
          "Girilen Harfin Ünlü mü Ünsüz mü Olduğunu Bulan Algoritma",
          "3 Girilen Sayıdan En Büyüğünü Bulan Algoritma",
          "Negatif Sayı Bulan Algoritma",
          "Ardışık Toplama Algoritması",
          "Çarpım Tablosu Algoritması",
          "Rastgele Sayı Algoritması",
          "Korona Testi Uygulaması",
          "Kaynaklar"
        ]
      },
      "requirements": [
        "Bilgisayar",
        "Bir kaç fincan hakve"
      ],
      "description": "AT&T Bell laboratuvarlarında, Ken Thompson ve Dennis Ritchie tarafından UNIX İşletim Sistemi' ni geliştirebilmek amacıyla B dilinden türetilmiş yapısal bir programlama dilidir. Geliştirilme tarihi 1972 olmasına rağmen yayılıp yaygınlaşması Brian Kernighan ve Dennis M. Ritchie tarafından yayımlanan \"C Programlama Dili\" kitabından sonra hızlanmıştır. Günümüzde neredeyse tüm işletim sistemlerinin (Microsoft Windows, GNU/Linux, *BSD, Minix) yapımında %95' lere varan oranda kullanılmış, hâlen daha sistem, sürücü yazılımı, işletim sistemi modülleri ve hız gereken her yerde kullanılan oldukça yaygın ve sınırları belirsiz oldukça keskin bir dildir.[kaynak belirtilmeli]\" Keskinliği, programcıya sonsuz özgürlüğün yanında çok büyük hatalar yapabilme olanağı sağlamasıdır. Programlamanın gelişim süreciyle beraber programlamanın karmaşıklaşması, gereksinimlerin artması ile uygulama programlarında nesne yönelimliliğin ortaya çıkmasından sonra C programcıları büyük ölçüde nesne yönelimliliği destekleyen C++ diline geçmişlerdir.\n\n\nC'nin ilk gelişme safhaları 1969 ile 1974 arasında AT&T Bell Laboratuvarları'nda gerçekleşti. Ritchie'ye göre, en yaratıcı devre 1972 idi. Dilin pek çok özelliği \"B\" adlı bir dilden türediği için, yeni dile \"C\" adı verildi. B dili yorumlanan bir dildi ve veri tipi desteği yoktu. Yeni donanımların farklı veri tiplerini desteklemesi, ve yorumlanan dillerin çalışma zamanında görece yavaş olması sebebi ile, C dili, tip desteği eklenmiş ve derlenen B olarak geliştirildi.\n\"B\" adının kökeni konusunda ise söylentiler değişik: Ken Thompson B'nin BCPL programlama dilinden türediğini söylemektedir, ancak Thompson eşi Bonnie'nin onuruna adını Bon koyduğu bir programlama dili de geliştirmiştir.\n1973'e kadar C yeterince güçlü bir hale gelmiş ve ilk başta PDP-11/20 assembly dili ile yazılan UNIX'in çekirdeğinin büyük kısmı C ile yeniden yazılmıştı.\nBöylece UNIX, çekirdeği bir assembly dili ile yazılmayan ilk işletim sistemlerinden biri olmuştu",
      "target_audience": [
        "Öğretmenlere",
        "Öğrencilere",
        "Yazılıme ilgisi olup nereden başlayacağını bilmeyenlere"
      ]
    },
    {
      "title": "OpenCV ile Görüntü İşleme 3/3 (Python)",
      "url": "https://www.udemy.com/course/opencv-ile-goruntu-isleme-3-python/",
      "bio": "Python Programlama Dili Kullanarak OpenCV ile Görüntü İşleme Dersi | Başlangıçtan İleri Düzeye | 3. Video Eğitimidir.",
      "objectives": [
        "OpenCV ile Görüntü İşleme üzerine detaylı bilgi, açıklama, örnek uygulama görecek ve temel mantığı öğreneceksiniz.",
        "AI, Data Science, Computer Vision alanlarında kullanımı yaygın olan OpenCV kütüphanesini Python programlama dili ile öğrenecek ve kendinizi geliştireceksiniz.",
        "Çokça kod uygulaması, fonksiyon açıklaması, challange ve popüler uygulamaların mantığını öğreneceksiniz.",
        "Bu kurstan sonra OpenCV için fikir edinecek ve kendinizi geliştirmek için ilk adımı atmış olacaksınız.",
        "OpenCV'nin için birçok nesne algılama, yüz tespiti, araç sayımı, filteleme, plaka okuma gibi sayamayacağım kadar çok uygulamayı geliştireceksiniz.",
        "OpenCV ile Görüntü İşleme algoritmalarını anlayacak ve hangi işlemlerin neden kullanıldığı gibi bilgileri öğreneceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "OpenCV ile Görüntü İşleme Dersi 1. ve 2. Kısım İzlenmesi Tavsiye Edilir",
        "Orta veya Temel Seviye Python Bilgisi",
        "Yazılım Mantığı Bilgisi",
        "Temel Matematik",
        "Görüntü İşleme Alanına İlgi ve Azim"
      ],
      "description": "Herkese merhaba,\nBen Mustafa Ünlü, Elektrik Elektronik Mühendisliği A.B.D. Master öğrencisiyim. Python programlama dilinde Opencv ile görüntü işleme serisine başladığım bu eğitimde bildiklerimi anlattım. Yurtiçi ve yurtdışı yarışmalarda görüntü işleme, gömülü yazılım, otonom yazılım, aviyonik sistem ve yazılımı geliştirilmesi gibi alanlarda görev alarak dereceler elde ettim. Bildiklerimi, tecrübelerimi ve fikirlerimi bu kurs ile sizlere aktardım.\n\n\nUmarım herkes için faydalı bir seri olur.\n\n\nAşırı Önemli Not: Bu kurs \"OpenCV ile Görüntü İşleme Dersi 1 (Python)\" ve \"OpenCV ile Görüntü İşleme Dersi 2 (Python)\" dersinin devam kursudur...\nBu serinin 1. kursunu ve 2.kursunu ÜCRETSİZ olarak sundum. Gönül rahatlığıyla kayıt olup izlemeye başlayabilirsiniz.\n\n\nBu görüntü işleme kursunu, sizi python-opencv dilinde yeni başlayandan profesyonele götürmek için tasarladım. OpenCV hakkında bilmeniz gereken her şeyi size öğretmek için elimden geleni yapacağım. Önceden bilgi sahibi olmayan ve yeni başlayanlar için mükemmel bir python-opencv öğreticisidir.\n\n\nİyi seyirler.\n\n\n\n\n/*\nOpenCV (Open Source Computer Vision Library, anlamı Açık Kaynak Bilgisayar Görüsü Kütüphanesi) gerçek-zamanlı bilgisayar görüsü uygulamalarında kullanılan açık kaynaklı kütüphane. İlk olarak Intel tarafından geliştirilmiş, daha sonra Willow Garage ve sonra Itseez (Intel tarafından satın alındı) tarafından sürdürüldü. Bu kütüphane çoklu platform ve BSD lisansı altında açık kaynaklı bir yazılımdır.\n\n\nUygulama alanları\nOpenCV'nin uygulama alanlarından bazıları şunlardır:\nEgomotion kestirimi\nYüz tanıma sistemi\nHareket tanıma\nİnsan-bilgisayar etkileşimi\nGezgin robotlar\nNesne tanıma\nResim segmentleme\nStereopsis görü\nHareket takibi (motion tracking)\nArtırılmış gerçeklik\nYukarıdaki alanlardan bazılarını destekleyebilmek için, OpenCV bünyesinde bir makine öğrenimi kütüphanesi bulundurur.\n*/",
      "target_audience": [
        "Başlangıç ve İleri Düzey Görüntü İşleme Tekniklerini Merak Edip Öğrenmek İsteyenler",
        "Görüntü İşleme Alanına Meraklı Herkes Gönül Rahatlığıyla Kursa Katılım Sağlayabilir"
      ]
    },
    {
      "title": "Робот для торговли криптовалютой на Binance на Python",
      "url": "https://www.udemy.com/course/binance-python/",
      "bio": "Разработайте и запустите собственного торговорго робота для криптовалюты, акций или нефти и золота",
      "objectives": [
        "Получение исторических данных с биржи Binance и из других источников",
        "Создание торговых роботов для криптовалюты, акций, фьючерсов, золота, нефти",
        "Тестирование стратегий для скальпинга, внутридневной торговли и инвестирований",
        "Программирование на Python для торговли на бирже Binance",
        "Подключение к бирже Binance через API",
        "Настройка сервера Amazon на ОС linux, запуск расписания запуска робота через cron",
        "Создание Telegram чат-бота для управления трейдингом"
      ],
      "course_content": {
        "Введение в курс": [
          "Введение в курс",
          "Основы прибыльной торговли на бирже"
        ],
        "Настройка рабочего места": [
          "Что будет в курсе?",
          "Установка среды разработки для Python часть 1",
          "Установка среды разработки для Python часть 2",
          "Получение исторических данных для ETH (Ethereum)"
        ],
        "Создание стратегии для трейдингового бота": [
          "Введение и разбор индикаторов",
          "Подготовка данных для анализа, визуализация данных, отрисовка графика цены",
          "Подготовка сигналов для покупки / продажи, визуализация, анализ",
          "Создание основного кода стратегии для торгового бота для Ethereum",
          "2838$ за 3 дня. Анализ работы стратегии. Расчет доходности в процентах",
          "Визуализация графика доходности. Анализ сделок на графике. Тонкая настройка."
        ],
        "Подключение торгового бота к бирже Binance через API": [
          "Регистрация ключей доступа к бирже Binance",
          "Функции работы с биржей Binance - часть 1",
          "Функции работы с биржей Binance - часть 2"
        ],
        "Разработка торгового бота Binance для запуска на сервере": [
          "Подготовка скрипта торгового бота",
          "Запуск торгового робота в связке с биржей Binance"
        ],
        "Управление торговым роботом через чат-бота Telegram": [
          "Создание Telegram чат-бота",
          "Программирование Telegram чат-бота для управление основным ботом",
          "Добавляем управление трейдинг ботом из Telegram чат-бота с помощью команд",
          "Тестируем работу Telegram и торгового бота"
        ],
        "Настройка сервера на Amazon AWS": [
          "Создание сервера на AWS. Настройка Python на Linux AMI",
          "Копирование файлов на сервер. Запуск робота на сервере Amazon",
          "Настройка расписания запуска робота через утилиту crontab"
        ],
        "Заключение": [
          "Заключение курса по разработке роботов для торговли на бирже Binance"
        ],
        "БОНУСНЫЙ РАЗДЕЛ": [
          "Если робот не открывает позиции и не работает - работа над ошибками!"
        ]
      },
      "requirements": [
        "Базовые навыки программирования",
        "Опыт ручной торговли на бирже (желательно)",
        "Базовые навыки работы с ОС Windows"
      ],
      "description": "Курс подойдет для любого уровня подтоговки. Содержит готовые к работе скрипты и подробную инструкцию как их запустить. Материал курса и программные модули позволят Вам в будущем создать робота по своему алгоритму, улучать доходность, переключаться в ручной или полностью автоматический режим торговли.\nКурс составлен из практических лекций, минимум теории программирования и теории торговли на бирже.\nВы можете как проходить курс с первого урока до последнего, так и скачать готовый для запуска программный код робота и начать изучение меняя его настройки.\nЯ как автор курса с большим удовольствием буду ждать Ваших вопросов по материалам курсов, ждать Ваших отзывов.\n\n\nПосле прохождения курса Вы научитесь:\n- Настраивать среду разработки на Python\n- Получать исторические данные о котировках криптовалюты напрямую с биржи Binance, а также из других источников\n- Разрабатывать свои собственные торговые алгоритмы\n- Обучать робота торговать по Вашим алгоритмам\n- Управлять торговым роботом через Telegram\n- Подключаться программно к бирже Binance и направлять команды на открытие и закрытие позиций\n- Настраивать с нуля сервер на Amazon на базе Linux\n- Визуализировать в виде графиков цену криптовалюты, график доходности, накладывать индикаторы\n\n\nКакие навыки программирования вы приобретете:\n- Работа с массивами данных через модули Pandas и NumPy\n- Отправка GET запросов на сервере, работа с API биржи Binance\n- Визуализация данных с помощью Matplotlib\n- Работа с API Telegram\n\n\nДля работы нам понадобиться:\n- Персональный компьютер с операционной системой Windows или Mac OS\n- Базовые знания по установке новых программ\n- Базовый опыт в программировании",
      "target_audience": [
        "Начинающие и опытные трейдеры, желающие автоматизировать свою работу на бирже. Инвесторы желающие создать своего робота для торговли сразу на нескольких рынках, нескольких криптовалютах и акциях"
      ]
    },
    {
      "title": "Java: orientação a objetos até banco dados",
      "url": "https://www.udemy.com/course/java-da-orientacao-a-objetos-a-banco-dados/",
      "bio": "Aprenda Orientação a objetos, SWING (interfaces gráficas), JDBC (banco de dados) de forma objetiva e prática.",
      "objectives": [
        "Java",
        "Programação orientada a objetos",
        "Interface gráfica com java e banco de dados",
        "Orientação a objetos",
        "Java Swing",
        "JDBC"
      ],
      "course_content": {
        "Java e Programação Orientada a Objetos": [
          "Apresentação do curso",
          "Introdução ao Java",
          "Introdução ao Java plataforma",
          "Introdução a Orientação a Objetos",
          "Conceitos de Classes e Objetos",
          "Encapsulamento",
          "Exercícios com os assuntos até esta aula",
          "Encapsulamento e Herança",
          "Exercício de programação",
          "Herança na prática",
          "Sobrecarga de Métodos",
          "Polimorfismo e Interfaces (conceito)",
          "Interface na prática",
          "Classes Abstratas",
          "Questionário até classes abstratas",
          "Tarefa de Programação",
          "Tratamento de Exceções",
          "Criando sua própria Exceção",
          "Coleções",
          "Coleções na prática",
          "Associação entre classes",
          "Métodos Estáticos e Constantes"
        ],
        "Java e Armazenamento de Dados (Arquivos e Banco de Dados)": [
          "Armazenamento de Dados - Arquivos",
          "Introdução ao JDBC e Banco de Dados",
          "JDBC Statements",
          "JDBC - Consultas",
          "JDBC - PreparedStatement"
        ],
        "Interfaces gráficas com SWING": [
          "Interfaces Gráficas SWING",
          "SWING Eventos",
          "SWING: Outros componentes e JDBC",
          "Desenvolvimento um programa em java com banco de dados"
        ],
        "Desenvolvimento em camadas": [
          "Desenvolvimento em Camadas",
          "Finalização do Curso e Dicas"
        ]
      },
      "requirements": [
        "Programação Básica",
        "Algoritmos básicos"
      ],
      "description": "Neste curso, o aluno aprenderá os conceitos sobre a orientação a objetos com a utilização de banco de dados com Java. Ao final do curso, o aluno será capaz de construir classes java utilizando os principais conceitos da programação orientada a objetos e desenvolver interfaces gráficas simples com acesso a banco de dados.\nSerão abordados os seguintes assuntos sempre com um exemplo prático:\nAmbiente Java+Programação Orientada a Objetos+Classes, Objetos, Métodos, Mensagens, Sobrecarga, Herança, +Polimorfismo, Interfaces (conceito) +Java Swing - Interfaces Gráficas+Introdução a Banco de Dados, JDBC+interfaces gráficas e Desenvolvimento em camadas.\nO curso utiliza a seguinte metodologia: apresentação do conceito seguida da implementação prática daquele conceito.\nA ideia do curso é ser objetivo e prático. O curso tem também alguns exercícios propostos.",
      "target_audience": [
        "Desenvolvedores iniciantes em java",
        "Desenvolvedores intermediários em java",
        "Estudantes dos cursos de computação",
        "Profissionais de programação da área de computação"
      ]
    },
    {
      "title": "C++ Programming Tutorial || دورة برمجة سي بلس بلس",
      "url": "https://www.udemy.com/course/c-programming-language-arabic/",
      "bio": "Learn C++ From Beginning & Become C++ Developer || من الصفر C++ تعلم",
      "objectives": [
        "Learn C++ Programming Language || تعلم لغة البرمجة سي بلس بلس",
        "Increase Your Problem Solving Skills and How To Think Good & Creative Like a Programmer || كيفية التفكير بمهارة والوصول لأسرع الحلول",
        "Learn About Data Types and Variables || المتغيرات وأنواع البيانات",
        "Types of Errors and How To deal With Common Errors || أنواع الأخطاء في اللغة وكيفية التغلب عليها",
        "Conditions, Loops & Repetitions || الجمل الشرطية والتكرارية",
        "Operators, 1D & 2D Arrays || المصفوفات الأحادية والثنائية، والمعاملات المنطقية والتعابير الحسابية",
        "Strings, Input & Output || المدخلات والمخرجات",
        "Functions & Built-In Functions || الدوال",
        "Basic Math, Libraries, Tips and Tricks. || المكتبات والدوال الرياضية",
        "Directing You to The Beginning of Road and How To Write High-Quality Code || توجيهك لبداية الطريق وكيفية كتابة الكود بطريقة منظمة",
        "Learn Coding by Yourself on CodeForces Website That Tells You Whether Your Code is Correct or Not || \"تعلم كتابة الأكواد بنفسك والحل اونلاين على موقع \"كودفورسز",
        "Online Judges and How To Participate in Online Programming Contests \"Competitions\" || كيفية المشاركة في المسابقات البرمجية الاونلاين",
        "Problems To Try by Yourself with Solutions in Video Resources || تدريبات لحلها بنفسك ومرفق إجاباتها في مصادر كل فيديو",
        "More Advanced Problems To Solve || مسائل متقدمة للفهم أكثر",
        "Ability To Understand any Code || القدرة على فهم وكتابة الأكواد",
        "Available High Quality Videos || فيديوهات عالية الجودة",
        "Not Too Long Videos To be Able To Reach any Part You Want Easily || فيديوهات قصيرة حتى تتمكن من الوصول لأي جزئية في الكورس بسهولة",
        "Quick Response in Q&A section || رد سريع على الأسئلة"
      ],
      "course_content": {
        "Introduction": [
          "Course overview",
          "Installing Visual Studio",
          "Deal With Visual Studio",
          "Installing CodeBlocks (Additional)"
        ],
        "Data Types & Variables": [
          "Getting Started \"Program Structure\"",
          "Data Types & Variables",
          "Declaration&Initialization of Variables - Arithmetical \"Mathematical\" operators",
          "Printing to screen (cout)",
          "Getting data from user (cin)",
          "Advanced print formats",
          "Our First Useful Program",
          "Comments & Assignment operators",
          "Increment & Decrement (++)( -- )",
          "How To Trace Your Code \"Important\"",
          "Types of Errors",
          "Challenge 1 : Problems To Solve",
          "Trace The Code"
        ],
        "If Conditions & Nested If": [
          "If-else statement & Relational operators",
          "Logical operators",
          "Nested If",
          "Revision for Types of operators",
          "Challenge 2 : Problems To Solve",
          "Challenge 3 : Problems To Solve"
        ],
        "Loops & Repetition": [
          "Introduction To Loops",
          "For Loop",
          "While Loop",
          "Do-while Loop",
          "Challenge 4 : Problems To Solve \"Using Counter\"",
          "Nested Loop",
          "Infinite Loop",
          "Break statement",
          "Continue Statement",
          "Goto statement",
          "Trace The Code",
          "Switch",
          "Challenge 5 : Printing Triangular shape & Multiplication Table using C++"
        ],
        "Arrays": [
          "Why To Use Arrays - Declaring & Initializing Arrays",
          "Inserting in Array",
          "Challenge 6: Let's Put all together in C++ \"Finding Element in array\"",
          "Arrays Functions",
          "Challenge 7: Finding Duplicates in Sorted Array",
          "Array of Characters",
          "2D Arrays",
          "Challenge 8: Diagonal Matrix - Getting max & min Element"
        ],
        "Strings & Functions": [
          "String introduction",
          "Finding Length of a String",
          "Challenge 9 : Problem To Solve",
          "String Functions",
          "Getline",
          "Built-In Functions",
          "Functions part 1",
          "Functions part 2",
          "Basic Math Functions"
        ],
        "More Advanced Problems": [
          "C++ References",
          "Solving online",
          "Challenge 10 : Problems To Solve",
          "Challenge 11 : Problems To Solve",
          "Challenge 12 : Problems To Solve \"Advanced\""
        ]
      },
      "requirements": [
        "Just You Need Your Computer || فقط جهازك",
        "This Course Guides You From Scratch || هذا الكورس يبدأ معك من الصفر",
        "You Don't Need Any Previous Knowledge About Programming || لا تحتاج إلى أي معرفة مُسبقة عن البرمجة"
      ],
      "description": "مرحباً بكم في كورس السي بلس بلس، سندرس في هذه الدورة لغة من أهم لغات البرمجة في العالم وأقواها وهى السي بلس بلس، ولا يتطلب منك الكورس أي معرفة مُسبقة بالبرمجة؛ لأننا سنبدأ معك من مستوى صفر برمجة إلى مستوى متطور في البرمجة\nسنشرح لغة السي بلس بلس خطوة بخطوة بالتفصيل حتى نتعلم وتفهم كل شئ ، فأفضل بداية لتعلم البرمجة أن تبدأ بلغة سي بلس بلس، و يجب أن تعرف أن البرمجة ليست صعبة أو معقدة كما يعتقد البعض ولكنها تحتاج إلى التركيز والتدريب، وفي هذا الكورس سنشرح العديد من التدريبات، بدأَ من تدريبات الأساسيات ومن ثم نتدرج في مستويات المسائل من الأسهل للأكثر صعوبة، كما أنك بنهاية هذا الكورس ستكون على معرفة وفيرة بجميع أساسيات السي بلس بلس بالإضافة إلى بعض الموضوعات المتطورة كما سيكون هناك تدريبات يجب عليك حلها بنفسك لتتأكد من فهمك لجميع الموضوعات بالإضافة لوجود حلها بالتفصيل في مصادر كل فيديو حتى نتيح لك فرصة التفكير والحل بنفسك، فكما قلنا أهم شئ في البرمجة هو التدريب،\n______________________________________________________________________________________________\n______________________________________________________________________________________________\nCourse Content || محتوى الدورة\nData Types &Variables and Comments. || أنواع البيانات والمتغيرات\nInput & Output || المدخلات والمخرجات\n(If - Else If - Else) Conditions || الجمل الشرطية\nLoops & Repetitions || دوال التكرار\nArrays 1D & 2D || المصفوفات الأحادية والثنائية\nStrings\nFunctions & Built-In Functions || الدوال\nBasic Math Functions || دوال رياضية\nVectors\nLibraries, Tips and Tricks || المكتبات في اللغة\nLearn More About Contest and Online judges || سنعلم أكثر عن مسابقات البرمجة الاونلاين",
      "target_audience": [
        "Anyone Who is Interested in Learning Programming || أي شخص يريد تعلم البرمجة",
        "Students Who Wants To Pass Their C++ Exam || الطلاب الذين يريدون اجتياز اختبارات السي بلس بلس",
        "Anyone Who Wants To Become C++ Developer || أي شخص يريد أن يصبح مطور سي بلس بلس"
      ]
    },
    {
      "title": "การพัฒนาโปรแกรมการใช้งานอัตโนมัติด้วยภาษา Python",
      "url": "https://www.udemy.com/course/python-automated-tasks/",
      "bio": "Automated tasks with Python",
      "objectives": [
        "ปูพื้นฐานภาษา Python",
        "ทำความรู้จักกับ Library อื่นๆ ที่ช่วยให้การทำงานอัตโนมัติต่างๆด้วย Python ง่ายขึ้น",
        "สามารถพัฒนาโปรแกรมกระบวนการทำงานอัตโนมัติต่างๆ และนำมาประยุกต์ใช้งานได้",
        "สามารถนำโปรแกรมที่พัฒนาขึ้น เผยแพร่ให้คนอื่นเพื่อนำไปใช้งานต่อได้"
      ],
      "course_content": {
        "แนะนำภาษา Python และการติดตั้ง": [
          "รู้จักกับภาษา Python",
          "การติดตั้งโปรแกรม Python บนระบบปฏิบัติการ Windows 10",
          "การติดตั้งโปรแกรม Visual Studio Code สำหรับเขียนโปรแกรมภาษา Python (Windows 10)"
        ],
        "พื้นฐานภาษา Python": [
          "พื้นฐาน Python 1",
          "พื้นฐาน Python 2",
          "พื้นฐาน Python 3",
          "พื้นฐาน Python 4"
        ],
        "Python Package Index (pypi)": [
          "เริ่มต้นใช้งาน Python Package Index เพื่อดึงเอา Library ของนักพัฒนาอื่นมาใช้"
        ],
        "Python เพื่อการจัดการไฟล์ต่างๆ ใน Computer": [
          "การเขียนโปรแกรม Python เพื่อจัดการข้อมูลและไฟล์ต่างๆ ที่อยู่ใน Computer : Files",
          "การเขียนโปรแกรม Python เพื่อจัดการข้อมูลและไฟล์ต่างๆ ที่อยู่ใน Computer : 1",
          "การเขียนโปรแกรม Python เพื่อจัดการข้อมูลและไฟล์ต่างๆ ที่อยู่ใน Computer : 2",
          "การเขียนโปรแกรม Python เพื่อจัดการข้อมูลและไฟล์ต่างๆ ที่อยู่ใน Computer : 3",
          "การเขียนโปรแกรม Python เพื่อจัดการข้อมูลและไฟล์ต่างๆ ที่อยู่ใน Computer : 4",
          "การเขียนโปรแกรม Python เพื่อจัดการข้อมูลและไฟล์ต่างๆ ที่อยู่ใน Computer : 5",
          "Workshop 1 : สร้างโปรแกรม Houskeeping File"
        ],
        "การเขียนโปรแกรม Python เพื่อ Get/Put File จาก Ftp Server": [
          "การเขียนโปรแกรม Python เพื่อ Get/Put File จาก Ftp Server 1",
          "การเขียนโปรแกรม Python เพื่อ Get/Put File จาก Ftp Server 2"
        ],
        "การสร้าง Execute File (.exe) เพื่อนำโปรแกรมไปใช้งานจริง": [
          "การสร้าง Execute File เพื่อนำโปรแกรมไปใช้งานจริง",
          "คำสั่ง สำหรับการสร้าง Execute File เพื่อนำโปรแกรมไปใช้งานจริง"
        ],
        "การตั้งเวลา ให้โปรแกรม Python ทำงาน": [
          "การตั้งเวลาการทำงานให้โปรแกรม Python ที่เราสร้างขึ้น"
        ],
        "การเขียนโปรแกรม Python เพื่อควบคุมอุปกรณ์ส่วนติดต่อกับผู้ใช้ (Mouse , Keyboard)": [
          "การเขียนโปรแกรม Python เพื่อควบคุมอุปกรณ์ส่วนติดต่อกับผู้ใช้(Mouse , Keyboard) 1",
          "การเขียนโปรแกรม Python เพื่อควบคุมอุปกรณ์ส่วนติดต่อกับผู้ใช้(Mouse , Keyboard) 2",
          "การเขียนโปรแกรม Python เพื่อควบคุมอุปกรณ์ส่วนติดต่อกับผู้ใช้(Mouse , Keyboard) 3"
        ],
        "การเขียนโปรแกรม Python เพื่อใช้จัดการข้อมูลบนหน้าเว็บ": [
          "การเขียนโปรแกรม Python เพื่อช่วยในการกรอกข้อมูลลงบนหน้าเว็บด้วย Python Selenium1",
          "การเขียนโปรแกรม Python เพื่อช่วยในการกรอกข้อมูลลงบนหน้าเว็บด้วย Python Selenium2",
          "การเขียนโปรแกรม Python เพื่อช่วยในการกรอกข้อมูลลงบนหน้าเว็บด้วย Python Selenium3",
          "Workshop 2 : อ่านข้อมูลสินค้าจาก Excel File และนำข้อมูลสินค้ามาบันทึกที่หน้าเว็บ",
          "การเขียนโปรแกรม Python เพื่อดึงข้อมูลจากหน้าเว็บด้วย Python Selenium",
          "การเขียนโปรแกรม Python เพื่อดึงข้อมูลจากหน้าเว็บด้วย เทคนิค WebScraping 1",
          "การเขียนโปรแกรม Python เพื่อดึงข้อมูลจากหน้าเว็บด้วย เทคนิค WebScraping 2",
          "Workshop 3 : ดึงราคาหุ้น ด้วยเทคนิค Web Scraping",
          "Workshop 4 : ดึงราคาเหรียญ Crypto ด้วยเทคนิค Web Scraping"
        ],
        "การเขียนโปรแกรมภาษา Python เพื่อใช้แจ้งเตือนผ่านทางโปรแกรม Line": [
          "การเขียนโปรแกรมภาษา Python เพื่อใช้แจ้งเตือนผ่านทางโปรแกรม Line",
          "Workshop 5 : ส่ง Line แจ้งเตือนราคาหุ้น"
        ]
      },
      "requirements": [
        "มีพื้นฐานการเขียนโปรแกรมเช่นภาษา C หรือ Java (คนที่ไม่มีพื้นฐาน ก็สามารถเรียนรู้ได้)",
        "มีพื้นฐานการใช้ระบบปฏิบัติการ Windows หรือ Mac OS",
        "สามารถใช้งาน Web Browser เช่น Google Chrome , FireFox Safari หรือ Internet Explorer ได้"
      ],
      "description": "สวัสดีครับ ขอแนะนำตัวกันก่อนเลย ผมชื่อนายนรภัทร ฉัตรทิน ปัจจุบันทำงาน ตำแหน่งนักทดสอบระบบอัติโนมัติ\n\n\nสำหรับหลักสูตร \"การพัฒนาโปรแกรมกระบวนการทำงานอัตโนมัติด้วยภาษา Python\" ที่จัดทำขึ้นมานี้นั้น แรกเริ่มเดิมทีเลย คือ ต้องการจะสร้างสื่อการเรียนรู้ เพื่อมาแบ่งปันให้กับเพื่อนในองค์กรที่ตนเองสังกัดอยู่ โดยเอาความรู้ที่ตัวเองใช้ภาษา Python ในการแก้ปัญหาในแต่ละวัน ที่ตนเองได้เจอ มาสรุปและสร้างเป็นหัวข้อ แม้สุดท้ายจะยังไม่ได้ถ่ายทอดให้กับคนในองค์กร แต่ก็ได้ลองเอาความรู้เหล่านี้ไปทดสอบ ถ่ายทอดให้ตามมหาวิทยาลัยต่างๆ ไปบ้างแล้ว\nเมื่อเห็นว่าผลการตอบรับจากผู้เรียนที่ได้ไปถ่ายทอดความรู้มา ค่อนข้างดี จึงได้ลองมาสร้างคอร์สนี้ขึ้น เผื่อมีคนที่สนใจ หรือเจองานในรูปแบบที่คล้ายคลึงกัน จะได้ไม่ต้องเสียเวลาไปค้นหาเทคนิคต่างๆ เหมือนที่ตอนตัวผมได้เคยเจอ\nหลักสูตรนี้ ได้ออกแบบมาให้ผู้เรียน ได้ลองเขียนโปรแกรมภาษา Python ไปเป็น Step by Step โดยมีจุดมุ่งหมายคือ การพัฒนาโปรแกรมด้วยภาษา Python ให้สามารถทำงานได้อัตโนมัติ เพื่อลดงานประจำที่ทำ\n\nสำหรับผู้เริ่มต้น ขอแค่คุณมีความตั้งใจ เพียงแค่ดูและพิมพ์ตาม ก็สามารถเข้าใจพื้นฐานของการทำระบบอัตโนมัติได้แล้ว\nโดยจะดียิ่งขึ้นไปอีก หากผู้เรียนได้คิดว่า “จะเอาความรู้ตรงนี้ ไปแก้ปัญหาอื่นที่ตนเองเจออยู่ได้อย่างไร” ซึ่งในตัวอย่าง ตัวผมเอง พยายามสอดแทรก Workshop เข้าไปอยู่เสมอๆ\nสุดท้าย หวังว่าความรู้ที่ได้นำมาถ่ายทอดนี้ จะสร้างประโยชน์ให้กับผู้เรียน\nสามารถนำไปสร้าง Solutions เพื่อแก้ปัญหาของตนเอง ในสถานการณ์ต่างๆได้ต่อไป\nหากมีคำถาม สามารถ Post คำถามไว้ใน Q&A ได้เลยนะครับ\nขอบคุณครับ",
      "target_audience": [
        "พนักงานหน้าที่ Admin ที่ต้องจัดการกับไฟล์บน Server เป็นประจำ",
        "พนักงานหน้าที่ Oper ที่อยากตั้งเวลา สั่งให้โปรแกรมทำงานต่างๆได้ตามเวลาที่ต้องการ",
        "พนักงานที่ต้องกรอกข้อมูลบนหน้าเว็บไซต์เป็นประจำ",
        "ผู้ซื้อของออนไลน์ที่อยากสร้างบอทไว้เพื่อให้ซื้อของได้ไวกว่าคนอื่น",
        "นักศึกษาที่ต้องการศึกษาหัวข้อเกี่ยวกับการทำ Automated Test",
        "ผู้ที่อยากสร้างระบบการแจ้งเตือนผ่านทางไลน์ เมื่อเกิดเหตุการณ์เช่น สินค้าลดราคา ราคาหุ้นเปลี่ยนแปลง สลากกินแบ่งฯ ผลการแข่งขันฟุตบอลฯ",
        "ผู้ที่อยากออกแบบโปรแกรมให้มีการทำงานตามเวลาที่ตั้งไว้"
      ]
    },
    {
      "title": "Manipulação e Análise de Dados com Python e Pandas",
      "url": "https://www.udemy.com/course/tratamento-de-dados-com-python-e-pandas-primeiros-passos/",
      "bio": "Maratone este curso em um final de semana e aprenda tratar e manipular dados com o Pandas usando o Python e o PyCharm",
      "objectives": [
        "Como baixar e instalar o Python, PyCharm e Pandas",
        "Como criar e manipular Dataframes",
        "Tratar Dados com Python e Pandas",
        "Limpar Arquivos"
      ],
      "course_content": {
        "Introdução": [
          "Instalando o Python e o PyCharm"
        ],
        "DataFrame": [
          "Importante!",
          "Criando DataFrame",
          "Dica",
          "Criando DataFrame exemplo 2",
          "Adicionando Colunas ao DataFrame",
          "Limitando Exibição de Linhas e Colunas",
          "Limitando Exibição de Linhas e Colunas aula 2",
          "Deletando Linhas e Colunas",
          "Tratamento de Dados",
          "Indentificando e Removendo Duplicatas",
          "Ordenação de Dados",
          "Mesclando DataFrame"
        ],
        "Merge": [
          "Merge",
          "Dica",
          "Merge INNER JOIN",
          "Merge Join Full",
          "Merge Left Join",
          "Merge Outer",
          "Groupby"
        ],
        "Pivot_Table": [
          "Pivot",
          "Pivot_Table"
        ],
        "Gráficos": [
          "Gráfico Plot",
          "Gráfico Plot Ajustes",
          "Figuras"
        ],
        "Exercício": [
          "Exercício Arquivo Google Sheet",
          "Resposta Exercício Arquivo Google Sheet"
        ],
        "Parabéns você completou o curso!": [
          "Mensagem Final do Curso"
        ]
      },
      "requirements": [
        "Nenhum"
      ],
      "description": "Seja bem-vindo(a) ao curso de Manipulação e Análise de Dados com Python e Pandas, eu sou o Clevison Santos e serei o seu instrutor nesse curso de tratamento de dados, no curso você vai ter o seu primeiro contato com o Python e o Pandas e vai criar suas primeiras manipulações de dados.\n\n\nO Objetivo deste curso é proporcionar a você uma visão introdutória sobre manipulação de dados com o Python e o  Pandas.\n\n\nO que você vai aprender nesse curso?\n\n\nO curso é focado na linguagem de Python com o uso da ferramenta do PyCharm, onde iremos tratar os dados de alguns DataFrame.\n\n\nResumo do curso:\n\n\nIntrodução\n\n\nInstalando o Python e Pycharm\n\n\nDataFrame\n\n\nCriando DataFrame\nCriando DataFrame exemplo 2\nAdicionando Colunas ao DataFrame\nLimitando Exibição de Linhas e Colunas\nLimitando Exibição de Linhas e Colunas aula 2\nDeletando Linhas e Colunas\nTratamento de Dados\nIndentificando e Removendo Duplicatas\nOrdenação de Dados\nMesclando DataFrame\n\n\nMerge\n\n\nMerge\nMerge INNER JOIN\nMerge Join Full\nMerge Left Join\nMerge Outer\nGroupby\n\n\nPivot_Table\n\n\nPivot\nPivot_Table\n\n\nGráficos\n\n\nGráfico Plot\nGráfico Plot Ajustes\nFiguras\n\n\nExercício\n\n\nExercício Arquivo Google Sheet\nResposta Exercício Arquivo Google Sheet\n\n\nParabéns você completou o curso\n\n\nMensagem Final do Curso\n\n\nO curso tem 25 aulas com 7 horas de conteúdos.\n\n\nCom esses conhecimentos você dará o ponta pé inicial para começar sua jornada de analise e manipulação de dados usando o Python e o Pandas.\n\n\nNão perca mais tempo e comece hoje mesmo! De o primeiro passo para aprender a usar a ferramenta que mais cresce no planeta e uma das mais exigidas pelas empresas.\n\n\nBons estudos!\n\n\nClevison Santos.",
      "target_audience": [
        "Todos que querem aprender sobre o Pandas"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/python-integral/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Corso base di programmazione per principianti",
      "url": "https://www.udemy.com/course/corso-base-di-programmazione-per-principianti/",
      "bio": "Impariamo da zero i concetti fondamentali della programmazione",
      "objectives": [
        "In questo corso impareremo tutte le basi dell'informatica necessarie per la certificazione compTIA IT+"
      ],
      "course_content": {
        "Introduzione": [
          "CORSO GENERALE DI PROGRAMMAZIONE: I CONTENUTI DEL CORSO",
          "DOMANDA 1: MA PERCHE' DOBBIAMO PROGRAMMARE UN COMPUTER ?",
          "I LINGUAGGI DI ALTO LIVELLO",
          "I PILASTRI DEI LINGUAGGI DI PROGRAMMAZIONE",
          "LA STRUTTURA LOGICA DI UN PROGRAMMA",
          "I MATTONI DEL CODICE",
          "LE VARIABILI",
          "GLI OPERATORI",
          "I CICLI CONDIZIONALI",
          "LE FUNZIONI",
          "DEBUG ED ECCEZIONI",
          "BONUS: GLI STILI DI PROGRAMMAZIONE",
          "PER FAVORE, LASCIATEMI I VOSTRI CONSIGLI!"
        ]
      },
      "requirements": [
        "Nessun requisito, è un corso dedicato ad assoluti principianti dell'informatica. E' sufficiente sapere che nel mondo esistono delle cose che si chiamano computer, senza sapere ancora a cosa servono :-)"
      ],
      "description": "Se vuoi avvicinarti al mondo della programmazione ma sei disorientato dalla quantità di linguaggi e strumenti diversi che questo mondo ti offre, ecco il punto di partenza da cui muovere i primi passi. In questo corso affronteremo in modo semplice e diretto tutti i concetti fondamentali della programmazione per computer, con alcuni esempi pratici dai principali linguaggi di programmazione, per imparare le basi che ti torneranno utili qualunque strada tu decida di prendere nel mondo dello sviluppo software. I concetti spiegati in questo corso si applicano bene a tutti i tipi di linguaggio di programmazione, sia che tu decida di scrivere programmi per il machine learning, sia che tu decida di scrivere programmi e applicazioni per il web. Questo pacchetto di conoscenze di base saranno un bagaglio che ti aiuterà a fare il primo passo verso lo sviluppo di conoscenze e competenze informatiche più approfondite nel mondo della programmazione. Impareremo insieme che cosa sono i linguaggi di programmazione e perchè li abbiamo creati. Come sono strutturati i programmi e il codice che li compone. Quali sono i costrutti comuni a tutti i linguaggi di programmazione, che ti ritroverai a padroneggiare qualunque linguaggio tu scelga poi di imparare. E' un corso per neofiti che contiene però molti concetti anche avanzati ma spiegati sempre in modo semplice e il più possibile diretto, per facilitare l'apprendimento dello studente e guidarlo nel suo percorso di crescita.",
      "target_audience": [
        "Tutte le persone di ogni età che vogliono imparare le basi dell'informatica, in particolare chi desidera prendere la certificazione compTIA IT+"
      ]
    },
    {
      "title": "JSP (JavaServer Pages)",
      "url": "https://www.udemy.com/course/jsp-javaserver-pages/",
      "bio": "JSP (JavaServer Pages)'ı bu eğitimle keşfedeceksiniz!",
      "objectives": [
        "JSP eğitimi ile kendi web uygulamalarımızı geliştirmeyi öğreneceğiz.",
        "Örnek kodların incelenmesi ve detaylandırılması sırasında bilgilerimizi ve tecrübelerimizi sizlerle paylaştık.",
        "Java bilgilerinin web alanında pratiğe dökülmesini adım adım anlatmaya çalıştık.",
        "Bazı örneklerde zamandan kazanıp ve daha çok örneği inceleyebilmek için önceden yazmış olduğumuz kodlar üzerinden örnek projelerimizi detaylıca inceledik."
      ],
      "course_content": {},
      "requirements": [
        "Temel HTMLyi bilmeniz sizin yararınıza olacaktır."
      ],
      "description": "Kurumsal JavaEE web teknolojilerin temelleri JSP ve Sevlet üzerine kurulmuştur. Bu alanda kariyer yapmak isteyen herkes bu eğitimden yararlanabilir. Bu kursta iş yaşamında yazılım sektöründe işimize yarayacak birçok bilgi ve birikimi örnekler ile adım adım inceledik. Bilgilerini pratiğe dökmekte zorlananlar için bu eğitim çok yardımcı olacaktır. Güzel bir gelecek için kendinize bu eğitimle yaptırım yapabilirsiniz. Kurumsal Java dünyası için doğru yerdesiniz.\nKurumsal JavaEE web teknolojilerin temelleri JSP ve Sevlet üzerine kurulmuştur. Bu alanda kariyer yapmak isteyen herkes bu eğitimden yararlanabilir. Bu kursta iş yaşamında yazılım sektöründe işimize yarayacak birçok bilgi ve birikimi örnekler ile adım adım inceledik. Bilgilerini pratiğe dökmekte zorlananlar için bu eğitim çok yardımcı olacaktır. Güzel bir gelecek için kendinize bu eğitimle yaptırım yapabilirsiniz. Kurumsal Java dünyası için doğru yerdesiniz.\nKurumsal JavaEE web teknolojilerin temelleri JSP ve Sevlet üzerine kurulmuştur. Bu alanda kariyer yapmak isteyen herkes bu eğitimden yararlanabilir. Bu kursta iş yaşamında yazılım sektöründe işimize yarayacak birçok bilgi ve birikimi örnekler ile adım adım inceledik. Bilgilerini pratiğe dökmekte zorlananlar için bu eğitim çok yardımcı olacaktır. Güzel bir gelecek için kendinize bu eğitimle yaptırım yapabilirsiniz. Kurumsal Java dünyası için doğru yerdesiniz.\nKurumsal JavaEE web teknolojilerin temelleri JSP ve Sevlet üzerine kurulmuştur. Bu alanda kariyer yapmak isteyen herkes bu eğitimden yararlanabilir. Bu kursta iş yaşamında yazılım sektöründe işimize yarayacak birçok bilgi ve birikimi örnekler ile adım adım inceledik. Bilgilerini pratiğe dökmekte zorlananlar için bu eğitim çok yardımcı olacaktır. Güzel bir gelecek için kendinize bu eğitimle yaptırım yapabilirsiniz. Kurumsal Java dünyası için doğru yerdesiniz.",
      "target_audience": [
        "Javanın web alanını merak eden herkes bu kursa katılabilir.",
        "JSP uygulamaları için mutlaka bilinmesi gereken bilgileri bu kurs ile öğreneceksiniz!",
        "Java web programlama üzerine kariyer yapmak isteyen herkes bu eğitimden yararlanabilir.",
        "Java imparatorluğunun web teknolojilerinden JSPyi keşfetmek isteyenlerin adresi burasıdır."
      ]
    },
    {
      "title": "C# ile 20 Derste 20 Uygulamalı Proje",
      "url": "https://www.udemy.com/course/csharp-ile-20-derste-20-uygulamali-proje/",
      "bio": "Her Dersinde Farklı Bir Mini Proje Geliştireceğiniz 20 Projeli Uygulamalı Bir Eğitime Hazır Mısınız!",
      "objectives": [
        "C# ile Pratiklerinizi Arttırın",
        "MSSQL, PostgreSQL ve MongoDb ile Farklı Veri Tabanlarını Deneyin",
        "Api Geliştirmeyi ve Apiyi Consume Etmeyi Öğrenin",
        "Her Dersinde Mini Bir Uygulama Geliştireceğiz Birbirinden Bağımsız 20 Farklı Proje Geliştirin"
      ],
      "course_content": {
        "Adonet Müşteri Projesi": [
          "Giriş",
          "Makale - Adonet Nedir",
          "Tabloların Oluşturulması ve İlişkiler",
          "Örnek Veri Setleri",
          "Şehirlerin DatagridView Üzerinde Listesi",
          "Şehir Ekleme İşlemi",
          "Şehir Silme ve Güncelleme İşlemi",
          "Şehir İşlemlerinin Tamamlanması",
          "Müşteri Formu Tasarımı",
          "Müşterileri Join ile Şehirleriyle Beraber Getirme",
          "Makale - Prosedürler",
          "Yeni Müşteri Ekleme İşlemi",
          "Müşteri İşlemlerinin Tamamlanması"
        ],
        "Entity Framework DbFirst Müşteri Projesi": [
          "Giriş",
          "Entity Framework Nedir",
          "DBFirst Nedir, Tabloların Oluşturulması",
          "Modelin Oluşturulması",
          "Kategori Tablosunda Crud İşlemleri",
          "Ürün Formu Kodları",
          "Combobox Aracına Verilerin Listelenmesi ve Filtreleme İşlemleri",
          "Ürünleri Kategorileri İle Listeleme"
        ],
        "Entity Framework Metotları ile İstatistik Projesi": [
          "Tabloların Oluşturulması",
          "Örnek Veri Setleri",
          "Panellerin Renklendirilmesi",
          "Count ve Sum Metotları",
          "Where Sum ve Diğer Metotlar",
          "Entity Framework Sub Query Method",
          "SQL In Kullanımı",
          "Ef SQL Query Metodu",
          "Türkiye'den Yapılan Siparişlerin Ef ile Getirilmesi",
          "Siparişler İçinde Ürün Kategorisine Göre Tutar Getirme",
          "Siparişler İçinde Ürün Kategorisine Göre Tutar Getirme SQL Sorgusu",
          "İlgili Sorgunun Entity Framework Linq ile Yazılması",
          "Count, Order By Desc Metotları",
          "Kola Ürününe Ait Toplam Kazanç Beklentisi",
          "Distinct Metodu"
        ],
        "Code First Film Dizi Kayıt Projesi": [
          "Code First Makalesi",
          "Movie Sınıfı ve Context Sınıfı",
          "Code First Migration İşlemi",
          "Code First ile Sonradan Kategori Tablosu Ekleme",
          "Filmler ve Kategoriler Arasında İlişki",
          "Kategorilerin Listelenmesi",
          "Kategori Ekleme Silme Arama ve Güncelleme İşlemi",
          "Film Listesi ve Formu",
          "Film Kategorilerini Çekme ve Yeni Film Ekleme",
          "Film Silme, Güncelleme ve Arama",
          "Filmleri Kategorileri ile Beraber Listeleme"
        ],
        "Dapper ile Ürün-Kategori Projesi": [
          "Dapper Nedir",
          "Norwthwind Veri Tabanı",
          "Dto Sınıfları",
          "Async Metotlar",
          "Kategorileri Dapper ile Listeleme",
          "Dapper ile Yeni Kategori Ekleme",
          "Kategori Silme ve Güncelleme İşlemleri",
          "Dapper ile İstatistik Hazırlama"
        ],
        "Api Hava Durumu Projesi": [
          "Api Nedir",
          "Projenin Oluşturulması ve Paketlerin Kurulması",
          "Migration işlemi",
          "Apide HttpGet ve HttpPost Metotları",
          "Apide Silme ve Güncelleme İşlemleri",
          "Apide İstatistikleri Getirme"
        ],
        "Api Consume Projesi": [
          "Projenin Oluşturulması ve Menü Tasarımı",
          "Api Consume ile Şehir Listesini Getirme",
          "Api Consume ile Şehir Hava Durumu ve Ülke Bilgisi Çekme",
          "Api Consume ile Yeni Şehir Ekleme",
          "Api consume ile Veri Silme",
          "Api Consume Güncelleme İşlemi",
          "Api consume İşlemlerinin Tamamlanması"
        ],
        "Rapid Api ile Güncel Döviz Kurları Projesi": [
          "Projenin Oluşturulması",
          "Rapid Apiden Döviz Kuru Verileri Çekme",
          "Dolar ve Euro Bilgilerini Listeleme",
          "Exchange İşlemi",
          "Rapid Api Makale Formatı"
        ],
        "MongoDb Sipariş Projesi": [
          "Projenin Oluşturulması",
          "MongoDb Nedir",
          "MongoDb Paketlerin Kurulması",
          "Bağlantı Konfigürasyonları",
          "MongoDb ile Sipariş ekleme işlemi",
          "Order Listesi",
          "Order Silme İşlemi",
          "Güncelleme İşleminin Yazılması",
          "Hataların Çözümü"
        ],
        "PostgreSQL ToDoList Projesi": [
          "PotsgreSQL Nedir",
          "Form Tasarımı",
          "PotsgreSQL'de Tablo ve Veri Tabanı Oluşturma",
          "Verilerin PostgreSQL ile Listelenmesi",
          "TodoList ve Category Tablosunun Sorgu ile Hazırlanması",
          "Kategorileri Datagridde Listeleme",
          "Yeni Kategori Ekleme ve Kategori Silme İşlemi",
          "Kategori İşlemlerinin Tamamlanması",
          "ToDoList Formu Listeleme ve Ekleme İşlemi",
          "Bit İçin Özel Sembol",
          "Sorunun Çözümü",
          "ToDoList Verilerinin Silinmesi ve Güncellenmesi",
          "PostgreSQL_de Join İşlemi",
          "Projenin Tamamlanması"
        ]
      },
      "requirements": [
        "Temel seviyede C# bilgisi yeterli olacaktır."
      ],
      "description": "Merhabalar, her dersinde farklı bir uygulama geliştireceğiniz 20 projeden oluşan çok keyifli bir eğitim hazırladım. Buyurun içeriğini anlatalım.\nProje1: Adonet ile müşteri, şehir, istatistik gibi bilgileri SQL veri tabanı üzerinden çekeceğiniz dinamik bir mini uygulama.\nProje 2: Entity Framework ORM aracının DbFirst yaklaşımını kullanarak bir ürün ve kategori uygulaması geliştireceğiz.\nProje 3: Entity Framework kullanarak kendi oluşturduğumuz tablodaki verileri bolca Linq metot ile istatistiksel olarak göstereceğiniz uygulama geliştireceğiz.\nProje 4: Entity Framework'de bu kez Code First yaklaşımı ile veri tabanı ve tablo oluşturup kendi film ve dizi listenizi oluşturacağınız uygulamayı geliştireceğiz.\nProje 5: Dapper Orm aracını kullanarak Microsoft tarafından sunulan Northwind veri tabanı verileri ile ilgili işlemleri gerçekleştiren bir uygulama hazırlayacağız.\nProje 6: AspNet Core'un Api kısmını kullanarak şehirler ve şehirlere ait hava durumu verilerini hazırladığımız api projesi geliştireceğiz.\nProje 7: Bir önceki projede oluşturduğumuz Api verilerini C# dilinin Console kısmında nasıl kullanacağımızı anlattığımız uygulama geliştirdik.\nProje 8: Rapid Api verilerini kullanarak anlık gerçek Dolar-Euro ve Pound gibi para birimlerine ait kur değerlerini çektik.\nProje 9: MongoDb veri tabanını kullanarak bir sipariş kayıt uygulaması hazırladık.\nProje 10: PostgreSQL veri tabanını kullanarak bir ToDoList uygulaması hazırladık.\nProje 11: SQL üzerinde parametreli ve parametresiz tetikleyiciler kullanarak bir Trigger uygulaması hazırladık.\nProje 12: Json Web Token kullanarak token ürettik ve token ile oturum doğrulama uygulaması hazırladık.\nProje 13: Rapid Api üzerinden hava durumu verilerini çekip gerçek hava durumu bilgileri ile bir hava kartı uygulaması hazırladık.\nProje 14: SQL üzerinde Bire bir, Bire çok ve Çoka çok olmak üzere tüm ilişki türlerini kullandığımız bir uygulama geliştirdik.\nProje 15: İstanbul'daki güncel akaryakıt fiyatlarını çekip mini bir akaryakıt simülasyonu oluşturduk.\nProje 16: Kayıt olan kullanıcıların gerçek mail adreslerine aktivasyon kodu gönderip bu aktivasyon kodu ile oturum doğrulama uygulaması yaptık.\nProje 17: Kaggle sitesi üzerinden Netflix, Pizza siparişleri ve bir markete ait ürün ve sipariş listesine dair veri setlerinin nasıl kullanılacağı üzerine bir uygulama hazırladık.\nProje 18: C# Form'da bir Dashboard oluşturup bu Dashboardda Kaggle üzerinden aldığımız dataset ile Chart ve Widget uygulaması hazırladık.\nProje 19: Bir restorana ait masalarda anlık doluluk ve boşluk durumlarını gösteren uygulama hazırladık.\nProje 20: Final bölümü.",
      "target_audience": [
        "Öğrenmek isteyen herkes."
      ]
    },
    {
      "title": "Máster de programación en C++",
      "url": "https://www.udemy.com/course/master-de-programacion-en-cpp/",
      "bio": "Aprende todos los aspectos de la programación en C++ con 20 horas de contenido",
      "objectives": [
        "Aspectos básicos de C++",
        "Tipos de datos, variables y constantes",
        "Entrada y salida de datos",
        "Trabajar con números",
        "Trabajar con textos",
        "Elementos de control de flujo",
        "Conversión de tipos de datos",
        "Funciones y archivos de cabecera",
        "Clases de almacenamiento y espacios de nombres",
        "Referencias y punteros",
        "Clases y objetos",
        "Métodos",
        "Miembros objeto y static",
        "Arreglos",
        "Arreglos y punteros",
        "Entrada y salida de archivos",
        "Sobrecarga de operadores",
        "Conversión de tipo de clases",
        "Asignación dinámica de memoria",
        "Miembros dinámicos",
        "Herencia entre clases",
        "Conversión de jerarquía de clases",
        "Polimorfismo",
        "Clases abstractas",
        "Herencia múltiple",
        "Manejo de excepciones",
        "Manejo de bits",
        "Plantillas",
        "Contenedores"
      ],
      "course_content": {
        "Introducción": [
          "Introducción a C++",
          "Instalación de CodeBlocks",
          "Primer programa",
          "Comentarios",
          "EJERCICIO: Introducción 1",
          "EJERCICIO: Introducción 2"
        ],
        "Tipos de datos, variables y constantes": [
          "Variables",
          "Tipos de datos",
          "Nombres de variables",
          "Tipo const y volatile",
          "EJERCICIO: Variables y tipos de datos 1",
          "EJERCICIO: Variables y tipos de datos 2",
          "EJERCICIO: Variables y tipos de datos 3"
        ],
        "Introducción a funciones y archivos de cabecera": [
          "Introducción a funciones",
          "Archivos de cabecera",
          "EJERCICIO: Funciones y archivos de cabecera"
        ],
        "Entrada y salida de datos": [
          "Mostrar y solicitar datos al usuario",
          "Secuencias de escape",
          "EJERCICIO: Secuencias de escape",
          "Formato de salida de números enteros",
          "Formato de salida de números decimales",
          "Salida en campos",
          "Formato de salida de strings, carácteres y valores booleanos",
          "Formato de entrada",
          "Entradas sin formato",
          "EJERCICIO: Entradas y salidas 1",
          "EJERCICIO: Entradas y salidas 2"
        ],
        "Trabajando con números": [
          "Introducción a números",
          "Operadores aritméticos binarios",
          "EJERCICIO: Operadores aritméticos",
          "Operadores aritméticos unitarios",
          "Operadores de asignación",
          "Operadores relacionales",
          "Operadores lógicos",
          "Archivo de cabecera cmath",
          "EJERCICIO: cmath 1",
          "EJERCICIO: cmath 2"
        ],
        "Trabajando con strings": [
          "Introducción a strings",
          "Acceder a elementos individuales",
          "Concatenación de strings",
          "Comparaciones entre strings",
          "Manipulación de strings",
          "EJERCICIO: Strings"
        ],
        "Elementos de control de flujo": [
          "Sentencia condicional if-else",
          "EJERCICIO: Sentencia condicional if-else",
          "Sentencia else if",
          "EJERCICIO: Sentencia else if",
          "Expresiones condicionales",
          "Sentencia condicional switch",
          "EJERCICIO: Sentencia condicional switch",
          "Bucle while",
          "EJERCICIO: Bucle while",
          "Bucle do while",
          "Bucle for",
          "EJERCICIO: Bucle for",
          "Interrupción de elementos de control de flujo",
          "EJERCICIO: Interrumpir bucles",
          "Bucles anidados",
          "EJERCICIO: Anidar bucles"
        ],
        "Conversión de tipos de datos": [
          "Tipos de datos avanzados y conversiones habituales",
          "Conversiones implícitas y explícitas",
          "Conversiones en asignaciones y funciones"
        ],
        "Funciones": [
          "Declaración de funciones",
          "Sentencia return",
          "Variables locales y globales",
          "Funciones inline",
          "Sobrecarga de funciones",
          "Funciones recursivas",
          "Archivo de cabecera personalizado",
          "EJERCICIO: Funciones 1",
          "EJERCICIO: Funciones 2"
        ],
        "Clases de almacenamiento y espacios de nombres": [
          "Clases de almacenamiento",
          "Clase de almacenamiento extern",
          "Clase de almacenamiento static",
          "Clases de almacenamiento register y auto",
          "Clases de almacenamiento de funciones",
          "Espacios de nombres (namespaces)"
        ]
      },
      "requirements": [
        "No se requiere ningún conocimiento previo. En este curso aprenderás C++ desde cero."
      ],
      "description": "C++ es un lenguaje de programación orientado a objetos muy potente que evolucionó de la extensión del popular lenguaje  de programación C, y que hoy en día se utiliza para realizar programación estructurada de alto nivel y rendimiento, como sistemas operativos, videojuegos y aplicaciones en la nube. Se trata de una de las herramientas programáticas más versátiles y completas. A pesar de ser un lenguaje con muchos años, su gran potencia lo convierte en uno de los lenguajes de programación más demandados en la actualidad. Por estos motivos, un programador C++ con experiencia es un perfil profesional con mucha demanda en toda clase de proyectos tecnológicos.\n¿Por qué deberías aprender C++?\nGran parte, si no la mayoría del software que se escribe hoy en día sigue estando escrito en C++, y así ha sido durante muchos años.\nC++ no solo es popular, sino que también es un lenguaje muy relevante.\nHay muchísimos títulos de software punteros escritos total o parcialmente en C++. Entre ellos se encuentran los sistemas operativos Windows, Linux y Mac OSX.\nLas principales empresas tecnológicas utilizan C++ para muchos de sus productos y para la investigación y el desarrollo internos. Entre ellas se encuentran Amazon, Apple, Microsoft, PayPal, Google, Facebook, Oracle y muchas más.\n\n\n¿Te ayudará C++ en tu carrera profesional?\nComo es lógico, debido a la gran cantidad de empresas que utilizan C++, la demanda de programadores de C++ es muy elevada.\nLa principal razón por la que los programadores deberían aprender C++ es su potencia. C++ es muy rápido, y es un lenguaje de programación de propósito general que admite tanto la programación orientada a procedimientos como la orientada a objetos, lo que lo hace muy flexible.\nSe puede ampliar fácilmente, y también puede ser portátil.\nC++ puede hacer muchas cosas que otros lenguajes no pueden.\nPor eso casi todos los lenguajes importantes tienen una forma de interactuar con el código escrito en C++.\nDado que C++ ha influido en tantos lenguajes, si conoces C++ es probable que veas elementos de C++ en los nuevos lenguajes que aprendas.\n\n\n¿Es difícil aprender C++?\nToda la potencia y flexibilidad de C++ viene acompañada de su complejidad.\nNo hay duda de que C++ es uno de los lenguajes de programación más complejos que existen.\nPero con el instructor adecuado y la formación adecuada, realmente puedes ponerte al día con C ++ rápidamente, y eso es lo que busca este curso.\nSi tienes conocimientos previos en cualquier otro lenguaje de programación entender los conceptos de C++ te resultará muy sencillo.\n\n\n¿Qué aprenderás en este curso?\nEn este curso se asume que el usuario no tiene ninguna experiencia previa con C++ (o incluso con la programación en general). Por lo que el curso comenzará desde cero, con los conocimientos más básicos, y terminará con conocimientos avanzados, necesarios para crear programas complejos en C++.\nLos temas clave cubiertos incluyen:\nIntroducción a C++\nTipos de datos, variables y constantes\nEntrada y salida de datos\nTrabajar con números\nTrabajar con textos\nElementos de control de flujo\nFunciones y archivos de cabecera\nClases de almacenamiento y espacios de nombres\nReferencias y punteros\nDeclaración de clases\nMétodos\nArreglos\nEntrada y salida de archivos\nSobrecarga de operadores\nAsignación dinámica de memoria\nMiembros dinámicos\nHerencia entre clases\nConversión de datos\nPolimorfismo\nClases abstractas\nManejo de excepciones\nManejo de bits\nPlantillas\nContenedores\n... y muchos más\n\n\n¿Qué ofrece este curso de C++?\nEn este curso se enseñan todos los aspectos de la programación en C++, desde los más básicos hasta los más complejos.\nPara mejorar el aprendizaje, se busca un enfoque práctico, proponiendo diferentes ejercicios al final de cada tema.\nDurante todo el curso contarás con la ayuda del instructor para cualquier duda o pregunta que pueda surgirte.\nEl curso se actualiza periódicamente con propuestas de los alumnos.\nAcceso de por vida.\n\n\n¿Estás listo para comenzar?\nSi estás decidido a comenzar tu aprendizaje en C++ y progresar en tu carrera profesional, ¡este curso es para ti!\n\n\n¿Aun tienes dudas?\nSi aun tienes dudas, recuerda que puedes inscribirte al curso sin ningún compromiso, con un periodo de 30 días para solicitar el reembolso íntegro.",
      "target_audience": [
        "Cualquiera que quiera aprender C++, tanto principiantes como usuarios avanzados que quieran aumentar sus habilidades con este lenguaje.",
        "Cualquiera que desee aumentar sus opciones profesionales aprendiendo uno de los lenguajes de programación más demandados."
      ]
    },
    {
      "title": "자바(Java) 1시간 만에 입문하기",
      "url": "https://www.udemy.com/course/java-1-n/",
      "bio": "입문자를 위한 자바 기초 1시간 컷!",
      "objectives": [
        "자바 프로그램 개발하기 위한 환경 셋팅 방법 배우기",
        "jdk 및 이클립스 설치 및 셋팅하기",
        "프로그램 작동 원리 및 실행 방법 배우기",
        "셋팅된 환경에 코딩과 컴파일 실행하는 결과까지 살펴보기"
      ],
      "course_content": {
        "자바(Java) 1시간 만에 입문하기": [
          "자바(Java) 1시간 만에 입문하기 1강",
          "자바(Java) 1시간 만에 입문하기 2강",
          "자바(Java) 1시간 만에 입문하기 3강",
          "자바(Java) 1시간 만에 입문하기 4강",
          "자바(Java) 1시간 만에 입문하기 5강"
        ]
      },
      "requirements": [
        "프로그래밍 경험이 필요하지 않습니다.",
        "Java를 흥미롭게 배울 의지!"
      ],
      "description": "안녕하세요, 웅진씽크빅 IT 입니다.\n본 강의는 자바(Java) 1시간 만에 입문하기 입니다.\n\n\n누구를 위한 강의인가요?\n\n\n코딩을 처음 배우시는 분\n자바를 배우고 싶은 누구나\n개발자 취업 준비생, 비전공자, 대학생\n무엇을 배우나요?\n\n\n자바 프로그램 개발하기 위한 환경 셋팅 방법 배우기\njdk 및 이클립스 설치 및 셋팅하기\n프로그램 작동 원리 및 실행 방법 배우기\n셋팅된 환경에 코딩과 컴파일 실행하는 결과까지 살펴보기\n\n\n입문자를 위한 자바 기초 1시간 컷! 지금 입문해봅시다~!\n\n\n그럼 강의에서 만나요 :)",
      "target_audience": [
        "코딩을 처음 배우시는 분",
        "자바를 배우고 싶은 누구나",
        "개발자 취업 준비생, 비전공자, 대학생"
      ]
    },
    {
      "title": "Python 3 Flask REST APIs入门与实战",
      "url": "https://www.udemy.com/course/flask-rest-api/",
      "bio": "最容易上手的Python REST API Framework",
      "objectives": [
        "如何用原生的Flask实现REST APIs",
        "如何使用Flask-RESTful",
        "如何使用Flask-SQLAlchemy的数据库服务",
        "如何设计一个REST API服务",
        "如何实现GET，POST，DELETE，PUT等HTTP方法",
        "如何通过unittest测试我们的REST APIs",
        "如何部署REST API Application"
      ],
      "course_content": {
        "介绍": [
          "介绍",
          "课程源码下载",
          "学习本课程需要具备的一些基础",
          "视频播放器设置"
        ],
        "Flask实现一个REST API": [
          "开发环境的准备",
          "本章源代码下载",
          "关于vscode的使用",
          "Flask Hello World",
          "关于flask等requirement的版本问题",
          "HTTP协议简介",
          "GET,POST的Flask实现",
          "GET，POST的测试",
          "PUT，DELETE的Flask实现和测试",
          "本章总结"
        ],
        "Flask-RESTful快捷的创建REST API": [
          "环境准备",
          "本章代码下载",
          "Flask-RESTful实现helloworld",
          "API的设计",
          "用户的创建和查看",
          "用户的更新和删除",
          "获取用户列表",
          "Request Parser问题",
          "Request Parser定制化type检查",
          "本章总结",
          "附相关课程"
        ],
        "Flask-SQLAlchemy的数据库操作": [
          "什么是SQLAlchemy",
          "本章源码下载",
          "第一次代码重构",
          "User表的设计（可选）",
          "Flask-SQLAlchemy的安装和User表的实现",
          "第二次代码重构——FLask CLI的使用",
          "Flask-Migrate的DB初始化",
          "Flask-Migrate的DB初始化MySQL演示",
          "SQLAlchemy之数据的插入",
          "SQLAlchemy之数据的读取",
          "SQLAlchemy之数据的更新和删除",
          "在API Resource中进行database操作(1)",
          "在API Resource中进行database操作(2)"
        ],
        "Flask-RESTful的功能增强": [
          "本章源码",
          "第三次代码重构——config的统一管理",
          "password的hash实现",
          "Token认证-JWT Token介绍",
          "在API获取Token",
          "API使用Token",
          "flask-jwt的使用",
          "第四次代码重构——DB Model的加强"
        ],
        "Flask-RESTful实现复杂关系API": [
          "本章最终的源码下载",
          "SQL中的Relationship以及SQLAlchemy中如何处理关系",
          "Table的设计",
          "FLask Shell测试Table",
          "API Resource的实现",
          "JWT Token的权限细分",
          "作业：给修改密码和查看用户信息的API增加权限管理",
          "第五次代码重构——构造一个Model Base Class"
        ],
        "Flask-RESTful的单元测试": [
          "本章的源码下载",
          "什么是单元测试",
          "测试的config管理",
          "User的相关测试-1",
          "User的相关测试-2",
          "JWT Token的单元测试",
          "Tweet的单元测试",
          "第六次代码重构——Test Base Class"
        ],
        "REST API 服务的部署": [
          "本章源码下载",
          "第七次代码重构——配置中使用环境变量",
          "部署到哪里？怎么部署？",
          "Heroku的安装和准备",
          "Heroku Helloworld",
          "RestDemo APP的部署和测试",
          "第八次代码重构——Tox集成化测试和代码风格检查"
        ]
      },
      "requirements": [
        "学习本课程需要具有Python的基础",
        "最好有SQL、MYSQL基础"
      ],
      "description": "Python Flask是最简单，最容易上手的Python Web开发框架，而Flask-RESTful又是最简单的Python REST API框架。本课程会和大家一起学习Python Flask 如何设计和实现REST API Service。",
      "target_audience": [
        "Python开发人员",
        "后端开发人员",
        "想了解和学习REST API的设计和实现的Python开发人员"
      ]
    },
    {
      "title": "Como Automatizar as suas planilhas do Excel com Python",
      "url": "https://www.udemy.com/course/automatize-suas-planilhas-excel-e-google-sheets-com-python/",
      "bio": "Ganhe tempo e dinheiro colocando suas tarefas chatas e repetitivas no automático com Python",
      "objectives": [
        "Fundamentos de Lógica de Programação com Python",
        "Automação de planilhas Excel",
        "Automação de planilhas Google Sheets",
        "Fundamentos de uma página web: HTML, CSS e XPath",
        "Automação Web e Web Scraping, o seu navegador trabalhando para você",
        "Automação Desktop, seus programas no piloto automático",
        "Fundamentos de Banco de Dados e SQL"
      ],
      "course_content": {
        "[Fundamentos] - Comece por Aqui": [
          "Comece por aqui",
          "Como fazer os exercícios"
        ],
        "[Fundamentos] - Primeiros Passos": [
          "Conceitos Básicos",
          "Nosso Primeiro Código"
        ],
        "[Fundamentos] - Python Básico 01": [
          "Tipos de Dados",
          "Números e Operações Matemáticas",
          "Variáveis",
          "Solicitando Dados ao Usuário",
          "Strings",
          "Formatando Strings",
          "Boolean",
          "Lists",
          "Dictionaries"
        ],
        "[Fundamentos] - Python Básico 02": [
          "Operadores Relacionais",
          "Operadores Lógicos",
          "Controle de Fluxo",
          "Controle de Fluxo - Indentação",
          "Laço de Repetição FOR",
          "Laço de Repetição WHILE",
          "Funções"
        ],
        "[Fundamentos] - Módulos e Pacotes": [
          "Módulos e Pacotes",
          "Importando um Módulo/Pacote",
          "Instalando pacotes com pip"
        ],
        "Configurando Ambiente de Desenvolvimento Local": [
          "Sobre",
          "Instalando Python3 no Windows",
          "Instalando Python3 no OSX (Mac)",
          "Visual Studio Code - Editor de Códigos",
          "Executando Código-Fonte com Terminal"
        ],
        "[Excel] [Pandas] - Primeiros passos": [
          "Pandas"
        ],
        "[Excel] [Pandas] - Manipulando DataFrame": [
          "Criando um DataFrame",
          "Seleção de Coluna",
          "Adição de Coluna",
          "Exclusão de Coluna",
          "Seleção de Linha",
          "Seleção de Múltiplas Linhas",
          "Adição de Linha",
          "Exclusão da Linha",
          "Do Excel para o DataFrame",
          "Do DataFrame para o Excel",
          "Dois DataFrames, Duas Abas na Planilha",
          "Manipulando dados de uma planilha"
        ],
        "[Excel] [Pandas] - Filtrando DataFrame": [
          "Filtro simples em um DataFrame",
          "Filtros Avançados",
          "Filtro com SQL"
        ],
        "[Excel] [Pandas] - Buscando Dados de uma API": [
          "Buscando Dados de uma API"
        ]
      },
      "requirements": [
        "Ter um computador com Windows, OSX ou Linux",
        "Ter vontade de aprender"
      ],
      "description": "Treinamento prático e objetivo de Python para você aprender a programar da maneira mais simples, rápida e útil possível.\n\n\nTreinamento desenhado para você que quer aumentar sua produtividade diária programando com Python, mesmo que você nunca tenha programado antes.\n\n\nPARA QUEM É ESTE TREINAMENTO?\n- Iniciante que nunca programou em nenhuma linguagem.\n- Programador, que já programa em outra linguagem.\n- Programador, que já sabe o básico de Python.\n\n\nO QUE VOCÊ VAI APRENDER\n- Fundamentos de Lógica de Programação com Python.\n- Automação de planilhas do Excel.\n- Automação de planilhas do Google Sheets.\n- Fundamentos de uma página web. HTML, CSS e XPath.\n- Automação Web e Web Scraping. O seu navegador trabalhando para você.\n- Automação Desktop. Seus programas no piloto automático.\n- Fundamentos de Banco de Dados e SQL.\n\n\nVeja abaixo o Sumário Resumido para maiores detalhes\n\n\nSUMÁRIO RESUMIDO\n\n\nPrimeiros Passos\n- Conceitos Básicos\n- Nosso Primeiro Código\n\n\nPython Básico 01\n- Tipos de Dados\n- Números e Operações Matemáticas\n- Variáveis\n- Solicitando Dados ao Usuário\n- Strings\n- Formatando Strings\n- Boolean\n- Lists\n- Dictionaries\n\n\nPython Básico 02\n- Operadores Relacionais\n- Operadores Lógicos\n- Controle de Fluxo\n- Controle de Fluxo - Indentação\n- Laço de Repetição FOR\n- Laço de Repetição WHILE\n- Funções\n\n\nExcel\n- Manipulando Linhas\n- Manipulando Colunas\n- Manipulando Células\n- Projeto Lista de Compras da Pizzaria\n- Projeto Vendas Compiladas do Ano\n\n\nGoogle Sheets\n- Manipulando Linhas\n- Manipulando Colunas\n- Manipulando Células\n\n\nHTML e CSS\n- HTML - Fundamentos\n- HTML - Elementos\n- CSS - Fundamentos\n- CSS - Propriedades\n\n\nAutomação Web e Web Scraping (Raspagem de Dados)\n- Introdução\n- Selenium - Scraping de páginas interativas\n- Projeto Cotação do dólar no Google\n- Projeto Busca de produtos no Mercado Livre\n- Projeto Busca de Estados brasileiros no IBGE\n- Projeto Buscando todos os \"instagrams\" de Hamburgueria no Google\n- Projeto Buscando todos os iPhones no Mercado Livre\n- Projeto Buscando carros na OLX\n- Projeto Buscando imagens no Google\n\n\nAutomação Desktop\n- Introdução\n- Controlando o mouse\n- Controlando o teclado\n- Caixas de Mensagem\n- Screenshot e Reconhecimento de imagens\n- Projeto Preenchimento automático de formulários\n\n\nBanco de Dados\n- Estrutura de um Banco de Dados\n- Modelo de Dados\n- SQLite\n- SQL\n- SELECT",
      "target_audience": [
        "Iniciante que nunca programou em nenhuma linguagem.",
        "Programador, que já programa em outra linguagem.",
        "Programador, que já sabe o básico de Python."
      ]
    },
    {
      "title": "C# ve DevExpress ile Gelişmiş Ön Muhasebe Yazılımı (Bölüm-3)",
      "url": "https://www.udemy.com/course/c-ve-devexpress-ile-gelismis-on-muhasebe-yazlm-3/",
      "bio": "C# Tabanında Entity Framework ORM Aracını ve Devexpress Componentlerini Kullanarak Gelişmiş Bir Uygulama Geliştirelim.",
      "objectives": [
        "C# Winform uygulamalarına hakim olacak ve kendi masaüstü uygulamalarınızı yapabilecek",
        "Devexpress araçlarını kullanarak görsel ve kullanışlı yazılımlar yapabilecek",
        "Entity Framework teknolojisine hakim olacak",
        "LinQ ile kompleks sorgular yazabilecek"
      ],
      "course_content": {
        "Front Office Katmanının Tasarımı ve Kodlanması": [
          "Ön Ofis Formunun Oluşturulması",
          "Ön Ofis Formunun Kodlama İşlemlerinin Yapılması",
          "Ön Ofis Formunda Stok Hareketlerini Ekleme İşlemlerinin Yapılması",
          "Plasiyer ,Cari Seçimi ve Eksik Olan İşlemlerin Tamamlanması",
          "Toplamların Hesaplanması ve Para Üstü Bilgilerinin Gösterilmesi",
          "Hızlı Satış Tablolarının İlişkisel Tablo Mantığı İle Oluşturulması",
          "Hızlı Satış Formunun Tasarım ve Kodlamasının Yapılması",
          "Hızlı Satış Formuna Ürün Ekleme İşlemlerinin Yapılması",
          "Ön Ofis Formunda Hızlı Satışlar Yapılandırmasının Yapılması",
          "Ön Ofis Formunda Kasa Hareketleri Yapılandırmasının Yapılması",
          "Ön Ofis Formunda Kasa Hareketleri Yapılandırmasının Yapılması 2",
          "Ön Ofis Formunda Kasa Hareketleri Yapılandırmasının Yapılması 3",
          "Rapor Yazdırma Ayarlarının Yapılandırılması",
          "Fiş Kaydetme İşleminde Düzeltmelerin Yapılması",
          "Rapor Yazdırma Yazıcı Seçimi",
          "Minimum Stok Miktarının Kontrol Edilmesi İşleminin Yapılması",
          "Döviz Birimlerini Kullanarak Alışveriş Yapma Özelliğinin Eklenmesi",
          "Satış Bekletme Özelliği İçin Gerekli Sınıfın Oluşturulması",
          "Satış Bekletme Özelliğini Ön Ofis Formuna Ekleme",
          "Bekletilen Satışı Geri Yükleme",
          "Satış Bekletme Özelliğinde Hataların Giderilmesi",
          "Satış Geri Yükleme Özelliğinde Hataların Giderilmesi",
          "Otomatik Fiş Kodu Oluşturma İşlemi İçin Yapılandırmanın Yapılması",
          "Açık Hesaba Borç Aktarım İşlemi",
          "Cari Risk Limiti Hesaplamasının Yapılması",
          "Ödemelerle İlgili Yaptığımız Hatanın Düzeltilmesi"
        ],
        "Personel İşlemleri": [
          "Personel Hareket Tablosunun Oluşturulması",
          "Personel Seçim Ekranının Tasarlanması",
          "Personel Hareket Gridinin Tasarımının Yapılması",
          "Fiş İşlem Formunda Personel Harekete Veri Ekleme İşlemi",
          "MonthEdit ve ComboEdit Kontrollerine Ay ve Yıl Bilgilerinin Atanması",
          "Personelin Aylık Satışının Listelenmesi İçin Gerekli Sorgunun Yazılması",
          "Hakediş Fişi Yapılandırmasının Yapılması",
          "Hakediş Fişi Yapılandırmasında Ödemenin Yapılması",
          "Personel İşlemleri Sırasında Farkedilen Hataların Düzeltilmesi"
        ],
        "Genel Düzenlemeler": [
          "Fiş İşlem Formunda Açık Hesap Yapılandırmasının Yapılması",
          "Benzersiz Kod Kontrolünü Validator Classlarına Ekleme",
          "Fluent Validation İçinde Kendi Uzantılarımızı Yazıyoruz"
        ],
        "Kullanıcı Ekleme ve Rol Verme İşlemleri": [
          "Kullanıcı ve Kullanıcı Rol Tablolarının Oluşturulması",
          "Kullanıcılar Formunun Tasarımının Yapılması",
          "Kullanıcı İşlem Formunun Tasarımının Yapılması",
          "Kullanıcı Formlarının Yapılandırılması ve Kullanıcı Rollerinin Yüklenmesi",
          "Kullanıcı İşlem Formunda Yetkilerin Kaydedilmesi",
          "Kullanici İşlem Formunda Eksikliklerin Tamamlanması",
          "Kullanıcı İşlem Formunda Düzenleme İşleminde Parola Probleminin Çözümü",
          "Kullanıcı Giriş Formunun Tasarımı",
          "Parolamı Unuttum Formunun Tasarım ve Kodlaması",
          "BackOffice ve FrontOffice Formuna Kullanıcı Girişini Ekleme",
          "Rollerin Formlar Üzerinde Uygulanması İçin Gerekli Aracın Yazılması",
          "AnaMenü Üzerinde Rollerin Yüklenmesi İçin Gerekli Metodun Yazılması",
          "Rolleri Kullanıcı Adına Göre Yükleme İşlemi",
          "Varsayılan Bir Kullanıcının Sisteme Otomatik Tanımlanması"
        ],
        "İlişkisel Tablo Dönüşüm İşlemleri": [
          "Kasa Hareket Tablosunun İlişkisel Tabloya Dönüşüm İşlemi",
          "Aldığımız Hatanın Çözümü ve Ayarlar Formunun Düzenlenmesi",
          "Aldığımız Diğer Hatalara Çözüm Önerileri",
          "Stok Hareket Tablosunun İlişkisel Tablo Tasarımına Dönüştürülmesi",
          "Fiş İşlem Formunda İlişkilerin Görüntülenmesi",
          "Stok Hareket ve Kasa Hareket Formlarında Dönüşümlerin Yapılması",
          "FrontOffice Formunda Değişikliklerin Düzenlenmesi",
          "Yapılandırma İle İlgili Bilgilendirme"
        ],
        "Sizden Gelen Bildirimler ve İstekler": [
          "Dinamik Veritabanı Bağlantı Sihirbazının Oluşturulması",
          "IsUnique Metodumuzda Alınan Hatanın Çözümü",
          "FrontOffice Tarafında Birinci Satıştan Sonra Alınan Hatanın Çözümü",
          "İşlem Formlarında Kopyala İşleminde Çıkan Hatanın Düzeltilmesi",
          "Otomatik Kod Oluşturma Tasarımının Yapılması",
          "Raporlarda Parametre Kullanımı",
          "FrontOffice Formunun Düzenlenmiş Son Hali",
          "BackOffice Formunda Fiş İşlem Formunun Düzeltilmiş Hali",
          "Cari Hesaplama Bilgisinde Eksik Kısmın Tamamlanması"
        ],
        "Kurulum İşlemleri": [
          "Devexpress Türkçe Dil Desteğini Ekleme",
          "Kurulum Öncesi Dosyaları Uygulama Klasörüne Taşıma",
          "Projemize Gerekli İzinlerin Verilmesi",
          "Kurulum Projesinin Oluşturulması",
          "Kurulum Sonrası Kontrollerin Yapılması"
        ]
      },
      "requirements": [
        "Temel düzeyde C# bilgisi",
        "Visual Studio kurulu bir bilgisayarınızın olması",
        "Azimli ve öğrenmeye açık olmak"
      ],
      "description": "Projemiz 4 bölümden oluşmaktadır.\nC# ve Devexpressin gücünü birleştirerek görsel anlamda güçlü bir ön muhasebe programı yazacağız. Bu kursta C# dilinin inceliklerine olabildiğince değinmeye çalıştım. Az kod çok iş mantığı ile yazdığımız yazılım sizlere C# dili ile neler yapabileceğiniz konusunda bir fikir verecektir. Piyasada 1500-2000 TL fiyatlara satılan ön muhasebe programlarının nasıl yapıldığını öğrenip belki de öğrendiklerinizin üstüne bir şeyler katıp çok daha gelişmiş yazılımlar geliştirebileceksiniz. Bu konuda sizden tek isteğim azim ve takıldığınız her yerde soru sormak olacak. Sizin için özenle hazırladığım kursumun sizlere faydalı olmasını diliyorum.\nNot: Projenin kaynak kodlarının paylaşımı yoktur. Projeyi en baştan en sona videolar üzerinde yapıyoruz. Yani videoları izleyerek yapılan işin mantığını görüp uygulamayı aynı şekilde yapabilirsiniz. Kursu sadece kaynak kodları için satın almak isteyen arkadaşlar lütfen almasın. Burada temel amacım eğitimdir.",
      "target_audience": [
        "Kursun 1. ve 2. bölümünü bitirenler",
        "C# Programlama dilini temel düzeyde bilenler",
        "Masaüstü yazılım teknolojileri üzerinde yoğunlaşmak isteyenler",
        "LinQ sorgu dilinde gelişmiş sorguların nasıl yazılacağını öğrenmek isteyenler",
        "Devexpress araçları hakkında bilgi sahibi olmak isteyenler",
        "Entity Framework teknolojisini öğrenmek istiyorum diyenler"
      ]
    },
    {
      "title": "C# Temel Bilgiler ve Uygulamalı Eğitim Kursu",
      "url": "https://www.udemy.com/course/c-temel-bilgiler-ve-uygulamal-egitim-kursu/",
      "bio": "C# ile Başlangıç ve İleri Seviyede Windows Form ve Veritabanı Uygulamaları",
      "objectives": [
        "C# programlama dilinin temel kavramları.",
        "Veri tipleri, değişkenler, döngüler ve kontrol yapıları.",
        "Fonksiyonlar, sınıflar ve nesnelerin kullanımı.",
        "Windows Form uygulamaları oluşturma, arayüz tasarımı ve etkileşimli elementler.",
        "Veritabanı erişimi ve CRUD işlemleri (Create, Read, Update, Delete).",
        "SQL veritabanı sorguları, tablo oluşturmWindows Form uygulamalarında veritabanı bağlantısı ve verilerin görüntülenmesi.a ve veri işleme.",
        "Exception handling ve hata yönetimi.",
        "Dosya işlemleri ve serialization.",
        "Proje uygulamaları ve uygulamalı örnekler."
      ],
      "course_content": {
        "Giriş ve Temel Ayarlar": [
          "C# İndirilecekler",
          "C# Temel Ayarları"
        ],
        "Temel C# Eğitimi": [
          "Veri Tipleri ve Değişkenler",
          "Matematiksel İşlemler",
          "Operatörler"
        ],
        "Koşullar": [
          "İf Koşulları",
          "İf Koşulları Örnek Uygulama",
          "C# Koşullar ve Switch-Case Kullanımı"
        ],
        "Döngüler": [
          "Diziler",
          "For ve Foreach Döngüleri",
          "Döngüler Alıştırma",
          "While Döngüleri - Örnekle"
        ],
        "Metodlar - Fonksiyonlar": [
          "String Methodlar ()",
          "Methodlara Giriş",
          "Varsayılan Metod Girişleri",
          "Basit Yöntemler İle Metodlar",
          "Derin Örnekler ile Metodlar",
          "Referans Veriler",
          "OverLoading Params Mantığı"
        ],
        "Nesne Yönelimli Programlama (OOP)": [
          "Class Mantığını Öğrenelim",
          "Property Mantığı ve Uygulaması",
          "İnterFace Nedir - Nasıl Kullanılır",
          "İnterface Felsefesi",
          "İnterface ile Uygulama Örneği",
          "Kalıtım Nedir?",
          "Override Mantığı",
          "Abstract"
        ],
        "İleri C# Konuları": [
          "Kapsayıcılar",
          "İnternal",
          "Public",
          "Yapıcı_Metodlar",
          "Yapıcı Metodlar İleri Konular",
          "Static Metodlar",
          "Referans Değer Tipleri",
          "ArrayList",
          "Güvenli Yazılım - Bu Bölümü Atlamayın",
          "Algoritma Tasarımı",
          "Sözlükler",
          "Sözlükler ile Alıştırma",
          "Hata Yakalama"
        ],
        "#Uygulama - Veritabanı ile Ürün Listesi": [
          "VeriTabanını Oluşturma",
          "Bağlantı Sınıflarını Kuralım",
          "Kademeli Bağlantıları Veri Çekme",
          "Ürün Ekleme Tasarımı",
          "Ürün Ekleme Kodlarının Yazılması",
          "Güncelleme Kodlarının Yazılması",
          "Ürün Güncelleme",
          "Sil Butonu Ekleme"
        ],
        "#Uygulama - 3 Sayı Uygulaması": [
          "Tasarım",
          "Kodların Yazılması ve Final"
        ],
        "#Uygulama - Ortalama Hesaplama": [
          "Tasarım",
          "Kodların Yazılması",
          "Geçme Kuralı Ekleme"
        ]
      },
      "requirements": [
        "Bilgisayarınızda en az Windows işletim sistemi gerekmektedir.",
        "Visual Studio gibi bir geliştirme ortamının kurulu olması yararlı olabilir, ancak gerekli değildir."
      ],
      "description": "C# Temel Bilgiler ve Uygulamalı Eğitim Kursu, Bilişim Teknolojileri ve Yazılım Öğretmeni Tuncay EROL tarafından verilen bir eğitimdir. Bu eğitim, başlangıç seviyesi veya ileri seviyede C# programlama dillerine hakim olmak isteyen tüm kullanıcılar için tasarlandı. Kurs, Windows Form ve Veritabanı Uygulamalarına odaklanacak şekilde tasarlandı ve uygulamalı örnekler ve proje tabanlı eğitim sunmaktadır.\nC#, Microsoft tarafından geliştirilen ve .NET platformunda çalışan bir programlama dildir. C#, kolay kullanımı ve güçlü özellikleri ile masaüstü ve web uygulamaları geliştirmek için ideal bir dil olarak kabul edilir. Bu eğitim, C#'ı en iyi şekilde öğrenmenizi ve uygulamalı olarak uygulamanızı amaçlar.\nEğitim sürecinde, başlangıç seviyesi programlama bilgilerine sahipseniz dahi, C#'ı en iyi şekilde öğrenecek ve uygulamalı olarak uygulayabileceksiniz. Ayrıca, Windows Form uygulamaları oluşturma ve arayüz tasarımı yapma becerilerinizi de geliştireceksiniz. Veritabanı erişimi ve SQL sorguları hakkında da bilgi sahibi olacaksınız.\nBu eğitim, diğer programlama dillerinden geçiş yapmak isteyen ve C#'ı öğrenmek isteyen kişiler için de idealdir. Eğitim sürecinde, uygulamalı örnekler ve proje tabanlı eğitim ile konuları en iyi şekilde anlayacaksınız.\nEğitim sonunda, C# ile masaüstü ve web uygulamaları geliştirebilecek, veritabanı erişimi ve SQL sorgularını uygulayabilecek ve Windows Form uygulamaları oluşturma ve arayüz tasarımı becerileriniz de artacaktır. Eğitim, başlangıç seviyesi veya ileri seviyede olsanız dahi, size C# programlama dillerine hakim olmanızı ve uygulamalı olarak öğrenmenizi kolaylaştı",
      "target_audience": [
        "Bilgisayar programlama dilleri ile ilgisi olan ve C# öğrenmek isteyen başlangıç seviyesi kullanıcılar.",
        "Web ve masaüstü uygulamaları geliştirmek isteyen veya mevcut uygulamalarını geliştirmek isteyen profesyonel geliştiriciler.",
        "Veritabanı erişimi ve SQL sorguları hakkında bilgi sahibi olmak isteyen kişiler.",
        "Windows Form uygulamaları oluşturmak ve arayüz tasarımı yapmak isteyen kişiler.",
        "Uygulamalı örnekler ve proje tabanlı eğitim almak isteyen kişiler.",
        "Diğer programlama dillerinden geçiş yapmak isteyen ve C#'ı öğrenmek isteyen kişiler."
      ]
    },
    {
      "title": "Proceso CRUD (C Sharp y MySQL)",
      "url": "https://www.udemy.com/course/proceso-crud-c-sharp-y-mysql/",
      "bio": "C Sharp y MySQL",
      "objectives": [
        "Conocer el manejo y desarrollo de uno de los lenguaje de programación más usado en el mercado laboral",
        "Se realizará 100% práctico el aprendizaje de este curso.",
        "ejemplos claros al momento de nuestro proceso de desarrollo.",
        "Será nuestra formación base en el mundo del lenguaje de programación"
      ],
      "course_content": {
        "Introducción": [
          "00 - Intro C Sharp y MySQL Server",
          "01 - Creación de Base de datos o Esquema",
          "02 - Creación de Solución y Proyecto",
          "03 - Connector .NET",
          "04 - Crear la Conexión hacia MySQL",
          "05 - Crear Propiedades Artículos",
          "06 - Diseño de Controles y Formulario",
          "07 - Datos de Listado Artículos",
          "08 - Presentacion Listado de Artículos",
          "09 - Métodos de procesos",
          "10 - Insertar Registro",
          "11 - Insertar Registro - parte 2",
          "12 - Actualizar Registro",
          "13 - Eliminar Registro",
          "14 - Eliminar Registro - segunda alternativa",
          "15 - Diseño de Reporte",
          "16 - Ejecución de Reporte",
          "17 - Personalizar Formulario",
          "18 - Diseño de Paneles de Medidas y Categorías",
          "19 - Ejecución de los paneles Medidas y Categorías - Final del curso"
        ]
      },
      "requirements": [
        "Un equipo de cómputo con Sistema operativo Windows 10 en adelante y Conocimiento de C# y MySQL Nivel Básico y Sugerible Intermedio."
      ],
      "description": "En este curso vamos a lograr a realizar el paso a paso la construcción de un Proceso CRUD entre C Sharp y MySQL, utilizaremos en todo este proceso las herramientas informáticas de la actualidad como el lenguaje de programación de C# y el motor de base de datos MySQL y de apoyo utilizaremos el Ide de Microsoft Visual Studio Community 2022.\nEste curso pretende introducirte en el mundo de la programación, empleando un lenguaje de programación de mayor demanda en el mundo laboral.\nEste es un curso de programación C# y framework .NET a nivel intermedio. Un excelente curso a seguir una vez que conoces las bases de programación en C# Nivel Básico.\nAprenderás a interactuar datos con el usuario ya con un entorno gráfico apoyándote con los Formularios y Reportes que se diseñen en el IDE de Visual Studio.\nAdemás, aprender C# te ayudará a conocer las bases de otros lenguajes cuya sintaxis es muy parecida, como Java y C++.\nPara que puedas practicar, tienes ejercicios propuestos al final de cada video. Las soluciones a esos ejercicios las tienes compartidas al final del curso, para que puedas comparar tus intentos con la \"solución oficial\", y asegurarte de que estás aprendiendo.\n\n\nLo que aprenderás\nEn este curso aprenderás los manejos de los controles más usado en el entorno gráfico y sus funcionalidades usando C#.\nAprenderás sobre un escenario de enseñanza 100% práctico...\nTendrás ejemplos guiados.\n¿Hay requisitos para realizar el curso?\nSe necesita experiencia previa en lenguaje de programación como mínimo el Nivel Básico.\nManejo como mínimo el nivel básico en MySQL\nNecesitarás un equipo cómputo con Windows para ejecutar Visual Studio.\n¿Para quién es este curso?\nEstudiantes o aficionados, con ganas de introducirse en el mundo de la programación de computadoras y en el lenguaje C#\nInstructores\nVíctor Ramos\nIT Sistemas\nInstructor | Programador | Diseñador\nHola que tal amigos, buen día.\nMi nombre es Víctor Ramos, soy de Perú.\nme dedico a:\n- Asistencia Técnica de Cómputo y Desarrollo de Aplicaciones para Pequeñas y Medianas Empresas.\n- Entrenador en programación de Visual FoxPro 9, VB NET, C#, MySQL Server, Maria DB, PostgreSQL, Oracle database y Microsoft SQL Server.",
      "target_audience": [
        "A todos los que desean aprender a programar en el lenguaje de programación más usado en el mercado laboral"
      ]
    },
    {
      "title": "Visual Studio 2019 Avançado",
      "url": "https://www.udemy.com/course/visual-studio-2019-avancado/",
      "bio": "Visual Basic com Mysql",
      "objectives": [
        "Usar recursos avançados do visual studio para desenvolvimento de sistemas com visual basic"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Abrindo o Projeto",
          "Rodando o projeto",
          "Chamadas por eventos",
          "Componente timer",
          "Evento de chamada do timer",
          "Formulário de fornecedores",
          "Programando Fornecedores",
          "Tabela de fornecedores",
          "Tela de serviços",
          "Tabela de serviços",
          "Salvando os serviços",
          "Formatando dataGrid com moeda",
          "Programando formulário de produtos",
          "Chave estrangeira para relacionamento",
          "Campo LongBlob para imagens",
          "Objeto do tipo imagem",
          "Carregando imagem na pickture",
          "Programando inserção da imagem",
          "Trazendo os fornecedores",
          "Convertendo imagem em byte",
          "Parametros no insert",
          "Cadastrando imagem no banco",
          "Salvando imagem a partir da pasta",
          "Recuperando dados no dataGrid",
          "Trazendo imagem do dataGrid",
          "Programando edição dos produtos",
          "Editando os produtos",
          "Validaçao para editar imagem",
          "Imagens para os produtos",
          "Personalizando imagens",
          "Imagem padronizada para produtos",
          "Utilizando Inner Join",
          "Unindo dados de duas tabelas",
          "Replace para textBox",
          "Salvando valor decimal",
          "Buscando produtos por nome",
          "Finalizando formulário produtos",
          "Campo para data de cadastro",
          "Formatando data para cadastro",
          "Recuperando data no gridView",
          "Instalando Report Viewer",
          "Depedências para o Report Viewer",
          "Criando primeiro relatório",
          "Adicionando campos ao relatório",
          "Fonte de dados para relatório",
          "Incompatibilidade de conectores",
          "Driver Mysql Data",
          "Tabela para o Relatório",
          "Formulário para abrir relatório",
          "Gerando relatório de Produtos",
          "Table Adapter com mais tabelas",
          "Mostrando imagens no relatório",
          "Inserindo gráfico no relatório",
          "Eixos do gráfico",
          "Margens e impressão do relatório",
          "Finalizando Relatório de produtos",
          "Relatório dos clientes",
          "Parametros consulta relatório",
          "Filtrando relatório por datas",
          "DateTimePicker para filtros",
          "Parametros no relatório",
          "Recuperando parametro no relatório",
          "Gráfico de linha",
          "Gerando PDF dos relatórios"
        ]
      },
      "requirements": [
        "Sim, é aconselhável que os alunos acompanhem antes os módulos de front end e back end"
      ],
      "description": "O curso de Visual Studio 2019 Avançado possui 60 vídeo aulas, ele pode ser acompanhado também com as versões 2015 ou 2017, neste curso o aluno vai aprender a trabalhar com a plataforma usando recursos avançados como upload de imagens, componentes como timers, relacionamento entre tabelas, relatórios e muito mais, é aconselhável o aluno acompanhar os dois módulos anteriores de front end e back end caso não tenha um conhecimento na plataforma e na linguagem VB, adquira já o curso e se torne um programador completo.",
      "target_audience": [
        "Todo e qualquer aluno que tenha interesse em desenvolver sistemas e programar"
      ]
    },
    {
      "title": "C# : OTOMASYON VE ENDÜSTRİ DÜNYASINA YÖNELİK",
      "url": "https://www.udemy.com/course/c-otomasyon-ve-endustri-dunyasina-yonelik/",
      "bio": "Profesyoneller gibi Otomasyon öğrenin! Temel konulardan başlayın ve otomasyonu öğrenmek için gerekli temelleri atın!",
      "objectives": [
        "C# programlama dilini temel-orta seviyede öğrenecekler",
        "C# dilinin , endüstride kullanılan mantığı üzerinde durulacak ve bu yönde ilerleme kaydedilecek",
        "C# dilinin otomasyon,plc,scada ve hmı odaklı olacak şekilde temel kavramları analiz edilecek"
      ],
      "course_content": {
        "TEMEL VERİ TÜRLERİ VE DEĞİŞKEN": [
          "VERİ TÜRLERİ VE DEĞİŞKENLERİ ANLAMAK ?",
          "VERİLERİ RAM-STACK BELLEĞE KAYDETMEK",
          "DEĞER VERİ TİPLERİ ÖRNEKLERİ",
          "REFERANS VERİ TİPLERİ"
        ],
        "VERİLER TÜRLERİNDE DÖNÜŞÜM": [
          "BİLİNÇSİZ TÜR DÖNÜŞÜMÜ",
          "BİLİNÇLİ TÜR DÖNÜŞÜMÜ",
          "REFERANS VE DEĞER TÜRLERİ ARASINDA DÖNÜŞÜM"
        ],
        "OPERATÖRLER": [
          "OPERATÖRLERLERİ KAVRAMAK"
        ],
        "AKIŞ KONTROL MEKANİZMALARI": [
          "KOŞUL İFADELERİ-İF DEYİMİ_1",
          "KOŞUL İFADELERİ-İF DEYİMİ_2",
          "FOR DÖNGÜSÜ-PORTAKALLARI SAYALIM"
        ],
        "DİZİLER-ARRAYS": [
          "DİZİ-ARRAY",
          "ARRAYLİST"
        ],
        "METOTLAR": [
          "METOTLAR"
        ]
      },
      "requirements": [
        "Öğrenme istek ve azmi ; yüksek konsantrasyon",
        "Temel seviyede bilgisayar kullanım yetkinliği"
      ],
      "description": "Merhaba Arkadaşlar,\n\n\nBu kurs , Endüstri,Otomasyon ve Yazılım metaforlarını kavrayış yolculuğumuzun AŞAMA -1- , 8. bölümü oluşturmaktadır.\n\n\n## AŞAMA -1-    :  12 KURS\n\n\n# PLC TIA PORTAL (1) : SIFIRDAN İLERİ SEVİYE OTOMASYON ( ENDÜSTRİ VE OTOMASYONA GİRİŞ)\n# PLC TIA PORTAL (2) : SIFIRDAN İLERİ SEVİYE OTOMASYON (BASİC ELEMENTS)\n# PLC TIA PORTAL (3) : SIFIRDAN İLERİ SEVİYE OTOMASYON (EXTENDED ELEMENTS)\n# PLC TIA PORTAL (3++) : SIFIRDAN İLERİ SEVİYE OTOMASYON (EXTENDED ELEMENTS ++)\n# C# HMI PLC : PID & HABERLEŞMENİN TEMELLERİ\n# SQL & OTOMASYON : OPC ENDÜSTRİYEL İLETİŞİM ARAYÜZÜ\n# C# HMI İLE MODBUS TCP/IP DATA AKIŞ KONTROL\n& C# : OTOMASYON VE ENDÜSTRİ DÜNYASINA YÖNELİK\n# C# HMI & ARDUNİO İLE MODBUS RTU DATA AKIŞ KONTROL\n# CODESYS & PLC İLE OTOMASYONUN MERKEZİNE YOLCULUK\n# PROFIBUS DP & FABRİKA OTOMASYON HABERLEŞMESİ\n# PROFINET & FABRİKA OTOMASYON HABERLEŞMESİ\n\n\nNihai hedefimiz olan Endüstriyi elimizin avucunu görür gibi yönetecek engin bakışa ulaşabilmek için, Endüstri ve Otomasyonun köklerine kök salacağız.\n\n\nBu bölümde :\n- VERİ TÜRLERİ VE DEĞİŞKENLERİ ANLAMAK ?\n- VERİLERİ RAM-STACK BELLEĞE KAYDETMEK\n- DEĞER VERİ TİPLERİ ÖRNEKLERİ\n- REFERANS VERİ TİPLERİ\n- BİLİNÇSİZ TÜR DÖNÜŞÜMÜ\n- BİLİNÇLİ  TÜR DÖNÜŞÜMÜ\n- REFERANS VE DEĞER TÜRLERİ ARASINDA DÖNÜŞÜM\n- OPERATÖRLERLERİ KAVRAMAK\n- METOTLARI KAVRAMAK\n- DİZİLER KONUSUNU ÖRNEKLER ÜZERİNDEN ANLAMAK\n- AKIŞ KONTROL MEKANİZMALARINI ÖRNEKLERLE İNCELEMEK\n- OPERATÖRLERLERİ KAVRAMAK\n- DEĞER VERİ TİPLERİ ÖRNEKLERİ\n- VERİLERİ RAM-STACK BELLEĞE KAYDETMEK\n- METOTLARI KAVRAMAK\n- VERİ TÜRLERİ VE DEĞİŞKENLERİ ANLAMAK ?\n- VERİLERİ RAM-STACK BELLEĞE KAYDETMEK\n- DEĞER VERİ TİPLERİ ÖRNEKLERİ\n- REFERANS VERİ TİPLERİ\n- BİLİNÇSİZ TÜR DÖNÜŞÜMÜ\n- AKIŞ KONTROL MEKANİZMALARINI ÖRNEKLERLE İNCELEMEK\n\n\nbaşlıkları detaylıca inceleyeceğiz.",
      "target_audience": [
        "Otomasyon ve endüstriyel tesislerin yönetimiyle ilgilenen öğrenciler",
        "Mühendis,tekniker ve teknisyenler"
      ]
    },
    {
      "title": "Aprende a Desarrollar en Adobe Coldfusion",
      "url": "https://www.udemy.com/course/desarrollo-apps-en-adobe-coldfusion/",
      "bio": "El curso mas fácil, rápido, divertido y completo para crear aplicaciones",
      "objectives": [
        "Programación Web con Coldfusion",
        "Integración de Bases de Datos",
        "Construcción y Consumo de APIS",
        "Desarrollo de Aplicaciones",
        "Fundamentos de Html, Estilos y Jquery"
      ],
      "course_content": {},
      "requirements": [
        "No se requieren conocimientos previos"
      ],
      "description": "¡Domina ColdFusion y crea aplicaciones web de manera rápida y sencilla!\nColdFusion, con más de 25 años de experiencia, es reconocido como uno de los lenguajes más seguros y fáciles de usar para desarrollar aplicaciones web. Su sintaxis intuitiva y su potente motor te permitirán construir desde simples sitios web hasta complejos sistemas empresariales en un abrir y cerrar de ojos.\n¿Por qué elegir ColdFusion?\nVelocidad y eficiencia: Ahorra tiempo y esfuerzo gracias a su sintaxis concisa y a sus herramientas integradas.\nVersatilidad: Desarrolla todo tipo de aplicaciones: sitios web, aplicaciones móviles, sistemas de comercio electrónico, y mucho más.\nSeguridad: Protege tus aplicaciones con las robustas medidas de seguridad de ColdFusion.\nComunidad activa: Únete a una comunidad global de desarrolladores y encuentra soporte cuando lo necesites.\nIdeal para startups: Si estás iniciando tu propio negocio, ColdFusion te permitirá desarrollar tu producto mínimo viable de manera rápida y eficiente.\nDemanda en el mercado laboral: Los desarrolladores ColdFusion son altamente solicitados y bien remunerados.\n¿Qué aprenderás en este curso?\nFundamentos de ColdFusion: Desde la instalación hasta la creación de tus primeras aplicaciones.\nDesarrollo web completo: Aprende a manejar bases de datos, crear interfaces de usuario, gestionar sesiones y mucho más.\nIntegración con otras tecnologías: Conecta ColdFusion con tus herramientas favoritas como JavaScript, HTML, CSS y más.\nMejores prácticas: Descubre los patrones de diseño y las técnicas más eficientes para desarrollar aplicaciones escalables y mantenibles.\nProyectos prácticos: Pon en práctica tus conocimientos con proyectos reales y desafiante.\n¿Por qué elegir este curso?\nExperiencia del instructor: Aprende de un experto con más de 20 años de experiencia en ColdFusion y que ha trabajado en grandes empresas como GE, Toyota y Mastercard.\nContenido práctico: El curso se enfoca en la práctica, con numerosos ejemplos y ejercicios para que aprendas haciendo.\nAdaptado a todos los niveles: Tanto si eres principiante como si tienes experiencia en programación, encontrarás contenido valioso en este curso.\nComunidad de aprendizaje: Interactúa con otros estudiantes y el instructor para resolver dudas y compartir conocimientos.\n¡No esperes más! Inscríbete ahora y comienza tu viaje en el mundo de ColdFusion. Descubre cómo este poderoso lenguaje puede ayudarte a alcanzar tus objetivos profesionales.",
      "target_audience": [
        "Emprendedores",
        "Desarrolladores",
        "Estudiantes",
        "Empresas"
      ]
    },
    {
      "title": "Curso de Java do Básico ao Avançado + Projeto com MySQL",
      "url": "https://www.udemy.com/course/curso-de-java-do-basico-ao-avancado-projeto-com-mysql/",
      "bio": "Um curso prático, para você aprender a linguagem de programação Java e ainda criar um projeto usando Eclipse e MySQL",
      "objectives": [
        "Seja capaz de demonstrar sua compreensão de Java para futuros empregadores.",
        "Aprenda a lógica de programação e treine com exercícios",
        "Crie um projeto em Java com banco de Dados MySQL",
        "Desenvolva as habilidades necessárias para obter seu primeiro trabalho de programação em Java"
      ],
      "course_content": {},
      "requirements": [
        "Um computador que rode o software Eclipse e o banco de dados MySQL ambos são gratuitos"
      ],
      "description": "Seja bem vindo ao Curso de Java do Básico ao Avançado + Projeto com MySQL!\n\n\nComeçe a aprender agora JAVA, utilizando qualquer computador.\nAprenda tudo o que é importante de forma prática e treine seu aprendizado com muitos exercícios.\n23 horas de contéudo.\n76 aulas em 14 seções.\nDois Projetos com Interface gráfica sendo um deles com banco de dados SQL.\nVocê sabia que Java é uma das linguagens de programação mais requisitada no mundo? Estima-se que atualmente existam meio milhão de vagas abertas para desenvolvedores nesta linguagem!\n\n\nO que você vai aprender neste curso:\n\n\nSeção 1. Apresentação e Introdução ao Ambiente do Curso\n\n\nApresentação e Introdução ao Ambiente do Curso\n\n\nSeção 2. Download e Instalação JDK e Eclipse no Windows\n\n\nDownload e Instalação JDK e Eclipse no Windows\n\n\nSeção 3. Comandos de Impressão\n\n\nImprimindo Olá, Mundo\nSolução Acentos\nImpressão Texto\nScanner\n\n\nSeção 4. Função IF e Switch\n\n\nFunção IF\nFunção  IFf ElseIf e Else\nFunção If, ElseIf, Else, OU e E\nSwitch\nSwitch Exemplo 2\nExercício PAR ou ÍMPAR\nExercicio If - Diferença Entre Dois Números\nExercicio If - Ordem Decrescente\nExercicio If - Login e Senha\nExercício Switch - Calculadora\n\n\nSeção 5. For\n\n\nFor\nExercício For - Media Aluno e Media Turma\nExercício For - Tabuada\nExercício For - Números Ímpares\nExercício For - Fatorial\nExercício For - Vogal e Consoante\n\n\nSeção 6. While\n\n\nWhile\nExercício While - Total de Números Pares e Ímpares\nExercício While - Menor e Maior Número\nExercício While - Sorteio Números\n\n\nSeção 7. Do While\n\n\nDo While\nExercício DoWhile - Números de 1 a 5\nExercício DoWhile - Verifica Número Positivo ou Negativo\nExercício DoWhile - Urna Eletrônica\n\n\nSeção 8. Array\n\n\nArray\nArray Parte 2\nExercício Array 1 - Imprimir em Ordem Crescente\nExercício Array 2 - Soma e Média Array\nExercício Array 3 - Imprimir Valores Duplicados\nExercício Array 4 - Imprimir Itens em Ambos os Arrays\n\n\nSeção 9. Matrizes\n\n\nMatrizes\nExercício Matrizes 1 - Imprimir e Somar Diagonal Matriz 3 x 3\nExercício Matrizes 2 - Média Aluno\nExercício Matrizes 3 - Pessoas Entrevistadas\n\n\nSeção 10. Métodos e Classes\n\n\nMétodos\nClasses\nClasses Curso Ciência da Computação e Matérias\nMétodos Get e Set\nExercício Caixa Eletrônico\nExercício Ligação Telefonica\nMétodos e Atributos Static\n\n\nSeção 11. Interface Gráfica\n\n\nConfiguração Eclipse para Interface Gráfica\nCriando Segunda Tela\nTela Login\nMascara  Data, CPF, CNPJ e Telefone\nCriando JPopupmenu\nJTable Inserindo Dados\nTransferir Dados da JTable para JTextfields\nJTable Alterar Dados\nJTable Populando com ArrayList\nJTable Deletando Itens\nJTable Soma Itens e Conta Linhas\nJRadioButton\n\n\nSeção 12. Interface Gráfica - Calculadora\n\n\nPrévia Projeto Calculadora\nDesafio Calculadora parte 1\nDesafio Calculadora parte 2\n\n\nSeção 13. Interface Gráfica - Agenda de Contatos com Banco de Dados MySQL\n\n\nPrévia Sistema Agenda de Contatos\nBaixando e Instalando o MySQL Community\nCriando Telas Principal, Pesquisa, Alterar e Cadastro\nColando Imagens e Criando Conexão com o Banco de Dados\nCriando Colunas Tabela Banco de Daos e Método Salvar\nSalvando os Dados no Banco de Dados\nMaximizando Tela Principal e Centralizando Telas Cadastro, Pesquisa e\nListando Dados na Tela de Pesquisa\nJTable ajustando Largura, Fonte e Contando Itens\nFiltrando Dados\nPassando Dados da tela de Pesquisa para tela de Alterar\nAlterar Dados\nDeletando Itens do Banco de Dados\n\n\nSeção 14. Mensagem Final do Curso\n\n\nParabéns você concluiu o curso\n\n\nQuanto tempo leva para aprender Java?\nHOJE! Então, se matricule agora no curso e darei todo o suporte que precisar durante todo o treinamento.\nApenas não perca mais tempo e inicie hoje mesmo e mude a sua vida profissional para melhor, uma vez que decidir avançar.\n\n\nSatisfação garantida ou seu dinheiro de volta\n\"E se eu não gostar do curso?” A Udemy oferece a todos os alunos uma garantia de reembolso, esse é mais um motivo e um incentivo para você começar já! Após a compra do curso, você tem 30 dias para testar o produto, e se não gostar, basta solicitar o reembolso.\n\n\nTe espero em nossa Área de Alunos.",
      "target_audience": [
        "Este curso é perfeito para iniciantes sem experiência e também para todos que queiram aprender a programar em Java"
      ]
    },
    {
      "title": "Python ve Derin Öğrenme: Pytorch ile Derin Öğrenme (5.3)",
      "url": "https://www.udemy.com/course/python-ve-derin-ogrenme-pytorch-ile-derin-ogrenme-53/",
      "bio": "Facebook Pytorch Kütüphanesi ile Yapay Zeka Algoritmalarından Yapay, Evrişimsel ve Yinelenen Sinir Ağları İnşa Edelim !",
      "objectives": [
        "Facebook'un Yapay Zeka Araştırma laboratuvarı tarafından geliştirilen, açık kaynaklı bir makine öğrenme kütüphanesi olan, bilgisayarla görme ve doğal dil işleme gibi uygulamalar için kullanılan Pytorch kütüphanesini öğreneceğiz.",
        "Pytorch ile Makine Öğrenmesi ve Derin Öğrenme algoritmalarının kodlamasını gerçekleştireceğiz.",
        "Yapay Zeka algoritmalarının, GPU (Grafik İşlemci Birimi) üzerinde eğitim ve testinin nasıl gerçekleştirileceğini öğreneceğiz.",
        "Zaman Serilerinde, Uzun Kısa Süreli Bellek (Long Short Term Memory) algoritmasını kullanarak Pytorch ile nasıl kodlama yapılacağını öğreneceğiz.",
        "Yinelenen Sinir Ağları (Recurrent Neural Networks) algoritmasının Pytorch ile nasıl kodlanacağını öğreneceğiz.",
        "Evrişimsel Sinir Ağları (Convolutional Neural Networks) algoritması kullanarak görüntü sınıflandırmanın Pytorch ile nasıl yapılacağını öğreneceğiz.",
        "Pytorch ile sıfırdan Yapay Sinir Ağlarının (Artificial Neural Networks) nasıl dizayn edileceğini öğreneceğiz."
      ],
      "course_content": {
        "Pytorch ile Derin Öğrenme Giriş": [
          "Giriş",
          "Anaconda Kurulumlar ve Spyder Ayarları",
          "Datai Team: Github ve Kaynaklar"
        ],
        "Kaggle Tanıtım": [
          "Kaggle Tanıtımı 1",
          "Kaggle Tanıtımı 2",
          "Notebook (Kernel) Nedir?",
          "Kaggle Arayüz Değişikliği",
          "Kaggle Profil Sayfası",
          "Kaggle'da Başarılı Olmak İçin Neler Yapmalı?"
        ],
        "Pytorch Temelleri": [
          "Pytorch Temelleri Giriş",
          "Matrices",
          "Basic Math with Pytorch",
          "Variables",
          "Pytorch Temelleri Sonuç"
        ],
        "Linear Regression": [
          "Linear Regression Giriş",
          "Problem Tanımı ve İzlenecek Yol",
          "Linear Regression Modeli Eğitimi (Training)",
          "Linear Regression Modeli Testi (Testing)",
          "Linear Regression Sonuç"
        ],
        "Logistic Regression": [
          "Logistic Regression Giriş",
          "Problem Tanımı ve Veri Seti Hazırlama (Preprocess)",
          "Logistic Regression Modelinin Kurulması",
          "Logistic Regression Modelinin Eğitimi ve Testi",
          "Logistic Regression Sonuç"
        ],
        "Yapay Sinir Ağları (Artificial Neural Networks)": [
          "Yapay Sinir Ağları Giriş",
          "Yapay Sinir Ağları Modelinin Kurulması",
          "Yapay Sinir Ağları Modelinin Eğitimi ve Testi",
          "Yapay Sinir Ağları Sonuç"
        ],
        "Evrişimsel Sinir Ağları (Convolutional Neural Networks)": [
          "Evrişimsel Sinir Ağları Giriş",
          "Evrişimsel Sinir Ağları Modelinin Kurulması",
          "Evrişimsel Sinir Ağları Modelinin Eğitimi ve Testi",
          "Evrişimsel Sinir Ağları Sonuç"
        ],
        "Yinelenen Sinir Ağları (Recurrent Neural Networks)": [
          "Yinelenen Sinir Ağları Giriş",
          "Yinelenen Sinir Ağları Modelinin Kurulması",
          "Yinelenen Sinir Ağları Modelinin Eğitimi ve Testi",
          "Yinelenen Sinir Ağları Sonuç"
        ],
        "Uzun Kısa Süreli Bellek (Long Short Term Memory)": [
          "Uzun Kısa Süreli Bellek Giriş",
          "Uzun Kısa Süreli Bellek Modelinin Kurulması",
          "Uzun Kısa Süreli Bellek Modelinin Eğitimi ve Testi",
          "Uzun Kısa Süreli Bellek Sonuç"
        ],
        "GPU (Grafik İşlemci Birimi) ile Pytorch": [
          "GPU ile Pytorch Giriş",
          "Veri Seti Yükleme",
          "Evrişimsel Sinir Ağları Modelinin Kurulması",
          "Evrişimsel Sinir Ağları Modelinin Eğitimi",
          "Evrişimsel Sinir Ağları Modelinin Testi",
          "GPU ile Pytorch Sonuç"
        ]
      },
      "requirements": [
        "Datai Team Kursu: \"Machine Learning ve Python: A'dan Z'ye Makine Öğrenmesi (4)\" ya da \"Orta Seviye Makine Öğrenmesi Bilgisi\"",
        "Datai Team Kursu: \"Deep Learning ve Python: A'dan Z'ye Derin Öğrenme (5)\" ya da \"Orta Seviye Derin Öğrenme Bilgisi\"",
        "İnternet bağlantılı bir bilgisayar"
      ],
      "description": "PYTHON ve DERİN ÖĞRENME: PYTORCH ile DERİN ÖĞRENME\nFacebook'un Yapay Zeka Araştırma laboratuvarı tarafından geliştirilen, açık kaynaklı bir makine öğrenme kütüphanesi olan, bilgisayarla görme ve doğal dil işleme gibi uygulamalar için kullanılan Pytorch kütüphanesini öğreneceğiz.\nPytorch ile Derin Öğrenme Kursu İçeriği:\nPytorch ile Derin Öğrenme Giriş\nKaggle Tanıtım\nPytorch Temelleri\nLinear Regression\nLogistic Regression\nYapay Sinir Ağları (Artificial Neural Networks)\nEvrişimsel Sinir Ağları (Convolutional Neural Networks)\nYinelenen Sinir Ağları (Recurrent Neural Networks)\nUzun Kısa Süreli Bellek (Long Short Term Memory)\nGPU (Grafik İşlemci Birimi) ile Pytorch\nNeden Python -- Makine Öğrenmesi -- Derin Öğrenme -- Pytorch?\nPython 2019 IEEE araştırmasına göre dünya çapında en çok kullanılan ve tercih edilen programlama dili.\nPython kolay öğrenilebilirliği sayesinde kodlamaya yeni başlayanların ilk tercihi oluyor.\nPython open source (açık kaynak) olması nedeni ile Facebook yada Google gibi dünyanın en büyük şirketleri tarafından destekleniyor.\nVeri bilimi, makine öğrenmesi yada yapay zeka denince akla ilk olarak Python dili geliyor. Bu durumda Python'ın dünya çapında büyük bir kitlesinin olmasına neden oluyor.\nPython öğrenmesi en kolay olan dillerin başında geliyor.\nKariyer açısından Python en çok fırsata sahip dillerinden biri.\nMakine Öğrenmesi alanında iş fırsatı çok geniş,\nDünya yapay zeka yani makine öğrenmesine doğru inanılmaz hızlı sürükleniyor,\nMakine öğrenmesi geleceği parlak meslek dallarının olmazsa olmazı,\nMakine öğrenmesi bir veriden derinlemesine bilgi çıkarmaya olanak sağlıyor.\nDerin öğrenme modelleri veri sayısı arttığı zaman klasik makine öğrenmesi yöntemlerinden çok daha başarılı sonuçlar veriyor.\nDerin öğrenme furyası tüm dünyada çığ gibi büyüyor ve bizlerde yolun başındayken derin öğrenmeyi öğrenmeliyiz.\nDerin öğrenme bilgisine sahip olmak iş hayatında fark yaratacak.\nDerin öğrenme herkesin öğrenebileceği kolay bir konu değil bu nedenle derin öğrenme bilen biri olarak her alanda daha kıymetli olursunuz.\nPytorch'u öğrenmesi ve uygulaması daha kolaydır.\nPytorch'u debug etmesi kolaydır ve bu özelliği pytorch'u diğer kütüphanelerden öne çıkarır.\nPytorch diğer kütüphanelere göre nispeten daha hızlıdır.\nBU KURSU EN İYİ YAPAN NEDİR?\nBu kurs Pytorch ve Derin Öğrenme alanında en kapsamlı bir kurstur.\nBasit seviye anlatım ve algoritmaların dışında ileri seviye teknik ve kodlama becerisinin geliştirildiği bir kurstur.\nGerçek dünya projeleri ile çalışırken zorlukların üstesinden nasıl gelindiğini öğreneceğiniz bir kurstur.\nBU KURS İLE SAHİP OLACAKLARINIZ\nSıfırdan Kodlama Becerisi: Sizinle birlikte kod yazıyoruz. Her ders boş bir sayfa ile başlar ve kodu sıfırdan yazarız. Bu şekilde ilerleyebilir ve kodun nasıl bir araya geldiğini ve her satırın ne anlama geldiğini tam olarak anlayabilirsiniz.\nKodlar ve Şablonları: Kursta oluşturduğumuz her Python şablonlarını ve kodunu indirebilirsiniz. Bu, sizlere hem daha sonra kod üzerinde pratik yapma hem de kendi projelerinizi şablon sayesinde daha kolay bir şekilde yaratma imkanı sağlayacaktır\nTeori ve Mantık: Size yalnızca kod yazmayı değil, hem yazdığımız kodun arkasında yatan mantığı ve teoriyi hem de neden böyle bir kod yazdığımızı anlatıyoruz.\nKurs içi destek: Size sadece video ile ders anlatımı yapmıyoruz. Size destek olmak için profesyonel Veri Bilimcilerinden oluşan bir ekip oluşturduk. Bu da ders ve ya ders dışı sorularınıza en fazla 72 saat içinde yanıt alacağınız anlamına geliyor.\nHemen kaydolun ve bir an önce başlayalım.",
      "target_audience": [
        "Derin Öğrenme ile ilgili temel seviye kurslardan sıkılmış ve ileri seviye kurslara geçmek isteyenler",
        "Makine Öğrenmesi Mühendisliği iş başvurularında \"pytorch, tensorflow ya da theano gibi derin öğrenme platformlarında tecrübe\" istenilir. Bu kurs ile CV'nize Pytorch yeteneğini ekleyebilirsiniz.",
        "Temel derin öğrenme ve Python konularına hakim, kendisini ileri seviye kodlama yapmaya hazır hissedenler",
        "Dünyada en çok kullanılan yapay zeka kütüphanelerinden biri olan Pytorch kütüphanesinde tecrübe kazanmak isteyenler",
        "Zorluklar karşısında yılmayıp her daim araştırmaya açık olanlar"
      ]
    },
    {
      "title": "Curso Completo de Arduino - Guia Completa Paso a Paso!",
      "url": "https://www.udemy.com/course/curso-completo-de-arduino-guia-completa-paso-a-paso/",
      "bio": "Curso de Arduino de cero a experto!",
      "objectives": [
        "Programar una placa de Arduino",
        "Código C para Arduino",
        "Usa herramientas para construir dispositivos electrónicos",
        "Comprender los principios de programación de microcontroladores",
        "Conectar su Arduino a Internet",
        "Comprender los principios básicos en el diseño de productos electrónicos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Presentación de curso",
          "Nuestro Proyecto Final",
          "Guia de Componentes"
        ],
        "Electronica Basica": [
          "Guia de componentes 1",
          "Que es la Electronica",
          "Que es la corriente",
          "Que es el voltage",
          "Que es la corriente AC",
          "Que es la corriente en DC",
          "Ley de OHM",
          "Tabla de colores de las resistencias",
          "Señales analogicas",
          "Señales digitales",
          "Señales periódicas y aperiodicas",
          "Conexión en serie y paralelo",
          "Componentes electronicos",
          "Quiz 1"
        ],
        "Hardware Arduino": [
          "Guia de componentes 2",
          "Que es Arduino",
          "Que es un microcontrolador",
          "Que tiene la placa Arduino",
          "Quiz 2"
        ],
        "Software Arduino": [
          "Que es un IDE",
          "Instalación en Windows",
          "Instalación en Mac OS X",
          "Quiz 3"
        ],
        "Lenguaje Arduino": [
          "Guia de componentes 3",
          "Mi primer Sketch",
          "Comentarios",
          "Tipos de una variable",
          "Hola mundo! Programación",
          "Hola Mundo! Montaje",
          "Uso del FOR - Programación 1",
          "Uso del FOR - Montaje 1",
          "Uso del FOR - Programación 2",
          "Uso del FOR - Montaje 2",
          "Funciones - Programación",
          "Funciones - Montaje",
          "Arreglos y PWM - Programación",
          "Arreglos y PWM - Montaje",
          "Uso de IF - Programación 1",
          "Uso de IF - Montaje 1",
          "Uso de IF - Programación 2",
          "Uso de IF - Montaje 2",
          "Quiz 4"
        ],
        "LyquidCrystal Library": [
          "Guia de componentes 4",
          "Hello World! - Programación",
          "Hello World! - Montaje",
          "Autoscroll - Programación",
          "Autoscroll - Montaje",
          "Autoscroll 2 - Programación",
          "Autoscroll 2 - Montaje",
          "Scroll - Programación",
          "Scroll - Montaje",
          "Serial Display - Programación",
          "Serial Display - Montaje",
          "Quiz 5"
        ],
        "Servo Library": [
          "Guia de Componentes 5",
          "Circuitos Servo Motor",
          "Circuito Sweep Programación",
          "Circuito Sweep Montaje",
          "Circuito Knob Programación",
          "Circuito Knob Montaje",
          "Quiz 6"
        ],
        "Manejo Sensor Ultrasonico HC-SR04": [
          "Que es y para que sirve HC-SR04",
          "Calcular distancia por monitor serial - Programación 1",
          "Calcular distancia por monitor serial - Montaje 1",
          "Calcular distancia con leds - Programacion 2",
          "Calcular distancia con leds - Montaje 2",
          "Calcular distancia con LCD 16x2 - Programación 3",
          "Calcular distancia con LCD 16x2 - Montaje 3"
        ],
        "Stepper Library": [
          "Proximamanete!"
        ],
        "TFT Library": [
          "Proximamente!",
          "Quiz 7"
        ]
      },
      "requirements": [
        "Un Computador (Windows, Linux, Mac)",
        "Una board Arduino (Cualquier versión)",
        "Componentes electrónicos (Guia Componentes)"
      ],
      "description": "Curso enfocado al desarrollo en la plataforma de Arduino en el cual se tocaran temas relacionados con la programación en C con la plataforma Arduino en la cual aprenderás desde los fundamentos básicos hasta la creación de un proyecto final que tu eliges.\nAprende a programar proyectos electrónicos con el entorno de desarrollo Arduino de cero a experto de forma fácil y sencilla con un Mac o un PC, crea muchas ideas de innovación que te enseño hacer, modifica y arreglar los errores y muestras al mundo!\n\nEn este curso aprenderas:\nProgramación C con Arduino.\nCaracterísticas del entorno de desarrollo.\nComandos y funciones\nDiseño e interfaz de circuitos\nConfiguración de Arduino con internet.\nIdentificar Bugs y solucionarlos al momento de crear Sketch.\nSimulación de circuitos electrónicos.\nTe animo a que veas cualquiera de las clases que están accesibles antes de comprar el curso completo o master avanzado de desarrollo de Arduino y te aseguro que desearas aprender mucho más del curso!\nA lo largo del curso tendrás varias horas de ejemplos prácticos, para que captes bien el sentido de cada concepto y sepas aplicarlo en tus propios proyectos.\nAnimate\nUna ves adquieras esta guía completa no solo estaré presente en los videos sino que también podrás preguntarme todas tus inquietudes del sistema y así te animaras a seguir aprendiendo cada vez más sobre el sistema Arduino en la creación de tus nuevos proyectos tecnológicos.",
      "target_audience": [
        "Cualquier persona que quiera crear proyectos tencologicos"
      ]
    },
    {
      "title": "【한글자막】 OpenCV 및 딥러닝 을 이용한 Computer Vision 파이썬",
      "url": "https://www.udemy.com/course/best-opencv-computer-vision/",
      "bio": "【전세계 수강생 250만명!】 Python , OpenCV 및 Deep Learning으로 컴퓨터 비전의 최신 기술을 배우십시오! | Numpy, 케라스 포함",
      "objectives": [
        "NumPy의 기본 이해",
        "NumPy로 이미지 조작 및 열기",
        "OpenCV를 사용하여 이미지 파일 작업하기",
        "Python 및 OpenCV를 사용하여 이미지 및 비디오에 모양 그리기",
        "스무딩, 블러링, 임계 처리 및 모폴로지 연산을 포함하여 OpenCV로 이미지 조작 수행하기",
        "OpenCV로 색상 히스토그램 생성하기",
        "Python 및 OpenCV로 비디오 열기 및 스트리밍",
        "OpenCV 및 Python을 사용한 코너점, 테두리, 그리고 그리드 검출 기술을 포함한 객체 탐지하기",
        "얼굴 감지 소프트웨어 만들기",
        "Watershed 알고리즘을 사용하여 이미지 분할하기",
        "비디오에서 개체 추적하기",
        "Python 및 Deep Learning을 사용하여 이미지 분류기 구축하기",
        "Tensorflow, Keras 및 Python과 함께 작업하여 고유한 사용자 지정 이미지를 학습하기"
      ],
      "course_content": {},
      "requirements": [
        "Python 기본 사항에 대한 명확한 이해가 필요합니다",
        "Windows 10 또는 MacOS 또는 Ubuntu",
        "컴퓨터에 설치 권한이 있어야 합니다",
        "비디오 스트리밍 콘텐츠를 배우고 싶다면 WebCam이 필요합니다"
      ],
      "description": "안녕하세요?\nComputer Vision용 Python에 대한 최고의 온라인 강의에 오신 것을 환영합니다!\n이 강의는 Computer Vision용 Python 프로그래밍 언어를 사용하는 방법을 배우기 위한 최고의 자료가 될 것입니다.\nPython과 OpenCV(Open Computer Vision) 라이브러리를 사용하여 이미지와 비디오 데이터를 분석하는 방법을 살펴보겠습니다.\n세계에서 가장 인기 있는 플랫폼은 이전에 볼 수 없었던 양의 이미지 및 비디오 데이터를 생성하고 있습니다. 유저들은 60초마다 300시간 이상의 비디오를 Youtube에 업로드하고 Netflix 구독자는 80,000시간 이상의 비디오를 스트리밍하며 Instagram 사용자는 2백만 개 이상의 사진에 “좋아요” 를 누릅니다! 이제 개발자는 컴퓨터 비전을 사용하여 이미지 및 비디오 데이터로 작업하는 데 필요한 기술을 습득해야 합니다.\n컴퓨터 비전을 통해 자율 주행 자동차, 소셜 네트워크 앱, 의료 진단 등을 포함한 다양한 산업 분야의 응용 프로그램과 함께 이미지 및 비디오 데이터를 분석하고 활용할 수 있게 될 것입니다.\n가장 빠르게 인기를 얻고 있는 언어인 Python은 이 모든 이미지 및 비디오 데이터에서 학습하기 위해 기존 컴퓨터 비전 라이브러리의 기능을 활용하는 데 매우 적합합니다.\n이 강의에서 우리는 컴퓨터 비전 전문가가 되기 위해 알아야 할 모든 것을 가르칠 것입니다! 200억 달러 규모의 이 산업은 앞으로 몇 년 동안 가장 중요한 고용 시장 중 하나가 될 것입니다.\n이 강의는 NumPy 라이브러리를 사용한 수치 처리와 NumPy로 이미지를 열고 조작하는 방법을 배우는 것으로 시작됩니다. 다음으로 OpenCV 라이브러리를 사용하여 이미지 기본 사항을 열고 작업하는 방법으로 넘어갑니다. 그 후, 이미지를 처리하고 색상 매핑, 블랜딩, 임계 처리, 그라디언트 등을 포함한 다양한 효과를 적용하는 방법을 이해하게 될 것입니다.\n다음 스텝으로, 웹캠에서 스트리밍 비디오 작업을 포함하여 OpenCV로 비디오 기본 사항을 이해하는 방법으로 넘어갈 것입니다. 그 후에 우리는 광학 흐름 및 객체 탐지와 같은 직접적인 비디오 주제에 대해 배울 것입니다. 얼굴 감지 및 객체 탐지도 포함합니다.\n마지막 스텝으로, 이미지 인식 및 사용자 지정 이미지 분류를 포함하여 최신 딥 러닝 주제에 전념하는 강의의 전체 섹션으로 이동합니다. YOLO(You Only Look Once) 딥 러닝 네트워크를 비롯한 최신 딥 러닝 네트워크도 다룰 것입니다.\n이 강의는 다음과 같은 주제들을 포함하되 더 많은 것들을 다룹니다.\nNumPy\nNumPy가 있는 이미지\nNumPy를 사용한 이미지 및 비디오 기본 사항\n색상 매핑\n이미지 블랜딩 및 붙여넣기\n이미지 임계 처리\n블러 및 스무딩\n모폴로지 연산\n그라디언트\n히스토그램\nOpenCV로 비디오 스트리밍\n객체 탐지\n템플릿 매칭\n코너점, 테두리, 그리드 검출\nContour 검출\n기능 매칭\nWatershed 알고리즘\n얼굴 감지\n개체 추적\n광학 흐름\n케라스를 사용한 딥 러닝\n케라스와 컨볼루션 네트워크\n맞춤형 딥 러닝 네트워크\n최첨단 YOLO 네트워크\n그리고 훨씬 더 많은 것들이 있습니다!\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n강의에 대해 질문이 있을때는 언제든지 Udemy로 메시지를 보내주세요!\n저의 강의 소개서를 읽어 주셔서 감사합니다. 강의에서 뵙기를 바랍니다!\n\n\n-Jose",
      "target_audience": [
        "컴퓨터 비전 및 딥 러닝에 관심이 있는 Python 개발자. 이 강의는 파이썬 초보자를 위한 것이 아닌 중급 레벨 이상 수강생을 위한 강의입니다."
      ]
    },
    {
      "title": "Kotlin para Principiantes: Aprende a Programar en Kotlin",
      "url": "https://www.udemy.com/course/kotlin-desde-cero/",
      "bio": "¡Aprende Kotlin desde CERO! Todo lo que necesita saber para convertirse en un desarrollador profesional de Kotlin.",
      "objectives": [
        "Cómo instalar y utilizar Intellij (el mejor IDE para Java y Kotlin).",
        "Aprender y entender Kotlin - el nuevo lenguaje basado en Java ¡Oficialmente apoyado por Google!.",
        "Entender los conceptos de Kotlin y cómo se relaciona con Java.",
        "Aprender y entender los fundamentos de la programación orientada a objetos.",
        "Tener las bases para empezar a crear apps Android utilizando Kotlin."
      ],
      "course_content": {
        "Bienvenidad": [
          "Bienvenida al curso de Kotlin"
        ],
        "Preparando el entorno con Intellij IDEA": [
          "Resumen de la sección",
          "Instalando el JDK",
          "Instalando Intellij IDEA",
          "Ejecutando nuestro primer programa en Kotlin"
        ],
        "Programación en Kotlin": [
          "Resumen de la sección",
          "Variables",
          "Tipos de datos en Kotlin",
          "Variables var y val",
          "Conversión de tipos",
          "Trabajando con Nulos (Null)",
          "Variables y tipos de datos.",
          "Comentarios en kotlin",
          "Ingreso de datos",
          "Operadores matemáticos en kotlin",
          "Incrementar y decrementar",
          "Operadores relacionales",
          "Sentencias Logicas",
          "Setencia If",
          "Sentencia If Else",
          "Sentencia When",
          "Examen de sentencias",
          "Sentencia For",
          "Sentencia While",
          "Sentencia Do While",
          "Rangos en Kotlin",
          "Enumeradores",
          "Excepciones en Kotlin",
          "Arreglos",
          "Recorrer elementos de un arreglo",
          "ArrayList",
          "Funciones",
          "Sobrecarga de funciones",
          "Funciones como variables",
          "Alcance de las variables"
        ],
        "Programación Orientada a Objetos en Kotlin": [
          "Clases y objetos",
          "Clases en Kotlin",
          "Clases en Kotlin - Segunda parte",
          "Constructores",
          "Herencia",
          "Modificador Override",
          "This y Super"
        ],
        "Finalización": [
          "Nuestras redes sociales",
          "Clase Extra: Hechale un ojo."
        ]
      },
      "requirements": [
        "Este curso no requiere experiencia previa de programación.",
        "Conocimiento básico de instalación de software en la computadora."
      ],
      "description": "Kotlin ya se ha posicionado como el lenguaje de programación oficial para crear aplicaciones Android. ¿Está usted interesado en aprender este lenguaje?, si la respuesta es sí este curso es para iniciarse de la forma correcta.\nGoogle publicó en Google I/O 2017 que Kotlin será el lenguaje de programación oficial para la construcción de aplicaciones Android. Esto permite que Kotlin se convierta en el primer lenguaje de su clase para la plataforma de Android.\nEl curso de programación en Kotlin tiene todo lo que necesita saber para convertirse en un desarrollador profesional de Kotlin, este curso te va permitir tener las bases para integrar tus conocimientos de Kotlin para desarrollar aplicaciones Android impresionantes y profesionales.\n¿Eres nuevo en la programación?\n¿Quieres aprender Kotlin?\n¿Quieres aprender la programación orientada a objetos utilizando Kotlin?\n¿Quieres convertirte en un profesional de Kotlin Developer?\n¡Encontraste el curso correcto!\nAmplia tu experiencia, aprendiendo un nuevo lenguaje fácil y versátil, y mejora la calidad de tu código de programación. Este curso abarca desde los conceptos de programación esenciales, hasta la programación orientada a objetos e integración de estos conocimientos con el lenguaje de programación Kotlin.\nVoy a responder a cada pregunta que usted tiene, le vamos a ayudar a obtener el mejor aprendizaje y escucharemos sus comentarios. ¡Únete a los 10,000+ estudiantes felices que tenemos en Udemy!\nTe invito a revisar las reseñas de otros estudiantes, y verás que tu inversión está asegurada, recuerda que tienes la garantía de 30 días de Udemy.",
      "target_audience": [
        "Cualquier persona que quiera aprender Kotlin y posteriormente Desarrollo Android.",
        "Personas que quieran aprender a programar desde cero.",
        "Personas que conocen otro lenguaje como Java y desean migrar a Kotlin."
      ]
    },
    {
      "title": "ゼロから徹底的に学ぶプログラミング言語 Python 3",
      "url": "https://www.udemy.com/course/python-0/",
      "bio": "Pythonの導入から文法、読みやすいコードの書き方、ハマりやすいポイント、開発ツールの使い方など、基礎を徹底的に学習します。また、実際に役立つアプリ開発を通じて実用的なプログラム開発スキルを身に付けられる講座です。",
      "objectives": [
        "開発環境のセットアップ方法",
        "Visual Studio Code でのプログラム開発",
        "Jupyter の使い方",
        "Python 3 の文法",
        "Python 3.6 の最新機能",
        "実行環境の管理方法",
        "読みやすいコードを書く技術",
        "Python でハマりやすいポイントと回避方法",
        "Python のオブジェクトに対する理解",
        "Pythonでのコマンドラインアプリの作成方法",
        "Python で正規表現を使って自在に文字列を処理する方法",
        "Python でファイルやディレクトリを操作する方法"
      ],
      "course_content": {
        "導入": [
          "はじめに",
          "セットアップ (概要)",
          "セットアップ (Windows)",
          "セットアップ (Linux)",
          "セットアップ (macOS)",
          "Python 2 と 3 の選択",
          "Python インタープリタ",
          "文字列の表示",
          "インタープリタの対話モード",
          "IPython",
          "導入",
          "Jupyter Notebook",
          "講座の資料",
          "JupyterLab",
          "Visual Studio Code"
        ],
        "オブジェクト、変数": [
          "オブジェクトの概要",
          "オブジェクトの概要",
          "ライブラリ",
          "変数",
          "変数の値を出力",
          "ライブラリの利用",
          "変数",
          "スタイルガイド",
          "スタイルガイド",
          "名前に関する規則と注意",
          "名前に関する規則と注意"
        ],
        "数値": [
          "整数",
          "浮動小数点数",
          "複素数",
          "数値",
          "算術演算子",
          "演算結果の出力",
          "算術演算子",
          "算術演算の練習"
        ],
        "コンテナ": [
          "文字列",
          "文字列",
          "リスト",
          "リストの作成",
          "リスト",
          "コンテナやシーケンスに共通の演算",
          "コンテナやシーケンスに共通の演算",
          "インデキシング",
          "スライシング",
          "インデキシング、スライシング",
          "変更可能と変更不能",
          "変更可能と変更不能",
          "タプル",
          "タプル",
          "辞書",
          "辞書の作成",
          "辞書",
          "集合",
          "集合の利用",
          "集合",
          "range",
          "range"
        ],
        "比較演算子、論理演算子": [
          "ブール値",
          "比較演算子",
          "論理演算子",
          "比較演算子、論理演算子"
        ],
        "制御フロー文": [
          "if 文",
          "if 文の練習",
          "if 文",
          "while 文",
          "while 文",
          "for 文 (1)",
          "for 文 (2)",
          "for 文の練習 1",
          "for 文の練習 2",
          "for 文"
        ],
        "内包表記": [
          "リスト内包表記",
          "辞書内包表記、集合内包表記",
          "内包表記"
        ],
        "入力と出力": [
          "文字列フォーマット",
          "文字列フォーマット",
          "標準入出力",
          "位取り記数法",
          "バイナリシーケンス型",
          "文字列型とバイト型",
          "バイナリと文字列",
          "テキストファイルの入出力",
          "テキストファイルの入出力"
        ],
        "関数": [
          "関数定義",
          "基本的な関数定義",
          "値を返す関数",
          "引数",
          "関数定義1",
          "デフォルト引数値の設定",
          "可変長位置引数の利用",
          "ドキュメンテーション文字列",
          "アノテーション",
          "lambda 式",
          "デコレータ",
          "ジェネレータ",
          "関数定義2"
        ],
        "モジュール、パッケージ": [
          "モジュール (1)",
          "名前空間とスコープ",
          "モジュール (2)",
          "パッケージ",
          "モジュール、パッケージ"
        ]
      },
      "requirements": [
        "パソコン [対象 OS: Windows, Linux, macOS]",
        "初歩的なパソコンの操作技術",
        "Python やプログラミングの経験は必要ありません"
      ],
      "description": "ここ数年、Python の人気はますます高まり、世界のプログラミング言語人気ランキングでも 1 位にランクされるようになりました。Python のスキルが求められる仕事も急増している状況です。人気の理由の一つは、Python が比較的習得しやすい言語であることです。そのため、プログラミング入門の言語としても、多くの企業や教育機関で採用されています。Python はライブラリが充実しており、Web アプリ開発はもちろん、数値計算が必要なあらゆる分野でも使われています。Python は多くの分野で基礎スキルとして習得が求められるようになって来ています。\nこの講座は、プログラミング、Pythonに入門してみようという初心者の方でも学べるように作られています。しかし、ただのPythonのチュートリアルではありません。すでにPythonを学んだことのある方も対象にした、実用的なプログラム開発スキルを身に付けられる講座です。\nまず最初に、Pythonの導入から文法、読みやすいコードの書き方、ハマりやすいポイント、開発ツールの使い方など、基礎を徹底的に学習します。その次に、Pythonで実際に役立つアプリケーションを構築する方法を学習していきます。一連のアプリ作成を通じて、開発スキルと、自分でこんなプログラムを作れるという自信を身に付けていきます。\nユーザーから入力された単語の説明文を表示するコマンドラインアプリ\n複数ファイル内の文字列を一括置換するコマンドラインアプリ (正規表現対応)\n\n講座には、知識の定着を助けるための約140問のクイズと、約20個のコーディング演習が含まれています。\nまた、多くの資料を用意しています。この資料に気付いた点などをメモすれば、自分だけの学習ノートができあがります。ぜひ復習に役立ててください。\nなお、本講座は Python の最新情報をサポートするよう、継続的に更新していきます。",
      "target_audience": [
        "プログラミング、Pythonを全くのゼロから学びたい方",
        "スキルアップのために Python を学んでみようという方",
        "少し学んではみたが Python の知識に不安がある方"
      ]
    },
    {
      "title": "SwiftUI 2.0 Kurs mit iOS 14 und Swift 5",
      "url": "https://www.udemy.com/course/swiftui-kurs-mit-ios-14-und-swift-5/",
      "bio": "Lerne alles über SwiftUI 2.0 z.B. Navigation, Data Flow, User Input Handling, Core Data, JSON und vieles mehr...",
      "objectives": [
        "Apps entwicklen mit SwiftUI ‼️",
        "⚙️ Data Flow mit SwiftUI",
        "🗄 Core Data mit SwiftUI",
        "📦 JSON mit SwiftUI",
        "🧲 Binding mit SwiftUI"
      ],
      "course_content": {
        "Hier starten!": [
          "Download aller Kursdateien"
        ],
        "Erste App mit SwiftUI": [
          "Login View bauen",
          "Subviews erstellen",
          "New Account View",
          "Navigation in SwiftUI",
          "Check Login Möglichkeit 1",
          "Check Login Möglichkeit 2",
          "Code Download"
        ],
        "SwiftUI Syntax + Grundlagen": [
          "SwiftUI Aufbau einer App",
          "class vs. struct (Wiederholung)",
          "protocol (Wiederholung)",
          "closure (Wiederholung)",
          "computed Property",
          "Closure",
          "@State und binding",
          "@State Beispiel - 1",
          "@State Beispiel - 2",
          "Ternary Operator",
          "SF Symbols",
          "Code Download"
        ],
        "Container VStack, HStack, ZStack, Grid Layout": [
          "SwiftUI ist nur ein Puzzele",
          "VStack - 1",
          "VStack - 2",
          "VStack - 3",
          "VStack - 4",
          "HStack - 1",
          "HStack - 2",
          "HStack - 3",
          "HStack - 4",
          "ZStack",
          "Stacks kombinieren",
          "Grid Layout Vertical",
          "Grid Layout Horizontal",
          "Spacer()",
          "Divider()"
        ],
        "Controls in SwiftUI": [
          "Button",
          "Button Varianten",
          "Button Beispiele",
          "Text Varianten",
          "Text Beispiele",
          "TextField",
          "SecureTextField",
          "Toggle",
          "Image",
          "Label",
          "Zusammenfassung - Alles ist nur ein View"
        ],
        "User Input SwiftUI": [
          "Toggle Input",
          "Button Input",
          "TextField Input",
          "Image klickbar machen",
          "Tap Gesture SwiftUI",
          "Tap Gesture mit Doppelklick",
          "Long press gesture verwenden"
        ],
        "List (Tabellen erstellen)": [
          "List erstellen",
          "Beliebige Tabellenzeilen erstellen",
          "Array nutzen",
          "Identifiable",
          "UUID() verwenden",
          "Zeile löschen - 1",
          "Zeile löschen - 2",
          "Hintergrund ändern",
          "Sektionen hinzufügen",
          "CustomRow erstellen",
          "Tabellenzeile drücken",
          "ToolbarItem"
        ],
        "Navigation in SwiftUI": [
          "Mehrere Fenster erstellen",
          "NavigationView",
          "NavigationView ändern",
          "Daten zum zweiten Fenster schicken",
          ".sheet() Modal Übergang",
          "TabView - 1",
          "TabView - 2",
          "TabView - 3"
        ],
        "Alert's erstellen": [
          "AlertBox erstellen",
          "Action hinzufügen",
          "ActionSheet",
          "Custom Alert erstellen - 1",
          "Custom Alert erstellen - 2",
          "@State und @Binding verstehen",
          "Wo man den ZStack Container super nutzen kann"
        ],
        "Form": [
          "Was ist eine Form?"
        ]
      },
      "requirements": [
        "Xcode 11 oder neuer",
        "Swift Grundkenntnisse werden benötigt"
      ],
      "description": "Das neue SwiftUI Framework von Apple ist da!\nLerne in diesem Kurs alles über SwiftUI was du wissen musst, um Apps mit dem neuen Framework zu erstellen.\n\n\nÜbersicht der Themen:\nNavigation - NaviagtionLinks, TabView usw.\nControl Elemente wie Button, Text, Toggle und viele weitere\nAnimation\nData Flow in SwiftUI - Wie bekommen ich Daten von A nach B\nProperty Wrapper wie @Binding, @State, @Published, @Environment usw.\nList (Tabelle) erstellen\nCore Data mit SwiftUI nutzen (noch im Aufbau)\nJSON mit SwiftUI nutzen (wird noch um weitere Beispiel erweitert)\nund viele weitere Themen erwarten dich im Kurs!",
      "target_audience": [
        "Leute mit Swift Erfahrung, die SwiftUI lernen möchten"
      ]
    },
    {
      "title": "Ponto de Vendas com Java e Mysql",
      "url": "https://www.udemy.com/course/ponto-de-vendas-com-java-e-mysql/",
      "bio": "Sistemas com Java Desktop",
      "objectives": [
        "Criar um sistema de Ponto de vendas em java com banco de dados mysql"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Abrindo Projeto",
          "Telas do Sistema",
          "Programando Splash Screen",
          "Métodos para barra de progresso",
          "Programando barra de progresso",
          "Associando elementos",
          "Método para executar o Progress",
          "ThRead para iniciar progresso",
          "Criando o banco de dados",
          "Criando tabelas do banco",
          "Classe para conexão",
          "Conectando ao banco de dados",
          "Programando Login",
          "Nomenclatura dos componentes",
          "Buscando usuário no banco",
          "Verificando senha do usuário",
          "Consulta para buscar tipo usuário",
          "Verificando tipo de usuário",
          "Verificando usuário administrador",
          "Login no sistema",
          "Login com usuário padrão",
          "Finalizando Login",
          "Desconectando usuário do sistema",
          "Verificando janelas abertas",
          "Controle de abertura de forms",
          "Trazendo janela para frente",
          "Chamando Internal Frame",
          "Controle dos Internal Frames",
          "Data no sistema",
          "Hora no sistema",
          "Eventos no combobox",
          "Componente tabela usuários",
          "Estilos de render para tabela",
          "Classe de usuários",
          "Listando usuários",
          "Buscando usuários",
          "Recuperando dados",
          "Função para registrar usuário",
          "Chamando método para registro",
          "Incrementando código automáticamente",
          "Registrando no banco de dados",
          "Atualizando usuário",
          "Excluindo usuários",
          "Classe de Produtos",
          "Listando os Produtos",
          "Buscando Produtos",
          "Registrando Produtos",
          "Capturando código do produto",
          "Finalizando produtos",
          "Classes de Vendas",
          "Lista de Produtos",
          "Busca de Produtos por Categorias",
          "Buscas com combobox",
          "Funçao para calcular totais",
          "Passando valores entre forms",
          "Cálculos da venda",
          "Efetuando a venda",
          "Listando as vendas",
          "Buscando e excluindo vendas",
          "Gerando executável do sistema",
          "Hospedagem gratuita para mysql",
          "Subindo banco no servidor",
          "Testando o sistema"
        ]
      },
      "requirements": [
        "Não precisa de nenhum pré-requisito"
      ],
      "description": "O curso de Ponto de Vendas com Java SE possui 64 aulas, neste curso o aluno aprenderá a desenvolver um sistema de ponto de vendas com java desktop usando netbeans, neste sistema usando mysql como banco de dados, você pode tanto manter seu sistema armazenando de forma local ou deixar seu banco de dados hospedado para que seu sistema possa funcionar em rede com mais de um usuário armazenando no mesmo banco de dados.",
      "target_audience": [
        "Qualquer aluno que queira desenvolver sistemas com java"
      ]
    },
    {
      "title": "Java Campus: In 7 Wochen zum Java Entwickler",
      "url": "https://www.udemy.com/course/java-campus/",
      "bio": "Das komplette System zum Java Entwickler: Mit 7 Wochen Challenges, ChatGPT & Freelancing zum Java Programmierer",
      "objectives": [
        "7 Herausfordernde Projekte um dich in 7 Wochen zum Java Entwickler zu machen",
        "Java-Grundlagen von Datentypen bis zu Schleifen",
        "Entdecke die faszinierende Welt der Künstlichen Intelligenz in der Softwareentwicklung",
        "Objektorientierte Programmierung mit Klassen und Vererbung",
        "Entwickeln von Java-Anwendungen mit grafischen Benutzeroberflächen",
        "Arbeiten mit Datenstrukturen wie Arrays und HashMaps",
        "Implementieren von Schnittstellen und Generics",
        "Fehlerbehandlung und Debugging in Java",
        "Praktische Projekte wie Trinkgeldrechner und Kontaktbuch",
        "Rekursive Zeichnungen und Fraktale erstellen",
        "Java Swing für GUI-Entwicklung",
        "Die Fähigkeit, eigenständig Java-Anwendungen zu erstellen"
      ],
      "course_content": {
        "Vorbereitung": [
          "Wie du mit diesen Kurs am besten nutzt",
          "Wichtige Information bevor du startest.",
          "Vorbereitungen Windows",
          "Einführung in unseren Editor IntelliJ IDEA",
          "Dein Dozent Fynn"
        ],
        "WOCHE #1: Trinkgeldrechner": [
          "INTRO WOCHE #1: Trinkgeldrechner",
          "Datentyp Boolean, Operatoren",
          "Übung zu Variablen des Typs Boolean und des \"Oder\"- Operators",
          "If/Else Bedingungen, Gleichheitsoperator",
          "Integer und Float",
          "Quiz zu Integer und Float",
          "Methoden - Teil 1: Grundlagen & Methodenparameter",
          "Übung zu Methoden Teil 1",
          "Methoden - Teil 2: Rückgabewerte",
          "Datentyp String, Implizite & Explizite Umwandlung",
          "Praxisprojekt: Trinkgeldrechner"
        ],
        "WOCHE #2: Magic 8 Ball": [
          "INTRO WOCHE #2: Magic 8 Ball",
          "Arrays - Teil 1: Grundlagen",
          "Übung zu Arrays",
          "Arrays - Teil 2: Musterlösung Übung 1",
          "For-Schleife & Neue Operatoren - Teil 1: Grundlagen",
          "Übung zu For-Schleifen",
          "For-Schleife & Neue Operatoren - Teil 2: Musterlösung Übung 1",
          "Übung zur Kombination von Arrays und For-Schleifen",
          "For-Schleife & Neue Operatoren - Teil 3: Musterlösung Übung 2",
          "Fehlerbehandlung",
          "While-Schleifen - Teil 1: Grundlagen",
          "Übung zu While-Schleifen",
          "While-Schleifen - Teil 2: Musterlösung Übung 1",
          "JOptionPane & Java Mathe Bibliothek - Teil 1: Grundlagen",
          "Abschließende Übung zu Abschnitt 2",
          "JOptionPane & Java Mathe Bibliothek - Teil 2: Musterlösung Übung 1",
          "Praxisprojekt: Magic 8 Ball - Teil 1",
          "Praxisübung zur Implementation des Einlesens einer Ganzzahl",
          "Praxisprojekt: Magic 8 Ball - Teil 2",
          "Praxisübung zur Implementation des Einlesens der Antwortmöglichkeiten",
          "Praxisprojekt: Magic 8 Ball - Teil 3",
          "Praxisübung zur Implementation von beschränkten Zufallszahlen",
          "Praxisprojekt: Magic 8 Ball - Teil 4",
          "Praxisübung zur Implementation des Übrigen Projekts",
          "Praxisprojekt: Magic 8 Ball - Teil 5"
        ],
        "WOCHE #3: Kontaktbuch": [
          "INTRO WOCHE #3: Kontaktbuch",
          "Klasen & Objekte - Teil 1: Grundlagen",
          "Übung zur Erstellung von Objekten",
          "Klassen & Objekte - Teil 2: Musterlösung Übung 1 & Einführung Konstruktor",
          "Übung zur Erstellung von Klassen",
          "Klassen & Objekte - Teil 3: Musterlösung Übung 2",
          "Static Schlüsselwort - Teil 1: Grundlagen",
          "Übung zur Verwendung des Static Schlüsselworts",
          "Static Schlüsselwort - Teil 2: Musterlösung Übung 1",
          "Public/Private Schlüsselwort - Teil 1: Grundlagen",
          "Übung zur Verwendung der Public/Private Schlüsselwörter",
          "Public/Private Schlüsselwort - Teil 2: Musterlösung Übung 1",
          "Datentyp Character - Teil 1: Grundlagen",
          "Programmierübung zur Umwandlung zwischen Character und Dezimal",
          "Datentyp Character - Teil 2: Musterlösung Übung 1",
          "Dateiverwaltung",
          "Kontaktbuch - Teil 1",
          "Praxisaufgabe 1: Projekt",
          "Kontaktbuch - Teil 2",
          "Praxisaufgabe 2: Projekt",
          "Kontaktbuch - Teil 3",
          "Praxisaufgabe 3: Projekt",
          "Kontaktbuch - Teil 4",
          "Praxisaufgabe 4: Projekt",
          "Kontaktbuch - Teil 5",
          "Praxisaufgabe 5: Projekt",
          "Kontaktbuch - Teil 6",
          "Praxisaufgabe 6: Projekt",
          "Kontaktbuch - Teil 7",
          "Praxisaufgabe 7: Projekt",
          "Kontaktbuch - Teil 8",
          "Praxisaufgabe 8: Projekt",
          "Kontaktbuch - Teil 9",
          "Praxisaufgabe 9: Projekt",
          "Kontaktbuch - Teil 10",
          "Praxisaufgabe 10: Projekt",
          "Kontaktbuch - Teil 11",
          "Praxisaufgabe 11: Projekt",
          "Kontaktbuch - Teil 12",
          "Abschnitt 3 - Zusammenfassung"
        ],
        "WOCHE #4: ToDo-Liste": [
          "INTRO WOCHE #4: ToDo-Liste",
          "Einführung/Definition von Fachbegriffen",
          "\"Primitiv\"-Variablen vs Referenzvariablen - Teil 1",
          "Übung zu Referenzvariablen",
          "\"Primitiv\"-Variablen vs Referenzvariablen - Teil 2",
          "Vererbung - Teil 1",
          "Übung zur Vererbung",
          "Vererbung - Teil 2",
          "Vererbung - Teil 3",
          "Übung zum Überschreiben von Methoden",
          "Vererbung - Teil 4",
          "Vererbung - Teil 5",
          "Abschließende Übung zum Thema Vererbung",
          "Vererbung - Teil 6",
          "Java Swing - Teil 1: Grundlagen",
          "Praxisübung 1: Java Swing",
          "Java Swing - Teil 2: Musterlösung Übung 1",
          "Java Swing - Teil 3: Erstellen & Hinzufügen von Komponenten",
          "Praxisübung 2: Java Swing",
          "Java Swing - Teil 4: Musterlösung Übung 2",
          "Java Swing - Teil 5: Einführung LayoutManager",
          "Praxisübung 3: Java Swing",
          "Java Swing - Teil 6: Musterlösung Übung 3",
          "Java Swing - Teil 7: Einführung JPanel",
          "Praxisübung 4: Java Swing",
          "Java Swing - Teil 8: Musterlösung Übung 4",
          "ArrayListen & Wrapper Klassen - Teil 1",
          "Praxisübung 1: ArrayListen & Wrapper Klassen",
          "ArrayListen & Wrapper Klassen - Teil 2",
          "Datum & Uhrzeit mithilfe von LocalDateTime",
          "ToDo App - Teil 1",
          "Praxisaufgabe 1: Projekt",
          "ToDo App - Teil 2",
          "Praxisaufgabe 2: Projekt",
          "ToDo App - Teil 3",
          "Praxisaufgabe 3: Projekt",
          "ToDo App - Teil 4",
          "ToDo App - Teil 5",
          "ToDo App - Teil 6",
          "Praxisaufgabe 4: Projekt",
          "ToDo App - Teil 7",
          "ToDo App - Teil 8",
          "Praxisaufgabe 5: Projekt",
          "ToDoApp - Teil 9",
          "Praxisaufgabe 6: Projekt",
          "ToDo App - Teil 10",
          "ToDo App - Teil 11",
          "Praxisaufgabe 7: Projekt",
          "ToDo App - Teil 12",
          "Praxisaufgabe 8: Projekt",
          "ToDo App - Teil 13",
          "ToDo App - Teil 14",
          "Praxisaufgabe 9: Projekt",
          "ToDo App - Teil 15"
        ],
        "WOCHE #5: Währungsrechner": [
          "INTRO WOCHE #5: Währungsrechner",
          "Final Schlüsselwort - Teil 1: Grundlagen",
          "Praxisübung 1: Final Schlüsselwort",
          "Final Schlüsselwort - Teil 2: Musterlösung Übung 1 & Referenz vs. Primitiv",
          "Interfaces - Teil 1: Grundlagen",
          "Praxisübung 1: Interfaces",
          "Interfaces - Teil 2: Musterlösung Übung 1",
          "Praxisübung 2: Interfaces (Extra)",
          "Interfaces - Teil 3: Musterlösung Übung 2",
          "Interfaces - Teil 4: Instanziierung von Interfaces",
          "Praxisübung 3: Interfaces",
          "Interfaces - Teil 5: Musterlösung Übung 3",
          "Interfaces - Teil 6: Funktionale Interfaces",
          "Praxisübung 4: Interfaces",
          "Interfaces - Teil 7: Musterlösung Übung 4",
          "Exkurs: Anonyme Klassen",
          "Java Swing Neue Komponenten",
          "Modulo Operator - Teil 1",
          "Praxisübung 1: Modulo Operator",
          "Modulo Operator - Teil 2",
          "Schlüssel-Wert Datenstrukturen - Teil 1",
          "Praxisübung 1: Schlüssel-Wert Datenstrukturen",
          "Schlüssel-Wert Datenstrukturen - Teil 2",
          "HashMap - Teil 1: Grundlagen",
          "HashMap - Teil 2: Exkurs HashCode",
          "Rest-APIs - Teil 1: Grundlagen",
          "Rest-APIs - Teil 2: Code Beispiel",
          "Währungsrechner - Teil 1",
          "Praxisaufgabe 1: Projekt",
          "Währungsrechner - Teil 2",
          "Praxisaufgabe 2: Projekt",
          "Währungsrechner - Teil 4",
          "Währungsrechner - Teil 5",
          "Praxisaufgabe 3: Projekt",
          "Währungsrechner - Teil 6",
          "Praxisaufgabe 4: Projekt",
          "Währungsrechner - Teil 7",
          "Praxisaufgabe 5: Projekt",
          "Währungsrechner - Teil 8",
          "Praxisaufgabe 6: Projekt",
          "Währungsrechner - Teil 9",
          "Praxisaufgabe 7: Projekt",
          "Währungsrechner - Teil 10",
          "Währungsrechner - Teil 11",
          "Praxisaufgabe 8: Projekt",
          "Währungsrechner - Teil 12",
          "Währungsrechner - Zusammenfassung"
        ],
        "WOCHE #6: Rekursive Zeichnungen & Fraktale": [
          "INTRO WOCHE #6: Rekursive Zeichnungen & Fraktale",
          "Generics - Teil 1: Grundlagen",
          "Generics - Teil 2: Codebeispiel",
          "Praxisübung 1: Generics",
          "Generics - Teil 3: Musterlösung Übung 1",
          "Generics - Teil 4: Generische Methoden",
          "Generics - Teil 5: Codebeispiel",
          "Praxisübung 2: Generics",
          "Generics - Teil 6: Musterlösung Übung 2",
          "Generics - Teil 7: Generische Klassen",
          "Generics - Teil 8: Codebeispiel",
          "Praxisübung 3: Generics",
          "Generics - Teil 9: Musterlösung Übung 3",
          "[INTRO WRONG] Rekursion - Teil 1: Grundlagen",
          "Praxisübung 1: Rekursion",
          "Rekursion - Teil 2: Musterlösung Übung 1",
          "Praxisübung 2: Rekursion",
          "Rekursion - Teil 3: Musterlösung Übung 2",
          "Rekursion - Teil 4: Dynamic Programming",
          "Praxisübung 3: Rekursion",
          "Rekursion - Teil 5: Musterlösung Übung 3",
          "Rekursion - Teil 6: Dynamic Programming in Praxis",
          "Praxisübung 4: Rekursion",
          "Rekursion - Teil 7: Musterlösung Übung 4",
          "Rekursion - Teil 8: Iteration vs. Rekursion",
          "Praxisübung 5: Rekursion",
          "Rekursion - Teil 9: Musterlösung Übung 5",
          "Java Swing Listener",
          "Java Swing Graphics",
          "Praxisübung 1: Java Swing Listener & Graphics",
          "Musterlösung Übung Java Swing Listener & Graphics",
          "Java Swing Graphics2D",
          "Rekursive Zeichnungen & Fraktale - Teil 1",
          "Praxisaufgabe 1: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 2",
          "Praxisaufgabe 2: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 3",
          "Praxisaufgabe 3: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 4",
          "Praxisaufgabe 4: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 5",
          "Praxisaufgabe 5: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 6",
          "Praxisaufgabe 6: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 7",
          "Praxisaufgabe 7: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 8",
          "Praxisaufgabe 8: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 9",
          "Praxisaufgabe 9: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 10",
          "Praxisaufgabe 10: Projekt",
          "Rekursive Zeichnungen & Fraktale - Teil 11"
        ],
        "WOCHE #7: Schachspiel mit Computergegner": [
          "INTRO WOCHE #7: Schachspiel mit Computergegner",
          "Factory Pattern - Teil 1: Grundlagen",
          "Factory Pattern - Teil 2: Musterlösung Übung 1",
          "Prädikate - Teil 1: Grundlagen",
          "Prädikate - Teil 2: Musterlösung Übung 1",
          "Abstrakte Klasse - Teil 1: Grundlagen",
          "Weitere Theorielektionen folgen",
          "Schachspiel mit Computergegner - Teil 1: Projektbeginn",
          "Schachspiel mit Computergegner - Teil 2: Erstellen des Fensters",
          "Schachspiel mit Computergegner - Teil 3: Zeichnen des Schachbretts",
          "Schachspiel mit Computergegner - Teil 4: Datenstruktur für Schachfiguren",
          "Schachspiel mit Computergegner - Teil 5: Factory Klasse für Schachfiguren",
          "Schachspiel mit Computergegner - Teil 6: Anzeigen der Schachfiguren",
          "Schachspiel mit Computergegner - Teil 7: Markieren von Feldern und erste Züge",
          "Schachspiel mit Computergegner - Teil 8: TriPredicate und Erweiterung PieceType",
          "Schachspiel mit Computergegner - Teil 9: Überprüfung der Züge übriger Figuren",
          "Schachspiel mit Computergegner - Teil 10: Implementation der isMoveLegal Methode",
          "Weitere Praxislektionen folgen"
        ],
        "Java & KI: Softwareentwicklung und künstliche Intelligenz": [
          "INTRO: Java &KI",
          "Code Generierung und Verständnis",
          "Optimierung und Verbesserung von Quellcode",
          "Übersetzung zwischen Programmiersprachen und Pseudocode",
          "Erstellen von Datensätzen und automatisierte Verarbeitung",
          "Dokumentieren und Kommentieren von Quellcode"
        ],
        "Als Java Entwickler online Geld verdienen": [
          "INTRO: Online Geld verdienen als Java Entwickler",
          "Fiverr: Alle Grundlagen",
          "Fiverr: Profil erstellen und optimieren",
          "Fiverr: Verkaufsstarken Gig erstellen",
          "UpWork: Alle Grundlagen",
          "UpWork: Auf Aufträge bewerben"
        ]
      },
      "requirements": [
        "Es sind keine Vorkenntnisse notwendig! Du kannst als Anfänger in diesen Kurs starten."
      ],
      "description": "Du möchtest Programmieren lernen und dich zum Java Entwickler ausbilden lassen?\nDann ist dieser Kurs genau das Richtige für Dich!\n\n\nHast du dich schonmal gefragt wie es wäre\ndein eigener Boss zu sein?\naufzustehen wann du möchtest?\nvon Zuhause aus zu arbeiten?\nrichtig gut bezahlt zu werden?\n\n\nAll das ist möglich im Leben eines Java Entwicklers. Und mit diesem Kurs bekommst du die vollständige Ausbildung dazu.\nVorbereitung: In diesem Abschnitt bereiten wir uns auf den Kurs vor. Du wirst lernen, wie du deine Entwicklungsumgebung unter Windows einrichtest und dich mit dem mächtigen Java-Editor IntelliJ IDEA vertraut machst. Dies ist der perfekte Start, um in die Welt der Java-Entwicklung einzutauchen.\nWOCHE 1 - Trinkgeldrechner: In der ersten Woche unseres Kurses tauchen wir direkt in die Programmierung ein. Du erhältst eine Projektvorschau und lernst die grundlegenden Datentypen wie Boolean, Operatoren, Integer und Float kennen. Wir werden uns auch mit If/Else-Bedingungen und Methoden vertraut machen. Am Ende dieser Woche wirst du in der Lage sein, deinen eigenen Trinkgeldrechner zu erstellen, der eine praktische Anwendung für dein neues Wissen darstellt.\nWOCHE 2 - Magic 8 Ball: In Woche 2 geht es darum, mehr über Arrays, Schleifen (wie For und While) und Fehlerbehandlung zu lernen. Du wirst das Magic 8 Ball-Projekt durchführen, bei dem du eine spannende Anwendung entwickelst, die zufällige Antworten auf Fragen gibt. Dieser Abschnitt wird deine Fähigkeiten im Umgang mit Datenstrukturen und Schleifen verbessern.\nWOCHE 3 - Kontaktbuch: Nun wird es anspruchsvoller. In Woche 3 wirst du Klassen und Objekte kennenlernen, die wichtige Konzepte in der objektorientierten Programmierung sind. Du wirst verstehen, wie Klassen erstellt und Objekte instanziiert werden. Dies wird dir bei der Entwicklung eines Kontaktbuchs helfen, das Daten in einer strukturierten Form speichert.\nWOCHE 4 - ToDo-Liste: In der vierten Woche vertiefen wir dein Verständnis für Vererbung und Java Swing, einer Bibliothek zur Erstellung grafischer Benutzeroberflächen. Du wirst eine ToDo-Listen-Anwendung entwickeln, die deine Fähigkeiten im Umgang mit grafischen Benutzeroberflächen und Vererbung weiter ausbaut.\nWOCHE 5 - Währungsrechner: Die fünfte Woche wird dich in die Welt der Generics, Interfaces und Datenstrukturen einführen. Du wirst auch Rest-APIs und die Arbeit mit Schlüssel-Wert-Datenstrukturen wie HashMap kennenlernen. Am Ende der Woche wirst du in der Lage sein, einen Währungsrechner zu erstellen, der verschiedene Währungen umrechnet.\nWOCHE 6 - Rekursive Zeichnungen & Fraktale: In der letzten Woche unseres Kurses wirst du fortgeschrittene Konzepte wie Generics und Rekursion vertiefen. Du wirst lernen, wie du komplexe, rekursive Zeichnungen und Fraktale erstellst. Dies ist der Höhepunkt deiner Ausbildung und ermöglicht es dir, faszinierende visuelle Kunstwerke in Java zu erstellen.\nWOCHE 7\n\n\nEXTRAS:\nJava und KI - Softwareentwicklung mit Chat GPT: Mach dich bereit für eine aufregende Erweiterung deiner Fähigkeiten. Wir zeigen dir, wie du künstliche Intelligenz in deine Softwareprojekte einbeziehen kannst. Du wirst praktische Anwendungsbeispiele mit Chat GPT kennenlernen und sehen, wie KI die Entwicklungslandschaft verändert.\nOnline Geld verdienen als Java Entwickler: Da wir wissen, dass du das ganze nicht nur zum Spaß machst, haben wir einen ganzen Abschnitt dem Thema \"Online Geld verdienen als Java Entwickler\" gewidmet. In diesem Abschnitt zeigen wir dir, wie du als Java Entwickler online Geld verdienen kannst. Wir führen dich durch Plattformen wie Fiverr und Upwork, wo du dein Können in echte Projekte umsetzen kannst.\n\n\nDu bekommst sofortigen Zugriff auf:\nÜber 20 Stunden Java Campus\nZugang zur Community. Austausch mit allen Kursmitgliedern\nSupport von Java Entwickler Fynn\nLebenslanger Zugriff auf den Kurs und alle zukünftigen Updates\n\n\nUdemy Zufriedenheitsgarantie\nUdemy hat eine 30 Tage 100% Geld zurück Garantie. Wenn Du also doch nicht zufrieden mit dem Kauf bist, bekommst du das gesamte Geld sofort zurück!\n\n\nSchreibe dich jetzt in den Kurs ein und werde innerhalb kürzester Zeit zum Java Entwickler!\n\n\nWir freuen uns schon Dich in der ersten Lektion begrüßen zu dürfen!\nFynn & Marius",
      "target_audience": [
        "Anfänger, die mit einem vollständigen Fundament starten möchten",
        "Personen, die bereits Erfahrung in der Java Programmierung haben und ihre Fähigkeiten ausdehnen möchten"
      ]
    },
    {
      "title": "Kurs Kotlin + porównanie JAVA vs KOTLIN & quizy&zadania",
      "url": "https://www.udemy.com/course/bojarski-kurs-kotlin/",
      "bio": "Nauczysz się programować od podstaw w Kotlinie oraz porównamy, jak to było w Javie, a jak jest w Kotlinie ;)",
      "objectives": [
        "Poznasz tajniki programowania w Kotlinie",
        "Poznasz język programowania, który jest wykorzystywany np. w aplikacjach mobilnych na Androida",
        "Poznasz różnice między Kotlinem a Javą",
        "Poznasz jak łączyć kod kotlinowy i javowy"
      ],
      "course_content": {
        "Wstęp": [
          "przywitanie",
          "instalacja środowiska",
          "utworzenie projektu",
          "pierwszy program",
          "komentarze",
          "wypisywanie na ekran",
          "wczytywanie z klawiatury",
          "porządkowanie projektu",
          "Quiz rozgrzewkowy"
        ],
        "Zmienne i typy": [
          "zmienne",
          "typy proste",
          "konwertowanie",
          "var i val",
          "null i nullable?",
          "non-null!!"
        ],
        "Zmienne i typy - quiz i zadania": [
          "treść zadań (zmienne i typy)",
          "zadanie 1 (zmienne i typy)",
          "zadanie 2 (zmienne i typy)",
          "zadanie 3 (zmienne i typy)",
          "Quiz (zmienne i typy)"
        ],
        "Operatory": [
          "relacyjne",
          "logiczne",
          "arytmetyczne"
        ],
        "Operatory - quiz i zadania": [
          "treść zadań (operatory)",
          "zadanie 1 (operatory)",
          "zadanie 2 (operatory)",
          "zadanie 3 (operatory)",
          "Quiz (operatory)"
        ],
        "Tablice": [
          "jednowymiarowe",
          "dwuwymiarowe"
        ],
        "Instrukcje warunkowe": [
          "if",
          "when",
          "elvis"
        ],
        "Instrukcje warunkowe - quiz i zadania": [
          "treść zadań (instrukcje warunkowe)",
          "zadanie 1 (instrukcje warunkowe)",
          "zadanie 2 (instrukcje warunkowe)",
          "zadanie 3 (instrukcje warunkowe)",
          "Quiz (instrukcje warunkowe)"
        ],
        "Pętle": [
          "for",
          "while",
          "continue i break",
          "tablica i pętla"
        ],
        "Pętle - quiz i zadania": [
          "treść zadań (pętle)",
          "zadanie 1 (pętle)",
          "zadanie 2 (pętle)",
          "zadanie 3 (pętle)",
          "Quiz (pętle)"
        ]
      },
      "requirements": [
        "Uczestnik powinien znać podstawy z Javy."
      ],
      "description": "Znasz Javę i chcesz rozszerzyć swoją wiedzę o coraz popularniejszy język programowania, którym staje się Kotlin?\nChcesz zobaczyć, jak Kotlin w ciekawy sposób rozwiązuje pewne bolączki, które są w Javie?\nA może zamierzasz rozpocząć pisanie aplikacji mobilnych na Androida?\nZatem zapraszam Ciebie do mojego kursu, podczas którego nauczysz się programować w Kotlinie. Porównamy pewne rozwiązania do Javy oraz wykonasz krok przybliżający do programowania np. aplikacji mobilnych na Androida. Sam Google wspiera i promuje wykorzystywanie tego języka.\n\nPoznasz:\n- składnie języka Kotlin\n- zmienne, operatory, tablice\n- instrukcje warunkowe, pętle\n- typy klas, które były w Javie i te, które zostały dodane w Kotlinie\n- udogodnienia w Kotlinie i czym nas wpiera\n- wykorzystywanie w Kotlinie istniejącego już kodu javowego\n- oraz te rzeczy, które dostępne są tylko w Kotlinie\nWraz z przerabianym materiałem oprócz zadań są dostępne także quizy, które weryfikują nabywaną przez Ciebie wiedzę oraz pomagają ją utrwalić.\nPoza tym ucząc się składni Kotlina, ułatwi Ci to późniejsze rozumienie innych języków programowania, czy też ich szybszą naukę, gdyż w Kotlinie znajdują się także zapożyczone najlepsze rozwiązania z innych języków.\n\n\nCytując tekst z oficjalnej strony: \"A modern programming language that makes developers happier.\" ,\nwięc zapraszam Ciebie do poznania Kotlina, który powoduje szczęście wśród programistów, z czym również się zgadzam! ;)",
      "target_audience": [
        "Osoba, która chce zgłębić tajniki w Kotlinie",
        "Osoba, która programowała w Javie i chce poznać kolejny język programowania",
        "Osoba, która przygotowuje się do programowania aplikacji mobilnych na Androida"
      ]
    },
    {
      "title": "ColdFusion 11 Fundamental",
      "url": "https://www.udemy.com/course/coldfusion-11-fundamental/",
      "bio": "Aprenda a desenvolver websites dinâmicos de uma forma rápida e eficaz.",
      "objectives": [
        "Instalar o servidor ColdFusion.",
        "Conceitos fundamentais da linguagem.",
        "Criar loops e ações condicionais.",
        "Formulários e Links com parâmetros."
      ],
      "course_content": {
        "Unidade 01 - Apresentação do curso": [
          "Apresentação do curso",
          "Por que escolher o ColdFusion 11?",
          "Recursos Geniais",
          "Vantagens e desvantagens"
        ],
        "Unidade 02 - Instalação do ColdFusion 11": [
          "Instalar o ColdFusion 11 Server",
          "Iniciar o serviço"
        ],
        "Unidade 03 - Escolher a IDE para trabalhar": [
          "Apresentando o ColdFusion Builder",
          "Apresentando o Dreamweaver",
          "Apresentando o Brackets"
        ],
        "Unidade 04 - Fundamentos de CFML": [
          "DOWNLOAD - Conhecendo os arquivos fontes",
          "Criar variáveis",
          "Como mostrar as variáveis no navegador",
          "Funções de String",
          "Criar uma lista",
          "Criar um array",
          "Array de duas dimensões",
          "Criar um structure",
          "Criar um Array de Structure",
          "Comentar seu código"
        ],
        "Unidade 05 - Ações Condicionais": [
          "Condição IF",
          "Condição ELSE",
          "Operadores de comparação",
          "Múltiplas expressões IF",
          "Criar um ELSE IF",
          "Criar um Switch-Case"
        ],
        "Unidade 06 - Loops": [
          "Aplicar um CFLOOP",
          "Aplicar um CFLOOP Array"
        ],
        "Unidade 07 - Trabalhar com Data": [
          "Mostrar e Formatar uma data em ColdFusion",
          "Mostrar data em português",
          "Mostrar data completa",
          "Calculando diferenças entre dias",
          "Adicionar tempo a uma data",
          "Como formatar números",
          "Formatar números",
          "Como formatar moeda (R$) usando ColdFusion"
        ],
        "Unidade 08 - Criar links com parâmetros": [
          "Criar links com parâmetros",
          "Criar links com mais de um parâmetro",
          "Como receber parâmetros de URL",
          "Como usar o URLEncodedFormat()"
        ],
        "Unidade 09 - Trabalhando com formulários": [
          "Como enviar dados por POST",
          "Como receber dados enviados por Formulário"
        ]
      },
      "requirements": [
        "Noções básicas de HTML5."
      ],
      "description": "** Aprenda conosco! Temos mais de 300 mil alunos, em 100 países, inscritos em todos os nossos cursos. **\nEste curso é composta por 41 aulas.\n\nO curso é bem estruturado para você aprender de forma objetiva tudo o que precisa para impactar pessoas e se destacar.\nO curso de ColdFusion 11 Fundamental vai lhe ensinar como desenvolver websites dinâmicos, com acesso à banco de dados de uma forma rápida e eficaz. A linguagem ColdFusion é baseada em tags tal como HTML5, a curva de aprendizagem fica bastante acelerada.\n\n\nApresentação do curso.\nInstalação do ColdFusion 11\nEscolher a IDE para trabalhar.\nFundamentos de CFML.\nAções Condicionais.\nLoops.\nTrabalhar com Data.\nCriar links com parâmetros.\nTrabalhando com formulários.\nAo término deste curso, você vai aprender como instalar o servidor, como iniciar o serviço, conceitos básicos da linguagem, como: Criar variáveis, formatar datas, criar loops, ações condicionais, etc.\n\n\nRespostas de nossos alunos em nossos cursos após centenas de avaliações:\nVocê está obtendo informações importantes? -- Resposta: 100% Sim\nAs explicações dos conceitos são claras? -- Resposta: 100% Sim.\nA apresentação do instrutor é cativante? -- Resposta: 100% Sim.\nO curso está atendendo a suas expectativas? -- Resposta: 100% Sim.\nO instrutor entende do assunto? -- Resposta: 100% Sim.\nO curso contém um conjunto completo para seu aprendizado.\nVídeo-aulas.\nSuporte para tirar as suas dúvidas dos exercícios do curso.\nHá algum requisito ou pré-requisito para o curso?\nConhecer fundamentos de HTML e CSS.\nPara quem é este curso:\nProgramador e estudantes e profissionais de computação.",
      "target_audience": [
        "Estudantes e profissionais de computação."
      ]
    },
    {
      "title": "Java e Orientação a Objetos para Iniciantes",
      "url": "https://www.udemy.com/course/java-orientacao-a-objetos/",
      "bio": "Aprenda de uma vez por todas esse paradigma que assusta até os programadores mais experientes.",
      "objectives": [
        "Desenvolver programas utilizando Java",
        "Programar usando Orientação a Objetos"
      ],
      "course_content": {},
      "requirements": [
        "O aluno deverá saber o básico de lógica de programação e algoritmos.",
        "O aluno deverá possuir disponibilidade para instalar programas em seu computador (ex: Java Development Kit)"
      ],
      "description": "Curso atualizado em Janeiro de 2016!\nAprenda Orientação a Objetos de uma forma fácil e rápida. Você conhece Orientação a Objetos na vida real, agora iremos transformar esse conhecimento em Orientação a Objetos na programação.\nUsaremos Java como ferramenta de aprendizado.\nFazendo este curso, você terá condições de programar orientado a objetos em qualquer linguagem que usa esse paradigma. Mas, se você não conhece Java, poderá aproveitar para aprender ela no processo.\nHistórico do Java;\nObjetos na vida real;\nObjetos em Java;\nClasses, Métodos e Atributos;\nHerança, Classes Abstratas, Interfaces;\nModificadores de Acesso;\nPolimorfismo;\nExceções.\nVocê está preparado para o mercado de trabalho?\nO mercado está aquecido como nunca. Nós, da TI, somos disputados pelas empresas. Mas, sem um sólido conhecimento de programação, você não conseguirá colocar na prática todo o seu potencial.\nTalvez você não pretenda trabalhar com Java. Entretanto, ela é a linguagem de programação mais popular do mercado e conhecendo-a você conseguirá aprender outras tecnologias de forma mais simplificada.\nCom Orientação a Objetos, você programa na linguagem que quiser!\nQual linguagem você quer trabalhar? Python, Rails, PHP, ou até mesmo Javascript? Todas, sem exceção, são linguagens orientadas a objetos. Não se limite ao básico, desenvolva software de forma elegante e de fácil manutenção.\nEste curso lhe guiará através do desenvolvimento de um software simples, porém completo. Entenderemos o básico, escreveremos de forma simples e transformaremos em um programa verdadeiramente OO. Desta forma, se você for programador e souber alguma linguagem não orientada a objetos a transição será bastante fácil.\nMuitos exercícios estarão disponíveis. A cada novo conceito, exercícios lhe darão a segurança de que cada passo será sólido em direção ao aprendizado. Subiremos degrau por degrau, e tenho certeza de que esses serão apenas o primeiros passos rumo ao seu sucesso como programador!",
      "target_audience": [
        "Este curso é destinado a alunos que já possuam conhecimento de lógica de programação.",
        "Para alunos de Tecnologia da Informação, Ciências da Computação, Análise de Sistemas e afins.",
        "Para programadores que conheçam o básico de Java ou outra linguagem similar, como PHP, p. ex.",
        "Para programadores experientes que trabalham com linguagens procedurais e desejam aprender Orientação a Objetos de forma rápida e objetiva.",
        "Este curso não se propõem a ensinar todas as características da linguagem Java. Mas sim, apresentar o básico para a aplicação de Orientação a Objetos.",
        "Se você quer aprender (ou precisa) aprender rapidamente Orientação a Objetos, faça este curso."
      ]
    },
    {
      "title": "Python para DevOps",
      "url": "https://www.udemy.com/course/python-para-devops/",
      "bio": "Aprenda de forma simples e objetiva a base de Python, e aplique em projetos de automação reais dentro do mundo de DevOps",
      "objectives": [
        "Entender a diferença de linguagem interpretada para linguagem compilada",
        "Utilizar o shebang no desenvolvimento de scripts",
        "Compreender conceitos core como funções, variáveis, condicionais, loops",
        "Usar estruturas de dados como dicionários, tuplas, sets, listas, booleans",
        "Conhecer funções avançadas no melhor \"pythonic way\" como list comprehensions, variable unpacking, f-strings",
        "Isolar código por meio de Virtual Environments",
        "Ordenar os imports de acordo com a PEP8",
        "Adicionar diferentes tipos de comentários no código",
        "Tratar erros com o famoso try-except",
        "Separar em funções de forma correta",
        "Adicionar type hints nas funções",
        "Utilizar Docker para desenvolver scripts portáveis",
        "Configurar ambientes de desenvolvimento 100% locais",
        "Utilizar código Python em ambientes de CI como o GitLab",
        "Ler configurações de arquivos YAML no Python",
        "Desenvolver uma CLI com diferentes fluxos de execução baseado em parâmetros",
        "Interagir com cluster Kubernetes via Kubernetes Python SDK",
        "Desenvolver um middleware roteador de alertas",
        "Debug de payloads utilizando o Wireshark"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos em Lógica de Programação",
        "Conhecimentos básicos em Linux e Docker também podem ajudar"
      ],
      "description": "Cansado de procurar treinamentos de Python, e só encontrar conteúdos focados na área de desenvolvimento e com pouca aplicabilidade no mercado de infraestrutura? Aquele curso maçante de 40h que vai te ensinar tanto conteúdo, que no fim, você se confunde para aplicar no seu dia a dia, que é o que realmente importa.\nPensando nisso, eu preparei do zero o curso Python para DevOps.\nAo final deste treinamento, você vai ter uma base sobre Python, conhecer boas práticas para escrever scripts, e ter realizado 3 projetos diferentes que podem ser usados na área de DevOps.\nEu estruturei o curso para ser muito objetivo e com grande entrega de conhecimento, para que você já possa sair aplicando no seu trabalho ou projetos pessoais.\nApós realizar todo o setup do nosso ambiente de desenvolvimento, vamos ter os seguintes módulos:\nPython: O guia da sobrevivência: este primeiro modulo vamos ver o que realmente importa de conteúdos básicos da linguagem, sem perder muito tempo. Aqui é onde geralmente os cursos ficam maçantes, por ser algo chato realmente. Por isso, vamos de aulas curtas e objetivas.\nBoas práticas: vamos explorar diversas boas práticas quando escrevendo ou estruturando um script. Seguindo isso aqui, seu código vai ficar muito mais apresentável e funcional.\nProjeto #1: Freeze Checker: em determinadas épocas do ano, é comum que as empresas entrem no chamado \"freezing\" para não subir código. Nós, como DevOps Engineers, precisamos garantir que isso não aconteça. Nesse projeto, vamos criar um script que será executado na MR do GitLab, verificando as datas de freezing em um arquivo YAML e evitando o merge caso esteja dentro daquela data.\nProjeto #2: CLI para Kubernetes: Command Line Interface \"CLI\" é um tipo de automação muito comum para interagir com algum sistema, e ser possível a mudança de comportamento via parâmetros. Por exemplo \"ls -la\" onde \"ls\" é o comando, e \"-la\" são os parâmetros.\nProjeto #3: Alert Router: outro uso muito comum que são os middlewares (proxy / APIs). Neste projeto, vamos subir uma stack de monitoramento e criar um roteador de alertas customizado para o Discord.\nQual dúvida que você tiver relacionado ao material do treinamento, sinta-se à vontade para comentar nas aulas e eu vou responder assim que possível.\nE aí, pronto para começar essa jornada?",
      "target_audience": [
        "Estudantes da área de T.I",
        "DevOps Engineers",
        "Site Reliability Engineers"
      ]
    },
    {
      "title": "python from zero to hero",
      "url": "https://www.udemy.com/course/pthyon-arabic/",
      "bio": "python from zero to hero",
      "objectives": [
        "استخدام التعليقات",
        "انواع المتغيرات واستخدامها",
        "المدخلات والمخرجات",
        "أنواع البيانات والمعاملات",
        "الجمل الشرطية",
        "ال LOOPS",
        "الاقترانات",
        "التعامل مع التواريخ والارقام",
        "الوراثة | Inheritance",
        "الخصائص والدوال | Attributes and Methods",
        "مقدمة عن البرمجة الكائنية",
        "مقدمة في Scope",
        "مقدمة في Module",
        "مقدمة في Files",
        "مقدمة في synchronous و asynchronous"
      ],
      "course_content": {},
      "requirements": [
        "(بعض المفاهيم المنطقية مثل( و او لا"
      ],
      "description": "كن مبرمجًا بلغة بايثون وتعلم واحدة من أكثر المهارات المطلوبة في سوق العمل في عام 2022\n\n\nهذه هي الدورة التدريبية الأكثر شمولاً في يوديمي ، مع ذلك انها سلسة  ،سواء كنت لم تبرمج من قبل ، أو تعرف بالفعل القواعد الأساسية ، أو تريد التعرف على الميزات المتقدمة لبايثون ، فهذه الدورة مناسبة لك! سنعلمك في هذه الدورة بايثون 3.\n\n\nمع أكثر من 100 محاضرة  ، لم تدخر هذه الدورة التدريبية الشاملة جهدًا! تتضمن هذه الدورة واجبات منزلية بالإضافة إلى 3 مشاريع رئيسية\n\n\nهنا يُطرح سؤالٌ مهمٌ، لماذا يعتبر تعلم لغة البرمجة (بايثون) أمرًا ضروريًا للعمل في مجال علوم البيانات وامن المعلومات والذكاء الصناعي\nيستخدم المطورون والباحثون لغة بايثون في العديد من المجالات، مثل: تطوير التطبيقات، وتدريب نماذج التعلم الآلي والتعلم العميق، ومعالجة اللغات الطبيعية، والتعرف على الصور، وتحليل البيانات ومعالجتها، ولا توجد لغة أخرى حتى الآن أفضل منها في كل ذلك.\nتشير التقارير إلى أن بايثون هي رسميًا لغة البرمجة الأكثر استخدامًا في العالم اليوم، حيث تغلبت على لغة (جافا) ، التي كانت اللغة المفضلة للمطورين في جميع أنحاء العالم لأطول فترة زمنية. ولكن طبيعة لغة بايثون الديناميكية، وتضمنها لمكتبات متعددة مع الميزات المدمجة لكل شيء تقريبًا جعلها الخيار الشائع بين المطورين والباحثين.\n\n\nرح نغطي مجموعة متنوعة من الموضوعات ، بما في ذلك:\n\n\nاستخدام التعليقات\nانواع المتغيرات واستخدامها\nالمدخلات والمخرجات\nأنواع البيانات والمعاملات\nالجمل الشرطية\nال LOOPS\nالاقترانات\nالتعامل مع التواريخ والارقام\nالوراثة | Inheritance\nالخصائص والدوال | Attributes and Methods\nمقدمة عن البرمجة الكائنية\nمقدمة في Scope\nمقدمة في Module\nمقدمة في Files\nمقدمة في synchronous و asynchronous\nواكثر بكثيير\n\n\nستحصل على إمكانية الوصول مدى الحياة إلى أكثر من 100 محاضرة!\n\n\nتأتي هذه الدورة مع ضمان استرداد الأموال لمدة 30 يومًا! إذا لم تكن راضيًا بأي شكل من الأشكال ، فستسترد أموالك. بالإضافة إلى أنك ستستمر في الوصول إلى أجهزة الكمبيوتر المحمولة كشكر لك على تجربة الدورة!\n\n\nماذا تنتظر ! ابدا الان بتعلم بايثون اللغة الافضل عالمياً\n\nـ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ــ ـ ـ\nللحصول على خصم  تواصل معي تلجرام\n@Mahmoud_Qaisiya",
      "target_audience": [
        "طلاب امن المعلومات",
        "طلاب علم البيانات",
        "طلاب الذكاء الصناعي",
        "محبين البرمجة"
      ]
    },
    {
      "title": "Complete Java: Class and Object",
      "url": "https://www.udemy.com/course/understanding-class-and-object-with-java/",
      "bio": "เรียนลัด เข้าใจ Class และ Object ง่าย ๆ ด้วยภาษา Java พบกับการเรียนรู้ รูปแบบใหม่ ที่จะทำให้คุณเข้าใจ ง่ายที่สุด!",
      "objectives": [
        "พัฒนาทักษะในการเขียนโปรแกรมด้วยภาษา Java",
        "เข้าใจเรื่อง Class และ Object ได้อย่างลึกซึ้ง",
        "เข้าใจหลักการเขียนโปรแกรมเชิงออบเจ็กต์",
        "พัฒนาทักษะในการสร้างซอฟต์แวร์อย่างถูกต้อง",
        "มีความรู้มุมมองใหม่ ๆ เกี่ยวกับการพัฒนาซอฟต์แวร์"
      ],
      "course_content": {},
      "requirements": [
        "เครื่องคอมพิวเตอร์ หรือโน้ตบุค",
        "โปรแกรมที่ใช้ในคอร์สทั้งหมด ฟรี!",
        "ความตั้งใจ ในการเรียนรู้"
      ],
      "description": "คุณอยู่ที่นี่ เพราะยังไม่เข้าใจ\nความหมายของ Class และ Object ใช่หรือไม่?\nถ้าตอบว่าใช่! คอร์สนี้เหมาะสำหรับคุณ\nภายในคอร์ส จะปูพื้นฐานสำคัญ\nของการพัฒนาซอฟต์แวร์เชิงออบเจ็กต์ เช่น\nคลาส (class) คืออะไร\nออบเจ็กต์ (object) คืออะไร\nคอนสตรัคเตอร์ (constructor) คืออะไร\nConstructor Overloading คืออะไร\nการซ่อนข้อมูล (Information hiding) คืออะไร\nการห่อหุ้ม (Encapsulation) คืออะไร\nการสืบทอด (Inheritance) คืออะไร\nsuper ทำงานอย่างไร\nOverriding Method ทำงานอย่างไร\nการมีหลายรูปแบบ (Polymorphism) คืออะไร\nฯลฯ\nรวมถึงการทำความเข้าใจเรื่อง Class และ Object\n\nในเชิงลึก ที่มองทะลุไปถึงส่วนของฮาร์ดแวร์ (hardware)\n\n\nและมุมมองที่แตกต่างกันระหว่าง Class และ Object\nที่คุณไม่เคยรู้จากที่ไหนมาก่อน!\n\n\nหรือ! ถ้าคุณยังไม่ทราบว่า Class ที่มีแต่ตัวแปร\nและ Class ที่มีแต่เมธอด ถูกสร้างขึ้นมา\nด้วยเหตุผลอะไร? คลิกที่ Enroll Now ได้เลยค่ะ :)",
      "target_audience": [
        "ผู้ที่ต้องการปูพื้นฐาน ภาษา Java",
        "ผู้ที่ต้องการเข้าใจเรื่อง Class และ Object อย่างลึกซึ้ง",
        "ผู้ที่ต้องการทำความเข้าใจหลักการเขียนโปรแกรมเชิงออบเจ็กต์",
        "ผู้ที่ต้องการมีพื้นฐานการพัฒนาซอฟต์แวร์ที่ถูกต้อง",
        "ผู้ที่ต้องการศึกษาหาความรู้ด้านการพัฒนาซอฟต์แวร์ ด้วยแนวทางใหม่ ๆ"
      ]
    },
    {
      "title": "JavaScript 題目篇 - 新手 JS 地下城",
      "url": "https://www.udemy.com/course/js-underground/",
      "bio": "教會您如何解 JS 題目，並透過線上資源逐步攻略地下城！",
      "objectives": [
        "掌握更多 JS 技巧"
      ],
      "course_content": {
        "介紹": [
          "新手 JS 地下城之歷史淵源",
          "地下攻略規則講解 - 勇者才不看說明書",
          "上傳挑戰者作品的平台方案介紹",
          "推王卡關？試試以下辦法吧！",
          "尋找志同道合的夥伴一起攻略！"
        ],
        "新手 JS 地下城": [
          "1F - 9x9 乘法表",
          "2F - 時鐘",
          "3F - 計算機",
          "4F - 時區",
          "5F - 全台空氣指標儀表板",
          "6F - 60秒算數遊戲",
          "7F - 畫版",
          "8F - 井字遊戲",
          "9F - 抽獎轉盤",
          "10F - Chrome 應用程式 (幹話產生器)",
          "11F - 燈箱效果",
          "12F - 拼圖",
          "13F - 貪吃蛇",
          "14F - 神明求籤",
          "15F - 死亡筆記本"
        ]
      },
      "requirements": [
        "需要對基礎 JS 有足夠的了解",
        "Win 與 Mac 都適用"
      ],
      "description": "六角學院於西元 2019/1/13 徵召超過千位勇者加入百萬年薪遠征團，洧杰校長為了讓大家在踏入旅程前有練功的機會，決定在營地裡打造試煉地下城。\n首位攻略魔王的勇者，將會把殊榮記錄在「前端之碑」上。\n這門課程將會教會你：\n如何尋找適合練功的 JS 題目\n透過學員彼此之間的範例程式碼，讓你對 JS 應用融會貫通\n教你透過社群，尋找適合的練功夥伴\n搜尋網路上的程式範例，尋找自己看得懂的程式碼，並提升自己的 JS 程式脈絡",
      "target_audience": [
        "想對 JavaScript 有更深入了解的學生",
        "想成為網頁設計師、前端工程師的學生",
        "想藉由 JavaScript 成為軟體工程師的開發者"
      ]
    },
    {
      "title": "Curso de SQL Completo Com o Banco de Dados Firebird",
      "url": "https://www.udemy.com/course/curso-de-sql-completo-banco-de-dados-firebird/",
      "bio": "Programador Inciante ou Experiente deve DOMINAR SQL, pois sql está presente em toda parte quando o assunto é programação",
      "objectives": [
        "Dominar a Linguagem SQL",
        "Fazer cadastros, alterações e exclusões de forma segura",
        "O Mais Importante! Fazer Buscas muitas buscas, para que possa usar meus exemplos em seus próprios projetos"
      ],
      "course_content": {
        "Banco de Dados e SQL - Para Iniciantes": [
          "Apresentação",
          "O Que é Banco de Dados e SQL?",
          "Instalar os Programas Necessários",
          "Criar o Banco de Dados Com o Flamerobin",
          "O Que é Uma Tabela e Como Criar Uma?",
          "Inserindo Registros na Tabela",
          "Buscando as Informações na Tabela",
          "Critério Para as Buscas",
          "Alterando Registros na Tabela",
          "Excluindo Registros da Tabela",
          "Remover e Registrar um Banco de Dados no FlameRobin"
        ],
        "Fatores Importantes na Criação de Tabelas": [
          "Tipos de Dados",
          "Ignorar Acentuação na Hora das Buscas",
          "Definir Valor Padrão para os Campos da Sua Tabela",
          "Definir Quais Valores Podem ou Não Entrar",
          "Não Permitir Valores Nulos",
          "Domain O Que é e Como Criar",
          "Gerar ID Sequencial de Forma Automática"
        ],
        "Criando Tabelas Simulação Controle de Estoque": [
          "Tabela PRODUTO",
          "Tabela PESSOA",
          "Criando Tabelas para Endereços",
          "Ligando a Tabela Pessoa com as de Endereços",
          "Criando Tabela COMPRA e Itens da Compra",
          "Criando a Tabela Venda e Itens da Venda",
          "Baixar e Registrar o Banco de Exemplos"
        ],
        "Comandos SQL Feitos para Você": [
          "Função de Contagem e Agrupamento",
          "Unir Informações de Várias Tabelas no Resultado",
          "Como Fazer Somas",
          "Buscar Por Intervalos de Datas ou Números",
          "Buscar Por Grupos de Critérios",
          "Ordenar o Resultado das Buscas",
          "Resultados Sem Repetições",
          "Localizar e Substituir Textos no Resultado da Busca",
          "Letras Maiúsculas ou Minúsculas",
          "Colocar Zeros a Esquerda ou a Direita",
          "Criar Ranking de Produtos Mais Vendidos",
          "Juntar Informações de Várias Colunas em Uma Só",
          "Busca Exata, Iniciando, Terminando ou Contendo",
          "Pegar o Maior ou o Menor Valor de Uma Coluna",
          "Pegar Dia, Mês ou Ano de Campos do Tipo Data",
          "Mostrar o Nome do Mês ao Invés da Data",
          "Total de Produtos Vendidos por Ano Agrupado por Mês",
          "Para Quais Clientes eu Vendi em Tal Mês",
          "Total de Compra em Cada Dia do Mês",
          "Calcular QTD, VL_UNIT, Descontos e Valor Liquido",
          "Impedir a Duplicidade de Registros",
          "Selecionar Pessoas e Seus Endereços",
          "O Que é e Como Criar Índices",
          "Você Tem Alguma Ideia de Busca?"
        ],
        "Conhecendo as Procedures": [
          "O Que é Uma Procedure e Por Que Usa-las?",
          "Meu Modelo de Procedure",
          "Procedure Salvar ou Alterar Recuperando o ID",
          "Procedure Para Pegar Venda Anual Agrupado por Mês",
          "Exemplo 2 de Procedure de Busca"
        ],
        "Conhecendo as Triggers": [
          "O Que é uma Trigger e o Que Dá para Fazer com Ela?",
          "Aumentar Estoque Quando der Entrada no Produto",
          "Dar Baixo no Estoque Quando Vender um Produto",
          "Acertar Estoque Quando Excluir um Produto da Compra ou Venda",
          "Acertar Estoque Quando Alterar um Produto da Compra ou Venda"
        ],
        "Respostas das Dúvidas": [
          "Saber Numeração de Notas Duplicadas (Sugestão do Aluno José Murilo Junior)",
          "Sub Consultas (Sugestão Leonardo Mendes)",
          "Mais Funções de Datas (Autamiro Xavier)"
        ]
      },
      "requirements": [
        "Nenhum Requisito, apenas que o aluno tenha vontade de aprender e estudar"
      ],
      "description": "SQL é o ponto mais importante na vida de qualquer pessoa que quer aprender a programar, seja em qualquer linguagem.\nUma vez que você dominar o SQL, você vai conseguir usar qualquer banco de dados nos seus sistemas.\nAprenda nesse curso o básico e o avançado da linguagem SQL de forma clara e objetiva.\n\n\nNo curso você vai aprender a instalar o FlameRobin que é o programinha que eu uso para trabalhar com o Firebird, instalar também o Firebird que é o Banco de Dados que será usado no curso.\n\n\nSurpreenda seu chefe, gerando os mais diversos tipos de relatórios, nesse curso você vai aprender muita SQL combinado para geração de qualquer busca que você imaginar.\n\n\nVai aprender a:\nCriar um Banco de Dados\nCriar Tabelas\nAdicionar Colunas\nReordenar as Colunas\nExcluir Colunas\nTipos de Dados\nCrud Completo (Insert, Update, Delete e Select)\nUma série de Comandos SQL para Buscas",
      "target_audience": [
        "Iniciantes em SQL que queiram aprender de verdade de forma simples",
        "Quem já conhece SQL e deseja melhorar ainda mais o que já sabe"
      ]
    },
    {
      "title": "Algoritmos de Inteligência Artificial Bioinspirados",
      "url": "https://www.udemy.com/course/algoritmos-de-inteligencia-artificial-bioinspirados/",
      "bio": "Algoritmos genéticos, evolução diferencial, redes neurais, seleção clonal, enxame de partículas e colônia de formigas",
      "objectives": [
        "Entenda a teoria e a prática dos principais algoritmos de inteligência artificiais bioinspirados",
        "Resolva problemas de otimização e classificação do mundo real com os algoritmos bioinspirados",
        "Otimize viagens aéreas em grupo utilizando Algoritmos Genéticos",
        "Crie cardápios personalizados com os nutrientes necessários utilizando Evolução Diferencial",
        "Classifique dígitos escritos a mão com Redes Neurais Artificiais",
        "Adapte anticorpos e antígenos com o algoritmo da Seleção Clonal, aplicado em reconhecimento de dígitos",
        "Otimize o horário de cursos e turmas utilizando Enxame de Partículas",
        "Resolva problemas de menores rotas em grafos com a Otimização por Colônia de Formigas"
      ],
      "course_content": {
        "Introdução": [
          "Boas-vindas e conteúdo do curso",
          "Mais sobre Inteligência Artificial",
          "Recursos para download"
        ],
        "Algoritmos genéticos": [
          "Estudo de caso - calendário de voos",
          "Criação das variáveis",
          "Base de dados de voos",
          "Impressão do calendário",
          "Horas para minutos",
          "Função de custo 1",
          "Função de custo 2",
          "Algoritmo genético - intuição",
          "Parte 1 - mutação",
          "Parte 2 - crossover",
          "Parte 3 - algoritmo completo",
          "Parte 4 - algoritmo completo",
          "Parte 5 - algoritmo completo"
        ],
        "Evolução diferencial": [
          "Introdução ao algoritmo",
          "Estrutura geral do algoritmo",
          "Geração de novos vetores e o processo de evolução",
          "Principais diferenças entre DE e GA",
          "Aplicação: problema da alocação de nutrientes",
          "Parte 1 - vetor solução",
          "Parte 2 - população de soluções",
          "Parte 3 - função de fitness",
          "Parte 4 - seleciona outros três vetores",
          "Parte 5 - mutação",
          "Parte 6 - seleciona melhor vetor",
          "Parte 7 - rodando o algoritmo",
          "Parte 8 - gráfico das soluções"
        ],
        "Redes neurais artificiais": [
          "Fundamentos biológicos",
          "Perceptron de uma camada",
          "Redes multicamada - função soma e ativação",
          "Redes multicamada - cálculo do erro",
          "Descida do gradiente",
          "Cálculo do delta",
          "Ajustes dos pesos com backpropagation",
          "Bias, erro, descida do gradiente estocástica e mais parâmetros",
          "Parte 1 - base de dados de dígitos",
          "Parte 2 - pré-processamento das imagens",
          "Parte 3 - treinamento",
          "Parte 4 - avaliação",
          "Parte 5 - classificação de uma única imagem"
        ],
        "Algoritmo da seleção clonal (CSA)": [
          "Algoritmo da seleção clonal",
          "Estrutura geral do algoritmo",
          "Cálculo do fator de clonagem",
          "Cálculo da taxa de hipermutação",
          "Aplicação - reconhecimento/geração de dígitos",
          "Parte 1 - função anticorpo",
          "Parte 2 - população de anticorpos",
          "Parte 3 - função de fitness",
          "Parte 4 - lista de afinidade dos anticorpos",
          "Parte 5 - seleção dos N melhores anticorpos",
          "Parte 6 - clonagem dos melhores anticorpos",
          "Parte 7 - hipermutação dos anticorpos",
          "Parte 8 - rodando o algoritmo",
          "Parte 9 - gráfico das soluções"
        ],
        "Otimização por enxame de partículas (PSO)": [
          "Comportamento de revoadas, analogia e modelagem básica",
          "Estrutura geral do algoritmo",
          "Geração de partículas e inicialização da população",
          "Seleção da melhor posição individual e melhor posição global",
          "Atualização da posição de cada partícula",
          "Errata",
          "Representação gráfica/vetorial da atualização da posição das partículas",
          "Estudo de caso e problema para aplicação",
          "Parte 1 - função partícula",
          "Parte 2 - função população/enxame",
          "Parte 3 - função de fitness",
          "Parte 4 - função pbest (melhor posição individual)",
          "Parte 5 - função gbest (melhor posição global)",
          "Parte 6 - atualização da velocidade da partícula",
          "Parte 7 - nova posição e nova partícula",
          "Parte 8 - rodando o algoritmo",
          "Parte 9 - gráfico das soluções"
        ],
        "Otimização por colônia de formigas (ACO)": [
          "Forrageamento de alimento por formigas",
          "Forrageamento de comida por formigas: parte 2",
          "Formigas e o problema TSP",
          "Atualização da deposição do feromônio",
          "Probabilidade de escolha das arestas",
          "Exemplo de aplicação",
          "Parte 1 - arestas",
          "Parte 2 - probabilidade de escolha das arestas",
          "Parte 3 - função de escolha de arestas",
          "Parte 4 - função que gera caminho/formiga",
          "Parte 5 - função do comprimento da solução",
          "Parte 6 - atualização dos feromônios",
          "Parte 7 - rodando o algoritmo",
          "Parte 8 - testando com 5 vértices"
        ],
        "Considerações finais": [
          "Considerações finais",
          "AULA BÔNUS"
        ]
      },
      "requirements": [
        "Lógica de programação, bem como estruturas condicionais e de repetição",
        "Programação básica em Python"
      ],
      "description": "A natureza oferece uma vasta gama de inspirações de processos biológicos a serem incorporados na tecnologia e na computação, sendo que alguns desses processos e padrões na natureza inspiram algoritmos utilizados na resolução de problemas do mundo real. Esses algoritmos são chamados de bioinspirados, cuja inspiração na natureza permite a aplicação em vários problemas de otimização e classificação.\nPara levar você até essa área, neste curso você terá uma visão teórica e principalmente prática sobre as principais e mais utilizados algoritmos bioinspirados! Ao final você terá todas as ferramentas necessárias para construir soluções de inteligência artificial que podem ser aplicadas em problemas reais! O curso está dividido em seis partes que abordam algoritmos diferentes aplicados em estudos de caso do mundo real. Veja abaixo os projetos que serão implementados passo a passo:\n\n\nAlgoritmos genéticos (GA): Talvez o algoritmo bioinspirado mais utilizado e conhecido na área de otimização. É baseado no processo de evolução biológica, no qual populações de indivíduos evoluem ao longo das gerações por meio de mutação, seleção, e crossing over; gerando populações com indivíduos melhores. Vamos resolver um problema de agendamento de horário de voos, buscando minimizar o preço das passagens e o tempo que as pessoas ficam esperando no aeroporto\nEvolução diferencial (DE): Um algoritmo que também se inspira no processo de evolução biológica, porém mais adaptado a resolver problemas com valores reais/fracionados. O estudo de caso será a escolha da quantidade de cada alimento (de um conjunto de alimentos) para a criação de cardápios, balanceando corretamente a quantidade de carboidratos, proteínas e gorduras\nRedes neurais (ANN): Classe de algoritmos baseados no funcionamentos dos neurônios biológicos. É uma das técnicas mais modernas e utilizados em inúmeras aplicações do cotidiano, como chatbots, tradutores automáticos, carros autônomos, reconhecimento de voz, dentre várias outras. O estudo de caso será a criação de uma rede neural para a classificação de imagens\nAlgoritmo da Seleção Clonal (CSA): Baseia-se no funcionamento da otimização da resposta de anticorpos contra um antígeno, assemelhando-se ao processo de evolução biológica. Esses conceitos serão utilizados na prática para a identificação de dígitos e geração de dígitos.\nOtimização por Enxame de Partículas (PSO): Um algoritmo de enxame que se baseia no comportamento social de animais, no qual o enxame como um todo tenta encontrar a melhor solução para um problema específico. Vamos considerar o cenário de um curso que precisa ser ofertado para várias turmas e horários diferentes, sendo que o objetivo do algoritmo será encontrar a melhor combinação de horários para obtermos um melhor aproveitando das turmas\nOtimização por Colônia de Formigas (ACO): Algoritmo bioinspirado que se baseia no comportamento forrageador de comida das formigas na busca por alimento. É utilizado em diversos problemas que podem ser representados como grafos, como o famoso estudo de caso do caixeiro viajante, que vamos resolver passo a passo utilizando esta técnica\nCada tipo de problema requer técnicas diferentes para sua solução, portanto, conhecendo a maior parte dos algoritmos bionspirados você saberá quais técnicas utilizar nos mais variados tipos de cenários! Durante o curso, vamos utilizar a linguagem de programação Python e o Google Colab para que você aproveite o curso da melhor maneira possível! São mais de 80 aulas e mais de 9 horas de vídeos!",
      "target_audience": [
        "Pessoas interessadas em conhecer como a natureza pode oferecer inspirações para a área da computação",
        "Pessoas interessadas em algoritmos de inteligência artificial, principalmente os inspirados na Biologia",
        "Desenvolvedores que queiram resolver problemas reais de otimização e classificação",
        "Cientistas de Dados que queiram aumentar o seu portfólio de projetos"
      ]
    },
    {
      "title": "Dart Programming Complete Course in Urdu/Hindi",
      "url": "https://www.udemy.com/course/dart-programming-course-in-urdu-hindi/",
      "bio": "Master the Dart Programming Language from start to finish and be very comfortable to use it for Flutter.",
      "objectives": [
        "Dart Programming Language In-Depth",
        "Dart programming Language Complete Tour: Data types, Lists, Sets, Maps, Functions, Operators, Classes, Control Flow Structure, Loops, Break & Continue, etc",
        "All the basics needed to understand Dart Programming Language to start Flutter",
        "Best practices and tips and tricks for Dart & Flutter"
      ],
      "course_content": {
        "Dart Collections": [
          "Dart online coding Editor",
          "Hello World in Dart",
          "Introduction to Variables in Dart",
          "Dart Variables Practical Guide",
          "Dart variable naming rules",
          "Numbers in Dart, Type Casting and Darth Math Library",
          "Strings in Dart",
          "Lists",
          "Sets in Dart",
          "Maps in Dart",
          "Functions",
          "Operators in Dart",
          "Control flow structure in Dart"
        ]
      },
      "requirements": [
        "There is no Prior programming experience needed to take this course, everything you will learn in this course is from Scratch."
      ],
      "description": "Welcome to the Dart programming fundamentals course in Urdu and Hindi\nProgramming is an extremely useful skill that can be applied to a wide variety of fields. With this course, you will learn the basics of the Dart programming language in Urdu or Hindi. You will also learn how to use Dart libraries and APIs in your code. Dart is a general-purpose language used to build desktop, web, server, and mobile apps with single code base. The Flutter SDK uses Dart to build high-quality apps that run on both iOS and Android. Dart is an open source project that has been adopted by an active community of developers, and has a large number of contributors.\n\nWhy enroll in this course:\nGet comfortable with Dart Programming Language\nWatch hands on Dart Programming Language tutorials\nParticipate in quizzes\nGet access to the Github repository\nBy enrolling in this course you will one hour of free consultation call with me to discuss your problems.\n\n\nWhich topics are covered in this course?\nIntroduction to Dart Programming Language course\nDart basics\nDart Data Types\nNull Safety\nLists in Dart\nSets in Dart\nMaps in Dart\nFunctions Basics to Advanced\nControl flow structure\nClasses basics to advanced\nExceptions & Error Handling\nAsynchronous programming\nStreams\nFutures\nMixings\nEnroll in this course today to get access to the advanced Dart Programming Language course.",
      "target_audience": [
        "This course is for someone who is interested in mastering the Dart Programming Language. Dart Programming Language is used to develop applications using Flutter."
      ]
    },
    {
      "title": "C#でモダンなUIを作る方法：MetroFrameworkを使ってWindowsフォームをオシャレにする",
      "url": "https://www.udemy.com/course/metroframework/",
      "bio": "MetroFrameworkを使ってWindowsフォームをオシャレにする方法を解説しています。 Windowsフォームの知識を使えば簡単にお洒落な画面を作成することができます。MetroFrameworkを使って，お洒落なUIを体感しまし",
      "objectives": [
        "MetroFrameworkのインストール方法",
        "Metroコントロールの一通りの使い方",
        "アプリケーション全体のテーマと色の変更方法",
        "実践的な画面の実装方法"
      ],
      "course_content": {
        "C#のMetroFrameworkを使ってWindowsフォームをオシャレにする方法": [
          "01_はじめに",
          "02_プロジェクトの作成",
          "03_MetroFrameworkのインストールとツールボックスの表示",
          "04_Themeを切り替える方法",
          "05_アプリケーション全体のテーマカラーを変更する方法",
          "06_タイトルの変え方",
          "07_MessageBox各種",
          "08_PanelとTabControl",
          "09_MetroTile",
          "10_MetroButton",
          "11_MetroLink",
          "12_MetroLabel",
          "13_MetroTextBox",
          "14_MetroDateTime",
          "15_MetroProgressBar",
          "16_MetroProgressSpinner",
          "17_TrackBar_ScrollBar",
          "18_MetroCheckBox_MetroToggle",
          "19_MetroRadioButton",
          "20_MetroComboBox",
          "21_MetroContextMenu",
          "22_MetroGrid",
          "23_MetroToolTip",
          "24_MetroUserControl",
          "25_Label例外の対応",
          "26_ログイン画面の作成",
          "27_メニューのレイアウト作成",
          "28_商品マスター画面のレイアウト作成",
          "29_メイン画面のユーザーコントロールを切り替える方法",
          "30_ユーザーコントロールの画面遷移",
          "31_ThemeとStyleの変更機能追加",
          "32_MetroStyleManagerリファクタリング",
          "33_前回値のテーマ色で起動する方法",
          "34_さいごに",
          "ソースコード",
          "補講01_フォントサイズを自由に変える方法",
          "補講02_Login画面に戻ると値が消える不具合対応",
          "補講03_ライセンスに関して（参考）",
          "参考URL",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Visualstudio2019が動作する環境",
        "C#の基本的な実装知識"
      ],
      "description": "こんにちは，ピーコックアンダーソンです。\n今回はMetroFrameworkというものを使って，\nC#のWindowsフォームをとてもお洒落な感じで実装できる方法を解説しています。\n\n\n私もこのMetroFrameworkを使ってからは，\nあまりのお洒落さに，大変気に入っています。\n現状でもWindowsフォームでプログラミングをする\n環境にある人は，このMetroFrameworkを使うことで\n環境そのままでお洒落な画面作りを始めることができます。\n\n\n是非一度お試しください。\n\n\n#01_はじめに\n#02_プロジェクトの作成\n#03_MetroFrameworkのインストールとツールボックスの表示\n#04_Themeを切り替える方法\n#05_アプリケーション全体のテーマカラーを変更する方法\n#06_タイトルの変え方\n#07_MessageBox各種\n#08_PanelとTabControl\n#09_MetroTile\n#10_MetroButton\n#11_MetroLink\n#12_MetroLabel\n#13_MetroTextBox\n#14_MetroDateTime\n#15_MetroProgressBar\n#16_MetroProgressSpinner\n#17_TrackBar_ScrollBar\n#18_MetroCheckBox_MetroToggle\n#19_MetroRadioButton\n#20_MetroComboBox\n#21_MetroContextMenu\n#22_MetroGrid\n#23_MetroToolTip\n#24_MetroUserControl\n#25_Label例外の対応\n#26_ログイン画面の作成\n#27_メニューのレイアウト作成\n#28_商品マスター画面のレイアウト作成\n#29_メイン画面のユーザーコントロールを切り替える方法\n#30_ユーザーコントロールの画面遷移\n#31_ThemeとStyleの変更機能追加\n#32_MetroStyleManagerリファクタリング\n#33_前回値のテーマ色で起動する方法\n#34_さいごに",
      "target_audience": [
        "C#のWindowsフォームを使用していて，お洒落な画面を作りたい人",
        "Windowsフォームのデザインに満足していない人"
      ]
    },
    {
      "title": "Java для начинающих. Level 1",
      "url": "https://www.udemy.com/course/java1-dmdev/",
      "bio": "Основы алгоритмизации и программирования. Java Core. Debug",
      "objectives": [
        "Основы алгоритмизации и программирования",
        "Java Core",
        "Debug",
        "IntelliJ IDEA"
      ],
      "course_content": {
        "Введение": [
          "Установка программного обеспечения (ПО)",
          "Первая программа",
          "Примитивные типы данных",
          "Введение. Примитивные типы даных"
        ],
        "Переменные": [
          "Объявление и инициализация переменных",
          "Операции с переменными",
          "Переменные и операции с ними"
        ],
        "Операторы ветвлений": [
          "Оператор if-else",
          "Оператор switch",
          "Практика операторов ветвлений",
          "Новый оператор switch & var",
          "Операторы ветвлений"
        ],
        "Функции": [
          "Объявление и использование функций (методов)",
          "Полезный возможности IntelliJ IDEA",
          "Функции",
          "Практическое задание",
          "Домашнее задание"
        ],
        "Циклы": [
          "Цикл while",
          "Цикл for",
          "Практика циклов for-while",
          "Рекурсия",
          "Циклы",
          "Практическое задание",
          "Домашнее задание"
        ],
        "Массивы": [
          "Одномерные массивы",
          "Многомерные массивы",
          "Практика массивов",
          "Массивы",
          "Практическое задание",
          "Домашнее задание"
        ],
        "Debug - Отладка программ": [
          "Debug",
          "Отладчик программ"
        ],
        "Заключение": [
          "Заключение. Путь развития",
          "Путь развития"
        ]
      },
      "requirements": [
        "Курс не требует каких-либо предварительны знаний"
      ],
      "description": "Вводный курс для тех, кто хочет освежить свои знания или кто впервые знакомится с программированием и хочет иметь представление о том, что это такое, как написать свою первую программу, убедиться, что это довольно просто и легко.\n\nМы пройдемся от самого нуля до того уровня, когда вы сможете писать собственные простенькие программы.\n\nНачнем с установки необходимого программного обеспечения, которое используется для написания других программ. И в нашем случае - это самая мощная и лучшая на текущий момент среда разработки - IntelliJ IDEA.\n\nМы разберемся со всеми примитивными типами данных, поговорим про булеву алгебру и логические конструкции if-else. Затронем устройство памяти компьютера и почему он использует именно двоичную систему счислений. Конечно же для того, чтобы понять ее, мы изучим процесс преобразования десятичной системы (которую мы привыкли с вами использовать в реальной практике) в двоичную.\n\nУзнаем, что такое циклы и какие они бывают. Какие из них стоит предпочитать больше всего в реальной практике, а какие стоит использовать только в крайних случаях. А также почему нужно избегать рекурсию (ведь любую рекурсию можно заменить на обычный цикл).\n\nПройдем сложный тип данных - массивы, и даже затронем тему многомерных массивов. Ведь это основа для построения более сложных структур данных, которые уже будут рассматриваться в следующем курсе по изучению Java - Level 2.\n\nКонечно же на практике изучим невероятно полезное средство, которое поможет в понимании программирования и того, как думает машина - это Debug (отладчик программ).\n\nВ конце курса мы обсудим дальнейший путь развития вас как хороших специалистов и какую литературу/ресурсы стоит почитать.",
      "target_audience": [
        "Курс предназначен для начинающих"
      ]
    },
    {
      "title": "Programación funcional en Java",
      "url": "https://www.udemy.com/course/programacion-funcional-en-java/",
      "bio": "Aprende una forma diferente de resolver problemas clásicos, desde otro punto de vista más seguro, legible y simple",
      "objectives": [
        "Comprender las características del paradigma de programación funcional, que enfoca de forma distinta la manera de resolver un problema",
        "Aprender el concepto de \"expresión lambda\", y cómo se utiliza en Java para implementar interfaces de forma sencilla y compacta",
        "Gestionar colecciones de datos mediante streams, y poder extraer y manipular información a partir de ellos",
        "Almacenar y recuperar información de ficheros de texto de forma sencilla"
      ],
      "course_content": {
        "Introducción al curso": [
          "1.01. ¿Qué es la programación funcional?",
          "1.02. Requisitos necesarios",
          "1.03. La inmutabilidad de los datos",
          "1.04. La transparencia referencial",
          "1.05. La composición de funciones",
          "1.06. Las funciones de primer orden",
          "1.07. Repaso: uso de interfaces",
          "1.08. Repaso: uso de colecciones",
          "Preguntas de repaso de la Sección 1",
          "Ejercicio final de la Sección 1"
        ],
        "Uso de expresiones lambda": [
          "2.01. Interfaces e interfaces funcionales",
          "2.02. Introducción a las expresiones lambda",
          "2.03. Comparaciones. Interfaz Comparator",
          "2.04. Predicados. Interfaz Predicate",
          "2.05. Consumo de datos. Interfaz Consumer",
          "2.06. Composición. Interfaz Function y derivadas",
          "Ejercicio final de la Sección 2"
        ],
        "Manipulación de colecciones con streams": [
          "3.01. Introducción a los streams",
          "3.02. Operaciones intermedias. El filtrado",
          "3.03. Operaciones intermedias. El mapeo",
          "3.04. Operaciones intermedias. La ordenación",
          "3.05. Otras operaciones intermedias",
          "3.06. Operaciones finales. Obtener una lista",
          "3.07. Operaciones finales. Obtener una cadena de texto",
          "3.08. Operaciones finales. Reducción",
          "3.09. Operaciones finales. Datos estadísticos",
          "3.10. Usar streams sobre otros tipos de colecciones",
          "3.11. Streams y acceso a ficheros",
          "Ejercicio final de la Sección 3"
        ]
      },
      "requirements": [
        "Tener conocimientos de programación a nivel modular: saber lo que es una variable, un array, un bucle, una condición y una función",
        "Tener conocimientos de programación orientada a objetos: saber qué es una clase, con sus atributos, constructores y métodos, y cómo se construyen objetos a partir de ellas",
        "Tener unas nociones mínimas de la sintaxis del lenguaje Java: cómo definir clases, métodos, el programa principal..."
      ],
      "description": "Este curso de programación funcional en Java pretende asentar unas bases sólidas de lo que es el paradigma de programación funcional, aplicado al lenguaje Java, y con ello, ver una forma distinta de abordar ciertos tipos de programas que, con la programación tradicional, pueden ser más costosos de implementar, y más propensos a cometer errores.\nPara ello, veremos al principio cuáles son las características sobre las que se asienta el paradigma de programación funcional, y después veremos los dos grandes ámbitos en los que se aplica en Java: el uso de expresiones lambda para implementar interfaces de forma sencilla y compacta, y el uso de streams para manipular colecciones de datos de forma segura y sencilla, para extraer información que nos pueda resultar útil de ellas.",
      "target_audience": [
        "Personas con unas nociones básicas de programación que quieran profundizar y descubrir otros enfoques alternativos a la hora de resolver ciertos problemas"
      ]
    },
    {
      "title": "Java Benutzeroberflächen mit Swing erstellen + Wetter App",
      "url": "https://www.udemy.com/course/java-fortgeschritten-kurs-benutzeroberflachen-mit-swing/",
      "bio": "Programme wie Digitaluhr, Wetter App, JSON mit Java, Wetter API verstehen, Grafische Benutzeroberflächen mit Java Swing",
      "objectives": [
        "Eigene Java Programme entwickeln",
        "Benutzeroberflächen erstellen",
        "Swing Framework anwenden",
        "JSON verstehen",
        "OpenWeather API verwenden, um Wetter Daten zu laden"
      ],
      "course_content": {},
      "requirements": [
        "Java Grundlagen sollten vorhanden sein",
        "Objektorientierung verstehen ist von Vorteil"
      ],
      "description": "In diesem Java fortgeschritten Kurs lernst du, Programme mit Grafische Benutzeroberflächen mit Java Swing zu entwickeln.\nNutzen wirst du dabei die Swing Bibliothek. Du wirst lernen, wie man mit einer API arbeitet oder mit JSON Dateien arbeiten. Dabei wirst du ein Programm erstellen, welches aus mehreren Modulen besteht. Unter anderen wirst du nach dem Kurs in der Lage sein, Wetter Daten abzufragen und in deinen Programmen zu nutzen.\n\n\nIn diesem Kurs ist der Praxisanteil hochgehalten. Im Kurs werden mehrere Programmmodule entwickelt, welche am Ende ein Programm ergeben.\nWährend der Modul Entwicklung lernst du die Swing Bibliothek Schritt für Schritt kennen.\n\n\nLerninhalt in Stichpunkten:\n\n\nSwing:\n- Aufbau von Swing\n- Layout Manager (GridLayout, GroupLayout, FlowLayout etc. )\n- Komponenten (JButton, JLabel, JList, JPanel etc.)\n- Menü erstellen\n- Swing Dialog\n- Drag and Drop von Inhalten / Bildern\n- Listener (Action, Tastatur, Mouse etc.)\n- Tastatur Shortcuts setzen\n- Swing Programme exportieren\n- und vieles mehr...\n\n\nPraxis:\nEin Programm, welches folgende Elemente beinhaltet:\n- Digitaluhr - lass die von Java die Uhrzeit anzeigen\n- Wetter Daten laden einer beliebigen Stadt, mit Wetter Icon's\n- Programme starten per Shortcut\n- Webseiten per Shortcut öffnen\n- Beliebige Webseiten öffnen\n- Beliebige Programme öffnen\n\n\nJava:\nAuch wirst unter anderem neuen Java Themen kennen lernen:\n- Threads\n- Arbeiten mit JSON\n- Arbeiten mit der API von OpenWeatherMap\n- und vieles mehr...",
      "target_audience": [
        "Java Entwickler, die eigene Programme erstellen wollen",
        "Alle die Java Swing lernen wollen",
        "Java Programme mit Benutzeroberflächen erstellen"
      ]
    },
    {
      "title": "제대로 파는 파이썬(Python) by 얄코",
      "url": "https://www.udemy.com/course/yalco-python/",
      "bio": "파이썬(Python) 깊이 파고들기 ( + AI를 활용한 학습)",
      "objectives": [
        "파이썬의 문법과 활용",
        "파이썬으로 효과적이고 안정적으로 코딩하는 방법",
        "파이썬의 각종 유용한 도구들과 그 활용법",
        "프로그래밍에 필요한 IT 및 컴퓨터공학 지식",
        "학습과 실무에서 AI를 활용하는 방법과 팁",
        "파이썬으로 업무를 간편하게 만드는 방법"
      ],
      "course_content": {
        "수강을 위한 준비": [
          "강의 & 파이썬 소개",
          "[ 필수시청!!! ] 강의정보 & 질문하는 방법",
          "꼭 확인해주세요!!",
          "학습 도구 갖추기",
          "터미널 실습을 위한 설정"
        ],
        "파이썬 시작하기": [
          "터미널로 실행하기",
          "파이참 사용하기",
          "값 출력하기",
          "주석 (Comment)",
          "변수 (Variable)"
        ],
        "자료형": [
          "자료형 기초",
          "정수 (int)",
          "실수 (float)",
          "숫자 자료형 기타",
          "불리언 (bool)",
          "문자열 기본",
          "탈출문자와 포매팅",
          "문자열 관련 함수와 메소드들",
          "불변 객체 vs 가변 객체",
          "None"
        ],
        "컬렉션": [
          "리스트 (List)",
          "튜플 (Tuple)",
          "셋 (Set)",
          "딕셔너리 (Dictionary)"
        ],
        "조건문과 반복문": [
          "if / else",
          "match",
          "for",
          "while"
        ],
        "함수 기초": [
          "함수 기본",
          "매개변수",
          "중첩과 재귀"
        ],
        "객체지향 기초": [
          "클래스",
          "정적/클래스 요소",
          "상속 (Inheritance)"
        ],
        "모듈과 패키지": [
          "유료파트의 강의페이지 주소입니다.",
          "모듈 (Module)",
          "패키지",
          "빌트인 모듈",
          "유용한 표준 모듈"
        ],
        "객체지향 심화": [
          "프로퍼티",
          "추상 메소드",
          "매직 메소드",
          "싱글턴"
        ],
        "이터레이터": [
          "이터러블",
          "이터레이터",
          "제너레이터",
          "이터러블 관련 함수"
        ]
      },
      "requirements": [
        "프로그래밍 관련 사전지식은 필요없으며, 있다면 심화학습에 도움이 됩니다.",
        "윈도우 PC 또는 맥이 필요합니다."
      ],
      "description": "설명대장 유튜버 ‘얄코’의 ‘제대로 파는’시리즈 5번째 강좌!\n제대로 파는 파이썬 끝.장.내.기\n\n\n파이썬을 코알못도 배울 수 있을 만큼 쉽게,\n주니어 개발자도 유용한 지식을 배워갈 수 있도록 깊이 있게 알려드립니다.\n단순히 파이썬의 문법과 기능 뿐 아니라,\n이를 활용하여 효과적으로 프로그래밍을 하기 위해\n개발자에게 꼭 필요한 IT지식 또한 얻어가실 수 있습니다.\n\n\nChatGPT와 같은 인공지능을 지속적인 발전에 활용하는 방법 또한\n다양한 예시, 팁과 함께 살펴볼 것입니다.\n\n\n[이런 분들이 들으면 좋아요]\n파이썬으로 코딩을 시작하는 사람\n학교/학원에서 듣는 강의로는 파이썬을 제대로 알아가는데 부족함을 느끼는 분\n파이썬이란 언어에 대해 보다 깊이있는 지식을 쌓기 원하는 주니어 개발자\n코딩을 어떻게 공부해야 하는지, 막히는 부분이 있을 때 어떻게 조사하거나 질문하는지 모르는 분\nAI를 학습과 실무에 보다 잘 활용하고 싶은 누구나\n\n\n파이썬을 처음 배우더라도 제대로 파고들고자 하는 사람들을 위한 강의입니다.\n파이썬을 제대로 공부하고 싶다면 투머치 설명러의 디테일한 강의로 시작해 보세요!\n\n\n[얄팍한 코딩사전의 파이썬 강의가 특별한 이유]\n파이썬 코알못도 이해할 수 있을 만큼 쉬운 설명이 주특기인 설명대장 얄코의 명쾌한 강의입니다.\n강의를 듣는 것으로 끝나지 않고, 지속적인 발전을 위해 추가 학습 및 실무에서 AI를 활용하는 방법까지 함께 살펴볼 수 있는 커리큘럼입니다.\n수강생 분들의 편리한 실습을 위해 강의용 노션 페이지와 파이참의 디버깅 기능을 활용한, 효율적이고 편리한 실습 환경이 제공됩니다.\n단순히 언어의 문법만 공부하는 것이 아닌, 개발에 필요한 지식들도 함께 공부하는 강의입니다.\n\n\n[수강생 분들을 위해 준비한 런칭 기념 보너스 혜택]\n✓기초 내용 무료 공개\n학생 분들도 부담 없이 공부하실 수 있도록, 전체 커리큘럼의 절반 분량을 미리보기를 통해 무료로 공개합니다.",
      "target_audience": [
        "프로그래밍을 처음 시작하는 사람들",
        "학교나 기타 교육기관에서 파이썬을 수강하는 학생",
        "파이썬을 보다 깊이 있게 공부하고 싶은 주니어 개발자"
      ]
    },
    {
      "title": "Python ile Görüntü İşleme - OpenCV A-Z™ [2023]",
      "url": "https://www.udemy.com/course/2021-computer-vision-opencv-a-ztm/",
      "bio": "Python , OpenCV ve Deep Learning ile Görüntü İşleme Teknikleri!",
      "objectives": [
        "NumPy temellerini öğreneceksiniz",
        "OpenCV kullanarak resim dosyaları üzerinde çalışma",
        "OpenCV ile resim manipilasyonu ve smoothing, blurring, thresholding ve morphological operatorleri ile işlem yapma",
        "Python ve OpenCV ile Open - Stream video",
        "Face Detection yazılımı geliştirme",
        "Videolarda Object Tracking işlemleri",
        "NumPy ile resimlerin açılması ve manipüle edilmesi",
        "Python ve OpenCV kullanarak fotoğraflar ve videolar üzerinde şekiller çizme",
        "OpenCV ile Color Histogram oluşturma",
        "Python ve OpenCV kullanarak nesne tanıma, corner, edge, ve grid detection teknikleri",
        "Watershed Algoritması ile Segmentasyon",
        "Python ve Deep Learning ile image classifiers oluşturma"
      ],
      "course_content": {
        "Kurs Tanıtımı ve Giriş": [
          "Kurs Tanıtımı",
          "Kursumuza Giriş ve Gerekli Kurulumlar"
        ],
        "Python ve NumPy ile Image Temelleri": [
          "NumPy ve Image Temelleri",
          "Bilgisayarlar Fotoğrafları Nasıl Görür ?",
          "Image ve NumPy",
          "NumPy ve Image Temelleri Ödev",
          "NumPy ve Image Temelleri Ödev Çözümleri"
        ],
        "Python ve OpenCV ile Image Temelleri": [
          "OpenCV ve Images Giriş",
          "OpenCV ile Images İşlemleri",
          "OpenCV ile Python Scriptinde Image İşlemleri",
          "OpenCV ile Çizim İşlemleri",
          "OpenCV ile Text ve Polygon Çizdirme",
          "OpenCV ile Mouse Kullanarak Çizim İşlemleri",
          "OpenCV ile Image Temelleri Bölüm Sonu Ödev",
          "OpenCV ile Image Temelleri Bölüm Sonu Ödev Çözümleri"
        ],
        "Python ve OpenCV ile Görüntü İşleme": [
          "Görüntü İşleme Giriş",
          "Color Mappings",
          "Blending ve Pasting",
          "Thresholding",
          "Blurring ve Smoothing",
          "Morphological Operations",
          "Gradients",
          "Histogram",
          "Görüntü İşleme Bölüm Sonu Ödev",
          "Görüntü İşleme Bölüm Sonu Ödev Çözümleri"
        ],
        "Python ve OpenCV ile Video Temelleri": [
          "OpenCV ile Video İşlemlerine Giriş",
          "OpenCV ile Kameraya Bağlanma",
          "OpenCV ile Video Dosyalarının Kullanımı",
          "OpenCV ile Webcam Üzerine Şekil Çizme",
          "Python ve OpenCV ile Video Temelleri Bölüm Sonu Ödev",
          "Python ve OpenCV ile Video Temelleri Bölüm Sonu Ödev Çözümleri"
        ],
        "Python ve OpenCV ile Nesne Tanıma": [
          "Nesne Tanıma Giriş",
          "Template Matching",
          "Corner Detection",
          "Edge Detection",
          "Grid Detection",
          "Contour Detection",
          "Feature Matching",
          "Watershed Algoritması",
          "Face Detection",
          "Nesne Tanıma Bölüm Sonu Ödevi",
          "Nesne Tanıma Bölüm Sonu Ödevi Çözümleri"
        ],
        "Python ve OpenCV ile Nesne Takip Uygulamaları": [
          "Nesne Takip Uygulamaları Giriş",
          "Optical Flow 1",
          "Optical Flow 2"
        ]
      },
      "requirements": [
        "Temel Python bilgi ve becerisi",
        "Windows yada MacOS yada Ubuntu",
        "Bilgisayarda indirme izinlerinin açık olması",
        "Dahili yada harici Webcam"
      ],
      "description": "Python OpenCV ile Görüntü İşleme Kursuna Hoşgeldiniz !\nBu kursumuz Python programlama dili ile Görüntü İşleme tekniklerinin anlatıldığı önemli kaynaklardan birisi.\nKursumuzda günümüzün en popüler dili olan Python programlama dili ile OpenCV (Open Computer Vision) kütüphanesinin fotoğraf ve video dosyaları üzerinde uygulanan teknikler anlatılmaktadır.\nGünümüzün en popüler platformlarından olan Youtube, Netflix üyeleri her 60 saniyede 300 saatten daha fazla upload ve 80,000 saat kadar yayın gerçekleştirirken bir diğer popüler platform olan Instagram kullanıcıları ise 2 milyondan daha fazla fotoğraf paylaşmaktadır.Bu rakamlar dolayısıyla  geçmişte gerçekleştirdiğimiz görüntü işleme teknikleri ile  video ve fotoğraflar üzerinde analiz yapma ihtiyacını daha da ileri bir seviyeye taşımıştır.\nGörüntü İşleme bize fotoğraflarımızı ve videolarımı sürücüsüz araçlar, kasiyersiz kasalar,medikal tanımlamalar ve sosyal network ağları için fotoğraf ve video analizi olanağı sunuyor.\nDünyada popüleritesi hızla yayılan Python programlama dili ile oluşturduğumuz bu kursumuzda, endüstride değeri $20 milyar dolar seviyesine ulaşan  market değeri ile her geçen yıl önemini birkez daha bizlere kanıtlamaktadır.\nBu kursumuzda NumPy kütüphanesini kullanarak nümerik proses işlemleri ve fotoğrafların nasıl açılıp ve bu tekniklerin uygulanacağı konusunda giriş yapacağız. Bu adımdan sonra bu işlemleri OpenCV kütüphanesi ile nasıl uygulandığını göreceğiz. Ve daha sonra fotoğraflar üzerine uygulayabileceğimiz color mappings, blending, threshold, gradients ve bir çok tekniğin nasıl uygulanacağını incelemiş olacağız.\nFotoğraflar üzerinde gerçekleştirdiğimiz işlemlerin ardından gerçek zamanlı verilerin videoların üzerinde bu tekniklerin nasıl uygulayabileceğimizi göreceğiz.Günümüzde birçok bilim insanının üzerinde çalıştığı son derece heyecanlı konular olan Face Detection, Object Detection ve Object Tracking projelerini hep beraber gerçekleştirmiş olacağız.\nKursumuzun son aşamasında ise günümüzün popüler deep learning konularını image recognition ve custom image classification uygulamaları için projeler ve örnekler üzerinde durarak Görüntü İşleme üzerine sağlam bir giriş ve önemli bir altyapıyı oluşturmuş olacaksınız.\nBu kurs aşağıda belirtilen konuları ve daha fazlasını kapsamaktadır:\nNumPy\nNumPy ile Image\nNumPy ile Image ve Video Temelleri\nColor Mappings\nBlending ve Pasting Images\nImage Thresholding\nBlurring ve Smoothing\nMorphological Operatorler\nGradients\nHistograms\nOpenCV ile Streaming video\nObject Detection\nTemplate Matching\nCorner, Edge ve Grid Detection\nContour Detection\nFeature Matching\nWaterShed Algorithması\nFace Detection\nObject Tracking\nOptical Flow\nve daha fazlası!\nBu kurs ile ilgili yada Udemy ile alakalı kafanıza takılan sorularda benimle iletişie geçmekten çekinmeyin. Kursumuzun yararlı olması umudu ile!\nAhmet",
      "target_audience": [
        "Yapay Zeka, Python ve Görüntü İşleme alanları ile ilgilenmek isteyen ve ilgilenen tüm insanlar"
      ]
    },
    {
      "title": "Go 語言基礎實戰 (開發, 測試及部署)",
      "url": "https://www.udemy.com/course/golang-fight/",
      "bio": "全面介紹了 Go 語言的特點、安裝部署環境、語言語法、併發流程以及在多個實戰中的應用，並介紹如何整合 CI/CD 服務",
      "objectives": [
        "如何將 Go 導入團隊及說服主管使用",
        "如何寫跨平台 Command Line 工具",
        "如何善用 Go 語言特性加快部署速度",
        "如何有效率的撰寫 Go 語言",
        "部署到 AWS 或 Heroku 雲平台",
        "使用 Drone CI/CD 自動化測試及部署"
      ],
      "course_content": {
        "Go 語言介紹": [
          "Go 課程介紹",
          "Go 語言歷史",
          "Go 語言優勢",
          "Go 語言大型專案",
          "Go 語言導入團隊"
        ],
        "Go 環境建置": [
          "用 gvm 安裝 Go 語言",
          "VSCode 編輯器搭配 Go 環境",
          "什麼是 GOPATH 及 GOROOT",
          "Go 指令介紹",
          "什麼是 vendor 目錄",
          "Go 1.11 版本推出 go module 解決 GOPATH 問題",
          "將 Go Module 導入到專案內且搭配 Travis CI 或 Drone 工具",
          "Go Module 如何發佈 v2 以上版本",
          "Go 1.5 新增 Module cache 環境變數",
          "在 VSCode 編輯器內快速進行除錯"
        ],
        "Go 基礎介紹": [
          "第一個 Hello World 程式",
          "如何使用 Go Package",
          "如何宣告 Go 變數",
          "如何使用 go func",
          "錯誤處理 (Error Handler)",
          "用 Slice 做 Function 參數技巧",
          "如何使用 switch case 取代 if else if",
          "什麼是 init func",
          "Struct Method 的 Pointers vs. Values 差異",
          "如何寫基本測試",
          "用 PHP 範例學習 Go 語言 Interface 三大特性",
          "使用 Benchmark 效能評估",
          "驗證專案程式碼品質",
          "如何讀取專案內 .env 檔案",
          "Go 語言效能檢查工具 pprof",
          "Go 1.16 推出 Embedding Files",
          "初探 Open Policy Agent 實作 RBAC (Role-based access control) 權限控管",
          "初探 golang 1.18 generics 功能",
          "使用 pyroscope adhoc 加速找到效能瓶頸"
        ],
        "Go 目錄架構": [
          "Project Layout 簡介, Go Module 介紹, Makefile 使用, 設定版本資訊",
          "架設 Go Module Proxy Server 加速團隊開發及部署"
        ],
        "Go 語言 goroutine 和 channel": [
          "什麼是 goroutine",
          "使用 sync WaitGroup 等待 goroutine 執行結束",
          "用五分鐘了解什麼是 buffered vs unbuffered channel",
          "Channel 基礎使用方式",
          "15 分鐘實戰 multiple channel 用法",
          "Select 搭配 Channel 四種用法",
          "實戰簡易的 Job Queue 機制",
          "使用 Go Channel 及 Goroutine 時機",
          "什麼是 HTTPD graceful shutdown",
          "graceful shutdown 搭配 docker-compose 實現 rolling update",
          "停止 Go 服務前先處理完 Worker 內的 Job",
          "用 10 分鐘了解 context 使用場景及基本認識",
          "管理 Concurrency 的三種方式 (WaitGroup, Channel 及 Context)",
          "用 Go 語言的 Concurrency 沒有想像中這麼簡單",
          "Select random channel 注意事項",
          "用 docker-compose 優雅關閉服務",
          "NSQ Consumers 處理 Graceful Shutdown 技巧",
          "如何實現 Pub-Sub 模式",
          "優化重構 Worker Pool 程式碼",
          "透過 GitLab API 學習 Go 語言 Context 使用方式"
        ],
        "Go 語言實作命令列": [
          "使用 Go 語言內建 flag 套件",
          "使用 Go 語言實作 Docker 容器 Health Check",
          "如何用 Go 語言寫一個簡單的 Command Line 工具"
        ],
        "Go 語言實戰 Goroutine 案例": [
          "MogoDB Transaction 交易問題",
          "使用 sync.Mutex 解決交易問題",
          "使用 goroutine + Channel 設計單一 Queue",
          "使用 goroutine + Channel 設計多重 Queue",
          "使用 optimistic concurrency 解決多個 Application 問題"
        ],
        "Go 語言實戰 GraphQL": [
          "GraphQL 課程內容介紹",
          "為什麼要用 GraphQL",
          "GraphQL 簡介",
          "GraphQL 的 Type System 特性",
          "GraphQL 的 Introspection 及 Mutation 介紹",
          "使用 GraphQL Playground IDE 工具",
          "比較 GraphQL Framework 在 Go 語言效能",
          "從 graphql-go 轉換到 gqlgen 原因",
          "使用 GraphQL Gateway 串接多個 Data Schema"
        ],
        "Go 語言搭配 GitHub Actions": [
          "用 GitHub Actions 部署 Go 語言服務 (Docker 容器啟動)"
        ],
        "Go 語言自動化部署 AWS Lambda": [
          "使用 apex/up 工具部署 Go 專案到 AWS Lambda",
          "設定 Custom Domain Names 在 API Gateway 上",
          "用 drone-apex-up 自動化更新 Go 專案到 AWS Lambda"
        ]
      },
      "requirements": [
        "只要有任一門語言基礎知識即可"
      ],
      "description": "重要提醒：因此平台 Udemy 為境外公司，在 Udemy 的刷卡屬於境外刷卡，您的信用卡公司會另外向您收取大約 1.5％ 的國外交易手續費。手續費根據各家信用卡公司規定有所不同，詳細數字需與您的發卡銀行確認。\nGo 語言 (又稱 Golang) 是 Google 推出新一代的強大語言，2018 年 1 月 Google 公佈了去年底統計的問卷結果，發現 61% 用 Go 來寫網站，37% 用來開發系統程式，36% 用來做 DevOps (多重選擇)，可想而知 Go 語言可以拿來從底層寫到上層。高效能的 Goroutine (併發) 表現優於 Parallelism (並行)，語法上簡潔又簡單，這也就是為什麼我們要來嘗試 Go 語言。\n課程大綱\nGo 背景介紹\nGo 環境建置\nGo 基本語法\nGo Goroutines 介紹\nGo Channel 介紹\nGo 簡易 HTTP 伺服器\nGo 簡易 Command Line 實作\nGo 跨平台編譯 (Windows, MacOS, Linux)\nGo 搭配 Docker 介紹\nGo 語言開發實戰案例\nGo 語言專案搭配 Drone 持續整合測試部署\nGo 實戰 GraphQL 語言\nGo 部署到 Heroku 平台",
      "target_audience": [
        "後端工程師",
        "系統工程師",
        "網頁工程師",
        "SRE 工程師"
      ]
    },
    {
      "title": "Excel VBA 從 0 開始學程式：提升職場效率最佳利器",
      "url": "https://www.udemy.com/course/0-excel-vba-100/",
      "bio": "輕鬆學（附程式碼）：不知不覺中完成您人生的第一個編程/巨集/宏 - Excel VBA and Macro: From Beginner to Master",
      "objectives": [
        "若您經常使用 Excel，而且需重複不斷地使用，想要提昇工作效率，那麼這門課會是您最佳的選擇。",
        "公司資訊安全考量：科技業 + 金融業 = Excel VBA 最佳選擇",
        "完全由職場角度設計的程式設計課程，100% 契合您的需要。只要有 Excel，就可以從 0 開始學 VBA 編程，提昇工作效率。",
        "Excel + VBA 所見即所得：編程輕鬆，執行迅速，結果立現。透過按鈕設計，享受迅雷不及掩耳，一鍵完成的愉悅，您將成為辦公室裡最受歡迎的人物。",
        "Why Excel VBA? Excel 是職場上最受歡迎的資料處理軟件，VBA 內建於 Excel，儲存格靈活運用，如虎添翼。",
        "三大觀念：1.判斷與決策，2.確定次數迴圈，3.不確定次數迴圈。未來機器學習，人工智能的基礎。",
        "兩大工具：1.陣列運用，2. 呼叫副程式。輕鬆成為資料分析高手，結構化程式系統輕鬆建置。",
        "手把手教學，由精選範例中 step by step 學習編程邏輯及語法，實例演練偵錯技巧與防呆措施，全方位建立系統開發架構。",
        "編程的目的：在於提升生活品質。"
      ],
      "course_content": {
        "Part 1 : VBA 編程與 Excel 環境介紹": [
          "1-01 Excel 與 VBA 環境介紹",
          "1-02 不知不覺中完成第1個編程",
          "1-03 程式碼解讀與修改",
          "1-04 相對位址與編程",
          "1-05 編程檔案儲存：xlsx 與 xlsm",
          "1-06 第1個自行撰寫的程式：「=」的含意",
          "1-07 編程偵錯技巧：即時運算與區域變數視窗",
          "1-08 儲存格靈活運用：數據輸入與輸出",
          "1-09 訊息方塊及函數編程",
          "1-10 程式執行效率探討"
        ],
        "Part 2: 判斷與決策": [
          "2-01 變數宣告",
          "2-02 四則運算與真偽判斷",
          "2-03 簡單判斷與決策：If … End If",
          "2-04 數字排大小：氣泡排序法",
          "2-05 活用Excel儲存格：不確定資料數量輸出",
          "2-06 多條件判斷與決策：潤年判斷",
          "2-07 多重判斷與決策：身體質量指數(BMI)計算1",
          "2-08 多重判斷與決策：身體質量指數(BMI)計算2"
        ],
        "Part 3: 陣列與數據": [
          "3-01 一維陣列：陣列資料儲存與輸出",
          "3-02 一維陣列：迴文判斷",
          "3-03 一維陣列：成績換算等第",
          "3-04 一維陣列：成績換算績點",
          "3-05 二維陣列：多科成績GPA換算："
        ],
        "Part 4: 迴圈：確定次數For與不確定次數Do": [
          "4-01 迴圈概論",
          "4-02 確定次數迴圈：For … Next",
          "4-03 單一For迴圈：亂數產生",
          "4-04 多重For迴圈：繽紛色彩速度放慢",
          "4-05 多重For迴圈：九九乘法表",
          "4-06 多重For迴圈：陣列氣泡排序法",
          "4-07 不確定次數迴圈：Do While … Loop",
          "4-08 單一Do迴圈：百萬富翁生成天數",
          "4-09 單一Do迴圈：投資金額回收期間",
          "4-10 多重Do迴圈：九九乘法表"
        ],
        "Part 5: 副程式與函數相互呼叫": [
          "5-01 副程式呼叫：傳回班級同學人數",
          "5-02 副程式呼叫：不確定數量數值排序",
          "5-03 副程式Sub與函數Function概論",
          "5-04 副程式如何回傳資料",
          "5-05 Excel內建函數介紹",
          "5-06 副程式呼叫：副程式或函數",
          "5-07 函數呼叫：副程式",
          "5-08 函數呼叫：函數或Excel內建函數"
        ]
      },
      "requirements": [
        "1. VBA 0 基礎。",
        "2. Excel 0 基礎。",
        "3. 需安裝 Excel 軟體/軟件，Excel所有版本皆可適用。",
        "4. 為提升您的資訊素養，務必以「做中學」方式進行，課程中程式碼請自行鍵入及演練，如此方能感受程式語法與邏輯，並有效提升實戰經驗。不建議採「複製、貼上」或「僅是視屏觀賞」方式學習。畢竟，唯有辛勤播種，方能歡呼收成。",
        "5. 課程中所有檔案 [包含：3個練習(xlsx)檔案，及1個原始程式碼檔案(doc)]，置於第一個視屏裡，請自行下載享用；另外，各 Part 的第一個視屏，也有該 Part 所對應的練習 (xlsx) 檔案。若您需要課程完整的執行檔案 (xlsm) 可透過本平台向作者索取。"
      ],
      "description": "作者擁有30年以上編程與教學經驗，針對有興趣學習編程的初學者，特別淬鍊出一套程式設計核心的：「三大觀念與兩大工具」。您只需透過課程6小時的演練，即可充分掌握編程核心，輕鬆完成各種職場實務上所需之程式或系統。\n本課程編程核心為：「三大觀念與兩大工具」。首先，三大觀念分別為：1.判斷與決策（If 語法），2.確定次數迴圈（For 語法），3.不確定次數迴圈（Do 語法），這些觀念是編程的基礎，也是您未來解決實務問題的利器。事實上這些觀念也是晚近相當熱門的「機器學習及人工智能」之基石 (cornerstone)。其次，兩大工具為：1.陣列 (Array) 及2.副程式 (Sub) 呼叫，其中，陣列可以協助大量資料處理，輕鬆成為資料分析高手；而副程式或函數之建立與呼叫，讓編程更具結構化，成為未來全方位系統開發的頂石 (capstone)。\n課程中將透過精選範例，逐步說明編程「三大觀念與兩大工具」，透過「做中學 (learning by doing) 」的方式，讓您自然而然成為 Excel VBA 編程高手，並活用於生活與職場中。\n\n\n本課程共分如下的五大部分，分別介紹「三大觀念與兩大工具」，更詳細章節安排請見課程內容。\nPart 1   VBA 編程與 Excel 儲存格環境介紹\nPart 2  判斷與決策\nPart 3  陣列與數據\nPart 4  迴圈：確定次數 For 與不確定次數 Do\nPart 5  副程式與函數相互呼叫\n\n\nWhy Excel VBA ?\n1.  容易取得，每一台電腦/計算機都有 Excel：贈送 VBA  - 辦公室可以直接使用，隨處可用，無須購買或下載，無資安問題。\n2.  Excel 試算表功能強大、職場廣泛應用 + VBA 編程：如虎添翼 - Excel 是職場上最受歡迎的資料處理軟件，分享好友、同事隨開隨用。\n3.  VBA 直譯式語言 (Interpreted language)：所見即所得 - 透過按鈕設計，享受迅雷不及掩耳，一鍵完成的愉悅。\n4.  VBA 程式架構完整，邏輯清楚 - 經由 VBA 邏輯訓練，日後其他編譯軟件使用，輕易上手。\n\n\n個人認為：因為人類的時間有限，大腦的容量也有限，所以「編程」技術與語法，不要想 100% 都學會，因為你沒有麼多的時間。若能徹底瞭解重要核心架構，即可解決 99.9% 的實務問題，另外 0.1% 的問題，基本上在職場實務上您是很難遇到的，所以也無須太擔心。",
      "target_audience": [
        "程式初學者。",
        "想變聰明的人，",
        "想提昇效率的人，",
        "想瞭解編程邏輯的人，",
        "想深入學會一套程式語言的人。"
      ]
    },
    {
      "title": "Active Directory Administration mit Windows PowerShell",
      "url": "https://www.udemy.com/course/active-directory-administration-mit-windows-powershell/",
      "bio": "Windows PowerShell für Active Directory Administratoren",
      "objectives": [
        "Verwaltung von Active Directory Objekten (Benutzer, Gruppen, usw.) mit der Powershell",
        "Automatisierung von Aufgaben",
        "Viele Objekte gleichzeitig anpassen bzw. erstellen (Bulk Import/Massenimport)",
        "Nicht mehr benötigte Benutzer- und Computerobjekte identifizieren und aufräumen"
      ],
      "course_content": {
        "Einleitung": [
          "Warum du PowerShell lernen solltest"
        ],
        "Powershell Grundlagen": [
          "Powershell Konsole öffnen",
          "Powershell ISE",
          "Was sind CMDlets?",
          "Das Active Directory Modul",
          "PowerShell Hilfesystem Teil 1: Das richtige CMDlet finden",
          "PowerShell Hilfesystem Teil 2: CMDlets richtig einsetzten"
        ],
        "Active Directory Benutzer mit Windows PowerShell verwalten": [
          "Benutzerobjekte mit der Powershell abfragen Teil 1",
          "Benutzerobjekte mit der PowerShell abfragen Teil 2",
          "Formatierungen mit der Pipeline",
          "Benutzerattribute mit der PowerShell ändern",
          "Masseneditierungen von Benutzerattributen",
          "Benutzer mit der PowerShell anlegen",
          "Massenimport von Benutzern mit der PowerShell"
        ],
        "Inaktive AD-Konten mit der PowerShell aufspüren": [
          "Das CMDlet \"Search-ADAccount\""
        ],
        "AD Gruppen mit der PowerShell verwalten": [
          "Active Directory Gruppen mit der PowerShell verwalten"
        ]
      },
      "requirements": [
        "KEINE Windows PowerShell Kenntnisse nötig",
        "Active Directory Grundkenntnisse sind von Vorteil (Was ist das AD, Was sind Benutzerobjekte, usw.)",
        "Eine Testumgebung (Domaincontroller mit Active Directory) ist sehr von Vorteil"
      ],
      "description": "Du betreust ein Active Directory? Dann ist dieser Kurs genau das richtige für dich, denn wenn du dich mit dem PowerShell Modul des Active Directory’s beschäftigst, kannst du nicht nur jede Menge Zeit durch Automatisierung sparen, nein ich würde sogar so weit gehen und sagen, dass sich Active Directory's mit mehr als 100 Objekten schon gar nicht mehr richtig ohne Verwendung der Windows PowerShell Administrieren lassen.\n\n\n\n\nZu Beginn dieses Kurses wirst du grundlegende Windows PowerShell Kenntnisse erlangen. Solltest du bereits Erfahrung mit der Windows PowerShell gesammelt haben, kannst du dieses Kapitel einfach überspringen. Anschließend geht der Dozent auf die Verwaltung von Benutzerobjekten ein. Hier wirst du lernen, wie du Benutzer abfragen, Attribute von bestehenden Benutzern verändern und neue Benutzer mit der PowerShell anlegen kannst und hierbei jede Menge Zeit im Vergleich zur GUI einsparen kannst. Im darauf folgenden Kapitel wirst du lernen, wie du den Befehl „search-adaccount“ zu deinem Vorteil einsetzten kannst und mit ihm dein Active Directory immer ohne großen Aufwand aktuell halten kannst. Im nächsten Kapitel teilt der Dozent sein Wissen über Active Directory Gruppen mit dir. Du wirst alle hierfür relevanten Befehle und ein paar Tipps und Tricks kennenlernen.",
      "target_audience": [
        "Active Directory Administratoren",
        "Administratoren, welche Routineaufgaben automatisieren möchten"
      ]
    },
    {
      "title": "تعلم لغة برمجة سي شارب C# Training Basic",
      "url": "https://www.udemy.com/course/csharp-basic-ahmaddamra/",
      "bio": "تعلم البرمجة باحترافية عالية, حتى تتمكن من برمجة تطبيقات الوندوز, الويب و الموبايل على برمجة فيجوال ستوديو 2017 او 2019",
      "objectives": [
        "اساسيات لفة سي شارب C#",
        "لغة الكائنات الموجهة",
        "الجمل الشرطية",
        "جمل الدوران"
      ],
      "course_content": {
        "Introduction to C# - مقدمة في لغة ال سي شارب": [
          "Introduction to C# And Visual Studio - مقدمة عن لغة سي شارب والفيجوال ستوديو",
          "Basic Syntax - اساسيات لغة سي شارب",
          "Data Type - انواع البيانات",
          "Declare Variables and constant - ماهي المتغيرات وطرق تعريفها",
          "Type Conversion - التحويل بين انواع المتغيرات",
          "Operators - العمليات الرياضية والمنطقية وغيرها"
        ],
        "Condition Statements - الجمل الشرطية": [
          "If Statement in C# ( Simple if) جمل الشرطية",
          "Else Statement in C# ( Intermediate if) جملة شرطية متوسطه",
          "If ... elseif ... elseif statement (Complex if) - جملة شرطية لاكتر من شرط",
          "Nested If Statement - جمل شرطية متداخلة",
          "Switch Case Statement - جملة شرطية"
        ],
        "Loop Statements": [
          "Simple For Loop -شرح الجمل الدورانية",
          "Nested For Loop - جملة دورانية متداخلة",
          "Foreach statement - جملة دورانية"
        ],
        "Object Oriented C# ( OOP) البرمجة الموجهة او الشيئية": [
          "What is OOP ? ماهي الكائنات الموجهة",
          "C# OOP Basic Class - انشاء كلاس وشرحه",
          "Class Inheritance - الوراثة",
          "Debug program - تتبع البرنامج"
        ]
      },
      "requirements": [
        "ان يكون تخصص كمبيوتر"
      ],
      "description": "نبذة عن الدورة :\nالدورة مبنية من الصفر وخطوة خطوة بشكل بسيط\nلا حاجة لاي معرفة مسبقة في البرمجة\nيفضل العمل على جهاز حاسوب للتمرين\nعند استخدام الحاسوب يجب توفر برنامج visual studio\nإرادة ورغبة قوية في التعلم والتميز\n\n\nالهدف من الدورة :\nهذه الدورة مخصصة لكل من يريد تعلم البرمجة بلغة C# من الصفر\nلكل من يريد النجاح في البرمجة\nالدورة معدة بشكل بسيط لكل من يحب تعلم البرمجة بلغة سي شارب",
      "target_audience": [
        "المطورين",
        "طلاب الجامعات",
        "اي شخص يريد تعلم البرمجة"
      ]
    },
    {
      "title": "Niezbędnik programisty Net - kurs programisty NET od A do Z",
      "url": "https://www.udemy.com/course/niezbednik-programisty-net-kurs-programisty-net-od-a-do-z/",
      "bio": "Naucz się C# tworząc aplikację web od podstaw",
      "objectives": [
        "Zasad programowania w języku C#",
        "Tworzenia aplikacji konsolowych, aplikacji webowych",
        "Rozwiązywania problemów",
        "Tworzenia REST API",
        "Pisania testów jednostkowych i integracyjnych",
        "Tworzenia aplikacji z użyciem biblioteki Blazor",
        "Tworzenie aplikacji w oparciu o podejście Database First i Code First",
        "Tworzenia aplikacji backendowych i frontendowych"
      ],
      "course_content": {
        "Pierwsze kroki": [
          "Wprowadzenie",
          "Jak studiować ten kurs?",
          "Co będziemy tworzyć?",
          "Pierwsze kroki",
          "Omówienie platformy NET",
          "Konfiguracja środowiska",
          "Pierwszy program",
          "Namespace, Operacje na konsoli i Debugowanie",
          "Konwencje nazewnictwa",
          "Przydatne skróty klawiszowe Visual Studio",
          "Podsumowanie wiedzy",
          "Podsumowanie"
        ],
        "Podstawy języka C#": [
          "Wprowadzenie",
          "Zmienne i stałe",
          "Zmienne i stałe",
          "Typy wartościowe",
          "Typy wartościowe - zadania",
          "Typy wartościowe - propozycja rozwiązania",
          "Typy wartościowe",
          "Typy referencyjne",
          "Typy referencyjne - zadania",
          "Typy referencyjne - propozycja rozwiązania",
          "Typy referencyjne",
          "Operatory",
          "Operatory",
          "Instrukcje warunkowe",
          "Instrukcje warunkowe",
          "[NET7] Pętle",
          "[NET8] Pętle",
          "Instrukcje warunkowe - zadania",
          "Instrukcje warunkowe - propozycja rozwiązania",
          "Pętle - zadania",
          "Pętle - propozycja rozwiązania",
          "Pętle",
          "Nullable",
          "Nullable",
          "Tablice, listy",
          "Tablice, listy - zadania",
          "Tablice, listy - propozycja rozwiazania",
          "Tablice",
          "Listy",
          "Enum",
          "Enum",
          "Omówienie klas i obiektów",
          "Omówienie klas i obiektów",
          "Metody",
          "Metody",
          "Pola i właściwości",
          "Pola i właściwości",
          "Omówienie ref, out i var",
          "String i StringBuilder",
          "ref, out var",
          "Zakresy widoczności",
          "Tworzenie klas i obiektów - zadania",
          "Tworzenie klas i obiektów - propozycja rozwiązania",
          "Zakresy widoczności",
          "Obsługa wyjątków",
          "Obsługa wyjątków - zadania",
          "Obsługa wyjątków - propozycja rozwiązania",
          "Obsługa wyjątków",
          "Aplikacja konsolowa w oparciu o poznane techniki",
          "Podsumowanie"
        ],
        "Programowanie obiektowe część 1": [
          "Wprowadzenie",
          "Omówienie tworzenia obiektów",
          "Omówienie tworzenia obiektów",
          "Dziedziczenie",
          "Dziedziczenie",
          "Polimorfizm",
          "Polimorfizm",
          "Enkapsulacja",
          "Enkapsulacja",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "Klasa abstrakcyjna vs interfejs",
          "Klasa abstrakcyjna vs interfejs",
          "Typy ogólne",
          "Typy ogólne",
          "Extensions",
          "Extensions",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Kompozycja a dziedziczenie",
          "Kompozycja a dziedziczenie",
          "Własne wyjątki",
          "Własne wyjątki",
          "Delegaty, Anonimowe funkcje i Lambda",
          "Delegaty, Anonimowe funkcje i Lambda",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "SOLID",
          "SOLID",
          "Zadanie 4",
          "Zadanie 4 - propozycja rozwiązania",
          "[NET8] Tworzenie i manipulowanie obiektami",
          "[NET8] Lambda opcjonalne parametry",
          "[NET8] Alias any type",
          "Dostosowanie aplikacji o poznane nowe mechanizmy cz. 1 - Modelowanie",
          "UML podsumowanie",
          "[NET7] Dostosowanie aplikacji o poznane nowe mechanizmy cz. 2 - Implementacja",
          "[NET8] Dostosowanie aplikacji o poznane nowe mechanizmy cz. 2 - Implementacja",
          "Podsumowanie"
        ],
        "Testy jednostkowe": [
          "Wprowadzenie",
          "Omówienie testów jednostkowych",
          "[NET7] Projekt testowy",
          "[NET8] Projekt testowy",
          "Test jednostkowy",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "Pierwszy test",
          "Testy jednostkowe",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Praca z zależnościami",
          "Praca z zależnościami",
          "TDD i pokrycie kodu testami",
          "Testy ciąg dalszy",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "Zadanie 4",
          "Zadanie 4 - propozycja rozwiązania",
          "Podsumowanie testów",
          "TDD i pokrycie kodu testami",
          "Podsumowanie"
        ],
        "Programowanie obiektowe część 2": [
          "Wprowadzenie",
          "Kolekcje",
          "Kolekcje",
          "Podstawy LINQ",
          "Podstawy LINQ",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "Wzorce projektowe",
          "Wzorce projektowe",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Atrybuty",
          "Atrybuty",
          "Dynamic",
          "Dynamic",
          "Refleksja",
          "Refleksja",
          "Dynamiczne tworzenie obiektów",
          "Własne atrybuty",
          "Asynchroniczność",
          "Asynchroniczność",
          "Wzorce architektoniczne",
          "Wzorce architektoniczne",
          "Kontener IoC",
          "Kontener IoC",
          "[NET8] Keyed Services",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "Zadanie 4",
          "Zadanie 4 - propozycja rozwiązania",
          "Zadanie 5",
          "Zadanie 5 - propozycja rozwiązania",
          "[NET7] Dostosowanie aplikacji o poznane nowe mechanizmy",
          "[NET8] Dostosowanie aplikacji o poznane nowe mechanizmy",
          "Podsumowanie"
        ],
        "Operacje na danych": [
          "Wprowadzenie",
          "IEnumerable i IQueryable",
          "IEnumerable i IQueryable",
          "Operacje na plikach",
          "Pliki XML",
          "Pliki JSON",
          "Operacje na plikach podsumowanie",
          "Refaktor aplikacji",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Podsumowanie"
        ],
        "Baza danych": [
          "Wprowadzenie",
          "Wprowadzenie do baz danych i SQL",
          "Code First vs Database First",
          "Code First i Database First",
          "Database First - tworzenie bazy",
          "[NET7] Database First - operacje na danych",
          "[NET8] Database First - operacje na danych",
          "[NET7] Database First - refaktor aplikacji",
          "[NET8] Database First - refaktor aplikacji",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "Database First Podsumowanie",
          "Praca z ORM",
          "Praca z ORM",
          "[NET7] Code First - EF Core tworzenie encji",
          "[NET8] Code First - EF Core tworzenie encji",
          "[NET7] Code First - Refaktor aplikacji",
          "[NET8] Code First - Refaktor aplikacji",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Code First",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "Podsumowanie"
        ],
        "Api": [
          "Wprowadzenie",
          "[NET7] Api, utworzenie projektu",
          "[NET8] Api, utworzenie projektu",
          "Api",
          "Omówienie REST",
          "REST",
          "Kontrolery",
          "Minimal Api",
          "Kontroler, Minimal Api",
          "Appsettings",
          "Appsettings",
          "Kontener IoC",
          "Kontener IoC",
          "[NET7] Walidacja danych",
          "[NET8] Walidacja danych",
          "Walidacja danych",
          "Middleware",
          "Middleware",
          "[NET8] Exception Handler",
          "Testy manualne REST Api",
          "[NET7] Dostosowanie aplikacji o poznane mechanizmy",
          "[NET8] Dostosowanie aplikacji o poznane mechanizmy",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "Zadanie 4",
          "Zadanie 4 - propozycja rozwiązania",
          "Podsumowanie"
        ],
        "Testy integracyjne": [
          "Wprowadzenie",
          "Testy integracyjne",
          "Testy integracyjne",
          "[NET7] Utworzenie projektu i dostosowanie środowiska",
          "[NET8] Utworzenie projektu i dostosowanie środowiska",
          "Test integracyjny",
          "Testowanie różnych przypadków",
          "Zadanie 1",
          "Zadania 1 - propozycja rozwiązania",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "Zadanie 4",
          "Zadanie 4 - propozycja rozwiązania",
          "Podsumowanie testów integracyjnych w dotnet",
          "Podsumowanie"
        ],
        "UI - Blazor": [
          "Wprowadzenie",
          "Blazor",
          "Blazor",
          "[NET7] Utworzenie projektu",
          "[NET8] Utworzenie projektu",
          "Pierwsza strona i komponent",
          "Pierwsza strona i komponent",
          "Cykl życia komponentu",
          "Cykl życia komponentu",
          "JavaScript, CSS",
          "JavaScript, CSS",
          "Komunikacja między komponentami",
          "Komunikacja między komponentami",
          "[NET7] Formularze i walidacja",
          "[NET8] Formularze i walidacja",
          "Formularze i walidacja",
          "[NET7] Dostosowanie aplikacji o poznane nowe mechanizmy",
          "[NET8] Dostosowanie aplikacji o poznane nowe mechanizmy",
          "Zadanie 1",
          "Zadanie 1 - propozycja rozwiązania",
          "[NET7] Testy jednostkowe w Blazor - konfiguracja środowiska",
          "[NET8] Testy jednostkowe w Blazor - konfiguracja środowiska",
          "Testy jednostkowe konfiguracja",
          "Testy jednostkowe w Blazor na przykładzie aplikacji",
          "Zadanie 2",
          "Zadanie 2 - propozycja rozwiązania",
          "Testy jednostkowe Blazor podsumowanie",
          "Setup backend",
          "Zadanie 3",
          "Zadanie 3 - propozycja rozwiązania",
          "Setup backend frontend podsumowanie",
          "Refaktor aplikacji",
          "Zadanie 4",
          "Zadanie 4 - propozycja rozwiązania",
          "Podsumowanie"
        ]
      },
      "requirements": [
        "Uczestnicy nie muszą posiadać wiedzy na temat programowania",
        "Uczestnicy powinni posiadać komputer, możliwość zainstalowania kompilatora C# np. Visual Studio czy Visual Studio Code, połączenia z internetem, możliwość instalacji XAMPP"
      ],
      "description": "W tym kursie poznasz jak tworzyć aplikacje web zarówno frontend jak i backend. Kurs został podzielony na 10 modułów.\n\n\nModuł 1 jest wprowadzeniem do kursu. W tym module skonfigurujemy środowisko.\nModuł 2 zawiera podstawy języka. Już w tym module w oparciu o poznaną wiedzę utworzymy aplikację konsolową.\nModuł 3 wprowadza w tematykę programowania obiektowego. Zagłębimy się dokładnie jak tworzyć obiekty, czym jest hermetyzacja i jak pozwala nam kontrolować tworzenie obiektów. Poznamy czym są zasady SOLID i jak oraz kiedy je stosować.\nModuł 4 przestawia czym są testy jednostkowe i jak je pisać. Dowiemy się z czego składa się każdy test, co testować i czego nie testować. Poznamy podejście TDD.\nModuł 5 jest kontynuacją modułu trzeciego. W tym module dokładnie zagłębimy się jak tworzyć obiekty. Poznamy czym są wzorce projektowe, czym jest refleksja i kiedy warto ją stosować, czym są wzorce architektoniczne i jak wpływają na proces wytwarzania aplikacji, czym jest kontener IoC, co to asynchroniczność.\nModuł 6 zawiera informacje o pracy z plikami. W tym module poznamy jak pracować z plikami, jak tworzyć pliki. Zagłębimy się w serializację i deserializację plików JSON i XML\nModuł 7 wprowadza w tematykę baz danych. Omówimy pracę z ORM i dowiemy się jak działają ORMy na przykładzie Entity Framework Core. Poznamy dwa podejścia do modelowania baz danych: Database First i Code First. Następnie zagłębimy się w migrację schematu bazy danych obu tych podejść.\nModuł 8 opisuje czym jest Api. Poznamy czym są kontrolery, middleware'y, czym jest walidacja danych i minimal Api.\nModuł 9 przedstawia czym są testy integracyjne, jak je pisać i dowiemy się, z czego składa się taki test. Porównamy poziom wykonywania testów na przykładzie piramidy i przeanalizujemy wykonywanie testów jednostkowych oraz integracyjnych pod kilkoma kryteriami.\nModuł 10 wprowadza w tematykę tworzenia aplikacji frontowych z wykorzystaniem biblioteki Blazor. W tym module poznamy jak tworzyć komponenty, strony, poznamy czym jest izolacja CSS i jak można używać JavaScript z C#. Następnie dowiemy się jak testować komponenty i na koniec połączymy się z Api\n\n\nTen kurs został zaprojektowany dla osób początkujących jak i też osób, które posiadają podstawy i potrzebują poukładać swoją wiedzę.",
      "target_audience": [
        "Osoby początkujące które chciałyby wejść do świata IT, jak i osoby które są w trakcie nauki programowania C#"
      ]
    },
    {
      "title": "İleri Düzey C# ile EF, Linq, OOP, Devexpress Öğrenin (4/6)",
      "url": "https://www.udemy.com/course/165-saatlik-dev-egitim-projesi-4-6/",
      "bio": "165 Saatlik Web'deki En Kapsamlı İleri Düzey C# ile Entity Framework, Linq, Katmanlı Mimari, OOP, Devexpress Kursu.",
      "objectives": [
        "Bir projenin en başından en sonuna kadar (Kullanıcı girişinden, setup projesine kadar) hangi aşamalardan geçilerek geliştirildiğini öğrenmiş olacaksınız.",
        "Bir projenin kod tekrarı yapılmadan nasıl geliştirilebileceğini öğrenmiş olacaksınız.",
        "Bir proje için yönetim modülü oluşturarak birden fazla Database'in nasıl yönetilebileceğini öğrenmiş olacaksınız.",
        "C#, Entity Framework, Linq, Katmanlı Mimari, Nesneye Yönelik Programlama, Devexpress Componentlerini ileri seviyede kullanmayı öğrenmiş olacaksınız."
      ],
      "course_content": {
        "İNDİRİM KUPONLARI HAKKINDA ÖNEMLİ BİLGİLENDİRME": [
          "İNDİRİM KUPONLARI HAKKINDA ÖNEMLİ BİLGİLENDİRME"
        ],
        "Giriş": [
          "Giriş"
        ],
        "Ödeme Belgesi İşlemleri": [
          "İşlem Makbuzları (1.Bölüm)",
          "İşlem Makbuzları (2.Bölüm)",
          "İşlem Makbuzları (3.Bölüm)",
          "Makbuz Hareketleri Tablosu (1.Bölüm)",
          "Belge Seçim Formu (1.Bölüm)",
          "Belge Seçim Formu (2.Bölüm)",
          "Belge Seçim Formu (3.Bölüm)",
          "Makbuz Hareketleri Tablosu (2.Bölüm)",
          "İşlem Makbuzları, Belge Seçim Formu, Makbuz Hareketleri Tablosu Update İşlemi.",
          "Belge Hareketleri (1.Bölüm)",
          "Belge Hareketleri (2.Bölüm)",
          "Ödeme Bilgileri Tablosu Renklendirme ve Silme İşlemleri"
        ],
        "Rapor İşlemleri": [
          "Rapor Seçim Formu (1.Bölüm)",
          "Rapor Seçim Formu (2.Bölüm)",
          "Rapor Tasarım Formu (Tasarım, Kodlama vb.) işlemler.",
          "Rapor Seçim Formu (3.Bölüm)"
        ],
        "Tahakkuk Raporları": [
          "Öğrenci Kartı Raporu (1.Bölüm)",
          "Öğrenci Kartı Raporu (2.Bölüm)",
          "Öğrenci Kartı Raporu (3.Bölüm)",
          "Banka Ödeme Planı Raporu",
          "MEB Kayıt Sözleşmesi Raporu",
          "İndirim Dilekçesi Raporu",
          "Okul Kayıt Sözleşmesi Raporu",
          "Kredi Kartlı Ödeme Talimatı Raporu",
          "Ödeme Senedi Raporu",
          "Kullanıcı Tanımlı Boş Rapor"
        ],
        "Makbuz Raporları": [
          "Rapor Seçim Formu Update işlemi.",
          "Tahsilat Makbuzu Raporu",
          "Teslimat Makbuzu Raporu",
          "Geri İade Makbuzu Raporu",
          "Genel Makbuz Raporu"
        ],
        "Form İşlemleri": [
          "Şube Formları Tasarım ve Kodlama İşlemleri"
        ]
      },
      "requirements": [
        "Giriş seviyesinde C# bilgisi",
        "Visual Studio ve Devexpress kurulu bir bilgisayarınızın olması"
      ],
      "description": "165 Saatlik Eğitim Programı: Profesyonel Ticari Yazılım Geliştirme\nBu eğitim programı, 6 kapsamlı bölüm ve toplamda 165 Saatlik ders içeriğiyle, ticari yazılım geliştirme sürecinde ihtiyacınız olan tüm temel ve ileri düzey bilgileri kapsamlı bir şekilde sunmaktadır.\n\n\nBu proje kapsamında:\nAltyapı oluşturma → Ticari yazılımlarınızı sağlam bir temel üzerine inşa etmek için gereken teknikleri öğreneceksiniz.\nTasarım kalıplarını uygulama (Patterns) → Projelerinize doğru ve verimli tasarım kalıplarını nasıl entegre edebileceğinizi anlayacaksınız.\nKatmanlı Mimari (Layered Architecture) → Projelerinizi modüler hale getirerek yönetilebilirlik seviyesini yükselteceksiniz.\nYönetim Modülü Entegrasyonu → Her firma için ayrı bir Veritabanı oluşturma ve bunları tek bir yönetim panelinden kontrol etme tekniklerini öğreneceksiniz.\nEntity Framework İleri Düzey Kullanımı → Karmaşık sorgular oluşturma ve bunları kolaylaştırma yöntemlerini keşfedeceksiniz.\nİlişkisel Veritabanı Yönetimi → Entity'ler arasındaki ilişkileri nasıl oluşturacağınızı ve optimize edeceğinizi öğrenerek verimli bir veri yönetimi sağlayacaksınız.\nLINQ ile Güçlü Sorgulamalar → LINQ kullanarak veri çekme, filtreleme ve işlem yapma yöntemlerini geliştireceksiniz.\nAuto Migration → Proje değişikliklerinizi hızlı ve hatasız bir şekilde veritabanınıza entegre etmeyi öğreneceksiniz.\nNesneye Yönelik Programlama (OOP) → Esnek ve sürdürülebilir kod yazma yöntemlerini derinlemesine inceleyeceksiniz.\nKod Tekrarını Minimuma İndirme → Daha temiz ve ölçeklenebilir kodlar yazmayı öğreneceksiniz.\nÖzel Bileşenler (Custom Components) Geliştirme → Kendi kütüphanelerinizi oluşturarak yazılımınıza özel bileşenler eklemeyi öğreneceksiniz.\nKod Standartları ve Best Practices → Kodunuzu endüstri standartlarına uygun şekilde nasıl yazacağınızı öğrenerek profesyonel bir yaklaşım benimseyeceksiniz.\nTablo Verilerini Farklı Formatlara Aktarma → Verilerinizi CSV, Excel, JSON, XML gibi farklı formatlarda dışarı aktarmayı öğreneceksiniz.\nGelişmiş Raporlama Teknikleri → Rapor oluşturma, önizleme, yazdırma ve rapor tasarımını yönetme konularında uzmanlaşacaksınız.\nDevExpress ile Gelişmiş UI Kullanımı → DevExpress bileşenlerini ileri düzeyde kullanarak profesyonel arayüzler oluşturmayı keşfedeceksiniz.\n\n\nEğitim Metodu:\nBu programda, ezbere öğrenmek yerine mantığını kavrayarak ilerleyeceksiniz. Bölüm başlamadan önce, tamamlanmış bir projeyi inceleyerek o aşamada ne yapılması gerektiğini görecek, ardından kendi geliştirme sürecinizi yöneteceksiniz.\n\n\nEğitimi Tamamladığınızda:\nBu eğitim sürecini eksiksiz olarak tamamladığınızda, piyasadaki en gelişmiş ticari yazılımları kendi başınıza geliştirebilecek seviyeye ulaşabilirsiniz.\n\n\nBu eğitim, yazılım geliştirme sürecine profesyonel bir bakış açısı kazandırarak, ticari projelerinizi kusursuz bir şekilde hayata geçirmenize yardımcı olacaktır.",
      "target_audience": [
        "C#, Entity Framework, Linq, Katmanlı Mimari, Nesneye Yönelik Programlama, Devexpress Componentlerini ileri seviyede kullanarak proje geliştirmek isteyenler."
      ]
    },
    {
      "title": "Java 8 in der Praxis",
      "url": "https://www.udemy.com/course/java-8-in-der-praxis/",
      "bio": "Umfassender Einblick in die Neuerungen und Erweiterungen von Java 8 mit praktischen Beispielen",
      "objectives": [
        "Die Neuerungen von Java 8 richtig einzusetzen",
        "Mit den Neuerungen von Java 8 kompakteren, lesbareren und eleganteren Java Code zu schreiben",
        "In Java asynchron zu programmieren",
        "Lambdas richtig zu nutzen",
        "Streams und Collections mit der Stream API elegant zu verarbeiten",
        "Null Pointer Exceptions durch den Einsatz von Optional zu vermeiden",
        "Die neuen Java Features von Android N zu nutzen"
      ],
      "course_content": {
        "Einleitung": [
          "Einführung",
          "Source Code"
        ],
        "Lambdas": [
          "Einleitung",
          "Codeblock",
          "Von der anonymen Klasse zum Lambdaausdruck",
          "Functional Interface - Überblick",
          "Functional Interface - Function",
          "Functional Interface - Consumer",
          "Functional Interface - Supplier",
          "Schreibweisen",
          "Lambda Schreibweisen",
          "Typdeduktion",
          "Sichtbarkeit von Variablen",
          "Lambda Sichtbarkeit von Variablen",
          "Methodenreferenzen"
        ],
        "Implementierungen in Interfaces": [
          "default methods",
          "Mehrfachvererbung",
          "statische Methoden"
        ],
        "asynchrone Programmierung": [
          "Einführung",
          "Futures in Java",
          "Completable Future API"
        ],
        "Streams": [
          "Einführung",
          "Streams erzeugen",
          "Intermediäre Operationen",
          "Terminale Operationen",
          "Klassifizierung",
          "primitive Streams",
          "reduce und collect",
          "Parallelität",
          "Resumee"
        ],
        "die neue Date und Time API": [
          "neue Date und Time API"
        ],
        "Optional": [
          "Einführung",
          "Optional API"
        ]
      },
      "requirements": [
        "Die Teilnehmer sollten bereits Grundkenntnisse in Java haben."
      ],
      "description": "Dieser Kurs bietet einen umfassenden Einblick in die Neuerungen die mit Java Release 8 in Java hinzugefügt worden sind. Neben den bekannteren Sprachfeatures wie die Lambda Ausdrücke und Streams lernt man auch die auf den ersten Blick unscheinbaren Erweiterungen wie Completable Future und Optional kennen. Auch erfahrenen Entwicklern ist es meist nicht bewusst, welche Möglichkeiten man mit Java 8 erhält. Erst die intensive Beschäftigung mit Java 8 vermittelt einen Eindruck der Mächtigkeit der neuen Features. Mit unserem Kurs erhält man kompakt und leicht verständlich genau dieses Wissen welches mit zahlreichen Beispielen vertieft wird.\nKursaufbau und Inhalt\nAlle neuen Features werden nicht nur gezeigt, es werden auch Hintergrundinformationen gegeben und Best Practices für die Anwendung in der Praxis gezeigt. Jede Neuerung aus Java 8 wird in einem eigenen Abschnitt behandelt, in den einzelnen Lektionen genau erklärt und mittels Live Coding die Anwendung in der Praxis an Beispielen gezeigt.\nDies sind die Themen des Kurses:\nLambda Ausdrücke\nStream API\nAsynchrone Programmierung\nFunktionale Programmierung\nOptional\nneue Date & Time API\nDefault Methoden\n\n\nSource Code\nDer gesamte Source Code ist verfügbar und kann vom Teilnehmer heruntergeladen werden und die Beispiele selbst ausprobiert und verändert werden.",
      "target_audience": [
        "Dieser Kurs richtet sich an Entwickler und Programmierer die bereits Java Erfahrungen haben, sich aber mit den neuen Features von Java 8 noch nicht intensiv beschäftigt haben.",
        "Für Teilnehmer ohne jegliche Java Kenntnisse eignet sich dieser Kurs nicht. Die Grundlagen von Java sollten bekannt sein."
      ]
    },
    {
      "title": "Python Mucizesi - Temelden Uzmanlığa (FULL Paket)",
      "url": "https://www.udemy.com/course/python-mucizesi-temelden-uzmanlga-full-paket/",
      "bio": "Python dilini tüm yönleri ile öğrenin",
      "objectives": [
        "Python'ı temelden uzmanlığa kadar öğreneceksiniz.",
        "Eğitimde tüm içerikler WORD dosyası olarak size sunulmakta olup bu nedenle tekrar etmek istediğinizde notları okumanız yeterli olacaktır.",
        "Eğitim içeriği gerçek hayattan bol örnekler ile oluşturulmuş olup bu kapsamda geçmiş kodları unutmayacak şekilde tasarlanmıştır.",
        "Veri Bilimi: Numpy, Pandas, Matplotlib",
        "Big Data",
        "Veri Analizi",
        "Nesne Tabanlı Programlama",
        "Diğer kütüphaneler"
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Python Ortamının Kurulumu"
        ],
        "Temel Python": [
          "Python Genel Yapısı",
          "Basit Metin İşlemleri ve Not Alma İşlemleri",
          "Python'da Metinler, Sayılar ve Türler",
          "Değişkenler",
          "Print Fonksiyonu",
          "PRINT Fonksiyonu ile Dosyaya Veri Yazdırmak",
          "PRINT Fonksiyonunda Özel Karakterler"
        ],
        "Python ile Kodlama": [
          "Veri Girişi ve Input Fonksiyonu",
          "Koşullar (IF Komutu)",
          "Koşul Komutları",
          "Operatörler",
          "Örnek Uygulamalar: Veri Girişi, Koşullar ve Operatörler"
        ],
        "Python Dilinde Diziler ve Büyük Veri İşlemleri": [
          "Listeler (Lists)",
          "Liste İşlemleri",
          "Liste Fonksiyonları",
          "Sözlükler (Dictionaries)",
          "Sözlük Uygulamaları",
          "Sözlük Fonksiyonları",
          "Demetler (Tuples)",
          "Demet (Tuple) Uygulamaları",
          "Kümeler (Sets)"
        ],
        "Döngüler ve Metin İşlemleri": [
          "FOR Döngüsü",
          "FOR Döngüsü Uygulamaları",
          "FOR Döngüsü Deyimleri: Break, Continue, Range, Enumerate, Zip",
          "While Döngüsü",
          "Döngülerde ELSE Deyimi",
          "String (Metin) İşlemleri",
          "String (Metin) Fonksiyonları",
          "İleri String Fonksiyonları",
          "String Uygulamaları: IS ile Başlayan Fonksiyonlar",
          "String Uygulamaları: HTML ve COUNT",
          "String Uygulamaları: INDEX, RINDEX, LJUST ve RJUST",
          "String Uygulamaları: PATITION, RPARTITION, CHR ve ORD",
          "FORMAT Metodu ve Detayları",
          "FORMAT Metodu Uygulamaları"
        ],
        "Fonksiyonlar": [
          "Matematiksel ve Sayısal Fonksiyon ve İşlemler",
          "Tarih Fonksiyon ve İşlemleri",
          "Kullanıcı Tanımlı Fonksiyonlar",
          "Kullanıcı Tanımlı Fonksiyon Uygulamaları",
          "Çok Parametreli Fonksiyon Tanımlama",
          "Hazır Fonksiyonlar",
          "FILTER Fonksiyonu",
          "MAP Fonksiyonu",
          "Genel Fonksiyon Uygulamaları"
        ],
        "Python ile Veri Analizi": [
          "Metinler, Listeler, Sözlükler, Demetler, Kümeler, Koşullar ve Döngüler",
          "Üreteçler",
          "Sözlük Üreteçleri",
          "Tablo ve Filtre İşlemleri",
          "Pivot Analizi",
          "Üreteçlerde Fonksiyon Kullanmak",
          "Üreteçlerde IF Komutu",
          "İstatistik ve Simülasyon",
          "Sözlüklerde Arama/Tespit İşlemleri",
          "Listeleri Hizalayarak Yazdırma İşlemleri",
          "Arama Motoru Algoritması Oluşturmak",
          "İkili Tablo Eşleştirme İşlemleri",
          "İkili Tablo Eşleştirme Uygulamaları",
          "Çoklu Tablo Eşleştirme İşlemleri",
          "Çoklu Tabloları Sözlük Kullanımı ile Kısaltma",
          "Mali Tablo İşlemleri",
          "Metinler için Üreteçler"
        ],
        "Dosya İşlemleri": [
          "Dosyaya Veri Yazmak",
          "Dosyadan Veri Okumak",
          "Dosya İşlemleri Uygulamaları",
          "Dosya İşlemleri Kuralları"
        ],
        "Hata İşlemleri": [
          "Python Program Hataları",
          "Hata Uygulamaları"
        ],
        "Nesne Tabanlı Programlama": [
          "Modüller ve Kütüphaneler",
          "Kullanıcı Tanımlı Modüller",
          "Modül Çağırma Kuralları",
          "Sınıf (Class) Oluşturma",
          "Sınıflara Başlangıç Değeri Atamak",
          "Sınıf Başlangıç Değeri Uygulamaları",
          "Çok Değişkenli Sınıf İşlemleri",
          "Sınıflarda Gizli Değişkenler ve Yarı Gizli Değişkenler",
          "Sınıflarda Miras Alma",
          "Sınıf (Class) Uygulamaları"
        ]
      },
      "requirements": [
        "Kurs için herhangi bir ön koşul yoktur. Hiç kodlama bilmeyenler için de uygun bir eğitimdir."
      ],
      "description": "Python Mucizesi - Temelden Uzmanlığa (Full Paket) eğitimine hoş geldiniz.\nBu eğitim, diğer tüm Python eğitimlerimi içeren bir tam dolu pakettir. Bu eğitimi satın aldığınızda diğer Python paketlerimi satın almanıza gerek kalmamakla birlikte ileride başka Python eğitimleri yayınladığımda bu eğitimlerin içerikleri otomatik olarak buraya da eklenecektir.\nBilindiği gibi yazılım dillerinde çok kod olduğu için yeni öğrendiğiniz bilgiler eski bilgileri unutmanıza yol açar. Bu eğitimde bu sorun kökten giderilmiştir. Bu kapsamsa şu hususlar uygulanmıştır:\nEğitim içerikleri bol örnekler ile yapılmıştır. O kadar çok örnek vardır ki, öğrendiklerinizi aradan uzun zaman geçse bile gözünüz kapalı tekrar yapabilirsiniz.\nEğitimin tüm içerikleri not olarak size sunulmaktadır. Böylece tekrar etmek istediğinizde videoları yeniden izlemenize gerek yoktur. Notlara göz atmanız yeterlidir. Bu notlar WORD olarak verildiği için telefonunuz dahil her yerden okuyabilirsiniz.\nTüm örnekler gerçek hayattan örneklerdir.\nHer adımda yeni kodlar öğretilirken çok örnek yapmanın yanında geçmişte öğrendiğiniz kodlar ile birleştirerek konuları anlatıyoruz.\nEğitimde kod anlatımının yanında özellikle strateji geliştirme konusu da çok detaylı şekilde anlatılmaktadır.\n\n\nEĞİTİM İÇERİĞİ:\nGiriş\nPython Ortamının Kurulumu\nTemel Python\nPython Genel Yapısı\nBasit Metin İşlemleri ve Not Alma İşlemleri\nPython'da Metinler, Sayılar ve Türler\nDeğişkenler\nPrint Fonksiyonu\nPRINT Fonksiyonu ile Dosyaya Veri Yazdırmak\nPRINT Fonksiyonunda Özel Karakterler\nPython ile Kodlama\nVeri Girişi ve Input Fonksiyonu\nKoşullar (IF Komutu)\nKoşul Komutları\nOperatörler\nÖrnek Uygulamalar: Veri Girişi, Koşullar ve Operatörler\nPython Dilinde Diziler ve Büyük Veri İşlemleri\nListeler (Lists)\nListe İşlemleri\nListe Fonksiyonları\nSözlükler (Dictionaries)\nSözlük Uygulamaları\nSözlük Fonksiyonları\nDemetler (Tuples)\nDemet (Tuple) Uygulamaları\nKümeler (Sets)\nDöngüler ve Metin İşlemleri\nFOR Döngüsü\nFOR Döngüsü Uygulamaları\nFOR Döngüsü Deyimleri: Break, Continue, Range, Enumerate, Zip\nWhile Döngüsü\nDöngülerde ELSE Deyimi\nString (Metin) İşlemleri\nString (Metin) Fonksiyonları\nİleri String Fonksiyonları\nString Uygulamaları: IS ile Başlayan Fonksiyonlar\nString Uygulamaları: HTML ve COUNT\nString Uygulamaları: INDEX, RINDEX, LJUST ve RJUST\nString Uygulamaları: PATITION, RPARTITION, CHR ve ORD\nFORMAT Metodu ve Detayları\nFORMAT Metodu Uygulamaları\nFonksiyonlar\nMatematiksel ve Sayısal Fonksiyon ve İşlemler\nTarih Fonksiyon ve İşlemleri\nKullanıcı Tanımlı Fonksiyonlar\nKullanıcı Tanımlı Fonksiyon Uygulamaları\nÇok Parametreli Fonksiyon Tanımlama\nHazır Fonksiyonlar\nFILTER Fonksiyonu\nMAP Fonksiyonu\nGenel Fonksiyon Uygulamaları\nPython ile Veri Analizi\nMetinler, Listeler, Sözlükler, Demetler, Kümeler, Koşullar ve Döngüler\nÜreteçler\nSözlük Üreteçleri\nTablo ve Filtre İşlemleri\nPivot Analizi\nÜreteçlerde Fonksiyon Kullanmak\nÜreteçlerde IF Komutu\nİstatistik ve Simülasyon\nSözlüklerde Arama/Tespit İşlemleri\nListeleri Hizalayarak Yazdırma İşlemleri\nArama Motoru Algoritması Oluşturmak\nİkili Tablo Eşleştirme İşlemleri\nİkili Tablo Eşleştirme Uygulamaları\nÇoklu Tablo Eşleştirme İşlemleri\nÇoklu Tabloları Sözlük Kullanımı ile Kısaltma\nMali Tablo İşlemleri\nMetinler için Üreteçler\nDosya İşlemleri\nDosyaya Veri Yazmak\nDosyadan Veri Okumak\nDosya İşlemleri Uygulamaları\nDosya İşlemleri Kuralları\nHata İşlemleri\nPython Program Hataları\nHata Uygulamaları\nNesne Tabanlı Programlama\nModüller ve Kütüphaneler\nKullanıcı Tanımlı Modüller\nModül Çağırma Kuralları\nSınıf (Class) Oluşturma\nSınıflara Başlangıç Değeri Atamak\nSınıf Başlangıç Değeri Uygulamaları\nÇok Değişkenli Sınıf İşlemleri\nSınıflarda Gizli Değişkenler ve Yarı Gizli Değişkenler\nSınıflarda Miras Alma\nSınıf (Class) Uygulamaları\nVeri Bilimi (Data Science): Pandas Kütüphanesi\nDataFrame İşlemleri\nDataFrame Adres İşlemleri\nDataFrame Örnek Uygulamaları\nVeriler Üzerinde Değişiklik Yapmak (Silmek, Eklemek, Dönüştürmek)\nFiltreleme İşlemleri\nFiltre Uygulamaları\nMetin Dosyası Analiz İşlemleri\nExcel İşlemleri\nCSV İşlemleri\nXML İşlemleri\nDataFrame Tekrar ve Uygulamaları\nSERIES İşlemleri\nIndex ve Tablo Yapısı İşlemleri\nVeri Değiştirme İşlemleri\nAritmetik İşlemler\nAritmetik İşlemler ve Veri Uygulamaları\nMetin (String) İşlemleri\nTablo Birleştirme İşlemleri\nTablo Eşleştirme Kuralları\nTablo Eşleştirme İşlemleri\nÇoklu Tablo Eşleştirme\nPandas Fonksiyonları\nVeri Gruplama ve İstatistiki Analizler\nPivot Tablo\nPivot Tabloda Çoklu Satır ve Sütun\nPivot Tablo Uygulamaları\nGrafik Çizim İşlemleri\nVeri Bilimi (Data Science): Numpy Kütüphanesi\nNumpy Kütüphanesi Genel Görünümü\nDizilerin Yapısı\nDizi (ARRAY) Tanımlama İşlemleri\nDizi Üreteci Parametreleri\nNumpy Veri Türleri\nDizilerde Sıralama İşlemi\nDizi ile İlgili Bilgi Alma\nAdresleme İşlemleri\nFiltreleme İşlemleri\nDizi Verilerini Değiştirmek\nDizilerde Birleştirme İşlemi\nDizileri Alt Dizilere Bölmek\nTemel Matematiksel İşlemler\nTrigonometrik ve Logaritmik İşlemler\nNumpy Uygulamaları\nBir Dizideki Benzersiz Elemanları Listelemek\nDizileri Ters Çevirmek\nÇok Boyutlu Dizileri Sadeleştirmek\nNumpy ile Veri İşleme ve Yapılandırılmış Diziler\nGrafik İşlemleri (Matplotlib Kütüphanesi)\nTemel Grafik İşlemleri\nGrafik Bileşenleri\nGrafik Parametre Uygulamaları\nGrafiğin Belli Bir Alanını Göstermek\nEksen Etiketlerini Düzenlemek\nTek Grafik İçerisinde Çoklu Çizim\nÇoklu Grafikleri Farklı Bölgelerde Göstermek\nÇoklu Grafik Uygulamaları\nGrafik Çeşitleri\nÇubuk (Bar) Grafik\nÇubuk Grafik Parametreleri\nEksen Değerlerini Değiştirmek\nÜst Üste Çubuk Grafikler\nFarklı Kaynakları Grafiğe Çevirmek\nGrafiğe Tablo Eklemek\nİki Boyutlu Verilerde Tablo Ekleme\nÇubuk Grafik Uygulamaları\nGrafiklere Veri Etiketi Eklemek\nDağılım (Scatter) Grafiği\nPasta (Pie) Grafik\nAlan (Area) Grafiği\nHistogram Grafik",
      "target_audience": [
        "Bu kurs, Python'ı en ileri seviyede profesyonelce öğrenmek isteyenler içindir."
      ]
    },
    {
      "title": "Curso de Lógica de Programação com PHP",
      "url": "https://www.udemy.com/course/logica-de-programacao-com-php/",
      "bio": "Curso ideal para quem quer estudar PHP e não sabe por onde iniciar",
      "objectives": [
        "Curso passo a passo que ensinará você os principais conceitos da linguagem PHP",
        "Vários exercícios resolvido passo a passo",
        "A incrível metodologia do método ágora, que ensina você a pensar como programador",
        "Variáveis, Operadores, Estruturas de controle, estruturas de repetição, etc"
      ],
      "course_content": {
        "Iniciar aqui": [
          "Introdução",
          "Instalando Wamp",
          "Conceituando Variáveis",
          "Explicando variáveis na prática",
          "Escopo de variáveis",
          "Variáveis pré-definidas",
          "Definição de tipos de dados",
          "Verificando tipos de dados com gettype",
          "Estudando tipos de dados boolean",
          "Estudando tipos de dados inteiros",
          "Estudando tipos de dados string",
          "Estudando constantes",
          "Estudando constantes na prática",
          "Operadores aritméticos",
          "Operadores de atribuição",
          "Operadores de incremento e decremento",
          "Operadores de comparação e lógicos",
          "Conhecendo formulários",
          "Componentes de formulários",
          "Componentes de formulários na prática",
          "Enviando dados via formulários",
          "Método get e método pos",
          "Estrutura de controle if",
          "Estrutura de controle if na prática",
          "Estrutura de repetição",
          "Estrutura de repetição na prática",
          "Estudando funções",
          "Estudando funções na prática",
          "encerramento"
        ],
        "Exercícios Aprendendo pensar como programador": [
          "Salário de um funcionário - Aprendendo pensar",
          "Salário de um funcionário - Resolução",
          "Dias de vida de uma pessoa - Aprendendo pensar",
          "Dias de vida de uma pessoa - resolução",
          "Salário líquido de um funcionário - Aprendendo pensar",
          "Salário líquido de um funcionário - resolução",
          "Maior valor - Aprendendo pensar",
          "Maior valor - Resolução",
          "Média 04 notas - Aprendendo pensar",
          "Média 04 notas - Resolução",
          "Lados de um triângulo - Aprendendo pensar",
          "Lados de um triângulo - Resolução",
          "Salário de um funcionário - Aprendendo pensar",
          "Salário de um funcionário - Resolução",
          "Número de Cédulas - Aprendendo pensar",
          "Número de Cédulas - Resolução",
          "Múltiplos de 100 - Aprendendo pensar",
          "Múltiplos de 100 - Resolução",
          "Número primo - Aprendendo pensar",
          "Número primo - resolução",
          "Série de Fibbonacci - Aprendendo pensar",
          "Série de fibonacci - Resolução",
          "Valor de um terreno - Aprendendo pensar",
          "Valor de um terreno - Resolução",
          "Sorteio de um número - Aprendendo pensar",
          "Sorteio de um número - Resolução"
        ]
      },
      "requirements": [
        "Este curso é ideal para qualquer pessoa que queira entrar no mundo da programação PHP e não tem nenhum conhecimento, o cursos é passo a passo com uma metodologia baseada na experiência do aluno fazendo com que ele aprenda a pensar como um programador"
      ],
      "description": "O Curso Completo de Lógica de Programação com PHP aborda todos os assuntos necessários para quem quer começar estudar PHP e não tem nenhum conhecimento.\nO curso é muito passo a passo, a metodologia é clara e sempre misturando a teoria com muita prática, durante os exercícios o aluno tem a chance de aprender a raciocinar como um programador, pois antes da solução dos problemas sempre ensinamos como pensar na solução da questão, desta forma, o aluno mesmo consegue resolver os exercícios e com isso aumenta em quase 100% o seu aprendizado.\n\nO curso foi preparado para que qualquer pessoa consiga entender os princípios básicos da Lógica de Programação, pois entendemos que a lógica de programação é fundamental para entender qualquer linguagem.",
      "target_audience": [
        "Para este curso o conhecimento necessário é apenas entender de algum sistema operacional (Windows, mac, linux, etc)",
        "Curso feito para ser estudado por qualquer pessoa"
      ]
    },
    {
      "title": "60 Minutes of Swift - Swift 2 Grundlagen",
      "url": "https://www.udemy.com/course/60-minutes-of-swift-swift-2-grundlagen/",
      "bio": "Die Grundlagen von Apples Programmiersprache Swift 2. Geeignet für Anfänger und Fortgeschrittene.",
      "objectives": [
        "Beherrschung der Grundlagen von Swift 2",
        "Grundstein für die weitere Beschäftigung mit Swift 2",
        "Einstieg in die iOS und OSX Programmierung"
      ],
      "course_content": {},
      "requirements": [
        "Mac oder PC mit OSX Betriebssystem (mind. Yosemite)",
        "Xcode 7 (kostenlos im Appstore erhältlich)"
      ],
      "description": "Du willst in Apples Programmiersprache Swift einsteigen mit dem Ziel Apps für iOS und OSX zu programmieren? Dann bist du hier richtig. Wir erklären die Grundlagen von Swift im Playground von Xcode 7 und legen so den wichtigen Grundstein für eine erfolgreiche Karriere als Swift Entwickler! Aber was genau behandeln wir im Kurs?\n- Variablen und Konstanten\n- Grundlegende Typen wie String, Int, Double und Bool\n- Arrays und Dictionaries\n- Bedingungen\n- Schleifen\n- Übungsaufgaben mit ausführlichen Lösungen\n- Viele nützliche und hilfreiche Tipps und Tricks auf unserem Weg\n- Grundlagen für komplexeres Arbeiten mit Swift in der iOS oder OSX Programmierung\nIn ca. 60 Minuten könnt ihr hier eine Menge mitnehmen und interaktiv euer neu erlerntes Wissen ausprobieren!",
      "target_audience": [
        "Anfänger in Swift 2",
        "Programmieranfänger",
        "Fortgeschrittene als Auffrischung"
      ]
    },
    {
      "title": "Curso de Lógica de Programação com JAVA",
      "url": "https://www.udemy.com/course/logica-de-programacao-com-java/",
      "bio": "Um curso feito para Todos que desejam aprender Java e não sabem por onde começar",
      "objectives": [
        "Curso passo a passo que ensinará você os principais conceitos da linguagem Java",
        "Todos os assuntos são divididos em duas partes: teoria e prática",
        "Vários exercícios resolvidos passo a passo",
        "A incrível metodologia do método ágora, que ensina você a pensar como programador",
        "Variáveis",
        "Operadores",
        "Estruturas de Controles",
        "Estruturas de Repetição e muito mais"
      ],
      "course_content": {
        "Estudando variáveis": [
          "Apresentação do Curso",
          "Primeiras Instruções",
          "Conceituando variáveis",
          "Regra para identificadores",
          "Lista de palavras reservadas",
          "Tipos de variáveis",
          "Criando variáveis",
          "Criando variáveis na prática"
        ],
        "Tipos de Dados": [
          "Conhecendo tipos de dados primitivos",
          "Criando variáveis",
          "Entendendo o escopo de uma variável na prática",
          "Conhecendo tipos de dados mais a fundo",
          "Primeira Parada",
          "Terceira Instrução",
          "tipo byte e casting",
          "Tipo short e tabela de casting",
          "Tipo de int valores literais",
          "Tipo long",
          "Tipo ponto flutuante",
          "Tipo char",
          "Quarta Parada"
        ],
        "Estudando Operadores": [
          "Quinta Intrução",
          "Conhecendo os operadores aritméticos - teoria",
          "Conhecendo os Operadores Aritmética - prática",
          "Conhecendo os Operadores de atribuição - teoria",
          "Conhecendo os operadores - prática",
          "Conhecendo os operadores de decremento e incremento - teoria",
          "Operador de decremento e incremento - prática",
          "Sexta intrução"
        ],
        "Entrada e Saída de Dados": [
          "Definindo entrada de dados",
          "Entrada de dados com system.in",
          "Classe scanner - teoria",
          "Classe scanner - prática",
          "Classe JOptionPane - teoria",
          "Classe JOptionPane - prática",
          "printf",
          "Saida com JOptionPane",
          "Instrução 07"
        ],
        "Estrutura de Controle e Estrutura de Repetição": [
          "Conhecendo Operadores de Comparação",
          "Conhecendo as estruturas de controle - parte 01",
          "Conhecendo as estruturas de controle - parte 02",
          "Conhecendo as estruturas de controle if else if",
          "Conhecendo as estruturas de controle switch case",
          "Conhecendo o operador ternário ?"
        ],
        "Aprendendo Pensar como Programador - Lista de Exercícios": [
          "Salário de um funcionário - Aprendendo Pensar",
          "Salário de um funcionário - Resolução",
          "Dias de vida de uma pessoa - Aprendendo Pensar",
          "Dias de vida de uma pessoa - Resolução",
          "Gerente de uma loja - Aprendendo Pensar",
          "Gerente de uma loja - Resolução",
          "Salário Líquido - Aprendendo Pensar",
          "Salário Líquido - Resolução"
        ],
        "Aprendendo Pensar como Programador 2 - Exercícios": [
          "Maior valor - Aprendendo a pensar",
          "Maior valor - resolução",
          "Média de 04 notas bimestrais - Aprendendo a pensar",
          "Média de 04 noras bimestrais - resolução",
          "Lados de um triângulo - Aprendendo a pensar",
          "Lados de um triângulo - resolução",
          "Salário de um funcionário - Aprendendo a pensar",
          "Salário de um funcionário - resolução"
        ],
        "Exercícios Diversos": [
          "Quantidade de Cédulas - Aprendendo a pensar",
          "Quantidade de Cédulas - Resolução",
          "Soma de 05 valores - Aprendendo a pensar",
          "Soma de 05 valores - resolução",
          "Múltiplos entre 100 e 200 - Aprendendo a pensar",
          "Múltiplos entre 100 e 200 - resolução",
          "Maior de 05 valores - Aprendendo a pensar",
          "Maior de cinco valores - resolução",
          "Idade de 05 pessoas - Aprendendo a pensar",
          "Idade de Pessoas - Resolução",
          "Número Primo - Aprendendo a pensar",
          "Número Primo - resolução",
          "Fibbonacci - Aprendendo a pensar",
          "Fibbonacci - resolução",
          "Valor de um terreno - Aprendendo a pensar",
          "Valor de um terreno - Resolução",
          "Jogo de advinhar número - Aprendendo pensar",
          "Jogo de advinhar número - Resolução",
          "Desenho de pirâmide - Aprendendo a pensar",
          "Desenho de uma pirâmide - resolução",
          "Equação do 2º Grau - Aprendendo a pensar",
          "Equação do 2º Grau - Resolução",
          "Tipla de pitágoras - Aprendendo a pensar",
          "Tripla de Pitágoras - Resolução",
          "Expressão 01 - Aprendendo a pensar",
          "Expressão 01 - Resolução",
          "Expressão 02 - Aprendendo a pensar",
          "Expressão 02 - Resolução"
        ]
      },
      "requirements": [
        "Para este curso o conhecimento necessário é apenas entender de algum sistema operacional (Windows, mac, linux, etc)",
        "Qualquer pessoa conseguirá entender este curso"
      ],
      "description": "O Curso Completo de Lógica de Programação com Java aborda todos os assuntos necessários para quem quer começar estudar java e não tem nenhum conhecimento.\nO curso é muito passo a passo, a metodologia é clara e sempre misturando a teoria com muita prática, durante os exercícios o aluno tem a chance de aprender a raciocinar como um programador, pois antes da solução dos problemas sempre ensinamos como pensar na solução da questão, desta forma, o aluno mesmo consegue resolver os exercícios e com isso aumenta em quase 100% o seu aprendizado.\nO curso foi preparado para que qualquer pessoa consiga entender os princípios básicos da Lógica de Programação, pois entendemos que a lógica de programação é fundamental para entender qualquer linguagem.",
      "target_audience": [
        "Este curso é ideal para qualquer pessoa que queira entrar no mundo da programação Java e não tem nenhum conhecimento, o cursos é passo a passo com uma metodologia baseada na experiência do aluno fazendo com que ele aprenda a pensar como um programador"
      ]
    },
    {
      "title": "Visual Basic: Conviértete en un Experto de Programacion",
      "url": "https://www.udemy.com/course/lenguaje-para-empezar-a-programar-visual-basic/",
      "bio": "Conviertete en Todo un Experto en Programacion con Visual Basic con este curso de visual basic para principiantes",
      "objectives": [
        "Crear Una Aplicacion con Visual Basic",
        "Usar Visual Microsoft Basic Studios",
        "Trabajar Con el IDE de Microsoft Visual Studio",
        "Usar Todas Las Delacraciones que Visual Basic Tiene",
        "Usar Los Bucles Como Todo Un Profesional",
        "Como Encontrar y Corregir un Error en Tu Codigo",
        "Como Usar Funciones Para Hacer Tu Vida mas Facil",
        "Formularios de Windows"
      ],
      "course_content": {
        "Empezando a Conocer Visual Basic Y Visual Studio": [
          "Que es Visual Basic?"
        ],
        "Introducion a Visual Studios": [
          "Introducción a la Seccion 1",
          "Paseo Por IDE de Visual Studio",
          "Primer Programa - Hola Mami",
          "Tipos de Datos Primitivos",
          "Comentarios y Errores",
          "Variables con Visual Basic",
          "Reglas Para Nombra Las Variables en Visual Basic",
          "Variables",
          "Conclusion a la seccion"
        ],
        "Operadores y Sentencias": [
          "Operaciones de Matematicas",
          "LÓGICAS Y MATEMÁTICAS EN VISUAL BASIC",
          "Conseguir Datos de usuario",
          "Creación de una calculadora básica",
          "La sentencia If en Visual Basic",
          "las sentencia ElseIf y Else",
          "Operadores Condicionales o de Comparación",
          "Lista de Los operadores lógicos",
          "Operadores Logicos",
          "Conclusion a la seccion"
        ],
        "Instruducion a las Cadenas/sentencias": [
          "Conectando Cadenas en Visual Basic",
          "Obtener El Largo de Una Cadena",
          "Trabajando con SubCadenas",
          "Formateando Las Cadenas",
          "Reemplazando Cadenas/Sentencias",
          "Conclusion a Las Cadenas"
        ],
        "Ya LLegaron Los Bucles/Loops": [
          "Introduccion a Los Bucles",
          "Alla Vamos! Declaracion Select Case",
          "Una Mas!! Declaracion Select Case Else",
          "Ya Llegamos!! El Bucle/Loops For",
          "Otro Mas! Bucle For con el Step/Salto",
          "Como Parar Un Bucle Con Una Sentencia IF",
          "Continuar el Bucle For",
          "Loop Do Until/Bucle Hacer hasta que",
          "Loop Do while/Bucle Hazlo Mientras",
          "Como Parar El Loop Do While/Bucle Hazlo Mientras",
          "Como Ejectuar Do Until Una Sola vez",
          "Nested Loop/Nido Bucle"
        ],
        "Formularios De Windows Con Visual Basic": [
          "Introduccion a Formularios de Windows",
          "Propiedades de el formulario",
          "Caja de propiedades"
        ]
      },
      "requirements": [
        "Vas a Necesitar Microsoft Visual Studio"
      ],
      "description": "Este curso se trata de como aprender a programar aplicaciones con microsoft visual studio. Para crear las aplicaciones vamos a usar el lenguaje Visual Basic. Visual Studio apredenderás a crear aplicaciones facilmente ya que podras ver lo que esta haciendo con Visual Studio. Tambien, descubriras la interfaz IDE que trae Microsoft Visual Basic Studios.\nLa primera parte es la introducción a esta herramienta, conocer sus bondades, características, fundamentos tambien como el IDE de Visual Studio.\nLa segunda parte tratamos Programación usando la consola de Visual Basic Studio para poder aprender tipos de datos tambien como variables y errores.\nLa tercera parte comenzamos a trabajar con la sentencias if statement, ya que estas son muy util e importante en la programacion de cualquier aplicacion y programa.\nCuarta Parte vamos a empezar a con los for loops que le hacen la vida facil a cualquier programador que es familiar con los diferentes loops disponibles.",
      "target_audience": [
        "Este Curso es para aquellos que quieren aprender a programar",
        "Este Curso es para aquellos que tienen un conocimiento de programacion",
        "Este Curso es Para Aquellos sin Ningún conocimiento de programación"
      ]
    },
    {
      "title": "Delphi I - Sistema de Estoque em 175 videoaulas",
      "url": "https://www.udemy.com/course/delphi-i-sistema-de-estoque-em-175-videoaulas/",
      "bio": "Criar um sistema de estoque completo (até saída de mercadorias e baixa no estoque) em rede, código de barras",
      "objectives": [
        "Dominar o Delphi 7 desde o começo",
        "Criar um sistema de estoque completo (até saída de mercadorias e baixa no estoque)",
        "Criar consultas e relatórios",
        "Implementação em rede",
        "Código de barras"
      ],
      "course_content": {
        "Inicie aqui o curso de Delphi I e crie sistemas completos": [
          "aula 01 delphi - criando as pastas",
          "aula 02 delphi - conhecendo o Delphi",
          "aula 03 delphi - Criando a aplicacao",
          "aula 04 delphi - inserindo botoes panel e label",
          "aula 05 delphi - alinhamento",
          "aula 06 delphi - Menus",
          "aula 07 delphi - Barra de Status",
          "aula 08 delphi - data e hora na barra de status",
          "aula 09 delphi - Inserindo Imagens no Form",
          "aula 010 delphi - Criando um novo Formulario",
          "aula 011 delphi - chamando um formulario",
          "aula 012 delphi -download Interbase",
          "aula 013 delphi -Instalacao",
          "aula 014 delphi -criando a base de dados",
          "aula 015 delphi -registrar base de dados",
          "aula 016 delphi -criando uma tabela",
          "aula 017 delphi -consultas select",
          "aula 018 delphi -inserir_dados_via_sql",
          "aula 019 delphi -criando indices",
          "aula 020 delphi -generator e trigger para codigo automatico",
          "aula 021 delphi -tabela_funcionario",
          "aula 22 delphi - exluindo registros",
          "aula 23 delphi - criando modulo de dados",
          "aula 24 delphi - inserindo IBTAbles e DataSources no Data Modulo",
          "aula 25 delphi - ligando um form com uma tabela",
          "aula 26 delphi - abrindo e fechando tabelas",
          "aula 27 delphi - ordenação",
          "aula 28 delphi - Consulta via Selecao",
          "aula 29 delphi - consulta via digitação",
          "aula 30 delphi - DBComboBoxUF",
          "aula 31 delphi - DbGrid Legenda e Selecionando",
          "aula 32 delphi - DbGrid Cores e Fonte",
          "aula 33 delphi - DbGrid Linhas e Colunas",
          "aula 34 delphi - HintsDBNavigator",
          "aula 35 delphi - TeclasdeAtalho",
          "aula 36 delphi - CodigoAtomatico",
          "aula 37 delphi - CampoCodigoProtegido",
          "aula 38 delphi - SetFocusncampoNome",
          "aula 39 delphi - taborder",
          "aula 40 Delphi - Bairro e Log",
          "aula 41 delphi - Adicionando ao Repositorio",
          "aula 42 delphi - criando bairro baseando-se em cidade",
          "aula 43 delphi - Ajeitando Form Bairro 1",
          "aula 44 delphi - Ajeitando Form Bairro 2",
          "aula 45 delphi - Finalizando Ajustes Bairro",
          "aula 46 delphi - Cargo Log Bairro",
          "aula 47 delphi - Cliente Banco Interbase",
          "aula 48 delphi - Clientes 1 Tamanho e DbGrid",
          "aula 49 delphi - Clientes 2 Inserindo os Componentes",
          "aula 50 delphi - Clientes Ajeitando Componentes1",
          "aula 51 delphi - Clientes Ajeitando Componentes2",
          "aula 52 delphi - Clientes Testando 1 Registro",
          "aula 53 delphi - Inserindo Máscaras nos Campos",
          "aula 54 delphi - DBLookup ComboBox Cidade Bairro Log",
          "aula 55 delphi - Abrindo e Fechando as Tabelas bairro log cid",
          "aula 56 delphi - Campos Virtuais para End. Bai. Cid.",
          "aula 57 Foto delphi - colocando os componentes",
          "aula 58 Foto delphi - Programacao Execute e Strect",
          "aula 59 Foto delphi - Diretorio Padrao",
          "aula 60 Foto delphi - grava endereco da foto no campo",
          "aula 61 Foto delphi - Colocando em Modo de Edicao",
          "aula 62 Foto delphi - Atualiza ao Navegar e Entrar no Form",
          "aula 63 Foto delphi - Corrige Bug ao Inserir",
          "aula 64 Foto delphi - Sem Foto",
          "aula 65 delphi - Tab Or der Cliente",
          "aula 66 delphi - chama Log do Cliente",
          "aula 67 delphi - Funcionario Tabela",
          "aula 68 delphi - funcionario Repositorio e DMDADOS",
          "aula 69 delphi - Funcionario Ajeitando",
          "aula 70 delphi - Funcionario DbLookups",
          "aula 71 delphi - Funcionario Codigos",
          "aula 72 delphi - Funcionario Indices no Interbase",
          "aula 73 delphi - Funcionario Chamar e Compilar Muitos Erros",
          "aula 74 delphi - Ero CAmpo Foto tamanho",
          "aula 75 delphi - alterando tamanho Campo Foto",
          "aula 76 delphi - alterou tamanho Campo Foto",
          "aula 77 delphi - Corrigindo Erro Foto Func",
          "aula 78 delphi - Mais Erros Fotos quando Vazio",
          "aula 79 delphi - testando Funcionario",
          "aula 80 delphi - corrigindo Bug Foto DBLookup ComboBox",
          "aula 81 delphi - foto bug Foto Pesquisas Corrigido",
          "aula 82 delphi - foto bug Foto Pesquisas Corrigido Cliente",
          "aula 83 delphi - relatorio Cidade Quick Report",
          "aula 84 delphi - relatorio Cidade Bands",
          "aula 85 delphi - relatorio Cidade Cabecalho e Rodape",
          "aula 86 delphi - relatorio Cidade ColumHeadeDetail",
          "aula 87 delphi - relatorio Cidade Mostrando Dados",
          "aula 88 delphi - corrigido problema erro",
          "aula 89 delphi - relatorio Cidade Personalizando",
          "aula 90 delphi - relatorio Cidade Encerrando",
          "aula 91 delphi - 77_Instalando o QuickReport",
          "aula 92 delphi - relatorio Bairro Template",
          "aula 93 delphi - relatorio Bairro Fim",
          "aula 94 delphi - Relatorio Cargo",
          "aula 95 delphi - Relatorio Logradouro",
          "aula 96 delphi - Relatorio Cliente parte 1 e Bug Detectado",
          "aula 97 delphi - Correcao Bug Relatorio Cidade",
          "aula 98 delphi - Correcao Bugs Relatorio BaiLogCarCliente",
          "aula 99 delphi - ZFim Relatorio de Clientes",
          "aula 100 delphi - Relatorio Funcionarios Completo",
          "aula 101 Campos Virtuais para Relatorio Funcionario",
          "aula 102 delphi - Estoque Criando tabela e indices no Interbase",
          "aula 103 delphi - Cria FormEstoque",
          "aula 104 Estoque Data Modulo",
          "aula 105 delphi - Estoque Ajeitando Campos",
          "aula 106 delphi - Estoque Codigo Fonte",
          "aula 107 delphi - Estoque Tipo do Produto",
          "aula 108 delphi - Estoque Chamando e Cadastrando",
          "aula 109 delphi - Estoque Abrindo e Fechando Tabelas",
          "aula 110 delphi - Estoque Mascaras na Data",
          "aula 111 delphi - Estoque Tabulacao",
          "aula 112 delphi - Estoque Formato Moeda",
          "aula 113 delphi - Estoque Data Automatica",
          "aula 114 delphi - Estoque Calcula Preco Venda",
          "aula 115 delphi - Estoque Corrige Bug Pesquisa Lookup",
          "aula 116 delphi - Estoque Chaves Estrangeiras",
          "aula 117 delphi - Criando Chave Esrangeira",
          "aula 118 delphi",
          "aula 119 delphi",
          "aula 120 delphi",
          "aula 121 delphi",
          "aula 122 delphi",
          "aula 123 delphi",
          "aula 124 delphi",
          "aula 125 delphi",
          "aula 126 delphi",
          "aula 127 delphi",
          "aula 128 delphi",
          "aula 129 delphi",
          "aula 130 delphi",
          "aula 131 delphi",
          "aula 132 delphi",
          "aula 133 delphi",
          "aula 134 delphi",
          "aula 135 delphi",
          "aula 136 delphi",
          "aula 137 delphi",
          "aula 138 delphi",
          "aula 139 delphi",
          "aula 140 delphi",
          "aula 141 delphi",
          "aula 142 delphi",
          "aula 143 delphi",
          "aula 144 delphi",
          "aula 145 delphi",
          "aula 146 delphi",
          "aula 147 delphi - Login Criandoa tabela edmdados",
          "aula 148 delphi - Login Criando o Formulario",
          "aula 149 delphi - Login Project Password ChareMBrOk",
          "aula 150 delphi - Login PesquisaLogin e biblioteca na DB",
          "aula 151 delphi - Login Analisa a Senha",
          "aula 152 delphi - Login Tenta no Maximo 2 vezes",
          "aula 153 delphi - Login Chama Aplicativo Importante"
        ],
        "Atualizado em 2011": [
          "aula 3650 delphi - removendo interbase e instalando firebird",
          "aula 3651 delphi - trocando e testando banco de dados GDB por FDB",
          "aula 3652 delphi - alterando senha do banco de dados firebird",
          "aula 3653 delphi - iniciando delphi em rede criando servidor",
          "aula 3654 delphi - remote protocol server funcionando o sistema em rede",
          "aula 3655 delphi - trocar nome servidor por endereco ip do servidor",
          "aula 3656 delphi - persistencia de dados na rede",
          "aula 3657 delphi - gravando fisicamente CommitRetaining IbTrabsaction nao perder",
          "aula 3658 delphi - visualizando os dados em tempo real",
          "aula 3659 delphi - usando dbexpress sqlconnection para conectar com firebird",
          "aula 3660 delphi - dbexpress ClienDataSet DataSetProvider SqlDataSet",
          "aula 3661 delphi - tdataset procedure abrindo e fechando tabela",
          "aula 3662 delphi - ibtransaction read_commited",
          "aula 3663 delphi - instalando componentes para codigo de barras",
          "aula 3664 delphi - gerando relatorio codigo de barras",
          "aula 3665 delphi - CJVQrDbBarCode finalizando codigo de barras com delphi",
          "aula 3666 delphi - HlinkNavigateString urlMon Abrindo paginas web pelo delphi",
          "aula 3667 delphi"
        ]
      },
      "requirements": [
        "Não tem pré-requisito"
      ],
      "description": "Delphi e Interbase/Firebird (175 Videoaulas).\nFoi implementado a parte de programação em Redes, Código de Barras entre outros.... Crie um um programa completo de controle de estoque!\nVeja algumas coisas que você irá aprender?\nAprenda a rodar o seu sistema em rede\nAprenda a gerar etiquetas de código de barras e implementar no seu sistema lendo os produtos através do leitor\nAprenda a criar o formulário principal, inserindo nele menus, botões, figuras, data, hora, barra de status, componente timer etc. Aprenda também a chamar os demais formulários do programa.\nAprenda a criar o formulário de clientes completo (campos virtuais, máscaras, como inserir e visualizar a foto do cliente, efetuar pesquisas via digitação ou através de ComboBox, como usar o DBLookUpComboBox para ligar outras tabelas usando chave estrangeira DBGrid, etc.)\nAprenda a criar relatórios usando o QuickReport. Você também aprenderá a criar relatórios provindos de consultas SQL. Com isso, todos os dados das tabelas e de consultas SQL poderão ser visualizados na tela e impressos.\n\n\nA B A I X O V E J A O C R O N O G R A M A D E S T E C U R S O\naula 01 delphi - criando as pastas\naula 02 delphi - conhecendo o Delphi\naula 03 delphi - Criando a aplicacao\naula 04 delphi - Inserindo Imagens no Form\naula 05 delphi - inserindo botoes panel e label\naula 06 delphi - alinhamento\naula 07 delphi - Menus\naula 08 delphi - Barra de Status\naula 09 delphi - data e hora na barra de status\naula 010 delphi - Criando um novo Formulario\naula 011 delphi - chamando um formulario\naula 012 delphi -download Interbase\naula 013 delphi -Instalacao\naula 014 delphi -criando a base de dados\naula 015 delphi -criando uma tabela\naula 016 delphi -registrar base de dados\naula 017 delphi -consultas select\naula 018 delphi -inserir_dados_via_sql\naula 019 delphi -criando indices\naula 020 A delphi -generator e trigger para codigo automatico\naula 020 B delphi -tabela_funcionario\naula 020 delphi -registros\n\naula 21 delphi - DbGridLegendaeSelecionando\n\naula 22 delphi - DbGridCoreseFonte\naula 23 delphi - DbGridLinhaseColunas\naula 24 delphi - HintsDBNavigator\naula 25 delphi - TeclasdeAtalho\naula 27 delphi - CodigoAtomatico\naula 28 delphi - CampoCodigoProtegido\naula 29 delphi - SetFocusncampoNome\naula 30 delphi - taborder\naula 031 Delphi - Bairro e Log\naula 032 delphi - Adicionando ao Repositorio\naula 033 delphi - criando bairro baseando-se em cidade\naula 034 delphi - Ajeitando Form Bairro 1\naula 035 delphi - Ajeitando Form Bairro 2\naula 035 delphi - Finalizando Ajustes Bairro\naula 036 delphi - Cargo Log Bairro\naula 037 delphi - Cliente Banco Interbase\naula 039 delphi - Clientes 1 Tamanho e DbGrid\naula 040 delphi - Clientes 2 Inserindo os Componentes\naula 041 delphi - Clientes Ajeitando Componentes1\naula 042 delphi - Clientes Ajeitando Componentes2\naula 043 delphi - Clientes Testando 1 Registro\naula 044 delphi - Inserindo Máscaras nos Campos\naula 045 delphi - DBLookup ComboBox Cidade Bairro Log\naula 046 delphi - Abrindo e Fechando as Tabelas bairro log cid\naula 047 delphi - Campos Virtuais para End. Bai. Cid.\naula 048 Foto delphi - colocando os componentes\naula 049 Foto delphi - Programacao Execute e Strect\naula 050 Foto delphi - Diretorio Padrao\naula 051 Foto delphi - grava endereco da foto no campo\naula 052 Foto delphi - Colocando em Modo de Edicao\naula 053 Foto delphi - Atualiza ao Navegar e Entrar no Form\naula 054 Foto delphi - Corrige Bug ao Inserir\naula 055 Foto delphi - Sem Foto\naula 056 delphi - Tab Or der Cliente\naula 057 delphi - chama Log do Cliente\naula 061 delphi - Funcionario Tabela\naula 062 delphi - funcionario Repositorio e DMDADOS\naula 063 delphi - Funcionario Ajeitando\naula 064 delphi - Funcionario DbLookups\naula 065 delphi - Funcionario Codigos\naula 066 delphi - Funcionario Indices no Interbase\naula 067 delphi - Funcionario Chamar e Compilar Muitos Erros\naula 068 delphi - Ero CAmpo Foto tamanho\naula 069 delphi - alterando tamanho Campo Foto\naula 070 delphi - alterou tamanho Campo Foto\naula 071 delphi - Corrigindo Erro Foto Func\naula 072 delphi - Mais Erros Fotos quando Vazio\naula 073 delphi - testando Funcionario\naula 074 delphi - corrigindo Bug Foto DBLookup ComboBox\naula 075 delphi - foto bug Foto Pesquisas Corrigido\naula 076 delphi - foto bug Foto Pesquisas Corrigido Cliente\naula 077 delphi - relatorio Cidade Quick Report\naula 078 delphi - relatorio Cidade Bands\naula 079 delphi - relatorio Cidade Cabecalho e Rodape\naula 080 delphi - relatorio Cidade ColumHeadeDetail\naula 081 delphi - corrigido problema erro\naula 082 delphi - relatorio Cidade Mostrando Dados\naula 083 delphi - relatorio Cidade Personalizando\naula 084 delphi - relatorio Cidade Encerrando\naula 085 delphi - 77_Instalando o QuickReport\naula 087 delphi - relatorio Bairro Template\naula 088 delphi - relatorio Bairro Fim\naula 089 delphi - Relatorio Cargo\naula 090 delphi - Relatorio Logradouro\naula 091 delphi - Relatorio Cliente parte 1 e Bug Detectado\naula 092 delphi - Correcao Bug Relatorio Cidade\naula 093 delphi - Correcao Bugs Relatorio BaiLogCarCliente\naula 093 delphi - ZFim Relatorio de Clientes\naula 094 delphi - Relatorio Funcionarios Completo\naula 095 Campos Virtuais para Relatorio Funcionario\naula 109 delphi - Estoque Criando tabela e indices no Interbase\naula 110 delphi - Cria FormEstoque\naula 111 Estoque Data Modulo\naula 112 delphi - Estoque Ajeitando Campos\naula 113 delphi - Estoque Codigo Fonte\naula 114 delphi - Estoque Tipo do Produto\naula 115 delphi - Estoque Chamando e Cadastrando\naula 116 delphi - Estoque Abrindo e Fechando Tabelas\naula 117 delphi - Estoque Mascaras na Data\naula 118 delphi - Estoque Tabulacao\naula 119 delphi - Estoque Formato Moeda\naula 120 delphi - Estoque Data Automatica\naula 121 delphi - Estoque Calcula Preco Venda\naula 122 delphi - Estoque Corrige Bug Pesquisa Lookup\naula 123 delphi - Estoque Chaves Estrangeiras\naula 124 delphi - Criando Chave Esrangeira\naula 155 delphi - Login Criandoa tabela edmdados\naula 156 delphi - Login Criando o Formulario\naula 157 delphi - Login Project Password ChareMBrOk\naula 158 delphi - Login PesquisaLogin e biblioteca na DB\naula 159 delphi - Login Analisa a Senha\naula 160 delphi - Login Tenta no Maximo 2 vezes\naula 161 delphi - Login Chama Aplicativo Importante\nAtualizado em 2011\naula 3650 delphi - removendo interbase e instalando firebird\naula 3651 delphi - trocando e testando banco de dados GDB por FDB\naula 3652 delphi - alterando senha do banco de dados firebird\naula 3653 delphi - iniciando delphi em rede criando servidor\naula 3654 delphi - remote protocol server funcionando o sistema em rede\naula 3655 delphi - trocar nome servidor por endereco ip do servidor\naula 3656 delphi - persistencia de dados na rede\naula 3657 delphi - gravando fisicamente CommitRetaining IbTrabsaction nao perder dados\naula 3658 delphi - visualizando os dados em tempo real\naula 3659 delphi - usando dbexpress sqlconnection para conectar com firebird\naula 3660 delphi - dbexpress ClienDataSet DataSetProvider SqlDataSet\naula 3661 delphi - tdataset procedure abrindo e fechando tabela\naula 3662 delphi - iniciando leitor de codigo de barras\naula 3662 delphi - ibtransaction read_commited\naula 3663 delphi - instalando componentes para codigo de barras\naula 3664 delphi - gerando relatorio codigo de barras\naula 3665 delphi - CJVQrDbBarCode finalizando codigo de barras com delphi\naula 3666 delphi - HlinkNavigateString urlMon Abrindo paginas web pelo delphi",
      "target_audience": [
        "Todos que querem iniciar na vida de programador"
      ]
    },
    {
      "title": "Temelden Orta Düzeye C++ Programlama | Algoritma Uygulamalı",
      "url": "https://www.udemy.com/course/temelden-orta-duzeye-c-programlama-algoritma-uygulamal/",
      "bio": "Temel Programlama, C++ Programlama Dili Yapısı, Algoritma",
      "objectives": [
        "Algoritma nedir en basit haliyle öğreneceksiniz",
        "Dünyanın en çok kullanılan programlama dillerinden biri olan C++ yazılım dilini temelden öğreneceksiniz",
        "En temel seviyeden başlayıp adım adım ilerleyeceksiniz.",
        "C++ programlama diliyle ilgili bol bol soru çözülen ve uygulama yapılan bir eğitimle programlama mantığını çok daha iyi öğreneceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Programlamaya Giriş - Algoritma Nedir? - DevC++ Kurulumu - İlk Program Uyg.",
          "C++ Programlama Dili Yapısı - Input Output Komutları - Değişkenler",
          "Karakter ve Stringler | Özel Karakterler | Operatörler | Soru Çözümü"
        ],
        "Karar Yapıları (If Else) (Decision Structure)": [
          "Soru Çözümleri - Karar Yapıları (If-Else) - Akış Şeması - Uygulamalı Örnek",
          "Soru Çözümü ve Uygulama",
          "Karar Yapıları Akademik Düzeyde Uygulamalı Soru Çözümleri",
          "Switch Case Konu Anlatımı ve Uygulamalı Soru Çözümü"
        ],
        "Döngüler (Loops)": [
          "Arttırma Azaltma Operatörleri - For Döngüsü - Uygulamalı Soru Çözümü",
          "For Döngüsü Soru Çözümleri - Uygulama - Break ve Continue Deyimleri",
          "While - Do While Döngüleri Konu Anlatımı - Soru Çözümü - Uygulama"
        ],
        "Diziler (Arrays)": [
          "Tek Boyutlu ve Çift Boyutlu Diziler - Soru Çözümü"
        ],
        "Fonksiyonlar (Functions)": [
          "Matematiksel Fonksiyonlar - Soru Çözümü - String Kütüphane Fonksiyonları"
        ],
        "Örnek Projeler": [
          "Hesap Makinesi - Formül Programı - İlaç Sorgu Programı",
          "ATM Programı Oluşturma"
        ],
        "Genel Tekrar": [
          "Genel Tekrar - Bonus"
        ]
      },
      "requirements": [
        "Eğitim temelden anlatıldığı için herhangi bir programlama deneyimi gerektirmez."
      ],
      "description": "Online C++ Programlama Dili Eğitimi Hakkında\nOnline C++ Programlama Dili Eğitimi günümüzün en gözde mesleklerinden biri. Bu önemli mesleğin eğitimi alanında uzman eğitmenler tarafından hazırlandı. C++ programlama dilini online metotla öğrenirken son derece keyif alacak ve bilgileneceksiniz. Algoritma yeteneğiniz gelişiyor olacak. Yazılan kodların bilgisayarın dilinde nasıl algılandığını öğreneceksiniz.\n\n\nC++ Programlama Dili Kullanılan Alanlar Nelerdir?\nŞimdi de C++ Programlama Dili Kullanılan Alanlar Nelerdir? hep birlikte inceleyelim. C++ Programlama Dili birden fazla alanda kullanılmaktadır. Bunları maddeler halinde inceleyelim:\n\n\nİşletim Sistemleri\nC++ Dili amacı itibariyle işletim sistemleri kodlamak için uygun bir dildir. Aynı zamanda son derece hızlı olduğu için tercih edilir. Çünkü işletim sistemleri son derece hızlı çalışmalı. Dahası sistem kaynaklarını yönetmede üst düzey verim sağlamalı. C++ Programlama Dili buna tamamen uygun bir yazılım alt yapısı sunar.\nHangi işletim sistemleri C++ Dili ile kodlandı bakalım. Örneğin, Linux C++ Dili ile yazılmıştır. Microsoft Windows işletim sistemlerinin tüm sürümleri C ++ Dili ile kodlanmıştır. Ayrıca Android ve iOS sistemlerinin bazı bölümleri de yine C++ Dili ile yazılıp kodlanmıştır.\n\n\nGömülü Sistemler\nGömülü sistemlerde de genel olarak C++ Dili tercih edilir. Bundaki esas neden programın hızlı çalışmasını sağlaması. Ayrıca bellek tüketimi son derece az olduğu için ideal bir dil olarak kabul görür. Örneklendirecek olursak; saatler, otonom arabalar, loT sensörleri ya da kahve makineleri gibi cihazların tamamı C++ Dili ile kodlanmıştır.\n\n\nOyunlar\nBiliyorsunuz oyunlarda performans ve hız son derece kritik bir öneme sahiptir. Bu nedenle oyun alanında dil seçimi yapmak için çok fazla seçenek yoktur. Devreye hemen C++ Dili girer. Neden? Çünkü günümüzdeki en hızlı programlama dili C++ Programlama Dilidir. Dolayısı ile 3D oyunlar başta olmak üzere bütün oyunlar için en iyi tercihtir. Örneklendirecek olursak. GTA sürümleri, Counter-Strike, Diablo I, World of Warcraft, StarCraft: Blood War gibi oyunların tamamı C++ Dili ile yazılmış oyunlardır.\n\n\n\n\n\n\nC++ Programlama Dili Eğitiminden Kimler Yararlanabilir?\nPeki, bu C++ Programlama Dili Eğitiminden Kimler Yararlanabilir? şimdi de bunları maddeler halinde görelim.\nC++ Programlama öğrenerek kariyerini bu yönde sürdürmek isteyenler.\nSıfırdan ileri seviyeye C++ Programlama Dilini öğrenmek isteyenler.\nC++ Programlama Dillerinin ne kadar zor olduğunu düşünenler.\nC++ Programlama Algoritma yeteneğini yükseltmek isteyenler.\nBu alana ilgi duyan 7’den 70‘e herkes C++ Programlama Eğitiminden faydalanabilir.\n\n\nC++ Programlama Dili Eğitimi Ders İçerikleri Nelerdir?\nSon olarak C++ Programlama Dili Eğitimi ders içerikleri nelerdir? incelememizi yapalım.\nGiriş\nGerekli Programların Kurulumu\nDeğişkenler ve Sabitler\nAtama Operatörleri\nVeri Tipleri\nKarar Yapıları\nIf Else Yapısı\nSwitch-Case\nDöngüler\nWhile Döngüsü\nDo While Döngüsü\nFor Döngüsü\nC++ Break Komutu\nC++ Continue Komutu\nC++ Fonksiyonlar\nDizi, Sayı ve String Nesneleri\nDiziler\nSayılar\nString Kullanımı",
      "target_audience": [
        "Yazılıma merak duyanlar",
        "Bilgisayar ve programlama alanında kendini geliştirmek isteyenler",
        "Öz geçmişini güçlendirmek isteyenler",
        "Yazılım dillerini öğrenmek isteyen kişiler",
        "Temel C++ programlama dilini öğrenmek isteyen herkes"
      ]
    },
    {
      "title": "Desarrolla 1 Chatbot Messenger y aprende Python en el camino",
      "url": "https://www.udemy.com/course/desarrolla-chatbot-messenger-y-aprende-python/",
      "bio": "Desarrolla tu primer Chatbot usando Python, Google Cloud Storage y Google App Engine",
      "objectives": [
        "Desarrollar un primer Chatbot completamente funcional para Facebook Messenger",
        "Personalizar un Chatbot fácilmente mediante programación",
        "Reforzar sus conocimientos sobre Python como lenguaje de programación"
      ],
      "course_content": {
        "Introducción y configuración inicial": [
          "Introducción",
          "Acerca de la configuración inicial",
          "Descarga de Python y SDK",
          "Crear una app Python",
          "Deploy usando el comando gcloud"
        ],
        "Comunicación con Facebook Messenger": [
          "Crear y configurar una app en Facebook",
          "Obtener mensajes desde Messenger",
          "Parsear mensajes obtenidos",
          "Enviar mensajes a Messenger",
          "Enviar botones Postback como alternativas",
          "Restricciones de los botones postback"
        ],
        "Lógica principal del Bot": [
          "Clase Bot",
          "Lectura del árbol conversacional YAML",
          "Lógica del bot",
          "Primera respuesta del bot",
          "Simular un historial de mensajes",
          "Simular más niveles en el historial"
        ],
        "Data Access Object (DAO)": [
          "Google Datastore y Python NDB",
          "Guardar y leer eventos de Google Datastore",
          "Ordenar y eliminar eventos de Datastore",
          "Aplicar Datastore al historial"
        ],
        "Circunstancias especiales": [
          "Mensaje inicial y mensaje por defecto",
          "Reiniciar conversación",
          "Reconocer botones postback",
          "Intervención de un humano",
          "Eventos de tipo eco (message echoes)",
          "Desactivar bot ante un administrador"
        ],
        "Publicación y pasos siguientes": [
          "Publicación del chatbot",
          "Explorando más tipos de template y buttons",
          "Repositorio en Github",
          "Ignorar respuesta negativa"
        ]
      },
      "requirements": [
        "Tener nociones básicas de programación (con cualquier lenguaje)",
        "Muchas ganas de aprender"
      ],
      "description": "El presente curso tiene un objetivo bastante claro:\nAprenderás a desarrollar tu primer Chatbot para Facebook Messenger, y además\nReforzarás (o aprenderás) los conceptos principales de Python, como lenguaje de programación\nPero eso no es todo, porque también aprenderás a usar Google Cloud Platform, a través de 2 servicios que ofrece:\nGoogle App Engine (como hosting, para publicar nuestro Chatbot)\nGoogle DataStore (para guardar un historial de las conversaciones)\n\n\nEn resumen:\nAprenderás muchos conceptos importantes, todos relacionados con las tecnologías antes mencionadas.\nY lo mejor es que al final del curso podrás publicar tu propia versión. Un chatbot creado por ti de principio a fin.\n\n\nNota:\nEl curso te aportará ideas y una buena base para el desarrollo de Chatbots.\nSin embargo, debes tener en cuenta que actualmente presenta ciertas diferencias con los servicios que ofrece Google.\nDe todas formas, ante cualquier duda, podrás siempre consultarme.\n\n\n¿Cómo es posible el funcionamiento de un Chatbot?\nBásicamente, cuando un usuario escribe un mensaje a través de Messenger.\nMessenger notifica de ello a tu aplicación, a través de un Webhook.\nEl Webhook debe responder entonces con la respuesta del Chatbot.\nEsta respuesta puede contener un mensaje simple, o bien ofrecer opciones.\nTodo este flujo lo revisamos e implementamos durante el curso!",
      "target_audience": [
        "Personas interesadas en aprender Python mientras desarrollan un Chatbot para Facebook Messenger",
        "Desarrolladores que quieran conocer más sobre el desarrollo de Chatbots para Facebook Messenger",
        "Personas que quieran crear su primer Chatbot en base a preguntas y respuestas"
      ]
    },
    {
      "title": "İleri Düzey C# ile EF, Linq, OOP, Devexpress Öğrenin (6/6)",
      "url": "https://www.udemy.com/course/165-saatlik-dev-egitim-projesi-6-6/",
      "bio": "165 Saatlik Web'deki En Kapsamlı İleri Düzey C# ile Entity Framework, Linq, Katmanlı Mimari, OOP, Devexpress Kursu.",
      "objectives": [
        "Bir projenin en başından en sonuna kadar (Kullanıcı girişinden, setup projesine kadar) hangi aşamalardan geçilerek geliştirildiğini öğrenmiş olacaksınız.",
        "Bir projenin kod tekrarı yapılmadan nasıl geliştirilebileceğini öğrenmiş olacaksınız.",
        "Bir proje için yönetim modülü oluşturarak birden fazla Database'in nasıl yönetilebileceğini öğrenmiş olacaksınız.",
        "C#, Entity Framework, Linq, Katmanlı Mimari, Nesneye Yönelik Programlama, Devexpress Componentlerini ileri seviyede kullanmayı öğrenmiş olacaksınız."
      ],
      "course_content": {
        "İNDİRİM KUPONLARI HAKKINDA ÖNEMLİ BİLGİLENDİRME": [
          "İNDİRİM KUPONLARI HAKKINDA ÖNEMLİ BİLGİLENDİRME"
        ],
        "Giriş": [
          "Giriş"
        ],
        "Öğrenci Takip Modülü-1": [
          "Ana Form Tasarım ve Kodlama İşlemleri. (1.Bölüm)",
          "Dönem Parametre İşlemleri.",
          "Skin (Tema) İşlemleri.",
          "Kullanıcı Parametre İşlemleri (1.Bölüm)",
          "Kullanıcı Parametre İşlemleri (2.Bölüm)",
          "Ana Form Tasarım ve Kodlama İşlemleri. (2.Bölüm)",
          "Kullanıcı Parametre İşlemleri (3.Bölüm)"
        ],
        "Yönetim Modülü": [
          "Ana Form Tasarım ve Kodlama İşlemleri. (1.Bölüm)",
          "Ana Form Tasarım ve Kodlama İşlemleri. (2.Bölüm)",
          "Kurum Formu Tasarım ve Kodlama İşlemleri (1.Bölüm)",
          "Kurum Formu Tasarım ve Kodlama İşlemleri (2.Bölüm)",
          "Ana Form Tasarım ve Kodlama İşlemleri. (3.Bölüm)",
          "Giriş Form Tasarım ve Kodlama İşlemleri.",
          "Ana Form Tasarım ve Kodlama İşlemleri. (4.Bölüm)",
          "Email Parametreleri",
          "Şube Formlar Update İşlemi.",
          "Dönem Formları Tasarım ve Kodlama İşlemleri.",
          "Dönem Parametreleri (1.Bölüm)",
          "Dönem Parametreleri (2.Bölüm)",
          "Kurum Bilgileri",
          "Rol İşlemleri (1.Bölüm)",
          "Rol İşlemleri (2.Bölüm)",
          "Rol İşlemleri (3.Bölüm)",
          "Rol İşlemleri (4.Bölüm)",
          "Rol İşlemleri (5.Bölüm)",
          "Kullanıcı İşlemleri (1.Bölüm)",
          "Kullanıcı İşlemleri (2.Bölüm)",
          "Kullanıcı Birim Yetkileri"
        ],
        "Öğrenci Takip Modülü-2": [
          "Giriş Formu İşlemleri (1.Bölüm)",
          "Bağlantı Ayarları Formu Tasarım ve Kodlama İşlemleri.",
          "Giriş Formu İşlemleri (2.Bölüm)",
          "Şifremi Unuttum Formu Tasarım ve Kodlama İşlemi.",
          "Şube ve Dönem Seçim Form ve Tablolar Tasarım ve Kodlama İşlemleri.",
          "Şifre Değiştir Formu Tasarım ve Kodlama İşlemi.",
          "Farklı Veri Girişleri Yapılarak Kullanıcı Birim Yetkileri Kontrolü.",
          "Program Açılış SplashForm İşlemleri.",
          "Kullanıcı Yetki Kontrolü İşlemleri.",
          "Devexpress Componentlerinin Türkçeleştirme İşlemleri.",
          "Navigators Update İşlemleri.",
          "Solution'a proje eklerken oluşabilecek hatalar ve çözüm yolları.",
          "Assembly ve Versiyonlama İşlemleri.",
          "App.Config File şifreleme işlemleri.",
          "Probing tanımlamasıyla proje referans dosyalarının konumunu değiştirme.",
          "Setup Projesi İşlemleri.",
          "Farklı bir konumda bulunan Server'e bağlanmak için gereken Ayarların yapılması."
        ]
      },
      "requirements": [
        "Giriş seviyesinde C# bilgisi",
        "Visual Studio ve Devexpress kurulu bir bilgisayarınızın olması"
      ],
      "description": "165 Saatlik Eğitim Programı: Profesyonel Ticari Yazılım Geliştirme\nBu eğitim programı, 6 kapsamlı bölüm ve toplamda 165 Saatlik ders içeriğiyle, ticari yazılım geliştirme sürecinde ihtiyacınız olan tüm temel ve ileri düzey bilgileri kapsamlı bir şekilde sunmaktadır.\n\n\nBu proje kapsamında:\nAltyapı oluşturma → Ticari yazılımlarınızı sağlam bir temel üzerine inşa etmek için gereken teknikleri öğreneceksiniz.\nTasarım kalıplarını uygulama (Patterns) → Projelerinize doğru ve verimli tasarım kalıplarını nasıl entegre edebileceğinizi anlayacaksınız.\nKatmanlı Mimari (Layered Architecture) → Projelerinizi modüler hale getirerek yönetilebilirlik seviyesini yükselteceksiniz.\nYönetim Modülü Entegrasyonu → Her firma için ayrı bir Veritabanı oluşturma ve bunları tek bir yönetim panelinden kontrol etme tekniklerini öğreneceksiniz.\nEntity Framework İleri Düzey Kullanımı → Karmaşık sorgular oluşturma ve bunları kolaylaştırma yöntemlerini keşfedeceksiniz.\nİlişkisel Veritabanı Yönetimi → Entity'ler arasındaki ilişkileri nasıl oluşturacağınızı ve optimize edeceğinizi öğrenerek verimli bir veri yönetimi sağlayacaksınız.\nLINQ ile Güçlü Sorgulamalar → LINQ kullanarak veri çekme, filtreleme ve işlem yapma yöntemlerini geliştireceksiniz.\nAuto Migration → Proje değişikliklerinizi hızlı ve hatasız bir şekilde veritabanınıza entegre etmeyi öğreneceksiniz.\nNesneye Yönelik Programlama (OOP) → Esnek ve sürdürülebilir kod yazma yöntemlerini derinlemesine inceleyeceksiniz.\nKod Tekrarını Minimuma İndirme → Daha temiz ve ölçeklenebilir kodlar yazmayı öğreneceksiniz.\nÖzel Bileşenler (Custom Components) Geliştirme → Kendi kütüphanelerinizi oluşturarak yazılımınıza özel bileşenler eklemeyi öğreneceksiniz.\nKod Standartları ve Best Practices → Kodunuzu endüstri standartlarına uygun şekilde nasıl yazacağınızı öğrenerek profesyonel bir yaklaşım benimseyeceksiniz.\nTablo Verilerini Farklı Formatlara Aktarma → Verilerinizi CSV, Excel, JSON, XML gibi farklı formatlarda dışarı aktarmayı öğreneceksiniz.\nGelişmiş Raporlama Teknikleri → Rapor oluşturma, önizleme, yazdırma ve rapor tasarımını yönetme konularında uzmanlaşacaksınız.\nDevExpress ile Gelişmiş UI Kullanımı → DevExpress bileşenlerini ileri düzeyde kullanarak profesyonel arayüzler oluşturmayı keşfedeceksiniz.\n\n\nEğitim Metodu:\nBu programda, ezbere öğrenmek yerine mantığını kavrayarak ilerleyeceksiniz. Bölüm başlamadan önce, tamamlanmış bir projeyi inceleyerek o aşamada ne yapılması gerektiğini görecek, ardından kendi geliştirme sürecinizi yöneteceksiniz.\n\n\nEğitimi Tamamladığınızda:\nBu eğitim sürecini eksiksiz olarak tamamladığınızda, piyasadaki en gelişmiş ticari yazılımları kendi başınıza geliştirebilecek seviyeye ulaşabilirsiniz.\n\n\nBu eğitim, yazılım geliştirme sürecine profesyonel bir bakış açısı kazandırarak, ticari projelerinizi kusursuz bir şekilde hayata geçirmenize yardımcı olacaktır.",
      "target_audience": [
        "C#, Entity Framework, Linq, Katmanlı Mimari, Nesneye Yönelik Programlama, Devexpress Componentlerini ileri seviyede kullanarak proje geliştirmek isteyenler."
      ]
    },
    {
      "title": "Python de 0 a Héroe - Actualizado 2025",
      "url": "https://www.udemy.com/course/python-de-0-a-heroe/",
      "bio": "Desde 0 hasta bases de datos y detección de rostros",
      "objectives": [
        "Reconocimiento facial (El sistema dirá el nombre de la persona detectada)",
        "Variables y constantes",
        "Tipos de datos",
        "Estructuras de control",
        "Funciones",
        "Prácticas por tema",
        "Programación básica en Python"
      ],
      "course_content": {
        "Introducción": [
          "Presentación del curso",
          "Introducción",
          "Instalación de Anaconda",
          "Nota importante",
          "Creación del entorno de trabajo",
          "Instalar y desinstalar librerias con pip",
          "Palabras reservadas",
          "Hola mundo"
        ],
        "Nivel 1": [
          "Comentarios",
          "Mensajes en pantalla",
          "Variables y constantes parte 1",
          "Variables y constantes parte 2",
          "Ingresar datos por teclado",
          "Cierre nivel 1"
        ],
        "Nivel 2": [
          "Intro",
          "Introducción a tipos de datos",
          "Datos numéricos",
          "Dato tipo bool",
          "Operadores de asignación",
          "Operadores aritméticos",
          "Operadores relacionales",
          "Ejemplos operadores relacionales",
          "Ejercicio integrador 1",
          "Operadores lógicos",
          "Ejemplo operadores lógicos",
          "Ejercicio operadores lógicos",
          "Cadenas parte 1",
          "Cadenas parte 2",
          "Cadenas parte 3",
          "Cadenas parte 4",
          "Listas parte 1",
          "Listas parte 2",
          "Listas parte 3",
          "Listas parte 4",
          "Listas parte 5",
          "Listas parte 6",
          "Tuplas",
          "Diccionarios parte 1",
          "Diccionarios parte 2",
          "Diccionarios parte 3",
          "Diccionarios parte 4",
          "Conjuntos parte 1",
          "Conjuntos parte 2"
        ],
        "Nivel 3": [
          "Introducción",
          "Control de flujo parte 1",
          "Control de flujo parte 2",
          "Ejercicio integrador 2",
          "Ciclo While parte 1",
          "Ciclo While parte 2",
          "Ejercicio integrador 3",
          "Ciclo For parte 1",
          "Ciclo For parte 2",
          "Reto",
          "Reto",
          "Bucles anidados parte 1",
          "Bucles anidados parte 2",
          "Bucles anidados parte 3",
          "Solución al reto"
        ],
        "Nivel 4": [
          "Introducción",
          "Definición, llamada y retorno",
          "Argumentos por nombre y posición",
          "*args",
          "**kwargs",
          "Variables en las funciones",
          "Paso por valor y paso por referencia",
          "Control de excepciones"
        ],
        "Reconocimiento facial mediante Deep Learning(Proyecto integrador)": [
          "Presentación del proyecto",
          "Instalación de librerías",
          "Proyecto"
        ],
        "SQLite": [
          "Introducción a SQL",
          "La base de datos relacional",
          "Introducción a SQLite",
          "Instalación de SQLite",
          "Tipos de datos",
          "Mi primera base de datos",
          "Insertar y consultar datos",
          "Primer acercamiento al lenguaje SQL",
          "Introducción al lenguaje SQL",
          "Flexibilidad del lenguaje SQL",
          "CREATE TABLE",
          "Cuestionario",
          "ALTER TABLE",
          "Ejercicio",
          "INSERT INTO",
          "PRIMARY KEY",
          "Repaso SELECT",
          "DISTINCT",
          "ORDER BY",
          "Práctica ORDER BY",
          "Solución-práctica ORDER BY",
          "LIMIT",
          "COUNT",
          "Ejercicio COUNT",
          "Solución ejercicio COUNT",
          "Repaso SELECT + WHERE",
          "Comparaciones 1",
          "Comparaciones 2",
          "Comparaciones 3",
          "BETWEEN",
          "IN",
          "Operadores lógicos",
          "IS NULL y NOT",
          "DELETE",
          "UPDATE",
          "JOIN Y ALIAS",
          "JOIN Y ALIAS 2",
          "Resultado ejercicio JOIN ALIAS",
          "Introducción UNION",
          "UNION y UNION ALL",
          "EXCEPT",
          "Ejercicio EXCEPT",
          "SUM Y CAST",
          "MIN y MAX",
          "LOWER y UPPER",
          "SUBSTR",
          "Concatenación de cadenas",
          "Reto GROUP BY",
          "Solución GROUP BY",
          "Reto consultas anidadas y vistas",
          "DATETIME",
          "DATETIME Formatos fraccionarios",
          "DATETIME Modificadores"
        ],
        "SQLite + Python": [
          "SQLite + Python - Parte 1",
          "SQLite + Python - Parte 2",
          "SQLite + Python - Parte 3"
        ],
        "Modificación del proyecto": [
          "Dotando al sistema con una base de datos"
        ],
        "Multihilos": [
          "Introducción",
          "Mi primer hilo",
          "Pasando valores a funciones",
          "Bloqueando el main thread",
          "Threads demonio",
          "Race condition",
          "Eventos parte 1",
          "Eventos parte 2",
          "Time out",
          "Reutilización de hilos parte 1",
          "Reutilización de hilos parte 2"
        ]
      },
      "requirements": [
        "Grandes ganas de aprender Python",
        "Acceso a internet",
        "Computadora o laptop"
      ],
      "description": "¡Bienvenido a tu punto de partida en el mundo de la programación! En este curso, aprenderás a dominar Python, uno de los lenguajes más populares y versátiles en el mundo de la tecnología. Sin importar si nunca has escrito una línea de código, aquí encontrarás una guía clara y práctica para convertirte en un programador confiado y eficiente.\n¿Qué aprenderás?\nBases sólidas de Python:\nInstala y configura tu entorno de trabajo fácilmente con Anaconda.\nAprende los conceptos fundamentales como variables, operadores, y estructuras de datos (listas, diccionarios, tuplas, etc.).\nComprende cómo funcionan los ciclos y estructuras de control para tomar decisiones en tu código.\nFunciones y manejo de errores:\nDescubre cómo escribir funciones poderosas para organizar tu código.\nAprende a manejar errores de manera inteligente y eficiente.\nProyectos reales:\nImplementa un sistema de reconocimiento facial con Deep Learning.\nCrea bases de datos con SQLite y aprende a integrarlas con Python.\nSQL desde cero:\nAprende a manejar bases de datos con SQL, desde lo básico hasta consultas avanzadas.\nRealiza operaciones como insertar, eliminar, actualizar y combinar datos de forma eficiente.\nProgramación avanzada:\nTrabaja con multihilos y multiprocesamiento para maximizar la velocidad y eficiencia de tus programas.\nAprende a manejar tareas simultáneas y comprender cómo los procesos trabajan en equipo.\nRetos y ejercicios prácticos:\nRefuerza tus conocimientos con ejercicios integradores y retos que simulan problemas reales.\n¿Para quién es este curso?\nPara principiantes sin experiencia en programación que quieren aprender desde cero.\nPara estudiantes o profesionales que buscan agregar Python a sus habilidades.\nPara entusiastas que quieren crear proyectos impactantes como un sistema de reconocimiento facial o trabajar con bases de datos.\n¿Qué necesitas?\nUna computadora con acceso a internet.\nGanas de aprender y resolver problemas.",
      "target_audience": [
        "Principiantes del lenguaje Python"
      ]
    },
    {
      "title": "Khóa học Javascript Chuyên Sâu",
      "url": "https://www.udemy.com/course/khoa-hoc-javascript-chuyen-sau/",
      "bio": "Khóa học giúp bạn hiểu rõ tường tận scope, toán tử, hàm, hướng đối tượng trong Javascript. Làm chủ Javascript, ES6",
      "objectives": [
        "Hiểu rõ scope trong Javascript",
        "Hiểu rõ toán tử trong Javascript",
        "Hiểu rõ Object và Function trong Javascript",
        "Xử dụng thành thạo syntax của ES6",
        "Áp dụng kiến thức Javascript và các framework phổ biến hiện nay",
        "Có thể đọc được các libary nổi tiếng và phổ biến hiện nay như React Native, NodeJS, Mongoose, Mocha"
      ],
      "course_content": {
        "Khái niệm cơ bản": [
          "Syntax Parser, Execution Context, Lexical Environment là gì",
          "Name-Value Pair và Object là gì?",
          "Global Object là gì?",
          "Hoisting là gì?",
          "Execution Stack là gì?",
          "Scope Chain là gì?"
        ],
        "Toán tử": [
          "Dynamic Typing là gì?",
          "6 Primitives Type trong Javascript",
          "Toán tử và thứ tự ưu tiên",
          "Coercion trong Javascript",
          "Tại sao nên dùng so sánh === trong Javascript?",
          "Toán tử || và &&"
        ],
        "Hàm cũng là object": [
          "Khởi tạo object",
          "Truy cập thành phần của object",
          "First class functions languages là gì?",
          "Function Declaration và Function Expression"
        ],
        "this trong Javascript": [
          "Call-site là gì",
          "Implicit binding là gì?",
          "Implicit lost là gì",
          "this trong object",
          "Giới thiệu binding"
        ],
        "Hiểu thêm về hàm": [
          "Function Arguments là gì?",
          "Function overloading là gì",
          "ES6 default arguments là gì",
          "Immediately-invoked function expression là gì",
          "Closure là gì?",
          "Closure - return object",
          "Closure - return mảng function",
          "Callback là sao?",
          "bind, call và apply",
          "function borrowing là gì?"
        ],
        "Hướng đối tượng trong Javascript": [
          "Tổng quát về hướng đối tượng",
          "Prototype Inheritance là gì? Prototype chain là sao?",
          "Demo về prototype chain",
          "Hiểu rõ về __proto__",
          "Reflection là gì?",
          "Function constructor và từ khóa new",
          "Sử dụng .prototype như thế nào?",
          "Ưu điểm của .prototype",
          "Tạo primitive type từ function constructor?",
          "Tạo đối tượng với Object.create",
          "Khái niệm mở rộng một object mặc định",
          "ES6: tạo object với class",
          "Kế thừa một class với extends",
          "Kế thừa một class với extends phần 2"
        ],
        "ES6": [
          "var let và const",
          "Khi nào dùng var, let và const?",
          "Giới thiệu arrow function",
          "this trong arrow function",
          "Khi nào không nên dùng arrow function"
        ],
        "ES6 - Destructuring và Spread Operator": [
          "Destructuring object",
          "Giá trị mặc định Destructuring",
          "Destructuring array",
          "Destructuring function",
          "Giới thiệu Spread Operator và cách dùng",
          "...spread operator và ...rest operator khác nhau thế nào"
        ],
        "Object Literal Upgrade - Tạo Object không thể cool hơn": [
          "Property value shorthand - Cùng tên bỏ được",
          "Method definition shorthand",
          "Computed property keys"
        ],
        "Concurrency model and Event Loop": [
          "Javascript Engine là gì? V8 là sao?",
          "Synchronous và Asynchronous, callback queue và event loop là gì?",
          "Blocking và Non-Blocking là gì?"
        ]
      },
      "requirements": [
        "Cơ bản về biến, vòng lặp ở bất kỳ ngôn ngữ lập trình nào"
      ],
      "description": "Tại sao nên học Javascript\nHiện tại tính ứng dụng của Javascript rất lớn từ\nlập trình web front end với các framework hàng đầu: JQuery, React, Angular, VueJS\nbackend với các framework của NodeJS\nlập trình ứng dụng di động với React Native, Ionic, NativeScript, vv\nlập trình game với Unity\nlập trình robot, IoT\nXu hướng gần đây của giới lập trình là full stack developer. Để tránh việc dùng nhiều ngôn ngữ thì lựa chọn Javascript là khả dĩ nhất.\nScott Hanselman - một cây đa cây đề trong giới lập trình đã từng nói rằng:\nC# và Javascript là 2 ngôn ngữ phổ biến và đáng để học nhất hiện tại cũng nhưng trong tương lai\nMọi người đều nói về Javascript, khắp nơi đều dùng Javascript, công việc Javascript không bao giờ thiếu, liệu bạn có thể làm ngơ với n\nJavascript có khó học?\nChính bản thân mình cũng từng cho rằng Javascript khó học và nó là một ngôn ngữ tạp nham. Người tạo ra nó cũng chỉ mất 10 ngày.\nVà không riêng gì mình, các lập trình viên trên thế giới cũng chửi Javascript rất nhiều.\nNhưng không phải ngẫu nhiên mà Javascript lại phổ biến.\n\nBjarne Stroustrup - cha đẻ của ngôn ngữ lập trình C++ đã từng nói:\n“There are only two kinds of languages: the ones people complain about and the ones nobody uses.”\n( Có 2 loại ngôn ngữ: loại mà mọi người chê và loại không ai dùng )\nTức là nó quá phổ biến, nhiều người học nên mới có nhiều người chê. ( 9 người 10 ý mà ), những ngôn ngữ như Dart - đối thủ của Javacript do Google làm ra - ít người chê, ít người than khó học nên cũng ít phổ biến. Vậy chúng ta cần hiểu được tại sao Javascript khó học để có thể học nó dễ dàng hơn.\n\nTrong quá trình tìm hiểu Javascript, mình thấy có nguyên nhân khiến việc học JS trở nên khó khăn:\nHọc chung với HTML/CSS: Rất nhiều khóa học online, sách đều viết chung học theo combo HTML/CSS/Javascript này.\nVừa học Javascript, vừa học framework của nó: như vừa học Javascript vừa học React, JQuery, NodeJS, Express, vv\nHọc phiên bản mới của Javascript là ES6/ES7 mà không học Javascript thuần.\nĐem tư tưởng, kiến thức đã biết từ ngôn ngữ khác ví dụ C++/C#/Java qua Javascript\nVới 2 ý đầu đó chính là sai lầm của việc học nhiều thứ cùng lúc. Học nhiều thứ lần lượt sẽ giúp chúng ta liên kết các nơron thần kinh lại. Nhưng học nhiều thứ một lần sẽ khiến chúng ta mất tập trung, không hiểu thấu đáo được vấn đề. Javascript phổ biến như vậy, chỉ cần hiểu bản chất của nó là ta có thể tha hồ học những framework của nó rồi. Đừng vội vàng học nhiều thứ.\nHọc phiên bản mới và bỏ qua phiên bản trước. Phiên bản mới cũng chỉ là bản nâng cấp. Ý tưởng, tư duy vẫn tồn tại đó. Khi dùng tính năng mới trong ES6, ES7 ta không hiểu tại sao phải dùng chúng. Vì thế sẽ bị khó khăn khi đọc library vì nhiều library trộn lẫn 2 style cũ và mới.\nJavascript là first class functions language cũng như dynamic typing. Nó khác hẳng so với static language như C++/C# vì thế nếu cứ suy nghĩ như cũ sẽ rất khó học.\nHiểu rõ nhưng khó khăn trên, mình đã thiết kế một khóa học hoàn toàn 100% nội dụng là Javascript, không HTML, không CSS, không framework.\nGiới thiệu Javascript Chuyên Sâu\nNội dung của khóa học gồm các phần sau:\n\nKhái niệm cơ bản\nToán tử\nHàm cũng là object\nthis trong Javascript\nHiểu thêm về hàm\nHướng đối tượng trong Javascript\nES6: arrow function Promise, Destructuring, Spread Operator, Symbols, Proxies, Generators\nFunctional Programming",
      "target_audience": [
        "Muốn tìm hiểu sâu về Javascript"
      ]
    },
    {
      "title": "ADO NET - A base do .NET com Banco de dados",
      "url": "https://www.udemy.com/course/ado-net-a-base-do-net-com-banco-de-dados/",
      "bio": "As bases para uma conexão entre .NET e banco de dados",
      "objectives": [
        "A usar o ADO NET para executar queries no banco de dados",
        "A usar o ADO NET para executar stored procedures no banco de dados",
        "A usar o ADO NET com Transaction",
        "A usar o ADO NET para mapear os dados do banco em Objetos da aplicação"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Requisitos do curso",
          "Como baixar os arquivos?",
          "Como obter o seu certificado?",
          "Avalie o curso"
        ],
        "Introdução ao ADO.NET": [
          "Sobre a \"Série .NET > DB\"",
          "O que é o ADO.NET?",
          "Workflow de trabalho",
          "Providers e Classes do ADO.NET"
        ],
        "Ambiente de desenvolvimento": [
          "Ambiente de desenvolvimento"
        ],
        "Introdução a API": [
          "TEORIA - API",
          "Criando o projeto",
          "Classe Usuario e UsuarioRepository",
          "UsuarioController",
          "Usando o Swagger para Testar",
          "Usando o Postman para Testar"
        ],
        "ADO.NET na prática": [
          "Banco de dados - Estrutura e Carga",
          "Models: Usuario, Contato, EndereçoEntrega e Departamentos",
          "ADO.NET - Conexão e String de Conexão",
          "ADO.NET - Pegar Usuarios",
          "ADO.NET - Pegar Usuarios - Teste",
          "ADO.NET - Pegar Usuario (Um apenas)",
          "ADO.NET - Pegar Usuario - Teste (Um apenas)",
          "ADO.NET - Inserir usuario",
          "ADO.NET - Inserir usuario - Teste",
          "ADO.NET - Inserir usuário - Retornando o ID",
          "ADO.NET - Atualizar usuário",
          "ADO.NET - Atualizar usuário - Teste",
          "ADO.NET - Deletar usuário",
          "ADO.NET - Deletar usuário - Teste"
        ],
        "ADO.NET - Aumentando a complexidade das queries": [
          "ADO.NET - Pegar usuário - Adicionado Contato",
          "ADO.NET - Pegar usuario - Adicionado EnderecosEntrega",
          "ADO.NET - Pegar usuário - Adicionado Departamentos",
          "ADO.NET - Inserir usuário - Com Contato",
          "ADO.NET - Inserir usuário - Com EnderecoEntrega",
          "ADO.NET - Inserir usuário - Com Departamentos",
          "ADO.NET - Inserir usuário - Usando Transaction - P1",
          "ADO.NET - Inserir usuário - Usando Transaction - P2",
          "ADO.NET - Atualizar usuário - Contato",
          "ADO.NET - Atualizar usuário - EnderecoEntrega",
          "ADO.NET - Atualizar usuário - Departamentos",
          "ADO.NET - Deletar usuário - Explicação"
        ],
        "ADO.NET - Executando StoredProcedures": [
          "Estruturando o projeto UsuariosProcedureRepository",
          "UsuarioProcedureRepository",
          "UsuarioProcedure API - Teste"
        ],
        "Final do Curso": [
          "Final do Curso"
        ]
      },
      "requirements": [
        "Conhecimento sobre .NET",
        "Conhecimento sobre C#",
        "Conhecimento sobre banco de dados (SQL)"
      ],
      "description": "Neste curso falaremos sobre o ADO dotNET, o conjunto de classes do .NET focados em estabelecer a comunicação com uma fonte de dados externa ao seu software. O ADO dotNET foi construido pela Microsoft e faz parte da BCL (Base Class Library), o foco é fornecer uma série de componentes genéricos para permitir a comunicação com as mais diversas fontes de dados, como Banco de dados SQL: SQL Server, MySQL, PostgreSQL, Oracle, SQLite, IBM DB2, Firebird, Access e outras fontes/software de dados diferentes como Active Directory, MS Project, arquivo de texto, Excel, SharePoint, Lotus Note e muito mais.\nNesse curso ensinarei a realizar a conexão com o banco de dados SQL Server do tipo LocalDB e a executar queries como SELECT, INSERT, UPDATE e DELETE, fazer o mapeamento manual do mundo do Modelo de Entidade e Relacionamento (Banco de dados) para o mundo da Programação Orientada a Objeto (POO), também estarei ensinando a mapear um conjunto de objetos mais complexos e seus relacionamentos (One-To-One, One-To-Many e Many-To-Many), além de trabalharmos também com Transaction para que as informações no banco possam ser consistentes mesmo mediante a falhas.\nPara apresentar a interação realizada no banco de dados estaremos fazendo um projeto do tipo ASP.NET API - REST básico com o próposito de mostrar os resultados que nosso software terá ao estabelecer uma comunicação e troca de dados com a fonte de dados escolhida(SQL Server).",
      "target_audience": [
        "Estudantes de .NET",
        "Desenvolvedores .NET - C#",
        "Desenvolvedores de Software que desejam integrar suas aplicações a fontes de dados diferentes"
      ]
    },
    {
      "title": "Scala pour le Big Data En Français",
      "url": "https://www.udemy.com/course/scala-pour-le-big-data-en-francais/",
      "bio": "Scala Introduction à la programmation fonctionnelle",
      "objectives": [
        "Scala",
        "Programmation fonctionnelle pour le Big Data",
        "Les variables et fonctions en scala",
        "La récursivité",
        "Les structures de données: Listes, MAP, Array ..etc",
        "Les Classes, les objets et les cases Classes",
        "Création d'Application Exécutable en Scala avec IntelliJ Idea"
      ],
      "course_content": {
        "Introduction à la programmation fonctionnelle en Scala": [
          "Présentation du cours",
          "Les Bases de Scala",
          "Le langage Scala"
        ],
        "Préparation des environnements": [
          "Installation du JDK (Java Development Kit)",
          "Installation de IntelliJ IDEA"
        ],
        "Les bases de Scala": [
          "LAB : Création de Scala WorkSheet",
          "Scala Basics WorkSheet",
          "Fonctions avec paramètres en Scala",
          "Functions Scala Worksheet",
          "Correction du LAB - fonctions",
          "LAB fonctions: Scala worksheet"
        ],
        "High Order functions - Les fonctions en tant que paramètres": [
          "Fonction d'ordre supérieur - High Order Functions",
          "Fonctions anonymes et Pattern Matching",
          "Fonctions anonymes et Pattern Matching Scala WorkSheet",
          "QUIZ LES BASES de SCALA"
        ],
        "La récursivité": [
          "La récursivité",
          "LAB - PGCD de deux entiers",
          "PGCD Scala Worksheet"
        ],
        "Structures de données en Scala - Listes, tuples et Map": [
          "Les tuples",
          "Les listes",
          "Pattern Matching et Listes",
          "LAB: Listes",
          "LAB Correction: Listes",
          "LAB Listes Scala WorkSheet",
          "ListesUtiles"
        ],
        "Scala en tant que langage Orientée Objet": [
          "Les classes et les objets",
          "Exécuter une Application Scala"
        ],
        "L'essentiel sur le langage Scala : Cheat Sheet": [
          "Evaluation et fonctions Cheat Sheet",
          "Classes Cheat Sheet",
          "Collections Cheat Sheet",
          "For-Comprehensions Cheat Sheet",
          "Quiz Final"
        ],
        "Conclusion": [
          "Conclusion - Futur cours Big Data avec Spark Scala"
        ]
      },
      "requirements": [
        "Quelques bases dans la programmation"
      ],
      "description": "Le but de ce cours est de vous familiariser avec la programmation fonctionnelle et le langage Scala.\nA la fin de ce cours vous serez capable d'écrire des fonctions et des programme Scala concis et élégant.\nA la fin de ce cours vous aurez tous les bagages nécessaires pour le cours de Traitement et Analyse de Données Big Data en Spark",
      "target_audience": [
        "Développeur intéressé par la programmation fonctionnelle et le Big Data"
      ]
    },
    {
      "title": "Lenguaje RPG ILE para IBM I (AS/400) en formato Free con SQL",
      "url": "https://www.udemy.com/course/lenguaje-rpg-ile-para-ibm-i-as400-en-formato-free-con-sql/",
      "bio": "Lenguaje RPG ILE para IBM I (AS/400) en formato Free con SQL",
      "objectives": [
        "Localización de Proveedores para conectarse a un IBMi – AS/400",
        "Descarga e instalación del emulador TN5250 para conectarse a un IBMi – AS/400",
        "Descarga e instalación del IBM Data Studio para trabajar con SQL en un IBMi – AS/400",
        "Descarga e instalación del producto IBM Rational Developer for i",
        "Uso de la de herramienta IBM Data Studio",
        "Herramientas y uso del editor de IBM Rational Developer for i",
        "Edición - Creación – compilación - Corrección de Programas con IBM Rational Developer for i",
        "Arquitectura y herramientas en IBMi - AS/400",
        "Tipos de objetos en IBMi – AS/400",
        "Conceptos y manipulación de lista Bibliotecas en IBMi – AS/400",
        "Uso de la de herramienta PDM del IBMi – AS/400",
        "Declaración de archivos de pantalla en programas RPG ILE formato Free",
        "Declaración de variables, constantes y estructuras de datos en programas RPG ILE formato Free",
        "Estructuras de control para mantener el flujo de trabajo dentro del programa RPG ILE formato Free",
        "Manipulación de datos numéricos, de caracteres y de fechas en programas RPG ILE formato Free",
        "Manejo y control de errores en tiempo de ejecución en programas RPG ILE formato Free",
        "Paradigmas del lenguaje para lograr la comunicación entre programas en RPG ILE formato Free",
        "Teoría sobre los tipos de datos que se pueden manipular con SQL en el IBMi – AS/400 (Caracteres, Numéricos y tipo Fecha)",
        "Teoría sobre la creación de tablas y vistas en el IBMi – AS/400",
        "Teoría sobre diferentes operaciones con la Clausula Alter Table en el IBMi – AS/400",
        "Teoría sobre las operaciones clásicas con SQL (Insert, Delete, Update y Consultas) en el IBMi – AS/400",
        "Teoría sobre consultas con Joins para leer datos de diferentes tablas mediante el uso de columnas comunes dentro de las tablas en el IBMi – AS/400",
        "La directica Exec SQL (obligatorio para cualquier sentencia SQL dentro de un programa SQL RPG ILE)",
        "Uso de Estructuras y Variables Host en programas SQL RPG ILE",
        "Select, Insert, Update y Delete dentro de un programa SQL RPG ILE",
        "Gestión de Errores con SQL en tiempo de ejecución en programas SQL RPG ILE",
        "Uso de Cursores SQL en programas SQL RPG ILE",
        "Uso de Sentencias SQL dinámicas en programas SQL RPG ILE",
        "Opciones de entorno SQL en programas SQL RPG ILE",
        "Conceptos de código fuente DDS en archivos de Pantalla en el IBMi – AS/400",
        "Niveles de archivo en archivos de Pantalla en el IBMi – AS/400",
        "Niveles de registro en archivos de Pantalla en el IBMi – AS/400",
        "Niveles de campo en archivos de Pantalla en el IBMi – AS/400",
        "Uso de indicadores en archivos de Pantalla en el IBMi – AS/400",
        "Palabras Reservadas para controlar Subfiles en archivos de Pantalla en el IBMi – AS/400",
        "Introducción al concepto de Módulo Externo (Programación RPG ILE)",
        "Definición de Procedimientos dentro de Módulos (Programación RPG ILE)",
        "Creación de programas modulares (Programación RPG ILE)",
        "Módulos NOMAIN (Programación RPG ILE)",
        "Uso de Directorios de Enlace (Programación RPG ILE)",
        "Uso de prototipos e interfaces para establecer comunicación dentro de la programación modular (Programación RPG ILE)",
        "Explicación paso a paso de cómo crear una pantalla para consulta en forma gráfica usando la herramienta IBM Rational Developer for i",
        "Compilación de archivos de pantalla",
        "Explicación paso a paso de cómo crear una pantalla para mantenimiento de archivos en forma gráfica usando la herramienta IBM Rational Developer for i",
        "Creación en forma gráfica de un archivo de pantalla con Subfile usando la herramienta IBM Rational Developer for i",
        "Explicación del comportamiento de los tres tipos de programas que se construyen en el curso (Consulta, Mantenimiento y SubFile)",
        "Estudio del código paso a paso de los 10 programas que se desarrollan en el curso",
        "Estudio del Código RPG ILE con SQL integrado para Programa que usa Módulos Externos",
        "Estudio del Código RPG ILE con SQL integrado para Programa Cliente que usa un Programa de Servicio",
        "Estudio del Código RPG ILE con SQL integrado para Programa con Módulos Internos",
        "Depuración de programas (Debug)",
        "Trabajo con SQL en Pantalla Verde",
        "Acciones más comunes de un Desarrollador en el IBMi – AS/400",
        "El Concepto de programa cliente y programa de servicio (Programación RPG ILE)"
      ],
      "course_content": {
        "Bienvenida": [
          "1.0 Bienvenida al Curso"
        ],
        "Fundamentos teóricos sobre RPG ILE": [
          "2.0 Contenido de la Sección 2",
          "Sección 2 Fundamentos teóricos sobre RPG ILE"
        ],
        "Sección 3 SQL para IBMi-AS400 (Teoría)": [
          "3.0 Contenido de la Sección 3",
          "Sección 3 SQL para IBMi-AS400 (Teoría)"
        ],
        "Sección 4 SQL integrado en programas RPG ILE formato Free (Teoría)": [
          "4.0 Contenido de la Sección 4",
          "Sección 4 SQL integrado en programas RPG ILE formato Free (Teoría)"
        ],
        "Sección 5 Creación de pantallas en IBMi-AS400 (Teoría)": [
          "5.0 Contenido de la Sección 5",
          "Sección 5 Creación de pantallas en IBMi-AS400 (Teoría)"
        ],
        "Sección 6 Programación ILE en IBMi-AS400 (Teoría)": [
          "6.0 Contenido de la Sección 6",
          "Sección 6 Programación ILE en IBMi-AS400 (Teoría)"
        ],
        "Sección 7 Instalación de Herramientas de trabajo en IBMi-AS400": [
          "7.0 Contenido de la Sección 7",
          "7.1 Proveedores de conexión e instalación de Emulador TN5250",
          "7.2 Instalación de IBM Data Studio",
          "7.3 Instalación de IBM Rational Developer for i"
        ],
        "Sección 8 Ambiente de trabajo en IBMi-AS400 en Pantalla Verde": [
          "8.0 Contenido de la Sección 8",
          "8.1 Arquitectura y herramientas en IBMi-AS400",
          "8.2 Tipos de objetos en IBMi-AS400",
          "8.3 Conceptos y manipulación de lista Bibliotecas en IBMi-AS400 parte 1",
          "8.4 Conceptos y manipulación de lista Bibliotecas en IBMi-AS400 parte 2",
          "8.5 Conceptos y manipulación de lista Bibliotecas en IBMi-AS400 parte 3",
          "8.6 Uso de la de herramienta PDM del IBMi-AS400"
        ],
        "Sección 9 Ambiente de trabajo en IBMi-AS400 con Herramientas Graficas": [
          "9.0 Contenido de la Sección 9",
          "9.1 Uso de la de herramienta IBM Data Studio parte 1",
          "9.2 Uso de la de herramienta IBM Data Studio parte 2",
          "9.3 Detalles adicionales sobre IBM Rational Developer for i",
          "9.4 Edición - Creación – compilación - Corrección de Programas con IBM Rational",
          "9.5 Herramientas y uso del editor de IBM Rational Developer for i"
        ],
        "Sección 10 Diseño de pantalla de Consulta con IBM Rational Developer for i (Ambi": [
          "10.0 Contenido de la Sección 10",
          "10.1 Detalles sobre la construcción de pantallas en IBMi-AS400",
          "10.2 Diseño de pantalla de consulta en forma gráfica parte 1",
          "10.3 Diseño de pantalla de consulta en forma gráfica parte 2"
        ]
      },
      "requirements": [
        "Se tienen dos requisitos muy importantes, los cuales son: Tener conocimientos sobre algún lenguaje de programación y tener conceptos básicos sobre el uso de SQL como desarrollador."
      ],
      "description": "Este curso tiene como objetivo principal lograr que cualquier persona que tenga conocimientos de algún lenguaje de programación y que tenga conocimientos básicos de SQL logre convertirse en un Desarrollador en el Lenguaje ILE RPG usando sentencias SQL para manipular las tablas de la Base de Datos y trabajando con la versión de ILE RPG en formato Free, la cual es una de las últimas versiones que se tienen sobre este lenguaje de programación que es exclusivo de la IBM.\nEl objetivo principal del curso obliga a cubrir otros entornos que son necesarios para poder tener un desempeño exitoso, estos entornos están relacionados con la máquina que usaremos para el aprendizaje del lenguaje, que en este caso es el AS/400 o IBM i, en el curso se tienen varias secciones para capacitar al estudiante sobre el ambiente de trabajo en este tipo de máquinas.\nEl curso está estructurado en cuatro bloques principales, el primer bloque y el más importante es la enseñanza del lenguaje ILE RPG en formato Free pero usando sentencias SQL para manipular las tablas de la Base de Datos, una gran ventaja que ofrecen las lecciones de este bloque es que el estudiante se evitará aprender una gran cantidad de detalles técnicos relacionados con el procesamiento de tablas (archivos) de Base de Datos a través de instrucciones del lenguaje orientadas a la manipulación de archivos. Con solo conocer las 4 sentencias clásicas de SQL (Insert, Update, Delete y Select) el estudiante podrá aprender rápidamente el lenguaje.\nEl segundo bloque está orientado a la enseñanza del diseño de pantallas en forma gráfica haciendo uso de herramientas que permitan trabajar bajo esta modalidad .\nEl tercer bloque le enseña al estudiante en como trabajar en el entorno de lo que se conoce como pantalla verde, en el cual se trabaja con el teclado y también es conocido como ambiente tipo caracter. Este bloque de pantalla verde es muy importante porque capacita a los estudiantes para trabajar en un ambiente que es muy exclusivo de la IBM y es bastante diferente a los ambientes de los sistemas operativos de Windows. Con las lecciones sobre este ambiente el estudiante aprenderá herramientas que sin ellas será más complicado trabajar en la plataforma del AS/400 y serán complementos para que pueda hacer su trabajo dentro de esta plataforma.\nY tenemos un cuarto bloque compuesto de temas teóricos (más de 60 páginas) en los que se sustenta este curso.\nEn las primeras secciones del curso se explica paso a paso en donde encontrar herramientas gratuitas que son las que se usan en el curso y son las que se usan actualmente en las empresas. En las lecciones se explica cómo hacer la instalación y se tienen lecciones para enseñar como usar estas herramientas antes de iniciar con las secciones de enseñanza del lenguaje y del diseño de pantallas.\nEl curso está orientado a los siguientes niveles de estudiantes:\n1. Estudiantes que no conocen nada del AS/400 ni del lenguaje ILE RPG: Para este segmento el curso tiene un bloque compuesto de secciones teóricas que servirán de marco teórico para alinearse con la plataforma y el resto de las secciones están orientadas para que una persona aprenda desde cero el lenguaje y los entornos que se enseñan en el curso.\n\n\n2. Estudiantes que conocen el AS/400 y RPG ILE, pero no conocen como trabajar con ambientes gráficos: Para este segmento el curso tiene secciones prácticas que ensenan a nivel de detalle sobre estos ambientes.\n\n\n3. Estudiantes que conocen el AS/400 y RPG, pero no conocen como trabajar con la arquitectura ILE: El curso tiene secciones teóricas y prácticas que enseñan sobre todos los conceptos de la programación ILE.",
      "target_audience": [
        "La orientación del curso es para personas que quieran aumentar el valor de su CV, debido a que hay mucha escases de desarrolladores en ambientes de la plataforma AS/400 y que conozcan sobre el lenguaje ILE RPG cuya demanda esta aumentado cada día."
      ]
    },
    {
      "title": "I Segreti della Programmazione JAVA da Zero StepByStep Part1",
      "url": "https://www.udemy.com/course/i-segreti-della-programmazione-java-da-zero-stepbystep-part1/",
      "bio": "Impara le basi della programmazione software e come trasformare un'idea in software utilizzando il linguaggio JAVA",
      "objectives": [
        "Quali sono i segreti alla base per Imparare a Programmare anche se parti da zero e pensi che la programmazione sia troppo difficile da imparare.",
        "Quali sono i 3 passi per trasformare un’IDEA in un Prodotto Software",
        "Imparerai il Linguaggio JAVA",
        "Un sistema replicabile che potrai applicare per creare un Programma senza necessità di imparare nulla a memoria e senza conoscere il gergo tecnico informatico.",
        "Di cosa hai bisogno per Imparare velocemente un Linguaggio di Programmazione Software.",
        "Perché quando leggi un libro o segui un corso di Programmazione ti sembra tutto così complicato e incomprensibile.",
        "Quali sono quelle competenze fondamentali necessarie ad accelerare l'apprendimento di un qualsiasi Linguaggio di Programmazione."
      ],
      "course_content": {},
      "requirements": [
        "Non è necessario avere esperienza di programmazione. Il corso è indirizzato a persone che partono da zero e quindi tutti i concetti sono spiegati in maniera semplice ed elementare.",
        "Voglia di imparare"
      ],
      "description": "Prima parte della Masterclass online esclusiva per imparare la Programmazione Java partendo completamente da zero!\n\n\nSe stai leggendo la descrizione di questo corso vuol dire che hai una forte passione per la programmazione oppure reputi quest’ultima un ottimo strumento per far fare un bel salto di qualità alla tua vita professionale lavorativa.\n\nl problema di chi vuole imparare a programmare ed entrare per la prima volta in questo mondo è il non sapere come trasformare le proprie idee, il proprio modo di pensare in un codice sorgente di un linguaggio di programmazione comprensibile ad un computer o dispositivo in generale (il linguaggio JAVA).\n\nPoi se ci aggiungiamo pure il linguaggio tecnico e complesso che utilizzano le persone lì fuori per spiegare l’arte della programmazione rende la cosa ancora più complicata del previsto.\n\nDimmi, non vorresti ELIMINARE UNA VOLTA PER TUTTE queste difficoltà:\n\nNon sapere da dove iniziare per creare il tuo primo programma software\n\nNon sapere come creare un programma che risolva, in maniera automatica, un problema al posto tuo\n\nNon sapere come trasformare una tua idea in programma software\n\nI Linguaggi di programmazione sono troppo complessi da comprendere e ricordare\n\nNon riesci a ricordare a memoria tutti i codici sorgenti che stanno dietro ad ogni linguaggio di programmazione\n\nNon sapere come far fare al computer un lavoro ripetitivo che invece sei costretto a fare tu\n\nI lunghi tempi per imparare il linguaggio Java.\n\nSe hai risposto si, allora continua a leggere...\n\nImparare la programmazione può sembrarti davvero un’impresa ardua.\n\nQuando dopo tanti soldi spesi per libri e corsi sulla programmazione e dopo tutta la fatica e il tempo per studiare questo materiale, accorgersi di non riuscire ancora ad applicare nulla (o comunque poca roba!) allora questa cosa può diventare davvero frustante!!\n\nSe non vuoi più sentirti così allora accedi al corso I Segreti della Programmazione, Java da zero Step by Step che ho preparato per te:\n\nEcco perché dovresti farlo subito:\n\nSarai tra le prime persone che studieranno il creativo metodo per imparare a programmare partendo da zero e inizieranno sin da subito a lavorare a stretto contatto con me.\n\nSaprai quali sono tutti i passi da fare per trasformare una qualsiasi idea in un prodotto software senza imparare più nessuna linea di codice a memoria.\n\n\nImparerai il Linguaggio Java, uno dei linguaggi di programmazioni più potenti e richiesti dalle aziende.\n\nAvrai accesso a vita alla tua area riservata personale dove troverai oltre 30 ore di formazione e centinaia di esercizi che ti permetteranno di imparare a trasformare qualsiasi tua idea in un programma.\n\nEsercizi modulo per modulo per tenerti sempre in allenamento.\n\nTutti i concetti sono spiegati utilizzando un linguaggio semplice e comprensibile da tutti.\n\nPotrai finalmente avere delle abilità concrete da sviluppatore software che potrai rivenderti nei colloqui di lavoro e in generale sul mercato.\n\nAcquisirai delle competenze uniche che ti permetteranno di velocizzare l'apprendimento di qualsiasi altro linguaggio di programmazione.\n\n\nAvrai una mappa dove troverai la lista di tutti i costrutti utilizzati per creare un Algoritmo e la loro relativa traduzione in codice sorgente. Quindi non dovrai imparare più nulla a memoria!\n\nI contenuti che troverai in questo corso sono esclusivi e non sono insegnati in nessun altro corso al momento sul mercato.\n\nRiceverai il Certificato di fine corso che attesterà l'apprendimento degli argomenti contenuti all'interno della Masterclass.\n\n\nIo sono Roberto Covello è un Ingegnere Informatico e Autore del Libro \"Dall'Idea Al Software - Analisys & Creativity\".\nSono un Full Stack Developer creativo con oltre 20 anni di esperienza nel mondo dello sviluppo software con la missione di aiutare le persone che partono da zero ad entrare velocemente nel mondo della programmazione.\n\n\nCon il tempo e con il continuo studio dettato dalla mia passione ma anche dalle competenze apprese dai diversi corsi universitari di ingegneria informatica e dalle varie esperienze lavorative avute in questi anni ho messo a punto un metodo che ti mette in mano una mappa precisa, dei passi da fare per trasformare qualsiasi idea in programma software.\n\n\nMa la cosa che vado più fiero è il fatto che questo metodo lo si può utilizzare per trasformare un'idea/problema in un programma a prescindere dal linguaggio di programmazione si vuole utilizzare ed inoltre non è necessario essere degli esperti o avere grandi competenze informatiche per applicarlo, ma basta avere voglia di impararlo e applicarlo alla lettera.\n\n\nQuindi ho deciso di spiegare l'intero Metodo all'interno di un corso chiamato I Segreti della Programmazione Java da Zero Step by Step.\n\n\nAll'interno dei I Segreti della Programmazione Java da Zero Step by Step troverai il mio metodo spiegato in maniera semplice, utilizzando un linguaggio senza formalismi e tecnicismi ma utilizzando solo parole di semplice comprensione.\n\n\nInoltre ogni concetto spiegato sarà seguito da numerosi esempi pratici.\n\n\nMa non solo....\n\n\nOltre a tutto ciò, si va ancora più in profondità andando ad applicare questo metodo per imparare un linguaggio di programmazione come Java (uno dei linguaggi di programmazioni più potenti e richiesti dalle aziende).\n\nTutto quello che troverai all'interno di questo corso è spiegato in maniera pratica e ricca di numerosi esempi, sarai guidato passo passo dalla configurazione del tuo ambiente di sviluppo fino alla realizzazione del tuo programma.\n\nQuindi se pensi di volere tutto questo, la cosa più sensata è accedere ORA ai I Segreti Della Programmazione, Java da zero Step by Step.\n\nQuindi cosa aspetti??\n\nClicca sul pulsante acquista ed entra subito nei I Segreti della Programmazione, Java da zero Step by Step",
      "target_audience": [
        "Imparerai come realizzare un Programma partendo da Zero seguendo tre semplici passi. Tutti i concetti sono espressi in maniera semplice e organizzata e ti permetteranno di comprendere tutta la logica che sta alla base di qualsiasi linguaggio di programmazione. Scoprirai i Fondamentali della Programmazione, un nuovo modo di imparare la programmazione…",
        "Capirai tutta la logica che sta alla base della programmazione software.",
        "Apprenderai quelle competenze che ti permetteranno di imparare qualsiasi linguaggio di programmazione in maniera veloce e senza avere più blocchi!",
        "Imparerai il Linguaggio JAVA, il linguaggio di programmazione più richiesto nel mondo del lavoro"
      ]
    },
    {
      "title": "Numpy, libreria de Python para ciencia de datos",
      "url": "https://www.udemy.com/course/numpy-libreria-de-python-para-ciencia-de-datos/",
      "bio": "Manejo de arrays",
      "objectives": [
        "Operaciones con arrays",
        "Arrays de distintas dimensiones",
        "Creacion de arrays",
        "Manejo de la libreria Numpy de python"
      ],
      "course_content": {
        "Introduccion": [
          "Antes de comenzar",
          "Entorno necesario"
        ],
        "Entrando en materia": [
          "Ejemplos de arrays",
          "Creando arrays",
          "Escritura y lectura de arrays sobre ficheros",
          "Tipos de datos",
          "Propiedades, caracteristicas de arrays",
          "Operadores aritmeticos basicos",
          "Estadisticos basicos",
          "Copia de arrays",
          "Ordenando arrays",
          "Subconjuntos, indexado",
          "Manipulacion de arrays"
        ],
        "Ejercicios practicos": [
          "Creando y dando valores a un array",
          "Solucion creando array",
          "Te propongo un reto",
          "Solucion reto, sistema de ecuaciones",
          "Ejercicios varios",
          "Mas ejercicios"
        ],
        "Examen Final": [
          "Examen"
        ],
        "Fin de curso": [
          "Despues de Numpy..."
        ]
      },
      "requirements": [
        "Conocimientos de Python"
      ],
      "description": "Curso de Numpy, libreria de  Python para el manejo y operaciones con arrays, por lo que recomiendo tener conocimientos basicos de manejo de archivos, editores y de programacion con Python, en esta plataforma dispones de mi curso de programacion con Python que te ayudara a tener las bases para comenzar con la ciencia de datos.\nUsaremos Google Colab como notebook para realizar nuestros scripts de Python, por lo que no tendras que instalar nada en tu sistema operativo y podras practicar desde cualquier dispositivo con conexion a internet.\nEn este curso se muestra todo bajo el sistema operativo Windows, pero te indico que todo lo puedes desarrollar bajo otros sistemas operativos.\nLos videos son totalmente practicos e iremos poco a poco avanzando.\nSi como estudiante estas adaptado a otros editores o navegadores, no hay ningun problema en usarlo.\nPara cualquier duda puedes usar los medios de esta plataforma y contactar conmigo.\nSobre todo no dejes de practicar y buscar informacion en la web y novedades sobre la ciencia de datos.\nSi quieres avanzar mas en la programacion pasate por mi perfil para ver los cursos que tengo publicados en la plataforma Udemy.\nEspero os sea util el curso y que sea un buen comienzo en la Informatica, concretamente en la ciencia de datos, ya que manejar bien Numpy es basico para avanzar en este sector.\nMuchas gracias.\nNota: si algun enlace del curso no funciona, cambia \"ticoticotaa\" por \"josecodetech\".",
      "target_audience": [
        "Desarrolladores de Python que quieran empezar en el sector de ciencia de datos"
      ]
    },
    {
      "title": "C#で描画をする方法：自由に線や〇を描いて自前のグラフなどを作る方法",
      "url": "https://www.udemy.com/course/cs-byouga/",
      "bio": "C#のWinFormでコントロール上に描画を行い、好きな図形やグラフなどを書くことができるようになります。",
      "objectives": [
        "好きな図形を書く方法",
        "画像の上に〇などを書いて色を付ける方法",
        "すべて自前で折れ線グラフを書く方法",
        "描画する関数を共通化する方法",
        "座標計算をする方法",
        "図形をマウスで移動させる方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "C#で描画をする方法": [
          "S1_#01_プロジェクトの作成とコントロールの配置",
          "S1_#02_線の描画",
          "S1_#03_線の色を変更する",
          "S1_#04_線の太さを変更する",
          "S1_#05_四角の描画",
          "S1_#06_四角の塗りつぶし",
          "S1_#07_四角の縁取り",
          "S1_#08_丸の描画",
          "S1_#09_多角形の描画",
          "S1_#10_複数の線の描画",
          "S1_#11_文字の描画",
          "S1_#12_棒グラフの目盛りを描画",
          "S1_#13_棒グラフの目盛りセンター揃え",
          "S1_#14_フォントの変更",
          "S1_#15_Disposeに関して",
          "S1_#16_ヘルパークラスの作成",
          "S1_#17_リサイズに追従する",
          "S1_#18_リサイズに追従する2",
          "S1_#19_Map画像を表示する",
          "S1_#20_Map画像の上にボタンの追加",
          "S1_#21_Mapに赤い丸を表示する",
          "S1_#22_追加ボタンを押したときに赤い丸を表示する",
          "S1_#23_クリックした位置に丸があるかをチェックする",
          "S1_#24_MAP上の丸を移動させる",
          "S1_#25_複数の丸を判断して移動させる",
          "S2_#01_折れ線グラフのレイアウト作成",
          "S2_#02_縦軸の描画",
          "S2_#03_リサイズの対応",
          "S2_#04_横軸の描画",
          "S2_#05_縦軸のスケール線描画",
          "S2_#06_横軸のスケール線描画",
          "S2_#07_横軸スケールの値文字を描画",
          "S2_#08_縦軸スケールの値文字を描画",
          "S2_#09_メソッドの整理",
          "S2_#10_ピクセルを求める計算方法",
          "S2_#11_グラフのプロットをする",
          "S2_#12_折れ線グラフを描画する",
          "S2_#13_不具合修正",
          "さいごに",
          "サンプルソース",
          "補講01_ラムダ式の使い分けと使用意図について"
        ],
        "WPFでの描画": [
          "01_WPF_Line_線",
          "02_WPF_再描画に関して",
          "03_WPF_Ellipse_丸",
          "04_WPF_Rectangle_四角",
          "05_WPF_Polygon_多角形",
          "06_WPF_Polyline_複数の線"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "VisualStudioのWinFormプロジェクトが動作する環境"
      ],
      "description": "どうもこんにちは。\nこの講座は，C#のWinFormプロジェクトを使って\nコントロール上に好きな図形やグラフなどを書く方法をレクチャーしています。\n市販のツールなどを使えばグラフなどを書くことはできますが，\n自分で描くことで描画の原理が理解できて，融通の利く\nアプリケーションを作ることができるようになります。\nグラフ以外にも〇を好きな位置に書いたりすることで\n標準コントロールでは表現できないような仕様にも対応できるプログラマーに\nなれるので、現場では重宝される存在になれると思います。\n\n\nS1_#01_プロジェクトの作成とコントロールの配置\nS1_#02_線の描画\nS1_#03_線の色を変更する\nS1_#04_線の太さを変更する\nS1_#05_四角の描画\nS1_#06_四角の塗りつぶし\nS1_#07_四角の縁取り\nS1_#08_丸の描画\nS1_#09_多角形の描画\nS1_#10_複数の線の描画\nS1_#11_文字の描画\nS1_#12_棒グラフの目盛りを描画\nS1_#13_棒グラフの目盛りセンター揃え\nS1_#14_フォントの変更\nS1_#15_Disposeに関して\nS1_#16_ヘルパークラスの作成\nS1_#17_リサイズに追従する\nS1_#18_リサイズに追従する2\nS1_#19_Map画像を表示する\nS1_#20_Map画像の上にボタンの追加\nS1_#21_Mapに赤い丸を表示する\nS1_#22_追加ボタンを押したときに赤い丸を表示する\nS1_#23_クリックした位置に丸があるかをチェックする\nS1_#24_MAP上の丸を移動させる\nS1_#25_複数の丸を判断して移動させる\nS2_#01_折れ線グラフのレイアウト作成\nS2_#02_縦軸の描画\nS2_#03_リサイズの対応\nS2_#04_横軸の描画\nS2_#05_縦軸のスケール線描画\nS2_#06_横軸のスケール線描画\nS2_#07_横軸スケールの値文字を描画\nS2_#08_縦軸スケールの値文字を描画\nS2_#09_メソッドの整理\nS2_#10_ピクセルを求める計算方法\nS2_#11_グラフのプロットをする\nS2_#12_折れ線グラフを描画する",
      "target_audience": [
        "C#で図形を書きたい方",
        "C#で自前のグラフを書いて融通の利く表現をしたい方",
        "C#での描画の方法を知りたい方",
        "C#で図形をマウスで移動させたい方"
      ]
    },
    {
      "title": "Lógica de programação 2025: Algoritmos em C e JavaScript",
      "url": "https://www.udemy.com/course/logica-de-programacao-iniciacao-em-programacao/",
      "bio": "Aprenda a pensar como um programador e construa uma base sólida para as carreiras mais buscadas de dev web, dados e IA",
      "objectives": [
        "Escrever e compreender Algoritmos e seus conceitos.",
        "Entender e desenvolver lógicas de programação para a criação de diferentes tipos de software.",
        "Iniciação em programação em diferentes linguagens (C e JavaScript).",
        "Conceitos importantes sobre computação."
      ],
      "course_content": {
        "Apresentação": [
          "Apresentação do curso"
        ],
        "Conceitos Iniciais": [
          "Introdução",
          "Resumo",
          "Teste o que você aprendeu nessa seção"
        ],
        "Manipulação de variáveis e constantes": [
          "Variáveis e Constantes",
          "Construção de algoritmos",
          "Tipos primitivos e compostos / Teste de mesa",
          "Resumo e exemplos de algoritmos 1",
          "Conceitos básicos da linguagem C",
          "⚡ AULA PRÁTICA 1: Seu primeiro código em C!",
          "Teste o que você aprendeu nas últimas aulas"
        ],
        "Estrutura de seleção": [
          "Estrutura de seleção",
          "Operadores Relacionais e Lógicos",
          "Resumo e exemplos de algoritmos 2",
          "Estrutura de seleção múltipla e operador ternário",
          "Teste o que você aprendeu nas últimas aulas"
        ],
        "Estrutura de repetição": [
          "Estrutura de repetição",
          "Resumo e exemplos de algoritmos 3",
          "⚡ AULA PRÁTICA 2: Vetores e estrutura de repetição",
          "Teste o que foi aprendido nessa seção"
        ],
        "Módulos": [
          "Modularização",
          "Resumo e exemplos de algoritmos 4",
          "⚡ AULA PRÁTICA 3: Incrementando a calculadora",
          "Teste o que você aprendeu nessa seção"
        ],
        "Variáveis homogêneas e heterogêneas": [
          "Variáveis homogêneas e heterogêneas",
          "Variáveis homogêneas",
          "Variáveis heterogêneas",
          "Recordando os conceitos",
          "⚡ AULA PRÁTICA 4: Usando registros",
          "Teste o que você aprendeu nessa seção"
        ],
        "Exemplos e exercícios": [
          "Exemplos de algoritmos",
          "Exercícios de Algoritmos",
          "⚡ AULA PRÁTICA 5: uso de matrizes e resolução de exercícios"
        ],
        "Conteúdo Extra": [
          "Estruturas de dados",
          "Algoritmos de busca",
          "Algoritmos de ordenação",
          "Importância do conceito de algoritmos e estrutura de dados"
        ],
        "CRUD em linguagem C": [
          "⚡ AULA PRÁTICA 6: implementação do CRUD",
          "Linguagem C: Legado e Influência",
          "Teste o que foi aprendido sobre linguagem C",
          "Exercícios de linguagem C"
        ]
      },
      "requirements": [
        "Possuir um computador ou notebook.",
        "Conhecimento básico em matemática."
      ],
      "description": "Algoritmos e lógica de programação são as bases fundamentais para qualquer programador, seja iniciante ou profissional. Este curso foi desenvolvido para ensinar esses conceitos de forma simples, prática e eficiente, por meio de aulas teóricas, exercícios e exemplos reais. Com isso, estará pronto para escrever seus próprios códigos e dar os primeiros passos em uma carreira promissora e em constante crescimento no mercado.\n\n\nConteúdos ensinados\n\n\nIntrodução à computação.\nAlgoritmos e linguagens de programação.\nVariáveis e constantes.\nTipos primitivos e compostos.\nTeste de Mesa.\nEstrutura de seleção.\nOperadores lógicos e relacionais.\nEstrutura de repetição.\nModularização.\nVariáveis Homogêneas e Heterogêneas.\nVetores.\nMatrizes.\nRegistros.\nIniciação em Linguagem C.\nIniciação em Linguagem JavaScript.\n\n\nPor que escolher este curso?\n\n\nAprendizado Prático: Cada aula combina teoria, exemplos e exercícios para consolidar seus conhecimentos.\nMaterial Completo: E-book exclusivo com todos os conceitos para consulta a qualquer momento.\nTeste Seu Conhecimento: Questionários ao final de cada módulo para garantir sua evolução.\nAplicação em Linguagens Reais: Aprenda a aplicar os conceitos diretamente em linguagens como C e JavaScript.\nCarreira Promissora: Desenvolva habilidades fundamentais para ingressar na área de tecnologia.\nOportunidades em Expansão: A demanda por programadores continua crescendo, com vagas cada vez mais acessíveis em empresas por todo mundo.",
      "target_audience": [
        "Iniciantes em programação",
        "Interessados em aprender a programar",
        "Interessados em aprender lógica de programação",
        "interessados em aprender algoritmos"
      ]
    },
    {
      "title": "EntityFrameworkCore【C#】",
      "url": "https://www.udemy.com/course/efcorebasic/",
      "bio": "C#とEntityFrameworkCoreを使って、データベースを操作する方法。DBファーストで基本を押さえてから、コードファーストでの実装まで基本的な操作を解説しています。",
      "objectives": [
        "C#＋EntityFrameworkCoreを使ってSQLServerとの接続ができるようになる。",
        "マイグレーションを使ったコードファーストの実装ができるようになる。",
        "EntityFrameworkCoreでの、各種検索処理ができるようになる。",
        "EntityFrameworkCoreでの、各種更新処理ができるようになる。",
        "Includeを使ったオブジェクト指向的な結合処理ができるようになる。"
      ],
      "course_content": {},
      "requirements": [
        "Windows上で、VisualStudio2022以降のバージョンが動作する環境がある。",
        "C#の基本的な文法が理解できている。"
      ],
      "description": "どうもこんにちは。このコースでは、\nC#とEntityFrameworkCoreを使って、\nデータベースを操作する基本的な内容を解説しています。\n\n\nEntityFrameworkCoreとは、\nオブジェクトリレーショナルマッパー（O／RM）と言われており、\nデータベースとのデータアクセスを、SQLを使わずに、\nオブジェクトを操作することでアクセスできる機能です。\n\n\n本コースの前半では、データベースファーストと言って、\nすでに存在するデータベースにEntityFrameworkCoreでアクセスする方法を学びます。\n\n\nその中で、各種検索処理として、Where, OrderBy, Like検索、クエリ構文の使い方や、\nテーブルの結合として基本的なJoinから、\nInclude/ThenIncludeを使った結合として、オブジェクト指向的な無駄のない結合も解説しています。\nまた、データ更新処理として、 Insert, Update, Deleteの操作やトランザクションを解説しています。\n\n\nコースの後半では、マイグレーションという機能を使って、\nコードファーストでの実装方法を解説しています。\nマイグレーションとは、C#のオブジェクトの形で、データベースのテーブル等を作成する機能で、\nこれを使うことで、先にオブジェクトを作成し、それに合わせたデータベースを作成することで、\nコードファーストでの実装を行うことができます。\n\n\n本コースを受講することで、EntityFrameworkCoreの基本的な操作ができるようになるため、\nEntityFrameworkCoreを学びたい方には、楽しんでいただける内容になっていると思います。\n\n\n興味のあるかたは、ぜひご覧になってみてください。",
      "target_audience": [
        "C#とEntityFrameworkCoreを使った基本的な実装方法を学びたい方"
      ]
    },
    {
      "title": "Oracle SQL & PL/SQL: Destrave Oportunidades de Carreira",
      "url": "https://www.udemy.com/course/aprenda-oracle-sql/",
      "bio": "Domine SQL e Conquiste o Mercado de Trabalho",
      "objectives": [
        "Usar Oracle SQL para Recuperar, filtrar e Apresentar Informações em Oracle Database",
        "Entender a Sintaxe SQL para Montar seus Próprios comandos e Interpretar comandos escritos por outras pessoas",
        "Inserir, Deletar ou Modificar dados em Tabelas Oracle usando Oracle SQL",
        "Escrever, Ler e analisar Instruções SQL Básicas",
        "Instalar e Criar seu Laboratório de Testes Grátis com Oracle Express e Oracle SQL Developer Free",
        "Importante: Não Aborda PL/SQL"
      ],
      "course_content": {},
      "requirements": [
        "Nada além de um Notebook, Desktop. Usuários de MAC precisam de uma Máquina Virtual para Rodar o Oracle em Linux ou Windows",
        "Não precisa conhecer Programação. É pra começar do ZERO!",
        "Não Precisa de Licenciar nenhum software"
      ],
      "description": "Prepare-se para dominar habilidades de Oracle SQL que podem te render um bom emprego!\n** ATUALIZADO COM MÓDULOS BÁSICOS DE Oracle PL/SQL**\nSejamos Sinceros, um desenvolvedor que não conhece SQL não está completo.\nHoje, os dados se tornaram o ativo mais valioso das empresas, e saber manipular esses dados é o que agrega valor ao profissional.\nTodos os Bancos de Dados Relacionais precisam da linguagem SQL para armazenar e recuperar dados. Por isso os salários de desenvolvedores que dominam a Linguagem SQL estão acima da Média!\nO campo de Data Science não para de crescer e muitos dados onde a integridade é algo importante como Finanças, Software de ERP como Oracle Business Suite ou SAP ERP estão  armazenados em bancos de dados Relacionais.\nPor isso, um profissional de Data Science precisa conhecer um Mínimo de SQL Language para enfrentar aqueles desafios que envolvem bancos de dados Relacionais.\nO bom é que, para este curso, você não precisa de nenhuma experiência anterior em programação. Vamos desmistificar a linguagem SQL do zero e prepará-lo com muitas tarefas progressivamente desafiadoras para que, quando terminar o curso, você possa afirmar que conhece Oracle SQL suficiente para encarar desafios no mercado!\nOracle é, sem dúvida, o banco de dados relacional Comercial mais popular do mundo! Este curso irá prepará-lo para o mercado em um curto espaço de tempo, claro que dependerá do seu esforço e dedicação.\nVocê não tem experiência anterior em desenvolvimento de SQL? Este curso é perfeito para você.\nVocê tem experiência anterior, mas precisa de uma atualização ou para aprimorar suas habilidades? Este é o curso para você também.\n\n\nE se você é um DBA que apenas administra bancos de dados e não se sente preparado para analisar consultas e interagir com os desenvolvedores, esse curso vai te ajudar também!\nNesse treinamento iremos usar o Oracle SQL Developer. O Oracle SQL Developer é uma ferramenta Free de desenvolvimento Integrado que simplifica o desenvolvimento e gerenciamento de bancos de dados Oracle tanto em on-premise quanto em ambientes Cloud.\n\n\nA linguagem SQL é essencial para quem deseja trabalhar com bancos de dados e o Oracle SQL é uma das ferramentas mais utilizadas no mercado. Por isso, ser um desenvolvedor Oracle SQL certificado pode abrir portas para diversas oportunidades de carreira.\n\n\nMas, para se tornar um desenvolvedor Oracle SQL, é necessário dominar a linguagem SQL. Neste artigo, vamos explorar como começar do zero e se tornar um especialista em SQL.\n\n\nPrimeiro, é importante entender os conceitos básicos de bancos de dados. Um banco de dados é uma coleção de dados organizados em uma estrutura específica. O SQL é a linguagem utilizada para manipular esses dados.\n\n\nO próximo passo é aprender os comandos básicos do SQL, como SELECT, INSERT, UPDATE e DELETE. Esses comandos permitem que você selecione dados de tabelas, insira novos dados, atualize dados existentes e exclua dados de tabelas.\n\n\nDepois de dominar os comandos básicos, é hora de aprender a criar tabelas e relacionamentos entre elas. Isso permite que você crie bancos de dados complexos e eficientes.\n\n\nAlém disso, é importante entender como otimizar consultas SQL para torná-las mais rápidas e eficientes. Isso pode envolver a criação de índices em tabelas e a utilização de funções específicas.\n\n\nPara se tornar um desenvolvedor Oracle SQL certificado, você também deve estar familiarizado com as ferramentas de gerenciamento de bancos de dados Oracle, como o Oracle SQL Developer e o Oracle Database.\n\n\nÉ importante lembrar que o aprendizado do SQL é um processo contínuo. À medida que você avança em sua carreira, você pode se especializar em áreas como modelagem de dados, segurança de bancos de dados e análise de dados.\n\n\nPara iniciar sua jornada como desenvolvedor Oracle SQL, há uma variedade de recursos disponíveis, incluindo cursos online, tutoriais e fóruns de discussão. Além disso, a Oracle oferece certificações em SQL que podem ajudar a validar suas habilidades e melhorar sua empregabilidade.\nEm resumo, o SQL é uma linguagem essencial para quem deseja trabalhar com bancos de dados e o Oracle SQL é uma das ferramentas mais utilizadas no mercado. Ao dominar a linguagem SQL e se tornar um desenvolvedor Oracle SQL certificado, você pode abrir portas para diversas oportunidades de carreira emocionantes e desafiadoras.",
      "target_audience": [
        "Iniciantes que querem Aprender Oracle SQL de Forma Prática sem sair de casa",
        "DBAs que administram Bancos Oracle mas precisam aprender mais sobre Oracle SQL",
        "Estudantes de T.I em Formação que queiram aprender Oracle SQL para projetos ou Vagas no Mercado",
        "Profissionais de T.I de outras áreas que tem contato com Oracle SQL mas não entendem a Lógica por traz das Instruções",
        "Cientistas de Dados de Outras Linguagens como Python que que não conhecem Oracle SQL e querem potencializar seus projetos",
        "Programadores de Outras linguagens que desejam conhecer mais a Linguagem Oracle SQL"
      ]
    },
    {
      "title": "Spring Framework",
      "url": "https://www.udemy.com/course/spring-framework-egitimi/",
      "bio": "Dünyaca ünlü Spring Framework'ü bu eğitimle keşfedeceksiniz!",
      "objectives": [
        "Uygulamalı olarak projeleri adım adım sıfırdan geliştireceğiz.",
        "Spring Framework geliştirme ortamı ve mimarisini detaylarıyla inceleyeceğiz.",
        "Spring ile kurumsal Java projelerinin alt yapısını keşfedeceğiz.",
        "OOP- RDBMS - JDBC ilişkilerini uygulamalı olarak göreceğiz.",
        "Spring ile Hibernate ilişkisini öğreneceğiz.",
        "OOP ve AOP ilişkisini öğreneceğiz.",
        "Spring JdbcTemplate ve ORM arasındaki ilişkişleri göreceğiz."
      ],
      "course_content": {
        "1.Gün - Spring Çatısının Mimarisi ve Geliştirme Ortamı": [
          "1.Gün Bölüm 1",
          "1.Gün Bölüm 2",
          "1.Gün Bölüm 3",
          "1.Gün Bölüm 4",
          "1.Gün Bölüm 5",
          "1.Gün Bölüm 6",
          "1.Gün Bölüm 7",
          "1.Gün Bölüm 8",
          "1.Gün Bölüm 9",
          "1.Gün Bölüm 10"
        ],
        "2.Gün - Spring DI (Dependency Injection) - IoC (Inversion of Control)": [
          "2.Gün Bölüm 1",
          "2.Gün Bölüm 2",
          "2.Gün Bölüm 3",
          "2.Gün Bölüm 4",
          "2.Gün Bölüm 5",
          "2.Gün Bölüm 6",
          "2.Gün Bölüm 7"
        ],
        "3.Gün - Spring CI - SI - Namespaces": [
          "3.Gün Bölüm 1",
          "3.Gün Bölüm 2",
          "3.Gün Bölüm 3",
          "3.Gün Bölüm 4",
          "3.Gün Bölüm 5",
          "3.Gün Bölüm 6",
          "3.Gün Bölüm 7",
          "3.Gün Bölüm 8",
          "3.Gün Bölüm 9",
          "3.Gün Bölüm 10",
          "3.Gün Bölüm 11"
        ],
        "4.Gün - Spring Inner Beans – Collection – AutoWiring": [
          "4.Gün Bölüm 1",
          "4.Gün Bölüm 2",
          "4.Gün Bölüm 3",
          "4.Gün Bölüm 4",
          "4.Gün Bölüm 5",
          "4.Gün Bölüm 6",
          "4.Gün Bölüm 7",
          "4.Gün Bölüm 8",
          "4.Gün Bölüm 9",
          "4.Gün Bölüm 10"
        ],
        "5. Gün - Spring Scopes – Lifecycle – Inheritance": [
          "5.Gün Bölüm 1",
          "5.Gün Bölüm 2",
          "5.Gün Bölüm 3",
          "5.Gün Bölüm 4",
          "5.Gün Bölüm 5",
          "5.Gün Bölüm 6",
          "5.Gün Bölüm 7",
          "5.Gün Bölüm 8",
          "5.Gün Bölüm 9",
          "5.Gün Bölüm 10"
        ],
        "6.Gün - Spring Annotations (Dipnotlar) 1": [
          "6.Gün Bölüm 1",
          "6.Gün Bölüm 2",
          "6.Gün Bölüm 3",
          "6.Gün Bölüm 4",
          "6.Gün Bölüm 5",
          "6.Gün Bölüm 6"
        ],
        "7.Gün - Spring Annotations (Dipnotlar) 2": [
          "7.Gün Bölüm 1",
          "7.Gün Bölüm 2",
          "7.Gün Bölüm 3",
          "7.Gün Bölüm 4",
          "7.Gün Bölüm 5",
          "7.Gün Bölüm 6",
          "7.Gün Bölüm 7",
          "7.Gün Bölüm 8"
        ],
        "8.Gün - Spring Events – Test - Github": [
          "8.Gün Bölüm 1",
          "8.Gün Bölüm 2",
          "8.Gün Bölüm 3",
          "8.Gün Bölüm 4",
          "8.Gün Bölüm 5",
          "8.Gün Bölüm 6",
          "8.Gün Bölüm 7",
          "8.Gün Bölüm 8"
        ],
        "9.Gün - Spring Expression Language (SpEL)": [
          "9.Gün Bölüm 1",
          "9.Gün Bölüm 2",
          "9.Gün Bölüm 3",
          "9.Gün Bölüm 4",
          "9.Gün Bölüm 5",
          "9.Gün Bölüm 6",
          "9.Gün Bölüm 7",
          "9.Gün Bölüm 8"
        ],
        "10.Gün - Spring AOP (Aspect Oriented Programming)": [
          "10.Gün Bölüm 1",
          "10.Gün Bölüm 2",
          "10.Gün Bölüm 3",
          "10.Gün Bölüm 4",
          "10.Gün Bölüm 5",
          "10.Gün Bölüm 6"
        ]
      },
      "requirements": [
        "Eğitimlerde her şey adım adım işlenmektedir.",
        "Java SE bilinmeli.",
        "Temel seviyede XML bilinmeli.",
        "Eclipse temel seviyede bilinmeli."
      ],
      "description": "Bu eğitim canlı ve online olarak düzenlediğimiz derslerin video çekimleridir. Kurumsal Java yazılım sektörünün en meşhur ve en değerli çatılarından olan Spring Framework ile kendinize güzel bir gelecek sağlayabilirsiniz. Spring Framework video eğitimi sayesinde kariyerinizde altından bir sayfa açmış olacaksınız. Java iş ilanlarının hemen hemen tamamında sizden Spring'i bilmenizi isterler. Bu eğitim sayesinden artık Spring'i öğrenmiş olacaksınız. Eğitimlerde her şey adım adım işlenmektedir. Bütün örnekleri kendimiz bizzat kodlayarak yapmaktayız. Kurumsal Java projelerinin vazgeçilmezi Spring Framework'ü bu eğitimle keşfedeceksiniz!\nBu eğitim canlı ve online olarak düzenlediğimiz derslerin video çekimleridir. Kurumsal Java yazılım sektörünün en meşhur ve en değerli çatılarından olan Spring Framework ile kendinize güzel bir gelecek sağlayabilirsiniz. Spring Framework video eğitimi sayesinde kariyerinizde altından bir sayfa açmış olacaksınız. Java iş ilanlarının hemen hemen tamamında sizden Spring'i bilmenizi isterler. Bu eğitim sayesinden artık Spring'i öğrenmiş olacaksınız. Eğitimlerde her şey adım adım işlenmektedir. Bütün örnekleri kendimiz bizzat kodlayarak yapmaktayız. Kurumsal Java projelerinin vazgeçilmezi Spring Framework'ü bu eğitimle keşfedeceksiniz!\nBu eğitim canlı ve online olarak düzenlediğimiz derslerin video çekimleridir. Kurumsal Java yazılım sektörünün en meşhur ve en değerli çatılarından olan Spring Framework ile kendinize güzel bir gelecek sağlayabilirsiniz. Spring Framework video eğitimi sayesinde kariyerinizde altından bir sayfa açmış olacaksınız. Java iş ilanlarının hemen hemen tamamında sizden Spring'i bilmenizi isterler. Bu eğitim sayesinden artık Spring'i öğrenmiş olacaksınız. Eğitimlerde her şey adım adım işlenmektedir. Bütün örnekleri kendimiz bizzat kodlayarak yapmaktayız. Kurumsal Java projelerinin vazgeçilmezi Spring Framework'ü bu eğitimle keşfedeceksiniz!",
      "target_audience": [
        "Spring çatısını keşfetmek isteyenler.",
        "Spring konusunda bilgisini sağlamlaştırmak isteyenler.",
        "Spring üzerine çalışmalar yapıp kendine değer katmak isteyenler."
      ]
    },
    {
      "title": "Python Aplicado: 5 Proyectos Reales de Principio a Fin",
      "url": "https://www.udemy.com/course/python-aplicado/",
      "bio": "Desarrolla apps reales con Python. Interfaces Gráficas (GUI) atractivas y Programas Ejecutables. PyGame, TKinter, y más",
      "objectives": [
        "Desarrollarás PROGRAMAS REALES de todo tipo usando Python",
        "Conocerás en profundidad las LIBRERÍAS MAS IMPORTANTES de Python",
        "Planificarás tus proyectos desde el BOCETO INICIAL",
        "Diseñarás la INTERFACE GRÁFICA para saber cómo se verá tu programa",
        "Dibujarás DIAGRAMAS DE FLUJO para organizar la dinámica de tu código en bloques",
        "Dividirás tu proyecto en PASOS para escribir tu código por partes comprensibles",
        "Empaquetarás tus scripts para poder COMPARTIR TUS PROGRAMAS con el mundo",
        "Serás independiente para INVESTIGAR DOCUMENTACIÓN de nuevas herramientas"
      ],
      "course_content": {
        "INTRODUCCIÓN AL CURSO": [
          "Bienvenido a Python Aplicado",
          "Cómo Funciona Este Curso"
        ],
        "PROYECTO 1 - CALCULADORA": [
          "Proyecto 1",
          "Diagrama",
          "PASO 1 - Preparar la Ventana con TKinter",
          "PASO 1 - Preparar la Ventana con TKinter",
          "PASO 2 - Crear el Visor de Fórmulas y Resultados",
          "PASO 2 - Crear el Visor de Fórmulas y Resultados",
          "PASO 3 - Crear los Botones",
          "PASO 3 - Crear los Botones",
          "PASO 4 - Funcionalidad para Crear Expresiones",
          "PASO 4 - Funcionalidad para Crear Expresiones",
          "PASO 5 - Funcionalidad para Limpiar el Visor",
          "PASO 5 - Funcionalidad para Limpiar el Visor",
          "PASO 6 - Calcular Expresiones y Mostrar Resultados",
          "PASO 6 - Calcular Expresiones y Mostrar Resultados",
          "PASO 7 - Resetear Cálculos",
          "PASO 7 - Resetear Cálculos",
          "PASO 8 - Agregar Estilo Visual",
          "PASO 8 - Agregar Estilo Visual",
          "PASO 9 - Crear Archivo Ejecutable",
          "PASO 9 - Crear Archivo Ejecutable",
          "ResuMate del Proyecto 1"
        ],
        "PROYECTO 2 - PONG": [
          "Proyecto 2",
          "Diagrama",
          "PASO 1 - Crear la Pantalla con PyGame",
          "PASO 1 - Crear la Pantalla con PyGame",
          "PASO 2 - Dibujar los Elementos",
          "PASO 2 - Dibujar los Elementos",
          "PASO 3 - Movimiento de las Paletas",
          "PASO 3 - Movimiento de las Paletas",
          "PASO 4 - Movimiento de la Pelota",
          "PASO 4 - Movimiento de la Pelota",
          "PASO 5 - Colisiones",
          "Paso 5 - Colisiones",
          "PASO 6 - Puntajes",
          "PASO 6 - Puntajes",
          "PASO 7 - Sonidos",
          "PASO 7 - Sonidos",
          "PASO 8 - Definir Ganador",
          "PASO 8 - Definir Ganador",
          "PASO 9 - Menú \"Volver a Jugar\"",
          "PASO 9 - Menú \"Volver a Jugar\"",
          "PASO 10 - Menú Inicial",
          "PASO 10 - Menú Inicial",
          "ResuMate del Proyecto 2"
        ],
        "PROYECTO 3 - INFOSTOCK": [
          "Proyecto 3",
          "Diagrama",
          "PASO 1 - Requests",
          "PASO 1 - Requests",
          "PASO 2 - BeautifulSoup",
          "PASO 2 - BeautifulSoup",
          "PASO 3 - Extraer Datos",
          "PASO 3 - Extraer Datos",
          "PASO 4 - Extraer Tabla",
          "PASO 4 - Extraer Tabla",
          "PASO 5 - Crear Ventana",
          "PASO 5 - Crear Ventana",
          "PASO 6 - Seleccionar Stock",
          "PASO 6 - Seleccionar Stock",
          "PASO 7 - Manejar Errores",
          "PASO 7 - Manejar Errores",
          "PASO 8 - Mostrar Información",
          "PASO 8 - Mostrar Información",
          "PASO 9 - Checkbutton",
          "PASO 9 - Checkbutton",
          "PASO 10 - Modo Día/Noche",
          "PASO 10 - Modo Día/Noche",
          "ResuMate del Proyecto 3"
        ],
        "PROYECTO 4 - GESTIONAPP": [
          "Proyecto 4",
          "Diagrama",
          "PASO 1 - Flask",
          "PASO 1 - Flask",
          "PASO 2 - Base",
          "PASO 2 - Base",
          "PASO 3 - Todas las Páginas",
          "PASO 3 - Todas las Páginas",
          "PASO 4 - Bootstrap",
          "PASO 4 - Bootstrap",
          "PASO 5 - Página Login",
          "PASO 5 - Página Login",
          "PASO 6 - Formulario Login",
          "PASO 6 - Formulario Login",
          "PASO 7 - Registro",
          "PASO 7 - Registro",
          "PASO 8 - Validación",
          "PASO 8 - Validación",
          "PASO 9 - Agregar Usuarios",
          "PASO 9 - Agregar Usuarios",
          "PASO 10 - Proteger el Sitio",
          "PASO 10 - Proteger el Sitio",
          "PASO 11 - Barra de Navegación",
          "PASO 11 - Barra de Navegación",
          "PASO 12 - Cerrar Sesión",
          "PASO 12 - Cerrar Sesión",
          "PASO 13 - Frontend",
          "PASO 13 - Frontend",
          "PASO 14 - Backend",
          "PASO 14 - Backend",
          "PASO 15 - Análisis",
          "PASO 15 - Análisis",
          "PASO 16 - Perfil",
          "PASO 16 - Perfil",
          "ResuMate del Proyecto 4"
        ],
        "PROYECTO 5 - BUSCAMINAS": [
          "Proyecto 5",
          "Diagrama",
          "PASO 1 - Crear Ventana",
          "PASO 1 - Crear Ventana",
          "PASO 2 - Crear Tablero",
          "PASO 2 - Crear Tablero",
          "PASO 3 - Clickear Bloques",
          "PASO 3 - Clickear Bloques",
          "PASO 4 - Vacío o Bomba",
          "PASO 4 - Vacío o Bomba",
          "PASO 5 - Identificar Vecinos",
          "PASO 5 - Identificar Vecinos",
          "PASO 6 - Mostrar Vecinos",
          "PASO 6 - Mostrar Vecinos",
          "PASO 7 - Banderas",
          "PASO 7 - Banderas",
          "PASO 8 - Perdero o Ganar",
          "PASO 8 - Perdero o Ganar",
          "PASO 9 - Reiniciar",
          "PASO 9 - Reiniciar",
          "PASO 10 - Ajustes",
          "PASO 10 - Ajustes",
          "ResuMate del Proyecto 5"
        ]
      },
      "requirements": [
        "IMPORTANTE: Se requiere conocimiento intermedio de Python. Este NO ES un curso para principantes o personas que no tienen conocimiento de Python"
      ],
      "description": "¿Estás aprendiendo Python pero solo has creado programas de práctica?\n¿Quieres crear proyectos reales, con interfaz de usuario y todo?\n¿Te preguntas cuándo aprenderás a exportar tus programas en archivos ejecutables desde cualquier ordenador?\n\n\n¡Encontraste el curso que buscabas! PYTHON APLICADO - 5 PROYECTOS REALES DE PRINCIPIO A FIN\n\n\nADVERTENCIA IMPORTANTE: Este NO ES un curso para personas sin conocimientos básicos/intermedios de Python\n\n\nEste curso cubre todos los pasos para aprender a desarrollar 5 proyectos REALES y COMPLETOS ¡practicando!\nPlanificarás el diagrama de flujo de tu código\nDiseñarás bocetos para la Interfaz Gráfica de tu programa\nDividirás el código en pasos organizados para implementar código prograsivamente\nAprenderás a consultar la documentación online para ser un programador independiente\nConocerás los detalles de las librerías más poderosas de Python como TKinter, PyGame y muchas más\nIdentificarás procesos de mejora futura para tus programas\n\n\n¿CON QUÉ RECURSOS CONTARÁS?\nProyectos reales estructurados en días de aprendizaje\nVideos teóricos y prácticos\nTodos los recursos descargables necesarios para cada proyecto\nSesiones de planificación\nDecenas de artículos detallados para profundizar en los detalles\nÁrea de Preguntas y Respuestas\nEl instructor más exitoso de Udemy en Español\n\n\n¿POR QUÉ CREO QUE PUEDO AYUDARTE?\nMi nombre es Federico Garay, soy VIP Instructor Partner en Udemy, y la mayoría de mis cursos son Best Sellers a nivel mundial.\nCientos de miles de personas aprendieron a programar con mis 50 cursos, tales como Python Total, Python para Data Science, SQL Total, JavaScript Total, y tantos más.\n\n\nEste es el curso que te va a transformar en un programador con experiencia real en el desarrollo de aplicaciones completamente funcionales.\nBasta de pruebitas en la consola y bienvenido a las grandes ligas: las de los programadores capaces de \"parir\" esos programas que la gente usa de verdad.\n\n\nMI PROMESA PARA TI\nAl final de este curso vas a programar cosas de verdad.\n\n\nY lo mejor de todo, es que te la vas a pasar genial, porque mi lema es que todo en la vida tiene que ser DIVERTIDO... ¡incluso estudiar!\n\n\nSi vas a subirte a este tren de lujo...\nTe espero en la Lección #1\n\n\nFede",
      "target_audience": [
        "Estudiantes de programación que quieren aplicar su conocimiento en PRGRAMAS REALES",
        "Programadores Junior que buscan MEJORAR SUS HABILIDADES en todas las etapas de un proyecto",
        "Aspirantes a puestos laborales en programación que necesitan ENRIQUECER SU PORTFOLIO agregando proyectos interesantes",
        "Autodidactas que tienen conocimiento de Python pero nunca han DESARROLLADO PROYECTOS de principio a fin",
        "Curiosos de la programación que quieren SUBIR DE NIVEL implementando sus resultados fuera de la consola",
        "Estudiantes exigentes que quieren diseñar prgramas COMPLETAMENTE FUNCIONALES y con INTERFACES DE USUARIO atractivas."
      ]
    },
    {
      "title": "Curso de Rpgle avanzado desde Cero",
      "url": "https://www.udemy.com/course/curso-de-rpg-y-todos-sus-tipos-hasta-full-free/",
      "bio": "Curso de Rpgle",
      "objectives": [
        "Aprenderás SQLRPGLE, RPGLE FREE, RPGLE FULL FREE, ILE RPGLE FREE, ILE RPGLE FULL FREE",
        "Aprenderás los conceptos RPG programación por ciclos",
        "Aprenderás EL USO DE TODAS LAS HOJAS DE RPGLE H,F,D,I,C,O",
        "Aprenderás el USO DE CADA HOJA",
        "Aprenderás cómo funciona un programa original OPM RPG III",
        "Podrás hacer Laboratorios por todo el curso",
        "Aprenderás distinguir entre Sub rutina y Procedimientos",
        "Aprenderás como abrir cualquier documento de la MICRO COMPUTADORA",
        "Aprenderás manejar un programa con procedimientos almacenados y parametros",
        "Aprenderás a crear un programa que verifique el estado de los sub sistemas",
        "Aprenderás RPG OPM",
        "Aprenderás RPGLE FREE",
        "Aprenderás SQLRPGLE",
        "Aprenderás RPGLE FULL FREE",
        "Aprenderás Indicadores Todos los tipos de indicadores del RPG",
        "Aprenderás Códigos de operación, Aprenderás Operaciones aritméticas - Operaciones de matrices - Operaciones de bit",
        "Aprenderás Operaciones de bifurcación - Operaciones de llamada",
        "Aprenderás toda clase de acceso a base de datos DB2",
        "Aprenderás Estrategia 1: aplicación compatible con OPM",
        "Aprenderás Depuración el fuente",
        "Aprenderás Capítulo 3. Estrategias de creación de programas",
        "Aprenderás Estrategia, Aprenderás Aplicación compatible con OPM , Aprenderás Método",
        "Aprenderás Ejemplo de un programa ILE , Aprenderás a utilizar Mantenimiento de Clientes SCRIPT DE SQL",
        "Aprenderás a utilizar varias funciones"
      ],
      "course_content": {
        "Introducción": [
          "Introducción y Contenido de RPGLE",
          "Como acceder a un servidor de IBM",
          "Navegar en POWER de IBM",
          "Gestor de desarrollo de programas (PDM)",
          "EDITOR SEU DEL POWER",
          "TIP Rápido para no tener problemas con programas"
        ],
        "Inicio de Clases de RPG II": [
          "Inicio de Clases de RPG II"
        ],
        "Comando más utilizados por el Programador": [
          "Comando más utilizados por el Programador",
          "Mas comandos Usados Por el programador"
        ],
        "PRIMERAS 5 CLASES": [
          "PRIMERAS 5 CLASES",
          "PRIMERAS CLASES"
        ],
        "Funciones Pasos del RPG II": [
          "Funciones Pasos del RPG II",
          "Funciones Pasos del RPG II"
        ],
        "Columnas y descripción de indicadores": [
          "Columnas y descripción de indicadores",
          "Columnas y descripción de indicadores"
        ],
        "Imagen y descripción de columnas": [
          "Ejemplos de la Hoja F Descripción de Archivos",
          "Ejemplos de la Hoja F Descripción de Archivos"
        ],
        "Procesos con la hoja H F I CO": [
          "Procesos con la hoja H F I CO",
          "Procesos con la hoja H F I CO PARTE II"
        ],
        "Teoría de Programación Por Ciclos": [
          "Teoría de Programación Por Ciclos",
          "CODIGO QUE CORREGIR",
          "Programa Bajo Cilo utilizaL1",
          "Agrega La Deuda del clientes al Maestro de deudas"
        ],
        "Muestra datos por nivel en sub file": [
          "Muestra datos por nivel en sub file"
        ]
      },
      "requirements": [
        "El alumno no deberá de tener conocimientos de AS/4000"
      ],
      "description": "Tanta información de RPGLE es la forma de aprender ya que las plazas o puestos de desarrollador RPGLE son los mejores pagados, hoy estoy creando un curso con mi experiencia de 40 años de experiencia en este lenguaje he coinsibido un curso el cual tu puedas de verdad aplicar a un plaza de trabajo ya que los curso que he visto no te ayudaran en nada pero sin minimizarlos, es como que tu aprendas desarrollo Web Que solo sea Html5 sin tener en dicho curso Css3, Java Script, React, Angular y otros, mi curso de RPGLE cubre con todas las expectativas para que sepas aplicar a un trabajo ya que puedes ver el contenido y te darás cuenta de todo lo que voy a impartir que es un trabajo enorme pero un contenido que te llevo casi de la mano y te comento esto: comienza desde cero, me han dicho que los curso que imparto les gusta mucho ya que no sabían las técnicas que enseño y esto no es de RPGLE de lo que mencionan los alumnos, te voy a comentar tenía un curso de Diseño de Pantallas SDA en YouTube y solicitaba contribución voluntaria pero no funciono la estrategia y lo quite de mi canal El Mundo tecnológico los alumnos que aprendieron técnicas que nunca habían visto y me recomendaron Udemy.\nTe comento que el curso de RPGLE contiene lo mismo, técnicas que jamás habías visto, recuerda que tengo 40 años de trabajar con RPG y te has matriculado un curso que no está en otra academia.\nEste curso está muy bien planeado desde hace muchos años, ya que yo he impartido clases presenciales de AS400 todo incluyendo hasta utilitarios del AS400.\nObserve que impartía un curso de RPG los alumnos me decían que querían saber cómo era RPGLE Free, otros como aplicar programas que comparten con CL otros, que faltaba las técnicas que enseñe en SDA ya que ellos habían recibido SDA con otro instructor y nunca habían visto esa técnica y que deseaban implementarlas con RPGLE, Me dijeron que les diera el curso de SDA que se iban a matricular.\nEn la institución donde trabajaba como instructor mis alumnos tenían que pagar altos precios para recibir los cursos y a mis alumnos nos les interesaban pagar con tal de matricularse el curso que impartía de SDA.\nPoco a poco me di cuenta de que es lo que necesitaba el alumno realmente para aprender totalmente y salir de un curso planificado y el alumno saldrá con todo el conocimiento de un programador que aplicará no preguntará.\nLos alumnos no deberán de tener temor aquellos que no saben absolutamente AS/400 ya que tengo como norma en cada curso imparto estos breves cursos.\n1. Navegar en as400\n2. Curso básico PDM\n3. Curso básico del editor SEU\n\n\nEl lenguaje de programación RPG fue desarrollado por IBM originalmente para generar informes comerciales o de negocios. Sus siglas en inglés significan Programa Generador Reporte La primera versión apareció en 1959.\nEn 1960 RPG es creado para la familia 1400, pero hasta 1964 no es lanzada la versión final para la IBM 360. Ha sido actualizado en diversas ocasiones, dando origen a las diferentes versiones del lenguaje. Una de las últimas actualizaciones que se han realizado hasta la fecha es el RPG/IV en 1995, disponible con los ordenadores IBM de la familia as400. Posteriormente, en 2001, y con la aparición de la versión 5 del OS/400, surgió una nueva modificación sobre el lenguaje, soportándose a partir de ese momento la programación en formato libre. Así mismo, se desarrollan las funciones incorporadas que sustituyen a muchos de los antiguos indicadores y códigos de operación. Todas estas incorporaciones permiten que el RPG se convierta en un lenguaje mucho más legible, claro, flexible y moderno.\nEntre sus principales características podemos destacar las siguientes:\n1. Orientado a la producción de informes.\n2. Realiza cálculos fácilmente.\n3. Emplea hojas de codificación diferentes para la descripción de ficheros, entrada de datos, salida de resultados, etc.\nHoy el Lenguaje RPG ha cambiado y es que IBM tiene como norma cuando crea un nuevo servidor viene una versión super mejorada del RPG hoy RPGLE hoy el lenguaje de RPGLE es un lenguaje muy poderoso por no decirlo el más poderoso este lenguaje trabaja con interfaces de clientes servidor tiene comunicación con varios lenguajes Java, Visual Basic Net, Visual estudio C#, Python , PHP y más.\nTrabaja con Soa y Rest y otros protocolos.\nSoa, o arquitectura orientada a servicios, define una manera de hacer que los componentes de software sean reutilizables a través de interfaces de servicio. Los servicios utilizan estándares de interfaz comunes y un patrón arquitectónico para que puedan incorporarse rápidamente a aplicaciones nuevas.\n\n\nRest es un conjunto de pautas que ofrece una implementación flexible, mientras que Soap es un protocolo con requisitos específicos, como en el caso de la mensajería xml.\nRest es una interfaz para conectar varios sistemas basados en el protocolo http (uno de los protocolos más antiguos) y nos sirve para obtener y generar datos y operaciones, devolviendo esos datos en formatos muy específicos, como xml y Json.\nEste lenguaje trabaja como lenguaje Open Source ya que su nueva versión es el código es libre totalmente libre y con interfaces JAVA trabaja con páginas web.\nMas información del RPGLE\nEl lenguaje RPG es parte de la plataforma IBM as00, una de las mejores opciones para la optimización de procesos, que consiste en un sistema integrado compuesto por as400 (hardware) y os400 (sistema operativo), que cuenta con su propia base de datos relacional y ofrece soporte multiusuario.\n\n\nMenciona OS/400 hoy es el sistema operativo IBM i del Power System i\nEl lenguaje RPG es parte de la plataforma IBM as/400, una de las mejores opciones para la optimización de procesos, que consiste en un sistema integrado compuesto por AS/400 (hardware) y OS/400 (sistema operativo), que cuenta con su propia base de datos relacional y ofrece soporte multiusuario.",
      "target_audience": [
        "Este curso está dirigido a Operadores de AS/400, los que no saben nada de AS/400 y aquellos que desean aprender técnicas de Graficas propios del AS/400",
        "Este curso esta dirigido a programadores que desean aprender técnicas avanzadas"
      ]
    },
    {
      "title": "HIBERNATE ОТ ДЖЕИМСА",
      "url": "https://www.udemy.com/course/hibernate-kurs/",
      "bio": "Изучение Hibernate от основ до специалиста",
      "objectives": [
        "Глубокое понимание Hibernate от самых основ до продвинутого уровня",
        "Вы сможете проходить собеседования и легко отвечать на любые вопросы связаные с Hibernate",
        "Вы научитесь применять Hibernate на проектах любой сложности, от простых до профессиональных приложений",
        "Вы станете настоящим гуру Hibernate"
      ],
      "course_content": {
        "Hibernate": [
          "Что такое Hibernate",
          "Конфигурация",
          "Mapping",
          "@Basic",
          "@Column",
          "Type",
          "Enums",
          "Date",
          "Генерация TimeStamp",
          "Load & get",
          "Formula",
          "Embedable",
          "Имя таблицы",
          "Access type",
          "Transient",
          "Id",
          "EmbededId",
          "OneToOne",
          "Проблема N+1",
          "OneToMany и ManyToOne",
          "ManyToMany",
          "JoinTable",
          "Коллекции",
          "Сортировка",
          "NaturalId",
          "Динамическая модель",
          "Стратегии наследования",
          "Состояния Entity",
          "Оптимисчтические и писимистические локи",
          "Кэш"
        ],
        "HQL": [
          "Что такое HQL",
          "Select & aliases",
          "Where",
          "Distinct",
          "Пагинация",
          "Сортировка",
          "Group by & having",
          "Join",
          "Where подробнее",
          "Функции",
          "Update, delete & insert",
          "Named queries",
          "Native queries"
        ]
      },
      "requirements": [
        "Перед изучением вы должны зать основы Java"
      ],
      "description": "Данный курс предоставлен для полноценного изучения Hibernate, он подойдет как людям совешенно не знакомым с данным фреймворком, так и для тех кто уже с ним работал. Вы сможете полноценно изучить данную технологию, от самых азов до более продвинутых нюансов связаных с применением Hibernate. По окончанию данного курса Вы научитесь полноценно использовать Hibernate и сможете его применять в различных реальных проектах.",
      "target_audience": [
        "Все желающие изучить Hibernate"
      ]
    },
    {
      "title": "알고리듬 및 자료구조 (Java)",
      "url": "https://www.udemy.com/course/algorithms-and-data-structures-by-pocu/",
      "bio": "프로그래머에게 필수인 문제해결 능력을 다음 단계로 업그레이드 해주는 강좌입니다. 핵심 알고리듬/알고리즘의 작동원리를 제대로 배워 탑 1% 개발자의 사고방식을 갖추세요. (김포프, POCU 포큐 아카데미)",
      "objectives": [
        "핵심 알고리즘의 동작 원리 및 사용법",
        "알고리즘의 시간/공간 복잡도 분석",
        "알고리즘"
      ],
      "course_content": {
        "과목 소개": [
          "프로그래머와 알고리듬",
          "이 과목에서 사용하는 서비스 및 도구",
          "강의 시청 및 노트 정리",
          "중요 정보",
          "실습과 과제 진행하기",
          "부정행위 금지와 코딩표준",
          "질문하는 법",
          "선수 과목과 슬라이드 표기법",
          "알고리듬이란?",
          "알고리듬의 두 가지 학습법",
          "알고리듬을 배우는 이유",
          "면접에서 기초 알고리듬 질문을 하는 이유"
        ],
        "수업에 도움되는 자료": [
          "참고자료 안내",
          "동영상 강좌 관련 질문 안내"
        ],
        "알고리듬, 효율성, 기초 자료 구조": [
          "알고리듬의 정의",
          "영상 퀴즈",
          "간단한 알고리듬 예",
          "훌륭한 알고리듬이 갖춰야 할 자질 1",
          "훌륭한 알고리듬이 갖춰야 할 자질 2",
          "훌륭한 알고리듬이 갖춰야 할 자질 3",
          "알고리듬의 효율성과 실제 성능",
          "영상 퀴즈",
          "알고리듬의 올바름 검증",
          "복습 퀴즈",
          "빅오 표기법",
          "O(1), O(N), O(N^2)",
          "O(logN), O(NlogN)",
          "'대략 그 정도'의 의미",
          "영상 퀴즈",
          "흔히 볼 수 있는 O 표기법의 성능 비교",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "배열",
          "스택, 큐",
          "연결 리스트",
          "해시 테이블, 해시 맵",
          "자료구조의 시간 복잡도 정리",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "정리"
        ],
        "재귀함수, 주먹구구식 알고리듬, 이진 탐색": [
          "재귀함수의 호출 과정",
          "재귀함수의 장단점",
          "꼬리 재귀",
          "영상 퀴즈",
          "꼬리 재귀 함수 작성하기",
          "코드보기: 재귀 함수로 총합 구하기",
          "복습 퀴즈",
          "주먹구구식 알고리듬이란?",
          "간단한 주먹구구식 알고리듬의 예와 시간 복잡도",
          "주먹구구식 비밀번호 깨기와 외판원 문제",
          "기하급수적 알고리듬의 문제",
          "복습 퀴즈",
          "P 분류",
          "NP 분류",
          "영상 퀴즈",
          "P 또는 NP가 아니다!",
          "NP 완전, NP 난해",
          "P vs NP 문제",
          "복습 퀴즈",
          "탐색 알고리듬",
          "이진 탐색",
          "영상 퀴즈",
          "이진 탐색의 시간 복잡도",
          "코드보기: 회전된 배열에서의 검색",
          "정리"
        ],
        "정렬 알고리듬": [
          "정렬 알고리듬",
          "정렬 알고리듬의 안정성",
          "대표적인 정렬 알고리듬",
          "정렬 알고리듬 비교",
          "상황에 따른 정렬 알고리듬 선택",
          "버블 정렬",
          "버블 정렬의 동작 모습",
          "버블 정렬의 복잡도와 안정성",
          "버블 정렬 코드",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "선택 정렬",
          "삽입 정렬",
          "복습 퀴즈",
          "퀵 정렬",
          "퀵 정렬의 동작 모습 1",
          "퀵 정렬의 동작 모습 2",
          "퀵 정렬의 동작 모습 3",
          "퀵 정렬 코드 - 재귀",
          "퀵 정렬 코드 - 분할",
          "퀵 정렬의 복잡도와 분할법",
          "코드보기: 안정성",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "병합 정렬",
          "힙 정렬",
          "힙 정렬의 동작 모습",
          "코드보기: 배열 요소의 최소 차이 찾기",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "정리"
        ],
        "해시 알고리듬": [
          "해시 알고리듬의 정의",
          "해시 알고리듬의 분류와 속성",
          "균일성",
          "지역 민감 해시",
          "효율성",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "비암호학적 해시 함수",
          "올바른 해시 함수를 고르는 법",
          "Lose Lose 해시",
          "Murmur, FNV-1 해시",
          "체크섬",
          "체크섬의 사용례",
          "체크섬이 보장하는 것",
          "패리티 비트",
          "순환 중복 검사(CRC)",
          "영상 퀴즈",
          "CRC 계산법",
          "복습 퀴즈",
          "코드보기: CRC-32 체크섬",
          "암호학적 해시 알고리듬",
          "암호학적 해시 알고리듬의 추가 속성",
          "생일 문제",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "보안 이야기: 비밀번호 터는 법",
          "보안 이야기: 비밀번호 덜 털리는 법",
          "코드보기: 비밀번호 해시 만들기",
          "복습 퀴즈",
          "정리"
        ],
        "암호화": [
          "암호화란?",
          "암호화의 역사",
          "정수론",
          "복습 퀴즈",
          "대칭 키 암호화",
          "복습 퀴즈",
          "AES 알고리듬의 구성",
          "AES의 내부 연산 1",
          "AES의 내부 연산 2",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "복습 퀴즈 4",
          "AES의 내부 연산 3",
          "복습 퀴즈",
          "코드보기: AES",
          "비대칭 키 암호화",
          "비대칭 키 암호화의 두 가지 주요 용도",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "RSA와 큰 소수",
          "공개 키/비밀 키의 특수한 관계",
          "RSA 키 생성",
          "RSA를 이용한 암호화/복호화",
          "RSA 증명 1",
          "RSA 증명 2",
          "증명에서 배울 것들",
          "영상 퀴즈",
          "대칭 키 vs 비대칭 키 암호화의 속도 비교",
          "코드보기: RSA",
          "정리"
        ],
        "트리, 이진 탐색 트리, 레드-블랙 트리": [
          "트리 소개",
          "트리 관련 용어",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "복습 퀴즈 4",
          "복습 퀴즈 5",
          "트리와 재귀",
          "트리의 저장법 및 용도",
          "이진 탐색 트리",
          "영상 퀴즈",
          "BST 탐색",
          "영상 퀴즈",
          "BST 탐색 코드",
          "BST 삽입",
          "영상 퀴즈",
          "BST 삽입의 시간 복잡도",
          "코드보기: BST 삽입",
          "BST 삭제",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "중위 순회",
          "전위 순회, 후위 순회",
          "전위/중위/후위 선택법",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "코드보기: 전위 순회",
          "코드보기: 깊은 트리 복사",
          "레드-블랙 트리",
          "레드-블랙 트리의 특성",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "복습 퀴즈 4",
          "복습 퀴즈 5",
          "복습 퀴즈 6",
          "레드-블랙 트리의 삽입 방법",
          "레드-블랙 삽입 문제 1~4",
          "레드-블랙 삽입 문제 5~6",
          "레드-블랙 삽입 문제 7",
          "레드-블랙 삽입 문제 8",
          "레드-블랙 삽입 전략",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "레드 블랙 트리의 삭제 방법",
          "레드-블랙 삭제 문제 1~3",
          "영상 퀴즈",
          "MC THE BLACK",
          "레드-블랙 삭제 문제 4~8",
          "레드-블랙 삭제 문제 9",
          "레드-블랙 삭제 전략 1",
          "레드-블랙 삭제 전략 2",
          "복습 퀴즈",
          "정리"
        ],
        "트라이, 공간분할 트리": [
          "단어 확인과 자동완성",
          "사전식 순서",
          "영상 퀴즈",
          "트라이란?",
          "트라이로 자동완성 기능 만들기",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "공간분할 트리 소개",
          "많은 물체 처리 문제",
          "쿼드 트리",
          "영상 퀴즈",
          "옥 트리와 기타 공간분할 트리",
          "복습 퀴즈",
          "코드보기: 쿼드 트리",
          "정리"
        ],
        "깊이 우선 탐색, 너비 우선 탐색, 미니맥스": [
          "깊이 우선 탐색(DFS)",
          "깊이 우선 탐색 코드",
          "너비 우선 탐색(BFS)",
          "깊이 우선 vs 너비 우선",
          "그래프와 깊이/너비 우선 탐색",
          "복습 퀴즈 1",
          "복습 퀴즈 2",
          "복습 퀴즈 3",
          "코드보기: 디렉터리 트리 출력하기",
          "틱택토 게임",
          "영상 퀴즈",
          "틱택토 게임 트리와 전략 (미니맥스)",
          "틱택토 평가 함수",
          "영상 퀴즈",
          "미니맥스 알고리듬",
          "깊이 제한 미니맥스",
          "미니맥스 알고리듬의 성능",
          "코드보기: 틱택토",
          "정리"
        ]
      },
      "requirements": [
        "'개체지향 프로그래밍 및 설계 (Java)' 수료",
        "주먹구구식으로 기본 문제들을 풀 수 있음",
        "재귀 함수를 작성할 수 있음",
        "기초 자료 구조를 직접 구현할 수 있음"
      ],
      "description": "본 비디오 강좌는 POCU 아카데미에서 진행하는 COMP3500 수업의 동영상 강의입니다.\n\n\n프로그래머의 업무를 간단히 표현하면 '문제를 해결하는 것'입니다. 그렇기에 '문제를 해결하는 확실한 방법'인 알고리듬(algorithm)은 프로그래머의 필수 지식으로 종종 거론되곤 합니다.\n그럼 어떤 사람이 진짜 개발자일까요? 최신 기술을 많이 아는 사람? 시중에 나와있는 모든 알고리듬 문제를 달달 외우고 있는 사람? 아닙니다. 제대로 된 개발자는 어떤 문제라도 확실히 해결할 수 있는 사람입니다. 알고리듬 문제 사이트에 없는 문제까지 말이죠. 그런 개발자가 되려면 몇몇 핵심 알고리듬을 확실히 이해하는 것이 가장 중요합니다. 새로운 문제는 핵심 알고리듬을 응용하여 풀 수 있으니까요. 이제 아셨나요? 왜 기술 면접(코딩 테스트)에서 알고리듬 문제가 단골손님처럼 나오는지?\n모든 문제 해결에 토대가 되는 핵심 알고리듬. 그것이 바로 이 강좌에서 가르치는 내용입니다. POCU 아카데미가 지향하는 10년 후에도 살아남는 Top 1% 개발자. 그런 사람이 되려면 수박 겉핥기 식이 아닌 핵심 알고리듬의 동작 원리까지 확실히 알아야겠죠? 이 강좌에서 확실히 이해시켜드립니다. 이 강좌를 들으신 후 알고리듬 문제 사이트에 가서 본인의 실력을 테스트해보세요. 처음 보는 문제인데도 어렵지 않게 해법을 찾아내는 한 단계 업그레이드된 본인의 문제 해결능력을 느끼실 수 있을 겁니다. 앞으로 실무에서 마주치게 될 새로운 문제들도 큰 어려움이 없겠죠?\n꼭 기억하세요. 업계가 원하는 프로그래머는 많은 문제의 정답을 외우고 있는 사람이 아니라 핵심 알고리듬의 확실한 이해와 응용을 통해 새로운 문제를 해결할 수 있는 사람입니다.\n이 강좌를 성공적으로 수료한 프로그래머는 다음과 같은 실력을 갖추게 됩니다.\n각 알고리듬의 장단점 및 성능에 대해 잘 이해하고 있다\n어디에 어떤 알고리듬을 적용해야 하는지 안다\n핵심 알고리듬을 응용해 새로운 문제를 풀 수 있다\n기본기의 중요성을 강조하는 표현으로 '하나를 가르치면 열을 안다'라는 말이 있습니다. 이것저것 배우는 대신 핵심이 되는 기본 지식을 습득하여 문제 해결능력을 갖춘 진정한 프로그래머로 거듭나기를 바랍니다.",
      "target_audience": [
        "컴퓨터 공학의 기본기를 배우고 싶은 분들",
        "프로그래머로서 평생 커리어를 꿈꾸는 분들"
      ]
    },
    {
      "title": "Algorithm & Programming in Java (Indonesian Version)",
      "url": "https://www.udemy.com/course/algorithm-and-programming-in-java/",
      "bio": "Java, Algorithm, Programming",
      "objectives": [
        "Siswa akan mampu membuat aplikasi dalam bahasa pemograman Java"
      ],
      "course_content": {
        "Pengenalan Bahasa Pemograman Java": [
          "Pengenalan Algoritma dan Bahasa Pemograman Java",
          "Tipe Data dan Input / Output",
          "Class dan Operasi Aritmatika",
          "Logika & Operasi Relasional dan Seleksi",
          "Statement Iterasi",
          "Operasi Jump dan Exception Handling",
          "Static dan Dynamic Array"
        ],
        "Method, Sorting, dan Baca Tulis File": [
          "Method",
          "Sorting",
          "Baca dan Tulis File",
          "Final Quiz"
        ]
      },
      "requirements": [
        "Harus mampu menggunakan komputer atau laptop",
        "Komputer atau Laptop harus mempunyai IDE Software seperti Netbeans, Textpad, Eclipse"
      ],
      "description": "Topik ini membahas tentang dasar algoritma dan mengimplementasikannya menggunakan bahasa pemrograman Java. Hal ini memungkinkan siswa untuk memiliki dasar algoritma yang kuat untuk membangun sebuah aplikasi dengan menggunakan konsep dan struktur pemograman dalam Java. Topik ini terdiri dari 10 sesi.\nPengenalan Algoritma dan Pemograman Java\nTipe data dan Input / Output\nClass dan Operasi Aritmatika\nLogika & Operasi Relasional dan Seleksi\nStatement Iterasi\nOperasi Jump dan  exception Handling\nStatic dan  Dynamic Array\nMethod\nSorting\nBaca dan Tulis File",
      "target_audience": [
        "Siswa yang ingin belajar Algoritma dan Pemograman dalam Java"
      ]
    },
    {
      "title": "Lógica de Programação em ADVPL 1.0",
      "url": "https://www.udemy.com/course/logica-de-programacao-em-advpl-10/",
      "bio": "Este é o primeiro passo da sua Maratona para se tornar um ninja da programação em ADVPL",
      "objectives": [
        "A partir da lógica de programação em ADVPL você poderá ter acesso a qualquer outro conteúdo dos nossos cursos em ADVPL",
        "Entender de uma vez por todas lógica de programação",
        "Resolver qualquer problema de lógica",
        "Entender a diferença entre Diagrama de Bloco e Fluxograma"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Ferramentas de Apoio"
        ],
        "Linguagem de Programação": [
          "Linguagem de Programação",
          "Estrutura de Programação",
          "Lógica de Programação",
          "Exercícios de Fixação",
          "Vamos exercitar a nossa mente"
        ],
        "Algorítmos": [
          "Algoritmos",
          "Diagrama de Bloco",
          "Fluxograma",
          "Exercícios de Fixação",
          "Vamos exercitar a nossa mente"
        ],
        "Constantes, Variáveis e Tipos de Dados": [
          "Constantes, Variáveis",
          "Tipos de Variáveis",
          "Instalação Visualg",
          "Exercícios de Fixação",
          "Vamos exercitar a nossa mente"
        ],
        "Operadores": [
          "Operadores Aritméticos",
          "Operadores Relacionais",
          "Operadores Lógicos",
          "Exercícios de Fixação",
          "Vamos exercitar a nossa mente"
        ],
        "Estrutura de Decisão e Repetição": [
          "Comandos de Decisão",
          "Comandos de Repetição",
          "Arquivo de Dados",
          "Um recado para você"
        ],
        "Introdução à Lógica em ADVPL": [
          "Um Pouco de História",
          "Linguagem ADVPL",
          "Estrutura de Programação",
          "Introdução ao TDS"
        ]
      },
      "requirements": [
        "conhecer lógica de programação"
      ],
      "description": "Curso de lógica de programação com introdução a linguagem ADVPL da TOTVS focada no sistema de ERP Protheus.\nVocê aprenderá em simples passos a entender de uma vez por todas sobre lógica de programação e conseguirá resolver qualquer problema de lógica.\nAtravés de uma metodologia criada por mim, com mais de 20 anos de experiência, você terá total domínio sobre lógica de programação em ADVPL e poderá aplicar tudo que aprendeu nos próximos cursos ministrados por mim.\nTe vejo dentro do curso.",
      "target_audience": [
        "Você programador que aprendeu a codificar diretamente em ADVPL sem conceitos básicos",
        "Você que é um programador e está com dificuldades em assimilar os conceitos em ADVPL",
        "Você que quer entrar para o Mundo TOTVS"
      ]
    },
    {
      "title": "Programowanie w C++ od podstaw",
      "url": "https://www.udemy.com/course/kurs-programowania-w-c-plus-plus-od-podstaw/",
      "bio": "Najlepsze źródło wiedzy o podstawach i fundamentach C++ w najnowszej wersji (C++17)",
      "objectives": [
        "podstaw języka C++",
        "fundamentów programowania",
        "programowania proceduralnego"
      ],
      "course_content": {
        "Wprowadzenie do kursu i do języka C++": [
          "Co to jest C++",
          "Paradygmaty programowania",
          "Czego się nauczymy w kursie"
        ],
        "Środowisko programistyczne": [
          "Poznajemy darmowe środowisko Code::Blocks",
          "Instalacja Code::Blocks",
          "Dopisanie ścieżki systemowej",
          "Druga opcja - Visual Studio Code",
          "Instalacja Visual Studio Code",
          "Program źródłowy, kompilacja, program wynikowy",
          "Struktura katalogów w projekcie Code::Blocks"
        ],
        "Zmienne, typy danych, struktura programu i biblioteka IOSTREAM": [
          "Zmienna, stała",
          "Podstawowe typy danych",
          "Biblioteka standardowa IOSTREAM",
          "Struktura szkieletu programu w C++"
        ],
        "Pierwszy program w C++ i ćwiczenia": [
          "Piszemy pierwszy program",
          "Polecenia cout, cin, endl, nazewnictwo",
          "Ćwiczenia"
        ],
        "Operatory": [
          "Operatory matematyczne i przypisania - teoria",
          "Operatory matematyczne i przypisania - ćwiczenia"
        ],
        "Tablice": [
          "Tablice jednowymiarowe - teoria",
          "Tablice jednowymiarowe - ćwiczenia"
        ],
        "Klasy i klasa string": [
          "Co to jest klasa",
          "Klasa - ćwiczenia",
          "Klasa string - teoria",
          "Klasa string - ćwiczenia",
          "Wyrażenia logiczne - teoria"
        ],
        "Instrukcje warunkowe": [
          "Instrukcja if else - teoria",
          "Instrukcja if else - ćwiczenia",
          "Blok instrukcji - teoria"
        ],
        "Pętle": [
          "Pętla warunkowa while - teoria",
          "Pętla warunkowa do while - teoria",
          "Pętla while i do while - ćwiczenia",
          "Pętla for - teoria",
          "Pętla for - ćwiczenia"
        ],
        "Typy zmiennych i instrukcja switch": [
          "Zmienne lokalne i globalne",
          "Instrukcja switch",
          "Instrukcja switch - ćwiczenia"
        ]
      },
      "requirements": [
        "chęć nauczenia się C++ i pogłębienia umiejętności programistycznych"
      ],
      "description": "C++ to język, dzięki któremu zrozumiemy programowanie w bardzo dogłębny sposób. Warto więc poznać C++ niezależnie od tego, czy ma to być język naszej codziennej pracy, czy też przyjdzie nam pracować w innym, np. Java, C#, JavaScript czy Python. Nie przypadkiem na studiach informatycznych C++ jest wciąż tak bardzo popularny. Jeśli więc chcesz być dobrym programistą czy front-end developerem, zacznij także uczyć się C++, obok Twojego podstawowego warsztatu pracy. C++ da Ci wymierne korzyści przy każdym następnym języku programowania, który będziesz chciał poznać.\n\n\nTen kurs odnosi się do najnowszej wersji języka, czyli C++ 17. Oczywiście, najważniejsze zmiany języka z dzisiejszej perspektywy i z perspektywy podstaw zostały już wprowadzone wcześniej, czyli przede wszystkim w wersji C++ 11 i wcześniejszych i na nich będziemy skupiać się w kursie Programowanie w C++ od podstaw.\n\n\nW tym kursie staram się wytłumaczyć zagadnienia, które omawiamy, w sposób pogłębiony. Skupiamy się na składni, strukturze oraz rozumieniu tworzonego kodu. Zapraszam wszystkie osoby ambitne, które nie tylko chcą być programistami, ale chcą być dobrymi programistami. Kurs kieruję do osób, które stawiają pierwsze kroki w programowaniu oraz tych, które programują, ale nie w języku C++.\n\n\nCzego nauczymy się w tym kursie - najważniejsze zagadnienia:\nPoznamy darmowe środowisko Code::Blocks\nPoznamy darmowe środowisko Visual Studio Code\nProgram źródłowy / kompilacja / program wynikowy\nPodstawowe typy danych\nBiblioteka standardowa iostream - polecenia cout / cin / endl\nZmienne / stałe / operacje na nich\nOperatory matematyczne i przypisania\nTablice jednowymiarowe\nOgólne informacje o klasie\nKlasa string\nWyrażenia logiczne / instrukcja if… else\nBlok instrukcji\nPętle warunkowe while / do… while\nZmienna lokalna / globalna\nInstrukcja switch\nTablice wielowymiarowe\nFunkcje\nWskaźniki\nProblemy z typem zmiennoprzecinkowym\nKlasa vector\nDynamiczna alokacja pamięci: new i delete\nPolecenia preprocesora\nFunkcja – wywołanie rekurencyjne\nSortowanie bąbelkowe\nSortowanie przez wybieranie\nFunkcja sort – biblioteka STL\nIteratory\n\n\nZapraszam do nauki ze mną, to na pewno będzie dobra inwestycja w Twój rozwój programistyczny ! :)\nWojtek",
      "target_audience": [
        "osoby ambitne, które nie tylko chcą być programistami, ale chcą być dobrymi programistami",
        "osoby, które stawiają pierwsze kroki w programowaniu w ogóle",
        "osoby, które programują, ale nie w języku C++ (lub programowały w nim dawno temu i chcą do tego wrócić)"
      ]
    },
    {
      "title": "Python da Zero: Dal Primo Codice alle Tue Prime Applicazioni",
      "url": "https://www.udemy.com/course/python-corso-online-principianti/",
      "bio": "Impara le Basi, Allena le Tue Abilità con Progetti Pratici e Scala Verso un Livello Esperto",
      "objectives": [
        "Fondamenta di Python e Mindset da Programmatore;",
        "Funzioni, Moduli e Organizzazione del Codice;",
        "Programmazione Orientata agli Oggetti (OOP);",
        "Gestione delle Eccezioni;",
        "Lavorare con File;",
        "Librerie Fondamentali per la Data Science;",
        "Algoritmi di Ricerca e di Ordinamento;",
        "Progetti Pratici;",
        "Regular expressions;",
        "Creare la Tua Prima Interfaccia Grafica;",
        "...e molto altro."
      ],
      "course_content": {
        "Introduzione": [
          "Benvenuto/a!",
          "Informazioni importanti sul supporto e la sezione D&R (Domande e Risposte)",
          "Cosa ti serve? Strumenti necessari",
          "Guida essenziale sul setup del tuo ambiente Python",
          "Ti presento...Python",
          "Tipi di programmazione",
          "Tipi di errori in Python",
          "Cos'è il debugging?",
          "Come aumentare il volume dell'audio delle lezioni"
        ],
        "I fondamentali": [
          "Come eseguire un programma in Python",
          "Il tuo primo programma",
          "Indentazione in Python",
          "Commenti",
          "Le variabili",
          "Gli operatori",
          "Semplici operazioni",
          "Operatori e precedenza",
          "Operatori di assegnazione avanzati e speciali",
          "Esempi operatori di assegnazione avanzati",
          "Test di apprendimento"
        ],
        "Tipi di dato": [
          "Numeri",
          "Tipo string",
          "Tipo boolean",
          "List e Tuple",
          "Modifichiamo una lista in vari modi",
          "List: approfondimento",
          "Esercizio con list",
          "Test di apprendimento",
          "Tuple: approfondimento",
          "Dictionary",
          "Un po' di pratica con dictionary",
          "Esercizio con dictionary",
          "Test di apprendimento"
        ],
        "Le funzioni": [
          "Funzioni - prima parte",
          "Funzioni - seconda parte",
          "None",
          "Dichiarazione return",
          "Esercizio sulle funzioni",
          "Esercizio funzioni",
          "Test di apprendimento",
          "Funzioni utili",
          "EXTRA: decoriamo le funzioni",
          "Approfondimento: le funzioni anonime",
          "Usare le funzioni anonime",
          "La ricorsione",
          "Esercizio sulla ricorsione",
          "Test di apprendimento"
        ],
        "Controllo del flusso": [
          "Dichiarazione IF",
          "Else & elif",
          "If, else ed elif",
          "Utilizzo dell'if nidificato",
          "Try, Except, Finally",
          "Test di apprendimento",
          "Esercizio flusso",
          "Testa o croce?",
          "For loop",
          "While loop",
          "Testa o croce (avanzato)",
          "Loop nidificato",
          "Creare una lista: metodo avanzato",
          "EXTRA: creare un dictionary da due liste (list comprehension)",
          "Esercizio di analisi dati",
          "Tutorial: sistemiamo dei dati",
          "Test di apprendimento",
          "Tutorial: aggiorniamo lo zaino",
          "Moduli in Python",
          "AVANZATO: spacchettiamo gli argomenti!",
          "EXTRA: Cosa è una Libreria?"
        ],
        "AGGIORNAMENTO 08/2025: Setup Professionale": [
          "Cosa sono le dipendenze e perché isolarle?",
          "Creare e attivare un ambiente virtuale con venv",
          "Risolvere l'Errore di Attivazione in PowerShell (Windows 11)",
          "Usare pip e requirements.txt per gestire le dipendenze"
        ],
        "Il gioco dell'impiccato": [
          "Introduzione",
          "Analizza e scrivi il flusso",
          "Gioco dell'impiccato - I",
          "Gioco dell'impiccato - II",
          "Gioco dell'impiccato - III",
          "Gioco dell'impiccato - IV",
          "Gioco dell'impiccato - V"
        ],
        "BONUS: Il gioco Tris": [
          "Introduzione",
          "Il gioco Tris - I",
          "Il gioco Tris - II",
          "Il gioco Tris - III",
          "Il gioco Tris - IV",
          "Il gioco Tris - V"
        ],
        "Regular Expression": [
          "Regular Expression - I",
          "Regular Expression - II",
          "Regular Expression - III",
          "Regular Expression - IV",
          "Regular Expression - V",
          "Esercizio selle Regular Expression"
        ],
        "Algoritmi di ordinamento e ricerca": [
          "Algoritmi di ordinamento I",
          "Algoritmi di ordinamento II",
          "Algoritmi di ricerca",
          "EXTRA: Notazione Big O"
        ]
      },
      "requirements": [
        "Utilizzo base del PC (sapere cos'è una \"directory\", un \"file\");",
        "Un computer (Mac, Windows o Linux) con accesso a Internet è fondamentale per seguire il corso e svolgere gli esercizi;",
        "Qualsiasi esperienza pregressa con altri linguaggi di programmazione può accelerare il processo di apprendimento, ma non è assolutamente necessaria;",
        "Corso creato su sistema operativo Windows. Le nozioni all'interno possono essere applicate anche su MacOS;",
        "Mentalità aperta e motivazione all'apprendimento."
      ],
      "description": "Sei stanco di sentirti escluso dal mondo della programmazione? Hai sempre desiderato creare le TUE applicazioni, ma non sai da dove iniziare? Allora preparati a trasformare la tua curiosità in competenza con \"Python da Zero\"!\nDimentica i corsi noiosi e complicati. Questo percorso è stato progettato per essere l'esperienza di apprendimento Python più coinvolgente e gratificante che tu possa trovare. Non importa se non hai mai scritto una riga di codice in vita tua: ti guiderò passo per passo, con un linguaggio cristallino e progetti pratici che ti faranno innamorare della programmazione.\nPerché Python è IL linguaggio da imparare (e perché questo corso è DIVERSO):\nLa Chiave per il Futuro: Python non è solo facile da imparare, è anche il motore di alcune delle tecnologie più entusiasmanti del momento: intelligenza artificiale, analisi dati, automazione, sviluppo web... le possibilità sono infinite!\nUna Comunità che Ti Accoglie: entra a far parte di una rete globale di appassionati e professionisti. Troverai sempre aiuto, ispirazione e nuove opportunità.\nNon Solo Teoria, Ma VERA Pratica: dimentica le lezioni infinite e astratte. Qui imparerai facendo, con progetti che ti daranno soddisfazione immediata e ti faranno sentire un vero programmatore.\nCosa Scoprirai in Questo Corso Rivoluzionario:\nLe Fondamenta di Python (Senza Errori da Principiante): costruisci una base solida, impara la sintassi corretta e scopri i trucchi per scrivere codice pulito ed efficiente.\nIl Potere delle Funzioni: diventa un maestro nell'arte di riutilizzare il codice, risparmiando tempo e fatica.\nCicli e Condizioni (La Magia dell'Automazione): scopri come far fare al tuo computer il lavoro ripetitivo al posto tuo.\nProgrammazione Orientata agli Oggetti (OOP): impara a pensare come un vero programmatore, creando codice modulare, scalabile e facile da mantenere.\nNumPy - il Tuo Asso nella Manica per il Calcolo Scientifico: scopri la libreria che ha reso Python il re dell'analisi dati e del machine learning.\nProgetti Esclusivi e Divertenti:\nIl Gioco dell'Impiccato: non la solita versione base, ma un'esperienza di gioco arricchita con funzionalità extra.\nTris: sfida il computer in una partita di Tris che metterà alla prova le tue abilità strategiche.\n...e Molto Altro! Ogni progetto è un'opportunità per imparare qualcosa di nuovo e mettere in pratica le tue conoscenze.\nPiù di 100 Video Lezioni: ogni concetto è spiegato in modo semplice e intuitivo, con esempi pratici e zero gergo tecnico inutile.\nIl Tuo Vantaggio Esclusivo: L'Ebook \"Esercizi Python per Principianti con Soluzioni\"\nNon solo imparerai la teoria, ma avrai anche la possibilità di metterti alla prova ogni giorno con esercizi mirati e soluzioni dettagliate. Questo ebook è il tuo compagno di pratica ideale per consolidare le tue conoscenze e diventare sempre più sicuro di te.\nImmagina...\nCreare script che automatizzano le noiose attività quotidiane.\nSviluppare applicazioni personalizzate per risolvere problemi specifici.\nAvere le competenze per entrare nel mondo del lavoro con un vantaggio competitivo.\nDare vita alle TUE idee, trasformandole in software funzionante.\nQuesto non è solo un corso, è un investimento nel tuo futuro.\nCosa Dicono i Nostri Studenti:\n\"Corso ben fatto e adatto anche a chi parte da zero. Il docente è molto preparato e riesce in modo semplice a trasmettere concetti anche complessi. Sono soddisfatto e sicuramente acquisterò altri suoi corsi.\" - Gabriele\n\"Corso ben fatto e docente molto disponibile.\" - Simone\n\"Ottimo corso, ben sviluppato e docente molto chiaro. Spero che il docente inserisca un altro suo corso su programmazione ad oggetti di Python.\" - Rosario\n\"Spiega molto semplicemente e chiaramente.\" - Emiliano\nUltimi Aggiornamenti - Sempre al Passo con le Ultime Novità:\n[NOVITÀ 2024/25] Data Analysis con Python:\nIntroduzione a NumPy: esplora la libreria NumPy per la manipolazione di array e il calcolo scientifico.\nPandas, Matplotlib e Seaborn: immergiti nell'analisi dati con Pandas. Scoprirai il cuore pulsante di questa potente libreria. Imparerai come manipolare, pulire e trasformare i dati per ottenere informazioni preziose.\nE per rendere il tutto ancora più entusiasmante, aggiungerò presto lezioni su Matplotlib e Seaborn per la visualizzazione dei dati. Queste librerie ti permetteranno di trasformare i tuoi dati in grafici accattivanti e intuitivi, rendendo le tue analisi ancora più efficaci.\nAltri aggiornamenti in arrivo nel 2025...\nSmetti di sognare e inizia a programmare! Iscriviti ora a \"Python da Zero\" e scopri il potere che si nasconde dietro poche righe di codice. La tua avventura nel mondo della programmazione inizia OGGI!",
      "target_audience": [
        "Studenti e Insegnanti;",
        "Neo diplomati;",
        "Chi non conosce Python;",
        "Chiunque voglia imparare a programmare."
      ]
    },
    {
      "title": "C++ STLのコンテナ型を動作効率を考えて使いこなす！",
      "url": "https://www.udemy.com/course/cpp-containers/",
      "bio": "C++の標準ライブラリには、STLの「コンテナ型」という、特定の型の値を複数格納するための型が数多くあります。これらを適切に使い分けることで、実行速度やメモリといった動作効率を改善することができます。",
      "objectives": [
        "コンテナ型の基本的な使い方を知ること。",
        "コンテナ型のそれぞれの得意・不得意な処理を知ること。",
        "コンテナ型の使い分けについて、典型的なものを知るとともに、考えてみること。"
      ],
      "course_content": {},
      "requirements": [
        "C++の基礎的な書き方自体は知っていることを想定します。「C++11」で新規に規格化された記法も一部で利用します。",
        "見やすいC++のリファレンスを用意しておくと学びやすいです。",
        "コンテナ型が扱うデータ構造（配列、連結リスト、二分探索木、ハッシュテーブルなど）についての説明は講座内で行います。これらについての知識は前提とはしません。"
      ],
      "description": "C++の標準ライブラリには、STLの「コンテナ型」という、特定の型の値を複数格納するための型があります。代表的なものとしては、vectorという可変長配列のための型があります。\nしかしC++には、配列のためのコンテナ型であっても他にlistやdequeなどが存在しています。それは「動作効率を考えたときに、状況次第で使い分けるべきもの」であるためなのです。\n本講座では、それぞれのコンテナ型の特徴や使い分けについて、一般的な話も含め説明していきます。また「どのような場合にどのコンテナ型を選ぶべきか」という指針についても示します。\n【キーワード】\n本講座内で説明する事項のうち、代表的なキーワード（C++に特化したわけではない用語として）を示します。\n基本：配列、連想配列、連結リスト、二分探索木、ハッシュテーブル、時間計算量・空間計算量（定数時間・対数時間・線形時間など）、ソート\n応用：ならし時間計算量（ならし定数時間など）\nもしこれらのキーワードの大部分について、挙動などを詳しくご存知であれば、本講座での新たな学びは少ないかもしれません。逆に本講座でこれらのキーワードを知り、より詳しく学びたいと思った方については、これらのキーワードを活用していただければと思います。\n【主に扱う型】\nvector, array, deque, list (forward_listを含む), set (unordered_set, multisetなどを含む), map (unordered_map, multimapなどを含む)\n【各節の内容】\n第0節「はじめに」：この講座で何を学んでいただくかをお話しします。<プレビュー可>\n第1節「コンテナ型を使い分けたい場面とは」：コンテナ型を使い分ける典型的な例を示します。具体的にはvectorとlistの挙動の比較を、いくつかのタスクについて行います（例：途中の要素を削除する）。<プレビュー可>\n第2節「vector型の基本」：基本的な使い方や、メモリ効率に関わる使い方（例：reserveメソッド）を解説します。<第2.1節プレビュー可>\n補足A「vectorのメモリ量の増え方について」：vectorの大きさを自動的に増やしていく場合の、メモリ消費の増え方について解説します。\n第3節「その他のコンテナ型の概要」：コンテナ型の分類や、それぞれの実装について解説します。<第3.1節プレビュー可>\n第4節「コンテナ型の使い分け：事例別」：事例に基づいて、使い分けの基準を示します。<第4.0節プレビュー可>\n第4.1節「取得したい要素の指定方法による使い分け」：「●番目の要素を取り出したい」「存在するか確認できればよい」など、取り出す手段での分類です。\n第4.2節「要素追加・削除の方法による使い分け」：そのコンテナ型にどんな変更が加わるかによる分類です。\n第4.3節「メモリ消費量による使い分け」\n第5節「実際に使い分けを考えてみる」：問題を用意しています。考えてみてください。\n第6節「STLをさらに活用する」：「コンテナアダプタ」「<algorithm>」といった、コンテナ型の利用に関連したライブラリの機能について解説します。\n第7節「おわりに」",
      "target_audience": [
        "C++を、計算時間やメモリの面で効率よい使い方をしたい方",
        "C++のコンテナ型を何となく使っていたが、挙動についてより詳しく知りたいと思った方",
        "C++のコンテナ型が多数存在するのを見て、なぜこのように多数あるのか気になった方"
      ]
    },
    {
      "title": "Aprende Python para la certificación PCEP",
      "url": "https://www.udemy.com/course/aprenda-programacion-python/",
      "bio": "Sintaxis del lenguaje, técnicas de validación, OOP, manejo de archivos, colecciones, serialización, pandas, numpy ...",
      "objectives": [
        "Aprenderás las reglas de sintaxis del lenguaje, y dominarás los elementos básicos: variables, tipos de datos, operadores, ciclos, condicionales y funciones.",
        "Aprenderás técnicas para la validación, almacenamiento y procesamiento de datos; analizarás a fondo el manejo de colecciones y el manejo de datos de tipo fecha.",
        "Aprenderás programación orientada a objetos con Python (encapsulamiento, herencia y polimorfismo).",
        "Aprenderás el manejo de archivos planos y serialización JSON, y tendrás una introducción al tema de analítica de datos usando pandas, numpy y matplotlib.",
        "En un formato similar a los cursos de certificación (LECCIÓN, DEMO, PRÁCTICA, QUIZZ), aprenderás los fundamentos de la programación en Python."
      ],
      "course_content": {
        "TEMA: Información detallada del curso": [
          "Folleto informativo y Mapa de contenido"
        ],
        "TEMA: El lenguaje Python": [
          "LECCIÓN: El lenguaje Python",
          "QUIZ: El lenguaje Python"
        ],
        "TEMA: Variables y tipos de datos": [
          "LECCIÓN: Variables y tipos de datos",
          "DEMO: Variables y tipos de datos",
          "LAB: Captura de datos para procesamiento",
          "QUIZ: Variables y tipos de datos"
        ],
        "TEMA: Manejo de operadores": [
          "LECCIÓN: Manejo de operadores",
          "DEMO: Manejo de operadores",
          "LAB: Usando operadores para el cálculo y evaluación de una muestra estadística",
          "QUIZ: Manejo de operadores"
        ],
        "TEMA: Estructuras de decisión y control": [
          "LECCIÓN: Estructuras de decisión y control",
          "DEMO: Estructuras de decisión y control",
          "LAB: Captura múltiple para el cálculo de un descuento",
          "QUIZ: Estructuras de decisión y control"
        ],
        "TEMA: Creación de funciones": [
          "LECCIÓN: Creación de funciones",
          "DEMO: Creación de funciones",
          "LAB: Reúso de código para captura de datos",
          "QUIZ: Creación de funciones"
        ],
        "Técnicas de validación de datos": [
          "LECCIÓN: Técnicas de validación de datos",
          "DEMO: Técnicas de validación de datos",
          "LAB: Comprobación de técnicas de validación de datos y formas",
          "QUIZ: Técnicas de validación de datos"
        ],
        "TEMA: Manejo de fechas": [
          "LECCIÓN: Manejo de fechas",
          "DEMO: Manejo de fechas",
          "LAB: Cálculo y formato avanzado de fechas",
          "QUIZ: Manejo de fechas"
        ],
        "TEMA: Set, Listas y Tuplas (Colecciones unidimensionales)": [
          "LECCIÓN: Set, Listas y Tuplas (Colecciones unidimensionales)",
          "DEMO: Set, Listas y Tuplas (Colecciones unidimensionales)",
          "LAB: Elaboración de un CRUD basado en listas",
          "QUIZ: Set, Listas y Tuplas (Colecciones unidimensionales)"
        ],
        "TEMA: Diccionarios (Colecciones de pares de valores)": [
          "LECCIÓN: Diccionarios de datos",
          "DEMO: Diccionarios de datos",
          "LAB: Elaboración de un CRUD basado en diccionarios",
          "QUIZ: Diccionarios de datos"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación.",
        "Saber usar Jupyter Notebook y Markdown (curso gratis en UDEMY)."
      ],
      "description": "Este curso te ofrece el conocimiento que necesitas para programar profesionalmente usando Python, y te prepara para obtener la certificación PCEP (Certified Entry-Level Python Programmer).\nAprenderás los fundamentos de sintaxis del lenguaje, el manejo de variables y operadores, desarrollo de funciones, validación de datos, uso de colecciones (listas, diccionarios, tuplas), programación orientada a objetos, manejo de fechas, serialización JSON/Pickle, manejo de archivos, y una introducción a pandas y numpy, para realizar trabajos de analítica de datos.\nSe incluye además la explicación del uso de las plataformas Jupyter Notebook y Google Colab, para que puedas codificar y probar tus desarrollos.\nEste curso está dirigido a todas aquellas personas que por razones profesionales o académicas requieren aprender a programar en Python; es indispensable para todas aquellas personas que vayan a adentrarse en temas avanzados de Python en el corto plazo. Contiene múltiples recursos de aprendizaje: lecciones en video, lecturas, prácticas guiadas y Quizes, para garantizar el aprendizaje.\nPython es el lenguaje de programación de mayor demanda y crecimiento en los últimos años: es un lenguaje sencillo — english like —, que permite programar con facilidad aplicaciones de todo tipo, para múltiples plataformas.\nSus poderosas librerías para el procesamiento y visualización de datos son estándar a nivel mundial para proyectos de inteligencia artificial, machine learning, analítica de datos y data science.",
      "target_audience": [
        "Estudiantes universitarios que desean iniciarse en la programación.",
        "Profesionales que desean aprender un lenguaje sencillo que les permita codificar algoritmos.",
        "Profesionales que desean aprender un lenguaje sencillo que les permita hacer analítica de datos.",
        "Programadores en otros lenguajes, que quieran migrar a Python."
      ]
    },
    {
      "title": "150+ Ćwiczeń - Programowanie obiektowe w języku Python - OOP",
      "url": "https://www.udemy.com/course/cwiczenia-programowanie-obiektowe-w-jezyku-python-oop-kurs/",
      "bio": "Praktyczne doskonalenie umiejętności: 150+ ćwiczeń z programowania obiektowego w Pythonie - osiągnij mistrzostwo w OOP!",
      "objectives": [
        "rozwiązać ponad 150 ćwiczeń z programowania obiektowego w języku Python - OOP",
        "radzić sobie z rzeczywistymi problemami występującymi w programowaniu",
        "pracować z dokumentacją i Stack Overflow",
        "gwarantowane wsparcie instruktora"
      ],
      "course_content": {},
      "requirements": [
        "Ukończony kurs z programowania w języku Python na tym koncie instruktorskim",
        "Ukończony kurs z ćwiczeniami z programowania w języku Python na tym koncie instruktorskim",
        "Ukończony kurs z programowania obiektowego w języku Python na tym koncie instruktorskim"
      ],
      "description": "To praktyczny kurs, który umożliwia uczestnikom pogłębienie i utrwalenie swojej wiedzy na temat programowania obiektowego (OOP) w Pythonie poprzez rozwiązywanie ćwiczeń.\nKurs ten jest przeznaczony dla osób, które posiadają już podstawową wiedzę na temat OOP w Pythonie (rekomendowany kurs Programowanie obiektowe w języku Python - OOP ) i chcą ją utrzymać i rozwijać poprzez praktyczne zastosowanie. Każde z ponad 150 ćwiczeń skupia się na konkretnym aspekcie programowania obiektowego, takim jak tworzenie klas i obiektów, zarządzanie atrybutami i metodami, dziedziczenie, polimorfizm, enkapsulacja, metody specjalne i wiele innych.\nKażde ćwiczenie jest zaprojektowane tak, aby pomóc uczestnikom w zrozumieniu i utrwaleniu kluczowych koncepcji OOP. Uczestnicy są zachęcani do samodzielnego rozwiązania każdego zadania przed przejrzeniem rozwiązania. Dla każdego ćwiczenia dostępne są szczegółowe rozwiązania i wyjaśnienia, które umożliwiają uczestnikom porównanie swojego podejścia z optymalnym rozwiązaniem, zrozumienie potencjalnych błędów i nauczenie się lepszego podejścia do problemu.\nTo doskonały wybór dla tych, którzy chcą opanować programowanie obiektowe w Pythonie poprzez praktyczne ćwiczenia. Bez względu na to, czy jesteś początkującym programistą, czy doświadczonym deweloperem, ten kurs pomoże Ci udoskonalić swoje umiejętności w OOP i stać się bardziej efektywnym programistą Pythona.\n\n\nProgramowanie obiektowe w Pythonie – Twórz kod jak budujesz świat: obiekt po obiekcie\nProgramowanie obiektowe (ang. Object-Oriented Programming, OOP) w Pythonie pozwala organizować kod wokół obiektów – instancji klas, które łączą dane i funkcjonalność. Dzięki OOP można tworzyć bardziej przejrzyste, modularne i łatwe do rozbudowy programy. Python wspiera ten paradygmat w sposób naturalny i intuicyjny, oferując mechanizmy takie jak dziedziczenie, polimorfizm i enkapsulacja, które pomagają w tworzeniu skalowalnych i elastycznych aplikacji.",
      "target_audience": [
        "Początkujący programiści Python",
        "Studenci przygotowujący się do egzaminów lub zaliczeń z Pythona",
        "Osoby przygotowujące się do rozmów kwalifikacyjnych na stanowiska juniorskie w IT",
        "Programiści z innych języków",
        "Osoby uczące się samodzielnie (self-taught developers)"
      ]
    },
    {
      "title": "[2023] Sıfırdan İleri Seviye Python Yazılım Geliştirme Kursu",
      "url": "https://www.udemy.com/course/profesyonel-ileri-seviye-python/",
      "bio": "Python Programlama: Temel Bilgilerden Uzman Seviyeye Kadar Kapsamlı Bir Kurs",
      "objectives": [
        "İleri Seviye Python Programlama"
      ],
      "course_content": {
        "Giriş": [
          "Python - Giriş"
        ],
        "Python Programlama - Input Output & Veri Tipleri": [
          "Python Programlama - Değişkenler , Operatorler , Yorum Satırları",
          "Python Programlama - float | int farkları, atama öncelikleri",
          "Python Programlama - String veri tipi ve özellikleri",
          "Python Programlama - Veri Dönüşümleri",
          "Python Programlama - print(\"Fonksiyonu Ve Özellikleri\")",
          "Python Programlama - print(), file ve flush parametresi ne ola ki?",
          "Python Programlama - *Yıldızlı Parametreler",
          "Python Programlama - Liste Veri Tipleri",
          "Python Programlama - Tuple Veri Tipleri",
          "Python Programlama - Dictionary Veri Tipleri",
          "Python Programlama - input() fonksiyonu",
          "Python Programlama - Siz Kodlayın!"
        ],
        "Python Programlama - Mantıksal operatörler": [
          "Python Programlama - Mantıksal İfadeler",
          "Python Programlama - Mantıksal Bağçlarlar (and | or )",
          "Python Programlama - if&else blokları",
          "Python Programlama - SİZ KODLAYIN! - if&elif&else"
        ],
        "Python Programlama - Döngü işlemleri": [
          "Python Programlama - FOR döngüsü",
          "Python Programlama - WHILE döngüsü",
          "Python Programlama - RANGE()",
          "Python Programlama - BREAK & CONTINUE",
          "Python Programlama - LIST COMPREHENSION",
          "Python Programlama - SİZ KODLAYIN"
        ],
        "Python Programlama - FONKSİYONLAR": [
          "Python Programlama - FONKSİYONLAR",
          "Python Programlama - FONKSİYONLAR VE RETURN",
          "Python Programlama - FONKSİYONLAR VE PARAMETRE(*args,**kwargs,ders=\"25!\")",
          "Python Programlama - LAMBDA FONKSİYONLAR VE GLOBAL",
          "Python Programlama - SİZ KODLAYIN!",
          "Python Programlama - MODÜLLER",
          "Python Programlama - SİZ KODLAYIN!"
        ],
        "Python Programlama - SINIFLAR": [
          "Python Programlama - CLASS(SINIF) Yapısı Nedir?",
          "Python Programlama - BASİT ŞİRKET OTOMASYONU - CLASS(OOP) Önemi",
          "Python Programlama - KALITIM",
          "Python Programlama - SİZ KODLAYIN! - BASİT Mp3 Çalar",
          "Python Programlama - SİZ KODLAYIN! - XOX Oyunu Yap"
        ],
        "Python Programlama - HATA BULMA DOSYA İŞLEMLERİ": [
          "Python Programlama - Hata Bulma | Try Except",
          "Python Programlama - Hata Bulma 2 | Excel YouTube Video İndirme",
          "Python Programlama - Dosya İşlemleri",
          "Python Programlama - Planlama Programı, Dosya İşlemleri 2"
        ],
        "Python Programlama - GÖMÜLÜ FONKSİYONLAR": [
          "Python Programlama - map() - Yararlı Gömülü Fonksiyon/Sınıflar(YGFS)",
          "Python Programlama - max(), min(), sum()- Yararlı Gömülü Fonksiyon/Sınıflar(YGFS",
          "Python Programlama - zip, enumerate, filter, all, any, len - (YGFS)",
          "Python Programlama - SİZ KODLAYIN! - Üyelik Sistemi Yap | JSON"
        ],
        "Python Programlama - Genel Ve Gelişmiş yapılar": [
          "Python Programlama - Hayatı kolaylaştıran STR sınıfı fonksiyonları",
          "Python Programlama - SET(Küme) Sınıfı",
          "Python Programlama - VERİ TABANI | SQLITE",
          "Python Programlama - ÜNİVERSİTE SİMULASYONU ?SİZ KODLAYIN",
          "Python Programlama - Decorator & MP3 Downloader- GitHUB",
          "Python Programlama - SİZ KODLAYIN ? &? İnstagram Otomasyonu?",
          "Python Programlama - ITERATORLER",
          "Python Programlama - SİZ KODLAYIN ?",
          "Python Programlama - GENERATOR",
          "Python Programlama - SON - TEBRİKLER!"
        ]
      },
      "requirements": [
        "Temel bilgisayar bilgisi"
      ],
      "description": "Merhaba!\nKursa katılanlar için özel bir indirim sunuyorum. Kursu hemen şimdi satın almak için aşağıdaki bağlantıyı takip edin ve \"YTOZEL\" indirim kodunu kulanabilirsiniz.\n\nPython dünyasına hoş geldiniz! Bu kurs, size Python programlama dilini adım adım öğretecek ve temel bilgilerinizin üzerine inşa ederek sizi gelişmiş seviyeye taşıyacaktır.\nBu kurs, hem yeni başlayanlar hem de deneyimli programcılar için tasarlanmıştır. Eğer daha önce hiç programlama deneyiminiz yoksa, endişelenmeyin! Kurs içinde temel kavramları anlaşılır bir şekilde açıklayacak ve pratik örneklerle uygulamanızı sağlayacağım. Daha önce başka dillerde programlama yapmışsanız, Python'un özelliklerini ve farklarını keşfedeceğiz.\nKurs boyunca, Python'un temel yapılarını, veri tiplerini, kontrol yapılarını ve fonksiyonları öğreneceksiniz. Ardından, daha karmaşık konulara geçerek dosya işleme, hata yönetimi, nesne tabanlı programlama ve modül kullanımı gibi konuları ele alacağız. Gerçek dünya projeleri ve pratik uygulamalarla öğrendiklerinizi pekiştirecek ve kendinizi geliştireceksiniz.\nBu kursun en önemli özelliği, öğrenmeyi eğlenceli ve interaktif hale getirmektir. İşlenen konuları örneklerle destekleyecek, mini projelerle kavrayışınızı pekiştireceğiz. Ayrıca, öğrenme sürecinizde sizi desteklemek için her adımda yanınızda olacağım ve sorularınızı yanıtlayacağım.\nEğer Python'un gücünü keşfetmek ve programlama becerilerinizi geliştirmek istiyorsanız, bu kurs tam size göre! Hemen kaydolun ve Python dünyasına hemen şimdi adım atın.\n\n\nSorularınız için her zaman buradayım. Sizi kurs içerisinde görmekten mutluluk duyacağım!\nSevgiler,\nMert Sis",
      "target_audience": [
        "Yazılıma meraklı, Python programlama öğrenmek isteyen herkes"
      ]
    },
    {
      "title": "الدورة الشاملة لمطور الجافا - تعلم تطوير برامج دسكتوب Java",
      "url": "https://www.udemy.com/course/java-arabic-course/",
      "bio": "دليلك الكامل لتعلم واحتراف لغة الجافا وقواعد البيانات الاوفلاين والاونلاين - تعلم من خلال بناء أكثر من تطبيق جافا دسكتوب",
      "objectives": [
        "اساسيات لغة الجافا",
        "تعلم حل المشاكل بلغة الجافا",
        "البرمجة الكائنية بالجافا وبنى المعلومات الاساسية",
        "برمجة الواجهات بالنت بينز",
        "انشاء قواعد بيانات اوفلاين",
        "ربط قواعد البيانات بواجهات المستخدم",
        "عمل برنامج لادارة الصالات الرياضية",
        "عمل برنامج لادارة العيادات الطبية والمرضى مع قواعد بيانات المايسكوال",
        "تصدير التطبيق ليعمل على جميع المنصات من دسكتوب وويتدوز وماك ولينوكس"
      ],
      "course_content": {
        "المقدمة": [
          "ما الذي سيتم شرحه في الدورة"
        ],
        "مقدمة وتحميل البرامج الاساسية": [
          "ملاحظة على تحميل البرامج الاساسية",
          "تحميل الجافا - موقع اوراكل الجديد ٢٠٢٠",
          "محرر الجافا IntelliJ IDEA CE وعمل اول تطبيق جافا لك",
          "تحميل JAVA-JRE-JDK - بيئة وندوز",
          "تحميل Eclipse وعمل اول برنامج لك",
          "تحميل Netbeans وعمل اول برنامج لك"
        ],
        "فهم الية عمل الجافا وكتابة بعض البرامج": [
          "ملاحظة على هذا القسم",
          "مقدمة الى JVM وبيئة تنفيذ الجافا",
          "Primative and Reference Data Types In Java",
          "عمل واسناد القيمة للمتغيرات variables in java",
          "الثوابت وبرنامج حساب مساحة الدائرة",
          "Numeric Operators And Display Time Program",
          "تحميل ملفات المشروع",
          "Scanner and Reading from keyboard and parsing integers",
          "تحميل ملفات المشروع",
          "برنامج لصرف فكة النقود Compute Change Program",
          "تحميل ملفات المشروع"
        ],
        "مفاهيم اساسية في الجافا والبرمجة كائنية التوجه": [
          "مقدمة في Object And Class",
          "Class with Instance Variables",
          "Instantiation and Object Variable",
          "عمل ومناداة الدوال",
          "الكبسلة",
          "الوراثة",
          "الواجهات interfaces",
          "الفرق بين الابستراكت ميثود والابستراكت كلاس",
          "abstract classes, downcasting, polymorphisim",
          "anynmous object, early and late binding",
          "abstract methods and method override"
        ],
        "Java Collections اساسيات الكوليكشنز": [
          "مقدمة الى الكوليكشنز",
          "ِArraylist, for, foreach",
          "Arrays",
          "Stacks المصفوفات",
          "الهاش ماب والقاموس",
          "كيف تختار الكولكشن",
          "المقارنة والترتيب Comparable and Sorting for Arrays"
        ],
        "تطوير تطبيقات الدسكتوب مع قواعد البيانات الاوفلاين": [
          "تنزيل البرامج المطلوبة لعمل التطبيق java sdk 15.0 2021 netbeans 12.2,derby 10.4",
          "عمل مشروع Gym Desktop Application and Offline Database",
          "تحميل ملفات المشروع",
          "Connect JTable with The database table and make table responsive",
          "تحميل ملفات المشروع",
          "Change Table Columns",
          "Adding CRUD to table Using Master Details",
          "تحميل ملفات المشروع",
          "Create Custom ImagePanel Palette Component",
          "Add Custom ImagePanel to Palette Components",
          "Link Master Details View And Members View to Main Form Menu",
          "تحميل ملفات المشروع",
          "Setup subFrames Default Close Operation",
          "ِAdd JCalendar to Swing Controls",
          "تحميل ملفات المشروع",
          "Link JCalendar to Master Details CRUD Fields",
          "تحميل ملفات المشروع"
        ],
        "تطوير تطبيقات قواعدة البيانات الاونلاين مع الجافا MYSQL and Java": [
          "شرح عملي وعمل مشروع كامل لادارة المرضى والعلاجات",
          "تحميل المصادر المستخدمة في الدورة التدريبية",
          "mysql remote connect to server online"
        ],
        "تصميم صفحات هبوط رائعة لمشروعك بشكل احترافي": [
          "تصميم صفحات هبوط رائعة لتطبيقك بشكل احترافي"
        ]
      },
      "requirements": [
        "جهاز حاسوب",
        "ارادة قوية وصبر",
        "رغبة جامحة في التعلم"
      ],
      "description": "أهلا بكم في الدورة الشاملة لمطور الجافا، حيث ستتعلم في هذه الدورة برمجة التطبيقات والبرامج التي تعمل على جميع المنصات من ويندوز الى ماك ولينوكس من خلال استخدام منصة الايكلبس والنت بينز.\nستتعلم لغة البرمجة جافا والتي تعد واحدة من افضل 3 لغات برمجة منتشرة بالعالم حاليا، حيث تعد هذه اللغة الاساس لبرمجة مختلف التطبيقات من الاندرويد الى الويب.\nسنبدأ بتحميل البرامج اللازمة لتطوير الجافا مرورا بشرح كامل عن الجافا فيرتوال ماشين وطريقة عمل وتنفيذ برامج الجافا ابلكشينز حيث سنقوم بعمل اكثر من تطبيق عملي للتعرف على هذه اللغة الرائعة، بعدها سنتطرق الى البرمجة الكائنية التوجه في الجافا والوراثة وتعدد الاشكال ثم سنتعامل مع بنى المعلومات الكولكشنز في لغة الجافا التي تعد اساسا قويا للتعامل مع تمثيل البيانات.\nبعدها سننتقل الى برمجة الواجهات وقواعد البيانات المحلية الاوفلاين داتا بيس، بحيث سنقوم بعمل تطبيق دسكتوب محمول ومربوط بقاعدة بيانات اوفلاين لادارة الصالات الرياضية وتتبع الاشتراكات الخاصة باللاعبين. بعدها سنقوم بعمل تطبيق اخر لادارة الادوية والمراجعين باستخدام الجافا وقواعد البيانات المايسكوال حيث سنتعامل مع طرق متقدمة في البرمجة مثل الداتا اكسس لاير بالاضافة الى طرق عملية في تصميم الواجهات في لغة الجافا باستخدام النت بينز والعديد من الاضافات المجانية الاخرى.\nسيحصل  المشتركون في هذه الدورة على دورة عمل تطبيقات الاندرويد متعددة اللغات مجانا، وعلى اكثر من 5 دورات مجانية. ما الذي تنتظرونه اعزائي انقروا على زر التسجيل الان وانضموا الينا في تعلم واحدة من اهم اللغات التي تضمن لك الحصول على مهنة مثمرة في المستقبل.",
      "target_audience": [
        "طلاب الجامعات الراغبين بالتعمق في لغة الجافا",
        "طلاب قواعد البيانات",
        "الراغبين بتاسيس انفسهم بالجافا لبرمجة الاندرويد",
        "اي شخص يرغب بتاسيس نفسه بلغة الجافا والبرمجة",
        "اي شخص يرغب بتعلم برمجة قواعد البيانات الديسكتوب",
        "اي شخص يرغب ببناء برامج مشبوكة بقاعدة بيانات تعمل عالماك والويندوز بنفس الوقت"
      ]
    },
    {
      "title": "Java 9 für Einsteiger: Lern Java mit praxisnahen Übungen",
      "url": "https://www.udemy.com/course/java-fuer-anfaenger/",
      "bio": "Lern Java und entwickle Praxisnahe Projekte. Du lernst nicht nur Syntax kennen, sondern Java selbstständig anzuwenden.",
      "objectives": [
        "Eigenständig erste Java-Projekte umsetzen",
        "Einstieg in die Android-Entwicklung (mit einer soliden Basis)",
        "Entwickeln einfacher grafischer Anwendungen",
        "Gutes Verständnis für Objektorientierte Programmierung",
        "Code automatisiert mit Unit-Tests zu prüfen",
        "Erste Reguläre-Ausdrücke zu verwenden",
        "Mit Test-Driven-Development zu arbeiten (TDD)"
      ],
      "course_content": {
        "Einstieg": [
          "Willkommen im Kurs",
          "Java & IntelliJ IDEA unter Windows installieren",
          "Java & IntelliJ IDEA unter macOS installieren",
          "Dein erstes Date mit Java",
          "Hallo-Welt ausgeben"
        ],
        "Neue Features in Java 9": [
          "Neu in Java9",
          "jshell: interaktive Java Umgebung"
        ],
        "Grundlagen": [
          "Variablen",
          "Numerische Datentypen",
          "Typumwandlung / Casting",
          "Numerische Operatoren",
          "Zeichen und Strings",
          "Kommentare",
          "Der Debugger",
          "Wrapper für einfache Datentypen",
          "Formatierte Strings",
          "Formatierte Ausgabe"
        ],
        "Datenkollektionen": [
          "Arrays",
          "Arraylisten",
          "HashMaps"
        ],
        "Kontrolle über den Ablauf": [
          "Bedingungen",
          "Vergleiche durchführen",
          "Logische Operatoren",
          "Exkurs: Eingaben auf der Kommandozeile",
          "Daten einlesen",
          "Wiederholung mit while",
          "for-Schleifen verwenden",
          "Exkurs: Zufallszahlen erzeugen",
          "while vs. for",
          "break und continue",
          "try/catch"
        ],
        "Einschub: Praxisprojekt": [
          "Werte einlesen und Durchschnitt berechnen",
          "Eine mögliche Lösung"
        ],
        "Den Programmfluss steuern": [
          "Gültigkeitsbereiche in Java",
          "Fallunterscheidung mit switch",
          "Enumerations",
          "do/while-Schleifen"
        ],
        "Objektorientierung - die Grundlagen": [
          "Klassen und Objekte",
          "Methoden mit Parameter und Rückgabewerten",
          "Hello World ausgeben",
          "Die Referenz \"this\"",
          "Attribute",
          "Konstruktoren",
          "Getter und Setter",
          "Attribute und Getter/Setter definieren",
          "Datenkapselung und Sichtbarkeit",
          "Mehrere Referenzen"
        ],
        "Praxisprojekt: Objektorientiert": [
          "Werte einlesen und Durchschnitt berechnen",
          "Eine mögliche Lösung"
        ],
        "Objektorientierung - die Fortsetzung": [
          "Null und die Garbage Collection",
          "Java Pakete",
          "Das Keyword static",
          "Interfaces nutzen",
          "Abstrakte Klassen und Methoden",
          "Magische Methoden"
        ]
      },
      "requirements": [
        "Nach Anleitung Software im Web herunterladen und installieren (wird im Kurs erklärt)"
      ],
      "description": "Dein praxisorientierter Einstieg in Java\n\nJava 9 für Einsteiger legt viel Wert auf einen hohen Praxisanteil. Du lernst Grundlagen Schritt für Schritt kennen. Gleichzeitig wendest Du sie aber in ersten eigenen Projekten direkt an. Du lernst nicht nur Bestandteile zu nutzen, sondern daraus echte Programme zu entwickeln.\nEntdecke alle Java Grundlagen\nNatürlich deckt der Kurs die Grundlagen von Java ab. Du entdeckst alle wichtigen Sprachelemente, in leicht nachvollziehbaren Lektionen, zu verwenden. So legst Du eine stabile Basis für Deine Karriere als Java-Entwickler. Nach grundlegenden Themen folgt das erste Praxisprojekt. Du wendest Dein neues Wissen sehr schnell an.\nObjektorientierung verstehen\nIm nächsten Schritt führt Deine Reise durch die Objektorientierung. Auch hier entdeckst Du alle wichtigen Elemente von Java. Gleichzeitig lernst Du auch stilvoll mit Objekten umzugehen, ihre Möglichkeiten sauber zu nutzen.\nWelche Klasse brauchst Du eigentlich? Welche Methode gehört in welche Klasse? Was bedeutet guter Stil genau? Antworten darauf findest Du dank den SOLID-Prinzipien.\nAuch die Objektorientierung wird mit einem weiteren Praxisprojekt vertieft.\nFortgeschrittene Objektorientierung\nDu lernst nicht nur Objektsyntax kennen. Auch fortgeschrittene Themen wie abstrakte Klassen, Vererbung, das überschreiben von Methoden & Co. sind bald wichtiger Bestandteil Deines Portfolios. Dazu gehören ebenfalls Exceptions, das Casting, überlagerte Attribute und mehr.\nUnit-Testing mit JUnit und Test-Driven-Development\nDu lernst mit JUnit Deinen Code automatisiert zu testen. Nach ersten Beispielen und wichtigen Konzepten nutzt Du auch Mock-Ups, um einzelne Klassen nur isoliert zu prüfen. In einem umfangreicheren Projekt schaust Du mir sogar beim Test-Driven-Development über die Schulter.\nJava als Angestellter, Freelancer, im Studium oder als Hobby?\nDu möchtest einen gut bezahlten Job als Java-Entwickler? Dir stehen die Türen offen. Java im Web, als Grundlage für Android, beim Machine Learning und vielen anderen Bereichen eingesetzt. Gleichzeitig kannst Du auch als Freelancer selbstbestimmter Leben und Aufträge für Kunden Zuhause, im Co-Working Space oder auf Reisen umsetzen. Vielleicht ist es ja auch reines Hobby? Oder Java ist Thema im Studium?\nEgal welche Ziele Du verfolgst, die Basis ist für alle gleich... Und genau die legst Du mit diesem Kurs.\nÜbungsaufgaben mit Musterlösungen und vieles mehr\nMit Themen wie Regulären Ausdrücken, Eingaben auf der Kommandozeile, dem Umlenken von Eingabeströmen & Co entdeckst Du noch viele weitere Facetten von Java.\nAlle Inhalte werden in Videos gezeigt, erklärt und mit Beispielen untermalt. Zudem gibt es zu jedem Modul Übungsaufgaben mit passenden Musterlösungen.\nAlles steht für Deinen erfolgreichen Java-Einstieg bereit. Jetzt fehlst nur noch Du!",
      "target_audience": [
        "Einsteiger in Java",
        "Umsteiger von anderen Programmiersprachen"
      ]
    },
    {
      "title": "SAP ABAP : İleri Seviye ABAP Eğitim Seti",
      "url": "https://www.udemy.com/course/sap-abap-ileri-seviye-abap-egitim-seti/",
      "bio": "İleri Seviyede SAP ABAP Programlama dili ile ABAP bilgi birikiminizi kolayca arttırabilirsiniz!",
      "objectives": [
        "SAP ABAP Programlama dilinde ileri seviyede bilgi birikimine sahip olacaksınız.",
        "SAP ABAP Developer Edition kurulmuş SAP sistemine ücretsiz olarak sahip olacaksınız.",
        "Sınırsız bir şekilde kendi SAP sisteminizde geliştirme yapma imkanına sahip olacaksınız.",
        "SAP IDES ürünü içerisinde ileri seviyede yapılan geliştirmeleri tecrübe edeceksiniz.",
        "SAP R/3 içerisinde User Exit nasıl yazılır öğrenebileceksiniz.",
        "SAP R/3 içerisinde Screen Painter kullanarak dialog programlamanın nasıl yapılabileceğini öğrenebileceksiniz.",
        "Data Dictionary alanında ileri seviyede bilgi sahibi olacaksınız.",
        "SAP Standart fonksiyonlarının kullanımını öğreneceksiniz.",
        "SAP BADI kullanımını öğreneceksiniz.",
        "SAP RFC Fonksiyonları hakkında bilgi sahibi olacaksınız ve nasıl geliştirme yapıldığını öğreneceksiniz.",
        "SAP Standart User Exitlerini öğrenip , uygulamalı olarak detayını göreceksiniz.",
        "SAP R/3 içerisinde Enhancement nasıl yazılır öğrenebileceksiniz.",
        "SAP Repair ile standart bir süreçte nasıl repair yapabileceğinizi öğreneceksiniz.",
        "SAP Entegrasyon çalışmalarının nasıl yapılacağını öğreneceksiniz."
      ],
      "course_content": {
        "SAP ERP ye Giriş": [
          "İleri Seviye SAP ABAP Eğitim Seti Tanıtım Videosu",
          "7zip Uygulaması ile SAP ABAP Developer Edition 7.52 SP4 Klasörünün Çıkartılması",
          "SAP ABAP Developer Edition 7.52 SP4 Sisteminin Download Edilip Kurulması",
          "ASE Lisansının Yüklenmesi",
          "SAP ABAP Developer Edition Lisans Yenileme",
          "SAP IDES Sisteminin Açılması ve SAP Sistemine Erişim",
          "Sizlerden Gelen Sorular"
        ],
        "SAP de Uygulamalı Anlatımı": [
          "Dialog Programlamaya Giriş",
          "Screen Painter Uygulamasının Kullanımı",
          "Screen Painter Kullanarak Ekran Tasarlamak",
          "Yaratılan Ekranın SAP Programına Entegre Etmek",
          "Dialog Program Geliştirmesinin Tamamlanması"
        ],
        "SAP de Dosya Okuma/Yazma İşlemleri": [
          "Txt formatlı Dosyaların Okunup İşlenmesi",
          "Excel Formatlı Dosyanın Okunup İşlenmesi",
          "SAP Sunucusunda Dizinden Dosya Okumak",
          "SAP Sunucusuna Dizine Dosya Oluşturmak"
        ],
        "Data Dictionary": [
          "Tablo yaratılması",
          "Tablo Utility çalışması",
          "View yaratılması",
          "Structure yaratılması",
          "Domain yaratılması",
          "Data element yaratılması"
        ],
        "SAP de E-mail Gönderimi": [
          "E-mail Fonksiyonunun Kullanımı",
          "Object-Oriented olarak Email Gönderimi"
        ],
        "SAP Standart Fonksiyonları Anlatımı": [
          "SAP Standart Fonksiyonu Nedir ?",
          "BAPI Fonksiyonlarının Anlatımı",
          "SAP Uygulaması içerisine BAPI Fonksiyonlarının Eklenmesi",
          "Diğer Önemli Standart Fonksiyonların Anlatılması"
        ],
        "SAP BADI Anlatımı": [
          "SAP BADI Nedir ?",
          "SAP BADI Yaratılması"
        ],
        "SAP RFC Fonksiyonları Anlatımı": [
          "SAP RFC Fonksiyonu nedir ?",
          "RFC Fonksiyonunun Kullanımı"
        ],
        "SAP User Exit Anlatımı": [
          "SAP Standart User Exit Nedir?",
          "SD Modülü User Exitlerin Anlatılması",
          "SD Modülü User Exitinde Geliştirme Yapılması",
          "MM Modülü User Exitlerin Anlatılması",
          "MM Modülü User Exitinde Geliştirme Yapılması",
          "FI Modülü User Exitlerin Anlatılması",
          "FI Modülü User Exitinde Geliştirme Yapılması"
        ],
        "SAP Enhancement Anlatımı": [
          "Enhancement Point Nedir ?",
          "Enhancement Point Nasıl Bulunur ?",
          "Standart Bir Sürece Enhancement Eklenmesi"
        ]
      },
      "requirements": [
        "Temel Seviyede SAP ABAP programlama dili bilgisine sahip olmak"
      ],
      "description": "İleri Seviye SAP ABAP Eğitim Setine Hoş Geldiniz!\n\n\nSAP dünyasının kapıları size sonuna kadar açılıyor!\nBu kapsamlı İleri Seviye SAP ABAP Eğitim Seti ile kariyerinizi bir üst seviyeye taşımaya hazır olun. Piyasada aranan bir SAP uzmanı veya danışmanı olmanız için gereken ABAP programlama dilinin en ileri düzey yetkinliklerini kazanacaksınız.\nEğitimimiz, sizi sadece bir yazılımcı yapmakla kalmayacak, aynı zamanda SAP ekosisteminin derinliklerine hakim, çözüm üretebilen bir profesyonel haline getirecek.\n\n\nEğitimde Neler Öğreneceksiniz?\n\n\nBu video seti, teorik bilgiden çok pratik uygulamaya odaklanmıştır. Bir kıdemli SAP uzmanının günlük operasyonlarında mutlaka kullanması gereken ve kritik öneme sahip olan tüm ileri seviye ekran ve araçları detaylıca öğreneceksiniz:\nİleri Düzey ABAP Geliştirme Teknikleri: Kompleks iş süreçlerine yönelik, performans odaklı ve sürdürülebilir özel uygulamalar (custom developments) geliştirmeyi öğreneceksiniz.\nSAP Uzmanlık Alanları: SAP'nin temel modülleriyle entegre çalışan, BAPI'ler, User-Exit'ler, BAdI'ler gibi özelleştirme ve geliştirme araçlarının derinlemesine kullanımı.\nKritik SAP Ekranları ve İşlevleri: Bir danışmanın ya da uzmanın performans takibi, hata ayıklama (debugging), sistem konfigürasyonu ve veri yönetimi gibi alanlarda kullandığı en can alıcı ekranlar (örneğin; SE38, SE80, ST22, SM37, vb.) ve bunların profesyonelce kullanımı hakkında kapsamlı bilgiler verilecektir. Bu bilgilerle, sistemin nabzını tutmayı ve karmaşık problemleri hızla çözmeyi öğreneceksiniz.\n\n\nKariyerinize Etkisi:\n\n\nBu eğitimi başarıyla tamamladığınızda, edindiğiniz uzmanlık seviyesindeki bilgi ve pratik deneyim sayesinde:\nSAP Danışmanlık Şirketlerinde: Projelerde aktif rol alabilen, uluslararası standartlarda çözümler üretebilen bir SAP Danışmanı olarak çalışmaya başlayabilirsiniz.\nKurumsal Şirketlerde (End-User): Şirket içi SAP sistemlerinin tüm geliştirme ve bakım süreçlerini yürütebilen, kritik projelere liderlik edebilen bir SAP Uzmanı pozisyonunda görev alabilirsiniz.\nUnutmayın: SAP ABAP'ta ileri seviyede yetkinlik, yüksek talep gören ve iyi ücretlendirilen bir kariyerin anahtarıdır. Bu set, sektördeki en iyi profesyonellerden biri olma yolunda size rehberlik edecektir.\nŞimdi Kayıt Olun ve SAP Kariyerinizde Fark Yaratın!",
      "target_audience": [
        "SAP alanında uzmanlaşmak isteyen kişiler",
        "ABAP programlama dilindeki bilgisini geliştirmek isteyen kişiler",
        "Üniversite öğrencileri",
        "Üniversiteden yeni mezun kişiler",
        "Kurumsal yada SAP Danışmanlık şirketlerinde çalışmak isteyen kişiler",
        "Yazılım alanında çalışmak isteyen kişiler"
      ]
    },
    {
      "title": "Spring Boot从入门到进阶教程",
      "url": "https://www.udemy.com/course/spring-boot-dev/",
      "bio": "Spring Boot开发与进阶",
      "objectives": [
        "以最快速度掌握Spring Boot框架的基本开发和使用",
        "掌握SpringBoot与其他框架整合"
      ],
      "course_content": {
        "Spring Boot入门": [
          "课程简介",
          "SpringBoot技术简介",
          "Spring Boot入门案例",
          "@RestController的使用"
        ],
        "Spring Boot基本Web开发": [
          "开发Servlet-@ServletComponentScan",
          "开发Filter-@ServletComponentSca",
          "开发Listener-@ServletComponentScan",
          "使用@Bean注解注册Servlet，Filter，Listener",
          "SpringBoot中使用静态资源",
          "SpringBoot进行文件上传"
        ],
        "Spring Boot页面模板使用": [
          "SpringBoot整合Freemarker",
          "SpringBoot整合JSP页面",
          "SpringBoot整合Thymeleaf-入门案例",
          "Thymeleaf语法详解-变量输出",
          "Thymeleaf语法详解-条件判断",
          "Thymeleaf语法详解-迭代遍历",
          "Thymeleaf语法详解-域对象的使用",
          "Thymeleaf语法详解-超链接语法"
        ],
        "Spring Boot实战小练习": [
          "SpringBoot整合Mybatis-添加客户功能",
          "SpringBoot整合Mybatis-客户列表展示",
          "SpringBoot整合Mybatis-客户修改表单回显",
          "SpringBoot整合Mybatis-客户保存修改数据",
          "SpringBoot整合Mybatis-客户数据删除"
        ],
        "SpringBoot单元测试与热部署": [
          "SpringBoot进阶教程课程大纲",
          "SpringBoot整合Junit进行单元测试",
          "SpringBoot热部署-springloader插件（上）",
          "SpringBoot热部署-springloader插件（下）",
          "SpringBoot热部署-springloader启动参数方式",
          "SpringBoot热部署-devtools框架使用"
        ],
        "SpringBoot异常处理": [
          "SpringBoot异常处理-自定义统一的error页面",
          "SpringBoot异常处理-@ExceptionHandler注解方法",
          "SpringBoot异常处理-@ControllerAdvice类",
          "SpringBoot异常处理-SimpleMappingExceptionHandler配置类",
          "SpringBoot异常处理-HandlerExceptionResolver"
        ],
        "SpringBoot表单验证": [
          "SpringBoot表单校验-基本校验功能",
          "SpringBoot表单验证-常用的表单验证注解"
        ],
        "整合Spring Data JPA": [
          "整合SpringDataJPA-SpringDataJPA简介",
          "整合SpringDataJPA-整合SpringDataJPA步骤",
          "整合SpringDataJPA-@Repository接口用法（上）",
          "整合SpringDataJPA-@Repository接口用法（下）",
          "整合SpringDataJPA-@CrudRepository接口用法",
          "整合SpringDataJPA-分页和排序",
          "整合SpringDataJPA-JpaRepository接口使用",
          "整合SpringDataJPA-组合多条件查询",
          "整合SpringDataJPA-一对多关联映射",
          "整合SpringDataJPA-一对多关联添加与查询操作",
          "整合SpringDataJPA-多对多关联映射",
          "整合SpringDataJPA-多对多关联添加与查询操作"
        ],
        "Spring Boot缓存整合": [
          "整合Ehcache-整合Ehcache步骤",
          "整合Ehcache-@Cacheable注解使用",
          "整合Ehcache-@CacheEvict注解使用",
          "整合SpringDateRedis-准备redis测试环境",
          "整合SpringDateRedis-整合SpringDataRedis步骤",
          "整合SpringDataRedis-抽取redis连接参数",
          "整合SpringDataRedis-存取JavaBean对象类型",
          "整合SpringDataRedis-存取JSON格式JavaBean"
        ],
        "Spring Boot实现定时任务": [
          "定时任务-自带@Scheduled注解实现定时任务",
          "定时任务-cron表达式语法",
          "定时任务-Quartz框架简介",
          "定时任务-使用Java应用开发Quartz",
          "定时任务-SpringBoot整合Quartz步骤",
          "定时任务-解决Job对象无法注入Spring容器对象的问题"
        ]
      },
      "requirements": [
        "有一定的Spring开发基础"
      ],
      "description": "Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域(rapid application development)。\n\n\n本课程让学员以最快速度掌握Spring Boot框架的基本开发和使用，以及掌握Spring Boot高级知识点，例如整合Spring Data JPA，整合Quartz定时任务，单元测试，热部署等实用知识点，提供Spring Boot实战开发能力。",
      "target_audience": [
        "有一定的JavaEE开发基础"
      ]
    },
    {
      "title": "Introducción a la Programación con PSeInt",
      "url": "https://www.udemy.com/course/programacion-pseint/",
      "bio": "De cero a Experto!",
      "objectives": [
        "Aprenderás a implementar las diferentes estructuras algorítmicas desde cero",
        "Obtendrás conocimiento en los conceptos más importantes de la programación",
        "Practicarás todos los conceptos mediante decenas de ejemplos prácticos",
        "Podrás ir más allá gracias a los enlaces de interés y el material descargable que dejo a tu disposición"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Identificadores",
          "Variables",
          "Constantes, Operadores y Expresiones",
          "Práctica 1 - Instalando y Configurando PSeInt",
          "Práctica 1 - Trabajando con variables 1",
          "Práctica 1 - Trabajando con variables 2",
          "Práctica 1 - Asignaciones Mútiples y Operadores Aritméticos",
          "Práctica 1 - Leer Datos del Usuario",
          "Algoritmos",
          "Expresiones Aritméticas y Precedencia de Operaciones",
          "Práctica 2 - Teorema de Pitágoras",
          "Práctica 2 - Área de un Círculo",
          "Práctica 2 - Ley de la Gravitación Universal",
          "Práctica 2 - Fórmula Cuadrática",
          "Diagramas de Flujo, Pseudocódigo y Actividades de fin de Sección"
        ],
        "Estructuras Condicionales": [
          "Introducción a las Estructuras condicionales y a los Diagramas de Flujo",
          "Ejecución Paso a Paso y Prueba de Escritorio",
          "Creando un programa usando el Diagrama de Flujo",
          "Práctica 3 - Comentarios y Problema del Supermercado",
          "Práctica 3 - Calculadora de Raíces",
          "Estructuras Condicionales Anidadas",
          "Práctica 4 - Calculadora",
          "Operadores Lógicos - Conjunción",
          "Operadores Lógicos - Negación",
          "Operadores Lógicos - Disyunción"
        ],
        "Estructuras Repetitivas": [
          "Ciclo Para - Contadores Ascendente y Descendente",
          "Ciclo Para - Par Impar y Diagrama de Flujo",
          "Ciclo Para - Pasos e Incrementos",
          "Práctica 5 - Tablas de Multiplicar",
          "Práctica 5 - Sumador Consecutivo",
          "Práctica 5 - Sucesión de Fibonacci",
          "Práctica 5 - Ciclos Para Anidados - Calificaciones",
          "Ciclo Mientras - Contador de 0 a 10",
          "Práctica 6 - Tabla del diez",
          "Práctica 6 - Calificaciones 1",
          "Práctica 6 - Adivina el Número",
          "Estructura Repetir",
          "Estructura Switch o Según",
          "Práctica 7 - Calculadora"
        ],
        "Arreglos": [
          "Introducción a los Arreglos Unidimensionales",
          "Práctica 8 - Inicializando y Mostrando Arreglos",
          "Práctica 8 - Arreglos de Cadenas de Caracteres 1",
          "Práctica 8 - Arreglos de Cadenas de Caracteres 2",
          "Práctica 8 - Sumadora Acumulativa",
          "Práctica 8 - Sumadora de Vectores y Problemas Propuestos",
          "Introducción a los Arreglos Bidimensionales",
          "Práctica 9 - Sumadora Matricial",
          "Práctica 9 - Sumadora de Filas y Columnas 1",
          "9. Práctica 9 - Sumadora de Filas y Columnas 2",
          "Práctica 9 - Matriz Transpuesta",
          "Funciones 1",
          "Funciones 2"
        ]
      },
      "requirements": [
        "Debes tener un computador, con cualquier sistema operativo",
        "Adicionalmente, quiero que tengas muchas ganas de aprender!"
      ],
      "description": "Bienvenidos al curso de Introducción a la Programación con PSeInt!\nEste curso te dará las herramientas necesarias para convertirte en un experto en el tema, empezaremos desde lo más básico hasta operaciones complejas. Todos los temas están explicados con ejemplos prácticos aplicados al mundo real que te permitirán aprender mucho más fácil y sin aburrirte de las clases.\nCuando completes el curso estarás en capacidad de plantear, diseñar, modelare implementar bloques de código funcionales para el sistema de desarrollo en el que estés trabajando.\nQué esperas para introducirte en el apasionante mundo de la Programación y el Desarrollo? Estoy totalmente seguro que con mis clases te convertirás en un experto en muy poco tiempo!\nEl curso dispone de más de 5 horas de contenido con la mejor calidad, acompañado de imágenes y diagramas que ayudarán que tu comprensión del tema sea la mejor. Cada sección tiene numerosas prácticas que te permitirán afianzar tus conocimientos de los temas y acerques al mundo real todos los conocimientos que adquiriste en los videos.\nYa sea que estés cursando una materia de informática o programación en la universidad, que requieras el dominio de las principales estructuras algorítmicas para tu trabajo, que quieras desarrollar algún proyecto que involucre programación o que te apasione el mundo del desarrollo de aplicaciones y sistemas informátios, este curso es para tí! Obtendrás todas las herramientas necesarias para convertirte en el mejor!\nQué esperas para inscribirte al curso de Introducción a la Programación con PSeInt? Te espero adentro!",
      "target_audience": [
        "Estudiantes de secundaria o carreras universitarias",
        "Desarrolladores Junior",
        "Apasionados por el desarrollo informático"
      ]
    },
    {
      "title": "Spring Batch par la pratique",
      "url": "https://www.udemy.com/course/spring-batch-par-la-pratique/",
      "bio": "Développer un projet batch en configuration 100% Java ( Spring Batch, Spring Boot, Spring JDBC, FreeMarker, JavaMail )",
      "objectives": [
        "Développer facilement un projet batch avec une configuration 100% en Java",
        "Lire et écrire de et vers différents types de source ( csv, txt, xml, base de données)",
        "Utiliser Spring boot pour une intégration simple et facile",
        "Rédiger des tests d'intégation pour tester une application Spring batch",
        "Utiliser FreeMarker et JavaMail pour générer et envoyer des emails"
      ],
      "course_content": {
        "Introduction : Le traitement par lot et Spring Batch": [
          "Qu'est ce que c'est un traitement par lot ?",
          "Spring Batch : Introduction",
          "Spring Batch : Architecture",
          "Spring Batch : Concepts"
        ],
        "Environnement et Outils de développement": [
          "Installer Maven",
          "Git et Github",
          "Créer une base de données MySQL",
          "Démarrer un serveur SMPT avec FakeSMTP"
        ],
        "Spring Boot ? Qu'est ce que c'est ?": [
          "Spring Boot : Introduction",
          "Spring Boot : @SpringBootApplication"
        ],
        "Mon premier Batch : Hello world !": [
          "Hello World V1: Développer mon premier Batch",
          "Hello World V2 : Accès à un paramètre via une Map",
          "Hello World V3 : Accès à un paramètre via Late Binding"
        ],
        "Développement du projet : Formations-Batch": [
          "Présentation du projet : Comprendre l'objectif du batch à concevoir",
          "Initialisation du projet : Démarrer un projet spring boot",
          "Initialisation du projet : Ajouter les dépendance Maven au pom.xml",
          "Initialisation du projet : Personnaliser la bannière dans les logs",
          "Initialisation du projet : Gérer les profils et configurer la base de données",
          "Gestion des paramétres : Utiliser un validateur de Spring Batch",
          "Gestion des paramétres : Développer son propre JobParametersValidator",
          "Gestion des paramétres : Exécuter un Job plusieur fois avec les mêmes paramétres",
          "Chargement des formateurs : Lire le fichier .csv",
          "Chargement des formateurs : Stocker les lignes en base de données",
          "Chargement des formateurs : ajouter un listener",
          "Chargement des formations : Lire les formations depuis un fichier XML",
          "Chargement des formations : Stocker les formations en base de données",
          "Chargement des formations : ajouter un listener",
          "Chargement des séances : Charger les séance depuis un fichier CSV",
          "Chargement des séances : Charger les séance depuis un fichier Txt",
          "Chargement des séances : Un Decider pour démarrer la bonne Step",
          "Chargement des séances : Ignorer les lignes en erreur",
          "Envoi des plannings : Présentation de la Step",
          "Envoi des plannings : Charger les formateurs",
          "Envoi des plannings : Enrichir le planning",
          "Envoi des plannings : Générer le conteu du mail via une template Freemarker",
          "Envoi des plannings : Configurer l'envoi des e-mails avec JavaMailSender",
          "Envoi des plannings : Implémenter le l'itemWriter d'envoi des émails",
          "Configurer l'exécution en parallèle de deux Steps"
        ],
        "Test et refactoring du projet formation-batch": [
          "La pyramide des tests",
          "Rédiger les tests de l'étape de chargement des formateurs",
          "Rédiger les tests de l'étape de chargement des formations",
          "Rédiger les tests de l'étape de chargement des séances",
          "Rédiger les tests de l'étape d'envoi des e-mails",
          "Rédiger un tests de bout en bout du batch",
          "DAO : qu'est ce que c'est ?",
          "Refactorer le code du projet",
          "Tester l'envoi des e-mails en utilisant GreenMail"
        ],
        "Packaging et déploiement": [
          "Packager et exécuter le batch"
        ],
        "Conclusion": [
          "Mot de fin"
        ]
      },
      "requirements": [
        "Connaitre les bases de Spring",
        "Connaître les bases de Java",
        "Avoir une soif d'apprendre de nouvelles choses"
      ],
      "description": "Spring Batch a pour objectif de faciliter le développement des applications batch écrites en Java. Qu’est ce que c’est un traitement batch ? Un traitement Batch est un traitement par lots d’une grande quantité d’informations. Le framework est de plus en plus complet avec la nouvelle version 4.2.0 sortie au mois d'Avril 2019. Il y a beaucoup de raisons d’utiliser Spring Batch, principalement\nLe traitement par lot\nLa gestion des transactions\nLa gestion des erreurs\nL’utilisation du framework Spring\n\n\nLa formation a pour but de familiariser les participants à ce framework complexe et mulit-fonctionnalités.\nDans cette formation j’ai opté pour une approche par la pratique. Ceci dit que nous allons développer un projet batch de A à Z prêt à être déployé, ce qui nous permettra de mettre en pratique tout ce que l’on va voir.\nÀ l’issue de cette formation vous allez pouvoir développer facilement vos propres batch en vous servant de toute la force de la version 4 de Spring Batch et son intégration dans Spring Boot. Vous allez apprendre également comment lire et écrire efficacement depuis et vers différentes sources. En plus, vous allez apprendre comment intégrer d’autres frameworks dans un projet batch, notamment JavaMail et FreeMarker.\n\n\nJe suis impatient de vous accompagner dans cette formation :)",
      "target_audience": [
        "Tout développeur Java interéssé par la technologie Spring Batch"
      ]
    },
    {
      "title": "Visual Basic .NETの基礎から販売管理システム構築まで。SQLの使い方も含まれています。",
      "url": "https://www.udemy.com/course/visual-basic-netsql/",
      "bio": "VB .NETのインストールから始まり、プログラムの基礎（変数・条件文・繰り返し）を勉強します。SQLデータベースの使い方を勉強し、VBからデータベースを操作する例題を多く紹介しております。最後は本格的な販売管理システムのソースを公開",
      "objectives": [
        "Visual Basic .NETのプログラムが作れるようになります。SQLデータベースの使い方を勉強しますので、接続とVisual Basicからの処理ができるようになります。販売管理システムを勉強しますので販売管理のシステムの流れがわかります。今回勉強したことをもとにして自分でシステムが作れるようになります。"
      ],
      "course_content": {
        "VB.NETの使い方": [
          "VB.NETの基本初めてのVB.NET",
          "メニュープログラム",
          "プログラムの基礎",
          "電卓",
          "エラーを考慮した電卓"
        ],
        "データベース基礎": [
          "SQLインストール",
          "VB.NETからテーブル操作（すべて自動）",
          "VB.NETからテーブル操作（DataBindingの利用）",
          "データ表示",
          "データ表示1（レコード移動）SQL分割",
          "データ表示（レコード移動）SQL1本",
          "データ表示（レコード移動）SQL1本connectionプロシージャを使う"
        ],
        "入力で使うオブジェクトの使い方": [
          "メニュープログラム",
          "テキストボックス",
          "コンボボックス（直接表示）",
          "コンボボックス（データベースから表示）",
          "リストボックス（直接表示）",
          "リストボックス（データベースから表示）",
          "チェックボックス",
          "ラジオボタン"
        ],
        "データベース実践": [
          "テーブル作成",
          "結合1",
          "結合2",
          "集計1",
          "集計2",
          "集計3",
          "更新",
          "SQL認証を使う場合のユーザーの登録"
        ],
        "VB.NET実践販売管理": [
          "販売管理概要とメニュープログラム"
        ],
        "マスタープログラム": [
          "得意先テーブル",
          "得意先区分登録照会訂正削除",
          "得意先検索",
          "得意先区分検索",
          "得意先プログラム",
          "商品",
          "商品検索",
          "商品プログラム"
        ],
        "売上伝票プログラム": [
          "売上伝票で使うフォーム",
          "売上伝票検索プログラム",
          "売上伝票得意先検索プログラム",
          "売上伝票商品検索プログラム",
          "売上伝票プログラム",
          "売上伝票削除で使うフォーム",
          "売上伝票削除プログラム"
        ],
        "入金伝票プログラム": [
          "入金伝票で使うフォーム",
          "入金伝票検索プログラム",
          "入金伝票プログラム",
          "入金伝票削除"
        ],
        "各種帳票・問い合わせプログラム": [
          "得意先売上元帳フォーム",
          "得意先売上元帳プログラム",
          "商品売上元帳フォーム",
          "商品売上元帳プログラム",
          "請求一覧表（画面）フォーム",
          "請求一覧表（画面）入力プログラム",
          "請求一覧表（画面・エクセル出力）・更新",
          "得意先区分一覧フォーム",
          "得意先区分一覧プログラム",
          "商品区分一覧フォーム",
          "商品区分一覧プログラム",
          "請求一覧表（印刷）参考",
          "合計請求書（印刷）参考",
          "明細請求書印刷 参考"
        ]
      },
      "requirements": [
        "初歩的なPC操作の知識が必要"
      ],
      "description": "Visual Basic .NETのインストール\nメニュープログラムの作成から始まり、プログラムの基礎（変数・条件文・繰り返し）を例題を通して勉強します。\nSQLデータベースのインストール\nSQLの基礎テーブル作成・表示・追加・削除・更新を勉強します。\nVisual Basic .NETでテーブルの操作をします。\nVisual Basic .NETで提供されているナビゲータを使った方法からプログラムを使ったきめ細かなテーブル操作のプログラムを勉強します。\nテーブルを使ったVisual Basic .NETの部品テキストボックス・コンボボックス・リストボックス・チェックボックス・ラジオボタンのプログラムを例題を通して勉強します。\n販売管理に必要な得意先テーブル・商品テーブル・売上伝票ヘッダーテーブル・売上伝票明細テーブルを使ってSQLの実践（結合・集計・更新）を勉強します。\n販売管理システムを作っていきます。\nマスター作成プログラム\n得意先区分登録照会訂正削除・得意先検索・得意先区分検索・得意先プログラム・商品検索・商品プログラムを作っていきます。\n売上伝票プログラム\n売上伝票プログラムは一番工数のかかるプログラムです。\nマスター作成で作った得意先検索・商品検索プログラムを部品として使っていきます。\n今回は追加登録・照会・訂正プログラムと伝票削除プログラムをデータの安全のために別にしていますが一つにすることもできます。\n入金伝票プログラム\n入金伝票プログラムは１枚の伝票が１つのレコードに追加されるためマスター作成と同じプログラムの流れです。\n各種帳票・問い合わせプログラムはSQLの命令でデータを作ってそれを表示・印刷するようにしています。\n表示・印刷は有料のGrapecityのツールを紹介していますので参考にしてください。",
      "target_audience": [
        "プログラムを学びたい方ならどなたでも"
      ]
    },
    {
      "title": "Matlab desde cero(básico-avanzado)",
      "url": "https://www.udemy.com/course/matlab-desde-cero-basico-intermedio/",
      "bio": "Curso práctico y dinámico de programación MATLAB.",
      "objectives": [
        "Aprenderá a programar en MATLAB desde cero.",
        "Comprenderá el funcionamiento y la aplicación de cada función que posee MATLAB.",
        "Aprenderá a manejar matrices y vectores de forma fácil y rápida, para aplicarlos a la solución de problemas de ingeniería.",
        "Podrá detectar errores y solucionarlos de forma fácil para que tenga éxito en sus programaciones.",
        "Aprenderá a crear gráficos en 2 y 3 dimensiones que servirán para artículos científicos.",
        "Estará en la capacidad de procesar grandes volúmenes de datos de forma automatizada.",
        "Podrá optimizar la programación haciendo uso de las herramientas que posee MATLAB"
      ],
      "course_content": {},
      "requirements": [
        "Necesitará acceso a una PC con el software MATLAB instalado con una version 2018a o posterior.",
        "Conocimientos básico de matemática."
      ],
      "description": "¡CURSO TOTALMENTE ACTUALIZADO\nEste es el curso en español más completo y exhaustivo que encontrarás sobre Matlab. Perfectamente estructurado y balanceado, introduce todos los temas de forma sencilla, gradual y 100% práctica. Pongo a tu disposición scripts interactivos y explicaciones gráficas para que comprendas de una forma sencilla cada línea de programación revisada a lo largo del curso.\nEl curso consta de 10 secciones.\nIntroducción a MATLAB\nVectores y matrices\nImportación y exportación de datos.\nFunciones internas de MATLAB.\nGráficos en 2D y 3D\nFunciones definidas por el usuario.\nEntradas y salidas definidas por el usuario.\nFunciones lógicas y estructuras de control.\nMatemática simbólica.\nProyecto final.\nEn algunas secciones se aplica la lógica de programación aprendida para la resolución de problemas reales de ingeniería en lugar de simples ejemplos teóricos. Es un curso innovador que utiliza herramientas avanzadas para apoyar el aprendizaje a diferencia de la forma tradicional. Al finalizar este curso habrás desarrollado habilidades para resolver problemas de ingeniería aplicando la herramienta MATLAB.\nNo esperes más!!! y descubre por qué MATLAB es el lenguaje preferido por científicos e investigadores de todo el mundo, mejora tus conocimientos y da un salto adelante en tu carrera profesional.",
      "target_audience": [
        "Estudiantes de ingeniería y programadores que deseen aprender a programar en el software de alto nivel MATLAB.",
        "Profesionales que trabajen con grandes volúmenes de datos y necesiten procesarlos de manera sencilla aplicando la herramienta MATLAB.",
        "Si no tiene experiencia previa en programación o secuencias de comandos, este curso es ideal para usted, porque aborda desde lo más sencillo hasta lo más complejo."
      ]
    },
    {
      "title": "Reconhecimento de Voz e Sintetização de Fala com Python",
      "url": "https://www.udemy.com/course/reconhecimento-e-sintetizacao-de-voz-com-python/",
      "bio": "Aprenda as Principais Ferramentas para o Desenvolvimento de Programas de Reconhecimento e Sintetização de Voz!",
      "objectives": [
        "Criar Programas de Reconhecimento de voz e Sintetização de fala",
        "Sintetização de Fala com Pyttsx3",
        "API Gtts - Google - Text - To - Speech",
        "Biblioteca Speech Recognition",
        "Sintetização com Espeak",
        "Transformar Arquivos de Texto em Fala",
        "Criar Assistentes Virtuais para Automatizar Tarefas"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Sintetização com Espeak": [
          "Baixando e Configurando o Espeak",
          "Script Python Espeak",
          "Script Python Espeak com IDLE",
          "Script Python Espeak com SubProcess"
        ],
        "Sintetização com Pyttsx3": [
          "Instalando Pacotes e Criando sintetização",
          "Criando Sintetização com o IDLE",
          "Propriedades \"Rate\" e \"Volume\"",
          "Teste Progressivo com \"Rate\" e \"Volume\""
        ],
        "Projeto 01 - Programa de Boas vindas": [
          "Projeto 01 - Programa de Boas vindas - Desenvolvimento",
          "Projeto 01 - Programa de Boas vindas com IDLE"
        ],
        "Sintetização com GTTS (Google-text-to-Speech)": [
          "Instalando Pacotes e Criando sintetização Gtts",
          "Executando Audio Com Pygame e Os",
          "Criando Script no IDLE",
          "Questionário - Sintetização de Voz"
        ],
        "Projeto 02 - Leitor de Arquivo de Texto": [
          "Projeto 02 - Leitor de Arquivo de Texto",
          "Desenvolvendo o Projeto Parte 02"
        ],
        "Reconhecimento de Voz": [
          "Instalando Pacotes",
          "Entendendo o Funcionamento do Sphinx",
          "Script Speech Recognition",
          "Script Speech Recognition com IDLE",
          "Reconhecedor com Loop e Ajuste de Ambiente",
          "Lendo Arquivos de Audio com Sphinx",
          "Lendo Arquivos de Audio com Sphinx IDLE",
          "Criando Script Live Speech"
        ],
        "Reconhecimento de Voz em Português": [
          "Criando Script de Reconhecimento em Portugês",
          "Criando Script de Reconhecimento em Portugês com IDLE",
          "Questionário - Reconhecimento de Voz"
        ],
        "Projeto 3 - Comando de Voz Sim/Não": [
          "Projeto 03 - Comando de Voz Sim/Não",
          "Desenvolvendo o Projeto",
          "Desenvolvendo o Projeto com IDLE"
        ],
        "Projeto 4 - Multiplicando Números por Comando de Voz": [
          "Projeto 04 - Multiplicando Números por Comando de Voz",
          "Desenvolvendo o Programa - Parte 1",
          "Desenvolvendo o Programa - Parte 2",
          "Desenvolvendo o Programa com IDLE"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de Python"
      ],
      "description": "É indiscutível que a inteligência artificial está cada vez mais presente em nossas vidas! E para o programador que deseja ter uma carreira de sucesso, é essencial ter o domínio de tais tecnologias! Este curso tem o propósito de te ensinar o processo de desenvolvimento de aplicações utilizando os melhores recursos e bibliotecas disponíveis hoje para o reconhecimento e sintetização de voz com Python, essas tecnologias são encontradas em diversas aplicações e produtos como o Google tradutor, Google assistente, smart homes entre outros, temos também agora uma enorme demanda por assistentes pessoais que conseguem executar atividades por meio de comandos de voz, seja no ambiente corporativo ou domiciliar, neste curso nós iremos desenvolver alguns programas que executam essas funções para que você entenda o funcionamento por trás dessas aplicações e seja capaz de você mesmo desenvolve-las e manipula-las, se você ainda não conhece a linguagem Python, não se preocupe, todos os comandos utilizados serão explicados e iremos desenvolver utilizando a interface básica de desenvolvimento juntamente com o editor PyCharm que é o mais recomendado.\nReceba o certificado de conclusão automaticamente ao finalizar o conteúdo, você poderá coloca-lo em seu currículo ou portfólio, o acesso é vitalício e você receberá todas as atualizações disponibilizadas para o curso.\nAcesse também os demais cursos que temos disponíveis, temos cursos na área de programação VBA para criação de sistemas, e também Integração do Excel com Access de forma simples e prática, espero ver você em mais dos nossos conteúdos!",
      "target_audience": [
        "Desenvolvedores Iniciantes ou Avançados que querem Dominar essas duas Áreas da Inteligência Artificial"
      ]
    },
    {
      "title": "C++ para Arduino do Zero ao Avançado",
      "url": "https://www.udemy.com/course/c-para-arduino-do-zero-ao-avancado/",
      "bio": "Programando microcontroladores",
      "objectives": [
        "Saber usar lógica de programação",
        "Aprender a usar o Arduino orientado a objeto",
        "Usar C++ moderno com funções lambda variáveis automáticas, criar suas próprias bibliotecas",
        "Usar sistemas integrado com WIFI, BLUETOOTH, IOT, aprender a criar servidor, integrar arduino totalmente com a WEB",
        "Comprar este curso é se dedicar a aprender a programar verdadeiramente Arduino de modo limpo",
        "Aprenda lê qualquer código e pare de deixar um emaranhado de linhas no seu programa principal",
        "Use o VSCODE, Sistemas IOT e automatize seu ESP, ARDUINO totalmente na WEB"
      ],
      "course_content": {
        "Introdução": [
          "Aula Introdutória"
        ],
        "Programação": [
          "Instalação das IDE's",
          "Configuração das IDE's",
          "Memória",
          "Variáveis Teórica",
          "TinkerCad",
          "Variáveis Prática",
          "Operadores Aritméticos",
          "Wokwi e Ponteiros",
          "Funções",
          "Funções com templates",
          "Condições IF",
          "Condições Switch",
          "Sistemas de Iteração/repetição",
          "Goto, Continue, Break",
          "Operadores de Atribuição Composta e Condição Ternário",
          "Array e Matrizes",
          "Array e Matrizes Iterando",
          "Array e Matrizes com ponteiros",
          "Encontrar índice no Array",
          "Alocação dinâmica de memória MALLOC e CALLOC",
          "Structs",
          "Confirmadores de caracteres",
          "Conversão dos tipos",
          "Biblioteca bit()",
          "Static e Const",
          "Funções Matemáticas e Trigonométricas",
          "PulseIn",
          "AnalogRead, AnalogWrite e DigitalRead",
          "Interrupções e qualificador Volatile",
          "Memória Flash (PROGMEM)",
          "Declarações de String",
          "String Funções Aula 1",
          "String funções Aula 2",
          "String funções Aula 3, Random e RandomSeed"
        ],
        "Programando componentes e modulos": [
          "Introdução escrita",
          "Relé",
          "Fotorresistor",
          "Fotorresistor + Relé na prática",
          "LCD 16x2",
          "LCD 16x2 I2C",
          "LED RGB",
          "Teclado 4x4",
          "Resolução da Atividade",
          "Sensor Ultrassônico",
          "Servo Motor",
          "Sensor de Umidade",
          "Sensor IR"
        ],
        "Projeto Caixa D'Agua": [
          "Escopo Inicial",
          "Iniciando o Projeto",
          "Função do Sensor Ultrassônico",
          "Função do Relê",
          "Função dos Leds",
          "Circuito Pré montado",
          "Botao 1",
          "Botão 2",
          "Melhorando o Código 1",
          "Melhorando Código 2",
          "Código final",
          "Final na prática"
        ],
        "Programação Orientada a Objetos": [
          "Introdução a OOP",
          "O que é uma classe",
          "Análise de uma classe",
          "Configurações",
          "Tipos de acessos",
          "Construtor",
          "Destrutor",
          "Encapsulamento",
          "Herança",
          "Herança Multilevel",
          "Herança Multipla",
          "Herança com Contrutores",
          "Sobrecarga",
          "Sobrecarga Obs.",
          "Polimorfismo",
          "Métodos Virtuais",
          "Static",
          "Namespace e Extern",
          "Resumão"
        ],
        "Projeto Classe de Leds": [
          "Inicio no Wokwi",
          "Na prática"
        ],
        "Projeto Controlador Midi": [
          "Baixando Softwares",
          "Escopo da montagem",
          "Library MIDI",
          "Iniciando Projeto",
          "Função dos Botões",
          "MIDI e Bounce",
          "Correção",
          "Ableton básico",
          "Aula Final"
        ],
        "Desenvolvimento WEB": [
          "Introdução a Protocolos de Rede",
          "NodeMCU",
          "Tchau VSCODE",
          "Driver e Esclarecimentos",
          "Wifi no ESP",
          "Access Point",
          "IP Estático",
          "Wifi Multi",
          "Scan WiFi",
          "HTTP Get",
          "HTTP Post",
          "HTTPS Aula 1",
          "HTTPS Aula 2",
          "HTTPS Aula 3",
          "VsCode, a Fênix",
          "Cliente e Servidor",
          "Web Server Aula 1",
          "Web Server Aula 2",
          "Web Server GPT",
          "Github",
          "Nossa Classe Anet",
          "Anet Req Res",
          "Anet This",
          "Anet Args estáticos",
          "Anet GetName GetArgs",
          "Anet finalizado",
          "AnetClient",
          "AnetClient 2",
          "Upload Github",
          "Código na prática ESP-01 e NodeMCU",
          "Prática NODEMCU e ESP-01"
        ],
        "MQTT": [
          "Introdução MQTT",
          "Ubidots Publish",
          "Ubidots Subscribe",
          "MyDevices Cayenne"
        ],
        "Bonus": [
          "Modulo GPS NEO-6M"
        ]
      },
      "requirements": [
        "Não há qualquer tipo de habilidade necessária, neste curso você aprenderá desde do que é uma memória a programação orientada a objeto.",
        "O curso também será focado em sistemas WEB como Tinkercad e não precisaremos inicialmente de um Arduino ou ESP.",
        "O único requisito mínimo é um computador",
        "As ferramentas usadas basicamente serão a Ide vsCode, Ide do Arduino, e plataformas web para automatização e programação"
      ],
      "description": "A Internet das Coisas (IoT, do inglês Internet of Things) é uma das tecnologias mais revolucionárias e promissoras do nosso tempo. Ela tem o potencial de transformar a maneira como interagimos com o mundo ao nosso redor, conectando objetos do dia a dia à internet e permitindo que eles troquem informações e ajam de forma inteligente e autônoma.\nA essência da IoT reside na interconexão de dispositivos físicos, desde eletrodomésticos, como geladeiras e lâmpadas, até veículos, sensores industriais e até mesmo cidades inteiras. Esses dispositivos são equipados com sensores, processadores e conectividade à internet, permitindo que eles coletem dados, se comuniquem entre si e executem ações com base nessas informações.\nUma das principais vantagens da IoT é a capacidade de coletar e analisar dados em tempo real. Sensores embutidos nos dispositivos IoT podem medir uma ampla gama de informações, como temperatura, umidade, localização, movimento, entre outros. Esses dados podem ser enviados para uma plataforma centralizada, onde são processados e analisados para extrair insights valiosos.\nEssa enorme quantidade de dados e informações geradas pela IoT tem um potencial imenso para impulsionar a inovação e melhorar a eficiência em diversos setores. Na agricultura, por exemplo, sensores podem monitorar a umidade do solo e as condições climáticas, permitindo um uso mais eficiente de recursos como água e fertilizantes. Na indústria, sensores podem monitorar o desempenho de máquinas e equipamentos, permitindo a manutenção preditiva e evitando paradas não planejadas.\nAlém disso, a IoT também tem o potencial de melhorar a qualidade de vida das pessoas. Por exemplo, casas inteligentes equipadas com dispositivos IoT podem ajustar automaticamente a temperatura, a iluminação e até mesmo realizar tarefas como fazer compras online ou controlar a segurança da residência. Na área da saúde, dispositivos IoT podem monitorar constantemente os sinais vitais dos pacientes, permitindo um cuidado mais personalizado e a detecção precoce de problemas de saúde.\nNo entanto, a IoT também traz desafios significativos. A segurança é uma preocupação fundamental, uma vez que a interconectividade dos dispositivos aumenta o risco de ataques cibernéticos e violações de privacidade. Além disso, a interoperabilidade entre diferentes dispositivos e plataformas ainda é um desafio, pois existem muitos padrões e protocolos diferentes em uso.\nÀ medida que a IoT continua a evoluir, é essencial abordar essas questões e desenvolver soluções robustas e seguras. A colaboração entre empresas, governos, acadêmicos e especialistas em segurança cibernética é fundamental para garantir que a IoT seja implementada de forma responsável e segura.\nEm suma, a Internet das Coisas está transformando gradualmente o mundo ao nosso redor, trazendo consigo um enorme potencial para melhorar a eficiência, a qualidade de vida e a inovação em diversos setores. À medida que essa tecnologia continua a se desenvolver, podemos esperar um futuro cada vez mais conectado e inteligente, onde os dispositivos trabalham em conjunto para tornar as nossas vidas melhores.",
      "target_audience": [
        "Desenvolvedores sem nenhum conhecimento de programação e aqueles que já programam, mas querem melhorar sua maneira de elaborar seus códigos"
      ]
    },
    {
      "title": "PHP 8. От теории к практике",
      "url": "https://www.udemy.com/course/php-8-ua/",
      "bio": "В курсе \"PHP 8. От теории к практике\" Вы сможете изучить популярный язык программирования PHP с нуля",
      "objectives": [
        "На курсе Вы изучите наиболее популярный язык программирования для веба - PHP",
        "Вы получите не только теорию, но и одновременно закрепление теории на практике",
        "Из курса Вы узнаете не только основы PHP, но и ключевые новинки языка, которые появились в версии PHP 8",
        "В курсе Вы изучите не только PHP, но и получите основы работы с языком запросов SQL"
      ],
      "course_content": {
        "Теория PHP 8": [
          "Установка сервера",
          "Синтаксис PHP",
          "Переменные",
          "Константы",
          "Строки. Часть 1",
          "Строки. Часть 2",
          "Числа",
          "Арифметические операторы",
          "Домашнее задание",
          "Операторы сравнения",
          "Операторы условия if-else-elseif",
          "Цикл while",
          "Цикл for",
          "Домашнее задание",
          "Массивы. Часть 1",
          "Массивы. Часть 2",
          "Домашнее задание",
          "Цикл foreach",
          "Присваивание по ссылке",
          "Домашнее задание",
          "Пользовательские функции. Часть 1",
          "Пользовательские функции. Часть 2",
          "Пользовательские функции. Часть 3",
          "Домашнее задание",
          "Тернарный оператор",
          "Конструкции switch и match",
          "Конструкции require и include",
          "Альтернативный синтаксис управляющих структур",
          "Домашнее задание",
          "Функции для работы с массивами",
          "Функции для работы со строками",
          "Функции для работы с файлами",
          "Отправка форм. Массивы GET и POST",
          "Простейшее приложение",
          "Загрузка файлов",
          "Сессии",
          "Куки",
          "Домашнее задание",
          "Функции даты и времени",
          "Основы работы с БД. Часть 1",
          "Основы работы с БД. Часть 2",
          "Основы работы с БД. Часть 3",
          "Стандарты оформления кода PSR"
        ],
        "Практика PHP 8. Создание гостевой книги": [
          "Несколько слов об ООП",
          "Верстка проекта",
          "Создание БД",
          "PDO и подключение к БД",
          "Получение корректных данных из форм",
          "Composer. Библиотека валидации данных",
          "Функция регистрации пользователей",
          "Функция авторизации пользователей",
          "Функция проверки авторизации",
          "Функция сохранения сообщений",
          "Функция вывода сообщений. Часть 1",
          "Функция вывода сообщений. Часть 2",
          "Принципы построения пагинации",
          "Класс пагинации",
          "Модерация сообщений. Часть 1",
          "Модерация сообщений. Часть 2"
        ]
      },
      "requirements": [
        "Навыки программирования не требуются, Вы научитесь всему необходимому на курсе",
        "Желательно знание основ верстки (HTML и CSS)"
      ],
      "description": "Представляем Вашему вниманию курс – \"PHP 8. От теории к практике\". Курс состоит из двух частей и включает в себя 59 уроков. В курсе Вы найдете как теоретическую часть в виде изучения PHP, так и практическую часть в формате создания приложения гостевой книги.\nНа сегодняшний день PHP является наиболее популярным языком программирования для веб-разработки. На PHP написано около 80% всех сайтов в сети. На PHP написаны такие популярные CMS, как WordPress, OpenCart, 1С-Битрикс, PrestaShop, Drupal, Magento и многие другие. Также на PHP написано и множество популярнейших фреймворков, например: Laravel, CodeIgniter, Symfony, CakePHP, Yii и т.д.\nВ теоретической части курса Вы сможете шаг за шагом изучить как основы PHP, так и ключевые новинки, которые появились в новых версиях PHP 8. Вы познакомтесь с синтаксисом языка, узнаете о переменных и константах, научитесь работать с массивами, узнаете о понятии функции, сможете использовать на практике работу с базами данных (БД), получите представление о языке запросов SQL и многое-многое другое. Также в первой части Вы найдете много домашних заданий, которые позволят закрепить теорию на практике.\nВторая часть курса будет исключительно практической и здесь Вы сможете шаг за шагом написать полноценное приложение гостевой книги. В этом приложении будет функционал регистрации и авторизации пользователей, возможность оставлять сообщения только для авторизованных пользователей, возможность администрировать сообщения пользователям с ролью администратора и многое другое.\nИзучив данный курс, Вы сможете создавать собственные сайты на языке программирования PHP.",
      "target_audience": [
        "Начинающие программисты на PHP и не только",
        "Начинающие frontend-разработчики и backend-разработчики",
        "Верстальщики, желающие идти дальше и изучать программирование"
      ]
    },
    {
      "title": "C언어 알고리즘 입문: 다양한 알고리즘 이론 및 문제 해결 방법",
      "url": "https://www.udemy.com/course/c-bauiaw/",
      "bio": "C언어를 사용하여 현업 필수 알고리즘 직접 구현해보기",
      "objectives": [
        "C언어 기반으로 한 알고리즘 이론 및 구현"
      ],
      "course_content": {
        "[HD]쉽게 배우는 C 알고리즘 입문": [
          "알고리즘(Algorithm)과 절차 지향 프로그래밍 강의 소개",
          "학습할 알고리즘 리스트 및 강의 소스 다운로드 등 소개",
          "참고_알고리즘 학습 환경 구축_C언어 개발자를 위한 Visual Studio 설치",
          "합계 알고리즘(Sum Algorithm)",
          "알고리즘_등차수열_홀수의 합",
          "개수 알고리즘(Count Algorithm)",
          "평균 알고리즘(Average Algorithm)",
          "최댓값 알고리즘(Max Algorithm)",
          "최솟값 알고리즘(Min Algorithm)",
          "근삿값 알고리즘(Near Algorithm)",
          "순위 알고리즘(Rank Algorithm)",
          "선택 정렬 알고리즘 소개_프로그래밍 공통 이론",
          "정렬 알고리즘(Sort Algorithm)",
          "검색 알고리즘 소개 및 이진 검색 알고리즘 설명",
          "검색 알고리즘(Search Algorithm)",
          "병합 알고리즘 이론적인 설명을 의사 코드로 진행",
          "병합 알고리즘(Merge Algorithm)",
          "최빈값 알고리즘 이론적인 설명을 의사 코드로 진행",
          "최빈값 알고리즘(Mode Algorithm)",
          "그룹 알고리즘 이론적인 설명을 의사 코드로 진행",
          "그룹 알고리즘(Group Algorithm)"
        ]
      },
      "requirements": [
        "C언어의 기초 문법에 대한 학습이 진행되신 분들이 수강하실 수 있습니다"
      ],
      "description": "[C언어를 사용하여 현업 필수 알고리즘 직접 구현해보기]\n본 과정에서는 C언어를 활용하여 현업에서 필수적으로 다뤄지는 핵심 알고리즘 12개를 우선 학습해보고 직접 코드로 구현해봅니다. 해당 알고리즘 코드를 학습하며 C의 기초 문법 사항들에 대해서도 다시 정리해보실 수 있습니다.\n본 강의는 특정 알고리즘에 대한 이론 강의와 함께, 해당 내용에 대한 실제 문제 풀이 및 해설 내용을 병렬적으로 배치해둔 것이 특징입니다. 단순히 이론적으로만 알고 넘어가는 게 아닌, 실제로 코드로 필수 알고리즘을 짜보며 학습해가시기 바랍니다.\n본 강의의 목차는 다음과 같이 구성되어 있습니다.\n\n\n<목차>\n알고리즘(Algorithm)과 절차 지향 프로그래밍 강의 소개\n학습할 알고리즘 리스트 및 강의 소스 다운로드 등 소개\n참고_알고리즘 학습 환경 구축_C언어 개발자를 위한 Visual Studio 설치\n합계 알고리즘(Sum Algorithm)\n알고리즘_등차수열_홀수의 합\n개수 알고리즘(Count Algorithm)\n평균 알고리즘(Average Algorithm)\n최댓값 알고리즘(Max Algorithm)\n최솟값 알고리즘(Min Algorithm)\n근삿값 알고리즘(Near Algorithm)\n순위 알고리즘(Rank Algorithm)\n선택 정렬 알고리즘 소개_프로그래밍 공통 이론\n정렬 알고리즘(Sort Algorithm)\n검색 알고리즘 소개 및 이진 검색 알고리즘 설명\n검색 알고리즘(Search Algorithm)\n병합 알고리즘 이론적인 설명을 의사 코드로 진행\n병합 알고리즘(Merge Algorithm)\n최빈값 알고리즘 이론적인 설명을 의사 코드로 진행\n최빈값 알고리즘(Mode Algorithm)\n그룹 알고리즘 이론적인 설명을 의사 코드로 진행\n그룹 알고리즘(Group Algorithm)\nC언어를 사용하시는 분들 중에 알고리즘에 대한 보다 깊은 이해와 활용이 필요하신 분들은 본 강의를 통해 많은 도움 얻어가시기 바랍니다.",
      "target_audience": [
        "C언어로 다양한 알고리즘 이론 및 문제 해결 방법을 학습해보고 싶은 사람"
      ]
    },
    {
      "title": "Scratch-Çocuklar ve Yetişkinler İçin Kodlama Dersleri",
      "url": "https://www.udemy.com/course/scratch-cocuklar-ve-yetiskinler-icin-kodlama-dersleri/",
      "bio": "Kısa zamanda Scratch Öğrenin",
      "objectives": [
        "Scratch Uygulamasının Kullanılmasını",
        "Kodlama Temeli",
        "Bilgisayar Oyunu Yapmaya Başlangıç",
        "Animasyon Yapmak"
      ],
      "course_content": {
        "Giriş": [
          "Tanıtım",
          "Scratch Editörünün Kurulumu",
          "Scratch Editörünün Tanıtımı",
          "Koordinat Sistemi",
          "Kukla Seçmek",
          "Dekor Seçmek"
        ],
        "Kodlama Menülerinin Tanıtımı": [
          "Hareket Menüsü",
          "Görünüm Menüsü",
          "Ses Menüsü",
          "Kalem Menüsü",
          "Veri Menüsü",
          "Liste Oluşturmak",
          "Olaylar Menüsü",
          "Kontrol Menüsü",
          "Algılama Menüsü",
          "İşlemler Menüsü",
          "Özel Taşlar Menüsü"
        ],
        "Kukla Kabiliyetleri": [
          "Kuklayı Yürütmek",
          "Kuklayı Uçurmak",
          "Kuklayı Konuşturmak, Kullanıcıdan Girdi Almak, Cevap Vermek",
          "Kuklayı Zıplatmak"
        ],
        "Ödevler": [
          "Ödev-1",
          "Ödev-1 Çözümü",
          "Ödev-2",
          "Ödev2- Çözümü",
          "Ödev-3",
          "Ödev-3 Çözümü"
        ],
        "Örnek Kodlamalar": [
          "İsim Animasyonu",
          "Sayı Tahmin Oyunu",
          "Yakalama Oyunu",
          "Pong Game",
          "Basamak Çıkmak",
          "Gaza Bas",
          "Flappy Bird",
          "Top Atışı"
        ],
        "Matematik Problemleri": [
          "Tam Bölenleri Bulma",
          "Mükemmel Sayı Formülü",
          "Fibonacci Serisi",
          "Colatz Sanısı"
        ]
      },
      "requirements": [
        "Kodlama Dünyasına İlgi"
      ],
      "description": "Scratch her yaştan insana hitap ediyor. Scratch, kendi oyununuzu, animasyonlarınızı ve hikayelerinizi oluşturmanıza olanak sağlayacak, Bilgisayar kodlama ve programlama mantığını öğrenmenize yardımcı olacaktır. Bu kurs ile birlikte Scratch uygulamasını kullanmayı öğrenecek, kısa bir süre içerisinde kendi oyunlarınızı yapmaya başlayacaksınız. Çocuklarınızın bilgisayar başında daha faydalı ve geleceğe dönük yararlı işlerle uğraşmasını, anlama ve kavrama kapasitelerini geliştirmelerini istiyorsanız bu ders tam da size göre.",
      "target_audience": [
        "Kodlama Öğrenmek İsteyen Çocuklar ve Eğitimci Olmak İsteyen Yetişkinler"
      ]
    },
    {
      "title": "Python 3 para iniciantes e fundamentos de programação",
      "url": "https://www.udemy.com/course/python-3-e-programacao-para-iniciantes-comece-do-zero/",
      "bio": "O curso de Python 3 mais indicado para iniciantes! Aprenda Python, programação, Visual Studio Code, e muito mais..",
      "objectives": [
        "Programar aplicativos na poderosa linguagem Python",
        "Aprender do ZERO o que é programação e como funciona",
        "Saber fazer lógica de programação de maneira eficiente",
        "Compreender o que são algoritmos e linguagens de programação",
        "Aprender a usar o Editor de Código Visual Studio Code para facilitar seu trabalho de programação",
        "Aprender o que são variáveis e como utilizá-las em Python",
        "Programar aplicações reais em Python (com PROJETOS práticos ao longo do curso)",
        "Conhecer operadores em Python e saber como usá-los"
      ],
      "course_content": {
        "Introdução": [
          "O que é exatamente programação",
          "\"Olá, mundo!\" em Python: seu primeiro código!",
          "Interface do usuário: Linha de comando e interfaces gráficas",
          "Teste de conhecimentos sobre a seção."
        ],
        "Algoritmos e linguagens de programação": [
          "O que são algoritmos",
          "O que são linguagens de programação",
          "Lógica de programação",
          "Algoritmos, linguagens de programação e lógica de programação",
          "Conhecendo a linguagem Python",
          "Instalando o interpretador Python",
          "Usando o interpretador Python",
          "Guardando valores na memória: Seu segundo código em Python"
        ],
        "Editores de código e IDEs": [
          "Conhecendo Editores de Código e IDEs",
          "Baixando e instalando o Visual Studio Code",
          "Conhecendo a interface do VS Code",
          "Configurando o VS Code e instalando Temas",
          "Abrindo pastas e arquivos no Explorer do VS Code",
          "Definindo o interpretador Python no VS Code",
          "Criando e salvando arquivos Python no VS Code e por que usar a extensão .py",
          "Escrevendo seu código no VS Code",
          "Rodando seu programa no Visual Studio Code",
          "Exercício guiado sobre VS Code e criação de arquivos Python",
          "Teste sobre VS Code e sobre como criar e rodar códigos Python no VS Code"
        ],
        "Introdução à linguagem Python – Variáveis e comentários": [
          "O que são variáveis",
          "Palavras reservadas da linguagem Python",
          "Recebendo entradas do usuário",
          "Python é uma linguagem Case Sensitive",
          "Tipos de variáveis em Python",
          "Variáveis do tipo String",
          "Formatando Strings com f-strings",
          "Caractere de escape e sequências de escape",
          "Variáveis do tipo inteiro",
          "Variáveis do tipo float",
          "Variáveis do tipo booleano",
          "Exercício guiado sobre variáveis",
          "Conversão de tipos de variáveis",
          "Criando e utilizando constantes em Python",
          "Teste de conhecimentos sobre Variáveis e Constantes",
          "Utilizando comentários em Python"
        ],
        "Introdução à linguagem Python - Operadores": [
          "Operadores aritméticos com números",
          "Ordem das operações matemáticas no Python",
          "Exercício guiado sobre operações aritméticas com números",
          "Configurando o VS Code para foco automático no terminal",
          "Operadores aritméticos com strings",
          "Operadores de atribuição",
          "Operações que retornam valores booleanos",
          "Operadores comparativos",
          "Operadores comparativos encadeados",
          "Operadores lógicos",
          "Exercício guiado com operadores comparativos e lógicos",
          "Operadores associativos",
          "Operadores de identidade",
          "Teste sobre operadores em Python"
        ],
        "Introdução à linguagem Python – Estruturas de controle de fluxo": [
          "O que é Indentação",
          "Estruturas condicionais – if",
          "Estruturas condicionais – else",
          "Estruturas condicionais - elif",
          "Utilizando is e is not com if",
          "Utilizando in e not in com if",
          "Utilizando not com if",
          "Testando se um número é par ou ímpar",
          "Exercício guiado utilizando testes condicionais",
          "Condicionais aninhadas",
          "Teste condicional match",
          "Estrutura de loop while",
          "Parando um loop",
          "Reiniciando um loop",
          "Exercício guiado sobre loop while",
          "Função range()",
          "Estrutura iterativa for",
          "Usando strings como iterável do for",
          "Exercício guiado utilizando for",
          "Passando loops e condicionais sem nenhuma instrução",
          "Conhecendo o if ternário"
        ],
        "Visual Studio Code Intermediário – Controle de fluxo": [
          "Configurando o Debugger",
          "Visualizando o fluxo do programa linha por linha – if",
          "Visualizando o fluxo do programa linha por linha – while",
          "Exercício guiado sobre Debug"
        ],
        "Projeto 1 – CRM (Customer Relationship Management) – Passo 1/3": [
          "Desafio da seção – Sistema CRM (Visão final do programa)",
          "Proposta do programa CRM: algoritmo base e requisitos.",
          "Solução do desafio da seção linha por linha"
        ],
        "Introdução à linguagem Python – Funções embutidas": [
          "O que são funções",
          "Funções embutidas do Python",
          "Argumentos das funções",
          "O que pode ser passado como argumento",
          "Argumentos posicionais (args)",
          "Argumentos nomeados (kwargs)",
          "Exercício guiado sobre funções embutidas do Python",
          "Solução dos exercícios sobre funções embutidas do Python",
          "Conhecendo melhor a função print",
          "Conhecendo a função len",
          "Funções matemáticas abs, pow, round",
          "Funções matemáticas min, max, sum"
        ],
        "Linguagem Python nível intermediário – Métodos": [
          "O que são métodos",
          "Métodos do tipo str (String)",
          "Exercícios sobre métodos de strings",
          "Solução do Exercício do GRITO",
          "Solução do Exercício da LeTrA AlTeRnAdA",
          "Solução do Exercício Escondendo palavras pesadas",
          "Solução do Exercício Não aceito strings!",
          "Teste de conhecimentos sobre métodos"
        ]
      },
      "requirements": [
        "Não é necessário nenhum conhecimento prévio em programação, você irá aprender tudo do ZERO.",
        "Ter um computador(não precisa ser potente) para você praticar o desenvolvimento dos códigos em Python."
      ],
      "description": "Python é a melhor linguagem de programação para começar a aprender a programar.\nEsse curso foi desenvolvido para você que tem ZERO conhecimento em programação e quer começar na área agora aprendendo a poderosa linguagem Python 3, ou para você que tem muito pouco conhecimento na área e quer iniciar sua carreira para se tornar um(a) programador(a) Python de SUCESSO.\nA pessoa que programa em Python é uma das mais valorizadas do mercado de software, e a área da programação oferece EXCELENTES SALÁRIOS e MUITAS OPORTUNIDADES, e esse curso será o melhor caminho para você começar a se tornar um(a) programador(a) com uma base sólida na maravilhosa linguagem Python 3.\nVeja alguns dos benefícios imperdíveis que esse curso te oferece:\nGrade curricular muito bem organizada, em que as aulas seguem uma sequência lógica que vai FACILITAR MUITO o seu aprendizado.\nAulas ALTAMENTE DIDÁTICAS, com explicações claras e detalhadas dos conceitos ensinados.\nSem longas pausas nas falas, para você não perder tempo e APRENDER MUITO MAIS em bem menos tempo (cada 10 minutos de aula entregam o conteúdo de aproximadamente 30 minutos de uma aula comum).\nSuporte GARANTIDO por instrutor qualificado, para que nenhuma dúvida sua fique sem resposta (com prazo de resposta aproximado de 2 dias úteis por conta da alta demanda).\nAlta qualidade do conteúdo, com todos os detalhes necessários para você aprender bem em TODAS AS AULAS.\nAlta qualidade de áudio e vídeo, sem imagens borradas, nem áudio baixo e cheio de eco.\nAtualizações frequentes, com novas seções adicionadas constantemente e com material em vídeo de alta qualidade.\nMuitos materiais de apoio em PDF para ajudar você a relembrar conceitos ensinados nas aulas, ou para acrescentar conhecimentos complementares.\nDiversos EXERCÍCIOS GUIADOS, uma metodologia EXCLUSIVA de exercícios desenvolvida por mim e que você não irá encontrar em nenhum outro curso.\nVários testes de conhecimento para reforçar em sua memória o que foi aprendido nas aulas.\n\n\nAlém disso, você irá aprender não apenas a linguagem Python, mas também noções iniciais NECESSÁRIAS e MUITO ÚTEIS sobre:\n- Linguagens de programação.\n- Algoritmos.\n- Lógica de programação.\n- Editores de códigos e IDEs.\n- Interfaces de usuário.\nO curso também irá te ensinar a utilizar de forma eficiente o editor de código Visual Studio Code, ferramenta essencial para sua nova carreira de programador(a), sentindo-se confortável com o software. Você vai aprender a configurá-lo, instalar extensões, compreender toda a interface do editor, alterar temas e editar códigos de maneira mais eficiente usando vários recursos MUITO ÚTEIS.\nE o principal do curso, claro, será o ensino da linguagem Python, a qual iremos EXPLORAR EM CADA DETALHE nas aulas, para você construir uma BASE SÓLIDA de conhecimentos nessa linguagem.\nVeja alguns dos tópicos da linguagem Python 3 que serão explorados a fundo:\n- Características e usos da linguagem Python.\n- Como usar o interpretador Python.\n- Variáveis e tipos primitivos de dados.\n- Operadores aritméticos e booleanos.\n- Estruturas de controle de fluxo.\n- Executando o programa linha por linha.\n- Projeto de um sistema CRM (Customer Relationship Management)\n- Funções embutidas do Python.\n- O que são e como usar Métodos.\n- Tudo sobre Listas.\n- e muitos outros!\n\n\nATENÇÃO! Esse curso está crescendo através de atualizações frequentes, portanto você irá receber muito mais conteúdo ao longo das próximas semanas, além das 10h de aula em vídeo e mais de 80 aulas já disponíveis.\nConfira a grade curricular logo abaixo, onde você terá acesso GRATUITO a algumas aulas do curso para avaliar o conteúdo antes de comprar.",
      "target_audience": [
        "Jovens que desejam entrar para o fascinante (e bem pago) mundo da programação.",
        "Pessoas que querem fazer uma transição para a carreira de programador(a), mas ainda não sabem nada (ou sabem muito pouco)."
      ]
    },
    {
      "title": "Projet Python : Pratiquez et Progressez en Programmant",
      "url": "https://www.udemy.com/course/python-debutant/",
      "bio": "Maîtrisez Python par la pratique ! Développez vos projets de zéro. Idéal pour débuter et apprendre à coder efficacement.",
      "objectives": [
        "Apprenez à installer Python, Visual Studio Code et l'extension Python pour configurer votre environnement de développement.",
        "Maîtrisez les types de données, les variables, les opérations arithmétiques et les fonctions pour écrire et comprendre des scripts Python.",
        "Découvrez comment créer des conditions if, utiliser les opérateurs logiques et de comparaison, et travailler avec les boucles while et for.",
        "Réalisez des projets concrets pour manipuler des listes, tuples, sets, dictionnaires et utiliser la programmation orientée objet avec des classes."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installer Python",
          "Installer Visual Studio Code",
          "Installer l'Extension Python pour Visual Studio Code",
          "Hello, World!"
        ],
        "Partie 1 : Les Types": [
          "Les Entiers",
          "Les Opérations Artithmétiques",
          "La Fonction Type",
          "Les Variables",
          "Les Types",
          "La Fonction Input",
          "Projet 1 : Énoncé",
          "Projet 1 : Coder un Convertisseur de Degrés",
          "Projet 1 : Solution"
        ],
        "Partie 2 : Les conditions if et Booléens": [
          "Le Type Booléen",
          "Les Opérateurs de Comparaison",
          "Les Opérateurs Logiques",
          "Les Conditions if",
          "Projet 2 : Énoncé",
          "Projet 2 : Générateur de mention en fonction d'une note",
          "Projet 2 : Solution"
        ],
        "Partie 3 : Les Boucles - Itérables - Les Listes": [
          "Les Listes",
          "Les Boucles While",
          "Les Boucles For",
          "Projet 3 (Facile) : Énoncé",
          "Projet 3 : Deviner le Nombre",
          "Projet 3 (Facile) : Solution",
          "Projet 3 (Difficile) : Énoncé",
          "Projet 3 : Le jeu du pendu",
          "Projet 3 (Difficile) : Solution"
        ],
        "Partie 4 : Les Fonctions": [
          "Les Fonctions",
          "Les Paramètres de Fonction",
          "Args et Kwargs",
          "Le Return",
          "Le Scope",
          "Les Fonctions : Résumé",
          "Projet 4 : Énoncé",
          "Projet 4 : La fonction range (simplifiée)",
          "Projet 4 : Solution"
        ],
        "Partie 5 - Les Tuples, Sets et Dicts": [
          "Les Tuples",
          "Les Sets",
          "Les Dictionnaires"
        ],
        "Partie 6 : Les Classes - Programmation Orientée Objet (POO)": [
          "Les Classes",
          "Les Constructeurs",
          "Projet 5 : Énoncé",
          "Projet 5 : Votre première classe !",
          "Projet 5 : Solution"
        ],
        "Lire et Écrire dans des fichiers": [
          "Ouvrir et lire un fichier - open()",
          "Écrire dans un fichier - mode 'w'",
          "Ajouter à un fichier - mode 'a'",
          "Le Context Manager with open(...) as ...",
          "La Gestion d'Erreurs avec les Fichiers",
          "Projet 7 - Énoncé",
          "Projet 7 - Solution"
        ],
        "Les Compréhensions": [
          "Introduction aux Compréhensions",
          "Les Compréhensions de Listes",
          "Les Compréhensions avec Condition",
          "Les Compréhensions Imbriquées",
          "Les Compréhensions de Dictionnaires",
          "Les Compréhensions d'Ensembles (sets)",
          "Quand (ne pas) utiliser les Compréhensions ?"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus - Aller plus loin avec 250+ Exercices !"
        ]
      },
      "requirements": [
        "Aucun prérequis technique spécifique : Le cours est conçu pour les débutants absolus, donc aucune expérience préalable en programmation n'est nécessaire.",
        "Accès à un Ordinateur : Les participants doivent disposer d'un ordinateur avec un système d'exploitation Windows, macOS ou Linux.",
        "Connexion Internet : Une connexion Internet stable est nécessaire pour télécharger les outils nécessaires et suivre les vidéos du cours en ligne.",
        "Installation de Python et Visual Studio Code : Les participants devront installer Python et Visual Studio Code en suivant les instructions fournies dans les premières sessions du cours."
      ],
      "description": "Découvrez \"Projet Python : Pratiquez et Progressez en Programmant\" ! Ce cours intensif est votre tremplin idéal pour maîtriser Python rapidement et efficacement, même si vous partez de zéro. Fini les théories complexes, place à la pratique concrète pour développer vos compétences.\nPourquoi choisir ce cours Python ?\nApprentissage par l'Action : Oubliez les cours qui vous noient dans la théorie ! Ici, chaque concept clé est suivi de projets pratiques immédiats. Vous codez, vous comprenez, vous créez. C'est la méthode la plus rapide pour ancrer vos connaissances et devenir autonome.\nContenu Complet et Concis : Préparez-vous à dépasser les 2 heures de formation pour explorer l'essentiel de Python. De l'installation de Python et Visual Studio Code aux types de données, boucles, fonctions, et même les bases de la Programmation Orientée Objet (POO), tout est couvert pour vous donner une base solide.\nCompétences Prêtes à l'Emploi : Imaginez créer vos propres scripts, manipuler des listes avec aisance, et comprendre les mécaniques internes de Python. À la fin de ce parcours, vous aurez non seulement une compréhension robuste des fondamentaux, mais aussi la confiance pour démarrer vos propres projets.\nCe que vous allez apprendre :\nInstaller et configurer votre environnement de développement Python.\nComprendre les bases : types de données, variables, opérateurs.\nMaîtriser le contrôle de flux avec les conditions et les boucles.\nCréer et utiliser des fonctions pour organiser votre code.\nManipuler les listes et autres structures de données.\nDécouvrir les principes de la Programmation Orientée Objet (POO).\nRéaliser des projets pratiques après chaque notion pour solidifier l'apprentissage.\nLes Compréhensions de listes, dictionnaires et ensembles.\nLes Modules, la commande pip et les environnements virtuels.\nQue vous soyez étudiant, en reconversion, ou simplement désireux d'ajouter une compétence précieuse à votre arsenal, ce cours est fait pour vous. Ne manquez pas cette opportunité de transformer vos idées en code et d'ouvrir la porte à de nouvelles opportunités professionnelles et personnelles.\nRejoignez la communauté des développeurs Python dès aujourd'hui !",
      "target_audience": [
        "Débutants en Programmation : Idéal pour ceux qui n'ont aucune expérience en programmation et souhaitent apprendre les bases de Python rapidement.",
        "Parfait pour les lycéens qui suivent des programmes de sciences informatiques (NSI, SNT) et souhaitent renforcer leurs compétences en programmation Python.",
        "Professionnels en Reconversion : Conçu pour les professionnels souhaitant changer de carrière ou ajouter Python à leurs compétences techniques.",
        "Curieux et Passionnés : Pour toute personne curieuse de découvrir le monde de la programmation et d’acquérir des compétences pratiques en Python."
      ]
    },
    {
      "title": "Mastering C#: Beginner to Professional in Arabic",
      "url": "https://www.udemy.com/course/mastering-c-sharp-beginner-to-professional-in-arabic/",
      "bio": "Building Strong Foundations and Advanced Skills: A Complete Journey from Beginner to Pro",
      "objectives": [
        "Basics of C# Programming",
        "Control Flow and Decision Making",
        "Object-Oriented Programming (OOP) Fundamentals",
        "Error Handling in C#",
        "Collections and Data Structures",
        "Advanced OOP Techniques",
        "Arrays and Multidimensional Arrays",
        "Methods and Classes",
        "Static, Sealed, and Partial Classes",
        "Working with Interfaces",
        "Stacks, Queues, and Creating Custom Collections",
        "Data Access Techniques in C#",
        "Generic Programming (Generic Classes, Methods, Interfaces)",
        "Types of Constraints in Generics (class, new(), unmanaged)",
        "22 quizzes with a total of approximately 200 questions",
        "Access to code ready-to-use projects and examples.",
        "Comprehensive C# version guide detailing features",
        "final evaluation exam with a timed setup and detailed grading to assess your progress"
      ],
      "course_content": {
        "Getting Started with Visual Studio (Optional)": [
          "Installing Visual Studio 2022",
          "Creating New Projects in Visual Studio",
          "Customize Window Layouts in Visual Studio",
          "Bookmarks and Breakpoints",
          "Copy and Paste",
          "Options in Visual Studio",
          "Import and Export Settings",
          "Why Console Application"
        ],
        "Data Types and Variables in C#": [
          "Integers in C#",
          "Floating-point Numeric Types in C#",
          "Strings in C#",
          "Booleans in C#",
          "Type Conversions (Implicit vs Explicit)",
          "Type Conversion using Parse and Convert Class",
          "Data Types in-Depth",
          "Value Types vs Reference Types",
          "var keyword",
          "Quiz 1 (10 Questions)"
        ],
        "Working with Strings and Dates": [
          "String Format in C#",
          "String Interpolation in C#",
          "DateTime in C#",
          "DateOnly and TimeOnly",
          "DateTime Exercise",
          "Naming Conventions and Best Practices",
          "Best Practices for Naming a Variable in C#",
          "Quiz 2 (7 Questions)"
        ],
        "Operators in C#": [
          "Arithmetic Operators in C#",
          "Precedence of Operators in C#",
          "Increment and Decrement Operators in C#",
          "Comparison Operators in C#",
          "Precedence of Operators Exercise in C#",
          "Quiz 3 (8 Questions)"
        ],
        "Conditional Statements": [
          "Conditional Statements - if Statement",
          "Nested If Statements in C#",
          "Logical Operators in C#",
          "Ternary Operator in C#",
          "Switch Statement in C#",
          "Switch Expression in C#",
          "Quiz 4 (10 Questions)"
        ],
        "Nullable Types": [
          "Nullable Types in C#",
          "The Null Coalescing Operator",
          "TryParse",
          "Quiz 5 (5 Questions)"
        ],
        "Constants and String Manipulation": [
          "Constants in C#",
          "String Manipulation in C#",
          "Escape Sequences in C#",
          "Interpolated Verbatim Strings",
          "Quiz 6 (8 Questions)"
        ],
        "Loops in C#": [
          "For Loops in C#",
          "Infinite and Multiple Expressions in For Loops",
          "While and Do While Loops in C#",
          "Nested Loops in C#",
          "Multiplication Tables in C#",
          "Print Triangles Patterns",
          "Triangle Loops Exercise",
          "Why We Make These Triangles",
          "Quiz 7"
        ],
        "Math Functions and Random Numbers": [
          "Math Functions in C#",
          "Generating Random Numbers in C#",
          "Quiz 8 (5 Questions)"
        ],
        "Working with Arrays in C#": [
          "Arrays in C#",
          "Foreach Loops in C#",
          "Traversing 1D Array in C#",
          "Find Minimum and Maximum Element - Hard Way",
          "Find Minimum and Maximum Element - Easy Way",
          "Sorting Array in C# using Bubble Sort Algorithm",
          "Sorting Array in C#",
          "Quiz 9 (7 Questions)"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Motivation to Learn",
        "Logical Thinking Skills",
        "No Prior Coding Experience Required",
        "Optional: Knowledge of English"
      ],
      "description": "Course Description: Mastering C#: From Beginner to Professional\nUnlock the power of C# in this comprehensive course designed to transform you from a novice to a proficient developer. Whether you’re an aspiring programmer, a student, or a seasoned developer looking to sharpen your skills, this course takes you step-by-step through all you need to know about C#.\n\n\nWhat Makes This Course Unique?\nThis course isn’t just about theory—it’s packed with real-world examples, hands-on exercises, and practical applications. Learn how to create projects that range from simple console applications to advanced object-oriented systems. You’ll also explore modern C# features and best practices, ensuring your skills are cutting-edge.\n\n\nSet Up for Success\nBegin with a solid understanding of Visual Studio, the essential tool for C# development. Learn how to install, customize, and utilize its powerful features, including debugging tools, layout personalization, and productivity enhancers.\n\n\nDive into Core Programming Concepts\nUnderstand the building blocks of programming with C#. Master data types, variables, strings, dates, and logical operations, all while following best practices to write clean and efficient code.\n\n\nHarness the Power of Decision-Making and Loops\nExplore conditional statements and logical operators to implement dynamic decision-making in your applications. Then, unlock the full potential of loops, including nested loops, and practice with engaging exercises like pattern creation and array traversals.\n\n\nBuild Real-World Applications with OOP\nDive deep into Object-Oriented Programming (OOP) to create robust, scalable systems. Learn about classes, objects, inheritance, polymorphism, and encapsulation, while applying these principles to create well-structured and reusable code.\n\n\nMaster Data Structures and Collections\nGain a thorough understanding of collections, from basic lists and dictionaries to advanced data structures like queues, stacks, and priority queues. Discover performance insights and learn when to use each structure for maximum efficiency.\n\n\nWhat Is In This Course?\n24 Hours of practical C# with enough examples\nOver 180 Lectures and counting\nReady-to-use interview questions to help you prepare for job opportunities.\nPresentation files for each chapter.\n22 quizzes after each chapter, with a total of approximately 200 multiple-choice questions for practice.\nAccess to code repositories with ready-to-use projects and examples.\nA comprehensive C# version guide detailing features and release dates.\nA final evaluation exam with a timed setup and detailed grading to assess your progress and measure your skills!\n\n\nWhether you're a beginner or looking to advance your knowledge, this course is designed for you!\n\n\nWhy Enroll Now?\nThis course equips you with the knowledge and confidence to build robust applications, automate processes, and advance your career in software development. Join today and start your journey to mastering C# in a structured, engaging, and practical way.",
      "target_audience": [
        "Computer Science Students",
        "Software Developers",
        "Fresh Graduates",
        "IT Trainers and Educators",
        "Programming Enthusiasts",
        "Professionals Transitioning to C#"
      ]
    },
    {
      "title": "Sistema de Gerenciamento de Clientes com Delphi",
      "url": "https://www.udemy.com/course/sistema-de-gerenciamento-de-clientes-com-delphi/",
      "bio": "Delphi 10 com banco Mysql",
      "objectives": [
        "Criar um sistema com delphi 10 para gerenciar clientes usando banco mysql"
      ],
      "course_content": {
        "Introdução": [
          "Sistema de Gerenciamento de Clientes com Delphi",
          "Iniciando servidor local",
          "Criando o banco de dados",
          "Tabela de clientes",
          "Organização do sistema",
          "Configurando status bar",
          "Componente timer para data e hora",
          "Criando um Data Módulo para conexão",
          "Driver para conexão mysql",
          "Dados para conexão com banco",
          "Buscando campos da tabela",
          "Componente page control",
          "Tela de cadastro cleintes",
          "Craindo mascaras para os edits",
          "Configurando as mascaras",
          "Concluindo campo de cadastros",
          "Botões personalizados",
          "Finalizando os botões",
          "Chamando formulário",
          "Usando componente DBEdit",
          "Componente DB Combobox",
          "Associando txt ao banco",
          "Programando botão inserir",
          "Procedure para configurar botões",
          "Salvando o cliente no banco",
          "Excluindo o cliente do banco",
          "Fechando tela de cadastro",
          "Habilitando abas com tab index",
          "Alternando entre abas",
          "Criando tela de consulta e pesquisa",
          "Trabalhando com radio group",
          "Switch case radio group",
          "Componente query para consultas",
          "Criando as consultas com sql",
          "Buscando por código e nome",
          "Buscando por datas",
          "Testando as pesquisas",
          "Quantidade de registros encontrados",
          "Retorno de mensagens",
          "Otimizando a consulta",
          "Buscando todos os registros",
          "Atualizando registros no grid",
          "Txt aceitando apenas números",
          "Baixando o fast report 5",
          "Instalando o fast report 5",
          "Criando relatório de clientes",
          "Colocando os campos no relatório",
          "Formatando o relatório",
          "Finalizando o relatório",
          "Consultas para o relatório",
          "Gerando relatório do cliente",
          "Imprimindo todos os clientes",
          "Duplo clique no grid viw",
          "Buscando cliente para exclusão",
          "Editando cliente selecionado",
          "Ativando caixas de texto",
          "ìcone do sistema",
          "Hospedando banco no servidor",
          "Colocando banco online",
          "Testando sistema com banco online",
          "Testando sistema pelo executável gerado",
          "Installshiled para instaladores",
          "Criando o instalador",
          "Instalando o sistema",
          "Testando sistema instalado"
        ]
      },
      "requirements": [
        "É aconselhável o aluno acompanhar antes o curso de delphi 10, não é obrigatório."
      ],
      "description": "O curso de Sistema de Gerênciamento de Clientes com Delphi 10.2 contém 65 aulas e acompanham todos os arquivos e fontes, neste curso montamos um sistema completo de gerenciamento de clientes com cadastros, consultas, relatórios e muito mais usando banco de dados mysql, adquira já o curso e comece a criar seus sistemas usando delphi, é aconselhável o aluno acompanhar antes os cursos de delphi introdutório ou ter um conhecimento prévio em programação antes de acompanhar este.",
      "target_audience": [
        "Todo aluno que tenha interesse em criar sistemas com delphi e banco de dados mysql"
      ]
    },
    {
      "title": "Çocuklar için Scratch: Kolay ve Eğlenceli Kodlama Öğrenimi",
      "url": "https://www.udemy.com/course/5-saatte-scratch-ile-programlama-ogren-sertifikal-2022/",
      "bio": "Çocuklarınızın Yaratıcılığını Geliştirmek İçin: Pekiştirmeli Öğrenme ile Scratch Programlama Kursu",
      "objectives": [
        "Scratch ile Neler Yapabileceklerini Öğrenecekler",
        "Temel Algoritma ve Kodlama Mantığını Öğrenecekler",
        "Oyun Programlama Nasıl Çalışır Bilgi Sahibi Olacaklar",
        "Gereksiz Ayrıntıya Girmeden Scratch Konusunda Uzmanlaşacaklar"
      ],
      "course_content": {
        "Temel Bilgiler": [
          "Scratch Nedir?",
          "Üyelik Sistemi",
          "Offline Editör Kullanımı",
          "Scratch ilk İzlenim"
        ],
        "Sekmeler": [
          "Hareket Sekmesi",
          "Dans Edelim",
          "Olaylar Sekmesi",
          "Kontrol Sekmesi"
        ],
        "Örnek Uygulamalar": [
          "Ping Pong Oyunu",
          "Yılan Oyunu",
          "Flappy Bird - Part 1",
          "Flappy Bird - Part 2",
          "Labirent Oyunu",
          "Kim Milyoner Olmak İster",
          "Kalem Kullanımı",
          "Paint Uygulaması Yapıyoruz",
          "Çeviri Uygulaması Yapıyoruz",
          "Metinden Sese Çevirme",
          "Bloklarım alanı",
          "Araba Yarışı Yapımı",
          "Platform Oyun Mantığı"
        ]
      },
      "requirements": [
        "Bilgisayar",
        "Scratch Öğrenmek İçin 5 Saat :)"
      ],
      "description": "Bu kurs, Scratch programlama dilinin temellerini öğrenmek isteyen çocuklar için tasarlanmıştır. Scratch, çocuklar için özel olarak tasarlanmış bir programlama dilidir ve çocukların yaratıcılık potansiyelini keşfetmelerine yardımcı olur. Scratch programlama dili, blok tabanlı bir programlama dilidir. Bu nedenle, çocuklar için kodlama öğrenmek oldukça kolay hale gelir. Scratch programlama dilini öğrenmek, çocukların yaratıcı projeler yapmalarını, oyunlar oluşturarak, interaktif hikayeler tasarlamalarını ve animasyonlar yapmalarını sağlar.\nScratch Programlama Kursu, pekiştirmeli öğrenme teknikleri kullanılarak verilmektedir. Bu sayede öğrenciler, öğrendikleri konuları tekrarlayarak daha iyi anlamalarını sağlayabilirler. Kurs boyunca, çocuklar Scratch programlama dilini öğrenerek basit oyunlar, interaktif hikayeler ve diğer yaratıcı projeler oluşturabilirler. Scratch platformunun özelliklerini kullanarak, kendi projelerini tasarlayabilir ve paylaşabilirler.\nBu kurs, Bilişim Teknolojileri ve Yazılım Öğretmeni Tuncay Erol tarafından verilmektedir. Tuncay Erol, öğrencilerin yaratıcı düşünme becerilerini geliştirmelerine yardımcı olmak için Scratch programlama dilini kullanarak eğitim veren bir uzmandır. Kurs boyunca, Tuncay Erol öğrencilerin her adımında destek vererek, öğrencilerin kodlama becerilerini geliştirmelerine yardımcı olur.\nScratch Programlama Kursu, kodlama becerilerini geliştirmek ve yaratıcılık potansiyelini ortaya çıkarmak isteyen çocuklar için ideal bir seçenektir. Bu kurs, öğrencilere temel Scratch becerileri kazandırarak, ileride daha karmaşık kodlama dilleri öğrenmelerine de yardımcı olur. Öğrenciler, bu kurs sayesinde yaratıcılık ve programlama becerilerini bir arada geliştirerek, gelecekteki kariyerlerinde başarılı olmak için gerekli olan temel becerileri kazanabilirler.",
      "target_audience": [
        "Sınıf Öğretmenleri",
        "Bilişim Teknolojileri Öğretmenleri",
        "Scratch Meraklıları"
      ]
    },
    {
      "title": "Engenharia Informática",
      "url": "https://www.udemy.com/course/engenharia-informatica/",
      "bio": "Guia Completo para se tornar um profissional: Programação Python e C#, Arquitetura de Computadores, Software e mais!",
      "objectives": [
        "Desenvolver aplicações utilizando programação orientada a objetos.",
        "Projetar e implementar bases de dados eficientes.",
        "Compreender a arquitetura interna de computadores.",
        "Analisar e modelar sistemas de software.",
        "Criar e gerenciar infraestruturas web simples.",
        "Implementar algoritmos e estruturas de dados otimizados.",
        "Compreender e administrar redes de computadores.",
        "Desenvolver software utilizando padrões de design.",
        "Entender o funcionamento de compiladores e interpretadores.",
        "Aplicar técnicas de inteligência artificial em problemas computacionais.",
        "Compreender a segurança de sistemas informáticos.",
        "Realizar testes e garantir a qualidade de software.",
        "Abordar aspectos profissionais e éticos na área da informática."
      ],
      "course_content": {},
      "requirements": [
        "Se realizado sequencialmente, nehum requisito necessário",
        "Empenho, Foco e Dedicação"
      ],
      "description": "Introdução:\nO curso Engenharia Informática é projetado para ensinar diversos conceitos no desenvolvimento, análise e manutenção de sistemas de software.\nO currículo abrange desde os fundamentos de programação e infraestruturas web até áreas avançadas como inteligência artificial, segurança informática e engenharia de software. Ao longo do curso, os estudantes adquirem competências em algoritmos, estruturas de dados, sistemas operativos, redes de computadores e bases de dados, além de desenvolverem habilidades críticas em padrões de design, compiladores, testes e qualidade de software. O curso também aborda aspetos éticos e profissionais, preparando os estudantes para enfrentar desafios tecnológicos e inovar na criação de soluções eficientes e seguras para o mercado de informática e computação.\n\nMotivação:\nO principal objetivo do curso é guiar os estudantes pelas diversas áreas da informática com um foco para as áreas de software e sistemas informáticos capacitando um conhecimento diversificado nas vastas áreas informáticas de grande relevância.\nO curso não só tenciona ensinar os conceitos teóricos e práticos como também prover habilidades ao estudante de se tornar autodidata e conseguir compreender as suas principais áreas de interesse, ter capacidade de raciocínio, ser autónomo e capaz de evoluir futuramente sozinho.\n\nEstrutura:\nA grade curricular do curso está divida em seis partes, cada uma explicada logo abaixo. Cada parte possui uma determinada quantidade de módulos e cada um cobre um assunto de forma abrangente e com determinada profundidade.\n\n\n1ª Parte: Introdução aos conceitos básicos de programação, infraestrutura web e modelação de sistemas, estabelecendo as fundações para a compreensão do desenvolvimento de software e sistemas.\n2ª Parte: Progressão na programação (orientada a objetos) e na compreensão da arquitetura e funcionamento interno dos computadores.\n3ª Parte: Desenvolvimento de habilidades em algoritmos, estruturas de dados, sistemas operativos e redes de computadores, preparando para desafios técnicos mais complexos.\n4ª Parte: Estudo de padrões de software, compiladores e bases de dados, aprofundando o design e a implementação de sistemas de software.\n5ª Parte: Introdução à inteligência artificial, engenharia de software e segurança informática, abordando áreas avançadas e emergentes na computação.\n6º Parte: Consolidação de conhecimentos em engenharia de software, com foco em teste e qualidade, além de explorar aspectos profissionais e éticos da informática.\n\n\nRequisitos:\nO curso não dispõe de qualquer requisito uma vez que todos os conceitos são ensinados do absoluto zero. Caso seja do seu interesse realizar algum módulo de forma independente sem a conclusão dos anteriores, os requisitos específicos desse módulo podem ser consultados na descrição da primeira aula dos mesmos (Introdução ao Módulo).\n\n\nSobre as Aulas:\nAs aulas são ministradas utilizando como recurso slides explicativos que possuem teoria e logo depois uma parte prática. A quantidade de teoria e prática de cada aula varia conforme o necessário. (O curso tende a atingir uma forte componente prática nos módulos de programação e um equilíbrio entre teoria e prática nos restantes módulos)\nTodos os slides exibidos nas aulas estão disponíveis para download assim como outros recursos de apoio ao aprendizado.\nAs aulas estão também organizadas em módulos que possuem uma estrutura muito definida de forma a que a sua realização sequencial possa ir incrementando novos conceitos e aprofundando conhecimentos ao longo da sua realização. No fim de cada módulo existe uma prova sobre os assuntos abordados.\n\n\nSuporte e Diversos:\nQualquer dúvida pode ser tirada numa sessão própria da Udemy onde você terá contacto direto com o instrutor. Caso queira comunicar melhor e com outros alunos no perfil do instrutor o botão website possui um link para um servidor de Discord com uma área exclusiva para alunos.\nO curso possui um certificado final com o nome do curso, duração e nome do aluno que pode ser utilizado como prova de conclusão e certificação de competências.\nO curso também disponibiliza um prazo de reembolso de 30 dias. (Caso seja concluído uma grande quantidade de aulas não será possível emitir um reembolso, tenha em consideração que o processo de reembolso é gerido totalmente pela plataforma e suporte da Udemy)\n\n\nA quem se destina o curso:\nOs módulos do curso são baseados em cadeiras / disciplinas universitárias no entanto o curso não se pode comparar a tal. O curso foi feito para estudantes de qualquer nível que necessitam de adquirir conhecimentos ou para entusiastas e pessoas que tenham interesse na área de informática e queiram aprender sobre os principais aspetos.\nÉ essencial assistir às previas de cada módulo para entender quais os conteúdos abordados e os resultados da aprendizagem dos mesmos.\n\n\nPerguntas Frequentes:\nQue linguagens de programação o curso aborda?\nO curso ensina de forma geral a linguagem Pyhton, de forma superficial a linguagem JavaScript e de forma aprofundada a linguagem C#. No entanto os conceitos abordados podem ser aplicados em grande parte das linguagem orientadas a objetos. O curso aborda ainda HTML, CSS, e XAML.\nPorque os fundamentos são dados em Python e a Programação Orientada a Objetos em C#?\nOs fundamentos de programação são dados em Pyhton, passando depois diretamente para C# em orientação a objetos. Não é necessário um módulo de fundamentos de programação em C# uma vez que os conceitos são os mesmos e serão revidos no módulo. Mesmo assim caso o aluno considere necessário (pouco provável) existe um módulo de fundamentos de programação em C# grátis no Youtube (TTech Inc)\nQual a profundidade dos assuntos abordados?\nO curso aborda diferentes áreas a diferentes níveis de profundidade. Você obterá um conhecimento detalhado sobre cada área que cada módulo cobre. O principal foco do curso é a programação e o mesmo a aborda de forma bastante aprofundada. Os outros módulos abordam os conceitos essenciais e esses podem ser muito aprofundados ou não. Em geral o curso oferece um conhecimento bem detalhado das diferentes áreas informáticas.",
      "target_audience": [
        "Para quem deseja se tornar programador profissional",
        "Para quem busca uma carreira em informática",
        "Para quem buscam um entendimento profundo em informática",
        "Para quem quer explorar o impacto social e ético da tecnologia"
      ]
    },
    {
      "title": "WSL 2 - Windows Subsystem for Linux",
      "url": "https://www.udemy.com/course/curso-wsl-2/",
      "bio": "Aprenda como configurar várias distribuições do Linux(Ubuntu, Kali Linux, openSuse) dentro do Windows com WSL 2.",
      "objectives": [
        "Instalar o Linux com várias distribuições dentro do Windows",
        "Instalar o NodeJS com Linux",
        "Instalar o MySQL com Linux",
        "Comandos fundamentais para terminal em Linux"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "O que é o WSL",
          "Novidades no WSL 2"
        ],
        "Instalação": [
          "Instalação no Windows 10"
        ],
        "Comandos": [
          "Comandos de instalação e desinstalação",
          "Comandos de Listagem",
          "Comandos de definição e alteração",
          "Comandos de atualização e status",
          "Comandos de execução",
          "Comandos de Exportação e Importação",
          "Comandos de encerramento"
        ],
        "Distribuições Linux": [
          "Ubuntu",
          "Debian",
          "Kali Linux",
          "openSUSE",
          "SUSE Linux Enterprise Server"
        ],
        "Exemplo de Projeto com Node.js no WSL": [
          "Instalando o Node.js com NVM",
          "Configurando o Visual Studio Code com WSL",
          "Criando um Hello World",
          "Criando um servidor HTTP com Express.js",
          "Acessando arquivos Windows VS Linux"
        ],
        "MySQL 8 no WSL 2": [
          "Instalando o MySQL 8",
          "Acessando o MySQL pelo terminal do WSL",
          "Acessando o MySQL pelo Workbench no Windows 10"
        ],
        "Conclusão": [
          "Conclusão"
        ]
      },
      "requirements": [
        "Não é necessário conhecimento prévio para fazer este curso."
      ],
      "description": "Antigamente tínhamos o dual boot, dois ou mais sistemas operacionais instalados no mesmo computador, embora isso ainda seja possível hoje em dia, soluções como VM Ware ou Virtual Box permitiram utilizar imagens virtuais de sistemas operacionais criando as famosas máquinas virtuais.\nSe você é um Desenvolvedor, DevOps ou trabalha com nuvem sabe que Linux é o sistema operacional mais utilizado no mundo dos servidores.\nA Microsoft nos últimos anos vem dando muita ênfase ao uso do Linux tanto em sua nuvem Azure como nos ambientes corporativos e de servidores. Usando alguns recursos da virtualização a Microsoft inseriu o Linux dentro do Windows por meio de um subsistema operacional chamado WSL.\nEm sua mais recente versão o WSL 2, podemos utilizar outros sistemas operacionais que compartilham recursos de hardware com a máquina principal, nativamente no Windows. Se você precisa utilizar o Linux e Windows juntos, saiba que essa opção está disponível a um click de distância. Neste curso nós vamos aprender como utilizar o poder do WSL 2 para adicionar um subsistema Linux dentro de uma máquina com Windows e veremos mais.\nNeste curso cobriremos os seguintes tópicos:\nHabilitar e instalar corretamente o WSL 2.\nComando importantes do Linux\nInstalar as distribuições Ubuntu, Kali Linux, openSuse.\nInstalar e configurar o NodeJS com NVM\nInstalar e configurar o MySQL 8\nAo final deste curso de WSL 2 você estará pronto para elevar sua carreira profissional para um nível maior.\nAcesso vitalício! Te aguardo no curso!",
      "target_audience": [
        "Desenvolvedores Web - Front-End ou Back-End que pretendem utilizar o ambiente Linux em produção",
        "DevOps que estão aprendendo sobre WSL 2",
        "Entusiastas de tecnologia que querem aperfeiçoar seu conhecimento"
      ]
    },
    {
      "title": "Programe em Java com prática",
      "url": "https://www.udemy.com/course/programe-em-java-com-pratica/",
      "bio": "Entenda os princípios da linguagem Java e pratique com exercícios",
      "objectives": [
        "Desenvolver programas Java de forma profissional, seguindo as boas práticas da linguagem e as exigências de mercado. Estará apto à aprender tecnologias e usar frameworks relacionados à linguagem Java."
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do Curso",
          "Preparando o ambiente",
          "Primeira classe no Eclipse",
          "Exercícios primeiros passos no Eclipse",
          "Resposta exercícios primeiros passos no Eclipse"
        ],
        "Lógica de programação com Java": [
          "Variáveis e tipos de dados",
          "Exercícios com variáveis e tipos de dados",
          "Resposta dos exercícios com variáveis e tipos de dados",
          "Operadores",
          "Exercícios com operadores",
          "Resposta dos exercícios com operadores",
          "Comandos de controles de fluxo",
          "Exercícios com comandos de controle de fluxo",
          "Resposta exercícios com comandos de controle de fluxo",
          "Pegando dados do teclado com a classe Scanner"
        ],
        "Programação orientada à objetos com Java": [
          "Iniciando POO",
          "Mais sobre métodos",
          "Exercícios iniciando POO (classes e métodos)",
          "Resposta exercícios iniciando POO (classes e métodos)",
          "Modificador static",
          "O método main",
          "Construtores",
          "Exercícios com construtores",
          "Resposta exercícios com construtores"
        ],
        "Arrays": [
          "Arrays",
          "Exercícios com arrays",
          "Resposta exercícios com arrays"
        ],
        "Mais de programação orientada à objetos": [
          "Introdução à herança",
          "Conhecendo o método toString()",
          "Herança",
          "Classes abstratas",
          "Exercícios com herança e classe abstrata",
          "Resposta dos exercícios com herança e classe abstrata",
          "Interfaces",
          "Exercícios com interface",
          "Resposta exercícios com interface",
          "Programação funcional"
        ],
        "Coleções": [
          "Colletion",
          "Exercícios com Collection",
          "Resposta exercícios com Collection",
          "Mais exercícios com Colletion",
          "Resposta de Mais exercícios com Colletions"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de informática. É desejável que tenha familiaridade com os conceitos de Lógica de Programaçao."
      ],
      "description": "Com uma metodologia de ensino diferenciada e com muitos exercícios, este curso foi especialmente desenvolvido para aqueles que desejam conhecer e programar, de forma profissional, com a linguagem Java. Além de assistir videoaulas, você poderá baixar material didático (em pdf) com assuntos complementares e glossário com termos, que por enquanto, podem ser desconhecidos para você. Ao término, você saberá os fundamentos da linguagem Java e o paradigma da programação orientada à objetos (POO), e como aplicar estes conceitos para desenvolver softwares de qualidade, sempre dentro das melhores práticas de Java e do mercado de desenvolvimento.",
      "target_audience": [
        "Iniciantes em programação que pretendam ingressar no mercado de trabalho, atuando na área de desenvolvimento de software ou aplicativos usando a linguagem Java.",
        "Programadores de outras linguagens que desejam conhecer e/ou trabalhar com Java.",
        "Alunos de cursos de graduação e/ou pós-graduação que desejam aprofundar seus conhecimentos em Java."
      ]
    },
    {
      "title": "ChatGPT & Python: Impara da 0 la Programmazione Python! NEW",
      "url": "https://www.udemy.com/course/chatgpt-python-corso/",
      "bio": "ChatGPT per Aspiranti Programmatori Python - 100% Pratico - In Italiano - Per Principianti Assoluti - [NEW-2025]",
      "objectives": [
        "Imparare la Basi della Programmazione Python",
        "Utilizzare ChatGPT come Supporto alla Programmazione Python",
        "Utilizzare ChatGPT per Comprendere Concetti di Base di Programmazione",
        "Realizzare Semplici Programmi Python con il supporto di ChatGPT",
        "Familiarizzare con il linguaggio di programmazione Python"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione al Corso",
          "Introduzione a Python",
          "Installazione di Python in Windows",
          "Struttura del Corso",
          "Installazione di PyCharm",
          "Primo Test",
          "Utilizzo degli Online Compiler"
        ],
        "Concetti di Base": [
          "Cos'è Python?",
          "Commenti",
          "Variabili",
          "Int VS Float",
          "Naming Convention",
          "Assegnazione Multipla",
          "Assegnazione Stesso Valore",
          "Operatori Aritmetici",
          "Operatori di Assegnamento",
          "Operatori di Confronto",
          "Operatori Logici",
          "Precedenza tra Operatori"
        ],
        "Stringhe": [
          "Introduzione alle Stringhe",
          "Manipolazione di Stringhe",
          "Le F-String",
          "Inserimento Input Utente"
        ],
        "Costrutto di Selezione": [
          "Costrutto IF",
          "Costrutto IF-ELSE",
          "Costrutto ELIF",
          "LAB - Verifica Numero Positivo",
          "LAB - Controllo Numero Pari",
          "LAB - Controllo Carattere / Numero",
          "LAB - Controllo Numero Maggiore di 10",
          "LAB - Controllo Numeri Uguali",
          "LAB - Controllo Lettera Maiuscola",
          "LAB - Controllo Stringa Vuota",
          "LAB - Controllo Numero Negativo",
          "LAB - Controllo Parola in Frase",
          "LAB - Numero Compreso tra 1 e 100",
          "Esercizi da svolgere con l'aiuto di ChatGPT"
        ],
        "Costrutto di Iterazione": [
          "Costrutto While",
          "Costrutto For",
          "Break",
          "Continue",
          "Nested Loops",
          "LAB - Stampa Numeri 1-10",
          "LAB - Stampa Numeri 10-1",
          "LAB - Stampa Numeri Pari",
          "LAB - Stampa Numeri Dispari",
          "LAB - Stampa Tabellina del 5",
          "LAB - Somma Numeri",
          "LAB - Somma Numeri Pari",
          "LAB - Inserimento Valori da Input",
          "LAB - Somma Numeri Pari da Input",
          "Esercizi da svolgere con l'aiuto di ChatGPT"
        ],
        "Liste - Tuple - Dizionari - Set": [
          "Liste - Intro",
          "Liste - Accesso Tramite Indice",
          "Liste - Concatenazione",
          "Liste - Manipolazione",
          "Liste - Altre Funzioni di Manipolazione",
          "Tuple - Intro",
          "Tuple - Accedere agli Elementi",
          "Tuple - Concatenazione",
          "Tuple - Manipolazione",
          "Dizionari",
          "Set - Intro",
          "Set - Unione/Intersezione/Differenza",
          "Esercizi da svolgere con l'aiuto di ChatGPT"
        ],
        "Funzioni & Moduli": [
          "Le Funzioni",
          "Esempio di Funzione",
          "Argomenti VS Parametri",
          "Argomenti Posizionali VS Nominali",
          "Valori di Default",
          "Valori di Ritorno",
          "Lambda Function",
          "I Moduli",
          "Alias",
          "PIP",
          "Esercizi da svolgere con l'aiuto di ChatGPT"
        ],
        "Gestione delle Eccezioni": [
          "La Gestione delle Eccezioni",
          "Eccezioni Comuni",
          "Esempi di Eccezioni",
          "Esempio di Gestione di Eccezione",
          "Gestione Eccezione Generica",
          "Keyword \"Pass\"",
          "Pass - Esempio",
          "Keyword \"Assert\"",
          "Esercizi da svolgere con l'aiuto di ChatGPT"
        ],
        "Programmazione a Oggetti": [
          "La Programmazione ad Oggetti",
          "Programmazione OOO - Esempio",
          "Encapsulation",
          "Abstraction",
          "Inheritance",
          "Definizione di una Classe",
          "Creazione di un Oggetto",
          "Cambio Valore Attributo",
          "Attributi Privati",
          "Definizione di una Sottoclasse",
          "Creazione Oggetto della Sottoclasse",
          "Esercizi da svolgere con l'aiuto di ChatGPT"
        ],
        "Divertiamoci! - Python & ChatGPT": [
          "Approfondimento",
          "Notepad con ChatGPT + Python",
          "Calcolatrice con ChatGPT + Python",
          "Convertitore Binario/Decimale con ChatGPT + Python",
          "Gioco \"Indovina Numero!\" con ChatGPT + Python",
          "Keylogger con ChatGPT + Python",
          "Convertitore di PDF con ChatGPT + Python",
          "Impara Python con ChatGPT!"
        ]
      },
      "requirements": [
        "Non è necessario avere alcuna esperienza di programmazione",
        "Voglia di mettersi in gioco!",
        "Divertirsi apprendendo gli elementi di base della programmazione Python"
      ],
      "description": "Benvenuto nel corso \"ChatGPT & Python: Impara da 0 la Programmazione Python!\"\nQuesto corso è stato progettato per offrirti un'esperienza di apprendimento completa e avvincente nel campo della programmazione Python, integrando l'utilizzo della rivoluzionaria Intelligenza Artificiale ChatGPT.\nIl mio obiettivo è fornirti un percorso di apprendimento completo e accessibile, che ti permetta di acquisire competenze pratiche e teoriche fondamentali per entrare nel mondo della programmazione e dell'intelligenza artificiale.\nPerché dovresti darmi fiducia?\nMi chiamo Eugenio Fontana e sono un \"Top Udemy Instructor\" con oltre 40 000 studenti iscritti ai miei corsi.\nSono laureato in Informatica presso l'università di Firenze e sono pluricertificato, oltre 15 Certificazioni Ufficiali in ambito CyberSecurity, Cloud Computing e DevOps.\nHo partecipato come Speaker a molteplici Eventi organizzati sul territorio italiano relativi a tematiche quali CyberSecurity & Cloud Computing.\nHo pubblicato articoli per molteplici riviste in ambito Ethical Hacking (tra cui Hacker Journal) e scritto manuali tecnici relativi a tematiche di Cloud Computing e DevOps.\nIndipendentemente dalla tua esperienza pregressa, questo corso è ideale per chi desidera imparare il linguaggio Python e sfruttare le potenzialità di ChatGPT.\nAttraverso video lezioni, esercizi pratici, esempi reali e quiz interattivi, ti guideremo passo dopo passo nell'apprendimento di Python e delle sue affascinanti applicazioni.\nGrazie all'approccio didattico modulare e alle risorse di apprendimento aggiuntive, potrai progredire al tuo ritmo e costruire le tue competenze in modo solido e duraturo.\nIl corso è strutturato in modo da coprire i concetti fondamentali della programmazione Python e ChatGPT, oltre a fornirti una panoramica delle potenzialità di questi strumenti.\nDalla comprensione delle basi della programmazione fino all'integrazione di ChatGPT per creare soluzioni innovative, questo corso ti fornirà una base solida su cui costruire la tua carriera nel campo della programmazione e dell'intelligenza artificiale.\nLa parte iniziale del corso si concentra sull'apprendimento delle basi del linguaggio Python.\nIn questa sezione, esplorerai le caratteristiche principali del linguaggio, come la sintassi, le variabili e le strutture di controllo del flusso.\nMan mano che acquisisci dimestichezza con questi concetti, il corso ti introdurrà a temi più avanzati, tra cui la programmazione orientata agli oggetti, la gestione delle eccezioni e l'uso delle librerie.\nNon vedo l'ora di averti come mio studente!\nA presto!",
      "target_audience": [
        "A chi vuole apprendere le basi della programmazione Python",
        "A chi vuole scrivere i primi programmi in Python",
        "A chi un giorno vorrà diventare un Programmatore Python"
      ]
    },
    {
      "title": "SIFIRDAN İLERİ SEVİYE HTML5 & CSS3 & Responsive ÖĞRENMEK",
      "url": "https://www.udemy.com/course/sifirdan-ileri-seviye-html5-ve-css3-ogrenmek/",
      "bio": "HTML5 VE CSS3'TE en temelden en ileri seviyeye kadar ilerlemek",
      "objectives": [
        "Bu kurs herkesin bilgi seviyesine - becerisine göre işlendi.",
        "Sadece FRONTEND' ci mi olmak istiyorsunuz ? (Html5,css3,Responsive Design) o zaman bu kurs tam size göre",
        "İş dünyasında sıkca kullanılan Bilgisayar terimlerini mi öğrenmek istiyorsunuz?",
        "Her kursun her konusunu basitten zora göre ayarlandı.",
        "Piyasada çalışmak ve /veya Freelancer mi olmak istiyorsunuz ? Veri yapılarında hangi type'i kullanacağınızı bilmiyor musunuz?",
        "Freelancer yani bir şirkete bağımlı olmadan yada mali kaynakğınızı artırmak istiyorsanız bu kurs tam size göre",
        "Algoritma bilgilerinizi geliştirmek mi istiyorsunuz ? Clean code beceriniz mi yok ?"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "BONUS( Güncel bilgiler ve Sıklıkla Sorulan bilgiler )": [
          "1 genel terimler , servisler nedir ,client,server,http,idempotent ,xml, json",
          "2 Http metotları (GET,POST,DELETE,PUT,PATCH)",
          "3 Http Status codes",
          "4 Servlet nedir Hatırlayalım",
          "5 frondEnd BackEnd Proxy Jakarta DEvops Postman",
          "6 git,github,agile,scrum,wampserver,xampp,wildfly,glashFish,Jetkins,Mvc,JSP,JSF,"
        ],
        "BONUS ( Database ERD,ER,UML Diagram )": [
          "1 ERD ER diagram nedir kurallar,özellikler",
          "2 ERD- SORU",
          "3 ERD-2 ilişkili",
          "4 ERD-3 N-M ERD -Tabloya dönüştür",
          "5 UML (Unified Modeling Language)"
        ],
        "Sıklıkla sorulan sorular ve Editör kurulumu": [
          "Frontend Backend nedir ?",
          "Visual Studio Kurulumu",
          "Visual Studio Extentions",
          "Emmet and Beautfy",
          "Chrome install ve yazılımcı için önemi"
        ],
        "HTML5": [
          "html genel tanıtım meta tagler",
          "HTML5 nedir ve sürümleri nelerdir ?",
          "Genel tekrar soru cevap",
          "Heading",
          "Paragraf",
          "formatter (biçimlendirme)",
          "ödev-2 genel tekrar",
          "Listeler",
          "liste ödev-3",
          "Resim pictures",
          "Picture ödev-4",
          "Link",
          "Table",
          "table-link ödev-5",
          "Div span",
          "Semantics elementler",
          "form",
          "ödev-6",
          "Html5 Video",
          "Html5 audio.",
          "iframe"
        ],
        "CSS3": [
          "Genel css3",
          "Css3 syntax",
          "Inline css",
          "Internal css",
          "External css",
          "CSS ID nedir ?",
          "CSS Class nedir?",
          "Div nedir? kullanımı",
          "ödev-1 div",
          "Div ödev-2",
          "Margin",
          "Padding",
          "Float",
          "Color",
          "Border and border-radius",
          "Box-sizing",
          "Display",
          "Font-Family",
          "Icon",
          "text Formatter",
          "Position",
          "List Formatter",
          "Group Selectors",
          "Attribute Selector",
          "Pseudo Elements",
          "Pseudo Class-1",
          "Pseudo class-2 LeVHA.",
          "Box-shadow",
          "transition",
          "ödev-3 box-shadow and position",
          "inherit and important",
          "Table css",
          "ödev link-button",
          "ödev pictures",
          "ödev form",
          "ödev nav",
          "dropdown List (nav)"
        ],
        "Responsive Design": [
          "responsive design nedir",
          "break point nedir",
          "media query nedir",
          "media query örneği-1",
          "media query div örneği",
          "media query responsive pictures",
          "media query ölçüler (REM)"
        ],
        "Html5 Css3 Genel Tekrar": [
          "Html5 Genel Tekrar",
          "Css3 Genel Tekrar"
        ],
        "Proje Portföy": [
          "Portfoy projesi 001",
          "Portfoy projesi 002 Visual studio code kurulumu",
          "Portfoy projesi 003 Visual studio code extensions",
          "Portfoy projesi 004 Visual studio code extensions",
          "Portfoy projesi 005 google fonts",
          "Portfoy projesi 006 font awesome",
          "Portfoy projesi 007 menu yapımı",
          "Portfoy projesi 008 sıklıkla kullanılacak classlar",
          "Portfoy projesi 009 headerı",
          "Portfoy projesi 010 main",
          "Portfoy projesi 011 footer",
          "Portfoy projesi 012 media query-1",
          "Portfoy projesi 012 media query-2"
        ],
        "Proje-2 One Page": [
          "Proje-1 One Pages 001 HTML5 video One Pages 1-html tekrar",
          "Proje-1 One Pages 002 HTML5 video html proje-2 seo,semantic, html5 iskeleti",
          "Proje-1 One Pages 003 HTML5 video nav (menu)",
          "Proje-1 One Pages 004 HTML5 video header (Başlık)",
          "Proje-1 One Pages 005 HTML5 video main (body)",
          "Proje-1 One Pages 006 HTML5 video main (body)-section (bölüm)",
          "Proje-1 One Pages 007 Nav(MENU) CSS3 video",
          "Proje-1 One Pages 008 HEADER(BAŞLIK) CSS3 video",
          "Proje-1 One Pages 009 MAIN (ana) SECTION (bölüm) CSS3 video",
          "Proje-1 One Pages 010 FOOTER (alt) ) CSS3 video"
        ]
      },
      "requirements": [
        "Kurs için istekli azimli ve kendinizi sürekli motive edecek şekilde kalmanız yeterli.",
        "Öğrenmeyi öğrenmek ilkesinde ilerlemek.",
        "Bilgisayar, Defter,kalem.",
        "Düzenli çalışma ilkesi.",
        "Algoritmik zekayı geliştirecek hırs,başarı, kendini güdüleme."
      ],
      "description": "Merhabalar, ben Hamit MIZRAK Bilgisayar Mühendisiyim. Bu kursta Web dünyasının iskeleti olan Html5 , görsel design için CSS3 ve bütün devicelar için gerekli olan Responsive Design derslerini göreceğiz. Bu dersle başlayarak Web dünyasının sonuna kadar aralayacağız ve diğer kurslarımızla bunu geliştireceğiz. Bu kursumuzla kendinize yatırım yapmak isteyeceğiniz bir kurs programı olacak. Bu kursta sıfırdan başlayarak Orta seviyeye gelecebileceğimiz bir kurs programı olacaktır. Diğer kursumda Javanın daha ileri ki konularına beraber geçeceğiz. Yıllardır insanlara kendini bırakmış, başaracaklarına inanmamaları noktasında inanmamalarını sağlayacak , başarılara katkı sağlayarak onlarla beraber gelişmelerine yardımcı oldum. Bu ilk olarak YouTube kanalımda insanların asla başaramayacakları Keman konusunda ücretsiz yardımcı oldum ve devam ediyorum. Youtube Keman Öğreniyorum ve İncelikleri kursumda insanların başarı hikayelerini her geçen gün artıyor. İstedim ki bu sefer yazılım sektöründe bu başarıyı sağlamak sizlerden istirhamım bana inanmamız ve size bu başarılı yolda yol rehberiniz olmam için onay vermeniz.",
      "target_audience": [
        "Bu kurs yediden yetmişe herkese hitap etmektedir.",
        "İster Frontentci ister backendci ister databesci ister full stack developer herkesin öğrenebileceği bir scope vardır.",
        "Bütün mühendislik öğrencileri özellikle yazılımcı olmak isteyenlere yazılımcı ,programcı,makine mühendisi."
      ]
    },
    {
      "title": "MVC Para Leigos 1.0",
      "url": "https://www.udemy.com/course/mvc-para-leigos-10/",
      "bio": "Aprenda A Montar Seu Primeiro Projeto Em ADVPL Utilizando MVC Do ZERO",
      "objectives": [
        "Ao final deste curso você será capaz de Criar o Projeto Help Desk em ADVPL utilizando MVC do ZERO",
        "Aprenderá de forma prática a criar telas orientadas a objetos em MVC",
        "Entenderá os conceitos de funções em MVC",
        "Terá seu mindset mudado em relação à programação ADVPL utilizando MVC"
      ],
      "course_content": {
        "Modulo 01 - Introducão ao MVC": [
          "Arquitetura MVC",
          "Principais Funções ADVPL em MVC",
          "ModelDef no Detalhe",
          "ViewDef no Detalhe",
          "MenuDef no Detalhe"
        ],
        "Modulo 02 - Montando o Nosso Projeto": [
          "O que será nosso projeto",
          "Desenhando o projeto",
          "Criando nosso projeto",
          "Nosso primeiro projeto em MVC"
        ],
        "Modulo 03 - Aplicações Com Browse": [
          "Construção de um browse",
          "Legendas de um browse",
          "Filtros de um browse",
          "Exemplo Completo de um browse"
        ],
        "Modulo 04 - Aplicação em MVC - ModelDef": [
          "Aplicação ADVPL utilizando MVC",
          "Estrutura de dados",
          "Função ModelDef",
          "Exemplo completo da ModelDef"
        ],
        "Modulo 05 - Aplicação em MVC - ViewDef": [
          "Função ViewDef",
          "Construção da interface",
          "Componentes de formulários",
          "Exemplo completo da ViewDef"
        ],
        "Modulo 06 - Desenvolvendo o Nosso Projeto": [
          "Dicionário de dados",
          "Criação de Tabelas",
          "Criação de Telas de Cadastros",
          "Criação de Legendas",
          "Criação de Menus"
        ],
        "Modulo 07 - Criação de tabelas passo a passo": [
          "Tabela Tecnicos (ZZA)",
          "Tabela de SLA (ZZB)",
          "Tabela Tipos de Chamados (ZZC)",
          "Tabela de Chamados (ZZD)"
        ],
        "Modulo 08 - Criação de telas cadastro passo a passo (MVC)": [
          "Cadastro de Técnico",
          "Cadastro de SLA",
          "Cadastro Tipos de Chamados",
          "Cadastro de Chamados",
          "Criação das legendas"
        ],
        "Modulo 09 - Rodando Nosso Help Desk em MVC": [
          "Inclusão Técnico",
          "Abertura de Chamado",
          "Atendimento do Chamado"
        ],
        "Análise Final": [
          "Análise Final - Bem vindo ao Hall da Fama",
          "Construção de Aplicação em MVC - ModelDef - 2 Entidades (Bônus)",
          "Construção de Aplicação em MVC - ViewDef - 2 Entidades (Bônus)"
        ]
      },
      "requirements": [
        "Conhecer lógica de programação em ADVPL",
        "Conhecer programação em ADVPL do Básico"
      ],
      "description": "Curso voltado para você que se tornou um Ninja da Programação em ADVPL com os cursos:\n1) ADVPL Para Leigos 1.0\n2) ADVPL Sem Complicação 1.0.\nAgora você precisa dar mais um passo, pois MVC é a linguagem do momento aqui na TOTVS.\nÉ a linguagem de programação da versão 12 do Protheus.\nVersões posteriores serão praticamente desenvolvidas em ADVPL utilizando MVC, novo conceito de linguagem orientada a objetos.\nO Curso engloba a parte teórica e aplicada em relação ao Projeto que será desenvolvido.\nNosso Projeto Help Desk.\nMVC Para Leigos está diretamente relacionado ao Curso ADVPL Para Leigos pois trataremos os mesmos pontos só que em MVC.",
      "target_audience": [
        "Você que aprendeu a montar um projeto em ADVPL do ZERO e quer evoluir para MVC",
        "Você que está com dificuldade nas tarefas do dia a dia no seu cliente",
        "Você que não tem os conhecimentos suficientes em ADVPL utilizando MVC",
        "Você que quer aprender de forma correta, sem perder tempo com pesquisa sem resultado consistente",
        "Você que é analista Protheus que procura uma nova colocação no mercado",
        "Você que quer entrar para o Mundo TOTVS"
      ]
    },
    {
      "title": "Começando a Programar em Java",
      "url": "https://www.udemy.com/course/java-fundamental/",
      "bio": "Aprendendo os fundamentos e práticas da linguagem para desenvolver sistemas em Java",
      "objectives": [
        "Criar aplicações baseadas em Java com as melhores práticas de desenvolvimento.",
        "Ter conhecimento da linguagem Java",
        "Saber realizar a configuração do ambiente de desenvolvimento",
        "Compreender as práticas da programação orientada a objetos.",
        "Estrutura de Dados",
        "Desenvolvimento de Classes e Objetos",
        "I/O de Dados"
      ],
      "course_content": {
        "Instalação e Configuração do Ambiente de Desenvolvimento": [
          "Instalando o Java e Configurando o Ambiente",
          "Instalação das IDEs Eclipse e Netbeans"
        ],
        "Conceitos Básicos": [
          "Introdução a Linguagem Java",
          "Identificadores",
          "Objetos de Saída",
          "Como funcionam as variáveis",
          "Modificadores de Acesso - Teoria - (Parte 1/Parte2)",
          "Modificadores de Acesso - Prática - (Parte 2/Parte2)",
          "Trabalhando com Métodos",
          "Classes Wrappers (Parte 1 / Parte 2)",
          "Classes Wrappers (Parte 2 / Parte 2)",
          "Operadores - (Parte 1 / Parte 3)",
          "Operadores - (Parte 2/ Parte 3)",
          "Operadores - (Parte 3 / Parte 3)",
          "Classe Math",
          "Objeto Exception (Tratamento de Erros)"
        ],
        "Estrutura de Dados": [
          "Estruturas de Controle Parte 1",
          "Estruturas de Controle Parte 2",
          "Classe String - (Parte 1 / Parte 3)",
          "Classe String - (Parte 2 / Parte 3)",
          "Classe String - (Parte 3 / Parte 3)",
          "Arrays - Teoria - (Parte 1 / Parte 2)",
          "Arrays - Prática (Parte 2 / Parte 2)",
          "Objeto JOptionPane",
          "Classe Scanner",
          "Expressões Regulares",
          "Entrada e Saída de Dados (Input/Output)",
          "Enums"
        ],
        "Programação Orientada a Objetos": [
          "Introdução a Programação Orientada a Objetos - (Parte 1 / Parte 2)",
          "Introdução a Programação Orientada a Objetos - (Parte 2 / Parte 2)",
          "Métodos Setters e Getters",
          "Herança",
          "Polimorfismo - (Parte 1 / Parte 2)",
          "Polimorfismo - (Parte 2 / Parte 2)"
        ],
        "Finalizando o Curso": [
          "Códigos para Download",
          "Eclipse - Importando e Exportando o Projeto Java"
        ]
      },
      "requirements": [
        "Conhecimento da Lógica de Programação",
        "Baixar o JDK 7 ou JDK 8 (será ensinado no curso como instalar e configurar)",
        "Baixar a IDE Eclipse (será ensinado no curso como instalar e configurar)",
        "Força de Vontade ; )"
      ],
      "description": "Aprenda neste curso todos os conceitos, recursos e práticas utilizadas da linguagem Java através de explicações em códigos comentados em todas as aulas.\nOs conteúdos das vídeo aulas foram baseadas em exemplos do cotidiano nos desenvolvimentos e também em muitas dúvidas verificadas com o estudantes que estavam iniciando na linguagem e tinham dificuldade de entender tais conceitos e práticas adotadas no desenvolvimento real.",
      "target_audience": [
        "Estudantes da área de Programação que estão começando a explorar o desenvolvimento de sistemas",
        "Programadores",
        "Analistas de Sistemas",
        "Testadores de Software",
        "Entusiastas da linguagem Java"
      ]
    },
    {
      "title": "Java Para Iniciantes e Estudantes",
      "url": "https://www.udemy.com/course/java-para-iniciantes-e-estudantes/",
      "bio": "Aprenda Programação Java e Banco de Dados MySQL do ZERO e Desenvolva seu Primeiro Software em aulas 100% Práticas!",
      "objectives": [
        "Curso 100% Prático, Aqui você Aprenderá Programação Java e MySQL Realmente do ZERO",
        "Programação Java Mesmo Sem Qualquer Experiência Anterior em Programação",
        "Desenvolver Bancos de Dados MySQL",
        "Dicas de Atuação no Mercado e Compreensão de Projetos",
        "Desenvolvimento de Interfaces Gráficas com os Recursos JavaFX e Java Swing",
        "Como Utilizar Java e MySQL para Desenvolver um Sofware Completo e Funcional"
      ],
      "course_content": {
        "Introdução ao Java - Primeiros Passos": [
          "Primeira Etapa: Introdução ao Java",
          "Instalação do Java",
          "Variáveis de Ambiente",
          "Instalando a IDE",
          "Primeiro Programa em Java",
          "Variáveis em Java",
          "Primeiros Cálculos com Java",
          "Formatação de Resultados",
          "Scanner: Captura de Teclado",
          "Java NextLine"
        ],
        "Java - Estruturas de Decisão e Repetição": [
          "Segunda Etapa: Estruturas em Java",
          "Decisão com IF/ELSE em Java",
          "Solicitações em Tela",
          "IF/ELSE na Prática",
          "Operadores Lógicos e Relacionais",
          "Decisão com Switch Case em Java",
          "Switch Case na Prática",
          "Declarando Variáveis",
          "Bloco IF no Switch Case",
          "DO WHILE - Estrutura de Repetição em Java",
          "Estrutura de Repetição na Prática"
        ],
        "POO - Programação Orientada a Objetos": [
          "Terceira Etapa: POO em Java",
          "Programação Orientada a Objetos - POO em Java",
          "POO - Método Void",
          "POO - Utilizando Classe Controladora",
          "POO - Confirmação de Dados",
          "POO - Adicionando Itens no Estoque",
          "POO - Removendo Produtos",
          "POO - Cálculos"
        ],
        "Interface Gráfica - JavaFX": [
          "Projeto - JavaFX",
          "Scene Builder",
          "Instalando JavaFX",
          "Bibliotecas do JavaFX",
          "Configurando o Projeto",
          "Configurações de Interface Gráfica",
          "Introdução ao Scene Builder",
          "Configurando a Exibição de Tela",
          "Desenvolvendo o Layout",
          "Programando Controles em Java",
          "Relacionando Programação Java e Scene Builder",
          "Adicionando Layout ao Scene Builder",
          "Programação JavaFX na Prática",
          "Campos de respostas no Layout",
          "Codificando Opções JavaFX",
          "Captura de Dados da Caixa de Texto",
          "SetText para Label",
          "Convertendo Texto em Número",
          "Resultados com IF ELSE",
          "Guardar Arquivos Java",
          "Tratamento de Erros",
          "Modificações de Tela",
          "Dica Rápida para o Uso de Dados",
          "Instalação do Software Java",
          "Encerrando o Primeiro Projeto"
        ],
        "Bancos de Dados MySQL": [
          "Quinta Etapa: Bancos de Dados MySQL",
          "Sobre Bancos de Dados",
          "Estrutura Básica de um Banco de Dados",
          "Tipos de Dados Utilizados em SQL",
          "Linguagem SQL na Prática",
          "Utilizando Insert Into",
          "DDL e DML",
          "Update",
          "Atualizando o Insert Into",
          "Atualizando dados com Update",
          "Select com a Cláusula Where",
          "Utilizando o Delete para Remoção de Dados",
          "Considerações finais de SQL"
        ],
        "Projeto Final: Software Java com MySQL": [
          "Sexta Etapa: Dao e CRUD",
          "Instalando Driver de Conexão SQL",
          "Paleta Swing GUI Designer",
          "Sobre Projeto de Software",
          "Etapas e Objetivos do Software",
          "Conexão com Banco de Dados",
          "Testando a Conexão",
          "Criando a Tabela de Dados no MySQL",
          "Camada do Usuário View",
          "Criando a Interface Gráfica",
          "Camada model com Getters and Setters",
          "Camada Dao - Comunicação com Bancos de Dados",
          "Dao - Metodo Insert Into",
          "Captura de Dados da Interface Gráfica",
          "Inserindo dados no Banco MySQL",
          "Próximos Passos",
          "Consultas em Tabelas",
          "Organizando ResultSet na Camada Model",
          "Atualizando a Interface Gráfica Jframe para Pesquisa",
          "Codificando o Método de Pesquisa",
          "Update de Dados",
          "Botão Update",
          "Finalizando Botão Update",
          "Delete",
          "Botão Delete",
          "Executável e considerações Finais"
        ]
      },
      "requirements": [
        "Ter acesso a um computador capaz de suportar a instalação de Java e demais recursos de desenvolvimento como a IDE Eclipse por exemplo."
      ],
      "description": "Java com MySQL Para Iniciantes e Estudantes - Desenvolva seu primeiro Software.\nVocê gostaria de ingressar na área de tecnologia e desenvolvimento?\nAtualmente estuda em cursos livres, técnicos ou mesmo faculdade e sente dificuldades em entender programação de computadores?\nCaso sim, este curso é ideal para você.\n\n\nAprenda como usar Java, uma das principais linguagens de programação utilizadas no mundo inteiro por empresas de todos os portes para desenvolvimento de soluções computacionais.\nCom Java é possível desenvolver desde pequenas aplicações que facilitam o dia a dia, até Softwares administrativos completos para a gestão de empresas.\nNeste curso vamos abordar de forma simples e direta, passo a passo como desenvolver aplicações Java com os principais conceitos do mercado.\nEm aulas 100% práticas você desenvolverá um software completo com base em DAO (Data Access Object) para comunicação com Bancos de Dados MySQL.\nIsso permitirá desenvolver um programa Java que executa o conceito CRUD: Acrônimo em Inglês para Criação, Leitura, Alteração e Destruição de Dados, que é o conceito fundamental para qualquer programa de computador e deve ser a base para desenvolvedores(as) iniciantes.\n\n\nVeja como utilizar os recursos das linguagens de programação Java e SQL, em seus conceitos básicos (para iniciantes) até o desenvolvimento de aplicações reais.\nNeste curso também abordaremos toda a parte visual do Software com o JavaFX e Paleta Swing que permitem o desenvolvimento de janelas padrão para Sistemas Operacionais mais usados no mercado.\nCronograma do Curso:\nPrimeira Etapa - Configurações e Primeiros Códigos\nSegunda Etapa - Estruturas Java\nTerceira Etapa - Programação Orientada a Objetos\nQuarta Etapa - Interface Gráfica\nQuinta Etapa - MySQL\n\n\nSexta Etapa - Desenvolvimento de Software\n\n\nAqui você vai aprender tudo o que é realmente necessário para criar e desenvolver um software, do ZERO e com aulas 100% práticas.\nDê o Primeiro Passo na sua Carreira de Desenvolvedor(a).\n\n\nIdeal para estudantes dos seguintes cursos:\nDesenvolvimento de Software\nAnálise e Desenvolvimento de Sistemas\nEngenharia de Softwares\nTecnologia da Informação\nEntre outros!\n\n\nEsse curso conta com suporte ao aluno diretamente com o professor e com um certificado após a conclusão do curso, além da garantia TOTAL de 30 dias caso não goste do conteúdo.\n\n\nEstude no seu tempo, sem mensalidades e no conforto e horário que desejar.\n\n\nNão perca mais tempo e cadastre-se agora mesmo no curso completo de Java para Iniciantes e Estudantes.\n\n\nTe vejo nas aulas!",
      "target_audience": [
        "Iniciantes e Estudantes que desejam desenvolver seu primeiro Software Java na Prática",
        "Pessoas que Desejam Dar Seus Primeiros Passos na Área de Desenvolvimento Java",
        "Iniciantes e Estudantes que Desejam Complementar Seus Estudos Técnicos ou Mesmo Superiores em Área de TI",
        "Curso Ideal Para Quem Tem ou Teve Dificuldades na Compreensão da Linguagem Java",
        "Estudantes de Análise e Desenvolvimento de Sistemas, Programação de Computadores e Afins",
        "Estudantes de Cursos Técnicos na área de Informática e Tecnologia",
        "Pessoas que Desejam Aprender Programação de Computadores de Forma Simples e Direto ao Ponto"
      ]
    },
    {
      "title": "Python 中文 學習 從無到有開發音樂下載平台 課程",
      "url": "https://www.udemy.com/course/python-web-development/",
      "bio": "完全從無到有實作出一個音樂下載的平台，您能夠在上面搜尋音樂，並下載mp3、mp4。",
      "objectives": [
        "了解前端與後端的整體概念",
        "如何使用 bootstrap 快速建立 HTML、CSS",
        "如何使用 mongoDB 來做資料庫的存取",
        "如何使用 Beautifulsoup4 來實現做出自己的音樂搜尋引擎",
        "如何從無到有想出一個專案，並一步步地把它實現出來。"
      ],
      "course_content": {},
      "requirements": [
        "有基本HTML、CSS概念更好",
        "有基本的 python 基礎更好"
      ],
      "description": "課程內容\n\n請問您是否想開發一套屬於自己的平台呢？\n\n但又發現說，沒有從無到有開發平台的經驗。\n這門課，能夠讓你快速的入門，並且直接實作！\n我們將使用Python，並透過Pycharm開發環境\n完全從無倒有實作出一個音樂下載的平台，您能夠在上面搜尋音樂，並下載mp3 mp4，\n您登入平台之後，又能夠把音樂加入我的最愛，供您下次能夠馬上找到您所愛的音樂！\n前端的程式語言，我們將使用HTML、CSS並運用了bootstrap\n後端程式我們使用python，資料庫使用mongoDB\n您將能夠學習到前後端的整體概念！\n如果你發現這個課程不適合你，30天內你將能夠完全退費，你將不會有任何損失！\n我的網站\n點取課程的右上方->建立者Kevin He->關於講師Kevin He 就可以到達教師簡介\n在照片的下方即可看到一顆地球!即是網站連結~\n\n\n*** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nWould you like to develop your own website?\n\nBut you don’t have any experience of developing from scratch\nThis course, can make you to quickly get started, and get your hands dirty!!\nWe will using Python with Pycharm development environment\nCompletely from scratch to make a real music download platform, you can search for music on this platform, and download to mp3 or mp4!\nAfter you sign in, You are be able to add music to your favorites, so you can easily find that music next time.\nFor front-end programming language, we will using HTML, CSS with Bootstrap\nAnd we will use Python for back-end programming language, and the database will be mongoDB\nYou will be able to learn the whole concept of front-end and back-end!\nIf you find this course is not for you, within 30 days you will be able to fully refund, you will loss nothing!",
      "target_audience": [
        "所有想開發屬於自己平台的朋友",
        "想學習新技能的朋友",
        "想學習 python 深入一點的應用的朋友",
        "想自己完成一個專案的朋友"
      ]
    },
    {
      "title": "就職/転職で有利なポートフォリオに！ 基礎〜応用4つのReactアプリで実践的な開発を学ぼう",
      "url": "https://www.udemy.com/course/react-product-development/",
      "bio": "Reactを使い「NARUTO図鑑」「音楽検索アプリ」「SNS」「AIコードレビュアー」の4つのアプリを作ります。 Reactの基礎をおえて、エンジニアとしての就職を考え始めてる方は必見です。",
      "objectives": [
        "Reactを使い、様々な機能/難易度の4種類のアプリケーションを作れる",
        "転職/就職時に重要なポートフォリオに入れる自作アプリケーションを作る基礎ができる",
        "実務に近いより実践的なReactを使った開発が学べる",
        "Reactで「NARUTO図鑑」「音楽検索アプリ」「SNSアプリ」「AIコードレビュアー」を作れる",
        "ReactとAxiosを使いAPIを利用する方法がわかる",
        "Spotify APIを利用して音楽検索アプリを実装できる",
        "Supabaseを利用したユーザー登録/ログイン機能を作れる",
        "ReactでのTailwind CSSのセットアップがわかる",
        "OpenAI APIを利用したAIを使ったアプリケーションを作れる",
        "効率よくWeb開発をするために便利な環境、ツールを学べる"
      ],
      "course_content": {
        "はじめに": [
          "本講座で学ぶこと",
          "受講にあたってのお願い"
        ],
        "Reactの開発効率を爆上げするセットアップ": [
          "Node.js/yarnのインストール",
          "VSCodeのインストール",
          "ウェブ開発をする上で便利なVSCodeプラグイン",
          "プラグイン以外の便利ツール紹介"
        ],
        "NARUTO図鑑アプリを作ろう": [
          "【NARUTO図鑑アプリ】まずは完成版を見てみよう",
          "【※視聴必須】NARUTO APIの閉鎖により、同じ機能のAPIを作成したのでセットアップをお願いします",
          "Reactの環境構築",
          "Viteでの環境構築について",
          "NARUTO APIについて",
          "Axiosを使ってReactからAPIをコールしてみよう",
          "取得したデータを画面に表示してみよう1",
          "取得したデータを画面に表示してみよう2",
          "次のページのデータを取得し、ページネーションを実装しよう",
          "データを取得している間、ローダーを回す処理を追加しよう",
          "前のページのデータを取得しよう",
          "前のページと次のページボタンを条件によってクリックできないようにしよう",
          "最後にヘッダーを作って見た目を整えよう"
        ],
        "音楽検索アプリを作ろう（Spotify APIの仕様変更のため、現在音楽の再生ができません）": [
          "【音楽検索ーアプリ】まずは完成版を見てみよう",
          "Reactの環境構築",
          "Viteでの環境構築について",
          "Tailwind CSSの環境構築",
          "Spotify APIの環境構築",
          "APIのアクセストークンを取得しよう（環境変数にClient IDとClient Sercretを格納しよう）",
          "APIのアクセストークンを取得しよう2（APIからアクセストークンを取得しよう）",
          "APIのアクセストークンを取得しよう3（Spotify Clientを使いやすくリファクタしよう）",
          "Spotifyで人気の曲を取得、表示してみよう1（APIからデータを取得しよう）",
          "Spotifyで人気の曲を取得、表示してみよう2（取得したデータを表示しよう）",
          "曲を検索できるようにしよう1",
          "曲を検索できるようにしよう2",
          "ページネーションを実装し、次のページと前のページの曲を表示しよう1",
          "ページネーションを実装し、次のページと前のページの曲を表示しよう2",
          "前のページと次のページボタンを条件によってクリックできないようにしよう"
        ],
        "SNSアプリを作ろう": [
          "【SNSアプリ】まずは完成版を見てみよう",
          "Reactの環境構築",
          "Viteでの環境構築について",
          "【※バグ修正のため必読】Tailwind CSSのバージョンについて",
          "Tailwind CSSの環境構築",
          "React Routerを使ってルーティングの設定をしよう",
          "Supabaseの環境構築",
          "ユーザーの登録機能を作ろう1",
          "【※仕様変更のため必読】レクチャー41のSupabaseのProviderの設定方法が変更された件について",
          "ユーザーの登録機能を作ろう2",
          "ユーザーのログイン機能を作ろう",
          "グローバルステートを使って、ユーザーのログイン状態を管理しよう1",
          "グローバルステートを使って、ユーザーのログイン状態を管理しよう2",
          "サイドバーにログインしているユーザーの情報を表示しよう",
          "投稿を作成できるようにしよう",
          "タイムラインに投稿を表示しよう1",
          "タイムラインに投稿を表示しよう2",
          "ページネーションを実装して前のページと次のページに移動できるようにしよう",
          "投稿を削除できるようにしよう",
          "ログアウト機能を実装しよう"
        ],
        "AIコードレビュアーを作ろう": [
          "【AIコードレビュアー】まずは完成版を見てみよう",
          "Reactの環境構築",
          "Viteでの環境構築について",
          "【※バグ修正のため必読】TailwindCSSのバージョンについて",
          "Tailwind CSSの環境構築",
          "OpenAI APIのセットアップ",
          "AIにリクエストを投げ、コードレビューしてもらおう1",
          "AIにリクエストを投げ、コードレビューしてもらおう2",
          "429エラーが出る場合",
          "ローディング処理やMarkdownの表示を実装しよう"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "HTML/CSS/JavaScriptの基本的な文法とルールは解説していません",
        "Reactの基礎（Progateレベルの内容）は理解している前提の講座となっております"
      ],
      "description": "「Reactの基礎は学んだけど、ここから実際にどうやって勉強すればエンジニアになれるんだろう...」\nプログラミング初心者でこんなお悩みを抱えている方多いのではないでしょうか。\n\n\n本講座はReactを使って「NARUTO図鑑」「音楽検索アプリ」「SNS」「AIコードレビュアー」の4つのアプリを作り、実践的な開発を学ぶことで初心者→実務のギャップを埋めることができる講座です。\n\n\n世の中の多くのプログラミング学習コンテンツは言語の文法や機能など、基礎的な内容の学習がほとんどです。\n\n\nしかし、エンジニアになるにはこうしたプログラミングの基礎知識を応用した上で、実際に動きユーザーが便利に使えるプロダクトを作れなければいけません。\n\n\nこの実際にエンジニアになれるレベルと基礎学習を終えたばかりのレベルには大きなギャップがあり、かつここを埋めるためのコンテンツも非常に少ないため、多くの初心者がここで挫折します。\n\n\n本講座はこうしたギャップを埋めるために作られたコンテンツです。\n\n\n最後まで受講して頂くと\n\nエンジニアとしてプロダクトを作り、実務をこなすイメージがつく\n転職/就職活動時に一番重要なポートフォリオに記載するプロダクトを作る力が身に付く\nより実践的で深いReactの知識が身に付く\nプロダクトを作れることで、よりプログラミングが楽しくなる\nといった、本気でエンジニアを目指している方向けの講座となっております。\n\n\n■ 本コースを受講する際の注意点\n・HTML/CSS/Javascriptの基礎については解説していません\n・Reactの基本（Progateの内容等）は理解している前提の講座となっております",
      "target_audience": [
        "Reactエンジニアとしての転職/就職を本気で目指している方",
        "Reactを使って自分でアプリを作ってみたい方",
        "より実践的にReactについて学びたい方",
        "Reactの理解をもっと深めたい方"
      ]
    },
    {
      "title": "Fundamentos de Python: Curso Práctico y Desde Cero.",
      "url": "https://www.udemy.com/course/programacion-en-python/",
      "bio": "El curso te enseñará los fundamentos de Python para poder iniciar la programación en este lenguaje de alto nivel.",
      "objectives": [
        "Crear Aplicaciones en Python.",
        "Aprender los fundamentos básicos para iniciar en Python.",
        "Programar en un Lenguaje de Programación de alto nivel - Python."
      ],
      "course_content": {
        "Empezar aquí": [
          "Introduccion",
          "Tipos de Errores",
          "Instalación de Phyton e IDE",
          "Variables: Declaración y Tipos",
          "Comentarios Y Pedir Datos"
        ],
        "Operaciones y Expresiones": [
          "Operadores",
          "1. Expresión 1",
          "2. Expresion 3",
          "3. Expresion 5",
          "4. Expresion 7"
        ],
        "Bloque Selectivo - Condiciones": [
          "1. Comprobar si un numero es Positivo",
          "2. Descuento de precio mayor a S/. 30",
          "3. Sentencia if - else",
          "4. Número Par o Impar",
          "5. Mayor de tres numeros",
          "6. Sentencia elif"
        ],
        "Bloque de Ciclos": [
          "1. Ciclo For",
          "2. Ciclo While",
          "3. Break",
          "4. Continue"
        ],
        "Cadena de Caractéres": [
          "Introducción",
          "Imprimir posiciones de una Cadena de Caracteres",
          "Contar cuantas 'A' hay en una Cadena de Caracteres"
        ],
        "Bloque de Funciones": [
          "Introducción",
          "Calculando Segundos Totales en Horas, Minutos y segundos."
        ]
      },
      "requirements": [
        "Este curso comienza desde lo básico, así que no hay que tener conocimientos previos.",
        "Puedes utilizar cualquier PC y ademas de cualquier IDE.",
        "Personas que tengan las ganas de aprender algo nuevo."
      ],
      "description": "Fundamentos de Python.\nBienvenidos a este curso sobre fundamentos de Python, te estare enseñando los temas por los cuales deberias de empezar para poder programar en Python.\nPython es un lenguaje de programación creado por Guido van Rossum en el Centro para las Matemáticas y la Informática (CWI - Holanda) en 1991.\nCaracterísticas del lenguaje Python:\n- Python es un lenguaje de programación multiparadigma.\n- Es multiplataforma.\n- Es muy sencillo de aprender ya que es un lenguaje simple y minimalista.\n- Es interpretado.\n- Usa tipado dinámico.\n- Actualmente ocupa el puesto número 4 del índice TIOBE.\nExisten muchas propiedades que se pueden agregar al lenguaje importando módulos, que son \"minicódigos\" (la mayoría escritos también en Python) que proveen de ciertas funciones y clases para realizar determinadas tareas. Un ejemplo es el módulo Tkinter, que permite crear interfaces gráficas basadas en la biblioteca Tk. Otro ejemplo es el módulo OS, que provee acceso a muchas funciones del sistema operativo. Los módulos se agregan a los códigos escribiendo import seguida del nombre del módulo que queramos usar.\nEn este curso te voy comentando de forma rápida lo teórico y nos enfocamos más en la práctica, ya que como sabemos la práctica nos ayuda bastante en mejorar esa lógica en la programación y ser unos mejores desarrolladores.\nVamos dividiendo por bloques para que vayas aprendiendo los fundamentos para que puedas programar en Python desde cero:\nBloque introductivo.\nOperadores.\nCondiciones.\nBucles.\nCadena de Caracteres.\nFunciones.\nEste curso busca que adquieras los conocimientos básicos de una manera práctica y sencilla, espero sea de su agrado  bienvenidos.",
      "target_audience": [
        "Apasionados por la programación."
      ]
    },
    {
      "title": "Python ile Algoritma Geliştirme",
      "url": "https://www.udemy.com/course/python_ile_algoritma_gelistirme/",
      "bio": "Problem Çözme, Oyun Geliştirme, Veri Kazıma...",
      "objectives": [
        "Çözüm odaklı düşünerek algoritma geliştirme",
        "Kodlamayı, problem çözme aracı olarak kullanma",
        "Python'da oyun geliştirme"
      ],
      "course_content": {},
      "requirements": [
        "Başlangıç seviyesinde Python ya da başka bir programlama dili bilgisi",
        "Temel seviyede matematik"
      ],
      "description": "Genellikle programlama dilleri öğrenilirken;\nEkrana \"Merhaba Dünya\" yazdırılır,\nKullanıcının girdiği iki sayı toplatılır,\nSayının; ikiye bölünüyorsa çift, bölünmüyorsa tek olduğu hesaplanır,\nDöngüyle 1'den 20'ye kadar olan tüm sayılar ekrana yazdırılır...\nBütün bunlar elbette önemsiz değildir aksine o dilin yapısını (tabiri caizse) gramerini öğrenmek için gereklidir. Fakat ne yazık ki bu temel yapıyı öğrendikten sonra yeni başlaması gereken programlama macerası çoğu kişi için sona erer. Ne de olsa sertifikalar alınmış ya da bir şekilde dersten geçilmiştir.\nİşte benim de bu kursu hazırlamamın amacı; programlamaya yeni başlayanların çözüm odaklı düşünerek algoritma geliştirmelerine yardımcı olmak ve kodlamanın, problem çözme aracı olarak aktif kullanılmasına katkı sağlamaktır.\nHiç Python bilmese de önceden başka bir programlama diliyle ilgilenmiş olanlar, temel düzeyde Python bilip problem çözme becerilerini geliştirmek isteyenler ve Python öğreten eğitimciler bu kursu alabilir.\nKurs; şu anki haliyle Problem Çözme, Oyun Geliştirme ve Veri Kazıma bölümlerinden oluşmaktadır. İlerleyen zamanlarda; farklı bölümler ve mevcut bölümlere yeni dersler eklemeye çalışacağım.\nProblem Çözme bölümünde; bazı matematiksel ve metinsel problemler çözülürken; değişken, döngü, koşullu ifade, fonksiyon ve veri tiplerinin kullanımı gösterilmeye çalışıldı.\nOyun Geliştirme bölümünde; Taş Kağıt Makas ve Hanoi Kuleleri gibi konsol oyunları ile grafik arayüz tabanlı Kaplumbağa Yarışı ile Pong oyunu yapımı anlatıldı.\nVeri Kazıma bölümünde; IMDB'nin sitesinden en iyi 250 filmin bilgileri çekilip dosyaya kaydedilmesi ve bir duvar kağıdı sitesindeki resim arşivinin bilgisayaramızda bir klasöre indirilmesi gösterildi.",
      "target_audience": [
        "Veri bilimine meraklı, başlangıç düzeyindeki Python geliştiricileri",
        "Kodlamayla, problem çözme becerilerini geliştirmek isteyenler",
        "Python öğreten eğitimciler"
      ]
    },
    {
      "title": "C++ Dersleri | 100 Derste C++ Öğrenin | C++ ile Programlama",
      "url": "https://www.udemy.com/course/cpp-dersleri-100-derste-cpp-ogrenin-cpp-ile-programlama/",
      "bio": "C++ Dersleri | Nesneye Yönelik Programlama | C++ Nedir | C++ ile Neler Yapılabilir | C++ Programlama Dili | C++ Öğretici",
      "objectives": [
        "Programlamanın Temellerini Atacaksınız",
        "C++ dilinde 0'dan ileriye güçlü bir adım atacaksınız",
        "Hemen hemen her dilin nasıl bir mantıkta olduğunu kavrayarak yazılım hayatınızı daha iyi bir şekilde yönlendirebileceksiniz",
        "Algoritmalara aşina olacaksınız",
        "Nesneye yönelik çalışmalar yapabileceksiniz",
        "C dili ile ilişkisi güçlü olduğundan C diline de aşina olacaksınız",
        "Nesne ve Sınıf Yapısını Öğreneceksiniz",
        "Sorun çözebilme yeteneğiniz artacak"
      ],
      "course_content": {},
      "requirements": [
        "Güçlü Bir Öğrenme Arzusu",
        "Visual Studio Code + Derleyiciyi Kurabileceğimiz Bir Bilgisayar (Önerilen : 64bit)"
      ],
      "description": "Programlamanın güçlü dillerinden biri olan C++'ı 0 dan sağlam temellerle üste taşıyın. Toplamda 100 dersten oluşan bu kurs, size C++ dilini baştan sona doğru adımlarla öğretecektir. C++ güçlü bir öğrenme arzusu isteyebilir, yılmadan çalışırsanız bu dili iyi derecede öğrenebilir ve üretkenliğinizi artırabilirsiniz.\nBu Kursta Neler Var ?\nProgramlamanın Temellerini Atacaksınız.\nC++ dilinde 0 dan ileriye güçlü bir adım atacaksınız.\nHemen hemen her dilin nasıl bir mantıkta olduğunu kavrayarak yazılım hayatınızı daha iyi bir şekilde yönlendirebileceksiniz\nAlgoritmalara aşina olacaksınız.\nSorun çözebilme yeteneğiniz artacak\nPeki Ya Bu Kurs Kimlere Yönelik?\nC/C++ dili öğrenmek isteyenlere.\nProgramlamaya giriş yapmak isteyenlere.\nYazılıma nereden başlayacağını bilemeyenlere.\nÜniversitede C/C++ dersi alanlara.\nVaktini değerlendirmek isteyenlere.\nNesneye Yönelik Programlama yapmak isteyenlere\nYazılım öğrenmek isteyenlere\nNesne ve Sınıf yapısı öğrenmek isteyenlere\nKurs Sonunda Neler Olacak ?\nC/C++ programlama diline hakim olacaksınız.\nYeni bir dil öğrenirken artık zorlanmayacaksınız.\nProgramlamanın mantığını kavrayacaksınız.\nNesneye Yönelik Programlama Yapabileceksiniz\nC dili ile ilişkisi güçlü olduğundan C diline de aşina olacaksınız\nC++ Programı Öğrenmek Bana Ne Katacak ?\nBilgisayarın nasıl çalıştığını anlamanızı sağlar. C/C++ programlama dili, programınızın nasıl çalıştığı hakkında bilgi sahibi olmanızın yanında bilgisayarınızın nasıl çalıştığı hakkında da bilgi sahibi olmanızı sağlar.\nAçık kaynaklı projelerde çalışma fırsatı yakalamanızı sağlar. Bugün kullanılan birçok yazılım C++ tarafından desteklenmektedir. Bu programın kullanıldığı büyük açık kaynaklı projelerden bazıları Python Yorumlayıcı, SQLite Veri tabanı, Linux Çekirdeği vb. sayılabilir. C/C++ dillerini bilen bireyler büyük açık kaynaklı projelere katkıda bulunabilmenizi sağlar.\nDiğer programlama dillerini daha kolay öğrenmenizi sağlar. Bazı programlama dilleri C/C++’ya dayanmaktadır.  C# ve Java dilleri C ve C++ ile ilgili dillerdir. Bunlara ek Java Script’in söz dizimi C/C++’ya benzemektedir. Yani C ve C++ dillerini biliyorsanız başka bir dile geçmede sorun yaşamazsınız.\n-MicePone-",
      "target_audience": [
        "C++ dili öğrenmek isteyenlere",
        "Programlamaya giriş yapmak isteyenlere",
        "Algoritma yapılarını öğrenmek isteyenlere",
        "Üniversitede C/C++ dersi alanlara",
        "Vaktini değerlendirmek isteyenlere",
        "Yazılım öğrenmek isteyenlere",
        "Nesne ve Sınıf yapısı öğrenmek isteyenlere",
        "Nesneye Yönelik Programlama yapmak isteyenlere"
      ]
    },
    {
      "title": "Advanced Java Programming",
      "url": "https://www.udemy.com/course/advanced-java-programming-heb/",
      "bio": "Leverage Your Programming Skills",
      "objectives": [
        "1. Write OOP programs in Java.",
        "2. Write programs with GUI.",
        "3. Write multithreading algorithms.",
        "4. Write more professional code in Java."
      ],
      "course_content": {},
      "requirements": [
        "1. Basic programming in Java, including classes.",
        "2. Programmers from other languages are most welcome as long as they master the basics of programming (loops, conditionals, functions).",
        "3. This course is taught in Hebrew, and hence is for Hebrew speakers."
      ],
      "description": "Java is still the most popular language and is used in a variety of applications. In this course we'll learn the java core components include exceptions, generics and multithreading. We'll also focus on OOP writing and how to implement OOP principles in java programs.\nThis course is proposed for intermediate programmers who know the basic programming constructs (loops, conditionals, arrays etc.) and the OOP basics (classes and objects).",
      "target_audience": [
        "1. Computer science/ software engineering students who need this course as part of their academic plan.",
        "2. Programmers who want to learn Java or leverage their skills in Java."
      ]
    },
    {
      "title": "تعلم لغة البرمجة بايثون من البداية وحتى المستوى المتقدم",
      "url": "https://www.udemy.com/course/learn-python-3/",
      "bio": "دورة شاملة لتعليم لغة البرمجة بايثون 3 من الصفر وحتى المستوى المتقدم والإحترافي لتصل إلى التأهيل الوظيفي كمبرمج محترف",
      "objectives": [
        "سيدون لديه معرفه تامة بلغة البرمجة بايثون",
        "سيكون لديه المعرلفة بأساسيات المتغيرات والدوال في لغة البايثون",
        "سيكون لديه معرفة بالكلاسيس والأوبجيكت في لغة بايثون 3",
        "سيكون لديه معرفة بالمواضيع المتقدمة في لغة بايثون 3",
        "سيكونة قادرا على البدء في بناء تطبيقات وبرامج بإستخدام لغة بايثون 3"
      ],
      "course_content": {
        "مقدمة إلى بايثون 3": [
          "لمحة عامة",
          "ما هي لغة بايثون؟",
          "لماذا تتعلم لغة البرمجة بايثون 3 ؟",
          "لمن هذه الدورة التدريبية في البايثون 3 ؟"
        ],
        "تنصيب نظام بايثون وتشغيل البرنامج": [
          "تنزيل برنامج بايثون من الإنترنت",
          "تنصيب النظام على الجهاز الشخصي",
          "تشغيل البرنامج والبدء في العمل بالكود البرمجي"
        ],
        "أساسيات لغة البرمجة بايثون 3": [
          "الجمل والعبارات الأساسية في لغة البرمجة بايثون 3 القسم 1",
          "الجمل والعبارات الأساسية في لغة البرمجة بايثون 3 القسم 2",
          "الملاحظات والسطر الجديد والمسافات في باثون 3",
          "الكلمات المحجوزه في لغة بايثون 3",
          "مصطلحات وجمل أخرى في نظام بايثون 3"
        ]
      },
      "requirements": [
        "كمبيوتر أو لابتوب",
        "رغبة صادقة في تلم البرمجة",
        "معرفة بأساسيات إستخدام الكمبيوتر"
      ],
      "description": "دورة شاملة لتعليم لغة البرمجة بايثون 3 من الصفر وحتى المستوى المتقدم والإحترافي لتصل إلى التأهيل الوظيفي كمبرمج محترف  في لغة البرمجة بايثون 3   كما تأهلك هذه الدورة للبدء الفعلي في الخطوات الأساسية لدخول عالم الأودو وبرمجة التطبيقات العملاقة حول العالم  مثل أنظمة شؤون الموظفين  وإدارة المخازن والأرشفة وإدارة الأنظمة المتقدمة وأنظمة المحاسبة  والإدارة والعديد  من الأنظمة البرمجية الشهيرة  والتي يتكم بناؤها من خلال  تطبيقات الأودو  مفتوحة المصدر والمبنية أساسا  من خلال لغة البرمجة بايثون .. هذه الدورة ستكون لك الخطوة الأولى في سلم  برمجيات الأودو",
      "target_audience": [
        "أي شخص",
        "للمبرمجين والمطورين",
        "أي إنسان يرغب في تعلم لغة البرمجة بايثون وأن يصبح مبرمج محترف",
        "أي إنسان يرغب في تعلم برمجة تطبيقات الأوددو وأن يصبح مبرمج ومطور تطبيقات أوددو"
      ]
    },
    {
      "title": "Desarrollo de Aplicaciones en ASP.NET para la vida real",
      "url": "https://www.udemy.com/course/desarrollo-de-aplicaciones-en-aspnet-para-la-vida-real/",
      "bio": "Con este curso aprenderas a desarrollar aplicaciones en Visual Studio Express 2010 para la vida real.",
      "objectives": [
        "Finalizado el curso podras crear aplicaciones como mantenimiento de usuarios, sistema de inventarios, sistema de facturacion, etc"
      ],
      "course_content": {},
      "requirements": [
        "Html Basico",
        "CSS Basico",
        "Programacion Basica"
      ],
      "description": "Este curso se trata de conocer la herramienta de desarrollo de Microsoft VWD 2010 para crear aplicaciones en ASP.NET con lenguaje Visual Basic y base de datos SQL Server, en él apredenderás a crear aplicaciones para la vida real, mientras descubres la interfaz de este grandioso IDE.\nLa primera parte es la introducción a esta herramienta, conocer sus bondades, características, fundamentos de sentencias para la programación.\nLa segunda parte tratamos Programación Orientada a Objetos, trabajo con clases, conexión a Base de datos, ejecutar funciones y Stored Procedures.\nLa tercera parte comenzamos a trabajar con Reportes, parámetros de consultas, vistas, etc.\nDebes tomar este curso para que comiences a desarrollar aplicaciones robustas en ASP.NET y tener un mercado amplio para ofrecer tus soluciones.",
      "target_audience": [
        "Usuarios que necesiten aprender a desarrollar aplicaciones robustas y con Programacion Orientada a Objetos",
        "Programadores que quieran iniciar desarrollo en ASP.NET"
      ]
    },
    {
      "title": "Yazılım Lisanslama ve Kod Güvenliği (1 / 3)",
      "url": "https://www.udemy.com/course/yazilim-lisanslama-ve-kod-guvenligi-1-3/",
      "bio": ".Net ile geliştirilen yazılımları Demo, Full veya Parçalı olarak lisanslama konularını örnek c# projesi ile öğrenin",
      "objectives": [
        "Yazılımların Demo (Çalışma süresi, Çalışma sayısı, Gün, veya Tarih Sınırlı) olarak lisanslanması",
        "Yazılımın içindeki bölümlerin ayrı ayrı olarak lisanslanması (Parçalı lisans)",
        "Yazılımları tek bir Pc'de çalışacak şekilde lisanslanması",
        "Lisans kontrol işleminin Runtime veya Design-Time'de yapılabilmesi",
        "Asenkron lisans kontrol işlemi",
        "İntranet üzerinde çalışacak Lisans Kontrol Sisteminin geliştirilmesi",
        "Web Servis olarak çalışacak Lisans Kontrol Sisteminin geliştirilmesi",
        "Geliştirdiğimiz yazılımların kodlarına Obfuscate işleminin uygulanması (Yazılım kodlarının korunması)",
        "Yazılımların Dijital olarak imzalanması",
        "Lisanslanan yazılımın bir Pc'den kaldırılarak başka bir Pc'ye taşınması"
      ],
      "course_content": {
        "Yazılım Lisanslama ve Kod Güvenliği ( 1 / 3 )": [
          "İNDİRİM KUPONLARI HAKKINDA ÖNEMLİ BİLGİLENDİRME",
          "VİDEO ÇÖZÜNÜRLÜĞÜ HAKKINDA ÖNEMLİ BİLGİLENDİRME",
          "Giriş",
          "Eğitim seti boyunca kullanılacak olan Demo yazılımın tanıtılması.",
          "Yazılım Lisanslama Sisteminin tanıtılması",
          "Lisans bilgilerinin gösterileceği form'un kodlama işlemleri-1",
          "Lisans bilgilerinin gösterileceği form'un kodlama işlemleri-2",
          "Lisans bilgilerinin gösterileceği form'un kodlama işlemleri-3",
          "Yapılan kodlama işlemlerinin görsel olarak incelenmesi ve yorumlanması.",
          "Tek Pc'de ve tek kullanıcılı olarak çalışacak DEMO lisansın oluşturulması-1",
          "Tek Pc'de ve tek kullanıcılı olarak çalışacak DEMO lisansın oluşturulması-2",
          "Lisans dosyası oluşturarak yazılımı DEMO modundan çıkarıp Full kullanıma açma",
          "Lisanslanan yazılımın sadece belirli bir Pc'de çalışacak şekilde ayarlanması",
          "Lisansı belirli bir versiyona kilitleme, Lisans kontrol sistemi çalışma zamanı",
          "Lisanslama siteminin gelişmiş ayarlar bölümünün incelenerek açıklanması"
        ]
      },
      "requirements": [
        "Giriş seviyesinde C# bilgisi.",
        "Visual Studio kurulu bilgisayar."
      ],
      "description": "3 bölümden oluşan bu kapsamlı eğitim setiyle,\nTicari yazılımlarınızı profesyonelce lisanslama konusunda uzmanlaşarak yazılım geliştirme kariyerinizde bir adım öne geçeceksiniz!\nDEMO modunda yazılımlarınızı nasıl sınırlayacağınızı öğrenerek, günlük kullanım, belirli bir tarih, süre veya çalıştırma sayısı gibi esnek kısıtlamalar uygulayabileceksiniz.\nTek bir bilgisayarda ve tek kullanıcı için lisanslama yöntemlerini adım adım keşfedecek, yazılımlarınızı güvenli ve kullanıcı odaklı hale getireceksiniz.\nÖzel lisanslama kriterleri içeren lisans dosyalarını nasıl oluşturacağınızı detaylıca öğrenerek, yazılımlarınızı müşteri ihtiyaçlarına göre özelleştirebileceksiniz.\nOluşturulan lisans dosyasıyla yazılımınızı DEMO modundan çıkararak tam veya parçalı kullanıma nasıl açacağınızı uygulamalı olarak anlayacaksınız.\nLisanslarınızı yalnızca tek bir bilgisayarda çalışacak şekilde nasıl yapılandıracağınızı öğrenerek güvenliği maksimize edeceksiniz.\nIntranet veya web tabanlı Lisans Server’lar oluşturarak lisans kontrolünü merkezi ve etkili bir şekilde nasıl yöneteceğinizi keşfedeceksiniz.\nLisansların taşınması, devre dışı bırakılması ve tekrar aktif hale getirilmesi süreçlerini kolayca uygulayabileceksiniz.\nAsenkron lisans kontrol işlemlerini nasıl gerçekleştireceğinizi, Class Library (.dll) dosyalarını nasıl lisanslayacağınızı ve lisans kontrollerini Runtime veya Design-Time’da nasıl yapacağınızı derinlemesine öğreneceksiniz.\nYazılımlarınızın kodlarını değiştirilmeye veya crack’lenmeye karşı koruma yöntemlerini keşfedecek, güvenlik açıklarını ortadan kaldıracaksınız.\nDijital imzalama teknikleriyle yazılımlarınızı güvenli ve güvenilir hale getirmenin yollarını öğreneceksiniz.\nBu eğitim, yazılım lisanslama süreçlerini baştan sona öğrenmek isteyen geliştiriciler için tasarlandı.\nSize, yazılımlarınızı güvenli, esnek ve profesyonel bir şekilde lisanslama becerisi kazandıracak.\nHemen katılın, yazılım lisanslama dünyasında fark yaratın ve projelerinizi güvenle pazara sunun!",
      "target_audience": [
        ".Net ortamında yazılım geliştiren herkes."
      ]
    },
    {
      "title": "Moduły i pakiety wbudowane w języku Python - Ćwiczenia",
      "url": "https://www.udemy.com/course/cwiczenia-python-moduly-wbudowane/",
      "bio": "Opanuj moduły i pakiety wbudowane w języku Python: 230+ praktycznych zadań dla wzbogacenia Twojej wiedzy!",
      "objectives": [
        "rozwiązać ponad 210 ćwiczeń w języku Python z modułów wbudowanych",
        "radzić sobie z rzeczywistymi problemami występującymi w programowaniu",
        "pracować z dokumentacją",
        "zagwarantowane wsparcie instruktora",
        "pracować z modułami wbudowanymi: os, sys, pathlib, copy, collections, itertools, functools",
        "pracować z modułami wbudowanymi: random, math, statistics, numbers, decimal, fractions",
        "pracować z modułami wbudowanymi: string, re, pprint, datetime",
        "pracować z modułami wbudowanymi: pickle, zipfile, csv, json, xml, urllib, timeit"
      ],
      "course_content": {
        "Wskazówki": [
          "Kilka słów od autora"
        ],
        "Starter": [
          "Ćwiczenie 0",
          "Rozwiązanie 0"
        ],
        "datetime": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12"
        ],
        "os": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12"
        ],
        "sys": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6"
        ],
        "copy": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3"
        ],
        "string": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2"
        ],
        "re": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12"
        ],
        "collections": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12",
          "Ćwiczenie 13",
          "Rozwiązanie 13",
          "Ćwiczenie 14",
          "Rozwiązanie 14",
          "Ćwiczenie 15",
          "Rozwiązanie 15",
          "Ćwiczenie 16",
          "Rozwiązanie 16",
          "Ćwiczenie 17",
          "Rozwiązanie 17",
          "Ćwiczenie 18",
          "Rozwiązanie 18",
          "Ćwiczenie 19",
          "Rozwiązanie 19",
          "Ćwiczenie 20",
          "Rozwiązanie 20",
          "Ćwiczenie 21",
          "Rozwiązanie 21",
          "Ćwiczenie 22",
          "Rozwiązanie 22",
          "Ćwiczenie 23",
          "Rozwiązanie 23",
          "Ćwiczenie 24",
          "Rozwiązanie 24",
          "Ćwiczenie 25",
          "Rozwiązanie 25",
          "Ćwiczenie 26",
          "Rozwiązanie 26",
          "Ćwiczenie 27",
          "Rozwiązanie 27",
          "Ćwiczenie 28",
          "Rozwiązanie 28",
          "Ćwiczenie 29",
          "Rozwiązanie 29",
          "Ćwiczenie 30",
          "Rozwiązanie 30",
          "Ćwiczenie 31",
          "Rozwiązanie 31",
          "Ćwiczenie 32",
          "Rozwiązanie 32",
          "Ćwiczenie 33",
          "Rozwiązanie 33",
          "Ćwiczenie 34",
          "Rozwiązanie 34"
        ],
        "pprint": [
          "Intro",
          "Ćwiczenie 1",
          "Rozwiązanie 1"
        ]
      },
      "requirements": [
        "Ukończony kurs z programowania w języku Python na tym koncie instruktorskim",
        "Ukończony kurs z ćwiczeniami z programowania w języku Python na tym koncie instruktorskim",
        "Podstawowe pojęcie o modułach wbudowanych w Python"
      ],
      "description": "Ten kurs to obszerny program szkoleniowy, który skupia się na zapoznaniu uczestników z modułami i pakietami wbudowanymi Pythona i ich praktycznym zastosowaniu. Jest to idealny kurs dla osób, które posiadają podstawową wiedzę na temat Pythona i chcą ją poszerzyć oraz umocnić, koncentrując się na praktycznych aspektach języka.\nKurs ten zapewnia kompleksowe podejście do modułów i pakietów wbudowanych Pythona, które są kluczowymi narzędziami wykorzystywanymi przez programistów Pythona na co dzień. Przykładowe moduły omówione w tym kursie obejmują os, sys, math, datetime, collections, json, random i wiele innych. Każdy moduł jest omawiany szczegółowo, z naciskiem na jego praktyczne zastosowania.\nNajważniejszym elementem kursu jest zestaw 230+ ćwiczeń, które zostały zaprojektowane tak, aby zapewnić uczestnikom możliwość bezpośredniego zastosowania i utrwalenia zdobytej wiedzy. Ćwiczenia te obejmują różnorodne zadania, które wymagają zrozumienia i zastosowania różnych funkcji i technik dostępnych w modułach i pakietach wbudowanych.\nDla każdego ćwiczenia dostępne są szczegółowe rozwiązania wraz z wyjaśnieniami, które umożliwiają uczestnikom porównanie swojego podejścia z zalecanym rozwiązaniem, zrozumienie potencjalnych błędów i nauczenie się optymalnych technik.\nTo doskonały wybór dla osób, które chcą pogłębić swoją wiedzę o Pythonie, zdobyć solidne umiejętności i zrozumieć, jak efektywnie wykorzystać moduły wbudowane w Pythonie w swojej pracy programistycznej.\n\n\nPython – Prosty w nauce, potężny w działaniu\nPython to dynamiczny, wysokopoziomowy język programowania, ceniony za przejrzystą składnię i uniwersalność. Doskonale sprawdza się zarówno w prostych skryptach automatyzujących codzienne zadania, jak i w zaawansowanych projektach z zakresu sztucznej inteligencji, analizy danych, web developmentu czy automatyzacji. Dzięki ogromnej społeczności i bogatemu ekosystemowi bibliotek, Python jest idealnym wyborem dla początkujących i profesjonalistów.\n\n\nWbudowane moduły i pakiety Pythona – Gotowe narzędzia zawsze pod ręką\nPython oferuje bogaty zestaw wbudowanych modułów i pakietów, które umożliwiają szybkie i efektywne programowanie bez potrzeby instalowania dodatkowych bibliotek. Dzięki nim można realizować takie zadania jak obsługa plików (os, io), operacje matematyczne (math, random), zarządzanie datą i czasem (datetime, time) czy tworzenie struktur danych (collections). To gotowe narzędzia, które przyspieszają pracę i pozwalają pisać bardziej czytelny oraz zwięzły kod.",
      "target_audience": [
        "Początkujący programiści Python",
        "Analitycy danych i specjaliści BI",
        "Osoby przygotowujące się do rozmów kwalifikacyjnych lub egzaminów z Pythona",
        "Testerzy i automatycy testów",
        "Studenci kierunków technicznych i informatycznych",
        "Programiści innych języków przesiadający się na Pythona"
      ]
    },
    {
      "title": "Lógica de Programação: O Guia Completo",
      "url": "https://www.udemy.com/course/logica-de-programacao-o-guia-completo/",
      "bio": "Aprenda tudo o que você precisa saber sobre lógica de programação com Portugol Studio e Python! Mais de 70 exercícios!",
      "objectives": [
        "Implementar os exemplos utilizando o Portugol Studio e a linguagem de programação Python",
        "Resolver problemas utilizando lógica de programação",
        "Criar programas simples para entrada e saída de dados",
        "Entender conceitos básicos de programação, como por exemplo: variáveis, constantes, vetores e matrizes",
        "Implementar estruturas condicionais utilizando os comandos se (if) e caso (case)",
        "Implementar estruturas de repetição utilizando os comandos enquanto (while) e para (for)",
        "Implementar programas utilizando vetores e matrizes",
        "Implementar funções, bem como entender os conceitos práticos sobre parâmetros"
      ],
      "course_content": {
        "Introdução": [
          "Boas-vindas e conteúdo do curso",
          "Mais sobre programação",
          "Recursos para download"
        ],
        "Lógica de programação": [
          "Lógica",
          "Lógica de programação",
          "EXERCÍCIOS",
          "Exercício 1 - solução",
          "Exercício 2 - solução",
          "Representação de algoritmos"
        ],
        "Entrada, processamento e saída": [
          "Variáveis e constantes",
          "Ferramentas para lógica de programação",
          "Exemplo 1 portugol",
          "EXERCÍCIOS",
          "Exercício 1 portugol - solução",
          "Exercício 2 portugol - solução",
          "Exercício 3 portugol - solução",
          "Exercício 4 portugol - solução",
          "Exercício 5 portugol - solução",
          "Introdução ao Python",
          "Instalação do Python",
          "IDEs para Python",
          "Exemplo 1 Python",
          "Exercício 1 Python - solução",
          "Exercício 2 Python - solução",
          "Exercício 3 Python - solução",
          "Exercício 4 Python - solução",
          "Exercício 5 Python - solução"
        ],
        "Estruturas condicionais": [
          "Comando se/if",
          "Exemplo 1 portugol",
          "EXERCÍCIOS",
          "Exercício 1 portugol - solução",
          "Exercício 2 portugol - solução",
          "Exercício 3 portugol - solução",
          "Exercício 4 portugol - solução",
          "Exercício 5 portugol - solução",
          "Exemplo 1 Python",
          "Exercício 1 Python - solução",
          "Exercício 2 Python - solução",
          "Exercício 3 Python - solução",
          "Exercício 4 Python - solução",
          "Exercício 5 Python - solução",
          "Exemplo 2 portugol - comando caso/case",
          "EXERCÍCIOS",
          "Exercício 1 portugol - solução",
          "Exercício 2 portugol - solução",
          "Comando caso/case em Python"
        ],
        "Estruturas de repetição": [
          "Introdução",
          "Exemplo 1 enquanto/while - portugol",
          "Exemplo 2 enquanto/while - portugol",
          "EXERCÍCIOS",
          "Exercício 1 portugol - solução",
          "Exercício 2 portugol - solução",
          "Exercício 3 portugol - solução",
          "Exercício 4 portugol - solução",
          "Exercício 5 portugol - solução",
          "Exemplo 1 enquanto/while - Python",
          "Exemplo 2 enquanto/while - Python",
          "Exercício 1 Python - solução",
          "Exercício 2 Python - solução",
          "Exercício 3 Python - solução",
          "Exercício 4 Python - solução",
          "Exercício 5 Python - solução",
          "Exemplo 3 para/for - portugol",
          "EXERCÍCIOS",
          "Exercício 1 portugol - solução",
          "Exercício 2 portugol - solução",
          "Exercício 3 portugol - solução",
          "Exemplo 3 para/for – Python",
          "Exercício 1 Python - solução",
          "Exercício 2 Python - solução",
          "Exercício 3 Python - solução"
        ],
        "Vetores e matrizes": [
          "Vetores - introdução",
          "Exemplo 1 vetores portugol",
          "Exemplo 2 vetores portugol",
          "EXERCÍCIOS",
          "Exercício 1 portugol – solução",
          "Exercício 2 portugol – solução",
          "Exercício 3 portugol – solução",
          "Exercício 4 portugol – solução",
          "Exercício 5 portugol – solução",
          "Exemplo 1 vetores Python",
          "Exemplo 2 vetores Python",
          "Exercício 1 Python – solução",
          "Exercício 2 Python – solução",
          "Exercício 3 Python – solução",
          "Exercício 4 Python – solução",
          "Exercício 5 Python – solução",
          "Estruturas de repetição aninhadas – portugol",
          "Matrizes - introdução",
          "Exemplo 1 matrizes portugol",
          "EXERCÍCIOS",
          "Exercício 1 portugol – solução",
          "Exercício 2 portugol – solução",
          "Exercício 3 portugol – solução",
          "Estruturas de repetição aninhadas – Python",
          "Exemplo 1 matrizes Python",
          "Exercício 1 Python – solução",
          "Exercício 2 Python – solução",
          "Exercício 3 Python – solução"
        ],
        "Funções": [
          "Introdução",
          "Exemplo 1 portugol – funções simples",
          "EXERCÍCIOS",
          "Exercício 1 portugol – solução",
          "Exercício 2 portugol – solução",
          "Exercício 3 portugol – solução",
          "Exemplo 1 Python – função simples",
          "Exercício 1 Python – solução",
          "Exercício 2 Python – solução",
          "Exercício 3 Python – solução",
          "Exemplo 2 portugol – função com parâmetros",
          "EXERCÍCIOS",
          "Exercício 1 portugol – solução",
          "Exercício 2 portugol – solução",
          "Exercício 3 portugol – solução",
          "Exemplo 2 Python – função com parâmetros",
          "Exercício 1 Python – solução",
          "Exercício 2 Python – solução",
          "Exercício 3 Python – solução",
          "Exemplo 3 portugol – função com retorno",
          "EXERCÍCIOS",
          "Exercício 1 portugol – solução",
          "Exercício 2 portugol – solução",
          "Exercício 3 portugol – solução",
          "Exemplo 3 Python – função com retorno",
          "Exercício 1 Python – solução",
          "Exercício 2 Python – solução",
          "Exercício 3 Python – solução"
        ],
        "Considerações finais": [
          "Considerações finais",
          "AULA BÔNUS"
        ]
      },
      "requirements": [
        "Não há nenhum pré-requisito, qualquer pessoa que saiba utilizar um computador conseguirá acompanhar as aulas"
      ],
      "description": "A lógica está relacionada a organização de uma sequência de ações de forma coesa com o objetivo de resolver um determinado problema. Nós usamos lógica todos os dias para as tarefas mais simples que executamos, porém, muitas vezes não prestamos atenção pelo fato da maioria das atividades serem automáticas. Por exemplo, para dirigir um carro nós precisamos executar várias tarefas em ordem, como por exemplo: colocar o cinto de segurança, ligar a ignição, olhar nos retrovisores antes, ligar o pisca indicando, pisar na embreagem, engatar a primeira marcha, soltar e embreagem, pisar no acelerador e virar o volante. Para as pessoas que já sabem dirigir, este processo é automático e não precisamos pensar em cada um dos passos, porém, para ensinar um computador a realizar uma tarefa; nós precisamos indicar cada um desses passos detalhadamente e em sequência! Neste cenário que entra a Lógica de Programação, que é a área da Ciência da Computação responsável por ensinar os computadores a realizarem tarefas específicas. É o primeiro passo para quem almeja ser um desenvolvedor de softwares comerciais. A Lógica de Programação é muito importante por fornecer as ferramentas necessárias para criarmos algoritmos, que são uma sequência ordenada de passos para resolvermos problemas reais. Em resumo, antes de criar um software do zero, primeiramente precisamos aplicar a lógica de programação para entender todo o contexto.\nBaseado nisso, este curso foi projetado para quem está iniciando seus estudos na área de programação de computadores e o conteúdo é equivalente a uma disciplina de Programação I ministrada em cursos de tecnologia. Você vai aprender tudo o que precisa saber para iniciar nessa área! Desenvolveremos juntos mais de 50 exercícios passo a passo utilizando a ferramenta Portugol Studio e também a linguagem de programação Python, que é uma das mais utilizadas linguagens de programação do mundo e é crescente o número de empresas que buscam desenvolvedores que tenham esse conhecimento! Ela foi criada em 1991 por Guido van Rossum com o principal objetivo de ser simples e principalmente de fácil aprendizagem. A linguagem Python ganhou muita popularidade nos últimos anos por ser adequada para um número muito grande aplicações, como por exemplo: desenvolvimento web, inteligência artificial, ciência de dados, big data, computação gráfica, dentre várias outras.\nConfira abaixo os tópicos que você aprenderá:\nIntrodução a Lógica e Lógica de Programação\nO que são algoritmos\nRepresentação de algoritmos com linguagem natural, portugol, diagrama de Chapin e fluxograma\nVariáveis, constantes e tipos de dados\nFerramentas para lógica de programação\nEntrada, processamento e saída\nOperações matemáticas\nOperadores lógicos, relacionais e condicionais\nEstruturas condicionais - comandos se/if e caso/case\nEstruturas de repetição - comandos enquanto/while e para/for\nVetores e matrizes\nFunções, bem como entender os conceitos de parâmetros e retorno de funções\nO curso conta com exercícios práticos ao final de cada tópico, para que você pratique o que aprendeu durante as aulas. Além disso, todos os exercícios são resolvidos passo a passo em vídeo para você comparar com as suas implementações!",
      "target_audience": [
        "Iniciantes em programação",
        "Pessoas que queiram aprender como resolver problemas computacionais utilizando Portugol e a linguagem Python",
        "Alunos de graduação que estejam cursando disciplinas relacionadas a programação"
      ]
    },
    {
      "title": "NET5 ile Kendi NuGet Kütüphanemizi Yazalım",
      "url": "https://www.udemy.com/course/net5-ile-kendi-nuget-kutuphanemizi-yazalim/",
      "bio": "Nuget paket geliştirme tekniklerini detayları ile birlikte öğreneceğiz",
      "objectives": [
        "Kütüphane Geliştirme Tekniklerini Öğreneceksiniz",
        "NuGet Paket Yayınlamayı Öğreneceksiniz",
        "Access Modifiers Yapısının Detaylarını Öğreneceksiniz",
        "SOLID Prensiplerinin Uygulanmasına Dair Örnekler Göreceksiniz",
        "OOP Kullanarak Gelecekte İhtiyaç Duyulabilecek Geliştirmeler İçin Bugünden Plan Yapmayı Öğreneceksiniz",
        "Versiyonlama Standartlarını Öğreneceksiniz",
        "Paket Versiyonlama Detaylarını Öğreneceksiniz",
        "Açık Kaynak Kodu Lisans Tiplerini Öğreneceksiniz",
        "ReadMe Dosyası Yazmanın İnceliklerini Öğreneceksiniz",
        "Web API Middleware Yapısını Öğreneceksiniz",
        "Extension Metod Yazmanın Detaylarını Öğreneceksiniz"
      ],
      "course_content": {
        "Kurs Tanıtımı": [
          "Bu Kursu Neden Almalısınız?",
          "Neden NuGet?",
          "Ben Kimim?"
        ],
        "Ön Hazırlık": [
          "Ön Gereksinimler",
          "Proje Detayları"
        ],
        "Proje Geliştirme": [
          "Proje Klasör Yapısı",
          "Middleware Tanıtımı",
          "Model Oluşturma - 1",
          "Model Oluşturma - 2",
          "Model Oluşturma - 3",
          "Middleware Tamamlama - 1",
          "Middleware Tamamlama - 2",
          "LogWriter Geliştirmeleri",
          "MessageCreator Geliştirmeleri",
          "Extension Metod"
        ],
        "Test Web API Uygulaması": [
          "Neden Test API'si yazıyoruz?",
          "Projeyi Oluşturma",
          "Örnek Kullanımlar ve Test 1 - UseHandler",
          "Örnek Kullanımlar ve Test 2 - UseLogger"
        ],
        "NuGet Paketi Yayınlama": [
          "Paket Yayınlamak Nedir?",
          "NuGet Hesabı Oluşturma",
          "Open-Source Lisanslar",
          "ReadMe.md Dosyası Hazırlama",
          "Paketimizin Versiyonlanması",
          "Paketimize İkon Ekleme",
          "Paketi Oluşturma",
          "Paketi Yayınlama"
        ],
        "Bonus - FileLogWriter Projesi": [
          "Proje Açıklaması",
          "Projeyi Oluşturma",
          "FileMessageCreator Oluşturma",
          "FileLogWriter Oluşturma",
          "Extension Metodlarımızı Tamamlama ve Test",
          "Proje Kaynak Kodları"
        ]
      },
      "requirements": [
        "Orta Seviye Programlama Bilgisi Gerekmektedir",
        "Visual Studio 2019 veya Visual Studio 2022"
      ],
      "description": "Bu kurs bünyesinde NET5 framework'ünü kullanarak birbirinden farklı iki farklı kütüphane geliştireceğiz. Bu kütüphanemiz içerisinde Request ve Response bilgilerinin oluşturulması ve yönetilmesi işlemlerini yapacağız. Bir kütüphanemizi geliştirirken gelecekte bu kütüphanenin geliştirilebilir olması için geliştirmelerimizi yapacağız. OOP ve SOLID gibi konuların da kullanım örneklerine girdiğimiz bu kursta, oluşturulan kütüphanelerin NuGet üzerinden yayınlanmasını işini de birlikte tamamlayacağız. NuGet'te yayınladığımız kütüphane için Açık Kaynak Lisansları, ReadMe dosyası, Versiyonlama Standartları gibi konulara da değiniyor olacağız. Ayrıca yazmış olduğumuz kütüphanelerin, NET5 WebAPI projesi üzerinde test edilmesi işlemlerini de birlikte tamamlayacağız.\n\n\nKurs içerisinde Slayt'lara da yer vereceğiz. Kursumuzun içeriğini ise şu şekilde tamamlayacağız.\n\n\nKursumuzun Tanımı\nKursumuzun daha iyi anlaşılabilir olması için ön hazırlıklar ve gereksinimler\nProjemizi geliştireceğimiz bölümümüz\nBu bölümde Middleware kullanımını ve detaylarını da öğreniyor olacağız\nMessageCreator ve LogWriter gibi modellerimizi tanımlayıp geliştireceğiz\nExtension metodlarımızı yazacağız\nProjemizi oluştururken dikkat edilmesi gereken noktaların altınız çizeceğiz\nBu paketimizi test edebilmek için bir Web API projesi geliştireceğiz\nExtension metodlarımızı test edeceğiz\nKullanıcıdan alabileceğimiz ayarları test edeceğiz\nOluşturduğumuz paketi Nuget üzerinde yayınlayacağız\nNuget hesabı oluşturacağız\nOpen-Source Lisans türlerine ve detaylarına değineceğiz\nReadMe dosyası hazırlamayı öğreneceğiz\nProje versiyonlama standartlarını öğrenip projemize uygulayacağız\nPaketimize Icon ekleyeceğiz\nPaketimizi Yayınlayacağız\nBonus bir proje ile kursumuza devam edeceğiz\nBu projemizde önceki oluşturduğumuz kütüphanemizi Nuget üzerinden indirip projemize ekleyeceğiz\nEklediğimiz kütüphanemizi Base alarak üzerine yeni bir Logger geliştireceğiz\nBu Logger içerisinde verilerimizi bir dosyaya ekleme işlemlerini yapacağız",
      "target_audience": [
        "Orta ve İleri Seviye Program Geliştiricileri"
      ]
    },
    {
      "title": "Programando em MVC com C# 4 Camadas",
      "url": "https://www.udemy.com/course/programando-em-mvc-com-c-4-camadas/",
      "bio": "Desenvolvimento com CSharp",
      "objectives": [
        "Serão capazes de trabalhar em modelo MVC com 3 ou 4 camadas"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Instalando Visual Studio",
          "Modelo MVC",
          "Criando o Projeto",
          "Finalizando as camadas",
          "Criando tela de login",
          "Criando entidade de usuário",
          "Métodos get e set",
          "Relacionando camadas",
          "Chamando as camadas",
          "Criando o banco de dados",
          "Comunicando com o banco",
          "Tela de cadastro",
          "Programando os botões",
          "Chamando formulários",
          "Função para inserir",
          "Cadeia de conexão",
          "Conectando ao banco de dados",
          "SQL Command para inserção",
          "Parametros da consulta",
          "Testando a inserção",
          "Salvando dados no banco",
          "Colunas da Grid",
          "Métodos para listar dados no grid",
          "Consulta para lsitar dados",
          "Verificando dados da consulta",
          "Listando dados no grid",
          "Atualizando Grid",
          "Programando o Login",
          "Consulta para o Login",
          "Efetuando o Login",
          "Selecionando linha do dbGrid",
          "Programando botão de excluir",
          "Excluindo usuários",
          "Editando o usuário",
          "Ajustes no formulário",
          "Criando método de buscar",
          "Alterando método de buscar",
          "Buscando usuários",
          "Buscas aproximadas",
          "Buscas automatizadas",
          "Tabela de Produtos",
          "Tela de produtos",
          "Reaproveitamento de classes",
          "Classe dao dos produtos",
          "Finalizando as classes",
          "Funções do formulário",
          "Eventos do formulário",
          "Crud com os produtos",
          "Estrutura do sistema mvc"
        ]
      },
      "requirements": [
        "Não precisa de nenhum pré requisito, qualquer aluno pode acompanhar"
      ],
      "description": "O curso completo de C# MVC possui 50 aulas, neste curso o aluno aprenderá a trabalhar com a linguagem C# dividida em 4 camadas no modelo estrutural em MVC, criamos um exemplo totalmente prático usando Windows Forms e banco de dados SQL onde criamos todo CRUD para que o aluno aprenda sobre todas as classes necessárias para poder desenvolver qualquer tipo de sistema estruturado com MVC, adquira já o curso e simplifique seus sistemas.",
      "target_audience": [
        "Todo aluno que tenha interesse em aprender sobre programação e linguagem CSharp"
      ]
    },
    {
      "title": "Java 2 em 1: Lógica de Programação e Orientação a Objetos",
      "url": "https://www.udemy.com/course/java-logica-de-programacao-e-orientacao-a-objetos/",
      "bio": "Curso do zero, corresponde as matérias de Programação 1(Lógica) e Programação 2 (Orientação a Objetos) da faculdade",
      "objectives": [
        "Como desenvolver programas utilizando a Linguagem Java",
        "Criar seus próprios programas usando o IntelliJ",
        "Utilizar diferentes tipos de variáveis (int, double, Char, String, Boolean)",
        "Fazer operações matemáticas",
        "Trabalhar com Condicionais Simples ou Compostas (IF, Switch Case)",
        "Utilizar Conectivos Lógicos (AND, OR, NOT)",
        "Criar laços de repetição (While, For)",
        "Desenvolver Menus",
        "Definir Constantes",
        "Definir, Percorrer e Acessar Vetores",
        "Definir, Percorrer e Acessar Matrizes",
        "Naming Conventions",
        "Conversão de Valores (Parse)",
        "Arraylists",
        "Gerar Aleatório",
        "Funções e Tipos de Retorno",
        "Static",
        "Classes e Objetos",
        "Atributos de Classes",
        "Método Construtor",
        "Métodos com e sem Retorno",
        "Encapsulamento (Getters e Setters)",
        "Herança",
        "Diagramas UML",
        "Sobrecarga",
        "Polimorfismo",
        "Interfaces",
        "Interface Gráfica com JFrame"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Download dos Slides e Arquivos",
          "Instalação IDE",
          "Computação",
          "Primeiro Código",
          "Primeiro Código - Nova Interface do IntelliJ",
          "Código - Primeiro Código",
          "Exercício 01 - Operações Matemáticas",
          "Código - Exercício 01",
          "Exercício 02 - Operações Matemáticas",
          "Código - Exercício 02",
          "Exercício 03 - Operações Matemáticas",
          "Código - Exercício 03",
          "Leitura de Valores",
          "Exercício 01 - Leitura de Valores",
          "Código - Exercício 01 - Leitura de Valores",
          "Exercício 02 - Leitura de Valores",
          "Código - Exercício 02 - Leitura de Valores",
          "Conversão de Valores com Parse",
          "Naming Conventions"
        ],
        "Condicionais": [
          "Condicionais Simples",
          "Exercicio 01 - Condicionais Simples",
          "Código - Exercicio 01 - Condicionais Simples",
          "Exercicio 02 - Condicionais Simples",
          "Código - Exercicio 02 - Condicionais Simples",
          "Exercicio 03 - Condicionais Simples",
          "Código - Exercicio 03 - Condicionais Simples",
          "Conectivos Lógicos",
          "Exercício 01 - Conectivo Lógico",
          "Código - Exercício 01 - Conectivo Lógico",
          "Exercício 02 - Conectivo Lógico OU",
          "Código - Exercício 02 - Conectivo Lógico OU",
          "Exercício 03 - Conectivo Lógico OU",
          "Código - Exercício 03 - Conectivo Lógico OU",
          "Exercício 04 - Conectivo Lógico E e OU",
          "Código - Exercício 04 - Conectivo Lógico E e OU",
          "Condicional Switch",
          "Exercício 01 - Condicional Switch",
          "Código - Exercício 01 - Condicional Switch",
          "Gerar Aleatório",
          "Exercício 01 - Gerar Aleatório",
          "Código - Exercício 01 - Gerar Aleatório"
        ],
        "Laços de Repetição": [
          "Laço de Repetição While - Parte 1",
          "Laço de Repetição While - Parte 2",
          "Exercício 01 - Laço de Repetição While",
          "Código - Exercício 01 - Laço de Repetição While",
          "Exercício 02 - Laço de Repetição While",
          "Código - Exercício 02 - Laço de Repetição While",
          "Exercício 03 - Laço de Repetição While",
          "Código - Exercício 03 - Laço de Repetição While",
          "Laço de Repetição For",
          "Exercício 01 - Laço de Repetição For",
          "Código - Exercício 01 - Laço de Repetição For",
          "Exercício 02 - Laço de Repetição For",
          "Código - Exercício 02 - Laço de Repetição For"
        ],
        "Vetores e Matrizes": [
          "Constantes",
          "Vetores",
          "Exercício 01 - Vetores",
          "Código - Exercício 01 - Vetores",
          "Exercício 02 - Vetores",
          "Código - Exercício 02 - Vetores",
          "Arraylist",
          "Exercício 01 - Arraylist",
          "Código - Exercício 01 - Arraylist",
          "Matrizes",
          "Exercício 01 - Matrizes",
          "Código - Exercício 01 - Matrizes",
          "Revisão de Conceitos"
        ],
        "Funções": [
          "Função Vazia",
          "Exercício 01 - Função Vazia",
          "Código - Exercício 01 - Função Vazia",
          "Função com Retorno",
          "Exercício 01 - Função com Retorno",
          "Código - Exercício 01 - Função com Retorno",
          "Escopo",
          "Função Com Parâmetro",
          "Exercício 01 - Função com Parâmetro",
          "Código - Exercício 01 - Função com Parâmetro",
          "Revisão Geral"
        ],
        "Programação Orientada a Objetos (POO)": [
          "Classes e Objetos",
          "Método Construtor",
          "Método Construtor com Parâmetros",
          "Exercício 01 - Método Construtor com Parâmetros",
          "Código - Exercício 01 - Método Construtor com Parâmetros",
          "Método Vazio Sem Retorno",
          "Método Com Retorno e Static",
          "Exercício 01 - Métodos",
          "Código - Exercício 01 - Métodos",
          "Exercício 02 - Métodos",
          "Código - Exercício 02 - Métodos",
          "Revisão de Conceitos",
          "Encapsulamento",
          "Exercício 01 - Encapsulamento",
          "Código - Exercício 01 - Encapsulamento",
          "Herança",
          "Diagrama UML",
          "Exercício 01 - UML e Herança",
          "Código - Exercício 01 - UML e Herança",
          "Exercício 02 - UML e Herança",
          "Código - Exercício 02 - UML e Herança",
          "Sobrecarga",
          "Exercício 01 - Sobrecarga",
          "Código - Exercício 01 - Sobrecarga",
          "Polimorfismo",
          "Exercício 01 - Polimorfismo",
          "Código - Exercício 01 - Polimorfismo",
          "Interfaces",
          "Exercício 01 - Interfaces",
          "Código - Exercício 01 - Interfaces"
        ],
        "Extra - Interface Gráfica com JFrame e IntelliJ": [
          "Conversor de Dólares para Reais - Parte 1",
          "Conversor de Dólares para Reais - Parte 2"
        ]
      },
      "requirements": [
        "Computador com acesso a Internet e com Java Instalado",
        "Preferencialmente instalar o programa IntelliJ",
        "Não é preciso ter conhecimentos prévios com programação"
      ],
      "description": "Que tal aprender a programar a segunda linguagem mais utilizada no mundo?\nO Java é uma linguagem com sintaxe muito parecida com C, porém com a grande vantagem de ter o paradigma de Orientação a Objetos, que permite criar programas complexos com organização e facilidade de modelagem do mundo real.\nGraças a Java Virtual Machine, quando o Java está instalado no dispositivo, você consegue aproveitar o mesmo código para rodar programas de forma perfeita em qualquer sistema operacional.\nEsse curso é extremamente completo e vai te ensinar dos Fundamentos de Lógica de Programação até a Orientação a Objetos (POO)\nPara fazer este curso você não precisa saber programar nenhuma linguagem anteriormente, pois vou te ensinar desde a instalação dos programas necessários!\nNesse curso você aprenderá como:\nUtilizar diferentes tipos de variáveis (int, double, Char, String, Boolean)\nFazer operações matemáticas\nTrabalhar com Condicionais Simples ou Compostas (IF, Switch Case)\nUtilizar Conectivos Lógicos (AND, OR, NOT)\nCriar laços de repetição (While, For)\nDesenvolver Menus\nDefinir Constantes\nDefinir, Percorrer e Acessar Vetores\nDefinir, Percorrer e Acessar Matrizes\nConversão de valores (Parse)\nNaming Conventions\nArraylists\nGerar Aleatório\nFunções (Retorno, Parâmetros)\nStatic\nClasses e Objetos\nAtributos de Classes\nMétodo Construtor\nMétodos com e sem Retorno\nEncapsulamento (Getters e Setters)\nHerança\nDiagramas UML\nSobrecarga\nPolimorfismo\nInterfaces\nExtra: Interface Gráfica com JFrame\nAlém disso você terá suporte individual para tirar suas dúvidas e responderá a questionários para reforçar os seus conhecimentos.\nAo finalizar o curso você receberá um Certificado.\nEsse curso é para iniciantes, mesmo que NUNCA TENHAM PROGRAMADO NA VIDA.\nMuito obrigado e te vejo lá",
      "target_audience": [
        "Pessoas que queiram aprender os Fundamentos da Programação e Orientação a Objetos com Java"
      ]
    },
    {
      "title": "JavaScript pour débutants | Guide Complet",
      "url": "https://www.udemy.com/course/javascript-guide-complet/",
      "bio": "Un guide indispensable pour rendre vos pages Web interactives !",
      "objectives": [
        "Ecrire des programmes JavaScript et les intégrer dans leurs pages Web",
        "Utiliser les classes existantes du langage JavaScript",
        "Ajouter des méthodes à des classes existantes",
        "Accéder aux éléments du DOM",
        "Manipuler les classes CSS en JavaScript",
        "Modifier les attributs inline des balises HTML en JavaScript",
        "Créer des fonctions événementielles pour réagir au clavier, à la souris et aux événements système",
        "Valider des formulaires en HTML5 et en JavaScript",
        "Créer, lire, modifier et invalider des cookies",
        "Interagir avec les feuilles de style en JavaScript",
        "Dialoguer avec un programme serveur via AJAX",
        "Gérer les drag and drop sur une page Web",
        "Utiliser l'API de géolocalisation de Google",
        "Stocker des données et gérer le Local Storage",
        "Lancer et contrôler des Web Workers",
        "Afficher des données en 3D via WebGL"
      ],
      "course_content": {
        "Module 1 – Brève introduction avant de commencer à coder": [
          "Les moteurs de rendu",
          "Histoire du JavaScript",
          "Activer l'exécution de JavaScript dans le navigateur",
          "Tester si JavaScript est activé",
          "Editeurs de code HTML/XHTML/CSS/JavaScript",
          "Débogage dans le navigateur",
          "A savoir avant de commencer à coder"
        ],
        "Module 2 - Le langage JavaScript": [
          "Squelette standard",
          "Où insérer le code JavaScript ?",
          "Des commentaires dans le code",
          "Une fonction dans une balise <script>",
          "Exercice",
          "Gestion des exceptions",
          "Mise en place d'un gestionnaire d'événements",
          "Variables et types de données",
          "Conversions de types"
        ],
        "Module 3 – Tout d'horizon du langage JavaScript": [
          "Opérateurs et expressions",
          "L'instruction de contrôle if... else [.. else]",
          "Instructions répétitives",
          "Un cas particulier de l'instruction for",
          "L'instruction while",
          "Quelques astuces à connaitre sur les boucles",
          "Définition d'un tableau"
        ],
        "Module 4 – Programmation objet en JavaScript": [
          "Les objets par défaut de JavaScript",
          "L'objet Date",
          "L'objet Math",
          "Utilisation d'un objet par défaut",
          "L'objet String",
          "Les expressions régulières - l'objet RegExp",
          "Les objets liés au navigateur",
          "L'objet history",
          "L'objet location",
          "L'objet navigator",
          "L'objet document",
          "Le tableau elements[]",
          "L'objet window",
          "Extension des objets prédéfinis",
          "Définition d'objets avec la classe Object",
          "Définition d'objets avec la notation JSON"
        ],
        "Module 5 - Evénements et données": [
          "Accès aux éléments du DOM",
          "Exercices sur la fonction getElementById",
          "Associer dynamiquement un événement à un élément",
          "Passage de paramètres littéraux dans la fonction événementielle",
          "Passage du mot-clé this dans une fonction",
          "Passage du mot-clé event dans une fonction",
          "Effet Rollover",
          "Version moderne du gestionnaire d'événements",
          "Suppression d'un gestionnaire d'événements",
          "Redirection en JavaScript",
          "Cookies",
          "Formulaires - Validation en HTML5",
          "Validation de formulaires en JavaScript"
        ],
        "Module 6 - Interaction JavaScript CSS": [
          "Accès aux propriétés CSS en JavaScript",
          "Ajouter/supprimer une classe",
          "L'objet StyleSheet"
        ],
        "Module 7 - AJAX": [
          "Le concept d’échanges asynchrones avec HTTP",
          "Vocabulaire jQuery",
          "Installation du serveur WampServer",
          "Réagir au clic sur un bouton en jQuery",
          "Charger un fichier avec AJAX",
          "Charger une partie d'un fichier",
          "Requête GET"
        ],
        "Module 8 – Les API JavaScript": [
          "Requête POST",
          "Charger des données JSON",
          "La méthode $.ajax()",
          "API File",
          "Drag and Drop",
          "Géolocalisation",
          "Local Storage",
          "Web Workers",
          "WebGL"
        ],
        "Code source de la formation": [
          "Le fichier ZIP des codes sources"
        ],
        "Bonus - PDF de la formation": [
          "PDF de la formation"
        ]
      },
      "requirements": [
        "La connaissance des langages HTML et CSS est un plus mais n'est pas obligatoire pour suivre cette formation"
      ],
      "description": "Cette formation vidéo va vous montrer comment utiliser le langage JavaScript pour dynamiser vos pages Web. Elle s'adresse à un public débutant et intermédiaire. Lorsque vous l'aurez entièrement suivie, vous saurez comment :\nUtiliser les instructions du langage JavaScript. Vous pourrez ainsi écrire toutes sortes de codes pour répondre à toutes sortes de situation. De la validation locale de formulaires à l'utilisation d'API en passant par la modification du DOM, et bien d'autres sujets encore.\nDéboguer votre code pour trouver rapidement l'instruction ou les instructions qui bloquent son exécution ou provoquent des comportements que vous n'avez pas prévus.\nAccéder aux objets par défaut du langage JavaScript et créer vos propres objets. Tout en améliorant les possibilités du langage, vous pourrez définir des objets qui correspondent exactement à ce dont vous avez besoin dans vos projets personnels ou ceux développés dans votre entreprise.\nCréer du code pour réagir aux événements de l'utilisateur et du système. Ce code permettra par exemple de réagir aux clics souris, aux frappes sur le clavier, au redimensionnement de la fenêtre du navigateur ou encore à l'horloge système. Lorsqu'un tel événement se produira, le contenu de la page pourra changer de façon dynamique pour améliorer l'expérience de l'utilisateur.\nInteragir avec un programme serveur en AJAX. Pour être le plus efficace possible, les échanges AJAX se feront via la bibliothèque jQuery.\nUtiliser des API pour faciliter vos développements : drag and drop, géolocalisation, local storage, web workers, 3D avec WebGL.\nIl ne s'agit là que de quelques-uns des sujets abordés dans cette formation. Que vous débutiez en programmation JavaScript ou que vous ayez déjà une certaine expérience, vous y trouverez un ensemble de techniques qui simplifieront vos futurs projets, raccourciront vos temps de développement et augmenteront sa pérennité.\nTout au long de la formation, de nombreux exercices vous sont proposés. Pour bien apprendre à programmer en JavaScript, vous devez jouer le jeu et vous appliquer à résoudre chacun des exercices proposés. Rassurez-vous, la difficulté ira croissante. Et vous serez en mesure de résoudre les premiers exercices même si vous n'avez actuellement aucune connaissance en JavaScript !\nJe vous souhaite une bonne lecture et beaucoup de découvertes toutes aussi passionnantes les unes que les autres !",
      "target_audience": [
        "Ce cours est fait pour tous ceux qui veulent dynamiser leurs pages Web et se différentier des sites traditionnels",
        "Il n'est pas fait pour ceux qui ne veulent pas retrousser leurs manches et coder de façon soutenue en JavaScript"
      ]
    },
    {
      "title": "Bash Scripting, Linux and Shell Programming Complete Guide",
      "url": "https://www.udemy.com/course/bash-scripting-course/",
      "bio": "Bash scripting provides programming for the most popular operating system in the world. Linux is the most popular OS",
      "objectives": [
        "Bash Scripting",
        "Linux Programming",
        "Shell Scripting",
        "Application Programming",
        "Scripting",
        "Cross Platform Development",
        "Terminal Commands",
        "Unix Commands",
        "Command Prompts",
        "Semantics of General Programming",
        "The Format of Coding Applications",
        "All The Features of Bash Scripting"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Bash vs Shell vs Command Line vs Terminal"
        ],
        "Navigation": [
          "Listing Folder Contents (ls)",
          "Print Current Folder (pwd)",
          "Change Folder (cd)",
          "Using A Stack To Push Folders (pushd/popd)",
          "Check File Type (file)",
          "Find File By Name (locate) & Update Locate Database (updatedb)",
          "Find A Command (which)",
          "Show Command History (history)",
          "Quiz 1 - Navigation"
        ],
        "Getting Help": [
          "Show Manual Descriptions (whatis)",
          "Search Manual (apropos)",
          "Reference Manuals (man)",
          "Quiz 2 - Getting Help"
        ],
        "Working With Files/Folders": [
          "Creating A Folder (mkdir)",
          "Creating A File (touch)",
          "Copy Files/Folders (cp)",
          "Move & Rename Files/Folders (mv)",
          "Delete Files/Folders (rm)",
          "Delete Empty Folder (rmdir)",
          "Change File Permissions (chmod)",
          "Quiz 3 - Working With Files"
        ],
        "Text Files": [
          "File Concatenation (cat)",
          "File Perusal Filter (more/less)",
          "Terminal Based Text Editor (nano)",
          "Quiz 4 - Text Files"
        ],
        "Users": [
          "Run Commands As A Superuser (sudo)",
          "Change User (su)",
          "Show Effecter User and Group IDs (id)",
          "Quiz 5 - Users"
        ],
        "Killing Programs & Logging Out": [
          "Kill A Running Command (ctrl + c)",
          "Kill All Processes By A Name (killall)",
          "Logging Out Of Bash (exit)",
          "Quiz 6 - Killing Programs & Logging Out"
        ],
        "Shortcuts": [
          "Tell Bash That There Is No More Input (ctrl + d)",
          "Clear The Screen (ctr + l)",
          "Zoom In (ctrl + +)",
          "Zoom Out (ctrl + -)",
          "Moving The Cursor",
          "Deleting Text",
          "Fixing Typos",
          "Cutting and Pasting",
          "Character Capitalisation",
          "Quiz 7 - Shortcuts"
        ],
        "Bash": [
          "Bash File Structure",
          "Echo Command",
          "Comments",
          "Variables",
          "Strings",
          "While Loop",
          "For Loop",
          "Until Loop",
          "Break & Continue",
          "Get User Input",
          "If Statement",
          "Case Statements",
          "Get Arguments From The Command Line",
          "Functions",
          "Global vs Local Variables",
          "Arrays",
          "Shell & Environment Variables",
          "Scheduled Automation",
          "Aliases",
          "Wildcards",
          "Multiple Commands",
          "Quiz 8 - Bash"
        ]
      },
      "requirements": [
        "Passion For Learning Bash Scripting",
        "Basic Computer Knowledge and Skills",
        "Passion For Linux Programming",
        "Basic Knowledge of Computer Science Is Optional"
      ],
      "description": "Learn about everything there is to know about Linux Bash Scripting. A step by step process is used to explain every facet of these topics.\nNOTE: This course includes information on application programming and design!\nGain a good understanding of the following concepts with this course:\nWhat Bash scripting is?\nLinux Certifications\nHow to develop using the Linux programming language\nFeatures of the Linux programming language\nCoding semantics\nApplication programming\nNetwork programming\nLinux is the most popular platform in the world. These platforms are developed for by all companies such as Google, Facebook and Microsoft for mobile development. This course will ensure you are not left out as more and more companies request this awesome and powerful language. This course will teach you everything about programming Linux applications.\nYou will receive all the knowledge to use and leverage the powerful technology behind these amazing and wonderful platforms.\nOver 400,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only Linux Programming course that you will need!",
      "target_audience": [
        "Anyone Looking To Learn About Bash Scripting",
        "Developers Looking To Learn The Skills Needed To Utilise Linux Features",
        "Linux Developers",
        "Unix Developers",
        "Mac Developers",
        "Applications Programmers",
        "People Looking To Learn About Programming",
        "Those Seeking To Understand How Linux Programming Works",
        "People Seeking Guidance On How To Create Linux and Mac Scripts",
        "Beginners & Experts In This Field",
        "People With a Desire To Improve Their Programming Knowledge"
      ]
    },
    {
      "title": "Learn Python by creating 10 apps with tkinter",
      "url": "https://www.udemy.com/course/learn-python-by-creating-10-apps/",
      "bio": "Master GUI development and Python by creating desktop applications",
      "objectives": [
        "Master Python and graphical user interfaces",
        "Learn how to create any kind of style and layout to make your own apps",
        "Master the design of large projects",
        "Create 10 tkinter apps including games",
        "Request information from the internet (stock, weather and geo information)",
        "You will develop a thorough understanding of Python"
      ],
      "course_content": {},
      "requirements": [
        "Access to some kind of computer, ideally windows but macOS and Linux would also work"
      ],
      "description": "Learn the world's most popular programming language by making 10 apps!\n\n\nThis course includes an incredibly comprehensive, yet easy to follow, introduction to Python and uses that knowledge to create 10 sophisticated apps using tkinter. By the time you finish these projects you will have a strong understanding of Python and of coding in general. You will also have amazing projects for your portfolio.\n\n\nThe course contains over 150 videos and includes a huge amount of exercises so you can practice while you code along. You can also find the code for every video attach in the course. The course will start completely from scratch and I will begin by installing Python on Windows or MacOS; or you can use an online code editor.\n\n\nThis course is going to cover every topic of Python, for example:\nAll of the datatypes (integers, strings, floats, booleans, lists, tuples, dictionaries etc)\nYou will learn classes and object-oriented programming\nInheritance, both simple and complex will be covered in detail\nYou will learn how to control the flow of the code using if, while, for and match\nYou will learn about functions and how to pass information around\nThere are many sections on scope to keep your code organized\nDecorators will be covered in depth\nFile handling will be used\n\n\nUsing that knowledge, you will learn how to create:\na responsive weather app\nthe ios Stopwatch and Calculator\na paint app\na stock market tracker\na maps viewer\na bmi app\na snake game\nan image editor\na qr code generator\n\n\nPython is one of the most desirable features on the job market and can get you into well-paying and interesting jobs. It is also a very easy to learn language that you can use as a starting point in your coding career. I am looking forward to seeing you in the course!",
      "target_audience": [
        "Absolute beginners",
        "People who know Python who want to learn GUI development"
      ]
    },
    {
      "title": "C# Object-Oriented Programming Basics",
      "url": "https://www.udemy.com/course/csharp-intermediate-oop/",
      "bio": "C# | C# Programming | Design Pattern Essentials | Object Oriented Programming",
      "objectives": [
        "Understanding C# Class, which includes basics of OOP, C# Objects, and Abstraction.",
        "Understanding C# Class Fields, which includes constant fields, readonly fields, static fields, access modifiers, and value/reference types.",
        "Understanding C# Class Methods that cover constructors, destructors, properties, encapsulation, method overloading, and static classes.",
        "Understanding C# Interfaces, which includes default interface implementation, properties, and static members in interfaces.",
        "Understanding C# Inheritance that explains casting, access modifiers, and multiple inheritances in C#.",
        "Understanding C# Polymorphism, which includes method hiding, method overriding, and abstract class.",
        "Lots of activities such as quizzes, assignments, and coding exercises to apply your learnings."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of C# is required."
      ],
      "description": "OOP, or object-oriented programming, makes it easy to get started. OOP is fundamental in any programming language, including C# and .NET. The usage of .NET Core has been steadily increasing recently with the popularity of cloud computing. Companies such as Citigroup, Home Depot, Dell, and Ford use C# as the language for their software development. In this course, you will learn OOP in .NET Core with a hands-on approach.\n\n\nInstructor Bio:\nPraveen is an experienced product designer and developer who has worked for 10 years at Honeywell and 7 years at Bosch. He specializes in building products on the .NET stack and cloud platforms. He has a patent and has presented two papers. Additionally, he has published 20+ Courses and 50+ Hands-On Labs on Kubernetes, Docker & Azure, teaching thousands of students on various cloud-native topics.\n\n\nTopics Covered In This Course:\nUnderstanding C# Class includes basics of OOP, C# Objects, and Abstraction.\nUnderstanding C# Class Fields includes constant, readonly, static, access modifiers, and value/reference types.\nUnderstanding C# Class Methods that cover constructors, destructors, properties, encapsulation, method overloading, and static classes.\nUnderstanding C# Interfaces, which includes default interface implementation, properties, and static members in interfaces.\nUnderstanding C# Inheritance that explains casting, access modifiers, and multiple inheritances in C#.\nUnderstanding C# Polymorphism includes method hiding, overriding, and abstract class.\nLots of activities such as quizzes, assignments, and coding exercises to apply your learnings.\n\n\nAt The End Of This Course:\nYou will understand the Object-Oriented Programming (OOP) concepts in the C# programming language.\nYou will be more confident in learning advanced C# programming concepts next.\n\n\nEnroll now to get started.",
      "target_audience": [
        "Beginners in C#, who know the basics of C# and want to take their next step towards learning OOP concepts in C# with .NET Core."
      ]
    },
    {
      "title": "Short Programming intro in Python and C++",
      "url": "https://www.udemy.com/course/basic-python-cpp/",
      "bio": "Enough basics to decide your next deep course!",
      "objectives": [
        "Introduction to Python 3: Basic Fundamentals",
        "Introduction to C++: Basic Fundamentals",
        "Ability to decide which language to focus on"
      ],
      "course_content": {
        "Python Getting Started": [
          "Why Programming? Python?",
          "Let's Code in Python",
          "Resources and Students Community",
          "Important Note"
        ],
        "Python Installation": [
          "Overview",
          "Installing Python on Linux",
          "Installing Python on Windows and Mac",
          "Installing PyCharm Windows and Mac",
          "Installing PyCharm on Linux",
          "Creating Projects using PyCharm"
        ],
        "Python Printing": [
          "Printing",
          "Syntax Errors",
          "Indentation Error",
          "Quiz",
          "Printing Homework",
          "Printing Homework - Solution p1",
          "Printing Homework - Solution p2",
          "Printing Homework - Solution p3",
          "Printing Homework - Solution p4 p5"
        ],
        "Python Data Types and Variables": [
          "Data types and variables",
          "Variables Assignments",
          "Quiz",
          "Identifier",
          "Dynamic Typing",
          "Quiz",
          "String Manipulation",
          "Function",
          "Reading",
          "Quiz",
          "Variables Homework 1",
          "Variables Homework 1 - Solution p1 p2",
          "Variables Homework 1 - Solution p3 p4",
          "Name Binding"
        ],
        "Python Operators": [
          "Arithmetic Operators",
          "Assignment Operator",
          "Operators Precedence",
          "Operators Associativity",
          "Relational Operators",
          "Truth Table",
          "Logical Operators",
          "Membership Operators",
          "Modulus Operator",
          "Division and Modulus Homework 1 - 3 Easy Challenges",
          "Division and Modulus Homework 1 - Solutions"
        ],
        "Python Selection": [
          "Selection 1",
          "Demo and Indentation",
          "Selection 2",
          "Selection Practice 1",
          "Selection Practice 2",
          "Selection Homework 1 - 4 Easy Challenges",
          "Selection Homework 1 - p1 p2",
          "Selection Homework 1 - p3 p4"
        ],
        "Python Loops": [
          "While Loops 1",
          "While Loops 2",
          "While Loops Practice 1",
          "While Loops Practice 2",
          "While Nested loops",
          "While Loops Homework 1 - 4 Easy Challenges",
          "While Loops Homework 1 - Solution",
          "While Loops Homework 2 - Application",
          "While Loops Homework 2 - Application Solution",
          "For Loops 1",
          "For Loops 2",
          "For Loops Practice - Medium to Hard"
        ],
        "Python Debugging": [
          "Debugger",
          "Debugging with PyCharm IDE"
        ],
        "Python Functions": [
          "Define Function",
          "Return and Default",
          "Function Calling Function + Debugging",
          "Enumerate and Override",
          "Local and Global Scope",
          "Name Binding",
          "Positional or Keyword Parameter",
          "Docstring"
        ],
        "C++ Getting Started": [
          "Why C++?",
          "Let’s code"
        ]
      },
      "requirements": [
        "Passion with building things!",
        "Access to a computer."
      ],
      "description": "The goal of this course is to provide a starting point to programming in 2 popular programming languages.\n\n\nCurriculum:\nThe course consists of 2 independent sub-courses\nSelect whatever start.\nCovered Basics: data types, variables, operators, selection, and while loops.\nNo intention to go far from that. The goal is to see these concepts in 2 languages.\nBy the end of the journey, you will have\nFair understanding of the very basics of the 2 languages\nAbility to decide which language to focus on it more.\n\n\nVisit my profile and select the course of interest to dive deeper. I have deeper courses in more than a language\nMastering 4 critical skills series from my profile will aim to master the 4 most important skills for a programmer\nProgramming skills\nProblem-solving skills: rarely covered by other courses\nProject building skills: partially covered by other courses\nDesign skills: rarely covered by other courses\n7+ times practice & homework compare to other courses + 6 projects\nMy other courses avoid the common complaints such as\nLimited topics coverage.\nOutdated syntax.\nUnnecessary long videos with repetitions.\nToo much time to explain basic concepts.\nA sudden jump in the level. I can't cope with the content.\nAssumptions of previous knowledge to understand some of the concepts.\nBuilding over concepts that were not mastered through practice or homework.\nThe same examples are used over and over.\nSeveral consecutive lectures without practice or homework to master the concepts.\nAwesome knowledge, almost zero skills.\nVery little practice or homework.\nGood homework in the first half and very weak in the remaining.\nMany homework without solutions.\nOnly one project.\nSmall-size project.\nLong but tedious project.\nThe project doesn't help enforce the concepts.\nProject source code is not provided. I needed to compare and learn.\nMoving to Datastructures or Algorithms course was not easy. Weak problem-solving skills.\nAfter the course, I am still stuck and can't do even simple projects. Weak project-building skills.\nThe course taught OOP syntax and concepts nicely, but OOD skills are not built. Weak design-skills.\nAnd more!\nEnjoy learning programming in a smooth way :)",
      "target_audience": [
        "Whoever curious about programming"
      ]
    },
    {
      "title": "Python Development and Python Programming Fundamentals",
      "url": "https://www.udemy.com/course/python-development-and-python-programming-fundamentals/",
      "bio": "Introduction / Junior Level: Python Development and Python Programming Fundamentals course by MTF Institute",
      "objectives": [
        "Python Development Essentials",
        "Interpreters and IDEs",
        "Setting up Anaconda",
        "Web-based Alternatives to IDEs",
        "Navigating the IDE",
        "Let's Greet the World"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Welcome to MTF",
          "Onboarding to the learning process"
        ],
        "Module 1: Introduction to Python": [
          "Welcome to the section",
          "What is Python",
          "Brief history of Python",
          "Applications of Python",
          "Python, R and Julia - how do they compare",
          "Advantages of Python",
          "Disadvantages of Python",
          "Section conclusion"
        ],
        "Module 2: Getting Started with Python": [
          "Getting started with Python Welcome to the section!",
          "Code, interpreters and IDEs",
          "Setting up Anaconda",
          "Web-based alternatives to IDEs",
          "Navigating the IDE",
          "Code literacy",
          "Let's greet the world",
          "Section conclusion"
        ],
        "Module 3: Variables and Data Types": [
          "Welcome to the section!",
          "What is a variable",
          "An overview of different data types",
          "Numeric Data Types",
          "Boolean Data",
          "input() function",
          "String as a data type",
          "Constants",
          "Section conclusion"
        ],
        "Next Steps": [
          "Congratulations with finishing from MTF",
          "Bonus Section: Next Steps"
        ]
      },
      "requirements": [
        "For a better learning experience, we suggest you to use a laptop / mobile phone / pen and paper for taking notes, highlighting important points, and making summaries to reinforce your learning."
      ],
      "description": "Welcome to course: Python Development and Python Programming Fundamentals by MTF Institute\nCourse for Introduction / Junior Level Developers, for people who want to begin path of learning of python.\n\n\nProgram provided by MTF Institute of Management, Technology and Finance\nMTF is the global educational and research institute with HQ at Lisbon, Portugal, focused on business & professional hybrid (on-campus and online) education at areas: Business & Administration, Science & Technology, Banking & Finance.\nMTF R&D center focused on research activities at areas: Artificial Intelligence, Machine Learning, Data Science, Big Data, WEB3, Blockchain, Cryptocurrency & Digital Assets, Metaverses, Digital Transformation, Fintech, Electronic Commerce, Internet of Things.\nMTF is the official partner of: IBM, Intel, Microsoft, member of the Portuguese Chamber of Commerce and Industry.\nMTF is present in 208 countries and has been chosen by more than 400 000 students.\n\n\n\n\nCourse Author:\nStanisław Marek Halkiewicz\nI am a seasoned educator specializing in the domains of econometrics, statistics, statistical programming, and mathematics, boasting an extensive track record exceeding three years. Notably, I have imparted my expertise to students hailing from prestigious global universities, solidifying my standing as a sought-after tutor. I have made significant contributions in research endeavors spanning statistics, econometrics, and statistical programming. Furthermore, my professional trajectory encompasses a diverse spectrum, ranging from project management to business intelligence and Data Science.\n\n\nCourse Description:\nIntroduction to Python Development is a course designed to introduce individuals to the world of Python programming. Python has gained immense popularity in recent years for its simplicity, versatility, and readability. This course is ideal for beginners who are new to programming.\n\n\nImportance For Companies:\nVersatility: Python is versatile and can be used for a wide range of applications, from web development and data analysis to artificial intelligence and automation. Companies can benefit from having Python developers who can adapt to various projects.\n\n\nProductivity: Python's clean and readable syntax allows developers to write code more quickly and efficiently. This results in faster project development and reduced costs for companies.\n\n\nLarge Ecosystem: Python has a vast ecosystem of libraries and frameworks, making it easier for companies to find solutions to their specific needs. This reduces the need for reinventing the wheel.\n\n\nData Analysis and AI: Python is a go-to language for data analysis and machine learning. Companies can leverage Python to extract valuable insights from data and build AI-driven applications.\n\n\nCommunity and Support: Python has a strong and active community of developers. Companies can tap into this community for support, resources, and talent recruitment.\n\n\nImportance For Developers:\n\n\nCareer Opportunities: Learning Python opens up a wide range of career opportunities in various industries. Python developers are in high demand, and their skills are transferable to different domains.\n\n\nDiversity of Roles: Python developers can work in roles such as web developer, data analyst, data scientist, machine learning engineer, and more. This diversity allows developers to explore different areas of interest.\n\n\nEase of Learning: Python's straightforward syntax makes it an ideal choice for beginners in programming. It's also accessible to experienced developers looking to add another language to their skill set.\n\n\nContinuous Growth: Python is constantly evolving, with new libraries and frameworks being developed. This means that developers who invest in Python education can continue to grow their skill set over time.\n\n\nRemote Work Opportunities: Python development often allows for remote work, providing developers with flexibility in their careers.\n\n\nThe course \"Introduction to Python Development\" provides a foundation for individuals looking to embark on a career in programming or expand their skill set. Python's significance in the tech industry, its versatility, and its demand in the job market make it a valuable asset for both companies and developers aiming to excel in today's technology-driven world.",
      "target_audience": [
        "Introduction to Python Development is a course designed to introduce individuals to the world of Python programming.",
        "The course \"Introduction to Python Development\" provides a foundation for individuals looking to embark on a career in programming or expand their skill set. Python's significance in the tech industry, its versatility, and its demand in the job market make it a valuable asset for both companies and developers aiming to excel in today's technology-driven world."
      ]
    },
    {
      "title": "Hands On Python Data Science - Data Science Bootcamp",
      "url": "https://www.udemy.com/course/hands-on-python-data-science-data-science-bootcamp/",
      "bio": "Master Python for Data Science with Real-World Applications: Dive Deep into Data Analysis, Machine Learning",
      "objectives": [
        "A strong foundation in Python programming concepts, including variables, data types, control flow, and functions.",
        "Effective use of various data structures, such as lists, tuples, dictionaries, and sets.",
        "Proficiency in the NumPy library for efficient numerical computations and array manipulation.",
        "Skillful application of the Pandas library for data cleaning, filtering, grouping, and aggregation.",
        "Exposure to fundamental machine learning concepts and algorithms using Scikit-learn."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "An Introduction to Python for Data Science",
          "Getting Started",
          "Creating your Jupyter Notebook",
          "Cell Types and it's usage",
          "Learning about Variables- Part 1",
          "Strings, Integers, Floats and Booleans",
          "Lists and Tuples",
          "Learning about Sets",
          "A Dictionary",
          "The CRUD for Lists",
          "The CRUD for Dictionary",
          "If, Else and Elif Statement",
          "IN Statement",
          "Understanding about the For Loop",
          "About Continue, Break and Pass",
          "About the While Statement",
          "How to Loop Through Dictionaries",
          "The List Comprehensions",
          "Defining a Function",
          "Understanding Positional Arguments",
          "Having Multiple Positional Arguments",
          "Class Project 1",
          "Class Project 2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "This comprehensive course is designed for both beginners and those looking to sharpen their data science skills. Through a step-by-step approach, you’ll learn to harness Python’s powerful libraries like Pandas, NumPy, Matplotlib, and Scikit-Learn, enabling you to analyze, visualize, and draw insights from data like a pro.\nWhat You'll Learn:\nPython Fundamentals for Data Science: Master the essentials of Python programming and understand how to apply them in data science.\nData Analysis & Manipulation: Explore how to clean, filter, and manipulate large datasets using Pandas and NumPy.\nData Visualization: Create stunning visualizations using Matplotlib and Seaborn to communicate insights effectively.\nMachine Learning Made Easy: Dive into key algorithms such as regression, classification, and clustering using Scikit-Learn, and apply them to real-world projects.\nReal-World Projects: Work on hands-on projects, including data analysis and predictive modeling, that will give you a portfolio to showcase your skills.\nWhy Enroll in This Course?\nHands-On Learning: Get practical experience with coding exercises, quizzes, and real-world projects.\nIndustry-Relevant Skills: Acquire the tools and techniques used by top data scientists in the industry.\nGuided Support: Learn with easy-to-follow lessons, and get answers to your questions through interactive Q&A.\nLifetime Access: Revisit lessons anytime, anywhere, and continue your learning journey at your own pace.\nWhether you’re an aspiring data scientist, analyst, or someone looking to make data-driven decisions, this bootcamp is your gateway to a successful data science career. Enroll now and transform raw data into actionable insights!",
      "target_audience": [
        "Individuals with no prior programming experience but a desire to learn data science."
      ]
    },
    {
      "title": "x86 64-bit Assembly Language: Step-by-Step Tutorial",
      "url": "https://www.udemy.com/course/x86-64-bit-assembly-language-step-by-step-tutorial/",
      "bio": "Learn x86-64 Assembly Language Programming From Scratch",
      "objectives": [
        "The general computer architecture",
        "Understand how computer works",
        "Data representation including unsigned and signed numbers, characters.",
        "Master the x86-64 core instructions",
        "How to write assembly programs",
        "Understand the differences between x86-32 and x86-64",
        "How to debug programs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Computer Architecture": [
          "Introduction to Computer Architecture",
          "Introduction to Processor Mode"
        ],
        "Data Representation": [
          "Number Systems",
          "Representing Integers",
          "Number Systems",
          "ASCII Strings",
          "ASCII Strings Quiz"
        ],
        "Assembly Language Basics": [
          "Install SASM",
          "Assembling and Linking Basics",
          "First Program",
          "Debugging",
          "Defining Variables",
          "Defining Variables",
          "Constant"
        ],
        "x86-64 Assembly Language Notes": [
          "x86-64 Assembly Language Notes",
          "x86-64 Assembly Language Notes"
        ],
        "Data Transfer and Basic Arithmetic Instructions": [
          "Mov Instruction",
          "Mov Instruction",
          "Xchg Instruction",
          "Xchg Instruction",
          "A Simple Example",
          "Inc and Dec Instructions",
          "Neg Instruction",
          "Inc Dec Neg Instructions",
          "Add and Sub Instructions",
          "Add and Sub Instructions",
          "Add and Sub Instructions Example"
        ],
        "Flags": [
          "Flags Register",
          "Carry Flag",
          "Overflow Flag",
          "Sign Flag",
          "Zero Flag",
          "Flags Register"
        ],
        "Bitwise Instructions": [
          "And Instruction",
          "And Instruction",
          "Or Instruction",
          "Or Instruction",
          "And and Or Instructions Example",
          "Xor Instruction",
          "Xor Instruction",
          "Flags Example",
          "Not Instruction",
          "Not Instruction"
        ],
        "Branch instructions": [
          "Introduction to Branching",
          "Jmp Instruction",
          "Test Instruction",
          "Conditional Branching Part 1",
          "Conditional Branching Part 2",
          "Conditional Branching Part 3",
          "Conditional Branching 1",
          "Branching Example 1",
          "Branching Example 2",
          "Branching Example 3",
          "Conditional Branching 2"
        ],
        "Array and Addressing Modes": [
          "Introduction to Array",
          "Immediate Register and Direct Addressing",
          "Indirect Addressing",
          "Endianness",
          "Endianness",
          "Lea Instruction",
          "Lea Instruction",
          "Rip-Relative Addressing"
        ]
      },
      "requirements": [
        "Basic knowledge of one high-level language is recommended",
        "All projects are created in SASM IDE on Windows"
      ],
      "description": "Welcome to x86 64-bit Assembly Language from x-BIT Development.\nThis course is intended to teach you x86 64-bit assembly programming. It covers basics about computer architecture, data representation and low-level programming. In this course, we will take you through the step-by-step tutorials and teach you how to write assembly programs for x86 processors.\nEach section contains:\nengaging videos\ndownloadable resources\nquizzes to test what you learned\n\n\nIn this course you will learn:\nx86 assembly language from scratch\nThe general computer architecture\nData representation and counting systems\nThe fundamentals of the assembly language\nx86-64 core instructions\nx64 calling conventions\nHow to write assembly programs on x86-64 architecture\nHow to debug programs at the machine level",
      "target_audience": [
        "Beginners who want to learn x86 64-bit assembly language",
        "People who learned 8086 or x86 32-bit assembly language and want to switch to x86 64-bit assembly language"
      ]
    },
    {
      "title": "Python and Ruby programming Complete step-by-step Tutorial",
      "url": "https://www.udemy.com/course/python-and-ruby-learn-python-and-ruby-programming/",
      "bio": "Learn complete python and ruby programming languages from scratch. Also learn GUI Programming.",
      "objectives": [
        "Learn the core basic fundamental of python and ruby",
        "Write your own Python and ruby code according to the requirement",
        "Get strong knowledge on python and ruby basics and advanced topics",
        "Understand any python and ruby code and make modification"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of programming language",
        "No prior programming knowledge is required",
        "Software to run programs, How to install is explained in the course",
        "Only you need is the passion to learn"
      ],
      "description": "Note: Price will hike soon, this is just introductory price, So join now and get the benefit.\nThis course teaches using latest versions in python and ruby. This is 2 in 1 course.\nFirst you will learn basics in python programming, then learn some advanced topics in python like oop in python and each topic is explained with practical examples to understand the concepts better, After completing the python basics you will learn GUI in python which stands for graphical user interface used to create widows, buttons, menubar and many more.\nOnce you complete python you will learn complete ruby programming from basic to advanced topics.\nThis is a complete python and ruby programming tutorial for beginners. All the topics from basic to advanced are covered with examples to understand the concepts better. Once you complete the course you will be able to write complex code using python and ruby .I am sure you are going to love the python and ruby than any other programming language for rest of your life.\n\nThis tutorial has been designed for software programmers with a need to understand the Pythons and Ruby programming language starting from scratch. This tutorial will give you enough understanding on Python and Ruby programming language from where you can take yourself to a higher level of expertise.\n\nSo let's start learning",
      "target_audience": [
        "Who are interested in learning python programming",
        "Who are interested in learning ruby programming",
        "who wants to become programmer"
      ]
    },
    {
      "title": "Build an AutoGPT Code Writing AI Tool With Rust and GPT-4",
      "url": "https://www.udemy.com/course/autogpt-gpt4-code-writing-ai/",
      "bio": "Learn Rust Whilst Taking ChatGPT to the Extreme In Creating an Automated GPT that Builds and Tests Code for You",
      "objectives": [
        "Master the Rust programming language from zero to hero",
        "Understand how to leverage GPT-4 (ChatGPT) to build your own AutoGPT using Rust",
        "Understand how to build AI functions for structuring exact desired responses from LLMs (large-language-models)",
        "Build your first web server using the Actix Web framework in Rust",
        "Build an AutoGPT that not only writes any code you like, but tests, improves and re-writes where necessary"
      ],
      "course_content": {},
      "requirements": [
        "You must understand basic programming concepts and be able to program in another language",
        "Basic programming concepts will not be covered in this course. You will need to know about for loops, if statements, functions etc",
        "You must have access to OpenAI and the GPT-4 API (see inside course for how to get access)"
      ],
      "description": "Develop a an automated ChatGPT agent which not only writes code, but tests and re-write code for you. In fact, you can request your agent to do just about anything.\nBy going through this course, you will not only learn and master Rust from A-Z, but you will also have extensive knowledge in how to build your very own AutoGPT.\nThe name of the AutoGPT we build together will be Auto-Gippity.\nAuto-Gippity will simply be given a task, which it will break down and delegate to other agents to complete. Each agent will be responsible for testing its own output.\nOur test piece will be to build an agent that writes a web server given a template. It will write the code in Rust. Not only that, but we will write the agent, that writes Rust code...in Rust. Fantastic. What a time to be a developer.\nAutoGPTs will only continue to become extremely relevant and highly sought after and combining these with the worlds favourite programming language, Rust, means that we can build an application which is blazingly fast, memory-safe, modern and robust.\nRight now, there is a window of opportunity to learn this fantastic and uncommon technology before it takes over in software engineering.\nJust think, you could build an AutoGPT that say, develops full stack SAAS websites end-to-end. With technologies like GPT-4 and soon beyond, such agents will only continue to improve in their performance.\nCompanies are looking for developers who can build such tools and SAAS startups have a window to be first. If you are curious as to how you can connect new AI technologies to change the world then THIS is the course for you.\nYou will learn:\n\n\nHow to work with the Open AI API and the GPT-4 API using Rust\nHow to master rust from A to Z, progressing from beginner, to intermediate, to advanced and beyond\nHow to build AI functions (special functions that extract a desired response from large-language-models)\nHow to develop a web server template (including an introduction to web servers) using Actix Web\nHow to build an Automated GPT agent (Auto-Gippity) which writes code, that executes and tests code. If the code is wrong, it will simply re-write it and test again\n\n\nWe are truly excited to see what you develop, so make sure you share your application with the world.\n\n\nSee you in class!\nShaun",
      "target_audience": [
        "Enthusiastic or intermediate programmers who want to learn Rust",
        "Programmers who want to build their own blazingly fast and memory-safe AutoGPT models",
        "Startups who want to give their developers a blue print to building cutting-edge AI solutions"
      ]
    },
    {
      "title": "Data Structures and Algorithms in java",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-using-java/",
      "bio": "Data Structures and algorithms: Binary Search Tree (BST), Linked List, Stack, Queue, Array, Selection and Insertion Sort",
      "objectives": [
        "Learn Linear & Non-Linear Data Structures plus Algorithms",
        "Coding & strong concepts regarding data structures and algorithms",
        "Topics like Linked List, Stack, Queue, Array",
        "Coding & explanation of Algorithms like Selection sort, Insertion sort that are of core importance.",
        "Tree and Binary Search Tree (BST) in Non-Linear Data Structures"
      ],
      "course_content": {
        "Data Structures": [
          "Introduction (Linear and Non-Linear DataStructures)"
        ],
        "Linked Lists": [
          "Linked List Explanation",
          "node",
          "Making Node class",
          "Inserting in Linked List",
          "Insert",
          "Insert values",
          "print",
          "Print Linked List",
          "delete",
          "Delete from Linked List",
          "Delete values",
          "Search Explanation",
          "Search"
        ],
        "Array": [
          "Array Explanation",
          "Array Code"
        ],
        "Stack (Linear Data Structure)": [
          "Stack Explanation",
          "Stack Code"
        ],
        "Queue": [
          "Queue Explanation",
          "Queue Class",
          "Enqueue",
          "Traversing a Queue Explanation",
          "Dequeue Explanation"
        ],
        "Trees": [
          "Tree",
          "Binary Search Tree",
          "Node Explanation",
          "Binary Search Tree Node",
          "Inserting in BST (Binary Search Tree) Explanation",
          "Insert in BST",
          "Insert values",
          "Preorder traversal Explanation",
          "Preorder traversal",
          "Inorder traversal Explanation",
          "Inorder traversal",
          "Postorder traversal Explanation",
          "Postorder traversal"
        ],
        "Delete from BST": [
          "Min value node",
          "Min value Node Code",
          "Delete from BST Explanation",
          "Delete"
        ],
        "Algorithms": [
          "Selection Sort Explanation",
          "Selection Sort",
          "Insertion Sort Explanation",
          "Insertion Sort"
        ]
      },
      "requirements": [
        "Requirements for this course are basic coding understanding like loops and if else conditionals."
      ],
      "description": "This course data Structures and Algorithms using java includes explanation of various data structures with coding examples, provided with detail explanation of code side by side with concept building.\nMost important Data Structures like\n\nLinked List, Binary Search Tree(BST), stack, Queue are explained in detail with concepts made easy to understand.\n\nAlgorithms like\nSelection Sort, Insertion Sort are part of this course with visual explanations.\n\nThis course is for students who want good understanding of data structures and algorithms and want to understand code.\n\nBy taking this course students will be able to use these skills to write or understand data structures in other languages as well, because concepts build from this course are very generic regarding Data structures and Algorithms.\nTopics like BST and Linked List are in very detail so that you can have good grip over them and they are of core importance.\n\n\nThere are animations to help you understand topics, so beside code visual explanations help a lot.\nTopics like BST and Linked List need extra care to understand well.\nSimilarly Selection Sort, Insertion Sort are explained in code and visually.\n\n\nSo by taking this course you will be good in a lot of topics in Data structures.",
      "target_audience": [
        "Students who want to learn data structures and algorithms should take this course.",
        "Who wants to make strong concepts in Data Structures",
        "Learn Algorithms like selection sort and insertion sort"
      ]
    },
    {
      "title": "Beginning Scala Programming",
      "url": "https://www.udemy.com/course/beginning-scala-programming/",
      "bio": "Gain a solid understanding of programming with Scala - A course for beginners",
      "objectives": [
        "Gain a solid understanding of programming in Scala",
        "A beginners course that teaches the fundamentals of the Scala programming language"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Overview And About The Author",
          "0102 Tools - Eclipse With Scala Plug-In",
          "0103 How To Access Your Working Files"
        ],
        "Language Basics": [
          "0201 Nature Of Scala And Our First Worksheet",
          "0202 Overall Type Hierarchy",
          "0203 Memory Model, No Primitives, Val Versus Var And Tuples",
          "0204 If Expressions",
          "0205 Match Expressions",
          "0206 Recursion, Tail Recursion, And Nesting Functions - Part 1",
          "0207 Recursion, Tail Recursion, And Nesting Functions - Part 2",
          "0208 Recursion, Tail Recursion, And Nesting Functions - Part 3",
          "0209 Collections Overview",
          "0210 Sequences - Array, List, Vector, And Buffer - Part 1",
          "0211 Sequences - Array, List, Vector, And Buffer - Part 2",
          "0212 Sequences - Array, List, Vector, And Buffer - Part 3",
          "0213 Looking At The API - Implicit Conversions",
          "0214 Significant Regular Methods - Part 1",
          "0215 Significant Regular Methods - Part 2",
          "0216 Significant Regular Methods - Part 3",
          "0217 Higher-Order Methods And Lambda Expressions - Part 1",
          "0218 Higher-Order Methods And Lambda Expressions - Part 2",
          "0219 Find And Option",
          "0220 Pattern Matching And Case Classes",
          "0221 Iterators And Scala - Part 1",
          "0222 Iterators And Scala - Part 2",
          "0223 Sets And Maps",
          "0224 Loops - While, Do-While, And Basics Of For",
          "0225 For Comprehensions",
          "0226 Partial Functions",
          "0227 Syntactic Sugar"
        ],
        "Object-Oriented Scala And Our MUD Project": [
          "0301 Building An Application",
          "0302 Imperative Text Adventure - Part 1",
          "0303 Imperative Text Adventure - Part 2",
          "0304 Functional Solution",
          "0305 Special Methods And Names - Part 1",
          "0306 Special Methods And Names - Part 2",
          "0307 Implicit Conversions And Arguments",
          "0308 Linearization Of Trait Methods",
          "0309 Self Types"
        ],
        "Unit Testing": [
          "0401 Using JUnit",
          "0402 Scala Test"
        ],
        "XML": [
          "0501 Reading And Parsing XML",
          "0502 Building And Writing XML"
        ],
        "Text Processing": [
          "0601 Regular Expressions",
          "0602 Regular Expressions As Patterns",
          "0603 Parser Combinators - Part 1",
          "0604 Parser Combinators - Part 2",
          "0605 Text Adventure Parser"
        ],
        "Parallelism And Actors": [
          "0701 Parallelism In Scala",
          "0702 Actor Parallelism",
          "0703 Simple Akka Examples - Part 1",
          "0704 Simple Akka Examples - Part 2",
          "0705 Ask Pattern And Futures",
          "0706 The Actor Hierarchy",
          "0707 The Actor Lifecycle",
          "0708 Routers",
          "0709 Actor Based MUD"
        ],
        "Conclusion": [
          "0801 Wrap-Up"
        ]
      },
      "requirements": [
        "A basic understanding of programming"
      ],
      "description": "This Scala training course from Infinite Skills teaches you everything you need to know about the Scala programming language. This course is designed for users that already have some programming experience.\n\nYou will start by learning the language basics of Scala, including sequences, recursion, and nesting functions. The course will then teach you about the object-oriented aspects of Scala, linearization of trait methods, and building and writing with XML. This video tutorial also covers text processing, parallelism and actors, and libraries for unit testing.\n\nOnce you have completed this computer based training course, you will have developed a solid working knowledge of the Scala programming language, and be able to start your own Scala-based project. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Developers and programmers"
      ]
    },
    {
      "title": "Python Hands-On 46 Hours, 210 Exercises, 5 Projects, 2 Exams",
      "url": "https://www.udemy.com/course/hands-on-python/",
      "bio": "Learn Python programming from Beginner to Expert level with Projects, Coding Exercises, Quizzes, Assignments and Exams.",
      "objectives": [
        "Learn & Master Programming Fundamentals, Coding Algorithms and Computer Science Concepts.",
        "Go from Beginner to Expert in Python with hands-on approach.",
        "Do exercises on all fundamental topics of Python with 17 Quizzes and 170 Coding Exercises.",
        "Build 5 Real-World Project with Python and do 5 Assignments related to these projects.",
        "Take 2 Exams on Python; Midterm and Final Exam with 20 questions each.",
        "Learn Python Modules and Packages and how to use them.",
        "Build Python applications with Anaconda and PyCharm and master them.",
        "Build a GUI application with tkinter.",
        "Learn all Python you need for Machine Learning, Deep Learning, Data Science and Application Development.",
        "Gain solid and profound Python Programming skills needed for a Python career."
      ],
      "course_content": {
        "Overview": [
          "Introduction",
          "Contents",
          "Why Python?",
          "You & This Course"
        ],
        "Installations": [
          "Notion",
          "Anaconda",
          "Jupyter Lab Password Issue",
          "Jupyter Notebook Basics",
          "Python Virtual Environments",
          "Open Jupyter Lab From Anaconda Prompt"
        ],
        "First Program": [
          "Hello World",
          "Arithmetic Operations",
          "Values and Types",
          "QUIZ - First Program",
          "QUIZ - First Program - Solutions",
          "True/False - First Program",
          "Online Coding - First Program"
        ],
        "Variables": [
          "What is a Variable?",
          "True/False - What is a Variable?",
          "Variable Names",
          "True/False - Variable Names",
          "Python Data Types",
          "True/False - Python Data Types",
          "Python Comments",
          "True/False - Python Comments",
          "Numeric Operations",
          "True/False - Numeric Operations",
          "String Operations",
          "True/False - String Operations",
          "Keywords",
          "True/False - Keywords",
          "QUIZ - Variables",
          "QUIZ - Variables - Solutions",
          "Online Coding - Variables"
        ],
        "Functions I": [
          "What is a Function?",
          "True/False - What is a Function?",
          "Math Functions",
          "True/False - Math Functions",
          "Defining Functions - Part 1",
          "Defining Functions - Part 2",
          "True/False - Defining Functions",
          "Parameters (Arguments)",
          "True/False - Parameters (Arguments)",
          "Scope",
          "True/False - Scope",
          "Return",
          "True/False - Return",
          "Docstring",
          "True/False - Docstring",
          "QUIZ - Functions I",
          "QUIZ - Functions I - Solutions - 1",
          "QUIZ - Functions I - Solutions - 2",
          "Online Coding - Functions I"
        ],
        "Project 1 - Functions": [
          "Project - Turtle Module - Part 1",
          "Project - Turtle Module - Part 2",
          "Project - Turtle Module - Part 3",
          "Project - Turtle Module - Part 4"
        ],
        "Assignment 1 - Functions": [
          "Assignment 1 - Functions",
          "Turtle Module"
        ],
        "Conditional Statements": [
          "What is a Conditional Statement?",
          "True/False - What is a Conditional Statement?",
          "if",
          "True/False - If",
          "else",
          "True/False - else",
          "elif - Part 1",
          "elif - Part 2",
          "True/False - elif",
          "Nested Conditionals",
          "True/False - Nested Conditionals",
          "Recursion",
          "True/False - Recursion",
          "QUIZ - Conditional Statements",
          "QUIZ - Conditionals - Solutions - 1",
          "QUIZ - Conditionals - Solutions - 2",
          "QUIZ - Conditionals - Solutions - 3",
          "QUIZ - Conditionals - Solutions - 4"
        ],
        "Functions II": [
          "Return Value",
          "Incremental Development",
          "More Compositions",
          "Functions are First-Class Citizens",
          "Unknown Parameters: *args",
          "lambda Function",
          "Functions Returning Functions",
          "Nested Functions",
          "Mutable vs. Immutable",
          "Pass by Value Pass by Reference",
          "QUIZ - Functions II",
          "QUIZ - Functions II - Solutions - 1",
          "QUIZ - Functions II - Solutions - 2",
          "QUIZ - Functions II - Solutions - 3"
        ],
        "Loops": [
          "While Loop",
          "For Loop",
          "Loop Over Strings with For",
          "len",
          "enumerate",
          "index Example",
          "Nested Loops",
          "break",
          "continue",
          "For-Else",
          "QUIZ - Loops",
          "QUIZ - Loops - Solutions - 1",
          "QUIZ - Loops - Solutions - 2",
          "QUIZ - Loops - Solutions - 3"
        ]
      },
      "requirements": [
        "The first thing you need is a computer and an internet connection.",
        "Second, you need to be prepared for doing hundreds of Python coding exercises :)"
      ],
      "description": "Python Hands-On Course, will cover Python from Beginner to Expert level. We will start from absolute zero, ‘Hello World!’, and end up with OOP (Object Oriented Programming). This course is an in-depth Python introduction with 46 hours duration, including both the theory and practice.\nTheory: In each topic, we will cover all the Theoretical Details with example coding.\nTests: We will have Test Questions at the end of sub-topics.\nCoding Exercises: We will have Coding Exercise (Quiz) with 10 Questions. You will try to solve these questions by your own, then we will solve them together.\nProjects: We will have 5 Projects during the course. These are Real-World Projects and you will see how Python concepts are being applied on real world problems.\nAssignments: After each project, you will have an Assignment. These assignments will let you build the project from scratch by your own.\nExams: During the course, we will have 2 exams: Midterm and Final Exam. These are multiple choice exams with 20 Questions each and a limited duration. You will be able to test your Python level via these pleasant exams.\nAll the Documents and Code Files: You will get all the documents and code files we cover during our course. These files will give you an in-depth resource for future use.\nPlease feel free to ask me any questions during the course or after the course. As you may see, this course was prepared with serious and meticulous effort.\nJoin us, if you want to learn & master Python by doing and real coding.",
      "target_audience": [
        "People who are new to computer science and programming.",
        "People who are new to Python.",
        "People who want to gain solid Python Skills.",
        "People who want to learn Python by doing Projects, Quizzes, Coding Exercises, Tests and Exams.",
        "People who want to learn Python for Machine Learning, Deep Learning, Data Science and Software Development.",
        "Anyone who wants to learn real Python."
      ]
    },
    {
      "title": "JavaScript AJAX PHP mySQL create a Dynamic web Form project",
      "url": "https://www.udemy.com/course/javascript-ajax-php-mysql-create-a-comment-submission-form/",
      "bio": "Use JavaScript and PHP to create a database submission AJAX form. Project using JSON AJAX PHP mySQL JavaScript together",
      "objectives": [
        "create dynamic web pages",
        "use AJAX to access server content",
        "use JavaScript to access the DOM",
        "update HTML content via JavaScript",
        "use jQUERY",
        "use bootstrap"
      ],
      "course_content": {
        "Introduction to course and how to use it": [
          "Introduction to building a JavaScript AJAX form that submits data to mySQL",
          "Dynamic Web Resources for Course Source Code and more"
        ],
        "JavaScript Essentials": [
          "JavaScript Introduction",
          "JavaSript Output to HTML document",
          "JavaScript Getting to know Variable Types",
          "JavaScript Constructing New Objects",
          "JavaScript Common Operators Explained",
          "JavaScript working with Conditions Switch if Else",
          "JavaScript Functions returns calculations Explained",
          "JavaScript Dynamic Event Listeners Change HTML",
          "What is the DOM Document Object Model",
          "Working withthe DOM eventlisteners",
          "JQuery saves time over JavaScript",
          "AJAX Server Response no Page Refresh",
          "Introduction to using JSON in JavaScript"
        ],
        "PHP essentials PHP connection to MySQL Databases": [
          "phpmyAdmin Create Table",
          "PHP database connection code",
          "PHP fetch MySQL querry data output as JSON",
          "PHP mySQL insert into database",
          "PHP validation error checking JSON output of array data",
          "PHP code for inserting review",
          "PHP orderby update"
        ],
        "Real World AJAX JSON and PHP Project": [
          "HTML form setup and Bootstrap Coding",
          "JavaScript Value Setup and Clear",
          "JavaScript AJAX call return JSON from PHP",
          "JavaScript AJAX to populate HTML from Database",
          "Project Summary Submit data to Database using AJAX"
        ],
        "Additional Resources": [
          "setting up localhost programming environment",
          "Setup Programming environment XAMPP",
          "XAMPP control panel",
          "phpmyadmin how to use it",
          "Bootstrap Introduction and setup"
        ],
        "Coding examples JavaScript HTML CSS": [
          "JavaScript Page input element code example"
        ]
      },
      "requirements": [
        "desire to learn web development",
        "HTML CSS JavaScript Expreince",
        "Basic Database experience"
      ],
      "description": "Learn how to make a DYNAMIC WEB FORM that uses AJAX to pass data to MySQL. Learn how to make your HTML page content interact with BACK-END code.\nLearn how to make JavaScript come to life, we show you all the building blocks you need to create your own JavaScript interactive applications.\nSource files included!!! No wasted time we get right to the point. Lots of extras to help you learn.\nThis course covers JavaScript and the fundamental code syntax. We show you the DOM and why it is essential for dynamic web content. Then jquery in order to save time and speed up the design process. JSON to transfer data between front and back end code. Then PHP constructor code to interact with MySQL to bring data in from a web form. No page refresh with AJAX form submission. Also use AJAX to pull data from PHP in JSON format to output it on your webpage. This is a course that brings it all together how it work together. An AJAX web form can be then used in many variations in order to build out your own dynamic AJAX pages. We also use bootstrap for styling. Learn how to output PHP array data as JSON so that it can be brought into JavaScript to placed within HTML.\nEverything you need to learn about creating Dynamic JavaScript web applications is provided within this course.\nno wasted time watching someone type\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions",
      "target_audience": [
        "web developers",
        "web designers",
        "anyone who wants to learn more about JavaScript",
        "anyone who wants to learn about AJAX",
        "anyone who wants to see JSON in Action",
        "Anyone who wants to build dynamic web pages",
        "Anyone who wants to build a database interactive web form"
      ]
    },
    {
      "title": "Java Programming Introduction for Beginners",
      "url": "https://www.udemy.com/course/java-intro-for-beginners/",
      "bio": "Learn how to develop Java applications. Covers modern Java development techniques from Java 8 to 25",
      "objectives": [
        "Learn Java fundamentals including conditionals, loops, methods, and arrays",
        "Stay current by learning key features and enhancements across Java versions 8 through 25",
        "Apply Object-Oriented Programming (OOP) techniques such as encapsulation, inheritance, polymorphism, and abstraction",
        "Leverage Data Structures, File I/O, Streams and powerful Lambda expressions",
        "Learn techniques to write clean, efficient, and maintainable code that adheres to modern Java standards and practices.",
        "Develop your Java code using modern development tools such as IntelliJ.",
        "Learn what is needed to become a DESIRABLE Java developer that companies WANT to hire.",
        "I am a RESPONSIVE INSTRUCTOR ... post your questions and I will RESPOND in 24 hours.",
        "Join an ACTIVE COMMUNITY of students that are already enrolled in this course!",
        "You can DOWNLOAD all source code and PDFs. Perfect for offline LEARNING and REVIEW."
      ],
      "course_content": {},
      "requirements": [
        "A desire to learn the Java Programming Langauge.",
        "No prior experience is needed. You will learn Java from scratch."
      ],
      "description": "Learn how to code and become a Software Engineer using the Java Programming Language.\nJava is one of the most popular and hottest programming languages used today.\nWhether you’re aiming to start a career in software development or enhance your current skills, mastering Java can open numerous doors for you in the tech industry.\nKnowing how to program in Java can get you a job or improve the one you have. Companies are constantly seeking skilled Java developers, and having expertise in Java is a highly valuable asset. Some of the highest-paying job postings are for developers with strong Java skills.\nThis course will help you quickly get up to speed with Java programming. I will demystify the language and help you understand the essential concepts to build applications using Java. You’ll start from the basics and gradually move to more advanced topics like Object-Oriented Programming (OOP), data structures, files I/O, streams, and lambdas.\nYou will also use modern development tools such as IntelliJ IDEA. All projects are using the best and most modern Java practices so you can become a pro and desired hire.\nDuring the course, you will build several Java applications. You will develop all of the code step by step, so you feel confident developing your own applications after completing this course!\nThe course also shows you how to handle topics like data structure, object oriented programming, exception handling, file I/O operations and lambdas. You will learn how to write robust code, manage errors effectively, and work with files and data streams.\n\n\n---\nIn this course, you will get:\n- Responsive Instructors: All questions answered within 24 hours\n- All source code is available for download\n- PDFs of all lectures are available for download\n- Professional video and audio recordings (check the free previews)\n\n\n---\n\n\nCompared to other Java courses\nThis course is up to date and covers the latest features of Java.\nBeware of other Udemy Java courses. Many of them are outdated and use old versions of Java. Don’t waste your time or money on learning outdated technology.\nTake my course where I show you how to develop applications in Java from scratch. You can type the code along with me in the videos, which is the best way to learn.\nI am a very responsive instructor and I am available to answer your questions and help you work through any problems.\nFinally, all source code is provided with the course along with setup instructions.\n\n\nStudent Reviews Prove This Course’s Worth\nThose who have reviewed my courses have pointed out that the instruction is clear and easy to follow, as well as thorough and highly informative.\nMany students had also taken other Java courses in the past, only to find that my courses were their favorite. They enjoyed the structure of the content and the high-quality audio/video.\n\n\nThis is the best tutorial I've seen so far , each step is well explained and the tutorial videos are made to a high standard. I highly recommend this course! - Rob\n\n\nHats off to you Chad, the best course I have done on Udemy thus far. You never disappoint. - Morebodi\n\n\nBy far the greatest asset this course has is how responsive Eric is to questions. This is how CBT training should be, and it was well worth the money and time. I was able to complete everything in the course and I now have an app! - Gabriel\n\n\nOMG This course is amazing!!! So many awesome things to say. Apart from the course itself, I was also blown away at how quickly Eric responded to questions/issues and how promptly he was able to troubleshoot my code : ) - Paige\n\n\nQuality Material\nYou will receive a quality course, with solid technical material and excellent audio and video production. I am a best-selling instructor on Udemy. Here's a list of my top courses.\n\n\nSpring Boot and Hibernate for Beginners\nSpring Boot Unit Testing with JUnit, Mockito and MockMvc\nFull Stack: React and Java Spring Boot\nFull Stack: Angular and Java Spring Boot\nDeploy Java Spring Boot Apps Online to Amazon Cloud (AWS)\n\n\nThese courses have received rave 5 star reviews and over 800,000 students have taken the courses. Also, these courses are the most popular courses in their respective categories.\nI also have an active YouTube channel where I post regular videos. In the past year, I’ve created over 800 video tutorials (public and private). My YouTube channel has over 6 million views and 40k subscribers. So I understand what works and what doesn’t work for creating video tutorials.\n\n\nNo Risk – Udemy Refund\nFinally, there is no risk. You can preview 25% of the course for free. Once you purchase the course, if for some reason you are not happy with the course, Udemy offers a 30-day refund (based on Udemy's Refund Policy).\nSo you have nothing to lose, sign up for this course and learn how to become a professional Java Developer.\nIt is time to level up your career and learn the skills needed to be a desired Java Developer.\n\n\nTarget Audience\n• Anyone interested in learning Java programming\n• No prior programming experience required. I will teach you Java from the beginning.",
      "target_audience": [
        "Beginner software developers wanting to learn Java.",
        "Self-taught programmers wanting to level up their Java programming knowledge.",
        "Individuals excited about building Java applications for personal or professional use.",
        "Individuals that want ONE course that covers everything you need to know about Java."
      ]
    },
    {
      "title": "100 Days of Code: The Complete Python Pro Bootcamp",
      "url": "https://www.udemy.com/course/excellent-python-3-bootcamp-in-2023/",
      "bio": "Master Python By Working On 100s of Practical Videos In 100 Days. Get Premium Knowledge on Python Pogramming Skills",
      "objectives": [
        "You will get master control in Python programming language by building installable packages & modules.",
        "You will be able to program in Python Professionally",
        "Be able to use Python for Software Development and Data Analysis",
        "You will learn Basics of NumPy Which is Used in Pandas For Data Analysis"
      ],
      "course_content": {
        "Introduction And Installation": [
          "Day-1.1 Setup And Installation Using Python Software Foundation",
          "Day-1.2 Installing Using Anaconda Individual Distribution",
          "Day-1.3 Key Concepts On Computer & Programming Language",
          "Day-1.4 Working With IDLE"
        ],
        "Variables, Expressions and Statements": [
          "Day-2.1 Resource Training Materials Download From This Section",
          "Day-2.2 Values & Variables",
          "Day-3.1 Identifiers & Reserved Keywords",
          "Day-3.2 PEMDAS Rule & Arithmetic Operations",
          "Day-3.3 What Are Inputs Comments & Mnemonics?"
        ],
        "Basic Data Types & Code Blocks": [
          "Day-4 Introduction To Basic Data Types In Python",
          "Day-5 Code Blocks In Python & Their Importance"
        ],
        "Basic Operators In Python": [
          "Day-6.1 Arithmetic, Comparison & Assignment Operators",
          "Day-6.2 Logical, Membership & Identity Operators",
          "Day-7.1 More On Expressions & Arithmetic Operators Part-1",
          "Day-7.2 More On Expressions & Arithmetic Operators Part-2",
          "Day-8 Operator Precedence & More On Expressions"
        ],
        "Errors In Python In Brief": [
          "Day-9 Syntax Errors In Python In Brief",
          "Day-10 Runtime & Logical Errors In Python In Brief"
        ],
        "Control Flows Or Decision Making Statements Part-1": [
          "Day-11.1 Control Flows Introduction",
          "Day-11.2 Simple \"if\" Statement & Example",
          "Day-13 Boolean Expressions As Python Statements",
          "Day-14 Simple 'if-else' Statements Introduction"
        ],
        "Control Flows Or Decision Making Statements Part-2": [
          "Day-15 Compound Boolean Expressions & Operator Precedence",
          "Day-16 Pass Statement & Floating Point Equality",
          "Day-17 Nested 'if-else' Conditionals",
          "Day-18 Multi-Way Vs Sequential 'if-else' Conditionals",
          "Day-19 Conditional Expressions",
          "Day-20 Errors In Conditional Statements",
          "Day-21 Logic Complexity"
        ],
        "Iterations ( Or Loops ) In Python": [
          "Day-22 While Loop Introduction",
          "Day-23 While Loop Examples",
          "Day-24 Definite & Indefinite While Loops",
          "Day-25 Introduction To For Loop",
          "Day-26 Real Life Examples Of For Loop",
          "Day-27 How To Construct The Nested For Loops",
          "Day-28 Abnormal Loop Termination Part-1",
          "Day-29 Abnormal Loop Termination Part-2",
          "Day-30 How To Use While Else & For Else In Loops?",
          "Day-31 Manually Constructing & Natural Infinite Loops"
        ],
        "Strings In Python": [
          "Day-32 Strings Introduction - 01",
          "Day-33 How To Construct String Objects & Apply String Methods - 02",
          "Day-34 Strings Methods Continued - 03",
          "Day-35 Strings Methods Continued - 04",
          "Day-36 Strings Methods Continued - 05",
          "Day-37 Strings Methods Continued - 06"
        ],
        "Numbers In Python": [
          "Day-38 Numbers Introduction - 01",
          "Day-39 Arithmetic Operations On 'int' Values - 02",
          "Day-40 Additional Methods In 'int' Values - 03",
          "Day-41 Floating Point Numbers Introduction & Usage Of 'help' & 'dir' On Them -04",
          "Day-42 Methods & Attributes Available On Floating Point Numbers - 05",
          "Day-43 Working With Basic Methods On Floating Point Numbers - 06",
          "Day-44 Complex Numbers & Their Methods - 07"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "A Mac or PC computer with access to the internet",
        "No paid software required - I'll teach you how to use Spyder, Jupyter Notebook & Python IDLE",
        "I'll walk you through the step-by-step software installation guide and set up"
      ],
      "description": "Welcome to the \"100 Days of Code: The Complete Python Pro Bootcamp In 2025\",  in 2025, the only course you need to learn to code with Python. This course will encourage you to gain Premium Knowledge on Python Basics from zero to advance level.\n\n\nIf you spend daily half an hour or one hour then you will master Python 3.x & become an excellent coder in Python 3.x\nThis Python course is without a doubt the most comprehensive Python course available anywhere online. Even if you have zero programming experience, this course will take you from beginner to professional. Here's why:\nThe course is fully explained with practical proof not just with the theoretical explanation.\nThe course has been updated and you'll be learning the latest tools and technologies used at large companies such as Apple, Google and Netflix.\nThis course doesn't cut any corners, there are beautiful hand highlighted explanation videos and has real-world mini projects which you will get to build.\nThe curriculum was developed over a period of 2 years, with comprehensive student testing and feedback.\nWe've taught over 200,000 students on how to code and many have of them have changed their lives by becoming professional developers/starting their own tech startup.\nThe course is based on practical work with interest based content, with most researched practices and modules determined by students - that's you!\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Python developer or Software engineer with Python. This course is especially created for Beginners with absolute no coding knowledge of any region or territerry.\nThe course includes HD video tutorials and builds your programming knowledge while trying to make real-world Python projects.\nThroughout this comprehensive course, we cover a massive amount of tools and technologies, including:\nPython 3 - the latest version of Python\nPython IDLE, Jupyter Notebook, Spyder\nPython Scripting and Coding\nPython Code Development\nData Science Skills With Python Basics\nData Analysis Skills With Strings, Lists, Tuples, Dictionaries\nFile Handling\nErrors and Exceptions\nLists\nTuples\nDictionaries\nSets\nStrings Usage\nNumbers In Detail\nDecision Making Control Flows\nAll types of Functions\nUser Defined Functions\nVariables In Functions\nPackages In Python\nModules\nCreating Installable Modules In Python\nHow To Create Package Using '__init__ . py' Empty File In Python?\nImportance of '__init__ . py' Empty File In Python?\nWorking With The Built-In 'os' Module\nFunction Arguments (Positional, Keyword, Default & Variable Length)\nManually Constructing & Natural Infinite Loops\nHandling Multiple Exceptions In Single 'try & except' Block & Use Finally Block\nHow To create your own projects In Spyder\nBasics of NumPy For Data Science & Data Analysis Used in Machine Learning & Artificial Intelligence(ML, AI)\n\n\nBy the end of this course, you will be able to programm in Python with confidence and you'll be so good at Python that you can get a job or use the language professionally.\n\n\nSign up today, and look forward to:\nVideo Lectures\nCode Challenges and Exercises\nFully Fledged Mini Practice Projects\nProgramming Resources and Cheat sheets\nDownloadable Resources\n\n\nDon't just take my word for it, check out what existing students have to say about my courses:\nCourse Image Part By: freepik\nSo what are you waiting for? Click the buy now button and join the world's highest-rated Coding Language Python Course.\nRegards\nPruthviraja L, Team UpGraduate.",
      "target_audience": [
        "If you want to learn to code from scratch through building fun and useful standard mini projects, then you're in the right place.",
        "If you are a complete beginner then this course will be everything you need to become a Python professional",
        "If you are a seasoned programmer wanting to switch to Python then this is the quickest way. Learn through coding mini professional projects.",
        "If you are an intermediate Python programmer then course will help you level up to an advanced level."
      ]
    },
    {
      "title": "AWS Solutions Architect Associate Practice Exams - 2025",
      "url": "https://www.udemy.com/course/aws-solutions-architect-associate-saa-c03-practice-exams-l/",
      "bio": "AWS SAA-C03 Practice Tests: 5 Comprehensive, Up-to-Date, Full-Length Practice Exams",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "The AWS SAA CO3 exam consists of two types of questions:\n1- Multiple choice questions offer four options, where you need to select one correct response out of three incorrect responses• (Almost all of the questions have 4 choices (A, B, C, and D), and you have to select only one option.)\n2- Multiple-response questions offer five options, and you need to select the two best choices. (there are about 7-10 of these questions on the actual test)\n\n\nThis course includes 5 Full Real AWS SAA-C03 Practice Exams (each with 65 questions) and bonus questions (essential for the actual exam).\n\n\nThis course includes over 325 high-quality AWS SAA CO3 questions that are written to emulate the actual exam.\n\n\nAt the end of each question, you will find detailed explanations for both the correct answer and the incorrect answers.\n\n\nThe questions in this course are similar to the ones you will see on the actual exam.\n\n\nThe comprehensive explanations of the answers in this course are not available elsewhere.\n\n\nIf you are not 100% happy with this course, you have a 30-day refund policy.\n\n\nAre these tests enough to help you pass the AWS SAA CO3 exam on your first attempt?\nYes, If you solve all the questions in this course, read the explanations for the correct and incorrect answers, and retake the tests until you score 90% or more, you will be well-prepared for the actual exam.\n\n\nNumber of Questions :\nThe actual exam consists of 65 questions, and you have 130 minutes to complete them.\n\n\nPassing Score!\nTo pass the exam, you need to score a minimum of 72, which is equivalent to 720 out of 1000 on the actual test. However, we recommend taking these practice exams multiple times until you can score 90% or better. Reviewing what you got wrong and writing notes can help you succeed.\n\n\nThe questions on our practice exams are written in accordance with the exam content outline, which is as follows:\nDomain 1: Design Secure Architectures (30%)\nDomain 2: Design Resilient Architectures (26%)\nDomain 3: Design High-Performing Architectures (24%)\nDomain 4: Design Cost-Optimized Architectures (20%)\n\n\nOur practice exams cover all the topics that you may encounter on the actual exam, including data analytics and visualization services like Amazon Athena, AWS Lake Formation, Amazon QuickSight, network connection options like AWS VPN, Direct Connect, AWS PrivateLink, designing a flexible authorization model that includes IAM users, groups, roles, and policies, threat vectors external to AWS like DDoS and SQL injection, application configuration, and credentials security, and more.\n\n\nAWS SAA CO3 Exam Cost: The exam cost is $150 USD.\n\n\nHow can I take the test?\nYou can take the exam online from your home or office, or at a Pearson VUE testing center.\n\n\nLanguages available for the AWS SAA CO3 Exam:\nThe actual exam is offered in the following languages: English, French (France), German, Italian, Japanese, Korean, Portuguese (Brazil), Simplified Chinese, Spanish (Latin America), Spanish (Spain), and Traditional Chinese.\n\n\nBy the end of this course, students will have a comprehensive understanding of key AWS services, and will be well-prepared to pass the AWS Solutions Architect Associate certification exam with confidence and ease.\nWe are always here to help you. If you have any questions, you can go to the student dashboard and leave a question. One of our experts will respond to your question within 24 hours.",
      "target_audience": [
        "IT professionals who want to build their AWS knowledge and skills: This course is ideal for IT professionals who want to develop expertise in AWS services and architecture, and are looking to advance their careers in cloud computing.",
        "AWS architects and developers: This course is designed for AWS architects and developers who want to master the AWS Solutions Architect Associate certification exam, and are looking to build their skills and knowledge in AWS architecture and design.",
        "Students pursuing AWS certifications: This course is ideal for students who are pursuing AWS certifications, particularly the Solutions Architect Associate certification, and want to practice and master exam-style questions and scenarios.",
        "Anyone interested in cloud computing: This course is designed for anyone who is interested in learning more about cloud computing and AWS services, and wants to develop their skills and knowledge in this rapidly-growing field."
      ]
    },
    {
      "title": "Java 21: New Features and Enhancements - 2024",
      "url": "https://www.udemy.com/course/java-21-new-features/",
      "bio": "Harness the Power of Java 21's Latest Features for Advanced Efficiency and Performance",
      "objectives": [
        "Understand and Implement Project Panama: Learners will gain a solid understanding of the Foreign Function & Memory API introduced in Project Panama",
        "Master Structured Concurrency: Students will learn how to simplify concurrent programming in Java using Structured Concurrency",
        "Optimize Computational Performance with the Vector API: Participants will explore the enhancements in the Vector API, learning how to leverage SIMD",
        "Simplify Code with Pattern Matching Enhancements: Learners will discover how to use pattern matching enhancements in Java 21 to write more expressive, readable"
      ],
      "course_content": {},
      "requirements": [
        "Java or any modern OOP Programming Experience",
        "Basics of Intermediate Java Concepts",
        "Willingness to learn"
      ],
      "description": "Dive into the future of Java development with Mastering Java 21: Unlocking Modern Development Techniques, your comprehensive guide to leveraging the latest advancements in Java 21. Designed for both seasoned developers and those new to the Java ecosystem, this course aims to elevate your programming skills, enabling you to build more efficient, secure, and maintainable applications.\nWhy Java 21? Java continues to stand as a pillar of enterprise and cloud applications. With the release of Java 21, developers gain access to a suite of enhanced features that promise to revolutionize how we approach Java programming. From seamless interaction with native code to refined concurrency management, Java 21 is poised to tackle the complexities of modern software development head-on.\nWhat You Will Learn:\nProject Panama Fundamentals: Get up to speed with the Foreign Function & Memory API, opening new doors for interacting with native libraries and memory management without leaving the comfort of the Java ecosystem.\nStructured Concurrency Made Simple: Discover the art of writing clean, error-free concurrent code with Java 21's preview feature, Structured Concurrency, ensuring all your parallel tasks are managed with unprecedented ease.\nVector API Enhancements: Push the boundaries of computational performance by mastering the improved Vector API, designed for high-efficiency operations on large datasets.\nPattern Matching Proficiency: Simplify your code with Java 21's pattern matching enhancements, making your programs more readable and less prone to errors.\nCourse Features:\nHands-on Projects: Apply what you learn with real-world projects, from building efficient parallel processing systems to optimizing memory-intensive applications.\nExpert Instruction: Learn from industry veterans with years of experience in Java development, ready to share their secrets to mastering Java 21's new features.\nFlexible Learning: Access course materials anytime, anywhere, and learn at your own pace with our structured yet flexible curriculum.\nWho Should Enroll:\nJava developers looking to stay ahead in the rapidly evolving tech landscape.\nNew programmers seeking a comprehensive and future-proof foundation in Java.\nSoftware engineers interested in the latest Java features for performance optimization.\nAnyone passionate about leveraging cutting-edge features in their Java projects.\nEnroll in Mastering Java 21: Unlocking Modern Development Techniques today and be at the forefront of modern Java development. Transform your coding practices, optimize your applications, and prepare for the future with the power of Java 21.\nLet's embark on this journey together. Your path to mastering Java 21 starts now!",
      "target_audience": [
        "Java developers looking to stay ahead in the rapidly evolving tech landscape.",
        "New programmers seeking a comprehensive and future-proof foundation in Java.",
        "Software engineers interested in the latest Java features for performance optimization."
      ]
    },
    {
      "title": "Master The Java Programming Language",
      "url": "https://www.udemy.com/course/java-tutorial-by-sagar/",
      "bio": "A step by step guide to master the Java programming language from ground up.",
      "objectives": [
        "Learn to master the Java programming language.",
        "Understand SOLID principles and its application.",
        "Gain familiarity with some selected design patterns."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "IDE Installation and HelloWorld",
          "JDK Installation Steps",
          "HelloWorld Manual Approach",
          "Platform Independence high level overview",
          "Source Code",
          "Getting the best out of this course",
          "Introduction Quiz"
        ],
        "Language Basics - Fast track": [
          "Your first program",
          "Operators",
          "Branching statements",
          "Looping Statements",
          "Arrays Introduction",
          "Passing arrays to functions",
          "Implement array search",
          "Multidimensional Arrays",
          "Basics Quiz"
        ],
        "Kick start Object Oriented Programming": [
          "Introduction to Classes",
          "Introduction to DataHiding and Encapsulation",
          "Data Hiding and Encapsulation - Example 2",
          "Programming Exercise - 1",
          "Static/Class Members vs Instance Members",
          "Static Members explanation",
          "Utility methods using static",
          "Method overloading",
          "Overloading example 2",
          "`this` reference variable",
          "Initializers",
          "Introduction to constructors",
          "Constructors - Technical tips",
          "Constructor invocation from other constructors",
          "Strings and StringBuilder",
          "Problem Statement",
          "Solution",
          "Introduction to OOPs Quiz"
        ],
        "Inheritance, Polymorphism and code generazilation": [
          "Introduction to Inheritance",
          "Composition",
          "Overriding",
          "Code generalization using inheritance",
          "Dynamic Binding - Example 1",
          "Dynamic Binding and instanceof",
          "Constructors in Inheritance",
          "Final modifier in Inheritance",
          "Inheritance and Polymorphism Quiz"
        ],
        "Abstract Classes": [
          "Introduction to abstract classes",
          "Abstract classes - Part2",
          "Abstract classes - Part3",
          "Programming Exercise",
          "Template Method Design Pattern"
        ],
        "Interfaces": [
          "Introduction to interfaces",
          "Interfaces - Part-2",
          "Interfaces - Part - 3",
          "Interfaces - Part - 4",
          "Interfaces for Loosely coupled code"
        ],
        "SOLID Design Principles": [
          "Quick Catchup",
          "Single Responsibility Principle",
          "Open Closed Principle",
          "Liskov Substitution Principle",
          "Interface Segregation Principle",
          "Dependency Inversion Principle"
        ],
        "Packages": [
          "Introduction to Packages",
          "Packages Demo"
        ],
        "Exception Handling": [
          "Introduction to Exception handling",
          "Traditional way of Exception handling",
          "Exception Handling with Custom Exception",
          "Multi-Catch and Generic Catch",
          "Finally block and try-with-resources",
          "Wrapper Types + Exercise Problem Statement",
          "Solution - Stack Example"
        ],
        "IOStreams": [
          "Introduction to File class",
          "List the files of a directory",
          "File copy - Part 1",
          "File copy - Part 2",
          "File copy - Part 3",
          "Buffered IO",
          "Data IO",
          "Object Serialization and Deserialization"
        ]
      },
      "requirements": [
        "Good to have atleast basic understanding of programming constructs such as variable declaration, loops, arrays, functions."
      ],
      "description": "I have a very specific goal in designing this course, being an Architect I do have an additional role of bringing up trainees or freshers upto the speed of the Java development, and in the process I need to device a training plan where they need to understand the most important aspects of Java programming language and understand different aspects of backend development.\nThis made me design this course to address the first part of it, i.e. the Java programming language, where you will be focused on the most important features of Java programming language and see where and when to apply the features effectively and efficiently.\nYou many be having questions like, is this course updated to latest editions of Java, such as Java15 etc etc. don’t worry guys you first need to understand the core language features, once you are able to apply the core features rest of the things will fall in place. Thats my experience, versions are fancy terms guys, not every thing is applicable to us, if I feel some thing really important coming in, then I will certainly try to update that in the course. But anyway I will try to keep you posted on the changes don’t worry.\nAs an architect I want the trainees to be able to understand the following aspected of Java programming language, you should be able to understand the core language features, think about SOLID principles while designing the code and gain good insights about few selected design patterns. Let me confirm once again guys I won’t be covering all design patterns, I picked few based on my experience and will cover them. All the very best to your Java developer journey, I am with you lets move forward.\nCourse Highlights  -\nNote - Refer to the Archived section for programming foundations.\nObject Oriented Programming features\nClasses, Objects\nConstructors\nInheritance\nPolymorphism\nAbstract classes\nInterfaces\nBuilding Loosely coupled code\nException handling\nIOStreams\nSOLID Principles\nFew selected Design Patterns\nBuilder\nSingleton\nFactory Method\nTemplate Method\nFacade\nDecorator\nProxy\nRemote Proxy\nVirtual Proxy\nProtection Proxy\nOther Java language features like\nCollections\nGenerics\nLambda\nStreams\nReflection API",
      "target_audience": [
        "Beginners or professionals aspiring to be Java developers."
      ]
    },
    {
      "title": "Python GUI : From A-to-Z With 2 Final Projects",
      "url": "https://www.udemy.com/course/python-with-tkinter-basics-advanced-build-2-projects-l/",
      "bio": "Learn Python from scratch & build a Python programs using the Tkinter Module !",
      "objectives": [
        "Learn How To Build A Powerful GUI in Python programming Using Python And Tkinter",
        "Build Your GUI in Python programming"
      ],
      "course_content": {
        "Course Overview": [
          "course introduction",
          "Gift for you",
          "Label with Image"
        ],
        "Installation": [
          "Insttal python"
        ],
        "Basics": [
          "How To Create a Window",
          "Labels and Buttons In TKinter",
          "Pack VS Place In TKinter",
          "How To Use Grid In TKinter",
          "Colors In TKinter",
          "Relief Style In TKinter",
          "Bitmap In TKinter",
          "Cursor In TKinter",
          "Tkinter Button Options PT1",
          "Tkiner Button Options PT2",
          "How to create function",
          "Entry class in Tkinter",
          "How to create tow windows",
          "Slider",
          "creating button and change properties"
        ],
        "Advanced Lessons": [
          "Radio Button in Tkinter",
          "Label and Button",
          "Entry fields in tkinter",
          "Frame",
          "Panedwindow",
          "Progressbar and Scale",
          "Spinbox and Combox",
          "Resize",
          "Shortcut in keyboard",
          "Button with photo",
          "Nootbook",
          "number and callback",
          "Messagebox , Filedialog , Colorchooser",
          "Counter Label"
        ],
        "Project 1": [
          "Feet to Meters"
        ],
        "Project 2": [
          "Text Box Widget",
          "Combobox",
          "Check Box",
          "scrolltext",
          "Label in a Frame",
          "MenuBar",
          "Source Code"
        ]
      },
      "requirements": [
        "Little Python Programming Knowledge"
      ],
      "description": "This course is for those who want to learn gui using python ,this course teach you from scratch and for those who also have a knowledge in tkinter and want to learn how to write the code to build programs The course is ideal for people who haven't programmed before, but great for other programmers as well as far as they don't get offended by a bit of extra explanations.\n\nThis course teaches you everything in GUI programming from creating windows to creating buttons , and how to creat many advanced functions\nThis tutorial has been designed for software programmers who want to understand the GUI in Python ,and those who wants to create programs .",
      "target_audience": [
        "Students who Want To Make GUI in Python programming",
        "Python Developers Who Want To Make GUI in Python programming",
        "Tkinter Developers"
      ]
    },
    {
      "title": "Java Masterclass: The Complete Guide",
      "url": "https://www.udemy.com/course/java-masterclass-the-ultimate-beginners-guide/",
      "bio": "Java Masterclass: The Complete Guide to Java Programming - Learn Basics to OOP Concepts",
      "objectives": [
        "Gain a comprehensive understanding of Java programming fundamentals, including variables, data types, operators, and control structures.",
        "Master loops, functions, OOP principles, and delve into advanced array and string manipulation techniques for comprehensive Java proficiency.",
        "Solidify understanding of Java's core concepts, honing problem-solving abilities crucial for real-world application development.",
        "Establish a robust foundation encompassing fundamentals, arrays, strings, and OOP, vital for building complex applications."
      ],
      "course_content": {
        "Basics": [
          "Create Project, Run Your First Program, Hello World",
          "print() vs println()",
          "Comments",
          "Variables and Data Types",
          "Identifiers (Variable Rules)",
          "Plus(+) symbol use in Println/Print",
          "Type Casting",
          "User Input"
        ],
        "Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Relational Operators",
          "Logical Operators",
          "Ternary Operator",
          "Increment Operator",
          "Decrement Operator"
        ],
        "Loops": [
          "for Loop",
          "while Loop",
          "do while Loop",
          "break Statement",
          "continue Statement"
        ],
        "Conditional Statements": [
          "if else Statement",
          "if elseif else Statement",
          "if else Ladder",
          "Nested if else",
          "switch Statement"
        ],
        "Functions": [
          "Function & Its Types",
          "Type 1 - No Return Type with No Argument",
          "Type 2 - Return Type with No Argument",
          "Type 3 - No Return Type with Argument",
          "Type 4 - Return Type with Argument"
        ],
        "Arrays": [
          "What is an Array & Why we use Array ?",
          "Creating Your First Array",
          "Print Array using Loops",
          "Print Array using For-Each Loop",
          "Exploring 2-Dimensional Arrays"
        ],
        "Strings": [
          "What is String & Why we use String ?",
          "String charAt and length method",
          "String Concatenation",
          "Compare Two Strings",
          "String substring method",
          "String indexOf method",
          "String replace method"
        ],
        "OOPS": [
          "What is Class & Why we use class?",
          "Create Your First Class",
          "What is Inheritance & Types of Inheritance",
          "Single Level Inheritance",
          "Multilevel Inheritance",
          "Hierarchical Inheritance",
          "Abstract Classes",
          "Interface"
        ]
      },
      "requirements": [
        "No prior experience needed! This course is beginner-friendly. All you need is a computer and eagerness to learn. Let's dive in!"
      ],
      "description": "Unlock the power of Java programming with our comprehensive \"Java Masterclass: The Complete Guide\" course. Designed for aspiring programmers, this course is your gateway to mastering Java from the ground up. Starting with the basics, you'll learn how to create projects, run programs, understand the difference between print() and println(), utilize comments effectively, and grasp essential concepts such as variables, data types, and identifiers. Dive into the world of operators, including arithmetic, assignment, relational, and logical operators, along with conditional statements like if-else and switch statements.\nDelve deeper into Java's functionality with loops, functions, arrays, and strings. Learn how to work with arrays, manipulate strings, and utilize object-oriented programming (OOP) principles to create classes, understand inheritance, and implement interfaces. Throughout the course, you'll benefit from practical examples, hands-on exercises, and clear explanations to reinforce your understanding.\nBy the end of this course, you'll have a solid foundation in Java programming, enabling you to build your own Java applications with confidence. Whether you're looking to kickstart your programming career or expand your skill set, this Java Masterclass is your comprehensive guide to mastering one of the most widely used programming languages in the world. Start your journey to Java mastery today and unlock endless possibilities in software development and beyond.\nBy completing this masterclass, you'll be equipped with the knowledge and skills to:\nDevelop robust Java applications from scratch.\nUnderstand the fundamental concepts of programming and how they apply to Java.\nEffectively utilize Java's syntax, including variables, data types, and operators.\nNavigate control flow using conditional statements and loops.\nImplement functions to modularize your code and enhance reusability.\nWork with arrays and strings to manipulate data efficiently.\nGrasp object-oriented programming principles such as inheritance and interfaces.\nCreate and manage classes to organize and structure your code effectively.\nWhether you aspire to pursue a career in software development, enhance your programming skills, or simply gain a deeper understanding of Java, this masterclass provides the perfect foundation. Join us on this transformative journey and unlock your potential as a Java programmer today!",
      "target_audience": [
        "Individuals with little to no programming experience eager to learn Java from scratch.",
        "Those pursuing a career in computer science or software engineering seeking a solid foundation in Java.",
        "Programmers from other languages looking to expand their skillset with Java proficiency.",
        "Enthusiasts interested in coding, looking to explore Java programming and develop practical skills."
      ]
    },
    {
      "title": "Learning Path: Haskell: Functional Programming and Haskell",
      "url": "https://www.udemy.com/course/learning-path-haskell-functional-programming-and-haskell/",
      "bio": "Gain expertise of programming in Haskell — an advanced, purely functional programming language.",
      "objectives": [
        "Discover how functional programming addresses complexity",
        "See a comparison of functional programs with traditional imperative programs",
        "Learn the basics of Haskell datatypes and functions",
        "Write and deploy a simple web application",
        "Structure larger Haskell programs",
        "See how to model your problem domain with precise types and how to reap the benefits of doing so"
      ],
      "course_content": {
        "Fundamentals of Practical Haskell Programming": [
          "The Course Overview",
          "Installing Stack on Windows",
          "Installing Stack on Mac OS",
          "Installing Stack on Linux",
          "Problems FP and Haskell Can Address",
          "The FP Way",
          "The Haskell Way",
          "Our First Haskell Programs",
          "Whitespace, Layout, and Scoping",
          "GHCi and Interactive Haskell",
          "Debugging with GHCi",
          "Values and Expressions",
          "Types and Type Signatures",
          "Algebraic Data Types",
          "Type Classes",
          "Pattern Matching"
        ],
        "Learning Haskell Programming": [
          "The Course Overview",
          "Installing Haskell",
          "Installation Instructions for OS X",
          "Installation Instructions for Windows",
          "Installation Instructions for Linux",
          "Discovering Haskell with ghci",
          "Built-in Data Structures",
          "Editing Haskell Source Code",
          "Introduction to Functions",
          "Building Your Own Data Structures",
          "Pattern Matching",
          "Creating a Project with Stack",
          "Setting up the Word Game Grid",
          "Searching for Words",
          "Searching in All Directions",
          "Unit Testing the Grid with Hspec",
          "Grid Coordinates and Infinite Lists",
          "Fleshing Out the Grid Model",
          "Searching the Grid Recursively",
          "Making the Game Playable",
          "Some Final Polish"
        ],
        "Mastering Haskell Programming": [
          "The Course Overview",
          "Installation and Setup",
          "IO as a \"Sin Bin\"",
          "Exception Handling",
          "Fewer Sins Using the Free Monad",
          "Benign Side-Effects Using unsafePerformIO",
          "Simple Streaming Using Lazy IO",
          "Pure Streaming Using Lazy Lists",
          "Composing Finite and Infinite Streams",
          "Who's Driving? Push, Pull… or Both!",
          "Transforming Effectful Streams Using the Free Monad",
          "Events, Behaviors, and Signals",
          "Local and Global States",
          "Higher-Order Signals and Time Leaks",
          "Pure, Monadic, and Arrowized APIs",
          "Continuous, Synchronous, Total Time",
          "Parallel and Concurrent Algorithms",
          "Manual Parallelism Using the Free Applicative",
          "Laziness and Parallelism",
          "Purity and Parallelism",
          "Deterministic Communication Using IVars",
          "Deterministic Collaboration Using LVars",
          "Manual Concurrency Using forkIO",
          "Taming Asynchronous APIs Using ContT",
          "Opportunistic Concurrency Using Async",
          "Laziness and Concurrency",
          "Manual Signaling Using MVars",
          "Automatic Signaling Using TVars",
          "Effect Tracking and Concurrency",
          "Combinator Libraries",
          "Monad Transformers",
          "Nesting Architectures",
          "Precise Types, Program Boundaries, and Microservices",
          "Optimizing Microservice Requests Using Haxl",
          "Distributed Concurrent Programming Using Cloud Haskell",
          "CRDTs, Type Class Laws, and Eventual Consistency"
        ]
      },
      "requirements": [
        "A computer",
        "Internet connection",
        "Basic understanding or procedural or object oriented programming",
        "You need not have any software installed prior to taking up this course. The course will take you through the installation procedure of all the software needed."
      ],
      "description": "What makes functional programming great?\nLet’s dive into this course and figure out the reason for the buzz around functional programming.\nIn this Video Learning Path, we study a purely functional programming language— Haskell—and discover its capabilities.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nHaskell is a powerful and well-designed functional programming language designed to work with complex data. Its emphasis on purity makes it easier to create rock-solid applications that stay maintainable and error-free even as they grow in scale.\nIn this Learning Path, you will start with learning the fundamentals and building blocks of Haskell programming language with special emphasis on functional programming.\nYou will learn how to solve programming problems and gain hands-on experience of creating an application. You will then move on to learn how to write expressions and high-order functions. We will then go on to discuss two other structured forms of interaction: streaming libraries and functional reactive programming.\nBy the end of this course, you’ll have an in-depth knowledge of various aspects of Haskell, allowing you to make the most of functional programming in Haskell.\nTo ensure that you get the best of the learning experience, in this Learning Path we combine the works of some of the leading authors in the business.\nAbout the Author\nRichard Cook is a staff software engineer at Tableau Software working on high-performance relational database systems. He works primarily in C++ but has experience in a broad range of languages and technologies. He frequently applies functional programming and Haskell experience in his daily work. He organizes the Seattle Area Haskell Users’ Group and is an active member of the Seattle functional programming community. He is currently working on developing a machine learning framework for Haskell.\n\nHakim Cassimally learned the basics of Lisp 15 years ago and has been interested in functional programming ever since. After Audrey Tang developed the first prototype of Perl6 in Haskell (Pugs), he got seriously interested in Haskell and has written, spoken, and evangelised about learning and writing Haskell since 2006.\n\nSamuel Gélineau is a Haskell developer with more than 10 years of experience in Haskell Programming. He has been blogging about Haskell for about the same time. He has given many talks at Montreal’s Haskell Meetup, and is now co-organizer.\n\nSamuel is a big fan of functional programming, and spends an enormous amount of time answering Haskell questions on the Haskell subreddit, and as a result has a good idea of the kind of questions people have about Haskell, and has learned how to answer those questions clearly, even when the details are complicated.",
      "target_audience": [
        "This course is ideal for anyone with a little experience in imperative or object-oriented programming language and wants to learn about functional programming or Haskell."
      ]
    },
    {
      "title": "Building an Interpreter from scratch",
      "url": "https://www.udemy.com/course/essentials-of-interpretation/",
      "bio": "Semantics of programming languages",
      "objectives": [
        "Build a programing language from scratch",
        "Interpreters and Compilers",
        "AOT, JIT-compilers and Transpilers",
        "AST-interpreters and Virtual Machines",
        "Bytecode, LLVM, Stack-machines",
        "First-class functions, Lambdas and Closures",
        "Call-stack and Activation Records",
        "OOP: Classes, Instances and Prototypes",
        "Modules and Abstractions"
      ],
      "course_content": {
        "Compilers crash course": [
          "Parsers, ASTs, Interpreters and Compilers",
          "AST Interpreters and Virtual Machines",
          "Compilers: AOT, JIT, Transpiler"
        ],
        "Interpreters: Basic expressions and Variables": [
          "Eva programming language",
          "Self-evaluating expressions",
          "Variables and Environments",
          "Blocks: expression groups and Nested Scopes",
          "Control flow: If and While expressions",
          "Back to parsers: S-expression to AST"
        ],
        "Functions and Functional programming": [
          "Built-in and Native functions",
          "User-defined functions, Activation Records and Closures",
          "Lambda functions and Functional programming",
          "Call-stack and Recursive calls",
          "Syntactic sugar: Switch, For, Inc, Dec operators"
        ],
        "Object-oriented programming": [
          "Object-oriented Eva: Classes",
          "Class inheritance and Super calls",
          "Code isolation: Modules and Imports",
          "Final executable and specification"
        ]
      },
      "requirements": [
        "Basic data structures and algorithms",
        "Graphs, trees, traversal"
      ],
      "description": "How programming languages work under the hood? What’s the difference between compiler and interpreter? What is a virtual machine, and JIT-compiler? And what about the difference between functional and imperative programming?\nThere are so many questions when it comes to implementing a programming language!\nThe problem with “compiler classes” in school is they usually are presented as some “hardcore rocket science” which is only for advanced engineers.\nMoreover, classic compiler books start from the least significant topic, such as Lexical analysis, going right away deep down to the theoretical aspects of formal grammars. And by the time of implementing a first Tokenizer module, students simply lose an interest to the topic, not having a chance to actually start implementing a programing language itself. And all this is spread to a whole semester of messing with tokenizers and BNF grammars, without understanding an actual semantics of programming languages.\nI believe we should be able to build and understand a full programming language semantics, end-to-end, in 4-6 hours — with a content going straight to the point, showed in live coding session as pair-programming, and described in a comprehensible way.\nIn the Essentials of Interpretations class we focus specifically on runtime semantics, and build a interpreter for a programming language very similar to JavaScript or Python.\nImplementing a programing language would also make your practical usage level of other programming languages more professional.\n\n\nWho this class is for?\nThis class is for any curious engineer, who would like to gain skills of building complex systems (and building a programming language is really a pretty advanced engineering task!), and obtain a transferable knowledge for building such systems.\nIf you are interested specifically in compilers, interpreters, and source code transformation tools, then this class is also for you.\nThe only pre-requisite for this class is basic data structures and algorithms: trees, lists, traversal.\n\n\nWhat is used for implementation?\nSince we build a language very similar in semantics to JavaScript or Python (the two most popular programming languages today) we use specifically JavaScript — its elegant multi-paradigm structure which combines functional programming, class-based, and prototype-based OOP fits ideal for that.\nMany engineers are familiar with JavaScript so it should be easier to start coding right away. However in implementation we don’t rely on too specific to JS constructs, and the code from the course is easily portable to TypeScript, Python, Java, C++, Rust, and any other language of your taste.\nNote: we want our students to actually follow, understand and implement every detail of the interpreter themselves, instead of just copy-pasting from final solution. The full source code for the language is available in video lectures, showing and guiding how to structure specific modules.\n\n\nWhat’s specific in this class?\n\nThe main features of these lectures are:\nConcise and straight to the point. Each lecture is self-sufficient, concise, and describes information directly related to the topic, not distracting on unrelated materials or talks.\nAnimated presentation combined with live-editing notes. This makes understanding of the topics easier, and shows how (and when at time) the object structures are connected. Static slides simply don’t work for a complex content.\nLive coding session end-to-end with assignments. The full source code, starting from scratch, and up to the very end is presented in the video lectures class. In the course we implement a full AST interpreter for our programming language.\n\n\nReading materials\nAs further reading and additional literature for this course the following books are recommended:\nStructure and Interpretation of Computer Programs (SICP) by Harold Abelson and Gerald Jay Sussman\nProgramming Languages: Application and Interpretation (PLAI) by Shriram Krishnamurthi\n\n\nWhat is in the course?\n\n\nThe course is divided into four parts, in total of 18 lectures, and many sub-topics in each lecture. Please address curriculum for detailed lectures descriptions.\n\n\nPART 1: COMPILERS CRASH COURSE\nIn this part we describe different compilation and interpretation pipelines, see the difference between JIT-compilers and AOT-compilers, talk about what is a Virtual machine and Bytecode-interpreter, and how it difference from an AST-interpreter, show examples of native code, and LLVM IR, and other topics.\n\n\nPART 2: INTERPRETERS: BASIC EXPRESSIONS AND VARIABLES\nIn this part we start building our programming language, and consider basic expressions, such as numbers, strings, talk about variables, scopes, and lexical environments, control structures, and touching parser generator.\n\n\nPART 3: FUNCTIONS AND FUNCTIONAL PROGRAMMING\nIn this part we start talking and implementing function abstraction, and function calls. We describe concept of closures, lambda function, and IILEs (Immediately-invoked lambda expressions). In addition, we touch topics of Call-stack, recursion, and syntactic sugar.\n\n\nPART 4: OBJECT-ORIENTED PROGRAMMING\nThe final part of the course is devoted to the object-oriented support in our language. We describe the class-based, and prototype-based approaches, implement concept of classes, instance and modules.\n\n\nI hope you’ll enjoy the class, and will be glad to discuss any questions and suggestion in comments.\n\n- Dmitry Soshnikov",
      "target_audience": [
        "Curious engineers who want to know and understand how programming languages work under the hood"
      ]
    },
    {
      "title": "10 Day MySQL Bootcamp | My SQL Database Design for Beginners",
      "url": "https://www.udemy.com/course/sql-mysql-database-design-course/",
      "bio": "Learn SQL Using MySQL with Over 150+ Examples, Hands-On Lectures, and Challenges. Beginner to Advanced My SQL in 10 Days",
      "objectives": [
        "By the end of this course, you will be able to write SQL queries to perform data analysis and even manage the data on their own confidently.",
        "Concepts applicable to Databases such as PostgreSQL, Oracle, and Microsoft SQL Server",
        "Learn how you can design your own database and structure it by learning about different relationships and normalization techniques.",
        "Gain comprehensive knowledge of SQL syntax to query, modify, and manage data in databases effectively, using MySQL. Concepts and SQL knowledge applicable to pla",
        "Develop strong foundational skills in database creation, manipulation, and management using MySQL, a popular open-source relational database management system.",
        "Learn to do data analytics to extract actionable insights from complex datasets using advanced SQL queries, these can help you make informed business decisions.",
        "Develop a rounded understanding of database concepts, including database design, normalization, which are essential in maintaining data integrity and consistenc",
        "Engage in 50+ hands-on challenges to apply your acquired knowledge in real-world scenarios using My SQL",
        "Learn how you can use MySQL with popular development environments like Java and Python."
      ],
      "course_content": {
        "Day 0: Introduction to Our SQL with MySQL Course": [
          "Welcome to the SQL Database Design with MySQL Course",
          "How to Download the Lecture Resources"
        ],
        "Day 1: Getting Started With SQL Using MySQL": [
          "Introduction to DAY 1",
          "Basics: Understanding Data and Databases",
          "What is DBMS (Database Management System)?",
          "Introduction to Relational Databases Concepts",
          "Overview of SQL",
          "Installing MySQL on Windows",
          "Installing MySQL on Mac",
          "Installing MySQL on Linux",
          "MySQL Interface",
          "Creating Database to work on this Course",
          "USE Database in SQL",
          "Basic SQL Query with MySQL",
          "Mastering Data Selection",
          "Doing More with SELECT",
          "Refining Data Retrieval",
          "Challenge: Getting Overview Of Products",
          "Challenge: Specific Product Information",
          "Comments in SQL",
          "DAY 1: Review",
          "Section 2 Recap Quiz"
        ],
        "Day 2: SELECT - A Closer Look | Learn SQL with MySQL": [
          "Introduction to DAY 2",
          "Introduction to SELECT Statement",
          "Data Types in SQL",
          "Eliminating Duplicate Rows using SQL",
          "Challenge: Product Diversity",
          "Exploring Data Uniqueness",
          "Column Aliases in SQL",
          "Enhancing Data Clarity",
          "Challenge: Customer Report",
          "Using Expressions with SELECT",
          "Product Revenue Calculation",
          "What are NULL Values in SQL",
          "Handling NULL Values in SQL",
          "Null Value Handling",
          "Sorting Results with ORDER BY",
          "Effective Data Sorting",
          "Challenge: Pricing Review",
          "Limiting Results with LIMIT",
          "Top Scoring Players",
          "Challenge: Premium Products",
          "DAY 2: Review",
          "Section 3 Recap Quiz"
        ],
        "Day 3: WHERE - A Closer Look | Learn SQL with MySQL": [
          "Introduction to DAY 3",
          "Introduction to WHERE Clause",
          "Filtering the results",
          "Operators in SQL",
          "Arithmetic Operators in SQL",
          "Profit Analysis",
          "Challenge: Tax Calculations",
          "Comparison Operators in SQL",
          "Hire Date Filter",
          "AND Operator: Working with Multiple Conditions",
          "Student Performance Evaluation",
          "Challenge: Accessories under $30",
          "OR Operator: Working with Multiple Conditions in SQL",
          "Course Enrollment",
          "Challenge: Inventory Check",
          "NOT Operator in SQL",
          "Voter Eligibility Check",
          "Alternative to Multiple OR’s",
          "Color Preference Survey",
          "Challenge: Customer Location",
          "Challenge: Product Popularity",
          "Between in SQL",
          "Sports Events Age Group",
          "Challenge: Price Adjustment",
          "Searching for a Pattern in Data with LIKE Operator",
          "Find University Names",
          "Challenge: Searching for Stars",
          "Using WHERE with NULL Values",
          "Bank Account Status",
          "Nested WHERE Clauses using MySQL"
        ],
        "Day 4: Grouping and Aggregation | Learn SQL with MySQL": [
          "DAY 3: Review",
          "Introduction to Day 4",
          "Introduction to Grouping and Aggregation in SQL",
          "Understanding Aggregate Functions in SQL",
          "Total Grocery Inventory",
          "The GROUP BY Clause in SQL",
          "Art Sales Summary",
          "Challenge: Sales Volume",
          "Combining Aggregate Functions and GROUP BY",
          "Challenge: Customer Demographic",
          "Challenge: Retrieving Best Sellers",
          "Grouping By Multiple Columns",
          "Enrollment Summary",
          "The HAVING Clause in SQL",
          "Top-Performing Bands",
          "Challenge: Premium Customers",
          "Challenge: Frequent Shoppers",
          "Challenge: Customer Spending Habits",
          "Nested Aggregation and Grouping",
          "High-Scoring Courses",
          "Common Pitfalls and How to Avoid Them",
          "Practical Applications of Grouping and Aggregation",
          "DAY 4 Review",
          "Section 5 Recap Quiz"
        ],
        "Day 5: JOINS in SQL | Learn SQL with MySQL": [
          "Introduction to Day 5",
          "Introduction to Joins in SQL",
          "INNER JOIN in SQL",
          "Region Climate Data",
          "Inner Joins with Multiple Tables",
          "Student Enrollment",
          "Challenge: Product Names in Sales Volume",
          "LEFT JOIN in SQL",
          "Product Reviews",
          "Challenge: Product Sales Analysis",
          "RIGHT JOIN in SQL",
          "Department Employees",
          "Understanding ON vs USING in Joins",
          "Self Join in SQL",
          "Employee Supervisors",
          "Challenge: City-Wise Customer Analysis",
          "CROSS JOIN in SQL",
          "Team Combinations",
          "NATURAL JOIN in SQL",
          "University Departments",
          "Challenge: Customer Analysis",
          "Challenge: Customer Purchase Analysis",
          "Common Pitfalls and Best Practices",
          "DAY 5 Review",
          "Section 6 Recap Quiz"
        ],
        "Day 6: Database Design | Learn SQL with MySQL": [
          "Introduction to Day 6",
          "Introduction to Database Design",
          "QuantumTutors - Our New Startup",
          "Introduction to Entity-Relationship Model",
          "ER Diagrams in Database Design",
          "One to One Relationship",
          "One to Many Relationship",
          "Many to Many Relationship",
          "Normalization Techniques",
          "First Normal Form (1NF)",
          "Second Normal Form (2NF)",
          "Third Normal Form (3NF)",
          "Identifying Relationships for Database Design",
          "DAY 6 Review",
          "Section 7 Recap Quiz"
        ],
        "Day 7: DDL in SQL | Learn SQL with MySQL": [
          "Introduction to DAY 7",
          "Introduction to DDL in SQL",
          "Creating and using Database",
          "Challenge: Database for QuantumTutors",
          "CREATE Statement in SQL",
          "Describing Tables in SQL",
          "Primary Keys in Database",
          "Foreign Keys in Database",
          "Challenge: Defining REST Of the Tables",
          "Sample Data For MySQL",
          "Copy Tables in SQL",
          "ALTER Statement in SQL",
          "ALTER to add column",
          "Challenge: Course Duration",
          "ALTER to Drop column",
          "Challenge: Changes in Business Model",
          "ALTER to modify column",
          "Challenge: Managing Integrity",
          "Challenge: Course Categorization",
          "DROP Statement in SQL",
          "DROP and Foreign Keys in Database",
          "TRUNCATE Statement in SQL",
          "Challenge: Data Pruning",
          "DROP with references",
          "RENAME Statement in SQL",
          "Day 7 Review",
          "Section 8 Recap Quiz"
        ],
        "Day 8: DML in SQL | Learn SQL with MySQL": [
          "Introduction to DAY 8",
          "Introduction to DML Statements in SQL",
          "Working with Insert Statements",
          "Challenge: New Admin Onboarding",
          "Inserting multiple records at once",
          "Database Insert Statements Challenge",
          "Challenge: New Instructors Onboarding",
          "Inserting data from another table",
          "Copying Data Between Tables",
          "Update statement in SQL",
          "Modifying Employee Information",
          "Challenge: Course Title Improvements",
          "Updating multiple columns",
          "Updating Multiple Employees Information",
          "Challenge: Profile Update",
          "Updating multiple rows in SQL",
          "Advanced Employee Performance Update",
          "Challenge: Discounted Courses",
          "Deleting specific records from the table",
          "Employee Records Deletion",
          "Challenge: Course Retirement",
          "Deleting all records from the table",
          "Challenge: Complete Reset",
          "Difference between DROP, DELETE, and TRUNCATE",
          "DAY 8 Review",
          "Section 9 Recap Quiz"
        ],
        "Day 9: SubQueries and Functions | Learn SQL with MySQL": [
          "Introduction to DAY 9",
          "Subqueries Introduction",
          "Subquery Utilization with WHERE and IN",
          "Challenge: Course Popularity",
          "Correlated and Non-Correlated Subqueries using SQL",
          "Challenge: Course with Highest Price",
          "Exists and Not Exists with Subqueries",
          "Challenge: Instructors Not Teaching",
          "Using ANY and ALL with Subqueries in SQL",
          "Challenge: Top Performing Instructors",
          "Single Row Subqueries in SQL",
          "Single-Row Subquery Challenge",
          "Multi Row Subqueries in SQL",
          "Multi-Row Subquery with IN Operator Challenge",
          "Inserting and Deleting using Subquery",
          "Challenge: Remove Reviews for Courses Not Offered",
          "DAY 9 Review",
          "Section 10 Recap Quiz"
        ]
      },
      "requirements": [
        "No prior experience in SQL or database necessary, everything will be taught in the course"
      ],
      "description": "You can learn MySQL Database Design and become a Data Analytics wizard in just 10 days!\nStep into the realm of database management and SQL proficiency with our immersive 10-day course using My SQL. This course is structured to facilitate learners with no prior experience, gradually leading up to advanced concepts, making you adept in handling and manipulating data using MySQL.\nReal World, Practical MySQL Course\nThis is a completely hands on course where we work with real data and learn SQL using real world scenarios.\n\n\n10-Day My SQL Course Breakdown:\n\n\nDay 1: Getting Started with SQL & My SQL\nIntroduction to Databases\nSetting up MySQL / My SQL\nUnderstanding basic database terminology\nGetting acquainted with MySQL interface\nWriting basic SQL Statements and querying the database\n\nDay 2: Select - A Closer Look\nDelving into SELECT statement\nSelecting and extracting data from tables\nVarious options and settings associated with SELECT\n\n\nDay 3: Where - A Closer Look\nUnderstanding WHERE clause\nFiltering data based on various conditions\nComplex WHERE clauses\n\n\nDay 4: Grouping and Aggregation\nIntroduction to data grouping\nUsing aggregate functions (SUM, AVG, MAX, MIN, COUNT)\nUnderstanding GROUP BY and HAVING clauses\n\n\nDay 5: JOINS\nOverview of JOINS\nTypes of JOINS (INNER, LEFT, RIGHT, SELF, CROSS, NATURAL)\nPractical examples and use cases\n\n\nDay 6: Database Design\nPrinciples of database design\nUnderstanding relationships (One-to-One, One-to-Many, Many-to-Many)\nNormalization and its types\n\n\nDay 7: DDL (Data Definition Language)\nUnderstanding DDL commands (CREATE, ALTER, DROP)\nCreating and managing tables and databases\n\n\nDay 8: DML (Data Manipulation Language)\nOverview of DML commands (INSERT, UPDATE, DELETE)\nManipulating data in tables\n\n\nDay 9: SubQueries and Functions\nDeveloping subqueries\nWorking with ANY, ALL, EXISTS, NOT EXISTS\n\n\nDay 10: MySQL with Python\nSetting up Python MySQL environment\nExecuting MySQL commands from Python\n\n\nDay 10: MySQL with Java\nConfiguring MySQL with Java\nExecuting MySQL commands from Java\n\n\nWhat will You Learn in this SQL Database Design Course?\nBy the end of this course, you will be able to write SQL queries to perform data analysis and even manage the data on their own confidently.\nLearn how you can design your own database and structure it by learning about different relationships and normalization techniques.\nGain comprehensive knowledge of SQL syntax to query, modify, and manage data in databases effectively, using MySQL. Concepts and SQL knowledge applicable to platforms like PostgreSQL, and SQL Server.\nDevelop strong foundational skills in database creation, manipulation, and management using MySQL, a popular open-source relational database management system.\nLearn to do data analytics to extract actionable insights from complex datasets using advanced SQL queries, these can help you make informed business decisions.\nDevelop a rounded understanding of database concepts, including database design, normalization, which are essential in maintaining data integrity and consistency.\nEngage in 50+ hands-on challenges to apply your acquired knowledge in real-world scenarios using My SQL\nLearn how you can use MySQL with popular development environments like Java and Python.\n\n\nDatabase Design with MySQL Course Features:\nOver 150+ examples/challenges\nHands-on exercises and real-world project examples\nTaught by an experienced instructor\nComes with a Certificate of completion\n\n\nPrerequisites for this SQL with MySQL Course:\nNo prior experience in SQL or database is necessary\n\n\nTarget Audience for this SQL with MySQL Course:\nProgrammers / Engineering Architects who are looking to learn SQL to build database-driven applications\nAspiring data analysts and business analysts\nProfessionals aiming to upscale their SQL skills\nStudents and enthusiasts who wish to learn SQL to excel in their career\n\n\nLet’s begin on this 10-day journey to transition from a novice to a proficient database master, capable of integrating MySQL functionalities with Python and Java. Let’s get data-driven.\nAre you ready?\nEnroll now, and we’ll see you in lesson 1.",
      "target_audience": [
        "Programmers / Engineering Architects who are looking to learn SQL to build database-driven applications",
        "Aspiring data analysts and business analysts",
        "Professionals aiming to upscale their SQL skills",
        "Students and enthusiasts who wish to learn SQL to excel in their career"
      ]
    },
    {
      "title": "Become A Professional Java Developer From Scratch",
      "url": "https://www.udemy.com/course/become-a-professional-java-developer-from-scratch/",
      "bio": "Master The Worlds Most Popular Programming Language And Become A Pro Developer From Scratch",
      "objectives": [
        "103 Lectures",
        "Understand variables and perform operations with them",
        "Create Arrays to store data",
        "Create multidimensional arrays to store data",
        "Get the input from the user",
        "Create and manipulate files on the system",
        "Use text input and output to store data",
        "Use binary input and output to store data",
        "Understand Object Orient Programming principals in depth",
        "Use abstract classes and interfaces to model your classes",
        "Handle exceptions",
        "Use Java GUI API to create user interfaces for your Java programs",
        "Use the collections framework to store your data",
        "Use multithreading to make your program execute multiple tasks at the same time",
        "Connect you program to a database, store and fetch data",
        "Use Java servlets to create dynamic web content",
        "Use Java server pages to create dynamic web content",
        "Use Java Server Faces to create dynamic web content"
      ],
      "course_content": {
        "Variables and variables operations": [
          "How To Study This Course",
          "Downloading and setting up our environments",
          "Variables",
          "Numeric operations and String concatenation",
          "Augmented Assignment Operators and Increment and Decrement Operators",
          "Getting Input from the user",
          "Displaying Current time",
          "Assignment"
        ],
        "Loops and Conditionals": [
          "The if statement",
          "Nested If-else statements",
          "Switch statement",
          "Logical Operators",
          "Using if-else statement to controll the input from the user",
          "Conditional Expressions",
          "Loops",
          "Nested Loops",
          "Using loops to controll the user input",
          "Assignment"
        ],
        "Classes, objects and methods": [
          "Classes",
          "Constructors with parameters",
          "Methods",
          "Static, final and scope of a variable",
          "Visibility Modifiers",
          "Data encapsulation",
          "Passing objects to methods",
          "Assignment"
        ],
        "Arrays": [
          "Introducing arrays",
          "Processing arrays",
          "For each loop",
          "Arrays and methods",
          "The Arrays class",
          "Multidimensional arrays",
          "Assignment"
        ],
        "Inheritance and Polymorphism": [
          "Inheritance",
          "Super, overriding and overloading",
          "The Object class",
          "Primitive and Reference variables",
          "The equals method",
          "The protected modifier and preventing Extending and Overriding",
          "Assignment"
        ],
        "Abstract Classes and interfaces": [
          "Abstract Classes",
          "Interfaces",
          "Assignment"
        ],
        "Exception handling and Text I/O": [
          "Exceptions",
          "Getting information from exceptions and throwing our own exceptions",
          "The finally clause",
          "The File class",
          "Writing and reading data",
          "Reading data from the web",
          "Assignment"
        ],
        "Binary Input/Output": [
          "FileInputStream and FileOutputStream",
          "DataInputStream and DataOutputStream",
          "BufferedInputStream and BufferedOutputStream",
          "ObjectInputStream and ObjectOutputStream",
          "RandomAccessFile class",
          "Assignment"
        ],
        "Java GUI": [
          "JFrame",
          "Adding a button to our JFrame",
          "Layout Managers",
          "Using JPanel as a subcontainer",
          "Helper Classes",
          "Image Icons",
          "Other components",
          "Listeners and Inner classes",
          "Alternative ways to create listeners",
          "Mouse Listeners and Mouse Adapters",
          "The Timer class",
          "Simple Login App",
          "More GUI Components",
          "Processing JComboBox and JList",
          "JScrollBar and JSlider",
          "CardLayout, BoxLayout and Box",
          "JTabbedPane",
          "Menus",
          "Dialogs",
          "JColorChooser and JFileChooser",
          "Assignment"
        ],
        "Collections": [
          "ArrayList and LinkedList",
          "Stacks, Vectors, Sets and Maps",
          "Note About Collections"
        ]
      },
      "requirements": [
        "Eclipse and Netbeans(We will download both in the first video)"
      ],
      "description": "Over 4400 Enrolled Students Are Already Learning Java, Enroll Now And Start Learning Today\nJoin me on this fantastic journey where we are going to explore Java from ground up.\nIf you never coded before and want to learn Java this is a perfect course for you. We are going to start from basics so that you will feel comfortable writing your own code.\nThis course assumes no previous experience and takes you from beginner concepts like variables, functions and classes and then goes into more detail while we explore advanced Java concepts.\nWe are also going to learn Object Oriented Programming principles which will help you learn any other programming language after you have mastered Java in this course!!\nI have also added challenging task for you to complete and test your knowledge which is going to bring you from a complete beginner to an experienced developer comfortable writing any program in Java.\nYou will also benefit from my quick response (I check Udemy forums every day if some student has encountered a problem) and you will also get assistance from the other students taking the course.\n\nIf you are a complete beginner join now and master the worlds most popular programming language, on the other hand if you are a developer already, then it will not hurt you to add one more powerful programming language at your disposal!!\nTopics Covered\nVariables\nLoops\nConditionals\nClasses\nObjects\nMethods\nArrays\nMultidimensional Arrays\nInheritance\nPolymorphism\nAbstract Classes\nInterfaces\nHandling Exceptions\nCreating Files\nText Input / Output\nBinary Input / Output\nJava Graphical User Interface\nCollections\nMultithreading\nJava Database Programming\nJava Servlets\nJava Server Pages\nJava Server Faces\n\n\nEnroll Now You Will Not Be Disappointed!!",
      "target_audience": [
        "Complete Beginners",
        "Students with programming experience who want to learn Java"
      ]
    },
    {
      "title": "Salesforce Apex Programming Development training",
      "url": "https://www.udemy.com/course/salesforce-development-training/",
      "bio": "Complete development training for Salesforce Apex : Become a Salesforce developer and get your Developer certification",
      "objectives": [
        "Introduction to Salesforce and Apex Programming",
        "salesforce development Architecture",
        "Best Ways to write Apex classes",
        "Writing Apex and its syntax",
        "Apex class and its structure",
        "Data Member in Apex and Different Type of Data Types",
        "Use of Constant and Type Conversion in Apex",
        "Apex Collection - List, set, Map and its Methods to use with many examples",
        "Apex method and constructor",
        "Looping statements - While, do-while,For, For Each",
        "Conditional Statements- If, If Else, Ternary, Switch",
        "Use of Static in Apex",
        "Apex and Its Database languages - SOQL , SOSL",
        "Apex and Its DataBase Language - INSERT,UPDATE,DELETE,UPSERT,MERGE and Many more",
        "Use of DataBase Method and Database Statements",
        "Invoking Apex",
        "Apex Transactions and Governor Limits",
        "Asynchronous Apex",
        "Working with Data in Apex",
        "Use of Apex Trigger with Many examples",
        "Trigger order of Execution",
        "Asynchronous Apex- Bath Apex with its detail implementation",
        "Apex Scheduler and its Implementation",
        "Use of Future Method and its Best practice",
        "Queueable Apex and Trigger Execution flow",
        "Use of Custom settings in salesforce",
        "Mechanism of Exception Handling in salesforce - Try Catch Finally",
        "How to Be expert in Apex debugging",
        "Write Efficient test classes for your apex",
        "Many Real time scenario to understand"
      ],
      "course_content": {},
      "requirements": [
        "course designed for basic to advance level",
        "having interest to learn salesforce"
      ],
      "description": "You can learn complete salesforce apex development from this tutorial and this is the only tutorial in udemy where you can get more than 20 hour of video of development. We have discussed each concepts in more details so that everybody can understand it easily.\n\n\nAlso, We will be connected on demand if have any doubts on any topic, I will personally clarify all your doubts over live meeting/webinar.\nDont make a second thought, trust me if you want learn salesforce apex development , then it is the correct place and time to subscribe this tutorial.\nWhat will students learn in this course?-\nIntroduction to Salesforce and Apex Programming\nsalesforce development Architecture\nBest Ways to write Apex classes\nWriting Apex and its syntax\nApex class and its structure\nData Member in Apex and Different Type of Data Types\nUse of Constant and Type Conversion in Apex\nApex Collection - List, set, Map and its Methods to use with many examples\nApex method and constructor\nLooping statements - While, do-while,For, For Each\nConditional Statements- If, If Else, Ternary, Switch\nUse of Static in Apex\nApex and Its Database languages - SOQL , SOSL\nApex and Its DataBase Language - INSERT,UPDATE,DELETE,UPSERT,MERGE and Many more\nUse of DataBase Method and Database Statements\nInvoking Apex\nApex Transactions and Governor Limits\nAsynchronous Apex\nWorking with Data in Apex\nUse of Apex Trigger with Many examples\nTrigger order of Execution\nAsynchronous Apex- Bath Apex with its detail implementation\nApex Scheduler and its Implementation\nUse of Future Method and its Best practice\nQueueable Apex and Trigger Execution flow\nUse of Custom settings in salesforce\nMechanism of Exception Handling in salesforce - Try Catch Finally\nHow to Be expert in Apex debugging\nWrite Efficient test classes for your apex",
      "target_audience": [
        "beginner or advance level of salesforce developer",
        "beginner or advance level of salesforce Admin"
      ]
    },
    {
      "title": "Basics of Python in 2 Hours",
      "url": "https://www.udemy.com/course/basics-of-python-course/",
      "bio": "Learn the ABCs of Python 3 programming with plenty of quizzes / projects and exercises. Master the Python basic concepts",
      "objectives": [
        "Absolute understanding about the basics of Python",
        "Basic principles of programming using Python",
        "Create your first Python project",
        "Learn how to code with Python the correct way"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet access"
      ],
      "description": "Python Basics for Absolute Beginners\nThis course will help you master the basic concepts of Python 3.9.6 within just 2 hours. The Basics of Python course covers, the concepts of Python Programming in 2 hours, and then you'll be creating your own applications, working with coding quizzes and challenges to excel what you learned.\nWhy Python?\nPython is one of the world's top 3 programming languages, and it's the most used language by businesses and enterprises. Python developers make over $150,000+ a year and you can create desktop applications, websites and work with Machine Learning Algorithms with Python. The important thing that makes Python a great programming language is its easy syntax and simplicity. Learning Python is easy if you grasp the basics of the language properly, that's the reason in this course, I teach you the very basics so that you'll have a strong foundation in Python basics before moving on with the language.\nWho is this course for?\nThis course is for anyone who wants to get started learning Python Programming and anyone who wants to get a complete idea about the concepts that make up Python Programming language.\nCreate your first Python Project\nGet a complete idea of fundamentals of Python 3\nGet a head-start on Python development\nLearn to code Python the correct way\nGet an absolute understanding about Python basics\nBuy this course today and this is what you'll get\n2 Hours of Explanations + Hands-on Coding to make you understand the basics of Python Programming\nCompletely understand 14 Python Principles and Concepts\nCreate 3 Python Projects\nWork with 10+ Coding Quizzes and Practice Activities\nWho is Bihan Mahadewa?\nBihan Mahadewa is your instructor for this entire course. He is the youngest instructor on the entire Udemy platform with top-rated courses. Bihan runs a successful edTech startup and has been creating online courses for the last 4 years. He has 90K+ students and a 4.4+ star average rating on the instructor profile. Bihan is an individual who is passionate about teaching coding and is also qualified with a degree and a master's in computer science from Westminister University, UK.\nAs an instructor Bihan's goal is to provide you with the skill that you need to tackle problems and create solutions with technology. Let's get started with this course now...",
      "target_audience": [
        "Absolute Beginner Python Developers",
        "Absolute Beginners to Programming",
        "Programmers who wants to learn about how to get started with Python Programming"
      ]
    },
    {
      "title": "Learn Machine Learning Course with Python A to Z",
      "url": "https://www.udemy.com/course/learn-machine-learning-course-with-python-ml/",
      "bio": "Gain a solid understanding of machine learning concepts, algorithms, and applications in various fields.",
      "objectives": [
        "Understanding Machine Learning Language",
        "Data Distribution",
        "Bootstrap Aggregation",
        "Cross Validation",
        "Decision Tree",
        "Hierarchical Clustering",
        "Logistic Regression",
        "Mean, Median, and Mode",
        "Normal Data Distribution"
      ],
      "course_content": {
        "Introduction": [
          "Mean, Median, and Mode",
          "Percentiles",
          "Data Distribution",
          "Normal Data Distribution",
          "Multiple Regression",
          "Scaling",
          "Train or Test",
          "Decision Tree",
          "Confusion Matrix",
          "Hierarchical Clustering",
          "Grid Search",
          "Categorical Data",
          "K-Means Clustering",
          "K-nearest Neighbors",
          "Bootstrap Aggregation",
          "Cross Validation",
          "Logistic Regression"
        ]
      },
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Welcome to the \"Learn Machine Learning Course with Python A to Z,\" your comprehensive guide to mastering the fascinating world of machine learning using Python. Whether you're an aspiring data scientist, software engineer, or business analyst, this course is meticulously crafted to take you on a journey from absolute beginner to proficient practitioner in machine learning.\n\n\nMachine learning, a subset of artificial intelligence, has revolutionized countless industries by enabling computers to learn from data and make predictions or decisions without being explicitly programmed. Python, with its simplicity and powerful libraries, such as TensorFlow and scikit-learn, has become the go-to language for implementing machine learning algorithms.\n\n\nKey Highlights:\n\n\nIntroduction to Machine Learning: Gain a solid understanding of machine learning concepts, algorithms, and applications in various fields.\n\n\nPython Basics: Brush up on Python programming fundamentals necessary for implementing machine learning algorithms.\n\n\nData Preprocessing: Learn how to clean, preprocess, and prepare data for machine learning tasks to ensure accurate model training.\n\n\nSupervised Learning: Explore supervised learning techniques, including linear regression, logistic regression, decision trees, and support vector machines.\n\n\nModel Evaluation and Validation: Understand techniques for evaluating and validating machine learning models to ensure their reliability and effectiveness.\n\n\nDeep Learning: Introduce yourself to deep learning concepts and neural networks using Python frameworks like TensorFlow and Keras.\n\n\nReal-World Applications: Apply your machine learning knowledge to real-world projects and case studies across various domains, from healthcare to finance and beyond.\n\n\nWhy Choose This ?\n\n\nComprehensive Learning: This course covers machine learning from the basics to advanced topics, ensuring a thorough understanding of concepts and techniques.\n\n\nExpert Instruction: Benefit from the guidance of experienced instructors passionate about machine learning and dedicated to your success.\n\n\nLifetime Access: Enroll once and enjoy lifetime access to course materials, allowing you to learn at your own pace and revisit concepts whenever necessary.\n\n\nCareer Opportunities: Machine learning expertise is in high demand across industries, making this course a valuable asset for career advancement and professional growth.\n\n\n\n\nEmbark on your journey to master machine learning with Python! Enroll now in \"Learn Machine Learning Course with Python A to Z\" and unlock the power of machine learning algorithms for data analysis, prediction, and decision-making.\n\n\nWhether you're a beginner or have some experience in programming and data science, this course equips you with the knowledge and skills to thrive in the exciting field of machine learning. Don't miss this opportunity to elevate your career and become proficient in machine learning with Python!",
      "target_audience": [
        "Anyone Who Want to Learn Machine Learning"
      ]
    },
    {
      "title": "Test your Core Java skills",
      "url": "https://www.udemy.com/course/testcorejava/",
      "bio": "139 multiple choice questions to test your Core Java skills",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is for anyone who wants to test or brush up their core Java skills or face java interviews.\n\nJava is the most popular language world wide and technologies like Servlets & JSP, J2EE, Struts, Spring, Hibernate, JMS or android for mobile applications are all based on core Java.\n\nQuizzes cover following topics:-\n\nJava syntax and grammar\nJavadoc and developer comments and their significance.\nVariables, Data Types and Operators\nControl Statements: if-else, switch-case and loops\nJava arrays and Command-line arguments\nPackages, classpath and User-input using Scanner\nClasses, objects, constructors, initialization blocks, type of variables, methods and Garbage collection\nObject Oriented Programming Concepts:\nEncapsulation\nInheritance\nPolymorphism\nAbstraction\nAccess specifier, instanceof operator and casting\nString, StringBuilder and Wrapper classes\nException\nEnumeration\nMost of the Quiz questions are not straight forward. There are tricky questions included to flex your java muscles.\n\n\nSo, grab a cup of coffee or your favorite drink and enjoy the test.\nFeatures of Practice Tests:\nYou can pause the test at any time and resume later.\nYou can retake the test as many times as you would like.\nThe progress bar at the top of the screen will show your progress as well as the time remaining in the test. If you run out of time, don’t worry; you will still be able to finish the test.\nYou can skip a question to come back to at the end of the exam.\nYou can also use “Mark for Review” to come back to questions you are unsure about before you submit your test.\nIf you want to finish the test and see your results immediately, press the stop button.\n\n\nCopyright 2025 Udayan Khattry\nAll rights reserved. No part of this course may be reproduced in any form or by any electronic or mechanical means, including information storage and retrieval systems, without permission in writing from the author.",
      "target_audience": [
        "Anyone who has basic java skills",
        "Anyone looking for quick brush up on fundamentals through questions"
      ]
    },
    {
      "title": "Data Analysis Bootcamp: Master Data Science Skills",
      "url": "https://www.udemy.com/course/data-analysis-bootcamp-master-data-science-skills/",
      "bio": "Learn Data Analysis With Python, Jupyter, Pandas, Dropna - Learn Data Cleaning, Visualization, and Modeling",
      "objectives": [
        "Understand key data concepts like data types, variables, and data cleaning techniques.",
        "Master the powerful Python programming language for data manipulation, analysis, and visualization.",
        "Discover insightful patterns and trends in your data through exploratory data analysis.",
        "Effectively communicate your findings through compelling data visualizations and reports."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup and Basic Data Analysis",
          "More Basic Data Analysis Commands",
          "Counting functions in Data Analysis",
          "Pandas & Pyplot",
          "Linear Regression & Heatmap",
          "Dropna",
          "PD.Pivot Table",
          "DF Rolling",
          "PD.Merge() and PD.Concat()",
          "PD.Cut() and PD.Gcut()",
          "PD.Resample()",
          "Scikit-Learn Pipeline",
          "PD.Merge() and PD.Concat()",
          "Data.sort_values(by=_column_) part 1",
          "Class Project 1",
          "Class Project 2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Are you ready to embark on a data-driven journey? This bootcamp is your first step towards becoming a skilled data analyst. Whether you're a beginner or looking to enhance your data skills, this course is designed to provide you with a solid foundation in data analysis.\nIn this course, you'll learn:\nData Fundamentals:\nUnderstand key data concepts like data types, variables, and data cleaning techniques.\nLearn how to handle missing data and outliers.\nData Analysis with Python:\nMaster the powerful Python programming language for data manipulation, analysis, and visualization.\nUtilize libraries like Pandas to efficiently work with data.\nData Exploration and Visualization:\nDiscover insightful patterns and trends in your data through exploratory data analysis.\nCreate visually appealing data visualizations using various chart types (histograms, bar charts, scatter plots, etc.).\nStatistical Analysis:\nApply statistical methods to draw meaningful conclusions from your data.\nUnderstand hypothesis testing, correlation analysis, and regression analysis.\nData Storytelling:\nEffectively communicate your findings through compelling data visualizations and reports.\nPresent your insights in a clear and concise manner to a non-technical audience.\n\n\nBy the end of this course, you'll be able to:\nClean and prepare data for analysis\nPerform exploratory data analysis to uncover insights\nVisualize data effectively to communicate findings\nApply statistical techniques to draw meaningful conclusions\nUse Python to automate data analysis tasks\nCreate compelling data stories to drive decision-making\n\n\nWhat You'll Get:\nLifetime Access to Course Content: Learn at your own pace, anytime, anywhere.\nHigh-Quality Video Lectures: Clear and concise explanations of each topic.\nPractical Exercises: Apply what you've learned with hands-on projects.\nCertificate of Completion: Showcase your new skills to potential employers.\nNo prior programming experience is required. This course is designed for beginners and assumes no prior knowledge of data analysis or Python. Enroll now and start your data analysis journey today!",
      "target_audience": [
        "Anyone who looking to learn data analysis"
      ]
    },
    {
      "title": "C Programming - Basics to Advanced Level",
      "url": "https://www.udemy.com/course/c-programming-basics-to-advanced-level/",
      "bio": "Learn C Programming Language from Basic to Advanced level easily by understanding every topic with practical session.",
      "objectives": [
        "Develop your skill power logical and verbal wise too.",
        "Gain in-depth knowledge in C Programming from basic to advanced level.",
        "Help you to solve lot of programs.",
        "C being Core Basic Fundamental language to all other languages hence lead to Good Programmer in other languages too.",
        "Crack any Interview in this huge IT Industry.",
        "More than 100 Programs will be solved."
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Introduction": [
          "How to Download CodeBlocks?",
          "Structure of C Program",
          "Quiz 1"
        ],
        "Elements of C": [
          "WAP to print Hello World?",
          "WAP to check Basic datatypes in C?",
          "WAP to print Hello World in new Line?",
          "WAP to show Declaration and Initialization of a variable?",
          "Quiz 2:"
        ],
        "Input-Output In C": [
          "How to take input and output?",
          "Conversion specifications",
          "Reading Input Data using scanf Function",
          "Writing Output Data using printf Function",
          "Quiz 3"
        ],
        "Operators and Expressions": [
          "Arthimetic Operators",
          "Assignment Operators",
          "Increment and Decrement Operators",
          "Relational Operators",
          "Logical or Binary Operators",
          "Conditional Operators",
          "Comma Operator",
          "sizeof Operator",
          "Type Conversion",
          "Quiz 4"
        ],
        "Control Statements": [
          "Control statements and its types",
          "If Else",
          "WAP to check whether a number is negative using If",
          "WAP to print number is larger or smaller of two numbers.",
          "WAP to print whether the number is even or odd",
          "Nesting of if else",
          "WAP to find largest number from three given number",
          "else if ladder",
          "WAP to find the grade of students when the marks of 4 subjects are given.",
          "Loops",
          "While Loop",
          "WAP to print the numbers from 1 to 10 using while loop",
          "WAP to print numbers in reverse order with a difference of 2.",
          "WAP to print the sum of digits of any number.",
          "WAP to find the product of digits of any number.",
          "WAP to find the factorial of any number.",
          "Do While Loop",
          "WAP to print the numbers from 1 to 10 using Do While Loop.",
          "WAP to count the digits in any number",
          "For Loop",
          "WAP to print the numbers from 1 to 10 using for loop",
          "WAP to multiply two positive numbers without using * operator",
          "WAP to generate fibonacci series.",
          "WAP to print armstrong numbers from 100 to 999",
          "break statement",
          "continue statement",
          "Introduction to Goto Control Statement",
          "WAP to find Even and Odd using goto control statement",
          "Introduction to Switch Control Statement",
          "WAP to understand the concept of Switch Control Statement.",
          "WAP to understand the concept of Switch Control Statement using break.",
          "WAP to perform Arithmetic Operations on Integers",
          "WAP to find whether the alphabet is a vowel or consonant",
          "WAP to create a Menu Driven program using infinite loop and switch.",
          "WAP to print Days of a week using switch.",
          "Quiz 5:"
        ],
        "Functions": [
          "What are Functions and their Advantages.",
          "Library functions with program",
          "What are User-Defined Functions",
          "WAP to find sum of two numbers using functions.",
          "Function Definition and its syntax",
          "Function Call and its syntax",
          "Function Declaration and its syntax",
          "WAP that finds whether a number is even or odd.",
          "WAP that finds larger of two numbers.",
          "return statement and its usage using program",
          "Function Arguments and its types",
          "Quiz 6:"
        ],
        "Recursion": [
          "Introduction to Recursion",
          "Tracing a Recursion using Tree Method. Example 1",
          "Program Example 1",
          "Example 2",
          "Program Example 2",
          "Loops VS Recursion",
          "How Recursion uses Stack",
          "Time Complexity using Recurrence Relation",
          "Static and Global Variables in Recursion Example 1",
          "Program",
          "Static and Global Variables in Recursion Example 2",
          "Program",
          "Types of Recursion",
          "Tree Recursion",
          "Indirect Recursion",
          "Nested Recursion",
          "Sum of N Natural Numbers",
          "Factorial of a Number",
          "Finding Power using Recursion",
          "Fibonacci Series",
          "WAP to find the Factorial of a number using Recursion",
          "WAP to raise a floating point number to a positive integer using Recursion.",
          "WAP to to generate the Fibonacci series using Recursion.",
          "Advantages And Disadvantages of Recursion"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "How to declare ,process and access 1D Array in detail",
          "WAP to input values into an array and display them.",
          "WAP to add the elements of an array.",
          "WAP to count the even and odd numbers in a array.",
          "Intialization of 1-D Array",
          "WAP to find the maximum and minimum number in an array.",
          "WAP to reverse the elements of an array.",
          "WAP to convert a decimal number into a binary number.",
          "WAP to search for an item in the array.",
          "WAP to pass array elements to a function and check even or odd.",
          "WAP to pass whole 1-D Array to a function.",
          "WAP to that uses a general function that works on array of different sizes.",
          "2D dimensional Array with Declaration and Accessing Elements",
          "Processing 2-D Arrays",
          "WAP to input and display a matrix.",
          "Initialization of 2-D Arrays",
          "WAP for addition of two matrix",
          "WAP for Multiplication of two matrices",
          "WAP to find the Transpose of matrix",
          "Quiz 7:"
        ],
        "Pattern Programs": [
          "Pattern 1",
          "Pattern 2",
          "Pattern 3",
          "Pattern 4",
          "Pattern 5",
          "Pattern 6",
          "Pattern 7",
          "Pattern 8",
          "Pattern 9",
          "Pattern 10",
          "Pattern 11",
          "Pattern 12",
          "Pattern 13",
          "Pattern 14",
          "Pattern 15"
        ]
      },
      "requirements": [
        "No prerequisites required.",
        "Just will to learn and achieve great things."
      ],
      "description": "Course Description:\nThe C Programming for Beginners course is designed for individuals who have little to no programming experience and wish to learn the basics of programming using the C language. This course will provide a solid foundation in C programming, covering topics such as data types, variables, operators, control statements, functions, recursion, arrays, pointers, structures and unions, files, etc.\nThe course starts with an introduction to the C programming language. It then moves on to explain the fundamentals of programming, including data types, variables, and operators. Students will learn how to use control statements like if-else, for, and while to create conditional and loop structures with practical sessions.\nThe course also covers functions, including how to create and call functions, how to use arguments and return values, and how to create recursive functions. Students will also learn about arrays, how to use them to store data, and how to manipulate the data using array functions.\nThe course concludes with a comprehensive overview of pointers, including how to create and use pointers, how to manipulate memory, and how to use pointers to create dynamic data structures.\nThroughout the course, students will work on programming assignments and quizzes to reinforce their learning. By the end of the course, students will have a solid understanding of the C programming language and will be able to use it to write basic programs.\nCourse Goals:\nUpon completing this course, students will be able to:\nUnderstand the basic concepts of programming and the C programming language.\nWrite simple to advanced programs using data types, variables, and operators.\nUse control statements to create conditional and loop structures.\nCreate and call functions, use arguments and return values, and create recursive functions.\nUse arrays to store and manipulate data.\nUnderstand pointers, create and use pointers, manipulate memory, and use pointers to create dynamic data structures.\n100+ programs will be solved.\nTarget Audience:\nThis course is suitable for anyone who wants to learn programming from scratch or switch to the C programming language. This course is ideal for:\nStudents who want to learn programming as a hobby or to pursue a career in software development.\nProfessionals who wish to upgrade their skills in programming.\nAnyone interested in learning the C programming language.\nPrerequisites:\nThis course does not require any previous programming experience. However, basic knowledge of computer operations and mathematics is recommended.",
      "target_audience": [
        "C Developers, C++ Developers, Java Developers.",
        "School /College Students/ Freshers, Trainers.",
        "Also Other Language Developers as C is Basic Fundamental language to all Other Languages.",
        "In addition with all those who interested in cracking interview"
      ]
    },
    {
      "title": "AutoCAD Programming Using C#.NET - Beginner Course",
      "url": "https://www.udemy.com/course/autocad-programming-using-csharp-beginner-course/",
      "bio": "This is your ultimate guide to learning C# programming in AutoCAD.",
      "objectives": [
        "Learn and understand Fundamentals of C# Programming",
        "Understand .NET Framework and learn Visual Studio IDE 2017",
        "Learn and Understand AutoCAD .NET API structure",
        "Learn how to create your own AutoCAD Plugins",
        "Manipulate AutoCAD Objects using C#",
        "Create AutoCAD objects using C#",
        "Learn how to use Selection Sets and Filters using C#",
        "Develop 2 different projects: 1) Create your own Drawing TitleBlocks for different Paper Sizes through code 2) Create an Audit Program to count different entities in the drawing"
      ],
      "course_content": {
        "Course Outline and Introduction": [
          "Course Outline",
          "Introduction",
          "Who is this course for?",
          "What Will I Learn from this Course?",
          "What is CSharp (C#)?",
          "What is AutoCAD .NET API?",
          "What are the advantages of programming in AutoCAD .NET API?"
        ],
        ".Net Framework and Visual Studio 2017 Community Edition": [
          "Section Overview",
          ".NET Framework Architecture Overview",
          ".NET Framework Class Library, Common Type System, Common Language Runtime",
          "More about.NET Framework Common Language Runtime (CLR)",
          "Visual Studio 2017 Integrated Development Environment (IDE)",
          "Visual Studio 2017 IDE Demo"
        ],
        "C# Fundamentals": [
          "Section Overview",
          "DataTypes and Variables - Value Types (signed/unsigned integers)",
          "DataTypes and Variables - Signed and Unsigned Integer Demo",
          "DataTypes and Variables - Floating Point and Decimal",
          "DataTypes and Variables - Floating Point and Decimal Demo",
          "DataTypes and Variables - Boolean",
          "DataTypes and Variables - Reference Types",
          "DataTypes and Variables - Class Type",
          "DataTypes and Variables - Class Type - Demo",
          "DataTypes and Variables - Interface Type",
          "DataTypes and Variables - Array Type",
          "DataTypes and Variables - Array Type - Demo (Single Dimension)",
          "DataTypes and Variables - Array Type - Demo (Multi Dimension)",
          "C# Operators Overview",
          "C# Assignment Operators",
          "C# Assignment Operators - Demo",
          "C# Unary Operators",
          "C# Unary Operators - Demo",
          "C# Primary Operators",
          "C# Primary Operators - Demo",
          "C# Equality Operators",
          "C# Equality Operators - Demo",
          "C# Additive Operators",
          "C# Additive Operators - Demo",
          "C# Multiplicative Operators",
          "C# Multiplicative Operators - Demo",
          "C# - Relational and Type Operators",
          "C# - Logical, Conditional and Null Operators",
          "C# - Logical, Conditional and Null Operators - Demo",
          "C# Keywords (Reserved Words)",
          "C# - Conditionals Overview",
          "C# Conditionals - If-Then-Else Statement",
          "C# Conditionals - If-Then-Else Statement - Demo",
          "C# Conditionals - Switch Statement",
          "C# Conditionals - Switch Statement - Demo",
          "C# - Loops Overview",
          "C# Loops - For Loop",
          "C# Loops - For Loop - Demo",
          "C# Loops - Foreach Loop",
          "C# Loops - Foreach Loop - Demo",
          "C# Loops - While Loop",
          "C# Loops - While Loop - Demo",
          "C# Loops - Do While Loop",
          "C# Loops - Do While Loop - Demo",
          "Modifiers Overview",
          "Access Modifiers - Overview",
          "Access Modifiers - Accessibility Matrix",
          "Public Access Modifier",
          "Access Modifiers - Non Derived (Same Assembly)",
          "Access Modifiers - Derived Class (Same Assembly)",
          "Access Modifiers - Non Derived Class (different Assembly)",
          "Access Modifiers - Derived Class (different Assembly)",
          "Debugging Overview",
          "Debugging - Demo 1",
          "Debugging - Demo 2",
          "Debugging - Demo 3",
          "Error and Exception Handling - Overview",
          "ExceptionHandling - Demo 1",
          "ExceptionHandling - Demo 2",
          "ExceptionHandling - Demo 3",
          "Introduction to Object Oriented Programming (OOP)",
          "OOP - Encapsulation - Demo (Part 1)",
          "OOP - Encapsulation - Demo (Part 2)",
          "OOP - Inheritance - Demo (Part 1)",
          "OOP - Inheritance - Demo (Part 2)",
          "OOP - Polymorphism - Demo (Part 1)",
          "OOP - Polymorphism - Demo (Part 2)"
        ],
        "Exploring AutoCAD .NET API": [
          "AutoCAD .NET API - Overview",
          "AutoCAD .NET API Assemblies",
          "Using AutoCAD .NET API in C# - Hello AutoCAD Demo Part 1",
          "Using AutoCAD .NET API in C# - Hello AutoCAD Demo - Part 2",
          "AutoCAD .NET API Object Hierarchy",
          "AutoCAD .NET API - Application Object Overview",
          "AutoCAD .NET API - Document Object Overview",
          "AutoCAD .NET API - Database Object Overview"
        ],
        "Creating AutoCAD Objects using AutoCAD .NET API": [
          "Creating AutoCAD Objects using AutoCAD .NET API - Overview",
          "Creating a Line Object - Lab (Part 1)",
          "Creating a Line Object - Lab (Part 2)",
          "Creating a MText Object - Lab",
          "Creating a Circle Object - Lab",
          "Creating an Arc Object - Lab",
          "Creating a LWPolyline Object - Lab"
        ],
        "Manipulate AutoCAD Objects": [
          "Manipulate AutoCAD Objects - Overview",
          "Copy Object using C# - Theory",
          "Copy Object using C# - Lab (Part 1)",
          "Copy Object using C# - Lab (Part 2)",
          "Copy multiple objects using C# - Lab (Part 1)",
          "Copy multiple objects using C# - Lab (Part 2)",
          "Erase Object using C# - Lab (Part 1)",
          "Erase Object using C# - Lab (Part 2)",
          "Move Object using C# - Lab (Part 1)",
          "Move Object using C# - Lab (Part 2)",
          "Mirror Object using C# - Lab (Part 1)",
          "Mirror Object using C# - Lab (Part 2)",
          "Rotate Object using C# - Lab (Part 1)",
          "Rotate Object using C# - Lab (Part 2)",
          "Scale Object using C# - Lab",
          "Copy Object Exercise",
          "Copy Object Solution",
          "Erase Object Exercise",
          "Erase Object Solution",
          "Move Object Exercise",
          "Move Object Solution",
          "Mirror Object Exercise",
          "Mirror Object Solution",
          "Rotate Object Exercise",
          "Rotate Object Solution",
          "Scale Object Exercise",
          "Scale Object Solution"
        ],
        "Exploring AutoCAD Dictionaries (Layers, LineTypes, TextStyles)": [
          "Exploring AutoCAD Dictionaries - Layers Overview",
          "Listing all the Layers in the drawing using C#",
          "Creating a Layer in AutoCAD using C#",
          "Updating a Layer in AutoCAD using C#",
          "Turning the Layer On/Off in AutoCAD using C#",
          "Thawing/Freezing Layer in AutoCAD using C#",
          "Deleting a Layer in AutoCAD using C#",
          "Locking/UnLocking a Layer in AutoCAD using C#",
          "Assigning a Layer to an AutoCAD object using C#",
          "Exploring AutoCAD Dictionaries - LineTypes Overview",
          "Listing all the LineTypes in the drawing using C#",
          "Loading a LineType in the drawing using C#",
          "Setting the Current LineType in AutoCAD using C#",
          "Deleting a LineType in AutoCAD using C#",
          "Setting a LineType to an object using C#",
          "Exploring AutoCAD Dictionaries - TextStyles Overview",
          "Listing all the TextStyles in the drawing using C#",
          "Updating current TextStyle Font in AutoCAD using C#",
          "Setting the Current TextStyle in AutoCAD using C#",
          "Setting a TextStyle to an object using C#"
        ],
        "User Input Functions": [
          "User Input Functions Overview",
          "Using GetString Method - Lab (Part 1)",
          "Using GetString Method - Lab (Part 2)",
          "Using GetPoint Method - Lab",
          "Using GetDistance Method - Lab",
          "Using GetKeyWords Method - Lab (Part 1)",
          "Using GetKeyWords Method - Lab (Part 2)"
        ],
        "Selection Sets and Filters": [
          "Selection Sets and Filters - Overview",
          "Using SelectAll Method - Lab (Part 1)",
          "Using SelectAll Method - Lab (Part 2)",
          "Using SelectOnScreen Method - Lab (Part 1)",
          "Using SelectOnScreen Method - Lab (Part 2)",
          "Using SelectWindow Method - Lab",
          "Using SelectCrossingWindow Method - Lab",
          "Using SelectFence Method - Lab",
          "Using PickFirstSelection Method - Lab",
          "Using SelectionSet Filters - Overview",
          "Using SelectionSet Filters - Selecting Lines",
          "Using SelectionSet Filters - Selecting MTexts Lab",
          "Using SelectionSet Filters - Selecting Polylines Lab",
          "Using SelectionSet Filters - Selecting Blocks (FrenchDoors) Lab",
          "Using SelectionSet Filters - Selecting Blocks (BiFoldDoors) Lab",
          "Using SelectionSet Filters - Selecting objects in a Layer (Walls) Lab",
          "Using SelectionSet Filters - Selecting all objects in a Layer (Stairs) Lab",
          "Using SelectionSets and Filters - Exercises"
        ],
        "Developing Title Block Project - Hands On!": [
          "TitleBlock Project - Overview",
          "Creating Project and TBlock Class - Lab",
          "Creating Classes for each Paper Sizes - Lab",
          "Creating TitleBlock Class - Lab",
          "Handling User Selected Paper Size - Lab",
          "Creating the TitleBlock Border Lines - Lab",
          "Creating the Horizontal Partition Lines - Lab (Part 1)",
          "Creating the Horizontal Partition Lines - Lab (Part 2)",
          "Creating Vertical Partition Lines - Lab",
          "Project Check on the Partition Lines - Lab",
          "Creating the TitleBlock Labels - Lab (Part 1)",
          "Creating the TitleBlock Labels - Lab (Part 2)",
          "Creating the TitleBlock Labels - Lab (Part 3)",
          "Project Check on the Labels",
          "Creating Drawing Information Texts",
          "Debugging the TitleBlock Project - Lab",
          "Completing and Running the TitleBlock Plugin",
          "Audit Drawing Project - Overview",
          "Audit Drawing Project - Demo",
          "Creating the AuditDrawing Project",
          "Creating the AuditDrawing DisplayOnScreen Method",
          "Creating the AuditDrawing Write to TXT File Method",
          "Creating the AuditDrawing Write to CSV File Method",
          "Creating the AuditDrawing Write to HTML File Method",
          "AuditDrawing Plugin Demo",
          "Creating the AuditBlock Method",
          "Creating the AuditBlock GatherBlocksAndCount Method",
          "Creating the AuditBlock DisplayOnScreen Method",
          "Creating the AuditBlock WriteToTXTFile Method",
          "Creating the AuditBlock WriteToCSVFile Method",
          "Creating the AuditBlock WriteToHTMLFile Method",
          "AuditBlock Completed Component - Demo"
        ]
      },
      "requirements": [
        "Knowledge of AutoCAD",
        "Programming knowledge is advantageous but not necessary as we will go through the basics of C# Programming"
      ],
      "description": "This is a very intensive course that gives the student  opportunity to learn C# Programming fundamentals, learn about .NET Framework, learn how to use Visual Studio 2017 and most of all learn how to program AutoCAD .NET API. This course will walk you through the process of developing your own AutoCAD Plugins that will extend AutoCAD Functionalities.",
      "target_audience": [
        "This course is intended for all AutoCAD Users who have a desire to create their own Commands or Plugins and extend AutoCAD functionalities to the next level",
        "For those who are interested in Computer Programming and wanted to learn how AutoCAD and C# work together",
        "For AutoLISP and VBA Programmers who wanted to learn new language and skills and be even more productive"
      ]
    },
    {
      "title": "Python Fundamentals",
      "url": "https://www.udemy.com/course/python-fundamentals/",
      "bio": "Probably the best Python Beginner course on the internet",
      "objectives": [
        "You will get a clear understanding of all Python core concepts",
        "You will be able to write programs that interact with a user through a text terminal",
        "Create basic games based on guessing random number generation",
        "Simulate an intelligent conversation with a computer",
        "Write functions that take in any number of arguments",
        "Create program that encrypts messages",
        "Create a program that cracks encrypted messages"
      ],
      "course_content": {
        "Introduction to the myself and the course": [
          "A bit about me",
          "Setting up with Python"
        ],
        "Core Concepts": [
          "Core Concepts: Key Definitions",
          "Interpreter variables and data types",
          "Print Statements and the Hello World Program",
          "If Statement Theory",
          "If Statements and User Inputs",
          "Demonstrating User Inputs with Turtle",
          "Demonstrating If and Elif Statements with Turtle",
          "Loops Theory",
          "For loops and Iteration",
          "While Loops",
          "Demonstrating Loops with Turtle",
          "Demonstrating Loops + If Statements with Turtle",
          "Factorisation: Apllying Loops and If statements",
          "Introducing Prime Number Recognition to Factorisation",
          "Advanced Loops and Iteration",
          "Demonstrating While Loops with Turtle"
        ],
        "Functions in Python": [
          "Functions",
          "Applying Functions with Turtle",
          "Using Functions to Organise Larger Programs",
          "Built in String Functions in Python"
        ],
        "Coding Exercises in Basic Concepts": [
          "Add Numbers up to",
          "Sphere Volume",
          "Returning a string with the vowels stripped",
          "Returning a reversed String"
        ],
        "Lists and Dictionaries": [
          "Lists",
          "Applying lists with Turtle to select colours",
          "Applying lists with Turtle to go to different co-ordinates",
          "Creating Lists of Prime Numbers",
          "Dictionaries",
          "Applied Dictionary Swapping Words With Synonyms"
        ],
        "Coding Exercises with Strings and Lists": [
          "Factorise a number",
          "Check if a number is a prime",
          "Return all primes under a number",
          "Two List Overlap",
          "Sorting number lists (both low to high and high to low)",
          "Return X terms of the Fibonacci Sequence"
        ],
        "Creating Programs and Applications": [
          "Authentication program Outline",
          "Authentication Program",
          "Authentication Using While Loops and Dictionaries",
          "Guess the Number Game",
          "Extended Guess Number",
          "Reaction Time Program",
          "Extended Reaction Time",
          "Memory Training Program",
          "Extended Memory",
          "M Word Ranking",
          "Extended Word Ranking",
          "Palindrome Discovery"
        ],
        "Encryption from Algorithm to Application": [
          "The history and functionality of the Caesar Cypher Algorithm",
          "Caesar Cypher Dictionary Flowchart",
          "Caesar Cypher Algorithm",
          "Caesar Cypher Dictionary",
          "Caesar Cypher Encryption Program",
          "Caesar Cypher Decryption Program",
          "Smart Decryption",
          "Polyalphabetic Cypher",
          "Congratulations"
        ]
      },
      "requirements": [
        "You should have Windows PC or Apple Mac with OSX",
        "You should install Python",
        "Have a basic understanding of mathematics (Year 8 level)"
      ],
      "description": "Becoming an awesome programmer is a bit like building a large tower of knowledge in that solid foundations are the key to your success. Completing this course will provide you with mastery over these foundations. Here is a quick summary of the journey that awaits you:\n\nCurriculum\nThe course will focus on mastering the following concepts\nvariables (integers, floats and strings)\ncontrol structures ( loops and if statements)\nfunctions\ndata structures (lists and dictionaries)\nLearning Process\nThe course incorporates principles known to help humans learn better, namely: multiple perspectives, revision, feedback and real world application.  The following three step process will help you retain and master all the topics covered in this course:\nStep 1: Demonstrate concept with both visual and text outputs: this is achieved by first writing a program with a text output and then writing another where the output is created visually using turtle.\nStep 2: Test your understanding with 10 coding exercises: all of these are automatically marked using the python unittest module giving you instant valuable feedback.\nStep 3: Apply your understanding to write useful and interesting programs: The core concepts you have learned will be put together into programs which do useful and interesting things like:\nUser authentication with a dictionary\nGuessing number game\nHuman reaction time measurement\nHuman memory training\nPalindrome Discovery (all single word palindromes in English)",
      "target_audience": [
        "High School Students looking to learn programming",
        "Computer professionals looking to get a quick handle on python",
        "Teachers / Tutors looking to find an ideal learning sequence to teach Python programming",
        "Programming students looking to take a practical jargon free approach"
      ]
    },
    {
      "title": "PHP for Beginners to Inventory POS Sales Project - AdminLTE",
      "url": "https://www.udemy.com/course/php-for-beginners-to-inventory-pos-sales-project-adminlte-dashboard/",
      "bio": "Create Inventory POS System Project With Billing by use of Bootstrap Responsive AdminLTE Dashboard With PHP PHP7 MYSQL",
      "objectives": [
        "Students will learn Basics Concept of PHP programming language With fundamentals of web-Client server architecture from Theory to Practicle",
        "You will learn how to create Real time Web Based Inventory POS Project With Admin LTE Dashboard using PHP programming language",
        "You will learn procedural php programming in this project and plugins , Tools , Graphs , Printing Bills And lots of things with adminLTE Dashboard"
      ],
      "course_content": {
        "PHP Basics": [
          "web client server intro",
          "php introduction",
          "bracket installation",
          "xampp server installation",
          "First programe in php"
        ],
        "PHP Variables , Datatypes and Strings": [
          "Variables in PHP",
          "Datatypes in php",
          "String in php",
          "What will be the output of the following PHP code ?"
        ],
        "PHP If Else and Switch": [
          "Ifelse",
          "switch in php"
        ],
        "PHP Operators and Functions": [
          "operators part-01 in php",
          "Operators part-02 in php",
          "Functions in Php"
        ],
        "PHP Arrays": [
          "Php Index Array",
          "Php Associative array",
          "PHP Multidimensional Array"
        ],
        "PHP Loops": [
          "while do while in php-Loops",
          "for and foreach loop in PHP"
        ],
        "PHP Build-in Functions": [
          "Get Post in PHP",
          "getpost with isset in PHP",
          "Date function in PHP",
          "Explode Implode in PHP",
          "include require_once in PHP"
        ],
        "PHP Files - Image Upload": [
          "Files in PHP - Part 01",
          "Files in PHP - Part 02"
        ],
        "PHP Sessions and Cookies": [
          "Session in PHP",
          "Cookie in PHP - Part-01",
          "Cookie in PHP - Part-02"
        ],
        "PHP MYSQL Basics CRUD Database Application": [
          "Crud and Database Connection",
          "Crud Insert Data",
          "Crud Read-Select Data-part-01",
          "Crud Read-Select Data-part-02",
          "Crud Read-Select Data-part-03",
          "Crud Show data into HTML Table",
          "Crud edit Button",
          "Crud Update Data",
          "Crud Delete Data"
        ]
      },
      "requirements": [
        "You need to have Bootstrap ,HTML5 and CSS3 basics fundamentals knowledge, free course you can study on UDEMY . Learn Bootstrap , HTML5 and CSS3 from scratch. It’s not mandatory but it could be helpful for the project , You Should have a background knowledge in Javascript, jQuery, and Bootstrap grid layout."
      ],
      "description": "Requirements\nYou need to just a Computer or Laptop with Internet Connection and DESIRE to learn programming in PHP.\nYou have to knowledge of Bootstrap, HTML5 and CSS3 basic principles for project, You can find free course for bootstrap , HTML5 and CSS3  on UDEMY from scratch. It’s not mandatory but it could be helpful for the project Development,You Should have basic background in Javascript, jQuery and Bootstrap grid layout.\nDescription\nWould you like to learn  Basic fundamentals of PHP with Inventory POS System Real time Project and sell it to companies that wants to manage their inventory and billing?\nIn this course you will learn basic fundamentals of PHP with Inventory POS System from scratch using the programming language PHP7, combining several resources that will allow you to offer useful characteristics for any company that needs to open a store or manage their sales and stock.\nThis is From PHP BASICS to REAL TIME PROJECT course where I will teach you step by step the basics fundamentals of PHP with creating WEB APPLICATION with PHP under the Procedure way with PDO(PHP DATA OBJECT),  when you finish it, you could sell it to your clients or it could be used as a basis to develop other complex web applications.\n\n\nThis PHP Basics:\nPHP Introduction\nFirst program in PHP\nVariables\nData Types\nArrays\nFunctions\nConditional Statements\nLoops\nBuilt - In Functions\nSessions & Cookies\nSQL Injections\nBasic CRUD Operation\n\n\n\n\nPOS SYSTEM characteristics:\nLogin Module\nUser Registration\nCategory\nProducts & Stock\nInventory management\nInvoice Billing PDF printing\nSales Order with different payment methods\nSales report\nBest-selling products report\nStock product control\nDaily report\nMonthly report\nDate range report\nAdapted to all devices (Responsive design)\n\n\nLibraries you will learn how to use:\nAdminLTE Dashboard : Great open source template for responsive software Development.\njQuery DataTable: Used for dynamic tables creation.\nChartJS:Used for dynamic graphics and charts.\nDate Range Picker: Used for selecting date ranges.\nSelect2 Plugin: For Searcing products in sales order\nSweetalerts: Awesome alerts library.\nFPDF :PHP extension for PDF format printing.\n\n\nAnd Many others...\nHOW’S THE COURSE?\nThe course is divided in several sections. In the first section we will talk about the Fundamental of Web-Client architecture with PHP BASICS .Then we will work for developing  the Inventory POS system.\nAnd the following sections we will build, step by step from scratch, every single module that will be part of our Inventory POS system from HTML, CSS stylesheet, Javascript interaction and jQuery, along other plugins and server-side connection using PHP 7 with PDO(PHP DATA OBJECT) under the Procedure pattern using MySQL database.\n\n\nHOW LONG DOES IT TAKE TO COMPLETE THE COURSE?\nIt is up to you. I guess that you would take less than three weeks to complete it, but it depends on your availability and workflow.\n\n\nWHAT ARE THE MINIMUM REQUIREMENTS?\nDownload the material where you can find the resources for the first lesson in each section.\nYou should have a basic knowledge on Bootstrap , HTML5 and CSS3, course.",
      "target_audience": [
        "This course is for PHP Beginners ,IT Students , entrepreneurs or freelancers that want to create Web Applications with PHP and MySQL and sell it to clients or companies for software business or it can be help for PHP Developers."
      ]
    },
    {
      "title": "Oracle Certified Associate Java Programmer (OCAJP) 1Z0-808",
      "url": "https://www.udemy.com/course/oracle-certification-1z0-808-and-1z0-811-learnit/",
      "bio": "Preparation for Oracle Certification (Java Certification) 1Z0-808 & 1Z0-811 with example and home tasks.",
      "objectives": [
        "Java :)",
        "Obtain necessary skills to pass 1Z0-808 Certification",
        "Obtain necessary skills to pass 1Z0-811 Certification",
        "Receive the confidence in passing Oracle Exam",
        "Master Java Syntax",
        "Object-oriented programming",
        "Code examples for each topic",
        "Practical tips"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Unlimited access to 'Learn IT' application for students",
          "Tips to Improve Your Course Taking Experience",
          "Additional Free Learning Materials to Use During the Course",
          "About 1Z0-808 Oracle Certification & the Course",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Java Basics": [
          "Why Java and why this course? What is JDK, JRE and JVM?",
          "About Latest Java Version",
          "JDK Installation",
          "First application: Hello World App",
          "Homework Solution: .bat file creation",
          "Integrated Development Environment, Eclipse Overview",
          "Comments in Java source code",
          "Quiz: Java Basics - Check yourself"
        ],
        "Primitive Data Types, Variables and Arrays": [
          "Primitive types and variables",
          "Number Systems",
          "Arrays",
          "Quiz: Primitive data types, variables and arrays - Check yourself"
        ],
        "Eclipse: Tips and Tricks": [
          "Packages: creation and package presentation in eclipse",
          "Plugins: how to install free plugins, eclipse marketplace, workspace styles",
          "Code Refactoring in Eclipse"
        ],
        "Operators and Operations with primitive types": [
          "Operators in Java",
          "Operations with integers and floating-point numbers, BigDecimal type",
          "Math class, NaN, Infinity",
          "Type of the expression in Java",
          "Compare primitive and reference types & Java Memory Model",
          "Read user input from console",
          "Simple console integer calculator",
          "Calculate Area of Triangle",
          "Calculate Circle Circumference",
          "Homework review: Operators and Operations",
          "Quiz: Operators and Operations with primitive types - Check yourself"
        ],
        "Strings in Java": [
          "String: object creation and main methods overview",
          "String comparison: How to compare Strings and what is String Pool",
          "Escape Sequences in Java",
          "String Formatting",
          "Regular expressions in Java",
          "Format floating-point number",
          "Split Words",
          "Homework review: String",
          "Quiz: Strings in Java - Check yourself"
        ],
        "Control Statements": [
          "'if - else' construction",
          "Admin and Guest mode for application",
          "Simple Number Calculator",
          "Homework review: 'if' statement",
          "'switch' construction",
          "User Activity Selector",
          "Homework review: 'switch' statement",
          "Quiz: Control Statements - Check yourself"
        ],
        "Miscellaneous": [
          "Random numbers generation"
        ],
        "Iteration Statements (Loops) in Java": [
          "'while' loop",
          "'do-while' loop",
          "'for' with condition loop",
          "'for each' loop",
          "Nested loops",
          "Jump Statements - Break and Continue",
          "Labels in Java",
          "Print digits from new line",
          "Pyramid in console",
          "Print matrix to console",
          "Homework review: Iteration Statements (Loops)",
          "Quiz: Iteration Statements (Loops) in Java - Check yourself"
        ],
        "Methods in Java": [
          "Methods in Java: Overview",
          "Parameter Passing Mechanism in Java",
          "Recursive methods",
          "Variable Length Arguments",
          "Find max int in array",
          "Draw empty rectangle",
          "Calculate Amount of Words",
          "Filter String array",
          "Rotate Matrix",
          "Extend Array",
          "Greatest Common Divisor",
          "Sum all digits in number",
          "String Processor",
          "Turn each first letter in a word to capital",
          "Convert decimal to Roman numbers and vice versa",
          "Homework review: Methods",
          "Quiz: Methods in Java - Check yourself"
        ]
      },
      "requirements": [
        "No previous knowledge is required. Course designed for students to learn Java from scratch"
      ],
      "description": "From this course, you can learn everything you need to know to pass Oracle Certifications 1Z0-808 & 1Z0-811.\nThere are a lot of other courses on this topic. So, why would you choose exactly this course?  Here are just a few reasons:\n\n- Coding examples\nTo learn to program is not enough just watching videos and reading books. You also need to have a lot of practice. In this training course, you will review multiple practical tasks and coding examples which will help you learn and understand Java better.\n\n- Open source code\nWe hide nothing from our students! Including the source code for the home task solutions and source code of examples that were shared during the lesson. Having the source code you can just copy and paste it to run it on your local computer to understand how things work better.\nYou are allowed to use all source code examples for learning purposes. This helps significantly to configure the environment and make tests work, especially in case students didn't work with any testing framework in the past.\n\n- Q&A support\nThe significant difference between the online and offline learning process is the instructor's availability. If you are in one room with a tutor he always can help you to get understand the specific concept or to help fix your code on your computer.\nIn this course, we are supporting students with answers to any questions flagged in the Q&A section. In case there will be recurring questions - separate video lessons will be created to show how to address the issue.\nSo with this course you are not just getting video materials, code exercises, source code, access to the free mobile application without limits (which is still pretty cool, huh? :) ), but you also get tutor support and answers to your questions along with this course.\n\n- Relevant knowledge\nAfter our team investigated other Java courses on Udemy we realized that most of them have nothing in common with real life. The information which is shared there is very old and significantly out of date. For example, the instructor teaches a framework which is not been used already for 15 years. Or instructors do stress on the programming design which is not used anymore at all!\nThe instructor of this course is a consultant in a top-rated IT outsourcing company and helps to bring cutting-edge solutions in IT for all his clients. Feel free to check the LinkedIn page of the instructor and check skills endorsement. More than 19 thousand people across all over the world (BTW most of them are from the top 100 companies of the world) evaluated the skills of Andrii Piatakha.\nWith this course, you can be sure that you will spend your time learning the right things from one of the best IT consultants in the world.\n\n- Free mobile App without limits for our students\nKnowing Java is one skill. Be able to pass interviews in the company - that is another skill :) Nowadays a lot of companies use tests to select candidates on the first level of interview. We developed applications to practice skills specifically for such purposes.\nIn this course, we will provide you link to download our FREE mobile app for android. (soon it will be also available for iOS platforms)\nThe instructor of this course comes up with hundreds of tests that are used to test the knowledge of candidates. With this application, you will be well-prepared for the interview.\nAlso, only for our students - there is no limit on attempts to pass certification. In the course, we will tell you how to set up a special bonus code that will remove restrictions for our students inside the app.\n\n- High concentration of useful material in each lesson\nSometimes you can notice that watching 5 minutes of our lesson is equivalent to watching another 30 minutes lesson.\nThis is because time spent for preparation for the lesson (script for the lesson, lesson structure) and video editing (to cut boring pieces of the lesson or time when the program loads) sometimes 10 times as much (sometimes even 20) as the final lesson duration after video editing.\nAlso, each topic is separated from another. In case some concept will be explained in the next lesson and you don't need to worry about understanding this in the scope of this lesson - the instructor will make an announcement when a specific topic will be covered.\nGo and try it yourself! We will appreciate your feedback.\n\n\n\n\nSo don't wait! Take a look at the lessons' preview if you still have doubts!\nBuy this course today, and you will get all updates for FREE!\nFor those who successfully passed this training course, or for students who were recognized for asking amazing questions, there is a special offer from the IT-Bulls company! The creator of this course is IT-Bulls company CEO and Founder. We are always in search of talents to run our amazing startups together with you. Probably you always dreamed about running your startup? In this course, you will be able to find the team who will teach you how to do that and (in particular cases) will be glad to help with implementation!\nHope you enjoy this course! And remember, we appreciate all your feedback! Your feedback will help us to become even better! Your feedback will help us to create to best Java course ever!\nSee you at the lessons! :)",
      "target_audience": [
        "People who want to pass oracle certification",
        "Software engineers during the preparation to Oracle Exam"
      ]
    },
    {
      "title": "Build Minecraft Mod using JAVA - for Kids and Beginners",
      "url": "https://www.udemy.com/course/minecraft-modding-java/",
      "bio": "Minecraft Modding using Forge and JAVA. Easy to follow with over 50 lectures and 6 hours of learning content.",
      "objectives": [
        "Basic JAVA skills, Graphics designing skills, Troubleshooting skills - while developing a Mod for your Minecraft."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the \"Build Minecraft Mod using JAVA\" Course"
        ],
        "Install software tools, understand the tools, platform setup": [
          "Introduction to the Minecraft Modding course",
          "Software Installation",
          "Familiarize the Software Tools",
          "Setup the Platform - Part 1",
          "Setup the Platform - Part 2"
        ],
        "Build a new item in Minecraft": [
          "Introduction to your Minecraft Item",
          "Coding - Part 1",
          "Coding - Part 2",
          "Item - Code Assets",
          "Item - Design Assets",
          "Item - Registry Handler",
          "Item - Check it Out!",
          "Item Quiz"
        ],
        "Build a new block in Minecraft": [
          "Introduction to Minecraft Block",
          "Coding - Part 1",
          "Coding - Part 2",
          "Block - Code Assets",
          "Block - Design Assets",
          "Block - Registry Handler",
          "Block - Check it out!",
          "Block Quiz"
        ],
        "Start to build a toolset in Minecraft": [
          "Introduction to Minecraft ToolKit",
          "Coding - Initialization of ToolInit"
        ],
        "Build a new ace for your toolset in Minecraft": [
          "Coding - Initialization of Axe",
          "Coding - Recipe for Axe",
          "Axe - Code Assets",
          "Axe - Design Assets",
          "Axe - Registry Handler",
          "Axe - Check it Out!"
        ],
        "Build a new pickaxe for your toolset in Minecraft": [
          "Coding - Initialization of Pickaxe",
          "Coding - Recipe for Pickaxe",
          "Pickaxe - Code Assets",
          "Pickaxe - Design Assets",
          "Pickaxe - Check it Out!"
        ],
        "Build a shovel and hoe in Minecraft": [
          "Coding - Initialization of Shovel and Hoe",
          "Coding - Recipe for Shovel and Hoe",
          "Shovel and Hoe - Code Assets",
          "Shovel and Hoe - Design Assets",
          "Shovel and Hoe - Check it Out!"
        ],
        "Build a new and powerful sword in Minecraft": [
          "Coding - Initialization of Sword",
          "Coding - Recipe for Sword",
          "Sword - Code Assets",
          "Sword - Design Assets",
          "Sword - Check it Out!",
          "Tools Quiz"
        ],
        "Build an armour set in Minecraft": [
          "Lets check the standard Armour in Minecraft",
          "Coding - Initialize the Armour (Helmet, Boots, Leggings, Chestplate)",
          "Coding - Recipe for the Armour",
          "Armour - Code Assets for the Helmet, Boots, Leggings and Chestplate",
          "Armour - Design Assets for Helmet, Boots, Leggings and Chestplate",
          "Armour - Design assets continued..",
          "Armour - Registry Handler",
          "Armour - Check it Out!",
          "Armour - What happened? Troubleshooting!",
          "Armour Quiz"
        ]
      },
      "requirements": [
        "A Windows computer",
        "Minecraft installed on your computer",
        "Basic computer knowledge. Tools will be provided with the course."
      ],
      "description": "Students will learn how to create a Minecraft Mod using JAVA programming techniques, and design graphics using GIMP Editor. The course provides you all the installers in easy installation packages, and provide you several coding and graphic templates. The course consists of more than 60 lectures of learning content. The lectures are clearly explained to help kids (7 or above), or any beginners to start their journey in to software development. If you have any errors or problems, you can ask us a question on Udemy. I will get back to you as soon as possible.",
      "target_audience": [
        "Kids or beginners in software development or computer programming, or who want to use JAVA for Minecraft Modding."
      ]
    },
    {
      "title": "Unlock Python Regular Expressions",
      "url": "https://www.udemy.com/course/python-regex/",
      "bio": "Python Regular Expressions are not as hard to master as they seem. Buckle up for a 100% hands-on learning journey!",
      "objectives": [
        "You will learn the ins and outs of Regular Expressions in Python, from scratch.",
        "You will clear the fog on pattern matching and regular expressions once and for all.",
        "You will ultimately gain Intermediate to Advanced pattern matching skills in Python.",
        "You will get notebooks, quizzes, projects and a PDF cheat sheet to boost your learning.",
        "You will have my full support for every course-related question or suggestion.",
        "You will have unlimited, lifetime access to the course anytime, on any device."
      ],
      "course_content": {
        "Some Initial Thoughts": [
          "Just starting out in programming? Read this!",
          "Interested in getting certified in Python?"
        ],
        "Regular Expressions Cheat Sheet": [
          "Download the Python RegEx Cheat Sheet"
        ],
        "Methods and Objects": [
          "The 're' module",
          "The 're' module - Notebook",
          "Raw strings",
          "Raw strings - Notebook",
          "re.compile()",
          "re.compile() - Notebook",
          "re.search()",
          "re.search() - Notebook",
          "re.match()",
          "re.match() - Notebook",
          "re.fullmatch()",
          "re.fullmatch() - Notebook",
          "re.findall()",
          "re.findall() - Notebook",
          "re.split()",
          "re.split() - Notebook",
          "re.sub()",
          "re.sub() - Notebook",
          "re.subn()",
          "re.subn() - Notebook",
          "group() and groups()",
          "group() and groups() - Notebook",
          "start(), end(), span()",
          "start(), end(), span() - Notebook",
          "Optional flags",
          "Optional flags - Notebook",
          "AttributeError: 'NoneType' object has no attribute",
          "AttributeError: 'NoneType' object has no attribute - Notebook",
          "Quiz 1 - Methods and Objects"
        ],
        "Metacharacters and Special Sequences": [
          "Metacharacters - The dot ( . )",
          "Metacharacters - The dot ( . ) - Notebook",
          "Metacharacters - The caret ( ^ )",
          "Metacharacters - The caret ( ^ ) - Notebook",
          "Metacharacters - The dollar sign ( $ )",
          "Metacharacters - The dollar sign ( $ ) - Notebook",
          "Metacharacters - The asterisk ( * )",
          "Metacharacters - The asterisk ( * ) - Notebook",
          "Metacharacters - The plus sign ( + )",
          "Metacharacters - The plus sign ( + ) - Notebook",
          "Metacharacters - The question mark ( ? )",
          "Metacharacters - The question mark ( ? ) - Notebook",
          "Metacharacters - Greedy vs. non-greedy ( *?, +?, ?? )",
          "Metacharacters - Greedy vs. non-greedy ( *?, +?, ?? ) - Notebook",
          "Metacharacters - The backslash ( \\ )",
          "Metacharacters - The backslash ( \\ ) - Notebook",
          "Metacharacters - The square brackets ( [] )",
          "Metacharacters - The square brackets ( [] ) - Notebook",
          "Metacharacters - Character classes",
          "Metacharacters - Character classes - Notebook",
          "Metacharacters - The curly braces ( {} )",
          "Metacharacters - The curly braces ( {} ) - Notebook",
          "Metacharacters - The pipe ( | )",
          "Metacharacters - The pipe ( | ) - Notebook",
          "Special sequences - \\A and \\Z",
          "Special sequences - \\A and \\Z - Notebook",
          "Special sequences - \\b and \\B",
          "Special sequences - \\b and \\B - Notebook",
          "Special sequences - \\d and \\D",
          "Special sequences - \\d and \\D - Notebook",
          "Special sequences - \\s and \\S",
          "Special sequences - \\s and \\S - Notebook",
          "Special sequences - \\w and \\W",
          "Special sequences - \\w and \\W - Notebook",
          "Quiz 2 - Metacharacters and Special Sequences"
        ],
        "Extension Notations and Assertions": [
          "Extension notations and non-capturing groups",
          "Extension notations and non-capturing groups - Notebook",
          "Named groups and groupdict()",
          "Named groups and groupdict() - Notebook",
          "Positive lookahead assertions",
          "Positive lookahead assertions - Notebook",
          "Negative lookahead assertions",
          "Negative lookahead assertions - Notebook",
          "Positive lookbehind assertions",
          "Positive lookbehind assertions - Notebook",
          "Negative lookbehind assertions",
          "Negative lookbehind assertions - Notebook",
          "Quiz 3 - Extension Notations and Assertions"
        ],
        "Small Real-Life Projects": [
          "Bookshelf",
          "Bookshelf - Code",
          "Bookshelf - Exercise 1",
          "Bookshelf - Exercise 2",
          "Bookshelf - Exercise 3",
          "Bookshelf - Solutions to the exercises",
          "Phone book",
          "Phone book - Code",
          "Phone book - Exercise 1",
          "Phone book - Exercise 2",
          "Phone book - Exercise 3",
          "Phone book - Solutions to the exercises",
          "Date and time",
          "Date and time - Code",
          "Date and time - Exercise 1",
          "Date and time - Exercise 2",
          "Date and time - Exercise 3",
          "Date and time - Solutions to the exercises",
          "Web addresses",
          "Web addresses - Code",
          "Web addresses - Exercise 1",
          "Web addresses - Exercise 2",
          "Web addresses - Exercise 3",
          "Web addresses - Solutions to the exercises",
          "Stocks",
          "Stocks - Code",
          "Stocks - Exercise 1",
          "Stocks - Exercise 2",
          "Stocks - Exercise 3",
          "Stocks - Solutions to the exercises"
        ],
        "PROJECT: Validating User Account Details": [
          "Project requirements",
          "Download the application template",
          "Written requirements",
          "Solving the project tasks and testing the code",
          "Download the full application code"
        ],
        "Regular Expressions in Excel Files: Filtering Employee Data": [
          "Building the setup for this section",
          "Notebook - Download the Necessary Resources",
          "Loading and Handling an Excel Workbook in Python",
          "Notebook - Preparing the Data for Filtering",
          "Scenario number 1 - Filtering Data in Excel Files",
          "Scenario number 2 - Filtering Data in Excel Files",
          "Scenario number 3 - Filtering Data in Excel Files",
          "Scenario number 4 - Filtering Data in Excel Files",
          "Scenario number 5 - Filtering Data in Excel Files",
          "Notebook - Solutions for the scenarios",
          "Coding Exercise 1",
          "Coding Exercise 1 - Solution",
          "Coding Exercise 2",
          "Coding Exercise 2 - Solution",
          "Coding Exercise 3",
          "Coding Exercise 3 - Solution",
          "Coding Exercise 4",
          "Coding Exercise 4 - Solution",
          "Coding Exercise 5",
          "Coding Exercise 5 - Solution"
        ],
        "Regular Expressions in Data Analysis: Filtering HTML Page Data": [
          "Building the setup for this section",
          "Notebook - Introduction to Pandas",
          "Working with HTML content using Pandas",
          "Notebook - Initial Code",
          "Scenario number 1 - Filtering Data in Pandas DataFrames",
          "Scenario number 2 - Filtering Data in Pandas DataFrames",
          "Scenario number 3 - Filtering Data in Pandas DataFrames",
          "Scenario number 4 - Filtering Data in Pandas DataFrames",
          "Scenario number 5 - Filtering Data in Pandas DataFrames",
          "Notebook - Solutions for the scenarios",
          "Coding Exercise 1",
          "Coding Exercise 1 - Solution",
          "Coding Exercise 2",
          "Coding Exercise 2 - Solution",
          "Coding Exercise 3",
          "Coding Exercise 3 - Solution",
          "Coding Exercise 4",
          "Coding Exercise 4 - Solution",
          "Coding Exercise 5",
          "Coding Exercise 5 - Solution"
        ],
        "Final Section": [
          "Final words",
          "Get your Certificate of Course Completion!",
          "Get Certified in Python Programming!"
        ]
      },
      "requirements": [
        "Prior basic-to-intermediate Python experience is required.",
        "You just need a laptop or PC and a decent Internet connection.",
        "You need a strong desire to grow and boost your Python skills."
      ],
      "description": "Probably the most PRACTICAL Python RegEx course on Udemy.\nI am answering all your questions, usually in less than 24 hours.\nNo slides, no boring theory, no rambling, no chitchat. Just coding!\nQuizzes, Exercises, Notebooks, Real-Life Examples and Projects.\nPython 3 Regular Expressions PDF Cheat Sheet is included.\nA Certificate of Completion is also included at the end.\n\n\nWhat others have to say about my courses?\n\"What an incredible value and learning experience!\" by Sean A.\n\"Excellent material. Kudos to a great instructor with a vast level of creativity.\" by Anthony W.\n\"The instructor is an excellent professional, skillful and engaging.\" by Georgios T.\n\n\nWhy would you take this course?\nDo you want to polish your Python coding skills without spending money on books and boring theoretical courses?\nHave you ever been confused by the Regular Expressions topic and wanted a detailed step-by-step learning guide?\nWould you like to be able to perform Basic to Advanced pattern matching tasks using the amazing power of Python?\n\n\n\"As a Python beginner, I find this course is concise, easy to understand and structured. Also, Mihai responds to my questions during the course promptly. I highly recommend this training course.\" by Johnny Wang\n\n\nWhat are the steps you're going to take from Beginner to Advanced level skills?\nSection 1 - Some Initial Thoughts\nSection 2 - Regular Expressions Cheat Sheet\nSection 3 - Methods and Objects\nSection 4 - Metacharacters and Special Sequences\nSection 5 - Extension Notations and Assertions\nSection 6 - Small Real-Life Projects\nSection 7 - PROJECT: Validating User Account Details\nSection 8 - Regular Expressions in Excel Spreadsheets: Filtering Employee Data\nSection 9 - Regular Expressions in Data Analysis: Filtering HTML Page Data\nSection 10 - Final Section\n\n\n\"I can say this man is going on smoothly and perfectly, explaining in the most empirical way.\" by Kolapo A.\n\n\nImportant information before you enroll!\nDon't forget you are covered by a 30-day money back guarantee, full refund, no questions asked.\nOnce enrolled, you have unlimited, 24/7, lifetime access to the course from any device.\nYou will have instant and free access to any updates that I'm going to add to the course.\nYou will benefit from my full support regarding any question related to the course content.\n\n\n\"Very thorough course. Includes plenty of details and examples without being boring. Explanations are given at a very practical level.\" by Gary Scarr\n\n\nLet's get started!\nEnroll now and I'll see you in the first lecture!",
      "target_audience": [
        "Python programmers, enthusiasts and geeks, who are already familiar with the basics of Python: variables, strings, lists, tuples, indexing.",
        "Junior/Intermediate Python developers and any kind of IT geeks who wish to take their Python programming skills to the next level."
      ]
    },
    {
      "title": "Asynchronous JavaScript Deep Dive",
      "url": "https://www.udemy.com/course/asynchronous-javascript-deep-dive/",
      "bio": "The most complete course on Asynchronous JavaScript. Critical topics for Node and web development.",
      "objectives": [
        "In-depth training on asynchronous JavaScript.",
        "Fundamental concepts about asynchronous JavaScript.",
        "How asynchronous JavaScript is achieved using the event loop.",
        "The ubiquitous callback pattern.",
        "Problems we encounter with callbacks.",
        "The ins, outs and whys of JavaScript promises.",
        "The fetch command.",
        "The async await pattern. The new way of handling asynchronous code.",
        "Iterators and Generators and when to use them."
      ],
      "course_content": {},
      "requirements": [
        "A basic level of JavaScript. The more experience you have the more easily you will grasp the concepts taught in this course.",
        "A desire to master callbacks, promises, async await and generators."
      ],
      "description": "Effectively working with asynchronous code in JavaScript is an essential skill for anyone working with JavaScript. Asynchronous patterns are used extensively. This course will take you from a beginner or intermediate level to mastering asynchronous JavaScript. You will feel comfortable dealing with any asynchronous code.\nThis course start with the basics of asynchronous coding in JavaScript. We take a look at the event loop and the role it plays in asynchronous JavaScript. We dig into the original asynchronous pattern, the callback. We dive into Promises, and tackle this subject in depth. We then add the async await pattern to the discussion. In the last section we cover generators and how and when they can be used in your code. Code example are used throughout the course and there are plenty of chances for you to try things on your own.\nBy taking this course you will be able to:\nExplain the role of the Event Loop in asynchronous coding.\nUse callbacks throughout your code.\nIncorporate and work with promises no matter the source.\nUse the async await pattern to make your asynchronous code easier to reason about.\nIncorporate generators when needed.\nThis is one of the best courses produced on asynchronous JavaScript. It contains unmatched coverage. If you are looking to learn this very important topic, this course is for you.",
      "target_audience": [
        "Anyone who wants to master Asynchronous javascript."
      ]
    },
    {
      "title": "Python 3 Programming A Step By Step Guide for Beginners",
      "url": "https://www.udemy.com/course/python-3-programming-a-step-by-step-guide/",
      "bio": "Best Course To Learn Python 3 Programming for Beginners",
      "objectives": [
        "Python Programming Step by Step Guide consists of currently 13 modules",
        "1. Introduction: In this module you will learn the Fundamentals of Python",
        "2. Installing and Using Python: In this module you will learn How to Install Python in Various Platforms and Write a Basic Python Program",
        "3. Variables and Expressions: In this module you will learn, How to define Variables and Write Expressions in Python Language",
        "4. Conditional Statements: In this module you will learn the basic building blocks of the programs by understanding the various Conditional Statements such as if, if-else, nested-if, ternary operators etc.",
        "5. Loops and Iteration: In this module you will learn how to execute a set of statements repeatedly using various Loops",
        "6. Working with Functions: In this module you will learn how to define Functions in Python",
        "7. Handling Exceptions in Python: In this module you will learn how to handle the Exceptions in Python",
        "8. Understanding the Usage of Classes and Objects in Python: In this module you will get to know what is a Class and What are Objects and How to define a Constructor to initialize the members of the class.",
        "9. Handling Strings in Python: In this module we will learn how to handle the strings.",
        "10. Handling Files in Python: In this module you will learn how to create a new file, add text to the file, read the contents from the file and also you will learn how to read the binary data and create an image file dynamically at runtime.",
        "11. Working with Lists: In this module you will learn what is a List and also you will learn the various operations that you can perform with the Lists.",
        "12. Working with Tuples, Sets and Dictionaries: In this module you will learn what are Tuples, Set and Dictionaries and the various operations you can perform within this Data Structure and also you will learn when to use each Data Structure",
        "13. Comprehensions in Python: In this module you will learn the most efficient way to handle the code in Python",
        "14. many more: This course will be later added with some more features such as Regular Expressions, Decorators etc."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Python as a Language",
          "How to get the best out of this Course"
        ],
        "Installing and Using Python": [
          "Introduction",
          "Getting Started with Python using Jupyter",
          "Installing Python and Writing a Program",
          "Understand Python Program Execution Process",
          "Summary"
        ],
        "Variables and Expressions": [
          "Introduction",
          "Declaring Variables in Python",
          "Understanding Expressions in Python",
          "Understanding Types and Types Expressions",
          "Demos: Types and Types Conversion",
          "Summary"
        ],
        "Conditional Statements": [
          "Introduction",
          "Using if Statement",
          "Using if-else Statement",
          "Using if-elsif-else Statement",
          "Working with Nested if Statement",
          "Ternary Operator",
          "Summary"
        ],
        "Loops and iterations": [
          "Introduction",
          "Indefinite Loop using While",
          "Breaking out of a loop using break Statement",
          "Finishing an Iteration using Continue Statement",
          "Definite loop using for",
          "Summary"
        ],
        "Working with Functions": [
          "Introduction",
          "Defining Python Functions",
          "Understanding Parameters, Arguments and Return Values with Demos",
          "Using Default Arguments in Python Functions",
          "Using Keyboard Arguments in Python Functions",
          "Passing Variable Number of Arguments to Python Functions",
          "Understanding Global and Local Variables",
          "Lambda Functions",
          "Summary"
        ],
        "Handling Exceptions in Python": [
          "Introduction",
          "Understanding Built-in Exceptions",
          "Handling Exceptions",
          "Raising Exceptions",
          "Defining Clean-Up Actions",
          "Summary"
        ],
        "Understanding the Usage of Classes and Objects in Python": [
          "Understanding Classes and Objects",
          "Demo: Understanding Classes and Objects Syntax",
          "Demo: Defining Classes with Data and Methods",
          "Demo: Defining Classes with Constructors",
          "Summary"
        ],
        "Handling Strings in Python": [
          "Introduction",
          "Understanding Strings in Python",
          "Slicing Strings",
          "Using 'in' as a Logical Operator",
          "Working with String Library",
          "Summary"
        ],
        "Handling Flies in Python": [
          "Introduction",
          "Writing to a File",
          "Reading from the File",
          "Reading from the File Cont.",
          "Copying Text File",
          "Copying Image File",
          "Summary"
        ]
      },
      "requirements": [
        "There are no prerequisites for learning this course.",
        "However, basic understanding of Computer Programming terminologies is beneficial."
      ],
      "description": "Python has been one of the premier, flexible, and powerful open-source language that is easy to learn, easy to use, and has powerful libraries for data manipulation and analysis. For over a decade, Python has been used in scientific computing and highly quantitative domains such as Data Science, Machine Learning, AI, IOT etc.\nPython Programming Step by Step Guide consists of currently 13 modules and later will add some more additional modules to help the students interested in learning Data Science. First we shall start with the Introduction to Python Programming language then we shall learn how to install Python on your machines and get started with Python Programming, then we shall start understanding the fundamentals of Python by understanding how to define the variables and the expressions that are supported by the Python language, then we shall learn how to write the conditional statements and we shall learn how to work with the loops and how to perform iterations in Python language, then we shall learn how to work with the functions, we shall learn how to define the classes and objects in python, then we shall learn how to handle the exceptions in Python language, we shall learn how to handle and manipulate the strings using Python, we shall learn how to handle the files, we shall learn various data structures such as Lists, Dictionaries, Tuples, Sets etc. and also we shall learn how to use the comprehensions support provided by the Python language for writing maintainable and efficient code. Later in this course I will add additional modules such as Regular Expressions, Decorators, Packing and Modules Dynamic Loading, Python Essentials for Data Science and many more.\nOnce you have subscribed all the future updates will be free only.",
      "target_audience": [
        "Python Programming Step by Step Guide is a good fit for the below professionals:",
        "Freshers Programmers",
        "Developers interested in Learning Python",
        "Technical Leads",
        "Architects Data Scientists"
      ]
    },
    {
      "title": "Python for Beginners: Learn Python with Practical Exercises!",
      "url": "https://www.udemy.com/course/the-ultimate-python-programming-course-d/",
      "bio": "Complete with Examples, Quizzes, Exercises and Game Building",
      "objectives": [
        "Practise coding in the most popular Python development environments for data scientists and developers alike",
        "Solid understanding of Python Programming Fundamentals",
        "Object Oriented Programming",
        "Build a Python Game",
        "Run Fully Functioning Python Game in your Terminal like a real Python Developer!"
      ],
      "course_content": {
        "Introduction & Environment Setup": [
          "Course Introduction",
          "Iterm2 Installation",
          "Installing Python 3",
          "Installing Jupyter Notebook"
        ],
        "Data Types and Methods": [
          "Data Types",
          "Int and Float",
          "Retrieving From a List",
          "List Methods",
          "Tuples",
          "String Methods",
          "Dictionary Methods",
          "Print Method",
          "Data Types and Methods Quiz"
        ],
        "Control and Looping": [
          "If Else Statements Syntax",
          "If Else Control Logic Part 1",
          "If Else Control Logic Part 2",
          "For Loop and While Loop Syntax and Logic",
          "For Loop Logic and Quick Exercise",
          "While Loops Logic",
          "While Loops with If, Else Statements",
          "Break and Continue Methods",
          "Looping Exercise",
          "Looping Exercise Solution"
        ],
        "Functions": [
          "Function Concept",
          "Function Examples and Quick Exercise",
          "Function Scoping",
          "Function Exercises",
          "Function Exercise Solution Part 1",
          "Function Exercise Solution Part 2"
        ],
        "Error Handling": [
          "Error Handling Concept",
          "Error Handling Examples",
          "Using While Loops with Error Handling",
          "Error Handling Exercise",
          "Error Handling Exercise Solution"
        ],
        "Object Oriented Programming (OOP)": [
          "OOP Concepts",
          "OOP Examples",
          "OOP Important Usage",
          "OOP Exercise and Solution"
        ],
        "Building Game Project": [
          "Game Project Explanation and Hints",
          "Game Project Solution Part 1",
          "Game Project Solution Part 2",
          "Game Project Solution Part 3"
        ],
        "File Structure, Modules and Running in Terminal": [
          "Installing VSCode incl. tips",
          "Installing Pylint",
          "File Structure and Modules Explained",
          "Using Python in VSCode",
          "Running Python Program in the Terminal"
        ],
        "Bonus Section": [
          "My Other Courses"
        ]
      },
      "requirements": [
        "A Willingness To Learn Awesome Python Skills",
        "This course requires a Mac, little support for Windows"
      ],
      "description": "Hi I’m Sam, a big data engineer and full stack web developer teaching you to program in Python in the most efficient and down to earth approach. I will not only teach you to code but also the environment used to develop python code used by everyday data scientists and big data engineers.\nThis course is streamlined into 3 hours to fit into a busy schedule. All content in this course will be highly reusable in a real world situation. This course is strictly no ‘fluff’ which means we will get into the core of programming straight away without going through hours of theory which you will never apply on real projects.\nSo if you want to learn python programming to transition into data science, or the big data space and don’t have the luxury of time you have come to the right place!\nCourse is split up into sections as below:\nEnvironment Setup - Here you learn and install the most popular environments used by data scientists and developers\nData Types and Methods - The abc’s of the coding language.\nControl and Looping  - Learn how to control the flow of the program and repeat tasks\nFunctions - Help Automate your tasks\nError Handling - Handles errors in real world applications\nObject Oriented Programming - Learn OOP to be even better at programming\nFile Structure & Running in Terminal - Learn how Python modules work and run in Terminal",
      "target_audience": [
        "For People Who want to learn Python Fundamentals and later transition into Data Science, Web Development or Big Data",
        "For Complete Programming Beginners",
        "For People New to Python",
        "Not Intended for Seasoned Developers"
      ]
    },
    {
      "title": "C++ Code Like you are in MATRIX : Mastering C++ in 13 Hours",
      "url": "https://www.udemy.com/course/c-programming-for-everyone/",
      "bio": "Unleash the Power of C++ and Take Your Programming Skills to the Next Level! C++ and Data structures , CPP Unreal Engine",
      "objectives": [
        "Introduction to programming concepts and syntax in C++",
        "Data types, variables, and expressions",
        "Char Types",
        "C++ Fundamentals",
        "Functions",
        "Basic Code Principles",
        "Arrays",
        "Basic control structures: conditional statements and loops",
        "Functions and parameter passing in C++",
        "Arrays and pointers",
        "String manipulation in C++",
        "Object-oriented programming principles",
        "Classes and objects in C++",
        "Constructors and destructors in C++",
        "Inheritance and polymorphism",
        "Exception handling in C++",
        "File input and output operations in C++",
        "Dynamic memory allocation in C++",
        "Templates in C++",
        "Standard Template Library (STL)",
        "Recursion and backtracking in C++",
        "Multi-threading and concurrency in C++",
        "Debugging and error handling techniques in C++",
        "Performance optimization techniques in C++",
        "Boolean Types",
        "ENUM and Switch",
        "and other C++ topics ."
      ],
      "course_content": {
        "Introduction": [
          "Writing in CPP",
          "Assigning Variables and Comma",
          "Playing with Variables and Values",
          "Enum",
          "Literals, iomanip and Pointers",
          "Namespaces",
          "Scopes",
          "Arithmetic Operations",
          "Increment and Decrement",
          "Control Statements",
          "Loops in C++",
          "Final Project of This Section"
        ],
        "Introduction to Language Features": [
          "Introduction",
          "Literals in CPP",
          "Defining Constants",
          "Const Expressions",
          "Namespaces in CPP",
          "Scoping Variables and Static Keyword",
          "Conditional Statements",
          "Conditions"
        ],
        "C6 - Types in CPP": [
          "Types in CPP - Binary, Octal and Hex",
          "Floating Point types in CPP - Float, Double, Long Double",
          "Char types in CPP",
          "Enum Types",
          "Boolean Types and Comparison Operators",
          "Void Type and Void Function",
          "Operators 101",
          "Default Values in CPP"
        ],
        "D2 - Conditional Statements": [
          "Switch Statement with ENUM",
          "Conditional Statements in CPP",
          "For Loop",
          "Continue Keyword",
          "Do-While Loop",
          "Goto"
        ],
        "D4 - Introduction to CPP Classes": [
          "POD Data Classes",
          "Unions in CPP",
          "Methods in Struct",
          "Access Controls in CPP",
          "Classes and Initializing Class Member",
          "Constructors",
          "Destructors in CPP",
          "Initializers in CPP"
        ],
        "E3 - Introduction to Pointers": [
          "Pointers in CPP",
          "C++ Beginning to Pointers",
          "Dereference Operator in CPP",
          "Pointers and Arrays",
          "nullptr",
          "Pointer arithmetic in CPP",
          "Arrays out of bounds and Deallocating Pointers",
          "Consts and Casts with Pointers",
          "Allocating Memory",
          "Allocating memory as arrays",
          "Lifetime of Memory"
        ],
        "STL": [
          "STL,Vectors and Arrays"
        ],
        "F5 - References in CPP": [
          "References",
          "Example Project With References",
          "Code Example with AUTO, TUPLE and FOR LOOP",
          "Range Based for Loop"
        ],
        "Practical Examples with Pointers and List": [
          "Pointers in Practice",
          "Pointers in Practice - Part 2",
          "Pointers in Practice - Part 3",
          "Pointers in Practice - Part 4"
        ],
        "Functions": [
          "Introduction to Functions",
          "Functions - Part 1",
          "Functions - Part 2",
          "Functions - Part 3",
          "Functions - Part 4",
          "Functions - Part 5",
          "Functions - Part 6",
          "Functions - Part 7",
          "DONE"
        ]
      },
      "requirements": [
        "Basic computer literacy: Students should be comfortable using a computer and navigating the internet. They should be able to create, save, and edit files, and install programming software on their computer."
      ],
      "description": "*Get the Official Certificate after Completing the Course\nWelcome to the one of the BEST  C++ course ! This is a comprehensive online course designed to help you learn C++, one of the most powerful and versatile programming languages used in the technology industry.\nIn this course, you will start by learning the basics of C++ programming, including data types, variables, expressions, and control structures. From there, you will move on to more advanced topics such as arrays, pointers, functions, and object-oriented programming concepts such as classes, inheritance, and polymorphism. You will also learn how to handle exceptions, work with files, and optimize your code for better performance.\nThroughout the course, you will have access to video lectures, coding exercises, and quizzes to help you reinforce your knowledge and practice your skills. You will also have access to a community of fellow learners and instructors who can help you with any questions or challenges you may encounter.\nBy the end of this course, you will have a strong foundation in C++ programming and be able to develop your own C++ applications. You will also be well-prepared to take on more advanced courses or start your journey as a C++ programmer.\nWhether you're a beginner who is just starting to learn programming, or an experienced developer who wants to expand your skills, this  is the perfect course for you. Enroll today and join the thousands of learners who have transformed their careers with the power of C++ programming!\nLearn  C++ Programming and Start your software engineering career now !\nC++ can be found just about everywhere you look. It powers search engines, VR applications, air travel, movie production, and even exploration on Mars! In fact, C++ is one of the most widely-used programming languages there is.\nWhat makes C++ unique?\nC++ is a general-purpose programming language, created by Bjarne Stroustrup and his team at Bell Laboratories in 1979. Over the decades, C++ has become the language of choice for certain kinds of applications.\nC++ is most popularly used for building large software infrastructure and applications that run on limited resources. Because C++ can directly manipulate the hardware (or machine) that it runs on, programmers can fine-tune their code to run efficiently in any environment, even when there’s limited hardware space or energy available to power the application. This translates to applications that run quickly and reliably on a variety of devices, making C++ ideal for forming the base layer of many important applications.\nFor these reasons, C++ is an excellent choice for building software that is fast, efficient at managing system resources, and reliable in performing critical tasks.\nWhat is C++ used for?\nC++ can be found in a wide variety of industries. Check out the following list for some of the most notable, interesting, and even surprising real-world applications of C++.\nOperating systems\nC++ plays an important part in well-known operating systems, from MacOS and Windows to mobile operating systems like iOS. In general, operating systems need to be fast and efficient at managing system resources. With the low-level (close to machine code) capabilities of C++, developers can structure their code to make even the smallest details of an operating system fast and energy efficient.\nGame development\nC++ is one of the most widely-used programming languages in game development. It has been used to create: games, such as World of Warcraft, Counter-Strike, and StarCraft, game engines like Unreal Engine, and gaming consoles, including Xbox, PlayStation, and Nintendo Switch.\nGaming involves lots of resource-intensive functions, whether it’s generating graphics or facilitating multiplayer sessions. C++ helps in optimizing the use of resources, such as allowing programmers to adjust exactly how data structures and memory allocation are handled.\nIoT devices\nIoT (Internet of Things) devices include embedded systems that often rely on C++. Some examples of these devices are appliances, cars, smartwatches, TVs, and medical devices. Because the hardware is often embedded inside of an object, these devices have to operate with limited computing resources and strict power requirements. C++ helps programmers control how these resources are used in order to run programs more efficiently.\nDatabases\nC++ is used to build popular database tools like MySQL and MongoDB. These databases form the backbone of many well-known applications, including ones created by Google, Netflix, YouTube, Adobe, and more. C++ is ideal for helping structure databases to support efficient storage.\nWeb browsers\nC++ plays a role in web browsers, such as Google Chrome, Mozilla Firefox, Safari, and Opera. It is used to develop back-end services that retrieve information from databases and render code into interactive web pages. C++ helps web browsers carry out these tasks with speed and minimal delays, which means we don’t have to wait long for content to appear on our screens.\nMachine learning tools\nMachine learning tools, such as TensorFlow, rely on C++ as a back-end programming language. Even though data scientists can use TensorFlow with Python, for example, the core machine learning calculations are carried out with C++ code. In fact, C++ has a large collection of libraries that power these highly-sophisticated calculations that train machine learning models.\nAR/VR applications\nC++ is widely used for developing augmented reality and virtual reality applications. In fact, many of these applications run on Unreal Engine, which is built using C++. AR/VR applications need to handle large amounts of data that adjust continuously based on input from camera sensors and user interactions. C++ is ideal for helping process all of this data while creating seamless virtual experiences.\nScientific research\nC++ plays a notable role in scientific research, from space exploration to high-energy particle physics. At CERN, scientists use C++ for analyzing data on subatomic particles that can help answer questions about how our universe originated. At NASA, C++ has been used to build autonomous driving systems that help the Mars Rovers navigate unknown terrain. Many parts of the International Space Station are built using C++ as well.\nFinancial tools\nMany banks and financial institutions use C++ to build their software infrastructure, which powers applications for banking, trading, and financial modeling. The speed and reliable performance of C++ is ideal for processing millions of daily transactions, facilitating a high volume and frequency of trades, and creating data simulations for large portfolios.\nFlight software\nC++ is a commonly-used language for flight software that powers commercial airplanes and military and defense aircraft (such as the F-16 and F-35 planes). C++ is used to build a lot of the safety-critical software, which is required to follow strict coding standards to make sure that the wings, engines, and other critical parts work predictably during each flight.\nGoogle search engine\nGoogle’s search engine relies on C++ to make sure that search results show up quickly and with minimal response time. C++ also powers the machine learning and other complex algorithms that make sure we get the best possible results for our search. Google’s crawling and indexing infrastructure is also implemented in C++.\nMedical technology\nC++ can be found in a variety of medical applications, from MRI machines to lab testing equipment to systems that handle patient information. C++ is also used to model data and run data simulations for bioinformatics research, because many advanced algorithms written for the medical and biological sciences are implemented in C++.\nTelecommunications\nC++ is widely used in building telephone, Internet, and other telecommunications infrastructure. It’s ideal for managing resources to handle tons of simultaneous communication with speed and efficiency.\nMovie production\nMany of the graphics and special effects that you see in movies are created with C++. C++ is great for this role because it can handle large files with high-quality footage and run many of the advanced calculations that make the special effects possible.",
      "target_audience": [
        "Anyone who is interested in programming and has a computer with access to the internet can take this awesome C++ course."
      ]
    },
    {
      "title": "Salesforce Development for Intermediate Developers",
      "url": "https://www.udemy.com/course/salesforce-development-course/",
      "bio": "Become a Salesforce Developer by learning Apex Programming. Learn about Integration, REST webservices, Testing framework",
      "objectives": [
        "Students will learn about Apex Programming",
        "Students will learn about Developer Console. Salesforce Workbench",
        "Students will learn to develop using Visual Studio Code IDE",
        "They will learn about popular google extensions to improve productivity as a Salesforce Developer",
        "They will learn to integrate Salesforce with External System.",
        "They will learn about Salesforce Testing Framework"
      ],
      "course_content": {
        "Setting up Salesforce Development Environment": [
          "Introduction to the course",
          "Connect with me on LinkedIn",
          "Subscribe to the channel",
          "Post a review to the Course",
          "How do I create a free Salesforce Developer account?",
          "Overview of Salesforce Developer Console",
          "Overview of Salesforce Developer Console Part 2",
          "What is Salesforce workbench?"
        ],
        "Visual Studio Code In Salesforce": [
          "Download Salesforce CLI and Visual Studio Code",
          "Install Java",
          "Download Visual Studio Code Extensions",
          "Authorize Org in Visual Studio Code"
        ],
        "Asynchronous Apex vs Synchronous Apex": [
          "Difference between synchronous and asynchronous in apex",
          "Batch apex with example: Asynchronous Apex",
          "How to use Database.Stateful in batch Apex? Batch Apex with Stateful",
          "Asynchronous Batch Apex : Overview of future method in Salesforce",
          "Future Annotation In Salesforce: Future method in Salesforce with example",
          "Quiz: Asynchronous apex and Synchronous Apex"
        ],
        "Integrating Salesforce with Youtube": [
          "Salesforce Web Services: REST and SOAP webservices",
          "Integration in Salesforce: REST API integration in Salesforce",
          "Integrate Salesforce with Youtube Part 1",
          "Integrate Salesforce with Youtube Part 2",
          "Custom Settings to Store API Key and Endpoints",
          "What are Remote Site Settings?",
          "Make a Callout to Youtube API",
          "Create a JavaScript button to Invoke the Details Method"
        ],
        "REST Web Services In Apex": [
          "Rest web services in salesforce",
          "APEX REST methods",
          "Apex Rest Methods Part 2",
          "Quiz: REST and SOAP Webservices"
        ],
        "Apex Testing Framework": [
          "Apex Unit test: why do we need test classes in salesforce?",
          "How to write test classes in Apex Salesforce?",
          "Apex Test Class Example",
          "How to increase code coverage in salesforce?",
          "Code coverage from one sandbox to another",
          "Quiz : Apex Test framework"
        ],
        "Best practices in salesforce development": [
          "What are the Best practices in Salesforce development?",
          "Quiz: Best Practices in Salesforce"
        ],
        "Powerful Google Chrome Extensions for Salesforce Developers": [
          "Download Apex PMD extension for Visual Studio Code",
          "Download Salesforce Organizer Google Chrome Extension",
          "How Salesforce Organizer Extension Work ?",
          "Download Google Chrome Extension: Salesforce Colored Fevicon",
          "Salesforce Advance Code Searcher Extension"
        ]
      },
      "requirements": [
        "You must be familiar with Object Oriented Concepts in Programming",
        "You must be familiar with out of the box features of Salesforce"
      ],
      "description": "This course is for people who want to learn Apex programming and looking to become a Salesforce Developer. This course covers topics related to Apex Programming which you will use in real world.\nThis course will prepare you for your first Salesforce Developer Job.\nWhat you will learn in this course?\nLearn about Developer Console.\nOverview of Salesforce Workbench\nDevelopment using Visual Studio Code\nIntegrating Salesforce with External System\nAsynchronous Apex Versus Synchronous Apex\nBatch Apex, Schedulable Apex, Stateful Batch Apex\nFuture method in Salesforce\nREST API\nTest Framework in Salesforce\nPowerful Google Chrome Extensions for Salesforce Developers\n\n\nWhat else is included in this course?\nLots of Quizzes in every section\nLearning through real world examples\nMini project halfway through the course\n\n\nIs Salesforce developer a good career?\nSalesforce Developer has once again been named one of the world's best jobs. In a list of 25 job roles, Salesforce was the only company to get a mention. The rest were generic positions, not tied to a particular technology or brand. The tenth best job in the US today is not a CRM developer; it's a Salesforce Developer.\n\n\nIs Salesforce still in demand 2020?\nThe Salesforce Job Market is Growing!!!\nI’m continuously updating and improving this course as I teach more people and learn what sticks. The goal is to make coding as accessible as possible and in a digestible time frame.",
      "target_audience": [
        "Students who are looking to become Salesforce Developers",
        "Students who want to learn about Advance topics related to Apex Programming",
        "Students who want to Integrate Salesforce with External Systems."
      ]
    },
    {
      "title": "Python Programming Bootcamp 2023 from Basics to Advanced",
      "url": "https://www.udemy.com/course/python-programming-bootcamp-from-basics-to-advanced/",
      "bio": "Complete Introduction to Python Programming Language! Start from the basics and go all the way to Advanced Python!",
      "objectives": [
        "Learn to use Python professionally, learning both Python 2 and Python 3!",
        "Learn Python Basics like Data types, Lists, tuples, Dictionaries, Loops, functions in detail.",
        "Learn to use Object Oriented Programming with classes!",
        "Create games with Python, like Tic Tac Toe, WAR, Blackjack!",
        "Learn advanced Python features, like the BeautifulSoup module and how to work with timestamps!",
        "Learn Advanced External Libraries and Modules Like Random, Math, Pandas, NumPy, Matplotlib etc.",
        "Acquire the pre-requisite Python skills to move into specific branches - Machine Learning, Data Science, etc..",
        "Understand how to use both the Jupyter Notebook and create .py files."
      ],
      "course_content": {
        "Course Overview": [
          "Welcome!!",
          "Introduction",
          "Course Overview",
          "Importance And Popularity Of Python",
          "Support us",
          "FAQs"
        ],
        "Setup": [
          "CMD Basics (Windows, Mac and Linux)",
          "Installing Python (Windows, Mac and Linux)",
          "Running First Python Code",
          "Notebooks and Course Materials",
          "Git and GitHub Overview (Optional)"
        ],
        "Python Objects and Data Structure Basics": [
          "Data Types in Python",
          "Python Numbers",
          "Python Numbers",
          "Python Numbers",
          "PY Numbers FAQs",
          "Variables in Python",
          "The Print Statement",
          "Print Statement: Easy",
          "Print Statement: Medium",
          "Print Statement: Hard",
          "Introduction to Strings",
          "String Indexing and Slicing",
          "Strings",
          "String Indexing",
          "String Slicing",
          "String Properties and Methods",
          "Print Properties With Strings",
          "Strings Part II",
          "Print Formatting",
          "Lists in Python",
          "Lists",
          "Lists",
          "Lists FAQs",
          "Dictionaries in Python",
          "Dictionaries",
          "Dictionaries",
          "Dictionaries FAQs",
          "Tuples in Python",
          "Tuples",
          "Tuples",
          "Tuples FAQs",
          "Sets in Python",
          "Booleans in Python",
          "Sets and Booleans",
          "Sets and Booleans FAQs",
          "Data Types in Python Quick Revision",
          "Input Statement in Python",
          "Input Statement",
          "Python Objects and Data Structure Basics Homework Overview",
          "Python Objects and Data Structure Basics Homework Solutions"
        ],
        "Comparison Operators in Python": [
          "Introduction to Comparison Operators",
          "Using Comparison Operators with Logical Operators",
          "Comparison Operators in Python"
        ],
        "Python Loops and Statements": [
          "if, elif and else Statements in Python",
          "if, elif and else Statements",
          "For Loop In Python",
          "For Loop",
          "for loop Coding Exercise - Display numbers from a list using loop",
          "While Loop in Python",
          "While Loop",
          "while loop Coding Exercise - Find numbers which are divisible by 7 and multiple of 5 between a range",
          "Loops in Python Revision",
          "Useful Operators in Python",
          "Useful Operators",
          "List Comprehension in Python",
          "List Comprehension in Python",
          "Conditional Statements and Loops Exercise 1",
          "Python Loops and Statements Homework Overview",
          "Python Loops and Statements Homework Solution"
        ],
        "Methods and Functions": [
          "Methods and Python Documentation",
          "Introduction to Functions",
          "The def Keyword",
          "The return Statement",
          "Logic With Python Functions",
          "Functions and Tuples",
          "Interaction between Two or more Python Functions",
          "External Resources For Basic Practice",
          "Function Practice Exercise 1 - SUM3",
          "Functions Practice Exercise 2 - EvenOdd",
          "Functions Practice Exercise 3 - FindPrime",
          "Functions Practice Exercise 4 - getSquare",
          "Functions Practice Exercise 5 - No of Days in a Month",
          "Functions Practice Exercise 6 - Sum Odd",
          "Functions Practice Exercise 7 - First and Last Digit Sum",
          "Functions Practice Exercise 8 - Even Digit Sum",
          "Functions Practice Exercise 9 - All factors",
          "Functions Practice Exercise 10 - Paint Job",
          "Functions Practice Exercise 11 - Flour Pack Problem",
          "Functions Practice Exercise 12 - Largest Prime",
          "Functions Practice Exercise 13 - Star Pattern 1",
          "Functions Practice Exercise 14 - Star Pattern 2",
          "Functions Practice Exercise 15: Letter value sum",
          "Functions Practice Exercise 16: Phone Drop",
          "Practice Functions Overview",
          "Practice Functions Solution : Easy",
          "Practice Functions Solution : Medium",
          "Practice Functions Solution : Hard",
          "Practice Functions Solution : Super Hard",
          "*args and **kwargs in Python",
          "*args Practice Exercise",
          "**kwargs Practice Exercise",
          "Lambda Expressions, Map and Filter Functions",
          "How The Compiler Reads? (Scopes and Nested Statements)",
          "Methods and Functions Homework Overview",
          "Methods and Functions Homework Solutions"
        ],
        "Logical and Conceptual Practice Questions": [
          "Python Practice Problem 1 - String_splosion",
          "Python Practice Problem 2 - String_Bits",
          "Python Practice Problem 3 - String_Match",
          "Python Practice Problem 4 - In 1 to 10",
          "Python Practice Problem 5 - End Other",
          "Python Practice Problem 6 - Random_count",
          "Python Practice Problem 7 - Find Primes",
          "Python Practice Problem 8 - Rotate a List",
          "Python Practice Problem 9 - Fibonacci Series",
          "Python Practice Problem 10 - Find Palindrome",
          "Python Practice Problem 11 - sum67",
          "Python Practice Problem 12 - Third_value",
          "Python Practice Problem 13 - Bubble Sort",
          "Python Practice Problem 14 - Bank Application",
          "Python Practice Problem 15 - Tower of Hanoi"
        ],
        "Milestone Project 1": [
          "Warmup Project Introduction",
          "Displaying Information",
          "Accepting User Input",
          "Simple User Interaction",
          "Milestone Project 1 Overview",
          "Milestone Project 1 Help",
          "Milestone Project Solution Part 1",
          "Milestone Project Solution Part 2",
          "Milestone Project 1 Final Logic and Explanation"
        ],
        "Errors and Exceptions Handling": [
          "Errors and Exceptions Handling Basics",
          "Errors and Exception Handling Homework overview",
          "Errors and Exception Handling Solution overview",
          "Pylint Overview",
          "Errors and Exception Handling Practice Exercise"
        ],
        "Object Oriented Programming (OOP)": [
          "Introduction to Object Oriented Programming",
          "OOP-Attributes and Class Keywords",
          "OOP-Object Attributes and Methods",
          "OOP-Inheritance and Polymorphism",
          "OOP-Special Methods",
          "OOP Homework Overview",
          "OOP Homework Solutions",
          "OOP Challange Overview",
          "OOP Challenge Solution"
        ]
      },
      "requirements": [
        "A computer - Windows, Mac, and Linux are all supported. Setup and installation instructions are provided for each OS."
      ],
      "description": "Learn one of the most Popular, Employer requested, and in-demand Skills of 2023 and Become a Python Developer!\nWelcome to the most detailed, comprehensive, yet straight-forward, course for the Python Programming Language on Udemy!\nWhether you are a total beginner or you know some basic syntax of python or you wish to learn the advanced features of Python, this course is for you! This course will teach you Python 3!\nPython is one of the most famous and promising Programming Language for the near future, several Multinational companies like Google, Instagram, Youtube use Python extensively as Python is more user-friendly, easy, and readable as compared to other Programming Languages.\nWith more than 100 video lectures and more than 25 hours of video content, this course will give you a deep dive into the world of Python. This course includes Quizzes, Tests, Coding Exercises, Homework Assignments, Handwritten Notes, Cheat Sheets as well as 4 major projects to create a Perfect Python portfolio!\nThis course will teach you Python in a practical manner, thus each video is divided into two sections i.e. theoretical section and Practical section, also each video is followed by its separate Notebook and handwritten notes.\nLearn how to use Python for real-world tasks, such as working with PDF Files, sending emails, reading Excel files, Scraping websites for information, working with image files, Several Advanced modules like Pandas, Matplotlib, NumPy, and much more!\nIn this Course we cover a variety of topics like:\nCommand Line Basics\nInstalling Python\nPython Numbers\nData Types\nVariables\nStrings\nLists\nDictionaries\nTuples\nSets\nBooleans\nOperators\nIf else and elif statements\nfor loop\nwhile loop\nList comprehensions\nPython Functions\n*args and **kwargs\nLogical and Conceptual Practice Questions (15 Practice Questions with explanation and video solution focusing on Logic and Problem Solving Skills)\nWarmUp Project 1 (Simple card Game)\nMilestone Project 1 (Tic Tac Toe Game)\nErrors and Exception Handling\nObject-Oriented Programming (OOP)\nExternal Modules and Packages\nWarm Up Project 2 (WAR game)\nMilestone Project 2 (BlackJack Casino Game)\nDecorators\nGenerators\nFile Handling\nNumPy\nMatplotlib\nPandas\nAdvanced Modules\nWorking with Emails\nWorking with Images\nWeb Scraping and many more...\nYou will get lifetime access to over 100 lectures plus corresponding Notebooks and Handwritten Notes for the lectures!\nThis course comes with a 30 day money-back guarantee! If you are not satisfied in any way, you'll get your money back. Plus you will keep access to the Notebooks, Cheat Sheets, Textbooks as well as Handwritenn Notes as a thank you for trying out the course!\nReady to get started, developer?\nEnroll now using the “Enroll now” button on the right, and get started on your way to creative, advanced Python brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\n\n\nFAQ'S :-\n1. Which External materials are Provided with this course?\nHere is the List of all the External Materials provided with this course :- 1. Notebooks  2. Handwritten Notes  3. cheat sheets  4. Textbooks.\n\n\n2. Will this course give me python skills?\nYes, it will. There are a range of exciting opportunities for Python developers. All of them require a solid understanding of Python, and that’s what you will learn in this course.\n\n\n3. What if I have a doubt at any point in this course, how can I solve it?\nYou can write your query in the QnA forum or you can directly message the Instructor through the message feature of Udemy. Your query will be solved in 24 hours max!\n\n\n4. Is the course being updated regularly?\nYes, every day a new video is added to the course, also as the versions of python are updating, this course is also updated from time to time to the latest version of Python.\n\n\nHurry Up! Enroll Now!",
      "target_audience": [
        "Beginner Python Developers",
        "Intermediate Python programmers who want to level up their skills!",
        "Beginners with no previous programming experience looking to obtain the skills to get their first programming job.",
        "Anyone looking to to build the minimum Python programming skills necessary as a pre-requisites for moving into fields like machine learning, data science, artificial intelligence etc.."
      ]
    },
    {
      "title": "Fortran For Beginners",
      "url": "https://www.udemy.com/course/fortran-for-beginners/",
      "bio": "The basics of programming in Fortran",
      "objectives": [
        "The basics of programming in Fortran"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Initial Setup and First Program On Windows",
          "Initial Setup and First Program on Mac OSX",
          "Initial Setup and First Program on Linux",
          "Setup Exercises",
          "Common Compiler Errors",
          "Compiler Error Quiz",
          "Structure of a Fortran Program",
          "Program Structure Quiz"
        ],
        "The Basics": [
          "Variables",
          "Variables Quiz",
          "Expressions, Order of Operations and Type Conversions",
          "Expression Exercises",
          "Conditional Constructs",
          "Conditional Exercises",
          "Looping Constructs",
          "Looping Exercises",
          "Scalars and Arrays",
          "Array Exercise"
        ],
        "Interactivity": [
          "User Input",
          "User Input Exercise",
          "Writing to a File",
          "Writing To a File Exercise",
          "Reading From a File",
          "Create a To do App",
          "Todo App Walkthrough",
          "Subroutines and Functions",
          "Use Procedures In To Do App",
          "Modules",
          "Use Module For To Do App",
          "Derived Types",
          "Use Derived Type For To Do App"
        ],
        "A Touch of the More Advanced": [
          "Make: Automating the Compiler",
          "Create Makefile For Todo App",
          "Compiler Options",
          "Structuring Larger Programs",
          "Style and Conventions"
        ]
      },
      "requirements": [
        "Computer running Windows, OSX or Linux"
      ],
      "description": "Learn one of the oldest programming languages. Fortran is still in common use for high-performance scientific and engineering applications. If you're new to programming, and especially if you're in a math, science or engineering field, this is a great course to get started with.\nWe talk about getting your computer initially set up, programming fundamentals, including variables, looping and branching constructs, modules and derived types. We even go into some tips for growing and organizing your programs towards the end of the course.",
      "target_audience": [
        "Anyone new to programming",
        "Anyone interested in learning Fortran"
      ]
    },
    {
      "title": "Java Programming - a solid foundation for new developers",
      "url": "https://www.udemy.com/course/java-fundamentals-a-solid-foundation-for-new-programmers/",
      "bio": "A practical hands-on approach to learning the Java programming language. Start creating JVM projects with core Java.",
      "objectives": [
        "Covers Learn all major aspects of core java syntax to a professional standard",
        "Understand and be confident in object oriented programming (polymorphism, inheritance, interfaces)",
        "Learn things good programmers should know (not just how to code)",
        "Get familiar with either the Eclipse or IntelliJ Idea IDEs (or both!)",
        "Basics of functional style programming (lambda expressions)",
        "Get an introduction to unit testing with JUnit",
        "Know how to connect to a relational database with JDBC",
        "Understand how to manage and to read and write with files",
        "Get dependencies and build applications with Maven",
        "Know some best practice development techniques",
        "How to build real-world Java projects"
      ],
      "course_content": {
        "Chapter 1 - Introduction": [
          "Course introduction",
          "How to get the resources for this course"
        ],
        "Chapter 2 - Getting started": [
          "What is Java? What is the JVM? What is the JDK?",
          "Where do we get Java and the developmen kit from?",
          "Why are there so many versions, and which one should you get?",
          "Hello World - some simple code to check everything is working ok"
        ],
        "Chapter 3 - Installing an IDE": [
          "Option1 - Intellij Idea",
          "Option 2 - Eclipse",
          "Basic features of an IDE (including debugging)"
        ],
        "Chapter 4 - Primitive Variables": [
          "Introducing primitive data types",
          "Basic arithmetic",
          "Booleans, chars and arrays"
        ],
        "Chapter 5 - Control flow": [
          "For loops",
          "While loops",
          "If and switch statements",
          "Logical operators"
        ],
        "Chapter 6 - Strings": [
          "Introducing the String",
          "Comparing strings",
          "The ternary operator",
          "Concatenation and interpolation"
        ],
        "Chapter 7 - Code structure part 1": [
          "Defining methods",
          "Using methods",
          "Variable scope",
          "Introducing classes"
        ],
        "Chapter 8 - Working with classes": [
          "The purpose of classes",
          "Getter and setter methods",
          "Constructors",
          "Method overloading",
          "Class design and record classes",
          "Wrapper classes for primatives"
        ],
        "Chapter 9 - Practical exercise 1": [
          "Instructions",
          "Solution walkthrough"
        ],
        "Chapter 10 - Arrays of Objects": [
          "Using arrays",
          "The meaning of null",
          "Looping through arrays",
          "Creating wrapper classes"
        ]
      },
      "requirements": [
        "No prior programming knowlege is needed - this course starts from the very basics"
      ],
      "description": "This course covers Java 8, Java 11 and Java 17 (and if you are new to Java, we explain why there are so many current versions, and how to decide which you should be using!). When there are differences between Java versions, we explain what the differences are, so you'll learn the best way to start Java programming whichever version you are using.\nThis course will help you learn the elements of programming in core Java, with a very practical, hands-on approach. We cover everything from the basics of programming, through to advanced features such as Object Orientation, Lambda expressions, collections and streams, using databases, working with files, testing and more. Throughout the course you will be working on some Java projects, using realistic examples, not abstract ideas.\nThis course is a great entry point for any new full-stack developer - in fact it's based on part of a 6 week full-stack JVM developer bootcamp that I have delivered to a number of companies over the last couple of years. It's a great way to get into programming, and set yourself up to be ready to learn popular Java frameworks such as Spring, Hibernate, Jakarta, Hadoop, Apache Spark, Akka, or even building Android Apps.\nTo be a confident, competent Java programmer, you need a good foundation and this course will give you that – it covers every topic in a thorough way, but at a level that makes it easy to follow and accessible.\nThe syllabus has been specially designed to cover what good developers need to know, and helps you build up your knowledge through lots of practical exercises. You’ll work on a case study that will by the end of the course be a fully functioning application.\nThe course is based on a 5 day live training programme which is taught to newly hired developers in various companies, although it includes even more topics. It is suitable for anyone who has no programming experience, has programmed in other languages and wants to transition to Java, or has limited basic programming experience (maybe self-taught) in Java and wants to get a more solid and professional foundation.\nIf you are serious about getting a career as a full stack Java developer, then let me help you get started and set you on the path to success.",
      "target_audience": [
        "New developers who want to get a solid foundation in programming in Java",
        "Self-taught developers who want to get a more rounded and complete education about the core Java language and its libraries",
        "Existing developers who want to gain more confidence in the fundamentals of programming in Java"
      ]
    },
    {
      "title": "Python for Beginners: The Complete Python Masterclass",
      "url": "https://www.udemy.com/course/exploring-python/",
      "bio": "Achieve a Complete Mastery over the Core Python Skills using Examples and Exercises",
      "objectives": [
        "Acquire core Python skills for smooth transition into Data Science, Machine Learning",
        "Learn python by solving problems: Solve coding exercises (Solutions included)",
        "Confidently appear in Job interviews for the role of Junior Python Programmer",
        "Go from a complete beginner to a professional Python developer",
        "Write professional, high-quality Pythonic code",
        "Understand how Python works behind the scene",
        "Stay relevant and up-to-date with new content and assignments updated regularly"
      ],
      "course_content": {
        "Introduction": [
          "Python -What makes it hot and popular language?"
        ],
        "How to approach this masterclass": [
          "Understand the Udemy Interface (don't skip if you're new to Udemy)"
        ],
        "Installing Python": [
          "Decide what you want? just the core Python? or Python with Extras?",
          "Option 1 - Installing Core Python (no libraries)",
          "A message for You!",
          "option 2 - Installing Anaconda (Python with extra features...)"
        ],
        "Working within a virtual environment": [
          "Significance of the PATH variable",
          "Virtual Environment",
          "Virtual environment - understand it by a real life use case",
          "Installing and/or upgrading PIP: the package manager",
          "Create, activate, deactivate a virtual environment",
          "Know your development environment"
        ],
        "Jupyter Notebook - a very useful tool": [
          "Launch Jupyter Notebook app",
          "User Interface of Jupyter Notebook - 1",
          "User Interface of Jupyter Notebook - part 2",
          "Working with Jupyter Notebook - part 1",
          "Working with Jupyter Notebook - part 2",
          "Working with Jupyter Notebook - part 3",
          "Working with Jupyter Notebook - part 4",
          "Working with Jupyter Notebook - part 5",
          "Working with Jupyter Notebook - part 6"
        ],
        "warm up! : before you dive deeper into the fundamentals": [
          "Running Python Statements",
          "Python: Interesting Facts",
          "Keywords, Reserved Words and Identifiers",
          "Good to remember points",
          "Test your Python quotient - identifiers",
          "Commenting the Python Code",
          "Points to note (comments)"
        ],
        "variables": [
          "Variables and data types :overview",
          "Concept of a Variable - part1",
          "concept of variables",
          "Concept of a Variable - part 2",
          "Concept of a Variable - part 3",
          "Points to note (variables)",
          "variables and their addresses",
          "choose the correct answer"
        ],
        "overview of the data types and the operators in Python": [
          "Fundamental Data Types - part1",
          "Fundamental Data Types - part2",
          "Arithmetic Operators - part1",
          "Arithmetic Operators - part2",
          "Let's do Arithmetic Calculations - the Python way",
          "Size of Python Data Types",
          "Fundamental Data Types: summary",
          "Other Data Types - overview"
        ],
        "common built-in functions": [
          "Exploring the Print Function",
          "Input Function",
          "Casting Functions in Python",
          "Test your Python quotient ! (casting data types to one another)",
          "Built-in Functions - part 1 (summary)"
        ],
        "Conditional statements": [
          "Conditional Statements - part 1",
          "Conditional Statements - part 2",
          "Test your Python quotient (conditions)",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Access to a working computer",
        "Desire to learn new technologies",
        "Knowledge of school level mathematics"
      ],
      "description": "If you're looking for an exhaustive, yet easy-to-understand course on the basic concepts of Python, you're welcome to join us - the ever-growing group of more than 15000 students worldwide!\nPython has gained lots of popularity - it is an in-demand programming language that is backbone of data science, data analysis, machine learning and artificial intelligence!  Python is one of the most popular programming languages - widely used by giant IT companies - Google, Dropbox, NASA, Instagram, Disqus, Pinterest and many more.\nIf you want to become a Data scientist, Data analyst, Python programmer, Web developer, Artificial Intelligence engineer, or a Machine learning engineer - not on a superficial level - but thoroughly, you need to master the basics of Python.\n\n\nThis course on Python will give you a 'perfect' start in Python programming! If\n1. You're an absolute beginner who has never programmed before, or\n2.  you want to understand ins and outs of Python thoroughly,\nYou are at the right place!\nThis is NOT a quick to learn, refresher guide.  More than 6 hours of solid content, and lots of practice question, coding exercises, mini projects, and assignments on Python are included in this Python masterclass to help you solidify what you learn! The course is continuously upgraded with new lectures and assignments every month!\nSo, what all do we cover in this course? well, all the basic concepts a beginner needs! We start from scratch, and cover the following topics in great detail:\n\n\nInstalling Python\nRunning Python\nWorking with variables\nPrimitive data types (numbers, booleans, strings)\nComplex data types (list, tuple, dictionaries, set...)\nconditional statements (if | elif)\nLooping (for loop, while loop)\nFunctions\nFile Handling\nDate structures\nmemory management\nModules\nPackages\n\n\nAlso learn about\n-   the tool used by Python developers and Data Scientists - Jupyter Notebook\n-  cool Python Tips and Tricks\nGet notes on each and every important topic in Python fundamentals.\nSo, what are you waiting for? Enroll in the course to join an active group of 15000 students willing to become professional Pythonistas!",
      "target_audience": [
        "Absolute beginners who want to develop their computer programming skills",
        "IT professionals coming from other programming languages"
      ]
    },
    {
      "title": "Coding Fundamentals | Programming Basics",
      "url": "https://www.udemy.com/course/fundamentals-of-programming-languages-for-beginners/",
      "bio": "Coding | C Programming Essentials | Coding for Kids Essentials | C Language Essentials | Roblox Foundations",
      "objectives": [
        "Get started with programming fundamentals including an introduction to Flowcharts and Pseudocodes.",
        "Understand Variables and its types that include integer, float, boolean, string, etc.",
        "Understand Operators that includes Assignment (=), Mathematical (+, -, *,/), Comparison (>, <, ==, !=), and many more.",
        "Understand Conditional Statements that includes If statements, If-Else statements, Nested If-Else, and Switch statements.",
        "Understand Loops and its various types along with some tips for right usage of them.",
        "Understand Functions along with knowing the importance of Function Signature.",
        "Understand Exceptions, what they are, and how to use them properly in your coding.",
        "Lots of downloadable resources, quizzes, assignments and practice activities."
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome & About This Course",
          "What is Programming? How do I get Started?",
          "Downloadable Resource (5-Step Action Plan Guide)",
          "Downloadable Resource (Action Plan Worksheet)",
          "A Note on Examples"
        ],
        "Introduction to Programming Fundamentals": [
          "Introduction",
          "Download and Install Diagrams.net to Create Flowcharts",
          "Create your First Flowchart",
          "Flowchart Shapes",
          "What is Pseudocode?",
          "Pseudocode Syntax",
          "(Windows OS) Download and Install Notepad++ to Write Pseudocode",
          "(macOS) Notepad++ Alternatives",
          "Assignment 1 - Pseudocode",
          "Assignment 1 Solution",
          "Programming Fundamentals",
          "Conclusion"
        ],
        "Coding Concept 1: Variables & its Types": [
          "Introduction",
          "What is a Variable?",
          "Integer Variables",
          "Assignment 2 - Integer Variables",
          "Assignment 2 Solution",
          "Float Variables",
          "Assignment 3 - Float Variables",
          "Assignment 3 Solution",
          "Boolean Variables",
          "Character Variables",
          "String Variables",
          "Assignment 4 - String Variables",
          "Assignment 4 Solution",
          "A Note on Keywords",
          "Variables and their Types",
          "Conclusion"
        ],
        "Coding Concept 2: Operators": [
          "Introduction",
          "What are Operators?",
          "Operators",
          "Conclusion"
        ],
        "Coding Concept 3: Conditional Statements": [
          "Introduction",
          "Overview of Program Flow",
          "What are Conditional Statements?",
          "If Statement",
          "Assignment 5 - If Statement",
          "Assignment 5 Solution",
          "If Else Statements",
          "Assignment 6 - If Else Statements",
          "Assignment 6 Solution",
          "Nested If Else Statements",
          "Assignment 7 - Nested If Else Statements",
          "Assignment 7 Solution",
          "Switch Statements",
          "Conditional Statements",
          "3 Tips for Right Usage of Conditional Statements",
          "Conclusion"
        ],
        "Coding Concept 4: Loops": [
          "Introduction",
          "What are Loops?",
          "Types of Loops",
          "3 Tips for Right Usage of Loops",
          "Loops",
          "Conclusion"
        ],
        "Coding Concept 5: Functions": [
          "Introduction",
          "What are Functions?",
          "What is Function Signature?",
          "Types of Functions",
          "Assignment 8 - Functions",
          "Functions",
          "Conclusion"
        ],
        "Coding Concept 6: Comments": [
          "Introduction",
          "What are Comments?",
          "Types of Comments",
          "Comments",
          "Conclusion"
        ],
        "Coding Concept 7: Exceptions": [
          "Introduction",
          "What are Exceptions?",
          "Assignment 9 - Exceptions",
          "Exceptions",
          "Conclusion"
        ],
        "Course Conclusion": [
          "Bonus Lecture: Recommended Resources"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Fundamentals of programming are crucial to starting your career as a software developer. A strong foundation in programming concepts will help you learn any programming language. This course will teach you the programming language fundamentals from the ground up. You will be taken through a carefully selected approach for absolute beginners toward learning programming fundamentals.\n\n\nInstructor Bio:\nPraveen is an experienced product designer and developer who has worked for 10 years at Honeywell and 7 years at Bosch. He specializes in building products on the .NET stack and cloud platforms. He has a patent and has presented two papers. Additionally, he has published 20+ Courses and 50+ Hands-On Labs on Kubernetes, Docker & Azure, teaching thousands of students on various cloud-native topics.\n\n\nTopics Covered In This Course:\nGetting started with programming fundamentals, including an introduction to Flowcharts and Pseudocodes.\nUnderstanding Variables and their types include integer, float, boolean, string, etc.\nUnderstanding Operators that includes Assignment (=), Mathematical (+, -, *,/), Comparison (>, <, ==, !=), and many more.\nUnderstanding Conditional Statements that include If statements, If-Else statements, Nested If-Else, and Switch statements.\nUnderstanding Loops and their various types and some tips for properly using them.\nUnderstanding Functions along with knowing the importance of Function Signature.\nUnderstanding Exceptions, their meaning, and how to use them correctly in your coding.\nThere are lots of downloadable resources, quizzes, assignments, and practice activities.\n\n\nAt The End Of This Course:\nYou will have a strong foundation in the fundamentals of programming languages and coding concepts.\n\n\nEnroll now to get started.",
      "target_audience": [
        "Freshers, who are absolute beginners to coding. This course will give you an excellent head start towards an exciting programming career.",
        "Experienced non-IT professionals, who are looking for a career change as a software engineer. This course will provide you with a strong foundation in programming which is a necessity for your new career path."
      ]
    },
    {
      "title": "Learning C# .NET - Programming for Beginners.",
      "url": "https://www.udemy.com/course/c-sharp-for-beginners/",
      "bio": "Learn to Program in C# .NET from an Expert. Over 100 Lessons that allow you to learn C# Programming at your own pace.",
      "objectives": [
        "How to create a functional app based on complete, standards-compliant code.",
        "Essential programming concepts including data types, variables, classes and objects, arithmetic operators, I/O, if-else statements, loops and more.",
        "Computing theory and mathematical principles strictly as they apply to everyday C# programming."
      ],
      "course_content": {
        "Introduction": [
          "Working Files - Download These First",
          "What's Covered"
        ],
        "Getting Started": [
          "Visual C# Express Install",
          "Visual C# Express Overview"
        ],
        "Your First C# Program": [
          "Entering And Running The Program",
          "Correcting Errors",
          "Exercise - Modifying"
        ],
        "C# Building Blocks - Data Types And Variables": [
          "Introduction To Data Types",
          "Data Types - int, double",
          "Data Types Continued - string and bool",
          "Variable Naming Rules",
          "Declaring Variables",
          "Assigning Data To Variables",
          "Exercise - Saying Hello To Others"
        ],
        "Introduction To Classes And Objects": [
          "Classes And Objects",
          "Class Data Members - Constructors",
          "ToString Method",
          "Set and Get Methods",
          "Properties",
          "Utility Methods",
          "Exercise 1 - More On Name Class",
          "Exercise 2 - A Date Class"
        ],
        "Arithmetic Operators And Expressions": [
          "C# Arithmetic Operators",
          "Arithmetic Operator Order Of Precedence",
          "Increment And Composite Assignment Operators",
          "Using Constants",
          "Math Library Functions",
          "Mixing Arithmetic Data Types",
          "Exercise 1 - Translating Formulas To C# Code"
        ],
        "C# Input And Output": [
          "Reading Data From The Keyboard",
          "Reading Numeric Data From The Keyboard",
          "Writing Data To The Console",
          "Exercise - Generating A Form Letter"
        ],
        "Making Decisions": [
          "Relational Operators",
          "Logical Operators",
          "Simple if Statement",
          "if-else Statements",
          "Nested if-else Statements",
          "The if-else-if Statement - Part 1",
          "The if-else-if Statement - Part 2",
          "Exercise 1 - Q & A Program",
          "Exercise 2 - A Calculator Program"
        ],
        "Performing Repetition": [
          "The while Loop - Part 1",
          "The while Loop - Part 2",
          "Count Controlled while Loops",
          "Event Controlled while Loops",
          "The for Loop - Part 1",
          "The for Loop - Part 2",
          "The for Loop - Part 3",
          "break And continue",
          "Exercise 1 - Looping Q and A",
          "Exercise 2 - Looping Calculator"
        ],
        "Methods": [
          "Defining A Method - Part 1",
          "Defining A Method - Part 2",
          "Predicate Methods",
          "Void Methods",
          "Value Parameters",
          "Exercise 1 - Two Example Methods",
          "Exercise 2 - Adding Methods"
        ]
      },
      "requirements": [],
      "description": "A Verifiable Certificate of Completion is presented to all students who undertake this course.\nIn this C# for Beginners tutorial course, you can learn this powerful object-oriented programming language so closely tied to Microsoft .NET and see why it is such a great platform for creating rich applications. Professor Mike McMillan goes through the fundamentals of the language structure, and gradually lays the groundwork for you to build your own apps.\nIn 114 separate tutorials, Mike gives you a solid working knowledge of object-oriented programming, even if you’re completely new to coding. He demonstrates how to use variables and data types, objects and classes, arrays, inheritance and polymorphism and distinguishes how working in C# differs from other types of code. Once you gain your confidence in the underlying areas, you’ll be ready to complete the functional To-Do List app that is integrated into the course.",
      "target_audience": [
        "Anyone with an interest in creating their own applications from scratch.",
        "People who are wanting to gain a understanding of programming in C#.",
        "Programmers who want to expand the number of languages they can use.",
        "People who want to learn programming through pragmatic examples instead of endless explanations."
      ]
    },
    {
      "title": "The Complete Generative AI and Python Programming Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-python-programming-and-generative-ai-bootcamp/",
      "bio": "Master New Skills for Your Future: Python, Generative AI, LangChain, LangGraph, RAG, Prompt Engineering, OpenAI + Gemini",
      "objectives": [
        "Master Python Fundamentals: Build a strong foundation in Python by learning variables, data types, loops, and essential coding principles.",
        "Understand Generative AI: Discover how large language models like OpenAI and Gemini work to power cutting-edge AI applications.",
        "Build AI-Powered Applications: Create chatbots, tools, and workflows that leverage AI for real-world problem-solving.",
        "Master Prompt Engineering: Learn advanced techniques to write precise prompts for guiding AI models to deliver creative outputs.",
        "Develop Multimodal AI Skills: Integrate text, images, and audio inputs to design versatile and dynamic AI systems.",
        "Work with LangChain: Build advanced AI workflows using chains, memory, and tools to enhance functionality and efficiency.",
        "Leverage Pinecone Vector Databases: Use embeddings and vector search to create knowledge bases and retrieve information efficiently.",
        "Build Real-World AI Projects: Apply your skills to practical projects like analyzing data, building decision-making tools, and more.",
        "Dive into Advanced Python Concepts: Master advanced topics like file handling, error management, regular expressions, and debugging.",
        "Work with APIs: Connect Python applications to web APIs, handle JSON data, and interact with platforms like OpenAI and Google.",
        "Get Started with Pandas: Learn to analyze, clean, and manipulate data with Python's powerful Pandas library.",
        "Harness Data Structures: Solve complex problems using Python’s lists, dictionaries, tuples, and sets with efficiency.",
        "utomate Tasks with Python: Streamline your workflow by automating file processing, data handling, and repetitive tasks.",
        "Understand Object-Oriented Programming: Design reusable and modular code with classes, objects, and OOP principles.",
        "Learn Key AI Tools: Explore platforms like OpenAI Playground, Google AI Studio, and Tavily for innovative AI development.",
        "Unlock Web Scraping and Data Extraction: Fetch, process, and analyze data from the web using Python’s powerful libraries.",
        "Build Scalable Python Applications: Learn best practices to structure, modularize, and scale Python projects for real-world use.",
        "Optimize Your Development Workflow: Use tools like PyCharm, Jupyter Notebook, and virtual environments for efficient coding. Let me know if you need further ref"
      ],
      "course_content": {
        "Getting Started with Python & Generative AI": [
          "Welcome to the Python Programming & Generative AI Bootcamp",
          "Join Our Private Community!",
          "The Complete Python Cheat Sheet",
          "Course Resources"
        ],
        "Setting Up Your Python Environment": [
          "Types of Python Installations",
          "How to Run Python Code in Colab (Cloud IDE)",
          "How to Install Python on Windows",
          "How to Install Python on macOS and Linux",
          "Setting Up PyCharm on Windows",
          "Setting Up PyCharm on macOS and Linux",
          "How to Write and Run Python Code in PyCharm",
          "Setup the Programming Environment Quiz"
        ],
        "Python Basics": [
          "Python Variables",
          "Naming Conventions (PEP 8)",
          "Variables Quiz",
          "Comments in Python",
          "Comments Quiz",
          "Explaining variables, comments, and naming conventions to a junior developer who is learning Python",
          "Python's Built-in Data Types",
          "Dynamic vs. Static Typing",
          "Numbers and Math Operators",
          "Types, Numbers and Math Operators Quiz",
          "Key Python Operators: Comparison, Assignment, and Identity Operators",
          "Assignment, Comparison and Identity Operators Quiz",
          "Challenges: Test Your Skills - Python Basics"
        ],
        "Essential Python Data Structures": [
          "String Basics",
          "Getting User Input and Type Conversion",
          "String Basics and User Input Quiz",
          "Core String Operations: Indexing, Slicing, Concatenating",
          "String Operations Quiz",
          "Common String Methods - Part 1",
          "Common String Methods - Part 2",
          "String Methods Quiz",
          "Explain Python Strings to Python Newbie",
          "Formatted Strings: Using F-strings for Clean Output",
          "F-strings with = for Debugging",
          "Formatting Strings Quiz",
          "Challenges: Test Your Skills - Python Strings",
          "List Basics",
          "List Operations: Concatenation, Slicing",
          "List Basics and Operations Quiz",
          "List Operations: Iteration",
          "Essential List Methods - Part 1",
          "Essential List Methods - Part 2",
          "List Methods Quiz",
          "Explaining Python Lists",
          "List Comprehensions: Efficiently Creating and Modifying Lists",
          "List Comprehensions Quiz",
          "Challenges: Test Your Skills - Python Lists",
          "Tuple Basics",
          "Tuple Operations: Indexing and Unpacking",
          "Tuples Quiz",
          "Set Basics",
          "Common Set Operations",
          "Sets and Fronzensets Quiz",
          "Lists vs. Tuples vs. Sets",
          "Dictionary Basics",
          "Dictionaries Quiz",
          "Dictionary Operations: Accessing, Updating, .get(), .keys(), and .values()",
          "Removing Items from a Dictionary",
          "Set Operations and Iterating over Dictionaries",
          "Dictionary Merge and Update Operators",
          "Dictionary Comprehensions",
          "Dictionary Methods Quiz",
          "TypedDict",
          "Challenges: Test Your Skills - Python Dictionaries",
          "See the Bigger Picture"
        ],
        "Program Flow Control and Loops": [
          "Conditional Statements and Indentation",
          "Conditional Statements Quiz",
          "Boolean Variables",
          "Logical Operators: and, or, not",
          "Short-circuit Evaluation",
          "Booleans and Logical Operators Quiz",
          "For Loops",
          "Ranges",
          "For Loops and Ranges Quiz",
          "While Loops",
          "While Loops Quiz",
          "Smart Looping Techniques: continue and pass",
          "Smart Looping Techniques: break",
          "Smart Looping Techniques Quiz",
          "Challenges: Test Your Skills - Python Flow Control",
          "Debugging Your Code"
        ],
        "Functions and Lambda Expressions": [
          "Introduction to Functions and Docstrings",
          "The return Statement",
          "Functions Quiz",
          "Function Arguments: Positional, Keyword",
          "Default Arguments",
          "Positional-Only Parameters in Python",
          "Variable-Length Arguments: *args",
          "Variable-Length Arguments: **kwargs",
          "Function Arguments Quiz",
          "Dict Packing and Unpacking",
          "Variable Scope and Namespaces",
          "Global vs Local Scopes and Common Pitfalls",
          "Scopes and Namespaces Quiz",
          "Lambda Expressions",
          "Lambda Expressions Quiz",
          "Challenges: Test Your Skills - Functions"
        ],
        "Working with Files and Data": [
          "Reading Text Files in Python",
          "Working With Absolute and Relative File Paths",
          "Reading Files: Tell, Seek and Cursors",
          "The with Statement",
          "Reading Files into a List",
          "Reading Files Quiz",
          "Writing Text Files in Python",
          "Writing Files Quiz",
          "Project: File Processing",
          "Challenges: Test Your Skills - Working With Text Files",
          "Reading CSV Files in Python",
          "Project: Finding Peak Model Usage",
          "Writing CSV Files in Python",
          "Working with CSV Quiz",
          "Challenges: Text Your Skills - CSV",
          "JSON Handling for Structured Data",
          "Parsing JSON from API Responses",
          "Working with JSON Quiz",
          "Project: Making a Request to OpenAI"
        ],
        "Regular Expressions for Text Processing": [
          "Introduction to Regular Expressions (Regex)",
          "Using Anchors and Grouping",
          "Range Expressions (Character Classes)",
          "Non-Greedy Matching",
          "Substitutions and Data Cleaning with re.sub",
          "Processing Files and Splitting Strings",
          "Using Regular Expressions (re)"
        ],
        "Errors, Exception Handling, and Debugging": [
          "Introduction to Exception Handling",
          "Mastering Exception Handling: Try...Except...Else...Finally",
          "Built-in Exceptions and Best Practices",
          "Exceptions Quiz",
          "Project: Check Network Connections"
        ],
        "Object-Oriented Programming (OOP) Essentials": [
          "Intro to Object-Oriented Programming (OOP)",
          "OOP Demonstration: The Turtle",
          "Defining Classes and Objects",
          "The __init__ Method",
          "The __del__ Method",
          "OOP Basics Quiz",
          "Instance Attributes and Class Attributes",
          "Magic Methods",
          "OOP Attributes and Magic Methods Quiz",
          "Project: Creating a Practical Class for GenAI",
          "TypedDict - Part 1",
          "TypedDict - Part 2",
          "TypedDict Quiz"
        ]
      },
      "requirements": [
        "No tech background is needed! Whether you’re a developer, creative, or simply interested in AI, we’ll cover all the fundamentals to help you build real-world GenAI skills with confidence.",
        "You should be able to sign up to OpenAI API with a valid phone number.",
        "Based on your location, it's possible that OpenAI requires a credit card and funding your account."
      ],
      "description": "Are you interested in learning Python, but not sure where to start? Has Generative AI left you confused, unsure how to keep up as new AI tools emerge every day?\n…wondering if you’re falling behind as skills like prompt engineering and API integrations become essential?\n…struggling to decode complex libraries like OpenAI, Gemini, and LangChain without a clear path forward?\nDon’t let the complexity of GenAI hold you back—this Complete Python Programming & Generative AI Bootcamp equips you with the practical skills to build, innovate, and stay ahead.\n\n\nIntroducing the Python Programming & Generative AI Bootcamp: Mastering LangChain, OpenAI, and More\nPicture yourself breaking free from coding roadblocks and stepping into the world of Generative artificial intelligence, where Python skills transform into tools that do the heavy lifting for you.\nWith our in-depth guidance, you’ll master prompt engineering and gain the expertise to integrate top APIs like OpenAI and Gemini seamlessly.\nBy the end, you’ll build real-world applications that make your skillset indispensable—giving you a competitive edge in any tech-driven field!\n\n\nSkip this course, and you may miss the chance to build in-demand AI skills that are shaping the future of tech.\n\n\nWhat You’ll Learn in The Python Programming and Generative AI Bootcamp:\nMaster Python Fundamentals: Build a strong foundation in Python by learning variables, data types, loops, and essential coding principles.\nDive into Advanced Python Concepts: Master advanced topics like file handling, error management, regular expressions, and debugging.\nHarness Data Structures: Solve complex problems using Python’s lists, dictionaries, tuples, and sets with efficiency.\nAutomate Tasks with Python: Streamline your workflow by automating file processing, data handling, and repetitive tasks.\nUnderstand Object-Oriented Programming: Design reusable and modular code with classes, objects, and OOP principles.\nOptimize Your Development Workflow: Use tools like PyCharm, Jupyter Notebook, and virtual environments for efficient coding.\nWork with APIs: Connect Python applications to web APIs, handle JSON data, and interact with platforms like OpenAI and Google.\nGet Started with Pandas: Learn to analyze, clean, and manipulate data with Python's powerful Pandas library.\nUnderstand Generative AI: Discover how large language models like OpenAI and Gemini work to power cutting-edge AI applications.\nMaster Prompt Engineering: Learn advanced techniques to write precise prompts for guiding AI models to deliver creative outputs.\nDevelop Multimodal AI Skills: Integrate text, images, and audio inputs to design versatile and dynamic AI systems.\nBuild AI-Powered Applications: Create chatbots, tools, and workflows that leverage AI for real-world problem-solving.\nWork with LangChain: Build advanced AI workflows using chains, memory, and tools to enhance functionality and efficiency.\nLeverage Pinecone Vector Databases: Use embeddings and vector search to create knowledge bases and retrieve information efficiently.\nBuild Real-World AI Projects: Apply your skills to practical projects like analyzing data, building decision-making tools, and more.\nLearn Key AI Tools: Explore platforms like OpenAI Playground, Google AI Studio, and Tavily for innovative AI development.\nUnlock Web Scraping and Data Extraction: Fetch, process, and analyze data from the web using Python’s powerful libraries.\nBuild Scalable Python Applications: Learn best practices to structure, modularize, and scale Python projects for real-world use.\nWith Python and GenAI tools at your fingertips, gain the power to build smart, AI-driven solutions that put you ahead!\n\n\nBut what if it’s all too technical?\nNo worries! This course is crafted to break down GenAI concepts step-by-step in a way that’s clear and approachable. We’ll make sure every concept, from prompt engineering to API integrations, feels accessible and empowering.\nWhat if I’m not a tech expert?\nNo tech background is needed! Whether you’re a developer, creative, or simply interested in AI, we’ll cover all the fundamentals to help you build real-world GenAI skills with confidence.\nWhat if my schedule is packed?\nWe get it—this course is designed with flexibility in mind. With concise, on-demand lessons, you’ll be able to learn at your own pace and fit it into your day without any stress.\n\n\nStart building smarter, efficient solutions with Python for GenAI and experience a whole new level of productivity!\n\n\nThrough our comprehensive course, you will:\n❖ Master Key GenAI Libraries and Python Basics: Start with Python essentials, GenAI tools, and APIs like OpenAI, Gemini API, and Claude API, setting a strong foundation for hands-on AI projects.\n❖ Build Real-World AI Applications: Use LangChain and advanced GenAI tools to create practical projects, from intelligent chatbots to personalized recommendation engines.\n❖ Seamlessly Integrate Key GenAI APIs: Use the power of OpenAI API, LangChain, and Gemini to automate workflows, personalize user experiences, and enhance content.\n❖ Boost Engagement with AI-Driven Tools: Tap into image generation, embeddings, and custom search solutions to build dynamic applications that capture attention and drive interaction.\n❖ Craft Custom AI-Powered Solutions: Design tailored applications that solve real problems and expand your GenAI toolkit from prompt engineering to embedding-based searches.\n\n\nThis course is more than just about learning the groundwork!\nIt’s about taking you from square one and making you a true pro!\n…and by the end, you’ll have the GenAI skills to power up your projects with LangChain, OpenAI API, and advanced prompt engineering—turning your ideas into real, AI-driven applications with ease and confidence.\n\n\nWhy Invest in Python Essentials for Generative AI: Mastering LangChain, OpenAI, and More?\n● Level Up Your GenAI Skills: Turn your Python knowledge into artificial intelligence -driven applications that make an impact.\n● Seamless API Integrations: Comprehend OpenAI API, Gemini, Claude, and LangChain with clear, step-by-step guidance—no stress, just results.\n● Streamline with Smart Automation: Master automation techniques that simplify workflows, boost productivity and bring your GenAI projects to life.\n● Access the Right Tools Fast: Get expert recommendations on essential GenAI tools and setups, from prompt engineering to semantic search.\n● Data Handling Made Easy: Learn advanced data handling techniques, file management, and text processing to power up your GenAI applications.\n● Build Real-World AI Solutions: Cap off your learning with a master project, creating a recommendation system using LangChain and text embeddings—your entryway to powerful, AI-powered solutions.\n\n\nWith the skills from this course, you have HUGE career potential\nFor example, here are several roles that may interest you:\nAI/ML Engineer\nResponsibilities: Build, train, and optimize AI models, including generative AI and machine learning systems.\nSalary Potential: $110,000–$170,000/year\nData Scientist\nResponsibilities: Analyze and model data using Python to derive insights and develop predictive models.\nSalary Potential: $90,000–$140,000/year\nGenerative AI Specialist\nResponsibilities: Develop and deploy generative AI models for automation and creative applications.\nSalary Potential: $100,000–$160,000/year\nAI Solutions Architect\nResponsibilities: Design and implement AI-powered systems and end-to-end workflows for businesses.\nSalary Potential: $120,000–$180,000/year\nBig Data Engineer\nResponsibilities: Process, analyze, and manage large datasets, integrating with AI tools and frameworks.\nSalary Potential: $100,000–$150,000/year\n\n\nMeet Your Instructor – Andrei Dumitrescu\nWith over 15 years as a Network and Software Engineer and co-founder of Crystal Mind Academy, Andrei brings deep technical expertise and a true passion for teaching.\nA Udemy Partner with a four-generation family legacy in education, he’s crafted industry-leading courses in Python, Blockchain, AI, Ethical Hacking, Linux, and more. Andrei’s approach combines real-world labs, comprehensive documentation, and hands-on case studies, designed to make even the most complex topics accessible.\nWhen he's not teaching, Andrei enjoys fitness, reading, and family time. Join him and unlock your full potential in the world of technology.\nTry it Risk-Free\nWith our unmatched 100% Risk-Free Guarantee, there's absolutely no downside—just countless possibilities.\nImmerse yourself into the experience with confidence, knowing that if it doesn't exceed your expectations, we'll give you a full refund, no questions asked!\nYour satisfaction fuels our passion, so why wait?\nStep forward and explore – your path to mastering Python Essentials for Generative AI starts now!\n\n\nWho Should Enroll:\n● Frontend Developers: Learn to integrate GenAI APIs into user interfaces, enhancing your applications with AI-powered features like chatbots, recommendations, and dynamic content generation.\n● Backend Developers: Explore how to leverage Python and GenAI libraries to build scalable AI-driven solutions, automate workflows, and manage data pipelines effectively.\n● Full-Stack Developers: Master the complete stack by combining Python-based AI tools with frameworks for building end-to-end, intelligent applications.\n● Data Scientists and Analysts: Expand your Python toolkit to include GenAI-powered data handling, advanced embeddings, and natural language processing for smarter data insights.\n● AI and Machine Learning Practitioners: Deepen your understanding of GenAI libraries like LangChain, OpenAI, and Gemini, and integrate them into your existing models or workflows.\n● DevOps Engineers: Learn to deploy and manage GenAI systems efficiently using cloud environments, APIs, and virtualized Python setups like Google Colab and Jupyter.\n● Game Developers: Use GenAI tools for dynamic storytelling, procedural content generation, and interactive AI-powered features in games.\n● Web Developers: Add powerful GenAI-based search, personalization, and recommendation features to websites and apps using Python and vector database integrations.\n● Mobile App Developers: Integrate AI capabilities into mobile apps, like text-to-speech, image generation, and conversational AI, with GenAI APIs.\n… and anyone ready to apply the potential of GenAI to drive innovation in their field!\n\n\nTurn Python Skills into GenAI Expertise—Enroll Now to Build Intelligent, AI-Powered Applications That Set You Apart!",
      "target_audience": [
        "Frontend Developers: Learn to integrate GenAI APIs into user interfaces, enhancing your applications with AI-powered features like chatbots, recommendations, and dynamic content generation.",
        "Backend Developers: Explore how to leverage Python and GenAI libraries to build scalable AI-driven solutions, automate workflows, and manage data pipelines effectively.",
        "Full-Stack Developers: Master the complete stack by combining Python-based AI tools with frameworks for building end-to-end, intelligent applications.",
        "Data Scientists and Analysts: Expand your Python toolkit to include GenAI-powered data handling, advanced embeddings, and natural language processing for smarter data insights.",
        "AI and Machine Learning Practitioners: Deepen your understanding of GenAI libraries like LangChain, OpenAI, and Gemini, and integrate them into your existing models or workflows.",
        "Game Developers: Use GenAI tools for dynamic storytelling, procedural content generation, and interactive AI-powered features in games.",
        "Web Developers: Add powerful GenAI-based search, personalization, and recommendation features to websites and apps using Python and vector database integrations.",
        "Mobile App Developers: Integrate AI capabilities into mobile apps, like text-to-speech, image generation, and conversational AI, with GenAI APIs."
      ]
    },
    {
      "title": "Programming For Non-Programmers: Fundamentals",
      "url": "https://www.udemy.com/course/programming-for-non-programmers/",
      "bio": "Learn how to speak with developers. Designed for entrepreneurs, businesses, and junior developers.",
      "objectives": [
        "Understand the Web Development Process",
        "Make better hiring and product decisions: UX, Information Architecture, Design, Development",
        "Explain concepts like APIs, CMSs, and iPhone Development in plain English",
        "Understand which programming language to choose for your project",
        "Develop a basic HTML/CSS/JS template",
        "Understand how to better communicate your startup idea to developers"
      ],
      "course_content": {},
      "requirements": [
        "laptop"
      ],
      "description": "Are you a creative or entrepreneur that wishes you could speak tech with your web development team? Maybe you wish you could code a bit yourself?\nProgramming for Non-Programmers is online course designed to help non-programmers communicate more efficiently with developers.\nBecause leading a development team (without being a developer yourself) can sometimes feels like “talking about dancing”, I've created an interactive and easy to follow environment in which to learn the basics.\nAnd for developers just getting started, think of this as the primer to help kickstart your career.\nIf you're running a tech start-up, it's essential that you familiarize yourself with the fundamentals of web development. Ultimately knowing how to \"talk to the talk\" will help you communicate better with developers, and overall just look really cool.\nWhat You'll Learn\nIn this course we'll tackle some development principles to get you on the right path. We'll look at questions like, \"Front-end vs. Back-end?\", \"Is UX necessary for my project?\", \"What is this Javascript function thingy, and why am I passing it strange math equations to it?\".\nWhat coding languages should I use for my next project?\nWhich CMS is right for the job?\nWhat are the stages of web development?\nWhat deliverables do I need to provide my developer? (FYI - This is important and often neglected or done poorly)\nReading code & basic developing principles to get us started\nKey concepts of programming that are the found in every programming language\nUnderstanding Javascript Variables & Logic\nLooking for corporate training?\nI'm based in New York City, and available to bring my workshop Programming for Non-Programmers to your company. Past clients include: American Express, GE, NASDAQ, Razorfish, and more!\nEmail me chris[at]onemonth .com for details.\nLive Support! (I'm Here To Answer Your Questions)\nI'm available for questions to all students taking the class. By joining the class you gain access to message me through email. And if for any reason you are not satisfied with the material, I will gladly refund you myself. No questions asked.\nBest of luck!\nChris\nTeacher at OneMonth . com\nHost of the \"LEARN TO CODE in ONE MONTH PODCAST\"\nAdjunct Professor at Columbia University Business School\n\n\n\"I've traveled a steep learning curve thanks to Chris' friendly and lucid style of teaching.\" - Charles Best, CEO of DonorsChoose\n\"I wish I had taken this class 5 years ago!\" - Michael Goodwin, UX Designer\n\"Informative, digestible, actionable\" - Katherine, Entrepreneur\n\"An INCREDIBLE thank you! So far you're the only one who has been able to teach me how to code.\" - Darren Hakimi, Analyst\n\"You are articulate and engaging. Broad and diverse range of topics. Not easy to address so much in limited time.\" - student feedback\nEven for a non tech person like me (who yes, has 50,000 emails in her inbox and actually thinks thats totally normal), I was able to keep up. My intent was to get a good overview of what the heck programming actually is, and better understand the language/terms associated with it.  I  certainly got that.  I also appreciated your passion for teaching. I will absolutely recommend the class to my friends. - Debra-Ellen Glickstein,  Entrepreneur",
      "target_audience": [
        "This is for the total beginner!",
        "Entrepreneurs",
        "Students",
        "You. Because you want to get the attention of Fred the IT guy that isn't giving you the time of day",
        "Anyone looking to learn the first 4 hour of Web Development and Programming Concepts"
      ]
    },
    {
      "title": "Learn Python: The Complete Python Automation Course!",
      "url": "https://www.udemy.com/course/pythonautomation/",
      "bio": "Learn all about Python Automation from Web Scraping and Browser Automation to Excel, Word and GUI Automation",
      "objectives": [
        "Gain a complete understanding of Python 3",
        "Write programs that can recognize patterns of text through \"regular expressions\"",
        "Create, Read and Write to Files on their System",
        "Completely understand how to debug their Python code utilizing assertions and logging",
        "Crawl websites for data and pull information through BeautifulSoup",
        "Automate their web browsers with Selenium and run their own scripts",
        "Programmatically generate, update, and parse Word and Excel documents",
        "Send and Retrieve Emails, Schedule Tasks and understand Threading",
        "Programmatically control the mouse and keyboard to automate human interactions"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is required",
        "Access to a Computer or Laptop",
        "Everything else will be covered in the course!"
      ],
      "description": "Do you want to become a programmer? Do you want to learn how to create games, automate your browser, visualize data, and much more?\nIf you’re looking to learn Python for the very first time or need a quick brush-up, this is the course for you!\nPython has rapidly become one of the most popular programming languages around the world. Compared to other languages such as Java or C++, Python consistently outranks and outperforms these languages in demand from businesses and job availability. The average Python developer makes over $100,000 - this number is only going to grow in the coming years.\nThe best part? Python is one of the easiest coding languages to learn right now. It doesn’t matter if you have no programming experience or are unfamiliar with the syntax of Python. By the time you finish this course, you'll be an absolute pro at programming!\nThis course will cover all the basics and several advanced concepts of Python. We’ll go over:\nThe fundamentals of Python programming\nWriting and Reading to Files\nRegular Expressions\nString Manipulation\nWeb scraping with BeautifulSoup4\nBrowser automation with Selenium\nExcel and Word Automation\nJSON Automation, Threading and Scheduling\nGUI Automation\nAnd much more!\nIf you read the above list and are feeling a bit confused, don’t worry! As an instructor and student on Udemy for almost 4 years, I know what it’s like to be overwhelmed with boring and mundane. I promise you’ll have a blast learning the ins and outs of python. I’ve successfully taught over 200,000+ students from over 200 countries jumpstart their programming journeys through my courses.\nHere’s what some of my students have to say:\n“I wish I started programming at a younger age like Avi.  This Python course was excellent for those that cringe at the thought of starting over from scratch with attempts to write programs once again. Python is a great building language for any beginner programmer. Thank you Avi!”\n\n\n“I had no idea about any programming language. With Avi's lectures, I'm now aware of several python concepts and I'm beginning to write my own programs. Avi is crisp and clear in his lectures and it is easy to catch the concepts and the depth of it through his explanations. Thanks, Avi for the wonderful course, You're awesome! It's helping me a lot :)”\n\n\n\"Videos are short and concise and well-defined in their title, this makes them easy to refer back to when a refresher is needed. Explanations aren't convoluted with complicated examples, which adds to the quick pace of the videos. I am very pleased with the decision to enroll in this course. Not only has it increased the pace I'm learning Python but I actively look forward to continuing the course, whenever I get the chance. Avi is friendly and energetic, absolutely delightful as an instructor.”\nSo what are you waiting for? Jumpstart your programming journey and dive into the world of Python by enrolling in this course today!",
      "target_audience": [
        "Beginners who have never programmed before",
        "Intermediate Python Programmers looking to dive deeper into Python",
        "Anyone wanting to learn automation, web scraping and more!",
        "Programmers looking to switch languages to Python"
      ]
    },
    {
      "title": "Mastering x86-64 Real Assembly Language from Zero | ASM+2025",
      "url": "https://www.udemy.com/course/assembly-best/",
      "bio": "Every Code is Open Source if you know ASSEMBLY Programming | Reverse Engineering, Ethical Hacking, Windows, Linux, MP...",
      "objectives": [
        "Write efficient x86-64 assembly programs.",
        "Use NASM assembler for optimal coding.",
        "Analyze and dissect compiled binaries.",
        "Convert decimal to binary with ease.",
        "Debug with GDB and set breakpoints.",
        "Locate variables in memory addresses.",
        "Master logical operations: OR, XOR, AND.",
        "Create Makefiles for streamlined workflows.",
        "Understand CPU architectures' impact.",
        "Develop reverse engineering skills.",
        "Optimize code for performance gains.",
        "Handle bitwise operations confidently.",
        "Analyze program output using GDB.",
        "Enhance debugging proficiency.",
        "Craft complete assembly projects.",
        "Decode and understand disassembly.",
        "Unleash the power of logical NOT.",
        "Apply XOR logic for data manipulation.",
        "Leverage AND logic for efficient coding.",
        "Join a supportive learning community.",
        "and other awesome topics ---->"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of programming concepts.",
        "A computer with a compatible OS (Windows, Linux, macOS).",
        "Enthusiasm to explore low-level programming."
      ],
      "description": "Embark on a Transformational Journey into Assembly Language Mastery\nWelcome to the captivating realm where software and hardware converge, where you, the programmer, become the orchestrator of the most intricate symphony of digital interactions. Allow us to introduce you to \"Mastering Assembly Language Programming,\" a groundbreaking online course that promises to transform you into a virtuoso of low-level computing. Through this immersive experience, you'll not only gain an unparalleled understanding of computers' inner workings but also learn how to communicate with them in their most fundamental language.\n\n\nUnveiling the Essence of Assembly Language\nAt the core of every piece of software and hardware lies the mesmerizing dance of binary instructions. Assembly language acts as the bridge between the abstract human-readable code and the binary operations that truly drive computers. In a world saturated with high-level programming languages, assembly language remains the bedrock of computing. It endows you with the superpower of precise control, unmatched optimization prowess, and an intimate connection with the underlying hardware.\n\n\nWhy Embrace the Mastery of Assembly?\nAmid the layers of abstraction that modern programming languages offer, assembly language stands as the ultimate intellectual challenge. By delving into the intricacies of assembly, you open doors to an enriched programming experience. The knowledge you acquire here will not only sharpen your problem-solving acumen but also elevate you to the ranks of programmers who can optimize code for peak performance and unravel the innermost secrets of hardware architecture.\nAssembly language, with its innate ability to communicate directly with hardware, plays a pivotal role in a multitude of domains, ranging from ethical hacking to hardware programming. Let's explore how assembly language acts as a bedrock in each of these fields.\n1. Ethical Hacking: Ethical hacking, also known as penetration testing, relies on simulating cyberattacks to uncover vulnerabilities in systems and networks. Assembly language's role here is paramount. By understanding the assembly-level instructions executed by the target systems, ethical hackers gain insight into potential weaknesses. This knowledge empowers them to exploit vulnerabilities, identify attack vectors, and ultimately bolster the security of their clients' systems.\n2. Reverse Engineering and Malware Analysis: In the realm of reverse engineering and malware analysis, assembly language is the key to understanding the inner workings of software, including potentially malicious code. Malware analysts use assembly language to dissect malicious software, identify its behavior, and determine how it interacts with the host system. By deciphering these low-level details, analysts can develop countermeasures, remove infections, and strengthen defenses against cyber threats.\n3. Cybersecurity: Assembly language serves as the foundational language for cybersecurity experts who strive to protect digital assets from a vast array of threats. Understanding assembly allows professionals to analyze malware, identify vulnerabilities in software, and develop patches to mitigate security risks. It also enables them to design and implement security mechanisms at the hardware level, ensuring robust protection against sophisticated attacks.\n4. Hardware Programming: In the domain of hardware programming, assembly language forms the cornerstone of communication between software and hardware components. Whether it's programming microcontrollers, developing firmware, or working on embedded systems, assembly language provides the necessary precision and control over hardware operations. It allows programmers to optimize code for resource-constrained environments and tailor software to the unique characteristics of various hardware platforms.\n5. Computer Programming: Assembly language's influence extends to the broader field of computer programming. While high-level languages offer abstraction and ease of development, assembly language imparts a deeper understanding of how computers execute instructions. This knowledge enhances programmers' problem-solving skills and helps them write more efficient code. Additionally, understanding assembly language provides insights into performance bottlenecks and enables optimization for critical applications.\nIn essence, assembly language serves as the linguistic bridge that connects software and hardware, enabling professionals to interact with computing systems at their most elemental level. Its role in ethical hacking, reverse engineering, cybersecurity, hardware programming, and computer programming underscores its significance as a foundational skill for professionals in these domains. By mastering assembly language, individuals can unlock unprecedented insights, wield powerful tools, and navigate the complexities of today's digital landscape with confidence.\n\n\nKey Highlights of Our Comprehensive Course:\n\n\nLaying the Foundation for Mastery\nEmbark on a journey from the very basics of assembly language programming, building your expertise incrementally until you command it with finesse.\nEquipping You with Essential Tools\nOur course unveils the arsenal of tools that facilitate assembly language programming, ensuring you are prepared to navigate the journey with confidence.\nUnderstanding the Landscape of Computing\nDelve deep into the intricate world of CPU architectures and binaries. This foundational knowledge is essential to unraveling the mysteries of assembly language programming.\nPeering into Binary Deconstruction\nGain mastery over the techniques of disassembly and the role of disassemblers. Witness how seemingly cryptic binary code is transformed into human-readable insights.\nMastering Data Manipulation\nUnlock the art of converting decimal to binary through basic mathematical operations. This skill is pivotal in low-level computing and binary manipulation.\nNavigating the Debugging Realm\nExplore the fascinating universe of debugging, where you will learn to navigate memory addresses and unearth hidden variables, ensuring your code is robust and error-free.\nCrafting Complexity with Confidence\nElevate your skills by crafting intricate assembly programs. Experience the thrill of witnessing your capabilities evolve as you tackle more complex challenges.\nUnveiling the Layers of Binary Analysis\nDemystify binary analysis as you explore its various stages. Gain a profound understanding of compilation and the steps that transform your code into executable software.\nDecoding the Symbolic Language\nPeek into the world of symbols and their role within binaries. Learn to interpret their narratives, shedding light on the inner workings of your code.\nThe Journey of Binary Execution\nGain a deep comprehension of how binaries come to life. Explore the intricate process of loading and executing your code, bringing your creations to life.\nEmbark on Your Transformational Journey\nThis course is your gateway to a transformational experience that will forever alter your perception of computing. Whether you are a passionate programming enthusiast, an aspiring computer scientist, or a seasoned professional looking to expand your horizons, \"Mastering Assembly Language Programming\" is meticulously crafted to elevate your skills to an entirely new level.\nUnleash Limitless Potential\nIn an era dominated by technology, mastery of low-level computing opens doors to a realm of limitless possibilities. Your enrollment in our course represents your embarkation on an odyssey into assembly language programming. You will unveil the hidden intricacies that shape the digital world and harness this knowledge to shape the future of technology.\nEmpower Your Future\nToday marks the beginning of your journey into the captivating world of assembly language programming. Embrace the challenge, seize the opportunity, and emerge as a master of low-level computing. Enroll today and set yourself on a trajectory to unleash the potential that resides within the intricate code of the digital universe. Your empowered future starts here.",
      "target_audience": [
        "Aspiring programmers seeking to master x86-64 assembly.",
        "Software developers aiming to enhance debugging skills.",
        "Computer science enthusiasts eager to explore logical operations."
      ]
    },
    {
      "title": "The Complete Python Course 2025",
      "url": "https://www.udemy.com/course/the-complete-python-course-chris-haroun-and-luka-anicin/",
      "bio": "The most COMPREHENSIVE + UP TO DATE Python Course. Free 980 page book version of course included +Python in Excel +Mojo",
      "objectives": [
        "Learn Python from scratch. There are 4 tracks depending on how much experience the student has with programming.",
        "Go from absolute beginner to expert in this comprehensive course.",
        "Learn NEW Python coding features that were just introduced; this is the MOST UP TO DATE Python course on the market.",
        "Also included is the next generation Python language (Mojo), how to use Python in Excel and much more.",
        "A free 980 page book version of the course is included and is only available to students that take this course.",
        "Learn Python Data Types and Variables",
        "Learn Python Math (Meaning Operators) and \"Strings\"",
        "Learn Python Built in Functions & Creating Basic Functions",
        "Learn Python’s List Data Type and the Sum Function",
        "Learn Python Logic and Loops",
        "Learn Python Tuples, Dictionaries and Sets",
        "Learn Python Methods and Advanced Strings",
        "Learn Python Object Oriented Programming (OOP) & Classes",
        "Learn Python NumPy (Numerical Python)",
        "Learn Python Pandas and Polars",
        "Learn Python Data Processing and ETL (Extract, Transform and Load)",
        "Learn Python Writing Clean and Efficient Code Processes",
        "Learn Python in Excel",
        "Learn Mojo",
        "Learn All Built-In Python Functions"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is required to take this course."
      ],
      "description": "Welcome to the The Complete Python Course 2024, which is the most COMPREHENSIVE and UP TO DATE Python course with many exercises and resources.\nThe course also includes a 980 page book version of the course for free, which is only available to students who take this course.\nThis course teaches new features introduced in Python; the course also includes how to use the next generation version of Python called Mojo, how to use Python in Excel and much more. No experience in Python or with programming is required to take this course. There is a 30 day money back guarantee, so you have nothing to lose and everything to gain. Please watch the comprehensive promotional video trailer for an outline of the course.\nAnyone can take this course as this comprehensive course has 4 tracks as follows:\n[B] Beginner Track for students that have no experience with programming\n[I] Intermediate Track for students that have some programming experience, but no Python experience\n[G] Genius Track for students that have some Python experience, but want to learn more advanced and brand new Python concepts.\n[A] All Track for students who want to take the whole course and go from knowing nothing about Python to becoming a master of Python!\nAfter taking this course you be able to take your career or business to the next level by thoroughly understanding Python.\n\nCOURSE OUTLINE: [B = Beginner Track Lessons and Exercises, I = Intermediate Track Lessons and Exercises,  G = Genius Track Lessons and Exercises, A = All Track Lessons and Exercises\n\n[B/I/G/A] Level 1 of 17: Intro, How to Take the Course, Access Free Python Book & Our First Exercise\n[B/I/G/A] Welcome, How to Take the Course and How to Download the Free Python Book\n[B/I/A] Introduction to Python (What, Why and How of Level 1)\n[B/I/A] How to Use Python Online Using Google Colab for Free\n[B/I/A] Exercise 1.1: Our First Python Code: “Hello World”\n[B/I/A] Answer 1.1: Our first Python Code: “Hello World”\n[B/I/A] Optional Lecture: Who Uses Python & What are the Pros & Cons of Python?\n[B/I/A] Quiz for Level 1\n\n\n[B/I/A] Level 2: Data Types and Variables\n[B/I/A] Intro to Data Types and Variables (What, Why and How of Level 2)\n[B/I/A] How to Code Data Types & Variables in Python (String+Integer Variables)\n[B/I/A] Exercise 2.1: Using String and Integer Data Types\n[B/I/A] Answer 2.1: Using String and Integer Data Types\n[B/I/A] Floating and Boolean Data Types\n[B/I/A] Exercise 2.2: Using Floating and Boolean Data Types\n[B/I/A] Answer 2.2: Using Floating and Boolean Data Types\n[B/I/A] How to Change the Content or Data Type of a Variable (\"Casting\")\n[B/I/A] Exercise 2.3: How to Change the Content or Type of a Variable\n[B/I/A] Answer 2.3: How to Change the Content or Type of a Variable\n[B/I/A] Level 2 Final Exercise: Currency Converter\n[B/I/A] Level 2 Final Exercise Answer: Currency Converter\n[B/I/A] Quiz for Level 2\n\n[B/I/A] Level 3: Python Math (Meaning Operators) and \"Strings\"\n[B/I/A] Intro to Python Math (Operators) & Strings (What, Why & How of Level 3)\n[B/I/A] Arithmetic Rules in Python\n[B/I/A] Exercise 3.1: Arithmetic Rules in Python\n[B/I/A] Answer 3.1: Arithmetic Rules in Python\n[B/I/A] Stringing Together Variables\n[B/I/A] Exercise 3.2: Stringing Together Variables\n[B/I/A] Answer 3.2: Stringing Together Variables\n[B/I/A] Level 3 Final Exercise: Simple Interest Calculator for a Savings Account\n[B/I/A] Level 3 Final Exercise Answer\n[B/I/A] Quiz for Level 3\n\n[B/I/G/A] Level 4: Built in Functions & Creating Basic Functions\n[B/I/G/A] Intro to Built-In/Creating Functions (What, Why & How of Level 4)\n[B/I/A] Basic Built in Python Functions that Use Math\n[B/I/A] Exercise 4.1: Built in Functions that Use Math\n[B/I/A] Answer 4.1: Built in Functions that Use Math\n[B/I/A] Input Built in Python Function\n[B/I/A] Exercise 4.2: Input Built in Python Function\n[B/I/A] Answer 4.2: Input Built in Python Function & Stringing Together Objects\n[B/I/A] Creating Basic Custom Functions Part 1\n[B/I/A] Exercise 4.3: Creating Custom Functions Part 1\n[B/I/A] Answer 4.3: Creating Custom Functions Part 1\n[I/G/A] Creating Basic Custom Functions Part 2\n[I/G/A] Exercise 4.4: Creating Basic Custom Functions Part 2\n[I/G/A] Answer 4.4: Creating Basic Custom Functions Part 2\n[I/G/A] Creating Advanced Functions (Keyword and Default Values)\n[I/G/A] Exercise 4.5: Creating Advanced Functions Keyword and Default Values)\n[I/G/A] Answer 4.5: Creating Advanced Functions (Keyword and Default Values)\n[I/G/A] Returning Values from Custom Functions\n[I/G/A] Exercise 4.6: Returning Values from Custom Functions\n[I/G/A] Answer 4.6: Returning Values from Custom Functions\n[B/I/G/A] Level 4 Final Exercise: Simple Calculator with Functions\n[B/I/G/A] Level 4 Final Exercise Answer: Simple Calculator with Functions\n[B/I/G/A] Quiz for Level 4\n[B/I/G/A] Level 5: The List Data Type and the Sum Function\n[B/I/G/A] Intro to List Data Type (What, Why and How of Level 5)\n[B/I/G/A] How Does the List Data Type Work (and Using the SUM Function)?\n[B/I/G/A] Exercise 5.1: The List Data Type Work (and Using the SUM Function)\n[B/I/G/A] Answer 5.1: The List Data Type Work (and Using the SUM Function)\n[B/I/G/A] Level 5 Final Exercise: Grocery Shopping List\n[B/I/G/A] Level 5 Final Exercise Answer: Grocery Shopping List\n[B/I/G/A] Quiz for Level 5\n\n[B/I/G/A] Level 6: Logic and Loops\n[B/I/G/A] Intro to Logic and Loops (What, Why and How of Level 6)\n[B/I/A] The IF, ELSE Statement\n[B/I/A] Exercise 6.1: The IF, ELSE Statement\n[B/I/A] Answer 6.1: The IF, ELSE Statement\n[B/I/A] Using A Nested IF Statement\n[B/I/A] Exercise 6.2: Using A Nested IF Statement\n[B/I/A] Answer 6.2: Using A Nested IF Statement\n[B/I/A] Using ELIF in an IF Statement and the OR & AND Logic\n[B/I/A] Exercise 6.3: Using ELIF in an IF Statement and the OR & AND Logic\n[B/I/A] Answer 6.3: Using ELIF in an IF Statement and the OR & AND Logic\n[B/I/G/A] Using the MATCH and CASE Logic\n[B/I/G/A] Exercise 6.4: Using the MATCH and CASE Logic\n[B/I/G/A] Answer 6.4: Using the MATCH and CASE Logic\n[B/I/A] Formatting\n[B/I/A] Exercise 6.5: Formatting\n[B/I/A] Answer 6.5: Formatting\n[B/I/A] Slicing\n[B/I/A] Exercise 6.6: Slicing\n[B/I/A] Answer 6.6: Slicing\n[B/I/A] For Loop\n[B/I/A] Exercise 6.7: For Loop\n[B/I/A] Answer 6.7: For Loop\n[B/I/A] While Loop\n[B/I/A] Exercise 6.8: While Loop\n[B/I/A] Answer 6.8: While Loop\n[I/G/A] Level 6 Final Exercise: Time Tracker for Tasks\n[I/G/A] Level 6 Final Exercise Answer: Time Tracker for Tasks\n[B/I/G/A] Quiz for Level 6\n\n[B/I/G/A] Level 7: 3 More Data Types: Tuple, Dictionary and Set\n[B/I/G/A] Intro to More Data Types (What, Why and How of Level 7)\n[B/I/G/A] Tuples Explained How is it Different from a List?\n[B/I/G/A] Exercise 7.1: Tuples\n[B/I/G/A] Answer 7.1: Tuples\n[I/G/A] Introduction to Dictionaries\n[I/G/A] Dictionary Methods/Functionality\n[I/G/A] Exercise 7.2: Dictionaries\n[I/G/A] Answer 7.2: Dictionaries\n[I/G/A] Introduction to Sets\n[I/G/A] Exercise 7.3: Sets\n[I/G/A] Answer 7.3: Sets\n[I/G/A] Level 7 Final Exercise: Restaurant Menu Manager\n[I/G/A] Level 7 Final Exercise Answer: Restaurant Menu Manager\n[B/I/G/A] Quiz for Level 7\n\n[B/I/G/A] Level 8: Methods and Advanced Strings\n[B/I/G/A] Intro to Methods and Advanced Strings (What, Why and How of Level 8)\n[B/I/A] What is a Method and How do Get the Methods for An Object?\n[B/I/A] Exercise 8.1: Methods\n[B/I/A] Answer 8.1: Methods\n[B/I/G/A] String Methods\n[B/I/G/A] Exercise 8.2: String Methods\n[B/I/G/A] Answer 8.2: String Methods\n[I/G/A] Advanced String Operations\n[I/G/A] Exercise 8.3: Advanced String Operations\n[I/G/A] Answer 8.3: Advanced String Operations\n[G/A] Lambda Functions & Map\n[G/A] Recursion\n[I/G/A] Level 8 Final Exercise: Customer Support Chat Log Analysis\n[I/G/A] Level 8 Final Exercise Answer: Customer Support Chat Log Analysis\n[B/I/G/A] Quiz for Level 8\n\n[B/I/G/A] Level 9: Object Oriented Programming (OOP) & Classes\n[B/I/G/A] Intro to OOP (What, Why and How of Level 9)\n[B/I/G/A] Understanding Classes and Instances\n[B/I/G/A] Exercise 9.1: Creating Your First Class and Instance\n[B/I/G/A] Answer 9.1: Creating Your First Class and Instance\n[B/I/G/A] Defining Methods in a Class\n[I/G/A] Understanding Self in Python\n[I/G/A] Class Attributes Versus Instance Attributes\n[I/G/A] Exercise 9.2: Classes, Instances and Attributes\n[I/G/A] Answer 9.2: Classes, Instances and Attributes\n[I/G/A] Inheritance: Extending Functionality\n[I/G/A] Encapsulation: Hiding Information\n[I/G/A] Exercise 9.3: Implementing Encapsulation\n[I/G/A] Answer 9.3: Implementing Encapsulation\n[I/G/A] Understanding Magic Dunder Methods\n[G/A] Understanding Composition and Aggregation\n[G/A] Level 9 Final Exercise: Simple Bank Account Manager\n[G/A] Level 9 Final Exercise Answer: Simple Bank Account Manager\n[B/I/G/A] Quiz for Level 9\n\n[I/G/A] Level 10 Mastering NumPy (Numerical Python)\n[I/G/A] Intro to NumPy (What, Why and How of Level 10)\n[I/G/A] Libraries Explained and Installing NumPy\n[I/G/A] Arrays Data Type\n[I/G/A] NumPy Array Creation Methods\n[I/G/A] Operations with Arrays\n[I/G/A] Slicing NumPy Arrays\n[I/G/A] Exercise/Project 10.1: Slicing and Indexing with NumPy\n[I/G/A] Answer 10.1: Slicing and Indexing with NumPy\n[I/G/A] Loops Versus Vectorization\n[I/G/A] Exercise/Project 10.2: Vectorization\n[I/G/A] Answer 10.2: Vectorization\n[I/G/A] Universal Functions\n[I/G/A] Conditional Filtering\n[I/G/A] Reshaping Arrays\n[I/G/A] Handling Missing Values Using NumPy\n[I/G/A] File Handling\n[I/G/A] Quiz for Level 10\n\n[I/G/A] Level 11: Pandas and Polars\n[I/G/A] Intro to Pandas & Polars (What, Why and How of Level 11)\n[I/G/A] Installing Pandas and Polars\n[I/G/A] Loading Data Using Pandas and Polars\n[I/G/A] Reading Data in Different Ways\n[I/G/A] Exercise 11.1: First Pandas/Polars Exercise\n[I/G/A] Answer 11.1: First Pandas/Polars Exercise\n[I/G/A] Understanding Series\n[I/G/A] Dataframe Operations\n[I/G/A] Dealing with Missing Data\n[I/G/A] Map and Transform\n[I/G/A] Merging and Joining\n[I/G/A] Exercise 11.2: Second Pandas/Polars Exercise\n[I/G/A] Answer 11.2: Second Pandas/Polars Exercise\n[I/G/A] Strings\n[I/G/A] Sales Data Visualization\n[I/G/A] Exercise 11.3: Third Pandas/Polars Exercise\n[I/G/A] Answer 11.3: Third Pandas/Polars Exercise\n[I/G/A] Quiz for Level 11\n\n[I/G/A] Level 12: Data Processing and ETL (Extract, Transform and Load)\n[I/G/A] Intro to Data Processing and ETL (What, Why and How of Level 12)\n[I/G/A] Data Cleaning Part 1\n[I/G/A] Data Cleaning Part 2\n[I/G/A] Label Encoder and Data Transformation Part 1\n[I/G/A] Label Encoder and Data Transformation Part 2\n[I/G/A] Label Encoder and Data Transformation Part 3\n[I/G/A] Handling Imbalanced Data\n[I/G/A] Data Partitioning\n[I/G/A] Quiz for Level 12\n\n[B/I/G/A] Level 13: Writing Clean and Efficient Code\n[B/I/G/A] Intro to Writing Clean/Efficient Code (What, Why and How of Level 13)\n[B/I/G/A] Clean and Modular Code\n[B/I/G/A] Python Naming Conventions\n[B/I/G/A] Documentation\n[B/I/G/A] Testing Your Code\n[I/G/A] Working with Teams on GitHub\n[I/G/A] Questionnaire on How to Conduct a Code Review\n[I/G/A] Quiz for Level 13\n\n[I/G/A] Level 14: Using Python in Excel\n[I/G/A] Introduction to Using Python in Excel (What, Why and How of Level 14)\n[I/G/A] How to Install Python In Excel\n[I/G/A] How to Use Python In Excel\n[I/G/A] Exercise 14.1: Using Python in Excel\n[I/G/A] Answer 14.1: Using Python in Excel\n[I/G/A] Using Dataframes with Python in Excel\n[I/G/A] Exercise 14.2: Using Python Dataframes in Excel\n[I/G/A] Answer 14.2: Using Python Dataframes in Excel\n[I/G/A] How to Create a Linear Regression Using Python In Excel\n[I/G/A] Exercise 14.3: Using Python and Excel to Create a Regression Analysis\n[I/G/A] Answer 14.3: Using Python and Excel to Create a Regression Analysis\n[I/G/A] Quiz for Level 14\n\n[G/A] Level 15: Mojo\n[G/A] Intro to Mojo (What, Why and How of Level 15)\n[G/A] What is Mojo and Why is it a Gamer Changer for Python Developers?\n[G/A] Complied Versus Interpreted Programming When it Comes to Mojo\n[G/A] Coding with Mojo\n[G/A] Variables in Mojo (Mutability and Immutability)\n[G/A] Data Types in Mojo\n[G/A] Else If in Mojo\n[G/A] Loops in Mojo\n[G/A] Functions in Mojo\n[G/A] Struct Versus Class In Mojo\n[G/A] Error Handling in Mojo\n[G/A] \"Inout, Borrowed and Owned\" in Mojo\n[G/A] Importing NumPy in Mojo\n[G/A] Quiz for Level 15\n\n[B/I/G/A] Level 16: All Built-In Python Functions\n[B/I/G/A] Intro to All Built-In Python Functions (What, Why and How of Level 16)\n[B/A] Absolute Value Built-In Function: abs( )\n[B/I/A] All Built-In Function: all( )\n[B/I/A] Any Built-In Function: any( )\n[G/A] ASCII Built-In Function: ascii( )\n[G/A] Bin Built-In Function: bin( )\n[B/I/G/A] Bool Built-In Function: bool( )\n[I/G/A] Breakpoint Built-In Function: breakpoint( )\n[G/A] Bytearray Built-In Function: bytearray( )\n[G/A] Bytes Built-In Function: bytes( )\n[I/G/A] Callable Built-In Function: callable( )\n[I/G/A] Chr Built-In Function: chr( )\n[I/G/A] Classmethod Built-In Function: classmethod( )\n[G/A] Compile Built-In Function: compile( )\n[G/A] Complex Built-In Function: complex( )\n[I/G/A] Dict Built-In Function: dict( )\n[I/G/A] Dir Built-In Function: dir( )\n[B/I/G/A] Divmod Built-In Function: divmod( )\n[G/A] Enumerate Built-In Function: enumerate( )\n[I/G/A] Eval Built-In Function: eval( )\n[I/G/A] Exec Built-In Function: exec( )\n[B/I/G/A] Filter Built-In Function: filter( )\n[B/I/G/A] Float Built-In Function: float( )\n[B/I/G/A] Format Built-In Function: format( )\n[I/G/A] Frozenset Built-In Function: frozenset( )\n[I/G/A] Hash Built-In Function: hash( )\n[B/I/G/A] Help Built-In Function: help( )\n[I/G/A] Hex Built-In Function: hex( )\n[I/G/A] ID Built-In Function: id( )\n[B/I/G/A] Input Built-In Function: input( )\n[B/I/G/A] Int Built-In Function: int( )\n[G/A] Isinstance Built-In Function: isinstance( )\n[I/G/A] Issubclass Built-In Function: issubclass( )\n[I/G/A] Iter Built-In Function: iter( )\n[B/I/G/A] Len Built-In Function: len( )\n[B/I/G/A] List Built-In Function: list( )\n[G/A] Map Built-In Function: map( )\n[B/I/G/A] Max Built-In Function: Max( )\n[B/I/G/A] Min Built-In Function: Min( )\n[I/G/A] Next Built-In Function: next( )\n[G/A] Oct Built-In Function: oct( )\n[I/G/A] Open Built-In Function: open( )\n[I/G/A] Ord Built-In Function: ord( )\n[B/I/G/A] Pow Built-In Function: pow( )\n[B/I/G/A] Print Built-In Function: print( )\n[B/I/G/A] Range Built-In Function: range( )\n[I/G/A] Repr Built-In Function: repr( )\n[B/I/G/A] Reversed Built-In Function: reversed( )\n[B/I/G/A] Round Built-In Function: round( )\n[I/G/A] Set Built-In Function: set( )\n[I/G/A] Slice Built-In Function: slice( )\n[B/I/G/A] Sorted Built-In Function: sorted( )\n[B/I/G/A] Str Built-In Function: str( )\n[B/I/G/A] Sum Built-In Function: sum( )\n[B/I/G/A] Tuple Built-In Function: tuple( )\n[B/I/G/A] Type Built-In Function: type( )\n[I/G/A] Zip Built-In Function: zip( )\n\n[B/I/G/A] Level 17: Conclusion, Next Steps and Additional Python Topics\n[B/I/G/A] CONGRATULATIONS & Next Steps!\n\n\nBy the end of this comprehensive course, you will be armed and ready to take your career or business to the next level using Python. No experience in Python or with programming is required to take this course. There is a 30 day money back guarantee, so you have nothing to lose and everything to gain.\n\n\nThanks,\nChris Haroun and Luka Anicin",
      "target_audience": [
        "This course is for anyone interested in learning beginner, intermediate or advanced Python skills (no programming experience is required)."
      ]
    },
    {
      "title": "Python Programming - For Every Beginners",
      "url": "https://www.udemy.com/course/python-programming-for-every-beginners/",
      "bio": "Part-1: Core Python Programming Basics",
      "objectives": [
        "Understand the popularity of Python programming language essential for every beginners in computer science and software community..",
        "Understand Python Installation & Getting Started working with Python.",
        "Demonstrate the basics of python - the use of print and input functions.",
        "Demonstrate the basics of python - Comments, Indentation and Docstrings",
        "Demonstrate the basics of python - Keywords, Identifiers, Variables & Built-in Functions",
        "Demonstrate the basics of python - Data types and types of Operators",
        "Demonstrate the control statements/control structures/flow of control statements in python."
      ],
      "course_content": {
        "Introduction to python": [
          "AV on Python",
          "Introduction to Python",
          "Python Installation & Getting Started"
        ],
        "Python Basics": [
          "Print Function in Python",
          "Comments, Indentation and Docstrings in python",
          "Keywords, Identifiers, Variables & Built-in Functions in python",
          "Data Types in python"
        ],
        "Basic Operators in python": [
          "Arithmetic Operators",
          "Relational / Comparison Operators",
          "Logical Operators",
          "Bitwise Operators",
          "Assignment Operators",
          "Membership Operators | Identity Operators | Precedence of operators"
        ],
        "input function": [
          "introduction to input function",
          "input() function Python Programs - LIVE DEMO"
        ],
        "Conditional Statements": [
          "Conditional Statements-1: if | if-else | if-elif",
          "Conditional Statements-2: if-elif-else | nested if | single line if"
        ],
        "Iterative Statements / Repetition Control Statements / Loops": [
          "while loop",
          "for loop"
        ],
        "Transfer or Loop Control Statements": [
          "Transfer or Loop Control Statements: break | continue | pass"
        ],
        "PRACTICE TEST": [
          "PYTHON INTERVIEW QUESTIONS"
        ]
      },
      "requirements": [
        "No programming experience is required.",
        "Directly learn python without any programming language experience like c, c++, java etc."
      ],
      "description": "This course is aimed at offering the fundamental concepts of core Python programming language to the all levels of learners.\n\n\nYou will learn through videos, visual organizers and practice exercises. For a great hands-on learning experience, this course is packed with assignments, assessment tests, code challenges, quizzes, and exercises.\n\n\nThis course is divided into two parts:\nPart-1: Core Python Programming Basics\nPart-2: Core Python Programming Advanced Concepts\n\n\nPart-1: Core Python Programming Basics-  starts with the basics of Python programming concepts like introduction, history & versions, features, uses, applications of python, data types, operators and control flow statements.\n\n\nPart-2: Core Python Programming Advanced Concepts - starts with strings; Python Data Structures-lists, sets, tuples and dictionaries; functions; object oriented programming concepts; exceptions, files; and modules.\n\n\nThe objective of this course is to enable the learners to develop the applications using the concepts of Python.\n\n\nUpon completion of the course, the learners will be able to achieve the following outcomes:\nPart-1: Core Python Programming Basics:\n********************************************\n1. Understand the basic concepts in Python programming.\n2. Learn how to write, debug and execute Python program.\n3. Develop algorithmic solutions to simple computational problems.\n4. Develop simple Python programs for solving problems.\n5. Apply the conditional execution of the program.\n\n\nPart-2: Core Python Programming Advanced Concepts:\n************************************************************\n1. Create, run and manipulate Python Programs using core data structures like Lists, tuples and Dictionaries.\n2. Demonstrate proficiency in handling Strings and File Systems.\n3. Design solutions for real time problems using object oriented concepts in Python.\n4. Implement database and GUI applications.\n5. Use and apply the different libraries available in python.\n5. Use various applications using python.",
      "target_audience": [
        "Any graduates from BE, BTech, BSc, BCom, BPharmacy etc.",
        "Any post graduates from ME, MTech, MBA, MAC, MCom, MPharmacy etc.",
        "Minimum 6th standard to 60+ years any person can easily understand and learn python programming language."
      ]
    },
    {
      "title": "Learn Computer Vision and Image Processing in LabVIEW",
      "url": "https://www.udemy.com/course/learn-computer-vision-machine-vision-and-image-processing-in-labview/",
      "bio": "Learn Computer Vision and Image Processing From Scratch in LabVIEW and build 9 Vision-based Apps",
      "objectives": [
        "Develop 9 Vision Based Apps in LabVIEW",
        "Understand the fundamentals of Image Processing",
        "The difference between computer and machine vision as well as their applications",
        "Theory behind each image processing algorithm",
        "How to apply the image processing algorithms for real life purposes"
      ],
      "course_content": {
        "Basics of LabVIEW Vision Development Module": [
          "Introduction to LabVIEW Computer and Machine Vision Course",
          "Before you Embark on this Course",
          "Download & Install LabVIEW development Module",
          "What is Computer Vision and Machine Vision",
          "[Exercise] Acquiring Images from Camera",
          "[Exercise] Overlaying Text and Converting to LabVIEW VI",
          "Introduction to Machine Vision and Computer Vision Slides"
        ],
        "Color Processing": [
          "Introduction to Color Processing",
          "[Exercise] First App - Count M&Ms in an image",
          "[Exercise] Second App - Color Segmentation and Tracking",
          "Color, Segmentation and Detection Slides",
          "Color Processing"
        ],
        "Basic Feature Detection": [
          "Introduction to Feature Detection",
          "[Exercise] Third App - Coin Blob Detection",
          "[Exercise] Fourth App - Blob Range Estimation",
          "Feature Detection Slides",
          "Feature Detection"
        ],
        "Lines and Edges": [
          "Introduction to Edge Detection",
          "[Exercise] Fifth App - Ruler Edge Measure and Simple Lane Detection",
          "Lines and Edges Slides"
        ],
        "Advanced Feature Detection": [
          "Advanced Feature Detection - Template Matching",
          "Advanced Feature Detection - Optical Flow",
          "Advanced Feature Detection - Optical Character Recognition (OCR)",
          "Advanced Feature Detection - Bar Code Recognition (OCR)",
          "Advanced Feature Detection - Feature Correspondence",
          "[Exercise] Sixth App - Pattern Matching",
          "[Exercise] Seventh App - Object Tracking",
          "[Exercise] Eigth App - Barcode Recognition",
          "[Exercise] Ninth App - Optical Character Recognition (OCR)",
          "Advanced Feature Detection Slides",
          "Additional Quiz"
        ],
        "Conclusion and Bonus Section": [
          "Cool Resources for Students",
          "A 3-Step Vehicle Detection Framework for Range Estimation Using a Single Camera",
          "Image processing on FPGA using LabVIEW [Journal Article]",
          "The Kalman Filter - Pokemon Example"
        ]
      },
      "requirements": [
        "A computer or laptop - With Window 7 or later, > 2Gb of RAM (4Gb Reccomended) , 1.5Ghz Processor or higher (Multicore Core 2Ghz processor Recommended).",
        "LabVIEW licence if possible or can use trial license",
        "Have an internet connection to download LabVIEW",
        "Basic LabVIEW experience is required"
      ],
      "description": "Note! This course price will increase to $200 as of 1st February 2019 from $190. The price will increase regularly due to updated content. Get this course while it is still low.\nLATEST: Course Updated For January 2019 OVER 3040+ SATISFIED STUDENTS HAVE ALREADY ENROLLED IN THIS COURSE!\n...................................................\nLearn the basic concepts, tools, and functions that you will need to build fully functional vision-based apps with LabVIEW and LabVIEW Vision Development Toolkit.\nTogether we will build a strong foundation in Image Processing with this tutorial for beginners.\nLabVIEW Vision Development Toolkit Download and Installation\nBasic Feature Detection\nCircle, Color and Edge Detection Algorithms\nAdvance Feature Detection - Pattern Matching, Object Tracking, OCR, BarCodes\nA Powerful Skill at Your Fingertips\nLearning the fundamentals of Image processing puts a powerful and very useful tool at your fingertips. Learning Computer Vision in LabVIEW is easy to learn, has excellent documentation, and is the base for prototyping all types of vision-based algorithms.\nJobs in image processing are plentiful, and being able to learn computer and machine vision will give you a strong background to more easily pick up other computer vision tools such as OpenCV, Matlab, SimpleCV etc.\nContent and Overview\n\nSuitable for beginning programmers, through this course of 26 lectures and over 4 hours of content, you’ll learn all of the Computer Vision and establish a strong understanding of the concept behind Image Processing Algorithms. Each chapter closes with exercises in which you will develop your Own Vision-Based Apps, putting your new learned skills into practical use immediately.\nStarting with the installation of the LabVIEW Vision Development Toolkit, this course will take you through the main and fundamental Image Processing tools used in industry and research. At the end of this course you will be able to create the following Apps:\nApp 1 - Counting M&Ms in an Image,\nApp 2 - Color Segmentation and Tracking,\nApp 3 - Coin Blob detection\nApp 4 - Blob Range Estimation\nApp 5 - Lane Detection and Ruler Width Measurement\nApp 6 - Pattern or Template Matching to detect Complex Objects\nApp 7 - Object Tracking\nApp 8 - Bar code Recognition\nApp 9 - Optical Character Recognition (OCR)\nWith these basic and advanced algorithms mastered, the course will take you through the basic operation of the theory behind each algorithm as well how they applied in real world scenarios.\nStudents completing the course will have the knowledge to create functional and useful Image Processing Apps.\nComplete with working files, datasets and code samples, you’ll be able to work alongside the author as you work through each concept, and will receive a verifiable certificate of completion upon finishing the course. We also offer a full Udemy 30 Day Money Back Guarantee if you are not happy with this course, so you can learn with no risk to you.\nSee you inside this course.",
      "target_audience": [
        "Those who want to learn Image Processing and Computer Vision",
        "Those who are tired of complex coding with OpenCV, Matlab and Python",
        "Those who are fascinated with image processing and computational intelligence as well as AI"
      ]
    },
    {
      "title": "Python for Beginners",
      "url": "https://www.udemy.com/course/python-for-beginners-/",
      "bio": "Learn Python from Scratch",
      "objectives": [
        "Python 3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Where to Find Help"
        ],
        "Getting Started": [
          "Why Python",
          "Python 2 vs 3"
        ],
        "Installation & Setup": [
          "Install Python on Windows",
          "Install Python on Mac",
          "Install Python on Linux ( Ubuntu )",
          "Using the Interactive Python Shell",
          "Install PyCharm on Windows",
          "Install PyCharm on Mac",
          "Install PyCharm on Linux ( Ubuntu )"
        ],
        "Python Basics": [
          "Syntax",
          "Data Types",
          "Operators",
          "Decision Making",
          "Loops",
          "Numbers",
          "Strings",
          "Tuples",
          "Dictionaries",
          "Date & Time",
          "Functions",
          "Modules",
          "Files",
          "Exceptions"
        ]
      },
      "requirements": [
        "No prerequisites"
      ],
      "description": "Python is one of the most popular programming languages. It is easy to learn and beginner-friendly. Python can be used for web development, web scraping, data analytics, robotics, just to name a few. In this course, we will learn the Basics of Python, from variables, loops, functions, modules and so much more. This course is geared towards beginners and no prior experience with Python or programming is needed.",
      "target_audience": [
        "Student who are interesting in learning the basics of Python"
      ]
    },
    {
      "title": "Learn image processing and GUIs while having fun in MATLAB",
      "url": "https://www.udemy.com/course/improcmatlab/",
      "bio": "Improve your digital image processing and image processing programming skills in MATLAB. And have fun in the process!",
      "objectives": [
        "How to think about and work with digital images!",
        "Your MATLAB programming skills will be much better at the end of this course.",
        "You'll learn from one of Udemy's top MATLAB instructors with nearly two decades of teaching experience.",
        "You will understand image processing functions including smoothing, filtering, blending, and embossing.",
        "Make movies and animations!",
        "Create graphical user interfaces (GUI) from scratch, with and without the MATLAB GUIDE tool.",
        "Advanced programming techniques including handles and vectorization."
      ],
      "course_content": {
        "Basic MATLAB image-processing programming": [
          "How best to learn from this course!",
          "Introduction to get, set, and graphics handles",
          "Introduction to GUIDE"
        ],
        "Do \"math\" with a drunk calculator": [
          "MATLAB code file from this section",
          "The calculator figure",
          "Create and place the number buttons",
          "Create and place the math buttons",
          "Define the button functions",
          "Error handling",
          "Give the calculator some \"alcohol\""
        ],
        "Annoy your parents by blurring family photos": [
          "MATLAB code file from this section",
          "Importing and displaying pictures",
          "Gaussian blur via 2D convolution",
          "Mean-smoothing blur via 2D convolution",
          "Be \"nice\" and sharpen the images",
          "Median filter for cleaning speckle noise",
          "Saving pictures as image files"
        ],
        "Impress your boss with embossing filters": [
          "MATLAB code file from this section",
          "What are embossing filters?",
          "Create the embossing GUI layout",
          "Implement the embossing filter",
          "Import and export pictures"
        ],
        "The Stoic Bird game": [
          "MATLAB code files from this section",
          "Implement physics of projectile motion",
          "Create the bird",
          "Make the bird-throwing GUI",
          "Put the code into the GUI",
          "Implement the trajectory interface"
        ],
        "Play pong against an angry AI": [
          "MATLAB code files from this section",
          "Introduction: What is pong?",
          "Create the figure and the pong court",
          "Create the ball and the paddles",
          "Move the ball and check for goals",
          "Move the human's paddle",
          "Move the AI's paddle",
          "Quit the game on keypress 'q'",
          "Give the AI an attitude"
        ],
        "How to get a car into outer space": [
          "MATLAB code files from this section",
          "No rocket? No problem! Blend the car into space!",
          "Not a magician? Sliderbars can fix that!",
          "Let the car randomly explore space",
          "How many galaxies are in the picture? (segmentation)"
        ],
        "Ruin your pictures with histogram equalization": [
          "MATLAB code files from this section",
          "What is histogram equalization?",
          "Histogram equalization in code",
          "Create the histogram GUI",
          "Finalize the GUI functionality"
        ],
        "Create 3D magic-eye (autostereogram) pictures": [
          "MATLAB code files from this section",
          "How to look at stereoscopic images",
          "Image depth via 3D rotation",
          "Layer depth via horizontal spacing",
          "Hiding the surface in a background"
        ],
        "Structure from motion": [
          "MATLAB code files from this section",
          "2D example with a triangle",
          "3D example with a noisy sphere",
          "3D example with a cylinder",
          "Dot kinetogram"
        ]
      },
      "requirements": [
        "A computer (duh!)",
        "Basic MATLAB programming skills",
        "Access to MATLAB software",
        "MATLAB image processing toolbox is useful but not required"
      ],
      "description": "Images are the most important ways of getting information across, ranging from art to marketing to politics. And nowadays, nearly all images are digital. Therefore, it's important to know about image processing and digital image processing.\nWhat will you get from this course?\nYou will learn fundamental skills in image processing and graphical user interfaces (GUIs) in a way that is fun and engaging. Being bored while learning is a waste of everyone's time and energy, plus you really only learn when you are enjoying the learning experience. You don't need any background in image processing before taking this course.\nImproving your MATLAB programming skills. This is not only about image processing related code; you'll also increase your MATLAB coding and programming skills concerning numerical processing, control statements, working with data, and more.\nWhat are the prerequisites?\nYou need some basic MATLAB programming experience. If you are totally new to MATLAB, then please take an intro-MATLAB programming course first.\nIf you are familiar with variables, if-then statements, for-loops, and creating functions, then you have the necessary knowledge for this course.\nWhat should you do now?\nCheck out the list of topics and watch the preview videos to find out if this course is right for you. If you have any questions, send me a message. You should also check out the student reviews of my other courses to see what people think about my teaching style in general.\nSee you in class!\nMike",
      "target_audience": [
        "programmers",
        "scientists",
        "engineers",
        "data scientists",
        "students"
      ]
    },
    {
      "title": "Python in 10 Days: The Ultimate Beginner's Bootcamp",
      "url": "https://www.udemy.com/course/python-for-everyone-learn-python-programming-python-3/",
      "bio": "Master Python programming from the ground up with practical exercises in this comprehensive Python course!",
      "objectives": [
        "After having the course you will feel confident writing code and will have very good knowledge of Python",
        "This tutorial discusses the functionalities of Python along with relevant examples for easy understanding",
        "You will be able to create Python code that will come handy in our daily activities",
        "Learn how to build your confidence as a python programmer",
        "Go from a total beginner to a confident Python programmer"
      ],
      "course_content": {
        "Python: Introduction": [
          "Python: Course Introduction",
          "Python: Code Editor",
          "Python: Python Introduction and File Creation",
          "Python: Execute Python Code",
          "Coding Exercise Number 1",
          "Quiz 1",
          "Important Update"
        ],
        "Python: Variables and Data Type": [
          "Python: Variables and Data Type - Create Variables",
          "Python: Variables and Data Type - Variable Naming Standard",
          "Python: Variables and Data Type - Case Sensitive",
          "Python: Variables and Data Type - Assign Multiple Values to Variables",
          "Python: Variables and Data Type - Value Assignment Concept",
          "Python: Variables and Data Type - Introduction : Numeric Type",
          "Python: Variables and Data Type - Introduction : Text Sequence Type",
          "Python: Variables and Data Type - Introduction : Sequence Type Part 1",
          "Python: Variables and Data Type - Introduction : Sequence Type Part 2",
          "Python: Variables and Data Type - Introduction : Boolean Type",
          "Python: Variables and Data Type - Introduction : Mapping Type",
          "Python: Variables and Data Type - Type Casting Part 1",
          "Python: Variables and Data Type - Type Casting Part 2",
          "Python: Variables and Data Type - Type Casting Part 3",
          "Coding Exercise Number 2",
          "Coding Exercise Number 3",
          "Coding Exercise Number 4",
          "Coding Exercise Number 5",
          "Quiz 2"
        ],
        "Python: Numeric Types and Math": [
          "Python: Numeric Types and Math - Introduction and Conversion Part 1",
          "Python: Numeric Types and Math - Introduction and Conversion Part 2",
          "Python: Numeric Types and Math - Methods Part 1",
          "Python: Numeric Types and Math - Methods Part 2",
          "Python: Numeric Types and Math - Methods Part 3",
          "Python: Numeric Types and Math - Methods Part 4",
          "Python: Numeric Types and Math - Methods Part 5",
          "Coding Exercise Number 6",
          "Coding Exercise Number 7",
          "Coding Exercise Number 8",
          "Quiz 3"
        ],
        "Python: Text Sequence Types": [
          "Python: Text Sequence Types - Comments Part 1",
          "Python: Text Sequence Types - Comments Part 2",
          "Python: Text Sequence Types - String creation",
          "Python: Text Sequence Types - User Input",
          "Python: Text Sequence Types - String Concatenation Part 1",
          "Python: Text Sequence Types - String Concatenation Part 2",
          "Python: Text Sequence Types - Slice String Part 1",
          "Python: Text Sequence Types - Slice String Part 2",
          "Python: Text Sequence Types - String Methods Part 1",
          "Python: Text Sequence Types - String Methods Part 2",
          "Python: Text Sequence Types - String Methods Part 3",
          "Python: Text Sequence Types - String Methods Part 4",
          "Python: Text Sequence Types - String Methods Part 5",
          "Python: Text Sequence Types - String Methods Part 6",
          "Python: Text Sequence Types - String Methods Part 7",
          "Python: Text Sequence Types - String Methods Part 8",
          "Coding Exercise Number 9",
          "Coding Exercise Number 10",
          "Coding Exercise Number 11",
          "Quiz 4"
        ],
        "Python: Operators": [
          "Python: Operators - Operators Introduction",
          "Python: Operators - Arithmetic Operators",
          "Python: Operators - Assignment Operators",
          "Python: Operators - Comparison Operators",
          "Python: Operators - Logical Operators Part 1",
          "Python: Operators - Logical Operators Part 2",
          "Python: Operators - Logical Operators Part 3",
          "Python: Operators - Identity Operators Part 1",
          "Python: Operators - Identity Operators Part 2",
          "Python: Operators - Identity Operators Part 3",
          "Python: Operators - Membership Operators Part 1",
          "Python: Operators - Membership Operators Part 2",
          "Python: Operators - Bitwise Operators",
          "Coding Exercise Number 12",
          "Coding Exercise Number 13",
          "Coding Exercise Number 14",
          "Quiz 5"
        ],
        "Python: Sequence Types Part 1": [
          "Python: Sequence Types - Lists Introduction",
          "Python: Sequence Types - Lists Access Items Part 1",
          "Python: Sequence Types - Lists Access Items Part 2",
          "Python: Sequence Types - Lists Update Items Part 1",
          "Python: Sequence Types - Lists Update Items Part 2",
          "Python: Sequence Types - Lists Methods Part 1",
          "Python: Sequence Types - Lists Methods Part 2",
          "Python: Sequence Types - Lists Methods Part 3",
          "Python: Sequence Types - Lists Methods Part 4",
          "Python: Sequence Types - Lists Methods Part 5",
          "Python: Sequence Types - Lists Methods Part 6",
          "Python: Sequence Types - Lists Methods Part 7",
          "Python: Sequence Types - Unpack a List",
          "Coding Exercise Number 15",
          "Coding Exercise Number 16",
          "Coding Exercise Number 17",
          "Quiz 6"
        ],
        "Python: Sequence Types Part 2": [
          "Python: Sequence Types - Tuple Introduction",
          "Python: Sequence Types - Tuple Access Items",
          "Python: Sequence Types - Tuple Methods Part 1",
          "Python: Sequence Types - Tuple Methods Part 2",
          "Python: Sequence Types - Tuple Methods Part 3",
          "Python: Sequence Types - Tuple Methods Part 4",
          "Python: Sequence Types - Tuple Methods Part 5",
          "Python: Sequence Types - Tuple Methods Part 6",
          "Python: Sequence Types - Range Introduction",
          "Python: Sequence Types - Range Access Items",
          "Python: Sequence Types - Range To Other Datatype Conversion",
          "Coding Exercise Number 18",
          "Coding Exercise Number 19",
          "Coding Exercise Number 20",
          "Quiz 7"
        ],
        "Practice Test - Part 1": [
          "Check your knowledge part 1"
        ],
        "Python: Sets and Boolean Types": [
          "Python: Sets and Boolean Types - Sets Introduction",
          "Python: Sets and Boolean Types - Sets Access Items",
          "Python: Sets and Boolean Types - Sets Methods Part 1",
          "Python: Sets and Boolean Types - Sets Methods Part 2",
          "Python: Sets and Boolean Types - Sets Methods Part 3",
          "Python: Sets and Boolean Types - Sets Methods Part 4",
          "Python: Sets and Boolean Types - Sets Methods Part 5",
          "Python: Sets and Boolean Types - Sets Methods Part 6",
          "Python: Sets and Boolean Types - Sets Union Method Part 1",
          "Python: Sets and Boolean Types - Sets Union Method Part 2",
          "Python: Sets and Boolean Types - Sets Union Method Part 3",
          "Python: Sets and Boolean Types - Sets Union Method Part 4",
          "Python: Sets and Boolean Types - Sets Intersection Method Part 1",
          "Python: Sets and Boolean Types - Sets Intersection Method Part 2",
          "Python: Sets and Boolean Types - Sets Intersection Method Part 3",
          "Python: Sets and Boolean Types - Sets Intersection Method Part 4",
          "Python: Sets and Boolean Types - Frozen Sets Part 1",
          "Python: Sets and Boolean Types - Frozen Sets Part 2",
          "Python: Sets and Boolean Types - Boolean Type Part 1",
          "Python: Sets and Boolean Types - Boolean Type Part 2",
          "Coding Exercise Number 21",
          "Coding Exercise Number 22",
          "Coding Exercise Number 23",
          "Quiz 8"
        ],
        "Python: Mapping Types": [
          "Python: Mapping Types - Dictionary Introduction",
          "Python: Mapping Types - Dictionary Access Items Part 1",
          "Python: Mapping Types - Dictionary Access Items Part 2",
          "Python: Mapping Types - Dictionary Update Items",
          "Python: Mapping Types - Dictionary Add Items",
          "Python: Mapping Types - Dictionary Methods Part 1",
          "Python: Mapping Types - Dictionary Methods Part 2",
          "Python: Mapping Types - Dictionary Methods Part 3",
          "Python: Mapping Types - Dictionary Methods Part 4",
          "Python: Mapping Types - Dictionary Methods Part 5",
          "Python: Mapping Types - Dictionary Methods Part 6",
          "Coding Exercise Number 24",
          "Coding Exercise Number 25",
          "Coding Exercise Number 26",
          "Quiz 9"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No installation required. We can work of any machine having browser and internet connection"
      ],
      "description": "Become a Python programmer and acquire one of the most sought-after skills by employers in 2024!\n\n\nThis course provides students with the fundamental knowledge and skills to work with Python and create their script for daily tasks. This course provides students the skills to identify and build the commands they require to perform specific tasks. In addition, students learn how to build scripts to accomplish advanced tasks such as automating repetitive tasks and much more.\n\n\nPlease don't wait that others should encourage you to learn this Skill.\n\n\nTry to identify the need and demand of Today's time, and Grab this opportunity to Learn this new Skill to match pace with Trending Time and Technologies.\n\n\nI am sure, As soon as you complete this course, You will be very efficient in writing code in Python.\n\n\nI'm a professional instructor who has helped thousands of students learn to use Python. Come and enjoy the class as you learn this powerful tool.\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's highest-rated development course.",
      "target_audience": [
        "Beginner developers curious about the Python",
        "Anyone responsible for IT in an organization",
        "Anyone who wants to learn to program with Python",
        "Anyone who lack confidence and do not know from where to start"
      ]
    },
    {
      "title": "R and RStudio for Beginners - A Quick Introduction.",
      "url": "https://www.udemy.com/course/r-and-rstudio-for-beginners-a-quick-introduction/",
      "bio": "Learn R in under an hour",
      "objectives": [
        "Installing R, Loading Packages, RStudio, Maths calculations, Data Structures, Importing & Exporting Data, Data Visualisation & Graphs, Creating Functions"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "Installing R, RStudio and Packages": [
          "Installing R and RStudio",
          "Installing and Loading Packages in R"
        ],
        "A Tour of RStudio": [
          "Familiarising ourselves with RStudio"
        ],
        "Basic Maths Calculations in R": [
          "Basic Maths Calculations in R"
        ],
        "Importing and Exporting Data in R": [
          "Importing and Exporting Data in R"
        ],
        "Data Structures: Data Frames and Vectors in R": [
          "Data Structures: Data Frames and Vectors in R"
        ],
        "Graphs and Data Visualisation in R": [
          "Graphs and Data Visualisation in R"
        ],
        "Creating your own Functions in R": [
          "Creating your own Functions in R"
        ],
        "Bonus: R for Actuaries Textbook Review": [
          "R for Actuaries Review"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "In under an hour we will cover the fundamentals of R programming. The first part of the video will be about understanding WHY we do things in R and then in the second part I will show you HOW to do things in R. We will cover the following topics:\nInstalling R & RStudio\nInstalling and Loading Packages\nTour of RStudio\nBasic Maths Calculations in R\nImporting and Exporting Data in R\nData Structures: Data Frames and Vectors\nGraphs and Data Visualisation\nCreate your own Function in R\nThis course is designed for someone who is new to programming and each video is relatively straightforward. The last video is a bit more challenging as we cover loops within loops. But by the end of this course you will be comfortable with the basics of R and be ready to learn more advanced topics.\nIf you are one of my Actuarial Students, this course is compulsory.",
      "target_audience": [
        "Professionals who are new to R and RStudio"
      ]
    },
    {
      "title": "Python Object Oriented Programming (OOP): Beginner to Pro",
      "url": "https://www.udemy.com/course/object-oriented-programming-with-modern-python/",
      "bio": "Deep OOP Foundations From Absolute Scratch",
      "objectives": [
        "Learn Python object-oriented programming from the ground up with in-depth lectures and practice activities",
        "Work through 16 detailed project assignments to put your learning to practice",
        "Write your own classes with customized behavior, representation, and relationships",
        "Understand inheritance and multiple inheritance including best practices and the ideal use cases",
        "Understand modern language constructs like dataclasses, enumerations, slots, and more",
        "Master the Pythonic style of working with types, built-ins, and their derivatives",
        "Get a deep understanding of the more difficult parts including descriptors, abstract base classes and metaprogramming",
        "Create your own version of data structures with special behaviour, e.g. a list that sorts itself, or a dictionary that never raises KeyError",
        "Work effectively with the exceptions and define your own separate exception hierarchies"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "All Course Resources"
        ],
        "Classes": [
          "Section Intro",
          "PEP8",
          "Our First Class",
          "Class State",
          "Methods And Behaviour",
          "Instance Attributes",
          "Alternatively: getattr() And setattr()",
          "Revisting self",
          "Skill Challenge #1",
          "Solution",
          "Class and Static Methods",
          "BONUS: An Alternative Syntax",
          "Dunder Dict",
          "Class vs Instance __dict__",
          "BONUS: Careful With Mutables",
          "Access Control",
          "Docstrings",
          "Skill Challenge #2",
          "Solution",
          "Quick Gotcha",
          "Section Resources"
        ],
        "Dunders": [
          "Section Intro",
          "Let's Add A __repr__",
          "__repr__ vs __str__",
          "__format__",
          "Object Equality",
          "BONUS: Non-Equality",
          "Hashing and Mutability",
          "Hashable Book",
          "BONUS: Hashing Gotcha",
          "Skill Challenge #3",
          "Solution",
          "Other Rich Comparisons",
          "A Better Way",
          "Truthiness",
          "BONUS: Truth Value Testing Via __len__",
          "Container Classes",
          "Pythonic Add",
          "The __getitem__ Magic",
          "Defining Our Own Magics",
          "Skill Challenge #4",
          "Solution",
          "Section Resources"
        ],
        "Properties": [
          "Section Intro",
          "Loyal Customers",
          "Always Start Plain",
          "A Refactor",
          "Private And Mangled Attributes",
          "Breaking Changes",
          "Properties Live In The Class",
          "Skill Challenge #5",
          "Solution",
          "Decorator Syntax",
          "BONUS: Decorators Refresher",
          "Read or Write Only Properties",
          "Managed Attributes",
          "BONUS: Caching Average Review",
          "Deleting Properties",
          "Property Docstrings",
          "Skill Challenge #6",
          "Solution",
          "Section Resources"
        ],
        "Inheritance": [
          "Section Intro",
          "Inheritance",
          "What Is Inheritance Good For?",
          "All Classes Inherit From object",
          "Method Resolution Order",
          "Subclass Overrides",
          "Better Parent Delegation: super()",
          "Subclass __init__",
          "Skill Challenge #7",
          "Solution",
          "Subclassing Properties",
          "Extending Built-ins",
          "Another Example",
          "Beware The Pitfalls",
          "Beyond Inheritance",
          "Skill Challenge #8",
          "Solution",
          "Section Resources"
        ],
        "Slots": [
          "Section Intro",
          "Instance Data Storage Review",
          "Slots",
          "Class Residents",
          "BONUS: Demonstrating The Memory Advantage",
          "Inheriting Slots",
          "Something To Avoid",
          "Should We Always Use Slots?",
          "Skill Challenge #9",
          "Solution",
          "Section Resources"
        ],
        "Dataclasses": [
          "Section Intro",
          "The Why",
          "An Alternative: namedtuple",
          "BONUS: A Quick Point On Immutability",
          "BONUS: Typed NamedTuple",
          "Dataclasses",
          "Batteries Included",
          "Type Hints",
          "Customizing Fields",
          "BONUS: Further Customization",
          "Immutability",
          "Inheritance",
          "Why Not Just Namedtuples?",
          "Skill Challenge #10",
          "Solution",
          "Section Resources"
        ],
        "Descriptors": [
          "Section Intro",
          "Attribute Lookup Chain Review",
          "The Descriptor Protocol",
          "Using A Descriptor",
          "Descriptor Storage",
          "Even Better: Instance Storage",
          "Using __set_name__",
          "Tying Up Loose Ends",
          "Non-Data Descriptors",
          "Aren't Properties Just Better?",
          "BONUS: Similar How?",
          "Skill Challenge #11",
          "Solution",
          "Refactored Solution",
          "Section Resources"
        ],
        "Enums": [
          "Section Intro",
          "What's The Point?",
          "Enumerations",
          "Members",
          "Aliases vs Masters",
          "Uniqueness",
          "BONUS: Functional Syntax",
          "Automatic Values",
          "Customizing Next Values",
          "Extensibility",
          "Flags",
          "Bitmasks",
          "BONUS: How Bitwise Works",
          "Skill Challenge #12",
          "Solution",
          "Section Resources"
        ],
        "Exceptions": [
          "Section Intro",
          "The Exception Object",
          "Handling",
          "Raising",
          "EAFP",
          "What's Up With SyntaxError?",
          "Exception Hierarchy",
          "The Else Clause",
          "Finally",
          "Nesting And Bundling",
          "Rolling Our Own",
          "Skill Challenge #13",
          "Solution",
          "Section Resources"
        ]
      },
      "requirements": [
        "A computer (Windows/Mac/Linux). That's all!",
        "Prepare to write thousands of lines of Python code",
        "No prior knowledge of python is required"
      ],
      "description": "Welcome to the best resource online and the only one you need to learn and master object-oriented programming with modern python!\nThere has never been a better time to learn python. It is consistently ranked in the top 3 most in-demand and most-loved programming languages in the world, with applications in machine learning, web development, data science, automation, game development, and much more. And its growth shows no signs of stopping.\nBut while there are plenty of resources to learn the basics of python, it is quite difficult to move past those to the intermediate and advanced facets of the language. This course seeks to address that.\nOver more than 20 hours of detailed lectures, live coding, and guided projects we will unpack everything that python has to offer, starting from absolute scratch. We will master not only object-oriented python and how to use it, but in the process also gain an understanding of the python data model and the essence of writing pythonic code.\nEvery five to ten lectures we will stop and practice what we have covered, as we work through a list of detailed requirements and convert that to an object-oriented solution using nothing by zero-dependencies, pure python.\n––––– Structure & Curriculum –––––\nThe curriculum is organized around three parts of increasing target proficiency.\nIn the first, we will cover the essential foundations of working with classes in python, defining our own types, customizing them using dunders, exposing managed attributes through properties and effectively using inheritance.\n· Classes\n· Dunders\n· Properties\n· Inheritance\nHaving established that core foundation, in the next five sections, we will dive into more advanced topics that effective python developers rely on. These include modern features like dataclasses, enumerations and slots but also more established, pivotal constructs like descriptors and exceptions.\n· Slots\n· Dataclasses\n· Descriptors\n· Enumerations\n· Exceptions\nThen in the final four sections we will take a look under the hood at how python recognizes and works with types. We will explore, practice and implement several patterns including duck typing, dynamic protocols and abstract base classes. Finally, we will look at the internal machinery that produces classes in python, as we turn our attention to class metaprogramming.\n· Dynamic Protocols\n· Abstract Base Classes\n· Multiple Inheritance\n· Class Metaprogramming\nThis course is intended for anyone who is committed to mastering object-oriented programming with python, regardless of prior experience, which is why a full-length bonus introduction to the python programming language is included to get anyone up and running writing pythonic code in no time.\nI hope you commit to joining me in this journey as we take your python to the next level. See you inside!",
      "target_audience": [
        "Everyone interested in learning and mastering object-oriented python from the ground up",
        "Learners with some Python experience who want to take their skill to the next level",
        "Python developers who want to gain a deeper understanding"
      ]
    },
    {
      "title": "2025 R Programming Bootcamp for Absolute Beginners",
      "url": "https://www.udemy.com/course/2022-r-programming-bootcamp/",
      "bio": "R Programming course suitable for Absolute Beginners, no coding experience or a statistics background needed",
      "objectives": [
        "Basics of R Programming",
        "Data Structures in R",
        "Create your own functions that will enable you to reutilize code.",
        "Do interesting graph plotting"
      ],
      "course_content": {
        "Basics of R Programming": [
          "Installing R Programming IDE",
          "Variables",
          "Data Types",
          "Numbers and Math",
          "Switching to online IDE"
        ],
        "Control statements in R": [
          "if statement in R",
          "if-else statement in R",
          "else if statement in R",
          "While Loop in R",
          "Break statement",
          "Next statement",
          "For Loop in R"
        ],
        "Functions in R": [
          "Creating and calling functions",
          "Function with Return values",
          "Nested Functions",
          "Recursion"
        ],
        "Data structures in R": [
          "Vectors",
          "Lists"
        ],
        "Plotting Graphs in R": [
          "R Plot",
          "R Line",
          "R Pie Charts",
          "R Bars"
        ],
        "Assignments in R": [
          "Problem #1",
          "Problem #2",
          "Problem #3",
          "Problem #4",
          "Problem #5",
          "Problem #6",
          "Problem #7",
          "Problem #8",
          "Problem #9"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No Prior Programming Experience Needed."
      ],
      "description": "So, you've decided that you want to learn R or you want to get familiar with it, but don't know where to start? Or are you a data/business analyst or data scientist that wants to have a smooth transition into R programming?\n\n\nThen, this course was designed just for Absolute Beginners in R!!\n\n\nThis course was designed to be your first step into the R programming world! We will delve deeper into the concepts of R objects, understand the R user interface and play around with several datasets. This course contains lectures around the following groups:\n1. Basics of R\n2. Control Statements in R\n3. Functions in R\n4. Data Structures in R\n5. Plotting Graphs in R\n6. Assignments in R\n\n\nThis course was designed to be focused on the practical side of coding in R - instead of teaching you every function and method out there, I'll show you how you can read questions and examples and get to the answer by yourself, compounding your knowledge on the different R objects.\nAt the end of the course you should be able to use R to analyze your own datasets. Along the way you will also learn what R vectors, arrays, matrixes and lists are and how you can combine the knowledge of those objects to power up your analysis.\n\n\nHere are some examples of things you will be able to do after finishing the course:\n\n\nDo interesting line plots that enable you to draw conclusions from data.\nPlot histograms of numerical data.\nCreate your own functions that will enable you to reutilize code.\nData Structures in R\n\n\n\n\nJoin thousands of professionals and students in this R journey and discover the amazing power of this statistical open-source language. This course will be constantly updated based on the student's feedback.",
      "target_audience": [
        "Business Analysts",
        "Data Analysts",
        "Financial Managers",
        "Statisticians",
        "R learners",
        "Data Scientists",
        "Data Engineers",
        "Entry-level Data Scientists",
        "Software Engineering Undergraduates",
        "Graduate Students"
      ]
    },
    {
      "title": "Visual C++ programming for desktop application development",
      "url": "https://www.udemy.com/course/visualcpp/",
      "bio": "Visual C++ programming for desktop application development",
      "objectives": [
        "Upon successful completion of the course, the students will be able to develop Graphical User Interface (GUI) applications using Visual C++",
        "Students will be able to develop GUI desktop applications in VC++ for the tasks that they have previously completed in console environment using C++",
        "Develop desktop application using VC++ in the latest version of Microsoft Visual Studio that will enable students to perform various user interface operations",
        "Students previously knowing only C++ will be able to learn how to develop Graphical User Interface applications through VC++ via easy to learn short tutorials"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of C++ (console based programming)",
        "Basic knowledge of Object-Oriented programming"
      ],
      "description": "Welcome to the course of, Visual C++ programming for desktop application development. This is a must to take course if you only know the basic C++ using console environment and wondering how various user-interface applications can be created using C++. This course will enable you to understand the basics of desktop application development using the latest version of Microsoft’s visual studio. The teaching methodology of this course is based on hands-on topic specific examples that enable quicker learning.\nIn this course, you will be learning VC++ using the latest version of Microsoft’s visual studio. The key aim of the course is to enable the learner to develop desktop applications using C++ programming, for this prior knowledge of basic C++ in a console environment is required. VC++ utilizes multiple pre-built libraries and classes, therefore the basic knowledge of Object-Oriented programming with C++ will be needed for better understanding this course.\nThis course will enable you to get to the next level of programming and designing applications for desktop environments. This is the best available course on Visual C++ using Microsoft visual studio that is particularly designed for beginners and being taught by a university professor having industrial experience as well. The course covers multiple examples with hands-on examples of 10-15 minutes each that enables the learner to practice short exercises enabling quicker learning. VC++ is a highly portable language and is often the language of selection for multi-device, multi-platform app development. The language is also useful for the low-level programming and very efficient for general purpose. Like C++, VC++ also gives the user complete control over memory management. From a wide range of applications − GUI applications to 3D graphics for games to real-time mathematical simulations, this language is needed. And, most importantly, VC++ has a very big job market as it is used in various industries like finance, app development, game development, Virtual reality, to name a few.",
      "target_audience": [
        "This is a must to take course if you have just learned the basic C++ using console environment only and wondering how various user-interface applications can be created using C++. This course will enable you to understand the basics of desktop application development using the latest version of Microsoft’s visual studio. The teaching methodology of this course is based on hands-on topic specific examples that enable quicker learning"
      ]
    },
    {
      "title": "The Kotlin Language: Fundamentals and Basics",
      "url": "https://www.udemy.com/course/kotlin-programming/",
      "bio": "Grasp Kotlin Basics and Fundamentals and make yourself ready to develop premium Android apps from novice to pro.",
      "objectives": [
        "Programming logic foundation, read and write Kotlin with condition and control",
        "Concept of OOPS in Kotlin, as other languages like Java, C++, PHP, C#, Scala, or Swift",
        "Use Intellij IDE, the popular Kotlin (and Java), for application development purpose.",
        "Create basic as well as professional Android apps using Kotlin, the new Java-based programming language developed by Jetbrains",
        "Understand how Kotlin integrates neatly with Java.",
        "How to use Kotlin for existing Android Apps and use it with Java."
      ],
      "course_content": {},
      "requirements": [
        "No previous knowledge on kotlin required. We will dive deep from very basics.",
        "Just a computer running Microsoft Windows/Linux/Mac running OS. We will install JDK + IntelliJ with every steps explained and shown."
      ],
      "description": "2024 Update: My Udemy courses are not being updated anymore.\nI have joined Droidcon Academy and leading the platform. I will continue my passion for teaching by working with thousands of instructors and helping them create high-quality courses for you. Thank you for your enormous support.\n-\n>> Develop skills in Kotlin from scratch, the most beautiful modern programming language based on Java and now used for Android!\n>> Expand your expertise as a Java/Android Developer and improve the quality of your code!\nWe begin with basics such that the beginners get a good grab over the language. There will be quizzes and coding challenges so that you test your learning.\nThen we will get along with the intermediate level and create Android Apps and integrate Kotlin with Java.\nThe course goes on as:\nInstallation of the development environment\nUnderstanding how program flow works in Kotlin.\nVariables & Opertors.\nLogic and making decision.\nBinary and hexadecimal numbers.\nLoops.\nWorking with files.\nFunctions.\nOOPs in Kotlin.\nData Classes.\nCollections and types of collections: List, Arrays, Map and Set\nLambdas and High Level Function\nPredicates\nMulti Processing.Information hiding principles and generics.\nAt last, get started with your first Kotlin Android App.\nGive us the review and feedback to improve the course.\n\nOnce you understand the concept of OOPs explained here for Kotlin, this basic paradigm being same for all other languages, you can master others too!\n(Java, PHP, C#, C++)\nThis course will be shaped as you want it to be. There will be more contents based on your reviews and feedback. Help this start reach heights with your valuable opinions.\n\nGet in now and be the part!",
      "target_audience": [
        "You should be eager to learn this awesome programming language!",
        "You do not need programming skills, we will start from scratch, heading towards intermediate and then to advanced topics.",
        "Anyone who wants to use kotlin for existing and new Android Apps, get this for yourself."
      ]
    },
    {
      "title": "Python for New learners: Introduction to python programming",
      "url": "https://www.udemy.com/course/python-for-beginners-introduction-to-python-programming/",
      "bio": "Learn basics of Python 3 programming. Start coding in Python 3. Be a Python Enthusiast. love Python !!",
      "objectives": [
        "Python basics",
        "Python Installation",
        "Installation of IDE",
        "Basic concept of variables",
        "Basic concept of data types"
      ],
      "course_content": {},
      "requirements": [
        "Just a cup of coffee"
      ],
      "description": "In this course, I will give you a brief introduction to python programming language, how to install it and how to set up a text editor in order to start writing your first code on python, we will also learn how to use commands like print command and variables, which are the basic building block of any programming language.\nThis course is an introductory course to python programming and students who are willing to get introduced with this language should take this course.\nThe popularity graph of python language is raising day by day with the due to advancement in artificial intelligence and data sciences. The role of data sciences is getting more and more importance in all profession, from medical sciences to engineering. All great businesses of 21st century are now relying heavily on data. Python is the backbone of data sciences.\nThe world is moving towards Industrial revolution 4.0 and one of the top programming language behind this advancement is python.\nPython is extremely handy when it comes to automate the repetitive tasks. It saves your energy and excessive usage of your human resources, thus saves the operating cost in any business, that is the reason why more and more businesses are adopting technologies in their advancement. In simple world Python is the language of future.\nIn this course you will learn:\nPython Installation\nInstallation and setting up an IDE (Pycharm)\nWriting your first code on python\nUnderstand the concept of variables\nUnderstand the concept of data types\npractice your first program written in python.\nLists in Python.\nMake your basic calculator in Python.\nlist functions  and much more...",
      "target_audience": [
        "Beginners who are willing to learn python programming language"
      ]
    },
    {
      "title": "2025 | Pandas Bootcamp | Data Analysis with Pandas Python3",
      "url": "https://www.udemy.com/course/the-pandas-bootcamp-data-analysis-with-pandas-python3/",
      "bio": "Roll Plays | Master Data Analysis with Pandas Python3 - From Beginner to Advanced. Enroll in The Pandas Bootcamp today!",
      "objectives": [
        "Understand the basics of Pandas, its data structures, and how to install it.",
        "Work with different types of data structures in Pandas.",
        "Use descriptive and inferential statistics methods to analyze data.",
        "Apply element-wise, row or column-wise, and table-wise function application on data.",
        "Reindex, sort, and iterate through data using Pandas.",
        "Use string methods for data cleaning and manipulation.",
        "Customize display options and data types in Pandas.",
        "Perform indexing and selecting operations based on labels, integers, or Boolean values.",
        "Use window functions such as rolling, expanding, and ewm for data analysis.",
        "Group data based on single or multiple columns, apply aggregation functions, and filter or transform data.",
        "Work with categorical data, perform methods such as reorder, remove, add, and rename categories, and visualize categorical data using Pandas.",
        "Visualize data using different types of plots such as line, bar, histogram, scatter, box, area, and heatmap.",
        "Read and write data in different formats such as CSV, Excel, and JSON using Pandas.",
        "Work with sparse data and understand its features."
      ],
      "course_content": {
        "Course Overview": [
          "Course Content",
          "Students responsibilites",
          "Instructor Guidelines"
        ],
        "Course Last Update 22 September 2025": [
          "New Update"
        ],
        "Prerequisite Lectures before Python Pandas": [
          "Important Note: Alert Students Please",
          "Python Introduction with Explanation",
          "Variable in Python with Examples",
          "Function in Python with Examples",
          "List-Data Structure in Python",
          "Dictionary-Data Structure in Python",
          "Introduction to Pandas Library",
          "Python Basics"
        ],
        "Python Pandas | Chapter 01": [
          "01 Pandas Chapter 01 Outlines",
          "02 What is Pandas",
          "03 Where we can use Pandas",
          "04 What we can do with Pandas",
          "05 Pandas Installation",
          "06 Pandas Basic Program",
          "Getting Started with Pandas in Python"
        ],
        "Python Pandas | Chapter 02": [
          "01 Pandas Chapter 02 Outlines",
          "02 Series Data Structure",
          "03 DataFrame Data Strcuture",
          "04 Panel Data Structure"
        ],
        "Python Pandas | Chapter 03": [
          "01 Chapter 03 Outlines for Pandas",
          "02 Series Creation with 5 Methods",
          "03 Indexing with Series",
          "04 Slicing with Series",
          "05 Arithmetics with Series",
          "06 Comparision with Series",
          "07 Aggregation with Series",
          "08 Filtering with Series",
          "09 All Attribues of Series",
          "10 head method with Series",
          "11 tail method with Series",
          "12 describe method with Series",
          "13 info method with Series",
          "14 mean method with Series",
          "15 sum method with Series",
          "16 unique method with Series",
          "17 value_counts method with Series",
          "18 sort_values method with Series",
          "19 apply method with Series",
          "20 fillna method with Series",
          "21 drop method with Series",
          "22 concat method with Series"
        ],
        "Python Pandas | Chapter 04": [
          "01 Chapter 04 Outlines for Pandas",
          "02 Methods to create DataFrame",
          "03 Select Add and Delete Column",
          "04 Select Add Delete Row",
          "05 Indexing and Slicing in DataFrame",
          "06 Arithmetic Operation with DataFrame",
          "07 Comparision Operations on DataFrame",
          "08 Aggregation with DataFrame",
          "09 Filtering in DataFrame",
          "10 Missing Data Handling in DataFrame",
          "11 Joining Method with DataFrame",
          "12 Sorting in DataFrame",
          "13 Attributes for DataFrame",
          "14 Head and Tail method in DF",
          "15 Describe and Info method with DF",
          "16 sort_values method with DF",
          "17 dropna Method with DF",
          "18 fillna and merge method with DF",
          "19 apply method with DF",
          "20 Panel in Pandas"
        ],
        "Python Pandas | Chapter 05": [
          "01 Chapter 05 Outlines",
          "02 Descriptive Statistics in Pandas",
          "03 Descriptive Methods in Pandas"
        ],
        "Python Pandas | Chapter 06": [
          "01 Pandas Chapter 06 Outlines",
          "02 Function Application in Pandas",
          "03 Element Wise Application",
          "04 Row or Column Wise Application",
          "05 Table wise Application"
        ],
        "Python Pandas | Chapter 07": [
          "01 Pandas Chapter 07 Outlines",
          "02 Reindexing in Pandas",
          "03 Iteration with items method",
          "04 Iteration with iterrows method",
          "05 Iteration with itertuples method",
          "06 Iteration in Pandas",
          "07 Sort Values in Pandas",
          "08 Sort Index in Pandas",
          "09 nlargest and nsmallest in Pandas"
        ]
      },
      "requirements": [
        "You should have basic knowledge of Python programming with beginner experince",
        "You did not have to buy extra software or course"
      ],
      "description": "Introduction to The Pandas Bootcamp | Data Analysis with Pandas Python3\nPython is not just a programming language—it’s the future of technology. And if you want to truly unlock the power of data science, you need to master Pandas, the #1 Python library for data analysis.\nThis Pandas Bootcamp is designed to take you step by step from the basics of Python programming with Pandas to advanced techniques used in data science, finance, AI, and machine learning. Whether you’re just starting your journey or upgrading your career skills, this course will give you the practical knowledge to confidently use Python Pandas NumPy workflows to clean, analyze, and visualize data.\nIf you’ve admired instructors like Angela Yu or practical coding mentors like Lazy Programmer, this bootcamp follows the same approach: clear explanations, 100% hands-on coding, and real-world applications.\nStop waiting. Start building your future with Python for data analysis today.\nWhy enroll in this Pandas Bootcamp?\nLearn mastering Python, Pandas, NumPy for absolute beginners in a structured, project-focused way.\nGain skills directly applicable to data science, python for finance, research, and analytics jobs.\nLearn to handle large datasets with confidence—data cleaning, grouping, aggregation, visualization.\nBuild confidence in the NumPy stack (NumPy, Pandas, Matplotlib, SciPy) with practical examples.\nGo beyond theory: apply knowledge to real-world tasks, from analyzing financial data to preparing ML-ready datasets.\nThis isn’t just a course — it’s your roadmap to becoming a job-ready data analyst or data scientist.\nWhat you’ll learn inside\n1. Introduction to Pandas\nWhat is Pandas, why we need it, installation, and your first Pandas program.\n2. Data Structures in Pandas\nSeries, DataFrame, and Panels with operations, attributes, and methods.\n3. Descriptive & Inferential Statistics\nUnderstand your data with descriptive stats and probability functions.\n4. Function Applications\nElement-wise, row/column-wise, and table-wise operations.\n5. Reindexing & Sorting\nEfficient ways to reshape and organize your datasets.\n6. String Methods for Data Cleaning\nFrom lower/upper/title formatting to splitting, joining, replacing, and searching text.\n7. Customization\nSet display options, adjust data types, and fine-tune your workflow.\n8. Indexing & Selection\nLabel-based, integer-based, Boolean indexing, and .query() for advanced filtering.\n9. Window Functions\nRolling, expanding, exponentially weighted windows for moving averages and time series.\n10. Groupby Operations\nSplit, apply, and combine — aggregate, filter, and transform your data with power.\n11. Categorical Data\nAdd, rename, reorder categories, analyze distributions, and prepare categorical features.\n12. Visualization with Pandas\nLine, bar, scatter, box, histogram, area plots, density plots, and heatmaps.\n13. Input/Output Tools\nRead and write CSV, Excel, JSON with Pandas — integrate with multiple data sources.\n14. Date & Time Functions\nWorking with datetime, date ranges, timestamp formatting, and time-based indexing.\nWho is this course for?\nStudents wanting to move from beginner to confident data analyst.\nBusiness professionals who need Python for data analysis or Python for finance.\nAspiring data scientists preparing for AI/ML/DL fields.\nProgrammers who want to add Pandas and the NumPy stack to their skillset.\nAnyone aiming to use python pandas numpy for solving real-world problems.\nThe Pandas Bootcamp Advantage\nDownloadable source code + study materials.\nExercises & assignments with solutions.\nStep-by-step instructor guidance (Faisal Zamir).\nLifetime access and support.\nCertificate of completion to showcase your skills.\nFinal Words\nEvery dataset hides insights. With Pandas, you’ll learn to uncover them. Whether it’s finance, business intelligence, research, or machine learning — Pandas is the foundation.\nDon’t just “watch tutorials” — take action and enroll today. Your career in Python data science starts here.\nBecome the data professional the world needs with Pandas and Python programming.\nSee you inside,\nFaisal Zamir",
      "target_audience": [
        "Aspiring data analysts who want to learn how to use Pandas for data analysis",
        "Data scientists who want to add Pandas to their skillset",
        "Business analysts who need to analyze data using Pandas",
        "Programmers who want to learn about data manipulation and analysis using Python and Pandas",
        "Anyone interested in learning about Pandas and data analysis with Python"
      ]
    },
    {
      "title": "Master The C Programming Language",
      "url": "https://www.udemy.com/course/c-programming-tutorial-by-sagar/",
      "bio": "A step by step guide to master the C Programming language with simple and easy to understand examples.",
      "objectives": [
        "Gain familiarity and confidence in C Programming Language right from the basics.",
        "Remove the fear if any about Pointers, start playing with them.",
        "Start building your own command line tools."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Your first Program",
          "HelloWorld with VisualStudio Code",
          "Structure of the program",
          "C Compiler Setup for Windows",
          "Special Note",
          "Introduction Quiz"
        ],
        "First Steps in Programming": [
          "Addition of two numbers",
          "FormatSpecifiers",
          "Problem - Basic Arithmetic Operators",
          "Solution - Basic Arithmetic Operators",
          "Operators Quiz - Part 1",
          "Problem - Average of three numbers",
          "Solution - Average of three numbers",
          "Problem - Calculate Percentage",
          "Solution - Calculate Percentage",
          "Datatypes and Expression Evaluation",
          "Datatypes Quiz",
          "Increment and Decrement Operators",
          "Operators - Part 1",
          "Operators - Part 2",
          "Operators Quiz"
        ],
        "Branching and Looping": [
          "If statement",
          "Nested If",
          "Simple If",
          "Introduction to block",
          "Switch",
          "Branching Quiz",
          "While",
          "DoWhile",
          "For",
          "Looping Quiz"
        ],
        "Programming Exercises on Loops": [
          "Problem 1 with Solution",
          "Problem 2 with Solution",
          "Problem 3 with Solution",
          "Problem 4 with Solution",
          "Problem 5 with Solution",
          "Problem 6 with Solution",
          "Problem 7 with Solution",
          "Problem 8 with Solution"
        ],
        "Functions": [
          "Introduction to functions",
          "Problem 2 with Solution",
          "Execution Flow Explained",
          "Functions Quiz",
          "Problem 3 with Solution",
          "Problem 4 with Solution",
          "Problem 5 with Solution",
          "Problem 6 with Solution",
          "Recursive Functions",
          "Global Variables",
          "Static local variables"
        ],
        "Pointers - Basics": [
          "Introduction to pointers",
          "Pointers Quiz",
          "Multilevel indirection",
          "Pointers Quiz 2",
          "Pointer Usage 1",
          "Swap two variables",
          "Introduction to dynamic memory allocation"
        ],
        "Single Dimensional Arrays": [
          "Introduction to Arrays",
          "Example to find the biggest of the array",
          "Example to search for an element in an array",
          "Search modified to use Dynamic Memory Allocation",
          "Sorting an Array"
        ],
        "Character and Strings": [
          "Introduction to char",
          "Strings",
          "Exercise Problem 1 with Solution",
          "Exercise Problem 2 with Solution",
          "Exercise Problem 3 with Solution"
        ],
        "Double Dimensional Arrays": [
          "Introduction to Double Dimensional Arrays",
          "Matrix Addition",
          "Matrix Multiplication",
          "String Sort"
        ],
        "Structures and Unions": [
          "Introduction to Structures",
          "Pointers to Structures",
          "Unions",
          "Typedef"
        ]
      },
      "requirements": [
        "Basic computer knowledge and a bit of determination."
      ],
      "description": "C Programming Language is one of the most popular and powerful programming language. It is still the most sought programming language by developers. In my opinion if you are looking to get started with programming it would be great to get started with C as it helps you understand the fundamentals in depth and build a very strong founding for a bright career as a software developer.\nIf you are a beginner or someone who is looking to get started with programming then this C language course is an ideal choice for you. Through this course you will start building the essential programming skills using simple and easy to understand examples, once you are done with the course you gain in depth understanding of the constructs in C programming language.\nThere is a myth about programming, people tend to feel that programming is tough, but programming is fun provided you understand the basics right, this course will work on those basics and tries to remove all those myths by explaining you the topics with simple and easy to understand examples. Having said that it is also important for you to set aside a time slot for programming on a day to day basis.\nIt is important to understand any topic with \"why?\" perspective so that it helps you apply the skills better. Hope and wish you will find this C Programming course useful and informative.",
      "target_audience": [
        "Beginners to professionals who are looking to get started or fine tune their C Programming language skills."
      ]
    },
    {
      "title": "Data Visualisation with Plotly and Python",
      "url": "https://www.udemy.com/course/data-visualisation-with-plotly-and-python/",
      "bio": "Level up your data visualisation. Learn to create interactive charts and dashboards with Python and Plotly.",
      "objectives": [
        "At the end of this course you'll be able to use Plotly to make interactive line plots, area plots and scatterplots.",
        "You'll know how to make stacked and grouped bar charts, pie charts, donut charts and tables.",
        "You'll also be able to bring together several different charts into a dashboard.",
        "You'll have a working knowledge of the Python programming language, as well as an intermediate knowledge of the Pandas data analysis library."
      ],
      "course_content": {
        "Setting up your programming environment": [
          "Installing Anaconda, Jupyter & Plotly",
          "Introduction to Jupyter Notebooks",
          "Downloading the course materials",
          "Setting up a Plotly account and configuring your Plotly installation"
        ],
        "Introduction to Python": [
          "Download materials for Introduction to Python",
          "Variables in Python",
          "Variable Types - Numbers",
          "Variable Types - Strings (1)",
          "Variable Types - Strings (2)",
          "Variable Types - Boolean",
          "Variable Types - Lists (1)",
          "Variable Types - Lists (2)",
          "Variable Types - Dictionaries (1)",
          "Variable Types - Dictionaries (2)",
          "If-Else Statements",
          "For Loops (1) - Looping through a range of values",
          "For Loops (2) - Looping through the items in a sequence",
          "For Loops (3) - Nested Loops",
          "Functions (1) - Creating Functions",
          "Functions (2) - Using Functions",
          "Importing Modules",
          "Introduction to Pandas (1) - Reading data into a DataFrame",
          "Introduction to Pandas (2) - Useful DataFrame Functions",
          "Introduction to Pandas (3) - Accessing and Creating Columns",
          "Introduction to Pandas (4) - Changing the DataFrame",
          "Introduction to Pandas (5) - Accessing and changing specific observations",
          "Variables Types in Python",
          "Conditional programming in Python",
          "Working with the Pandas library",
          "Further resources for learning Python"
        ],
        "Lineplots and Area Plots": [
          "Download materials for Lineplots",
          "Introduction to Lineplots in Plotly",
          "Plotting different data",
          "Plotting data from a Pandas DataFrame",
          "Plotting multiple lines",
          "Plotting multiple lines with a For loop",
          "Changing line colour and thickness",
          "Making dashed and dotted lines",
          "Adding and changing marker symbols",
          "Applying smoothing (1)",
          "Applying smoothing (2) - stock market data",
          "Stepwise line shapes",
          "Creating an area plot",
          "Creating a stacked area plot",
          "Creating a stacked proportional area plot",
          "Writing a function to create a stacked proportional area plot",
          "Review of lineplots and areaplots",
          "Practise datasets for lineplots and area plots"
        ],
        "Styling your charts": [
          "Download materials for section Styling your charts",
          "Changing the range",
          "Setting the tick format",
          "Modifying the tick labels",
          "Creating and positioning custom tick values",
          "Controlling hovertext on your chart",
          "Creating custom hovertext",
          "Applying custom hovertext",
          "Practise (1)",
          "Practise (2)",
          "Styling your charts - review",
          "Practising your chart presentation skills"
        ],
        "Scatterplots": [
          "Download materials for Scatterplots",
          "Scatterplots 1 - What is a scatterplot?",
          "Scatterplots 2 - Making our first scatterplot",
          "Scatterplots 3 - Styling the marker points",
          "Scatterplots 4 - Plotting different categories on the same plot",
          "Scatterplots 5 - Controlling traces and legend items",
          "Scatterplots 6 - Fitting a regression line",
          "Scatterplots 7 - Plotting and styling regression lines",
          "Scatterplots 8 - Adding text to charts",
          "Scatterplots 9 - Making bubbleplots",
          "Scatterplots 10 - Recreating the Gapminder plot",
          "Scatterplots 11 - Plotting multiple plots together",
          "Scatterplots 12 - Making a scatterplot matrix",
          "Scatterplots 13 - Styling our scatterplot matrix",
          "Scatterplots 14 - Writing a function for a scatterplot matrix",
          "Practise datasets for scatterplots and bubbleplots",
          "Scatterplots - Review"
        ],
        "Styling your charts (2)": [
          "Download materials for Styling your Charts 2",
          "Styling the global font",
          "Styling annotations, text, ticklabels and titles",
          "Further styling of annotations",
          "Positioning annotations outside of the chart",
          "Changing the margins",
          "Adding a source annotation",
          "Different subplots options",
          "Combining subplots grid spaces",
          "Styling your charts - review",
          "Practising your chart presentation skills"
        ],
        "Bar Charts": [
          "Download materials for Bar Charts section",
          "What is a bar chart?",
          "Making our first bar chart",
          "Styling options for a bar chart",
          "Styling individual bars",
          "Horizontal barcharts",
          "Plotting multiple bar traces",
          "Creating stacked bar charts",
          "Stacked proportional bar charts",
          "Plotting bar and line plots together",
          "Barcharts - review",
          "Practise datasets for bar charts"
        ],
        "Making our first dashboard": [
          "Creating our first dashboard (1)",
          "Creating out first dashboard (2)",
          "Styling our first dashboard"
        ],
        "Styling your charts (3)": [
          "Download materials for Styling your Charts 3",
          "Styling the legend",
          "Changing the position of traces in the legend",
          "Positioning the legend",
          "Horizontal legends",
          "Changing the background colour of a chart",
          "Styling your charts - review",
          "Practise your chart presentation skills"
        ],
        "Pie charts": [
          "Download materials for Pie Charts",
          "What is a pie chart?",
          "Making our first pie chart",
          "Styling a pie chart",
          "Highlighting specific segments of a pie chart",
          "Labels, text and hoverinfo",
          "Text inside and outside the segments",
          "Using pie charts in a subplots object",
          "Sizing pie charts relative to each other",
          "Making a donut chart",
          "Pie charts - review",
          "Practise datasets for pie charts and donut charts"
        ]
      },
      "requirements": [
        "You should have access to a computer onto which you can install software.",
        "You should have an interest in data visualisation."
      ],
      "description": "Looking to level up your data visualisation skills? Bored of dull, static charts and graphs? This course will teach you to how to use Python to create awesome, interactive data visualisations with the Plotly library.\nWhat's involved?\nYou get immediate access to twelve painstakingly crafted and researched chapters, each designed to level up your data visualisation and coding skills. Using my experience as a data visualisation specialist and teacher, I've created original content that uses real-world data to teach you the fundamentals of data visualisation in a clear and easy-to-understand way.\nYou'll find this course interesting, fun and engaging. The lessons are paced to build confidence in the skills you're learning, and there are plenty of quizzes and practise activities to solidify your knowledge.\n\n\nHere's what you get with Data Visualisation with Plotly 3 and Python\nAccess to twelve chapters which take you through each topic, providing plenty of chances to practise.\nOver 140 Lectures, 27 hours of video content, 40 practise datasets and 11 quizzes\nStep by step instruction to set up your coding environment and install the required software\nThe course starts with the basics; the first section will give you a basic understanding of the Python coding language. and you'll soon be making some interactive charts!\nOver the twelve chapters you'll:\nUse Plotly 3 to create:\nLineplots\nAreaplots\nScatterplots\nBubbleplots\nStacked bar charts\nGrouped bar charts\nPie charts\nTables\nDashboards\nBring together everything you've learnt to create three awesome dashboards which showcase your work.\nLearn how to use colour, interaction and design principles to make your charts really stand out.\nBuild a portfolio of charts that you can use to show off your data visualisation skills.\nDevelop your knowledge of Python and become a confident user of Pandas; the go-to data analysis tool for Python coders.\nPlease note that this course does not cover Plotly 4.0\nWhat else will you get?\nLifetime access to the course materials\n\n\nSo what are you waiting for? Level up your data visualisation skills, transform your career and sign up now!",
      "target_audience": [
        "The ideal student for this course is a business analyst who uses tools such as Excel to create static charts and graphs, and who wants to improve the quality and accessibility of their outputs."
      ]
    },
    {
      "title": "Java OOP: Object Oriented Programming with Exercises - 2025",
      "url": "https://www.udemy.com/course/java-oop-iter-academy/",
      "bio": "Object Oriented Programming (OOP), Classes, Objects, Encapsulation, Inheritance, Polymorphism, SOLID and more",
      "objectives": [
        "Java",
        "Object Oriented Programming (OOP)",
        "Class and object creation",
        "Constructor usage",
        "Encapsulation with getters and setters",
        "Inheritance implementation",
        "Method overriding",
        "Use of the super keyword",
        "Polymorphism in Java",
        "Method overloading and overriding differentiation",
        "Abstract classes and interfaces usage",
        "SOLID principles application"
      ],
      "course_content": {},
      "requirements": [
        "You already know Java Basics (variables, if-else, loops).",
        "A computer (Windows, macOS, or Linux) to write and run Java programs.",
        "Basic computer skills, like installing software and managing files.",
        "Excitement to learn Java and have fun exploring the world of coding!"
      ],
      "description": "Welcome to the World of Java Programming!\nWelcome to our Java Object Oriented Programming Course! We are happy to have you here as you begin your journey into programming or grow your skills. This course is perfect for everyone—whether you’re just starting, thinking about switching careers, or simply curious about coding. You don’t need a computer science degree to join—just a desire to learn.\n\n\nWhy Take This Course?\nAt ITER Academy, we have already taught over 1,000 students in classrooms. Now, we are bringing all that knowledge and experience online, so more people can benefit. Your teacher, Andrii Partola, is a Senior Java Engineer who works with Java every day. He uses Java to create powerful and complex programs for real companies. He has taken his real-world experience and turned it into lessons that are easy to understand and fun to follow.\n\n\nLearn with Real-Life Examples\nLearning is easier when you can see how things work. That’s why this course is full of real-life examples. You’ll see how Java is used to solve problems, so you can understand not just what you’re learning, but also why it’s useful. These examples will help you remember things better and prepare you to use Java on your own.\n\n\nQuizzes to Check Your Knowledge\nTo make sure you really understand the material, this course includes quizzes after many lessons. These quizzes will help you review important ideas and see how much you’ve learned. They’re a fun way to test yourself and feel confident before moving on to the next topic.\n\n\nPractice Coding with Exercises\nThe best way to learn programming is by writing code yourself. That’s why this course has lots of coding exercises. These exercises give you a chance to practice what you’ve learned and solve problems like a real programmer. By doing this, you’ll get better and more confident with every lesson.\n\n\nLessons Designed for Success\nWe didn’t just create this course from scratch. We studied many other popular courses to learn what works best. Every lesson in this course is carefully organized, so it’s easy to follow and makes sense step by step. Each lesson is packed with useful information, so you learn quickly without wasting time.\n\n\nFree Access to All Code\nAll the code written in this course is available on GitHub. You can download it, use it, and practice with it whenever you need. This means you’ll always have access to examples to help you as you keep learning.\n\n\nWhy Choose ITER Academy?\nPractical knowledge: Learn the skills that are used in real programming jobs.\nSimple and clear lessons: No confusing words or hard-to-follow explanations.\nStep-by-step structure: Each lesson builds on the last one, so you never feel lost.\nExperienced teacher: Learn from a professional Java engineer with years of experience.\n\n\nStart Learning Today\nWith easy-to-follow lessons, plenty of examples, quizzes, and exercises, this course gives you everything you need to become confident in Java programming. Join us today and let’s start your journey into the world of coding together!",
      "target_audience": [
        "Learners with a basic understanding of Java (variables, data types, loops, and basic syntax).",
        "Aspiring software developers looking to advance their skills in object-oriented programming.",
        "Computer science students familiar with Java fundamentals and seeking deeper knowledge of OOP.",
        "Professionals transitioning to object-oriented programming with prior Java basics.",
        "Java developers aiming to strengthen their understanding of OOP concepts and best practices.",
        "Individuals preparing for technical interviews involving advanced Java and OOP topics."
      ]
    },
    {
      "title": "Salesforce Lightning web component with live project",
      "url": "https://www.udemy.com/course/lightning-web-component/",
      "bio": "guide to learn salesforce lightning web component Development with series of codes and a real time project",
      "objectives": [
        "What is Lightning Web Component framework?",
        "Lightning Web Component Development",
        "LWC and Aura interoperability",
        "Supported browsers, tools and experience for lightning web components",
        "Set up development environment and CLI command to work with LWC",
        "Setup Devhub and scratch org and Importance of it",
        "LWC Folder and File Structure",
        "Useful Javascript Properties in lightning component",
        "Nested/Component composition",
        "How to communicate between components using Events",
        "PubSub mechanism to communicate events",
        "ways of accessing salesforce resources in LWC",
        "Lightning Data Services and Base components to get salesforce data in Lightning web Components",
        "Use Wire services to access data in LWC",
        "Various to Invoke APex from Lightning web component",
        "Continuous call and API call from Lightning web component",
        "Uses of Navigation services in lightning web component",
        "Introduction SLDS and various resources",
        "Component life cycle and event best practices",
        "Mechanism to Debug your lightning web component",
        "Use Jtest to test your Lightning Web components",
        "Best ways to migrate Aura component to LWC",
        "Many more live scenario and step by step way to code the LWC",
        "Complete access to source code for practice",
        "Live Project with complete source code built on LWC"
      ],
      "course_content": {
        "Introduction to Lightning web component": [
          "Introduction To Lightning Web Component/ LWC in Salesforce",
          "Difference Between Visualforce , Aura component and LWC",
          "Web Component and evolution of Webstack",
          "Why do you go for LWC instead of existing Aura Components",
          "Coexistence and interoperability of AURA and LWC"
        ],
        "Supported browsers , javascript, experience and tools for salesforce LWC": [
          "Supported Browsers for LWC",
          "Supported Javascript for LWC",
          "Supported Experience and tools for LWC"
        ],
        "Set up development environment for lightning web component": [
          "What are the things need to setup for LWC?",
          "Lets Sign up for salesforce Account (if does not have)",
          "Enable My Domain in Your Development Org",
          "Enable Debug Mode in Your Development Org",
          "Install Visual studio code",
          "Install Salesforce Extension pack",
          "Install Salesforce CLI"
        ],
        "Set up DEVHub and Scratch Org in salesforce": [
          "Setup main org as Devhub",
          "Create Project and Scratch org in Visual Studio code"
        ],
        "How to create a new Lightning web component and its folder structure": [
          "Create First Lightning web component and its folder structure",
          "Sample code First LWC component"
        ],
        "Understand basic of HTML template , Javascript and LWC configuration file": [
          "Understand basic of HTML template , Javascript and LWC configuration file",
          "Expose our first LWC in Lightning Record Page",
          "Code for Meta file to expose component in a record page"
        ],
        "Define styling to lightning web component": [
          "Different mechanism to style your lightning web component",
          "Style your Lightning Web Component using Custom CSS (style file)",
          "Add CSS File and style code in our component",
          "Sample Code for Custom style sheet for your Lightning web component",
          "Style your Lightning Web Component using SLDS styling",
          "Sample Code -Style your Lightning Web Component using SLDS styling",
          "Share CSS Styles Among LWC",
          "Sample Code - Share CSS Styles Among LWC"
        ],
        "Bonus Lecture": [
          "Other Courses You might like"
        ],
        "Javascript properties in Lightning web component": [
          "Javascript Fields, Properties and Attributes",
          "Use Private Properties in your component to bind dynamic data",
          "Sample code for Private properties in LWC"
        ],
        "Use of conditional rendering using template if else": [
          "Use of conditional rendering using template if else",
          "Sample code for Use of conditional rendering using template if else"
        ]
      },
      "requirements": [
        "basic knowledge of salesforce, javascript",
        "Basic understanding of Salesforce Apex and SOQL is preferred",
        "More important to have interest to learn salesforce lightning web component"
      ],
      "description": "Lightning web component (LWC) is a new programming model with following web standards to develop salesforce lightning components and this is the only tutorial with maximum hour of video with real time project. Each session explained with many live coding to make your LWC concepts deep clear so that you can make your journey to be expert in LWC.\nAll code are also added in the tutorial for your reference and we are updating this with each new feature monthly wise.\nLWC is still new in the market and learning LWC can make you a Salesforce gem and can give your resume another dimension.\n\n\nThis course is designed from basic to expertise level. if you are beginner , nothing to worry, its very easy and well organized course to make your learning simple and smooth. Also for expert, you can learn deep knowledge of LWC and add many more skills in your professional career with live real-time examples and scenarios with series of codes.\nThere is one complete real time project added in the end of session which covers all lwc concepts and how to implement it. Every session delivered with examples and code which is shared in the session already .",
      "target_audience": [
        "salesforce",
        "Developer",
        "Administrator",
        "software professional",
        "tester",
        "Project Managers"
      ]
    },
    {
      "title": "Make 10 Pro Advanced GUI Applications in Python",
      "url": "https://www.udemy.com/course/make-10-pro-advanced-gui-applications-in-python/",
      "bio": "Learn to make Professional Level Python Applications and make yourself a True Python App Developer",
      "objectives": [
        "Student will make Professional Level Applications in Python",
        "Student will get kind of blueprint to make any Application in Python",
        "Student will be able to get Good Jobs in Python",
        "Student will be pretty much satisfied with their Python Skills."
      ],
      "course_content": {
        "Important Advanced Concepts you need to Understand": [
          "Understanding Computer Vision - OpenCV - 1",
          "Understanding Computer Vision - OpenCV - 2",
          "Understanding Machine Learning",
          "Understanding Natural Language Processing",
          "Thread vs Process in Python"
        ],
        "Installing Python and Setting up the IDE": [
          "Installing Python and Setting up the IDE - PyCharm"
        ],
        "Automatic Number Plate Detection Application in Python": [
          "Introduction to the Application",
          "Import Required Modules",
          "Download and Configure Optical Character Recognition[OCR]",
          "Defining our Only Class",
          "Handling the License Plate",
          "Returning Contours",
          "Pruning License Plate Candidates",
          "Defining Tesseract",
          "Central Method of Number Plate",
          "Driver Script",
          "Recognizing License Number Plate"
        ],
        "Zoom Clone in Python": [
          "Zoom Clone Part # 1",
          "Zoom Clone Part # 2",
          "Zoom Clone Part # 3",
          "Zoom Clone Part # 4",
          "Zoom Clone Part # 5"
        ],
        "Typing Speed Testing Application in Python": [
          "Typing Speed Testing Application Part # 1",
          "Typing Speed Testing Application Part # 2",
          "Typing Speed Testing Application Part # 3",
          "Typing Speed Testing Application Part # 4",
          "Typing Speed Testing Application Part # 5",
          "Typing Speed Testing Application Part # 6"
        ],
        "Language Translator Application in Python": [
          "Language Translator Application Part # 1",
          "Language Translator Application Part # 2",
          "Language Translator Application Part # 3",
          "Language Translator Application Part # 4",
          "Language Translator Application Part # 5"
        ],
        "Image Convertor Application in Python": [
          "Introduction to Image Convertor",
          "Setting Up Basics",
          "Selecting Canvas and Frame",
          "Selected File Frame",
          "Container for Conversion Buttons",
          "Container for Status Info",
          "Browse File",
          "Conversion Function",
          "Error and Success Function",
          "Running the Entire Code"
        ],
        "Instagram Profile Pic Downloader": [
          "Introduction to the Application",
          "Setting up Background",
          "Setting up Things",
          "The Downloading Part"
        ],
        "Brick Breaker Game Application in Python": [
          "Brick Breaker Game Application in Python Part - 1",
          "Brick Breaker Game Application in Python Part - 2",
          "Brick Breaker Game Application in Python Part - 3",
          "Brick Breaker Game Application in Python Part - 4",
          "Brick Breaker Game Application in Python Part - 5",
          "Brick Breaker Game Application in Python Part - 6",
          "Brick Breaker Game Application in Python Part - 7",
          "Brick Breaker Game Application in Python Part - 7"
        ],
        "Pharmacy Management System": [
          "Introduction",
          "Configuration",
          "GUI Part-1",
          "GUI Part-2",
          "GUI Part-3",
          "Adding Items",
          "Deleting Items",
          "Viewing First Item",
          "Viewing Next Item",
          "Viewing Previous Item",
          "Viewing Last Item",
          "Update Item",
          "Search an Item",
          "Clear the Screen",
          "Running Code - Last Time"
        ]
      },
      "requirements": [
        "Basics of Python or any other Programming Language is required.",
        "Laptop or PC is required"
      ],
      "description": "Python is the most widely used Programming Language in the World. It is the most popular programming language and number 1 choice of every Developer. Python is literally used in making every type of Application. If you know Python, you would not need any other Programming Language to do something else. I have seen thousands of students who have done the Basic part of Python but they have never used their skills and Concepts to make something Professional Looking and of an Advanced Level in Python. Any Programming Language is useless like this. When you go in your Professional Career and Python Jobs , you are assigned to make Cool Looking Professional Applications and this is what this course is for.\n\n\nIn this course, we have assumed that you know the basics of Python or any other Programming Language and that our Job is to teach you how to use Python to make Professional Level GUI Based Applications. It's time to take your skills up to the Level where you can make Cool Looking Real Time Applications.\n\n\nWe are pretty sure that after taking this course in Python, you will then feel that you can now make any type of application using the Python Programming language and that you are now a professional programmer who now knows how to use a language to make something real out of it.\n\n\nIn this Course, if you have any problem you can directly message us or you can ask your question in the Q/A Sections where you will get your Questions Answered as soon as possible. Hope you will have an Awesome Time with this Course.\n\n\nStay Awesome!",
      "target_audience": [
        "Anyone who want to make Professional Level Applications in Python",
        "Anyone who wants to get kind of blueprint to make any Application in Python",
        "Anyone who wants to get Good Jobs in Python",
        "Anyone who wants to make something real and professional out of Python"
      ]
    },
    {
      "title": "Learn Java the Easy Way: Build Desktop & Android Mobile Apps",
      "url": "https://www.udemy.com/course/java-the-easy-way/",
      "bio": "A Hands-On Introduction to Programming in Java on PC, Mac, Linux and Android Devices.",
      "objectives": [
        "Create fun, playable, interactive apps like the animated, multi-touch BubbleDraw app, a Secret Messages app, and a Guessing Game!",
        "Code your own desktop and mobile apps in Java and Android.",
        "Master concepts like variables, loops, functions, and object-oriented programming concepts in a fun way with Java!",
        "Build progressively more advanced programs starting with simple program outlines."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting Started: Installing Java",
          "Installing Eclipse IDE for Java Developers",
          "Installing Eclipse's WindowBuilder Editor",
          "Installing Android Studio",
          "Optional Video: Java+Eclipse+Android Studio on Windows",
          "JShell: Hello, Java!",
          "Using Variables in JShell",
          "Printing Output in JShell",
          "Wrapup: JShell Commands"
        ],
        "App 1: Build a Hi-Lo Guessing Game!": [
          "Designing a Guessing Game App",
          "Starting Eclipse",
          "Configuring Eclipse like a pro!",
          "Creating your first project",
          "Using the Scanner class for input",
          "Generating random numbers",
          "Getting user input from the keyboard",
          "If conditions",
          "Running the app in Eclipse",
          "Adding a Play Again loop",
          "Testing the game",
          "Review: What you've learned so far",
          "Special Lecture: How to avoid common errors",
          "Programming Challenge Exercise",
          "Challenge Solution: Counting tries"
        ],
        "Designing a GUI Desktop App in Java": [
          "Intro to the GUI Guessing Game",
          "Starting a GUI project",
          "Using the WindowBuilder Editor",
          "Adding GUI components",
          "Advanced GUI design",
          "Naming GUI elements",
          "Connecting the GUI to your programming code",
          "Adding a method to check the user's guess",
          "Creating a newGame() method",
          "Running the game",
          "Handling user events",
          "Improving the UX",
          "Handling errors and exceptions",
          "Customizing the GUI",
          "Programming Challenge Exercises",
          "Solution: Counting the tries left",
          "Level-Up: Winning and losing!"
        ],
        "Creating Your First Android App": [
          "Intro to the Android Guessing Game app",
          "Setting up the Android Guessing Game",
          "Navigating the Design View in Android Studio",
          "Adding GUI components to the layout",
          "Naming GUI components for easy programming",
          "Connecting the GUI to your code",
          "Adding the checkGuess() method",
          "Adding the newGame() method",
          "Handling user events in Android",
          "Running on the Android Emulator",
          "Running the app on a real Android device!",
          "Improving the UX",
          "Programming Challenge Exercise",
          "Challenge Solution: Counting the Tries Left"
        ],
        "Deciphering Secret Messages": [
          "Intro to the Secret Messages app",
          "Setting up the app... and Intro to Strings!",
          "Adding characters and values",
          "Just the words, ma'am :)",
          "Creating a custom encryption key",
          "Review",
          "Programming Challenge Exercise",
          "Challenge Solution: Encode it again, Sam!"
        ],
        "Building Advanced GUIs with Swing": [
          "Setting up the GUI Secret Messages app",
          "Designing and naming the GUI",
          "Encoding messages with a method",
          "Handling button events",
          "Finishing and testing the app",
          "Adding a slider to the GUI",
          "Cracking codes with the slider",
          "Review and UX finishing touches",
          "Programming challenge exercise",
          "Challenge solution: Encode numbers, too!"
        ],
        "Build a Social, Mobile Secret Messages App!": [
          "Intro to the Secret Messages mobile app",
          "Setting up the GUI for Secret Messages",
          "Adding a SeekBar and wiring up the GUI",
          "Reusing the encode() method",
          "Running the app",
          "Review and programming challenge exercise",
          "Challenge solution: Press to encode/decode"
        ],
        "Draw Colorful Bubbles with Your Mouse!": [
          "Intro to the BubbleDraw app",
          "Setting up the BubbleDraw project",
          "Adding the app frame",
          "Creating a bubble class",
          "Using an ArrayList",
          "Drawing with paintComponent()",
          "Handling mouse events",
          "Drag and draw!",
          "Changing bubble sizes with the mouse wheel",
          "Animating bubbles with the timer",
          "Floating random bubbles",
          "Bouncing bubbles with collision detection",
          "Programming challenge exercises",
          "Solution 1: No bubble left behind!",
          "Solution 2: Start and stop the timer!"
        ],
        "GUI BubbleDraw: Graphics + GUI": [
          "Intro to the GUI BubbleDraw app",
          "Setting up the app, and adding transparency!",
          "Setting up the GUI",
          "Wiring the GUI to your code",
          "Grouping bubbles by checkbox",
          "Review and programming challenge exercises",
          "Solution 1: Add a pause button",
          "Solution 2: A hard bounce"
        ],
        "The Multi-Touch BubbleDraw Mobile App!": [
          "Multi-touch BubbleDraw app setup",
          "Adding variables and a constructor",
          "Building the bubble class",
          "Drawing bubbles with onDraw()",
          "Threaded animation with Runnable",
          "Testing animation with 100 bubbles",
          "Drawing by touch",
          "Drawing with multi-touch!",
          "Review and programming challenge exercises",
          "Level-Up: Adding a counter for the number of bubbles",
          "Solution: Multi+Single-touch bubbles"
        ]
      },
      "requirements": [
        "No programming experience needed.",
        "All software and resources are FREE to download and install.",
        "You should feel comfortable installing software, and be able to type in a text editor."
      ],
      "description": "Learn to program in Java by building awesome, interactive desktop & mobile apps!\nStart coding in Java step-by-step with Computer Science Professor Dr. Bryson Payne, author of the Amazon #1 New Release and Top 10 Best Seller, Teach Your Kids to Code (now published in six languages)!\nThis course, based on Payne's second book, Learn Java the Easy Way, will have you coding Java and Android apps TODAY! In this course, you'll learn to:\nQuickly test code snippets in the new Java JShell interactive shell!\nBuild Java desktop apps, both text-based and GUI!\nCreate Android mobile apps, using Java, for Android phones and tablets.\nProgram a colorful, animated, multi-touch drawing app (and two other apps) on your Android phone or tablet by the end of the course!\nDesign and code playable games and apps starting from scratch, and share them with your friends, or with the world!\nLearn important programming concepts like variables, loops, functions and object-oriented programming while having fun along the way!\nYou can learn the #1 Programming Language in the World!\n\nOver 15 Billion Devices run Java, from PC/Mac/Linux to Android devices to TVs, watches, cars, Blu-ray players and more! Learn Java the Easy Way brings the power of Java and Android programming into your hands, with easy-to-follow videos, crystal-clear audio, and line-by-line code explanations as you build fun, playable apps that you can share!\nEverything you need to get started right away\nComplete with working code downloads and high-definition videos, you'll be able to work alongside a professor with 20+ years' teaching and over 30 years' programming experience. You'll also receive a Certificate of Completion upon finishing the course!\nNew: Programming Challenge Solutions added to all 10 sections!\nNo Risk: Preview videos from Sections 1, 2, and 4 now for FREE, and enjoy a 30-day money-back guarantee when you enroll - zero risk, unlimited payoff!\nEnroll now and get started coding in Java + Android today!",
      "target_audience": [
        "Perfect for beginners, or for programmers of other languages who want to learn Java and Android.",
        "Learners of all ages will create their own apps in minutes!",
        "Anyone who wants to advance in their career or jump into programming and mobile development.",
        "Anyone who wants to learn to code."
      ]
    },
    {
      "title": "JavaScript JSON AJAX API data for web pages Objects Arrays",
      "url": "https://www.udemy.com/course/javascript-json-and-ajax-explained-javascript-objects/",
      "bio": "JavaScript code to connect to web APIs and get JSON data use AJAX explore JavaScript Objects and Arrays for JSON",
      "objectives": [
        "learn how to use JSON",
        "learn how to make AJAX calls in JavaScript",
        "Access JSON data files and use the content within JavaScript",
        "Use files to create JavaScript objects on the fly"
      ],
      "course_content": {
        "JavaScript AJAX JSON data JavaScript Objects and Arrays": [
          "Introduction to AJAX JSON with JavaScript coding",
          "Resource Guide for lessons with source code.",
          "JavaScript Objects Example of how to use Objects in Code get object data",
          "JavaScript Arrays examples of using arrays within code items and data in array",
          "How to use objects and arrays in JavaScript code to output data.",
          "Get items in arrays and objects output the data using JavaScript for loops",
          "Explore JSON and how you can get JSON data as a JavaScript Object",
          "Use JSON data to connect to JSON files and get contents with JavaScript code",
          "JavaScript asynchronous requests using async and await promises",
          "Web Page Data with AJAX from JSON file use AJAX JavaScript code",
          "JavaScript code and JSON data for web page content. Use AJAX web development",
          "Using JavaScript how to connect to a web API endpoint for JSON data.",
          "AJAX endpoint connection for practice exploring the GitHub open API and get JSON",
          "AJAX connection to StackExchange API questions JSON data"
        ],
        "Create a Quiz Application and output Google Spreadsheet data as JSON for an API": [
          "Introduction to JavaScript Dynamic Quiz with Sheets Data",
          "Section source code and resource Guide",
          "Google Sheets JavaScript Dynamic Quiz with Sheets Data Sheet Data output",
          "How to Create a Web App of JSON Data from sheets with Apps Script",
          "AJAX Get Sheet data with JavaScript fetch Sheet as JSON object",
          "How to create an JSON object from Sheets Google Apps Script Data Object",
          "Create a JavaScript Dynamic Quiz game from Sheet Data as JSON",
          "Submit Data content to Google Spreadsheet Sheet with fetch POST",
          "Complete Quiz with Score Submission to Google Sheets"
        ],
        "Bonus Section common JSON AJAX and JavaScript questions and coding solutions.": [
          "Visual Studio Code Update",
          "AJAX JSON file coding example",
          "Async Promise Callback JavaScript.",
          "JavaScript JSON Example",
          "Template literals",
          "JavaScript Fetch",
          "AddEventListener vs onclick",
          "Chrome DevTool Customize",
          "JavaScript Try and Catch",
          "Connect to the YouTube API get video data returned",
          "For in vs For of loop of data",
          "AJAX with JavaScript fetch",
          "fetching data with JS"
        ],
        "Previous COURSE version Learn about JSON AJAX and JavaScript Objects": [
          "Please note this section contains older course content",
          "JavaScript JSON AJAX course Introduction",
          "JavaScript introduction to JSON",
          "JavaScript Multiple Objects",
          "JavaScript AJAX connection",
          "JavaScript Get JSON data using AJAX",
          "JavaScript External JSON file Data using AJAX",
          "Source Code AJAX",
          "JavaScript AJAX more details",
          "JavaScript AJAX server interaction",
          "JavaScript AJAX send data to server",
          "JavaScript AJAX post data to server",
          "Source Code POST",
          "Course Challenge Send more info to the server",
          "Challenge Source Code",
          "Resources to learn more about AJAX and JSON"
        ]
      },
      "requirements": [
        "desire to learn",
        "JavaScript HTML CSS"
      ],
      "description": "Explore JSON and how you can use JSON data from an API to update your page contents.\nJSON is short for JavaScript Object Notation which is the most commonly used data standard format for transferring of data.  Its human readable which makes it easy to read.   Its used across all modern programming language.   Because its based off JavaScript Objects understanding of how to get content from JavaScript object and arrays is essential in being able to better make use of data with JSON.\nJSON object can hold a lot of data, in a nest format which can contain objects that can be many levels deep, and arrays that might hold many items.\nAJAX is a set of technologies used to connect to server data, and update page contents without page refresh.  AJAX is now commonly used to get JSON data and provides an excellent way for web developers to create content rich interactive features for web pages.  JavaScript can be used to create page elements, update and manipulate page elements on the fly.\nTogether JSON AJAX and JavaScript is a powerful set of technologies that can be used to create amazing web experiences.\nIncludes a bonus 50 page ebook guide - loaded with source code and resources to help you learn.\n\n\nExplore how AJAX JSON and JavaScript can be applied\nJavaScript Objects\nJavaScript Arrays\nUpdating Objects and Arrays\nLoop through the data\nThe JavaScript JSON Object\nJSON files and Contents with JavaScript\nAsync and Await and Promises\nAJAX and JSON in JavaScript\nOutput JSON data into the web page\nJSON data from API source using AJAX\nGitHub API AJAX\nStackoverflow API connection example\nJavaScript is the most in demand programming language on the web today.\nLearning how to implement AJAX and use data like JSON formatted data can accelerate the amazing things that JavaScript can do within your web code.\nJSON -  JavaScript Object Notation is an open standard technology that is used to transmit data in a human readable format.   JSON is language independent.  It provides a powerful way to move data back and forth.  Learning to use JSON data in JavaScript can open the door to really powerful data handling within your applications.\nAJAX - asynchronous JavaScript and XML allows you to send and receive data from other files without page refreshing.  You can display data and information in response to the User interactions within your webpages.  Dynamic content loading without page refreshes.\nThis course is designed to help you learn how to use these two amazing technologies together.   Source files and all the code used within the course is included.  Step by Step instruction with examples of how to use JSON formatted data.  Turn JSON data into JavaScript objects and use them as needed within your code.  Load data the easy way.  AJAX allows you to take this data import one step further and load data on the fly within your JavaScript.   Course will demonstrate how to do this and a whole lot more.   As a bonus the course also covers how to send data to the server.\nJSON and AJAX are in demand skills and knowing how to use them will increase what you can do within your web pages.",
      "target_audience": [
        "Web developers",
        "JavaScript code creators",
        "HTML CSS JavaScript web developers"
      ]
    },
    {
      "title": "The Complete Java Developer Course: From Beginner to Master!",
      "url": "https://www.udemy.com/course/the-complete-java-developer-course-from-beginner-to-master/",
      "bio": "Master theory AND practice, and get comfortable with one of the world's most popular programming languages!",
      "objectives": [
        "Master the fundamentals of Java programming!",
        "Learn all the tips, tricks and theory behind the code!",
        "Build exciting portfolio projects - put your new skills to work straight away!"
      ],
      "course_content": {
        "Getting Started": [
          "Section Overview",
          "The Software You Need - an IDE and JDK",
          "Files for the course"
        ],
        "Introducing Java": [
          "Section Overview",
          "Saying \"Hello\" to Java",
          "Comments",
          "Variables, Constants, and Data Types",
          "Primitive vs Reference Types",
          "Logical Operators",
          "Arithmetic Operators",
          "User Input",
          "Project - Average of Three",
          "Relational Operators",
          "Project - MadLibs Clone",
          "Section Wrap-Up",
          "Section 2 knowledge check"
        ],
        "Control Statements": [
          "Section Overview",
          "Control Statements Overview",
          "Selection Control Statements",
          "Repetition Control Statements",
          "Continue and Break Statements",
          "Random Numbers (Side Topic)",
          "Project - Learning Packages of the Month Club",
          "Project - Divisible by Three",
          "Project - Guess the Number",
          "Section Wrap-Up",
          "Section 3 knowledge check"
        ],
        "Arrays and ArrayLists": [
          "Section Overview",
          "Arrays",
          "ArrayLists",
          "Wrapper Classes",
          "Project - Working with Arrays",
          "Project - Working with ArrayLists",
          "Project - Parallel Arrays/ArrayLists",
          "Section Wrap-Up",
          "Section 4 knowledge check"
        ],
        "Strings and the StringBuilder Class": [
          "Section Overview",
          "String Methods, Part 1",
          "String Methods, Part 2",
          "The StringBuilder Class",
          "Project - Name Permutations",
          "Section Wrap-Up"
        ],
        "Methods": [
          "Section Overview",
          "User-Defined Methods, Part 1",
          "User-Defined Methods, Part 2",
          "Method Calls and Recursion",
          "2D Arrays (Side Topic)",
          "Project - Sum of Elements",
          "Project - Tic-Tac-Toe",
          "Section Wrap-Up"
        ],
        "Introduction to Classes and Objects": [
          "Section Overview",
          "Basics of OOP (Object-Oriented Programming)",
          "Encapsulation: Fields and Methods",
          "A Rectangle Class",
          "A Book Class",
          "Project - A Bank Account Class",
          "Project - An Ice Cream Class",
          "Project - A Circle Class",
          "Section Wrap-Up"
        ],
        "File I/O and Exceptions": [
          "Section Overview",
          "File Input",
          "File Output",
          "More File I/O",
          "Project - Creating Rectangles from File",
          "Project - Creating Circles from File",
          "Section Wrap-Up"
        ],
        "More Object-Oriented Programming": [
          "Section Overview",
          "Inheritance",
          "Polymorphism",
          "Abstract Classes and Interfaces",
          "Enumerated Types",
          "Project - Employee Class Hierarchy",
          "Project - Enhancing the EmployeeDemo",
          "Section Wrap-Up",
          "Bonus"
        ]
      },
      "requirements": [
        "A computer and a willing attitude!"
      ],
      "description": "Welcome to The Complete Java Developer Course: From Beginner to Master!\n\n\nWhy learn Java?\nJava is 25+ years old, and used eeeeverywhere! Over 7.6 million developers worldwide use Java to create websites, build apps, and write programs - making it one of the most popular programming languages around!\nAlso, did you know that in the US the average Java developer salary is over $104,000 a year?!\nWhy is Java so widely used? Well, it's an all-purpose language that can run on any platform, it's quick, easy to learn, highly versatily and there's a huge community of support online as well.\n\n\n★★★★★ 'Hey Dr Baugh! Former student working as a software engineer at Ford Motor Company! Saw your post and decided to refresh my Java skills with this course! Great so far!' Ahmed Saeed\n\n\nWhy this course?!\nThis Java course is aimed at beginners, and is designed to get students coding in Java as quickly and confidently as possible! There are practical, hands-on coding challenges in every lecture, so you can practice the code straight away, and make sure you've mastered every line!\nYou'll learn all the best tips, tricks and theory behind the code, while also building some exciting portfolio projects... including:\nAverage of three\nMad-Libs clone\nPackage of the month\nDivisible by three\nGuess the number\nName permutations\nSum of elements\nTic-tac-toe\nPLUS we're currently finishing a whole new Section 7 (an introduction to classes and objects (OOP - object oriented programming) which will be added very, very soon! More sections and lectures are planned  following that, on exciting topics such as file input/output, exceptions, more on OOP (inheritance and polymorphism), generics, and collections!\n\n\nThe course is taught by the brilliant John P. Baugh, Ph.D. (4.7 instructor rating). John's a professional software engineer and consultant, as well as a Professor and Chair of Computer Science / Computer Information Systems of a college in the US. John's previous C++ course is 'highest-rated' by Udemy, and students loved John's clear, engaging and hands-on teaching style:\n★★★★★ 'Great class. John explains difficult concepts in an easy to understand way. Good job.' Rick Kennard\n★★★★★ 'An all-around excellent course! The instructor leaves no major stone unturned with C++. If you're looking to learn the very basics of C++ and get ready for more advanced stuff, you're in the right place.' Lionel Robert\n★★★★★ 'It's completely a beginner's course. Anyone who are interested to take c++ course, this is the best course in Udemy.' Sridhar Kunireddy\n\n\n...So what are you waiting for?! Start your journey from Java beginner to Java expert today!",
      "target_audience": [
        "Beginner coders, and anyone new to Java!",
        "Experienced Java programmers who want to stay sharp!",
        "Developers looking to upskill for a project or career change",
        "College students and anyone studying Java!"
      ]
    },
    {
      "title": "C# From Beginner to Advanced",
      "url": "https://www.udemy.com/course/c-sharp-from-beginner-to-advanced/",
      "bio": "A Complete Guide to learning how to program using C#. Go from Beginner to Advanced level with coding exercises!",
      "objectives": [
        "Gain general knowledge in regard to C# programming language",
        "Gain knowledge in regard to general programming concepts",
        "Read and comprehend C# code"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Getting Started with C#": [
          "Intro to C#",
          "Setting up Sublime Text to Run C#",
          "Our First Program",
          "Coding Conventions and Basic Syntax",
          "Main() and Command Line Arguments"
        ],
        "Programming Essentials": [
          "Variables",
          "Data Types",
          "Constants",
          "Nullable Types",
          "Strings",
          "Operators Part 1",
          "Operators Part 2",
          "Decision Making Part 1",
          "Decision Making Part 2",
          "Operator Overloading"
        ],
        "Loops": [
          "The while Loop",
          "The for Loop",
          "The do while Loop",
          "Nested Loops",
          "break and continue",
          "Infinite Loops",
          "Arrays"
        ],
        "Arrays": [
          "Multidimensional Arrays",
          "Jagged Arrays",
          "Defining and Calling Methods"
        ],
        "Methods": [
          "Passing Parameters by Value",
          "Passing Parameters by Reference and by Output",
          "Recursive Methods",
          "Method Overloading"
        ],
        "Classes": [
          "Defining Classes",
          "Calling Methods from Classes",
          "Class Members",
          "Constructors and Destructors",
          "Encapsulation",
          "Static Members"
        ],
        "Inheritance and Polymorphism": [
          "Inheritance",
          "Namespaces",
          "Interfaces",
          "Multiple Inheritance Using an Interface",
          "Polymorphism",
          "Back to Operator Overloading"
        ],
        "Value Types: Enum and Structures": [
          "Enums",
          "Defining a Structure",
          "Features of a Structure"
        ],
        "Console and File I/O": [
          "The Console Class and Console Input",
          "Reading, Writing, and Closing Files",
          "Reading and Writing: Text Files",
          "Reading and Writing: Binary Files",
          "Working with the Windows File System"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "PC",
        "An eager mind",
        "Patience"
      ],
      "description": "If you are looking for a C# course in order to advance your skills then look no further, you are going to love this course!\nDo not get discouraged if you have no previous knowledge or experience with C# programming. This course starts off with the mere C# basics in the beginning. However, if you do have some previous knowledge, there is always room for improvement. This course covers a plethora of interesting and useful topics. Every new chapter of the course will be linked to the previous ones in the sense that you will be utilizing what you have already learned. This course should be considered useful and interesting for both beginners and advanced students alike. The explanations should be completely straightforward and simple, making the topic easy to understand and even easier to pick up on. Plenty of examples are provided for the periodic testing of knowledge and making sure that you completely understand and know how to use what you have already learned.\nFurthermore, what is also a great advantage to this course is that you get to view all the questions that other students such as yourself have already had and their respective answers/solutions. You also have the liberty of posting your own questions and inquiries and having them answered by our very own IT professionals. You get paid expert C# technical support in this course here to answer every single question you ask!\nIf you have any suggestions on topics that have not been covered, you can send them via private message. All your suggestions are going to be taken into consideration. I will do my best to cover them as soon as possible.\nI thank you for taking the time to read through this description and hope that you decide to continue learning with me!",
      "target_audience": [
        "This course is meant for those who wish to learn programming in C#",
        "No prior programming knowledge is needed"
      ]
    },
    {
      "title": "Java For Beginners - 1st step towards becoming a Java Guru!",
      "url": "https://www.udemy.com/course/corejava/",
      "bio": "Become a Core Java Expert easily and in step-by-step manner",
      "objectives": [
        "Write Professional Java code using industry best practices",
        "Face Java interviews and tests with confidence",
        "Showcase your professional code debugging skills"
      ],
      "course_content": {},
      "requirements": [
        "A computer/laptop: I have used Windows environment for this course",
        "A small will to learn Java :)",
        "Nothing else as software used in this course are free for personal use"
      ],
      "description": "A lot of efforts and time had been put in this course so that students can become Java experts very easily. All the lectures are arranged in a specific order to maximize the learning experience.\nAlong with 22.5 hours of Video lectures, you will find 70+ coding challenges and 100+ Quiz questions, which makes it a complete Core Java learning package.\n\n\nBeing an inquisitive student myself, I always wanted to know why's of everything. I sometimes got the answers, sometimes I didn't.\nIn this course, I have tried to give why's of most of the concepts. Rather than simply accepting the rules, if you know the reason behind, it is a lot easier to understand.\n\n\nIn my teaching experience, I have observed that traditional black/white boards are extremely effective teaching aids, therefore I used lots of screen drawing to simulate the same classroom experience. In the lectures I have also included a lot of practical tips and tricks, best practices and dos and don'ts, which will help you in professional assignments.\n\n\nI will start this course by downloading, installing and configuring required software.\nThen in next section, I will help you to write your first Java program in text editor as well as Eclipse IDE and I will slowly cover following topics in detail:\n\nUnderstand JVM, JRE and JDK\nJavadoc and developer comments and their significance.\nVariables, Data Types and Operators\nControl Statements Types\nJava arrays and Command-line arguments\nPackages, classpath and User-input\nEclipse debugging in detail\nClasses, objects, constructors, initialization blocks, type of variables, methods and Garbage collection\nObject Oriented Programming Concepts: Encapsulation, Inheritance, Polymorphism and Abstraction\nAccess specifier, instanceof operator and casting\nString, StringBuilder and Wrapper classes\nException\nEnums\nTo check the details of each topic, you can download course synopsis from Add-ons section.\nIf you want to get 100% out of this course, then I recommend completing the sections in sequence, don't jump :). Solve all the questions given in Video lectures along with Java Coding Challenge exercises, to practice your newly acquired skills. Attempt all the quiz questions provided at the end of each section to validate your knowledge.\nAlthough respective source code is provided with the lectures; you can download complete workspace from Add-ons section.\nIf you have doubts, then please ask your questions in discussion board and I will reply to your queries within 24 - 48 hours.\nHope you enjoy this course and level up your Java expertise.\n\n\nNOTE:\nModules were added in JDK 9 under the project codename JIGSAW. It itself is a vast topic to learn, which is not necessary at this time for learning core java concepts.\nSo, it is recommended to work with the latest JDK 8 release.\n\n\nOnce you are confident about your core concepts, then you can proceed with learning newly added features in JDK 9 onwards.\n\n\nCopyright 2025 Udayan Khattry\nAll rights reserved. No part of this course may be reproduced in any form or by any electronic or mechanical means, including information storage and retrieval systems, without permission in writing from the author.",
      "target_audience": [
        "The course is ideal for beginners, no previous programming experience is required",
        "Software developers working in other languages, switching to Java",
        "Students / Java developers who are not confident about their current Core Java concepts",
        "Professional not doing good in Core Java interviews / assignments",
        "Java professionals with extensive knowledge and experience may not benefit much out of this course"
      ]
    },
    {
      "title": "React - Beginner to Advanced (+ Redux & Ecommerce App)",
      "url": "https://www.udemy.com/course/react-beginner-to-advanced-with-redux-ecommerce-app/",
      "bio": "Learn React from the beginning. Build interesting projects. Gain confidence to start applying for jobs...",
      "objectives": [
        "Fundamentals of ReactJS",
        "React hooks and practical applications",
        "Build cool projects using ReactJS",
        "Learn the fundamentals of Redux and Redux Toolkit",
        "Learn the Latest Version of React Router V6",
        "Learn the latest version of Firebase V9",
        "Build a Fullstack Ecommerce App"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is React?",
          "Companies that use React"
        ],
        "Environment Setup": [
          "Environmeny Setup",
          "Vscode setup"
        ],
        "JavaScript Refresher": [
          "JavaScript Refersher - Introduction",
          "Variables - var, let and const",
          "Arrow functions",
          "Ternary operator",
          "Map and Filter",
          "Spread and Rest operator",
          "Destructuring",
          "ES6 Classes - Part 1",
          "ES6 Classes - Part 2",
          "Modules - Import and Exports",
          "Modules - Default Exports"
        ],
        "React Basics": [
          "Create a React app",
          "Files and Folder Overview",
          "Hello World App",
          "Files Clean Up",
          "Components",
          "Shortcut For Creating a Component",
          "Creating a Custom Component",
          "Create a Custom Component - 2",
          "JSX",
          "Outputting Dynamic Values"
        ],
        "Styling": [
          "Styling in React",
          "Scoping CSS Files",
          "Styling Summary"
        ],
        "React Basics - Part 2": [
          "Props",
          "Setting Default Props",
          "Props Destructuring",
          "Children Props",
          "Rendering a List",
          "Handling Events"
        ],
        "Project - Profile App (Challenge)": [
          "Profile App - Intro",
          "Instructions",
          "Profile App 1 - Create React App",
          "Profile App 2 - Create Files And Folder",
          "Profile App 3 - Installing React Icons",
          "Profile App 4 - Global Styles",
          "Profile App 5 - Profile List Jsx And Css",
          "Profile App 6 - Profile JSX",
          "Profile App 6 - Profile Css",
          "Profile App 7 - Add React Icon Context",
          "Profile App 8 - Card Component",
          "Profile App 9 - Create Pofiles Props",
          "Profile App 10 - Mapping Through Profiles"
        ],
        "React Basics Part 3": [
          "What Are Hooks",
          "What Is State",
          "Hooks Folder Setup",
          "Css Utility Classes Overview",
          "Usestate - Comparative Programming 1",
          "Usestate - Comparative Programming 2",
          "Virtual Dom Vs Real Dom",
          "Counter App JS - Comparative Programming 1",
          "54 Counter App Usestate - Comparative Programming 2",
          "Counter App - State Updater Function",
          "Counter App Usestate - When Not To Use Usestate",
          "Usestate In Array 1",
          "Usestate In Array 2",
          "Usestate In Object"
        ],
        "Conditionals": [
          "Conditionals Intro",
          "Conditionals - If Else Statement",
          "Conditionals - Logical And Operator",
          "Conditionals - Ternary Operator",
          "Conditionals - Adding Css Classes Conditionally",
          "Conditionals - Conditionals With Props"
        ],
        "General React Project Setup": [
          "General project setup"
        ]
      },
      "requirements": [
        "Students should know the fundamentals of HTML, CSS and JavaScript before taking this course."
      ],
      "description": "Learn React From Absolute Scratch\nThis course would teach you the fundamentals and advanced React concepts via project-based learning.\n\n\nWhat you'll learn\nThis course is for anyone that wants to learn React and also for React developers looking to build some projects and sharpen their skills.\nRequirements:\n-- A good knowledge of JavaScript is required before you take this course.\n\nHere are some of the things you would learn:\n-- React fundamentals including components, props, hooks, state, etc\n-- React hooks such as useState, useEffect, useContext, useReducer, useRef, etc\n-- Custom hooks\n-- Learn how to use context and reducers to manage global state\n-- Build powerful, fast, user-friendly and reactive web apps\n-- Learn Redux and Redux Toolkit\n-- Build more than 10 projects\n-- Build a fullStack eCommerce website with React and Firebase\n-- Deploy React apps to Netlify and Heroku\n-- Much more...\n\n\nHere are some reasons why you should learn React right now\n1. React is declarative\nIt’s a simpler way of developing apps, and you can learn why here.\n2. React Native makes app development easier\nWhen you learn React, you can transfer your skill to mobile development using React Native.\nYou may have heard of the phrase “Write once, run anywhere” before. React Native brings that kind of philosophy to React with “Learn once, write anywhere”.\n3. The React community is amazing\nReact has a massive community of dedicated developers. The community helps to maintain and grow the open-source library, with everyone able to contribute their own components to the library.\n4. React is used by huge organisations",
      "target_audience": [
        "JavaScript developers that want to learn ReactJS"
      ]
    },
    {
      "title": "Learn Python from Basics to Production",
      "url": "https://www.udemy.com/course/learn-python-from-basics-to-production/",
      "bio": "Learn Python from scratch. Completely hands on coding course. Basics to Advance.",
      "objectives": [
        "Python fundamentals for coders and non-coders.",
        "Develop skills to think in computational way",
        "Learn logic and how to use different syntax and functions to build solutions",
        "Understand Python at its core"
      ],
      "course_content": {
        "Python Basics": [
          "Hello world with VS Code",
          "Printing Basics",
          "Printing Advance",
          "Variables in Python",
          "More about Numbers",
          "Understanding Floats",
          "Booleans in Python",
          "Common Errors and Comments",
          "Type Casting Data Type"
        ],
        "Mastering Python Strings": [
          "Strings Introduction",
          "String Indexing",
          "String Slicing",
          "String Slicing Advance",
          "String Functions - 1",
          "String Functions - 2",
          "String Practice - Name Extraction",
          "String Practice - Email Extraction"
        ],
        "Understanding Python Conditionals": [
          "Handling User Inputs",
          "If-Else Statements",
          "And and Or Operator",
          "Check Palindrome String",
          "If-Else statements Nested",
          "Checking Advance Conditions - Fuzz Buzz",
          "Writing Conditionals in an Efficient way",
          "Creating an Email Validator",
          "Enhancing the Email Validator",
          "Practise Python Conditionals & Strings"
        ],
        "Python Lists": [
          "Lists Introduction",
          "Indexing in Lists",
          "List Slicing",
          "Well, lists are mutable",
          "List Functions - Append & Pop",
          "List Functions - Insert & Remove",
          "Copying a List is never easy",
          "Shallow Copy Vs Deep copy",
          "Join and Split Functions",
          "List Practise",
          "List Functions - Sort Vs Sorted"
        ],
        "Python Iteration": [
          "Confused ROCK PAPER SCISSOR",
          "While Loops in Python",
          "Understanding Range Function",
          "For Loop Basics",
          "Sequences and For Loop",
          "Loops Practise",
          "Sequences and For Loop Advance",
          "List Comprehensions - List + Loops"
        ],
        "File Handling In Python": [
          "Writing into a file",
          "Reading Data from File",
          "Reading Data from File advance",
          "Reading Data from File - 3",
          "Resolving File Handling bug",
          "Manipulating Data read from File",
          "Appending Data into a File",
          "Pythonic way of File Handling",
          "Checking if File exists with OS Module"
        ],
        "Python Dictionaries": [
          "Dictionary Introduction",
          "Adding values in a dictionary",
          "Adding values in a dictionary - 2",
          "Dictionary Functions",
          "Dictionary Practise - User Authentication",
          "Dictionary Usecase - Menu Driven Program",
          "Dictionary Usecase - Frequency",
          "Dictionary Comprehensions"
        ],
        "Functions In Python": [
          "Functions Introduction",
          "Parameter passing in Functions",
          "Returning data from Functions",
          "Returning data from Functions - 2",
          "Returning data from Functions - 3",
          "Optional arguments in Functions",
          "*Args and **Kwargs",
          "Functions as first class citizens",
          "Nested Functions",
          "Namespaces",
          "O! Python Closures",
          "Python Generators"
        ],
        "Object Oriented Programming in Python": [
          "Classes Introduction",
          "Starting to Write the Code",
          "Acessing data members",
          "Accessing data members - 2",
          "Adding member functions in Classes",
          "Understanding Objects"
        ],
        "Banking Project Implementation with oops": [
          "Project Introduction",
          "__init__ into the Project",
          "Implementing Add and Deduct functions",
          "Implementing History feature",
          "Finalizing the Project"
        ]
      },
      "requirements": [
        "Just a device where you can stream these videos and learn Python in a new way."
      ],
      "description": "This course is for anyone who wants to learn python. I will cover the basic implementation of different functions and how to use them together to create solutions.\nWe will see different kinds of in-built functions, object-oriented programming, and how to solve different problems. We will not only learn python but problem-solving in the computational world too.\nAfter going through this course you will be ready to jump into creating real-world projects.\n\n\nI designed this course structure after finding a pattern among different students. These were a few things which were required in all fields. I combined, structured, and built this course to be a base foundation from where you can transition into any specific field. No matter if it's data science, a simple job, academics or just for fun.\n\n\nI started from very basic covering the idea behind the programming language. Then I explained each topic with their general life usage. I tried to explain the working of each bit. How to combine these tiny pieces of code and convert the result into a working model.\n\n\nThis course is enough to get you started in the world of programming.  No matter if you are a programmer or not, this course will surely help you.",
      "target_audience": [
        "Anyone who wants to learn Python.",
        "People with coding background and without coding background."
      ]
    },
    {
      "title": "Learn Programming - An Introduction For Non-Programmers",
      "url": "https://www.udemy.com/course/learn-programming-an-introduction-for-non-programmers/",
      "bio": "Learn how to write your own computer programs. This course is a stepping stone into the world of programming.",
      "objectives": [
        "Understand the basic concepts of programming",
        "Be prepared to learn any programming language"
      ],
      "course_content": {
        "Introduction to the course": [
          "Course layout and structure",
          "Downloading and installing the software we need",
          "The code for the programs we write"
        ],
        "Computers and applications": [
          "Introduction to computers and applications",
          "Machine code - the language of computers",
          "Translating to machine code. Compilers and Interpreters",
          "Programming languages",
          "Tools for programmers",
          "Summary of section 2 - Computers and applications",
          "Quiz - Computers and applications"
        ],
        "Sequence": [
          "Introduction to sequence",
          "Instructions and statments",
          "The flow of a program"
        ],
        "Data and data types": [
          "Introduction to data and data types",
          "Variables",
          "Data types",
          "Numeric data types",
          "String data type",
          "The Boolean data type",
          "Data types in other languages",
          "Summary data and data types",
          "Quiz - Data and data types"
        ],
        "Operators": [
          "Introduction to operators",
          "What is an operator",
          "Operations on numbers",
          "Operations on strings",
          "How many operators are there?",
          "Operators in other languages",
          "Summary operators",
          "Quiz - Operators"
        ],
        "Containers": [
          "Introduction to containers",
          "What is a container?",
          "List",
          "Dictionaries and tuples",
          "Are strings containers?",
          "Containers in other languages",
          "Summary containers",
          "Quiz - Containers"
        ],
        "Iteration": [
          "Introduction to iteration",
          "Defining a block of code",
          "Repeating a fixed number of times",
          "Iterating over a container",
          "Repeating until a condition is true (or false)",
          "Iteration in other languages",
          "Summary iteration",
          "Quiz - Iteration"
        ],
        "Selection": [
          "Introduction to selection",
          "The if statement, the most basic selection",
          "If not? The else statement",
          "Selection in other languages",
          "Summary selection",
          "Quiz - Selection"
        ],
        "Functions": [
          "Introduction to functions",
          "Defining a function",
          "Calling a function",
          "Passing values to a function - arguments",
          "Returning a value from a function",
          "Functions in other languages",
          "Summary functions",
          "Quiz - Functions"
        ],
        "Object oriented programming": [
          "Introduction to object oriented programming",
          "Classes and objects",
          "Objects have data and behavior",
          "Classes and objects in use",
          "Object oriented programming in other languages",
          "Summary object oriented programming",
          "Quiz - Object oriented programming"
        ]
      },
      "requirements": [
        "We will start from the very beginning. We will install the software needed as we go. You will not need any pre-knowledge at all."
      ],
      "description": "This course will help you unlock the mysteries of programming. We will step-by-step look at the fundamental building blocks found in almost all programming languages. We will use Python as our tool, but this is not an introduction to Python, our focus is on the concepts of programming.\nAfter this course you will have a solid foundation to learn any programming language as you will recognize everything you learned during this course.\n\n\nThis is a course by the author of the book Computer Programming for Absolute Beginners",
      "target_audience": [
        "This course is meant for anyone who is curios about programming, no matter if you going to study it on university or just want to learn some programming for your own use.",
        "This is NOT a course for you if you already have some programming expirience in any programming language."
      ]
    },
    {
      "title": "Salesforce Real time project on Lightning Component(AURA)",
      "url": "https://www.udemy.com/course/salesforce-real-time-project-with-lightning-component/",
      "bio": "Implement a Salesforce realtime project",
      "objectives": [
        "Real time project implementation",
        "End to end complete project implementation",
        "Salesforce Real time project with Lightning Component",
        "Lightning Component Implementation"
      ],
      "course_content": {
        "Introduction To Salesforce real time lightning component Project": [
          "Introduction To Salesforce real time lightning component Project"
        ],
        "Complete Project Requirement Document": [
          "Project Document"
        ],
        "Object Schema and field details used for complete search Home Project": [
          "Complete Schema diagram of all three objects for the project",
          "Property Owner Field in Search Home Project",
          "Property Object Field in Search Property object",
          "Property Enquiery Field in Search Home Project"
        ],
        "Install Object Schema for the Project": [
          "Package Installation"
        ],
        "Create Property result lightning component with Server side call to get records": [
          "Create Property result lightning component with Server side call to get records",
          "Sample code for Property result server side call",
          "Complete Apex class used in complete project"
        ],
        "Bonus Lecture": [
          "Other Courses You might like"
        ],
        "Display Property Images in Property Search lightning component": [
          "Display Property Images in Property Search lightning component",
          "Sample code Property result component with property image"
        ],
        "Display Property details in lightning card": [
          "Display Property details in lightning card",
          "Sample code for Displaying Property details in lightning card"
        ],
        "Adding lightning button group in Property card details": [
          "Adding lightning button group in Property card details",
          "Sample code for Adding lightning button group in Property card details"
        ],
        "Create Property Owner Component using LDS Record view form": [
          "Create Property Owner Component using LDS Record view form",
          "Sample code for Create Property Owner Component using LDS Record view form"
        ]
      },
      "requirements": [
        "This course is designed from basic to advance level"
      ],
      "description": "This tutorial is completely project implementation with using of all scenarios of lightning component. If you are familiar with lightning and wants to implement a real time project, go ahead and enroll for this tutorial.\nIf you are new to Lightning then I would suggest, please go ahead and enroll my \"Salsforce Lightning\" tutorial first and then enroll for this tutorial.\nThis project is developed with using all core concepts of lightning component where you can learn and implement this real time project with understanding of each concepts. All source codes including Object schema, Apex class, Component bundle shared with this tutorial for your reference.\nSimply subscribe this course and implement this lightning component project to have a experience with real time implementation of the project and enhance your knowledge to be lightning expert .\nWe have developed this project with Property Filter module, Property listed module, property details navigation module, property location tag module.\nDetail implementation of -:\nObject Schema and field details used for  Project ( can create or can install provided package)\nCreate lightning component with Server side call to get records\nDisplay server records in Search\nDisplay details of each record in custom component\nButton logic implementation\nNavigation to other record and pages in aura\nUse of Event to communicate between components\ncomponent composition\nuse of map and many more with detailed explanation\nEach module explained very clearly with live code and development and explained each resource deeply to make everyone to understand this clearly.",
      "target_audience": [
        "salesforce",
        "salesforce administrator",
        "salesforce developer",
        "Software developer"
      ]
    },
    {
      "title": "Complete Scala 3 development masterclass",
      "url": "https://www.udemy.com/course/completescala3/",
      "bio": "Master the fundamentals and advanced features of Scala 3 development",
      "objectives": [
        "Scala",
        "Scala 3",
        "Basics of software development",
        "Advanced Scala concepts",
        "Backend dev",
        "High performance development"
      ],
      "course_content": {},
      "requirements": [
        "Mac, PC or Linux",
        "Interest in Scala development"
      ],
      "description": "This course is a unique experience on Udemy.\nWhile there are a lot of Scala 3 resources online to choose from,  this is the only course that takes you from a complete beginner in software development, teaches you the fundamentals, advanced topics, and makes you an expert in this field.\nIn addition, you have loads of practice exercises, challenges and projects to work on. I didn't just add a bunch of exercises at the end. Instead, each concept is put in code and practiced so that we make sure you apply and learn everything through action.\nScala 3 is an excellent language for building highly data intensive, distributed applications and systems. It is used by many high profile companies like Uber, LinkedIn and Netflix to handle their backend functionality. It is constantly growing in popularity, and with the introductions of Scala 3, we see more and more developers and companies start to use it for their projects.\nWith this course you get on-demand videos, exercises and most importantly projects to apply the knowledge we talk about.\nI've spent years building projects in Scala, and years again teaching people how to build code for themselves.\nWe will cover many topics such as\nlanguage fundamentals\ncollections\nflow control\nloops\nhandling errors and exceptions\nfunctions\npackages\nAnd we will put everything in practice through examples and projects.\nIf you want to take ONE COURSE to master Scala 3 take this course.",
      "target_audience": [
        "Complete beginner Scala developers",
        "Intermediate Scala developers"
      ]
    },
    {
      "title": "Python for Data Science with Assignments",
      "url": "https://www.udemy.com/course/python-for-beginners-learn-fundamentals-and-build-projects/",
      "bio": "A Comprehensive and Practical Hands-On Guide to Learning Python for Beginners, Aspiring Developers, Self-Learners, etc.",
      "objectives": [
        "Real-world use cases of Python and its versatility.",
        "Installation of Python on both Mac and Windows operating systems.",
        "Fundamentals of programming with Python, including variables and data types.",
        "Working with various operators in Python to perform operations.",
        "Handling data using essential data structures like lists, tuples, sets, and dictionaries.",
        "Utilizing functions and working with parameters and arguments.",
        "Employing filter, map, and zip functions for data processing.",
        "Exploring analytical and aggregate functions for data analysis.",
        "Using built-in functions for regular expressions and handling special characters and sets.",
        "Iterating over elements using for loops and while loops.",
        "Understanding the object-oriented programming (OOP) concepts and principles.",
        "Working with date and time classes, including TimeDelta for time manipulation.",
        "Fundamental concepts and importance of statistics in various fields.",
        "How to use statistics for effective data analysis and decision-making.",
        "Introduction to Python for statistical analysis, including data manipulation and visualization.",
        "Different types of data and their significance in statistical analysis.",
        "Measures of central tendency, spread, dependence, shape, and position.",
        "How to calculate and interpret standard scores and probabilities.",
        "Key concepts in probability theory, set theory, and conditional probability.",
        "Understanding Bayes' Theorem and its applications.",
        "Permutations, combinations, and their role in solving real-world problems.",
        "Practical knowledge of various statistical tests, including t-tests, chi-squared tests, and ANOVA, for hypothesis testing and inference."
      ],
      "course_content": {
        "Basics of Python": [
          "Real world use cases of Python",
          "Installation of Anaconda for Windows and macOS",
          "Introduction to Variables",
          "Introduction to Data Types and Type Casting",
          "Scope of Variables",
          "Introduction to Operators",
          "Quiz on Basics of Python"
        ],
        "Introduction to Data Structures": [
          "Introduction to Lists and Tuples",
          "Introduction to Sets and Dictionaries",
          "Introduction to Stacks and Queues",
          "Introduction to Space and Time Complexity",
          "Introduction to Sorting Algorithms",
          "Introduction to Searching Algorithms",
          "Quiz on Data Structures"
        ],
        "Introduction to Functions in Python": [
          "Introduction to Parameters and Arguments",
          "Introduction to Python Modules",
          "Introduction to Filter, Map, and Zip Functions",
          "Introduction to List, Set and Dictionary Comprehensions",
          "Introduction to Lambda Functions",
          "Introduction to Analytical and Aggregate Functions",
          "Quiz on Functions in Python"
        ],
        "Strings and Regular Expressions": [
          "Introduction to Strings",
          "Introduction to Important String Functions",
          "Introduction to String Formatting and User Input",
          "Introduction to Meta Characters",
          "Introduction to Built-in Functions for Regular Expressions",
          "Special Characters and Sets for Regular Expressions",
          "Quiz on Strings and Regular Expressions"
        ],
        "Loops and Conditionals": [
          "Introduction to Conditional Statements",
          "Introduction to For Loops",
          "Introduction to While Loops",
          "Introduction to Break and Continue",
          "Using Conditional Statements in Loops",
          "Nested Loops and Conditional Statements",
          "Quiz on Loops and Conditionals"
        ],
        "OOPs and Date-Time": [
          "Introduction to OOPs Concept",
          "Introduction to Inheritance",
          "Introduction to Encapsulation",
          "Introduction to Polymorphism",
          "Introduction to Date and Time Class",
          "Introduction to TimeDelta Class",
          "Quiz on OOPs and Date-Time"
        ],
        "Introduction to Statistics": [
          "Introduction to Statistics and its importance",
          "Explain the role of statistics in data analysis",
          "Introduction to Python for Statistical Analysis",
          "Quiz on Introduction to Statistics"
        ],
        "Statistics: Introduction to Descriptive Statistics": [
          "Types of Data",
          "Measures of Central Tendency",
          "Measures of Spread",
          "Measures of Dependence",
          "Measures of Shape and Position",
          "Measures of Standard Scores",
          "Quiz on Descriptive Statistics"
        ],
        "Introduction to Basic and Conditional Probability": [
          "Introduction to Basic Probability",
          "Introduction to Set Theory",
          "Introduction to Conditional Probability",
          "Introduction to Bayes Theorem",
          "Introduction to Permutations and Combinations",
          "Introduction to Random Variables",
          "Introduction to Probability Distribution Functions",
          "Quiz on Basic and Conditional Probability"
        ],
        "Introduction to Inferential Statistics": [
          "Introduction to Normal Distribution",
          "Introduction to Skewness and Kurtosis",
          "Introduction to Statistical Transformations",
          "Introduction to Sample and Population Mean",
          "Introduction to Central Limit Theorem",
          "Introduction to Bias and Variance",
          "Introduction to Maximum Likelihood Estimation",
          "Introduction to Confidence Intervals",
          "Introduction to Correlations",
          "Introduction to Sampling Methods",
          "Quiz on Inferential Statistics"
        ]
      },
      "requirements": [
        "Students should have a general understanding of how to operate a computer.",
        "Be comfortable with common tasks like file management and using a web browser.",
        "No Prior Programming Experience Required.",
        "Students should have Python installed on their computers.",
        "A positive attitude and a willingness to learn and explore new concepts are essential for getting the most out of this course.",
        "A basic understanding of mathematics, including algebra and arithmetic.",
        "Familiarity with fundamental concepts in data analysis and problem-solving.",
        "A willingness to learn and engage with statistical concepts and Python programming.",
        "Basic knowledge of Python is a plus but not mandatory, as introductory Python concepts will be covered in the course."
      ],
      "description": "Are you ready to embark on an exciting journey into the world of Python programming? This comprehensive course is designed to take you from a Python novice to a proficient programmer, equipping you with the skills to tackle real-world projects, automate tasks, perform data analysis, and excel in coding interviews.\n\n\nIn this course, you'll explore the following key topics through practical hands-on exercises and real-world examples:\n- Discover real-world use cases of Python and understand its versatility in various domains.\n- Learn how to install Python on both Mac and Windows operating systems to kickstart your programming journey.\n- Grasp the fundamentals of Python programming, starting with variables and their scope.\n- Dive into data types and type casting to effectively manage different kinds of data.\n- Gain insight into essential Python operators to perform various operations with ease.\n- Explore essential data structures like lists, tuples, sets, and dictionaries for efficient data manipulation.\n- Learn about stacks and queues and their applications in solving real-world problems.\n- Understand the space and time complexity of algorithms and their impact on code performance.\n- Study sorting and searching algorithms to efficiently organize and retrieve data.\n- Master the concept of parameters and arguments to write flexible and reusable functions.\n- Uncover the power of Python modules and their significance in building modular applications.\n- Utilize filter, map, and zip functions for streamlined data processing.\n- Harness the flexibility of lambda functions to write concise and efficient code.\n- Master list, set, and dictionary comprehensions for elegant data manipulation.\n- Perform data analysis using analytical and aggregate functions to gain valuable insights.\n- Handle strings and discover important string functions for text manipulation.\n- Learn string formatting and user input techniques for interactive programming.\n- Gain proficiency in working with meta characters and implementing regular expressions.\n- Unlock the potential of built-in functions for regular expressions, and handle special characters and sets.\n- Implement conditional statements for decision-making in your code.\n- Iterate over elements using for loops and while loops to process data efficiently.\n- Control loop flow with break and continue statements for better program control.\n- Combine conditional statements and loops effectively to tackle complex problems.\n- Grasp the fundamentals of object-oriented programming (OOPs) and its role in building robust applications.\n- Understand inheritance, encapsulation, and polymorphism, and leverage them to write efficient code.\n- Explore the Date and Time class for working with dates and times effectively.\n- Utilize the TimeDelta class for precise time manipulation in your Python programs.\n- Delve into the world of data-driven insights and discover how statistics plays a pivotal role in shaping our understanding of information.\n- Equip yourself with the essential Python skills required for effective data manipulation and visualization.\n- Learn to categorize data, setting the stage for meaningful analysis.\n- Discover how to summarize data with measures like mean, median, and mode.\n- Explore the variability in data using concepts like range, variance, and standard deviation.\n- Understand relationships between variables with correlation and covariance.\n- Grasp the shape and distribution of data using techniques like quartiles and percentiles.\n- Learn to standardize data and calculate z-scores.\n- Dive into probability theory and its practical applications.\n- Lay the foundation for probability calculations with set theory.\n- Explore the probability of events under certain conditions.\n- Uncover the power of Bayesian probability in real-world scenarios.\n- Solve complex counting problems with ease.\n- Understand the concept of random variables and their role in probability.\n- Explore various probability distributions and their applications.\n\n\nJoin us on this enriching journey, and let's unlock the power of Python together! Whether you're an absolute beginner or looking to expand your programming skills, this course provides you with a solid foundation and practical expertise to succeed in your Python endeavors. Enroll now and start your Python programming adventure!",
      "target_audience": [
        "Beginners with no prior programming experience.",
        "Students or professionals in various fields, including business, science, social sciences, and healthcare, who want to enhance their data analysis skills.",
        "Anyone interested in automating tasks or data analysis.",
        "Data analysts, researchers, and scientists seeking to strengthen their statistical foundations and Python programming skills.",
        "Anyone interested in gaining a deeper understanding of statistical concepts and their practical applications.",
        "Beginners with no prior statistical knowledge but with a curiosity to learn and apply statistical methods.",
        "Professionals looking to advance their career by acquiring valuable statistical and data analysis skills.",
        "Individuals preparing for standardized tests or exams that include statistical and data analysis components."
      ]
    },
    {
      "title": "Spring Boot Microservices Professional eCommerce Masterclass",
      "url": "https://www.udemy.com/course/java-spring-boot-microservices-with-spring-cloud-k8s-docker/",
      "bio": "[70+ HOURS] Microservices with Java Spring Cloud, Security, Kubernetes, Docker, SpringBoot, RabbitMQ, Kafka, Grafana",
      "objectives": [
        "BUILD A REAL-WORLD E-COMMERCE MICROSERVICES APPLICATION: Step-by-step development of a scalable, production-grade project.",
        "MASTER SPRING BOOT MICROSERVICES: Learn how to design and build cloud-native microservices using Spring Boot 3.",
        "DEVELOP CORE MICROSERVICES: Implement product catalog, user authentication, order management, and payment services.",
        "CONTAINERIZE WITH DOCKER & DEPLOY WITH KUBERNETES [K8S]: Gain hands-on experience in containerization and orchestration.",
        "APACHE KAFKA & SPRING CLOUD STREAMS: Become a messaging and streaming pro by seeing real world usage of these technology in Microservices Architecture",
        "IMPLEMENT SECURE MICROSERVICES ARCHITECTURE: Use JWT, OAuth2, and Keycloak for authentication and API security.",
        "LEARN SCALABLE, HIGH-PERFORMANCE PATTERNS: Build resilient, observable microservices with real-world communication strategies.",
        "MASTER SPRING BOOT & REST API DEVELOPMENT: Build robust REST APIs with Spring Boot through hands-on projects and real-world examples.",
        "LEVEL UP WITH JPA & DATABASES: Integrate and manage data using JPA, PostgreSQL, and MongoDB to power dynamic applications.",
        "SPRING SECURITY: Secure applications using Keycloak & OAuth2. We cover OAuth2 flows like - Auth Code, PKCE, Client Credentials with Refresh Token Strategy",
        "MONOLITH TO MICROSERVICES ARCHITECTURE: Seamlessly transition from monolithic to microservices architecture.",
        "MULTI CONTAINER SETUPS: Dockerize Spring Boot applications and manage multi-container setups.",
        "DEPLOY TO K8S: Deploy and orchestrate scalable microservices using Kubernetes.",
        "INTERSERVICE COMMUNICATION: Implement inter-service communication with New Rest Clients, RestTemplate and OpenFeign.",
        "OBSERVABILITY: Monitor and optimize your microservices with observability techniques. Monitor and trace microservices with Zipkin and Micrometer.",
        "MULTI DATBASE APPLICATION: Integrate and configure PostgreSQL and MongoDB databases using Docker.",
        "SPRING CLOUD EUREKA SERVER: Utilize Eureka for effective service registry and discoverability."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with Java syntax and object-oriented programming concepts.",
        "Access to a computer with internet, and the ability to install Java, IntelliJ, Docker, and Kubernetes.",
        "An open mind and a willingness to dive into new concepts and technologies, even if you’re a beginner."
      ],
      "description": "Unlock the power of microservices with our comprehensive course, \"Master Spring Boot Microservices with Kubernetes & Docker.\" This course is designed for Java developers looking to transition from monolithic applications to microservices architecture, leveraging the power of Spring Boot, JPA, Kafka, RabbitMQ, Grafana, Loki, Spring Cloud Gateway, Spring Security, Kubernetes, and Docker.\nKey Highlights:\nStep-by-Step Transition: Start with the basics of Spring Boot, build your first REST API, and gradually move towards creating microservices.\nComprehensive Setup: Detailed instructions for setting up Java, IntelliJ, Docker, and Kubernetes on both Windows and Mac.\nIn-Depth API Development: Learn about API requests, status codes, and build robust APIs with Spring Boot.\nDatabase Integration: Master JPA, H2, and PostgreSQL. Learn to configure and test databases using Docker and Docker Compose.\nAdvanced Spring Boot Features: Explore Spring Boot Actuator, Spring Cloud Gateway, Config Server, and API Gateways.\nMicroservices Architecture: Understand the principles, advantages, and challenges of microservices. Implement inter-service communication, service registry with Eureka, and distributed tracing with Zipkin.\nSecurity and Best Practices: Secure your applications with proper configuration management, encryption, and resilience patterns using Resilience4J.\nHands-On Projects: Build real-world projects, including a job service, company service, and review service. Containerize and deploy them using Docker and Kubernetes.\nEnd-to-End Testing: Ensure your applications are production-ready with comprehensive testing strategies.\nWhat You Will Learn:\nMaster Spring Boot Basics: Setting up projects, understanding dependencies, creating APIs, and configuring databases.\nImplement Microservices Architecture: Designing, developing, and testing microservices. Learn domain-driven design and service identification.\nContainerization and Orchestration: Dockerize your Spring Boot applications, manage multi-container setups with Docker Compose, and deploy them on Kubernetes.\nService Communication: Use RestTemplate, OpenFeign, and Eureka for seamless inter-service communication.\nMonitoring and Management: Integrate Spring Boot Actuator, Micrometer, and Zipkin for monitoring and tracing.\nFault Tolerance Techniques: Implement circuit breakers, retries, and rate limiting with Resilience4J.\nDatabase Configuration: Work with PostgreSQL and Docker to manage database configurations.\nSecurity Best Practices: Secure your configurations, implement encryption, and follow best practices.\nReal-World Projects: Build and deploy job service, company service, and review service projects.\nAdvanced Kubernetes Deployment: Deploy and manage your microservices on Kubernetes.\nWho Should Enroll:\nJava Developers: Looking to enhance their skills in Spring Boot and microservices.\nFull Stack Java Developers: Transitioning from monolithic to microservices architecture.\nDevOps Engineers: Interested in containerization and orchestration with Docker and Kubernetes.\nSoftware Engineers: Aiming to master backend development with Spring Boot and microservices.\nJoin us on this transformative journey and become a master of Spring Boot, Kubernetes, and Docker. Enroll now and take the first step towards building scalable, resilient, and efficient microservices!",
      "target_audience": [
        "Java Developers: Looking to enhance their backend development skills with Spring Boot and microservices.",
        "Full Stack Java Developers: Transitioning from monolithic applications to scalable microservices architecture.",
        "DevOps Engineers: Interested in containerization and orchestration with Docker and Kubernetes to streamline deployment and management.",
        "Software Engineers: Aiming to build resilient and efficient applications using the latest industry practices and tools.",
        "Tech Enthusiasts and Learners: Eager to dive into microservices, Docker, and Kubernetes, even with minimal prior experience."
      ]
    },
    {
      "title": "JavaScript Programming from A-Z: Learn to Code in JavaScript",
      "url": "https://www.udemy.com/course/complete-javascript/",
      "bio": "JavaScript: Learn to write clear & efficient code in JavaScript. Learn JavaScript. Complete JavaScript Guide. JavaScript",
      "objectives": [
        "The basic structure of JavaScript",
        "The components of JavaScript",
        "Learn how to write clear and effective code",
        "Understand where to place JavaScript code for best results",
        "Learn how to use variables and operators",
        "Learn how to use arrays",
        "Learn about the power of functions",
        "Learn how to work with objects",
        "Discover what are conditional statements and how to create them"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "JavaScript from A-Z": [
          "Commenting and How Does it All Works",
          "Variables",
          "More About Variables",
          "Using Variables",
          "Functions",
          "Playing with Functions",
          "Functions With Parameters",
          "Multiple Parameters in Function",
          "Return Statement",
          "Calling Functions From Another Function",
          "Global and Local Variables",
          "Math",
          "Assignment Operators",
          "If Statement",
          "Else Statement",
          "Nested Statements and Boolean",
          "Complex Conditions",
          "Switch Statement",
          "For Loop",
          "While Loop",
          "Do While Loop",
          "Event Handlers",
          "More Event Handlers",
          "Objects",
          "Creating Propertie for Object",
          "Object Initializers",
          "Arrays",
          "Multiple Choices of Creating Array",
          "Arrays With Properties and Methods",
          "Pop and Join Methods with Arrays",
          "Sort, Reverse, Push Methods with Arrays",
          "Creating Array Through the For Loop",
          "Easier Method How to Output the Whole Array",
          "Associative Arrays",
          "Math Objects",
          "Date Objects",
          "Identifying the Forms",
          "Accessing the Forms",
          "Validating the Form"
        ]
      },
      "requirements": [
        "You should have Atom installed on your computer.",
        "You should have access to the Internet."
      ],
      "description": "JavaScript lies at the root of every modern web application, serving as the backbone for a vast array of tools and technologies. It powers everything from social networking platforms like Twitter and Instagram to browser-based applications and gaming engines such as Phaser and Babylon. Web developers around the world rely on JavaScript to create dynamic, interactive features that engage users and significantly enhance the overall user experience, making it an indispensable skill in the developer's toolkit.\nJavaScript is an incredibly flexible and powerful programming language, capable of handling everything from small scripts to the creation of full-scale, complex applications that drive modern businesses and entertainment platforms. Its versatility ensures that it remains one of the most popular languages in the world of web development.\nThis course takes a deep dive into the JavaScript language, equipping you with the skills to write efficient, elegant, and maintainable code. It offers a comprehensive journey, starting with foundational JavaScript concepts and advancing to more sophisticated topics, such as working with objects, functions, and methods. To simplify the learning process, this course is packed with detailed code examples and clear explanations, ensuring you grasp how to implement each concept effectively.\nWhether JavaScript is your first programming language or you’re adding it to your skill set to build more complex and interactive web pages, this course is an excellent starting point.\nWhy wait? Enroll today and unlock your potential!",
      "target_audience": [
        "Anyone who wants to learn how to write JavaScript code",
        "Anyone who wants to build a solid base of JavaScript"
      ]
    },
    {
      "title": "Learn ASP NET with Bootstrap,Entity Framework,JavaScript,C#",
      "url": "https://www.udemy.com/course/learn_aspnet_bootstrap_entityframework/",
      "bio": "Learn to Build Production based Web Applications with Microsoft’s ASP.NET, C#, Entity Framework, JavaScript & Bootstrap.",
      "objectives": [
        "Learn Object Oriented Programming Basics with C#",
        "Learn How to Interact with a SQL Server Database using Entity Framework",
        "Learn the basics of the ASPNET Web Forms architecture",
        "Work with Standard, Data, and Validation Controls",
        "Learn About Session Management",
        "Learn the basics of the webconfig file",
        "Work with Linq to Entities for Data Access",
        "Learn to Incorporate Bootstrap with all Standard, Data, and Validation Controls",
        "Learn Bootstrap fundamentals for designing nice user interfaces",
        "Create an ASPNET project and test it in a web browser"
      ],
      "course_content": {
        "Introduction To ASP.NET and Visual Studio": [
          "Introduction To ASP.NET",
          "DEMO - Installing Visual Studio",
          "ASP.NET Web Form Features",
          "Summary",
          "Downloads",
          "ASP.NET Introduction Quiz"
        ],
        "Introduction to Bootstrap": [
          "Introduction To Bootstrap",
          "Bootstrap Components and Summary",
          "Downloads",
          "Bootstrap Introduction Quiz"
        ],
        "ASP.NET Server Controls with HTML5 and Bootstrap": [
          "DEMO - First Web Application Project",
          "DEMO - ASP.Net Web Forms Application Structure and Features",
          "DEMO - ASP.NET Textbox and Button Control",
          "DEMO - Bootstrap ASP.NET Textbox and Button Control",
          "DEMO - ASP.NET FileUpload and DropDownlist Control",
          "DEMO - Bootstrap ASP.NET FileUpload and DropDownlist Control",
          "DEMO - ASP.NET Calendar Control, BulletedList, and other Server Controls",
          "Summary",
          "Downloads",
          "ASP.NET Server Controls Quiz"
        ],
        "C# Fundamentals": [
          "Introduction to C#",
          "Object Oriented Programming Basics",
          "DEMO - Create First Class",
          "Implement Namespaces and Variables",
          "Methods",
          "Arrays",
          "Loops",
          "Conditions and Operators",
          "Server Control Object Oriented Programming Demo",
          "Summary",
          "Downloads and Source Code",
          "C# Introduction Quiz"
        ],
        "Master Pages and Web User Controls": [
          "Introduction To Master Pages",
          "DEMO - Create Your First Master Page",
          "Introduction To User Controls",
          "DEMO - Create Your First User Control",
          "Summary",
          "Downloads and Source Code"
        ],
        "Session Management": [
          "Introduction To State Management in ASP.NET",
          "Introduction To Client Side State Management",
          "DEMO - Viewstate Implementation",
          "DEMO - HiddenFields",
          "Demo - Cookies",
          "DEMO - QueryStrings",
          "Introduction To Sever Side State Management",
          "DEMO - Session and Application State",
          "Summary State Management",
          "Downloads and Source Code"
        ],
        "Jquery and JavaScript in ASP.NET": [
          "Introduction To JavaScript and JQuery",
          "DEMO - Internal and External Scripts",
          "DEMO- Jquery and JavaScript Onload and DOM Script",
          "DEMO - Jquery and JavaScript Onclick Event",
          "DEMO - Jquery and JavaScript Variables",
          "DEMO - Jquery and JavaScript Arrays",
          "DEMO - Events Focus and Blur Jquery",
          "Summary JavaScript and Jquery",
          "Downloads and Source Code"
        ],
        "ASP.NET AJAX": [
          "Introduction ASP.NET AJAX",
          "DEMO - UpdatePanel and ScriptManager",
          "DEMO - ASP.NET UpdateProgress Control",
          "DEMO - ASP.NET AJAX Timer Control",
          "DEMO - Asp.net Ajax AsyncTriggers",
          "DEMO - Asp.net Ajax Control Toolkit",
          "Summary- ASP.NET Ajax",
          "Downloads and Source Code"
        ],
        "Entity Framework Basics": [
          "Introduction to Entity Framework",
          "DEMO - Create First SQL Script",
          "DEMO - Create First Entity Data Model",
          "DEMO - Entity Framework Select",
          "DEMO - Entity Framework Delete",
          "DEMO - Entity Framework Insert",
          "DEMO - Entity Framework Update",
          "DEMO - Entity Framework Stored Procedure",
          "Summary - Entity Framework",
          "Downloads and Source Code"
        ],
        "ASP.NET Data and DataSource Controls": [
          "Introduction To Data Bound and Data Source Controls",
          "DEMO - ListView Control and SqlDataSource Control",
          "DEMO - DetailsView Control and ObjectDataSource Control",
          "DEMO - Gridview Control and LinqDataSource Control",
          "DEMO - EntityFramework and Gridview Control",
          "DEMO - Repeater Control and SqlDataSource Control",
          "Summary - DataBound and DataSource Controls"
        ]
      },
      "requirements": [
        "Install Visual Studio (Web or Professional Version)",
        "Basic Knowledge of HTML, CSS, and JavaScript",
        "Basic Knowledge in C# and Sql Server"
      ],
      "description": "In this course, you will learn how to create an Asp.Net Web Forms application from scratch, while implementing the Responsive Design Framework Bootstrap. We will start with the installation of Visual Studio.\n\nFrom there, we will learn about the different server controls such as a Listbox, Dropdownlist, File Upload controls and more while structuring these controls with Bootstrap for a clean user interface design.\nWe will then implement different data controls such as a Gridview, Formview, and Repeaters. These controls will be incorporated within Entity Framework and Sql Server for the purpose of advanced data access techniques..\nStudents who complete this course will acquire the skills for creating advanced Asp.Net web applications while implementing Bootstrap and Entity Framework.\nSource Code will be made available. Once the student finishes this course, They will be able to create advanced .NET applications that will be functional on any device.",
      "target_audience": [
        "Anyone who is interested in learning ASPNET and Bootstrap",
        "Anyone who is interested in learning Entity Framework and Basic C#"
      ]
    },
    {
      "title": "Github introduction to version control and remote files",
      "url": "https://www.udemy.com/course/github-introduction-to-version-control-and-remote-files/",
      "bio": "Introduction guide to using Github starter commands to get going quickly",
      "objectives": [
        "access github",
        "understand what github is",
        "be able to pull and push content to github",
        "create new branches and merge branches"
      ],
      "course_content": {
        "Learn about Git and how to use it": [
          "Github course introduction",
          "Introduction to github",
          "Download Git install on windows terminal GUI app",
          "GitHub setup on computer",
          "Create a repository",
          "Making a git commit pull from host machine",
          "New folder new files connected",
          "creating a new branch",
          "Merging pull requests",
          "command line merge",
          "Merge pull requests",
          "Git logs history",
          "Git reset"
        ],
        "Resources": [
          "GitHub Cheat Sheet"
        ]
      },
      "requirements": [
        "know how to access a terminal",
        "basic coding",
        "desire to learn"
      ],
      "description": "Learn how to Github to push and pull content files.\nWe show you all the basic commands you need to know in order to create branches, switch branches, add files to the repository and merge files.\nWe show you how to use Github as a version control system to share and collaborate between others.\nEverything you need to learn about using GitHub is provided within this course.\n\nquick lessons get right to the point\nfully covered topics with real world examples\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions",
      "target_audience": [
        "web developers",
        "project managers",
        "web managers",
        "digital managers",
        "technical",
        "administrators",
        "web coders",
        "anyone who wants to learn about version control"
      ]
    },
    {
      "title": "Learn How to Build a Website with jQuery",
      "url": "https://www.udemy.com/course/learn-how-to-code-jquery/",
      "bio": "Learn jQuery in One Month",
      "objectives": [
        "Use jQuery to create interactive sites",
        "Have a better understanding of how JavaScript works",
        "Build real-life jQuery projects, using filtering and local storage",
        "Use the DOM, and work with an external library"
      ],
      "course_content": {},
      "requirements": [
        "Some HTML & CSS experience is ideal",
        "Fluency in English",
        "Come self-driven and motivated to learn!"
      ],
      "description": "Do you have a website, but can’t figure out how to make it interactive by adding forms, drop-down menus, or filtering lists? Had a hard time trying to learn jQuery or JavaScript in the past? Feeling totally in the deep end? By learning jQuery with One Month you can easily change that.\nOne Month jQuery is a series of video lessons and tutorials that show anyone -- even a total beginner -- how to build four real-world projects that you can add to your website. You will learn how to make your website more interactive and engaging using jQuery.\nWhen you sign up, you immediately get access to a member’s area where you can learn jQuery online and take each lesson at your own pace. Through engaging iQuery tutorials, you’ll learn how to interact with the Document Object Model (DOM), use web developer tools, and get started with reading and understanding documentation to help you take the reins of your own projects -- sounds fancy, huh? We promise that it’s not as complicated as it sounds. Each lesson acts as a jQuery tutorial for beginners as we break everything down along the way making it easier than ever to learn jQuery online.",
      "target_audience": [
        "Designers who want to get into front-end development",
        "Creatives who want to make their own site interactive",
        "Anyone with past struggles learning Javascript or jQuery"
      ]
    },
    {
      "title": "C# Basics for Beginners: Learn Coding with C#",
      "url": "https://www.udemy.com/course/c-sharp-basics/",
      "bio": "Learn C# Fundamentals in 2 Hours and Jump-Start Your Career in IT. C# Programming Basics Explained for Beginners",
      "objectives": [
        "Learn the fundamentals of C# and .NET Framework",
        "Learn the basics of Programming with C#",
        "Work with primitive and non-primitive types",
        "Work with conditional statements",
        "Work with loops",
        "Debug your code",
        "Write clean C# Code",
        "Work with date and time",
        "Work with Classes and Objects",
        "Work with Arrays",
        "Understand Object Oriented Programming with C#"
      ],
      "course_content": {},
      "requirements": [
        "Desire to learn programming",
        "Students don't need any previous experience, everything in this course will be explained for absolute beginners"
      ],
      "description": "Start Learning C# from Scratch!\nLearn C# Fundamentals in 2 Hours, Not Months!\nThis course is for beginners or people who want to refresh their knowledge in programming with C#.\nC# is very intuitive and easy to learn programming language, which can be used for many different purposes, such as:\nBuilding Web Applications\nGame Development\nMobile Development (iOS and Android mobile applications)\nDesktop Applications\nWindows client applications\nWindows services\nBackend services\nBlockchains and  Cryptocurrency\nInternet of Things (IoT) devices and much more\nIn the beginning of your C# learning experience, programming will be hard and that's why you should not try to learn everything at once.\nIn this course you will learn basic coding skills with C# and all the information you need to transfer to the IT field.\nAs a complete beginner you need to focus on the Fundamentals and build a solid foundation of your basic programming skills.\nIn this C# course you will get the best step-by-step training with real life coding examples and exercises.\nYou don't need anything to start with the course. We will start from absolute zero.\nFirst - We will Install Visual Studio - this is the environment where we write our code.\nNext - You will understand the basics of programming (doesn't matter the programming language).\nAfter that I will teach you Fundamentals that you need to start with, such as:\nVariables\nMethods/Functions\nClasses\nNext - We will start writing logic in our code, using:\nConditional Statements\nLoops\nInheritance (Basic OOP Principle)\nAnd we will finish with more complex programming, introducing you to:\nEnums\nProperties\nInterfaces\nDebugging your code and more\n\n\nIf You Are Someone Who:\nWant to Learn Programming with C#\nWant to have Better Career Options\nWant to make More Money at Your Job or as a Freelancer\nWant to achieve Financial Freedom and Enjoy Life\nEnroll in the Course Today and Get Started!\n\nThis course comes with a 30-day 100% Money Back Guarantee, so if you aren't happy with your purchase, I will refund your course - no questions asked!\nYou will also get:\n- Support and Answers to All Your Questions During the Course\n- Lifetime Access\n- Certificate of Completion\nNow go Ahead and Click the Enroll Button.\nI'll See You in the First Lesson!",
      "target_audience": [
        "Anyone who wants to Learn the Fundamentals of Programming",
        "Anyone who wants to Learn the C# Programming Language",
        "Anyone who wants to change his career and enter a high paying job in the IT field",
        "Beginners with no coding experience who want to see if programming is for them"
      ]
    },
    {
      "title": "Python Best Practices: Learn to Write Clean Python Code",
      "url": "https://www.udemy.com/course/python-best-practices-write-clean-python-code/",
      "bio": "Learn to Write Clean, Readable, and Maintainable Python Code Following the Python Style Guide PEP 8 (+ Tips and Tools)",
      "objectives": [
        "How to write Clean Python Code following the Python Style Guide (PEP 8).",
        "Best practices for naming variables, functions, classes, methods, and sequences.",
        "Best practices for indentation, line breaks, blank lines, and whitespaces in Python.",
        "How to write clean Python loops with enumerate(), zip(), break, and the else clause.",
        "Best practices to work with Object-Oriented Programming in Python.",
        "How to work with files following the Python Style Guide.",
        "Tips to write more \"pythonic\" code (swap variables, list comprehensions, merge dictionaries, the walrus operator, and more).",
        "How to document your code with block comments, in-line comments, and docstrings."
      ],
      "course_content": {},
      "requirements": [
        "You should have basic Python knowledge.",
        "The course will teach you the best practices for each topic, assuming you have some prior knowledge.",
        "You should have Python 3 installed and a code editor to write your code.",
        "During the lectures, we will use Visual Studio Code but you can use any code editor of your choice.",
        "Enthusiasm and dedication to learn how to write clean, concise, and readable Python code."
      ],
      "description": "Learn to write Clean Python Code following the Official Python Style Guide and Python Best Practices. Expand your skills with engaging video lectures, diagrams, quizzes, articles, and additional resources.\nThis course is your Python Best Practices Handbook where you can find Python best practices and tips to write \"pythonic\" code.\nLearn to Write Clean Python Code and Take your Python Skills to the Next Level\nWrite clean, readable, and maintainable Python code.\nAssign meaningful names to your variables, functions, classes, and methods.\nLearn how to indent Python code following the Python Style Guide.\nApply Python best practices for line length, line breaks, and blank lines.\nUse whitespaces appropriately with variables, parentheses, operators, commas, colons, and semicolons.\nLearn Python best practices to write comments in your code and why they are helpful to write readable code.\nApply Python best practices to work with strings, sequences, operators, functions, loops, files, and object-oriented programming.\nPlus, learn additional tips to write \"pythonic\" code (the walrus operator, list comprehension, dictionary comprehension, and more...)\n\n\nCourse Updates\nThe course is frequently updated with new lectures, projects, and resources:\nSeptember 2023 - NEW! Code editor updated to Visual Studio Code.\nSeptember 2023 - NEW! Updated the PDF course study guide.\nSeptember 2023 - NEW! Updated lectures with a new style.\nAugust 2023 - NEW! New discussion topics.\nAugust 2023 - NEW! Updated articles.\n\n\nPython and Clean Code: In-demand Skills Around the World\nPython is currently one of the most popular programming languages and its popularity continues to rise every year. It is used for real-world applications in diverse areas such as Web Development, Data Science, Machine Learning, Artificial Intelligence and many more.\nIf you are learning Python or if you already have some experience with this language, learning how to write clean, readable, and concise Python code following the best practices of the language is your next step into the amazing and powerful world of Python.\n\n\nLearning Material & Resources\nThroughout the course, you will find these resources:\nVideo Lectures: video lectures with carefully designed graphics and diagrams. You will learn the best practices of each topic with illustrative examples.\nQuizzes: check your knowledge with 45+ quizzes with 213+ questions that provide unlimited attempts and instant feedback.\nArticles: read articles with detailed explanations and illustrations to complement your knowledge.\nStudy Guide: review for the course exam with a detailed and unique PDF study guide with 120+ questions.\nCourse Exam: take a final course exam with 30+ questions to test your knowledge. The exam has unlimited attempts and detailed results for each attempt.\n\n\nWhat makes this course unique?\nThis course is unique because of its emphasis on providing visual and detailed explanations of the best practices of Python. You will not only learn how to use these principles in Python, you will understand the purpose of each guideline and visualize it.\nUnique study materials complement the course experience. You will find a PDF study guide specifically designed for the course with 120+ questions on the course content.\nYou will check your knowledge with Quizzes that will make you think more deeply about the topics presented in each section and you will receive instant feedback to check your answers.\nYou will receive a Certificate of Completion that you can add to your CV and social media profiles to showcase your new skills.\nYou will also have Lifetime Access to the course.\n\n\nYou are very welcome to watch the preview lectures and check out the full course curriculum.\nIf you are looking for an engaging, visual, and practical course, then you've found it.\nEnroll now, add \"Python Best Practices\" and \"Clean Code\" to your resume, and showcase your new skills.",
      "target_audience": [
        "Students learning Python who want to learn best practices and style guidelines.",
        "Self-taught learners with basic Python knowledge who wish to write clean Python code following best practices.",
        "Python developers who would like to dive deeper into the Python Style Guide (PEP 8).",
        "Developers who are learning Python and would like to expand their knowledge."
      ]
    },
    {
      "title": "Complete Python Tutorial for Beginners",
      "url": "https://www.udemy.com/course/complete-python-tutorial-for-beginners/",
      "bio": "If you’re ready to buckle down and learn Python programming, here’s where you should start.",
      "objectives": [
        "Learn the fundamentals of Python",
        "Object-Oriented Programming (OOP) in Python 3",
        "Functional Programming in Python,",
        "Understand complex topics, like decorators, Lambda, filter, reduce and map.",
        "Python Exception Handling",
        "Work with Python Modules, Python pip",
        "Install Python Editors and IDEs like PyCharm, Idle, Jupyter Notebook, Spyder, Visual studio code, Terminal .."
      ],
      "course_content": {},
      "requirements": [
        "All you need is a PC and a working internet connection",
        "Very basic understanding of programming",
        "A Windows, Mac or Linux computer."
      ],
      "description": "Feel the real power of Python and programming! The course offers you a unique approach of learning how to code by solving real world problems. Throughout the course we will be understanding how to identify and formulate the problems, what is the key to a great app, we will learn how to efficiently adopt the problem for the computer and the most important that you will be writing a lot of code! The course is structured in a way that lectures are like labs where we study the material, do the quizzes, write programs and test them! The most important that you will be involved into work a lot in order to get the best experience!\n\nPython is one of top 5 programming languages today. If you want to pursue a career, this language is a must for you.\nThis course has been created for beginners.\nYou will start the training from the ground up and will get to know the python language and its potential in and out.\nIn this Python for Beginners course, Instructor will teach you how to quickly write your first program in Python! You will also learn how to create custom modules and libraries\nTake this course now online Python course and master your skill!\nENROLL NOW",
      "target_audience": [
        "Anyone who wants to code",
        "New Programmers and Developers",
        "Beginners",
        "Students"
      ]
    },
    {
      "title": "Python Programming For Beginners: Learn Python In 9 Days",
      "url": "https://www.udemy.com/course/python-programming-for-beginners-learn-python-in-9-days/",
      "bio": "Python fundamentals taught thoroughly and at a gentle pace accessible for everyone",
      "objectives": [
        "You will be able to program",
        "You will learn logical thinking",
        "You will learn problem solving skills",
        "You will learn a sought-after and in-demand programming language",
        "You will build your confidence through being successful at every step, learning by doing"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know in the course.",
        "All you need is a computer, an internet connection and a willingness to learn.",
        "All software used in the course is free and readily available to download."
      ],
      "description": "Python programmers are in demand.\nPython programmers are well paid.\nPython is an awesome language to learn.\n\n\nHave you tried to learn to program but have found it hard going?\nHave you tried other courses but they have gone too fast, too soon?\n\n\nI know how you feel. It’s frustrating to get to a certain stage and then get left behind as new concepts whizz by. I hate not understanding stuff – I want to grasp it properly and be able to use it in my own life for my own purposes.\nThat’s why I’ve created this course.\nYou will learn how to code if you follow the instructions step by step, one at a time.\nTake your time and do it your own way. You can learn this stuff in 9 days or you can learn it in 90 days – it really is up to you. Take my ideas and turn them into your own. Ask why I did things a certain way and try it your own way. This is your journey and I am here to help you succeed.\nImagine how it is going to feel when you encounter a problem and you can solve it by writing a program in Python. Then you can share it with your friends and colleagues to make their lives easier too.\nProgramming really is a superpower and it is one that you can possess.\n\n\nBy taking this course you will:\n· Become a Python programmer\n· Develop your logical thinking skills\n· Develop your problem solving skills\n· Develop your perseverance\n· Build your confidence with computers and coding\n· Make yourself more employable\n· Open up new avenues of opportunity\n\n\nI am a trained, qualified teacher with more than 20 years of experience in the classroom and online. I love teaching and getting people excited about coding. I have taught thousands of students either face to face or online and it never gets old. Watching the light of understanding dawn in a student’s eyes is what makes it all worthwhile for me. It is a real privilege that you have chosen me to guide you in your coding journey and I will make every effort to help you succeed.\n\n\nMaybe you don’t think you have the time for learning this stuff. Do you have 15 minutes free in your day? Watch one video and think about the question I pose when you pause the screen. Keep doing this for a few weeks and, before you realise it, you are a programmer.\nMaybe you don’t think it will work for you. It will work if you follow the steps. I know this because I have seen it work for thousands of students from all sorts of backgrounds, with all levels of starting ability, age and ambition.\n\n\nIf you haven’t already done so, please sign up for the course. You really won’t regret it. Even if, in the unlikely scenario that you find it isn’t for you, you have the no quibbles, no-questions-asked guarantee of all your money back within the first 30 days of signing up.\n\n\nYou have nothing to lose and everything to gain. Check out the curriculum for all the things you are going to learn in this course and imagine how you are going to feel when you finish it and you pick up the certificate at the end to show that you are now a Python programmer.\n\n\nLet’s get started!",
      "target_audience": [
        "Anyone who wants to learn to program.",
        "Anyone who wants to learn Python.",
        "Anyone who has tried to learn programming but has found other courses too fast-moving.",
        "Anyone who is willing to give it a go.",
        "Anyone who wants to learn an amazing, marketable, desirable skill."
      ]
    },
    {
      "title": "Teach Python to Kids Age 11 to 13",
      "url": "https://www.udemy.com/course/python-for-kids-age-11-to-13/",
      "bio": "The Ultimate Teachers guide to Python in just 12 Sessions using Videos, Illustrations, Code Samples & Assignments",
      "objectives": [
        "Foundation of Python Programming Language",
        "Creating Variables and using Functions",
        "Strings and Numbers",
        "If Statements",
        "Random Library",
        "Loops - For and While",
        "Data Collections - Lists, Tuples and Dictionaries",
        "Error Handling",
        "Build Custom Functions",
        "File Handling using JSON - Write and Read"
      ],
      "course_content": {
        "Demo Chapter": [
          "19-Minute Demo - Video Chapter",
          "19-Minute Demo - Text Chapter",
          "Apps kids can build with this course"
        ],
        "Day 1 - Variables and Functions": [
          "Variables - Video Chapter",
          "Variables - Text Chapter",
          "Create Variables",
          "Functions - Video Chapter",
          "Functions - Text Chapter",
          "Invitation",
          "Code Correction"
        ],
        "Day 2 - Strings": [
          "Strings - Video Chapter",
          "Strings - Text Chapter",
          "Strings Case",
          "String Index",
          "Split a String",
          "Replace String"
        ],
        "Day 3 - String Formatting and Numbers": [
          "String Formatting - Video Chapter",
          "String Formatting - Text Chapter",
          "Ask Friendly Questions",
          "Numbers - Video Chapter",
          "Numbers - Text Chapter",
          "Miles to Kilometers",
          "Squares and Cubes",
          "Calorie Calculator"
        ],
        "Day 4 - If Statements": [
          "If Statements - Video Chapter",
          "If Statements - Text Chapter",
          "Tonys Pizza Store",
          "Code Correction"
        ],
        "Day 5 - Random": [
          "Random - Video Chapter",
          "Random - Text Chapter",
          "Virtual Wardrobe Planner",
          "Football Friendly",
          "Code Correction"
        ],
        "Day 6 - For Loop": [
          "For Loop - Video Chapter",
          "For Loop - Text Chapter",
          "Multiplication Table",
          "Guessing Number Game",
          "Code Correction"
        ],
        "Day 7 - While Loop": [
          "While Loop - Video Chapter",
          "While Loop - Text Chapter",
          "ATM Machine",
          "Code Correction - Logical Error"
        ],
        "Day 8 - Lists and Tuples": [
          "Lists and Tuples - Video Chapter",
          "Lists and Tuples - Text Chapter",
          "Dream Team",
          "Shopping Cart",
          "Olympic Boxing Matches"
        ],
        "Day 9 - Dictionaries": [
          "Dictionaries - Video Chapter",
          "Dictionaries - Text Chapter",
          "Code Correction",
          "Vowel Count",
          "Phonetic Alphabets"
        ]
      },
      "requirements": [
        "Be able to type using the keyboard"
      ],
      "description": "If you are a teacher, parent or guardian, join me in this exciting teachers' guide on Python Programming that will assist you in teaching children of Ages 11 to 13.  The instructional videos and text material have incorporated using simple English with terms that are easy to follow.\nKindly note that only teachers, parents and guardians can create the account and purchase the course.\n\n\nFeedback from School Students whom I have mentored 1-on-1\nVinith Ramaswamy, Dubai International Academy, Dubai, UAE\n\"I have heard back from 4 universities so far and have gotten accepted to all of them: Purdue, UIUC, Wisconsin-madison, and WPI, everything you taught me was definitely a huge part in it so thank you so much\"\nPrateeti Saran, Dubai International Academy, Dubai, UAE\n\"I just recently got into Columbia University for Computer Science and wanted to thank you for being the one who helped me get interested in and get started with CS. Your teaching was amazing, and really really developed my passion for CS, thank you so so much!\"\nJosh Killa, Dubai College, Dubai\n\"My top choices for receiving offers were from Imperial College London and Warwick university to study computer science. Thanks, Sunil your teaching has had a massive impact\"\n\n\nCourse Curriculum\nVariables and Functions\nStrings and Numbers\nIf Statements\nRandom is Fun\nLoops - For and While\nIteration\nData Collections - Lists, Tuples and Dictionaries\nError Handling\nFile Handling with JSON\nBuild Custom Functions\nWhat this course contains\nEasy to follow instructional videos\n14 Chapters with both Instructional Videos and Textual Material containing high-quality illustrations\n44 Python Code Samples\n31 Assignments\nSoftware to Install\nTo begin with, you may use the Free Online Code editor available in the Resource section of each chapter\nFor additional practice, we recommend installing Mu: a simple Python editor for beginners\nGuaranteed Course Outcome\nUnderstanding of Programming Concepts using Real-World Examples.\nPromotes Creative Thinking and encourage the real-world application of coding skills\nThe ability to build applications with ease.\nThe Apps that can be built with the help of this course\nWith a total of 26 Code Samples and 28 Assignments, learners can attain the skills to build a wide selection of programs. The most notable ones are listed below:\nMadLibs - Word Game\nVirtual Wardrobe Planner\nMatch Roster Generator\nGuessing Number Game\nMultiplication Table Generator\nNumber Divisibility\nEven and Odd Number Extraction\nThe ATM Replica\nAutomated Dice Roll\nShopping List\nPhonetic App\nFood Ordering App\nConvert to Seconds\nCan Teachers and Parents use this course as a guide for teaching kids older than 13 or younger than 11?\nMath is taught in every grade in school, the base concepts remain the same, but the complexity increases with every grade. The same learning progression can be achieved with programming languages for children. This course has been specifically designed as a teaching guide for parents, teachers and guardians who wish to teach students of Ages 11 to 13.\nHow does this course compare with \"Teach Python to Kids Age 8 to 10\"?\nThis course contains 4 additional lessons, with each existing lesson having additional content\nData Collections - Dictionaries\nError Handling\nFile Handling with JSON\nBuild Custom Functions\nAlso contains 16 Additional Code Samples and New Assignments",
      "target_audience": [
        "Parents willing to teach their young children coding",
        "Teachers willing to teach coding to young children"
      ]
    },
    {
      "title": "Connect Systems with SAP Web Services using SAP SOA MANAGER",
      "url": "https://www.udemy.com/course/connect-systems-with-sap-web-services-using-sap-soa-manager/",
      "bio": "Best course to learn how to create, build and consume Web Services in SAP using SOA MANAGER with practical examples",
      "objectives": [
        "This course will teach students of how to connect their SAP systems with other systems using Web Services.",
        "With this we'll easily be able to interconnect SAP with any system which is able to read XML files over internet.",
        "You will learn how to extract data from SAP tables in internal table (ABAP), create a new web service via. SOAMANAGER..",
        "Students will also learn how to interact with web services giving exporting parameters and importing the results from web service.",
        "Finally, I'll be showing you an example with which we'll be able to consume and use a web service in SAP which has been created by any other system.",
        "All the above examples have been explained in detail with hands-on practice on SAP systems."
      ],
      "course_content": {
        "Introduction to Web Services and SAP SOA MANAGER": [
          "Introduction to Web Services and SAP SOAMANAGER"
        ],
        "Extracting data from SAP and exposing it in Web Service": [
          "Example to be shown in this section",
          "Demo of Extracting data from SAP and exposing it in Web Service"
        ],
        "Interacting (request / response) with Web Services in SAP": [
          "Example to be shown in this section",
          "Demo for Interacting (request / response) with Web Services in SAP"
        ],
        "Interacting and consume a Web Service which has been created by another system": [
          "Example to be shown in this section",
          "Demo for consuming a Web Service which has been created by another system"
        ]
      },
      "requirements": [
        "You should have basic SAP knowledge",
        "You should also be aware of Basic ABAP"
      ],
      "description": "You will be learning how to create and build Web Services in SAP and expose SAP data to other systems. You will also be learning how to consume the web services which are provided by other third party systems.\nYou will be learning in a Step-by-Step manner how to build these objects and integrate them so that you can work in real time projects in various MNC’s.\nThis course will contain creating and consuming web services configuration steps & writing the ABAP code so that we are able to pull the correct data.\nI have kept the course as simple as possible so that someone who doesn’t have good programming knowledge is also able to understand it.\nBy the time you complete this course you’ll be confident of creating and consuming various web services to act as an interface between SAP and other systems.\nThis course will be useful for both freshers and experienced SAP Consultants. It can be useful for both SAP Functional and Technical Team members to understand and create interfaces using Web Services.",
      "target_audience": [
        "This course is suitable for all who want to interconnect their systems with SAP using Web Services.",
        "It'll be very useful for: Experienced as well as Beginners SAP Technical Consultants, SAP Basis Consultants, SAP Functional Consultants",
        "It'll also be very useful for non-SAP programmers who are trying to inter-connect their system with SAP systems."
      ]
    },
    {
      "title": "C++ Development Tutorial Series - The Complete Coding Guide",
      "url": "https://www.udemy.com/course/cpp-course/",
      "bio": "Learn how to use C++, a language that is supported on all major platforms and powers millions of applications.",
      "objectives": [
        "Create software applications",
        "Use C++ to program",
        "Advanced programming and C++",
        "Create cross platform applications"
      ],
      "course_content": {},
      "requirements": [
        "Understand the fundamentals of C++ programming",
        "Basic mechanics of software development",
        "Understand the fundamentals of programming",
        "Passion for web development/programming"
      ],
      "description": "Learn about the fundamentals that make the amazing applications we use on a daily basis on devices from mobile phones to tablets to desktop computers. A step by step process is used to show everything from setting up to all the crucial C++ and software development features.\nGain a good understanding of the following concepts:\nC++ programming\nDesktop programming\nSoftware development\nCross platform development\nBasic C++ knowledge\nC++ is the most popular responsive web framework in the world, most modern websites use Bootstrap.\nYou will be provided with the full source code to aid in development during and after this course. The source code is free to use in as many projects as you wish.\n\n\nOver 205,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only course that you will need!",
      "target_audience": [
        "Anyone looking to create applications",
        "Beginners looking to learn the fundamentals of software development",
        "Anyone looking for a quick reference/reminder to C++"
      ]
    },
    {
      "title": "Python Exercises for Beginners: Solve 100+ Coding Challenges",
      "url": "https://www.udemy.com/course/python-exercises-for-beginners-solve-coding-challenges/",
      "bio": "Practice your Python Skills with 100+ Python Exercises and Check your Solutions with Step-by-Step Video Explanations.",
      "objectives": [
        "Practice your coding and problem-solving skills with 100+ Python Coding Challenges designed for Beginners.",
        "Check your solutions with detailed step-by-step video lectures that explain how to solve each challenge.",
        "Learn how to use Python tools to solve exercises using strings, lists, tuples, dictionaries, conditionals, loops, recursion, files, and more.",
        "Solve challenging problems that combine your knowledge of the fundamentals of programming in Python.",
        "Ask questions to your instructor if you need any assistance or guidance.",
        "Download the sample solutions as Python files to run, test, and experiment with the code."
      ],
      "course_content": {
        "Welcome to the Course: Let's Start Coding": [
          "Welcome: Course Structure and PDF Resources",
          "Welcome to the Course - Important Course Information",
          "Collect Your Badge, Introduce Yourself, and Share your Goals"
        ],
        "Exercises 1 - 8 | Strings (Level 1)": [
          "Welcome to String Exercises",
          "Challenge: Print the Length of a String",
          "Solution: Print the Length of a String",
          "Challenge: Print the Character at a Specific Index",
          "Solution: Print the Character at a Given Index",
          "Challenge: Reverse a String",
          "Solution: Reverse a String",
          "Challenge: First and Last Three Characters of a String",
          "Solution: First and Last Three Characters of a String",
          "Milestone Reached",
          "Challenge: Remove Characters at Even Indices",
          "Solution: Remove Characters at Even Indices",
          "Challenge: Check if a String Only Contains Numbers",
          "Solution: Check if a String Only Contains Numbers",
          "Challenge: Remove nth Character from a String",
          "Solution: Remove nth Character from a String",
          "Challenge: Replace a Character in a String",
          "Solution: Replace a Character in a String",
          "Collect and Share Your Badge"
        ],
        "Exercises 9 - 16 | Strings (Level 2)": [
          "Challenge: Change Commas by Dots",
          "Solution: Change Commas by Dots in a String",
          "Challenge: Check if String Contains All Letters in the Alphabet",
          "Solution: Check if String Contains All Letters in the Alphabet",
          "Challenge: Remove Spaces from a String",
          "Solution: Remove Spaces from a String",
          "Challenge: Check if a String Starts with a Prefix",
          "Solution: Check if a String Starts with a Prefix",
          "Challenge: Check if a String Ends with a Suffix",
          "Solution: Check if a String Ends with a Suffix",
          "Milestone Reached",
          "Challenge: Reverse Words in a String (*)",
          "Solution: Reverse Words in a String (*)",
          "Challenge: Count Repeated Characters (*)",
          "Solution: Count Repeated Characters (*)",
          "Challenge: Sort Words in Alphabetical Order (*)",
          "Solution: Sort Words in Alphabetical Order (*)",
          "Collect and Share Your Badge"
        ],
        "Exercises 17 - 25 | Lists, Tuples, and Sets (Level 1)": [
          "Welcome to Lists and Tuples Exercises",
          "Challenge: Multiply all Elements in a List",
          "Solution: Multiply all Elements in a List",
          "Challenge: Print Elements on the Same Line Without Commas",
          "Solution: Print Elements on the Same Line Without Commas",
          "Challenge: Get Max and Min Values",
          "Solution: Get Max and Min Values",
          "Challenge: Check if List is Empty or Not",
          "Solution: Check if List is Empty or Not",
          "Milestone Reached",
          "Challenge: Print the Elements and Their Indices",
          "Solution: Print the Elements and Their Indices",
          "Challenge: Remove Matching Element",
          "Solution: Remove Matching Element",
          "Challenge: Remove Duplicates from a List",
          "Solution: Remove Duplicates from a List",
          "Challenge: Count Elements Greater than 3",
          "Solution: Count Elements Greater than 3",
          "Challenge: Find the Intersection of Two Sets",
          "Solution: Find the Intersection of Two Sets",
          "Collect and Share Your Badge"
        ],
        "Exercises 26 - 33 | Lists, Tuples, and Sets (Level 2)": [
          "Challenge: Difference Between Two Lists",
          "Solution: Difference Between Two Lists",
          "Challenge: Distance Between Two 3D Points",
          "Solution: Distance Between Two 3D Points",
          "Challenge: Print Common Elements in Two Lists",
          "Solution: Print Common Elements in Two Lists",
          "Challenge: Find the Second Largest Value in a List",
          "Solution: Find the Second Largest Value in a List",
          "Milestone Reached",
          "Challenge: Find the Second Smallest Value in a List",
          "Solution: Find the Second Smallest Value in a List",
          "Challenge: Make a Frequency Dictionary from the Elements of a List (*)",
          "Solution: Make a Frequency Dictionary from the Elements of a List (*)",
          "Challenge: Flatten a List that Contains Lists (*)",
          "Solution: Flatten a List that Contains Lists (*)",
          "Challenge: Generate all Permutations of a List (*)",
          "Solution: Generate all Permutations of a List (*)",
          "Challenge: Use Tuples",
          "Collect and Share Your Badge"
        ],
        "Exercises 34 - 39 | Dictionaries (Level 1)": [
          "Welcome to Dictionary Exercises",
          "Challenge: Check if a Key Exists in a Dictionary",
          "Solution: Check if a Key Exists in a Dictionary",
          "Challenge: Add a Key-Value Pair Only if the Key is Not in the Dictionary",
          "Solution: Add a Key-Value Pair Only if the Key is Not in the Dictionary",
          "Challenge: Merge Two Dictionaries",
          "Solution: Merge Two Dictionaries",
          "Milestone Reached",
          "Challenge: Check if All Values are Equal",
          "Solution: Check if All Values are Equal",
          "Challenge: Find the Maximum Value in a Dictionary",
          "Solution: Find the Maximum Value in a Dictionary",
          "Challenge: Find the Minimum Value in a Dictionary",
          "Solution: Find the Minimum Value in a Dictionary",
          "Collect and Share Your Badge"
        ],
        "Exercises 40 - 45 | Dictionaries (Level 2)": [
          "Challenge: Find Frequency of Values in a Dictionary",
          "Solution: Find the Frequency of the Values in a Dictionary",
          "Challenge: Make a Dictionary from Nested Lists",
          "Solution: Make a Dictionary from Nested Lists",
          "Challenge: Print the Max Sum of Values",
          "Solution: Print the Max Sum of Values",
          "Milestone Reached",
          "Challenge: Make a Frequency Dictionary for the Characters in a String (*)",
          "Solution: Make a Frequency Dictionary for the Characters in a String (*)",
          "Challenge: Sort Lists in Ascending Order (*)",
          "Solution: Sort Lists in Ascending Order (*)",
          "Challenge: Convert Dictionary into a List of Lists (*)",
          "Solution: Convert Dictionary into a List of Lists (*)",
          "Collect and Share Your Badge"
        ],
        "Exercises 46 - 51 | Programs with Conditionals (Level 1)": [
          "Welcome to Conditionals Exercises",
          "Challenge: Zero, Positive, or Negative",
          "Solution: Zero, Positive, or Negative",
          "Challenge: Check Vowels and Consonants",
          "Solution: Check Vowels and Consonants",
          "Challenge: Print Max of Three Numbers",
          "Solution: Print Max of Three Numbers",
          "Milestone Reached",
          "Challenge: Print Min of Three Number",
          "Solution: Print Min of Three Numbers",
          "Challenge: Four Seasons",
          "Solution: Four Seasons",
          "Challenge: Compare Three Numbers",
          "Solution: Compare Three Numbers",
          "Collect and Share Your Badge"
        ],
        "Exercises 52 - 57 | Programs with Conditionals (Level 2)": [
          "Challenge: Find Number of Days in a Month",
          "Solution: Find Number of Days in a Month",
          "Challenge: Increasing or Decreasing Order",
          "Solution: Increasing or Decreasing Order",
          "Challenge: Solve Quadratic Equations",
          "Solution: Solve Quadratic Equations",
          "Milestone Reached",
          "Challenge: Check if a Year is a Leap Year or Not (*)",
          "Solution: Check if a Year is a Leap Year or Not (*)",
          "Challenge: Interactive Calculator (*)",
          "Solution: Interactive Calculator (*)",
          "Challenge: Rock, Paper, Scissors (*)",
          "Solution: Rock, Paper, Scissors (*)",
          "Collect and Share Your Badge"
        ],
        "Exercises 58 - 64 | For Loops and While Loops (Level 1)": [
          "Welcome to For Loops and While Loops Exercises",
          "Challenge: Print the First 15 Positive Integers",
          "Solution: Print the First 15 Positive Integers",
          "Challenge: Print Integers in Reverse Order (from n to 1)",
          "Solution: Print Integers in Reverse Order (from n to 1)",
          "Challenge: Sum of First 100 Positive Integers",
          "Solution: Sum of First 100 Positive Integers",
          "Challenge: Print the Multiplication Table",
          "Solution: Print the Multiplication Table",
          "Milestone Reached",
          "Challenge: Print the Alphabet using a Loop",
          "Solution: Print the Alphabet using a Loop",
          "Challenge: First 100 Even Numbers",
          "Solution: First 100 Even Numbers",
          "Challenge: Calculate Factorial",
          "Solution: Calculate Factorial",
          "Challenge: Use While Loops",
          "Collect and Share Your Badge"
        ]
      },
      "requirements": [
        "Basic knowledge of programming fundamentals and Python.",
        "Enthusiasm and dedication to improve your coding and problem-solving skills.",
        "You will need to have access to a Python IDE to solve the exercises. We will use PyCharm during the course, but you can use any IDE of your choice to write, test, and run your code.",
        "The exercises are divided into two levels of difficulty per topic, so you can choose which ones you would like to solve first based on your level of experience."
      ],
      "description": "If you are learning Python and you want to take your Python skills to the next level with intensive practice, then this course is for you. Apply your knowledge to solve more than 100 Python exercises and check your solutions with step-by-step video lectures with visual effects and diagrams.\n\n\nSolve 100+ Exercises to Take Your Python Skills to the Next Level.\nSolve more than 100 exercises and improve your problem-solving and coding skills.\nLearn new Python tools such as built-in functions and modules.\nApply your knowledge of Python to solve practical coding challenges.\nUnderstand how the code works line by line behind the scenes.\nIdentify different ways to solve a problem and which one is more concise and efficient.\nTest your code with different values and inputs to verify its correctness.\nGain practical and valuable coding skills.\n\n\nCourse Updates\nThe course is updated with new exercises and resources:\nAugust 2022 - NEW Updated Section 1\nNovember 2021 - NEW Exercise: Find the Intersection of Two Sets\nNovember 2021 - NEW Exercise: Balanced Square Brackets\n\n\nImprove your Python Skills and Gain Valuable Practical Experience\nPython is currently one of the most popular programming languages and its popularity continues to rise every year. It is used for real-world applications in diverse areas such as Web Development, Data Science, Machine Learning, Artificial Intelligence and many more. Learning Python is your next step into the powerful world of computer science. Through practice, you can improve your coding and problem-solving skills. You will also learn new tools that you can use in Python.\n\n\nYour knowledge of Python will be extremely helpful in any field, including:\nWeb Development\nMachine Learning\nData Science\nArtificial Intelligence\nGame Development\nMobile App Development\nBioinformatics\nMedical Software\nComputer Vision\nand... many more!\nCoding skills are essential to succeed in the world of the future. Therefore, if you are thinking about entering any of these fields or if you are planning to expand your computer science skills, then this course is for you.\nThe concepts and techniques that you will learn in this course are easily transferable to other programming languages like Java, JavaScript, and many more because you will practice how to analyze and solve problems using code.\n\n\nGoals\nBy the end of this course, you will be able to:\nAnalyze a problem step by step and develop a solution in Python.\nSolve a problem in Python using different approaches.\nUse built-in Python functions and modules to solve a problem efficiently.\nUnderstand how the code works behind the scenes.\nWork with the main elements of Python: strings, lists, tuples, dictionaries, conditionals, loops, recursion, files, and more..\nTest your code with various inputs and values to verify its correctness.\n\n\nLearning Material & Resources\nCoding Challenges: 100+ coding challenges with detailed descriptions and hints to guide you through this journey.\nExercises Divided by Levels of Difficulty: the exercises are divided into two levels, so you can start working on them according to your skill level and then solve more advanced exercises as you practice.\nVideo Lectures: 10+ hours of video lectures and resources with step-by-step solutions and explanations of how to analyze the problems and how the code works behind the scenes.\nVisual Effects: You will learn how to solve these exercises with carefully designed visual effects, animations, and diagrams.\nTest Cases: each coding challenge has test cases to help you test if your solution is correct. Each problem can be solved in multiple ways, so these test cases will help you confirm if your solution is correct.\nPython Files: you will be able to download the sample solutions as Python files to run and experiment with the code in your device.\nProgress Tracker: a PDF poster that you can print and cross out as you complete the exercises to help you track your progress.\nCornell Note-taking Method Page Format: a PDF format that you can print to take notes following the Cornell Note-taking Method (a page divided into three sections to write your notes, comments, and summary).\nCode Notebook Format: a PDF format that you can print to write your solutions or the sample solutions by hand, analyze the code, and add your comments.\n\n\nThe Coding Challenges Cover:\nStrings\nLists and Tuples\nDictionaries\nConditionals\nLoops\nRecursion\nFiles\nMiscellaneous and More Challenging Exercises\nMost exercises combine different elements from these topics, but the exercises are grouped by their most relevant category.\n\n\nWhat makes this course unique?\nThis course is unique because of its emphasis on providing visual and detailed explanations of how the solutions work behind the scenes, so you will not only learn how to implement them in Python, you will actually understand the purpose of each line of code.\nUnique study materials complement the course experience. You will find three PDF resources specifically designed for the course: a poster, a note-taking page format with the Cornell Note-taking Method, and a code notebook.\nCheck your solutions with detailed video lectures and download the sample solutions to run the code on your device.\nYou will receive a certificate of completion that you can add to your social media profiles to showcase your new skills.\nYou will also have lifetime access to the course.\n\n\nYou are very welcome to watch the preview lectures and check out the full course curriculum.\nIf you are looking for an engaging, visual, and practical course, then you found it.\nEnroll now, practice your problem-solving skills, and showcase your new Python knowledge.",
      "target_audience": [
        "Learners who are familiar with the basics of programming in Python and would like to expand their knowledge through practical exercises.",
        "Computer Science students and learners who wish to develop their problem-solving and computational-thinking skills.",
        "Self-taught learners who want to practice their Python skills and learn how to translate problems into Python code using the tools of the language."
      ]
    },
    {
      "title": "Java Programming Bootcamp - Build Real Projects with JavaFX",
      "url": "https://www.udemy.com/course/java-programming-become-complete-java-developer/",
      "bio": "Learn Java Programming from scratch to advance to clear concepts | Java for Complete Beginners to Advance | JavaFX",
      "objectives": [
        "Learn the Java core skills that a Java developer must need",
        "You will be able to mention your Java programming skills on his CV.",
        "Learn the latest version of the Java right now",
        "Able to easily switch to Java Android development or Java EE within no time",
        "Able to write clean & generic Java program",
        "Able to write well structure & Advanced code with confidence"
      ],
      "course_content": {
        "Introduction": [
          "Introduction (Must Watch before taking course)",
          "4 Steps To Write a Code",
          "Installing & Setup IDE"
        ],
        "Basic of Java": [
          "Variables",
          "Data Types",
          "First Program In Java - Printing Hello World",
          "Note for Next Exercise",
          "You have to write a code that simply print Java is everywhere",
          "Strings Data Type in Java",
          "Expressions",
          "Keyword in Java",
          "Escape Sequences in Java",
          "Comments",
          "Taking Input from user through Keyboard",
          "Initialization Block in Java",
          "Java Operators - Part 1",
          "Java Operators - Part 2",
          "Packages & Import Keyword in Java",
          "Calculate the area of a hexagon",
          "Java Basics Quiz"
        ],
        "Conditional Statements in Java": [
          "If Statement",
          "If else Statement",
          "if else if Statement",
          "Nested If Statement",
          "SWITCH Statement",
          "Conditional Statements Problem 1",
          "Conditional Statements Quiz"
        ],
        "Loops & Methods in Java": [
          "What is Loops & While Loop in Java",
          "do while loop",
          "for Loop & Nested loops",
          "Enhanced for Loop or for each Loop",
          "Program that prints sum of first 100 natural numbers",
          "Introduction to Methods in Java",
          "Parameters in Methods",
          "Methods Problem 1",
          "Loops & Methods Quiz"
        ],
        "[OOP] - Classes, Constructor, Encapsulation, Composition": [
          "Introduction to OOP",
          "Introduction to classes – Part 1",
          "Introduction to classes – Part 2",
          "Access Specifiers / Access Modifiers",
          "Access Modifiers Notes",
          "Constructor in Class",
          "Constructor chaining in Java",
          "Reference vs Object vs Instance",
          "Encapsulation in Java",
          "Composition in Java",
          "static Keyword",
          "Java Static Class Notes",
          "final Keyword",
          "this Vs super Keyword",
          "OOP Quiz"
        ],
        "[OOP] - Inheritance, Polymorphism, Abstraction": [
          "Introduction to Inheritance & Single Inheritance",
          "Multilevel Inheritance",
          "Hierarchical Inheritance",
          "Inheritance Notes",
          "Polymorphism in Java – Part 1",
          "Polymorphism in Java – Part 2",
          "Abstract class in Java",
          "Abstraction in Java",
          "OOP Quiz"
        ],
        "Abstract Methods, Interface, Inner Classes": [
          "Abstract methods in Java",
          "Interface in Java – Part 1",
          "Interface in Java – Part 2",
          "Abstract class Vs Interface",
          "Inner Classes in Java",
          "Anonymous Inner Class",
          "Interface & Inner Classes Quiz"
        ],
        "Arrays, Autoboxing & Unboxing, Wrapper Classes, Generics": [
          "Arrays in Java",
          "Multi-dimensional array in Java",
          "Wrapper Classes in Java",
          "Autoboxing & Unboxing",
          "Generic Methods in Java",
          "Generic Class in Java",
          "Arrays, Generics Quiz"
        ],
        "Exception Handling In Java": [
          "Introduction & Unchecked Exception - Default throw & catch",
          "Default throw & Our catch",
          "Our throw & Default catch",
          "Our throw & Our catch",
          "Checked Exception",
          "Exception Handling Quiz"
        ],
        "File Handling in Java": [
          "Introduction to File Handling",
          "File class in java",
          "FileOutputStream class",
          "FileInputStream class",
          "ByteArrayOutputStream class",
          "ByteArrayInputStream class",
          "FilterOutputStream class",
          "FilterInputStream class",
          "BufferedOutputStream class",
          "BufferedInputStream class",
          "DataOutputStream class",
          "DataInputStream class",
          "ObjectInputStream & ObjectOutputStream class",
          "File Handling Quiz"
        ]
      },
      "requirements": [
        "A computer with any operating system like Windows or Mac etc",
        "Basic knowledge of computer",
        "Nothing else is required! You and your time to learn Java Programming."
      ],
      "description": "**********  MUST WATCH THE INTRODUCTION VIDEO BEFORE PURCHASING THIS COURSE **********\n\n\nFirst of all, I welcome you to this course on Java programming for Complete Beginners. We will start from the beginning and move toward all advanced concepts over time. You are about to join a community of java developers. Now, this course is going to give you a lot of concepts about Java core or Java standard editions.\n\n\nNow after taking this course:\nYou can apply for a Java programming job\nYou can create professional applications\nAlso, you can give exams and you will easily get a pass in the oracle certification\nYou will get all concepts from basic to advance level\nand much more benefits like that..........\n\n\nWhy do you need to learn Java Programming?\nYou may be thinking that there are many other programming languages in the world like C++, Python, and much more but then why do we need Java? Well, every programming language has its own features. Java is ranked in the top 3 powerful programming languages because of its immense features and also a general-purpose language that can be used in almost every field of computer science.\nAlso, big companies like Google, Microsoft, Bing, and Amazon are hiring Java developers with vast vacancies. Especially if you want to work in Android, Server side programming, or Desktop application development then it is 100% necessary for you to learn all core concepts of Java.\nAlso if you are struggling to get a job as a Java Developer then this course is just for you. Because this course will give you all skills that you want for a java programming job.\nJava is everywhere is the slogan. It is 100% right. If you look around you will find Java everywhere.\n\n\n\n\n===   Super Fiendly Support   ===\nIf you ever get stuck in any problem, I'm here to unstuck you. I always respond as fast as I can. Because I know there’s nothing worse than getting stuck into problems, especially programming problems. So, I am always here to support you.\n\n\n\n\nCourse Update:\nIf you are thinking that I will update this course or not? Then definitely, I will update this course with time and add more videos on different concepts and advanced concepts. So, calm down and take lectures. I will update this course with time.\n\n\nWho can take this course?\nEveryone who wants to learn Java programming can take this course. If you have never touched programming then don't worry about that you can also take this course. I started from scratch with variables and data types and end up with databases and other advanced concepts.\n\n\n******* If you have any questions in your mind then contact me before purchasing this course. *******",
      "target_audience": [
        "Everyone who wants to become programmer especially in Java",
        "One who have never touched the Java programming can also take this course. We start from scratch."
      ]
    },
    {
      "title": "Mastering JavaScript Arrays",
      "url": "https://www.udemy.com/course/mastering-javascript-arrays/",
      "bio": "Enhance Your JavaScript Skills by Mastering the Use of JavaScript Arrays: A Very Important Data Structure",
      "objectives": [
        "Every trick and method for working with arrays.",
        "Different ways to create arrays and work with elements.",
        "Multiple methods for iterating arrays.",
        "Methods for working with array-like data and converting them to arrays.",
        "Unique ways to create arrays and access elements.",
        "Methods on the array prototype and how to use them.",
        "Methods preferred with the functional programming paradigm.",
        "Ways to combine arrays and extract values.",
        "Multiple ways to search arrays for values.",
        "Process of working with Maps and Sets."
      ],
      "course_content": {},
      "requirements": [
        "Basic familiarity with JavaScript. How to enter statements and work with the language.",
        "Access to a text editor in order to enter and work with JavaScript code and then be able to run it in a browser."
      ],
      "description": "Effectively working with arrays is critical for any JavaScript programmer. Arrays are an important data structure that comes native to JavaScript, and this course will provide you with the training needed to master them.\nIn this course you are going to learn all there is to know about JavaScript arrays. I start from the beginning, so if you are comfortable with JavaScript, you may want to use the first section as a review. You will learn the basics of different ways to create an array and work with the elements. You will learn the basics of iterating an array and some unique ways to create arrays and access elements. You will learn all the methods to modify or mutate an array, as well as those methods that are preferred in the functional programming world. You will learn how to combine arrays and extract values as well as multiple ways to search arrays for values. We will end with a look at some array-like collections available in JavaScript and how you can use those.\nBy taking this course:\nYou will feel more comfortable working with arrays in any coding problem you encounter.\nYou will become more familiar with functional methods for working with arrays (reduce, map, filter).\nYou will become familiar with and use all the different methods for manipulating an array in JavaScript.\nYou will be able to work with arrays using different techniques.\nIf you learn by doing, this course gives you plenty of chances to complete exercises and then sit back and watch as I go through those exercises. Jump in today and begin mastering JavaScript Arrays!",
      "target_audience": [
        "From beginner to advanced level JavaScript developer who wants to learn more about arrays."
      ]
    },
    {
      "title": "Complete Python Course: from Basics to Brilliance in HD",
      "url": "https://www.udemy.com/course/complete-python-course-from-basics-to-brilliance-in-hd/",
      "bio": "Starting out Python course. Learn Python basics in HD videos to be able to create your applications, games and more!",
      "objectives": [
        "Learn the basics of Python programming language course in HD.",
        "You will use terminal like professionals with Python.",
        "Learn how to code by yourself in very clear lecture videos!",
        "Use text editor and being familiar with error and fix them!",
        "Learn Python Syntax, and read, write, understand Python codes!",
        "All the most important fundamental and concepts that help getting job!",
        "Learn and have good skills to be able to create applications, games by yourself.",
        "If learned this basics, you will be able to understand any kind of programming languages.",
        "Learn so much in short time professional videos & HD!"
      ],
      "course_content": {},
      "requirements": [
        "Internet Access.",
        "Your Computer or Laptop with any kind of operating systems either Mac OS, Windows, or Linux.",
        "Focus on Lecture Videos.",
        "Be Ready and Prepare Yourself to Learn Python."
      ],
      "description": "EASIEST EXPLANATION FOR PYTHON FULL COURSE IN HD WITH PROFESSIONAL VIDEO LECTURES & RELAXING SOUNDS. EASY ENGLISH TO UNDERSTAND FOR ALL LEARNERS FROM DIFFERENT COUNTRIES. QUIZES WILL BE PROVIDED AFTER EACH LECTURE. LEARNING IN SHORT PERIOD OF TIME WITHOUT LOSING TIME, AND NO BORING LECTURES ANY MORE WITH THIS COURSE. YOU WILL BE DOING YOUR CODES BY YOUR OWN COMPUTERS AS EXPLAINED IN THE LECTURES. DON'T NEED SUPPLEMENTAL ARTICLES EVERYTHING IS INCLUDED IN THE VIDEOS.  MOST OF THE VIDEOS HAVE THE MOST IMPORTANT INFORMATION YOU NEED TO HELP YOU UNDERSTAND THE MATERIAL WELL.\nThis course is teaching you how to depend on yourself for learning Python programming language. You will be a great programmer after finishing this course and you be coding by yourself. You will have a great knowledge of Python syntax that gives you the ability to write any kind of code. This course uses Easy English to let all people from any country in the world to understand and take this course with ease. Also, all video lectures are in high-quality, professional sounds and Perfect explanations.\nAround 72 lecture videos explained, and all the material are in good and clear voice. Almost after each lecture, you need to take a fast quiz to make sure you understand the material really well. It's SUPER IMPORTANT TO DO EACH VIDEO LECTURE IN THE TEXT EDITOR ON YOUR OWN COMPUTER, TO PRACTICE AND LET YOUR HANDS WRITING CODES. Also, You will be using terminal to test your code on it.\nSo What are you waiting for? Enroll to the course and enjoy learning to have a good experience of Python and get a great JOB!",
      "target_audience": [
        "All level learners (specially for beginners)."
      ]
    },
    {
      "title": "MATLAB For People in Hurry",
      "url": "https://www.udemy.com/course/matlab-for-people-in-hurry/",
      "bio": "MATLAB Course (Short, Basic & Fast) as your First Programming Language",
      "objectives": [
        "Introduction to MATLAB Software",
        "MATLAB coding as first programming language",
        "Learn MATLAB from scratch",
        "Perform Various Arithmetic Operations with MATLAB",
        "How to write scripts and functions",
        "Visualize graphical data in 2D and 3D",
        "How To Solve Different Equations On Matlab",
        "Introduction to Signals",
        "Different Operations on Signal",
        "How Loops Work - For and If Loops",
        "How to Create your own Functions"
      ],
      "course_content": {
        "CHAPTER 1:- Matlab Introduction": [
          "1) Introduction",
          "2) Matlab Layout"
        ],
        "CHAPTER 2:- Syntax and Basic Arithmatic Operations": [
          "1) Syntax and Basic Functions of Matlab",
          "2) Basic Arithmatic Operations( +, -, *,/, .* and ./)",
          "3) How To Generate Matrix and Apply Different Functions On It"
        ],
        "CHAPTER 3:- Equations Solving": [
          "1) How To Solve Different Equations On Matlab (i.e Linear, Quadratic etc.)",
          "2) Equation Solving Using Linsolv And Solve Function",
          "3) Equation Solving Using inv Function"
        ],
        "CHAPTER 4:- Graph Plotting": [
          "1) Introduction To Matlab Editor",
          "2) Plotting The Basic 2-D Graph And How To Change Color And Line Formation Of It",
          "3) How To Modify The Graph And Plotting Multiple Graphs Using Subplot Command",
          "4) How To Plot Using Different Functions Apart From Plot Function",
          "5) Graph Plotting With Little Complex Arrays"
        ],
        "CHAPTER 5:- Matlab For Engineers": [
          "1) Generation Of Continuous / Discreate signals",
          "2) Periodic / Aperiodic and Even / Odd signals",
          "3) Implementing Elementary Operations on Signal",
          "4) Convolution and Correlation"
        ],
        "CHAPTER 6:- For Loop": [
          "1) What is Loop and For-Loop",
          "2) How to use For-Loop part 1",
          "3) How to use For-Loop part 2",
          "4) Write a program to calculate Factorial of a number",
          "5) Write a program to calculate your Profit Amount"
        ],
        "CHAPTER 7:- IF Loop": [
          "1) What is If-Loop",
          "2) How to use If-Loop",
          "3) Write a program to calculate your grades"
        ],
        "CHAPTER 8:- Functions": [
          "1) Types of Functions & Create Simple Functions",
          "2) Make a Function to Solve Quadratic Equations",
          "3) Special Types of Function part 1",
          "4) Special Types of Function part 2"
        ]
      },
      "requirements": [
        "General Computer Knowledge",
        "We cover everything from scratch and therefore NO prior programming experience is required.",
        "You should Download & Install MATLAB Software. (Visit mathwork website)",
        "Many people have access to MATLAB through their school, university, or company.",
        "MATLAB also offers student licenses and free 30-day trials."
      ],
      "description": "MATLAB is one of the leading programming language and is important for those who are associated to Engineering, Mathematics & Data Analysis field.\nIn this course, we will be dealing with MATLAB Basics.\nIn this course you will learn about numerical & symbolic computing using MATLAB.\nThe course is designed in such a way that is suitable for beginners and there is a lot to learn.",
      "target_audience": [
        "High School and College Students",
        "Engineers and Mathematicians",
        "Those looking for a bright career in science or engineering through Excellent MATLAB skills"
      ]
    },
    {
      "title": "C Programming For Beginners - Master the C Language",
      "url": "https://www.udemy.com/course/c-programming-for-beginners-master-the-c-language-b/",
      "bio": "C Programming 2024: Master the C Language from basics to advanced including operators, loops, arrays, function and more",
      "objectives": [
        "Data Structures",
        "Programming",
        "Problem solving",
        "C Language"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required"
      ],
      "description": "One of the top C Programming Courses, this C Programming Course - Complete Beginner to Advanced is designed to help you learn C programming from the ground up. As we know, the C language is the mother of all programming languages, so learning C programming language will help you to understand the concepts of programming languages.\n\n\nIn this C Language Course by GeeksforGeeks, we will begin with the foundations of C programming, covering basic syntax, data types, variables, operators, expressions, and input/output operations. You'll learn about control structures like if-else statements and loops, and dive into core concepts such as functions, arrays, strings, and pointers.\n\n\nAs you progress, you'll grasp advanced topics like complex data structures (linked lists, stacks, and queues), file handling, dynamic memory allocation, and memory management techniques. The course also introduces object-oriented programming (OOP), exploring classes, objects, inheritance, polymorphism, and encapsulation.\n\n\nThis online C Programming Course is curated by competitive programming experts and industry veterans, including GeeksforGeeks CEO Mr. Sandeep Jain, ensuring you receive top-notch training and skill enhancement. Engage with practical C programming examples and exercises to solidify your learning.\n\n\nWhy Learn C?\nLearning C is beneficial because it gives you a deep understanding of how computers work. Many other programming languages are based on C, so mastering it can make learning other languages easier. C is also used in many critical systems, so knowing it can open up job opportunities in fields like software development, embedded systems, and systems programming.\n\n\nWho Should Enroll:\n\n\nBeginners: People who have never programmed before and want to start learning C.\nStudents: College and university students who want to improve their programming skills and get hands-on experience.\nAspiring Programmers: Those who want to become software developers, game developers, or work in tech-related fields.\nProfessional Developers: Experienced programmers who want to learn more about C and advanced concepts.\nSoftware Engineers: Professionals looking to add C programming to their skill set and enhance their career.\nIT Professionals: System administrators, network engineers, and IT specialists who need C for low-level programming or hardware interfacing.\nPrerequisites:\n\n\nBasic Computer Skills: Familiarity with using a computer, including navigating files and folders.\nBasic Math Skills: Understanding basic mathematical concepts like algebra will help in understanding programming logic.\nCourse Materials:\n\n\nOnline Resources: Access to coding platforms and exercises for hands-on practice.\nSoftware: Guidance on setting up the C development environment.\n\n\nInstructor:\nThe course is developed and taught by industry experts and competitive programming enthusiasts, including GeeksforGeeks CEO Mr. Sandeep Jain, who brings their experience and expertise to provide you with the best learning experience.",
      "target_audience": [
        "Beginner to Advance C Programmer"
      ]
    },
    {
      "title": "The Complete C++ Programming Course from Basic to Expert",
      "url": "https://www.udemy.com/course/complete-c-plus-programming-course-from-basic-to-expert/",
      "bio": "Familiarize yourself with the fundamentals of C++, including syntax, data types, control structures, and functions.",
      "objectives": [
        "Understanding C++",
        "Writing First C++ Program",
        "Header in C++",
        "Block and Semicolon",
        "Assignment Operators",
        "Arithmetic Operators"
      ],
      "course_content": {
        "Introduction": [
          "Writing First C++ Program",
          "Write a program to print welcome message in separate lines.",
          "Write a program to the sum of two numbers",
          "Write a program to swap two numbers",
          "Write a program that takes number as input and prints its table",
          "Write a program to print first and last number in four digit numbers",
          "Header in C++",
          "Namespace in C++",
          "Function in C++",
          "Block and Semicolon",
          "Arithmetic Operators",
          "Assignment Operators",
          "Logical Operator",
          "Comparison Operator",
          "Overloading Operator",
          "If Statements",
          "If Else Statements",
          "Else If Statements",
          "Switch Statements",
          "Nested If Statements",
          "For Loop",
          "While Loop",
          "Do While Loop",
          "Break Statement",
          "Continue Statement",
          "Multiple Catch Blocks",
          "Stack Unwinding",
          "Nested Exceptions",
          "Rethrowing Exception",
          "Constructor and Destructor",
          "Declaring Variables",
          "Declare Multiple Variables",
          "Identifiers",
          "Constants",
          "Numeric Data Types",
          "Boolean Data Types",
          "Character Data Types",
          "String Data Types",
          "String Concatenation",
          "Numbers and Strings",
          "String Length",
          "Access Strings",
          "Special Characters",
          "User Input Strings",
          "String Namespace",
          "Arrays",
          "Multi-Dimensional Arrays",
          "Structures",
          "Creating & Modify Pointers"
        ]
      },
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Welcome to \"The Complete C++ Programming Course: From Basic to Expert,\" your comprehensive guide to mastering the powerful and versatile C++ programming language. Whether you're an absolute beginner stepping into the world of programming or an experienced developer seeking to enhance your skills, this course is designed to take you on a transformative journey from foundational concepts to advanced techniques in C++ programming.\n\n\nC++ is a robust and widely-used programming language known for its efficiency, performance, and versatility. This course is meticulously crafted to provide you with a solid understanding of C++ fundamentals, best practices, and advanced topics, enabling you to write efficient and scalable code for a wide range of applications.\n\n\nKey Highlights:\n\n\nIntroduction to C++: Familiarize yourself with the fundamentals of C++, including syntax, data types, control structures, and functions.\n\n\nObject-Oriented Programming (OOP): Learn the principles of OOP in C++, including classes, objects, inheritance, polymorphism, and encapsulation.\n\n\nMemory Management: Understand memory management in C++, including dynamic memory allocation, pointers, memory leaks, and smart pointers.\n\n\nFile Handling: Master file handling techniques for reading from and writing to files, enabling interaction with external data sources.\n\n\nTemplates and Generic Programming: Delve into templates and generic programming in C++, facilitating code reusability and flexibility.\n\n\nAdvanced Topics: Explore advanced topics such as multithreading, exception handling, and performance optimization for writing high-performance C++ applications.\n\n\nWhy Choose This?\n\n\nComprehensive Learning: This course covers C++ programming from basic to advanced levels, ensuring a deep understanding of the language and its applications.\n\n\nExpert Instruction: Benefit from the guidance of experienced instructors passionate about C++ programming and dedicated to your success.\n\n\nLifetime Access: Enroll once and enjoy lifetime access to course materials, allowing you to learn at your own pace and revisit concepts whenever necessary.\n\n\nCareer Advancement: C++ proficiency is highly valued in various industries, making this course an asset for career growth and professional development.\n\n\n\n\nEmbark on your journey to become a C++ programming expert! Enroll now in \"The Complete C++ Programming Course: From Basic to Expert\" and acquire the skills needed to write efficient, scalable, and robust C++ code.\n\n\nWhether you're aiming for a career in software development, game development, or system programming, this course equips you with the knowledge and skills to excel in the world of C++ programming. Don't miss this opportunity to become a proficient C++ programmer!",
      "target_audience": [
        "Anyone who want to learn C++ programming language"
      ]
    },
    {
      "title": "Complete Python Course: Learn From Beginner To Advanced",
      "url": "https://www.udemy.com/course/complete-python-course-learn-from-beginner-to-advanced/",
      "bio": "Complete Python Course From Beginner To Advanced",
      "objectives": [
        "Understanding Python Language",
        "Variables",
        "Data Types",
        "Strings",
        "Operators"
      ],
      "course_content": {
        "Introduction": [
          "Access List Items",
          "Access Set Items",
          "Access Dictionary Items",
          "Access Tuple Items",
          "Add & Remove List Items",
          "Add & Remove Dictionary Items",
          "Add & Remove Set Items",
          "Assign Multiple Values",
          "Arrays",
          "Change Dictionary Items",
          "Change List Items",
          "Boolean Variable",
          "Data Types",
          "Classes and Objects",
          "Arguments & Parameters",
          "Create, Read and Delete Files",
          "Lists",
          "Loop Sets",
          "Loop Tuples",
          "Modify Strings",
          "Modules",
          "Nested Dictionaries",
          "Operators",
          "Output Variables",
          "print vs return",
          "Regular Expression",
          "Set Methods",
          "Sets",
          "Slicing Strings",
          "String Methods"
        ]
      },
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Welcome to the Complete Python Course: Learn From Beginner To Advanced! Whether you're a newcomer to programming or looking to enhance your Python skills, this comprehensive course is designed to take you on a journey from fundamental concepts to advanced techniques.\n\n\nPython is one of the most versatile and in-demand programming languages in today's tech landscape, used in various fields such as web development, data science, artificial intelligence, automation, and more. This course is meticulously crafted to provide you with a solid foundation in Python programming, equipping you with the skills and knowledge needed to tackle real-world projects confidently.\n\n\nStarting with the basics, you'll learn about variables, data types, operators, control flow, and functions. As you progress, we'll dive deeper into more advanced topics such as object-oriented programming (OOP), file handling, error handling, and working with modules and packages.\n\n\nBut we won't stop there! This course goes beyond the fundamentals to cover more advanced Python concepts like decorators, generators, context managers, and working with databases. By the end of the course, you'll have built a strong portfolio of Python projects, showcasing your newfound skills and expertise.\n\n\nWhether you aspire to become a Python developer, data scientist, web developer, or simply want to add Python programming to your skill set, this course is your gateway to success. Join us today and embark on your journey to mastering Python from beginner to advanced levels!",
      "target_audience": [
        "Anyone Who Want to Learn Python"
      ]
    },
    {
      "title": "Writing Secure PHP Code - PHP Security Tutorial",
      "url": "https://www.udemy.com/course/writing-secure-php-code/",
      "bio": "Create secure PHP code and prevent attacks and exploits in your code - This is an Essential course for all developers",
      "objectives": [
        "Learn how to write secure PHP code",
        "Protect your website against attacks and exploits",
        "Prevent PHP Injection and Cross-Site Scripting Attacks"
      ],
      "course_content": {
        "Getting Started": [
          "Important - Working Files - Download These First",
          "0101 What Does The Course Cover?",
          "0102 How To Set Up For The Course"
        ],
        "Nature And Scope Of The Problem": [
          "0201 What Is The Threat? - Part 1",
          "0202 What Is The Threat? - Part 2",
          "0203 What Are The Consequences When A Website Is Not Protected Against Attacks?",
          "0204 Most Common Forms Of Attack - Part 1",
          "0205 Most Common Forms Of Attack - Part 2",
          "0206 Most Common Vulnerabilities Attackers Can Exploit",
          "0207 Helpful Resources",
          "0208 Lab: Hacking Into Sweets Complete - Instructions",
          "0209 Lab: Hacking Into Sweets Complete - Solution"
        ],
        "Understanding Filtering, Validation, And Output Escaping": [
          "0301 What Is Filtering, Validation, Output Escaping, And Why Do It?",
          "0302 PHP Filtering Functions And Techniques",
          "0303 PHP Validation Functions And Techniques",
          "0304 PHP Output Escaping Functions",
          "0305 Using filter_var() To Filter And Validate",
          "0306 Lab: Filtering And Validating Posted Form Data - Instructions",
          "0307 Lab: Filtering And Validating Posted Form Data - Solutions"
        ],
        "Preventing The Most Common Forms Of Attack": [
          "0401 Cross-Site Scripting Attacks - Part 1",
          "0402 Cross-Site Scripting Attacks - Part 2",
          "0403 Cross-Site Scripting Attacks - Part 3",
          "0404 Session Hijacking And Forgery Attacks - Part 1",
          "0405 Session Hijacking And Forgery Attacks - Part 2",
          "0406 Remote Code Injection Attacks - Part 1",
          "0407 Remote Code Injection Attacks - Part 2",
          "0408 Lab: Improving Security On An Existing Website - Instructions",
          "0409 Lab: Improving Security On An Existing Website - Solutions"
        ],
        "Protecting Against Common Website Vulnerabilities": [
          "0501 Unplanned Information Disclosure - Part 1",
          "0502 Unplanned Information Disclosure - Part 2",
          "0503 Predictable Resource Location",
          "0504 Insufficient Authorization",
          "0505 Improper Access Controls",
          "0506 Avoiding Misconfiguration",
          "0507 Protecting File Uploads",
          "0508 Lab: Improving Security On An Existing Website - Instructions",
          "0509 Lab: Improving Security On An Existing Website - Solutions"
        ],
        "Protecting Against SQL Injection Attacks": [
          "0601 How Can You Protect A MySQL Database?",
          "0602 MySQL Database Escaping And Quoting",
          "0603 Using Prepared Statements",
          "0604 Lab: Protecting A MySQL Database Against SQL Injection - Instructions",
          "0605 Lab: Protecting A MySQL Database Against SQL Injection - Solutions"
        ],
        "Conclusion": [
          "0701 Wrap Up"
        ]
      },
      "requirements": [
        "PC or Mac"
      ],
      "description": "This PHP Security training video from Infinite Skills teaches you about the primary security considerations that can affect a PHP website, and how you can take preventative measures. This course is designed for users that already have a working knowledge of PHP and MySQL, and who develop PHP-based websites that contain sensitive or financial information.\n\nYou will start by learning about the most common forms of attack and what the consequences can be when your website is not protected. You will then move into learning about the filtering and validation functions in PHP, and why you should use them. Doug will teach you how you can protect your website against common website vulnerabilities and how to protect file uploads. Finally, this video tutorial will teach you how to protect against SQL injection attacks, and covers topics such as database escaping, using prepared statements, and protecting a MySQL database.\n\nBy the completion of this video based training course, you will have the knowledge required to ensure your website is secure against attacks and free of vulnerabilities. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Programmers of all levels",
        "Web developers"
      ]
    },
    {
      "title": "Python - Complete Python, Django, Data Science and ML Guide",
      "url": "https://www.udemy.com/course/python-complete-guide/",
      "bio": "Learn the most popular Python programming language including Django, Pygame, Jupyter, Data Science and Machine Learning",
      "objectives": [
        "You will learn the basic principles of Python and learn all the main functions that are used most often in real projects and are in demand the most",
        "You will practice all the examples that I will show throughout the course using the Python interpreter, Visual Studio Code with Code Runner",
        "You will master all the necessary packages for Data Science and Machine Learning such as NumPy, Pandas, Matplotlib and Scikit-learn using Jupyter Notebook",
        "You will learn the basic functionality of Python, ranging from variables, lists, dictionaries, to classes, loops, modules, and creating virtual environments",
        "In addition, you will learn how to use functional and object-oriented approaches in Python programming."
      ],
      "course_content": {},
      "requirements": [
        "There are no prerequisites, all you need is a desire to learn and practice",
        "It is advisable to study on a laptop with an external monitor, you can also use a tablet"
      ],
      "description": "Python is the easiest programming language in the world. But at the same time, Python is a powerful tool with which you can solve a huge range of different tasks, from file processing to machine learning, data processing, game creation and web application development .\nThus, having learned Python, you can choose a profession from a wide range of vacancies, or you can use Python to create your own applications and solve your own problems.\nThis course includes many practical tasks, as well as tasks for self-fulfillment.\nPython is an object oriented programming language.\nPython is also a language with a huge amount of features, but in order to be able to code in Python, you need to UNDERSTAND the key concepts of Python. And that's what I'm going to focus on with you in this course.\nBefore writing code and running examples, you will receive from me explanations and answers to questions WHY and WHY , and only after that HOW  to write code.\nI will not waste your time and therefore I have created the most effective course structure. All the examples that I will explain and run are written by me before the course, but you will write and run the code yourself.\nAll video lectures in this course are over 50 hours long , but expect to spend around 500 hours to master all the topics of the course, including self-completion of all practical tasks.\nIn this course you will learn following key topics:\n\n\nFoundational Python Programming: Learn the fundamental concepts of Python programming, from data types, functions, and variables to control structures like loops and conditional statements.\nObject-Oriented Programming (OOP): Dive into the principles of OOP, understanding classes, objects, inheritance, encapsulation, and polymorphism, and discover how to leverage them for efficient code organization.\nFile Handling and Modules: Explore file manipulation techniques, from working with directories and files using the os module to using external modules, enabling code reuse, and managing packages with PIP.\nWeb Development with Django: Get an introduction to web development using Django, covering MVC architecture, URL routing, model creation, and interacting with databases to build dynamic web applications.\nAPI Development: Learn to create RESTful APIs using Django and handle API requests and responses, including authentication, authorization, and versioning.\nGame Development with Pygame: Enter the world of game development with Pygame, creating interactive games by working with graphics, animations, and user input.\nData Manipulation with NumPy and Pandas: Discover data analysis and manipulation using NumPy and Pandas, covering array operations, dataframes, and handling real-world data sets.\nError Handling: Understand error handling mechanisms in Python ensuring robust and reliable code.\nPackage Management and Virtual Environments: Master package management using PIP, create virtual environments to isolate projects, and manage dependencies effectively.\nVisualization and Machine Learning: Explore data visualization with Matplotlib, and dip your toes into machine learning concepts with Scikit-Learn, covering model creation, evaluation, and prediction.\nWhy it's important: This course provides a comprehensive foundation in Python programming, from basic syntax to advanced topics like OOP, web and game development, data manipulation, and more. Understanding these concepts is crucial for building versatile applications, performing data analysis, and even stepping into machine learning, ensuring you're equipped for a wide range of programming tasks and projects.\n\n\nAfter completing this course, you can safely say that you KNOW Python and CAN use the most popular Python functions.\nAs any of my courses this course comes with 30-days money back guarantee. No questions asked!",
      "target_audience": [
        "Beginning Python programmers who want to learn how to program",
        "Those who are planning to work in the direction of Data Science and Machine Learning",
        "Web developers who want to build web applications with Python",
        "Those who want to perform tasks related to machine learning, data processing",
        "Game developers who want to create games with Python Pygame"
      ]
    },
    {
      "title": "Python Development Essentials",
      "url": "https://www.udemy.com/course/python-development-essentials/",
      "bio": "Python Development Essentials course by MTF Institute",
      "objectives": [
        "Python Development Essentials",
        "What is Python",
        "Brief history of Python",
        "Applications of Python",
        "Python, R and Julia - how do they compare",
        "Advantages of Python",
        "Disadvantages of Python"
      ],
      "course_content": {},
      "requirements": [
        "For a better learning experience, we suggest you to use a laptop / mobile phone / pen and paper for taking notes, highlighting important points, and making summaries to reinforce your learning."
      ],
      "description": "Welcome to course: Python Development Essentials\nits the module of program \"Professional Diploma in Python Development\"\nYou may join that course separately, or join the full program.\n\n\nCourse provided by MTF Institute of Management, Technology and Finance\nMTF is the global educational and research institute with HQ at Lisbon, Portugal, focused on business & professional hybrid (on-campus and online) education at areas: Business & Administration, Science & Technology, Banking & Finance.\nMTF R&D center focused on research activities at areas: Artificial Intelligence, Machine Learning, Data Science, Big Data, WEB3, Blockchain, Cryptocurrency & Digital Assets, Metaverses, Digital Transformation, Fintech, Electronic Commerce, Internet of Things.\nMTF is the official partner of: IBM, Intel, Microsoft, member of the Portuguese Chamber of Commerce and Industry.\nMTF is present in 208 countries and has been chosen by more than 380,000 students.\n\n\nCourse Content:\nIntroduction\nWhat is Python\nBrief history of Python\nApplications of Python\nPython, R and Julia - how do they compare\nAdvantages of Python\nDisadvantages of Python\n\n\nCourse Author:\nStanisław Marek Halkiewicz\nI am a seasoned educator specializing in the domains of econometrics, statistics, statistical programming, and mathematics, boasting an extensive track record exceeding three years. Notably, I have imparted my expertise to students hailing from prestigious global universities, solidifying my standing as a sought-after tutor. I have made significant contributions in research endeavors spanning statistics, econometrics, and statistical programming. Furthermore, my professional trajectory encompasses a diverse spectrum, ranging from project management to business intelligence and Data Science.\n\n\nCourse Description:\nIntroduction to Python Development is a course designed to introduce individuals to the world of Python programming. Python has gained immense popularity in recent years for its simplicity, versatility, and readability. This course is ideal for beginners who are new to programming.\n\n\nImportance For Companies:\nVersatility: Python is versatile and can be used for a wide range of applications, from web development and data analysis to artificial intelligence and automation. Companies can benefit from having Python developers who can adapt to various projects.\n\n\nProductivity: Python's clean and readable syntax allows developers to write code more quickly and efficiently. This results in faster project development and reduced costs for companies.\n\n\nLarge Ecosystem: Python has a vast ecosystem of libraries and frameworks, making it easier for companies to find solutions to their specific needs. This reduces the need for reinventing the wheel.\n\n\nData Analysis and AI: Python is a go-to language for data analysis and machine learning. Companies can leverage Python to extract valuable insights from data and build AI-driven applications.\n\n\nCommunity and Support: Python has a strong and active community of developers. Companies can tap into this community for support, resources, and talent recruitment.\n\n\nImportance For Developers:\n\n\nCareer Opportunities: Learning Python opens up a wide range of career opportunities in various industries. Python developers are in high demand, and their skills are transferable to different domains.\n\n\nDiversity of Roles: Python developers can work in roles such as web developer, data analyst, data scientist, machine learning engineer, and more. This diversity allows developers to explore different areas of interest.\n\n\nEase of Learning: Python's straightforward syntax makes it an ideal choice for beginners in programming. It's also accessible to experienced developers looking to add another language to their skill set.\n\n\nContinuous Growth: Python is constantly evolving, with new libraries and frameworks being developed. This means that developers who invest in Python education can continue to grow their skill set over time.\n\n\nRemote Work Opportunities: Python development often allows for remote work, providing developers with flexibility in their careers.\n\n\nThe course \"Introduction to Python Development\" provides a foundation for individuals looking to embark on a career in programming or expand their skill set. Python's significance in the tech industry, its versatility, and its demand in the job market make it a valuable asset for both companies and developers aiming to excel in today's technology-driven world.",
      "target_audience": [
        "No special requirements. Course for any who want to build a career at development or improve their knowledge.",
        "Introduction to Python Development is a course designed to introduce individuals to the world of Python programming. Python has gained immense popularity in recent years for its simplicity, versatility, and readability. This course is ideal for beginners who are new to programming.",
        "Importance For Companies: Versatility: Python is versatile and can be used for a wide range of applications, from web development and data analysis to artificial intelligence and automation. Companies can benefit from having Python developers who can adapt to various projects.",
        "Productivity: Python's clean and readable syntax allows developers to write code more quickly and efficiently. This results in faster project development and reduced costs for companies.",
        "Large Ecosystem: Python has a vast ecosystem of libraries and frameworks, making it easier for companies to find solutions to their specific needs. This reduces the need for reinventing the wheel.",
        "Data Analysis and AI: Python is a go-to language for data analysis and machine learning. Companies can leverage Python to extract valuable insights from data and build AI-driven applications.",
        "Community and Support: Python has a strong and active community of developers. Companies can tap into this community for support, resources, and talent recruitment.",
        "Importance For Developers: Career Opportunities: Learning Python opens up a wide range of career opportunities in various industries. Python developers are in high demand, and their skills are transferable to different domains.",
        "Diversity of Roles: Python developers can work in roles such as web developer, data analyst, data scientist, machine learning engineer, and more. This diversity allows developers to explore different areas of interest.",
        "Ease of Learning: Python's straightforward syntax makes it an ideal choice for beginners in programming. It's also accessible to experienced developers looking to add another language to their skill set.",
        "Continuous Growth: Python is constantly evolving, with new libraries and frameworks being developed. This means that developers who invest in Python education can continue to grow their skill set over time.",
        "Remote Work Opportunities: Python development often allows for remote work, providing developers with flexibility in their careers.",
        "The course \"Introduction to Python Development\" provides a foundation for individuals looking to embark on a career in programming or expand their skill set. Python's significance in the tech industry, its versatility, and its demand in the job market make it a valuable asset for both companies and developers aiming to excel in today's technology-driven world."
      ]
    },
    {
      "title": "Master the Python interview (special banks & startups)",
      "url": "https://www.udemy.com/course/master-the-python-interview-1/",
      "bio": "Ace your interview questions and get hired as a professional Python developer in prestigious companies!",
      "objectives": [
        "Master the Python interview",
        "Apply confidently for a Python software developer job",
        "Demonstrate confidently your knowledge of Python",
        "Ace coding interviews after preparing with real interview questions and exercises"
      ],
      "course_content": {
        "Getting ready for the Python interview": [
          "Introduction",
          "Python 2.7 vs Python 3.x",
          "Pycharm"
        ],
        "Question 1": [
          "Question 1 (datastructures must-know) - Part 1",
          "Question 1 - Part 2",
          "Question 1 - Quiz 1",
          "Question 1 - Quiz 2",
          "Question 1 - PDF"
        ],
        "Question 2": [
          "Question 2 (oop must-know)",
          "Question 2 - Quiz 1",
          "Question 2 - Quiz 2",
          "Question 2 - PDF"
        ],
        "Question 3": [
          "Question 3 (professional software practices must-know) - Part 1",
          "Question 3 - Part 2",
          "Question 3 - Exercise",
          "Question 3 - Quiz 1",
          "Question 3 - Quiz 2",
          "Question 3 - PDF"
        ],
        "Question 4": [
          "Question 4 (exceptions must-know) - Part 1",
          "Question 4 - Part 2",
          "Question 4 - Quiz 1",
          "Question 4 - Quiz 2",
          "Question 4 - PDF"
        ],
        "Question 5": [
          "Question 5 (structures must-know)- Part 1",
          "Question 5 - Part 2",
          "Question 5 - Part 3",
          "Question 5 - Exercise 1",
          "Question 5 - Exercise 2",
          "Question 5 - Exercise 3",
          "Question 5 - Quiz 1",
          "Question 5 - Quiz 2",
          "Question 5 - PDF"
        ],
        "Question 6": [
          "Question 6 (pythonic must-know)- Part 1",
          "Question 6 - Part 2",
          "Question 6 - Quiz 1",
          "Question 6 - Quiz 2",
          "Question 6 - PDF"
        ],
        "Question 7": [
          "Question 7 (more datastructures must-know) - Part 1",
          "Question 7 - Part 2",
          "Question 7 - Exercise 1",
          "Question 7 - Exercise 2"
        ],
        "Question 8": [
          "Question 8 - (more OOP must-know)",
          "Question 8 - Exercise"
        ],
        "Question 9": [
          "Question 9 - (datastructure comprehensions must-know)",
          "Question 9 - Exercise 1",
          "Question 9 - Exercise 2"
        ]
      },
      "requirements": [
        "Basic to Intermediate Python skills",
        "No prior professional experience required"
      ],
      "description": "Welcome to Master the Python Interview!\n\nThis is the most comprehensive course online to help you master the Python Interview, and get your next dream job!\n\nThis course will teach you everything you need to know to land your next Python role, including:\n\nreal interview questions and how to answer them\nreal coding exercises and how to solve them\nnon-technical interview questions that help you demonstrate your experience as a professional Python developer\nplenty of quizzes that will cement your knowledge\nadvanced comments for more senior developers\nAchieve your career goals and get a fantastic Python job by enrolling in this course!",
      "target_audience": [
        "Students preparing for a Python interview",
        "Students familiar with Python programming looking to start a career in tech!",
        "Professional Python developers looking to refresh their interview skills"
      ]
    },
    {
      "title": "C++ MASTERY Course – Build Extraordinary Apps (Step-by-step)",
      "url": "https://www.udemy.com/course/the-complete-c-plus-plus-programming-course-build-10-computer-apps/",
      "bio": "Effortlessly Build 10 C++ Apps Starting TODAY, WITHOUT ANY Coding Experience Step-by-Step.",
      "objectives": [
        "Learn one of the most POWERFUL programming language in the world, C++ with complete ease and fun",
        "Learn Modern day C++ 11, C++17 and Object-Oriented Programming",
        "Step-by-step guide to building 10 Desktop Applications including building a Casino Game for PC",
        "Get a Free Ebook with this course",
        "Course curriculum starts from scratch, covering the Basic topics to Advanced topics",
        "Includes Quizzes"
      ],
      "course_content": {},
      "requirements": [
        "No Programming knowledge required",
        "Access to a computer running Windows, Mac OS X, Linux or Android phone"
      ],
      "description": "Which programming language do I need to master in order to get myself recruited in companies like Facebook, Amazon, Netflix, Google (FANG)? C++\nWhich is the most popular programming language among the software developers? C++\nWhich programming language was used to build Windows Operating system? C++\n\n\nRight now, C++ is the 4th most popular language in the world, according to the TIOBE index. It’s used in various areas where high-performance software is needed. For example, Adobe products, Unreal Engine, and browsers like Chrome and Firefox are built with C++.\n\n\nC++ will help better understand how computers work. With that knowledge, you can be much more effective while using other languages like Java and C#.\n\n\nIsn’t C++, little too old a programming language to learn in today’s era?\nC++ is still relevant since many applications still bottleneck on processing speed, and the problems with that are not going away.\nC++ has had many version releases and updates over the years. It's a sad fact that most C++ courses do not teach Modern C++, but focus on old, obsolete versions of C++.\nThis course focuses on Modern C++ i.e. C++11 and C++17\n\n\nThere is a lot of free information out there on internet, why should I spend my money to buy this course?\nYes. You are absolutely correct! There is a lot of free information out on internet but would you like to learn from a platform full of advertisements and no detailed explanation?\nYou get to interact with the instructor on this platform where you can ask any question related to the course and the instructor responds within 24 hours.\nThis course format includes theory concepts which are then reinforced with live code examples. Lastly you have the advantage of getting certificate upon completing the course.\n\n\nHow does this course stand out in comparison to other C++ courses on Udemy?\nThe biggest flex of this course is that you learn to build 10 real desktop applications! No other courses on Udemy teach to build practical and relevant desktop applications.\nThe course is designed specifically for beginners, so the explanation in every lecture is detailed and the process of learning the basic fundamentals to Advance concepts is step by step.\nThe curriculum of this course focuses on modern C++ 11 and C++17. Majority of the courses out there still teach the same old C++98 which is not quite relevant in today’s world.\n\n\nI do not belong to IT sector but I do want to transit my career and get myself in the field of Technology. Is this course a perfect start?\nYes absolutely! C++ is still one of the most popular programming languages used in game development. It's also heavily used in embedded applications and developing Operating Systems. And as mentioned earlier the course is specially designed for beginners so that they can learn with all ease.\n\n\nWhat does this course cover?\nThe main contents of this course are divided into 3 sections: BASICS, INTERMEDIATE, ADVANCED.\nThe remaining sections teach how to build some great desktop apps and games like:\nAttendance Management app\nBanking app\nBus Reservation app\nCasino Game\nDoctor's Appointment Management\nFood Ordering App\nHotel Management App\nStudent Database Management App\nStudent Report Card App\nSupermarket billing App",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous coding experience"
      ]
    },
    {
      "title": "Java/Apache Maven: The Truth About Building Java Programs",
      "url": "https://www.udemy.com/course/apachemaven2/",
      "bio": "Sequel to Course: \"Stop Building Java Programs the Hard Way!\"",
      "objectives": [
        "Choose to take advantage of using a Parent POM",
        "Spot when to use Properties and Profiles to add conditional logic to a build",
        "Understand Maven Inheritance and Aggregation mechanism",
        "Spot when to choose Maven Inheritance or Aggregation or Both!",
        "Spot the Major differences between a standard Project and a Multi-Module project",
        "Spot the costly pitfalls of various Multi-Module design approaches",
        "Choose the correct design approach for their Multi-Module Project",
        "Choose to take advantage of Mavens support for Respository Managers, such as Nexus",
        "Understand the Maven SNAPSHOT concept in the software life-cycle",
        "Spot how to take advantage of SNAPSHOTS",
        "Choose to take advantage of Maven's support for SCM, such as GitHub",
        "Understand how to perform a Full RELEASE of software using the Maven Release Plugin",
        "Choose to take advantage of Mavens 'Site' generation and deployment"
      ],
      "course_content": {
        "Course Guide": [
          "Guide"
        ],
        "Discovering the benefits of having a Parent POM": [
          "What is a Parent POM ?",
          "Overview of the Course Sample Projects",
          "Where can I get the Sample Projects and source code ?",
          "Our 1st Parent POM",
          "Introduction to Maven's Dependency Management",
          "Introduction to Maven's Plugin Management",
          "Parent POM Quiz"
        ],
        "Home Play (Workshop 1)": [
          "Home Play - Workshop 1",
          "Home Play -Workshop 1 (Worked example)"
        ],
        "How to add conditional logic to the build": [
          "Setting up the Example Projects",
          "Discover Maven Properties",
          "Taking more advantage of Properties",
          "How Maven Profiles work!",
          "Discover how Profile Activation works...",
          "How to build in Conditional logic into your POM using Properties and Profiles",
          "How to determine an Active Profile in a build",
          "Conditional builds based on Enviromental Information",
          "Properties and Profiles Quiz"
        ],
        "All about Multi-Module Projects": [
          "Why do we need Multi-Module Projects ?",
          "Let's create our 1st Multi-Module Project",
          "Introduction to Maven's Reactor",
          "Multi-Module Quiz"
        ],
        "Multi-Module Design and Organisation": [
          "Discover some Key Design considerations",
          "Design by Class ...",
          "Design by Functionality ...",
          "Achieving code Re-Use"
        ],
        "Discover the Truth about SNAPSHOTS": [
          "Discover about SNAPSHOTS builds",
          "SNAPSHOT builds and Remote Respositories",
          "Modifying the settings.xml to use a SNAPSHOT Repo",
          "Modifying the settings.xml to use a RELEASE Repo",
          "Installing the NEXUS Repository Manager",
          "Integrating Maven, Eclipse and Nexus",
          "Truth about SNAPSHOTS Quiz"
        ],
        "Home Play (Workshop 2)": [
          "Home Play - Workshop 2",
          "Home Play -Workshop 2 (Worked example)"
        ],
        "Understanding the complete Maven Release Process": [
          "Introduction to the Maven Release Process"
        ],
        "Setting up SCM (Source Control Management) - GitHub": [
          "Just enough Github",
          "Just enough GIT on the Client side",
          "Let's use SSH for our Security",
          "Installing SSH on GitHub",
          "Let's commit our Source code into our SCM"
        ]
      },
      "requirements": [
        "Some previous experience of Maven is needed; either through my course 'Maven :101 Stop Building Java Programs the Hard Way!' or hands on experience",
        "Some knowledge of the Eclipse IDE is required, as Eclipse integration with Maven is used",
        "Some knowledge of the Java development language is required",
        "All software needed for the source is available Free online for download, so internet connection is required",
        "All Source code for the course is available for download in the 'Resources area'"
      ],
      "description": "This is a follow on course from \"Java/Apache Maven: Stop Building Java Programs the Hard Way!\"  and continues where Maven 101 left off ...\nBy the end of this course you will understand how and why Java and the Apache Maven Build Tool work so well together.\nYou’ll be able to work competently with the Apache Maven Build Tool by taking the knowledge you gained from course \"Java/Apache Maven: Stop Building Java Programs the Hard Way!\" the next level;\nCourse based on using Maven with Eclipse IDE and command line.\n\nSome of the things covered are;\n\nUnderstanding What a Parent POM is and Why your Projects really needs one. How to use Maven Build Properties and Profiles and How they can work together to make your life as a developer so much easier.\nWe take a deep dive into Multi-Module Projects and Discover the difference between mavens 'Inheritance' mechanism and its 'Aggregation' mechanism and How to get the best out of both with simple and clear examples.\nWe look at Design considerations required when organizing and designing Multi-Module Projects, so you can avoid some common and expensive pitfalls for your projects.\nWe take another deep dive when we look at the Maven Release Process and how it works; Looking at performing SNAPSHOT releases too full blow Releases. What are they and how they work in the Maven way of doing things!\nWe look at the whole build life-cycle from the Development Team perspective to the Build Manager Preparing and Performing a Full Release of a Multi-Module Project, including a project web site also built by Maven.\nWe look at some other Tools that work along with Maven; How to set up your very own Nexus Repository Manager. How to integrate maven with SCM (Source Control Management) system, such as GitHub.\nYou will be up and running Releasing code through Maven in under 5 hours!!",
      "target_audience": [
        "Developers looking to get the most from Maven",
        "Build managers looking to understand the Maven Release Process",
        "Experienced Maven users who are looking to refresh their Maven skills",
        "This Course is for any one who had completed my course 'Maven :101 Stop Building Java Programs the Hard Way!'",
        "This is an Intermediate course, not for beginners"
      ]
    },
    {
      "title": "Complete Step By Step Python Bootcamp For Beginners",
      "url": "https://www.udemy.com/course/learn-python-3-from-scratch/",
      "bio": "2023 Complete Python Bootcamp with examples and exercises | Created for Beginners and Testers | Python Masterclass",
      "objectives": [
        "Understand the concepts of Object Oriented Programming Language",
        "Understand and write Efficient Code",
        "Use Python Language to develop back-end of Web Applications",
        "Use Python Language to create Games",
        "Use Python Language to build Automation Frameworks",
        "Use Python Programming Language to create your own hobby projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Instructor Introduction",
          "How To Reach Me Anytime? *** MUST WATCH ***"
        ],
        "Setup And Configuration": [
          "Python Installation - Windows",
          "Configuration Of Python - Windows",
          "Python Installation And Setup - Mac",
          "First Project Creation And PyCharm Installation",
          "*** Must Watch Lecture Before Moving Forward ***",
          "Package Management Using PIP",
          "Installing iPython"
        ],
        "Understanding Variables And Data Type": [
          "Python Terminal Walkthrough",
          "Understanding Objects And References",
          "Variables Rules",
          "Numbers Data Type And Math Operations",
          "Numbers - Exponentiation And Modulo",
          "Arithmetic Order Of Precedence",
          "Boolean Data Type",
          "Working With Strings",
          "String Methods - Part 1",
          "String Methods - Part 2",
          "More String Slicing And Indexing",
          "Strings Formatting",
          "Strings Quiz *** Test Your Knowledge ***"
        ],
        "Advanced Data Types": [
          "List And Accessing The Elements",
          "List Methods",
          "List Quiz *** Test Your Knowledge ***",
          "Working With Dictionary",
          "Nested Dictionary",
          "Dictionary Methods",
          "Dictionary Quiz *** Test Your Knowledge ***",
          "Working With Tuple",
          "Tuple Quiz *** Test Your Knowledge ***"
        ],
        "Comparison And Boolean Operators": [
          "Working With Comparators",
          "Understanding Boolean Operators",
          "Boolean Operators - Order Of Precedence",
          "Comparison And Boolean Operators Quiz *** Test Your Knowledge ***"
        ],
        "Program Control Flow": [
          "Conditional Logic - If Else Conditions",
          "While Loop Demo",
          "Break Continue And While/Else",
          "For Loop Demo",
          "Iterating Multiple Lists - Using the Zip Function",
          "Using Range Function In For Loop"
        ],
        "Methods - Working With Reusable Code": [
          "Understanding Methods",
          "Working With Return Values",
          "Working With Positional / Optional Parameters",
          "Understanding Variable Scope",
          "More Built-In Functions",
          "Exercise With Solution *** Homework ***"
        ],
        "Classes - Object Oriented Programming": [
          "Understanding Objects / Classes",
          "Create Your Own Object",
          "Create Your Own Methods",
          "Inheritance",
          "Method Overriding",
          "Exercise With Solution *** Homework ***"
        ],
        "Exception Handling": [
          "Exception Handling Demo",
          "Finally And Else Block",
          "Exercise With Solution *** Homework ***"
        ],
        "Modules": [
          "Builtin Modules",
          "Create Your Own Modules"
        ]
      },
      "requirements": [
        "Computer access with internet access",
        "Nothing else, all the basics and set up information is covered in the course"
      ],
      "description": "This is the most comprehensive yet simple course on python programming language and it concentrates on Python 3.x which means that what you will learn is relevant and is not obsolete.\n\n** No Prior Coding Experience Needed **\n\nThis course assumes that you have no programming background. If you have some experience then, it's just a bonus point. You have never code, have some experience or have a lot of experience any other programming language, this course is one stop place for you.\nPython is one of the most useful programming languages to learn\nYou can back-end of web applications, games, in-house scripts and even build robust test automation framework\nYou will get the best in class support from the instructor for any question you have related to the course.\n\nThis course is very well structured:\nEach lecture consist of an on-demand video and code files\nThere are quizzes, homework to test your knowledge\nHigh focus on practice and asking questions\nYou will also learn coding best practices\nIn recent years demand for python has exploded the job market and there  are not as many developers as open jobs because not just development, QA industry is rapidly transitioning to python and building automation  tools\n\nThis course is backed by Udemy's 30-day money back guarantee.  If you are not satisfied for any reason, you will  get the money back. In addition to that you will keep all the code files of the course as a thank you for trying out the  course !!\nWhat are you waiting for? Enroll today and learn the powerful python language !!",
      "target_audience": [
        "Beginners with zero programming background",
        "Experienced programmers with other programming language",
        "Testers who want to automate tools"
      ]
    },
    {
      "title": "Python OOP Course: Master Object-Oriented Programming",
      "url": "https://www.udemy.com/course/python-oop-course/",
      "bio": "Master Python OOP and Become a Better Python Programmer by Writing Modular, Readable, and Reusable Python OOP Code",
      "objectives": [
        "Write clean code that is reusable, modular, and readable",
        "Level up your Python Programming skills",
        "Learn the fundamental object-oriented programming concepts",
        "Apply OOP concepts to your Python code",
        "Work on a project to enhance your understanding of the course",
        "Good and bad practices when writing OOP code"
      ],
      "course_content": {
        "Object-Oriented Mindset": [
          "Course Introduction",
          "What is Object-Oriented Programming?",
          "Concepts of Object-Oriented Programming",
          "Classes vs Objects"
        ],
        "Classes and Objects": [
          "Your First Python Class and Object",
          "All about the id() Function",
          "How are Objects and Classes Stored in Memory",
          "Expressing Object's Behavior using Methods",
          "Initializing Object Attributes using __init__",
          "Encapsulation in Python",
          "Introducing the Project: MaxHandWins",
          "[Homework] Worksheet 1",
          "[Solution] Worksheet 1",
          "[Homework] Worksheet 2",
          "[Solution] Worksheet 2",
          "Classes and Objects"
        ],
        "Attributes and Methods - Deep Dive": [
          "Class Attributes vs Instance Attributes",
          "Class Methods vs Instance Methods",
          "Useful Examples for Class Methods",
          "[Homework] Worksheet 3",
          "[Solution] Worksheet 3"
        ],
        "Inheritance": [
          "Basic Inheritance",
          "Method Overriding",
          "Constructor Inheritance",
          "[Homework] Worksheet 4",
          "[Solution] Worksheet 4"
        ],
        "[Advanced] Magic Methods": [
          "What are Magic Methods?",
          "Introduction to Arithmetic Magic Methods",
          "The __add__ Magic Method",
          "The __sub__ Magic Method",
          "The __mul__ Magic Method",
          "Introduction to Comparison Magic Methods",
          "Equality and Inequality Magic Methods",
          "More Comparison Magic Methods",
          "The __str__ Magic Method",
          "[Homework] Worksheet 5",
          "[Solution] Worksheet 5",
          "[Homework] Worksheet 6",
          "[Solution] Worksheet 6"
        ]
      },
      "requirements": [
        "Basic understanding of Python lists, dictionaries, and functions",
        "A computer to run Python on",
        "An appetite to learn by doing"
      ],
      "description": "Important: This course is NOT for absolute beginners. Object-oriented programming / design is for intermediate-level learners.\nObject-oriented programming (OOP) is a programming model that is widely used in the industry.\nMastering OOP concepts allows you to write code that is readable, maintainable, reusable, and overall more elegant. All of these are skills that separate high-performing programmers from average programmers.\nEverything in Python is actually an object! This means that your understanding of the Python programming language is not complete until you fully internalize OOP concepts and understand how to apply these concepts in Python.\nSo if you want to be a solid Python programmer, then understanding OOP concepts, learning how to design, implement, and apply these concepts in your code is crucial.\nWhat You Will Learn\nWrite clean code that is reusable, modular, and readable\nLevel up your Python programming skills\nLearn the fundamental object-oriented programming concepts\nApply OOP concepts to your Python code\nWork on a project to enhance your understanding of the course\nGood and bad practices when writing OOP code\nThis course is for you if you:\nhave basic knowledge of Python and wants to take your skills to the next level\nwant to learn the fundamental concepts of object-oriented programming\nwant to learn how to apply object-oriented programming concepts in Python\nlike to learn concepts in-depth\nlike to learn by doing homework and working on a project\nWhat are the prerequisites for this course?\nThis course is about object-oriented programming in Python. I assume that you have a fairly basic knowledge of the Python programming language. For example, you know what variables, for loops, functions, lists, and dictionaries are.",
      "target_audience": [
        "Beginners who want to learn the fundamental concepts of object-oriented programming",
        "Beginners who want to learn how to apply object-oriented programming concepts in Python",
        "Like to learn concepts in-depth",
        "Want to take your skills to the next level"
      ]
    },
    {
      "title": "WPF & XAML: Build 10 WPF applications (C#) in 2020",
      "url": "https://www.udemy.com/course/wpf-xaml-c-sharp/",
      "bio": "Learn XAML and WPF development on 10 projects. WPF/C# programming even for beginners",
      "objectives": [
        "Create 10 applications using WPF & XAML",
        "Be able to create custom WPF application",
        "Understand Programming Fundamentals in C#",
        "Be able to write XAML code for your application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Say Hello :)",
          "Install Visual Studio"
        ],
        "Programming Fundamentals in c#": [
          "What is programming?",
          "Hello World",
          "What is variable?",
          "Data types",
          "CODE: Variables",
          "QUIZ: Variables",
          "Logical Operators 1 (<, >, <=, >=)",
          "Logical Operators 2 (!, &&, ||)",
          "if statement",
          "CODE: if statement",
          "switch statement",
          "CODE: Switch",
          "QUIZ: Conditions",
          "What is array?",
          "CODE: Array",
          "What is loop?",
          "CODE: For loop",
          "CODE: While loop",
          "CODE: do-while loop",
          "QUIZ: Arrays, Loops",
          "What is function?",
          "CODE: Functions",
          "Why should you use function?",
          "QUIZ: Functions",
          "CODE: first application (Calculator)"
        ],
        "Starter applications": [
          "GUI: Calculator",
          "FUNCTIONALITY: Calculator",
          "GUI: Calculator Fix",
          "GUI: Guess Number",
          "FUNCTIONALITY: Guess Number",
          "GUI: Todo list",
          "FUNCTIONALITY: Todo list",
          "GUI: Advanced Calculator",
          "FUNCTIONALITY: Advanced Calculator",
          "GUI: Text Editor",
          "FUNCTIONALITY: Text Editor",
          "GUI: Calendar",
          "FUNCTIONALITY: Calendar 1",
          "FUNCTIONALITY: Calendar 2"
        ],
        "Advanced applications": [
          "GUI: Canvas",
          "FUNCTIONALITY: Canvas",
          "GUI: Graph",
          "FUNCTIONALITY: Graph",
          "FUNCTIONALITY: Graph 2"
        ],
        "Games": [
          "GUI: Clicking Game",
          "FUNCTIONALITY: Clicking Game 1",
          "FUNCTIONALITY: Clicking Game 2",
          "GUI: Tick-Tack-Toe",
          "FUNCTIONALITY: Tick-Tack-Toe"
        ],
        "BONUS: Discounts to my other courses!": [
          "BONUS: Discounts to my other courses!"
        ]
      },
      "requirements": [
        "Optional: Understand Programming Fundamentals (variable, object, function, if, arrays)"
      ],
      "description": "Do you want to start with WPF and XAML programming?\nThen this course is designed for you. In this course, you will create 10 applications using WPF,XAML and C# programming language. You will also learn the important concepts of programming. After finishing the course you should be able to create simple applications and have a strong foundation in programming. I try to explain how all the important concepts work and how you can use them in your C# code.\nI know you don't have time for long and boring lectures. That is why I try to be as engaging as possible. I also go directly to the point.\nPractice oppurtunities:\nThrough out the course are 4 tests on which you can practice your knowledge. Also during the \"CODE\" videos I am tring to keep you engaged by asking questions like \"What will be the result of this?\".\nWhat will I learn?\nFirstly, you will learn programming fundamentals. Because without the foundation you cannot move on and create applications.\nwhat is program\nWhat is programming\nvariables\ndata types\nif and switch statements\narrays\nloops (for, while, do-while)\nfunctions\nthat is why the knowledge of programming fundamentals is optional.\nThen you will use the gained knowledge and build 10  WPF applications:\nSimple Calculator\nGuess Number Game\nTODO list\nAdvanced Calculator\nText Editor\nCalendar\nCanvas\nGraph Designer\nClicking game\nTick tack toe game\n\n\nWho should take this course?\nAnyone who wants to learn programming fundamentals in C#\nAnyone who wants to create WPF & XAML applications",
      "target_audience": [
        "Anyone (even beginner) who wants to learn how to create WPF application",
        "Anyone who wants to learn how to write XAML code"
      ]
    },
    {
      "title": "Swift 4 - Learn to Code with Apple's New Language",
      "url": "https://www.udemy.com/course/swift-4-learn-to-code-with-apples-new-language/",
      "bio": "Learn to Program Swift 4 with Xcode Playgrounds and be part of the world's fastest-growing programming language, iOS 11!",
      "objectives": [
        "Confidently write Swift code",
        "Learn object-oriented programming",
        "Convert Swift 3 code to Swift 4",
        "Create a fully functional iPhone App",
        "Create a website with Vapor",
        "Learn what's new in Swift 4"
      ],
      "course_content": {},
      "requirements": [
        "You will need a computer running either Mac OS, Windows, or Linux",
        "No programming experience needed!"
      ],
      "description": "Have you ever wanted to try out programming but didn't know where to start? Have you previously tried to learn Swift but got fed up with incomplete YouTube videos and poorly written tutorials? Or are you looking to move your code from Swift 3 to 4?\nTHEN THIS IS THE COURSE FOR YOU!\nIn my Swift 4 course, I will walk you through all the essential information you need to write Swift code. I'm a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you!\n\nWhat is Swift?\nSwift is a programming language that allows you to write software for iPhones, iPads, Macs, Apple Watches, Apple TVs, desktops, servers, or anything else that runs code! Swift is great for new programmers because it is very intuitive, it continues to evolve as Apple adds new features, it is relatively easy to catch software bugs compared to other languages, and you can see your results immediately by running code in a Playground.\nIn 2014, Apple announced Swift, along with a 500-page manual explaining how this brand-new language worked. So I immediately jumped into that manual and within three days I created the internet's first Swift course! Since then, Swift has always been my favorite language to teach and I love how it keeps evolving! I have now taught over 60,000 students how to code with Swift, and I'm excited to have you join us. It's going to be a lot of fun :) Also, Swift was open sourced in December of 2015 so you can now take this course even if you are on a Linux or Windows computer!\nContents and Overview\n\nI believe we learn best by doing. So, in this course, every lecture is followed up by an exercise for you to test what you just learned. This format will allow you to actually learn Swift and not just follow along like a robot ;)\nIn this course I will lead you through setting up Swift locally, describe the basics of the language, explain how it compares to other common languages (including Objective C), and show you how to get started on new projects.\nThe course is designed to provide a comprehensive introduction to Swift so that you can begin experimenting right away. Upon completion, you will be fluently programming in Swift 4 and will have the base knowledge needed to develop custom applications. You will also get experience working with Xcode's new Playground file, which allows you to learn code is a quick and interactive way, giving you immediate results.\nCourse material is regularly refreshed to include all of the newest updates and information, and since you’re granted lifetime access upon registering, you can rely on this course to keep your Swift skills on the cutting edge. Additionally, I have made this course downloadable, so you can work through the class offline, making it as convenient as possible for you!\nDon't waste your time scouring the internet and trying to piece together how to learn Swift on your own. Invest in yourself, and allow me to teach you how to program with Swift while having fun.\nDon't take my word for it. See what my other students are saying!\n\"Outstanding course, Nick has simply simplified swift language to a level where there is no way you won't get it. this is the best introduction to swift language ever.\" - Fouad Tir\n\"Nick is fantastic and very knowledgeable! I recommend this course to anybody that wants to get started in swift.\" - Coty Markham\n\n\"This course is fun and the instructor is, too. He is personable and that makes it easy to start learning. He talks in plain English and his examples are good. One of the better courses I have watched. Thanks.\" - Gordon Feinberg\n\"Awesome course! Very clearly explained in a way that makes it easier to digest and integrate the concepts than any other course I have tried. I highly recommend it.\" - Richard Wiig\nI am so confident that you will love my course, that I even offer a 100% 30-day money-back guarantee. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "This course is great for students who are completely new to programming. I'll walk you step by step and teach you everything that you need to know.",
        "This course will be a great fit for people who have Swift 3 experience and want to know what's new in Swift 4"
      ]
    },
    {
      "title": "Python in Containers",
      "url": "https://www.udemy.com/course/python-in-containers/",
      "bio": "All about Containers, Docker and Kubernetes for Python Engineers",
      "objectives": [
        "Build Container Image with Python Application in it",
        "Ship Container Images to Docker Hub and other Container Image Registries",
        "Run Jupyter Notebooks in Docker",
        "Use Docker Desktop for Windows Pro and MacOS",
        "Use Docker Toolbox for Windows Home",
        "Use Docker Machine to create Virtual Machines with Docker Software",
        "Master Dockerfile to Automate Container Image Build",
        "Create Custom Container Images from Scratch",
        "Use Python Official Images",
        "Design Flask and Django Multi-Container Deployments",
        "Automate Multi-Container Deployments with Docker Compose",
        "Containerize TensorFlow Models into Microservices",
        "Deploy Complex, Multi-Container Applications in Docker Swarm",
        "Deploy Complex, Multi-Container Application in Kubernetes",
        "Use Kubernetes with Minikube on a Development Host",
        "Use Kubernetes in Public Cloud (using example of Google Kubernetes Engine)",
        "Kubernetes Objects: Pods, Pod Controllers: ReplicaSet, Deployment, Job, CronJob, Services, Ingress, Persistent Volumes",
        "Writing Kubernetes Object Template Files",
        "Monitor and Manage Application in Kubernetes",
        "Execute Containers with NVIDIA GPU Acceleration"
      ],
      "course_content": {},
      "requirements": [
        "Basic Python Programming Skills",
        "Basic understanding of Linux is a plus"
      ],
      "description": "Important Disclaimer: This course requires you to download Anaconda software from anaconda[.]com website, as well as Docker software from docker[.]com website. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nDocker and Kubernetes are the Must-Have Skills for Python Enginner these days.\nWhether your focus is in Machine Learning & Data Science, or you use Python as General Programming Language, you must understand Docker & Kubernetes. Both form a basis of Modern Cloud Native Applications built in Microservices Architecture.\nQuotes from selected course reviews:\n\"It covers pretty much everything you'd expect from enterprise project\" Abbi1680\n\"This course is absolute gold for data science and machine learning people because all Docker and Kubernetes courses out there focus on nothing but web applications. Thanks to the instructor for handling the concept of virtualization from a much needed different perspective. There are a lot of sources for learning ML and DS but skills taught in this course are what will make you stand out from the crowd.\" Mertkan Alacahan\n\"Spot on. Great depth yet very concise.\" Toby Patterson\n\"This is a deep deep deep dive in Docker with python. It is the complete course. Thanks for putting this together it is more than enough for what a need. I think watching the basic lectures and some selected topics I get what I needed and this became my docker reference guide if I need to solve a specific scenario. Thanks for putting this together. Highly recommend the course if you are a python developer.\" Pedro\nIn this Course you learn how to:\n\n\nDevelop and Explore Machine Learning & Data Science Jupyter Notebooks in Docker\nRun Machine Learning Models in Production with Kubernetes and Docker Swarm\npackage your Python Code into Containers\npublish your Containers in Image Registries\ndeploy Containers in Production\nbuild highly modular Container-based Services in Micro-Services fashion\nmonitor and maintain Containerized Apps\n\n\nYou are going to become fluent and confident in using Docker Tools to create top-class Containers running your Python Code. You master Docker Runtime Tools like Compose and Swarm to run them. The Course also gives you sound knowledge and deep understanding of Kubernetes as the Application Platform. You gain confidence in Designing your Application to run on Kubernetes, as well as get deep knowledge of writing Kubernetes Object Declarations.\nThe Course is full of practical Exercises. There are over 40 GitHub Repositories full of Code Samples for the Course.\nYou can use the Course in two ways:\nIf you use Python for Machine Learning & Data Science, go Top-Down: start with Section 7 to quickly gain practical Docker skills and use Sections 2 to 6 to dig deeper into specific Container Topics.\nIf you want to use Python for Web Apps & Microservices, try Bottom-Up: use the Course in linear manner.\nStart building Containers today!",
      "target_audience": [
        "Python Programmers",
        "Data Scientists",
        "Machine Learning Engineers"
      ]
    },
    {
      "title": "2025 Core JAVA Bootcamp from Zero to Hero",
      "url": "https://www.udemy.com/course/2022-core-java-bootcamp-from-zero-to-hero/",
      "bio": "Core Java programming | core java made easy | Complete core java in simple way | full stack java developer - core java",
      "objectives": [
        "The fundamentals of Java",
        "How to understand and write simple Java programs",
        "Conceptual Understanding of OOPS Concepts",
        "Practice exercises to strengthen your coding knowledge"
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Java is one of the most popular programming languages. Java offers both object-oriented and functional programming features.\n\n\nLearn and use the top features all the way java 17\n\n\nMaster the Object-Oriented Features and Java Language\nExecute your first java program and understand the building blocks of a java program\nLearn Static and Non-Static Contexts used in every java program\nUse Datatypes, Literals, Variables and Typecasting\nGain debugging skills\nUnderstand recursion\nLearn Strings, String Buffer Class and string methods\nSpecify different access modifiers\nDefine logic using conditional statements, looping constructs\nUse packages to organize code\nImplement inheritance, abstraction, polymorphism and encapsulation\nUnderstand interfaces, their importance, and their uses\nUse abstract classes and interfaces to implement abstraction\nImplement Inter Thread Communication\nHandle Exceptions\nUnderstand File handling methods\nUnderstand and use the various Java Collection Classes\nUnderstand basics of servlets\nWork on various use cases and coding problems\nLearn the internals of the Java Virtual Machine\n\n\n\n\nWhat are the requirements?\nJava,Eclipse IDE(Installation is covered in easy setup section)\nor\nYou can Use Online IDE such as repl it to work with Java IDE\nWho this course is for:\nDevelopers who are getting started with java\nTesters who want to learn java quickly and in depth\nExperienced developers who want to learn latest java features\nExperienced developers who want to understand the internals of JVM\nAnyone who want to learn java quickly and in depth",
      "target_audience": [
        "Beginners in Core JAVA"
      ]
    },
    {
      "title": "Python GUI Programming using Tkinter and Python 3",
      "url": "https://www.udemy.com/course/python-gui-programming-using-tkinter-and-python-3/",
      "bio": "Python GUI Programming is powerful and Tkinter is simple. Use them to create Applications, Python Graphics, UI and more.",
      "objectives": [
        "Skills to build amazing Python GUI applications using Tkinter",
        "Convert command line tools to Graphical Applications",
        "Access to our private facebook group available to only students of this Python GUI course",
        "Learn Python GUI programming and how to implement it in various real life scenarios",
        "You will get an in-depth understanding of elements in Python UI",
        "Develop and integrate Python Graphics and Shapes into your Project",
        "Use Python Tkinter to develop powerful applications"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Walkthrough",
          "Installing Python and Pycharm",
          "Quiz - 1"
        ],
        "Python Basics": [
          "Variables and Priting Statements",
          "If-Else Condition",
          "Taking Input from the User",
          "Functions",
          "Lists and Arrays",
          "For - Loops",
          "While - Loops",
          "Importing Packages and Modules",
          "Quiz - 2"
        ],
        "Introduction to Tkinter": [
          "Making your first Window",
          "Changing Title and Icons",
          "Quiz - 3"
        ],
        "Layouts in Tkinter": [
          "Organizing your Layout",
          "Fitting Widgets in your Layout",
          "Grid Layout",
          "More on the Grid Layout",
          "Quiz - 4"
        ],
        "Interaction with GUI": [
          "Binding Functions to Layouts",
          "Mouse Click Events",
          "Using Classes",
          "Quiz - 5"
        ],
        "Widgets using Python GUI Programming": [
          "Creating Drop Down Menus",
          "Creating a Toolbar",
          "Adding the Status Bar",
          "Messagebox",
          "Quiz - 6"
        ],
        "Python Graphics and Shapes": [
          "Line Graphics",
          "Creating a Box",
          "Deleting the Canvas",
          "Adding Images",
          "Quiz - 7"
        ],
        "BONUS": [
          "The Scale Widget",
          "SpinBox Widget"
        ]
      },
      "requirements": [
        "A code editor of your choice (we will go through this in a lecture at the beginning of the course)",
        "Desire to learn and improve your skills",
        "You won’t need to buy any software – everything we are going to use will be free",
        "An Internet connection is required"
      ],
      "description": "Have you ever wanted to build a software with a graphical interface but didn't know how to? May be you even know how to create tools on a command line but have no idea how to convert it into a graphical interface that people can click on. In this course we will be learning Python GUI Programming + Tkinter to build graphical user interfaces (GUI) and widgets from scratch.\nWith this course you will be able to create beautiful looking graphical interfaces quickly. You will learn Python basics, Python GUI development and Tkinter, Python Graphics, UI and more.\nWhy choose me as an instructor? Why buy this course among all those other courses?\nWhen i was a kid i saw this YouTube video on how make a folder invisible on Windows I was so fascinated with this idea. Since then my love for technology has only grown. I understand the people who are passionate about learning new things. At the end of each section we will take a quiz to check up on your skills and see if we’re ready for the next section. We will create this project together from start to finish.\nSo, why wait? If all this sounds great to you, Press on “Take this Course” and start learning today! 100% money-back guarantee.",
      "target_audience": [
        "Beginners who want to step into the world of Python GUI Programming",
        "Python developers who have a desire to build GUI Applications and Tools",
        "Students who wants to learn Tkinter + Python Graphical Interface",
        "Developers who want to convert their command line tools to Graphic Softwares",
        "Any person interested in learning about Python Graphics, Python UI development and Python GUI Framework",
        "Do NOT take this course if you are a Python GUI Developer with many years of experience"
      ]
    },
    {
      "title": "17 Beginner C# Walkthrough Projects step by step",
      "url": "https://www.udemy.com/course/17-beginner-c-walkthrough-projects-step-by-step/",
      "bio": "Learn how to code in C# by building 17 projects",
      "objectives": [
        "Develop your creative and technical skills to build c# applications",
        "Create Event Handlers",
        "Create Custom Methods",
        "Customize form",
        "Add controls and change their properties",
        "Write conditional code",
        "Add comments to code",
        "Understand how intellisense works",
        "Build and test your code",
        "Create 17 C# Projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "Internet access and basic navigation skills",
        "Desire to learn"
      ],
      "description": "Welcome to this  C#  project based course for  beginners course (pronounced C Sharp).\nC# is designed to be a simple, modern, general-purpose, object-oriented programming language, borrowing key concepts from several other languages, most notably Java\n.\nC# is an Object Oriented language and does not offer global variables or functions. Everything is wrapped in classes, even simple types like int and string, which inherits from the System.Object class.\nIn this course I will walk you through how to create  the following 17 beginner c # projects:\n\n\n\n\nCalculator\nDigital Clock with date and time\nSimple Digital Clock\nCurrency Converter\nPicture Viewer\nMaths Quiz\nWeb browser\nNotepad\nMaze Game\npaint drawing app\nPair matching game\n2D Ping Pong game\nMusic layer\nimage upload form\nScreen Saver\nDatabase driven login form\nGoogle Maps\n\nC# is an object-oriented language designed by Microsoft and used by systems engineers, desktop programmers, and mobile app developers the world over.\nThis course  will  guide you through C#'s basics, its core syntax, and the fundamentals of writing strong C# code.  I will  show you how to install Visual Studio, a great IDE for developing in C#, and then dive into the language itself. Along the way, we will cover topics such as:\nDeclaring and initializing variables with a variety of data types\nData type Conversions and Truncating\nExploring  Basic Arithmetic operators\nTroubleshoot Compile errors\nControlling flow with conditional code\nCreating Method\nCreating Event Handler methods\nUsing controls and changing their properties\n\nIf C# is your first step into programming or adding it your existing skillset, these training videos will help you understand the language and use it to build your own great software.\nWelcome :-)",
      "target_audience": [
        "Aspiring SQL developers",
        "Aspiring programmers",
        "Novice programmers"
      ]
    },
    {
      "title": "Swift 3 - Learn to Code with Apple's New Language",
      "url": "https://www.udemy.com/course/swift-3-learn-to-code-with-apples-new-language/",
      "bio": "Learn to Program Swift 3 with Xcode Playgrounds. Be a part of the world's fastest growing programming language! iOS 10",
      "objectives": [
        "Confident write Swift code",
        "Learn the basics of object oriented programming",
        "Convert Swift 2 code to Swift 3"
      ],
      "course_content": {
        "Welcome": [
          "Welcome and Xcode",
          "My Story",
          "Getting the Most out of This Course",
          "Your First Line of Swift Code"
        ],
        "Variables and Constants": [
          "Intro",
          "Playgrounds",
          "Variables",
          "Variables Exercise",
          "Variables Can Change",
          "Variables Can Change Exercise",
          "Constants",
          "Constants Exercise",
          "Outro",
          "Swift Cheat Sheet"
        ],
        "Strings and Ints": [
          "Intro",
          "Strings",
          "Strings Exercise",
          "Emoji",
          "Emoji Exercise",
          "Ints",
          "Ints Exercise",
          "String Interpolation",
          "String Interpolation Exercise",
          "Types",
          "Types Exercise",
          "Outro"
        ],
        "Math": [
          "Intro",
          "Basic Math",
          "Basic Math Exercise",
          "Floats and Doubles",
          "Floats and Doubles Exercise",
          "Mixing Floats, Doubles, and Ints",
          "Mixing Floats, Doubles, and Ints Exercise",
          "Advanced Math",
          "Advanced Math Exercise",
          "Outro"
        ],
        "Booleans and If Statements": [
          "Intro",
          "Booleans",
          "Booleans Exercise",
          "If Statements",
          "If Statements Exercise",
          "Equal, Greater, and Less",
          "Equal, Greater, and Less Exercise",
          "Else",
          "Else Exercise",
          "AND and OR",
          "AND and OR Exercise",
          "Outro"
        ],
        "Comments and Print": [
          "Intro",
          "Comments",
          "Comments Exercise",
          "Multiline Comments",
          "Multiline Comments Exercise",
          "Print",
          "Print Exercise",
          "Outro"
        ],
        "Switches": [
          "Intro",
          "Switches",
          "Switches Exercise",
          "Default",
          "Default Exercise",
          "Multiple Matching",
          "Multiple Matching Exercise",
          "Interval Matching",
          "Interval Matching Exercise",
          "Outro"
        ],
        "Arrays": [
          "Intro",
          "Arrays",
          "Arrays Exercise",
          "Append and Count",
          "Append and Count Exercise",
          "Getting a Specific Item and Updating",
          "Getting a Specific Item and Updating Exercise",
          "Insert and Remove",
          "Insert and Remove Exercise",
          "Contains and IndexOf",
          "Contains and IndexOf Exercise",
          "Outro"
        ],
        "For Loops": [
          "Intro",
          "For Loops",
          "For Loop Exercise",
          "Counting",
          "Counting Exercise",
          "Arrays and For Loops",
          "Arrays and For Loops Exercise",
          "Outro"
        ],
        "What's New in Swift 3": [
          "Intro",
          "ABI Stabilization",
          "++ Death",
          "C Style For Loops Death",
          "Parameters",
          "Enums",
          "Short Names and Color Literals",
          "Xcode Conversion Tool",
          "Outro"
        ]
      },
      "requirements": [
        "You will need a computer running either Mac OS, Windows or Linux"
      ],
      "description": "Have you ever wanted to try out programming? Have you tried to learn Swift, only to get fed up with incomplete YouTube tutorials and poorly written tutorials? Looking to move your code from Swift 2 to 3?\n\nTHIS IS THE COURSE FOR YOU!\nIn my Swift 3 course, I will walk you through all the essential information you need to write swift code. I'm a self taught programmer so I know what it feels like to start from scratch. I care about your learning.\nI believe we learn best by doing. So, in this course, every lecture is followed up by an exercise for you to test yourself. This format will allow you to actually learn Swift and not just follow along like a robot ;)\nSwift was open sourced in December of 2015 so you can now take this course even if you are on a Linux or Windows computer!\nA Modern Language Evolved from Objective C\nSwift is a multi-paradigm programming language developed by Apple for use with iOS and OS X. Designed to replace Objective C, work began on Swift in 2010 and the first mobile app was debuted in June 2014 at the Worldwide Developers Conference. Despite its goal of replacing Objective C, Swift is capable of working alongside the more dated Objective C language while using the Cocoa and Cocoa Touch frameworks.\nSwift is built with the LLVM compiler included in Xcode 6 beta, and uses the Objective-C runtime, allowing Objective-C, Objective-C++ and Swift code to run within a single program. During it’s debut, Swift was described as “Objective C without the C” by Apple’s VP of Software Engineering Craig Federighi.\nContents and Overview\nIn this course, you will be lead through setting up Swift locally, the basics of the language, how it compares to other common languages (including Objective C), and how to get started on new projects.\nThe course is designed to provide a comprehensive introduction to Swift, so that you can begin experimenting right away. Upon completion, you will understand the foundations of Swift code and will be able to develop custom applications. You will also get experience working with Xcode's new .playground file.\nCourse material is regularly refreshed to include all of the newest updates and information, and since you’re granted lifetime access upon registering, you can rely on this course to keep your Swift skills on the cutting edge.",
      "target_audience": [
        "This course is great for students who are completely new to programming. I'll walk you step by step with what you need to know",
        "This course will be a great fit for people who have Swift 2 experience and want to know what's new in Swift 3"
      ]
    },
    {
      "title": "Complete Kotlin Design Patterns masterclass",
      "url": "https://www.udemy.com/course/kotlindesignpatterns/",
      "bio": "Improve your coding skills by learning Software Design Patterns applied to Kotlin and Android development",
      "objectives": [
        "Design Patterns",
        "Proper Kotlin development",
        "Creational Patterns",
        "Structural Patterns",
        "Behavioural Patterns",
        "Coding practice"
      ],
      "course_content": {
        "Introduction": [
          "Introduction: What are design patterns",
          "Types of design patterns",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Creating the project"
        ],
        "Creational patterns": [
          "Singleton",
          "Factory method",
          "Abstract factory",
          "Builder",
          "Lazy initialisation",
          "Prototype"
        ],
        "Structural patterns": [
          "Adapter",
          "Bridge",
          "Facade",
          "Decorator",
          "Composite",
          "Proxy"
        ],
        "Behavioural patterns": [
          "Observer",
          "Chain of responsibility",
          "Command",
          "Strategy",
          "State",
          "Visitor",
          "Mediator",
          "Memento"
        ],
        "Conclusion": [
          "Thank you",
          "More resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Kotlin knowledge",
        "Mac or PC"
      ],
      "description": "Kotlin is the main development language for the Android system.\nKnowing how to build well structured programs and apps, that are scalable and robust is essential for every developer.\nThat's why I've created this course on Design Patterns for Kotlin.\nHere you will learn how to apply popular patterns to your code, such as Builder, Adapter, Abstract Factory, as well as lesser known but very useful patterns, such as Composite, Decorator, Strategy etc.\nThis course will teach you how to structure your code so that it is more maintainable as it grows, and that it's easier to debug and test. When building a new project, you are not trying to reinvent the wheel, but instead to implement the correct solutions to the problems that you encounter.\nIt will also teach you the terminology that you need when you communicate with top level developers. When they say they implemented a factory for a piece of code, or the added a builder pattern for the creation of a certain object, you will immediately know what they mean.\nThis course covers 3 types of design patterns\nCreational\nStructural\nBehavioural\nWe will also include code samples at each step of the way, so that you already know how to implement these patterns in practice.\nSign up today, and let's learn how to use Design Patterns in Kotlin.",
      "target_audience": [
        "Kotlin developers",
        "Android developers"
      ]
    },
    {
      "title": "70+ JavaScript Challenges: Data Structures & Algorithms",
      "url": "https://www.udemy.com/course/javascript-challenges/",
      "bio": "Build better foundational skills as a developer by doing challenges and learning about data structures and algorithms",
      "objectives": [
        "Explore 70+ coding challenges from beginner, intermediate and advanced levels",
        "Ace coding interviews by learning how to solve problems with iteration, recursion, array methods & more",
        "Master data structures like stacks, queues, linked lists, trees, maps and hash maps",
        "Learn about sorting algorithms like bubble sort, insertion, merge and quick sort",
        "Full sandbox with explanations and Jest tests for every challenge",
        "You do NOT have to take on the challenges alone. Follow along and learn from the explanations"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "Course Structure",
          "DSA - The What & Why",
          "Tools & Basic Setup",
          "Sandbox Environment Setup"
        ],
        "Basic Challenges - Part 1": [
          "Hello World (Starter Challenge)",
          "Get Sum (Starter Challenege)",
          "Calculator",
          "Count Occurences",
          "Find Max Number",
          "Title Case",
          "Reverse String",
          "Palindrome",
          "Count Vowels",
          "Remove Duplicates"
        ],
        "Basic Challenges - Part 2": [
          "FizzBuzz Array",
          "Array Intersection",
          "Display Likes",
          "Find Missing Number",
          "Find Missing Letter",
          "Are All Chars Unique?",
          "First Non-Repeating Character",
          "Dice Game Simulation",
          "Format Phone Number",
          "Validate Email"
        ],
        "High Order Array Methods": [
          "Simple Examples",
          "Sum Of Even Squares",
          "Calculate Total Sales",
          "Highest Scoring Word",
          "Valid Anagrams",
          "Hashtag Generator",
          "Valid IPv4",
          "Analyze Car Mileage",
          "Password Validator",
          "Find Missing Letter Refactor"
        ],
        "Recursion": [
          "Recursion Intro (Countdown)",
          "Recursive Unwinding",
          "Reverse String Using Recursion",
          "Fibonacci Sequence",
          "Factorial",
          "Power",
          "Array Sum",
          "Number Range",
          "Flatten Array",
          "Permutations"
        ],
        "Time & Space Complexity": [
          "What Is Time Complexity?",
          "Big O Notation",
          "Constant Time Complexity - O(1)",
          "Linear Time Complexity - O(n)",
          "Quadratic Time Complexity - O(n^2)",
          "Logarithmic Time Complexity - O(log n)",
          "Space Complexity",
          "Max Subarray - Quadratic",
          "Sliding Window Technique",
          "Max Subarray - Linear"
        ],
        "Hash Tables, Maps & Sets": [
          "Hash Table Intro",
          "Maps",
          "Word Frequency Counter",
          "Phone Number Directory",
          "Anagram Grouping",
          "Sets",
          "Symmetric Difference",
          "Two Sum",
          "Longest Consecutive",
          "Custom Hash Table - Part 1",
          "Custom Hash Table - Part 2",
          "Word Instance Counter Using Custom Hash Table",
          "Add getValues Method",
          "Anagram Grouping With Custom Hash Table"
        ],
        "Stacks, Queues & Linked Lists": [
          "What Is A Stack?",
          "Stack Implementation",
          "Reverse String Using A Stack",
          "Balanced Parenthesis",
          "What Is A Queue?",
          "Queue Implementation",
          "Reverse String With A Queue",
          "Palindrome With A Queue & Stack",
          "What Is A LInked LIst?",
          "Linked List Implementation",
          "Reverse String With A Linked List",
          "Fast & Slow Pointers",
          "Find Middle",
          "What Is A Doubly Linked List?",
          "Doubly Linked List Implementation - Part 1",
          "Doubly Linked List Implementation - Part 2",
          "Find Pair Sum"
        ],
        "Binary Trees, BST & Graphs": [
          "What Is a Tree / Binary Tree?",
          "Tree Node Class",
          "Depth-First Traversal",
          "Depth-First Traversal Using Recursion",
          "Breadth-First Traversal",
          "Maximum Depth",
          "What Is A Binary Search Tree?",
          "Binary Search Tree Implementation - Part 1",
          "Binary Search Tree Implementation - Part 2",
          "Validate BST",
          "What Is A Graph?",
          "Adjacency Matrix & Adjacency List",
          "Graph Implementation",
          "Graph Traversal Visualization",
          "Graph Depth-First Traversal",
          "Graph Breadth-First Traversal"
        ],
        "Sorting Algorithms": [
          "What Are Sorting Algorithms?",
          "Bubble Sort Algorithm",
          "Bubble Sort Implementation",
          "Insertion Sort Algorithm",
          "Insertion Sort Implementation",
          "Selection Sort Algorithm",
          "Selection Sort Implementation",
          "Merge Sort Algorithm",
          "Merge Sort Implementation",
          "Quick Sort Algorithm",
          "Quick Sort Implementation"
        ]
      },
      "requirements": [
        "You should know JavaScript & programming fundamentals"
      ],
      "description": "Most of my students know me for my practical, project-based courses and tutorials. I wanted to create something to give you more fundamental skills for problem solving. That's where the idea for this challenges course came from. I want to take my down-to-earth explanations to help you get a better understanding of the code that you write and help you write more efficient code.\n\n\nThis course is for all levels as long as you have a basic understanding of things like loops, functions, arrays, etc. We are writing JavaScript in this course, but about 95% of it can translate to any other language. So even if you are a Python, PHP or C# developer, you can still follow along.\n\n\nBasic Challenges:\nWe start with a bunch of basic challenges that have to do with iteration and loops. Things like FizzBuzz and string reversals. These are very popular questions for entry-level interviews. We also move on to solving problems with high order array methods like filter and map.\n\n\nRecursion:\nRecursion is one of the toughest things to learn in programming. We have an entire section dedicated to it with challenges that we solve using recursion.\n\n\nTime & Space Complexity:\nWe talk about how to measure an algorithm or function's efficiency by using time and space complexity to see how the runtime and memory scale when inscreasing the input.\n\n\nData Structures: Stacks, Queues, Trees, Linked Lists, Graphs, HashMaps\nWe go over all of the common data structures and create our own implementation of them using JavaScript classes, but like I said, you could use any language. We also learn how to traverse them and complete challenges using them.\n\n\nSorting Algorithms:\nWe get into different sorting algorithms like bubble sort, insertion, selection, merge and quick sort. These are popular topics for interviews.",
      "target_audience": [
        "Developers that want to build better foundational problem solving skills and pass job interviews"
      ]
    },
    {
      "title": "Getting Started with Azure Functions",
      "url": "https://www.udemy.com/course/getting-started-with-azure-functions/",
      "bio": "Utilize Serverless Architecture to Build Scalable Cloud System.",
      "objectives": [
        "Use the different languages supported by Azure Functions",
        "Trigger, bind, and see the architecture considerations",
        "Get to know how Azure Functions can talk to other Azure services",
        "See how Azure Functions can talk to external services",
        "Know about serverless architecture and how to create it.",
        "What serverless architecture is and how to do it",
        "Test, monitor, and debug your Azure Functions",
        "Automate deployment for your Azure Functions"
      ],
      "course_content": {
        "Get Started with Azure Functions": [
          "The Course Overview",
          "What are Azure Functions?",
          "Setting Up Your Azure Account",
          "Writing Your First Azure Function",
          "How Does Pricing Work?"
        ],
        "Different Languages in Azure Functions": [
          "JavaScript in Azure Functions with NodeJS",
          "C# in Azure Functions",
          "F# in Azure Functions",
          "Python in Azure Functions",
          "PHP in Azure Functions",
          "Other Languages in Azure Functions"
        ],
        "Triggers and Bindings": [
          "Introduction to Triggers and Bindings",
          "Basic Triggers",
          "Storage Triggers",
          "Other Triggers and Bindings",
          "Advanced Bindings"
        ],
        "Architecting with Azure Functions": [
          "Choosing Between Flow, Logic Apps, Azure Functions, and WebJobs",
          "Choosing a Hosting Plan",
          "Best Practices for Azure Functions",
          "Security Concerns"
        ],
        "Building a Serverless Architecture": [
          "What is Serverless Architecture?",
          "Why Serverless?",
          "Serverless Considerations",
          "Serverless Best Practices",
          "Moving to a Serverless Architecture"
        ],
        "Testing and Monitoring Your Azure Functions": [
          "C# Integration Tests",
          "Using the Postman REST Client",
          "Monitoring Your Azure Functions",
          "Debugging Your Azure Functions"
        ],
        "Automating Deployment": [
          "Using Azure Functions Core Tools",
          "Using Git to Edit and Deploy Functions",
          "Introduction to Azure Resource Manager",
          "Using Azure Resource Manager with Function Apps",
          "Putting it All Together for Continuous Delivery"
        ]
      },
      "requirements": [
        "No prior knowledge to Azure functions is necessary."
      ],
      "description": "With Azure Functions, you can easily run small pieces of code in the cloud without worrying about a whole application or the infrastructure to run it. Azure Functions, can be used with triggers to execute your code and bindings to simplify the input and output of your code.\nThis tutorial starts with the basics of Azure Functions and then shows you how to create functions such as WebHooks, Azure Connected, and event processing. Moving ahead, the course demonstrates how to develop, manage, deploy, and monitor your Azure functions in almost any language such as C#, F#, Node.js, Python, PHP, as well as scripting options such as Bash, Batch, and PowerShell.\nNext, you'll see how to scale your functions and use them to process data, integrate systems, and build simple APIs and microservices. Finally, we'll cover some diagnostic techniques with Azure App Services and the best practices of working with Azure Functions. By the end of this tutorial, you will be well-versed with the techniques of scaling your Azure Functions and making the most of the serverless architecture.\nAbout the Author\nPaul Oliver is the Principal Software Architect at Vosaic. Vosaic helps its users unlock insights with video for education and simulations. Vosaic is closely aligned with Hudl, which is the premier video platform for sports.\nBefore taking on the role at Vosaic, he worked as a software developer and architect in the banking and criminal justice industries. Throughout his career, he's been passionate about building well-architected software solutions with security of primary importance. He's architected several applications in the cloud using Microsoft Azure, Amazon Web Services, and Heroku.\nHe received his BSc in Computer Engineering from the University of Nebraska-Lincoln and his Masters of Business Administration degree from Creighton University.",
      "target_audience": [
        "This video aims at IT architects and developers who want to build scalable systems and deploy serverless applications with Azure functions."
      ]
    },
    {
      "title": "What's New in C# 6, C# 7 and Visual Studio 2017",
      "url": "https://www.udemy.com/course/csharp6-csharp7-vs2017/",
      "bio": "Learn new features of C# 6, C# 7 and Visual Studio 2017 on practical examples",
      "objectives": [
        "Harness the power of C# 6 and C# 7",
        "Write more maintainable code in C#",
        "Use powerful new features of Visual Studio 2017"
      ],
      "course_content": {
        "Before taking the Course": [
          "How to Ask Questions",
          "Join .NET Community of Students"
        ],
        "What's New in C# 6": [
          "Outline",
          "Autoproperties and Immutability",
          "Expression-Bodied Members",
          "New Keyword \"nameof\"",
          "Import Statics",
          "String Interpolation",
          "Safe Navigation Operator",
          "Collection Initializers",
          "Exception Filters",
          "Conclusion"
        ],
        "What's New in C# 7": [
          "Outline",
          "Out Variables",
          "Pattern Matching",
          "Tuples and Deconstruction",
          "Local Functions",
          "Returning by Reference",
          "Throwing Expressions",
          "Improvements to Literals",
          "Conclusion"
        ],
        "What's new in Visual Studio 2017": [
          "Outline",
          "Improved Navigation",
          "Run-to-Click",
          "Improved IntelliSense",
          "Live Code Analysis",
          "Live Unit Testing",
          "Conclusion",
          "Final Quiz",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Students should be familiar with C# of older versions"
      ],
      "description": "C# is one of the most powerful languages in the modern world of programming. It has one of the most powerful type system. There was a battle for sometime between Java and C# and now we can say for sure that C# won that battle from the language features point of view.\nC# 6 is already released and fully available with Visual Studio 2015. C# 7 is under development still, but many announced features are already implemented and we can play with them in Visual Studio 2017 which is currently (when I'm writing this) itself under development (release candidate is available).\nTeaching Approach\nNo fluff, no ranting, no beating the air. I esteem your time. The course material is succinct, yet comprehensive. All important concepts are covered. For absolute beginners, I offer my help on Skype absolutely free if requested. Don't forget that this course has English subtitles, so if you don't understand my accent, feel free to turn them on.\nTake this course and you will be satisfied.\nKeep pace with modern C#\nIf you go behind the modern C#, then this course is for you. This course will bring a whole picture of what's going on nowadays in C#. Modern C# is a powerful multiparadigmatical language. New versions of C# bring more and more functional features and you'll see it on practical examples.\nContent and Overview\nThe goal of this course is to show all the new features of C# 6, C# 7 and Visual Studio 2017.\nThis course is built for all kind of C# developers who are interested in learning C# 6, C# 7 and Visual Studio 2017. This course is beneficial for juniors as well as for seniors who want to stay well-informed about new C# features. I’m sure any student will find something interesting and useful in this course.\nThe main prerequisite is to be familiar with development on the .NET platform in C#. That’s all you need.\nIn short, the course covers the following topics.\nC# 6:\nAutoproperties and Immutability\nExpression-bodied members\nImport of static members (using static)\nnameof\nString interpolation\nNullability, null-conditional operators\nIndex initializers\nException Filters\nC# 7:\nEnhanced Tuples\nPattern Matching\nRef. Returns, Async Returns, Exceptions\nDeconstruction\nLocal Functions (more functional programming! :) )\nOut variables literals\nVIsual Studio 2017:\nImproved Navigation\nRun-to-Click (improved debugging)\nImproved IntelliSense\nLive Code Analysis\nLive Unit Testing",
      "target_audience": [
        "Any C# developer who wants to become aware of new C# features"
      ]
    },
    {
      "title": "The Ultimate Web Scraping With Python Bootcamp 2024",
      "url": "https://www.udemy.com/course/the-ultimate-web-scraping-with-python-bootcamp/",
      "bio": "Learn to extract data from the web with python with just one course, covering selectolax, playwright, scrapy and more",
      "objectives": [
        "Understand the fundamentals of web scraping in python from absolute scratch",
        "Scrape information from static and dynamic websites and extract it to a variety of formats",
        "Intercept and emulate hidden APIs to identify highly productive alternatives to getting your data",
        "Master the requests library for working with HTTP",
        "Parse and extract content from HTML using beautifulsoup, selectolax, and Microsoft Playwright",
        "Master complex CSS selectors including descendant, child, sibling combinators",
        "Understand how the web works, including HTTP, HTML, CSS, and JavaScript",
        "Create scrapy crawlers and practice items, itemloaders and custom pipelines",
        "Integrate scrapy with playwright for highly performant, fine-tuned dynamic website crawling",
        "Practice processing and extracting data to a variety of formats including csv, json, xml, and SQL"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "No paid software required - we'll be using open-sourced python libraries",
        "A computer with access to the internet",
        "Prepare to learn real skills you could put to practice right away"
      ],
      "description": "Welcome to the Ultimate Web Scraping With Python Bootcamp, the only course you need to go from a complete beginner in python to a very competent web scraper.\nWeb scraping is the process of programmatically extracting data from the web. Scraping agents visit a web resource, extract content from it, and then process the resulting data in order to parse some specific information of interest.\nScraping is the kind of programming skill that offers immediate feedback, and can be used to automate a wide variety of data collection and processing tasks.\nOver the next 17+ hours, we will methodically cover everything you need to know to write web scraping agents in python.\nThis bootcamp is organized in three parts of increasing difficulty designed to help you progressively build your skill.\n\n\nPart I - Begin\nWe'll start by understanding how the web works by taking a closer look at HTTP, the key application layer communication protocol of the modern web. Next, we'll explore HTML, CSS, and JavaScript from first principles to get a deeper understanding of how website are built. Finally, we'll learn how to use python to send HTTP requests and parse the resulting HTML, CSS, and JavaScript to extract the data we need. Our goal in the first part of the course is to build a solid foundation in both web scraping and python, and put those skills to practice by building functional web scrapers from scratch. Selected topics include:\n\n\na detailed overview the request-response cycle\nunderstanding user-agents, HTTP verbs, headers and statuses\nunderstanding why custom headers can often be used to bypass paywalls\nmastering the requests library to work with HTTP in python\nwhat stateless means and how cookies work\nexploring the role of proxies in modern web architectures\nmastering beautifulsoup for parsing and data extraction\n\n\nPart II - Refine\nIn the second part of the course, we'll build on the foundation we've already laid to explore more advanced topics in web scraping. We'll learn how to scrape dynamic websites that use JavaScript to render their content, by setting up Microsoft Playwright as a headless browser to automate this process. We'll also learn how to identify and emulate API calls to scrape data from websites that don't have formally public APIs. Our projects in this section will include an image scraper that can download a set number of high-resolution images given some keyword, as well as another scraping agent that extracts price and content of discounted video games from a dynamically rendered website. Topics include:\n\n\nidentifying and using hidden APIs and understanding the benefits they offer\nemulating headers, cookies, and body content with ease\nautomatically generating python code from intercepted API requests using postman and httpie\nworking with the highly performant selectolax parsing library\nmastering CSS selectors\nintroducing Microsoft Playwright for headless browsing and dynamic rendering\n\n\nPart III - Master\nIn the final part of the course, we'll introduce scrapy. This will give us an excellent, time-tested framework for building more complex and robust web scrapers. We'll learn how to set up scrapy within a virtual environment and how to create spiders and pipelines to extract data from websites in a variety of formats. Having learned how to use scrapy, we'll then explore how to integrate it with Playwright so that we tackle the challenge of scraping dynamic websites from right within scrapy. We'll conclude this section by building a scraping agent that executes custom JavaScript code before returning the resulting HTML to scrapy. Some topics from this section:\n\n\nlearning how to set up scrapy and explore its command line interface (\"the scrapy tool\")\ndynamically explore response objects using scrapy shell\nunderstand and define item schemas and load data using itemloaders and input/output processors\nintegrate Playwright into scrapy to tackle dynamically rendered JavaScript sites\nwrite PageMethods to specify highly specific instructions to the headless browser from right within scrapy\ndefine custom pipelines for saving into SQL databases and highly customized output formats\n\n\nIn this bootcamp, I will take you step-by-step through engaging video lectures and teach you everything you need to know to get started with web scraping in python.\nBy the end of this course, you will have a complete toolset to conceptualize and implement scraping agents for any website you can imagine.\n\n\nSee you inside!",
      "target_audience": [
        "Anyone who wants to learn how to collect data from the web programmatically",
        "Students with or without web scraping experience looking to level up",
        "Complete beginners with no experience"
      ]
    },
    {
      "title": "From 0 to 1: C Programming - Drill Deep",
      "url": "https://www.udemy.com/course/from-0-to-1-c-programming/",
      "bio": "C Programming is still a very useful skill to have - and this is the course to pick it up!",
      "objectives": [
        "Write solid, correct and complete C programs",
        "Advance - quickly and painlessly - to C++, which is a natural successor to C and still widely used",
        "Ace tests or exams on the C programming language",
        "Shed their fears about the gotchas and complexities of the C programming language",
        "Make use of C in those situations where it is still the best tool available"
      ],
      "course_content": {},
      "requirements": [
        "The course assumes that the student has a way to write and run C programs. This could include gcc on Mac or Unix, or Visual Studio on Windows."
      ],
      "description": "C Programming is still a very valuable skill - and its also surprisingly easy to pick up. Don't be intimidated by C's reputation as scary - we think this course makes it easy as pie!\nWhat's Covered:\n\nConditional Constructs: If/else and case statements have a surprising number of little details to be aware of. Conditions, and working with relational and logical operators. Short-circuiting and the order of evaluation\nLoops: For loops, while and do-while loops, break and continue. Again, lots of little details to get right.\nData Types and Bit Manipulation Operations, again full of little gotchas that interviewers and professors love to test.\nPointers: Memory layout of pointers and variables, pointer arithmetic, arrays, pointers to pointers, pointers to structures, argument passing to functions, pointer reassignment and modification - complete with visuals to help you conceptualize how things work.\nStrings: Strings, Character pointers, character arrays, null termination of strings, string.h function implementations with detailed explanations.\nStructs and Unions: These seem almost archaic in an Object-Oriented world, but worth knowing, especially in order to nail linked list problems.\nLinked lists: Visualization, traversal, creating or deleting nodes, sorted merge, reversing a linked list and many many problems and solutions, doubly linked lists.\nIO: Both console and file IO\nEnums, typedefs, macros",
      "target_audience": [
        "Yep! Computer science or engineering majors who need to learn C for their course requirements",
        "Yep! Embedded systems or hardware folks looking to make the most of C, which is still an awesome technology in those domains",
        "Yep! Any software engineer who will be giving interviews, and fears interview questions on the tricky syntax of C"
      ]
    },
    {
      "title": "Master C# Programming - Beginner to Advanced (with OOP)",
      "url": "https://www.udemy.com/course/csharp-programming-beginners-guide/",
      "bio": "C# for beginners | Learn C#, Object Oriented Programming, Collections, C# Exercises and more",
      "objectives": [
        "You will understand and master the basics of C# programming language",
        "Learn and implement the principles of Object-Oriented Programming (OOP)",
        "Learn different DataTypes in C#",
        "Learn Operators",
        "Learn and Implement Control Flow Statements (if, if-else, else-if, switch)",
        "Learn to iterate over collections using loops (for, foreach, while, do-while)",
        "Master the art of programming with the help of hands on coding exercises",
        "Use Collections (Arrays, Lists)",
        "Understand and segregate your code into Classes and Methods",
        "Get your first C# job by learning the basics and excel at C# programming"
      ],
      "course_content": {},
      "requirements": [
        "No prior C# experience needed. The course goes deep in the basics of of C#. You will need a PC and your commitment to learn C#"
      ],
      "description": "This is the complete C# masterclass and covers all C# basics for beginners, intermediates and advanced C# concepts.\n\n\nLearn all C# concepts including C# hands-on coding exercises.\n\n\nAfter covering the basics of C#, we will learn Object-Oriented Programming in C#.\n\n\nThat's right,  you don't have to listen to 40+ hour course, rather save your time and energy and jump to making practical applications once you have mastered C# by doing this course.\n\n\nIf you are new to programming, then you have come to the right place.\n\n\nThis C# course is for beginners who want to learn C# and have never used C# in their life. I have created this course in a very structured approach making it very easy to learn all C# concepts and fundamentals.\n\n\nYou will slowly start to gain confidence as you go through each lecture and section.  The course is best suited for beginners but if you already know C# or come from another program like Java, then you will be able to easily manage through this course too and would easily achieve a good understanding of the C# concepts.\n\n\nWhy do you need this course?\nC# is an amazing programming language and with C# you can build websites, software, desktop applications, games and so much more. C# is the beginning of creating all of this amazing software.\nBy learning C# you also increase your chances of landing a job as C# is a popular programming language.\n\n\nKnow more about me\nI am Sameer, a professional software developer with over 15 years of industry experience. I love to educate myself and others and that's why I started with my YouTube channel where I have a loving audience. I create content for software developers like you so that I can share my knowledge.\n\n\nStatistics\nOver 30000 students on Udemy\nOver 4000 Reviews on Udemy\nOver 3 Million Views on YouTube\n\n\nSome of the reviews\nHands down the best way to learn this technology stack. Sameer really did a good job here and I hope he will be blessing us with more interesting Angular projects in the future! Maybe a sample e-commerce or Hotel Booking app :)\n- Although I didn't have any prior experience with C# OR .Net Core MVC, I was still able to grasp a lot from this course, all thanks to the instructor!\n- A very detailed and extensive course! clear voice and great detail to topics.\n- and1000s of more reviews on my courses.\n\n\nMoney Back Guarantee\nI guarantee you that after finishing this course, you will be confident enough to create C# applications on your own.\nYou will feel confident at work or when creating your projects.\nIf you want to create functional, generic, clean, and usable programs using C#, then this is the course for you.\nIf still, you are unable to get benefit from this course (we will be sad to see you go!), there is a \"30-day money back guaranteed by Udemy\".\n\n\n\n\nIn this course, you will learn\nC# basics\nFirst application using C#\nReading and Writing to Console\nC# Keywords\nC# Types\nIdentifiers\nBuilt-in value types\nString reference types\nOperators\nNullable types\nData conversion\nArrays\nConditional Statements\nIf\nElse\nElse-If\nSwitch-Case\nLogical AND, OR\nIteration Statements\nFor loop\nForeach loops\nWhile loops\nDo-White loops\nString and String Operations\nMethods\nClasses\nProperties\nObject Oriented Programming in C#\nPolymorphism\nInheritance\nInterfaces\nAbstract Classes\nEncapsulation\nand much more",
      "target_audience": [
        "Students who want to learn the basics of C# programming",
        "Students who want to make a switch from Java or similar object oriented programming languages",
        "Students who want to refresh their understanding of C#"
      ]
    },
    {
      "title": "Writing High Performance Python",
      "url": "https://www.udemy.com/course/writing-high-performance-python/",
      "bio": "Learn how to use Python to write efficient code and create efficient applications.",
      "objectives": [
        "Learn slicing, indexing and string methods",
        "Learn dictionary operation and methods",
        "Make your programs more robust",
        "Write efficient numerical code in NumPy, Cython, and Pandas",
        "Discover the scope and function of variables with arguments and return value",
        "Get acquainted with python types and its operators",
        "Explore advanced concepts like collections, class and objects"
      ],
      "course_content": {},
      "requirements": [
        "A PC or Mac"
      ],
      "description": "Unleash the Power of Python: Become a High-Performance Programming Maestro\nAre you ready to embark on a transformative journey into the dynamic world of Python programming? This meticulously crafted course is engineered to elevate your skills from foundational to masterful, empowering you to architect robust, high-performance, and elegant applications that stand the test of time. Discover why Python stands as the premier language for developers who demand simplicity, versatility, and sheer power in their coding endeavors.\nThis immersive, hands-on experience will forge an unshakeable bedrock in Python's core: syntax, data types, variables, and operators. We'll explore how these fundamental building blocks work in concert, providing you with a deep understanding of Python's underlying structure. You'll then surge forward into advanced territories, conquering complex statements, arrays, operators, intricate string processing techniques, and robust I/O handling mechanisms. Learn to efficiently manage data input and output, interact with external systems, and process textual information with finesse. Prepare to master cutting-edge object-oriented techniques and metaprogramming paradigms, unlocking Python's full, breathtaking potential and enabling you to write code that is both powerful and flexible.\nYou'll dissect and conquer Python's essential data structures, manipulating tuples with finesse, wielding the power of lists, and navigating the nuanced landscape of dictionaries. Gain proficiency in choosing the optimal data structure for any given task, understanding the trade-offs between them in terms of performance and memory usage. Our expert guidance will illuminate control flow and loops, empowering you to write programs that can make decisions and automate repetitive tasks. You'll construct modular, scalable code with packages, and handle errors with precision and grace, ensuring your applications are robust and resilient. Ultimately, you'll command Python collections and implement classes, methods, and objects with unwavering confidence, laying the foundation for building complex software systems.\nTo ensure your Python code achieves peak performance and optimal resource utilization, we'll reveal invaluable strategies for high-performance programming:\nProfile-Driven Optimization: Employ Python's built-in profilers to pinpoint performance bottlenecks with laser accuracy. Learn to interpret profiling data and identify the specific lines of code that are consuming the most time and resources. We'll delve into tools like cProfile and line_profiler, demonstrating how to use them effectively to optimize your code.\nLoop Optimization Mastery: Harness the efficiency of list comprehensions, map(), and filter() to supercharge your loops. Discover how these techniques can significantly reduce the overhead associated with traditional for loops, leading to faster and more concise code. Explore real-world examples and benchmark different looping approaches to solidify your understanding.\nHigh-Performance Libraries: Leverage the raw power of NumPy, Pandas, and Cython for computationally intensive tasks. Explore the capabilities of NumPy for numerical computing, Pandas for data analysis, and Cython for bridging the gap between Python and C. Learn how to utilize these libraries to perform complex operations with maximum efficiency.\nVectorized Operations: Exploit vectorization techniques to achieve unparalleled speed in numerical data processing. Understand how vectorized operations work under the hood, enabling you to perform calculations on entire arrays of data simultaneously. Compare vectorized code with traditional loop-based approaches, quantifying the performance gains.\nStrategic Caching: Implement caching and memoization strategies to eliminate redundant calculations and maximize efficiency. Discover how to store the results of expensive function calls and reuse them when the same inputs occur again. Explore different caching techniques, such as using dictionaries or decorators, and learn when to apply them for optimal results.\nString Concatenation Excellence: Optimize string manipulation using the .join() method for ultimate performance. Understand why repeated string concatenation using the + operator can be inefficient, and how the .join() method provides a more performant alternative. Analyze the time complexity of different string concatenation methods and learn best practices for working with strings in Python.\nMemory-Efficient Data Handling: Utilize generators to process massive datasets with minimal memory footprint. Explore the concept of iterators and generators, and learn how they can be used to process large amounts of data without loading it all into memory at once. Implement custom generators and understand their advantages in terms of memory usage and performance.\nConcurrent Execution: Parallelize your code and conquer concurrency challenges with concurrent.futures or multiprocessing. Delve into the world of concurrent programming, and learn how to use threads and processes to execute code in parallel. Understand the difference between concurrent.futures and multiprocessing, and choose the appropriate approach for different types of tasks.\nCompiled Speed: Explore the advantages of compiling your Python code with Cython, Nuitka, or PyPy for significant performance enhancements. Investigate how these tools can translate Python code into lower-level languages, such as C, resulting in substantial performance improvements. Compare the features and trade-offs of different compilation options and learn how to integrate them into your development workflow.\nUpon completion of this course, you will stand as a true Python virtuoso, capable of crafting efficient, maintainable, and impactful code that drives innovation and solves real-world problems. Seize this opportunity to embark on an exhilarating journey and unlock the limitless horizons of Python development.",
      "target_audience": [
        "Programmers",
        "Web Developers",
        "Intermediate Python programmers who want to level up their skills"
      ]
    },
    {
      "title": "Beginner Professional Java - Learn to Code for Work and Fun",
      "url": "https://www.udemy.com/course/beginner-pro-java/",
      "bio": "Learn to code from no prior experience. Train for a career in software, or learn how to teach coding.",
      "objectives": [
        "Become a coder! Plan and write text console applications using core Java language programming",
        "Use efficient debugging techniques for finding and solving problems in your programs",
        "Be ready to learn other code libraries, make sense of their documentation, and integrate them with your program (including game mod systems and others). Be able to make a learning plan for yourself.",
        "Apply study techniques learned during this course to ease your process of learning other new technologies and programming languages",
        "Choose which areas of software development you may want to study next and know how to begin",
        "Know enough coding to teach a junior high or high school computer science course beyond Scratch."
      ],
      "course_content": {},
      "requirements": [
        "Plan to spend 5-10 hours per week on this course to be most successful.",
        "Windows, Mac, or Linux laptop/desktop. Tablets are not sufficient.",
        "You should have basic computer literacy, and be comfortable with arithmetic (add, subtract, multiply, divide).",
        "We'll explain software installation."
      ],
      "description": "Great Introduction to Coding\nThis course teaches programming for absolute beginners.  It provides over 50 hands-on coding exercises, so you spend most of your time getting good at coding, not just watching videos.  The difficulty builds gradually so you're always ready for the next step.\nMost people can complete this course in about 6 months at 5 hours per week.\n\n\nRefined in a Classroom\nThis course material has been used for 3 years in a face-to-face classroom for job training.  This has resulted in many refinements to the course material, eliminating bugs and errors, and ensuring no steps are missing, so you can trust the quality of the course.\nMany of the classroom students are now working in professional software development, and have had wonderful things to say about this course.  \"It's hard, but in a good way, and everything is explained well; I don't get lost.\"\n\nNative English Speaker\nAll voice-over is done by me (your instructor), and I'm a native English speaker from the midwest of the United States; I speak clearly and carefully.  I also provide full text transcripts of all videos, and am working on closed captioning, so that you can easily follow along with what I'm saying.\n\n\nVideos are Easy to Review\nThe course assumes basic computer literacy but no prior programming experience. We'll start out simple and carefully explain every step.\nI explain new vocabulary every step of the way so you don't get lost, and I make sure the topics don't skip around.  Each topic gently prepares you for the next topic in the course.  I focus on the core Java language, especially the most important areas you would actually use on the job.\nI use lots of pictures, code examples with arrows pointing out the important parts, and careful demonstrations of how and why things work.\nEvery video starts with an overview slide, so you can quickly review code examples when you come back to it later.  Then we go into the details, and summarize at the end with some journal questions for you to remember, apply, and elaborate on the material you've just learned.\n\n\nHands-on Practice\nThe early part of the course emphasizes hands-on practice and repetition to build a strong memory of the material. Then as we introduce more complex topics, it shifts to software design and strategies for problem solving, so you're ready for the next level.\nPractice assignments use what you just learned, in a simple exercise.  Challenge assignments use the same topics, but in a more interesting and complex way.  Freestyle assignments give you a few requirements and then encourage you to get creative, building your own ideas.  I found that learners who only do class exercises don't get enough practice at creating their own ideas, which holds them back professionally.  Freestyle exercises give you that necessary practice and are also great fun!\n\n\nGood for Teachers\nThis material is well-suited to teaching computer science in junior high and high schools, as a more advanced approach than using Scratch.  Teachers with advanced students will find this useful for both themselves and their students.\n\n\nAcknowledgements\nMost graphics were licensed through PresenterMedia (obligatory attribution) - many thanks to them for providing such great concept graphics with the ability to customize colors and text.  The colorful slides and memorable pictures make learning coding a lot more fun.",
      "target_audience": [
        "You are a complete beginner to programming, and want a course with a gentle learning curve that helps you solidly learn and apply the basics.",
        "You want to start a journey towards a career in coding. You will find this a welcoming and supportive place to start.",
        "You are a teacher who wants to teach computer science at a junior high to high school level. Go through the course to learn for yourself, and then check Udemy's institutional offerings for class enrollment."
      ]
    },
    {
      "title": "Python Mastery: 100 Days, 100 Projects",
      "url": "https://www.udemy.com/course/python-mastery-100-days-100-projects/",
      "bio": "Learn Python by Building 100 Real-World Projects in 100 Days – From Basics to Advanced Skills Through Hands-On Coding(AI",
      "objectives": [
        "Master Python Basics: Learn syntax, variables, loops, and functions to build a strong programming foundation",
        "Build 100 Real-World Projects: Gain hands-on experience by developing practical Python applications every day",
        "Use Data Structures Efficiently: Work with lists, dictionaries, sets, and tuples to manage and process data effectively",
        "Develop Command-Line Apps: Create interactive programs that accept user input and handle errors gracefully",
        "Integrate APIs and Libraries: Use external APIs and libraries like requests and datetime to fetch and manipulate data",
        "Handle Files with Python: Read, write, and manipulate text, JSON, and CSV files for data storage and processing",
        "Create GUI Applications: Design user-friendly desktop apps with Tkinter using buttons, input fields, and events",
        "Implement OOP Principles: Apply classes, objects, inheritance, and encapsulation for scalable applications",
        "Build Web Apps with Flask: Create simple web applications, handle routes, and render templates dynamically",
        "Analyze Data with Pandas: Use Pandas and Matplotlib to manipulate and visualize datasets effectively",
        "Automate Daily Tasks: Write scripts to automate repetitive tasks like file handling and email notifications",
        "Debug and Optimize Code: Learn to identify and fix bugs efficiently while improving code performance",
        "Work with Databases: Use SQLite to create, query, and manage data in Python applications",
        "Explore AI and ML Basics: Build simple AI projects like chatbots and recommendation systems using Python libraries",
        "Build a Strong Portfolio: Complete 100 projects to showcase practical Python skills and real-world problem-solving abilities"
      ],
      "course_content": {},
      "requirements": [
        "A Computer or Laptop: Any device capable of running Python (Windows, macOS, or Linux).",
        "Internet Connection: For downloading Python, libraries, and accessing additional resources",
        "Python Installed: Install Python (version 3.8 or newer) from python official website",
        "A Code Editor (Optional): Install a text editor like VS Code, PyCharm, or use the built-in IDLE editor.",
        "Basic Computer Skills: Comfort with using files, folders, and navigating your operating system.",
        "Curiosity and Enthusiasm: A willingness to learn, experiment, and build exciting projects.",
        "Time Commitment: Set aside at least 1–2 hours per day for coding and project building.",
        "A Notebook or Digital Notes App: Keep track of concepts, ideas, and project notes."
      ],
      "description": "Welcome to \"100 Days of Python: Build 100 Real-World Projects – From Beginner to Expert\", the ultimate hands-on Python programming journey designed to take you from an absolute beginner to an advanced Python developer. This course is structured around project-based learning, ensuring you gain both theoretical knowledge and practical experience by building 100 unique projects over the next 100 days. Python is one of the most versatile and beginner-friendly programming languages, widely used in areas such as web development, data science, automation, artificial intelligence, and software development. This course aims to make Python learning fun, engaging, and deeply practical through a clear, structured approach.\nThroughout this course, you'll start with the fundamentals of Python programming, including variables, loops, functions, and conditionals, ensuring you have a solid foundation. From there, you'll progressively dive into more advanced topics such as object-oriented programming (OOP), working with APIs, file handling, and GUI application development using Tkinter. You'll also explore web development with Flask, enabling you to create dynamic web applications, and data analysis with Pandas and Matplotlib, helping you visualize complex datasets. Each day is carefully designed to introduce a key concept, followed by a practical, real-world project that reinforces what you’ve just learned.\nThis course doesn’t just stop at coding fundamentals; it prepares you to solve real-world problems using Python. Whether you're developing a basic calculator, creating a weather dashboard app, or building an AI-powered chatbot, every project is crafted to simulate real-world scenarios. By the end of the course, you'll have a portfolio of 100 Python projects to showcase your skills, making you stand out in job applications, freelancing platforms, or even as an aspiring tech entrepreneur.\nOne of the standout features of this course is its structured progression. Each day, you'll start with a clear explanation of a Python concept, followed by a hands-on coding session where you'll build something tangible. The projects range from simple tools like countdown timers and math quiz games to more advanced applications like e-commerce backend systems and AI-powered tools. This gradual increase in difficulty ensures you're constantly challenged without feeling overwhelmed.\nThis course is perfect for beginners with no prior programming experience, as it starts with absolute basics and builds up gradually. It’s also ideal for aspiring developers, students, job seekers, and even freelancers looking to add Python to their skill set. If you're a hobbyist or tech enthusiast, you'll love how fun and interactive each project is, and if you're aiming to transition into a tech career, this course offers everything you need to succeed.\nBy the end of this journey, you’ll not only have mastered Python programming but also gained the confidence to tackle real-world projects independently. You'll be equipped with essential problem-solving skills, a deep understanding of Python libraries and frameworks, and a portfolio filled with impressive projects. Python is not just a programming language; it’s a skill that opens doors to endless opportunities in today's tech-driven world. If you're ready to learn Python by building, experimenting, and creating every single day, this course is your perfect starting point. Enroll today and let’s start building together!",
      "target_audience": [
        "Absolute Beginners: No prior programming experience? No problem! Start with the basics and gradually build your skills.",
        "Aspiring Programmers: Learn Python step-by-step with practical projects and real-world applications.",
        "Students & Learners: Ideal for school, college, or university students who want to learn Python effectively.",
        "Job Seekers & Career Switchers: Build a robust Python portfolio to showcase your coding and problem-solving skills.",
        "Developers from Other Languages: If you're familiar with other programming languages, this course will help you master Python quickly.",
        "Freelancers & Entrepreneurs: Learn to create tools, automate tasks, and build applications to grow your business or freelance career.",
        "Data Enthusiasts: A strong foundation in Python will prepare you for data science, AI, and machine learning.",
        "Tech Enthusiasts: Anyone passionate about technology and eager to learn how Python powers apps, websites, and automation tools.",
        "Self-Learners: Independent learners who enjoy project-based and goal-oriented learning.",
        "Hobbyists: Have fun building small games, tools, and creative projects with Python."
      ]
    },
    {
      "title": "Erlang: The Complete Beginner's Guide",
      "url": "https://www.udemy.com/course/completeerlang/",
      "bio": "Learn Distributed Programming in Erlang and become an expert in a niche market",
      "objectives": [
        "Erlang programming language",
        "Network communication",
        "Real time communication",
        "Learn to code"
      ],
      "course_content": {},
      "requirements": [
        "Mac or PC",
        "Interest in Software Development"
      ],
      "description": "Why learn Erlang\nErlang is a distributed parallel process oriented, functional programming language.\nIn 2018, the popular site StackOverflow rated Erlang as the highest paying programming language in the US, and among the highest in the world.\nMany big players like Microsoft, IBM, Ericsson, WhatsApp etc use Erlang for their backend functionality.\n\n\nThis course teaches you:\nto install and setup Erlang on a PC and Mac\nthe language basics like\nfunctions\ndata types\nlists\netc\ncontrol structures\nfunctions and higher order functions\nconcurrent processing\n\n\nThis course opens up many opportunities to work in a niche market, where your skills will be highly values by employers. There is a huge shortage of Erlang skills, and you can claim the top spot.\nErlang is also a fun language to learn, making it easy to communicate between computers across the internet. It's a great skill to have if you're looking to expand your programming tool belt.\n\n\nWe will build examples at every step and learn by applying the knowledge. We will also build a distributed chat application to exemplify the knowledge we learn.\nThis course explains step by step what the structures and functionality are for and how to apply them in a real world scenario.\n\n\nSign up today and let's start learning Erlang together.\n\n\n30 day money back guarantee - provided by Udemy\nHighly rated instructor with over 8000 active students and growing monthly.",
      "target_audience": [
        "Beginner Erlang Developers",
        "Interest in a Distributed Software Development Language"
      ]
    },
    {
      "title": "Modern .NET Ecosystem and .NET Core",
      "url": "https://www.udemy.com/course/modern-net-ecosystem-and-net-core/",
      "bio": "Learn all the modern .NET concepts. .NET Core is the Future of .NET",
      "objectives": [
        "Create, deploy and manage .NET Core applications",
        "Disctinct different technologies: platforms, runtimes, compilers and so on",
        "Create and use .NET Standard Libraries",
        "Understand all the modern .NET concepts",
        "Write unit-tests in .NET Core"
      ],
      "course_content": {},
      "requirements": [
        "Need to be familiar with development on the .NET platform in C#"
      ],
      "description": "Last years a great number of technologies came up to the world of .NET platform: nowadays we have the full (classic) .NET framework with CLR as a runtime, Mono with its own runtime, .NET Core with Core CLR, WinRT, UWP and Xamarin, a new JIT compiler RyuJit, .NET Standard, PCL, .Net Native, new Roslyn compiler with open API, NuGet based project management. God’s sake! It’s so simple to get lost in that ocean of technologies. You need to understand the overall picture to feel comfortable today. Didn’t you feel like a small fish in the ocean last time? Well, I did. I questioned myself, \"what the hell is going on around me?\" I didn’t quite understand the directions in which technologies develop. I didn’t know what to expect, what to learn next. In such situation, you feel helpless. And what we are going to do in the course is that we’re going to eliminate this nasty feeling of being helpless by learning all the most important notions in the modern .NET platform.\nTeaching Approach\n\nNo fluff, no ranting, no beating the air. I esteem your time. The course material is succinct, yet comprehensive. All important concepts are covered. For absolute beginners, I offer my help on Skype absolutely free if requested. Don't forget that this course has English subtitles, so if you don't understand my accent, feel free to turn them on.\nTake this course and you will be satisfied.\nBuild a deep understanding of modern .NET concepts\nIf you go behind the modern .NET directions, then this course is for you. This course will bring a whole picture of what's going on nowadays in the world of .NET, so you'll understand what you can and what you can't achieve using specific technologies. This course is like a navigation map.\nContent and Overview\nThe goal of this course is to reveal the whole picture of the .NET world. One of the most profound technologies is the new .NET Core platform, so learning it, is a second primary goal of this course.\nOf course, all the way along we will discuss all the other technologies I mentioned above.\n\nThis course is built for all kind of C# developers who are interested in learning the .NET platform. This course is beneficial for juniors as well as for seniors who want to stay well-informed about modern .NET platform. I’m sure any student will find something interesting and useful in this course.\nThe main prerequisite is to be familiar with development on the .NET platform in C#. That’s all you need.\nIn short, the course covers the following topics:\nClassic .net platform, it’s building blocks, the history of this platform\nMono platform, it’s building blocks. You’ll figure out if classic .NET and Mono are compatible. We will compare classic .NET framework and Mono platform\n.NET Core is the new cross-platform .NET platform. We will understand what’s different here comparing to other .NET platform and this platform means for the future of the .NET world platform\n.NET Native is an interesting ahead-of-time compilation technology. You’ll know that a form of .NET Native comes to .NET Core as well.\nDo you really understand what is UWP? How it is related to WinRT and what WinRT actually is?\nRoslyn as a compiler platform\nNuGet as a system of dependencies management\nInstallation of .NET Core\nCommand-Line Interface (CLI) of .NET Core\nDeployment in .NET Core: SCD and FDD\nThe problem of cross-compiling\nPortable Class Library (PCL)\n.NET Standard\n.NET Portability Analyzer\nUnit-Testing in .NET Core\nUpcoming Changes quick overview\nHow long is this course: The course is around 2 hours. All are video lectures. You will be able to download all the slides and code samples used in the course.\n------------------------------------------------------------\nKeywords related to the course:\n.NET Core\nC#.NET Core\n.NET Standard\nNuGet\nCore CLR\n.NET Ecosystem",
      "target_audience": [
        "Anyone from beginner to senior"
      ]
    },
    {
      "title": "LEARNING PATH: Python: Functional Programming with Python",
      "url": "https://www.udemy.com/course/learning-path-python-functional-programming-with-python/",
      "bio": "Perceive functional programming with Python to efficiently solve real-world problems",
      "objectives": [
        "Higher-order functions and Lambda expressions (nameless functions)",
        "Error handling in Functional Programming",
        "Understand common functional design patterns, and how these apply to Python",
        "Understand what an iterator is in Python",
        "Iterators and iterator functions built into Python",
        "Create your own iterators",
        "Understand what a generator coroutine is",
        "Master list and dict comprehensions and generator expressions"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge of Python is needed."
      ],
      "description": "Python is not a functional programming language, but it is a multi-paradigm language that makes functional programming easy to perform, and easy to mix with other programming styles. Python is a high level language used in many development areas, like web development, data analysis, desktop UI and system administration. Functional programming is a style of programming that is characterized by short functions, lack of statements, and little reliance on variables. You will learn what functional programming is, and how you can apply functional programming in Python. If you're interested to use Functional Programming as a powerful tool to solve many real-world problems by writing robust and bug-free code, then go for this Learning Path.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\nUnderstand common functional design patterns, and how these apply to Python\nLearn the important role that iterators play in functional programming\nIn this Learning Path, you’ll learn what functional programming is, and how it differs from other programming styles, such as procedural and object-oriented programming. Then you’ll go on to explore lambda expressions, which are short one-line functions, and are the purest form of functional programming that Python offers. Next, you’ll learn about higher-order functions: functions that accept other functions as an argument, or return other functions as return values. You’ll also encounter important concepts from functional programming, such as monads, currying, statelessness, side-effects, memorization, and referential transparency; these concepts may initially seem odd to Python programmers, but you’ll see how they are elegantly supported by the language.\nFurther, you’ll learn everything there is to know about iterators in Python and how crucial they are in functional programming, where they are used, among other things, to implement repetitive logic and coroutines. You’ll learn about all standard iterators and iterator functions that Python offers. You’ll also learn to implement your own iterators. Functional programming makes heavy use of iterators, and you’ll learn how you can use them in functional programming through an interactive calculator application.\nBy the end of this Learning Path, you will get a thorough understanding of iterators to solve many real-world problems by writing robust, testable, and bug-free code.\nMeet Your Expert:\nWe have combined the best works of the following esteemed authors to ensure that your learning journey is smooth:\nSebastiaanMathôt currently works as assistant professor at the University of Groningen in the Netherlands. He is the lead developer at OpenSesame, which is an open-source, Python-based program for implementing psychology and neuroscience experiments. Sebastiaan is also the designer of DataMatrix, a Python library for numeric computing that is focused on elegance and readability. Sebastiaan also gives regular workshops on using OpenSesame and Python for scientific purposes, and regularly publishes Python tutorials on his YouTube channel. As such, he has extensive experience in teaching Python and making advanced topics seem as easy as possible.",
      "target_audience": [
        "This Learning Path is intended for developers who have a basic understanding of Python and want to expand their developer toolbox with important new techniques."
      ]
    },
    {
      "title": "Intro to eXtensible Stylesheet Language Transformations",
      "url": "https://www.udemy.com/course/xslt-jumpstart/",
      "bio": "a to-the-point course on XSLT",
      "objectives": [
        "Learn what you need to know and understand about XML in order to truly be effective with XSLT.",
        "Become a navigator of XML by learning the basics of XPath",
        "Apply your understanding of XML and your ability to navigate it to XSLT",
        "Use your new XML, XPath & XSLT skills to manipulate and transform your XML"
      ],
      "course_content": {},
      "requirements": [
        "A web browser capable of processing XSLT (like Firefox, Chrome, or Internet Explorer)",
        "A basic understanding of HTML"
      ],
      "description": "Learn the fundamentals of XSLT: XML, XPath and XSL.\nIf you know HTML, XSLT is only a step away. This course will introduce you to the fundamentals of each component of XSLT:\nYou will learn what you need to know and understand about XML in order to be effective with XSLT.\nYou will become a navigator of XML by learning the basics of XPath.\nYou will then apply your understanding of XML and your ability to navigate it with XPath to XSLT.\nYou will then be able to use your new XML, XPath & XSLT skills to navigate and transform your XML.\nLevel up without draining your bank account\nOther XSLT courses and training out there are lengthy and can cost hundreds to thousands of dollars. This course presents you with the fundamentals of XSLT in a condensed, to the point format that will help you hit the ground running.\nGive your resume a boost\nAdding XML, XPath & XSLT in addition to your current Development skills will look fantastic on your resume.\nBoost your understanding of DOM\nLearning XML & XPath in this course can help you better understand\nDocument Object Model (DOM) concepts through learning to navigate the XML Tree with relationship selectors.\nGive your work performance a boost\nIf you've been tasked with working on XSL transforms in your job, and are struggling or lagging behind: this course will quickly bring you up to speed with what you need to know to perform.",
      "target_audience": [
        "Develepors that need a jumpstart in XSLT"
      ]
    },
    {
      "title": "C# Anti-Patterns: A List Of Programming Practices To Avoid",
      "url": "https://www.udemy.com/course/csharp-anti-patterns-and-bad-programming-practices/",
      "bio": "This course will teach you many bad programming practices that every professional developer must know, but never use",
      "objectives": [
        "Learn to identify many common anti-patterns",
        "How to abuse the .NET type system",
        "The curse of the Swiss-Army Knife",
        "Use the YAGNI principle to remove Crystal Balls",
        "Real-life bad coding practices from actual code reviews",
        "The \"Assume the Worst\" principle",
        "Why is \"Pattern Love\" a bad thing?",
        "Incorrect use of Exceptions",
        "... and much more!"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Meet Your Instructor",
          "Introduction To Anti-Patterns",
          "Windows, OS/X Or Linux?",
          "Background Info - About Me"
        ],
        "This Code Will Fail A Code Review": [
          "Section Introduction",
          "Too Many Constants",
          "Numeric Booleans",
          "Stringly-Typed Dates",
          "Manual Memory Management",
          "Section Recap",
          "Bad Coding Practices Quiz"
        ],
        "Bad Coding Practices From Actual Code Reviews": [
          "Redundant Loops",
          "The Anti-Singleton",
          "Yoda Expressions",
          "Spaghetti Code",
          "Inconsistent Dates",
          "Magic Properties"
        ],
        "Four Classic Anti-Patterns": [
          "Pattern Love",
          "The Swiss-Army Knife",
          "Assume The Worst",
          "The Crystal Ball"
        ],
        "Final Words": [
          "Course Recap",
          "Bonus Offer"
        ]
      },
      "requirements": [
        "You need a Windows, Mac or Linux laptop with Microsoft Visual Studio, Xamarin Studio or Monodevelop",
        "You should be a beginner, or intermediate C# developer",
        "That's it!"
      ],
      "description": "BEST COURSE CHOICE for beginners and intermediate C# developers who want to take their programming skills to the next level.\nCode reviews sometimes expose truly terrible code - mangled object hierarchies, judicious use of Parse and ToString, flow-control logic using Exceptions, and \"reinvented wheel\" classes littered with bugs.\nIn fact the same bad code tends to crop up over and over, which is why we call them \"Anti-Patterns\".\nAnti-patterns are common responses to a recurring problem that are ineffective and highly counterproductive.\nIn a series of short lectures I am going to show you the most common C# anti-patterns. I will introduce each anti-pattern, show you why the pattern is bad, and how you can refactor the code to resolve the problem.\nWhy should you take this course?\nYou should take this course if you are a beginner or intermediate C# developer and want to take your skills to the next level. A thorough understanding of all common anti-patterns will help you enormously in your understanding of C# and the .NET Framework.\nOr you might be working in a developer team and about to perform your first code review. The examples in this course will help you spot bad code quickly, and give you an idea what senior developers like to see at when they review code.\nOr maybe you're preparing for a C# related job interview? This course will give you an excellent foundation to answer any questions about code quality they might throw at you.\nAct now\nThis course contains over 3 hours of video content. Enroll now to benefit from the current price and get lifelong free access to all future materials.",
      "target_audience": [
        "Beginner, and intermediate C# programmers who want to learn how to write clean and well-designed code",
        "Developers who are about to take a job interview and need to prepare for code quality-related questions",
        "Professionals who are performing code audits on their team"
      ]
    },
    {
      "title": "Python: SOLID Principles and Top Design Patterns",
      "url": "https://www.udemy.com/course/python-solid-principles-and-top-design-patterns/",
      "bio": "Learn how to improve your Python code through mastery of S.O.L.I.D principles and the Top GoF Design Patterns.",
      "objectives": [
        "*Master* the most important and fundamental design patterns in modern Software Engineering within the *Python* ecosystem",
        "Learn and internalize the S.O.L.I.D principles of design like seasoned *Senior Developers* do.",
        "Get a deep understanding of the WHAT, WHY, and HOW for those *Fundamental Design Patterns*.",
        "Get a full Architectural exposition (with UML) of each pattern as well as *real-world* scenarios with hands-on coding examples for each pattern.",
        "Work on and complete Object Oriented *Python* assignments that will push your understanding of those patterns deeper and more fundamentally.",
        "Learn how to *identify* the *best pattern* for the given Architectural challenge."
      ],
      "course_content": {},
      "requirements": [
        "It is assumed that you know your way around Python. Only basic experience is required. We have a OOP refresher if you need it.",
        "You should be able to run the Python code that is provided with the course. We will use Visual Studio Code as our IDE but you can use any IDE you like.",
        "Access to a computer. A Mac, Windows, or a Linux based operating system is equally fine. All the tools are OS Independent."
      ],
      "description": "We all want to become better software developers and be able to call ourselves \"Software Engineers\" or \"Software Architects\", but to do that you first have to master a number of design patterns.\nThis course will put you on a track to that destination.\nWe will teach you how to recognize when to use specific design patterns to build complex systems in a divide-and-conquer manner so that complexity is reduced and abstracted.\nBut rather than learning all the design patterns out there, we have curated the most important, the top fundamental GoF Design Patterns for you.\n\n\nAll of that in the context of the Object Oriented Python.\n\n\nWe start with full understanding of the S.O.L.I.D Design Principles and how they in turn relate to those design patterns. We explain everything in the context of real-world problems as well as specific code examples.\n\nif you need a Python OOP Refresher, we have that for you. everything from classes to interfaces and abstract classes is covered. We will also show you how to code using pygame (Python Game Platform.)\nAt the end of the course you will get to Architect a solution by coding John Conway's Game of Life simulation which will run on your mobile device.\n\n\nComplex software systems are plagued with three major issues:\nTimelines are stretched as requirements change.\nMultiple developers have a hard time coordinating their efforts.\nCode redundancy.\n\nThis in turn creates issues with maintenance and overall flexibility for adding new features. In general this means poorly designed systems that are hard to maintain and are not adaptable.\nOne answer to all the above problems is having a proper design and architecture. Think of a skyscraper being built. There is always a high-level blueprint. This blueprint is used to show everybody involved (from architects to supply chain to construction workers to machinery scheduling etc…) what is being worked on.\n\n\nThat way, everybody understands and follows the same vision.\n\n\nA blueprint has a number of commonly understood elements which repeat themselves across many projects. For example all buildings need electrical wiring and plumbing, they might need elevators, and cooling systems, and underground parking lots, and of course stairs. They also usually are connected to the electrical grid and water supply as well as… roads.\nAll these common elements follow certain standards that have been improved over many many years and across many many projects. They are well understood and can be used almost like recipes.\nIn Software Engineering we also have a set of elements that repeat themselves across many projects. For example all software applications need to create objects, they need to communicate state change across those objects, they need to be able traverse over collections of those objects. In other words, if you want to be a better developer then you need to become proficient in those elements that have been time-tested. In the Software Engineering world these elements are known as “Design Patterns”\n\n\nThis course will teach students how to recognize when to use specific design patterns to build complex systems in a divide-and-conquer manner so that complexity is reduced and abstracted.\nThis will help you to design projects in an Architectural manner before any major development happens and can be used to shorten development time and reduce maintenance costs.\n\n\nDesign patterns are important because they are time-tested recipes or solutions to well-known software engineering problems. When creating software applications certain problems recur in a pretty predictable fashion so rather than ‘reinvent’ the wheel we will have an assortment of, if you will, wheels to choose from.\nWe will teach you this in a slightly different manner than you probably have been taught before. We will take a practical approach (i.e. specific examples) but the power of Design Patterns comes from their ‘concept’ and we will teach you the concept of those design patterns so that you are fully able to change them and modify them to your needs. In addition we will look at how to combine all those patterns into something greater: an architecture.\n\n\nA well designed Architecture is this magical thing where the whole is greater than the sum of its parts.\n\nThis is what we will strive to teach you.",
      "target_audience": [
        "*Python* developers who want to learn to Design, Architect, and ultimately develop *better code*.",
        "Developers who want to get a deep understanding of what makes GREAT *Software Architecture*."
      ]
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/java-ocp/"
    },
    {
      "title": "JavaScript Modern ES6 - 2020 - The Complete Course",
      "url": "https://www.udemy.com/course/javascript-tharunshiv/",
      "bio": "Learn Modern JavaScript ES6 from scratch till advanced in just 7 hours.",
      "objectives": [
        "Modern ES6 Javascript 2020",
        "Basic Syntax of JavaScript",
        "Variables, Loops, Desicion Making statements in JavaScript",
        "Functions in JavaScript",
        "Objects in JavaScript",
        "Arrays in JavaScript",
        "Advanced ES6 JavaScript concepts: Class, Generators, Promises",
        "JavaScript DOM from basics till advanced"
      ],
      "course_content": {},
      "requirements": [
        "HTML basics",
        "CSS basics"
      ],
      "description": "I have taken the utmost care to refer a number of resources to give you the best experience in learning JavaScript. I have scrubbed the unnecessary topics and have composed this course of the essential topics with examples that you need to know. In this course, you will start off with the basics of JavaScript and also learn Objects, Object-oriented programming, and Promises. You will be ready to progress your software developer journey to build web apps, mobile apps, desktop apps or for any reason you wanted to learn javascript.\n\n\n1. Learn all you need to know about JavaScript in an engaging way.\n2. The videos are optimized to be viewed on the phone, so the font sizes are big and clear.\n3. All of the videos are downloadable using the Udemy App and hence you can watch offline.\n4. You will have Lifetime access to this course.\n5. You can ask doubts at any point of course and your query will be resolved\n6. You will get a Certificate of Completion\n\n\nSo why wait? I can assure you the Best Course out there for JavaScript! Click the buy button and start Learning today!",
      "target_audience": [
        "Beginners who want to learn JavaScript",
        "Web Developers who want to enter into or enhance their JavaScript knowledge",
        "JavaScript developers who want to learn the latest ES6 Syntax",
        "Developers who want to learn the advanced concepts of JavaScript",
        "Those who want to explore JavaScript"
      ]
    },
    {
      "title": "Qt6 QML For Beginners: The Fundamentals",
      "url": "https://www.udemy.com/course/qt6-qml-for-beginners/",
      "bio": "Build Cross Platform Fluid And Dynamic UIs with QML. Run Them on Windows, Mac, Linux, Android,iOS and Embedded.",
      "objectives": [
        "The basics of working with the QML language",
        "Signals and slots in QML",
        "Working with Javascript in QML",
        "Working with Dialogs in QML",
        "Transforms,Transitions and Animations",
        "Settings and Local Storage",
        "Working with Qt Quick basic elements and building your own in QML",
        "Working with input elements",
        "Positioning elements in QML",
        "Qt Quick Controls 2 framework",
        "Models,Views and Delegates",
        "Networking : Fetching HTTP Data and JSON(REST) APIs"
      ],
      "course_content": {},
      "requirements": [
        "Open mind and strong willingness to learn",
        "A basic understanding of Javascript will be useful but not required",
        "An eye for design"
      ],
      "description": "Qt6 QML is the latest and greatest technology from the Qt Framework, to build slick looking , fluid, dynamic and cross platform User Interfaces that can run mobile devices(Android,IoS, touch devices (embedded) and any major desktop platform out there(Linux,Windows,Mac). Qt Quick can be used to build stand-alone applications, but it can also be interfaced and/or extended with a C++ back end.\nThe main aim of this course is to help you succeed in becoming a Qt6 QML GUI Designer and do so in the most effective amount of time possible. The course is packed with lots of straight to the point, easy to understand  demos, that are carefully designed to help you master a given Qt Quick  UI development topic at hand.\nThe target student is anyone willing to add Qt Quick/QML UI design to their stack of skills. While Qt Quick is built on top of Qt and C++, no knowledge of Qt or C++ is required. The course will equally be useful to both designers willing to jump into Qt Quick and existing C++ developers willing to level up their skills in fluid UI design.\nWe start by getting your development environment set up and get you to run your first Qt Quick application. We then jump into topics like\nDissecting the QML Syntax , where we explore subjects like the QML syntax, Basic Types of QML,  Properties and Handlers,Property Binding and the Qt Quick Global Object;\nQt Quick Basic Elements, and look at elements like Rectangle,Text, Image and Item;\nExternal Components, where we extract QML code into external files and import that into other files. We'll also explore the great subject of QML modules that have been supercharged with CMake in Qt6\nSignals and Slots;\nWorking with Javascript, where we explore the javascript environment available to you in QML, where and how to type your Javascript code in QML files, functions and scope and importing external Javascript files;\nUser Input Elements : TextInput, TextEdit, MouseArea and drag and drop, Keys Attached Properties, KeyNavigation and FocusScope\nQt Quick Positioning and explore subjects like Anchors, Positioners, Layouts and Flow\nQt Quick Controls  where we explore a host of Ui Components available and ready to be consumed by your awesome apps ;\nDialogs : ColorDialog, FileDialog,FontDialog, MessageDialog and Custom Dialogs\nModel , View and Delegate where we explore the pieces of the puzzle needed to take advantage of the Model View Delegate Architeture in Qt Quick\nTransitions, Transforms and Animations  : Oooh Animations! This is the most fun and captivating subject for me in Qt Quick. We take you on a tour of how you animate your Qt Quick Components and bring your designs to life using tricks like states and transitions.\nNetwork : We show you how to download HTTP data using XmlHttpRequest and how to consume REST APIs in your Qt Quick apps using the same Javascript Object\nStorage : We first use the Settings component from the Qt.labs module to save and load your applications settings and do the same thing using the LocalStorage module that is backed by an embedded SQLite database.\nQt is the platform of choice for thousands of software projects and some of the most successful companies on the planet. Learning Qt Quick will certainly level up your abilities in taking advantage of this rich and awesome framework. Please check out some of the preview videos and lets get you STARTED building slick and fluid User Interfaces with Qt Quick.",
      "target_audience": [
        "Designers willing to jump into Qt Quick Prototyping and UI Design",
        "Existing Qt C++ Programmers willing to add Qt Quick to their Arsenal",
        "Anyone willing to build Fluid and Dynamic User Interfaces capable of running on desktop, mobile and embedded devices"
      ]
    },
    {
      "title": "Java Essentials - Refresher for software developers",
      "url": "https://www.udemy.com/course/java-essentials/",
      "bio": "Get a complete conceptual overview of essential Java knowledge",
      "objectives": [
        "Learn all of the essential Java skills you need to know",
        "Complete overview of the language and important syntax elements",
        "Build a deep understanding of the fundamental concepts",
        "Great interview prep for Java concepts"
      ],
      "course_content": {},
      "requirements": [
        "Some basic Java coding knowledge"
      ],
      "description": "Have you learnt Java on the job and never had a formal introduction to the language? Don't know what you don't know in Java?\nThis course is just for you! Get a complete overview of all the basics of Java that you need to know. Including strong foundational understanding of Core Java and makes you ready for interviews. It also addresses any gaps in your knowledge of the language to  get you ready to tackle and learn advanced topics.\n\n\nThis is a course you'll wish you watched sooner!\n\n\nWatch this course anytime you need to brush up your Java skills. This course is perfect for brushing up all the Java basics before attending interviews!\n\n\nTaught in the inimitable Java Brains style, this course covers the language syntax basics to Object Oriented programming concepts to exception handling concepts.\n\n\nSection 1 introduces to the overall Java language ecosystem tackling the JRE, JVM and JDK.\nSection 2 introduces you to the setup process to start coding in Java on your computer\nSection 3 covers variables and types. Dive into the data types available in Java, understand literals, arrays operators and variable scoping\nSection 4 runs through all the essential control structures in Java that you need to know\nSection 5 gets you started with Object Oriented programming in Java with classes and objects. Learn about object instances, references, the this reference, variable shadowing and constructors.\nSection 6 covers conceptual and practical implications of Object Oriented programming and the associated concepts of encapsulation and access restrictions. Learn about access modifiers, static and final key words and local classes.\nSection 7 covers inheritance and polymorphism - access modifiers, inheritance, overriding, interfaces, abstract classes default methods, casting, the toString and equals methods.\nSection 8 is all about exception handling. Learn the fundamental syntax structures that allow you to throw as well as catch exceptions. Learn how to create exception classes and best practices for handling exceptions.\n\n\nAfter you finish this course, check out the Java Brains' Java 8 Lambdas course to take your Java learning to the next level!",
      "target_audience": [
        "Java developers who want to brush up their Java skills to prepare for interviews orfurther learning"
      ]
    },
    {
      "title": "Mastery in Python - For Beginners from Zero to Hero !",
      "url": "https://www.udemy.com/course/mastery-in-python-for-beginners/",
      "bio": "A straight-to-the-point Python course to quickly get you started with writing Python code and creating Python examples",
      "objectives": [
        "This course is meant for absolute beginners in programming or in python. No prior knowledge about any programming language."
      ],
      "course_content": {},
      "requirements": [
        "No Prior knowledge needed"
      ],
      "description": "What is Python?\nPython is a popular programming language. It was created in 1991 by \"Guido van Rossum\".\nIt is used for:\nweb development (server-side),\nsoftware development,\nmathematics purpose,\nsystem scripting.\nWhat can Python do?\nCan be used alongside software to create workflows.\nCan be used on a server to create web applications.\ncan connect to database systems. It can also read and modify files.\nCan be used to handle big data and perform complex mathematics.\nCan be used for rapid prototyping, or for production-ready software development.\nWhy Python?\nit works on different platforms (Windows, Mac, Linux, etc).\nHas a simple syntax similar to the English language.\nHas syntax that allows developers to write programs with fewer lines than some other programming languages.\nRuns on an interpreter system, meaning that code can be executed as soon as it is written. This means that prototyping can be very quick.\nCan be treated in a procedural way, an object-orientated way or a functional way.\nGood to know\nThe most recent major version of Python is Python 3, which we shall be using in this tutorial.\nIn this tutorial Python will be written in a text editor. It is possible to write Python in an Integrated Development Environment, such as Thonny, Pycharm, Netbeans or Eclipse which are particularly useful when managing larger collections of Python files.\nPython Syntax compared to other programming languages\nDesigned to for readability, and has some similarities to the English language with influence from mathematics.\nUses new lines to complete a command, as opposed to other programming languages which often use semicolons or parentheses.\nRelies on indentation, using whitespace, to define scope; such as the scope of loops, functions and classes. Other programming languages often use curly-brackets for this purpose.\nThanks,\nArun Ammasai",
      "target_audience": [
        "Beginners who wants to learn Python"
      ]
    },
    {
      "title": "Digital Signal Processing with MATLAB (Codes Included)",
      "url": "https://www.udemy.com/course/digital-signal-processing-with-matlab/",
      "bio": "Practical Guide to the Digital Signal Processing with multiple solved projects and downlodable source codes",
      "objectives": [
        "Identify and analyze digital signals and systems",
        "Analyze the effects of the incoming signals on the digital systems",
        "Solid understanding of the Matlab programming language and how it is used in DSP",
        "Solid understanding of the Matlab DSP toolbox"
      ],
      "course_content": {},
      "requirements": [
        "This course is self explanatory, and the required skills will be taught during the course. Knowledge of Matlab programming language and Math functions is preferred but not required."
      ],
      "description": "This course offers Coursovie Training Certificate in addition to Udemy Certificate. Coursovie Certificate is FREE and requires registration on Coursovie Website.\nIn this course, students will explore the vast world that is digital signal processing. Led by instructor Jake Bailey, MSME (Adjunct Faculty, CSU Fullerton), students will undertake lessons in fundamentals such as discrete mathematics, signal and system representations, discrete Fourier and z-transforms, transfer functions and poles and zeros, and many others. All of these concepts are reinforced by example and practice using the MATLAB computational software package.\n\nAfter acclimating with the language and methods of DSP, students will then be ushered through a variety of interesting and practical real-world applications, including filter design, audio signal processing, and image processing. All of these examples are shown with the MATLAB software package, for which the M-Files are available to students who purchase the course.",
      "target_audience": [
        "Students of Electrical and Computer Engineering Fields",
        "Hobbyists, and anyone who deals with digital signals."
      ]
    },
    {
      "title": "Python 3 in 1: Basics, Advanced and Django",
      "url": "https://www.udemy.com/course/python-from-ui5cn/",
      "bio": "Learn Python Basics, Advanced and Django in One Course, its a course to have, if you want to learn in details",
      "objectives": [
        "Students can able to create their own desktop Apps using Python.",
        "In this course we are creating an editor using wxPython"
      ],
      "course_content": {},
      "requirements": [
        "This course will cover python from the scratch. Just an access to a computer with an internet connection is enough to start."
      ],
      "description": "The Most comprehensive, yet simple course on Python programming language in the entire Web.\nLearn Python in step by step and easy way from scratch . Whether you have coding background or never programmed before this course will make you:\nA Python programmer, who knows the basics.\nA Python developer, who can build and deploy application fast.\nA Python Tester, who can find and fix bugs.\nA Python Analyst who can map real world problem into python coding terms\nAnd the best part is you will learn all this while making a Text Editor.\nSo what are you waiting for ? Jump on-board and Learn Python in a way that will advance your career and increase your knowledge, all in a fun and practical way!",
      "target_audience": [
        "Beginners who have never programmed before.",
        "Programmers switching languages to Python.",
        "Intermediate Python programmers who want to level up their skills !"
      ]
    },
    {
      "title": "Spring Boot REST APIs: Building Modern APIs with Spring Boot",
      "url": "https://www.udemy.com/course/spring-boot-rest-apis/",
      "bio": "Develop Real-Time Spring Boot 3 RESTful Endpoints: CRUD Operations, JWTs, OpenAPI, Swagger, Auth, H2 Embedded DB, MySQL",
      "objectives": [
        "Explore the architecture of the Spring Boot 3 REST framework and professional CRUD operations.",
        "Develop REST endpoints with OpenAPI and supporting Swagger Implementation",
        "Build reusable service-layer logic for scalable solutions",
        "Avoid code duplication with service/repository patterns",
        "Respond with appropriate status codes and error reporting",
        "Implement JWT authentication and authorization using Spring Security",
        "Protect endpoints with Authentication & Authorization",
        "We are RESPONSIVE INSTRUCTORS ... post your questions and we will RESPOND in 24 hours.",
        "Spring Boot developers with REST endpoints experience are in HIGH-DEMAND. Level up your career!",
        "You can DOWNLOAD all source code and PDFs. Perfect for offline LEARNING and REVIEW."
      ],
      "course_content": {},
      "requirements": [
        "Java: Java 17 or higher",
        "Spring Boot: version 3.x or higher",
        "Maven: version 3.9 or higher"
      ],
      "description": "Spring Boot 3 is the most popular framework for building enterprise Java applications. Spring Boot 3 includes REST  support to develop scalable backend API development. By developing RESTful endpoints, you can create applications with better code design, securely authenticated scalable solutions, that are all easier to maintain. This course shows you how to take full advantage of Spring Boot's REST support.\nYou will also use modern development tools such as IntelliJ (free version) and Maven. All of the projects are based on Maven, so you are free to use any IDE tool that you want.\n---\nIn this course, you will get:\n- All source code is available for download\n- Responsive Instructors: All questions answered within 24 hours\n- PDFs of all lectures are available for download\n- Professional video and audio recordings (check the free previews)\n- High quality closed-captions / subtitles available for English and 14 other languages (new!)\n---\n\n\n~ 1,000,000 (1 MILLION) happy students between the instructors of this course!\n\n\nStudents love this course! 5-star reviews\nChad Darby and Eric Roby are great at delivering the materials and giving good real-world examples of concepts. they make the course a very enjoyable class, This course is very thorough and detailed. Thank you - Ninos\n\n\nGreat course, the material is explained in such a clear way. I enjoy it a lot. Highly recommendable. - Ardak Sydyknazar\n\n\nChad Darby's courses are the best on Udemy. Thanks him I've got my first work and got promotion on the second one. Good job, my friend! (c) :) - Andrii Hryhoriev\n\n\nthis is my 4th Course with Mr. Darby, and his courses are so special. Organized, clear concepts, amazing material. and the most important his Knowledge of the Topic and he really deliver the information's for us. just amazing. - Ra'ed Abu Sa'da\n---\nIn this course, you will learn how to:\nREST API Fundamentals\nUnderstand REST architecture and principles\nSet up Spring Boot REST controllers\nBuild endpoints for CRUD operations\nUse @RestController, @RequestMapping, @PathVariable, and @RequestBody\nDifferentiate between GET, POST, PUT, and DELETE methods\nHandle path variables and query parameters effectively\nLeverage @ResponseStatus to control HTTP responses\n\n\nConnect to Databases with Spring Data JPA\nIntegrate with MySQL (and H2 for local dev)\nUse Spring Data JPA repositories\nMap entities with JPA annotations\nPerform custom queries using JPQL and native SQL\nUse projections and DTOs to control data exposure\n\n\nCRUD Operations\nCreate REST endpoints for full CRUD functionality\nReturn JSON data using Jackson\nUse @PostMapping, @PutMapping, @DeleteMapping, and @GetMapping effectively\nBuild reusable service-layer logic\nAvoid code duplication with generic service/repository patterns\nHandle entity not found scenarios gracefully\nRespond with appropriate status codes for create/update/delete operations\n\n\nREST Best Practices\nUse proper HTTP status codes\nPath & Query Data Validation\nObject Data Validation\nApply request validation with @Valid and custom validators\nStructure consistent response models\nImplement global exception handling with @ControllerAdvice\nLeverage @ResponseEntity for flexible responses\nAvoid exposing internal domain objects directly in responses\n\n\nSecure Your REST APIs\nAdd basic authentication with Spring Security\nSecure endpoints by role or path\nImplement JWT authentication (coming soon in course updates)\nCustomize login/logout endpoints\nConfigure stateless sessions using JWT\nRestrict CORS to specific domains\nBCrypt Hashing for database passwords\n\n\nCompared to other Spring Boot REST courses\nThis course is up to date and covers recent versions of Spring Boot 3. We make use of modern development tools such as IntelliJ (free version) and Maven.\nWe are very responsive instructors and we are available to answer your questions and help you work through any problems.\nFinally, all source code is provided with the course along with setup instructions.\n\n\nStudent Reviews Prove This Course's Worth\nThose who have reviewed the course have pointed out that the instruction is clear and easy to follow, as well as thorough and highly informative.\nMany students had also taken other Spring Boot REST courses in the past, only to find that this Spring Boot REST course was their favorite. They enjoyed the structure of the content and the high quality audio/video.\n\n\nSample of Student Reviews - 5 stars!\nChad Darby and Eric Roby are great at delivering the materials and giving good real-world examples of concepts. they make the course a very enjoyable class, This course is very thorough and detailed. Thank you - Ninos\n\n\nGreat course, the material is explained in such a clear way. I enjoy it a lot. Highly recommendable. - Ardak Sydyknazar\n\n\nChad Darby's courses are the best on Udemy. Thanks him I've got my first work and got promotion on the second one. Good job, my friend! (c) :) - Andrii Hryhoriev\n\n\nthis is my 4th Course with Mr. Darby, and his courses are so special. Organized, clear concepts, amazing material. and the most important his Knowledge of the Topic and he really deliver the information's for us. just amazing. - Ra'ed Abu Sa'da\n\n\n\n\nQuality Material\nYou will receive a quality course, with solid technical material and excellent audio and video production. I am a best-selling instructor on Udemy. Here's a list of my top courses.\nFull Stack: React and Spring Boot\nFull Stack: Angular and Spring Boot E-Commerce Website\nSpring and Hibernate for Beginners\nHibernate: Advanced Development Techniques\nDeploy Spring Boot 3 Apps Online to Amazon Cloud (AWS)\nJSP and Servlets for Beginners\nJavaServer Faces (JSF) for Beginners\nFastAPI Beginners and Advanced\nThese courses have received rave 5 star reviews and over 1,000,000 students have taken the courses. Also, these courses are the most popular courses in their respective categories.\nWe also have active YouTube channels where we post regular videos. In the past year, we have created over 1200 video tutorials (public and private). Our YouTube channels have over 8 million views and 50k subscribers. So I understand what works and what doesn’t work for creating video tutorials.\n\n\nNo Risk – Udemy Refund\nFinally, there is no risk. You can preview 25% of the course for free. Once you purchase the course, if for some reason  you are not happy with the course, Udemy offers a 30-day refund (based on Udemy's Refund Policy).\nSo you have nothing to lose, sign up for this course and learn how to apply Spring Boot REST framework\n\n\nTarget Audience\nJava Developers with Spring Boot experience",
      "target_audience": [
        "The course is appropriate for all Spring Boot developers."
      ]
    },
    {
      "title": "C Language + Algorithms + Data Structures = Power",
      "url": "https://www.udemy.com/course/clang-algo-ds/",
      "bio": "Up and running with c Programming language and algorithms and data structures",
      "objectives": [
        "Be able to write C programs correctlly and efficiently",
        "Be able to solve the most challenging Algorithmic problems.",
        "Be very confortable in implementing The various data structures and using them.",
        "Be able to reason about the effeciency of the various algorihtms."
      ],
      "course_content": {
        "Course 101": [
          "Introduction",
          "installing the development environment + Hello world Program",
          "Variables - Integers",
          "Variables - Non Integers",
          "Constants and Macros",
          "Operators",
          "Conditional Programming - IF statement",
          "Loops",
          "Arrays",
          "Functions - Theory",
          "Funcitons - Examples",
          "Struct",
          "Standard Input",
          "Pointers",
          "Application 1",
          "Variable scopes",
          "multidimensional Arrays",
          "Debbugging with The IDE",
          "Break - Continue",
          "enumerators - User Defined Values",
          "Pointers as function arguments",
          "Strings - Definition & Operations",
          "Strings - Functions",
          "Compiling manually"
        ],
        "Problem set | 101": [
          "Problem Set 1",
          "Problem 1",
          "Problem 2",
          "Problem 3",
          "Problem Set 2",
          "Problem 1",
          "Problem 2",
          "Problem Set 3",
          "Problem 1",
          "Problem 2",
          "Problem 3 - Method 1",
          "Problem 3 - Method 2"
        ],
        "Data Structures": [
          "Introduction",
          "Stacks - Theory",
          "Stack - Implementations",
          "Stack - Premitives",
          "Queues - Theory & Implementation",
          "Queue - Primitives",
          "Linked Lists - Singly | Theory & Implementation",
          "Linked Lists - Singly | Front operations",
          "Linked Lists - Singly | Back operations",
          "Linked Lists - doubly | Push operations",
          "Linked Lists - doubly | Pop Operations",
          "Binary Trees - Theory & implementation",
          "Binary Trees - Insertion",
          "Binary Trees - Printing the tree",
          "Graph - Theory",
          "Graph - Representation",
          "Graph - Implementation",
          "Heap - Theory",
          "Heap - Implementation - Insertion",
          "Heap - Implementation- Extraction"
        ],
        "Problem Set | Data structures": [
          "Problem Set 1"
        ],
        "Algorithms": [
          "Introduction",
          "Palindromic sequence",
          "Recursion - Theory",
          "Recursion - More examples",
          "Introduction to complexity theory I",
          "Introduction to complexity theory II",
          "Counting the occurences - O(n^2) | O(max(n))",
          "Printing the multiplication table - O(n^2)",
          "Master theorem| recurense relation complexity",
          "Bruteforce approach"
        ],
        "Sorting Algorithms": [
          "Bubble sort - O(n^2) | Theory",
          "Bubble sort - O(n^2) | Implementation",
          "Bubble sort - O(n^2) | Complexity Analysis",
          "Selection sort - O(n^2)",
          "Sorting - Insertion sort - O(n^2)",
          "Sorting - merge sort - O(n log n) - Theory",
          "Sorting - merge sort - O(n log n) - Pseudo Code",
          "Sorting - merge sort - O(n log n) - Implementation"
        ],
        "Graph Algorithms": [
          "Introduction",
          "Graph - Depth First Search - Theory",
          "Graph - Depth First Search - Implementation",
          "Graph - Breadth First Search - Theory",
          "Graph - Breadth First Search - Implementation",
          "Graph - Count number of paths between two nodes - Theory",
          "Graph - Count number of paths between two nodes - Implementation",
          "Dijkstra's Shortest Path - Theory",
          "Dijkstra's Shortest Path - Heap Customization",
          "Dijkstra's Shortest Path - Implementation"
        ],
        "Problem Set | Algorithms": [
          "Problem set 1 - Recursion",
          "Problem 1",
          "Problem 2",
          "Problem 3 - Theory",
          "Problem 3 - Implementation",
          "Problem 4",
          "Problem 5",
          "Problem 6"
        ],
        "Problem Set - Graph Theory": [
          "Problem Set 1"
        ]
      },
      "requirements": [
        "Basic computer literacy"
      ],
      "description": "In this course I will be teaching you everything you need to learn in order to become a professional C programmer , Algorithm designer and a problem solver. Whether you are a beginner or an experienced programmer , this course will fill all the gaps and give you a strong foundation and prepare you for an expert professional coding life.\nIf you chose computer sciences then Learning C is mandatory , Every kind of software was made with C, Operating systems such as Linux (The Most popular OS on earth), Version control systems such as Git (The most used Version control system on earth), Web servers such as Apache (The most popular web server on earth), Video game engines such as Unity3d (The most popular game engine on earth), Video encoders such as H.264 (The most popular and widely used video encoder on earth) , even most popular programming language were originally written in c such as c++ , c# , java , javascript, objective c... All of them was written with C. For that reason , any giant high tech company such as google , Microsoft ,IBM... will happily hire any programmer who masters C , Algorithms and Data Structure. So what are you waiting for ? Enroll now and let the journey begins.\n\nThis course will cover the following topics:\nCourse 101:\nIntroduction to the C programming language.\nInput And Output\nVariables and data types\nConstants\nOperators\nConditional\nIterative programming\nArrays\nFunctions\nPointers\nScopes\nInput And Output\nStrings\nManual Compilation via the command line prompt / Terminal\nAlgorithms:\nSorting Algorithms\nGeometric Algorithms\nMath Algorithms\nString Algorithms\nApproximation Algorithms\nTree Algorithms\nGraph Algorithms\nComplexity Theory\nProblem Solving Approaches\nMore Algorithms are being added continuously FOREVER...\nData Structures:\nvariables\nArrays (Multi dimensional)\nStrings\nStacks\nQueues\nLinked lists (Singly & Doubly)\nHeaps\nTrees (Binary Search Tree , AVL Trees ...)\nGraphs\nMore Data structures are being added continuously FOREVER...\nProblem set:\n\nA vary rich problem set with solutions and explanations\nMore problems are being added continuously FOREVER...",
      "target_audience": [
        "Student who are willing to learn and master The C programming language",
        "Student who are willing to learn and master Algorithms",
        "Student who are willing to learn and master The Data Structures",
        "Computer science or engineering majors",
        "Embedded systems or hardware students",
        "Students who are willing to become computer scientitists or build the next big thing!",
        "Students who are willing to become popular contestants in competitive programming contests such as ACM ICPC, Google Code jam ..."
      ]
    },
    {
      "title": "Scala Advanced, Part 1 - The Scala Type System",
      "url": "https://www.udemy.com/course/scala-advanced-part-1-the-scala-type-system/",
      "bio": "Mutable State, Scala Type System In-Depth, Implicits",
      "objectives": [
        "Use the full Scala type system to correctly implement general purpose re-usable libraries and APIs for other Scala developers to use easily."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Agenda",
          "Setting up the Java JDK",
          "Setting up Scala",
          "Setting up SBT",
          "Setting up IntelliJ IDEA Community Edition",
          "Checking the IntelliJ JDK Settings",
          "Download the Course Materials",
          "Unpack and Import the Course Materials"
        ],
        "Module 1 - Properties and State": [
          "Module 1 - 01",
          "Module 1 - 02",
          "Module 1 - 03",
          "Module 1 - 04",
          "Module 1 - 05",
          "Module 1 - 06",
          "Module 1 - 07",
          "Module 1 - 08",
          "Module 1 - 09",
          "Module 1 - 10",
          "Module 1 - 11",
          "Module 1 - 12",
          "Module 1 - 13",
          "Module 1 - 14",
          "Module 1 - 15",
          "Module 1 - 16",
          "Module 1 - 17",
          "Scala Properties and Mutable State"
        ],
        "Module 2 - Scala Type System Part 1": [
          "Module 2 - 01",
          "Module 2 - 02",
          "Module 2 - 03",
          "Module 2 - 04",
          "Module 2 - 05",
          "Module 2 - 06",
          "Module 2 - 07",
          "Module 2 - 08",
          "Module 2 - 09",
          "Module 2 - 10",
          "Module 2 - 11",
          "Module 2 - 12",
          "Module 2 - 13",
          "Module 2 - 14",
          "Module 2 - 15",
          "Module 2 - 16",
          "Module 2 - 17",
          "Module 2 - 18",
          "Module 2 - 19",
          "Module 2 - 20",
          "Module 2 - 21",
          "Module 2 - 22",
          "Module 2 - 23",
          "Module 2 - 24",
          "Module 2 - 25",
          "Module 2 - 26",
          "Module 2 - 27",
          "Generics, Variance and Bounds"
        ],
        "Module 3 - Scala Type System, Part 2": [
          "Module 3 - 01",
          "Module 3 - 02",
          "Module 3 - 03",
          "Module 3 - 04",
          "Module 3 - 05",
          "Module 3 - 06",
          "Module 3 - 07",
          "Module 3 - 08",
          "Module 3 - 09",
          "Module 3 - 10",
          "Module 3 - 11",
          "Module 3 - 12",
          "Module 3 - 13",
          "Module 3 - 14",
          "Module 3 - 15",
          "Module 3 - 16",
          "Module 3 - 17",
          "Module 3 - 18",
          "Module 3 - 19",
          "Module 3 - 20",
          "Type Members and Recursive Types"
        ],
        "Module 4 - Scala Type System, Part 3": [
          "Module 4 - 01",
          "Module 4 - 02",
          "Module 4 - 03",
          "Module 4 - 04",
          "Module 4 - 05",
          "Module 4 - 06",
          "Module 4 - 07",
          "Module 4 - 08",
          "Module 4 - 09",
          "Module 4 - 10",
          "Module 4 - 11",
          "Module 4 - 12",
          "Module 4 - 13",
          "Module 4 - 14",
          "Module 4 - 15",
          "Module 4 - 16",
          "Module 4 - 17",
          "Module 4 - 18",
          "Existential, Structural, Refinement, Self and Infix types"
        ],
        "Module 5 - Implicits, Part 1": [
          "Module 5 - 01",
          "Module 5 - 02",
          "Module 5 - 03",
          "Module 5 - 04",
          "Module 5 - 05",
          "Module 5 - 06",
          "Module 5 - 07",
          "Module 5 - 08",
          "Module 5 - 09",
          "Module 5 - 10",
          "Module 5 - 11",
          "Module 5 - 12",
          "Module 5 - 13",
          "Module 5 - 14",
          "Module 5 - 15",
          "Module 5 - 16",
          "Module 5 - 17",
          "Module 5 - 18",
          "Module 5 - 19",
          "Module 5 - 20",
          "Module 5 - 21",
          "Module 5 - 22",
          "Module 5 - 23",
          "Implicit Parameters and Type Classes"
        ],
        "Module 6 - Implicits, Part 2": [
          "Module 6 - 01",
          "Module 6 - 02",
          "Module 6 - 03",
          "Module 6 - 04",
          "Module 6 - 05",
          "Module 6 - 06",
          "Module 6 - 07",
          "Module 6 - 08",
          "Module 6 - 09",
          "Module 6 - 10",
          "Module 6 - 11",
          "Module 6 - 12",
          "Module 6 - 13",
          "Module 6 - 14",
          "Module 6 - 15",
          "Module 6 - 16",
          "Module 6 - 17",
          "Module 6 - 18",
          "Module 6 - 19",
          "Module 6 - 20",
          "Implicit Constraints and Functions"
        ]
      },
      "requirements": [
        "A day-to-day working knowledge of the Scala language equivalent to completing Escalate Software's Scala Applied course is recommended before starting on the advanced course",
        "You will need to set up your laptop with Scala, SBT and IntelliJ IDEA with Scala support by following the setup instructions",
        "Experience with other statically typed languages (e.g. Java or C#) will be helpful but not required."
      ],
      "description": "Scala Advanced, Part 1\nThe Escalate Software Scala Advanced course is intended for experienced Scala developers looking to improve their skills, particularly for library and API design and development. It covers topics needed to be effective in producing high quality, correct, powerful and flexible Scala libraries that are still easy to use by others.\nPart 1 provides in depth and thorough knowledge of the Scala type system, an important precursor to any library development. We start off with a look at the dangers, and safe use, of mutable shared state in Scala, covering properties and caching. From there we delve into the Scala type system including:\n\n\nGenerics\nCo- and Contra-Variance\nUpper and Lower Bounds\nType Inference\nType Parameters and Type Members\nPath Dependent Types\nRefinement Types\nStructural Types\nRecursive Types\nF-bounded Polymorphism\nThe final two modules then move on to the secondary Implicits type system that augments the regular Scala type system, covering:\n\n\nSimple Implicit Parameters\nType Classes\nImplicit classes, objects and methods\nType Class Composition\nImplicit Constraints\n=:= and <:<\nImplicit Class and Type Tags\nImplicit Conversions\nextends AnyVal\nAnd more.\n\n\nAfter completing this course you will understand the Scala type system in a way that lets you construct your own well designed APIs, reason about type abstraction and calculus, apply implicit constraints and augment the language rules, and much more.\n\nParts 2 and 3 (available separately) cover topics like best practices, idioms, patterns, advanced functional programming, asynchronous programming, parser-combinators, macros, performance profiling and optimization, and much more. These parts rely on information presented during this advanced part 1 course.",
      "target_audience": [
        "Scala library and API developers, or Scala developers looking to improve their knowledge and skills"
      ]
    },
    {
      "title": "Ultimate C++: Basic Modern C++20 to Advanced Multithreading",
      "url": "https://www.udemy.com/course/practical-modern-cpp-masterclass/",
      "bio": "C++20, Classes, Pointers, STL, Templates, Multithreading, Concurrent Design, Lock Free Data structures, Performance Tool",
      "objectives": [
        "C++ Fundamentals: Grasp the core concepts including variables, data types, arithmetic operations, and basic I/O.",
        "Design Your Own Types: Learn the art of defining custom types using classes, structures, unions, and enumerations.",
        "Understanding Modularity: Organize and structure your code effectively using namespaces, source files, and headers. Introduction to C++20 Modules feature.",
        "Dive into OOP: Get introduced to the world of Object-Oriented Programming in C++ and understand classes, constructors, member functions, and overloading.",
        "Understand Essential Operations: Demystify copy and move semantics and lay the foundation for the Rule of Three/Five.",
        "Harness the Power of Templates: Delve into generic programming with C++ templates, ensuring type safety without limitations.",
        "Concepts (C++20) and Generic Programming: Dive deeper into ensuring type-safety at compile-time through concepts.",
        "Explore the C++ Library: Get familiarized with the C++ Standard Library, from containers and algorithms to a multitude of utilities.",
        "Strings and Beyond: Master string operations, string_view(C++17) and harness the power of regular expressions.",
        "Familiarize with I/O Streams: Navigate the world of I/O streams for efficient and formatted input-output operations.",
        "Container Proficiency: Explore powerful container classes such as vector, list, and map.",
        "Algorithmic Prowess: Understand the nuances of how algorithms work with containers and iterators.",
        "C++ Utilities: Equip yourself with knowledge on smart pointers, time/date utilities, and more.",
        "Concurrency & Parallelism: Get started with the concurrent world of C++, learning about threads, tasks, and synchronization mechanisms.",
        "200+ coding exercises and assignments to immediately apply the learned knowledge.",
        "Details of C++ memory model on which atomics are built",
        "Concepts of memory barriers and memory order in C++",
        "Using Modern C++ to design lock free algorithms with C++ atomics and memory model",
        "Importance of sequential consistency in concurrency",
        "Getting high performane using C++ memory model",
        "External factors influencing performance of atomics",
        "Tools to use in production while working with C++ in production"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming awareness is expected. Examples: Questions like \"What is a variable?\", \"What is a processor?\" etc. will NOT be answered in the course.",
        "Access to desktop based browser is mandatory to complete the coding exercises and the online compiler too access.",
        "Course guides about using online compiler enviroment and hence DOES NOT explain or expect usage of any IDE application."
      ],
      "description": "\"Ultimate C++: From Basic Modern C++20 to Advanced Multithreading\" is your comprehensive pathway to mastering modern C++ development. This expertly crafted, almost 24-hour course transforms foundational knowledge into professional-grade programming skills, featuring cutting-edge C++20 features and industry-standard multithreading practices used by top tech companies.\n\n\nMaster three essential pillars of professional C++ development:\n\n\n1. Modern C++ Mastery\n- Latest C++20 features and best practices\n- Powerful object-oriented programming techniques\n- Professional-grade STL implementation\n- Smart memory management for leak-free code\n- Industry-standard error handling strategies\n\n\n2. Professional Development Skills\n- Advanced template programming techniques\n- High-performance STL algorithms\n- Production-ready I/O handling\n- Generic programming for scalable solutions\n- Modern string processing and regex mastery\n\n\n3. Enterprise-Level Threading\n- Production-tested multithreading patterns\n- Advanced memory models and synchronization\n- High-performance lock-free programming\n- Thread-safe data structure design\n- Performance optimization secrets\n\n\nWhat sets this course apart:\n- Almost 300 carefully structured video lectures\n- 150+ Real-world coding exercises\n- Strategic knowledge-check quizzes\n- Overview of using essential production tools (CMake, Git, debugging) in context of C++\n- A performance tools overview with demos.\n- Industry-relevant project examples\n\n\nPerfect for ambitious developers with basic programming knowledge, this course requires only a desktop browser - no complex IDE setup is needed!\n\n\nWhether you're aiming to build high-performance applications, ace technical interviews, or modernize legacy systems, this course delivers the practical skills needed in today's competitive tech landscape. Join thousands of successful students who've transformed their C++ development capabilities through this comprehensive learning journey. (Please watch the course overview for a detailed course roadmap.)\n\n\nMore Details about Intermediate and Advanced Content:\nThis intermediate-level content covers advanced concurrency and memory models in C++, focusing on writing high-performance concurrent programs. Students will explore the C++ memory model, including Sequential Consistency-Data Race Free (SC-DRF) guarantees, memory barriers, and atomics. The material delves into efficient synchronization mechanisms, lock-free and wait-free algorithms, and techniques for avoiding performance pitfalls like false sharing in caches.\nThe modules emphasize the practical implementation of concurrent data structures using modern C++20 features, including parallel algorithms, atomic operations, and enhanced memory models. Students will learn to design and implement thread-safe data structures like queues, stacks, hash tables, and trees, while mastering essential performance analysis tools such as perf, Valgrind, Intel Vtune, Google Orbit, and gdb. This content is particularly suited for experienced C++ developers looking to enhance their concurrent programming skills and create scalable applications for multi-core systems.\n\n\nNote: While accessible to beginners, this course rewards dedicated learners ready to master professional C++ development.",
      "target_audience": [
        "Beginner programmers and students seeking starting point for learning modern C++ from software development perspective.",
        "Experienced programmers seeking a quick refresher to catch up with Modern C++ upto C++20",
        "NOT meant for interview preparation in coming weeks!",
        "Programmers from other languages like Java, Python willing to learn C++ to diversify their skill set.",
        "C++ developers curious to understand the details of C++11 memory model",
        "C++ developers exploring options to write high performance concurrent applications in C++",
        "C++ developers keen to catch up on Modern C++20 concurreny and multhreading features like Coroutines."
      ]
    },
    {
      "title": "Functional Programming with Scala Cats",
      "url": "https://www.udemy.com/course/functional-programming-with-scala-cats/",
      "bio": "A journey into the world of typeclasses, the Cats library, and the functional way of doing things in Scala",
      "objectives": [
        "Create own typeclasses",
        "Write and use lawful instances of well-known typeclasses such as Functors, Applicatives, Monads, etc.",
        "Perform common programming tasks (validation, dependency injection, state management, etc.) in a functional way."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Setup",
          "Course files"
        ],
        "Typeclasses": [
          "Introduction",
          "Channel - Any",
          "Channel - Any - Code",
          "Channel - Inheritance",
          "Channel - Inheritance - Code",
          "Channel - Typeclasses",
          "Channel - Typeclasses - Code",
          "Channel - Typeclasses - Advantages",
          "Implicits and Helper Methods",
          "Implicits and Helper Methods - Code - Organizing instances",
          "Implicits and Helper Methods - Code - Organizing instances #2",
          "Implicits and Helper Methods - Code - Summoner method",
          "Implicits and Helper Methods - Code - Instance method",
          "Channel - Read",
          "Channel - Read - Code",
          "Laws",
          "Laws - Code",
          "Automatic instance derivation",
          "Syntax",
          "Syntax - Code",
          "Summary",
          "Typeclasses quiz",
          "Assignment: Creating our own typeclass"
        ],
        "Well known typeclasses": [
          "Introduction",
          "Eq",
          "Eq - Code",
          "Order",
          "Order - Code",
          "Show",
          "Show - Code",
          "Monoid",
          "Monoid - Code - Speed",
          "Monoid - Code - Exercises",
          "Higher Kinded Types",
          "Functor",
          "Functor - Code",
          "Applicative",
          "Applicative - Code - Validated",
          "Applicative - Code - Option",
          "Monad",
          "Monad - Code - Option",
          "Monad - Code - List",
          "Monad - Code - Either",
          "Monad - Code - Try",
          "Monad Error",
          "Monad Error - Code - Instances",
          "Monad Error - Code - Example",
          "Monad Error - Code - Additional Functions",
          "Foldable - FoldRight",
          "Foldable - FoldLeft",
          "Foldable - Typeclass",
          "Foldable - Code - MList",
          "Foldable - Code - Find",
          "Foldable - Code - Exists",
          "Foldable - Code - To List",
          "Foldable - Code - For All",
          "Traverse",
          "Traverse - Code - MList",
          "Traverse - Code - Option",
          "Testing - Box",
          "Testing - Instances",
          "Testing - Properties",
          "Summary",
          "Common Typeclasses Quiz",
          "Assignment: The Get Monad"
        ],
        "Functional Techniques": [
          "Introduction",
          "Validations",
          "Validations - Code",
          "Dependency Injection",
          "Dependency Injection - Code - The Reader Monad",
          "Dependency Injection - Code - Modularization",
          "Dependency Injection - Code - Exercise",
          "Tracking",
          "Tracking - Code - The Writer Monad",
          "Tracking - Code - Discounts Example",
          "Tracking - Code - Exercise",
          "State Management",
          "State Management - Code - The State Monad",
          "State Management - Code - Tic Tac Toe Example",
          "Trampolines",
          "Trampolines - Code - IsEven",
          "Trampolines - Code - FlatMap",
          "Evaluation Modes",
          "Evaluation Modes - Code - The Eval Monad",
          "Evaluation Modes - Code - Stream Example",
          "TailRecM",
          "Monad Transformers",
          "Monad Transformers - Code - ReaderT",
          "Monad Transformers - Code - OptionT",
          "Suspending Side Effects",
          "Suspending Side Effects - Code - IO",
          "Suspending Side Effects - Code - Monad",
          "Summary",
          "Functional Techniques Quiz"
        ],
        "Final Project": [
          "Introduction",
          "Overview",
          "Architecture",
          "Validations",
          "Generators",
          "Person",
          "Money",
          "Expense",
          "DebtByPayee",
          "DebtByPayer",
          "PersonService",
          "ExpenseService",
          "IO",
          "Syntax",
          "Command - readParticipants",
          "Command - validateData",
          "Command - findPerson",
          "Command - addPerson",
          "App"
        ]
      },
      "requirements": [
        "Working knowledge of the Scala language (case classes, pattern matching, traits, implicits, etc.)",
        "Basic understanding of the Scala library (List, Map, Set, etc.)",
        "(Nice to have) Some experience using the basic higher order methods such as map, flatMap and fold"
      ],
      "description": "When we start our journey as a Scala developer, our first impression of the language may be that of 'a better Java'. We learn about classes, traits, pattern matching and some other constructs that make our life easier. At some point we come across the amazing higher-order methods such as map, filter and fold. These serve as a great first taste of functional programming.\nBut what if I told you that there is much more than that? In this course I will show you how standard functional programming practices can help you write code that is more generic, robust and testable.\nThis course is divided into 3 main sections.\nIn the first section, we will learn about typeclasses. We will use as a driving example the problem of encoding and decoding objects into and from bytes. By the end of this section you will be able to create your own typeclasses and use the typeclass pattern to write polymorphic code.\nIn the second section, we will take a look at some of the most common typeclasses in functional programming, including Monads, Applicatives, Functors and many more. We will use the famous Cats library to provide us with their implementations, and we will use Discipline along with ScalaCheck and ScalaTest to test their laws. By the end of this section, you will be able to write lawful instances of these typeclasses for any of your types, and test their validity in an automated manner.\nIn the third and final section, we will learn to perform many common programming tasks with functional structures. These tasks include:\n- Validations via the Validated datatype\n- Dependency injection with the Reader monad\n- Tracking data in our computations with the Writer monad\n- Managing state with the State monad\n- Writing stack safe computations with Trampolines\n- Making computations lazy with the Eval monad\n- Composing monad stacks via monad transformers such as ReaderT and OptionT\n- Suspending effects with a simple but useful implementation of the IO monad\nI'm a big believer of learning by doing so I've included a lot of in-video exercises, along with quizzes and assignments at the end of each section. I hope you enjoy doing them as much as I enjoyed putting them together!\nWithout further ado, I want to give you a big welcome to the course and the thrilling world of functional programming!",
      "target_audience": [
        "Scala developers with 1 or 2 years of experience who want to learn the functional side of the language",
        "Students who have completed an introductory Scala course and are willing to learn more advanced features"
      ]
    },
    {
      "title": "Python Programming Mastery: From Beginner to Pro",
      "url": "https://www.udemy.com/course/python-programming-mastery-from-beginner-to-pro/",
      "bio": "Python Pro: Master Programming and Problem-Solving Skills",
      "objectives": [
        "Understand and apply fundamental Python concepts, including variables, data types, operators, and control structures.",
        "Gain the ability to solve real-world problems by writing efficient, reusable Python code.",
        "Learn to leverage Python's standard libraries and external packages to streamline data manipulation, web development, and automation tasks.",
        "Apply Python skills in hands-on projects, such as building applications, automating tasks, and analyzing data, to reinforce learning and demonstrate proficiency",
        "Master creating, accessing, and manipulating lists to store and manage collections of data efficiently.",
        "Learn to work with key-value pairs using dictionaries for dynamic data storage and retrieval.",
        "Understand the unique properties of tuples and sets and their practical applications in Python programming."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Python",
          "Quiz-1"
        ],
        "Installation": [
          "Setup Python on Windows",
          "Setup Pycharm on Windows",
          "Setup Python on MacOS",
          "Setup Pycharm on MacOS",
          "Quiz-2"
        ],
        "Getting Started": [
          "First Python Program",
          "Quiz-3"
        ],
        "Variables & Data Types": [
          "Understanding Variables",
          "Understanding String",
          "Datatypes",
          "Quiz-4"
        ],
        "Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "Membership Operators",
          "Identity Operators",
          "Quiz-5"
        ],
        "Handling User Input": [
          "Getting Input from User",
          "Type Casting",
          "Quiz-6"
        ],
        "Control Flow": [
          "If Statement",
          "If Else Statement",
          "Elif Statement",
          "Making a Simple Calculator",
          "Quiz-7"
        ],
        "Loops": [
          "For Loop",
          "While Loop",
          "Break, Continue and Pass Statements",
          "Quiz-8"
        ],
        "String Manipulation": [
          "String Indexing & Slicing",
          "String Iteration",
          "Common String Functions",
          "Advance String Funcations",
          "Chr & Ord Functions",
          "String Formatting",
          "Quiz-9"
        ],
        "List (Data Structure)": [
          "Understanding List",
          "List Iteration",
          "List Comprehension",
          "List Functions Part 1",
          "List Functions Part 2",
          "Zip Function",
          "Converting String into List",
          "Stack Implementation",
          "Queue Implementation",
          "Quiz-10"
        ]
      },
      "requirements": [
        "No prior experience is needed"
      ],
      "description": "Unlock the Power of Python – From Beginner to Pro\nWelcome to Python Programming Mastery: From Beginner to Pro! This course is designed to take you on a comprehensive journey from Python basics to advanced programming techniques. Whether you're starting fresh or looking to sharpen your skills, this course equips you with the tools, techniques, and problem-solving abilities needed to excel in Python programming.\nWhat You’ll Learn:\nFoundational Python Concepts: Master variables, data types, control structures, and functions.\nAdvanced Techniques: Dive into object-oriented programming, modules, and libraries to elevate your skills.\nReal-World Applications: Tackle hands-on projects to solidify your understanding, including data analysis, web scraping, and automation.\nProblem-Solving Essentials: Develop critical problem-solving skills and learn to write clean, efficient code.\nBy the end of this course, you’ll not only understand Python’s core principles but also have the confidence to apply them in diverse fields like data science, web development, and automation. Our engaging lessons, comprehensive exercises, and real-world challenges ensure you’re prepared to confidently build applications, automate workflows, analyze data, develop complex algorithms, and even launch your own innovative projects. Join us to become a Python Pro, equipped with highly marketable, in-demand skills for today’s tech-driven world! So what are you waiting for?",
      "target_audience": [
        "Beginner Python Developers"
      ]
    },
    {
      "title": "Learn C#: Make a Databased App with Entity Framework",
      "url": "https://www.udemy.com/course/learn-c-make-a-databased-app-with-entity-framework/",
      "bio": "Learn how to create an application in C# that can generate it's own database using Entity Framework and Code First.",
      "objectives": [
        "By the end of the course you will be able to define and build an SQL database using only C# code. No database development required!",
        "Perform CRUD operations (Create, Read, Update, Delete) on entities using C# code.",
        "Handle entity changes using Code First Migrations.",
        "For the majority of the course, we will do absolutely no database development! However, we will show how to call custom SQL statements if you need to."
      ],
      "course_content": {},
      "requirements": [
        "A basic knowledge of C# and Visual Studio.",
        "Microsoft Visual Studio 2012, 2013 or later is required. We show how to install Visual Studio Express if you don't already have it."
      ],
      "description": "In this course you will learn how to create a simple C# application using Microsoft Visual Studio that creates and connects to an SQL Database with the Entity Framework*, with no database development required!\nWe will use Code First development principals to define all database tables and columns using only C# code.\nAll database tables and columns will be generated automatically from the C# code without the need to edit the database directly. As such we will be doing no database development (except for a section on calling SQL statements directly if you need to).\nAll source code is included as a Microsoft Visual Studio 2013 project so you can get up and running straight away.\nThank you for choosing this course and we look forward to viewing your positive reviews and feedback.\nMPire Solutions Pty Ltd\n* Note: The Entity Framework is Microsofts' newest data access technology, and Code First allows us to create database driven applications using only C# code, with no database development required!",
      "target_audience": [
        "This course is recommended for C# developers who want to learn how to use the latest Microsoft .Net database technologies.",
        "Students should have at least a basic knowledge of C# and Visual Studio.",
        "While much of the code is simple C#, this course is specifically about Entity Framework Code First and is NOT an introduction to C# or building an application with C#."
      ]
    },
    {
      "title": "Learn C Programming (Beginners to Expert )",
      "url": "https://www.udemy.com/course/learn-c-programming-beginners-to-expert/",
      "bio": "If you’re ready to buckle down and learn C Programming here’s where you should start.",
      "objectives": [
        "Lay down the foundation of fundamental concepts from beginners to expert level step by step",
        "Learn about core programming concepts",
        "By the end of this course, you should definitely be able to understand and write good C code.",
        "Correctly use C Code commenting"
      ],
      "course_content": {},
      "requirements": [
        "The very basic understanding of C Programming Language",
        "The course is aimed to teach you C, whether you are an experienced programmer or just getting started"
      ],
      "description": "C Programming Language is the most popular computer language and most used programming language till now. It is very simple and elegant language.\n1) This is by far the most comprehensive C Programming course you'll find here, or anywhere else.\n2) This C Programming tutorial Series starts from the very basics and covers advanced concepts as we progress. This course breaks even the most complex applications down into simplistic steps.\n3) It is aimed at complete beginners, and assumes that you have no programming experience whatsoever.\n4) This C Programming tutorial Series uses Visual training method, offering users increased retention and accelerated learning.\nEvery programmer should and must have learnt C whether it is a Java or C# expert, Because all these languages are derived from C. In this tutorial you will learn all the basic concept of C programming language. Every section in this tutorial is downloadable for offline learning. Topics will be added additional to the tutorial every week or the other which cover more topics and with advanced topics.",
      "target_audience": [
        "Students",
        "New Developers",
        "A basic knowledge of programming is helpful but not necessary to get the most out of this course",
        "A genuine interest to learn. Maybe as a new hobby"
      ]
    },
    {
      "title": "Java And PHP Complete Course For Java And PHP Beginners",
      "url": "https://www.udemy.com/course/java-and-php-complete-course/",
      "bio": "Java And PHP Programming, Learn Java And PHP Basics And Advanced One Course, Java And PHP Complete Course For Beginners",
      "objectives": [
        "You will learn how to write a complete Java program that takes user input, processes and outputs the results",
        "You will learn java concepts such as console output, Java Variables and Data Types, Java Operators And more",
        "You will learn PHP concepts such as basic syntax, input and output techniques, and console IO",
        "You will learn PHP arithmetic, assignment, conditional, comparison operators",
        "You will learn PHP loops and conditional statements,POST and GET and more."
      ],
      "course_content": {
        "Introduction": [
          "Java Hello World Program.",
          "Java Arithmetic Operators",
          "Java Unary Operators",
          "Java Bitwise Operators",
          "Java Relational Operators",
          "Java Conditional Operator",
          "Java Input And Output Techniques",
          "Java Strings",
          "Java String Functions",
          "Java String Buffer and String Builder",
          "Java Static Keyword",
          "Java Class And Objects",
          "Java Boolean Datatype",
          "Java Character Type Data",
          "Java This Keyword",
          "Java User Defined Exceptions",
          "Java Switch Case Statement",
          "Java Arrays",
          "Java Array List",
          "Java Thread Synchronization",
          "Java Vectors",
          "Java Packages",
          "Java Polymorphism Function Overriding",
          "Java Polymorphism functions overloading",
          "Java Sets.",
          "Java Real Type Data.",
          "Java Stack Class",
          "Java Queue.",
          "Java Programming Abstraction",
          "Java Priority queue",
          "Java Inheritance",
          "Java Commenting Techniques",
          "Java Linked List",
          "Java Interfaces",
          "Java Multithreading by extending thread class",
          "Java Multithreading by runnable interface",
          "Java Hash Map",
          "Java Hash Table",
          "Java Functions",
          "Java Final Keyword",
          "Java Comparator To Sort",
          "Java Break Statement",
          "Java Continue Statement",
          "Java For Loop",
          "Java While Loop",
          "Java File Handling",
          "Java Constructor Of A Class",
          "Java Exception Handling",
          "Java Enumeration and iterators",
          "Java Wrapper Classes",
          "Java Access Specifiers",
          "Java Built-In Exceptions"
        ],
        "PHP Complete Course": [
          "PHP Basic Syntax",
          "PHP Input And Output",
          "PHP Arithmetic Operators",
          "PHP Assignment Operators",
          "PHP Conditional Operators",
          "PHP Comparison Operators",
          "PHP script as web page",
          "PHP Web Concepts",
          "PHP Break Statement",
          "PHP Continue Statement",
          "PHP Console IO operations",
          "PHP For Loop",
          "PHP While Loop",
          "PHP Switch Case",
          "PHP MySql API",
          "PHP MySqli API",
          "PHP Inheritance",
          "PHP GET Method.",
          "PHP Function Statements",
          "PHP Scalar Type Declaration",
          "PHP Spaceship Operator",
          "PHP Null Coalescing Operator.",
          "PHP POST Method",
          "PHP CSPRNG",
          "PHP Cookies",
          "PHP Custom Exception Handler Function",
          "PHP Error Handling DIE function",
          "PHP Decision Making",
          "PHP Error Handler Function",
          "PHP Exception Handling",
          "PHP $_ REQUEST Variable",
          "PHP Anonymous Class",
          "PHP Class And Objects",
          "bonus lecture"
        ]
      },
      "requirements": [
        "Basic Understanding of Computers",
        "No prior knowledge of Java And PHP things will be covered in this course"
      ],
      "description": "Java And PHP Complete Course For Java And PHP Beginners\nSection 1:  Java Complete Course\n\n\nTake-Away Skills:\nThis course is a great introduction to both fundamental programming concepts and the Java programming language. By the end, you'll be comfortable programming in Core Java.\nThis Course is the first of a series of courses that make up the Core Java Specialization. The Core Java Specialization, in turn, is part of a series of programming specializations and designed to provide the skill set necessary to be hired as an IT developer using Java in many corporate environments. This course includes hands-on practice and will give you a solid knowledge of the Java language. After completing this course, you will be able to identify Java’s benefits, program in basic Java syntax using Java data types, and incorporate branches and loops. The audience for this course: - Anyone interested in learning Java - Programmers - Technical Managers - Application Developers\nTopics Covered:\nModule-1: Java Fundamentals\nBasic Java Program\nCompile and run a Java program\nUnderstanding console output\nJava Variables and Data Types\nJava Operators\nConditional statements\nLoops\nBreak and continue\nArrays\nSingle Dimensional array\nDouble Dimensional array\nString Class\nString methods\nSection 3: PHP Complete Course\nIn this course, you'll explore the basic structure of a web application, and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and superglobal variables, among other elements. An introduction to Cascading Style Sheets (CSS) will allow you to style markup for webpages.\nBasic syntax\nInput and Output\nArithmetic operators\nConditional operators\nComparison operators\nAssignment operators\nLoops\nConditional statements\nand more\nSee you Inside the course. Thank you",
      "target_audience": [
        "Beginner in Java development And PHP development",
        "Beginner in software development and web development"
      ]
    },
    {
      "title": "JavaScript for Beginners - Step By Step Guide",
      "url": "https://www.udemy.com/course/javascript-the-beginners-guide-with-hands-on-coding/",
      "bio": "Learn JavaScript from scratch, build a solid foundation with quizzes and coding exercises",
      "objectives": [
        "Start with the very basics of JavaScript",
        "Gain deep understanding of JavaScript",
        "JavaScript Variables and Data types",
        "JavaScript Statements if-else, for-while loop, switch-case",
        "JavaScript Functions, Objects, Arrays",
        "Document Object Model",
        "Learn how to debug JavaScript code",
        "Visual Studio Code 2017",
        "Full access to high quality video lessons for life",
        "Build confidence with quizzes and coding challenges",
        "You will get Certificate of Completion"
      ],
      "course_content": {
        "Introduction and Course Overview": [
          "Course Introduction",
          "Course Outline & Exercise Files",
          "What is JavaScript and Why to Learn?",
          "JavaScript General Knowledge"
        ],
        "Setup and Getting Started with JavaScript": [
          "JavaScript Editors and IDEs",
          "Makeup of a Webpage",
          "JavaScript Interacting with a Webpage - Exercise",
          "JavaScript Code in External file & Exercises"
        ],
        "JavaScript Variables and Data types": [
          "Variables and Naming Rules & Exercises",
          "JavaScript Data types & Exercises",
          "JavaScript Data type - Number",
          "JavaScript Data type - Number: Exercises",
          "JavaScript Data type - String & Exercises - Part1",
          "JavaScript Data type - String & Exercises - Part2",
          "Fix this code",
          "JavaScript Data type - Boolean & Exercises",
          "Other Data types - undefined, object, function & Exercises",
          "Quiz - JavaScript Variables and Data types",
          "On Numbers and Strings"
        ],
        "JavaScript Statements, Operators & Program-Flow": [
          "Statements, Comments & Operators",
          "Statements, Comments & Operators - Exercises",
          "Program Execution Flow: Introduction",
          "JavaScript: if, else if, else & Exercises",
          "JavaScript: switch-case",
          "Correct and complete the code",
          "JavaScript: for & for/in loop",
          "JavaScript: while & do/while loop",
          "JavaScript Statements, Operators"
        ],
        "JavaScript Functions": [
          "Introduction to Functions",
          "Invoking Functions and Function Parameters",
          "JavaScript Functions - Exercises",
          "JavaScript Functions"
        ],
        "JavaScript Objects": [
          "JavaScript Objects Introduction and Create Objects",
          "Create JavaScript Objects - Exercises",
          "JavaScript Objects"
        ],
        "JavaScript Arrays, Dates": [
          "Introduction and Create Arrays",
          "JavaScript Arrays - Iterate, Resize, Merge",
          "Arrays - sorting and finding min/max",
          "JavaScript Date Objects"
        ],
        "DOM (Document Object Model) & BOM (Browser Object Model)": [
          "Basics of DOM",
          "BOM - Browser Object Model"
        ],
        "JavaScript Project: Build a Drawing Board": [
          "About the project and Start Building",
          "Coding and Completing the Project"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML is helpful, but not required"
      ],
      "description": "Fresh New style of teaching\n\"The course uses a wonderful, amazing, friendly and clearly method for teaching Us.\"  - Paulo Passos\n\"It's a great beginner course to JS. Recommended for people just starting out to learn the basic concepts.\" - Gabriel Ong\nBuild a solid foundation on JavaScript\nIn this course, my goal is to help you build a solid foundation on JavaScript even if you have no experience with JavaScript. This course is designed to build concepts via power point presentations, consolidate learning through coding exercises, build confidence via building small projects, quizzes and more.\nThe summary of this course is:\nJavaScript Variables and Data types\nJavaScript Statements like if-else, for-while loop, switch-case etc.\nJavaScript Functions\nJavaScript Objects and Arrays\nDocument Object Model\nBrowser Object Model\nCoding exercises and Quizzes\nAt the end of this course, you will be able to write JavaScript code with ease, you will have a solid foundation of JavaScript and be able to build interactive webpages with JavaScript.",
      "target_audience": [
        "Anyone who wants to learn JavaScript"
      ]
    },
    {
      "title": "[RETIRED] Advanced Java programming with JavaFx",
      "url": "https://www.udemy.com/course/advanced-programming-with-javafx-build-an-email-client/",
      "bio": "Put to work those hard earned Java programming skills! Use more than just the modern looks of JavaFX!",
      "objectives": [
        "Master Java by coding",
        "See how a big programming project looks like",
        "Have a solid base about JavaFX",
        "Write a complex app, frontend and backend.",
        "Use advanced features of IDEs",
        "Export your code from your IDE to an executable app"
      ],
      "course_content": {
        "Course introduction and basic setup": [
          "Course introduction",
          "Setting up a JavaFx project using InteliJ Ideea IDE",
          "Setting up a JavaFx project using Eclipse IDE",
          "First JavaFx Program",
          "Setting the layout using FXML",
          "Scene Builder"
        ],
        "Setting up the basic JavaFX layout": [
          "Section 2 introduction",
          "Building the login window",
          "Model-view-controller architectural pattern",
          "Building the main window",
          "Making the windows responsive",
          "Comunicating between controllers",
          "The abstract controller"
        ],
        "JavaFX Stages and Css": [
          "Section 3 introduction",
          "Initializing stages",
          "Stage actions",
          "Building multiple stages",
          "Configuring the options window",
          "Css introduction",
          "Updating the css dynamically",
          "Css selectors"
        ],
        "Java Mail": [
          "Section 4 introduction",
          "JavaMail setup",
          "Email account setup",
          "The login service"
        ],
        "Multithreading in JavaFx": [
          "Section 5 intro",
          "Introduction on JavaFx services",
          "More info about the Services and overall threads discussion",
          "JavaFx treeItems for our folder structure",
          "Fetching the email folder structure",
          "Fetching all folders"
        ],
        "Reading the email messages": [
          "Section 6 intro",
          "Getting the messages",
          "Email message bean",
          "Adding messages to folder",
          "TableView setup",
          "Making unread messages appear bold",
          "Sorting tableView elements",
          "Visualizing the messages",
          "Loading the messages"
        ],
        "Email actions": [
          "Section 7 intro",
          "The message listener",
          "Updating folders with new messages",
          "Receiving emails",
          "Interacting with messages",
          "Deleting messages"
        ],
        "Composing messages": [
          "Section 8 intro",
          "Compose messages layout",
          "Compose messages controller",
          "Compose messages Service"
        ],
        "Finishing the app": [
          "Section 9 intro",
          "Folder icons",
          "Super css",
          "Note on unit testing",
          "Running the program"
        ],
        "Handling attachments": [
          "Section 10 intro",
          "Handling attachements with multipart",
          "Getting attachments",
          "Email message details window",
          "Saving attachments to disk",
          "Custom button class",
          "Sending emails with attachments"
        ]
      },
      "requirements": [
        "Knowledge of the Java programming language",
        "Familiar with an IDE",
        "Basic knowledge of HTML(desired, not required)",
        "Time and patience"
      ],
      "description": "This course is retired.\n\n\nSeeing a message printed on the console when you click a button can be rewarding, but at some point you need to go beyond the basics of JavaFX. Project based learning is the best approach to become a competent JavaFX programmer.\nWriting a calculator app is fun, but you know what is funnier? Getting a job as a programmer. You can't get there just by coding simple apps or watching presentations.\nThis course uses the latest versions of JavaFX at an advanced level, so you will be ready to write your own complex use interfaces using Java.\nThis course can be summed up as one big programming exercise. So if you want to feel more confident about your Java programming skills by building a unitary program, then this course is for you.\nWhat you can expect from this course:\nInstall Java and JavaFX and setup your IDE, be it Eclipse on IntelliJ\nUnderstand how to run an initial JavaFX program\nUse FXML for writing UIs in a productive manner, just like Android programming\nJavaFX views and controllers\nCommunication between classes - no singletons!\nModel-View-Controller pattern for JavaFX applications\nMake coll skins for your app with JavaFX css\nDynamically update your JavaFX themes\nMulti-threading in JavaFX: Tasks, Services, Threads, all with real examples, NOT Thread.wait()\nCustom JavaFX nodes for advanced functionality\nTables in JavaFX with Table Views, with dynamic data and style updates\nJavaFX web views for reading and composing email messages\nRun the JavaFX program outside your IDE and understand how to run Java Jar apps and fix JavaFX packaging issues\nAdvanced Java techniques you will learn by practice:\nAbstract classes, Interfaces and inheritance\nAnnotations\nEnums, Lists, Generics\nCasting and Delegation\nRecursion\nMulti-threading\nLambda expressions\nComparable Interface\nString Buffers\nWhile(true) loops, yes, those exist\nSelection models\nSerialization and encoding\nCourse advantages:\nRespect for your time: most of the time of the instructor typing is cut off, the course is focused on explanations\nConcise: learn only what you need, no fillers to make the course falsely more appealing\nExperienced and programming active instructor: a great teacher never looses touch with the industry. This is especially true for software development, where the industry is so dynamic. This helps the instructor stay up to date with the best coding guidelines and present you the challenging parts, not the \"hello world\"\nOrganized course structure: six parts, progressive approach, consistent content\nCode changes in each lecture on Git with code diffs: this will help you get an concise overview of the lecture and correct in case you missed something\nBig font, dark background, fullHD content, this way it is readable even on a small screen or even tablet.\nLifetime access\nBig app for your portfolio - to present to your teacher or prospective employer\n\n\nWhen I was a beginner, I struggled myself to go beyond basic examples and even if I knew the theory, I needed guidance to put in practice. So if you are at this point, if you had acquired programming skills and now you want to master them, please take a look at the free lectures, and if you like them, I'll see you in this JavaFX class!\n\n\nThe quality of the course is recommended by it's reviews:\n\"Very good course! Happily exceeded all expectations and I feel lucky that I found such an in-depth course on such a topic, that I happen to enjoy a lot!\"\n\"A very good, fairly fast paced course. I'm enjoying it immensely. It is especially gratifying when you get to see real emails being sent and received.\"\n\"It was extremely helpful to understand of Complete JavaFX and Java Concepts. Applying these practice bring you perfect level to Java app for the develop. Alex , Man... One of the best trainer and the way he explanation in the course, extraordinary !!\"\n\"If you already know Java and basic OOP principles, do the basic JavaFX tutorial on Oracle's site first and THEN take this class. Then you will be able to learn and appreciate the value that Alex brings to the table here.\nThis course doesn't waste much time teaching you the JavaFX basics, it jumps right in to real-world application. Seriously, do Oracle's JavaFX tutorial first! This class teaches you how to apply MVC principles to a real-world desktop application made with JFX. Without the basics first, you will get lost.\nThat said, this class is excellent! It fully covers modern desktop application design, including using dependency injection, threading, and scene management. These are the big things you need to know to write a decent application. Other courses just walk you through how to use each JavaFX control, so basically someone walking through the Java docs with you. This one teaches you how to write a real-world application.\"\n\"All other teachers on this website often forgot what is it to be a pro programmer and will always teach you using abstract example with banana and apple in a console that you will not relate to in any ways.\nThis course is the complete opposite!\nFor me again, top course, can't wait to watch more, they should be more like this.\"",
      "target_audience": [
        "Beginer Java programmers who aim to become intermediate programmers",
        "Programmers who want an introduction to JavaFX",
        "Java programmers who want to desing user interfaces",
        "Java programmers who want to be better prepared for a job interview"
      ]
    },
    {
      "title": "Fundamentals of Java with NetBeans",
      "url": "https://www.udemy.com/course/fundamentals-of-java-with-netbeans/",
      "bio": "Basic principles of the Java language by example",
      "objectives": [
        "You will be able to program small Java programs.",
        "You will be able to solve small homework excercises where Java programs should be written."
      ],
      "course_content": {},
      "requirements": [
        "You need basic knowledge about how to use your PC.",
        "You should be interested in learning a programming language."
      ],
      "description": "This is a mini-course about the programming language Java. You will learn about how to install the NetBeans IDE together with Java, create your first project and start this project. The course will introduce you into commands, variables, conditional statements, methods, classes, inheritance and visibility modifiers.\nThis is a very short course about the Java language. It will teach the very basics. It is create for those who need a quick start maybe because they have to solve some exercise questions they received by their teachers as homework. Or it is intended for people who need a first feeling what Java is.",
      "target_audience": [
        "All people who do not need a large course but a quickstart for the programming language Java."
      ]
    },
    {
      "title": "2025 C++ Programming : Beginners to Advanced for Developers",
      "url": "https://www.udemy.com/course/cpp-programming-beginners-to-advanced-for-developers/",
      "bio": "2025 C++ Programming for Beginners and Advanced: Hands-On Fundamentals,Developer Techniques, and Real-World Applications",
      "objectives": [
        "Basic Syntax and Concepts: Students will learn about variables, data types, operators, and basic input/output operations in C++.",
        "Control Structures: This section covers conditional statements (if, else if, else) and loops (while, for)",
        "Functions: Students will learn to create and use functions, explore function parameters, return values, and understand function overloading.",
        "Arrays and Strings: This section will cover the creation, manipulation, and traversal of arrays and strings in C++.",
        "Object-Oriented Programming (OOP): Students will delve into the core principles of OOP, including classes, objects, inheritance, polymorphism, and encapsulation",
        "Pointers and References: Understanding pointers and references is crucial in C++. Students will learn how to use them effectively and avoid common pitfalls.",
        "Dynamic Memory Allocation: This section will cover memory management techniques using dynamic memory allocation and deallocation."
      ],
      "course_content": {
        "Introduction to C++": [
          "Dev C++ Installation",
          "Introduction to C++ Programming",
          "Understanding C++ Program Execution",
          "Understanding Comment Lines in C++",
          "Understanding Multi-line Comment Lines in C++",
          "Understanding Variables in C++",
          "Understanding Variable Naming Rules",
          "Literals in C++",
          "Data types in C++",
          "Working with Numbers and Character Types",
          "Type Conversion",
          "How to Read and Display a Value at Runtime",
          "Arithmetic Operators & Increment/ Decrement Operators are same in C / C++",
          "Relational Operators are same in C / C++",
          "Logical Operators are same in C / C++",
          "Bit-Wise Operators are same in C / C++"
        ],
        "Conditional Statements in C++": [
          "If Statement",
          "If-else Statement",
          "Example Program",
          "Nested if else",
          "Else if Ladder",
          "Switch statement",
          "Example Program",
          "Example Program",
          "Example Program"
        ],
        "Looping Statements in C++": [
          "Types of Loops",
          "For Loop",
          "While Loop",
          "Do-While Loop",
          "Break Statement",
          "Continue Statement",
          "Example Program",
          "Example Program",
          "Example Program",
          "Write a C++ program to reverse a given positive integer."
        ],
        "Functions in C++": [
          "Understanding Functions in C++",
          "Calling function vs Called Function",
          "Example Program",
          "Example Program",
          "Call-by-Value Implementation",
          "Call-by-Address Implementation",
          "Understanding Recursion in C++",
          "Computing GCD Using Recursion",
          "Exponent finding using recursion",
          "Write a C++ program to display Fibonacci series using recursion."
        ],
        "Arrays and Strings in C++": [
          "1D Array Basics",
          "Reading and Displaying 1D Array",
          "Program to Find the Average of Elements in an Array",
          "Linear Search on Array of elements",
          "Finding the Largest and Smallest Number in array of numbers",
          "Finding Address of array of elements",
          "Write a C++ program to find frequency of a given element in array",
          "Understanding Two Dimensional Arrays in C++",
          "Reading & Displaying 2D Arrays in C++",
          "Displaying Transpose of a Matrix",
          "Finding Trace of a Matrix",
          "Write C++ program to perform matrix addition?",
          "Understanding Strings in C++"
        ],
        "Pointers in C++": [
          "Definition of a Pointer",
          "Changing Values using Pointers",
          "Accessing array using Pointers",
          "Pointer to read and display array elements",
          "Copying a Pointer to another pointer",
          "Incrementing a Pointer",
          "Pointer Addition and Subtraction with an Example",
          "Array of pointers to point different variables",
          "Array of pointers to point different Arrays",
          "Pointer to a Pointer",
          "Constant Pointer",
          "Pointer to Constants",
          "Constant Pointer to a Constant"
        ],
        "Memory Allocation in C++": [
          "Static Vs Dynamic Memory Allocation",
          "Object Creation",
          "Object Destruction",
          "Array of New: dynamic arrays",
          "Dangling Pointer Problem",
          "Memory Leak Problem"
        ],
        "OOPS in C++": [
          "Classes and Objects",
          "Constructors",
          "Example program to start with Classes and Objects",
          "How to write a Default Constructor",
          "How to write a Parameterized Constructor",
          "How to write a Copy Constructor",
          "How to Pass Objects as Parameters to a Function",
          "Nested Classes in C++",
          "Empty Classes in C++",
          "Friend Function in C++",
          "Example for Friend Function in C++",
          "Friend Class in C++",
          "Inheritance in C++"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Computer and Internet Access: Students need access to a computer or laptop with a stable internet connection to access the course content and programming tools.",
        "C++ Compiler and IDE: Students should have a C++ compiler and an integrated development environment (IDE) installed on their computer. I will provide guidance on setting up the environment during the course, so having these tools ready will be important.",
        "Text Editor: In case students prefer to use a text editor instead of an IDE, they should have a basic text editor (like Notepad++ or Visual Studio Code) installed.",
        "Motivation to Learn: A positive attitude, willingness to learn, and a curious mindset are essential for successful completion of the course.",
        "Patience and Practice: Learning programming takes time and practice. Students should be patient with themselves and dedicate time to practice coding exercises and projects."
      ],
      "description": "Unlock the Power of Programming with Our Comprehensive C++ Course\nAre you ready to embark on a journey into the exciting world of programming? Look no further! Join our top-rated C++ course on Udemy and gain a solid foundation in one of the most versatile and powerful programming languages.\n\n\nThe Course covers following topics:\n\n\nBasic Syntax and Concepts: Students will learn about variables, data types, operators, and basic input/output operations.\nControl Structures: This section covers conditional statements (if, else if, else) and loops (while, for) to help students understand how to control the flow of their programs.\nFunctions: Students will learn to create and use functions, explore function parameters, return values, and understand function overloading.\nArrays and Strings: This section will cover the creation, manipulation, and traversal of arrays and strings.\nObject-Oriented Programming (OOP): Students will delve into the core principles of OOP, including classes, objects, inheritance, polymorphism, and encapsulation.\nPointers and References: Understanding pointers and references is crucial in this course. Students will learn how to use them effectively and avoid common pitfalls.\nDynamic Memory Allocation: This section will cover memory management techniques using dynamic memory allocation and deallocation.\nFile Handling: Students will learn how to read from and write to files, enabling them to work with external data.\nCourse Highlights:\nFrom Zero to Hero: Whether you're an absolute beginner or looking to enhance your programming skills, this course caters to all levels of experience. We start with the basics and gradually guide you through more advanced concepts.\nVersatile Applications: C plus plus is a programming language used in a wide range of applications, from software development to game design and system programming. By mastering C plus plus, you're opening doors to endless opportunities.\nConcept Clarity: Our expert instructor breaks down complex topics into easy-to-understand explanations. You'll grasp fundamental programming concepts, object-oriented principles, memory management, and more.\nHands-On Experience: Learning by doing is the key to mastery. With practical coding exercises and real-world projects, you'll apply what you've learned and build a portfolio to showcase your skills.\nDesigned for Success: This course is meticulously structured to ensure steady progress. Clear explanations, code examples, and interactive quizzes will keep you engaged and motivated throughout your learning journey.\nPractical Tools: You'll set up your coding environment and gain proficiency in using C plus plus compilers, integrated development environments (IDEs), and other essential programming tools.\nCertification and Beyond: Upon completion, you'll receive a certificate of achievement. This certification not only validates your skills but also enhances your resume, making you stand out in the competitive tech industry.\nLifetime Access: Learning is a continuous process. Enjoy lifetime access to the course materials, allowing you to revisit lessons, catch up on updates, and continue your learning at your own pace.\nExpert Support: Have questions or need clarification? Our dedicated support team is here to assist you every step of the way.\nWho Can Benefit?\nAspiring Programmers: Start your coding journey with a solid foundation in C plus plus.\nGame Development Enthusiasts: Master C plus plus to create high-performance, captivating games.\nStudents and Learners: Complement your studies with practical programming skills.\nCareer Switchers: Add C plus plus to your skill set and enhance your employability.\nTech Explorers: Dive into the world of software development and innovation.\nReady to take your programming skills to the next level? Enroll in our C plus plus course today and unlock a world of coding possibilities!\nEnroll now to secure your spot and begin your exciting coding adventure.",
      "target_audience": [
        "Absolute Beginners: If someone has no prior programming experience, this course provides a gentle and structured introduction to programming using C++. It covers foundational concepts and gradually builds up their skills.",
        "Programming Enthusiasts: Individuals interested in learning a new programming language or expanding their programming skills will find value in this course. Even if they're experienced in other languages, this course will help them transition to C++ smoothly.",
        "Students and Hobbyists: High school or college students studying computer science or related fields can benefit from the course as it covers fundamental programming concepts. Hobbyists who want to dive into coding and develop their own projects will also find the course helpful.",
        "Professionals Switching Languages: If someone is a programmer familiar with other languages and wants to add C++ to their skill set, this course offers a concise way to grasp C++ essentials.",
        "Aspiring Game Developers: C++ is widely used in game development due to its performance benefits. Aspiring game developers can use this course as a stepping stone to understanding C++ programming in a gaming context.",
        "Computer Science Students: Those studying computer science or software engineering in college can use this course as a supplementary resource to reinforce classroom learning and gain practical skills.",
        "Anyone Interested in Software Development: C++ is used in various domains, including software development, system programming, robotics, and more. If someone is curious about these fields, this course provides a solid foundation.",
        "Self-Learners: Individuals who enjoy self-paced learning can take advantage of the course's structure, which includes explanations, examples, exercises, and projects."
      ]
    },
    {
      "title": "C++ Standard Template Library in Practice",
      "url": "https://www.udemy.com/course/c-standard-template-library-in-practice/",
      "bio": "Gain insights into the C++ STL using real-world examples",
      "objectives": [
        "Efficient and effective ways to store data using STL containers",
        "Manage application performance using STL memory allocation classes, and enhance these classes by developing your allocation routines",
        "How data is structured and how the structure can be traversed using iterators",
        "How algorithms are used to transform data into useful and meaningful information",
        "Multitasking and managing shared data using concurrency and parallelism",
        "Managing input and output (I/O) using streams and the role of stream buffers",
        "How the STL has standardized common tasks"
      ],
      "course_content": {
        "Introducing the Standard Template Library (STL)": [
          "The Course Overview",
          "Introduction to the STL",
          "General Concepts",
          "Utilities - Common Utilities",
          "Utilities - Regex",
          "Project - Bitcoin Exchange Program",
          "Project - Coding",
          "Project - Custom Writer Function",
          "Review",
          "Test Your Knowledge"
        ],
        "Containers": [
          "Understanding Containers",
          "Vectors",
          "Standard Array",
          "Lists",
          "Stacks and Queues",
          "Maps and Multimaps - Overview",
          "Maps - Coding",
          "Multimaps - Coding",
          "Sets and Multisets",
          "Project",
          "Review",
          "Test Your Knowledge"
        ],
        "Iterators - Manipulating Data": [
          "Iterators",
          "Input Iterators",
          "Output Iterators",
          "Forward Iterators",
          "Bidirectional Iterators",
          "Random Access Iterators",
          "Auxiliary Iterator Functions",
          "Iterator Adaptors",
          "Writing Generic Functions for Iterators",
          "User - Defined Iterators",
          "Project",
          "Review",
          "Test Your Knowledge"
        ],
        "Algorithms - Part One": [
          "Introduction to Algorithms",
          "Sequence Algorithms - for_each",
          "Sequence Algorithms - equals",
          "Copying",
          "Moving",
          "Removing",
          "Sorting and Gathering - std::sort",
          "Sorting and Gathering - std::partial_sort algorithm",
          "Sorting and Gathering - std::partition",
          "Sorting and Gathering - std::partition_copy",
          "Searching and Finding - std::find",
          "Sorting and Gathering - std::find_first_of, std::adjacent_find",
          "Sorting and Gathering - std::search",
          "Sorting and Gathering - std::binary_search",
          "Counting"
        ],
        "Algorithms - Part Two": [
          "Replacing and Transforming - std::replace",
          "Replacing and Transforming - std::replace_copy",
          "Replacing and Transforming - equals",
          "Swapping",
          "Rotating",
          "Randomizing",
          "Permutations",
          "Sampling",
          "Min",
          "Max",
          "Clamp",
          "Fill and Generate",
          "Numeric Algorithms - std::accumulate",
          "Numeric Algorithms - std::partial_sum and std::adjacent_difference",
          "Numeric Algorithms - std::gcd, and std::lcm",
          "Numeric Algorithms - std::inner_product and std::iota",
          "Review",
          "Test Your Knowledge"
        ],
        "I/O in C++": [
          "Basic Architecture of the I/O Stream Library",
          "Console I/O - Interact with a User",
          "Console I/O - Read Input",
          "File I/O",
          "String Streams",
          "Manipulators and Formatters",
          "Stream States",
          "Low Level I/O",
          "Overloading Stream Operators",
          "Project - Overview",
          "Project - Classes and structures",
          "Project - Implementation",
          "Review",
          "Test Your Knowledge"
        ],
        "Memory": [
          "Unique Pointers",
          "Shared Pointers",
          "Allocators",
          "Defining an Allocator",
          "Uninitialized Memory",
          "Review",
          "Test Your Knowledge"
        ],
        "Threading": [
          "Introduction to Threading",
          "Creating Threads",
          "Locks",
          "Shared Locks",
          "Atomic Values",
          "Async",
          "Condition Variables",
          "Project",
          "Review",
          "Test Your Knowledge"
        ],
        "C++ 20 Preview": [
          "Concepts",
          "Modules",
          "Coroutines",
          "Course Review"
        ]
      },
      "requirements": [
        "This video course is designed for both experienced C++ programmers and people with some knowledge of OOP concepts."
      ],
      "description": "C++ is one of the most widely used programming languages. Fast, efficient, and flexible, it is used to solve many problems. In particular, it is the Standard Template Library (STL) that gives C++ its power. In this course, we show you how.\nUsing real-world examples, we focus on how STL handles and manipulates data. We examine containers and iterators, and how data can be transformed into meaningful information using algorithms. There is coverage of I/O streams, strings and numerical methods, and how performance can be optimized through careful consideration of memory allocation and manipulation. We also demonstrate how multitasking and shared data is handled through concurrency and parallelism classes and utilities.\nBy the end of the course, you will understand the newer aspects of C++ STL and will be able to overcome tasks that are time-consuming or would break your stride while developing.\nAbout the Author\nJames Slocum has been a professional developer for over 10 years. He graduated from NJIT with a Bachelor's degree in Computer Engineering in 2008, and again with a Master's in Computer Science in 2011. He currently works for Audible as a software engineer and tech lead for the library group. The languages he uses the most are Java, JavaScript, C++, and Dart. In his free time, he enjoys learning about new languages and technology.",
      "target_audience": [
        "If you want to overcome difficult phases of development with C++ and leverage its features using modern programming practices, then this course is for you."
      ]
    },
    {
      "title": "Learn C# Coding Intermediate: C# Classes, Methods and OOPs",
      "url": "https://www.udemy.com/course/learn-csharp-coding-intermediate-classes-methods-and-oops/",
      "bio": "C#: Intermediate a step-by-step guide to classes, interfaces, polymorphism, error handling and OOPs",
      "objectives": [
        "Learn How to start OOPs programming",
        "Work with classes, constructors, fields, properties, methods and attributes",
        "Learn how to re-use code using inheritance and polymorphism",
        "How to make enterprise application by extending its code, rather than repeating",
        "Applying encapsulation to improve the security enhancements of the code and reduce the impact of change",
        "Understand the problems with inheritance and how to solve using interfaces these problems",
        "Handle Errors and Exceptions using try-catch-finally block coding techniques",
        "You will write clean error free code by applying skills",
        "Object Oriented Programming will help you on code reuse techniques for your apps",
        "Learn what is Generative AI for future learning"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Curriculum",
          "How to get Pre-requisites",
          "Getting Started on Windows or Linux",
          "How to ask Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Classes": [
          "Introduction to Class",
          "Create a Class",
          "Object Initializers",
          "Parameters",
          "Access Modifiers(theory)",
          "Assessment Test",
          "Solution for Assessment Test",
          "Summary"
        ],
        "Methods": [
          "Introduction to methods",
          "Create a method",
          "Method with parameters",
          "Method default and multiple parameters",
          "Method return keyword",
          "Method Over loading",
          "Assessment Test",
          "Solution for Assessment Test",
          "03 Interview Questions and Answers",
          "Summary",
          "Methods"
        ],
        "OOPs - Object Oriented Programming": [
          "Introduction to OOPs",
          "Classes and Objects",
          "Class Members",
          "Class Constructors",
          "Access Modifiers",
          "Properties Get Set",
          "Encapsulation",
          "Assessment Test",
          "Solution for Assessment Test",
          "03 Interview Questions and Answers",
          "Summary"
        ],
        "Inheritance and Polymorphism": [
          "Inheritance",
          "Polymorphism",
          "Assessment Test",
          "Solution for Assessment Test",
          "03 Interview Questions and Answers",
          "Summary"
        ],
        "Abstraction and Interfaces": [
          "Introduction",
          "Abstraction",
          "Interfaces",
          "Enums",
          "Assessment Test",
          "Solution for Assessment Test",
          "03 Interview Questions and Answers",
          "Summary"
        ],
        "C# Exception handling": [
          "Introduction",
          "Try Catch",
          "Custom message on Errors",
          "Finally",
          "Throw keyword",
          "Assessment Test",
          "Solution for Assessment Test",
          "03 Interview Questions and Answers",
          "Summary"
        ]
      },
      "requirements": [
        "Basic understanding of C#: variables, data type conversion, conditionals and loops",
        "No software is required in advance of the course (all software used in the course is free)",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "C# is a beautiful cross-platform language that can be used to build a variety of applications. With C# language, you can build mobile apps (for Windows, Android, and iOS), games, websites, and desktop applications.\nLearn C# OOPs, The second step to C# you need to learn to succeed in application development, it is easy to learn and understand our online C# OOPs Training course is designed for you with the complete steps to require learn programming OOPs topics. Mr. Sudha Sekhar will explain to you even complex topics to simplify and teach you that even beginners can easily understand with real-time examples.\nlearn what is Generative AI for future learning\n\n\nCreate a Good and Strong base foundation in C# OOPs using Microsoft Visual Studio IDE.\nOnce you master C# OOPs programming fundamentals with the .NET framework, you'll have lots of options in front of you. You can choose to build mobile apps if you prefer, or change jobs and work as a web developer. As long as you know the fundamentals well, switching to different technology stacks is pretty easy.\nThe course has been updated to be trending technology ready and you'll be learning the latest tools and technologies used at large companies such as Microsoft, Apple, Facebook, Google, and Netflix.\nknowing these C# OOPs programming techniques to you may easily switch over to any other programming languages as well\nStarting with an introduction, how to apply a basic skill set, Creating Console Projects for OOPs and Its windows, etc.\nLearning with these C# skills, you will be eager to learn other web development languages very quickly which lead you to become a successful web developer.\nIf you really want to learn C#, This C# OOPs with .Net Framework Course is for you to develop your skills more than others and you will become strong on C# code and applying OOPs in application development.\n\n\nLearn from real-world experts and complete the Coding Exercise for your learning experience\n\n\nTHE COMPLETE C# PACKAGE\nThis course is the first level of Sekhar's complete C# series on Udemy:\nLevel 1: Learn C# Coding Basics for Beginners: C# Fundamentals\nLevel 2: Learn C# Coding Intermediate: Classes and Object-Oriented Programming\nLevel 3: Learn C# Advanced: Asp.Net Web Application Development by Coding\n\n\nABOUT YOUR INSTRUCTOR\nSekhar Metla is a software engineer with 20 years of professional experience. He is the author of several best-selling Udemy courses with more than 50,000+ students in many countries. He has a Master of Science in Computer Applications in Software Engineering. His students describe him as passionate, pragmatic, and motivational in his teaching.\n\n\nWho this course is for:\nPeople who want to learn C# OOPs\nPeople who have no idea about C# OOPs\nPeople who don’t know what is C# OOPs\nPeople who want to acquire C# OOPs knowledge\nPeople who are beginners in C# OOPs\nPeople who want to become a web developer on C# OOPs",
      "target_audience": [
        "Any C# developer who wants to master classes, interfaces and error handling",
        "Any C# programmer who wants to better understand object-oriented programming",
        "Anyone who wants to build web applications",
        "Anyone who wants to become a Full stack web developer",
        "Anyone who wants to expert on Advanced C# OOPs concepts"
      ]
    },
    {
      "title": "Favicon Grabber Using JavaScript",
      "url": "https://www.udemy.com/course/favicon-grabber/",
      "bio": "Learn How To Grab Favicon Using JavaScript & How To Create Favicon Grabber Website",
      "objectives": [
        "Detail About Favicon",
        "How To Grab Favicon",
        "How To Grab Favicon Using JavaScript",
        "How To Create Favicon Grabber Website"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Detail About Favicon": [
          "Detail About Favicon"
        ],
        "API": [
          "API"
        ],
        "Lets Learn": [
          "Lets Learn"
        ],
        "HTML & JavaScript": [
          "How To Create HTML & JavaScript File",
          "JavaScript Function",
          "Accessing Elements Using JavaScript (TextBox)",
          "If Else & Image",
          "Validate URL"
        ],
        "Favicon Grabber": [
          "Creating Favicon Grabber"
        ],
        "Hosting Our Website For Free": [
          "Hosting Favicon Grabber Website"
        ],
        "Extra": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Knowledge Of HTML"
      ],
      "description": "In This Course , You Will Learn How To Grab Favicon Using JavaScript From Scratch. This Course is In English Language. In This Course , We Have Used Google & DuckDuckGo API For Grabbing The Favicon.  Also , In This Course , You Will Learn How To Host Our Favicon Grabber Website For Free , So That Anyone Can Access It Anytime , From Anywhere !\n\n\nThis Course is For You If...\nYou Want To Learn How To Grab Favicon Using JavaScript\nYou Want To Create Your Own Favicon Grabber Website\nIn This Course , User Can Grab Multiple Size Favicon :\nDefault Size\n16x16\n32x32\n48x48\n64x64\n128x128\nIn This Course , I Have Explained Each & Every Concepts , Logic & Codes Which Are Required To Grab Favicon Using JavaScript\n\n\nRequirement\nText Editor Like Visual Studio Code Or Notepad ++\nWeb Browser Like Google Chrome\nWhats Included in This Course\nLectures\nResource\nI'm The Right Teacher For You ?\nI Tried My Best To Teach You in Easy Words in This Course.\nCovered in This Course :\nIntroduction\nDetail About Favicon\nAPI\nLets Learn\nHow To Create HTML & JavaScript File\nJavaScript Function\nAccessing Elements Using JavaScript (TextBox)\nIf Else & Image\nValidate URL\nCreating Favicon Grabber\nHosting Favicon Grabber Website For Free\nExtra:\nConclusion\nOutcome Of This Course\nYou Will Learn How To Grab Favicon Using JavaScript\nYou Will Learn How To Create Or Host Favicon Grabber Website For Free\nYou Will Get Knowledge in JavaScript",
      "target_audience": [
        "Who Want To Learn How To Grab Favicon",
        "Who Want To Grab Favicon Using HTML & JavaScript",
        "Who Want To Create Favicon Grabber Website"
      ]
    },
    {
      "title": "Python Bootcamp 2025: Basics to Advanced with Real Projects",
      "url": "https://www.udemy.com/course/complete-python-course-from-basics-to-advanced-2024/",
      "bio": "Master Advanced Python Skills Building 45+ Real-World Projects in Data Science, Automation, OOP and Software Development",
      "objectives": [
        "Understand Python syntax, variables, and data types to build a strong programming foundation",
        "Use control flow, conditionals, and loops to manage the logic of your Python programs",
        "Work with core Python data structures like lists, dictionaries, sets, and tuples for efficient data handling",
        "Write reusable and modular code using functions, built-in modules, and Python libraries",
        "Perform file handling in Python and implement exception handling for robust applications",
        "Apply object-oriented programming (OOP) concepts such as classes, inheritance, and polymorphism",
        "Explore Python advanced concepts like decorators, generators, and context managers",
        "Analyze data using Pandas and NumPy, and create visualizations with Matplotlib and Seaborn",
        "Build real Python projects including calculators, data scrapers, and automation tools",
        "Automate tasks using Python scripts to solve real-world problems efficiently",
        "Learn Python for data science, automation, development, and prepare for Python developer roles"
      ],
      "course_content": {},
      "requirements": [
        "No previous experience required"
      ],
      "description": "Ready to learn Python from scratch and take your skills to an advanced level?\nPython Course: Basics to Advanced 2025 is a hands-on, project-based course designed to help you build real-world Python programming skills that are in demand across data science, automation, software development, and more.\nThis course is perfect for beginners and those looking to sharpen their skills with Python in 2025. Through a structured path and 45+ real projects, you'll go from writing simple scripts to building scalable applications and automation tools.\nWhat This Course Offers:\n\nBeginner to Advanced Python Programming Start with core programming concepts like variables, data types, loops, and conditionals, and progress to advanced Python topics like OOP, decorators, generators, and context managers.\n45 Days of Real Python Projects Complete 45 hands-on projects—one per day—that reinforce key skills. You'll build calculators, automation tools, games, data apps, and more using core and advanced Python features.\n25+ Concept-Based Mini Projects Deepen your understanding with smaller, focused projects that help clarify specific concepts and real-world use cases.\nPython for Data Science and Automation Analyze datasets using Pandas and NumPy, and create powerful visualizations with Matplotlib and Seaborn. Learn how to automate repetitive tasks using Python scripts.\nObject-Oriented Programming & Modular Design Learn to write scalable code using classes, objects, inheritance, encapsulation, and polymorphism—key principles for modern Python development.\nFile Handling and Exception Management Read and write files, process data, and manage exceptions to build robust, production-ready programs.\nJob-Ready Python Developer Skills Understand what employers expect from Python developers. Get tips on resume building, portfolio projects, and Python interview preparation.\nWhy Choose This Course?\n\nUpdated for 2025 with modern Python practices\nSuitable for beginners and intermediate learners\nLearn by building real Python projects\nCareer-oriented content with practical use cases\nTaught in a clear, step-by-step format\nCourse Content Overview:\n\nPython Programming Fundamentals\nControl Flow and Loops\nData Structures and Collections\nFunctions, Modules, and Libraries\nFile Handling and Exception Management\nObject-Oriented Programming (OOP)\nAdvanced Python Concepts\nData Science and Visualization\nReal-World Projects\nAutomation with Python\nDeveloper Tips & Career Prep\nKey Features:\n\nLifetime Access\nCertificate of Completion\nCommunity Support\nExpert Instructor Guidance\nEnroll Today and Build Python Skills That Matter\nJoin thousands of learners who’ve successfully used this course to kickstart or advance their programming careers. Whether you’re learning Python for automation, app development, or data science—this course gives you the tools to turn ideas into working code.",
      "target_audience": [
        "Aspiring programmers, coding enthusiasts, and professionals seeking to strengthen their Python skills",
        "Beginners eager to grasp the fundamentals or an experienced developer aiming to advance your proficiency in Python"
      ]
    },
    {
      "title": "The Complete Guide to Bot Creation",
      "url": "https://www.udemy.com/course/the-complete-guide-to-bot-creation/",
      "bio": "and Automating your Everyday Work",
      "objectives": [
        "Power up your productivity with automation of tedious and repetitive tasks",
        "Learn one of the most valuable tools for the future: Automation",
        "Astonish your boss and colleagues by automating reducing workloads through automation",
        "Learn how to automatically grow your audience on social platforms",
        "Learn how you can build Bots with Python",
        "Increase your market value dramatically by learning automation",
        "Create bots that do the work for you"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What this course covers",
          "Ethical Considerations",
          "How to get the most out of this course",
          "How to successfully help yourself"
        ],
        "Simple Automations": [
          "What it is and what we will create",
          "OS Operations",
          "Project - Batch Renamer (Basic)",
          "Project - Batch Renamer (CLI)",
          "Project - Directory Clean-up Script",
          "Data Extraction from Files",
          "Project - JSON Instagram Data Filter",
          "Project - Excel Sheet Single Column Export",
          "Project - PDF Resume Email Extractor",
          "Scheduling Tasks",
          "Project - Simple Scheduling with Cron",
          "Project - Donwloads Folder Clean-Up (Cron)"
        ],
        "Automation based on APIs": [
          "What it is and what we create",
          "HTTP Requests",
          "Project - Domain Availability Checker (CLI)",
          "Project - Twilio Domain Availability Checker and Notifier",
          "Project - Spotify Music Adder",
          "Project - Telegram Bot Music Adder"
        ],
        "Frontend Automation": [
          "Showcase of the Projects we will create",
          "Selenium and Playwright Introduction",
          "Project - Instagram Liker Bot",
          "Project - Twitter Recommendation Follower Bot",
          "Project - Spotify Playlist Listener Bot"
        ],
        "Advanced Automation using Reverse Engineered APIs": [
          "What it is and what we create",
          "Web Dev Tools - The Elements Tab",
          "Web Dev Tools - The Console Tab",
          "Web Dev Tools - The Sources Tab",
          "Web Dev Tools - The Network Tab",
          "Web Dev Tools - The Storage Tab",
          "Project - Browsergame Automation Bot"
        ],
        "Obfuscating Basic Bot Activity": [
          "What it is and why it is important",
          "HTTP Headers",
          "Proxies",
          "Handling Webpage Port Scans"
        ],
        "Bonus: Google Spreadsheet Scripting": [
          "What it is and what we create",
          "Project - Simple Daily Twitter Analytics"
        ],
        "Where to go from here": [
          "Project Ideas",
          "Additional Learning Resources"
        ]
      },
      "requirements": [
        "Python Basics (For Python Chapters)",
        "JavaScript Basics (For JavaScript Chapters)",
        "A basic understanding of the Web"
      ],
      "description": "Every job has repetitive tasks and processes that can be automated, which can take up a significant amount of your time.\nIn a digital world, automation is the most crucial skill to acquire. Old school teams with dozens of people can be replaced with a small group of skilled automation engineers and domain experts. They can automate repetitive and straightforward, organizational, or even technical tasks.\n\n\nIn this course, we'll teach you the basic and advanced techniques used to create bots and automation scripts for diverse applications. Together we will create simple scripts to clean up your working environment, batch rename files, and automatically clean up your Downloads folder every Monday.\nOnce we covered the basics, we will quickly move to more engaging projects. For example, a Telegram Bot, which can add songs to your Spotify playlist and Bots for Instagram and Twitter. We'll even create a Travian bot that automatically plays the game.\nTo deliver the best possible learning experience, we present every project in Python and NodeJS. That way, you can decide which language you prefer. Additionally, we will provide you with information about how to obfuscate your bot activity and create simple Google Spreadsheet Analytics scripts.\n\n\nSign up, and Let's not waste any more time.\nYou won't regret it!",
      "target_audience": [
        "Everyone who wants to increase their productivity through automation",
        "People that want to understand how social bots work",
        "Developers that want to learn skills in a new sector",
        "Students interested in acquiring new technical knowledge and understanding"
      ]
    },
    {
      "title": "The Java EE Course - build a Java EE app from scratch",
      "url": "https://www.udemy.com/course/the-java-ee-course/",
      "bio": "Build a full Java EE airline management application from scratch, and learn Java EE theory and practice in the process.",
      "objectives": [
        "Become a proficient Java EE developer",
        "Understand and build web apps with Servlets and JSP",
        "Understand and build robust EJB back end services",
        "Understand and use JPA to interact between applications and databases",
        "Expose REST web services that allow remote applications and JavaScript to interact with an application",
        "Understand and use resource and dependency injections"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in object oriented programming (i.e. know the relationship between a class and an object) ideally in Java",
        "Basic understanding of Java syntax"
      ],
      "description": "Welcome to the Java EE course!\n\nLearning Java EE shouldn't be a pain.\nThis course is a complete Java EE learning solution geared especially toward beginners who have limited or no prior Java EE knowledge and experience.\nWe will build a full Java EE airline management application from scratch, and learn Java EE theory and practice in the process.\nThe initial release of the course covers the following topics:\n* Servlets and JSP - Understand and build web apps with Servlets and JSP\n* Enterprise Java Beans (EJB) - Understand and build robust EJB back end services\n* Java Persistence API (JPA) - Understand and use JPA to interact between applications and databases\n* REST Web Services (JAX-RS) - Expose REST web services that allow remote applications and JavaScript to interact with an application\n* Understand and use resource and dependency injections\nTeaching philosophy\nNo dull slides that leave you asking how do I actually do anything of what's shown.\nI will show you everything in detail - installation, coding and deployment. I will not rush or skip any steps. I will show you the whole process.\nIf you see a piece of code on my screen, you will see me typing it from scratch and running it. I would never show Java code that I created before recording a lesson. All code will be typed and explained during the lessons from scratch.\nPlease see the sample videos, to get a sense of what the course is like.",
      "target_audience": [
        "Be interested in learning Java EE even if you don't have previous experience with it.",
        "If you've never done any programming, you may prefer a programming fundamentals course first."
      ]
    },
    {
      "title": "C Programming Bootcamp: From Scratch",
      "url": "https://www.udemy.com/course/c-programming-bootcamp-from-scratch/",
      "bio": "An Amazing Coding Experience",
      "objectives": [
        "C Programming Language",
        "Basics of Programming",
        "Some Advance C topics"
      ],
      "course_content": {},
      "requirements": [
        "A laptop or desktop with good internet connectivity."
      ],
      "description": "This course is for anyone who wants to learn Programming or choose programming as a carrer. I will cover the basic implementation of different Concepts.\nWe will see different kinds of in-built functions and how to solve different problems.\nAfter going through this course you will be ready to jump into solving Coding Questions over different coding platforms.\nI designed this course structure after finding a pattern among different students. I started from very basic covering the idea behind the programming language. Then I explained each topic with it's practical implementation I tried to explain the working of each bit. How to combine these tiny pieces of code and convert the result into a working model.\nThis course is enough to get you started in the world of programming. No matter if you are a programmer or not, this course will surely help you.\nWhat you’ll learn\nC fundamentals for coders and non-coders.\nLearn logic and how to use different syntax and functions to build solutions\nUnderstand C and its functionalities\nAre there any course requirements or prerequisites?\nJust a device where you can watch these videos and learn C in an easy way.\nWho this course is for:\nAnyone who wants to learn C.\nPeople with coding background and without coding background.",
      "target_audience": [
        "Beginner C developers and Programmers"
      ]
    },
    {
      "title": "Naked C#: A Beginner's Guide to Coding",
      "url": "https://www.udemy.com/course/naked_cs/",
      "bio": "The bare bones of programming without the bling!",
      "objectives": [
        "use the fundamental threshold concepts underlying all programming languages to write C# programs.",
        "take their knowledge of C# and adapt it in a variety of settings that use C# such as robotics, Unity, Visual Studio and Unreal.",
        "transition from C# to using other programming languages with ease."
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a Windows or Mac machine at a beginner level."
      ],
      "description": "This course will not teach you to become a programmer.  Programming is like martial arts, it takes years and years of practice.  No course can make you a grand master, no matter what it promises.  What this course WILL do is give you a solid foundation in programming as a skill for life, using C# as the vehicle. You will learn about the fundamental nature of the computer and how to communicate with it through the development of programs, to perform a variety of tasks and solve numerous problems.  Following the same curriculum used to teach 1st year computer science in university in the first 6 months of a degree, you will learn not just what to program but 1) why it is is done like that and 2) how you can broaden your skill set in programming beyond this single course.\nThe topics covered include:\nBits, Bytes and Binary\nManagement and Manipulating Memory\nPerforming Mathematical Operations\nDesigning Dynamic Program Execution with Logic\nDeveloping Repetition for Fast Data Processing\nHandling User Input\nReading and Writing to Files\nThe course material has been developed for students using either Windows or Mac computers, using the freely available Mono C# compiler. It is well paced, covering each concept in bite-sized chunks and filled with hands-on workshops that will build projects across a variety of domains.  Some of the programs that will be written include:\na Caesar Cipher for encrypting text\na Hangman Game\na Number Guessing Game\na Chatterbot\nstoring and retrieving names and addresses in a file\nreading and processing text from a webpage\nAt the end of this course you will be equipped with a toolbox of skills that you can apply in your job and day-to-day life, making you more employable and relevant in today's marketplace.\nWhat students are saying about this course:\nPenny is a really good teacher, this is the kind of C# class I've been looking for and it is just right for what I need right now. I would highly recommend it.\nThis course has been awesome. I knew virtually nothing about coding, and now I'm halfway thru, loving it, and learning a TON! Great teacher, clear and concise lessons with plenty of opportunity to learn, test code, experiment, and consistent quizzes and challenges. 5/5\nI'm an artist, code was always something that I had the desire to learn but at same time I always thought it was something too complex and boring, until I decide to buy this course and start watching these videos. Everything is very well explained, she teaches really well, straight to the point. Now I'm finding it extremely fun to learn and I've been doing the course and watching the videos as if it were a Netflix series. I get excited at every new thing that pops up :D I also love when you have to do challenges, it's like a game, super fun. It is very easy to follow, even if you have zero knowledge in coding, like me when I started. Recommended!",
      "target_audience": [
        "Everyone that wants to code and thoroughly understand what they are typing into the computer."
      ]
    },
    {
      "title": "The Ultimate Excel VBA Arrays Course",
      "url": "https://www.udemy.com/course/the-ultimate-excel-vba-arrays-course/",
      "bio": "Learn To Manipulate Data Invisibly and At Lightning Speeds with Arrays!",
      "objectives": [
        "Speed Up Your Macros in a Few Short Lessons!",
        "Create and Manipulate Data Invisibly in the Background",
        "Learn to populate Arrays several different ways",
        "Understand multiple ways to put Array data onto worksheets",
        "Store Data in Hidden Locations, Where only you can find and Manipulate it...",
        "Return Multiple Pieces of Information from a Single Function",
        "Pass Arrays into Subs and Functions to Manipulate Lots of Data at Once!",
        "Learn Special Built-In Functions specifically for Arrays as well as Custom Functions",
        "Master the Art of Array Sorting - (3 different Methods!)",
        "Glean information from and Manipulate text like never before",
        "Store MULTIPLE pieces of information in a single cell to keep your tables tidy",
        "Create your own functions that return more than one result!!",
        "Master Populating, Looping through and Manipulating Arrays for greater efficiency"
      ],
      "course_content": {
        "I Need Arrays, Boss!": [
          "Introduction and Workbooks Download",
          "Getting FAST Help and Other Freebies with Excel Ninjas Group",
          "What's An Array - Overview and Sheet Demonstration",
          "What's An Array - Technical Demonstration With Code",
          "More On One-Dimensional Declaration",
          "Declaring Non-Traditional Boundaries and Thresholds",
          "Data Types in Arrays",
          "Cells Object Lesson and Comparison",
          "Multidimensional Arrays"
        ],
        "Populating and Manipulating Arrays": [
          "Populating an Array with Array() Function",
          "Populating an Array with Split() Function",
          "Section 02 Exercise",
          "Exercise - Solution",
          "Populating an Array with a Range Via (FOR NEXT) Loop",
          "Populating an Array with a Range Via (FOR EACH) Loop",
          "Populating an Array with a Range Directly",
          "Getting the Start and End Boundaries",
          "Looping Through a 1 Dimensional Array",
          "FOR EACH Loop Through an Array",
          "Looping Through a 2 Dimensional Array",
          "Subscript Out Of Range - Reasons for Run-time error 9",
          "Static vs Dynamic",
          "Change The Size (on the Fly)!",
          "Resize Array Without Losing Everything",
          "Returning Array to a Worksheet",
          "BONUS - Real World Speed Comparison - Case Study",
          "Storing Array Data...",
          "Storing Array in Names",
          "Accessing Array from Invisible Name in Names Manager"
        ],
        "Functions, Arrays and You - A Magical Combination": [
          "Using WorksheetFunctions on Arrays",
          "Passing an Array Into a Function or Sub",
          "Passing an Array Into a Function or Sub (Advanced Example)",
          "Returning an Array FROM a Function",
          "IsArray Function",
          "Filter() Function",
          "Join() Function",
          "Join() Function - Practical Example",
          "The Erase Method",
          "Transposing an Array",
          "Determining Worksheet Range from Array Size",
          "Dynamic Sorting 01 - 2d Array On Sheet Dynamically",
          "Dynamic Sorting 02 - Dynamic Sort Record, Syntax and Explanation",
          "BONUS - ReDim Preserving a Multi Dimensional Array - Part 1",
          "BONUS - ReDim Preserving a MD Array - 02 Transpose Method",
          "BONUS - ReDim Preserving a MD Array - 03 Custom Function"
        ],
        "Custom Functions - Because Microsoft Can't Think Of It All": [
          "Bubble Sorting",
          "Quick Sorting",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "You should already have Microsoft Excel (version 2003, 2007, 2010, 2013 or 2016). Obviously the newer the better, but VBA works the same in all versions. It's just that newer versions have more options, thus more VBA Commands to control those options.",
        "Basic Excel skills needed for this course. Everything I do is explained thoroughly.",
        "Everything is explained in detail, but any Excel VBA experience you have will help."
      ],
      "description": "Arrays are present in many programming languages, but most people don’t take the time to master them and can get frustrated when their code seems sloppy, difficult to read, and often can take a long time to run.\nArrays are often a subject of confusion or irritation - it doesn’t make much sense when trying to understand using a huge blog post or cryptic book. What you need is a visual explanation of these concepts in bite sized pieces – something to make it REAL!\nWith over three hours of over the shoulder, real-world training, this course will show you how to increase the speed of your VBA applications, build code that is easier to read and maintain  -  using less lines of code than you ever imagined!\nI’ll show you the easiest way to understand this highly convoluted topic and once you understand the power of arrays, you’ll be able to:\nGlean information from and Manipulate text like never before\nStore MULTIPLE pieces of information in a single cell to keep your tables tidy\nMASSIVELY speed up your macros that deal with worksheets or cells!\nUnderstand multiple ways to put Array data onto worksheets\nCreate your own functions that return more than one result!!\nStore Data in Hidden Locations, Where only you can find and Manipulate it...\nMaster Populating, Looping through and Manipulating Arrays for greater efficiency\nLearn special built-in Array functions as well as custom ones Included in the course\nBest methods of Sorting Array data\nAnd much more!\nYou’ll receive 100% of the source code, downloadable materials and course workbooks instantly, yours to keep FOREVER. In addition, you’ll receive LIFETIME ACCESS to the course videos, including updates, BONUS videos and lectures as they come out and any future source code and workbooks – Yours to keep – FREE.\nAll students will receive LIFETIME ACCESS to ask me any questions about the materials in the FORUM section – as well as chat with other students and help each other. As always, this is backed by a 30 day 100% No questions asked refund as well.\nSo Join today – and increase your Excel Mastery and I’ll see you in the FORUMS!",
      "target_audience": [
        "Take this course if you want to increase the SPEED of your macros and be more efficient. No prior programming knowledge is needed, but it helps.",
        "If you want to learn the basic of Arrays - even if you don't use Excel VBA - Arrays work very similarly in other programs. This course primarily covers Excel VBA Arrays though.",
        "If you want to know the hidden secrets of Excel for speed, and heightened data manipulation skills, this course is for you.",
        "Anyone looking for the next step in their Excel Ninja skillset.",
        "If you need a simple explanation for a complex topic (Arrays) in a way that you can take and immediately use."
      ]
    },
    {
      "title": "The Complete ASP.Net Web Forms with ADO.Net From Scratch",
      "url": "https://www.udemy.com/course/aspnet-and-adonet-from-scratch/",
      "bio": "Rapid Web Application Development Using Asp.Net",
      "objectives": [
        "Creating a project and running in web browser",
        "Working with standard controls",
        "Working with Data controls",
        "Working with validation controls",
        "Working with Master pages",
        "Working with Navigation controls",
        "Working with Login controls",
        "Understanding session management technique.",
        "Understanding web.config file and machine.config",
        "Working with client side reports",
        "Working with Datareader in Ado.Net",
        "Working with Dataset in Ado.Net"
      ],
      "course_content": {},
      "requirements": [
        "download and install Visual Studio Express for Web (100% Free)",
        "https://www.udemy.com/learn-ms-sql-server-from-scratch",
        "https://www.udemy.com/csharp-from-scratch"
      ],
      "description": "Syed Mohsin Ali\nbest teacher\nbest teacher i have ever seen\nCode Breaker\nTop one\nVery good effort to simplyfy things. Appreciated.\nKazi Arifuzzaman\na superb course!\nI am in IT for last 3 yrs working in both java and .net platform. This course is nicely organized and well structured. You are going to learn a lot whether you just listen or practise. Manzoor knows his staff and superb in his explanation and giving you all the details you need.\nQ:Hi, I am really interested in learning how to develop a web application. But, I do not have any prior knowledge of .Net. Can I learn from this course?\nA: Yes. Sure you can. Just you need to learn C#.Net and SQL Server courses of mine from same udemy portal.\nIn this course in Asp.Net I am going to teach you how to create your first web app from scratch then you will learn how to work with all the standard server controls like ListBox, DropDownList, RadioButtonList, CheckBoxList BulletList, Calender and FileUpload then slowly we will move on to data controls like GridView and FormView. We will also dig into GridView and perform some advance operation like adding controls to gridview column and formation gridview rows based on data.\nLatest topics will be added on regular basis.",
      "target_audience": [
        "Anyone who is interested in learning Web Development"
      ]
    },
    {
      "title": "Python for OOP: The A-to-Z OOP Python Programming Course",
      "url": "https://www.udemy.com/course/python-for-object-oriented-programming/",
      "bio": "Learn Python OOP and Improve Your Python Programming Skills by Writing Code That Is Readable, Modular, and Reusable",
      "objectives": [
        "Understand the importance of using object-oriented programming",
        "Learn basic principles on how to build programs faster using Python",
        "How to use and apply polymorphism in object-oriented styles with many strategies",
        "Practice Object-oriented programming from basics to advanced level using modern Python",
        "Learn encapsulation and discover how to wrap data and codes together into a single unit",
        "Basic knowledge of how to abstract a problem in object-oriented programming in action"
      ],
      "course_content": {},
      "requirements": [
        "Experience with the basics of coding in Python",
        "Basic mathematical skills",
        "Readiness, flexibility, and passion for learning"
      ],
      "description": "Object-oriented programming (OOP) in Python is important for any software developer because it has a wide usage in the industry. It is a course any software engineers or aspiring software engineers need to put on their catalog to learn and master well because of its importance.\nOOP utilizes the concept of objects and classes and it is an important programming model for representing real objects as software objects. As a software developer or engineer, you need to learn an important concept in this type of programming putting into consideration many practical examples.\nThis course features various exercises that will help you learn object-oriented programming in Python, and build programs faster. This object-oriented programming course exists for software engineers and developers because of its significance and numerous advantages in the software industry.\nFurthermore, it is a popular programming model with its many advantages and vital existence in every aspect of software apart from the fact that it's easy to learn, read and understand within a short time. The course put more focus on the thinking process, the implementation of what the developer is trying to manipulate other than the required logic to manipulate it.\n\n\nWhy should I learn this course?\nModularity: encapsulation enables objects to be self-contained and gives a clear modular structure for collaboration and troubleshooting code.\nEasy programming: It makes programming easier, and use for solving problems in a more creative process by breaking the program into bit-sized problems which are then solved easily.\nIncrease productivity: Object-oriented programming guarantees greater programmer productivity, better quality software, and a low cost of maintenance. Learn programming languages to help you create outstanding professional programs and codes that are understandable, adaptable, and extendable.\nLearning from professionals: the program is designed to be learned from a pool of experienced experts in the field of software programming. The course is integrated with the practical experience of well-known experts which makes learning easier.\n\n\nThe Ultimate Object-Oriented Programming in Python Course for Beginners\nLearning Object-oriented programming as a beginner requires an understanding of how to implement and take advantage of the features that are available in OOP (Object-oriented programming) which can be discouraging. Having an Insight into the various functionalities of Object-oriented programming is very essential since it's one of the most prominent coding methods which allows programmers to create a unique structure, reuse code, and develop code faster.",
      "target_audience": [
        "Programmers and anyone that wants to learn how to code faster",
        "Software Developers and engineers",
        "Anybody inclined to learn and practice Object-oriented programming",
        "Python developers"
      ]
    },
    {
      "title": "The Art of Doing: Create 10 Python GUIs with Tkinter Today!",
      "url": "https://www.udemy.com/course/the-art-of-doing-create-10-python-guis-with-tkinter-today/",
      "bio": "Learn the fundamentals of the Tkinter library and starting making your own Python GUI apps today!",
      "objectives": [
        "Fundamentals of GUI app development using Python and Tkinter by DOING! You will create 10 awesome apps!",
        "Create a conversion app to aid in metric conversions",
        "Create a checklist app to keep track of all of your daily tasks",
        "Create a calculator app to help with basic mathematics",
        "Create a notepad app to write your own thoughts",
        "Create a color app to create your own color pallets",
        "Create a Morse code app to convert and play messages in Morse code",
        "Create a Simon app to entertain yourself and test your memory recall",
        "Create a gravity simulation app to test the effects of varying gravitational fields on different objects",
        "Create a weather app to get up to date weather for your given location",
        "Create a NASA astronomy picture of the day app to view the beauty of space and the stars",
        "How to package your python scripts into executable files to be run directly on Windows machines."
      ],
      "course_content": {
        "Introduction": [
          "Course Preview",
          "Installing Python",
          "Installing Visual Studio Code",
          "Working Through the Course"
        ],
        "The Basics": [
          "Basics 0: Windows",
          "Basics 1: Labels and The Pack System",
          "Basics 2: Buttons and the Grid System",
          "Basics 3: Frames",
          "Basics 4: Entries, Functions, and Lambdas",
          "Basics 5: Radio Buttons",
          "Basics 6: Images"
        ],
        "App 0: Hello GUI World": [
          "Hello GUI World 0",
          "Hello GUI World 1",
          "Hello GUI World 2",
          "Hello GUI World 3"
        ],
        "App 1: Metric Helper": [
          "Metric Helper 0",
          "Metric Helper 1",
          "Metric Helper 2",
          "Metric Helper 3"
        ],
        "App 2: Simple Checklist": [
          "Simple Checklist 0",
          "Simple Checklist 1",
          "Simple Checklist 2",
          "Simple Checklist 3"
        ],
        "App 3: Simple Calculator": [
          "Simple Calculator 0",
          "Simple Calculator 1",
          "Simple Calculator 2",
          "Simple Calculator 3"
        ],
        "App 4: Notepad": [
          "Notepad 0",
          "Notepad 1",
          "Notepad 2",
          "Notepad 3"
        ],
        "App 5: Color Theme Maker": [
          "Color Theme Maker 0",
          "Color Theme Maker 1",
          "Color Theme Maker 2",
          "Color Theme Maker 3",
          "Color Theme Maker 4"
        ],
        "App 6: Morse Code Translator": [
          "Morse Code Translator 0",
          "Morse Code Translator 1",
          "Morse Code Translator 2",
          "Morse Code Translator 3"
        ],
        "App 7: Simon Memory Game": [
          "Simon Memory Game 0",
          "Simon Memory Game 1",
          "Simon Memory Game 2",
          "Simon Memory Game 3"
        ]
      },
      "requirements": [
        "Students should have a base level understanding of Python (including functions).",
        "The majority of the course will work on Windows, Mac, Linux but to run executables (the last section of the course) the machine should be windows"
      ],
      "description": "Have you learned the fundamentals of Python and then asked yourself; what's next?\nIf so, consider taking this course which will start you on your journey to making your own Python GUI applications.  GUI or Graphical User Interface applications allow the end user to interact with an actual program window that they can point, click, and interact with rather than just running Python scripts from a command prompt.\nSo often, when students ask for advice they are told to, \"Go build something\" or \"Get involved on a project\" but have no idea what projects to build or get involved in.\nThis course will set you on your way!  In this course I will walk you though, step by step, on how to to design the layout and the functionality of 10 unique, engaging, and purposeful apps...well 11, we have to start off with a Hello World App...that's a given :-)  By the end of this course, I promise that you will be coming up with your own app ideas and feel confident enough in your abilities to create them.\n\n\nWe'll cover the following GUI widgets:\nLabels\nFrames\nButtons\nEntry Boxes\nRadio Buttons\nDrop Down Menus\nScroll Bars\nSliders\nCanvases\nAnd many more...\n\n\nAs well as learning how to:\nManage application layout\nCall API's and sort through the returned data\nCreate standalone executable files that will run on any Window's machine\n\n\nBest of all, after a few short \"instructional\" videos, we will learn by DOING!  We're going to gain familiarity, comfort, and then mastery of  Python GUI's by creating our own applications together!  I hope you decided to take this course.  If you do, you will be set to begin creating some engaging, meaningful, and purposeful Python GUI's!",
      "target_audience": [
        "Beginner to intermediate students who are looking for fun, interesting, and involved projects.",
        "Beginner to intermediate students who have done some of the basics and have asked, \"What next?\"",
        "Students who are looking to make GUI applications.",
        "Students who don't want to run their programs in a terminal but have an interactable window."
      ]
    },
    {
      "title": "Applied Python: Building Projects with Python Programming",
      "url": "https://www.udemy.com/course/applied-python-tiny-python-projects-fast-effective-course/",
      "bio": "Learn to apply Python and build many Python Programs using powerful libraries and tools. Build More than 14 Apps",
      "objectives": [
        "Three Automatic Translation Programs with three Different libraries and tools.",
        "Building and Managing different types of data files such as CSV files, pickle files and JSON files using Python",
        "How to work and manage PDF files using python programming language libraries.",
        "Using object-oriented basics to store the details for many employees.",
        "Building a real digital clock using python programming language and libraries to code that digital clock from the Ground Up",
        "Creating a game for guessing a number from random numbers depending on three levels we are going to set",
        "Creating a music loader using the PyGame library",
        "Creating a full Music and audio player using python programming language with the two libraries: PyGame and Tkinter",
        "Building a real Video player using python programming language",
        "Building a database based on a CSV file we have"
      ],
      "course_content": {
        "Automatic Translation Applications": [
          "Introduction to course",
          "Intro to Automatic Translation Tasks",
          "First Automatic Translation Tech",
          "Second Tech for translation",
          "Third Translation Tech"
        ],
        "Data Files Applications": [
          "CSV File Basics",
          "CSV Numerical Generator and Reader",
          "Pickle File Basics",
          "Pickle Creator and Reader",
          "JSON Basics",
          "JSON Creator and Loader"
        ],
        "Playing with PDFs": [
          "Manage PDF Theory",
          "Hands-On PDF Reader"
        ],
        "Store Details for Employees": [
          "Intro to store employees data",
          "Data of Employees application"
        ],
        "Real Digital Clock Application": [
          "Intro to digital clock",
          "Real Digital Clock Full App"
        ],
        "Guess by Levels App": [
          "Guess by levels intro",
          "Guess by Levels Full App"
        ],
        "Music Player Applications": [
          "Intro to Music App Libraries",
          "Background Music Loader",
          "Real Music Player Full App"
        ],
        "Video Player Application": [
          "Intro to Video Player libraries",
          "Full Video Player"
        ],
        "DB from CSV Builder": [
          "Intro to DB From CSV",
          "DB Builder from CSV"
        ],
        "BONUS SECTION": [
          "Bonus"
        ]
      },
      "requirements": [
        "The basics of Python",
        "Jupyter Notebook or any working environment for Python"
      ],
      "description": "Hello and welcome to this applied Python course “Applied Python: Building Projects with Python Programming”.\nThis is a powerful training program about creating real programs using the core python programming language.\nThis course is so effective, direct to the point, detailed, and will save your precious time.\nYou will learn how to use python programming language to create and build real life programs step-by-step the right way.\nThis course is so important and special for any intermediate Python developer or anyone who wants to learn how to apply Python in real life.\nDo you want to write real programs with python programming language quickly?\nIf your answer is Yes, this training course is for you, and will help you a lot to become a professional python developer.\nBy the end of this course you’ll learn to build these programs:\nThree Automatic Translation Programs with three Different libraries and tools.\nBuilding and Managing different types of data files such as CSV files, pickle files and JSON files using Python.\nhow to work and manage PDF files using python programming language libraries.\nUsing object-oriented basics to store the details for many employees.\nBuilding a real digital clock using python programming language and libraries to code that digital clock from the Ground Up.\nCreating a game for guessing a number from random numbers depending on three levels we are going to set.\nCreating a music loader using the PyGame library.\nCreating a full Music and audio player using python programming language with the two libraries: PyGame and Tkinter.\nBuilding a real Video player using python programming language.\nBuilding a database from a CSV file .\nYou'll learn all of that and more practically with Hands-On video Training. Code more than 12 Projects.\nThe training course lessons are easy to follow, understandable and interactive.\nI am Ahmed Ibrahim, a software engineer and Instructor and I have taught more than 250,000 engineers and developers around the world in topics related to programming languages and their applications.\nI hope that you will join us in this applied course.\nWe have a lot to cover in this course.\nLet’s get started!",
      "target_audience": [
        "Intermediate Python developer",
        "Python Beginners who know the Python basics",
        "Anyone who wants to learn how to apply Python in real life",
        "Python developers from all levels"
      ]
    },
    {
      "title": "Mastering Go Programming",
      "url": "https://www.udemy.com/course/mastering-go-programming/",
      "bio": "Master programming with Golang by learning how to write idiomatic, effective code",
      "objectives": [
        "Apply modern software design patterns utilizing the Go language",
        "Take a deep dive into Go’s master topics like advanced concurrency patterns, and the flexible reflection capabilities",
        "Write unit tests and benchmarks for your Go code",
        "Create advanced backend microservices for the Hydra spaceship software and design an end to end chat system",
        "Handle JSON, XML, and CSV data formats in your code",
        "Interact with Mongodb, MySQL and BoltDB",
        "Build powerful communications layer for your microservices using protocol buffers, TCP, and UDP",
        "Develop powerful web applications and Restful APIs utilizing http requests, forms, and cookies",
        "Design beautiful dynamic UI for the hydra software utilizing Go templates and websockets",
        "Secure your applications with certificates, https, and secure web sockets"
      ],
      "course_content": {},
      "requirements": [
        "With a focus on hands-on exercises, this video course is a step-by-step approach to take your Go skills to the next level and create an application all by yourself."
      ],
      "description": "Go has moved from the state of tentative to mass adoption. Its C-like speed, simplicity, and power for a growing number of systems level programming domains make it an attractive option for programmers working with older cumbersome, statically typed languages. Golang has entered the space as an entirely viable language for accomplishing a huge array of low level programming and service infrastructure tasks.\nThis video course not only gives you a deep insight into the fundamental mechanics behind the language, but also covers extensive practical topics on Go for modern software architectures. It shows you how to write Go in an intelligent, idiomatic way. After a brief re-acquaintance with the key building blocks of Go, we will also explore how we can build upon the  unique capabilities of the language to write effective, powerful code you can employ to develop software. We look at packages, object-oriented programming, concurrency and reflection among other things. Moreover, you will learn about Go’s awesome built-in testing support feature. Along the way, build your skills in File handling techniques, Go packages for databases, data serialization approaches, message communications between Go services, and Go web applications. Get your hands on with a plenty of illustrative code samples, exercises and real-world scenarios that will help you build your own application.\nBy the end of this course, you will be taught how to put this enhanced knowledge to build a real-world Spaceship application all by yourself with amazing features.\nAbout The Author\nMina Andrawos is an experienced Engineer who has developed deep experience in Go from using it personally and professionally. He regularly authors articles and tutorials about the language, and also shares Go’s open source projects. He has written numerous Go applications with varying degrees of complexity. He is also the author of an upcoming course for Packt called “Go in Production”.\nOther than Go, he has skills in C#, Java, Python, and C++. He has worked with various databases and software architectures and has skills with the agile methodology in software development. Besides software development; he has working experience of scrum mastering, sales engineering, and software product management.",
      "target_audience": [
        "This video is for experienced programmers with a background in any other language—this being from Ruby to C or JavaScript. If you are a fast learner who is well versed in the programmatic logic with a bit of basic understanding in Go, this course is for you."
      ]
    },
    {
      "title": "C++ Programming Bootcamp",
      "url": "https://www.udemy.com/course/c-programming-bootcamp/",
      "bio": "A Complete C++ Course Focused on Problem Solving that will Expand into All C++ Can Do",
      "objectives": [
        "A complete understanding of C++ and related technologies with a focus on problem solving"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Visual Studio Code Installation": [
          "Install C++ VSC Windows",
          "Install C++ VSC Mac"
        ],
        "C++ Basics, Data Types & Math": [
          "Getting to Know C++",
          "C++ Quiz 1",
          "Variables & Data Types",
          "C++ Quiz 2",
          "Input, Casting, Math & Problems",
          "C++ Quiz 3",
          "Calculate Miles to Kilometers"
        ],
        "Conditionals, Looping & Math": [
          "If Else, Else If & Conditional Operators",
          "C++ Quiz 4",
          "Determine School Grade",
          "Math Functions",
          "C++ Quiz 5",
          "For Loops",
          "C++ Quiz 6",
          "Solving Problems with For Loops",
          "While Loops",
          "C++ Quiz 7",
          "Generate a Dynamic Pine Tree with Loops",
          "Do While Loop",
          "C++ Quiz 8",
          "Make a Do While with While"
        ],
        "Arrays & Vectors": [
          "Arrays",
          "C++ Quiz 9",
          "Vectors, Iterators, Stringstream & More",
          "C++ Quiz 10",
          "Solving Math Problems Dynamically"
        ],
        "Functions, Pointers & Exception Handling": [
          "Functions",
          "C++ Quiz 11",
          "Functions & Pointers",
          "C++ Quiz 12",
          "Functions & Exception Handling",
          "C++ Quiz 13"
        ],
        "Strings, Custom Functions & Solving Problems": [
          "Strings",
          "C++ Quiz 14",
          "Secret Strings",
          "Custom String & Vector Functions",
          "Custom Vector & String Functions",
          "Custom Functions & Characters",
          "C++ Quiz 16",
          "String Related Problems",
          "Caesar Cipher & A Problem to Solve",
          "C++ Quiz 17",
          "Solving Algebraic Equations",
          "Solving Problems",
          "Solving Problems",
          "The Bubble Sort"
        ],
        "Recursion, Overloading & Lambda": [
          "Recursion",
          "Printing Vectors & Fibonacci Numbers",
          "Overloading Functions",
          "Lambda Expressions",
          "C++ Quiz 22",
          "Lambda Expression Problems",
          "Solving Problems with Lambda Expressions"
        ],
        "Object Oriented Programming": [
          "Objects & Classes",
          "C++ Quiz 24",
          "Inheritance",
          "C++ Quiz 25",
          "Warrior Objects Fight to Death",
          "C++ Quiz 26",
          "Warriors Fighting to the Death",
          "Structs",
          "C++ Quiz 27",
          "Friend Classes"
        ],
        "Polymorphism, Abstract and Overloading": [
          "Polymorphism",
          "C++ Quiz 29",
          "Abstract Classes",
          "C++ Quiz 30",
          "Operator Overloading",
          "C++ Quiz 31"
        ]
      },
      "requirements": [
        "Access to a computer and the Internet"
      ],
      "description": "What You'll Learn\n• Learn the Core C++ Language at a Deep Level\n• Learn how to Solve Real Programming Problems with a Focus on Teaching Problem Solving Skills\n• Complete understanding of Object Oriented Programming that can be used in other languages\n• You’ll Master Complex Object Oriented Concepts like : Polymorphism, Templates, Operator Overloading, Abstract Classes, Polymorphic Templates\n• You’ll Master other Concepts like : Pointers, Threads, Malloc, Iterators and More\n• This Course will Grow Every Month with New Videos on Algorithms, Data Structures, Design Patterns, Object Oriented Design and More\n• Instructor has 26 Years of Professional Experience and a Decade of Experience Making Educational Videos\nCourse Focused on Teaching How to Solve Problems\nDo you want to develop the skills required to solve real world programming problems? This course will turn you into a real C++ programmer that has a complete understanding of everything C++ can do!\nMost tutorials are just video versions of cheat sheets. This course is different. It teaches you how to solve problems like you will have to do in the real world. It does that by making you solve ever increasingly complex problems.\nDon’t worry. I will be there to help along the way. I work through the solutions and also provide heavily commented code and quizzes that will turn you into a C++ Master!\nThis course provides numerous problems followed by their solutions while teaching the core language.\nStart Slow and Aim to Learn Everything\nWe start by installing C++ on Windows and MacOS. The core language will then be taught. Between each main lesson I’ll break down the solutions through diagrams.\nThis is a living and breathing course that will Grow Every Month with New Videos on Algorithms, Data Structures, Design Patterns, Object Oriented Design and More\nYou will get lifetime access to this growing course along with all the heavily commented code, quizzes and assignments!\nThis course comes with a 30 day money back guarantee! If you are not completely satisfied you get your money back.\nYou’re ready to become a C++ Master and this course will get you there! Learn to solve real problems and advance your career to the next level. I’ll be there to help for each step.",
      "target_audience": [
        "Beginner through Advanced C++ Programmers"
      ]
    },
    {
      "title": "C-Programming for Beginners - Solid Foundations",
      "url": "https://www.udemy.com/course/c-programming-for-beginners-solid-foundations/",
      "bio": "Learn C the easy way, using graphical illustrations & an explanation of what happens inside the computer memory",
      "objectives": [
        "Writing programmes in C",
        "Variables and standard data types",
        "Reading/writing inputs & outputs",
        "Binary, decimal & hexadecimal numbers",
        "How computer memory works",
        "Variable limits & overflow",
        "Pre-processor, Compiler & Linker",
        "Arithmetic & bitwise operators",
        "If statements, Case & Switch statements",
        "For loops/While loops",
        "What is high-quality code",
        "Arrays & Structures",
        "Return Statements & Arguments",
        "Pointers & structures/arrays"
      ],
      "course_content": {
        "Introduction": [
          "Lecturer Introduction",
          "Course Philosophy",
          "Udemy Ratings",
          "Learning Outcomes",
          "Programming Languages",
          "The C programming Language"
        ],
        "Your First Program": [
          "Installing Code::blocks - The Integrated Development Environment",
          "Hello World & printf()",
          "Keywords",
          "First Program Quiz"
        ],
        "Variables & Data Types": [
          "Printing Variables & Different Printing Formats",
          "Binary, Decimal & Hexadecimal numbers",
          "Hexadecimal numbers & Comments",
          "Decimal & Hexadecimal numbers quiz",
          "Computer memory explained",
          "Computer Memory Quiz",
          "Variable sizes & sizeof",
          "Variables in memory, Bits & Bytes",
          "User input & scanf()",
          "Variable limits and overflow",
          "Variable Limits & Overflow Quiz"
        ],
        "IDE & Compilers": [
          "Pre-processor",
          "IDE and Debugging",
          "Compiler & Linker",
          "IDE & Compilers Quiz"
        ],
        "Operators": [
          "Arithmetic Operators",
          "Bitwise Operators",
          "Operators Quiz"
        ],
        "Conditional Execution & Loops": [
          "The if statement",
          "Relational Operators (use with if statements)",
          "The if-else statement",
          "The if-else-if statement",
          "Mini fun exercise - if statement",
          "Logical Operators (use with if statements)",
          "The \"for\" loop",
          "Mini fun exercise - \"for\" loop",
          "The \"while\" loop",
          "The \"switch & case\" statement",
          "Mini Fun Exercise - \"switch\" statement",
          "Conditional Execution & Loops Quiz"
        ],
        "Writing Quality Code": [
          "Indentation",
          "Variable Names",
          "Writing quality code Quiz"
        ],
        "Compound & Custom Data Types": [
          "Structures Eplained",
          "Structure Code Example",
          "Typedef",
          "Compound & Custom Data Types Quiz"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "Strings as Arrays of characters",
          "Mini Fun Exercise - Arrays",
          "2D Arrays",
          "Array of Structures",
          "Arrays Quiz"
        ],
        "Functions": [
          "Introduction to functions",
          "Function Composition",
          "Functions & Arguments",
          "Functions with Return statements",
          "Functions with multiple arguments",
          "Scope, Local & Global",
          "Functions Quiz"
        ]
      },
      "requirements": [
        "Access to a computer (Windows, Mac or Linux)"
      ],
      "description": "Become a C-programmer and learn one of the most marketable programming languages in 2023.\nThis course demonstrates the basic concepts of the C programming language and their use in detail.\nIn contrast with most other C programming courses, here, we are not only focusing on the syntax of different statements but we are going in-depth, behind the scenes and explore how different statements operate.\nIn this course you will learn:\nWriting programmes in C\nVariables and standard data types\nReading/writing inputs & outputs\nBinary,  decimal & hexadecimal numbers\nHow computer memory works\nVariable limits & overflow\nPre-processor\nCompiler\nLinker\nArithmetic & bitwise operators\nIf statements\nFor loops\nWhile loops\nCase & Switch statements\nWhat is high-quality code\nArrays\nStructures\nFunctions\nReturn Statements & Arguments\nPointers\nPointers with structures\nPointers with arrays\nFile I/O\nLibraries, .h and .c files\nDynamic Memory Allocation\nLinked Lists\nThis type of in-depth analysis will provide you with a rigid foundation upon which you can build a solid understanding of the C programming language. This rigid foundation, in turn, will ensure that you deeply understand how the programming language operates in the background you will be less likely to make mistakes when programming yourself.\nA lot of additional support material is provided as part of the course, including all of the code that you see written on the screen and the slides presented.\nThroughout the course, extensive use of slides and graphics is being utilised in order to aid the understanding and memorability of complex programming concepts. All lessons come complete with coding exercises to help you practice the new concepts that are being discussed during the course and ensure that you have a thorough and practical understanding.\nWith this course, you get access to our exclusive course forum where you can directly ask the instructor any questions you like and collaborate with other students!",
      "target_audience": [
        "Programming beginners",
        "C-Programming Beginners",
        "Experienced programmers who want to learn C",
        "People who want to deeply understand the C programming language"
      ]
    },
    {
      "title": "Python for Complete Beginners",
      "url": "https://www.udemy.com/course/learn-python-programming-from-scratch-e/",
      "bio": "Become a Python Programmer",
      "objectives": [
        "Build a complete understanding of Python from scratch.",
        "Learn how to use Python professionally.",
        "Understand how to use both the Jupyter Notebook and create .py files.",
        "Learn Object Oriented Programming."
      ],
      "course_content": {
        "Python Programming": [
          "Installing Python",
          "Introduction to Data Types",
          "Variables",
          "Strings",
          "Indexing and Slicing",
          "String Methods and Formatting",
          "Lists",
          "Tuples",
          "Booleans and Sets",
          "Comparison and Chaining Operators",
          "If, Elif and Else",
          "List Comprehensions",
          "Introduction to Functions",
          "Logic Statements in Functions and Tuple Unpacking",
          "Cups Game - Combining Functions",
          "Arguments and Keyword Arguments",
          "Map and Filter Functions",
          "Lambda Expressions",
          "Variable Scope",
          "Classes and Attributes",
          "Methods",
          "Inheritance, Polymorphism and Abstract Classes",
          "Special Python Methods"
        ]
      },
      "requirements": [
        "Access to a computer with an internet connection."
      ],
      "description": "Would you like to be a Python Programmer, and get your first programming job?\nThis course is the most comprehensive and straight-forward course for Python programming language. And it most importantly it will be constantly updated. Every minute of this course is packed with valuable information. Hence, we won't be rambling around because we value your time.\nPython is one of the fastest growing programming languages on the planet and it is also anticipated to be one of the most popular programming languages in the future as well.\nSo, whether you want more automation, you want to develop games or get involved in artificial intelligence, Python can help you build anything you can think of.\nThus, it’s your time to take advantage of a loads of job opportunities that are available for python programmers out there.\nThis course is for you! It doesn’t matter if you have never programmed before, or if you already know the basics, if you are a programmer switching languages to Python, or just want to learn more about Python features.\nIt will teach you Python in an easy and practical manner and every lecture comes with full coding notebooks.\nSo what are you waiting for? Enroll now and learn one of the highest paid and most requested skills.",
      "target_audience": [
        "Anyone who wants to learn Python."
      ]
    },
    {
      "title": "2023 Learn C++ programming from C++ Basics to Advanced C++",
      "url": "https://www.udemy.com/course/c-programming-from-basics-to-advance/",
      "bio": "Learn C++ from C++ Basics to C++ OOP - C++ loops C++ arrays C++ inheritance C++ pointers C++ polymorphism C++ functions",
      "objectives": [
        "C++ programming starting from basics and going to Advanced level.",
        "Object Oriented Programming, Pointers, dynamic memory allocation.",
        "Loops, conditionals, Arrays 1D and 2D, Functions and Advance topics like pointers in detail.",
        "Object Oriented Programming, concepts like Class Object Inheritance Polymorphism Abstraction and Encapsulation"
      ],
      "course_content": {},
      "requirements": [
        "No previous knowledge is required to take this course, course starts from basics and goes to advance level."
      ],
      "description": "This course covers Basics as well as Advanced level topics in C++, as this course is MEGA course so it starts from scratch explaining C++ language and then moves to Advanced topics like Object Oriented Programming.\nThis course can be Divided into 3 major parts.\n1. Basics of C++ (Loops, Conditionals, Arrays 1D and 2D, Functions, numbers, variables, mathematical operations)\n2. Object Oriented Programming  (Class and Object, Inheritance, Polymorphism, Abstraction &   Encapsulation)\n3. Advance topics like Pointers and dynamic memory allocation.\nI strongly recommend this course for students who are new to C++ or Programming because there are animations to help you understand concepts better.\nFor a complete beginner this course can be very helpful.\n\n\nAdvance topics like Pointers and dynamic memory allocation are good for having better understanding.\nStarting from C++ Basics and going to Advanced level topics in C++ will be really helpful for beginners.\nC++ is a powerful and important language and is used in many domains.\nTopics are made to understand easily and step by step arrangement helps a lot to learn better.\nSkills accuried from this course are not only restricted to C++ but you can apply them on other languages as well like Java and python or C#.\nLearn C++ programming from Basics to OOP and loops, arrays 1D and 2D, inheritance in OOP,  pointers, polymorphism in OOP, functions and more in c++\n\n\nJazakallah, Thankyou. Stay Blessed.",
      "target_audience": [
        "Students who want to learn C++ programming.",
        "Students who want to learn Object Oriented Programming.",
        "Students who want to make strong grip over programming."
      ]
    },
    {
      "title": "TypeScript Crash Course",
      "url": "https://www.udemy.com/course/typescript-for-beginners-u/",
      "bio": "Learn the most important features of TypeScript in a short time and apply them to your projects.",
      "objectives": [
        "Typescript Basics",
        "Using Datatypes Annotaions",
        "Type Narrowing and Type Guards",
        "Interfaces and Types",
        "Union and Intersection Types",
        "Obejcts and Inheritance"
      ],
      "course_content": {
        "Chapter 1 - Introduction": [
          "Introduction",
          "Software Information",
          "Installation of Npm and Typescript",
          "Course manual",
          "Course materials",
          "Visual Studio Code - Part 1",
          "Visual Studio Code - Part 2",
          "TSC Compiler and Linter"
        ],
        "Chapter 2: TypeScript Basics": [
          "String, Number and Boolean",
          "Array and Tuple",
          "Object",
          "Any, Void, Null and Undefined",
          "Union Type",
          "Type Alias",
          "Interfaces",
          "Extending Types",
          "Intersection Types",
          "Type Guards",
          "Enum",
          "Generic Functions",
          "Generic Constraints"
        ],
        "Chapter 3: Classes and Modules": [
          "Property Modifiers",
          "Constructors",
          "Public, Protected and Private",
          "Getter and Setter",
          "Static Variables",
          "Generic Class",
          "Implements",
          "Abstract",
          "Module Import/Export"
        ],
        "Chapter 4: Advanced Techniques": [
          "Function Overload",
          "More to Narrowing",
          "KeyOf",
          "KeyOf Generics",
          "Rest Parameters",
          "Utility Types"
        ],
        "Chapter 5: Course conclusion": [
          "Course conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "JavaScript Basics"
      ],
      "description": "Course description:\nThe course will show you the most important features of TypeScript. In the beginning, we will install and set up the required software together. After that, we will start with the basics and work our way up to classes and inheritance. You are also welcome to watch the public videos of the course to get a taste of it.\nWhat is TypeScript?\nIf you haven’t heard of TypeScript yet, it’s a language that builds on JavaScript by adding syntax for static types. Tools like the TypeScript compiler just erase those types, leaving you with clean readable JavaScript that you can run anywhere; but those types are there to be type-checked! Types make your intentions explicit, and tools can read and understand them to catch errors before you even run your code. By checking your types, TypeScript can catch errors like typos, logic errors, and more! Beyond catching errors, TypeScript also uses types to power editor toolings like accurate code completion, go-to-definition, and renaming.\nThe course has the following topics\nInstallation of TypeScript, NodeJS, and VSCode\nType Annotations for Number, String, Boolean, Arrays, Tuples, etc.\nFunctions, Interfaces, and Classes\nInheritance and Abstract Classes\nImporting/exporting from Modules\nUtility types, keyof, instanceof, and type guards\nBecome a professional today, in the technology of tomorrow!\nSee you in class!",
      "target_audience": [
        "JavaScript Developer",
        "TypeScript Developer"
      ]
    },
    {
      "title": "Reactive GraphQL Masterclass For Java Spring Boot Developers",
      "url": "https://www.udemy.com/course/graphql-spring/",
      "bio": "Boost API Performance and Scalability using Efficient Data Fetching with GraphQL and Spring Boot",
      "objectives": [
        "Gain a deep understanding of GraphQL's principles and best practices.",
        "Leverage Spring WebFlux to create efficient and scalable GraphQL APIs.",
        "ptimize data fetching and reduce network overhead with GraphQL.",
        "Implement real-time updates with GraphQL subscriptions.",
        "Robust Error Handling and Input Validation",
        "Hands On - Learn through practical exercises and real-world examples.",
        "Acquire in-demand skills for building modern, efficient APIs."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "*** Resource ***"
        ],
        "Getting Started With GraphQL": [
          "GraphQL - Introduction",
          "GraphQL - Types",
          "Project Setup",
          "GraphQL - Spring Application Properties",
          "QueryMapping - Hello World - Part 1",
          "QueryMapping - Hello World - Part 2",
          "QueryMapping - Passing Arguments - Part01",
          "NonNull Arguments",
          "QueryMapping - Passing Arguments - Part02",
          "How GraphQL is different from REST?",
          "How GraphQL QueryMapping Works!?",
          "Project Restructure",
          "Creating Custom Type With GraphQL",
          "Customer Service",
          "Customer Controller",
          "Customer Service - Demo",
          "Input Type",
          "Nested Objects - Schema Design",
          "Nested Objects - Order Service",
          "How Fields Are Resolved - Part 1",
          "How Fields Are Resolved - Part 2",
          "Nested Objects Aggregation - Demo",
          "How Nested Objects Execution Works!?",
          "Quick Assignment",
          "N+1 Problem - Introduction & The Fix",
          "N+1 Problem - Demo",
          "N+1 Problem - Size Mismatch Issue",
          "N+1 Problem - Order Mismatch Issue",
          "N+1 Problem - Another Solution With Map",
          "Data Resolver - Overriding A Field",
          "Data Fetching From Multiple Controllers - Part 1",
          "Data Fetching From Multiple Controllers - Part 2",
          "Summary"
        ],
        "Structuring GraphQL Queries": [
          "Altair / Postman Clients",
          "Field Alias",
          "Executing Same API With Different Arguments",
          "Fragments",
          "Operation Name",
          "Using Variables",
          "** ASSIGNMENT **",
          "Directives - @Include / @Skip",
          "Directives - @Deprecated",
          "Summary"
        ],
        "GraphQL - Advanced": [
          "Data Fetching Field Selection Set",
          "Data Fetching Environment",
          "Project Restructure",
          "Project Setup",
          "Nested Objects - Sequential Execution Problem",
          "REST Controller",
          "GraphQL vs REST - Nested Objects Execution",
          "Data Fetcher Implementation",
          "Data Fetcher Demo",
          "Run Time Wiring Bean",
          "Run Time Wiring Bean - Demo",
          "Field Glob Pattern",
          "** MAVEN DEPENDENCY **",
          "Additional Scalar Types - Part 1",
          "Additional Scalar Types - Part 2",
          "Additional Scalar Types - Part 3",
          "Object / JSON Scalar",
          "What About Void?",
          "GraphQL Interface - Schema Design",
          "GraphQL Interface - Implementation",
          "GraphQL Interface - Demo",
          "Type Resolver Configuration",
          "GraphQL Interface - Real Life Use Cases",
          "GraphQL Union - Introduction",
          "GraphQL Union - Schema Design",
          "GraphQL Union - Implementation",
          "GraphQL Union - Demo",
          "Operation Caching - Introduction",
          "Operation Caching - Implementation",
          "Operation Caching - Demo",
          "Summary"
        ],
        "Mutation / CRUD Application with GraphQL": [
          "Introduction",
          "Project Setup",
          "Mutation Mapping - Schema Design",
          "Entity / DTO / Repository",
          "CRUD Service - Part 1",
          "CRUD Service - Part 2",
          "CRUD Controller",
          "Data SQL",
          "GraphQL - CRUD Demo",
          "What If Item Is Not Found!?",
          "Multiple Mutation",
          "What About Query + Mutation ?",
          "Should We Fetch Only Selected Fields From Upstream?",
          "Summary"
        ],
        "Subscription": [
          "Introduction",
          "Subscription - Schema Design",
          "Subscription - Event Service",
          "Subscription - Emitting Events",
          "GraphQL WebSocket - Spring Properties",
          "[CORRECTION] - Making Publisher As HOT",
          "GraphQL Subscription - Demo"
        ],
        "Input Validation / Error Handling": [
          "Introduction",
          "Project Setup",
          "Throwing Error",
          "Data Fetcher Exception Resolver",
          "GraphQL Error Extension",
          "Application Custom Exception",
          "Application Custom Exception - Demo",
          "** ASSIGNMENT **",
          "** ASSIGNMENT SOLUTION **",
          "Using Union For Item Not Found - Part 1",
          "Using Union For Item Not Found - Part 2",
          "GraphQL Interceptor - Part 1",
          "GraphQL Interceptor - Part 2",
          "Rejecting Requests With WebFilter",
          "What About Security ?",
          "Summary"
        ],
        "GraphQL Client": [
          "Introduction",
          "GraphQL WebClient",
          "Sending Query As String",
          "Sending Query As String - Demo",
          "Query With Field Alias",
          "Query Document",
          "Query Document - Demo",
          "Executor Refactoring",
          "** ASSIGNMENT **",
          "** ASSIGNMENT SOLUTION ** - Using Retrieve Method",
          "** ASSIGNMENT SOLUTION ** - Using Execute Method",
          "GraphQL Client - Handling Error - Part 1",
          "GraphQL Client - Handling Error - Part 2",
          "GraphQL Client - Decoding Union Type - Part 1",
          "GraphQL Client - Decoding Union Type - Part 2",
          "** Query Document **",
          "GraphQL Client With CRUD Operations Doc",
          "CRUD Operations. - Get All",
          "CRUD Operations. - Get By Id",
          "CRUD Operations - Refactor",
          "CRUD Operations - Create",
          "CRUD Operations - Update",
          "CRUD Operations - Delete",
          "GraphQL Subscription WebSocket Client",
          "GraphQL Subscription WebSocket Client - Demo",
          "Passing Header",
          "Summary"
        ],
        "Integration Test": [
          "Introduction",
          "Project Setup",
          "GraphQL Test Client - Writing First Integration Test",
          "First Integration Test Demo",
          "CRUD Operations Test - Get By Id",
          "CRUD Operations Test - Create",
          "CRUD Operations Test - Update",
          "CRUD Operations Test - Delete",
          "CRUD Operations Test - Error Handling Test",
          "GraphQL WebSocket Test Client - Part 1",
          "GraphQL WebSocket Test Client - Part 2"
        ],
        "Movie Application with GraphQL": [
          "Introduction",
          "** External Services Jar **",
          "External Services",
          "Project Setup",
          "Schema Design - Part 1",
          "Schema Design - Part 2",
          "Schema Design - Part 3",
          "Schema Design - Part 4",
          "DTO Design - Part 1",
          "DTO Design - Part 2",
          "DTO Design - Part 3",
          "Review Client",
          "Movie Client",
          "Customer Client",
          "Get User Profile - API",
          "Get User Profile - How It Will Work",
          "Movie Details - API",
          "Movies By Genre - API",
          "Mutation",
          "Spring Application Properties Update",
          "Movie Application - Demo - Part 1",
          "Movie Application - Demo - Part 2",
          "Movie Application - Demo - Part 3"
        ]
      },
      "requirements": [
        "Knowledge on Spring WebFlux",
        "Comfortable with Indian Accent"
      ],
      "description": "Master GraphQL and Spring WebFlux for Building Reactive Microservices\nThis comprehensive course equips you with the skills to build modern, reactive microservices using GraphQL and Spring WebFlux. You'll gain a deep understanding of GraphQL's query language, schema design, and seamless integration with Spring WebFlux. Explore advanced topics like real-time subscriptions, robust input validation, and effective testing strategies. Through hands-on exercises and practical examples, you'll develop the expertise to architect powerful and efficient microservices.\nCourse Highlights:\nGraphQL Fundamentals: Demystify GraphQL's principles, query language, and schema design. Understand its advantages over traditional REST APIs.\nAdvanced GraphQL Concepts: Explore subscriptions for real-time updates, input validation, error handling, and effective testing strategies.\nBuilding with Spring WebFlux: Learn how Spring WebFlux empowers the development of reactive GraphQL microservices.\nHands-on Learning: Develop practical skills through exercises and real-world examples.\nArchitecting Robust APIs: Gain expertise in designing and implementing robust GraphQL APIs, addressing the N+1 problem and optimizing data fetching.\nTesting Strategies: Master the art of integrating testing for GraphQL APIs, covering queries, mutations, and subscriptions.\nBy the end of this course, you'll be able to:\nConfidently utilize GraphQL for building APIs.\nDesign and implement effective GraphQL schemas.\nLeverage Spring WebFlux for reactive microservice development.\nBuild real-time data applications with GraphQL Subscriptions.\nImplement robust input validation and error handling mechanisms.\nEffectively test your GraphQL APIs, ensuring their functionality and performance.",
      "target_audience": [
        "Any Java / Spring Developer"
      ]
    },
    {
      "title": "Learn Advanced Level Ruby Programming",
      "url": "https://www.udemy.com/course/learn-advanced-level-ruby-programming/",
      "bio": "Learn the 2021 Pro advanced Level Ruby Programming",
      "objectives": [
        "Students will be able to learn the most advanced concepts and skills that are now part of advanced Ruby Programming"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course"
        ],
        "Introduction to Ruby": [
          "Introduction to Ruby",
          "Interesting Facts about Ruby",
          "Comparison between C and Ruby",
          "Comparison between C++ and Ruby"
        ],
        "Installing the Setups": [
          "Installing Ruby",
          "Installing Atom Runner"
        ],
        "The very Basic Concepts": [
          "Section Overview",
          "Our First Ruby Program",
          "print, p and puts",
          "Arithmetic Operators",
          "Operators Precedence",
          "Comments in Ruby",
          "Constants and Variables",
          "Parallel Assignment",
          "Nil Object",
          "String Interpolation",
          "Taking Input from the User"
        ],
        "Numbers and Booleans": [
          "Section Overview",
          "Overview of Number System",
          "String to Numbers and Vice Versa",
          "Intro to Booleans",
          "Predicate Methods",
          "Arithmetic and Comparison Operators",
          "Assignment and Bitwise Operators",
          "Logical and Ternary Operator",
          "Range and Defined Operator",
          "Dot and Double Colon Operator",
          "Operators Precedence",
          "Math Constants and Arithmetic Functions",
          "Blocks",
          "Times Functions",
          "Upto and Downto Functions",
          "Step Function"
        ],
        "String and String Methods": [
          "Section Overview",
          "Intro to Strings",
          "Multiline Strings",
          "Escaping Characters and Sequences",
          "Difference between == and eql",
          "Length vs Count vs Size",
          "Extracting Strings",
          "Ranges with Strings",
          "Substituting Strings",
          "Reverse a String",
          "Bang Method",
          "Include Method",
          "Nothing is Something"
        ],
        "Methods and Conditional Statements with Loops": [
          "Section Overview",
          "Introduction to Functions",
          "Variables Scope in Functions",
          "Reusing Code",
          "Calculator Application using Functions",
          "Calculator by Taking User Input",
          "Intro to Flow Control",
          "If, elsif, else keyword",
          "Case Statement",
          "While and Until Statement",
          "Do while Loop",
          "For Loop",
          "Break and Next Keyword",
          "Redo and Retry Keywords",
          "Unless"
        ],
        "Ranges in Ruby": [
          "Section Overview",
          "Introduction to Ranges",
          "Include and Size",
          "Each and First",
          "New and Last",
          "Equal and End",
          "Begin and Inspect",
          "Cover and Exclude_end",
          "to_s and entries functions",
          "Member Function"
        ],
        "Arrays in Ruby": [
          "Section Overview",
          "Introduction to Arrays",
          "Finding and Filtering an Array",
          "Sorting Arrays",
          "Removing Duplicates",
          "Transform Array Data",
          "Map with Join",
          "Reduce Method on Arrays",
          "Simple Function on Arrays"
        ],
        "String - II": [
          "Section Overview",
          "Split and Largest, Smallest Number",
          "Each Char and Count",
          "Index and Rindex",
          "Insert and Squeeze",
          "Clear and Delete"
        ]
      },
      "requirements": [
        "No"
      ],
      "description": "In this course we are going to start from the very beginning of Ruby Programming. We are going to slowly move ahead taking everyone along to the advanced level topics. Anyone who is interested in learning Ruby Programming Language can take this course. This course will help them get a good grasp on Ruby Programming concepts.",
      "target_audience": [
        "Anyone who wants to learn Ruby to the pro level can take up this course"
      ]
    },
    {
      "title": "Computer Vision with OpenCV Python | Official OpenCV Course",
      "url": "https://www.udemy.com/course/computer-vision-with-opencv-official-opencv-free-course/",
      "bio": "Get started with Computer Vision using OpenCV, the largest and most extensive Computer Vision library in the world!",
      "objectives": [
        "Learn Computer Vision and AI using OpenCV"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with Images": [
          "Getting Started with Images"
        ],
        "Basic Image Manipulation": [
          "Basic Image Manipulation"
        ],
        "Image Annotation using OpenCV": [
          "Image Annotation using OpenCV"
        ],
        "Arithmetic Operations on Images": [
          "Arithmetic Operations on Images"
        ],
        "Bitwise Operations on Images": [
          "Bitwise Operations on Images"
        ],
        "Using Camera / Webcam in OpenCV": [
          "Camera"
        ],
        "Writing Video on Disk": [
          "Writing Video on Disk"
        ],
        "Image Filtering in OpenCV": [
          "Image Filtering in OpenCV"
        ],
        "Image Features and Image Alignment": [
          "Image Features and Image Alignment"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python"
      ],
      "description": "Learn to use OpenCV for Computer Vision and AI in this official course for absolute beginners from OpenCV. You will learn and get exposed to a wide range of exciting topics like Image & Video Manipulation, Image Enhancement, Filtering, Edge Detection, Object Detection and Tracking, Face Detection, and the OpenCV Deep Learning Module.\nThis course helps you confidently take your very first steps in the exciting world of Computer Vision and AI. This field offers limitless opportunities in the Computer Vision and AI job market. Embark on this learning journey and welcome to the AI revolution!\n\n\nCourse Contents\nModule 1: Getting Started with Images\nModule 2: Basic Image Manipulation\nModule 3: Image Annotation\nModule 4: Arithmetic Operations on Images\nModule 5: Bitwise Operations on Images\nModule 6: Accessing the Camera\nModule 7: Read and Write Videos\nModule 8: Image Filtering and Edge Detection\nModule 9: Image Features and Image Alignment\nModule 10: Image Stitching and Creating Panoramas\nModule 11: Object Tracking in OpenCV\nModule 12: Face Detection using Deep Learning\nModule 13: Object Detection using Deep Learning\nModule 14: Pose Estimation using OpenPose\n\n\nCourse Features\nDesigned By Industry Experts: This course in OpenCV and Python is for absolute beginners has been designed by our team of engineers and researchers, currently working in the field of Computer Vision and Deep Learning. This course will help you confidently take your very first steps into the exciting world of Computer Vision and AI.\nPowered By Python: The programming language of choice for this short introductory course is Python, one of the most comprehensive and widely used languages in AI.\nFoundational & Experiential Learning: This course will help you develop a broad and basic understanding and practice of the subject matter before committing to more structured formal learning paths from beginner to mastery levels that are available online through OpenCV.\nPractical & Intuitive: The field of Computer Vision contains many theoretical underpinnings which can become a stumbling block for absolute beginners, especially, when courses contain heavy mathematics. With this in mind, we have created this 'getting started' course to provide you a wide exposure to this exciting field.",
      "target_audience": [
        "Beginner Python Developers eager to learn Computer Vision and Deep Learning"
      ]
    },
    {
      "title": "Learning Haskell Programming",
      "url": "https://www.udemy.com/course/learning-haskell-programming/",
      "bio": "Build scalable and robust applications with Haskell",
      "objectives": [
        "Basics of Haskell datatypes and functions",
        "Using higher order functions for powerful data manipulation and code reuse",
        "Developing and build a Haskell app using a modern toolchain",
        "Writing and conducting tests",
        "Writing and deploy a simple web-application",
        "Saving and retrieving data from a database"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge of Haskell is required."
      ],
      "description": "Haskell is a powerful and well-designed functional programming language designed to work with complex data. Its emphasis on \"purity\" makes it easier to create rock-solid applications which stay maintainable and error-free even as they grow in scale.\nThis video would begin with the fundamentals and building blocks of Haskell programming language with special emphasis on functional programming. It will be covering how Haskell variables, syntax work alongwith Haskell datatypes and functions.\nYou will learn how to solve programming problems while creating an application with hands-on experience. You will then move on to learning writing expressions and high-order functions.\nAt the end of the video, you will be able to build a complete application with Haskell alongwith learning the important functionalities.\nAbout the Author\nHakim Cassimally learned the basics of Lisp 15 years ago and has been interested in functional programming ever since. After Audrey Tang developed the first prototype of Perl6 in Haskell (Pugs), he got seriously interested in Haskell and has written, spoken, and evangelised about learning and writing Haskell since 2006.\nEven when developing in other functional languages such as XQuery or traditional scripting languages such as Perl or Python, lessons learned from Haskell inform his approach and prototypes—whether it’s training software for a start-up, just-in-time sequencing systems for a car manufacturer, or data imports for a national media corporation.\nHis latest personal Haskell project is a Cryptic Crossword solver.",
      "target_audience": [
        "The video would appeal to programmers who want to learn the basics of Haskell and Functional Programming."
      ]
    },
    {
      "title": "The Complete Java Developer Course -Mastering Java from zero",
      "url": "https://www.udemy.com/course/the-complete-java-developer-course-mastering-java-from-zero/",
      "bio": "Learn Java from Zero to Hero. Become a Computer Programmer and start building complex projects. Earn Java Certification",
      "objectives": [
        "Learn Java from zero to hero based on University Syllabus",
        "Be able to succeed in your University exams by solving 41 real tests and exercises",
        "Build real projects like TV Management System, Insurance Company, Bank Account System, Ip finder and more...",
        "Learn the Java skills needed to apply for Java developer positions.",
        "Be able to sit for and pass the Oracle Java Certificate exam if you choose."
      ],
      "course_content": {},
      "requirements": [
        "A computer with either Windows, Mac or Linux to install all the free software and tools needed to build your new apps",
        "Passion to become a professional Java developer and start building your own projects",
        "A strong work ethic, willingness to learn, and plenty of excitement about the awesome new programs you’re about to build.",
        "Nothing else! It’s just you, your computer and your hunger to get started today."
      ],
      "description": "You’ve just stumbled upon the most complete, in-depth Java programming course online.\nWhether you want to:\n- build the skills you need to get your first Java programming job\n- succeed in your university courses related to java and coding\n- move to a more senior software developer position\n- pass the oracle java certification exam\n- or just learn java to be able to create your own java apps quickly.\n...this complete Java developer course is the course you need to do all of this, and more.\n\n\nThis course is designed to give you the Java skills you need to get a job as a Java developer. By the end of the course, you will understand Java extremely well and be able to build your own Java apps and be productive as a software developer.\n\nLots of students have been successful in getting their first job or promotion after going through the course.\n\nThe course is a whopping 36 hours long. Perhaps you have looked at the size of the course and are feeling a little overwhelmed at the prospect of finding time to complete it. Maybe you are wondering if you need to go through it all?\nThe core java material you need to learn java development is covered in the first seven sections (around 14 hours in total). The Java Basics are covered in those sections. The rest of the course covers intermediate, advanced, and optional material you do not technically need to go through.\n\n\nWhy would you choose to learn Java?\nThe reality is that there is a lot of computer languages out there. It's in the hundreds. Why would you choose the Java language?\nThe number one reason is its popularity. According to many official websites that track the popularity of languages, Java is either #1 or in the top 3. Popularity means more companies and their staff are using it, so there are more career opportunities available for you if you are skilled in the language.\nThe last thing you want to do is pick a language that is not in mainstream use. Java came out in the 1990s and is still very popular today.\n\n\nHere’s just some of what you’ll learn\nAll the essential Java keywords, operators, statements, and expressions needed to fully understand exactly what you’re coding and why - making programming easy to grasp and less frustrating\nYou will learn the answers to questions like What is a Java class, What is polymorphism and inheritance and to apply them to your java apps.\nHow to safely download and install all necessary coding tools with less time and no frustrating installations or setups\nComplete chapters on object-oriented programming and many aspects of the Java API (the protocols and tools for building applications) so you can code for all platforms and unlock your program’s user base (and potential sales)\nHow to develop powerful Java applications using one of the most powerful Integrated Development Environments on the market, IntelliJ IDEA!\nSolving 41 coding exercises from real university exams like CNAM Paris university\nBuild 5 complex projects from scratch to publish and sell.\n\n\nIs the course updated?\nIt’s no secret how technology is advancing at a rapid rate. New, more powerful hardware and software are being released every day, meaning it’s crucial to stay on top with the latest knowledge. Yes! we will update this course and expand it to be the largest course on the web with hundreds of exercises and thousands of ideas.\n\n\nReady to get started, developer?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced Java brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\nSee you on the inside (hurry, Java class is waiting!)",
      "target_audience": [
        "For people who want to learn Java from zero to hero",
        "For university students looking to succeed in their Java exams",
        "For everyone who want to start building company projects and sell them",
        "For any person looking for starting his coding career",
        "For people who really want to become Java Masters"
      ]
    },
    {
      "title": "Python Learning for Network Engineers Automation Masterclass",
      "url": "https://www.udemy.com/course/python-for-network-engineers/",
      "bio": "100% Hands-on Python training session with real time Network Automation usecases (SSH, NETCONF, RESTCONF& API examples)",
      "objectives": [
        "Master Python Network Automation concepts from scratch. No prior coding experience is needed",
        "Learn about Paramiko, Netmiko, NAPALM, Nornir, NETCONF, RESTCONF, YANG Models, Ncclient,API Requests, IPAddress libraries in python for Network automation",
        "Acclerate your career to become the future-ready Network Automation Engineer",
        "Learn to automate SSH, NETCONF, RESTCONF and API device interactions using Python",
        "Learn to automate day to day Network Device configuration tasks and solve realtime Networking Automation usecases in more practical way",
        "Learn to setup Ubuntu OS and PyCharm for your Network Automation Journey",
        "Learn to do the Network Sniffing anf Packet capture using Python",
        "Learn to prase device configuration using RegularExpression",
        "Learn about SSH Keybased Authentication",
        "Learn all the Python3 core concepts from Network context",
        "Learn to use Jinja2 templates and textfsm in your scripts",
        "Learn to use functions and Classes in Python for Network Automation",
        "Learn about scheduling the task execution and logging the script execution results",
        "Create and use CSV, YAML, JSON, XML files in your Python Automation scripts and device configurations"
      ],
      "course_content": {},
      "requirements": [
        "No prior Python knowledge is required. You will learn everything you need to know",
        "Need knowledge on basic Networking concepts (What is SSH, Basic Interface Configurations in Router and Switches)",
        "Basics of Routing Protocols (static routes and dynamic routes) and Switching Protocols (vlans and vtp) configuration knowledge",
        "Through out the session we will be using Linux Ubuntu OS (in Virtual box or VMWare Player)",
        "Understanding on setting up Cisco images in: GNS3 or EVE-NG",
        "Softwares used: Ubuntu OS, Python3, PyCharm, GNS3 or EVE-NG",
        "This course covers examples of setting Lab using Windows or Linux Operating systems"
      ],
      "description": "Learn Network Automation skills from scratch to an advanced level.\nFor attending this course you don't need any prior coding experience.\nYou will be learning all the required Python concepts in a practical way with Networking Examples\nThis will help you to get into the exciting world of most trending technology and raise your earning potential.\nThis course is designed for Network Engineers with less or no coding experience.\nThroughout the session, we will be using Linux OS (preferably Ubuntu) for running Python scripts.\nThe IDE is PyCharm and Cisco devices will be used for demonstrating most of the device interactions. (vIOS, IOS-XE, NXOS etc)\n\n\nThe course will be starting with SSH fundamentals\nInitially, Course will take you through Paramiko, Netmiko, NAPALM and Nornir Libraries' fundamentals\nParamiko invoke_shell and exec_command methods\nMethods supported in Netmiko for device interactions\nHow to do Configuration parsing using Regular Expressions over SSH\nHow to enable logging in the script with a log file or event email triggers\nHow to schedule the Script execution without keeping the terminal opened\nHow to do IP address and subnet validations using Python\nHow to do multithreading for parallel execution on multiple devices\nRead and write contents to a text file, JSON, YAML, and XML\nManage device inventories or config details in CSV files\nRead the configuration data from CSV, YAML, JSON, or text files\nHow to use textfsm template\nHow to use Jinja2 templates for creating multiline configuration templates with loops or conditions\nHow to use NAPALM for multivendor support\nHow to use getters in NAPALM\nHow to use config merge, config compare, config replace and config rollback in NAPALMcreate\nWhat is Nornir Framework\nHow to create an inventory file in Nornir\nHow to create tasks in Nornir\nWhat are plugins in Nornir\nNETCONF/YANG Data models with real-time examples\nNetconf Automation using Python Ncclient\nRESTCONF API Automation using Requests\nCisco Nexus Automation with NX-API (CLI, JSON-RPC, error handling, parsing outputs)\nCisco PyATS framework for testing, parsing, config compare, and automation workflows\nMCP (Model Context Protocol) with Python: build AI-powered automation, create smart apps, automate Cisco configs, browser automation with Playwright, and integrate GenAI into network workflows\nGenerative AI with Python: Build basic LangChain apps, ChatPromptTemplates, Language Translator apps using Groq API & OpenAI, and integrate GenAI into network automation use cases\nRaspberry Pi Micropython Network Monitoring and Automation examples\nCourse Update log (Latest Topics):\nSept 2025: MCP (Model Context Protocol) + GenAI Integration with Python\n2023–2024: Generative AI Projects (LangChain, Groq API, OpenAI API, Streamlit Apps)\nJune 2023: Raspberry Pi Micro Python\nMay 2023: Command Line Arguments using Argparse\nApril 2023: VMWare ESXi CLI automation using Python\nPython Fundamentals Covered:\nStrings and String Methods\nBytes and Unicode\nException handling\nstdin, stdout, stderr in Python\nFile Operations\nConfig HTML Comparison using Python\nRegex Fundamentals\nFor loop\nWhile loop\nif, else, elif\nFunctions and Modules\nObject Oriented Programming: Classes Basics\nMultithreading\nlists, dictionaries, and its methods\nsets, tuples\nPycharm debug Example\nMutable vs Immutable\ndatetime\nschedule\nLogging\nEnumerate\nTabulate\nItemgettes\nList comprehension\ncopy and deep copy\nsubprocess\nJSON\nXML\nYAML\nMocropython for beginners\nMCP Libraries (mcp, mcp_use, Playwright MCP, etc.)\nGenerative AI Libraries (LangChain, OpenAI, Groq API, Streamlit integration)",
      "target_audience": [
        "Network Engineers, Network Administrators, Network Operators",
        "Network Architects",
        "System Administrators, System Engineers",
        "DevOps Engineers",
        "Cisco Certified Professionals",
        "CCNA, CCNP, CCIE Professionals",
        "All the Python Network Automation enthusiast",
        "Python developer who want to understand Networking Libraries",
        "Network Analyst",
        "Net DevOps",
        "DevNet"
      ]
    },
    {
      "title": "Build Outstanding Java Apps with JavaFX much faster",
      "url": "https://www.udemy.com/course/javafx-gui-programming/",
      "bio": "Launch a beautiful Java app by the end of the week. Learn smarter Programming with the JavaFX GUI Framework.",
      "objectives": [
        "create own, innovative software very quickly",
        "apply the MVC pattern to create better software",
        "develop a working software within a day",
        "create your own finance planer, exercise planer, notebook or customer management system"
      ],
      "course_content": {},
      "requirements": [
        "Very basic understanding of programming",
        "You should have very basic understanding of programming: you should know what functions, variables or arrays are",
        "Not necessary to have Java experience: In the beginning I explain every single step",
        "You should have heard of Object Oriented Programming (OOP)",
        "You should bring high interest and motivation to create your own software"
      ],
      "description": "This course has been updated on 10th September!\n- Real life application examples have been added (See section 7 & 8)\n---------------------------------------------------------------------------------\nCreate professional and visual appealing software in very short time. Realise your software idea until the end of this week. Make it happen!\n\nJavaFX is a fantastic GUI-Framework for Java, by Oracle. JavaFX lets you realise and publish your software dream very quickly. The software can easily be exported for Mac OS, Windows or Linux.\nThis course is of highest quality! No uhms, no blurry picture. Professional equipment was used to record the videos of this course.\nWhat will you learn?:\nCreate awesome user interfaces that will impress everyone\nUse CSS to create user interfaces\nLearn the very important MVC-Pattern\nManage hundreds of UI controls (buttons, tables, choice boxes, ...)\nGet Familiar with Java programming, (it is really not that hard)\nLearn to create real life example java applications (Updated on 10th September)\n\nDevelop the GUI of your application independently of the application logic. This makes updating at a later time very flexible. The GUI is created in XML and can be integrated into the application independently. This is a superior technology that is only rising in popularity now!\n\nYou will also learn how to integrate data in the program with the object model. This touches Object Oriented Programming. I will not specifically teach OOP, but if you follow what I show you, you will understand it easily.\nEverything you need for this course is freely available. I will not try to sell you something.\n\nMy Promise to you:\nEvery single video in this course is dense learning material without distraction. No promotion, no endless Introduction. I will get straight to the point, but teach you everything from Step 1.\n\n\nEVERYONE CAN LEARN TO CODE\n\nRequirements:\nLittle to no experience in programming (Java or other language)\nHungriness to learn crazy coding skills\nInterest in learning new technical skills\n\n\n\nIt is very likely that you know the basics of Java at the end of this course. So practically you learn 2 things in one!\nAll tools that you need for the development with JavaFX, are freely available and I will show you in detail how you download and install them.\n\n\n3 Reasons for taking this course:\nThorough Teaching: I will share knowledge with you that took myself years to learn.\nIndividual Support: If you are stuck, I help you personally as soon as I can.\nTechnical Excellence: All videos are 720HD quality. The Audio is professional recorded.\n\nBecome a Java Programmer today! Sign up now!\n\nCheers, Jonas Schindler",
      "target_audience": [
        "This course is targeting beginners of programming who have little to know experience",
        "Experienced developers can learn a powerful new technique to enhance software projects"
      ]
    },
    {
      "title": "Mastering Clean Code in JavaScript",
      "url": "https://www.udemy.com/course/mastering-clean-code-in-javascript/",
      "bio": "Learning the JavaScript framework is good and cleaner JavaScript is even better",
      "objectives": [
        "Structure better code in modules with ease",
        "Write pure functions, avoid side-effects, and go functional",
        "Explore design patterns and practices and how to use them",
        "Get familiar with unit testing",
        "Proper error handling in JavaScript"
      ],
      "course_content": {
        "Clean Code with JavaScript": [
          "The Course Overview",
          "Clean Variables",
          "Lexical Scope and let",
          "Clean Functions",
          "All about this",
          "Clean Objects and Classes",
          "Using a linter"
        ],
        "Clean Code with Functional Programming": [
          "Introduction to Functional Programming",
          "Writing a Pure Function",
          "Object.assign and the Spread Operator",
          "Forget the Loop with Map and ForEach",
          "Reducing an Array",
          "Filtering an Array"
        ],
        "Modules in JavaScript": [
          "Why Modules",
          "The Module Pattern",
          "The Node Package Manager",
          "CommonJS",
          "AMD",
          "ES6 Modules",
          "Tree-Shaking with Webpack"
        ],
        "Design Patterns and Principles": [
          "The Single Responsibility Principle",
          "The Open/Closed Principle",
          "The Liskov Substitution Principle",
          "The Interface Segregation Principle",
          "The Dependency Inversion Principle",
          "The Singleton Pattern",
          "The Observer Pattern",
          "The Strategy Pattern"
        ],
        "Testing": [
          "Introduction to Unit Testing",
          "Installing and Using Jasmine",
          "Test Driven Development",
          "Making the Tests Pass"
        ],
        "Error Handling": [
          "Error Handling Best Practices",
          "Catching Errors from Promises",
          "An Error Handler with Strategy",
          "Logging"
        ]
      },
      "requirements": [
        "Prior JavaScript programming knowledge is essential"
      ],
      "description": "Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production. You can write terrible code in any language, but if you wanted to try to write terrible code that works, JavaScript would be your language of choice.\nIn this course, you will learn various concepts and techniques, essential principles, patterns, and practices for writing clean code in JavaScript. You will be introduced to some general guidelines on how to better structure your JavaScript code. You will then learn about clean code best practices while working with variables, functions objects, and the latest ES6 classes. Next, you will discover functional programming, how to write pure functions, and how to use built-in functional methods. You will then move on to modular JavaScript and explore the various ways you can structure your modules. After that, you will master various design patterns and programming principles. Unit testing is very important and you will learn to do this with Jasmine and Karma, to make handling errors easy.\nBy the end of the course, you will have learned to learn clean coding with functional programming, explored various modules in JavaScript, and designed patterns and principles. Overall you will learn to write better code with improved readability.\nAbout the Author :\nDimitris Loukas is a software engineer currently writing Single Page Applications and using the latest version of JavaScript with Aurelia and Angular for a trading software firm. He is also finishing his Computer Science studies at the University of Athens. He has worked for two start-ups in the past, is active in the open source community, and loves taking up small side projects. He has mastered Angular, Aurelia, and VueJS and is now interested in entering the ReactJS world. He is fascinated by modern JavaScript and where the web is going.",
      "target_audience": [
        "JavaScript developers"
      ]
    },
    {
      "title": "C# Introduction",
      "url": "https://www.udemy.com/course/cwc-introduction/",
      "bio": "Learn the fundamentals of programming in this Microsoft language",
      "objectives": [
        "Create a first project",
        "Use and understand variables",
        "Work with mathematical expressions",
        "Work with Classes and Objects",
        "Use multi dimensional arrays, array lists and type safe lists",
        "LINQ filtering and sorting",
        "LINQ joining data",
        "Add exceptions",
        "Debug common errors"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Overview of C#": [
          "Understanding C#"
        ],
        "C# First Project": [
          "Getting Started"
        ],
        "Working with Variables": [
          "Overview of Variables",
          "Numeric Variables",
          "String Variables",
          "Variable Scope",
          "Casting"
        ],
        "Mathematical Expressions": [
          "Overview of Mathematical Expressions",
          "Decision Statement",
          "Loops",
          "Functions and Methods"
        ],
        "Classes and Objects": [
          "Overview of Classes and Objects",
          "Create Simple Class",
          "Constants and Enums",
          "Object Constructors",
          "Value and Reference Types"
        ],
        "Arrays": [
          "Overview of Arrays",
          "Multi Dimensional Arrays",
          "Array Lists",
          "Type Safe Lists"
        ],
        "LINQ": [
          "Understanding LINQ",
          "LINQ Filtering and Sorting",
          "LINQ Joining Data"
        ],
        "Exceptions": [
          "Overview of Exceptions",
          "Exceptions Handled",
          "Custom Exceptions"
        ],
        "Inspecting Folders and Files": [
          "Overview of Inspecting Folders and Files",
          "Working with Paths",
          "Reading and Writing Files"
        ]
      },
      "requirements": [
        "Basic Microsoft Windows training or equivalent experience. Prior programming knowledge is useful, but not required."
      ],
      "description": "This course is the beginning track for certification. It is designed for the beginning C# programmer although there are topics of an advanced nature included as well. The topics discussed within this curriculum focus primarily on C# code and not interface design or true event-based programming.",
      "target_audience": [
        "Students who wish to learn how to program in C#"
      ]
    },
    {
      "title": "Bash Scripting and Shell Programming for the Linux Command",
      "url": "https://www.udemy.com/course/bash-shell-scripting-a-complete-guide-for-beginner/",
      "bio": "Master Bash scripting for Linux, Unix, and Mac. Write professional-level Bash scripts and tackle real-world challenges!",
      "objectives": [
        "After having the course you will feel confident writing scripts and will have very good knowledge of Bash scripting",
        "This tutorial discusses the basic functionalities of Bash Script along with relevant examples for easy understanding",
        "You will be able to create batch scripts that will come handy in our daily activities",
        "Create scripts with bash like working with Files, Folders and many more"
      ],
      "course_content": {
        "Bash Shell: Introduction": [
          "Bash Shell: Course Introduction",
          "Bash Shell: Code Editor",
          "Bash Shell: Bash Introduction and Bash File Creation - Part 1",
          "Bash Shell: Bash Introduction and Bash File Creation - Part 2",
          "Important Course Update",
          "Update"
        ],
        "Bash Shell: Bash Commands Part 1": [
          "Bash Shell: Bash Commands - pwd",
          "Bash Shell: Bash Commands - ls : Part 1",
          "Bash Shell: Bash Commands - ls : Part 2",
          "Bash Shell: Bash Commands - mkdir",
          "Bash Shell: Bash Commands - cd : Part 1",
          "Bash Shell: Bash Commands - cd : Part 2",
          "Bash Shell: Bash Commands - echo",
          "Bash Shell: Bash Commands - touch : Part 1",
          "Bash Shell: Bash Commands - touch : Part 2",
          "Bash Shell: Bash Commands - cat",
          "Bash Shell: Bash Commands - clear",
          "Bash Shell: Bash Commands - history",
          "Quiz 1"
        ],
        "Bash Shell: Bash Commands Part 2": [
          "Bash Shell: Bash Commands - copy : Part 1",
          "Bash Shell: Bash Commands - copy : Part 2",
          "Bash Shell: Bash Commands - move",
          "Bash Shell: Bash Commands - rm : Part 1",
          "Bash Shell: Bash Commands - rm : Part 2",
          "Bash Shell: Bash Commands - chmod",
          "Bash Shell: Bash Commands - find : Part 1",
          "Bash Shell: Bash Commands - find : Part 2",
          "Bash Shell: Bash Commands - find : Part 3",
          "Bash Shell: Bash Commands - grep",
          "Bash Shell: Bash Commands - sleep",
          "Bash Shell: Bash Commands - kill",
          "Quiz 2"
        ],
        "Bash Shell: Special Characters in Bash Shell": [
          "Bash Shell: Special Characters in Bash Shell - Comment (#)",
          "Bash Shell: Special Characters in Bash Shell - Command Separator (;)",
          "Bash Shell: Special Characters in Bash Shell - Redirect (>) : Part 1",
          "Bash Shell: Special Characters in Bash Shell - Redirect (>) : Part 2",
          "Bash Shell: Special Characters in Bash Shell - Append (>>)",
          "Bash Shell: Special Characters in Bash Shell - Input Redirect (<)",
          "Bash Shell: Special Characters in Bash Shell - Pipe (|)",
          "Bash Shell: Special Characters in Bash Shell - Escape (\\)",
          "Bash Shell: Special Characters in Bash Shell - Tilde (~)",
          "Bash Shell: Special Characters in Bash Shell - Period (.)",
          "Bash Shell: Special Characters in Bash Shell - Double Period (..)",
          "Quiz 3"
        ],
        "Bash Shell: Variables in Bash Shell and Debugging": [
          "Bash Shell: Variables in Bash Shell - Introduction",
          "Bash Shell: Variables in Bash Shell - Command Line Arguments",
          "Bash Shell: Variables in Bash Shell - Variables",
          "Bash Shell: Variables in Bash Shell - Variables (Case Sensitive)",
          "Bash Shell: Variables in Bash Shell - Variables (Space issue around '=')",
          "Bash Shell: Variables in Bash Shell - User Input Values in Variables : Part 1",
          "Bash Shell: Variables in Bash Shell - User Input Values in Variables : Part 2",
          "Bash Shell: Variables in Bash Shell - User Input Values in Variables : Part 3",
          "Bash Shell: Debugging : Part 1",
          "Bash Shell: Debugging : Part 2",
          "Bash Shell: Debugging : Part 3",
          "Quiz 4"
        ],
        "Bash Shell: Decision Making Condition": [
          "Bash Shell: Decision Making Condition - If Condition",
          "Bash Shell: Decision Making Condition - If Condition (Command Line Arguments)",
          "Bash Shell: Decision Making Condition - If Condition (Case Sensitive)",
          "Bash Shell: Decision Making Condition - If Else Condition",
          "Bash Shell: Decision Making Condition - Nested If Condition",
          "Bash Shell: Decision Making Condition - Nested If Else Condition",
          "Bash Shell: Decision Making Condition - Else If Condition",
          "Bash Shell: Decision Making Condition - If File Exists : Part 1",
          "Bash Shell: Decision Making Condition - If File Exists : Part 2",
          "Bash Shell: Decision Making Condition - If Variable Exists",
          "Bash Shell: Decision Making Condition - Case Statement : Part 1",
          "Bash Shell: Decision Making Condition - Case Statement : Part 2",
          "Quiz 5"
        ],
        "Bash Shell: Strings in Bash Shell": [
          "Bash Shell: Strings in Bash Shell - Create String",
          "Bash Shell: Strings in Bash Shell - Empty String",
          "Bash Shell: Strings in Bash Shell - Length of String",
          "Bash Shell: Strings in Bash Shell - Substring of String : Part 1",
          "Bash Shell: Strings in Bash Shell - Substring of String : Part 2",
          "Bash Shell: Strings in Bash Shell - Substring of String : Part 3",
          "Bash Shell: Strings in Bash Shell - Substring of String : Part 4",
          "Bash Shell: Strings in Bash Shell - Concatenate String : Part 1",
          "Bash Shell: Strings in Bash Shell - Concatenate String : Part 2",
          "Quiz 6"
        ],
        "Bash Shell: Operators in Bash Shell": [
          "Bash Shell: Operators in Bash Shell - Operators Introduction",
          "Bash Shell: Operators in Bash Shell - Arithmetic Operators : Part 1",
          "Bash Shell: Operators in Bash Shell - Arithmetic Operators : Part 2",
          "Bash Shell: Operators in Bash Shell - Assignment Operators : Part 1",
          "Bash Shell: Operators in Bash Shell - Assignment Operators : Part 2",
          "Bash Shell: Operators in Bash Shell - Relational Operators : Part 1",
          "Bash Shell: Operators in Bash Shell - Relational Operators : Part 2",
          "Bash Shell: Operators in Bash Shell - Logical Operators (AND)",
          "Bash Shell: Operators in Bash Shell - Logical Operators (OR)",
          "Bash Shell: Operators in Bash Shell - Logical Operators (NOT)",
          "Quiz 7"
        ],
        "Bash Shell: Loops in Bash Shell": [
          "Bash Shell: Loops in Bash Shell - For Loop Introduction",
          "Bash Shell: Loops in Bash Shell - For Loop Introduction Example",
          "Bash Shell: Loops in Bash Shell - For Loop read a range Part 1",
          "Bash Shell: Loops in Bash Shell - For Loop read a range Part 2",
          "Bash Shell: Loops in Bash Shell - For Loop read Array",
          "Bash Shell: Loops in Bash Shell - Break Statement",
          "Bash Shell: Loops in Bash Shell - Continue Statement",
          "Bash Shell: Loops in Bash Shell - While Loop : Part 1",
          "Bash Shell: Loops in Bash Shell - While Loop : Part 2",
          "Bash Shell: Loops in Bash Shell - Bash Until Loop",
          "Quiz 8"
        ],
        "Bash Shell: Arrays in Bash Shell": [
          "Bash Shell: Arrays in Bash Shell - Create Array (Index Position)",
          "Bash Shell: Arrays in Bash Shell - Accessing Elements in Array : Part 1",
          "Bash Shell: Arrays in Bash Shell - Accessing Elements in Array : Part 2",
          "Bash Shell: Arrays in Bash Shell - Iterate over an Array",
          "Bash Shell: Arrays in Bash Shell - Print the index value of an Array",
          "Bash Shell: Arrays in Bash Shell - Length of an Array",
          "Bash Shell: Arrays in Bash Shell - Add element to an Array",
          "Bash Shell: Arrays in Bash Shell - Update Element of an Array",
          "Bash Shell: Arrays in Bash Shell - Delete Element in Array",
          "Quiz 9"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No installation required. We can work of any machine having browser and internet connection"
      ],
      "description": "Join the 900 and still counting successful students who have mastered Bash programming through my top-rated courses\n\n\nIf you want to write professional Bash scripts, solve real-world problems, or automate complex and repetitive tasks, keep reading. Here's What People Are Saying About Courses:\n\n\nSadie W  I am a complete beginner and I am thoroughly enjoying this course. I appreciate the pace the instructor is going and like how he explains the different commands. As a result, I am getting a better understanding of the commands .\n\n\nTodd Z Great method of presenting a new programming language! These small snippets made understanding Bash easier and faster. Thank you!\n\n\nMosaiq T Techno is a great instructor, very knowledgeable and a great speaker. I would definitely take another course with him in the future. Instructor love for his job kept me in tuned the whole way through\n\n\nKim  This course was very informative and interesting. The instructor, Techno, is very easy to communicate with and very interesting with real life examples of the course materials. I enjoy learning about this material to help me do my job.\n\nBash is a command processor that typically runs in a text window where the user types commands that cause actions. Bash can also read and execute commands from a file, called a shell script. Like most Unix shells, it supports filename globbing (wildcard matching), piping, here documents, command substitution, variables, and control structures for condition-testing and iteration. The keywords, syntax, dynamically scoped variables and other basic features of the language are all copied from sh.\n\n\nThis course provides students with the fundamental knowledge and skills to use Bash Shell for administering and automating administration of different systems. This course provides students the skills to identify and build the commands they require to perform specific tasks. In addition, students learn how to build scripts to accomplish advanced tasks such as automating repetitive tasks\n\n\nThis course is meant for the beginner who wants to know about Bash Shell and some basic scripting with BASH.\n\n\nPlease don't wait that others should encourage you to learn this Skill.\n\n\nTry to identify the need and demand of Today's time, and Grab this opportunity to Learn this new Skill to match pace with Trending Time and Technologies.\n\n\nI am sure, As soon as you complete this course, You will be very efficient in automation using BASH SHELL.\n\n\nI'm a professional instructor who has helped thousands of students learn to use BASH. Come and enjoy the class as you learn this powerful tool.\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's highest-rated development course.",
      "target_audience": [
        "Beginner developers curious about the Bash Shell",
        "Anyone who wants to learn scripting for automation",
        "Anyone responsible for IT in an organization"
      ]
    },
    {
      "title": "Master of Essential C++ Programming Beginner to Advanced",
      "url": "https://www.udemy.com/course/master-of-essential-c-programming-beginner-to-advanced/",
      "bio": "Comprehensive Mastery: From Core Concepts to Expert-Level Techniques in C++ Programming",
      "objectives": [
        "Grasp C++ fundamentals: Understand core concepts like variables, data types, operators, control flow (if, else, loops), functions, and input/output operations.",
        "Write efficient code: Develop the ability to create well-structured and optimized C++ programs.",
        "Build practical applications: Apply their knowledge to create real-world C++ programs.",
        "Learn about classes, objects, inheritance, polymorphism, encapsulation, and abstraction."
      ],
      "course_content": {},
      "requirements": [
        "No experience required"
      ],
      "description": "Are you eager to dive into the world of programming? This course is your perfect starting point to learn C++ from scratch. Whether you're a complete novice or have some coding experience, we'll guide you through the fundamentals of C++ programming in a clear and engaging way.\nLearn by doing with practical exercises, real-world examples, and engaging projects. You'll grasp core concepts like variables, data types, operators, control flow, functions, arrays, pointers, and strings. By the end of this course, you'll be confident in writing your own C++ programs and solving programming challenges.\nLearn how to:\nGrasp C++ syntax and basic concepts\nMaster variables, data types, and operators\nUnderstand control flow statements (if, else, loops)\nCreate functions and modules\nWork with arrays, pointers, and strings\nBuild your first C++ programs\n\n\nDon't miss this opportunity to become a proficient C++ programmer. Enroll now and start building your coding future!\nThrough practical exercises and real-world examples, you'll gain hands-on experience and solidify your understanding. By the end of this course, you'll have a strong foundation in C++ programming, opening doors to various career opportunities and exciting projects.\nNo prior programming knowledge is required. Join us today and start your C++ journey! Lets start learning.",
      "target_audience": [
        "High school or college students looking to learn C++ for academic purposes or career preparation.",
        "People interested in pursuing a career in software development and wanting to build a strong foundation in C++."
      ]
    },
    {
      "title": "Top Python and Javascript Programming Bundle",
      "url": "https://www.udemy.com/course/python-and-javascript-programming-bundle/",
      "bio": "Learn Python Programming and Javascript Coding From Beginner To Intermediate Fast! Become a Web Developer in no time!",
      "objectives": [
        "Python From Beginner To Advanced",
        "Javascript From Beginner To Advanced",
        "Programming Concepts Applicable To Any Programming Language",
        "Object Oriented Programming",
        "Conditional If/Else & Comparisons",
        "While and For Loops",
        "Variables, and Data Types",
        "Functions, Modules, & Classes",
        "Create a Javascript Math Flashcard app",
        "And More!"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser",
        "We'll download Python for Free and Use a Free Text Editor For Javascript"
      ],
      "description": "In this course we'll learn the Python 3 programming language and the Javascript programming language from an absolute Beginner level all the way to Advanced in no time at all!\nThis course is aimed at the absolute beginner, you don't need any coding experience at all!\nWe'll start out by setting downloading and installing Python and the Sublime Text Editor - both for free. This will give you all the tools you need to start writing and running Python code.\nFor Javascript, we'll use the free Sublime Text Editor and a Web Browser so that we can learn the basic Javascript concepts.\nThen, we'll dive into very basic computer science concepts. Things like:\nString Manipulation\nPrinting to the Screen\nSimple Math\nVariables\nData Types (lists, tuples, dictionaries and more)\nAssignment Operators\nComparison Operators\nAfter that, we'll move into more intermediate topics like:\nWhile Loops\nFor Loops\nConditional If/Else Statements\nFizzbuzz\nFinally we'll finish up with more advanced topics like:\nModules\nFunctions\nClasses\nAnd More...\nWe'll learn all of those things for both Python and Javascript. We'll start with Python, and then move over to Javascript in the second half of the course.\nPython and Javascript are two of the greatest programming languages to learn, and learning has never been this easy!\nI'll see you on the inside!\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the Python and Javascript Programming Languages"
      ]
    },
    {
      "title": "C Programming Made easy for Beginners -Step by Step Approach",
      "url": "https://www.udemy.com/course/c-course-learn-2-code-develop-problem-solving-skills-in-c/",
      "bio": "Master the C Language, increase career options by Solve Online Coding Challenges. In-depth coverage of C Language",
      "objectives": [
        "Complete understanding of C Language",
        "Create well indented C programs",
        "Gain in-depth knowledge about C Programming",
        "Can solve complicated problems using C Language",
        "Acquire skills that will be useful for understanding any programming Language easily",
        "Able to write programs for both academics and Interview perspective",
        "Learn how to program with high-quality C Code",
        "Learn how to solve Online Coding Challenges",
        "Can Solve a wide range of Online Challenges"
      ],
      "course_content": {
        "Introduction": [
          "Intructor's Note",
          "Install, Setup and Settings of Code Blocks",
          "First C Program",
          "Coding challenge # 1 - Hello World !",
          "Introduction to Programming",
          "Programming Languages",
          "Types of Programming Languages",
          "Structured Programming Language",
          "Program Development and Execution",
          "Introduction to C Language"
        ],
        "Basics and History": [
          "Benefits of C Language",
          "Assemblers, Compilers and Interpreters",
          "Bug/Error and Debug",
          "Brief History of C Language",
          "Basics and History"
        ],
        "Keywords, Identifiers, Comments, Constants, Variables and Data Types in C": [
          "Keywords and Identifiers in C",
          "Practice Program - Keywords and Identifiers in C",
          "Comments in C",
          "Practice Program - Comments in C",
          "Variables, Literals and Constants",
          "Data Types in C",
          "Primary Data Types in C",
          "Practice Program - Primary Data Types in C",
          "Coding Challenge # 2 - Sum and Difference of Numbers",
          "Expressions and Precedence",
          "Input/Output(I/O) functions in C",
          "Data Types in C",
          "C Language Basics"
        ],
        "Operators in C": [
          "Benefits and Importance of Operators in C",
          "Introduction to Operators in C",
          "Arithmetic Operators",
          "Practice Program using Arithmetic Operators",
          "Increment / Decrement Operators",
          "Practice Program using Increment / Decrement Operators",
          "Assignment Operators",
          "Relational Operators",
          "Logical Operators",
          "sizeof Operator in C Language",
          "Bit-wise Operators",
          "Practice Program using Bit-wise Operators in C Language",
          "Coding Challenge # 3 - Bit-wise Operators in C",
          "Ternary Operator in C Language",
          "Programming Challenge and its Solution-Finding the largest of 3 numbers using ?:",
          "Operator Precedence and Associativity in C Language",
          "Operators in C",
          "Check if a given number is positive as well as even using Operators"
        ],
        "Conditional Structures / Flow Control": [
          "Flow Control Statements in C Program",
          "Decision Control Statements including if , if-else, nested-if and if-else Ladder",
          "Practice Program - Simple if Condition in C",
          "Practice Program - else-if Condition in C",
          "Practice Program - Nested-if Condition in C",
          "Practice Program - if-else ladder in C",
          "Coding Challenge # 4 - Conditional Statement in C",
          "Understanding Switch Case Statements in C Language",
          "Programming Challenge and its Solution-Find the largest of 3 nos using if-else",
          "Programming Challenge - To Find the Roots of a Quadratic Equation",
          "Solution to Programming Challenge - To Find the Roots of a Quadratic Equation",
          "Programming Challenge - To Find the charges for an Electricity Bill",
          "Solution to Programming Challenge - To Find the charges for an Electricity Bill",
          "Conditional Structures / Flow Control"
        ],
        "Looping Structures in C Language": [
          "Introduction to Loops in C",
          "Understanding While Loop in C Language",
          "Practice Program - using while Loop in C Language",
          "Understanding For Loop in C Language",
          "Practice Program - Accessing ASCII values using for Loop",
          "Practice Program - using for Loop in C Language",
          "Coding Challenge # 5- For Loop",
          "Understanding do-while loop in C Language",
          "Practice Program - using do-while Loop in C Language",
          "Understanding break and continue statements in C Language",
          "Understanding Nested loops in C Language",
          "Programming Challenge - To print a Multiplication Table",
          "Solution to Programming Challenge - To print a Multiplication Table",
          "Programming Challenge - To Reverse a Given Number",
          "Solution to Programming Challenge - To Reverse a Given Number",
          "Programming Challenge - To find whether a Given Number is PALINDROME or NOT",
          "Solution to Programming Challenge - Number is PALINDROME or NOT",
          "Programming Challenge with solution - To print a Pascal Triangle",
          "Coding Challenge # 6- Sum of Digits",
          "Coding Challenge # 7 - Pattern Printing",
          "Goto and Labels in C Language",
          "Loops in C"
        ],
        "Functions in C": [
          "Introduction to Functions in C",
          "Understanding User-defined Functions in C",
          "Practice Program - Call-By-Value Parameter Passing Mechanism in C",
          "Introduction to storage classes in C includes auto,static,register and extern",
          "Recursion or Recursive Functions in C",
          "Practice Program - using Recursive functions",
          "Variadic Functions in C",
          "Variadic Macros with Practice Program",
          "Programming Challenge - To Find the GCD of two given Numbers",
          "Solution to Programming Challenge - To Find the GCD of two given Numbers",
          "Programming Challenge - To Find the Fibonacci of a given Numbers",
          "Solution to Programming Challenge - To Find the Fibonacci of a given Numbers",
          "Coding Challenge # 8 - Greatest among 4 numbers using functions",
          "Coding Challenge # 9 - Sum of Nth Term using Recursion",
          "Coding Challenge # 10 - Variadic Functions in C",
          "Functions"
        ],
        "Arrays": [
          "Introduction to Arrays in C Language",
          "Basics of Arrays in C Language",
          "Practice Program - Bubble Sort using 1-Dimensional Array in C Language",
          "Programming Challenge - To sort the elements using Selection Sort Technique",
          "Solution to Programming Challenge - To sort the elements using Selection Sort",
          "Programming Challenge - To search an Element using Linear Search",
          "Solution to Programming Challenge - Linear Search",
          "Programming Challenge & Solution - Binary Search",
          "Coding Challenge # 11 - Array Reversal",
          "Multi-Dimensional Arrays in C Language",
          "2-Dimensional Array in C Language",
          "Practice Program - 2-Dimensional Array in C Language",
          "Practice Program - Matrix Addition using 2-Dim Array",
          "Practice Program - Matrix Multiplication using 2-Dim Array",
          "3-Dimensional Array in C Language and the Practice Program",
          "Coding Challenge # 12 - Dynamic Array in C",
          "Arrays"
        ],
        "Pointers": [
          "Introduction to Pointers in C",
          "Practice Program - Pointers in C Language",
          "Pointers and Arrays in C Language",
          "Coding Challenge # 13- Gender based Students Marks Summation",
          "Pointer Arithmetic in C Language",
          "Pointer to a pointer in C Language",
          "Pointers and Functions in C Language",
          "Practice Program - Call-By-Reference Parameter Passing Mechanism in C",
          "Misc Types of Pointers incl NULL pointer, Void pointer, etc.",
          "Dynamic Memory Allocation in C Language",
          "Practice Program - Dynamic Memory Allocation using malloc() Function",
          "Coding Challenge # 14 - 1D Arrays in C (Dynamic Memory Allocation)",
          "Coding Challenge # 15 - Pointers in C",
          "Pointers"
        ],
        "Strings in C": [
          "Introduction to Strings in C Language",
          "String Functions in C Language",
          "Practice Program - ALL Built-in String Functions in C",
          "Practice Program - String Operations without using String Functions in C",
          "Programming Challenge and Solution - Case Conversion in String using Pointers",
          "Coding Challenge # 16- Playing with Characters",
          "Coding Challenge # 17- Printing Tokens from a String",
          "Coding Challenge # 18 - Digit Frequency",
          "Coding Challenge # 19 - Sorting Array of Strings",
          "Coding Challenge # 20 - Permutations of Strings",
          "Coding Challenge # 21 - Querying the Document",
          "Strings in C"
        ]
      },
      "requirements": [
        "No Programming Knowledge Required"
      ],
      "description": "Learning C programming will not only make you learn one of the most powerful Programming Languages of all time, but also gives a strong base for developing Problem solving Skills in the field of computer science and Engineering.\nLearning C Language helps you make you a better programmer for other Programming Languages like C++, Java, Python, C# etc. by knowing what the computer is actually doing when you run your programs.\n\nYour instructor, Sharief has been teaching students for over 24 years to University graduates and under-graduates. He runs different curriculum including Internet technologies, Object-Oriented programming and of course C programming language.\nThis means that you are learning from someone who has all the professional training, skills, and experience needed to teach you how to become proficient in the C programming language.\nWho should take the course\n· Beginners – if you've never coded before, you can learn here C Language step by step.\n· Programmers switching to C from some other language such as Java, Ruby or Python\n· Cross-platform developers – there are C compilers for all major operating systems\n· Anyone who needs to program C++ or Objective-C. The C language is the best one to start with.\nWho this course is for:\n· Newcomers to programming.\n· Programmers of other languages who want a fast way into C\n· Anyone who needs to master C as a basis for using C++ or Objective-C",
      "target_audience": [
        "Undergraduates who want to Learn C Language",
        "Any aspirant with no previous knowledge of computer programming",
        "Fresher Students to Crack Campus interviews in C Language"
      ]
    },
    {
      "title": "Python Programming Mastery: From Beginner to Expert",
      "url": "https://www.udemy.com/course/python-programming-mastery-from-beginner-to-expert/",
      "bio": "Unlock the Full Potential of Python with Comprehensive Hands-On Training! Regex, Json, Data science, Flet and more",
      "objectives": [
        "Major and difficult python concepts would be explained using nice slides and presentation for easier assimilation",
        "You will master the Python programming language by solving coding challenges and building projects.",
        "Build a complete understanding of Python from the ground up!",
        "Build Web and desktop Applications Using Flet Framework",
        "Learn to use Object Oriented Programming with classes!",
        "Learn how to work with APIs and understand Authentication",
        "You will master Python regex and be able to read, write & understand any regex pattern",
        "Learn to write professional and compact code with Python comprehension",
        "Learn how to schedule Emails with Python Datetime module",
        "Solve Python Codewars Challenges and get familiar with coding interviews"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "No paid software required - I'll teach you how to use VsCode, Anaconda and more !",
        "I'll walk you through, step-by-step how to get all the software installed and set up",
        "A Mac or PC computer with access to the internet"
      ],
      "description": "Welcome to the Python Programming Mastery: From Beginner to Expert - The course you need to learn to code with Python\n\n\nThe course is Structured to help you kick-start your career as a python developer even if you are a complete beginnner;\nAt 62+ hours, this Python course is without a doubt a very comprehensive and beginner-friendly Python course. Even if you have zero programming experience, this course will take you from beginner to professional.\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Python developer.\nThe course includes over 62 hours of HD video tutorials and builds your programming knowledge while making real-world Python projects.\n\n\nThroughout this comprehensive course, we cover a massive amount of tools and technologies, including:\nPython 3 - the latest version of Python\nPython Scripting\nData Science\nPandas\nNumpy\nMatplotlib\nFlet Framework (Flutter)\nRequest\nRegex (Regular Expression)\nJson\nAPI Integration\nChatGPT API\nGit, GitHub and Version Control\nand much much more!\nBy the end of this course, you will be fluently programming in Python and you'll be so good at Python that you can get a job or use the language professionally.\nYou'll also build a projects that you can show off to any potential employer. Including:\nBuild Web, mobile and Desktop Applications using Flet framework\nLearn and Understanding Object Oriented Programming with Python\nAutomate Sending Emails using SMTPlib\nSolve Python CodeWars Challenges and get familiar with Coding interviews\nand much much more!\nSign up today, and look forward to:\nVideo Lectures\nCode Challenges and Exercises\nFully Fledged Projects\nDownloads\n\n\n\"With consistency, everyone can be a pro\"\nJoin me today and learn Python Programming to its fullest with hands on experience.",
      "target_audience": [
        "If you want to learn to code from scratch through building fun and useful projects, then take this course.",
        "If you are a complete beginner then this course will be everything you need to become a Python professional",
        "If you are a seasoned programmer wanting to switch to Python then this is the quickest way. Learn through coding projects."
      ]
    },
    {
      "title": "Hadoop MAPREDUCE in Depth | A Real-Time course on Mapreduce",
      "url": "https://www.udemy.com/course/hadoop-mapreduce-in-depth-a-real-time-course-on-mapreduce/",
      "bio": "Learn Hadoop Mapreduce from Scratch to Real-time Implementation using Hands-On Mapreduce examples.",
      "objectives": [
        "Every concept that comes under Hadoop Mapreduce framework from SCRATCH to LIVE PROJECT Implementation.",
        "Learn to write Mapreduce Codes in a Real-Time working environment.",
        "Understand the working of each and every component of Hadoop Mapreduce with Hands-On examples.",
        "Override the default implementation of Mapreduce 's Java classes and code it according to custom requirements.",
        "ADVANCE level Mapreduce concepts which are not easily available online.",
        "Real-time Mapreduce Case studies asked in Hadoop Interviews with its proper Mapreduce code run on cluster."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Mapreduce",
          "Traditional approach VS Hadoop approach",
          "Basic Flow of a Mapreduce program",
          "Mapreduce Program flow with Example",
          "Types of File Input formats in Mapreduce"
        ],
        "Default structure of various classes in Mapreduce": [
          "Mapper Class structure",
          "Reducer Class structure",
          "Driver Class structure",
          "Partitioner Class structure",
          "Shuffling, Sorting & Partitioning in Detail",
          "Hadoop Installation"
        ],
        "Word Count program in Mapreduce": [
          "What are Writables in Hadoop",
          "Word Count program in Mapreduce",
          "Word count program Code run",
          "What is Combiner in Hadoop Mapreduce",
          "Implementing Combiner in WordCount Mapreduce program"
        ],
        "Mapreduce programs - Examples": [
          "Calculate Sum of Even Odd numbers",
          "Calculate success rate of Facebook ads",
          "Writables - Create our own datatype in Mapreduce",
          "Fraud customers of an Ecommerce website - part 1",
          "Fraud customers of an Ecommerce website - part 2",
          "Assignment 1"
        ],
        "Distributed Cache Implementation": [
          "What is Distributed Cache and it's uses in Mapreduce framework",
          "Using Distributed cache calculate average salary"
        ],
        "Dealing with Input Split Class": [
          "What are Input splits in Hadoop",
          "Input split Class in Mapreduce"
        ],
        "Multiple Inputs & Output class": [
          "Multiple Inputs class and its Implementation",
          "Multiple Output class and its Implementation",
          "Quiz 1"
        ],
        "Joins in Mapreduce": [
          "Conceptual code flow of Joins in Mapreduce",
          "Join 2 files in a Mapreduce program",
          "Performing Outer Join in Mapreduce",
          "What is Map Join and Where it is Used",
          "Implementing Map Join in a Mapreduce program"
        ],
        "Counters in Mapreduce": [
          "What are Counters in Hadoop",
          "Job Counters",
          "Create our own Custom Counters in Mapreduce program",
          "Assignment 2"
        ],
        "Creating Custom Input Formatter": [
          "File Input format Class's default structure in Mapreduce",
          "Custom Input Formatter Need & Problem statement",
          "Create custom Input Format class to read XML file | Part 1",
          "Create custom Input Format class to read XML file | Part 2",
          "Create custom Input Format class to read XML file | Part 3",
          "Quiz 2"
        ]
      },
      "requirements": [
        "Basic knowledge of HDFS.",
        "Basic knowledge of Core Java.",
        "Rest everything about Hadoop Mapreduce is covered in this course with practicals."
      ],
      "description": "Mapreduce framework is the closest to Hadoop in terms of processing Big data. It is considered as atomic processing unit in Hadoop and that is why it is never going to be obsolete.\nKnowing only basics of MapReduce (Mapper, Reducer etc) is not at all sufficient to work in any Real-time Hadoop Mapreduce project of companies. These basics are just tip of the iceberg in Mapreduce programming. Real-time Mapreduce is way more than that. In Live Big data projects we have to override lot many default implementations of Mapreduce framework to make them work according to our requirements.\nThis course is an answer to the question \"What concepts of Hadoop Mapreduce are used in Live Big data projects and How to implement them in a program ?\" To answer this, every Mapreduce concept in the course is explained practically via a Mapreduce program.\nEvery lecture in this course is explained in 2 Steps.\nStep 1 : Theory - Explanation of a Hadoop component\nStep 2 : Practicals - How to implement that component in a MapReduce program.\nThe overall inclusions and benefits of this course:\nComplete Hadoop Mapreduce explained from scratch to Real-Time implementation.\nEach and Every Hadoop concept is backed by a HANDS-ON Mapreduce code.\nAdvance level Mapreduce concepts which are even not available on Internet.\nFor non Java backgrounder's help, All Mapreduce Java codes are explained line by line in such a way that even a non technical person can understand.\nMapreduce codes and Datasets used in lectures are attached for your convenience.\nIncludes multiple sections on 'Case Studies' that are asked generally in Hadoop Interviews.",
      "target_audience": [
        "Students who want to learn Hadoop Mapreduce from SCRATCH to its Live Project Implementation.",
        "Techies who have only basic knowledge of Mapreduce and looking for in-depth knowledge to work in Real-time projects.",
        "Data engineers"
      ]
    },
    {
      "title": "Python Programming for Beginners: Learn Python from Scratch",
      "url": "https://www.udemy.com/course/python-programming-for-beginners-learn-python-from-scratch/",
      "bio": "Python Programming for Beginners: Learn Python from Scratch (Master Data Analysis, Step-by-Step with Practice Exercises)",
      "objectives": [
        "Setting Up Your Python Environment",
        "Foundational Python Concepts",
        "Control Flow Statements",
        "Functions",
        "Data Structures:",
        "Introduction to Object-Oriented Programming",
        "Practice and Problem-Solving",
        "Real-World Projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Python",
          "Getting Started and Installation",
          "Basic Code and Drawing a Shape",
          "Variable",
          "Working With String",
          "Working With Numbers",
          "Input From User",
          "Building a Basic Calculator",
          "Creating a Madlibs Game",
          "Lists",
          "List Functions",
          "Tuples",
          "Functions",
          "Return Statements",
          "If Statement",
          "If Statements and Comparison",
          "Better Calculator",
          "Dictionaries",
          "While Loop",
          "Building a Guessing Game",
          "For Loop",
          "Exponent Function",
          "2D List and Nested Loops",
          "Building a Translator",
          "Class Project 1",
          "Class Project 2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Unleash Your Coding Potential with Python Programming for Beginners: Learn Python from Scratch\nAre you ready to:\nJoin the world of programming and unlock exciting opportunities?\nLearn Python, one of the most in-demand programming languages used by professionals across industries?\nBuild websites, automate tasks, and analyze data - even if you have no prior coding experience?\nThis comprehensive Python programming course for beginners is designed to take you from absolute zero to coding confidence.\nHere's what you'll learn:\nThe fundamentals of Python programming: Grasp the core concepts of variables, data types, operators, control flow, and functions.\nStep-by-step guidance: Follow along with clear explanations, practical demonstrations, and hands-on exercises.\nPractice makes perfect: Solidify your understanding with engaging coding challenges and quizzes throughout the course.\nBuild real-world projects: Apply your newfound skills to create projects like websites, games, or data analysis scripts.\nThis course is perfect for:\nAnyone interested in learning Python for web development, data analysis, automation, or general programming.\nBy the end of this course, you'll be equipped with the essential Python programming knowledge to:\nConfidently write Python code.\nSolve coding problems effectively.\nApply Python to various tasks and projects.\nPursue further learning in Python and other programming languages.\nEnroll today and start your Python programming journey!",
      "target_audience": [
        "Anyone interested in learning Python for web development, data analysis, automation, or general programming."
      ]
    },
    {
      "title": "Python Numpy Data Analysis for Data Scientist | Roll Plays",
      "url": "https://www.udemy.com/course/python-numpy-data-analysis-for-data-scientist-ai-ml-dl/",
      "bio": "Roll Play | Unlock the Power of Data Analysis with Python Numpy for Data Science, AI, Machine Learning & Deep Learning",
      "objectives": [
        "Understand the basics of Numpy and how to set up the Numpy environment.",
        "Create and access arrays, use indexing and slicing, and work with arrays of different dimensions.",
        "Understand the ndarray object, data types, and conversion between data types.",
        "Work with array attributes and different ways of creating arrays from existing data or ranges functions.",
        "Apply broadcasting, iteration, and updating array values.",
        "Perform array manipulation, joining, transposing, and splitting operations.",
        "Apply string, mathematical, and trigonometric functions.",
        "Perform arithmetic operations, including add, subtract, multiply, divide, floor_divide, power, mod, remainder, reciprocal, negative, and abs.",
        "Apply statistical functions and counting functions.",
        "Sort arrays using different methods, including sort(), argsort(), lexsort(), searchsorted(), partition(), and argpartition().",
        "Understand the different types of array copies, including view, copy, \"no copy\", shallow copy, and deep copy."
      ],
      "course_content": {
        "Course Overview": [
          "Course content",
          "A to Z Course Completion Guide",
          "Instructor Guidelines for students"
        ],
        "Course Last Update : 22 September 2025": [
          "New Update"
        ],
        "Prerequisite Lectures before Python Numpy": [
          "Very Important",
          "Python Introduction with Explanation",
          "Python Downloading and Installation",
          "Variable in Python with Examples",
          "List-Data Structure in Python",
          "Dictionary-Data Structure in Python",
          "elif Decision Making Structure in Python Couse",
          "Function in Python with Examples",
          "For Loop in Python with Examples"
        ],
        "Python Numpy Chapter 01": [
          "01 Numpy Chapter 01 Introduction",
          "02 Introduction to Numpy",
          "03 Numpy Environment Setup",
          "04 Numpy Programming Example",
          "A to Z | Numpy first program",
          "Assignment 01",
          "Numpy Fundamental Roll Play"
        ],
        "Python Numpy Chapter 02": [
          "05 Numpy Chapter 02 Introduction",
          "06 Creating Array in Numpy",
          "07 Indexing and Slicing with Array",
          "08 ndarray Object in Numpy",
          "09 Data Types in Numpy Part 01",
          "10 Data Types in Numpy Part02",
          "11 Data Types Conversion in Numpy"
        ],
        "Python Numpy Chapter 03": [
          "12 Numpy Chapter 03 Introduction",
          "13 Array Attributes",
          "14 Array vs ndarray Attributes",
          "15 Array Methods",
          "16 Empty Array Creation",
          "17 Zeros Array Creation",
          "18 Ones Creation Array",
          "19 Asarray Method in Numpy"
        ],
        "Numpy Mini Projects": [
          "Project #1",
          "Project #2",
          "Project #3",
          "Project #4",
          "Project #5"
        ],
        "Python Numpy Chapter 04": [
          "00 Numpy Chapter 04 Introduction",
          "01 Broadcasting and its Rule 01",
          "02 Broadcasting and its 02 and 03 Rules",
          "03 Frombuffer method in Array",
          "04 Fromiter method in Numpy",
          "05 Arange method in Numpy",
          "06 Linespace and logspace in Numpy",
          "07 For Loop Interations with Array",
          "08 nditer in Numpy",
          "09 ndenumerate in Numpy",
          "10 Fill Method for Updating Array",
          "11 Indexing and Slicing method to update",
          "12 Put Method to Update",
          "13 Boolean Indexing Method to Update"
        ],
        "Python Numpy Chapter 05": [
          "01 Numpy Chapter 05 Introduction",
          "02 Reshape in Array Manipulation",
          "03 Flat in Array Manipulation",
          "04 Flatten in Array Manipulation",
          "05 ravel Method in Array Manipulation",
          "06 concatenate in Array Manipulation",
          "07 Transpose Operation in Numpy",
          "08 Split in Numpy Array",
          "09 More Operations on Numpy Array"
        ],
        "Python Numpy Chapter 06": [
          "01 Numpy Chapter 06 Outlines",
          "02 Bitwise AND Operator working",
          "03 Bitwise OR Operator working",
          "04 Bitwise NOT Operator working.wmv",
          "05 Bitwise Left and Right Shift"
        ]
      },
      "requirements": [
        "You should have beginner level experince with Python programming for Numpy",
        "You did not need to buy extra software or course for this Numpy course",
        "If you have basic knowledge of Matrix, it is good for you"
      ],
      "description": "Introduction to Python Numpy Data Analysis for Data Scientist | AI | ML | DL | Roll Play Included\nPython is the language of the future — master it and the future will open for you.\nIf you want a practical, career-focused path into data science, machine learning, or deep learning, this course puts you on that path. Learn Python programming fundamentals and then go deep into the NumPy ecosystem — the backbone of scientific computing and the NumPy stack (NumPy, SciPy, Pandas, Matplotlib) used by data professionals worldwide.\nWhether you’re an absolute beginner or upgrading your skills, this course helps you with mastering Python, Pandas, NumPy for absolute beginners and prepares you for real-world data tasks.\nWhy enroll?\nThis course is 100% hands-on and designed to change how you think about data: from confusion to clarity, from copy-paste to algorithmic thinking. If you’ve ever admired instructors like Angela Yu or followed practical playlists by Lazy Programmer, you’ll appreciate the same practice-first approach here — focused on projects, real datasets, and skills that employers seek.\nStop “learning” and start doing. By the end you’ll not only know python numpy pandas matplotlib workflows — you’ll be able to apply them to real problems, prepare for interviews, and build portfolio projects that matter.\nWhat this course covers\nYou’ll get a complete, practical guide through the NumPy-driven data analysis pipeline and beyond:\nIntroduction to NumPy & Python environment setup — start coding fast.\nCreating & accessing arrays — indexing, slicing, and working with ND arrays (ndarray).\nArray attributes & data types — conversion, dtype management, memory-efficient arrays.\nBroadcasting & iteration — vectorized operations that speed up your code.\nArray manipulation — reshape, join, split, transpose, stack and unstack arrays.\nNumPy binary & bitwise ops — bitwise_and, bitwise_or, invert, left/right shift.\nMathematical & trigonometric functions — sin, cos, exp, log, power, reciprocal.\nArithmetic, statistical & counting functions — sum, mean, median, std, unique, bincount.\nSorting & searching — sort, argsort, lexsort, searchsorted, partition, argpartition.\nViews vs copies — understand memory management in NumPy (critical for performance).\nHands-on pipelines that tie NumPy → Pandas → Matplotlib for data cleaning, analysis and visualization.\nIntro to SciPy & advanced workflows — how NumPy + SciPy + Matplotlib + Pandas (the full NumPy stack) powers ML and research.\nKeywords naturally included throughout the course: python, python programming, numpy, pandas, numpy stack, python numpy pandas matplotlib, numpy, scipy, matplotlib, master python with numpy for data science & machine learning.\nReal skills you’ll gain\nClean and preprocess messy datasets with Pandas using fast NumPy operations.\nRun numerical computations and vectorized algorithms for ML pipelines.\nVisualize data confidently with Matplotlib and prepare charts for reports.\nBuild a portfolio of data analysis projects (finance, social data, scraping, business KPIs).\nLay the foundation for advanced ML / DL work (TensorFlow/PyTorch expect NumPy-style data).\nWho this course is for\nAbsolute beginners who want to master Python with NumPy for data science & machine learning.\nDevelopers who know some Python and want to move into data science.\nStudents and professionals preparing for interviews or portfolio projects.\nAnyone aiming to learn the NumPy stack (NumPy, SciPy, Pandas, Matplotlib) in practical depth.\nCourse format & outcomes\nPractice-first lessons with code examples and real datasets.\nClear explanations of algorithms and step-by-step notebooks.\nDownloadable source code and slides for offline study.\nBy course end: confident use of python numpy pandas matplotlib workflows and readiness for ML/AI projects.\nFinal nudge — take action now\nIf you want career-ready Python skills for data science, AI, ML, or DL, this course is your practical roadmap. Join thousands of learners who chose skill over theory — and turned their knowledge into income, projects, and job offers.\nEnroll today to start mastering Python, Pandas, and NumPy — your data science future starts with a single lesson.\nSee you inside —\nFaisal Zamir",
      "target_audience": [
        "Data Scientists who need to analyze large data sets and want to use Python's powerful tools for this purpose.",
        "AI and Machine Learning engineers who want to work with numerical data using Python and Numpy.",
        "Deep Learning enthusiasts who want to understand the fundamentals of Numpy arrays and use it to manipulate and process image and audio data.",
        "Researchers who want to use Python and Numpy for scientific computing and numerical analysis.",
        "Programmers who want to learn a powerful and widely-used library for numerical computing with Python.",
        "Students who are interested in pursuing a career in Data Science or related fields and want to learn the basics of Numpy for data analysis."
      ]
    },
    {
      "title": "The Design and Analysis of Algorithm Masterclass",
      "url": "https://www.udemy.com/course/design-and-analysis-of-algorithm-/",
      "bio": "Algorithm & Data Structures will help you to Crack Coding Interviews (C/C++Java/Python) Learn Algorithm Data Structures",
      "objectives": [
        "Enhance Your Logical Thinking Abilities",
        "Learn various Popular Data Structures and their Algorithms.",
        "Knowing Algorithm Well helps you to Solve the Problem in a Better Way.",
        "Learn Big O, Big Omega Big Theta Notation",
        "Linear Search, Recurrence Relations",
        "Factorial, Tail Recursion",
        "Towers of Hanoi",
        "Merge Sort, Quick Sort, Heap Sort",
        "Knapsack Problem, Minimum Spanning Tree: Kruskal's Algorithm, Minimum Spanning Tree: Prim's Algorithm",
        "Huffman's Codes - Building Huffman Tree, Dijkstra's Algorithm,Bellman Ford Algorithm, Floyd Warshall Algorithm",
        "Brute Force Matcher",
        "Pattern Pre-Processing",
        "The Knuth Morris Pratt Algorithm",
        "n-Queens Algorithm",
        "Graph Coloring, Hamiltonian Cycles",
        "0/1 Knapsack Problem",
        "15 Puzzle Problem",
        "NP Completeness and Approximation Algorithms",
        "Will get to know Real time uses of all Algorithm",
        "Get the answer of your \"WHY\" part behind use of every Algorithm"
      ],
      "course_content": {
        "Introduction & Overview": [
          "About The Instructor",
          "Objective of the Course",
          "Prerequisite to take the Course",
          "Course Curriculum Overview"
        ],
        "Introduction to Algorithms": [
          "1.Introduction to Algorithms",
          "Quiz #1"
        ],
        "Asymptotic Notations": [
          "2.Big O, Big Omega and Big Theta",
          "Problems on Big O",
          "Algorithmic Complexity with Asymptotic Notations",
          "Quiz : Asymptotic Notation"
        ],
        "Recursion": [
          "Linear Search, Greatest Common Divisor",
          "Factorial, Tail Recursion",
          "Recurrence Relations, Substitution Method",
          "Towers of Hanoi",
          "Quiz : Recursion"
        ],
        "Divide and Conquer": [
          "Binary Search",
          "Master Method",
          "Tiling a Defective Chessboard",
          "Merge Sort Part #1",
          "Merge Sort Part #2",
          "Quick Sort",
          "Quiz : Divide and Conquer"
        ],
        "Dynamic Programming": [
          "Fibonacci Numbers",
          "Rod Cutting",
          "Matrix Chain Multiplication",
          "Longest Common Sub Sequence",
          "Quiz : Dynamic Programming"
        ],
        "Greedy Algorithms": [
          "Knapsack Problem",
          "Minimum Spanning Tree: Kruskal's Algorithm",
          "Disjoint Sets and Kruskal's Algorithm",
          "Job Sequencing with Deadlines",
          "Heap",
          "Heap Sort",
          "Priority Queue",
          "Minimum Spanning Tree: Prim's Algorithm",
          "Huffman's Codes - Building Huffman Tree",
          "Huffman's Codes - Printing Huffman Codes",
          "Quiz : Greedy Algorithm"
        ],
        "Shortest Path Algorithms": [
          "Dijkstra's Algorithm Part #1",
          "Dijkstra's Algorithm Part #2",
          "Dijkstra's Algorithm Part #3",
          "Bellman Ford Algorithm",
          "Topological Sort",
          "Shortest Path by Topological Sort",
          "Floyd Warshall Algorithm",
          "Quiz : Shortest Path Algorithm"
        ],
        "The Problem of String Matching": [
          "Brute Force Matcher",
          "String Matching with Finite Automaton",
          "Pattern Pre-Processing",
          "The Knuth Morris Pratt Algorithm",
          "Quiz : The Problem of String Matching"
        ],
        "Backtracking": [
          "Rat in Maze",
          "n-Queens Algorithm Part #1",
          "n-Queens Algorithm Part #2",
          "Graph Coloring Part #1",
          "Graph Coloring Part #2",
          "Hamiltonian Cycles I",
          "Hamiltonian Cycles II",
          "Subset Sum",
          "Quiz : Backtracking"
        ]
      },
      "requirements": [
        "Idea of Programming (Good To Have - NOT Mandatory)",
        "Some Basic Mathematics (Good To Have - NOT Mandatory)",
        "Basic Concepts of Data Structures (Good To Have - NOT Mandatory)",
        "Little Familiarity with Graph Theory (Good To Have - NOT Mandatory)"
      ],
      "description": "The algorithm is used everywhere. People Don't know how Complex algorithms they are executing when doing there day to day tasks like Riding a Bi-Cycle, Travelling from one place to another even Watering Gardens.\nIf you are Coder then the Knowledge of algorithms is Very much important for you. The knowledge of Algorithm teach you How to Think to solve a Problem?\nThe algorithm is the concept that differentiates one average software engineer and one better software engineer. In our daily life in the industry, we used different kinds of algorithms to make the system faster, better, and more efficient.\n\n\nBut the problem is 90% of the freshers and graduates don’t have the basic knowledge of algorithms. That is the reason we make this Design and Analysis of algorithm Masterclass.\n\n\nWhat you are Going to Learn?\nAsymptotic Notations, Recursion, Divide and Conquer, Dynamic Programming, Dijkstra's, Bellman-Ford, Floyd Warshall Algorithm, Kruskal's Algorithm, Knapsack Problem, String Matching with Finite Automaton, Heap sort, Huffman Codes, n-Queens Algorithm, Rat in Maze, 0/1 Knapsack Problem, 15 Puzzle Problem, NP-Completeness, Approximation Algorithms\n\n\n12 hours of HD content [Updated on 2022 December]\nAssignment [Updated]\nStudy Note [Updated]\nCertificate\nEvery Single Day we will check your questions and solve your queries.\nTopics covered :\nEnhance Your Logical Thinking Abilities\nLearn various Popular Data Structures and their Algorithms.\nKnowing Algorithm Well helps you to Solve the Problem in a Better Way.\nLearn Big O, Big Omega Big Theta Notation\nLinear Search, Recurrence Relations\nFactorial, Tail Recursion\nTowers of Hanoi\nMerge Sort, Quick Sort, Heap Sort\nKnapsack Problem, Minimum Spanning Tree: Kruskal's Algorithm, Minimum Spanning Tree: Prim's Algorithm\nHuffman's Codes - Building Huffman Tree, Dijkstra's Algorithm, Bellman-Ford Algorithm, Floyd Warshall Algorithm\nBrute Force Matcher\nPattern Pre-Processing\nThe Knuth Morris Pratt Algorithm\nn-Queens Algorithm\nGraph Coloring, Hamiltonian Cycles\n0/1 Knapsack Problem\n15 Puzzle Problem\nNP-Completeness and Approximation Algorithms\nWill get to know Real-time uses of all Algorithm\nGet the answer of your \"WHY\" part behind the use of every Algorithm",
      "target_audience": [
        "Computer science students",
        "Software working professionals who wants to learn better way to Solve a Problem"
      ]
    },
    {
      "title": "SAP MDG - Data Replication Framework (DRF) for beginners",
      "url": "https://www.udemy.com/course/sap-mdg-data-replication-framework/",
      "bio": "Best Course to learn SAP DRF for beginners with hands on example",
      "objectives": [
        "In this course you'll learn about Data Replication Framework in SAP MDG.",
        "I'll be showing you an example in a demo system to replicate data from SAP MDG to SAP ECC system using ALE / IDOC's",
        "In this process, you'll also be learning about Editions in MDG Finance.",
        "How you can use Editions to do the data replication."
      ],
      "course_content": {
        "Introduction": [
          "Basics of SAP Master Data Governance",
          "What you will learn in this course?"
        ],
        "Data Replication Framework - Introduction": [
          "What is Data Replication Framework (DRF) ?"
        ],
        "DRF - Demo": [
          "DRF Configuration for IDOC - Demo",
          "Transfer Data using Editions in MDG Finance"
        ],
        "Testing DRF": [
          "Testing DRF"
        ],
        "Practice": [
          "Create a New MATMAS IDOC connection between MDG and ECC with a new Z field"
        ]
      },
      "requirements": [
        "It'll be good if you have some knowledge in SAP ALE IDOC's.",
        "It's good to have some knowledge in SAP ABAP.",
        "I have tried to keep this course as simple as possible so that even beginners in SAP / SAP functional consultants are able to understand DRF."
      ],
      "description": "In this course you will learn about SAP DRF, prerequisites for configuring DRF, DRF Configuration using IDOC's and Editions in MDG Finance. For all the above concepts you'll be shown practical demo. I have not covered interconnecting systems using Services (SOA Manager), RFC's using DRF in this course but, I'll be giving a brief overview of them while teaching replication using IDOC's.\nThis course is intended for beginners in SAP DRF and will be useful for SAP Technical and functional consultants who would like to learn / configure DRF in their systems. I have tried to make it as simple as possible so that even beginners are able to understand it. It's good to have some knowledge in configuring ALE IDOC's in SAP before taking this course.",
      "target_audience": [
        "This course will be useful for anyone who would like to understand how DRF works in SAP MDG.",
        "This will be very useful for SAP technical consultants who have idea in IDOC's and who would like to learn how to integrate it in DRF.",
        "This will be useful for SAP functional consultants as well in order to understand how to configure MDG for DRF - to connect MDG system to various other systems in the landscape.",
        "I have shown in this course about how to configure DRF to work with IDOC's. However, I haven't covered how to connect DRF using SOA Manager as it was difficult to find a demo server for SOA manager.."
      ]
    },
    {
      "title": "Hands-On Systems Programming with Rust",
      "url": "https://www.udemy.com/course/hands-on-systems-programming-with-rust/",
      "bio": "Take advantage of Rust to ensure safety and concurrency",
      "objectives": [
        "Explore Rust's package registry for discovering and sharing code",
        "Use multithreading to unlock the power of multiple cores",
        "Get to know data-flow rate and speed through a pipeline",
        "Display time-based statistics using stderr",
        "Build your own middleware project to control the flow of data between two processes",
        "Best practices and techniques to set up your project for success",
        "Test and publish your own project on crates .io"
      ],
      "course_content": {},
      "requirements": [
        "Prior knowledge of basic programming concepts is required. A working knowledge of Rust is assumed."
      ],
      "description": "Scripting languages will provide safety, but not concurrency and speed, while traditional systems programming languages such as C and C++ will definitely give you speed and some concurrency, but forget about safety! If you need safety, concurrency, and speed, then Rust is the only viable option.\nIn this course, you will learn how Rust guarantees memory and thread safety at compile-time, yet uses zero-cost abstractions without the runtime overhead of a garbage collector. You'll learn how to monitor the flow of data through a pipeline by building your own middleware utility. You'll learn how to utilize I/O to interact with the command line, work with standard library mpsc channels to perform data flows, and create an ergonomic timer for your project. You'll apply key concepts in every section while creating your own middleware tool in Rust along the way.\nBy the end of this practical course, you will feel comfortable designing safe, consistent, parallel, and high-performance applications in Rust using systems programming.\nThis course should appeal to intermediate Linux and general Unix programmers, network programmers, and C/C++ programmers interested in learning different approaches to concurrency. Prior knowledge of basic programming concepts is required, and a working knowledge of Rust is assumed.\nAbout the Author\nNathan Stocks has spent the last 20 years working in software development, mostly in the field of backend infrastructure. He fell in love with Rust in 2016 and began teaching it in 2017. For the past several years, he has focused on systems-level programming. He maintained the AVbin audio library (written in C) from 2011-2013. He has had tons of fun learning, using, and teaching Rust at conferences and online. He also loves Python and PostgreSQL, and still occasionally suffers from nightmares about C and C++.\nHe currently works at GitHub, managing the Git Storage team, and spends his nights in pursuit of someday creating a successful indie game in Rust.",
      "target_audience": [
        "If you are already a software developer and want to learn systems programming in Rust practically and quickly, this course is for you!",
        "This course will greatly appeal to intermediate Linux and general Unix programmers, network programmers, and C / C++ programmers interested in learning different approaches to concurrency."
      ]
    },
    {
      "title": "300+ Python Exercises (Simple, Intermediate & Complex)",
      "url": "https://www.udemy.com/course/300-python-exercises-simple-and-complex-with-algorithm/",
      "bio": "Python Programming | 300+ Python Exercises to solve Exercises (Simple, Intermediate & Complex) with Source Code.",
      "objectives": [
        "After this course, your Python Programming Skill will Improve.",
        "You will get in this course Simple, Intermediate and Complex Tasks with proper Algorithm and Support",
        "After this course you will be able to Learn Properly as Artificial intelligence, Data Science, Web Development, Data Analytics etc.",
        "This course will CLEAR 100% your weak Python Concepts",
        "You will get Solution for each Problem with its Algorithm, PPT Notes, Special Support and Assignment",
        "Ability to solve complex programming problems using Python.",
        "Understanding of Python data structures (List, Tuple, Dictionary and SET)",
        "Proficiency in Python syntax and control structures.",
        "Ability to write efficient and optimized code in Python.",
        "Understanding of object-oriented programming concepts in Python.",
        "After this course, Ability to develop Python-based applications, including web applications and Desktop applications",
        "Understanding of various Python libraries and frameworks.",
        "Ability to design and implement Python-based data structures.",
        "Familiarity with Python best practices and coding standards.",
        "Ability to work with Python libraries for data analysis like numpy, pandas etc",
        "Understanding of Python security practices and techniques.",
        "Ability to write clean, efficient, and maintainable Python code."
      ],
      "course_content": {
        "Course Introduction": [
          "Discover the Power of 300+ Python Exercises",
          "Very Important",
          "Course Content",
          "Instructor Guidelines",
          "Complete Course Resources (300+ Exercises source code)"
        ],
        "Last Course Update 02 October, 2025": [
          "New Updates"
        ],
        "Learn Fundamentals of Python Programming": [
          "Python Introduction with Explanation",
          "Python Downloading and Installation",
          "Introduction IDE in Python",
          "Variable in Python with Examples",
          "Declaration and Initialization of Variable in Python",
          "Rules to Declare a Variable in Python",
          "Data Type in Python",
          "Mutable Immutable Sequence and Non Sequence Data Type",
          "Roll Play | From Setup to Data Types",
          "List-Data Structure in Python",
          "Tuple-Data Structure in Python",
          "Dictionary-Data Structure in Python",
          "SET Data Structure in Python",
          "Roll Play | Mastering Python Data Structures",
          "Python Decision making Structure with Examples",
          "Python if Statement with Examples",
          "Python if else Statement with Examples",
          "Python nested if Statement with Examples",
          "elif Decision Making Structure in Python Couse",
          "Function in Python with Examples",
          "For Loop in Python with Examples",
          "While Loop in Python with Examples",
          "Roll Play | Building Logic in Python"
        ],
        "Simple Task with Algorithm(100+)": [
          "Problem 1 and its Solution",
          "Problem 2 and its Solution",
          "Coding Practice 01",
          "Problem 3 and its Solution",
          "Problem 4 and its Solution",
          "Problem 5 and its Solution",
          "Coding Practice 02",
          "Problem 6 and its Solution",
          "Problem 7 and its Solution",
          "Problem 8 and its Solution",
          "Problem 9 and its Solution",
          "Problem 10 and its Solution",
          "Coding Practice 03",
          "Problem 11 and its Solution",
          "Problem 12 and its Solution",
          "Problem 13 and its Solution",
          "Problem 14 and its Solution",
          "Problem 15 and its Solution",
          "Problem 16 and its Solution",
          "Problem 17 and its Solution",
          "Problem 18 and its Solution",
          "Problem 19 and its Solution",
          "Problem 20 and its Solution",
          "Problem 21 and its Solution",
          "Problem 22 and its Solution",
          "Problem 23 and its Solution",
          "Question 02 for practice",
          "Problem 24 and its Solution",
          "Problem 25 and its Solution",
          "Problem 26 and its Solution",
          "Problem 27 and its Solution",
          "Problem 28 and its Solution",
          "Problem 29 and its Solution",
          "Problem 30 and its Solution",
          "Problem 31 and its Solution",
          "Problem 32 and its Solution",
          "Problem 33 and its Solution",
          "Problem 34 and its Solution",
          "Problem 35 and its Solution",
          "Problem 36 and its Solution",
          "Problem 37 and its Solution",
          "Problem 38 and its Solution",
          "Problem 39 and its Solution",
          "Problem 40 and its Solution",
          "Problem 41 and its Solution",
          "Problem 42 and its Solution",
          "Problem 43 and its Solution",
          "Problem 44 and its Solution",
          "Problem 45 and its Solution",
          "Problem 46 and its Solution",
          "Problem 47 and its Solution",
          "Problem 48 and its Solution",
          "Problem 49 and its Solution",
          "Problem 50 and its Solution",
          "Problem 51 and its Solution",
          "Problem 52 and its Solution",
          "Problem 53 and its Solution",
          "Problem 54 and its Solution",
          "Problem 55 and its Solution",
          "Problem 56 and its Solution",
          "Problem 57 and its Solution",
          "Problem 58 and its Solution",
          "Problem 59 and its Solution",
          "Problem 60 and its Solution",
          "Problem 61 and its Solution",
          "Problem 62 and its Solution",
          "Problem 63 and its Solution",
          "Problem 64 and its Solution",
          "Problem 65 and its Solution",
          "Problem 66 and its Solution",
          "Problem 67 and its Solution",
          "Problem 68 and its Solution",
          "Problem 69 and its Solution",
          "Problem 70 and its Solution",
          "Problem 71 and its Solution",
          "Problem 72 and its Solution",
          "Problem 73 and its Solution",
          "Problem 74 and its Solution",
          "Problem 75 and its Solution",
          "Problem 76 and its Solution",
          "Problem 77 and its Solution",
          "Problem 78 and its Solution",
          "Problem 79 and its Solution",
          "Problem 80 and its Solution",
          "Problem 81 and its Solution",
          "Problem 82 and its Solution",
          "Problem 83 and its Solution",
          "Problem 84 and its Solution",
          "Problem 85 and its Solution",
          "Problem 86 and its Solution",
          "Problem 87 and its Solution",
          "Problem 88 and its Solution",
          "Problem 89 and its Solution",
          "Problem 90 and its Solution",
          "Problem 91 and its Solution",
          "Problem 92 and its Solution",
          "Problem 93 and its Solution",
          "Problem 94 and its Solution",
          "Problem 95 and its Solution",
          "Problem 96 and its Solution",
          "Problem 97 and its Solution",
          "Problem 98 and Its Solution",
          "Problem 99 and its Solution",
          "Problem 100 and its Solution",
          "Problem 101 and its Solution",
          "Problem 102 and its Solution",
          "300+ Problems Article"
        ],
        "10 Mini Projects Ideas : Beginners": [
          "10 Complete Projects Descriptions"
        ],
        "Intermediate Task with Algorithm 100+": [
          "Intermediate Problem1 with Solution",
          "Question 03 for practice",
          "Intermediate Problem2 with Solution",
          "Intermediate Problem3 with Solution",
          "Intermediate Problem4 with Solution",
          "Intermediate Problem 5 with Solution",
          "Intermediate Problem 6 with Solution",
          "Question 04 for practice",
          "Intermediate Problem 7 with Solution",
          "Intermediate Problem 8 with Solution",
          "Intermediate Problem 9 with Solution",
          "Intermediate Problem 10 with Solution",
          "Intermediate Problem 11 with Solution",
          "Intermediate Problem 12 with Solution",
          "Intermediate Problem 13 with Solution",
          "Intermediate Problem 14 with Solution",
          "Intermediate Problem 15 with Solution",
          "Intermediate Problem 16 with Solution",
          "Intermediate Problem 17 with Solution",
          "Intermediate Problem 18 with Solution",
          "Intermediate Problem 19 with Solution",
          "Intermediate Problem 20 with Solution",
          "Intermediate Problem 21 with Solution",
          "Intermediate Problem 22 with Solution",
          "Intermediate Problem 23 with Solution",
          "Intermediate Problem 24 with Solution",
          "Intermediate Problem 25 with Solution",
          "Intermediate Problem 26 with Solution",
          "Intermediate Problem 27 with Solution",
          "Intermediate Problem 28with Solution",
          "Intermediate Problem 29 with Solution",
          "Intermediate Problem 30 with Solution",
          "Intermediate Problem 31 with Solution",
          "Intermediate Problem 32 with Solution",
          "Intermediate Problem 33 with Solution",
          "Intermediate Problem 34 with Solution",
          "Intermediate Problem 35 with Solution",
          "Intermediate Problem 36 with Solution",
          "Intermediate Problem 37 with Solution",
          "Intermediate Problem 38 with Solution",
          "Intermediate Problem 39 with Solution",
          "Intermediate Problem 40 with Solution",
          "Intermediate Problem 41 with Solution",
          "Intermediate Problem 42 with Solution",
          "Intermediate Problem 43 with Solution",
          "Intermediate Problem 44 with Solution",
          "Intermediate Problem 45 with Solution",
          "Intermediate Problem 46 with Solution",
          "Intermediate Problem 47 with Solution",
          "Intermediate Problem 48 with Solution",
          "Intermediate Problem 49 with Solution",
          "Intermediate Problem 50 with Solution",
          "Intermediate Problem 51 with Solution",
          "Intermediate Problem 52 with Solution",
          "Intermediate Problem 53 with Solution",
          "Intermediate Problem 54 with Solution",
          "Intermediate Problem 55 with Solution",
          "Intermediate Problem 56 with Solution",
          "Intermediate Problem 57 with Solution",
          "Intermediate Problem 58 with Solution",
          "Intermediate Problem 59 with Solution",
          "Intermediate Problem 60 with Solution",
          "Intermediate Problem 61 with Solution",
          "Intermediate Problem 62 with Solution",
          "Intermediate Problem 63 with Solution",
          "Intermediate Problem 64 with Solution",
          "Intermediate Problem 65 with Solution",
          "Intermediate Problem 66 with Solution",
          "Intermediate Problem 67 with Solution",
          "Intermediate Problem 68 with Solution",
          "Intermediate Problem 69 with Solution",
          "Intermediate Problem 70 with Solution",
          "Intermediate Problem 71 with Solution",
          "Intermediate Problem 72 with Solution",
          "Intermediate Problem 73 with Solution",
          "Intermediate Problem 74 with Solution",
          "Intermediate Problem 75 with Solution",
          "Intermediate Problem 76 with Solution",
          "Intermediate Problem 77 with Solution",
          "Intermediate Problem 78 with Solution",
          "Intermediate Problem 79 with Solution",
          "Intermediate Problem 80 with Solution",
          "Intermediate Problem 81 with Solution",
          "Intermediate Problem 82 with Solution",
          "Intermediate Problem 83 with Solution",
          "Intermediate Problem 84 with Solution",
          "Intermediate Problem 85 with Solution",
          "Intermediate Problem 86 with Solution",
          "Intermediate Problem 87 with Solution",
          "Intermediate Problem 88 with Solution",
          "Intermediate Problem 89 with Solution",
          "Intermediate Problem 90 with Solution",
          "Intermediate Problem 91 with Solution",
          "Intermediate Problem 92 with Solution",
          "Intermediate Problem 93 with Solution",
          "Intermediate Problem 94 with Solution",
          "Intermediate Problem 95 with Solution",
          "Intermediate Problem 96 with Solution",
          "Intermediate Problem 97 with Solution",
          "Intermediate Problem 98 with Solution",
          "Intermediate Problem 99 with Solution",
          "Intermediate Problem 100 with Solution",
          "Intermediate Problem 101 with Solution",
          "Important Problem Solving Ideas"
        ],
        "10 Intermediate-Level Python Mini Projects: Boost Your Programming Skills": [
          "Complete Projects Descriptions: Intermediate"
        ],
        "Learn Advanced Python Programming": [
          "Introduction to OOP",
          "Class Creation in Python",
          "Object in OOP Python",
          "Data Members and Member functions",
          "Self Keyword in OOP",
          "Constructor in OOP Python",
          "Destructor in OOP Python",
          "Inheritance in OOP Python",
          "Private Access Specefiers in OOP",
          "Protected and Public Access Specefiers in OOP",
          "Introduction to Regular Expression",
          "Regular Expression Working",
          "Special Sequences in Regex",
          "d and D Special Sequence in Regular Expression",
          "word Character in Regex",
          "White space char in Regex",
          "dot pattern in regex",
          "More special Sequence in regex",
          "word boundry in regex",
          "SET in regex",
          "findall function in regex",
          "search function in regex",
          "split function in regex",
          "sub function in regex"
        ],
        "Complex Problem and Their Solutions": [
          "Complex Problem 1 with Solution",
          "Question 05 for practice",
          "Complex Problem 2 with Solution",
          "Complex Problem 3 with Solution",
          "Complex Problem 4 with Solution",
          "Complex Problem 5 with Solution",
          "Complex Problem 6 with Solution",
          "Question 06 for practice",
          "Complex Problem 7 with Solution",
          "Complex Problem 8 with Solution",
          "Complex Problem 9 with Solution",
          "Complex Problem 10 with Solution",
          "Complex Problem 11 with Solution",
          "Complex Problem 12 with Solution",
          "Complex Problem 13 with Solution",
          "Complex Problem 14 with Solution",
          "Complex Problem 15 with Solution",
          "Complex Problem 16 with Solution",
          "Complex Problem 17 with Solution",
          "Complex Problem 18 with Solution",
          "Complex Problem 19 with Solution",
          "Complex Problem 20 with Solution",
          "Complex Problem 21 with Solution",
          "Complex Problem 22 with Solution",
          "Complex Problem 23 with Solution",
          "Complex Problem 24 with Solution",
          "Complex Problem 25 with Solution",
          "Complex Problem 26 with Solution",
          "Complex Problem 27 with Solution",
          "Complex Problem 28 with Solution",
          "Complex Problem 29 with Solution",
          "Complex Problem 30 with Solution",
          "Complex Problem 31 with Solution",
          "Complex Problem 32 with Solution",
          "Complex Problem 33 with Solution",
          "Complex Problem 34 with Solution",
          "Complex Problem 35 with Solution",
          "Complex Problem 36 with Solution",
          "Complex Problem 37 with Solution",
          "Complex Problem 38 with Solution",
          "Complex Problem 39 with Solution",
          "Complex Problem 40 with Solution",
          "Complex Problem 41 with Solution",
          "Complex Problem 42 with Solution",
          "Complex Problem 43 with Solution",
          "Complex Problem 44 with Solution",
          "Complex Problem 45 with Solution",
          "Complex Problem 46 with Solution",
          "Complex Problem 47 with Solution",
          "Complex Problem 48 with Solution",
          "Complex Problem 49 with Solution",
          "Complex Problem 50 with Solution",
          "Complex Problem 51 with Solution",
          "Complex Problem 52 with Solution",
          "Complex Problem 53 with Solution",
          "Complex Problem 54 with Solution",
          "Complex Problem 55 with Solution",
          "Complex Problem 56 with Solution",
          "Complex Problem 57 with Solution",
          "Complex Problem 58 with Solution",
          "Complex Problem 59 with Solution",
          "Complex Problem 60 with Solution",
          "Complex Problem 61 with Solution",
          "Complex Problem 62 with Solution",
          "Complex Problem 63 with Solution",
          "Complex Problem 64 with Solution",
          "Complex Problem 65 with Solution",
          "Complex Problem 66 with Solution",
          "Complex Problem 67 with Solution",
          "Complex Problem 68 with Solution",
          "Complex Problem 69 with Solution",
          "Complex Problem 70 with Solution",
          "Complex Problem 71 with Solution",
          "Complex Problem 72 with Solution",
          "Complex Problem 73 with Solution",
          "Complex Problem 74 with Solution",
          "Complex Problem 75 with Solution",
          "Complex Problem 76 with Solution",
          "Complex Problem 77 with Solution",
          "Complex Problem 78 with Solution",
          "Complex Problem 79with Solution",
          "Complex Problem 80 with Solution",
          "Complex Problem 81 with Solution",
          "Complex Problem 82 with Solution",
          "Complex Problem 83 with Solution",
          "Complex Problem 84 with Solution",
          "Complex Problem 85 with Solution",
          "Complex Problem 86 with Solution",
          "Complex Problem 87 with Solution",
          "Complex Problem 88 with Solution",
          "Complex Problem 89 with Solution",
          "Complex Problem 90 with Solution",
          "Complex Problem 91 with Solution",
          "Complex Problem 92 with Solution",
          "Complex Problem 93 with Solution",
          "Complex Problem 94 with Solution",
          "Complex Problem 95 with Solution",
          "Complex Problem 96 with Solution",
          "Complex Problem 97 with Solution",
          "Complex Problem 98 with Solution",
          "Complex Problem 99 with Solution",
          "Complex Problem 100 with Solution",
          "Complex Problem 101 with Solution",
          "What skill you need to work on Python Problem solving:"
        ],
        "10 Complex-Level Python Mini Projects: Build Real-World Solutions": [
          "New Practice for you",
          "Complete Projects Description"
        ]
      },
      "requirements": [
        "Generally, no need of prerequisites for this course but Basic knowledge of Python is best if you have!",
        "You did not need to buy any paid software for this course",
        "You did not need of any advance knowledge of IDE",
        "You did not need to have advanced Python Programming knowledge, you will learn in this course"
      ],
      "description": "300+ Python Exercises (Simple, Intermediate & Complex) | Complete Python Bootcamp\nHi, Welcome to the Python Mega Course – 300+ Python Exercises designed to take you from Python Zero to Hero! This course is your ultimate guide to mastering Python programming through hands-on practice and real-world examples. Whether you are a beginner or an experienced coder, this Complete Python Bootcamp will help you strengthen your skills with over 300 exercises across simple, intermediate, and complex levels.\nWhy You Should Take This Python Exercises Course\nIf you’re looking to improve your Python programming skills, gain hands-on experience, and prepare for a career in data science, machine learning, or web development, this course is perfect for you.\nThis Python Exercises course includes:\n100+ Simple Python Problems with Solutions\n100+ Intermediate Python Problems with Solutions\n100+ Complex Python Problems with Solutions\nEvery exercise comes with source code, algorithm, PPT notes, and assignments for additional practice. By following this course, you will gain confidence in solving problems, writing clean code, and applying Python in real-world scenarios.\nThis course is also inspired by the 100 Days of Python / 100 Days of Code approach, ensuring consistent daily practice to help you build a strong foundation and become a Python developer.\nWhat You Will Learn\nThrough these 300+ exercises, you will cover essential Python topics, including:\nPython Data Structures: lists, tuples, dictionaries, sets\nControl Structures: if/else statements, loops, functions\nObject-Oriented Programming: classes, inheritance, polymorphism\nFile Handling & Input/Output Operations\nException Handling\nRegular Expressions\nGUI Programming with Tkinter\nPython Libraries & Modules: NumPy, Pandas, and other key libraries\nWeb application relevant Python exercises\nBy the end of this course, you will have mastered Python programming from basic syntax to advanced concepts, making you ready for any professional project or technical interview.\nWhy Python Programming Practice Matters\nConsistent Python programming practice is essential for building problem-solving skills, understanding Python syntax, and preparing for data science, AI, or web development roles. By practicing these Python exercises, you will develop a strong coding foundation and become comfortable with real-world programming scenarios.\nCourse Features\n300+ Python Exercises categorized by difficulty\nComplete solutions with source code, algorithms, PPT notes, and assignments\nHands-on exercises aligned with 100 Days of Python / 100 Days of Code practice\nFocus on quality, clear explanations, and practical examples\nSuitable for beginners as well as intermediate learners aiming for Python Zero to Hero mastery\nAdvantages of This Course\nWhen you enroll in this Python Bootcamp / Complete Python Bootcamp / Python Mega Course, you will get:\nComprehensive video lectures covering all exercises\nAssignments for additional practice and skill reinforcement\nDetailed solutions for every problem\nDownloadable source code and notes\nProperly structured study materials for effective learning\nLifetime access with updates included\nWho This Course is For\nBeginners aiming to start Python programming from scratch\nStudents or professionals wanting to practice Python exercises daily\nAnyone following the 100 Days of Python / 100 Days of Code challenge\nDevelopers looking to improve problem-solving and coding skills for data science, web development, or AI\nTake Your Python Skills to the Next Level\nBy completing this Complete Python Bootcamp, you will:\nBecome proficient in Python and solve simple to complex problems\nApply Python skills in real-world projects and assignments\nPrepare for Python developer roles, freelancing, or data science positions\nGain confidence in programming with Python Zero to Hero approach\nThis is your opportunity to practice, learn, and master Python while following a structured approach designed to boost your coding career.\nEnroll now in the 300+ Python Exercises course and start your journey from beginner to Python expert today!",
      "target_audience": [
        "This course is for anyone who wants to improve their Python skills and gain hands-on experience with a wide range of programming challenges.",
        "If you're a beginner to Python programming or are looking to reinforce your foundational knowledge of the language, this course is a great fit.",
        "For those who already have some experience with Python, this course offers a chance to stretch your abilities and tackle more complex programming problems.",
        "Whether you're a student, a hobbyist, or a professional developer, this course offers something for everyone who wants to deepen their understanding of Python programming.",
        "If you're interested in preparing for coding interviews or want to build your confidence in your Python abilities, this course is a fantastic resource.",
        "This course is ideal for those who prefer to learn through hands-on practice rather than simply reading or watching tutorials.",
        "If you're interested in pursuing a career in data science, machine learning, or web development, this course can help you build a strong foundation in Python programming.",
        "For those who are self-taught or have learned Python through informal channels, this course can help fill in gaps in knowledge and provide a more structured learning experience.",
        "If you're looking for a way to keep your programming skills sharp and stay up-to-date with the latest Python features and techniques, this course can provide a valuable challenge.",
        "This course is suitable for those who want to take their Python coding skills to the next level and become more confident and proficient in the language."
      ]
    },
    {
      "title": "Up and Running with Concurrency in Go (Golang)",
      "url": "https://www.udemy.com/course/up-n-running-with-concurrency-in-golang/",
      "bio": "SUPERCHARGE your Go (Golang) code with concurrency: parallelism, golang channels, waitgroups, goroutines and much more",
      "objectives": [
        "Fundamentals of concurrency - what it is, how it works in any language",
        "The complete set of tools and techniques for implementing concurrency with the Go programming language",
        "Confidence, experience and sample code to quickly implement concurrency into your own projects.",
        "Downloadable resources include dozens of code samples, course slides, cheat sheets and more.",
        "Coding challenge exercises after each major section to immediately use your new skills.",
        "Concurrency, parallelism, IO bound vs CPU bound code, goroutines, wait groups, channels, race conditions, mutexes, condition variables, and more"
      ],
      "course_content": {
        "Welcome and Course Qverview": [
          "Welcome! I'm glad you're here",
          "Course Introduction",
          "Course resources will be available soon, downloaded in Section 3",
          "Quick Concurrency Demo",
          "How this course works",
          "Classroom Overview"
        ],
        "Understanding Concurrency - Trends, Benefits and Challenges": [
          "Everyday Concurrency",
          "Understanding the Terminology",
          "Trend #1 - Latency",
          "Trend #2 - Multiple CPU Cores",
          "Summary of Benefits and Challenges",
          "Pop Quiz: Understanding Concurrency"
        ],
        "Setting Up Your Custom Development Environment": [
          "Installing Go, Course Resources and Your IDE",
          "Using Multiple Screens and Other Physical Considerations",
          "Download or RE-Download Course Resources"
        ],
        "Creating Your First Goroutine": [
          "Let's try it....",
          "Pop Quiz: Goroutines"
        ],
        "Understanding Blocking Code": [
          "What exactly does \"blocking\" mean?"
        ],
        "Using Wait Groups to Track Goroutine Status": [
          "Wait Groups Overview",
          "Coding Example",
          "Pop Quiz: Wait Groups",
          "CODING EXERCISE: Wait Groups"
        ],
        "Using Channels to Communicate with Goroutines": [
          "Purpose and Syntax Overview",
          "Using Channels in our Code",
          "Using Channels to Synchronize Goroutines",
          "Q&A: Why and how did we use wait groups in sync3 and sync4?",
          "Pop Quiz: Channels",
          "CODING EXERCISE: Channels"
        ],
        "Understanding IO-bound vs CPU-bound Processes": [
          "IO-bound vs CPU-bound Intro",
          "CPU-bound Demos",
          "IO-bound Demos",
          "IO-bound vs CPU-bound Summary",
          "Pop Quiz: IO Bound vs CPU Bound Code",
          "CODING EXERCISE: Understanding len and range with concurrency"
        ],
        "What could go wrong? Race Conditions: mutexes, condition and atomic variables": [
          "Race Condition Intro Demo",
          "Race Condition Intro",
          "Race Condition Solutions - Mutex, Atomic Variables",
          "Race Condition Solution Demo",
          "Condition Variables Demo",
          "Pop Quiz: Race Conditions",
          "CODING EXERCISE: Using channels instead of sharing variables"
        ],
        "Concurrency Patterns": [
          "Worker Pools Intro",
          "Worker Pools Demo"
        ]
      },
      "requirements": [
        "No absolute prerequisites, but some knowledge of the Go language helpful.",
        "Familiarity with programming concepts very helpful.",
        "(We will install together) Installation of the Go compiler and your favorite code editor or IDE."
      ],
      "description": "Are you ready to tackle one of the most exciting and important features of the Go language?\n\n\nAccording to the most recent developer surveys, Go(lang) is one of the world’s most desired and loved languages, and its developers are among the highest paid in the world. Go is also the top language that companies are planning to migrate to, meaning that your Go skills are likely future-proof for many years to come.\n\n\nConcurrency is considered to be a very advanced topic within Golang, and some comprehensive Go courses do not address it at all. Yet we believe that with just a reasonable number of hours of effort, you can be on your way, comfortable with concurrency and ready to add asynchronous features to your next programming project.\n\n\nThis course is for ANYONE getting started with concurrency, especially in the Go programming language. There are no strict prerequisites, but knowledge of computer programming principles and specifically the Go language will be very helpful, especially for the coding exercises.\n\n\nThis relatively short course covers ALL the essentials of concurrency - theory, syntax, coding examples, and downloadable copies of all visual materials.\n\n\nSpecifically, we will cover:\n\n\nConcurrency theory, terminology, trends, benefits, and challenges\nThe difference between concurrency and parallelism / parallel programming\nGoroutines\nBlocking code\nWait groups\nChannels\nIO bound vs CPU bound code with examples of each\nRace conditions\nMutexes\nCondition variables\nAtomic variables\nConcurrency patterns\n\n\nThis course is offered at an affordable price, saving you weeks or months of digging through YouTube videos or purchasing other courses just to get up and running with concurrency.\n\n\nEnroll today and be on your way! See you soon.\n\n\nFrom recent students:\n\n\n\"The instructor is very enthusiastic and knowledgeable. His presentations are clear and concise. Will seek out more courses from this instructor.\"\n\n\n\"Here's one of those courses that are short and sweet while covering the exact content you came for. Stan Vangilder delivers valuable, practical teachings on turning synchronous processes into fast, concurrent processes. One thing I appreciated from this course was gaining an in-depth understanding of how Golang differs from other languages when it comes to native support for concurrency for both IO-bound and CPU-bound processes. Plus, 'atomic variables' are no longer just a cool sounding piece of code I will skip over and learn about one day.  Thanks, Stan!\"\n\n\n\"This exceptional course is exactly what I needed. Thank you so much Stan for explaining in such detailed manner and providing wonderful and easy to follow examples. I truly enjoyed this course and binged watched it like a Netflix show. I learned a lot. Really looking forward for your next courses with Go!\"\n\n\n\"Awesome! the author has a nice tone of voice which makes easy to follow the topics. The examples used are excellent the understand the concepts, I highly recommend this course.\"\n\n\n\"Sir, that was a wonderful course, 5 stars easily. Are you planning on making other courses with Go?\"\n\n\n\"Great instructor! I look forward to more courses from him. Thanks\"\n\n\n\"I finished the course in a few hours and left u my feedback there, it's good content! Congratulations and let us know when u publish ur next course!\"",
      "target_audience": [
        "Anyone getting started with concurrency and specifically within the Go programming language.",
        "Those who wish to learn the essentials of concurrent programming in the Go programming language."
      ]
    },
    {
      "title": "Ruby Metaprogramming - Complete Course",
      "url": "https://www.udemy.com/course/ruby-metaprogramming/",
      "bio": "Learn metaprogramming! Start writing elegant Ruby & Rails code and understanding all the magic behind Ruby on Rails.",
      "objectives": [
        "Understand the magic behind Ruby on Rails.",
        "Write better, more elegant & efficient Ruby code and tests.",
        "Join the \"Ruby Guru\" pride.",
        "Write own DSL, gems, etc.",
        "Understand most of the code in popular gems."
      ],
      "course_content": {
        "Intoduction": [
          "Welcome",
          "Course layout & Contact details"
        ],
        "Ruby Insights": [
          "Everything is an Object",
          "Open classes, DuckType, Runnable code",
          "Material Revision",
          "Lectures 2, 3 and 4",
          "Classes are objects",
          "Additional material & Revision: Classes are objects",
          "Scopes",
          "Additional material & Revision: Scopes",
          "Covers: Classes are objects + Scopes",
          "Classes are modules with hierarchy",
          "Additional material & Revision: Classes are Modules",
          "Inheritance hierarchy",
          "Additional material & Revision: Inheritance Hierarchy",
          "Classes are Modules & Inheritance Hierarchy",
          "Where variables and methods live?",
          "Revision: Where variables & methods live?",
          "Method lookup",
          "Revision: Method lookup",
          "Variables & Variable Scope",
          "Ruby Object Model",
          "Blocks, Closures, Binding"
        ],
        "Metaprogrammer's Toolkit": [
          "Querying about classes / methods / variables",
          "Practice: Imitating Custom Language Keywords",
          "Defining classes / methods / variables",
          "Practice: Creating our own \"attr_accessor\" method",
          "Changing existing classes / methods / variables",
          "Practice: Implementing Rails’ “alias_method_chain\"",
          "Evaluate code in different contexts",
          "Hook into changes in classes / methods / variables",
          "Practice: Write your own \"ActiveSupport::Concern\"",
          "Practice: Going through Rails' ActiveSupport::Concern code"
        ],
        "Practice and Excersises": [
          "Task: Write your own .tap() method in Ruby 1.8",
          "Solution: Write and improve the .tap() method",
          "Task: Implement \"Struct\" class",
          "Solution: Custom implementation of \"Struct\" class",
          "Task: Write DSL for HTML code generation",
          "Solution: Write DSL for HTML code generator",
          "Example: Evaluating code in \"isolated\" scope",
          "Example: Sharing scopes among specific Classes or methods",
          "Exercise: Demystifying Rails magic"
        ]
      },
      "requirements": [
        "Basic knowledge of Ruby.",
        "Ruby environment to run your code."
      ],
      "description": "Just like many other ruby developers, I wanted to learn metaprogramming to make the leap from Ruby novice to Ruby pro. But, approaching the subject felt a bit intimidating. I tried to learn metaprogramming several times and every time I tried, all available materials were referring to even more complicated and less known concepts such as: eigenclasses, singleton classes, ruby object model, classes being objects themselves, etc.\nSo, I spent several months reading about all these concepts and synthesised all available material. At the end, it just \"clicked\"! It turned out to be very simple! The problem was that there was no single resource where all this concepts were put together. So, I decided to produce this corse. I hope it will save your time and you will find it useful.\n\nThis video course will teach you ruby metaprogramming by introducing small, simple and less known ruby insights in each video. And once you learn them, metaprogramming will just start to make sense.\nAt the end of the course, you will:\nBe better Ruby developer who can write elegant code using Ruby's metaprogramming features.\nMake your test code more concise by writing test that dynamically generate code that covers all test cases.\nBe able to understand and explain the magic behind the code/syntax in all popular gems.\nBetter understand the Ruby language.\nand of course write your own DSL's for your business domain (just like rspec, rake, etc.).\nCourse overview\n\nMetaprogramming is such an integral part of the Ruby language, that in order to learn it, you need to understand the specific language features of Ruby. This features are less known and not covered in books. But, once you are introduced to them, metaprogramming starts to make sense. That's why, the course will start by introducing several key Ruby language insights. After this section, you will understand why is it that some method or variable is not available in some scope and available in others or how scope changes in your code and more.\nIn the second section of the course, we will cover all the SDK methods that are involved in metaprogramming. Along the way, we will go through several examples that demystifies magic behind most popular gem code as well.\nIn the last section of the course, we will put everything we've learnt into practice and will build our own rspec, domain specific language and some of the rails most popular magical methods.",
      "target_audience": [
        "Ruby developers who are familiar with the ruby language basics, syntax, etc.",
        "Ruby on Rails developers who want to improve their code.",
        "Developers who want to understand the magic behind Ruby on Rails code.",
        "This course is probably not for you, if you are new to Ruby and want to learn the Ruby programming language basics."
      ]
    },
    {
      "title": "Mastering C & C++ Programming: From Fundamentals to Advanced",
      "url": "https://www.udemy.com/course/mastering-c-c-plus-programming-from-fundamentals-to-advanced/",
      "bio": "Mastering C & C++ Programming From Fundamentals to Advanced",
      "objectives": [
        "Understanding C and C++",
        "While Loop",
        "Break Statement",
        "String Concatenation",
        "Constructor & Destructor",
        "Numeric Data Types"
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Welcome to \"Mastering C & C++ Programming: From Fundamentals to Advanced,\" your comprehensive guide to becoming a proficient and versatile programmer in both C and C++ languages. Whether you're a complete novice or an experienced coder looking to deepen your knowledge, this course is meticulously designed to take you on a transformative journey from mastering the basics to tackling advanced concepts in C and C++ programming.\n\n\nC and C++ are two of the most powerful and widely-used programming languages, known for their efficiency, performance, and versatility across various domains, including systems programming, game development, and embedded systems. This course is carefully crafted to provide you with a solid understanding of both languages, equipping you with the skills to write efficient and scalable code for a wide range of applications.\n\n\nKey Highlights:\n\n\nFoundations of C Programming: Familiarize yourself with the fundamentals of C programming, including syntax, data types, control structures, and functions.\n\n\nObject-Oriented Programming (OOP) in C++: Learn the principles of OOP in C++, including classes, objects, inheritance, polymorphism, and encapsulation.\n\n\nMemory Management in C and C++: Understand memory management concepts in C and C++, including dynamic memory allocation, pointers, and memory leaks.\n\n\nSTL and Standard Library: Explore the Standard Template Library (STL) and standard library features in C++, including containers, algorithms, and I/O operations.\n\n\nFile Handling: Master file handling techniques in C and C++ for reading from and writing to files, enabling interaction with external data sources.\n\n\nAdvanced Topics: Delve into advanced topics such as multithreading, exception handling, and performance optimization in both C and C++ programming.\n\n\nWhy Choose?\n\n\nComprehensive Learning: This course covers both C and C++ programming languages from fundamentals to advanced topics, ensuring a well-rounded understanding of both languages.\n\n\nExpert Instruction: Benefit from the guidance of experienced instructors passionate about C and C++ programming and dedicated to your success.\n\n\nLifetime Access: Enroll once and enjoy lifetime access to course materials, allowing you to learn at your own pace and revisit concepts whenever necessary.\n\n\nCareer Advancement: Proficiency in C and C++ programming is highly valued in various industries, making this course an asset for career growth and professional development.\n\n\n\n\nEmbark on your journey to master C and C++ programming! Enroll now in \"Mastering C & C++ Programming: From Fundamentals to Advanced\" and acquire the skills needed to write efficient, scalable, and robust code in both languages.\n\n\nWhether you're aiming for a career in software development, systems programming, or game development, this course equips you with the knowledge and skills to excel in the world of C and C++ programming. Don't miss this opportunity to become a proficient C and C++ programmer!",
      "target_audience": [
        "Anyone who want to learn C++ programming language"
      ]
    },
    {
      "title": "The Complete Course of TCL Programming",
      "url": "https://www.udemy.com/course/tcl-course/",
      "bio": "Learn TCL Programming like a Professional. Become an expert in rapid prototyping, scripting, testing, Tcl/Tk for GUIs...",
      "objectives": [
        "At the end of the course you will fully master TCL Programming, to be able to develop rapid prototypes, scripts, tests or GUIs with Tcl/Tk (Tool Kit)",
        "You will be able to build step by step your own scripts, understanding all the logic and ending with advanced practical examples and projects",
        "You will become familiar with the work environment, essential commands, and you will master all the phases of the scripting",
        "You will learn in a professional way how to use Mathematical operations, variables, conditionals and strings",
        "You will work with Lists, Arrays, Loops, Procedures, File IO and Regular Expressions",
        "You will master all the Debug techniques in TCL, as well as Dictionaries, Error handling, OOP, TCLOO, Event Driven Programming or Network Sockets",
        "You will learn the design and generation of widgets and Graphical User Interfaces with Tk, understanding their interpretation",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises, the project and the course Quizzes",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {},
      "requirements": [
        "Having basic notions of programming can help, but the course starts from scratch",
        "Download and install TCL (if you don't know how, don't worry, it's very easy, free and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a TCL Progammer professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that students, programmers, computer scientists, engineers... can learn TCL (Tool Command Language) Progamming from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as an Engineer, I have realized that nowadays mastering TCL language is very necessary in rapid prototyping, scripting, developing graphical interfaces or other programming applications. Knowing how to use this language can give you many job opportunities and many economic benefits, especially in the world of the development.\nThe big problem has always been the complexity to perfectly understand TCL Programming it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 10 exclusive hours of video and 115 lectures, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master TCL. The course will teach you TCL scripting in a practical way, from scratch, and step by step.\nWe will start with the installation of TCL software on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to TCL and course dynamics\nDownload and Install TCL latest version and configuring it\nGeneral familiarization with the work environment and commands\nIntroduction to TCL scripting\nBasic Mathematical operations, variables, conditionals and strings\nLists, Arrays, Loops, Procedures, File IO and Regular Expressions\nDebug techniques\nDictionaries, Error handling, Event Driven Programming and Network Sockets\nOOP and TCLOO\nTcl/Tk (Toolkit) for widgets and GUI (Graphical User Interface) creation\nMastery and application of absolutely ALL the functionalities of TCL Programming\nQuizzes, Practical exercises, complete projects and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to build a wide variety of programming projects quickly and make versatile and complete use of TCL. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning TCL Programming has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used TCL before",
        "Programmers, engineers, students... who want to learn a new way to develop rapid apps, scripts or Graphical User Interfaces easily",
        "Intermediate or advanced TCL students who want to improve their skills even more!"
      ]
    },
    {
      "title": "Object Oriented Programming - Timeless Principles",
      "url": "https://www.udemy.com/course/master-object-orientation-with-lego-illustrations/",
      "bio": "Object Oriented Programming, master it!",
      "objectives": [
        "Understand object orientated programming principles - used by most modern languages",
        "Apply object oriented programming principles in real code (covered in course)"
      ],
      "course_content": {},
      "requirements": [
        "NO KNOWLEDGE of programming required",
        "A PC / Mac / Linux computer with internet connection"
      ],
      "description": "Object oriented programming. What is it?\nThat was my biggest question when I started programming.\nIt took me many months to get the object oriented programming concept fully cemented in my mind. Now I will help you get object orientation in less than an hour. Avoid needlessly complicated explanations that you find on the internet, as I explain everything in PLAIN language.\nObject Oriented programming (OOP) is used in almost every popular language out there, be it Java, C#, Javascript or PHP. You’ll also need it for iOS and Android apps if you make those!\n-----------Review of this course--------------\nVery good explanations and organisation of material. A good companion while learning the code in other courses to get a complete approach to programming in an object orientated way.\n\n------------------------------------------------------\nWhen I learnt object oriented programming it was from videos made by boring instructors. I wanted it to be fun and that’s why everything I explain is illustrated using Lego. Lego is the perfect tool because it is exactly like programming – they both are construction tools, used to build a final product.\nWe will do a little light programming during the course to demonstrate what OOP is. Our language of choice is C# because we can write it in the excellent (and free) cross platform software: Xamarin. Xamarin allows us to learn object oriented programming in C# on PC, Mac or Linux.\nYou do not need to know any C# (or even basic programming) beforehand.\nCourse highlights\n\nFundamental object oriented programming concepts are explained\nA few more advanced ideas are covered too\nSome homework to get you thinking\nFantastic Lego illustrations\n\n\nWhat are the requirements?\n\n\nA PC with internet access to set up Xamarin (an open source .Net engine)\nYou can also run Xamarin on a Mac (or Mono-Develop on Linux)\n\n\nWhat will you get from this course?\n12 carefully sculpted lectures, complete with excellent Lego illustrations!\nLearn to code by thinking in an Object Oriented manner\nMake beautiful, concisely written code – the number one asset coveted by anyone looking to hire developers\nMake a start in professional software development (freelance rates in the USA are $60 - $150 per hour)\n\n\nWho is the target audience?\nAnyone that wants to earn a very healthy living writing and creating software\nPeople looking to improve their own knowledge of object oriented concepts",
      "target_audience": [
        "Beginner / novice programmers who do not understand object oriented programming principles"
      ]
    },
    {
      "title": "Rust lang: The complete beginner's guide",
      "url": "https://www.udemy.com/course/rustaceans/",
      "bio": "A language for Rustaceans. Learn the basics and advanced concepts, including memory management and concurrency.",
      "objectives": [
        "Rust programming language",
        "Rust fundamentals",
        "Memory guarantees in Rust",
        "Advanced concepts"
      ],
      "course_content": {},
      "requirements": [
        "Interest in Rust",
        "Prior knowledge in a development language is useful"
      ],
      "description": "Why learn Rust\nRust is a blazingly fast, but at the same time easy to pick up language, designed for reliability and memory management. Hundreds of companies around the world are using Rust in production today for fast, low-resource, cross-platform solutions. Software you know and love, like Firefox, Dropbox, and Cloudflare, uses Rust.\nAccording to the StackOverflow developer survey, Rust is the most loved programming language among developers, for the fourth year in a row.\nThis course teaches you:\nto install Rust on a PC or Mac\nthe language basics like\nfunctions\ndata types\nvariables\netc\nthe fundamentals of\nflow control\ncomplex data types\nexception handling\nmacros\netc\nadvanced topics such as\nmemory management\nownership and borrowing\nsructures and traits\nconcurrency\netc\npractical applications of all studied concepts\nplenty of projects to get you practicing the language\nWe will apply everything we learned through coding small applications to solidify what we are studying. We will go through all these topics and explain them in detail. We will also implement many coding examples to make sure you fully understand and are able to apply the concepts.\n\n\nThis course opens up many opportunities to work in a growing market, where your skills will be highly values by employers. There is a huge shortage of Rust skills, and you can claim the top spot.\n\n\nSign up today and let's start learning Rust together.",
      "target_audience": [
        "Beginner Rust developers",
        "Intermediate Rust developers"
      ]
    },
    {
      "title": "Modern Java - Learn Latest Features Beyond Java 8 by Example",
      "url": "https://www.udemy.com/course/modern-java-master-all-new-features-in-java-by-coding-it/",
      "bio": "Learn all Java features from Java 8 to Java 21 such as TextBlocks,Records,Sealed Classes, Pattern Matching by coding it.",
      "objectives": [
        "All the new features in Modern Java",
        "LVTI, TextBlocks, Enhanced Switch, Record Classes",
        "Use Sealed Class to apply controlled Inheritance",
        "Learn Pattern Matching to write concise and structured code",
        "Java Platform Module System(JPMS) and its benefits",
        "Student will be able to upgrade their Java knowledge to the latest Java Features"
      ],
      "course_content": {},
      "requirements": [
        "Prior Java Knowledge is needed",
        "Students should have knowledge about IDE such as Eclipse, Intellij IDEA",
        "Any Java version greater than Java 20 is needed"
      ],
      "description": "Learn the new Modern Java Features by coding it. This is a pure coding course and you will get a complete understanding of all the latest Java features by coding it.\nWhy Should I take this course?\nThis course will help the Java developers to build their knowledge on the new Java features.\nAll the new features such as:\nLocal Variable Type Inference\nText Blocks\nEnhanced Switch\nRecords\nSealed Classes/Interfaces\nPattern Matching\nSimple Web Server\nNew Http Client\nJava Platform Module System (JPMS)\nThis course will give you the confidence on implementing new Java features in real Java projects.\nBy the end of this course you will have a complete understanding of new Java features and how to use them in your day to day project.\nCourse Overview :\nSection 1 - Getting Started:\nThis section explains about what will be covered in this course.\nSection 2 : Introduction to Modern Java : Big Picture\nIn this section, I will give you all an introduction to Modern Java.\nSection 3: Local Set Up\nIn this section, we will set up the latest java environment and base project for this course.\nSection 4: Local Variable Type Inference (LVTI) using var\nIn this section, we will code and learn about the LVTI feauture to simply local variable declaration using type inference.\nSection 5: Text Blocks\nIn this section, we will code and learn about the TextBlocks which enhances the power of String in Java.\nSection 6: Enhanced Switch\nIn this section, we will code and learn about the new Switch which is an expression.\nSwitch - as an Expression\nMultiline switch expression using \"yield\"\nEnhanced Switch are exhaustive\nSection 7 : Records\nIn this section, we will code and explore the record classes concept in Modern Java.\nRecords Classes\nCustom Constructors and Validations in Record Classes\nObject Equality in Record Clases\nSection 8 : Pattern Matching\nIn this section, we will code and learn about pattern matching.\nIntroduction to Pattern Matching\nRecord Patterns - Pattern Matching on Records\nGuarded Patterns\nSection 9 : ChekoutService Application [ Real Time Usecase]\nIn this section, we will implement a realtime application using all the modern java concepts that we have learned so far.\nSection 10 : Simple Web Server\nIn this section, I will give you a demonstration of jwebserver and how it serves the files and folders as resources.\nSection 11 : New Http Client\nIn this section, we will code and explore the new HTTP Client that has support for HTTP2/Websockets.\nNew HttpClient - GET Request to retrieve movie by ID\nJUnit test for the HTTP Client\nBuild HTTPClient in Asynchronous mode\nBuild HTTP Client - GET Request to Retrieve AllMovies\nSection 12 : Java Platform Module System (JPMS)\nIn this section, we will code and learn about how to build java application using JPMS or modules.\nIntroduction to JPMSBuild a Java app using JPMS\nWorking with Multiple Modules\nWorking with Multiple Modules - Transitively\nUnnamed Modules and Automatic Modules\nBy the end of this course you will have a complete understanding of all the Latest Java features and implement it in real Java projects.",
      "target_audience": [
        "Anyone willing to learn the new Java Features such as TextBlocks,Records,Sealed Classes, Pattern Matching and more by coding it",
        "Java developers who would like to take their knowledge to the next level to write more concise and readable code"
      ]
    },
    {
      "title": "Learn to think like a programmer with Python",
      "url": "https://www.udemy.com/course/learn-to-think-and-act-like-a-programmer-using-python/",
      "bio": "Learn the art of thinking like a programmer, a university-level course",
      "objectives": [
        "Learn how to think like a programmer and write robust and clean Python code",
        "Solve problems and apply knowledge to solve problems",
        "Grasp the programming mentality and start thinking like a programmer"
      ],
      "course_content": {},
      "requirements": [
        "You should have access to a PC (Windows or Linux) or a Mac with an internet connection"
      ],
      "description": "We respond to your questions in under 8 hours on average\nWhat's the most important aspect of an online course? Engaging students with the material and responding to their questions, when they need help. We might not be the largest course on Udemy, as we are a relatively new course, but we shine in replying to your questions quickly. We aim to respond to your questions in under 8 hours (on average) and guaranteed in under 48 hours! We understand that responding to students' questions on-time is critical for a great learning experience.\nLearning programming and learning to think like a programmer are two different things. Anyone can learn programming, but if you don't learn how to think like a programmer, you will never be able to become an independent programmer. The aim of this course is to teach you how to think like one!\nWith:\n100+ lectures,\n20 programming exercises,\n20+ quizzes,\nand other materials (including a daily coding challenge)\nthis is a comprehensive Python course to teach you how to think like a programmer.\nIf you are an absolute beginner with no prior programming experience, in this course, I aim to teach you how to think like an independent programmer. By the end of this course, I guarantee you that you will be able to think like a programmer and write real code to solve real problems. Many courses teach people the language, but they don't teach them how to think like a programmer. My objective in this course is to teach you how to think like an INDEPENDENT programmer.\nThe course comes with a 30-day money-back guarantee, take your money back if you are not satisfied. The best part is that you will get lifetime access to all the materials (videos, code, exercises, and quizzes). You can come back whenever you want.\nWhat are you waiting? Enrol in this course TODAY.",
      "target_audience": [
        "Novice with no prior programming exposure",
        "People with existing programming experience wishing to learn quickly Python",
        "Students from any discipline who want to prepare for next semester's programming module!",
        "People who need programming for their new job or position, or to start a business or to pass a university module!"
      ]
    },
    {
      "title": "Object Oriented Programming for beginners - Using Python",
      "url": "https://www.udemy.com/course/object-oriented-programming-for-beginners-using-python/",
      "bio": "Learn and understand object oriented programming step by step",
      "objectives": [
        "How to create a class",
        "How to instantiate a class",
        "How to modify a class",
        "Inheritance",
        "Polymorphism",
        "Encapsulation",
        "Abstraction"
      ],
      "course_content": {
        "Installation and Setups": [
          "Introduction",
          "What is Python",
          "Installing Python on Windows",
          "Installing Python on Macs",
          "Installing Pycharm on Windows",
          "Installing Pycharm on Macs",
          "Changing theme in Pycharm",
          "Pycharm configuration on Windows - Part 1",
          "Pycharm configuration on Windows - Part 2",
          "Pycharm configuration on Macs"
        ],
        "Introduction to Object Oriented Programming - OOP": [
          "What is OOP ?",
          "Creating a class",
          "Instantiating a class",
          "Modifying a class",
          "Class and instance variables",
          "Inheritance - Part 1",
          "Inheritance - Part 2",
          "Inheritance - Part 3",
          "Inheritance - Part 4",
          "Polymorphism - Part 1",
          "Polymorphism - Part 2",
          "Polymorphism - Part 3",
          "Encapsulation - Part 1",
          "Encapsulation - Part 2",
          "Encapsulation - Part 3",
          "Abstraction - Part 1",
          "Abstraction - Part 2",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic understanding of using a computer",
        "Basic understanding of using the internet"
      ],
      "description": "Object-oriented Programming, or OOP for short, is a programming paradigm which provides a means of structuring programs so that properties and behaviors are bundled into individual objects.\nFor instance, an object could represent a person with a name property, age, address, etc., with behaviors like walking, talking, breathing, and running. Or an email with properties like recipient list, subject, body, etc., and behaviors like adding attachments and sending.\nPut another way, object-oriented programming is an approach for modeling concrete, real-world things like cars as well as relations between things like companies and employees, students and teachers, etc. OOP models real-world entities as software objects, which have some data associated with them and can perform certain functions.\nObject-oriented programming is based on the imperative programming paradigm, which uses statements to change a program's state. It focuses on describing how a program should operate.\nOOP uses the concept of objects and classes. A class can be thought of as a 'blueprint' for objects. These can have their own attributes (characteristics they possess), and methods (actions they perform).\nIn this course you will learn the key concepts of object oriented programming which includes:\nClasses\nMethods\nInstantiating\nInheritance\nPolymorphism\nEncapsulation\nAbstraction",
      "target_audience": [
        "Beginners to Python",
        "Beginners to Programming",
        "Beginners to Web Development"
      ]
    },
    {
      "title": "HTML, CSS, Java, & JavaScript: Full Stack Programming Course",
      "url": "https://www.udemy.com/course/html-css-java-javascript-full-stack-programming-course/",
      "bio": "Master Full Stack Development with HTML, CSS, Java, and JavaScript: Build Dynamic and Responsive Web Applications",
      "objectives": [
        "Overview of Programming Concepts",
        "Introduction to Web Development: HTML, CSS, Java, and JavaScript",
        "Understanding HTML Syntax and Structure (Elements,Attributes, Headings & Styles)",
        "Div, Classes, Id, Iframes in HTML",
        "Introduction to CSS: Syntax and Selectors",
        "CSS Box Model, Flexbox, and Layout Techniques",
        "CSS Grid Layout for Complex Designs",
        "Introduction to Java: Basics and Syntax",
        "Java Syntax and Core Programming Concepts",
        "Object-Oriented Programming in Java",
        "Working with Java Data Structures (Arrays, Lists, Maps)",
        "Understanding JavaScript Syntax and Basics",
        "Manipulating the DOM with JavaScript",
        "Working with APIs and JSON in JavaScript",
        "Advanced Event Handling and Form Validation"
      ],
      "course_content": {
        "Module 1: Introduction to Programming and Web Technologies": [
          "Overview of Programming Concepts",
          "Introduction to Web Development: HTML, CSS, Java, and JavaScript",
          "Understanding the Web: How Browsers and Servers Communicate"
        ],
        "Module 2: HTML Programming Essentials": [
          "Understanding HTML Syntax and Structure (Elements,Attributes, Headings & Styles)",
          "Creating and Organizing Content with HTML",
          "Using HTML5 Elements for Better Semantics",
          "Div, Classes, ID, Iframes in HTML",
          "Forms, Tables, and Media Embedding in HTML"
        ],
        "Module 3: CSS for Styling, Layout and Techniques": [
          "Introduction to CSS: Syntax and Selectors",
          "Working with Colors, Fonts, and Typography",
          "CSS Box Model, Flexbox, and Layout Techniques",
          "Responsive Design: Media Queries and Mobile-First Approach",
          "CSS Grid Layout for Complex Designs",
          "Implementing CSS Transitions and Animations",
          "Using CSS Variables and Custom Properties",
          "Building Responsive Navigation Menus and UI Components",
          "Border Images"
        ],
        "Module 4: Java Programming": [
          "Introduction to Java: Basics and Syntax",
          "Java Syntax and Core Programming Concepts",
          "Object-Oriented Programming in Java",
          "Working with Java Data Structures (Arrays, Lists, Maps)",
          "Java data types (primitive and non-primitive)",
          "Exception Handling and File I/O in Java",
          "Java Generics and Collections Framework",
          "Multithreading and Concurrency in Java",
          "Introduction to Java Web Programming (Servlets and JSP)"
        ],
        "Module 5: JavaScript Programming": [
          "Understanding JavaScript Syntax and Basics",
          "Working with Variables, Functions, and Loops",
          "JavaScript Object-Oriented Programming (OOP)",
          "Manipulating the DOM with JavaScript",
          "Asynchronous JavaScript: Callbacks, Promises, and Async/Await",
          "Working with APIs and JSON in JavaScript",
          "Advanced Event Handling and Form Validation",
          "Building Interactive Web Components with JavaScript",
          "MVC Architecture"
        ]
      },
      "requirements": [
        "No prior knowledge is required."
      ],
      "description": "Become a versatile full-stack developer with our comprehensive \"HTML, CSS, Java, & JavaScript: Full Stack Programming Course.\" This course is designed to provide you with a solid foundation in both front-end and back-end development, equipping you with the skills needed to build dynamic, interactive, and robust web applications from start to finish.\n\n\nStart with the essentials of front-end development using HTML and CSS to create the structure and style of web pages. Learn JavaScript to add interactivity and enhance user experience, and then dive into Java for back-end development, where you'll learn to build server-side logic, manage databases, and ensure smooth, secure, and scalable web applications.\n\n\nThrough hands-on projects and real-world scenarios, you'll gain practical experience in designing, developing, and deploying full-stack web applications. By the end of this course, you'll have a comprehensive skill set that covers both client-side and server-side programming, making you a valuable asset in any development team.\n\n\nWhat You'll Learn:\nHTML & CSS: Master the fundamentals of HTML and CSS to build structured and styled web pages.\nJavaScript for Front-End Development: Learn JavaScript to create interactive and dynamic web applications, including DOM manipulation, event handling, and AJAX.\nJava for Back-End Development: Understand Java programming to develop server-side applications, manage databases, and handle server requests and responses.\nFull Stack Development: Integrate front-end and back-end technologies to build complete web applications.\nResponsive Web Design: Design web pages that work seamlessly on both desktop and mobile devices.\nVersion Control with Git: Learn the basics of Git and GitHub for version control and collaboration.\nReal-World Projects: Apply your knowledge to build real-world projects, including a complete web application from scratch.\nBest Practices and Optimization: Learn industry-standard best practices for writing clean, efficient, and maintainable code.\n\n\nYou're looking to start a career in web development or advance your current skills, this course will set you on the path to success in the rapidly evolving world of web development. Join us and start your full-stack development journey today!",
      "target_audience": [
        "Anyone interested in building dynamic and robust web applications.",
        "Aspiring web developers looking to gain full-stack development skills.",
        "Front-end developers wanting to expand their knowledge to back-end technologies.",
        "Back-end developers eager to learn front-end development for a full-stack perspective."
      ]
    },
    {
      "title": "Learn C++ from scratch",
      "url": "https://www.udemy.com/course/learn-c-from-scratch-p/",
      "bio": "Practical Hands -on Introduction to C++",
      "objectives": [
        "Setting up C++ development environment",
        "Displaying output",
        "Accepting user inputs",
        "Using escape sequence",
        "Using comments in your code",
        "Creating variables",
        "Data Types",
        "Pointers and Reference",
        "String functions",
        "Arrays",
        "Operators",
        "Conditional statements",
        "Loops",
        "Functions",
        "Classes and Objects",
        "Class methods",
        "Accessing class attributes and methods",
        "Create a maths application program."
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "What is C++",
          "Setting up C++ development environment",
          "Displaying Outputs",
          "C++ comments",
          "C++ Keywords",
          "Escape Sequences"
        ],
        "Data Types and Variables": [
          "C++ Data Types",
          "Data Type Conversion",
          "Variables",
          "Creating Variables",
          "Constants",
          "Pointer and Reference",
          "String functions part1",
          "String functions part2",
          "Concatenation",
          "Arrays"
        ],
        "C++ Operators": [
          "Arithmetic Operators",
          "Logical Operators",
          "Comparison Operators",
          "Assignment Operators",
          "Operator Precedence"
        ],
        "Control Flow": [
          "What is Control flow",
          "C++ decision making",
          "If Statements",
          "if else statements",
          "While loop",
          "do while loop",
          "for loop",
          "looping through an array",
          "Exiting a loop",
          "Stop and continue a loop",
          "Switch statement",
          "What are functions",
          "Function Parameters and Arguments",
          "Function return",
          "Local and global variables",
          "2D Arrays and nested for loops part 1",
          "2D Arrays and nested for loops part 2",
          "Getting Input From Users",
          "Creating a maths program"
        ],
        "Object Oriented Programming - OOP": [
          "Introduction to OOP",
          "Creating classes and objects",
          "Accessing object attributes",
          "Creating member methods",
          "Constructor function",
          "Inheritance Part 1",
          "Inheritance Part 2",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of using a computer",
        "Basic knowledge of using internet."
      ],
      "description": "C++  is a compiled modern object -oriented programming language .\nThe code you write in C++ has to be translated by a special program called a compiler into machine code .\nC++ is widely used for both systems and applications development, and  is available for virtually every operating system and has influenced and informed many derivative languages, including C# and Java. In this course,i will guide you through the nuts and bolts of this essential language. We will set up your environment for coding and dissects the anatomy of a basic C++ program. We will learn the essentials—statements and expressions, variables, arrays, conditionals, switch, operators, loops, and functions—and  data structures, classes and objects. We will also learn data casting.\n\n\nTopics include:\n\n\nSetting up C++ development environment using code blocks\nDisplaying output\nAccepting user inputs\nUsing code comments\nUsing Escape sequence\nStatements and expressions\nCreating Variables\nPointers and Reference\nConstants\nLocal and global variables\nString functions\nArrays\n2D  Arrays\nConditionals ( if , else , else if , switch)\nLoops ( while, do-while, for)\nLooping through arrays\nNested l for oops\nData types\nOperators\nFunctions\nClasses and objects\nClass methods\nClass members\nAccessing class attributes and methods\nOverriding class methods\nInheritance\nCreate a math application program.",
      "target_audience": [
        "Beginners to C++",
        "Beginners to programming"
      ]
    },
    {
      "title": "C, C++, Python and Ruby Programming",
      "url": "https://www.udemy.com/course/c-c-python-ruby-java-html5-php-programming-for-beginners/",
      "bio": "C, C++, Python and Ruby python programming Courses with Practical Examples",
      "objectives": [
        "Learn all Basic Fundamentals in C, C++, Python and Ruby Programming",
        "Will be understand any standard programs in C, C++, Python and Ruby Programming and modify them according to the requirements",
        "Explore the world of Software Languages",
        "Write your own programs in C, C++, Python and Ruby Programming"
      ],
      "course_content": {
        "Welcome Note": [
          "Welcome Note"
        ],
        "Python Programming Introduction": [
          "Introduction",
          "First Program",
          "Basics",
          "Commenting"
        ],
        "Variables and Data Types": [
          "Variables",
          "variables 2",
          "User entered data",
          "Operators",
          "All Operators in Python"
        ],
        "Creating Executable File": [
          "Creating file and .exe file"
        ],
        "Decision making in Python": [
          "If statement",
          "If-else statements",
          "Program to print odd or even",
          "Program to find vowel",
          "Find the greatest number"
        ],
        "Loops": [
          "For Loops",
          "While Loops",
          "Program to print factorial of number",
          "Program for multiplication table",
          "multi multiplication table",
          "Exponential Program",
          "Break statement",
          "continue statement",
          "Example password"
        ],
        "Functions and Modules": [
          "Functions and Modules",
          "User defined functions",
          "Functions with arguements",
          "Creating modules"
        ],
        "Strings in python": [
          "Strings",
          "Strings2"
        ],
        "List, Tuple and Dictionary": [
          "List introduction",
          "List methods",
          "Tuples",
          "Dictionaries"
        ],
        "Time, Date and Calendar Modules": [
          "Time module",
          "Time module example",
          "delay time example",
          "Small assignment",
          "Calendar module"
        ]
      },
      "requirements": [
        "Basic understanding of computer language",
        "No prerequisite",
        "Need software to run this programs, How to is explained in the course"
      ],
      "description": "C,C++,Ruby and Python are the most popular and advanced programming language which are used in most of the applications today, They are used in application like web-applications, games, mobile apps, operating systems, popular websites like yahoo, google, instagram twitter and many more.\n\nThis course teaches you all the basic fundamentals in C, C++, Python and Ruby Programming Languages. You will get complete course on each of the individual subjects, It's four in one course.\nAll Subjects here are treated as individual courses and are stand alone course, that means If you want to learn any one of the course it's absolutely fine and you are getting the complete course for your selected one.\nAll the topics are explained separately under each subject, If there is common topics among the subjects they are explained in each of the course again and again as they are separate courses just included in one course.\nThis courses are designed with practical examples for each topic to understand the concepts better. You will start each course from installing the software to run your program to basic concepts and further proceed to advanced concepts in each subject.\nAfter completing the course on one subject or all subject you will be able to write your own code for any requirement and bag strong knowledge on this programming languages.",
      "target_audience": [
        "who are interested in learning C programming",
        "who are interested in learning C++ programming",
        "who are interested in learning Python programming",
        "who are interested in learning Ruby programming",
        "who are interested in learning multi programming languages",
        "who wants to become software programmer and are about to start"
      ]
    },
    {
      "title": "Python Programming for Begineers",
      "url": "https://www.udemy.com/course/python-for-machine-learning-t/",
      "bio": "A Prerequisite for Learn Machine Learning",
      "objectives": [
        "Python Programming for Machine Learning"
      ],
      "course_content": {},
      "requirements": [
        "Some basic knowledge in Programming concepts like Writing Conditional Statements, Loops, etc.,"
      ],
      "description": "Python Programming Concepts like\n- Operators (Arithmatic, Boolean, Bitwise, etc.,)\n- Math Library (Addition, Subtration, Logarithmic, etc.,)\n- Variables (Declaration, Assignment, Overwrite, etc.,)\n- Dynamic Types (How to change variable datatype on fly)\n- Data Types (Integer, Float, Strings, etc.,)\n- Type Casting (Convert from one datatype to another)\n- Data Types Changes\n- Strings (Characters, Strings or Text data)\n- Boolean (True or False)\n- Special Characters in a String\n- Split and Strip Methods (Split a string or strip a string)\n-  Introduction to Lists (Data Structure)\n- Lists Slicing (Get a chunk of the data)\n- Lists - Built in Functions (Insert, Delete values)\n- String and Boolean Lists (List containing only Strings, Boolean values, etc.,)\n- Concatenate Strings Using Join Method (Concatenate two characters or strings using Join method)\n- Mixed Lists (Mixed datatype values in a List)\n-  Add Two Lists (Combine two lists)\n-  Nested Lists (List inside another List)\n-  Introduction to Dictionary (Key / Value Pair Data Structure in Python)\n-  Dictionary & It's Methods (Available built-in methods in Python for Dictionary)\n-  Nested Dictionary (Dictionary inside another Dictionary)s\n-  Create Dictionary using Zip Method (Combine 2 Lists to create a Dicationary)\n-  Sets (Another form of Data Structure that doesn't allow Duplicates)\n-  Tuples\n- If...Else..If Condition\n- While Loop\n-  Range Method\n- For Loop with Example\n- While Loop with Example\n- Lambda / Anonymous Function\n- Reserved Keywords\n- User defined functions\n- File IO Operations\n-  ...........Lot More...",
      "target_audience": [
        "Students, who want to learn Python Programming to get into Data Science or Machine Learning"
      ]
    },
    {
      "title": "Intro To PHP For Web Development",
      "url": "https://www.udemy.com/course/intro-to-php-for-web-development/",
      "bio": "Learn PHP for Web Development. Php is a popular Programming Language for a reason! Become a backend coder today!",
      "objectives": [
        "You'll learn how to code in the PHP Programming Language"
      ],
      "course_content": {
        "Intro To PHP For Web Development": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Install XAMPP",
          "Install Sublime Text Editor",
          "PHP Structure and Syntax",
          "Variables",
          "Math Operators",
          "String Concantenation",
          "Comparison Operators",
          "Escape Characters",
          "If Else Statements",
          "Elseif Statements",
          "Numeric Arrays",
          "Associative Arrays",
          "Array Count",
          "While Loops",
          "For Loops",
          "Foreach Loops",
          "Functions",
          "Random Function",
          "Date Function",
          "String Manipulation Functions",
          "Include Function",
          "Templating Out A Website",
          "Template Practice and Jumbotron",
          "Install Git Bash Terminal",
          "Generate an SSH Key",
          "Initialize Git",
          "Setup Github.com",
          "Install the Heroku Toolbelt",
          "Push Code To Heroku",
          "Heroku Domain Names",
          "Conclusion",
          "PHP Cheat Sheet"
        ],
        "Old Course Videos": [
          "Old Course Transition",
          "Installing XMPP",
          "C9 Cloud Development Environment",
          "Version Control With Git",
          "Web Hosting With Heroku",
          "PHP Basic Structure",
          "Variables",
          "Math Operators",
          "Comparison Operators",
          "Escape Characters",
          "Basic If Statements",
          "If / Elseif Statements",
          "Arrays",
          "Loops",
          "Functions",
          "Random Function",
          "Date Function",
          "String Manipulation",
          "Include Function",
          "Templating Out A Website",
          "Final Templating",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills necessary to take this course.",
        "A computer with Internet Access is needed to write code"
      ],
      "description": "In this course you'll learn everything you need to know about PHP for Web Development.\nPHP powers most of the Internet, and using it is much easier than many other programming languages.\nPHP is completely free to use, and you'll be up and running building cool web apps in minutes.\nIn this course I'll walk you through the PHP language itself.  You'll learn computer programming fundamentals like:\n-Variables\n- Math Operators\n- Comparison Operators\n- If/Else Statements\n- Arrays\n- Loops\n- Functions\n- And more!\nWe'll also learn how to set up an online development environment where you can write your code, and learn all about version control using git and github.\nI'll also show you how to host websites for free on the popular Heroku web hosting platform.\nPHP is an incredibly useful skill to have, and learning has never been easier!  I'll see you inside!",
      "target_audience": [
        "Anyone who wants to learn PHP to develop Web Apps"
      ]
    },
    {
      "title": "Intro To Ruby Programming",
      "url": "https://www.udemy.com/course/intro-to-ruby-programming/",
      "bio": "Beginners Series",
      "objectives": [
        "Create programs in the Ruby Language",
        "Understand the Basics of Programming the Ruby Language"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course"
      ],
      "description": "Ruby on Rails is one of the most popular web frameworks in the world, but you don't need to learn the \"Ruby\" programming language to use \"Rails\"...so most people don't!\n\nThat's a shame because Ruby is one of the most fun and easy to use programming languages to learn.  In this course I'll teach you the Ruby programming language from the ground up.\nThis is not a course on Rails, we'll focus only on Ruby here.  You'll quickly see just how fast and easy it is to code Ruby like a pro.\n\nAimed at the absolute beginner, we'll start with basic programming concepts and move on from there.\nThis course contains 27 videos and is just under 3 hours long.  Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or tools to take this course, I'll show you everything you need to know.\nLet's learn some Ruby!",
      "target_audience": [
        "This course is meant for absolute beginners who want to learn the Ruby programming Language"
      ]
    },
    {
      "title": "Java Programming Fundamentals",
      "url": "https://www.udemy.com/course/java-programming-fundamental/",
      "bio": "A step-by-step beginner's guide to programming in Java",
      "objectives": [
        "Java Programming Fundamentals That will Guide Them To Work And Understand The Logic of How Java Programming works"
      ],
      "course_content": {},
      "requirements": [
        "You Just Need To Know How to operate The Computer and Thats All"
      ],
      "description": "Java Programming Fundamentals\nJava is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.\n\n\nJava is one of the most popular and widely used programming languages.\n\n\nJava has been one of the most popular programming languages for many years.\nJava is Object Oriented. However, it is not considered as pure object-oriented as it provides support for primitive data types (like int, char, etc)\n\n\nA step-by-step beginner's guide to programming in Java\n\n\nLearning Java and Having A Clear Concept may help You To Develop Skills\n\n\nHere In this Course, You Will Learn The Following\n\n\nAll The Required Skill Would Be To make Your EXPERT in Java\n\n\nYou Will, Learn the Following Things\n\n\nINSTALLING JAVA JDK\n\n\nINSTALLING JAVA ECLIPSE\n\n\nSETTING UP ECLIPSE, CREATE HELLO WORLD\n\n\nSYNTEX AND VARIABLE\n\n\nINDEPT OF VARIABLE\n\n\nDECLARATION AND COMMENT\n\n\nIF ELSE STATEMENT\n\n\nBOOLEAN AND NESTING\n\n\nWHILE LOOP AND DO LOOP\n\n\nFOR LOOP\n\n\nSWITCH STATEMENT, LOGICAL OPERATORS\n\n\nARRAY\n\n\nFeel free to let me know how this Course was\n\n\nand did you like my explanation if you have any suggestions on what more you want me to add\n\n\nhave made it simple to understand, if the concept is clear then no matter which language you learn the concept remains the same in maximum language\n\n\nBest of Luck for your future",
      "target_audience": [
        "Programming To learn Java"
      ]
    },
    {
      "title": "Master Python for Data Handling [2025]",
      "url": "https://www.udemy.com/course/master-python-for-data-handling/",
      "bio": "Learn to master the Python programming language and how to use Python for advanced Data Handling",
      "objectives": [
        "Master Python Programming - data types, native data structures, data transformers, functions, and logic",
        "Data Handling - understand data handling, transform, manipulate, and calculate data. Move data between common file formats and data structures",
        "Advanced Data Handling - understand and use advanced multi-dimensional uneven data structures How to generalize functions",
        "Python Object Oriented Programming - understand object orientation, create custom advanced objects, methods, and and functions, learn to generalize functions",
        "Cloud Computing - use Anaconda Cloud Notebook (Jupyter Notebook). Learn to use Cloud Computing resources",
        "Optional: use Anaconda Distribution's Jupyter Notebook and Conda package management system"
      ],
      "course_content": {},
      "requirements": [
        "Everyday experience using a computer with Windows, MacOS, or Linux is recommended",
        "Access to a computer with an internet connection",
        "Programming experience is not needed",
        "The course only uses costless software",
        "Walk-you-through installation and setup videos for Windows 10/11 is included"
      ],
      "description": "This video course will teach you to master Python 3, one of the most popular programming languages in the world.\nYou will learn to master Python's native building blocks and powerful object-oriented programming to make you able to use Python for Data Science and Machine Learning Data Handling tasks. You will learn to design your own advanced constructions of Python’s building blocks and execute detailed data handling tasks using these building blocks with limited assistance from file handling libraries.\n\n\nYou will learn:\nPython Programming\nPython's data types (integer, float, string)\nPython’s native data structures (set, tuple, dictionary, list)\nPython’s data transformers, functions, object orientation and logic\nHow to make your own custom advanced functions and how to generalize functions\nHow to make your own custom advanced objects\nData Handling\nHow to transform, manipulate, and calculate data\nHow to move data around between common file formats and data structures\nHow to use advanced multi-dimensional uneven data structures\nCloud Computing: To use the web browser-based Anaconda Cloud Notebook (Cloud-based Jupyter Notebook). Learn to use Cloud Computing resources in this course.\nOption: To use the Anaconda Distribution (Windows, Mac, Linux, and more)\nOption: Python environment fundamentals with the Conda package management system and command line installing/updating of libraries and packages – golden nuggets to improve your quality of work life.\nAnd much more…\nThis course is an excellent way to learn to master Python and Data Handling! Data Handling is the process of making data useful and usable for data analysis. Most Data Scientists and Machine Learners spends about 80% of their working efforts and time on Data Handling tasks. Being good at Data Handling and Python are extremely useful and time-saving skills that functions as a force multiplier for productivity.\n\n\nThis course is designed for anyone who wants to\nlearn to Master Python 3 from scratch or the absolute beginner level\nlearn to Master Python 3 and knows another programming language\nreach the Master - intermediate Python programmer level as required by many advanced Udemy courses in Python, Data Science, or Machine Learning\nlearn Data Handling with Python\nlearn advanced Data Handling and improve their capabilities and productivity\nRequirements:\nEveryday experience using a computer with Windows, MacOS, or Linux is recommended\nProgramming experience is not needed\nThe course only uses costless software\nWalk-you-through installation and setup videos for Windows is included\n\n\nThis course is the course we ourselves would want to be able to enroll in if we could time-travel and become new students. In our opinion, this course is the best course to learn the Python and Data Handling.\nEnroll now to receive 9+ hours of detailed video tutorials with manually edited English captions, and a certificate of completion after completing the course!",
      "target_audience": [
        "Anyone who wants to learn to Master Python 3 from scratch or the absolute beginner level",
        "Anyone who wants to learn to Master Python 3 and knows another programming language",
        "Anyone who wants to reach the Master/intermediate Python programmer level as required by advanced Udemy courses",
        "Anyone who wants to learn Data Handling with Python",
        "Anyone who wants to learn advanced Data Handling and improve their capabilities and productivity"
      ]
    },
    {
      "title": "Ruby Programming for Beginners",
      "url": "https://www.udemy.com/course/learn-ruby-programming-in-ten-easy-steps/",
      "bio": "Learn Ruby Programming the fast and easy way!",
      "objectives": [
        "Hours of video lectures detailing the ten steps to becoming an awesome Rubyist",
        "Free eBook The Little Book of Ruby and exclusive discount for The (Big) Book of Ruby",
        "Downloadable source codes and sample test files to complement lectures",
        "5 extra videos detailing Ruby on Rails, Symbols, Recursion, and other challenges",
        "Interactive quizzes to let you test your understanding of the topics covered"
      ],
      "course_content": {},
      "requirements": [],
      "description": "Learn Ruby today!\n\nRuby is famous for being easy to learn but most users only scratch the surface of what it can do. While a typical Ruby tutorial or book focuses on Ruby's trendier features this course reveals the secret inner workings of one of the world's most popular programming\nlanguages. It helps you learn Ruby in one of the easiest ways possible through 10 simple steps that will have you writing clear maintainable code in no time. Rather than bog you down with a lot of theory this course takes a hands-on approach and focuses on helping you learn Ruby so that you'reproductive on day one.\n\nWhether you're new to programming or just new to Ruby this Ruby tutorial is your guide to rapid real-world software development withthis unique and elegant language.\n\nWho uses Ruby?\n\nRuby is an incredibly powerful and highly scalable object-oriented language. Leading technology companies & startups around the world use Ruby or the Ruby on Rails framework to power their websites & web applications. They include:\n* Amazon\n* Twitter\n* Electronic Arts\n* Yahoo\n* New York Times\n* 37 Signals\n* And many many more...",
      "target_audience": []
    },
    {
      "title": "Fundamentals of Programming",
      "url": "https://www.udemy.com/course/fundamentals-of-programming-languages/",
      "bio": "Learn the Basics of Programming in 9 languages simultaneously: Java, Python, Go, C++, PHP, Ruby, C#, JavaScript & C",
      "objectives": [
        "Grasp the basics of programming in Java, C, Python, Go, Ruby, C++, JavaScript, PHP and Ruby",
        "You will be ready to dive into ANY area of software development: app programming, video game programming, web programming, and more",
        "Best practices for writing code"
      ],
      "course_content": {},
      "requirements": [
        "The course explains the concepts in depth from the ground up, no previous knowledge is necessary. EVERYTHING is explained in the course!",
        "Knowing how to use a PC at a basic level such as knowing how to install programs",
        "Overall, have the willingness of learning!"
      ],
      "description": "In this Fundamentals of Programming course you will learn in a basic and very complete way the most elementary notions about software development. This course will give a complete overview of all the most basic concepts to learn how to program, which will allow you to understand any language thanks to the general perspective that you will acquire. In fact, throughout the course you will learn how to apply each new idea in 9 different languages simultaneously.\nYouwilllearn the basics of programming in several of the mainareas of software development:\nWeb Development\nMobile ApplicationDevelopment\nDesktop ApplicationDevelopment\nI encourage you to take a look at the syllabus and any of the classes that are available before you buy the course and you will certainly want to see the rest of the course.\nThe languages that we will see in this course are the following:\nPython\nRuby\nJavaScript\nPHP\nJava\nGo\nC\nC++\nC#\nIn addition, you will have downloadable educational material, suggested exercises and examples of real-life software usage, so that you can understand how such programs have been developed and know how to do it yourself.\nThe course is divided into several sections:\nIntroduction to Programming\nIn this section you will understand what programming is, what programming languages are, what different types of languages there are, how they interact with the machine's processor, you will know what's really going on internally, which areas of development exist and in which languages they can be carried out, as well as the different tools you can use to program in each of the 9 languages addressed in the course.\n\n\nData Handling\nHere you will learn the types of data that exist, how each language handles them, how to do operations with values and advanced resources such as arrays and multi-dimensional matrices, to store mass data.\n\n\nStructured Programming\nIn this section you will understand how the execution flow of the instructions written in the program’s code works, so you will learn how to take control of the execution and decide what your program should do at each moment.\n\n\nModular Programming\nDiscover the most basic ways to group the code in independent blocks to have all the instructions better organized and in an optimized way. This will help you to maintain and visually understand the execution process.\n\n\nObjectOrientedProgramming (OOP)\nYou don't really know how to program if you don't understand Objects, what they are, how they work, how to create and manage them, as well as how to establish Inheritance between Objects and the use of Polymorphism. In this section I will show you all these things with several practical examples.\n\n\nAll concepts are explained in detail, step by step, and with an emphasis on explaining the purpose of each thing. This way you will be able to lay the foundations of your professional development from the very beginning.This course will allow you to expand into any area of software development.\nIsn't it great? Best part of it all is that it's within your reach.\nBuy the course and enjoy everything that is awaiting you.\nSee you soon!\nJosé Javier Villena",
      "target_audience": [
        "Programming Students",
        "Systems Engineering Students",
        "Cross-platformDevelopmentStudents",
        "Web ApplicationDevelopmentStudents",
        "Videogame Development Students",
        "Anyoneinterested in Programming"
      ]
    },
    {
      "title": "The Complete Lua Programming Course: From Zero to Expert!",
      "url": "https://www.udemy.com/course/the-complete-lua-programming-language-course/",
      "bio": "The modern Lua course for everyone! Master Lua with projects, challenges and theory. Many courses in one!",
      "objectives": [
        "Become an advanced, confident, and modern Lua developer from scratch.",
        "Become job-ready by understanding how Lua really works behind the scenes.",
        "Lua fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, etc.",
        "How to think and work like a developer: problem-solving, researching, workflows.",
        "Get fast and friendly support in the Q&A area.",
        "Practice your skills with 50+ challenges and assignments (solutions included)."
      ],
      "course_content": {},
      "requirements": [
        "No coding experience is necessary to take this course! I take you from beginner to expert!",
        "Any computer and OS will work — Windows, macOS or Linux. We will set up your text editor in the course."
      ],
      "description": "You’ve just stumbled upon the most complete, in-depth Lua programming course online.\nWhether you want to:\n- build the skills you need to get your first Lua programming job\n- move to a more senior software developer position\n- become a computer scientist mastering in computation\n- or just learn Lua to be able to create your own Lua apps quickly\n\nThis complete Lua Masterclass is the course you need to do all of this, and more.\n\n\nThis course is designed to give you the Lua skills you need to become a Lua developer. By the end of the course, you will understand Lua extremely well and be able to build your own Lua apps and be productive as a computer scientist and software developer.\n\n\nWhat makes this course a bestseller?\nLike you, thousands of others were frustrated and fed up with fragmented Youtube tutorials or incomplete or outdated courses which assume you already know a bunch of stuff, as well as thick, college-like textbooks able to send even the most caffeine-fuelled coder to sleep.\nLike you, they were tired of low-quality lessons, poorly explained topics, and confusing info presented in the wrong way. That’s why so many find success in this complete Lua developer course. It’s designed with simplicity and seamless progression in mind through its content.\n\nThis course assumes no previous coding experience and takes you from absolute beginner core concepts. You will learn the core Lua skills and master functional programming. It's a one-stop shop to learn Lua. If you want to go beyond the core content you can do so at any time.\n\n\nHere’s just some of what you’ll learn\n(It’s okay if you don’t understand all this yet. You will in the course)\nAll the essential Lua keywords, facts, relations, arguments and expressions needed to fully understand exactly\nwhat you’re coding and why - making programming easy to grasp and less frustrating.\nYou will learn the answers to questions like What is a Lua database, What are rules and models and to apply them to your Lua apps.\nFunctions and Main Structure of Pattern Matching Systems along with dealing with uncertainty and knowledge representation.\nComplete chapters on Functional programming and many aspects of the Lua Recursive mechanism (the protocols and tools for building applications) so you can code for all platforms and derestrict your program’s user base.\nHow to develop powerful Lua applications using Advanced Tree Representations and Module-Directed Programming.\n\n\nWhat if I have questions?\nAs if this course wasn’t complete enough, I offer full support, answering any questions you have each day of the week.\nThis means you’ll never find yourself stuck on one lesson for days on end. With my hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nThere’s no risk either!\nThis course comes with a full guarantee. Meaning if you are not completely satisfied with the course or your progress, simply let me know and I’ll refund you 100%, every last penny no questions asked.\nYou either end up with Lua skills, go on to develop great programs and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\nYou literally can’t lose.\n\n\nReady to get started, developer?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced Lua brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\nSee you on the inside (hurry, Lua is waiting!)",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of Lua.",
        "Take this course if you have been trying to learn Lua but: 1) still don't really understand Lua, or 2) still don't feel confident to code real apps.",
        "Take this course if you already know Lua and are looking for an advanced course. This course includes expert topics!",
        "Take this course if you want to get started with programming: Lua is a great first language!"
      ]
    },
    {
      "title": "Become a Node.js developer:/Node.js/Express.js/MongoDB/API",
      "url": "https://www.udemy.com/course/become-a-nodejs-developernodejsexpressjsmongodbapi/",
      "bio": "Learn Node.js from scratch by building a real-world Chat application and a REST API",
      "objectives": [
        "Build, test, and launch Node apps",
        "Create Express web servers and APIs",
        "Store data with Mongoose and MongoDB",
        "Deploy your Node apps to production environment",
        "Create real-time web app with Node ,MongoDB and SocketIO",
        "Read and write to files using FS Module",
        "Read to streams",
        "Write to streams",
        "Store data and communicate with online database",
        "Track your app with version control",
        "Create and test request handlers"
      ],
      "course_content": {
        "IntroductioNode.js Setup": [
          "Introduction",
          "What is Node.js",
          "Download and install node.js",
          "A note on text editors",
          "Installing Sublimetext",
          "Installing Visual Studio Code",
          "Installing Atom",
          "Install Postman"
        ],
        "Some Node Fundamentals": [
          "What is NPM",
          "Updating NPM",
          "Common NPM Commands",
          "Global Objects",
          "Synchronous and Asynchronous",
          "Asynchronous vs Synchronous EventListeners",
          "Events and Emitters",
          "Example Event Emitter",
          "Callbacks",
          "Components of Nodejs Application",
          "Modules and Packages",
          "Installing 3rd party packages",
          "RDBMS VS NOSQL"
        ],
        "Express.js": [
          "What is express",
          "Installing Express.js",
          "Creating a basic express app",
          "Express application generator",
          "Creating an app with Express application generator",
          "Package.json file",
          "App.js file",
          "Editing dependences",
          "Using template engines with express",
          "How to start node server",
          "How to stop node server",
          "What is Routing",
          "How routing works",
          "Cloning Routing Functions"
        ],
        "The FS Module": [
          "What is FS Module",
          "Reading Files",
          "Listing Files",
          "Writing to files",
          "Appending files",
          "Creating directories",
          "Renaming directories",
          "Deleting files",
          "What are streams",
          "Reading from streams",
          "Piping Streams",
          "Writing to streams"
        ],
        "Build a ChatApp with Node,Express,Socket.io,Mongodb": [
          "What we will create",
          "Creating a project folder and package.json file",
          "Installing Express.js",
          "Serving static content with express",
          "Using callback function",
          "Using arrow function",
          "Creating user interface- Part 1",
          "Creating user interface- Part 2",
          "Adding jQuery",
          "Creating a get messages service: Part 1",
          "Creating a get messages service: Part 2",
          "Creating a post messages service part 1",
          "Creating a post messages service part 2",
          "Sending Post request from User Interface",
          "Installing socket.io",
          "Setting up socket.io",
          "Emitting messages to client",
          "What is MongoDB",
          "MongoDB Setup",
          "MongoDB Setup Updated",
          "Creating a new database",
          "Creating a database user",
          "Installing Mongoose",
          "MongoDB Data Types",
          "Connecting to mlab",
          "Connecting to mlab Updated",
          "Saving data to MongoDB",
          "Replacing message array",
          "ChatApp Code"
        ],
        "Deploying and hosting your app": [
          "What you need to do",
          "Installing git",
          "Creating Heroku account",
          "Installing Heroku-CLI",
          "Tracking your app in Git",
          "Deploying your app to Heroku",
          "Checking Heroku logs"
        ],
        "Build a REST API with Node and Express": [
          "What is an API",
          "Overview of API and Project Code",
          "Create a package.json file",
          "Install Express",
          "Install Jol",
          "Creating an application file",
          "Creating an array of objects",
          "Creating READ request handlers",
          "Install Nodemon",
          "Http",
          "Http Request Methods",
          "Http response codes",
          "Testing READ request handlers",
          "Creating functions to validate data",
          "Create Request Handler",
          "Test the create request handler",
          "Update request handler",
          "Test the Update request handler",
          "Delete request handler",
          "Test the delete request handler",
          "Thank You"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "A basic understanding of JavaScript"
      ],
      "description": "Node.js is a very powerful JavaScript-based framework/platform built on Google Chrome's JavaScript V8 Engine. It is used to develop web and mobile applications.. Node.js is open source, completely free, and used by thousands of developers around the world. Node was built with JavaScript so it helps if you have some understanding of how JavaScript actually works.Also having  some understanding of other web technologies such as HTML, CSS, AJAX is useful.\nNodes uses an event-driven, non-blocking I/O model that makes it lightweight and efficient—perfect for data-intensive real-time applications that run across distributed devices. Nodes is a platform built on the Chrome JavaScript  run time that can help you build fast, Scalable network applications.\nNode is quite popular and used by some big companies like  eBay, General Electric, GoDaddy, Microsoft, PayPal, Uber, and Yahoo! just to  name a few. By the end of this course you will have some basic understanding of Node.js.  build applications.\nWe will be building a real-time chat application that you can use to communicate with your friends and family using node ,express ,socketio and mongodb.  Also we will build a REST APi from scratch using Node and Express. REST stands for Representational State Transfer and defines a set of standards for web services.  It is an architectural style as well as an approach for communications purposes that is often used in various web services development.\nAn API is an interface that different software programs use to communicate with each other.\nRESTful API is an API that conforms to the REST architectural style and constraints. REST systems are stateless, salable,cacheable, and have a uniform interface.",
      "target_audience": [
        "Beginner Node Developers"
      ]
    },
    {
      "title": "Python Programming/Script/OOP/Advanced for Python Projects",
      "url": "https://www.udemy.com/course/python-programming-in-depth/",
      "bio": "Python for Projects Script Advanced Python Object Oriented Programming Python OOP Python 3 Automation Python Projects",
      "objectives": [
        "250+ Practice exercises for python programming practice",
        "350+ Quiz questions to reinforce your knowledge",
        "Create 5 projects",
        "To the point explanation, no waste of time",
        "Get the skills to be a successful Python professional",
        "Get the confidence to face Python coding interviews",
        "Be comfortable writing code in python",
        "Lots of code samples",
        "Concepts explained with visualizations",
        "Solutions of all the exercises",
        "Master all of the basics of Python 3 Programming",
        "Learn advanced features of Python 3"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Computers",
        "Computer with an internet connection",
        "Desire to learn"
      ],
      "description": "This \"Python Programming / Script / OOP / Advanced for Python Projects\" course is thoroughly detailed, to the point and does not waste any time. It provides 5 projects, numerous 350+ quiz questions and 250+ practice exercises with solutions to strengthen your Python Programming skills.\nWhy learn Python\nAccording to recent surveys, Python is one the most popular programming languages in the world. It is used by tech giants like Google, Amazon, Instagram, Facebook and many more.\nKnowledge of Python is an important prerequisite for working in emerging fields such as Data science, Machine Learning and Artificial Intelligence. Python programmers are paid high salaries in the software industry and there is an ever increasing demand for Python professionals in the industry.\nThe reason for Python's popularity is that it is powerful, yet very simple. If you have never programmed before then Python is the best language to start your journey of programming. The code written in Python is shorter than equivalent code written in other languages. Developers love this language and this increases the speed of development which is one of the main reasons why companies prefer Python.\nWhy take this course\nThis \"Python Programming / Script / OOP / Advanced for Python Projects\" tutorial is an efficient and detailed course that teaches you Python in depth without wasting much time. The content of the course is very concise and the presentation is to the point and straightforward.\nYou will get the opportunity to practice Python programming concepts by solving various exercises and quizzes. Solution to each exercise is provided. No prior knowledge of programming is required, this course will smoothly take you from a beginner to an expert.\nYou can clear your doubts in the question and answer forum inside the course.\nThis \"Python Programming / Scripting / OOP / Advanced for Python Projects\" course explains the Python features in step-wise manner. All the topics have been explained with Python programs in simple way. You will also see the demonstration of source code implementation for each topic with good examples and programs. This course will build Python programming/scripting skills of developers who have basic understanding of programming. You will learn rich Python programming concepts which will help in providing efficient solution of software projects. You will be able to understand and implement all the Python programming techniques and apply in Python projects/code. This tutorial will also help you to present yourself well for Python coding interview questions.\nHere is the course content-\nIntroduction\nGetting Started with Python\nStrings\nLists and Tuples\nDictionaries and Sets\nConditional Execution\nLoops\nLooping Techniques\nComprehensions\nFunctions\nModules\nScopes and Namespaces\nFiles\nObject Oriented Python Programming\nIterator and Generators\nDecorators\n350+ Quiz questions\n250+ Practice exercise for programming\n5 Projects\nCourse will be updated by adding new topics in detail to have good understanding of Python programming features to build the technical strength and shape your career.\nThis \"Learn Python Programming / Scripting / OOP / Advanced for Python Projects\" online course on udemy will be great help to developers to have good Python programming/scripting skills and work on Python projects. Also it will be a good complement to any book/tutorial.\nWhat students are saying about this course\n\"Excellent. The course goes at a very good pace and points out some very useful tips. The instructor is detailed and explains concepts very clearly.\"\n\"I have been looking for an advanced beginner/intermediate python course and finally found it. I love the teaching style.\"\n\"Very good. She stays very focused. No stories . No BS. 5 out of 5\"\n\"Yes this is far better than the courses I was taking on datacamp. The instructor is straight to the point and great at explaining things. I feel like I will learn a lot with this Python Masterclass course\"\n\"This course is one of the best python programming courses\"\n\"Exceeded Expectations....\"\n\"wonderful explanation with examples\"\n\"Examples are good and explanation is very good\"\n\"Very methodical approach of explanation. Beginner level programmer will find it very convenient to understand and utilize\"\n\"Very detailed explanation. Very nice course. No need to refer to any text book again for learning Python language(I think in most of the cases). Each and every point is explained. Especially pitfall cases are addressed in all the topics. Course designed and explained very well. If anyone is interested learning Python language(not third party libraries), this is the best course. Thanks a lot.\"\n\"The instructor gives clear explanations and since this is an advanced course doesn’t spend too much time on basics.\"\n\"Really great coverage of basic principles. The instructor truly understands the course content.\"\n\"Nice explanation with examples\"\n\"Very good presentation and makes the fundamentals of the python language very clear.\"\n\"This is an excellent course for solid grounding in python. All confusion and incomprehension of certain concepts in advanced use cases are caused by lack of understanding of python fundamentals. This course addresses all that.\"\n\"Good\"\n\"Like the way each topic is explained first with examples (concentrating on the exceptions)\"\n\"i learnt python by myself on the job, and i am understanding how and why python delivers some results\"\n\"excellent! theory is delivered not just how to write code. Also graphics are very good in adding further depth to learning foundation while the quizzes presented after new information further cements knowledge and shows what you may need to review.\"\n\"This course is too good !!!\"\n\"Amazing and wonderful\"\n\"Each concept is explained quite clearly.\"\n\"As a beginner, not only in Python, but also in programming, I found this course to be really helpful. The course is well structured an clear mannered and the instructor is really competent. The projects are very well placed too and would give you enough questions to put your skill in. It's really a Python Mega course with lot of content.\"\n\"Excellent course! Teaches Python from basic to advanced level, its good to have with 2022 complete python bootcamp.\"\n\"Learning new thing always challenging so learning new language. But when I started this course then from beginning it became so interesting that I am going to complete it sooner than later. I hope that I will learn Python within few days which was not possible without this course. Course is fast paced and which is good for experienced developers. Course is well researched and structured, its Python 3 deep dive. Author of this course has shown great passion. You can learn python programming masterclass in max 100 days of python code.\"\n\"Looks great, Underscore thing was a new learning for me and thanks for teaching\"\n\"excellent and very nice video tutorial and I want to learn many things in python from your videos and needed more knowledge in future with the same way of teaching\"\n\"Good Teaching\"\n\"so far I am loving it. thanks\"\n\n\nSo what are you waiting for, click on Buy button to enroll now and start learning.",
      "target_audience": [
        "Anyone interested in learning Python from scratch",
        "Programmers wanting to learn Python as a prerequisite for working in Data Science or Machine Learning",
        "Python users wanting to master advanced features and work more effectively"
      ]
    },
    {
      "title": "Getting Started with Java",
      "url": "https://www.udemy.com/course/java-development-environment/",
      "bio": "A gentle introduction to the Java programming language along with the tools you will need to be a productive developer",
      "objectives": [
        "Install Java on your local machine",
        "Write, Compile and Run a Hello, World application from the command line.",
        "Install IntelliJ and be productive inside this awesome IDE",
        "Understand what a build tool is and create a Java project from scratch",
        "Understand where to find help when they get stuck"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Meet your Instructor",
          "Why you should learn Java",
          "Join my community"
        ],
        "Getting Started with Java": [
          "Java Terminology",
          "Java Terminology",
          "Java Version Check",
          "Installing Java on Windows",
          "SDKMan",
          "Installing Java on Mac OS",
          "Exercise: Java Version Check",
          "Exercise Review: Java Version Check"
        ],
        "Writing your first Java Program": [
          "Writing your first Java Program",
          "Java Program Execution",
          "Hello, World",
          "Exercise: Write your own program",
          "Exercise Review: Write your own program"
        ],
        "IDE & Text Editors": [
          "IDE & Text Editors Overview",
          "IDE & Text Editor Options",
          "Installing IntelliJ IDEA",
          "Hello, World. IntelliJ Edition",
          "Exercise: Write your own application in IntelliJ",
          "Exercise Review: Write your own application in IntelliJ"
        ],
        "IntelliJ": [
          "IntelliJ Tour",
          "Themes",
          "Plugins",
          "Code Formatting & Organizing Imports",
          "Templates",
          "Using IntelliJ"
        ],
        "Advanced Tooling": [
          "Advanced Tooling Overview",
          "Code Generation",
          "Debugging",
          "Running IntelliJ from the Command Line",
          "Refactoring",
          "Github Source Control",
          "Java Decompiler",
          "Keyboard Shortcuts & Tips"
        ],
        "Java Build Tools": [
          "Build Tools Introduction",
          "Maven",
          "Maven Dependencies",
          "Gradle",
          "Java Build Tools"
        ],
        "JVM Languages": [
          "Languages Introduction",
          "JVM Languages",
          "Groovy",
          "Kotlin",
          "Scala"
        ],
        "Getting Help": [
          "Java Documentation",
          "Help Resources"
        ],
        "Bonus": [
          "Goodbye",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "You will need a PC or a Mac.",
        "If you're a seasoned Java veteran this course isn't for you.",
        "A desire to learn about how to setup your local development environment.",
        "Interest in learning about the Java world."
      ],
      "description": "I recently purchased a new laptop and thought to myself, this would be a great time to show others how I setup my machine for Java development, and that is how this course was born.\nI want to make sure I am very upfront about who this course is for and who it isn't for. If you are an experienced Java developer this course probably isn't for you. If you are new to programming or new to the Java language this course is for you.\nWhen I started out writing Java I always got confused with all the Acronyms in the language. What is the difference between the JRE and the JDK, what is the JVM and what is an SDK. We will answer all of these questions and more. We will also discuss how to install Java and switch between different versions. While we are at it we might as well write our first Java program.\nNext, we will move into Installing my favorite IDE, IntelliJ. From there I will walk you through a ton of features of the IDE. All of these features are there to make you a more productive Java developer.\nMy hope for you is that this course will give you a peek into the world of Java as you begin your journey. You might not use everything in this course right away but if they come up in conversations at school or with coworkers you will know exactly what they are talking about. I look at courses like a good book. If you can take away just 1 or 2 ideas from the course, I have done my job.\nI LOVE the Java programming language and hope that I can make your entry into this wonderful language an easy one.",
      "target_audience": [
        "Anyone interested in getting started with the Java Programming Language",
        "Students who have just begun their journey in the world of Java",
        "Students who want to learn from someone who has 18 years of experience in the field"
      ]
    },
    {
      "title": "Boost Your C# With Behavioural Design Patterns",
      "url": "https://www.udemy.com/course/boost-your-csharp-code-with-behavioural-design-patterns/",
      "bio": "A complete guide to the final 11 behavioural design patterns from the famous book by the Gang Of Four.",
      "objectives": [
        "Learn all 11 Behavioural Design Patterns",
        "Invoke operations with the Command pattern",
        "Build a State Machine",
        "Create a Mediator to structure inter-object method calls",
        "Use the Iterator to enumerate collections",
        "How does .NET implement the Observer pattern?",
        "The Visitor pattern, finally explained in simple terms",
        "Strategy versus Template patterns",
        "... and much more!"
      ],
      "course_content": {
        "Introduction": [
          "About This Course",
          "Meet Your Instructor",
          "The Gang Of Four And The 23 Design Patterns",
          "Windows, OS/X Or Linux?",
          "Background Info - About Me"
        ],
        "Behavioural Design Patterns": [
          "Section Introduction",
          "Chain Of Responsibility Pattern",
          "Command Pattern",
          "Interpreter Pattern",
          "Iterator Pattern",
          "Mediator Pattern",
          "Memento Pattern",
          "Observer Pattern",
          "State Pattern",
          "Strategy Pattern",
          "Template Method Pattern",
          "Visitor Pattern",
          "Section Recap",
          "Behavioural Design Patterns"
        ],
        "Final Words": [
          "Course Recap",
          "Bonus Offer"
        ]
      },
      "requirements": [
        "You need a Windows, Mac or Linux laptop with Microsoft Visual Studio, Xamarin Studio or Monodevelop",
        "You should be a beginner, intermediate, or advanced C# developer",
        "That's it!"
      ],
      "description": "In 1994 the \"Gang of Four\" published a book titled \"Design Patterns: Elements of Reusable Object-Oriented Software\". This book contains 23 fundamental software design patterns. It is regarded as the standard reference manual for object-oriented design theory and practice.\nIn this course I will teach you the final 11 design patterns. These are all behavioural design patterns. You use these patterns to structure how the different parts of your application architecture interact with each other.\nBy the end of the course you will be fluent in all 11 behavioural design patterns. With this knowledge you will be well on your way to become a Senior Application Architect.\nWhy should you take this course?\nYou should take this course if you are a beginner or intermediate C# developer and want to take your career to the next level. Some of the patterns (e.g. 'Visitor') might sound very complicated, but all of my lectures are very easy to follow, and I explain all topics with clear code and many instructive diagrams. You'll have no trouble following along.\nOr maybe you're working on the application architecture of a large project, and you need to create a robust design that is instantly clear to your team members? The patterns in this course will help you immensely.\nOr maybe you're preparing for a C# related job interview? This course will give you an excellent foundation to answer any software architecture questions they might throw at you.",
      "target_audience": [
        "Beginner, intermediate, and advanced C# programmers who want to learn the fundamental design patterns from the \"Gang of Four\".",
        "Developers who are about to take a job interview and need to prepare for software architecture questions.",
        "Professionals who are writing a section of mission-critical code in a large C# project"
      ]
    },
    {
      "title": "Build Real Software with Python, PyQt5 and QT Designer",
      "url": "https://www.udemy.com/course/python-pyqt5/",
      "bio": "We will build step-by-step a 6800 US Dollars real Software using Python, PyQt5 and Sqlite3. A 2h Straightforward Course.",
      "objectives": [
        "Build full functional software from A to Z using Python and PyQt5",
        "Design an attractive GUI using QT Designer",
        "Learn how to design, program and sell your data management App",
        "Learn step by step how to develop a database under Sqlite and how to display results on your GUI",
        "Learn how to use any Widget under PyQt5 and how to solve programming issues",
        "Python Desktop Application Development with PyQt"
      ],
      "course_content": {
        "Introduction and Course Overview": [
          "Introduction and Project Description",
          "Preview of the Final Result (GUI software and Database)"
        ],
        "Download and Install the Working Tools, Create the Database": [
          "Download and Install the Working Tools (Python 3.6 | PyQt5 | Sqlite )",
          "Create the Sqlite Database and fill it with Data",
          "Data Table"
        ],
        "Design of the GUI in QT Designer": [
          "Design of the GUI in QT Designer - Part1",
          "Design of the GUI in QT Designer - Part2"
        ],
        "Inventory Management Software Programming in Python": [
          "Programming Part 1 - Create PyQt GUI loading and displaying Class",
          "Programming Part 2 - Load Data from Database and display in GUI Table",
          "Programming Part 3 - Create Search Filter for Parts Inventory Count",
          "Programming Part 4 - Display Parts Inventory Statistics in QLabels",
          "Programming Part 5 - Display Top 3 Parts in QTable and Navigation Rows in GUI",
          "Programming Part 6 - Update Database table from our GUI button",
          "Programming Part 7 - Delete a Row from our Database Table using GUI commands",
          "Programming Part 8 - Add new Rows and Data to our Database from the GUI",
          "Programming Part 9 - Add Navigation buttons FIRST, PREVIOUS, NEXT, LAST"
        ],
        "Add Ressources to GUI, include CSS style, Compile the Software as EXE file": [
          "Include photos ressource to our GUI and link it to Python code",
          "Add CSS Style to the GUI form in QT Designer",
          "Compile the Software as (.exe) file using PyInstaller and AUTO-PY-TO-EXE",
          "In case you get EXE error",
          "Source files (Database + Python Code + GUI)"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Only some few basics of Python programming"
      ],
      "description": "Are you thinking to master PyQt5 for Graphical User Interface Development ? Do you write some codes in Python and you wonder how you can convert everything to a nice interactive user interface that can be used by huge number of people ?\nI can grantee to you that you are taking the best decision  in today World. After doing this course, you will meet your goal.\nI designed this course in a way to cover all the mandatory aspects of Python-PyQt development, starting from Downloading the working tools until the final deployment of our software to other users. The learning method i chooses is particular because we will work on a real case study \"nothing better than doing real things\" =>  we will create a software to respond to a customer demand (a Spare Parts Management Software for Manufacturing Company)\n\n\nWhat Students Already saying about this course:\nTuhin : \"The instructor has prompt knowledge about all the topics he taught us\"\nGopal: \"Hands-on - Step by step explanation\"\nTanmay: \"Very Excellent work so far and made easy to understand\"\nAnurag: \"Excellent faculty ... i just loved the way he taught us ... thanks sir for sharing your knowledge\"\nMridul: Great contents with real world app development insight with Python. Expecting more in near future\"\nAND MORE...\n......\nSpecial Focus:\nWhat i grantee to you in this course also is that you will get instant feedback on all your questions (less than 24h feedback). This will allow you to learn even faster and get up and solve any issue that you may face during your projects and codes.\n\n\nWhy Python & Why PyQt ?\nThe Python language has a large number of advantages: it is an object oriented language, interpreted, dynamically typed and benefiting from memory management via a garbage collector.\nFor all these reasons, Python is a very simple language to use. However, creating interface in Python using basic tools is somewhat tedious. This is why there are many Python modules allowing to realize graphical interfaces, PyQt is the best.\nMulti-platform available for Unix, Windows and Mac OS X; native look and feel the applications present the appearance of the operating systems on which they run by default, but it is possible to install another look and feel, even at runtime; it is implemented on the lower layers of graphics systems.\nPyQt is a module which allows you to link the Python language with the Qt library. It allows you to create graphical interfaces in Python. An extension of QtDesigner (graphical utility for creating Qt interfaces) makes it possible to manage the python code of graphical interfaces. PyQt has all the advantages of the famous Qt.\n\n\nWhat you will learn in this course:\nThe Skill that you will learn is: Python Desktop Application Development with PyQt\nIntroduction to the course objectives and modules\nInstall Anaconda\nInstall PyQt5\nInstall SQLITE Manager\nCreate parts.db   database and fill it with data\nCreate first Python script to connect and query the parts.db\nIntroduce QT Designer and create GUI\nCreate beautiful style for the GUI\nCreate the full code to run the GUI and do the software functionality\nHow to add and compile ressources like (photos...)\nHow to make an final executable file and share it with friends.",
      "target_audience": [
        "Beginner and intermediate Python programmers that want to build the next level software.",
        "Students that are curious about GUI development using Python and PyQt5 and they want to get a clear step by step methodology.",
        "Data Scientist that wants to convert their models into a GUI usable software",
        "Database Software developers that need to learn the robust GUI plateforme for Python: PyQt5 instead of Tkinter",
        "Any Python programmer that is upset with other GUI tools and want to go PRO with the QT world.",
        "Student welling to Learn \"In a fast way\" the Python Desktop Application Development with PyQt"
      ]
    },
    {
      "title": "Linked List Data Structure using Python",
      "url": "https://www.udemy.com/course/python-linked-list/",
      "bio": "Unlock your data structures potential by being able to create your own linked list in Python",
      "objectives": [
        "Have a good understanding on linked list",
        "Be able to write your own linked lists in Python",
        "Understand different types of linked lists such as Singly Linked List, Doubly Linked List and Circular Linked List",
        "Get better at problem solving in Python",
        "Leverage your Python programming skills"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with the basics of Python such as Variables, Data Types, Conditional Statements, etc.",
        "You should have an understanding of Object Oriented Programming in Python such as Classes, Objects, Methods, Inheritance, etc."
      ],
      "description": "If you have started using Python, by now you must have come to know the simplicity of the language.\nThis course is designed to help you get more comfortable with programming in Python. It covers completely, the concept of linked list using Python as the primary language.\nAlong with their Python implementation, you will learn the essence of linked list by understanding the different types of linked lists such as\nSingly Linked List\nDoubly Linked List\nCircular Linked List\nYou need to be equipped with the basics of Python such as variables, lists, dictionary and so on.\nYou also need to be familiar with object oriented programming in Python such as classes and objects, inheritance, etc.\nThis course will teach you:\nHow a linked list differs from the built-in list type of Python\nThe concept of linked list is explained from scratch and then you will move on to creating your own linked list in Python\nDifferent cases of insertions and deletions in a linked list will be covered. For each of such case, we will write programs in Python\nYou will find sections on brain teasers to get you thinking. The problem statement will be given for which you will first understand the logic and then write a solution in Python to improve your logical thinking.\n\n\nYou are comfortable with the basics of Python. Why not leverage your Python skills by hitting the enrol button? I hope to see you on the inside.",
      "target_audience": [
        "Students who would like to enhance their problem solving skills",
        "Students who are looking for a course to learn linked lists"
      ]
    },
    {
      "title": "Python Loops and Looping Techniques: Beginner to Advanced",
      "url": "https://www.udemy.com/course/python-loops-and-looping-techniques-beginner-to-advanced/",
      "bio": "Master Python for Loops, while Loops, nested loops and advanced looping techniques (+ projects and exercises)",
      "objectives": [
        "Understand the differences between for loops and while loops in Python.",
        "Choose the right type of loop and looping technique for a given scenario.",
        "Write for loops and while loops that are efficient and easy to read.",
        "Use for loops to iterate over strings, lists, tuples, dictionaries, sets, and file objects.",
        "Use built-in functions such as range(), enumerate(), zip(), sorted(), and reversed() to write for loops.",
        "Understand the purpose of the break and continue statements and how they control the flow of execution of a loop.",
        "Understand and write nested for loops and nested while loops.",
        "Identify and fix infinite loops in Python."
      ],
      "course_content": {},
      "requirements": [
        "You must have Python 3 installed or access to an online IDE to take this course.",
        "This is a beginner-friendly course that only requires basic Python knowledge, which will be reviewed in the second section.",
        "Visual Studio Code knowledge is recommended but not required. You may use any code editor or IDE you prefer during the course.",
        "Enthusiasm and dedication to learn Python loops. They are essential to write powerful programs in any industry."
      ],
      "description": "Learn how to use the power of for Loops, while Loops, nested loops (and more!) in Python. Build 4 projects, understand how loops work behind the scenes, and practice with coding exercises.\n\n\nTake your Python skills to the next level by mastering loops and looping techniques.\nLearn how for Loops and while Loops work behind the scenes with step-by-step graphical explanations.\nUse the power of built-in Python functions such as range(), enumerate(), zip(), sorted(), and reversed() to make your loops more powerful, more concise and more readable.\nUnderstand how nested for loops and nested while loops work and learn how to use them in practical scenarios.\nCustomize the functionality of your loops with break and continue. Learn how they work and when to use them.\nIterate over strings, lists, tuples, dictionaries, and sets.\nDetect infinite loops, find their cause, stop them and fix them.\nWrite clearer and more concise Python code.\n\n\nStudent Reviews\n- \"This course in awesome, it makes me understand the power of loops and how it benefit us in programming.\" - Surya Teja.\n- \"Great course. Most python courses do not cover loops in depth. Having an in depth understanding of loops is quite essential as loops are a crucial aspect of programming.\" - Dee.\n- \"My sincere thanks go out to the instructor. For more than five years I have been trying to learn Python, but I am not satisfied with my learning method. After taking this course, I understood how to learn the programming and execute the code in a beginner's manner. I would recommend this course not only for professionals, but even for school kids who want to learn how Python syntax and code work together to build a program. Ultimately, I found a course that suited my learning style and helped me understand the concept. In a simplified manner, she will help you clear up any doubts you may have.\" - Durga.\n- \"I love this course, the instructor has a way to make these serious materials feels fresh and fun.\"- Ivan Juniardi.\n\n\nCourse Updates\nAugust 2023 - UPDATE! Section 21 now has intermediate and advanced coding exercises.\nMay 2023 - NEW! Updated video lectures with a renewed style and a new code editor (Visual Studio Code).\nMay 2023 - NEW! Updated section overview videos\nMay 2023 - NEW! Updated lecture and section names\nMay 2023 - NEW! Improved assignments\nMay 2023 - NEW! Discussion topics for each section\nMay 2023 - NEW! Redesigned first and last sections\nMay 2023 - NEW! Improved and expanded quizzes\nApril 2023 - NEW! Updated articles with new format.\nNov 2021 - NEW! Updated quizzes with detailed explanations for each answer.\nOct 2021 - NEW! Downloadable Python files for the course exercises.\n\n\nEnhance your resume with new Python skills.\nPython is a very popular programming language that is used for a variety of real-world applications, including web development, data science, machine learning, and artificial intelligence. Learning Python loops and looping techniques is a great way to advance your skills in computer science. Loops are essential tools for any programmer, and they can be used to write powerful and efficient programs.\n\n\nYou will definitely use loops in any field, including:\nWeb Development\nMachine Learning\nData Science\nArtificial Intelligence\nGame Development\nMobile App Development\nBioinformatics\nMedical Software\nComputer Vision\nand... many more.\nLoops are also essential to implement data structures and algorithms. If you are thinking about entering any of these fields or if you are planning to expand your computer science skills, then this course is for you.\nAny piece of software that you can possibly imagine has repetitive processes that are implemented using loops. The concepts and techniques that you will learn in this course are easily transferable to other programming languages like Java, JavaScript, and many more.\n\n\nGoals\nBy the end of this course, you will be able to:\nWork with for loops and while loops in your programs.\nUnderstand how they work.\nRead loops written by other developers and understand their purpose.\nWrite nested loops and determine when to use them to approach tasks.\nUse the break and continue statements to stop loops when certain conditions are met.\nUse built-in Python functions in your for loops to write cleaner code, remove unnecessary variables, and make your code more concise.\n\n\nProjects\nYou will work on 4 projects:\nDraw a Pattern: you will use Python's built-in turtle module to draw patterns using for loops. We will start by drawing simple patterns and then gradually increase their complexity. You will be able to customize this project and experiment with the principles of for loops.\nCaesar Cipher: you will implement this basic encryption algorithm using a for loop. When the project is completed, you will be able to encrypt and decrypt secret messages (like Julius Caesar did!).\nGuess the Number: you will use a while loop and the binary search algorithm to implement a text-based guessing game. The user will select a number between 1 and 100, and the computer will try to guess the number by repeatedly halving the range of possible numbers. The binary search algorithm is explained in detail during the course.\nAnalyze Book Passages: you will use nested loops to read and analyze the content of a book passage in a text file. The program will display the frequency of each letter and the letter with the maximum frequency.\nAs you can see, you will have many opportunities to apply your knowledge in a wide range of areas during the course.\nYou will also acquire additional skills such as: problem solving, computational thinking, file handling in Python, knowledge of the Binary Search algorithm and the turtle module. All while learning how to work with loops!\n\n\nLearning Material & Resources\nThroughout the course, you will find these resources:\nVideo Lectures: 10+ hours of video lectures with carefully designed graphics, tables, and code visualizations. You will see how the code works behind the scenes with step-by-step explanations.\nProjects: build 4 projects and apply your skills in practical scenarios.\nCoding Exercises: practice with 40+ interactive coding exercises with their corresponding solutions. You will be able to check your solution immediately with the automated grader.\nQuizzes: check your knowledge with 30+ quizzes with 120+ questions that provide unlimited attempts and instant feedback.\nCourse Exam: take a final exam to test your knowledge of everything you learned during the course. The exam consists of 25+ questions and you can take it as many times as you like. You will receive detailed results for each attempt, so you can track your progress and identify areas where you need to improve.\nStudy Guide: review for the course exam with a detailed study guide with 100+ questions.\nArticles: read 80+ articles with detailed explanations and illustrations.\n\n\nWhat makes this course unique?\nThis course is unique in its focus on providing visual and detailed explanations of how each type of loop works in Python. You will not only learn how to use loops, but you will also understand the purpose of each line of code. This will give you a deeper understanding of how loops work and how they can be used to solve problems.\nThe course comes with a variety of study materials that complement the course experience. These resources include a study guide specifically designed for the course, which includes over 100 questions on the course content.\nYou will be able to solve coding exercises directly on the browser and you will receive instant feedback for your submission.\nYou will check your knowledge with quizzes that provide instant feedback and questions that will make you think more deeply about the topics presented in each section.\nYou will receive a certificate of completion that you can add to your resume and social media profiles to showcase your new skills.\nYou will also have lifetime access to the course.\n\n\nYou are very welcome to watch the preview lectures and check out the full course curriculum.\nIf you are looking for an engaging, visual, and practical course, then you found it.\nEnroll now, add \"Python Loops and Looping Techniques\" to your resume, and showcase your new skills.",
      "target_audience": [
        "Beginners who want to learn how to use loops in Python and how they work behind the scenes.",
        "Students who are taking a Python course for school or work.",
        "Professionals who want to learn how to use loops and looping techniques efficiently in their work.",
        "Anyone who is interested in learning more about Python programming."
      ]
    },
    {
      "title": "Mastering Ansible Automation for Network Engineers",
      "url": "https://www.udemy.com/course/ansible-course-for-network-engineers/",
      "bio": "100% Hands-On Ansible Training with Beginner to Advanced Level Topics - Using Network Automation SSH, REST API Examples",
      "objectives": [
        "Master Ansible Network Automation from scratch. No prior coding experience is needed. 100% Hands-on demonstration",
        "Elevate your career as a future-ready Network Automation Engineer, equipped with cutting-edge skills and expertise",
        "REST API Automation using Ansible GET, POST, PUT, PATCH DELETE operation sto Devices",
        "SSH Automation and Leverage TextFSM, NTC templates and PyATS CLI Parsers in Ansible for device configuration Parsing",
        "Learn to use Ansible Network resource modules such as cisco ios_facts, ios_config, ios_comands, ios_interfaces, ios_l3_interfaces, ios_static_routes",
        "Use RegEX Filters in Ansible for custom config parsing",
        "In-depth understanding on Ansible valut for encrypting/decrypting variables and files",
        "Cisco IOS Resource Modules",
        "PaloAlto Firewall Automation using Ansible Examples",
        "Gain Beginner to Advanced knowledge on Ansible Playbook and Task Options",
        "Explore Jinja2 templating for dynamic configuration Generation using host or group variables",
        "Understand ansible Magic Variables, hostvars, play_vars, include_vars, group_vars, host_vars with examples",
        "Learn advanced playbook features such as loops, conditionals, handlers , block, rescue and assert",
        "Lab setup using GNS3 VM and VS Code as the IDE for Playbooks with SSH remote development extension",
        "Utilize Ansible roles and collections for modular and reusable automation.",
        "Implement automation solutions across Network Devices such as routers switches etc",
        "Optimize Ansible playbook strategies and parallelism for faster execution",
        "Ansible's inventory and configuration file management",
        "Understand Ansible Core vs Community",
        "Create ansible custom modules using Python Script",
        "Ansible include vs improt with task roles and playbooks examples",
        "Ansible task options, play options and debugger",
        "Clear explanation on Ansible's Variable Precedence",
        "Ansible loops conditionals and exception handling",
        "How to use Ansible's filter and lookup plugins",
        "How to use Network device resource module for configuration management",
        "REST API Automation using Ansible",
        "Configuration Parsing using Ansible RegEx",
        "Brief Introduction to Ansible automation frameworks such as Ansible AWX"
      ],
      "course_content": {},
      "requirements": [
        "No prior Ansible or Python knowledge is required. You will learn everything you need to know",
        "Need knowledge on basic Networking concepts (What is SSH, Basic Interface Configurations in Router and Switches)",
        "Basics of Routing Protocols (static routes and dynamic routes) and Switching Protocols (vlans ) configuration knowledge",
        "Basic Understanding on setting up Cisco images in: GNS3 or EVE-NG",
        "Softwares used: Windows (Primary OS), VMWare Player,Ubuntu OS(VM), Ansible CLI, VSCode, GNS3VM"
      ],
      "description": "Learn Ansible Automation skills from scratch to an advanced level for automating your Network.\nGain an in-depth understanding of Ansible Playbook and Task Options\nFor attending this course you don't need any prior coding experience.\n100% Hands-on demonstration of the concepts using Network Automation Usecases\nThe IDE is VS Code and Cisco devices will be used for demonstrating most of the device interactions.(vIOS, IOS-XE)\nBelow are the topics in high level\nThe course will be starting with how to setup Lab for Ansible Network Automation Practice\nInstall and Setup Ubuntu OS VM for ansible\nSetup VSCode for SSH remote development\nAnsible installation in the Python VIrtual Environment\nAnsible Core and Community difference\nInventory and Config file setup\nYAML File ,Playbook fundamentals and Ansible Lint\nSSH Keybased Authentication to Cisco devices from Ansible\nAnsible Vault for encrypting files and variables\nDemonstration of Ansible Vault ID\ngroup_vars and host_vars\nHandle device specific variables and configurations effectively\nExplore advanced features of Ansible CLI\ncisco ios_facts and ios_commands module\ncisco ios_config module explained in detail\nPaloAlto Firewall Galaxy Collections Examples\nPaloAlto Address Objects, Object Groups and Security Rule automation using Ansible\nCisco config diff, parent command, before, after, match and replace options\nios config backup options\nConfiguration backup and save option\nCisco ios resource modules\ncisco interfaces, l3_interfaces and l2_interfaces resource module\ncisco ios_user and static_route module\nCLI Parsers\npyATS, ntc_templates and TextFSM Parsers\nAnsible  Magic Variables\nhostvars and play_vars\nset_fact vs vars explained\nAnsible Variable precedence explained in detail\nAnsible filter Plugins\ndefault, ternary, dict2items, items2dict filters\nto_json, from_json, to_yaml, from_yaml  filters\nzip, combine, map,json_query(using JMES Path) filters\nip_address, url and datetime filters\nlist operations and string manipulation using filters\nRegEX Filters\nRegex search, find_all and replace filters\nJinja2 templates example\njinja2 for loop and include option\njinja2 in ios_config module\nembed code in jinja2 template\nlookup Plugins\nfile lookup, template lookup plugins\nvars, env and pipe lookup plugins\nLoops and Conditionals :  loops, until and when\nPlay Options\nansible play strategies, forks and serial\ndebugger for effective troubleshooting\nhost order, log_path\ntags and limit option\ncheck_mode\nTask Options\ndelegate_to\nrun_once\nignore_erros and failed when\nchanged_when and no_log\nuse handlers and listen option\nblock and rescue for exception handling\nassert option\nHow to install ansible collections: using galaxy command, requirements file and github\nHow to create roles and add tasks to respective directories\nDetailed explanation of ansible include vs import\ninclude_tasks vs import tasks\ninclude_role vs import role\nimport_playbook module\nhow to create ansible custom modules\nconvert facts to csv file using custom module which uses python csv in the backend\nhow to pass module args to custom module\nhow to return data using custom module\nREST API from Ansible\nhow to use URI Module for REST API\nYANG Suite introduction\nREST API from Postman\nConvert POSTMAN REST request to Ansible URI task\nInitiate REST - GET, PUT,POST PATCH and DELETE Operations from Ansible\nHow to configure Cisco device using REST API\nhow to save config using rest API\nParse config using REST API\n\n\nExtra Learning Topic(AWX)\nInstall AWX in Minikube for learning\nBasics of Ansible execution environment (Podman)",
      "target_audience": [
        "Network Engineers, Network Administrators, Network Operatore",
        "Network Architects",
        "Net DevOps Engineers",
        "Network Automation Engineers",
        "Network Automation testing",
        "System Administrators, System Engineers",
        "Cisco Certified Professionals",
        "CCNA, CCNP , CCI Professionals",
        "All the Network Automation enthusiast",
        "DevNet",
        "DevOps who want to learn Network Automation",
        "Routing Switching, Wireless and Security Engineers",
        "Network Implementation Engineers",
        "Network Design Professionals",
        "Ansible Engineer Networking"
      ]
    },
    {
      "title": "SOLID C++",
      "url": "https://www.udemy.com/course/solid-cpp/",
      "bio": "Learn and practice C++ with SOLID object-oriented design principles",
      "objectives": [
        "Discover how to design and write robust and maintainable object-oriented code",
        "Develop an intuitive understanding of SOLID principles",
        "Learn how to follow SOLID principles using appropriate abstractions and programming patterns",
        "Learn how to follow SOLID principles using different C++ language features and idioms",
        "Know how to structure C++ projects, test and refactor object-oriented code",
        "Practice SOLID principles and C++ in assignments and final programming project (C++17)",
        "Learn how to use CMake and Boost libraries in C++ projects",
        "Learn how to use Google Test for unit testing",
        "Get acquainted with UML (class and sequence diagrams)"
      ],
      "course_content": {},
      "requirements": [
        "Beginner or intermediate C++ (used for examples and assignments)",
        "Basic understanding of OOP (class, polymorphism, inheritance, etc.)",
        "Ideally, you should have already worked on a few small hobby projects or have some commercial software development experience"
      ],
      "description": "Learning syntax of a programming language is not enough to become professional and build high quality software. One must also learn how to make good design and implement it properly so that software is robust, maintainable, flexible and testable. That’s why we need object-oriented design principles like SOLID:\nSingle responsibility\nOpen-closed\nLiskov substitution\nInterface segregation\nDependency inversion\nThis is probably the most complete SOLID principles course on Udemy. But it’s also special in that it focuses on C++ programming language, which we use for examples and assignments. And this course covers both theory and practice.\n\n\nBy the end of this course you should\nDevelop an intuitive understanding of all SOLID principles\nUnderstand when SOLID principles are needed and when not\nLearn how to follow SOLID principles in general, regardless of a programming language, using appropriate abstractions and programming patterns\nLearn how to follow SOLID principles using different C++ language features and idioms\nKnow how to structure C++ projects, test and refactor\nHowever, there should be no illusions about this or any other course. One cannot become a true master of object-oriented design and programming only by completing one or few courses – it takes years of practice. But this course is a good starting point and provides the needed foundations.\n\n\nSo what exactly is covered in the course?\nPresentations (theory and concepts about the­ principles)\nVisual analogies from real world (to better understand and remember the principles)\nUML diagrams (mainly class diagrams with examples about the principles)\nPlenty of stand-alone code examples (at least a few for each principle)\nAlmost a real-world project (server application that receives over TCP connection and processes tax reports in JSON or XML formats) with unit and high-level tests\nExplanations how to install the project’s dependencies, compile it and run tests (uses C++17, CMake, Boost libraries (asio, program options, etc.), Google test)\nQuizzes and final test (some have additional code examples)\nProgramming assignments (work on the project, etc.)\n\n\nThis course is for you if you\nAre a beginner or intermediate C++ programmer (but not complete beginner)\nHave a basic understanding of OOP (classes, polymorphism, inheritance, encapsulation, etc.)\nWant to learn more and become a better software engineer\nIdeally, before this course you should have already worked on a few small hobby projects or have some commercial software development experience.\nYou should be able to pick up the rest of the materials and technologies during the course. At the same time, some applied technologies and examples are more advanced but optional to the main subject of this course.\nAnd even if you don’t primarily program in C++, you will still find that most of the code examples, as well as the principles, apply to many other programming languages.\n\n\nWhat is expected from you?\nBesides watching lectures and/or reading presentations, it’s expected that you\nCompile, read and understand code examples and the project source code (ability to read and work with somebody else's code is very important and often underestimated)\nRefactor some of the provided code examples while doing assignments\nWork on the project source code in the final assignment, extend its functionality and add tests\n\n\nThe images in visual examples are from website pixabay and the audio in videos is from website bensound.",
      "target_audience": [
        "Beginner or intermediate C++ programmers who want to become better professionals"
      ]
    },
    {
      "title": "ChatGPT Python Programming: AI Guided Code Mastery",
      "url": "https://www.udemy.com/course/ai-guided-python-programming/",
      "bio": "Master Python with ChatGPT – regardless of your coding background! Streamline tasks, optimize algorithms, integrate AI",
      "objectives": [
        "Python Skills with AI-Guided Mastery: Unlock new levels of proficiency, efficiency, and creativity in your coding journey",
        "Dynamic Python Sessions: Powered by ChatGPT's AI intelligence, fostering interactive learning",
        "Beginner to Advanced Python Proficiency: Tailored AI guidance and comprehensive skill development",
        "Python Programming Mastery: Explore user inputs, variables, control flows, loops, data structures, and functions with AI-driven guidance",
        "Empower Self-Directed Python Learning: Leveraging ChatGPT for tailored guidance and skill enhancement",
        "Craft Intelligent Applications: Personalized AI guidance enhancing your coding capabilities",
        "AI-Driven Web Development: Leveraging ChatGPT's expertise to create user interactive web applications",
        "AI-powered Machine Learning (ML) Scripting: Harnessing ChatGPT's guidance to craft intelligent algorithms and predictive models",
        "Design Interactive GUIs with AI support: Leveraging ChatGPT for intuitive user interface development",
        "ChatGPT Integration into Python Environments: Fine-tuning API parameters for optimal performance"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required. Basic computer skills is sufficient."
      ],
      "description": "This course is designed to revolutionize your coding experience by integrating the power of ChatGPT into your learning process. Embark on an exciting journey where artificial intelligence meets Python programming. Whether you're a beginner or an experienced coder, the curriculum is tailored to provide hands-on guidance, making Python programming both accessible and exhilarating. Join me as we explore the synergy between AI and Python, unlocking new possibilities for code mastery.\nCourse Highlights:\nIntroduction to AI-Guided Python Programming:\nUnderstand the benefits of AI-Guided programming\nExplore the role of AI in Python programming.\nGetting Started with ChatGPT and Python:\nSet up your development environment effortlessly.\nLearn to integrate ChatGPT into your Python projects.\nChatGPT Basics for Python Programmers:\nMaster effective ChatGPT prompting techniques.\nRefine and improve ChatGPT-generated code.\nAI-Guided Python Fundamentals and Basic Programs:\nAI-Guided Applications:\nCreate your first Python program with ChatGPT guidance.\nPersonalized assistance for crafting fundamental Python code.\nDevelop AI-Driven Graphical User Interfaces (GUIs)\nAI-Guided Python Basics Overview:\nExplore Python essentials with ChatGPT's real-time guidance.\nIntermediate Python Programming with AI:\nAI-Guided Working with Data Structures:\nDive into Python's data structures with ChatGPT's support.\nEnhance your coding skills with personalized assistance.\nAI-Guided Functions and Modules:\nCraft modular code and functions with ChatGPT assistance.\nAdvance your Python proficiency with AI-guided learning.\nAdvanced Python Applications with AI:\nAI-Driven Web Development in Python:\nIntegrate AI principles into web development projects.\nLeverage ChatGPT's expertise for enhanced web applications.\nMachine Learning Scripting with ChatGPT:\nScript machine learning applications with expert guidance.\nExplore the intersection of AI and machine learning in Python.\nSPECIAL SEGMENT - ChatGPT Integration in Python Environment\nConfigure ChatGPT API keys for Python integration.\nHarness ChatGPT for real-time support in the Python development environment.\nFine-tune ChatGPT's API parameters for achieving desired AI model behavior outcomes\nEnroll Now: Are you ready to revolutionize your Python programming journey? Enroll now and experience the thrill of AI-guided code mastery! Unleash the power of ChatGPT and elevate your Python skills to new heights.",
      "target_audience": [
        "Anyone who wants to learn Python with sophistication and ease",
        "Anyone interested in leveraging AI with Python",
        "AI and Python programming enthusiasts"
      ]
    },
    {
      "title": "Java EE 7 A Practical Training Course From Infinite Skills",
      "url": "https://www.udemy.com/course/java-ee-7/",
      "bio": "Learn Java EE at your own pace, a practical hands-on training course from Infinite Skills.",
      "objectives": [
        "Learn Java EE At Your Own Pace"
      ],
      "course_content": {},
      "requirements": [
        "PC or Mac"
      ],
      "description": "This Java EE 7 training course from Infinite Skills teaches you the concepts, tools, and functions you will need to know in order to build websites using Oracle’s popular Java Enterprise Edition programming language.\n\nYou will start with an introduction to the Web and Java HTTPServlets, then move into learning more about HTTPServlets and parameters. You will learn about Java Server Pages (JSP), such as including directive and comments, page directive import and scripting, and declarations and page directive sessions. This video tutorial will also teach you about Java Standard Tag Library (JSTL), including how to download, install, import, and setup core tags, set and remove variables, among other JSTL functions. Brian will also teach you about custom tag libraries, filters and wrappers, and web security. Finally, you will learn how to build a themed website and web frameworks.\n\nBy the completion of this video based training course, you will have the knowledge and skills needed to create fully functional Java EE programs. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Beginners & Intermediate Programmers"
      ]
    },
    {
      "title": "Python 3.7 - Programming Language Basics",
      "url": "https://www.udemy.com/course/python-programming-language-basics/",
      "bio": "Get the hang of Python Programming Language in Simplest Way!!",
      "objectives": [
        "Learn how to Install and Setup Python",
        "Learn to use Jupyter Notebook for Python",
        "Learn Basics of Python Programming Language",
        "Learn Python Basics in 6.5 hours"
      ],
      "course_content": {
        "Introduction": [
          "1 - Why Python",
          "2 -Python 2 VS Python 3",
          "3 -Website Install",
          "4 -Anaconda Install",
          "5 -Miniconda",
          "6 -CMD Basics",
          "7 - Running Python - Text Editor",
          "8 -Runnin Python - IDE pt1",
          "9 -Runnin Python - IDE pt2",
          "10 -Runnin Python - Notebook",
          "11 - Variables",
          "12 - Data type Strings - Part 1",
          "13 - Data type Strings- Part 2",
          "14 - Data type Strings - Part 3",
          "15 - Data type Strings - Part 4",
          "16 - Data type Strings - Part 5",
          "17 - Data type Numbers - Part 1",
          "18 - Data type Numbers - Part 2",
          "19 - Data type Numbers - Part 3",
          "20 - List Part 1(Accessing Elements)",
          "21 - List - Part 2(Slicing)",
          "22 - List - Part 3(Modify)",
          "23 - List - Part 4(Append)",
          "24 - List - Part 5 Insert Elements",
          "25 - List - Part 6 Remove Elements",
          "26 - List - Part 7 Pop() Elements",
          "27 - List - Part 8 Remove() Elements",
          "28 - Organize List - Sort()",
          "29 - Organize List - Sorted()",
          "30 - Organize List - Reverse()",
          "31 - List - Index Error",
          "32 - For Loop in List - pt 1",
          "33 - For Loop in List - pt 2",
          "34 - For Loop in List - pt 3",
          "35 - Numerical List - pt 1",
          "36 - Numerical List - pt 2",
          "37 - Numerical List - pt 3",
          "38 - Numerical List - pt 4 Statistics",
          "39 - Numerical List - pt 5 List comprehension",
          "40 - Working with List- slicing",
          "41 - Working with List- Looping through slice",
          "42 - Working with List- Copying through slice",
          "43 - Tuple - Defining",
          "44 - Tuple - Looping",
          "45 - Tuple - Writing",
          "46 - If stmt - Example",
          "47 - If stmt - Conditional test",
          "48 - If stmt - Conditional test - Cases",
          "49 - If stmt - Conditional test Inequality",
          "50 - Numerical Comparisons",
          "51 - Numerical Comparisons - Multiple conditions",
          "52 - Check Values in List or not",
          "53 - Boolean Expressions",
          "54 - If, If else statement",
          "55 - If elif else statement",
          "56 - Multiple elif Blocks",
          "57 - Omitting else block",
          "58 - Test Multiple conditions",
          "59 - If statement with List - Pt 1",
          "60 - Check for Empty List",
          "61 - Multiple Lists",
          "62 - Dictionaries",
          "63 - Dictionaries - Access value",
          "64 - Dictionaries - Adding value",
          "65 - Dictionaries - Modify value",
          "66 - Dictionaries - Removing key-value",
          "67 - Dictionary of similar objects",
          "68 - Dictionary Looping pt1",
          "69 - Dictionary Looping pt2",
          "70 - Dictionary Looping pt3",
          "71 - Dictionary Looping pt4",
          "72- Nesting Pt 1",
          "73- Nesting Pt 2",
          "74- Nesting Pt 3",
          "75 - User Input pt1",
          "76- User Input pt 2",
          "77 While Loop pt 1",
          "78 While Loop pt 2",
          "79 While Loop pt 3",
          "80 Functions Introduction",
          "81 Functions Definition",
          "82 Function Call",
          "FREE BONUS"
        ]
      },
      "requirements": [
        "No requirements"
      ],
      "description": "Python is a general-purpose programming language that is quickly gaining in popularity. Unlike JavaScript, HTML, and CSS, it can be used in applications outside of web development, which makes it a very flexible programming language. Python’s basis is in English syntax, making it easy to read and accessible to first-time coders.\n\n\nIn this course, you will learn all the basics of Python 3.7 to get the hang of it from installation to implementing codes in Jupyter Notebook.\n\n\nBelow are the topics that will be covered:\n1 - Why Python\n2 -Python 2 VS  Python 3\n3 -Website Install\n4 -Anaconda Install\n5 -Miniconda\n6 -CMD Basics\n7 - Running Python - Text Editor\n8 -Runnin Python - IDE pt1\n9 -Runnin Python - IDE pt2\n10 -Runnin Python - Notebook\n11 - Variables\n12 - Data type Strings - Part 1\n13 - Data type Strings- Part 2\n14 - Data type Strings - Part 3\n15 - Data type Strings - Part 4\n16 - Data type Strings - Part 5\n17 - Data type Numbers - Part 1\n18 - Data type Numbers - Part 2\n19 - Data type Numbers - Part 3\n20 - List Part 1(Accessing Elements)\n21 - List - Part 2(Slicing)\n22 - List - Part 3(Modify)\n23 - List - Part 4(Append)\n24 - List - Part 5 Insert Elements\n25 - List - Part 6 Remove Elements\n26 - List - Part 7 Pop() Elements\n27 - List - Part 8 Remove() Elements\n28 - Organize List - Sort()\n29 - Organize List - Sorted()\n30 - Organize List - Reverse()\n31 - List - Index Error\n32 - For Loop in List - pt 1\n33 - For Loop in List - pt 2\n34 - For Loop in List - pt 3\n35 - Numerical List - pt 1\n36 - Numerical List - pt 2\n37 - Numerical List - pt 3\n38 - Numerical List - pt  4 Statistics\n39 - Numerical List - pt  5 List comprehension\n40 - Working with List- slicing\n41 - Working with List- Looping through slice\n42 - Working with List- Copying through slice\n43 - Tuple - Defining\n44 - Tuple - Looping\n45 - Tuple - Writing\n46 - If stmt - Example\n47 - If stmt - Conditional test\n48 - If stmt - Conditional test - Cases\n49 - If stmt - Conditional test Inequality\n50 - Numerical Comparisons\n51 - Numerical Comparisons - Multiple conditions\n52 - Check Values in List or not\n53 - Boolean Expressions\n54 - If, If else statement\n55 - If elif else statement\n56 - Multiple elif Blocks\n57 - Omitting else block\n58 - Test Multiple conditions\n59 - If statement with List - Pt 1\n60 - Check for Empty List\n61 - Multiple Lists\n62 - Dictionaries\n63 - Dictionaries - Access value\n64 - Dictionaries - Adding value\n65 - Dictionaries - Modify  value\n66 - Dictionaries - Removing key-value\n67 - Dictionary of similar objects\n68 - Dictionary Looping pt1\n69 - Dictionary Looping pt2\n70 - Dictionary Looping pt3\n71 - Dictionary Looping pt4\n72- Nesting Pt 1\n73- Nesting Pt 2\n74- Nesting Pt 3\n75 - User Input pt1\n76- User Input pt 2\n77 While Loop pt 1\n78 While Loop pt 2\n79 While Loop pt 3\n80 Functions Introduction\n81 Functions Definition\n82 Function Call\nHappy Learning\nAeraaf Patel\nFreedom 10x Ventures",
      "target_audience": [
        "Anyone Interested"
      ]
    },
    {
      "title": "Java 21 Virtual Threads and Structured Concurrency",
      "url": "https://www.udemy.com/course/virtual-threads/",
      "bio": "Java 21 Virtual Threads, Multithreading, Structured Concurrency, Scoped Values, Continuations and use with Spring Boot",
      "objectives": [
        "What are the Scalability problems of Java Threads",
        "Hands On and Theoretical understanding of Virtual Threads",
        "How to use Spring Boot with Virtual Threads",
        "How to use the Structured Concurrency pattern in Java",
        "What are Scoped Values and how are they different from Thread Locals",
        "Hands On and Theoretical understanding of Delimited Continuations",
        "What is the internal Implementation of Virtual Threads",
        "Why Virtual Threads is a game changer for Non Blocking IO",
        "Advantages of Virtual Threads over Reactive frameworks",
        "Bonus Refresher Section on Java Futures and Completable Futures"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Content",
          "Clarifications"
        ],
        "Java Threads and Scalability": [
          "Section Introduction",
          "Task Types",
          "Handling User Requests",
          "Concurrency and Parallelism",
          "Java Platform Threads",
          "Scalability Demonstration",
          "Demonstration on Linux and Windows",
          "Java Threads Scalability",
          "Current Scalability Solutions",
          "Non Blocking IO",
          "Java Threads and Scalability",
          "Bonus Section on Executor Service, Futures and Completable Futures"
        ],
        "Project Loom and Java Virtual Threads": [
          "Section Introduction",
          "Loom JDK Installation",
          "Instructions to install JDK Loom",
          "Java Virtual Threads Demonstration",
          "Instructions to install an Eclipse project ZIP",
          "Java Virtual Threads Overview",
          "Java Virtual Threads Creation",
          "Running Virtual Threads Demonstration using ExecutorService",
          "Java Virtual Threads Advantages",
          "Java Virtual Threads Current Limitations",
          "Java Virtual Threads",
          "Virtual Threads : A few Good Links"
        ],
        "Virtual Threads with Java Executor, Futures and Completable Futures": [
          "Section Introduction",
          "REST Example Coding",
          "REST Example Scalability Testing",
          "Using JConsole",
          "Virtual Threads with Java Futures",
          "Virtual Threads with Java Completable Futures",
          "Using Virtual Threads with Completable Futures",
          "Virtual Threads and Application Scalability"
        ],
        "Structured Concurrency": [
          "What is Structured Concurrency?",
          "Structured Concurrency using Executor Service",
          "Structured Concurrency Usecases",
          "Interrupts and Thread Cancellation",
          "Eclipse Project Zip for this Section",
          "Writing a Long Running Task",
          "Interrupts and Thread Cancellation",
          "StructuredTaskScope and Subtask",
          "Demonstration Of StructuredTaskScope",
          "StructuredTaskScope.ShutdownOnFailure",
          "StructuredTaskScope.ShutdownOnSuccess",
          "Writing Custom Structured Task Scope",
          "Task Scope Hierarchy",
          "Structured Task Scope",
          "Create a Java Class to handle arbitrary number of parallel Tasks",
          "Structured Concurrency : Further Reading"
        ],
        "Thread Locals and Scoped Values": [
          "Introduction",
          "Eclipse project ZIP file for this Section",
          "Thread Locals",
          "Inheritable Thread Locals",
          "Disadvantages of Thread Locals",
          "Thread Locals Quiz",
          "Scoped Values",
          "A note on ScopedValue class",
          "Scoped Values in Action",
          "Rebinding Scoped Values",
          "Inheriting Scoped Values",
          "Scoped Values Quiz",
          "Scoped Values : Further Reading"
        ],
        "Delimited Continuations": [
          "Introduction to Coroutines and Continuations",
          "Eclipse project ZIP file for this Section",
          "Java Continuation Example",
          "Java Continuation Scopes",
          "Continuation with Objects",
          "Java Virtual Thread Implementation using Continuations",
          "Delimited Continuations"
        ],
        "Virtual Threads and scalability with Spring Boot": [
          "Introduction",
          "Spring Boot Projects Zip for this Section",
          "Spring Boot with Platform Threads",
          "Spring Boot with Virtual Threads",
          "Project - Explanation",
          "Project - Create Book Store REST API",
          "Project - Create Best Price Book Store REST API",
          "Project - Add Timing Statistics",
          "Project - Scalability Testing Setup",
          "Project - Scalability Testing",
          "Extending Scalability Testing",
          "Spring Boot with Virtual Threads : Further Reading"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus Lecture"
        ],
        "Bonus - Java Futures and Completable Futures Tutorial": [
          "Quick guide on Java Futures and Completable Futures",
          "Eclipse Project ZIP file for this section",
          "Java Thread Creation",
          "What is a Java Future?",
          "Java Futures in Action",
          "Limitations of Java Futures",
          "Java Threads and Futures Quiz",
          "CompletableFuture - Overview",
          "Creating a CompletableFuture Pipeline",
          "Composing and Combining Completable Futures",
          "CompletableFuture and Threads",
          "Handling multiple Completable Futures - allOf and anyOf",
          "Completing Completable Futures - complete, completeExceptionally",
          "CompletableFuture - Remaining tidbits and Limitations",
          "Completable Futures Quiz"
        ]
      },
      "requirements": [
        "At least Entry level Java Programming with some Java Threads knowledge required",
        "A curious Java Developer who wants to understand the cutting edge Concurrency initiatives in Java"
      ],
      "description": "Recent Updates :\nAdded new Section on scalability using Virtual Threads with Spring Boot 3.2.0 and JDK 21\nProject demonstrating scaling a Spring Boot application to 100,000 concurrent users with impressive response time\nBonus Section on Java Futures and Completable Futures as a Refresher\nProject Loom in a new revolutionary initiative in OpenJDK to create a Lightweight implementation of Threads called Virtual Threads (available in JDK 21). Java Virtual Threads promises to revolutionize the way non blocking code is written and dramatically reduce costs by using less resources in the Cloud. Instead of relying on complex Reactive programming, Java developers can now write code sequentially and still achieve the same result in many cases. This is one of the most extensive changes in the Java Platform and it will be a game changer for writing highly scalable Multithreading applications. Existing code (like Spring Boot code) can also take advantage of this new technology with minor modifications.\nDevelopers and Architects can help their Organization cut costs by using less number of machines to support the same number of users. Be a hero by proposing the use of Virtual Threads in your project.\n\n\nWHAT THE LEARNERS ARE SAYING:\n5 STARS - This was pleasurable journey. Very informative, understandable and easy to follow. I wish there was such a course about java io/nio, net/sockets on Udemy.\n5 STARS - Excellent course .. simplified such a complex topic ! Great work !!\n5 STARS - Excellent introduction to virtual threads and the complex concepts are explained with simple diagrams, which makes it easy to visualize the inner workings of virtual threads.\n5 STARS - Great course. Nice start with describing all the concurrency concepts. Course includes practical examples and descriptive diagrams to understand better the internal workings of virtual threads. If somebody is interested in this subject - this course is a good choice to understand how threads in java works and virtual threads.\n5 STARS - Good and concise explanation. I'm looking forward to see virtual threads in a LTS version or at least as a non-preview feature\n\n\nIn this course, you will learn the following\nHow to increase scalability and dramatically reduce costs using Virtual Threads ?\nWhat is the reason behind scalability issues of Java Platform Threads ?\nWhat are Virtual Threads and how are they different from Platform Threads ?\nHow can developers scale their application using Virtual Threads in Spring Boot ?\nHow do Virtual Threads work and why it's a game changer ?\nWhat is Structured Concurrency  and how to use it in Java ?\nWhat are Scoped Values and how are they different from Thread Locals ?\nWhat are Delimited Continuations  ?\nHow do we do Multithreading with Virtual Threads and Structured Concurrency ?\nHow are Virtual Threads implemented using Continuations ?\nWhat is the difference between Java Virtual Threads and Reactive programming (at a high level) ?\n\n\nJoin me in exploring Virtual Threads using a step-by-step and Hands-On approach to learning. By the end of the course, you will have an excellent grasp of Virtual Threads, Structured Concurrency, Thread Locals, Scoped Values and Continuations and how they can be used to write highly scalable Java applications using Spring Boot.\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\n\n\nNote : Java Virtual Threads is available as part of JDK 21. Structured Concurrency and Scoped Value classes are available in JDK 21 as Preview features.",
      "target_audience": [
        "Java Developers who want to learn about Java Virtual Threads, Structured Concurrency and use in Spring Boot",
        "Java Architects who want to know why Virtual Threads will help in cutting costs significantly"
      ]
    },
    {
      "title": "QT C++ GUI Tutorial For Beginners",
      "url": "https://www.udemy.com/course/qt-c-gui-tutorial-for-beginners/",
      "bio": "if you're C++ programmer, Qt is your framework. No rival.",
      "objectives": [
        "Learn the fundamentals of Qt",
        "Create your own, Interactive software.",
        "Make You Own GUI applications",
        "Learn Python GUI Programming Using QT"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To Qt Framework"
        ],
        "Install Qt": [
          "How to Install Qt Creator IDE on Windows 10",
          "How to Install Qt Creator IDE on Windows 11",
          "How to Install Qt Creator IDE on Ubuntu"
        ],
        "Qt widget Basics": [
          "First Qt Application",
          "First Qt GUI widget Application",
          "Qt Signal and slots",
          "QMessageBox",
          "Layouts in QT (Horizontal, Vertical, Grid and Form)",
          "Spacers, Splitter, Buddy and Tabs",
          "How to Show Another Window From MainWindow in QT",
          "Simple Login app using QT",
          "Displaying image using label in Qt",
          "QStatusBar",
          "Resource Collection Files (.qrc)",
          "Use QLineEdit as password field",
          "Qt Stylesheets and using HTML",
          "QCheckBox",
          "QRadioButton",
          "QAction, QMenu, QToolBar",
          "QComboBox",
          "QListWidget",
          "QTabWidget"
        ],
        "Working With Files and Directories": [
          "QDir",
          "QFile",
          "How to use QFileDialog",
          "How to run EXE file by clicking a button in Qt",
          "Simple Notepad Part - 1",
          "Simple Notepad Part - 2",
          "QFontDialog",
          "QColorDialog",
          "QPrintDialog and QPrinter Class"
        ],
        "Timer and Clock": [
          "QTimer",
          "Creating Digital Clock by using QTimer and QDateTime in QT"
        ],
        "Other Qt functionality": [
          "How to open a website in a default user browser",
          "How to display a Splash Screen in Qt",
          "How to use QWebView and Open Web Page in QWebView"
        ],
        "Source Code": [
          "Most of the source code from this course can be found on the link"
        ],
        "Qt with SQLite": [
          "How to connect Qt to SQLite",
          "Login Form using sqlite in QT application PART-1",
          "Login Form using sqlite in QT application PART-2",
          "how to use QLineEdit as password field",
          "How to set image with QLabel in Qt",
          "How to open a new window after successful Login",
          "Creating connection open and close function with sqlite database Part 1",
          "Creating connection open and close function with sqlite database Part 2",
          "How to Save data in SqLite database with pushbutton",
          "Edit / Update a data from SqLite Database with pushbutton",
          "Delete data from SqLite Database with pushbutton",
          "Load SqLite table data to QTableView",
          "How to Link QListView with sqlite Database values",
          "How to Link QComboBox with sqlite Database values",
          "Database values in QlineEdit or textbox if select Combobox",
          "Display selected row from QTableView to QlineEdit",
          "Database values in QlineEdit or textbox if select QListView"
        ]
      },
      "requirements": [
        "A basic knowledge of C++ is helpful but not necessary to get the most out of this course",
        "Very basic understanding of programming"
      ],
      "description": "Qt also Pronounce “Cute” is a Cross platform application development framework.\nQt is a cross-platform application and UI framework.\nUsing Qt, you can write applications once and deploy them across desktop, mobile and embedded operating systems without rewriting the source code.\nQt is partly C++ and partly native code depending on platform.\nQt UI APIs wrap native UI components.\nWhy would you want to use it?\nQt has a quite good penetration on different platforms.\nIt's fairly straight-forward to port your application to platforms where Qt is supported.\nQt has been around for a long time, so it has matured as a framework.\nIt adds somewhat automatic memory management on top of C++ through different means.\nThere's plenty of components.\n\n\nThe goal of this course is to provide you with a working knowledge of Qt C++ GUI applications. We'll start with the basics, starting from installing Qt , creating our first Qt project, using widgets, signals and slots, layouts, resource file etc.\n\nIn the later half of the video I will also show , How sqlite database cane be used with Qt.\nSo Let's get started !!!",
      "target_audience": [
        "Programmers and Developers",
        "Beginners",
        "Students"
      ]
    },
    {
      "title": "Jupyter Notebook for Data Science",
      "url": "https://www.udemy.com/course/jupyter-notebook-for-data-science/",
      "bio": "Collaborate, create interactive visualizations, and manipulate big data in the language of your choice.",
      "objectives": [
        "Learn how to efficiently use Jupyter Notebook for data manipulation and visualisation",
        "Perform interactive data analysis and visualisation using Jupyter Notebook on real data",
        "Analyse time series data using Pandas",
        "Create interactive widgets where non-technical users can also get involved in the data exploration using the notebooks you create",
        "Scrape websites to build datasets and deal with common challenges like unstructured or missing data",
        "Combine different datasets in a single graph to enable people to compare them visually and gain new insights",
        "Analyse and visualise geographic datasets to create stunning information-rich maps"
      ],
      "course_content": {
        "Jupyter Notebook Introduction": [
          "The Course Overview",
          "Setting Up Jupyter Notebook",
          "Using Jupyter Notebook",
          "Publishing Notebooks"
        ],
        "Data Analysis Using Pandas": [
          "Parsing the Crime Dataset",
          "Pandas Data Structures",
          "Exploring and Visualising the Data",
          "Creating an Interactive Widget"
        ],
        "Scraping Data": [
          "Introduction to Data Scraping",
          "Fetching Data from a REST API Using Requests",
          "Importing API Data into Pandas",
          "Scraping Websites Using BeautifulSoup"
        ],
        "Advanced Visualization": [
          "Introduction to Information-Dense Visualisations",
          "Vizualising Data Correlation",
          "Linear Regression",
          "Correlation Matrix"
        ],
        "Analyzing Geographic Data": [
          "Maps in Data Science",
          "Plotting Crime Locations",
          "Interactive Maps Using Plotly",
          "Final Remarks"
        ]
      },
      "requirements": [
        "Basic understanding of Python and Jupyter Notebookis required. A basic understanding of math and statistics will come in handy."
      ],
      "description": "This video course will help you get familiar with Jupyter Notebook and all of its features to perform various data science tasks in Python. Jupyter Notebook is a powerful tool for interactive data exploration and visualization and has become the standard tool among data scientists. In the course, we will start from basic data analysis tasks in Jupyter Notebook and work our way up to learn some common scientific Python tools such as pandas, matplotlib, and plotly. We will work with real datasets, such as crime and traffic accidents in New York City, to explore common issues such as data scraping and cleaning. We will create insightful visualizations, showing time-stamped and spatial data.\nBy the end of the course, you will feel confident about approaching a new dataset, cleaning it up, exploring it, and analyzing it in Jupyter Notebook to extract useful information in the form of interactive reports and information-dense data visualizations.\nThis course uses Jupyter 5.4.1, while not the latest version available, it provides relevant and informative content for data science enthusiasts.\nAbout the Author\nDražen Lucanin is a developer, data analyst, and the founder of Punk Rock Dev, an indie web development studio. He's been building web applications and doing data analysis in Python, JavaScript, and other technologies professionally since 2009. In the past, Dražen worked as a research assistant and did a PhD in computer science at the Vienna University of Technology. There he studied the energy efficiency of geographically distributed datacenters and worked on optimizing VM scheduling based on real-time electricity prices and weather conditions. He also worked as an external associate at the Ruder Boškovic Institute, researching machine learning methods for forecasting financial crises. During Dražen's scientific work Python, Jupyter Notebook (back then still IPython Notebook), Matplotlib, and Pandas were his best friends over many nights of interactive manipulation of all sorts of time series and spatial data. Dražen also did a Master's degree in computer science at the University of Zagreb.",
      "target_audience": [
        "This course is for developers with a basic understanding of Python and Jupyter Notebook."
      ]
    },
    {
      "title": "Windows PowerShell Boot Camp",
      "url": "https://www.udemy.com/course/powershell-training/",
      "bio": "Learn PowerShell scripting from the ground up. You will write PowerShell scripts like a pro upon completion.",
      "objectives": [
        "Understand and recognize common PowerShell terms",
        "Design and implement basic automation scripts that will increase productivity",
        "Understand basic PowerShell syntax",
        "Gain knowlege about more advaned PowerShell terms and functions",
        "Develop basic, intermediate and advanced PowerShell scripts",
        "Develop PowerShell scripts for automation",
        "Know how to do error handeling in PowerShell",
        "Understand conditional statements to develop SMART scripts"
      ],
      "course_content": {
        "Introduction to PowerShell": [
          "Introduction",
          "Basic PowerShell Commands",
          "Crash Course in PowerShell Scripting",
          "Remote Administration Using PowerShell (Part 1)",
          "Remote Administration Using PowerShell (Part 2)",
          "Remote Administration Using PowerShell (Part 3)",
          "Remote Administration Using PowerShell (Part 4)"
        ],
        "Intermediate PowerShell Skills": [
          "Overview to Intermediate PowerShell Skills",
          "Deep-dive into PowerShell Commands",
          "Script Development with PSSession",
          "Building Scripts for Automating Administration Tasks (Part 1)",
          "Building Scripts for Automating Administration Tasks (Part 2)",
          "Building Scripts for Automating Administration Tasks (Part 3)",
          "Building Scripts for Automating Administration Tasks (Part 4)",
          "Building Scripts for Automating Administration Tasks (Part 5)",
          "Building Scripts for Automating Administration Tasks (Part 6)"
        ],
        "Advanced PowerShell Functions": [
          "Overview of Advanced PowerShell Functions",
          "Advanced PowerShell Functions Demo (Part 1)",
          "Advanced PowerShell Functions Demo (Part 2)",
          "Advanced PowerShell Functions Demo (Part 3)",
          "Advanced PowerShell Functions Demo (Part 4)",
          "Advanced PowerShell Functions Demo (Part 5)",
          "Advanced PowerShell Functions Demo (Part 6) - Added Complexity",
          "Advanced PowerShell Functions Demo (Part 7) - Added Complexity"
        ],
        "Administrating Active Directory using PowerShell": [
          "Introduction to Administering Active Directory using PowerShell",
          "Configuring Your Environment to Support Active Directory using PowerShell",
          "Using Get ADuser",
          "Using New ADuser",
          "Using Remove ADuser",
          "Additional Active Directory Comdlets"
        ]
      },
      "requirements": [
        "The willingness to explore a new language and a desire to automate administration tasks using PowerShell."
      ],
      "description": "The PowerShell Boot Camp was designed with all skill levels in mind. We take the basic of PowerShell, expose you to a few simple commandlets and build on that. You will become familiar with the terminology but also develop the skills to write PowerShell scripts that can automate administration tasks. We take a look at advanced functions and show you the ropes how to invoke Active Directory administration with PowerShell.\nIn this PowerShell  training you will learn the following:\nIntroduction to PowerShell\nIntroduction to PowerShell Scripting\nRemote Administration using PowerShell\nIntermediate PowerShell Skills\nScript Development using PSSession\nBuilding scripts for Automating Administration Tasks\nAdvanced PowerShell Functions\nAdministrating Active Directory using PowerShell\nAnd much more...",
      "target_audience": [
        "This class teaches not only the introduction-level skills of PowerShell, but gradually develops intermediate and move advanced PowerShell functions from the ground up. It is ideal for beginners as well as more advanced engineers. No prior knowledge of PowerShell is required."
      ]
    },
    {
      "title": "PHP CodeIgniter - Learn CodeIgniter",
      "url": "https://www.udemy.com/course/php-codeigniter/",
      "bio": "Learn CodeIgniter by building an Application! Built with AJAX/jQuery calls, and styled with twitter bootstrap!",
      "objectives": [
        "Understand MVC",
        "Know CodeIgniters Process",
        "Setup an entire Application",
        "JavaScript Structure",
        "Twitter Bootstrap",
        "jQuery AJAX",
        "Build with CodeIgniter the worlds most popular PHP Framework"
      ],
      "course_content": {},
      "requirements": [
        "PHP Knowledge",
        "PHP 5.3+ (5.4 Preferred)",
        "MySQL",
        "Apache (enabled mod_rewrite)",
        "Or one of these setup: WAMP / XXAMP / MAMP / or LAMP"
      ],
      "description": "Learn Codeigniter - the most popular PHP Framework! In this course you will build a complete application in the CodeIgniter Framework from the ground up. You'll learn how the MVC pattern works as I take you step-by-step through everything needed get fluent in CodeIgniter.\nSome features in our application will be a personalized dashboard for any user who registers and logs in. We'll have AJAX publishing for all of our Todo Lists and Note's.\nWe will be diving deep into JavaScript using jQuery to organize a custom Template and Event structure. Lastly, we'll polish off the dashboard with Twitter Bootstrap.\nYou'll understand how to expand upon these features when we are complete.\nThis course will take you to an Intermediate PHP programmer with some intermediary skills in JavaScript.",
      "target_audience": [
        "People that want to Build as they Learn",
        "Desire to Build Robust and Re-Usable Application Code"
      ]
    },
    {
      "title": "Learn C++ Programming for beginners from basics to advanced",
      "url": "https://www.udemy.com/course/complete-c-programming-step-by-step-tutorial/",
      "bio": "Learn C++ programming from scratch with best examples",
      "objectives": [
        "Write there own C++ Programs according to the requirements",
        "Will have strong knowledge on OOPs concepts",
        "Students will be ready to analyze any C++ programs and make changes",
        "Ready to make their carrier in software industry"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "First Program",
          "Comments inside program and endl",
          "Quiz"
        ],
        "Data types in C++": [
          "Variables",
          "Data type integer",
          "Character Data Type",
          "Float Data Type",
          "Data types",
          "User Input Data",
          "Quiz"
        ],
        "Example Programs": [
          "Program to convert gallons to litres",
          "Program to add two numbers",
          "Program to swap two numbers",
          "Program printing the name and age",
          "Sample codes",
          "Exercise 1"
        ],
        "Constant, Escape Sequence and Define": [
          "Escape sequence",
          "Constants",
          "New line using define"
        ],
        "Operators in C++": [
          "Operators in c++",
          "Operators resource link"
        ],
        "If-Else Statements": [
          "If else satements introdution",
          "C++ program to find number is positive or negative",
          "C++ program to find the largest number",
          "Nested if statements",
          "Q & A",
          "Exercise 2: If else"
        ],
        "Loops in C++": [
          "Loops Introduction",
          "For Loop Example",
          "Program to print multiplication table",
          "Nested For Loops",
          "While loop",
          "Do-while loop",
          "Finding the factorial of number",
          "quiz"
        ],
        "Control Statements": [
          "Break statement",
          "Continue statement",
          "Switch-Case Statements",
          "Quiz Q and A",
          "Exercise 3: Loops and control statements"
        ],
        "Functions": [
          "Functions",
          "Functions in c++ Introduction",
          "Functions in c++ example add( )",
          "Functions example 2",
          "Quiz on Functions",
          "Exercise 4: Functions"
        ],
        "Arrays": [
          "Arrays Introduction",
          "Arrays",
          "One dimensional arrays",
          "One dimensional array example",
          "Array example 2",
          "Array example 3",
          "Adding marks using arrays",
          "Quiz on arrays"
        ]
      },
      "requirements": [
        "Nothing is pre-required, Everything from scratch is covered in the course"
      ],
      "description": "C++ is a general purpose programming language.C++ was developed by Bjarne Stroustrup at At&T Bell Labs\n\nC++ Programming Language is used in various software developments and in even gaming. C++ is object oriented language.\nThis course teaches you everything about C++ starting with basic operations with examples to object oriented concepts, It covers all the topics in C++ from basics to most advanced topics, Every lesson is explained in details with example code.\nThose who want strong knowledge or want to learn programming language can take this course.\nThis course is divided into three parts\nFirst you will learn all the basics\nSecond you will learn object oriented approach to the language\nThird will be Advanced topics",
      "target_audience": [
        "Anyone who want to learn C++ can start the course",
        "Who want to make their carrier in software industry"
      ]
    },
    {
      "title": "Python Desktop Application Development with PyQt",
      "url": "https://www.udemy.com/course/python-desktop-application-development-with-qt/",
      "bio": "A-Z To Create a Powerful Desktop Applications Using Python And Qt Framwork From Scratch To Developing Your Projects",
      "objectives": [
        "be abel to Creat a very powerfull desktop Applications",
        "Learn How To Use Qt Designer To Design Your Apps In Less Time",
        "Learn How To Use PyQt",
        "Learn How To Convert Your Python Code To Executable File (exe)",
        "Learn How To Distribute Your exe File",
        "Learn How To Make Your Own Apps Like Web Browsers , Download Programmes .. And More",
        "Learn How To Make Commercial Desktop Apps With Python & Qt"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Who Is Me .. ?",
          "How To Study The Course",
          "Udemy Review",
          "Why Python",
          "Why PyQT"
        ],
        "Installation": [
          "Our Tools Installation Overview",
          "How To Install Python On Windows",
          "How To Install PyCharm On Windows",
          "How To Install PyQt On Windows",
          "Install Python IDLE On Linux",
          "Install PyCharm On Linux OS",
          "How To Install PyQt On Linux"
        ],
        "PyQT Code Structure": [
          "The Third Part Of Our Course In Details",
          "Basic Code Structure",
          "Change Our Window Title & Icon",
          "Change Our Window Position & Size"
        ],
        "PyQt Widgets": [
          "PyQT Widgets Overview",
          "QPushButton",
          "QMessageBox",
          "QLineEdit",
          "QCheckBox",
          "QRadioButton",
          "QComboBox",
          "QLabel",
          "QProgressBar",
          "QSlider"
        ],
        "PyQt Dialogs": [
          "PyQt Dialogs Overview",
          "QColor Dialog",
          "QFont Dialog",
          "QFile Dialog"
        ],
        "PyQT Layouts": [
          "PyQT Layouts Overview",
          "Absolute Positioning In PyQT",
          "PyQt BoxLayout",
          "PyQt BoxLayout Example",
          "PyQT GridLayout",
          "PyQt GridLayout Example"
        ],
        "PyQt Signal & Slots": [
          "PyQt Signal & Slot Overview",
          "PyQt Signal & Slots Part1",
          "PyQt Signal & Slots Part2"
        ],
        "PyQt Menus & ToolBars": [
          "PyQt MenuBars & ToolBars Overview",
          "PyQt MenuBar part1",
          "PyQt MenuBar Part2",
          "PyQt ToolBar",
          "PyQt StatuBar"
        ],
        "PyQt Tabs": [
          "PyQt Tabs Overview",
          "PyQt Tab Widget"
        ],
        "Qt Designer Intro": [
          "Qt Designer Intro",
          "How To Use Qt Designer"
        ]
      },
      "requirements": [
        "only Python Basics"
      ],
      "description": "This Course Cover Qt Framework From Scratch To Advanced Topics , You Will Find Every Thing You Need To Build Your Own Applications .And I Put A Project at The End Of The Course To Teach Your How To Think And How To Make Any Project You Want And How To Work With Big Projects.After This Course You Will Be Able To Make Very Powerful And Beautiful Applications . You Will Be Able To Build Your Own Desktop Applications Like Web Browsers And Download Programmes.. Waiting Your Feedback After Finishing The Course And Wait My New Courses On Udemy For Qt Framwork , Like Developing Android Apps With Python And Qt And Build 20 Project With Python ANd Qt ... And More",
      "target_audience": [
        "Any One Want To Create A Desktop Applications With Python",
        "Any One Want To Learn PyQt",
        "Any One Who Want To Make His Own Desktop Apps Like Web Browsers And Download Programmes"
      ]
    },
    {
      "title": "2023 SDLC Full Stack Course Spring Boot 3, MongoDB, Docker",
      "url": "https://www.udemy.com/course/sdlc-with-soa-spring-jms-git-activemq-mongodb-jenkins/",
      "bio": "Learn to Plan Define Design Code Test & Deploy Spring Boot 3.0 Full Stack application using MongoDB, RabbitMQ and Docker",
      "objectives": [
        "Complete a Fullstack Spring Frontend and Backend Applications using the complete SDLC",
        "Become familiar and confident with the Spring RabbitMQ, Spring MongoDB and Spring Web",
        "Have complete confidence with the tools used in this course",
        "Complete Testing of Applications and Docker Deployment"
      ],
      "course_content": {},
      "requirements": [
        "Have some Java and Spring programming experience"
      ],
      "description": "This course has 113 videos covering over 21+ hours of content.\nYou will learn the complete software development life cycle creating a Full Stack Spring Boot 3.0 Application using tools like:\nIntelliJ Idea\nDocker\nSpring Framework 6.0\nRabbitMQ in Docker\nJUnit (Unit Test and Mocks)\nSpring Boot 3.0\nMongoDB in Docker\nSelenium\nPostman (Integration Test)\nWhat will we create:\nUnderstanding of the Software Development Lifecycle. What happens behind the scenes in a Fortune 500 company in the Information Technology department. Gain understanding of the players involved who make up a software team and their roles with respect to the software development lifecycle.\nYou will create a consumer backend service to consume messages on the queue our application is listening for. We will write that message to our MongoDB database.\nYou will create the frontend using Spring and ThymeLeaf, HTML, CSS and JavaScript so we can produce messages and put them on the queue.\nWe will Unit Test our application and create a continuous integration / continuous delivery workspace to verify our code is in a stable build.\nWe will maintain our code using GitHub.\n\n\nBy the end of the course you will have complete understanding of the software development lifecycle and have complete confidence using the tools in this course to create a full tack application using service oriented architecture in any workplace.",
      "target_audience": [
        "Beginner and Novice Programmers, Developers, Designers, Architects"
      ]
    },
    {
      "title": "Step By Step Java Programming Complete Course",
      "url": "https://www.udemy.com/course/step-by-step-java-programming-complete-course/",
      "bio": "Have a strong background in Java programming language,learn solutions of the most common problems,be experienced in Java",
      "objectives": [
        "Develop Java applications",
        "Have a really good programming background",
        "Have enough knowledge about Java technologies and terms",
        "Get verifiable completion certificate",
        "Answer the questions about Java in job interviews"
      ],
      "course_content": {},
      "requirements": [
        "You don't need to download any software or document before starting. We are explaining all downloading, and installing processes step by step. And also we are giving you some documents you will need during this course,"
      ],
      "description": "Welcome to AKINCI Training's “Step By Step Java Programming Complete Course”!\nLooking for an easy to follow course to enter the Java world?\nWant to develop your own Java projects?\nPreparing for a job interview?\nWant to have a strong Java background to learn Java-based technologies?\nNeed a high-quality reference guide for Java programming language to use while working on a project?\nOr do you just want to update your Java knowledge?\n\nThen this course is exactly for you!\nWe explain every topic from the complete beginners' level and teach every line of code with step-by-step instructions and plenty of animations and effects.\n\n\nWHAT OUR STUDENTS THINK ABOUT THIS COURSE?\n\n\n\"Very easy to follow. Touching all the important aspect in the incremental fashion. This is perfect for somebody who want to get productive with Java quickly.\" Peter G.\n\n\n\"I definitely learned a lot thing in the this course. I have bought too many online courses on internet. Too many programming courses. But this course is different. Perfect sound quality, very clear to understand, very good video effects, focuses every detail. This course is really very good. He teaches every line of code step by step. Well done! Thank you very much for everythin\" Linda F.\n\n\n\"Thank you for using 'Simple' and 'Easy' to understand, real-world examples which make learning real quick. Summary at the end of each concept is really helpful and good. Could have made summary little slower by avoiding initial repeated steps of package and class creation. More exercises would also be helpful.\" Vinod K.\n\n\n\"Awesome course! I like the teaching material and the way the instructor presents the content and the information. I am very happy I started learning Java again. Congratulations!\" Alexa\n\n\n\"I like the Java course because he explains everything in a clear and easy way.\" Conor O.\n\n\n\"Very informative and provides the step by step information as well as extra information\" Shakeel N.\n\n\n\"Well prepared course with good examples And I really liked the course summary part at the end of each video it explains whole videos step by step Fascinating\" Muhammad T.\n\n\n\"Good voice quality and video animations. Quick summaries are excellent\" Lynn\n\n\n\"The step by step process is very intuitive and informative.\" Abhishek S.\n_______\n\n\nWHY WE CALL THIS COURSE AS A SPECIAL ONE? We have too many reasons!\n\n\n1. WELL-PREPARED COURSE CONTENT\nEvery training video starts from creating a package and a Java class. There are no surprises! We can continue the course together, and you can follow each step easily, each video starts from scratch and contain every detail you'll need.\nAll content are created by software engineers having 10+ hands-on experience on Java.\nEvery section has section summary, section challenge examples, do it yourself exercises and bonus documents\nWe spent more than 3 months only for preparing course structure\n500 Real-Life Java Interview Questions & Answers e-book is included within the course!\nWe shared all source code of training videos. (You'll have source code archive!)\n\n\n2. HIGH QUALITY SOUND\nWe worked with a 40-YEAR-EXPERIENCED American voice over professional to dub our videos.\nAll records prepared in a professional recording studio.\nEnglish is not your native language? No problem! In training videos, our voiceover professional speaks clear and slow enough for you to understand easily.\n\n\n3. HIGH-QUALITY TRAINING VIDEOS\nWe used a professional screen capturing and editing software while preparing training videos.\nEvery line of code is described step-by-step in each video with zoom-in/zoom-out, sketch motions, arrows, information boxes and animations.\n\n\n4. FREQUENTLY UPDATED CONTENT\nWe are frequently adding new Java Interview Questions and their answers, new bonus documents, quiz questions.\nWe are updating the course content according to your questions.\nWe are preparing sections on Java updates.\n\n\n5. HIGH-QUALITY SUPPORT\nYour success is REALLY IMPORTANT for us. Because of this we're trying to answer your questions about the course within 24-hours.\nYou can easily contact with the author Koysel AKINCI via his e-mail, system message or course forums.\nAKINCI Training's Premium Support means you can get clear responses to your comments, suggestions or questions within 24 hours!\n_______\nCode your way to a great tomorrow! Join us now!\nAKINCI TRAINING",
      "target_audience": [
        "Anyone who wants to be good at Java programming language",
        "Anyone who wants to develop Java applications,",
        "Anyone who wants to be relax while coding (we're aiming to provide everything you need to be successful in Java programming part of your career)",
        "Anyone who wants to communicate with other programmers",
        "Anyone who wants to learn Java-based technologies(Like Spring MVC, J2EE, Java Design Patterns and etc)",
        "Anyone who wants to be successful in Java job interviews"
      ]
    },
    {
      "title": "Complete Python Programming 2020: Beginner to Advanced",
      "url": "https://www.udemy.com/course/python-programming-masterclass-beginner-to-professional/",
      "bio": "In this Python course, Learn every dimension of Python Programming and Do Machine Learning, Data Science and with Python",
      "objectives": [
        "All dimension of Python from variables, functions, loops and libraries to Object-Oriented Programming (OOP), Object Oriented Mapper (ORM) and Data science",
        "Complex features and topics of Python such as Comprehensions, Decorators, Literal Quarries and Magic codes",
        "Create games with Python such as Fizz-buzz game, dungeon game and guess word game",
        "Create apps with Python such as reminder app and shopping list app",
        "Do Data Mining, Image Processing, Machine Learning and Artificial Intelligence(AI) projects with Python",
        "Do professional programming in professional teams and groups",
        "Work with SQL Alchemy",
        "Design tests and do error debugging",
        "Work with Integrated Development Environments (IDEs)",
        "Work with Git Bash and Linux Commands"
      ],
      "course_content": {},
      "requirements": [
        "Just how to spell Python and turn on your system (no prior knowledge on Python programming or other programming languages is needed)",
        "Lots of motivation and passion",
        "Internet connection",
        "Computer (Linux, Mac or Windows)"
      ],
      "description": "Above and Beyond of Python Programming..!\n\n\nIf you are a beginner but you want to be advanced in Python, and if you want to develop your skills and become master of it to do Machine Learning, Data Science or Artificial Intelligence (AI) projects, absolutely Python Programming Masterclass: beginner to professional is one of the best possible options.\n\n\nThis course was designed for all who do not have any background but want to learn Python very well and do professional and real-world projects. So you will learn Python from installing on your system to professional concepts, functions, and codes. In this course, the approach is simple: learning useful and practical techniques and tools. So we avoid wasting our time on useless concepts which are not used in real projects. This course teaches you every dimension of Python in which you learn how to use special methods, codes, and tricks to have write complex codes with least codes and finally create professional programs, apps, and games. Generally, some of the topics and concepts you learn in this course are as the following:\n\n\n· Functions\n\n\n· Variables\n\n\n· Rules of coding\n\n\n· Error debugging\n\n\n· Different Python data types such as numbers, strings, lists, slices, dictionaries, tuples, sets, etc.\n\n\n· Python logic such as loops, conditions, exception, inputs, outputs, etc.\n\n\n· Integrated Development Environments (IDEs) such as Intellisense, Autopep 8, themes, shortcuts, tricks of Visual Studio Code, internal terminals, Installing Git Bash for Linux systems, Plugins, tools, etc.\n\n\n· Object-Oriented Systems in Python such as attributes, methods, self, parent, super, magic methods, yields, class method, static, organizing codes, etc.\n\n\n· Designing tests in Python such as Doctests, unit tests, etc.\n\n\n· Comprehensions\n\n\n· Decorators\n\n\n· Image editing\n\n\n· Date and time\n\n\n· First-class citizens and working with some special functions such as map function, filter function, reduce function, etc.\n\n\n· Data science\n\n\n· Regular Expression (regex)\n\n\n· Object-Oriented Mapper (ORM)\n\n\n· Json and CSV files\n\n\n· SQL Alchemy\n\n\n· Text processing\n\n\n· And much more..!\n\n\nAbove all, there are many challenges and exercises in this course which takes you in the depth of Python and real-world projects. Some of these projects are as the following:\n\n\n· Creating  reminder app\n\n\n· Creating  shopping list app\n\n\n· Creating Fizz-buzz game\n\n\n· Creating Dungeon game\n\n\n· Guess number game\n\n\n· Guess word game\n\n\nBy the end of this course you will be able to:\n\n\n· Implement websites\n\n\n· Design and create games\n\n\n· Work with Objet-oriented system\n\n\n· Design software\n\n\n· Design complex algorithms\n\n\n· Do Data mining\n\n\n· Work with Artificial intelligence systems\n\n\n· Do image processing\n\n\n· Work Web crawler\n\n\n· Work with APIs\n\n\nJust give it a try and enjoy the result….",
      "target_audience": [
        "People who don’t have any background on Python programming",
        "Those who are at beginner level and want to become professional Python programmer",
        "Those programmer who want to switch to Python language",
        "• People who want to do data mining, machine learning, image processing, implement websites, work with APIs, work with artificial intelligence with Python"
      ]
    },
    {
      "title": "Software Design: Functional Programming in C#",
      "url": "https://www.udemy.com/course/functional-csharp/",
      "bio": "Learn the principles of Functional Programming & how to apply them with the power of C# to improve software architecture",
      "objectives": [
        "Design and Implement Immutable Types",
        "Implement Useful Extension Methods",
        "Write Pure Functions (avoiding side effects)",
        "Handle Errors in a Functional Style",
        "Tackle with the Problem of Null-values in a Functional Style"
      ],
      "course_content": {},
      "requirements": [
        "Understand the Basics of C#",
        "Visual Studio 2017 Community Edition"
      ],
      "description": "Learn how to write C# code in a functional style. The “Functional Programming in C#” is for you if you want to improve your code, design and architecture. It means you are going to learn how to write code of the high quality: readable, understandable and reliable.\nTeaching Approach\nNo fluff, no ranting, no beating the air. I respect your time. The course material is succinct, yet comprehensive. All important concepts are covered. Particularly important topics are covered in-depth.\nTake this course and you will be satisfied.\nLearn Functional Programming in the context of clean coding and building types of high quality.\nGet Deep Understanding of what is Functional Programming\nLearn how to design Immutable types in C#\nApply new C# 6 and C# 7 features to write better code in a functional style\nLearn how to Extend and Compose any Types\nHandle Errors and Exceptions in a functional programming style\nTackle the Problem of Null-Values by the means of functional programming\nFoundations of Functional Programming\nDespite the fact that C# is primarily an object-oriented language, it is very powerful on features which enable functional programming style. In fact, C# is one of the richest on features language among object-oriented languages in the world nowadays. But with great power comes great responsibility. It's challenging to use all those features in a right way.\nYou probably have already heard the following well-known statement: most code sucks. Well, this course is all about how to produce code which doesn't suck.\nOwning skills of producing well-designed and well-implemented types with regards to functional programming principles.\nContent and Overview\nThis course is aimed at all the C# developers, from beginners to seniors. Topics which are covered in the course are relevant for all kinds of C# developers since all developers design and implement types. The topics complexity is very different. There are plenty of very simple topics, and at the same time, there are topics which require from you a solid C# background. There are plenty of code examples throughout this course, so you will learn both theoretical and practical material.\nWe’re going to start with the theoretical foundations of the functional programming paradigm. You’ll learn what is Functional Programming and what are the benefits of applying that paradigm.\nIn the second section, we’re going to elaborate the core concepts of the functional programming. You’ll learn more about immutability, purity, side effects and expressions.\nTo write modern code in a functional style, you need to learn modern C# features appeared in C# 6 and C# 7.\nWe’re going to learn more about immutability in a separate section. This is a very important topic.\nWe’re going to learn how to extend types. You’ll see practical cases, you’ll learn about general extensions needed for functional programming.\nAfter mastering the topic of types extending you will face the great problem of exceptions handling. Yep, it's a hard nut to crack. We will start from discussing a question of why we use exceptions as a mechanism of errors handling. And why C# team didn't invent any other mechanisms?\nIn the end, we will look at how to fight with null values. As you may know, Tony Hoar said that the invention of a null value was his billion-dollar mistake.\nTo sum up, the course covers the following topics:\nTheoretical Foundations of Functional Programming\nCore Concepts of Functional Programming\nFunctional Features in C#\nImmutability in C#\nExtendibility in C#\nDealing with Errors\nDealing with Nulls\n------------------------------------------------------------\nKeywords related to the course:\nC# Clean Code\nC# Best Practices\nFunctional Programming in C#\nC# Functional Programming\nClean Code in C# tutorial",
      "target_audience": [
        "Anyone who wants to write better code",
        "Anyone who's not familiar with Functional Programming"
      ]
    },
    {
      "title": "Working with Design Patterns in Go (Golang)",
      "url": "https://www.udemy.com/course/working-with-design-patterns-in-go-golang/",
      "bio": "Streamline your development by learning how common design patterns are implement in Go.",
      "objectives": [
        "How to use common design patterns in Go",
        "Streamline the software development process by using well known patterns",
        "Learn how to create loosely coupled software components",
        "Build a real-world application using design patterns"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "A bit about me",
          "Installing Go",
          "Installing an Integrated Development Environment",
          "Installing Docker",
          "Asking for Help",
          "Mistakes. We all make them."
        ],
        "Setting up a Simple Web Application": [
          "What we'll build in this section",
          "How web applications work",
          "Setting up our main application",
          "Installing a routing package",
          "Setting up routes",
          "Setting up a simple HTML template",
          "Creating a render function",
          "Rendering our first page",
          "Adding navigation",
          "Creating templates for all site pages",
          "Setting up a route & handler for site pages",
          "Trying out our template cache",
          "Adding WebP and jpeg images to the home page"
        ],
        "Factory Patterns": [
          "What we'll build in this section",
          "The Factory Pattern",
          "Setting up some types",
          "Creating a simple Factory",
          "Creating handlers for the simple Factory",
          "Setting up the front end",
          "Adding routes for our Factory handlers",
          "Trying our Factory pattern out",
          "The Abstract Factory pattern",
          "Creating an Abstract Factory",
          "Creating a route and handler for the Abstract Factory",
          "Updating the front end",
          "Trying out our Abstract Factory"
        ],
        "Connecting to a Database": [
          "What we'll build in this section",
          "Adding a module to support MySQL/MariaDB",
          "Setting up a local MariaDB instance with Docker",
          "Connecting our application to MariaDB"
        ],
        "The Repository Pattern": [
          "What we'll build in this section",
          "Writing our first database function",
          "Creating a handler to list dog breeds",
          "Updating the front end to fetch the list of dog breeds",
          "Updating the front end to display the list of dog breeds",
          "Writing a test for our handler",
          "Implementing the Repository pattern I",
          "Implementing the Repository pattern II",
          "Implementing the Repository pattern III",
          "Trying things out",
          "Implementing a test database repository",
          "Updating our handler test"
        ],
        "The Singleton Pattern": [
          "What we'll build in this section",
          "Creating a simple Singleton",
          "Updating our project to use our configuration package (singleton)"
        ],
        "Builder Pattern & Fluent Interface": [
          "What we'll build in this section",
          "The Builder Pattern (& Fluent Interface)",
          "Getting started with the Builder pattern in our project",
          "Setting up our Builder code",
          "Fixing three problems with our Builder code",
          "Setting up a handler to use our Builder pattern",
          "Setting up a route to our handler",
          "Modifying the front end to call our Builder route",
          "Challenge",
          "Solution to challenge"
        ],
        "Adapter Pattern": [
          "What we'll cover in this section",
          "The Adapter Pattern - Overview",
          "Installing an application to serve JSON and XML",
          "Setting up the Adapter type & the Adaptee",
          "Adding the Adapter to our application config",
          "Setting up a handler",
          "Adding a route",
          "Updating the Cat Breeds template",
          "Switching adapters from JSON to XML",
          "Adding a test for the Cat Breeds handler, using our adapter pattern"
        ],
        "Bringing it all together": [
          "What we'll cover in this section",
          "Creating a stub AnimalFromAbstractFactory handler",
          "Creating a New factory function for pet with embedded breed",
          "Creating stub newPetWithBreed method for Cats and Dogs",
          "Adding a GetDogBreedByName method in the database Repository",
          "Refactoring adapters.go to new package",
          "Adding a GetCatBreedByName method on our JSON adapter",
          "Adding a GetCatBreedByName method on our XML adapter",
          "Finishing up the new Adapter and Abstract Factory code",
          "Finishing up the changes in our Abstract Factory to use the new adapters",
          "Setting up a route to our stub handler",
          "Finishing off the handler code",
          "Updating the front end to try things out",
          "Writing the necessary javascript to call our back end"
        ],
        "The Decorator Pattern": [
          "What we'll cover in this section",
          "Setting up a route and a stub handler",
          "Setting up the database table",
          "Adding database methods for Dog of Month",
          "Completing our DogOfMonth handler",
          "Creating the Dog of Month template and trying things out"
        ]
      },
      "requirements": [
        "Some familiarity with the Go programming language is required"
      ],
      "description": "Go is a powerful language for building efficient and scalable applications. But as your projects grow, you'll encounter common problems that can be elegantly solved with design patterns.\nThis course will equip you with the knowledge and skills to leverage these design patterns effectively in your Go code. We'll explore various categories of patterns, including:\n\nCreational Patterns: Learn techniques for object creation that promote flexibility and decoupling.\nStructural Patterns: Discover ways to compose classes and objects to achieve desired functionality.\nBehavioral Patterns: Explore patterns that define communication and interaction between objects.\nBy understanding these patterns, you'll gain the ability to:\n\nWrite cleaner, more maintainable, and reusable code.\nImprove the design and architecture of your Go applications.\nSolve common programming challenges with proven solutions.\nCommunicate design concepts more effectively with other developers.\nWe'll approach design patterns with a practical lens, focusing on real-world Go scenarios. In fact, we'll build a simple web application that allows us to see how, why, and when you can use a particular design pattern to make your code more efficient, maintainable, and easy to understand. My goal is ensure that you'll gain hands-on experience implementing these patterns so that you can use them in your own projects.\nSo, whether you're a seasoned Go developer or just getting started with the language, this course will provide you with valuable tools to take your Go development skills to the next level.\nPlease note that this course requires you to download Docker Desktop from Docker. If you are a Udemy Business user, please check with your employer before downloading software.",
      "target_audience": [
        "Go developers who want to learn how make the development process more efficient"
      ]
    },
    {
      "title": "Java 8 - Beyond the Basics",
      "url": "https://www.udemy.com/course/java-8-beyond-the-basics/",
      "bio": "Expand your understanding of Java programming in this course that breaks down intermediate coding concepts onscreen.",
      "objectives": [
        "demonstrate a working knowledge of inheritance polymorphism, and abstract classes within Java",
        "perform SQL database operations in Java using JDBC",
        "begin working with Java 8's Lambda Programming",
        "get started with the Spring Framework"
      ],
      "course_content": {
        "Welcome To The Course": [
          "Important - Download These First - Working Files",
          "Introduction To Java - Beyond The Basics",
          "How To Access Your Working Files"
        ],
        "Review Of Java Topics And Getting Up To Speed": [
          "Types And Variables",
          "Classes And Constructors",
          "Methods",
          "Conditional Operators",
          "Switch And Ternary Operators",
          "Loops",
          "Basic Data Structures",
          "Packages And Jars",
          "Basic Unit Testing In Java With J-Unit 4"
        ],
        "Object Inheritance, Interfaces, Abstract Classes, And Polymorphism": [
          "Basic Terms",
          "Basic Object Inheritance And Overriding The ToString Method",
          "Object - Basic Extension - Part 1",
          "Object - Basic Extension - Part 2",
          "Polymorphism - First Look",
          "Planning Our System",
          "Introduction To Interfaces",
          "Create And Implement The Race Participant Interface",
          "Implementing Multiple Interfaces",
          "Develooping The Plan For Our System",
          "Adding In The Abstract Class - Part 1",
          "Adding In The Abstract Class - Part 2",
          "Testing The Abstract Class - Part 1",
          "Testing The Abstract Class - Part 2",
          "The Race Manager"
        ],
        "Exceptions": [
          "Introduction To Exceptions",
          "Unchecked Exceptions",
          "Checked Exceptions",
          "Custom Exceptions",
          "Additional Study",
          "Unit Testing Your Exceptions"
        ],
        "String Manipulation": [
          "StringBuilder To Construct Strings",
          "Split",
          "String Tokenizer",
          "Other String Operations",
          "Regular Expressions In String Searching",
          "Strategy - Searching The Race Manager"
        ],
        "File And Binary Serialization": [
          "Reading And Writing Text Files Using Scanner",
          "Reading And Writing Text Files Using BufferedReader And BufferedWriter",
          "Loading And Saving The Race To And From Flat Text Files - Part 1",
          "Loading And Saving The Race To And From Flat Text Files - Part 2",
          "Binary Streams",
          "Random Access Files",
          "The Serializable Interface",
          "Binary State Files",
          "Race Manager Save And Restore"
        ],
        "Database Operations Using Java And JDBC": [
          "Creating The Database At Appharbor",
          "Getting MySQL ConnectorJ And Org.Json Jar Files",
          "DBmanager Architecture Overview",
          "Creating Athletes And Athlete Type Tables",
          "Inserting Athletes And Athlete Types",
          "Deleting Athletes By Racer ID",
          "Updating Athlete Name And Age",
          "Populating Athletes From Database To Race Manager"
        ],
        "Basic GUI Programming": [
          "Simple GUI Window With JFrame",
          "Adding A JPanel To The JFrame",
          "JLabels And JTextfield",
          "Simple Input And Message Dialogs",
          "JButtons And ActionListeners",
          "Layout Managers",
          "JDesktopPane And JInternalFrame",
          "Get Eclipse Windowbuilder Pro",
          "Use Windowbuilder To Build Out A Simple GUI",
          "Racemanager In A GUI"
        ],
        "Generic Programming And Iteration": [
          "Overview Of Generic Programming",
          "Writing Generic Methods",
          "Writing Generic Classes",
          "Bounded Type Parameters",
          "Bounded Type Parameters In Classes And Methods",
          "Another Look At The Arraylist",
          "OOP Design Problem - Iteration",
          "An Iterable Best Data Container"
        ],
        "Additional Data Structures And Concepts": [
          "A Custom Single-Linked List",
          "The Collection Interface",
          "The List And ListIterator Interface",
          "Examination Of The Linkedlist",
          "Working With The Java Linkedlist",
          "Examination Of The Vector",
          "Working With The Vector",
          "Examination Of The Stack",
          "Working With The Java Stack",
          "Examination Of The Queue",
          "Working With The Queue",
          "Examination Of The Dictionary And Map",
          "Examination Of The The HashMap",
          "Working With The Java HashMap"
        ]
      },
      "requirements": [
        "a fundamental understanding of Java syntax and data operations",
        "Java 8 and Eclipse 4.4 or later"
      ],
      "description": "If you have a basic understanding of Java but feel ready to start digging deeper, this is the course for you. It's the perfect followup to our Java 8 beginners tutorial, but also suitable for those who've worked through other introductions, as well.\nYou will start with a quick review of Java, then jump into learning about object inheritance, interfaces, abstract classes, and polymorphism. From there, Brian will teach you about exceptions and string manipulation, including custom exceptions, checked and unchecked exceptions, and the string tokenizer. This video tutorial also covers topics such as file and binary serialization, database operations using Java and JDBC, basic GUI programming, and generic programming and iteration. You will also learn about additional data structures and concepts, such as the collection interface, working with the vector, working with the queue, and examination of the HashMap. Finally, you will cover multi-threading and networking, lambda programming, and Spring tools.\nOnce you have completed this computer based training course, you will have developed a deeper working knowledge of Java 8 and the Eclipse IDE.",
      "target_audience": [
        "beginners who have learned or worked through the very basics of Java programming",
        "this is NOT for Java programming professionals except as reinforcement for specific topics covered"
      ]
    },
    {
      "title": "C++ in 1 hour",
      "url": "https://www.udemy.com/course/c-in-1-hour/",
      "bio": "Most of John Bura's courses are on sale for 9 dollars! https://www.udemy.com/u/johnbura/ Sale ends Oct 31 2013! Act now!",
      "objectives": [
        "To learn C++ in 1 hour",
        "Learn a good foundation for future software development"
      ],
      "course_content": {
        "Let's Learn C++": [
          "Introduction",
          "Course Requirements"
        ],
        "Let's learn!": [
          "C++ development",
          "Cout Statement",
          "Error messages",
          "Comments"
        ],
        "Functions": [
          "Calling methods and functions",
          "More on calling functions",
          "White Spaces and indentation"
        ],
        "Variables": [
          "Variables and int variables",
          "Adding a string variable",
          "Boolean Variables",
          "Variable scope and global variables",
          "Math",
          "Double variables",
          "Passing variable to functions"
        ],
        "If Statements": [
          "If statements",
          "Operators",
          "Logical Operators",
          "Else statements",
          "Else if Statements",
          "For statements"
        ],
        "Congratulations you are finished!": [
          "Conclusion"
        ]
      },
      "requirements": [
        "An internet connection",
        "Google Chrome (Free Web browser)"
      ],
      "description": "Have you ever wanted to learn to code but don't know where to start? Learning how to code can get you a better job and lead to a better future. This course starts you off with the basic coding language of C#. This is a very condensed 1 hour tutorial that will show you how to code in C#.",
      "target_audience": [
        "Complete beginners"
      ]
    },
    {
      "title": "Secure Coding and Design Best Practices in C#",
      "url": "https://www.udemy.com/course/secure-coding-and-design-best-practices-in-ccharp/",
      "bio": "Secure Coding in C# with Design Principles and practice - helpful in PCI-DSS compliance",
      "objectives": [
        "Secure Design Principles",
        "Why Secure Coding",
        "Secure Coding Practices",
        "Secure Coding in C#"
      ],
      "course_content": {},
      "requirements": [
        "Basics C# knowledge"
      ],
      "description": "Secure Coding and Design Practice in C#\n\n\n\n\nSecure coding is a way of writing computer programs that makes them less vulnerable to security threats like hacking and viruses or data leaks.\nWhen we write software, we want to make sure it is built in a way that keeps it safe from the attackers who might want to break in and do real bad things, like steal information or cause damage to the application or data.\nOne of the rough truth is that new vulnerabilities are constantly being discovered, which can compromise the security of software systems. This means that even if a software application was secure at one point in time, it may become vulnerable to attack as new weaknesses are identified and exploited by attackers.\nWhat is the way to achieve this?\nThe answer is we have to follow certain guidelines and best practices at every stage of development that help us identify and address potential security risks. By doing this, we can better protect sensitive data and prevent unauthorised access or manipulation of the software by attackers.Also, focussing on applications security and updating the application time to time as per the updating security standards.\nIt's essential to prioritise secure coding practices because most businesses today rely on software to run their operations. Software can either be custom-made specifically for the business or purchased from other companies. Building software can be a time-consuming and costly process, but unfortunately, the security of the software often doesn't receive enough attention\nIt is not part of day to day programming by developers. There are a few challenges that architects and developers face to achieve code security:\nLack of knowledge:\nMany new developers may not have a comprehensive understanding of secure coding practices and may not be aware of the potential vulnerabilities in their code.\nLimited resources:\nSmall teams or individual developers may not have the resources to implement complex security measures or to conduct thorough testing of their code.\nTime constraints: Developers may be under pressure to deliver code quickly, which can lead to shortcuts being taken and security being overlooked.\nEvolving threats:\nThe security landscape is constantly changing, and new threats can emerge quickly. Developers need to stay up-to-date with the latest threats and vulnerabilities to ensure that their code remains secure.\nCompatibility issues:\nSecure coding can sometimes conflict with other requirements, such as compatibility with legacy systems or third-party software, which can make it difficult to implement.\nThese are the challenges faced during the development. The best solution to this is to know the security practices prior to start a new development so that they can be taken in consideration from the very start.This means making sure that all developers understand the basics of secure coding practices and that security is considered throughout the development process Developers should educate themselves on secure coding practices and keep themselves updated with new security vulnerabilities and their solutions.\n\n\nTOC :\n1. OnBoarding\n2. Introduction of Secure Coding\n3. Secure Design\n4. Understanding the RISKS\n5. Security Management\n6. Summary\n7.  Appendix",
      "target_audience": [
        "Who want to ship Secure Code to production",
        "Want to understand Secure Design Principles and Coding practices"
      ]
    },
    {
      "title": "Building a module in Go (Golang)",
      "url": "https://www.udemy.com/course/building-a-module-in-go-golang/",
      "bio": "Learn to build a reusable, well-tested module in Go",
      "objectives": [
        "How to build a platform agnostic, re-usable Go module",
        "How to share your module with other Go developers",
        "How to write tests for your module",
        "How to manage multiple versions of your module",
        "How to use Go 1.18's new go work feature, workspaces"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About me",
          "How to ask for help"
        ],
        "Project Setup": [
          "Installing Go",
          "Installing an IDE",
          "Setting up our Go Workspace"
        ],
        "Getting Started with the Module": [
          "What we'll cover in this section",
          "Creating a function to generate a random string",
          "Trying out our new module in a simple Go application",
          "Writing a test for our RandomString function",
          "Pushing our module up to GitHub"
        ],
        "Uploading one or More Files": [
          "What we'll cover in this section",
          "Getting started with the UploadFiles method",
          "Adding a project to our workspace to test uploading files",
          "Trying out our new upload functionality",
          "Adding a convenience method, UploadOneFile",
          "Writing a test for the UploadFiles method in our module",
          "Writing a test for UploadOneFile",
          "Pushing our changes to GitHub"
        ],
        "Creating Directories if they do not exist": [
          "What we'll cover in this section",
          "Writing the CreateDirIfNotExists method",
          "Trying out our new method",
          "Writing a test for CreateDirIfNotExists",
          "Updating the UploadFiles method to take advantage of our new method",
          "Updating our readme and pushing changes to GitHUB"
        ],
        "Generating Slugs": [
          "What we'll cover in this section",
          "Writing the Slugify method for our module",
          "Adding an app-slug project to our Go workspace and trying things out",
          "Update our tests",
          "Pushing our changes to GitHub"
        ],
        "Downloading a Static File": [
          "What we'll cover in this section",
          "Writing the DownloadStaticFile function",
          "Trying things out",
          "Writing a test for DownloadStaticFile",
          "Pushing our changes to GitHub"
        ],
        "Working with JSON": [
          "What we'll cover in this section",
          "Reading JSON",
          "Improving error messages in ReadJSON",
          "Writing a test for ReadJSON",
          "Adding additional cases to our table test for ReadJSON",
          "Writing JSON",
          "Writing a test for WriteJSON",
          "Creating the ErrorJSON function",
          "Writing a test for ErrorJSON",
          "Pushing JSON to a remote service",
          "Writing a test for PushJSONToRemote",
          "Setting up our simple web app and adding some HTML",
          "Getting started with the web app",
          "Handling a simple JSON Post",
          "Handling pushing to a remote service"
        ],
        "Tagging a release & Semantic Versioning": [
          "What we'll cover in this section",
          "What is semantic versioning?",
          "Tagging version 1.0.0 of our module",
          "Updating the version to 2.0.0"
        ],
        "Trying our module out": [
          "What we'll cover in this section",
          "Creating a simple (dummy) API",
          "Importing our toolkit module to the project and trying one endpoint",
          "Trying out the login handler"
        ]
      },
      "requirements": [
        "Some experience with the Go programming language is required."
      ],
      "description": "Working with web applications in Go is remarkably easy, but it does not take too long to realize that in a lot of cases, we end up writing the same kind of code every time we start a new project. You might need to read JSON, write JSON, upload files, or any of the commonly used features of a given web application. In other words, we often rewrite code that we have already written, many times over.\nRather than simply copying and pasting code from one project to another, it makes sense to take advantage of Go modules -- reusable code that can be included in a project by simply issuing a \"go get\" command. That way, if new functionality is added to that module, any project that imports it can take advantage of that functionality simply by updating its dependencies, and if a bug is discovered, you can fix it by updating the module; every project that uses that module gets the bug fix with a single \"go get -u\" command.\nBuilding a robust, secure, well-tested module is not difficult, but it does require careful planning to ensure that it will work across different operating systems.\nThis course will take you through the steps necessary to produce a module that includes many of the tasks commonly used in web applications, including:\n\nreading JSON\nwriting JSON\nproducing well formatted, informative error messages\nuploading one or more files to a server, and limiting uploads by mime type and file size\ncreating directories on the server\ngenerating random strings\ndownloading static files\nposting JSON to a remote service\ncreating a URL safe slug from a string\nWe'll build our module using Go 1.18's new workspaces tools, and we'll ensure that the entire module is well-tested.\nOur final module will not have any external dependencies, and will only use functionality found in Go's standard library.\nBy the time you have finished this course, you'll have a Go module that will make starting a new web application much faster, and you won't be depending on someone else's code to do so.",
      "target_audience": [
        "This course is intended for Go developers who want to build and share modules (sometimes called packages) for use by other developers, or in their own projects."
      ]
    },
    {
      "title": "C++ Training Crash Course for C++ Beginners",
      "url": "https://www.udemy.com/course/c-training-crash-course-2022/",
      "bio": "Learn C++ Training Crash Course for Beginners, Learn C++ Basics In this C++ Crash Course",
      "objectives": [
        "You will learn common programming constructs as they are implemented in C++ including C++ 11. Topics include the use of C++ for memory management, file input/o",
        "You will learn how to write a complete C++ program that takes user input, processes and outputs the results",
        "You will learn C++ concepts such as console output, C++ Variables and Data Types, C++ Operators And more",
        "You will learn about references, exceptions, and object-oriented programming C++"
      ],
      "course_content": {
        "Introduction": [
          "C++ Arrays",
          "C++ Real Bitwise Operator",
          "C++ Assignment Operators",
          "C++ Relational Operators",
          "C++ Logical Operators.",
          "C++ The # Operators",
          "C++ The ## Operators",
          "C++ Raise Function",
          "C++ Pointers To Structure",
          "C++ Namespaces With directives",
          "C++ The Signal() Function",
          "Class Member Functions",
          "C++ Operator Overloading",
          "bonus lecture"
        ]
      },
      "requirements": [
        "Basic Understanding of Computers",
        "No prior knowledge of C++, everything will be covered in this course"
      ],
      "description": "Learn C++ Training Crash Course for Beginners, Learn C++ Basics In this C++ Crash Course\nThis course will help you learn C++ basics and give you hands-on experience to create your own projects and work with computer memory. With its adaptability and fast rendering, you’ll find the C++ programming language used everywhere, from web browsers to game development and operating systems to science and machine learning tools.\nThis C++ Programming Course is designed to meet the industry benchmarks. This C++ programming course will give you extensive knowledge of Object-Oriented Programming in C++, Coding Styles and Design Patterns, Generic Programming and Standard Template Library.\nThe course examines common programming constructs as they are implemented in C++ including C++ 11. Topics include the use of C++ for memory management, file input/output (I/O), pointers, references, exceptions, and object-oriented programming. Basic data structures such as linked lists, stacks, and queues are covered in terms of their usage and implementation using C++.\nAlso, this course has been created to help you learn all the basics concepts that are the core of C++ Programing. This way, you will not only program in this language, but you will also understand the logic behind this programming language and will be able to create various applications in it on your own. Indeed, if you don’t have prior programming experience, the hardest part is understanding the programming logic and this course covers all the topics to help you succeed in C++ programming.\nSubjects/topics you will learn through the course are\nC++ Overview\nFunctions and variables\nClasses\nOperator Overloading\nInitialization and Assignment\nStorage Management\nInheritance\nPolymorphism\nException\nTemplates\nSee you Inside the course. Thank you",
      "target_audience": [
        "Beginner in C++ development",
        "Beginner in software development"
      ]
    },
    {
      "title": "Practical Java Basics Course with Real-life Examples",
      "url": "https://www.udemy.com/course/practical-java-course-for-beginners/",
      "bio": "Learn the basics of Java easily through real-life examples! Example-based Java programming for complete beginners!",
      "objectives": [
        "Java from the very basics",
        "Language features that are used at the biggest tech companies",
        "Useful programming tips and tricks, that can be used in any other programming language"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "What is Java?",
          "Why Java?",
          "How to get the most out of this course?",
          "Course Overview",
          "Course Resources"
        ],
        "Enviroment Setup": [
          "Tools you'll need",
          "JDK install for Windows",
          "IntelliJ install for Windows",
          "JDK install for MacOS",
          "IntelliJ install for MacOS",
          "JDK install for Linux",
          "IntelliJ install for Linux"
        ],
        "Your First Java program": [
          "Introduction",
          "Your first Java program",
          "How Java code builds up?",
          "How to get the source code?"
        ],
        "Varaibles (primitives, object references)": [
          "Variables",
          "Data types - Primitives",
          "Data types - Primitives - CODING",
          "Data types - Primitives: Conversion",
          "Data types - Primitives: Conversion - CODING",
          "Data types - Primitives - PRACTICE",
          "Data types - Object references - Part 1",
          "Data types - Object references - Part 2",
          "Data types - Object references - CODING - Part 1",
          "Data types - Object references - CODING - Part 2"
        ],
        "Operators, Loops, Control flows and Code blocks": [
          "Operators - Part 1",
          "Operators - Part 2",
          "Operators - CODING - Part 1",
          "Operators - CODING - Part 2",
          "Operators - CODING - Part 3",
          "Operators - CODING - Part 4",
          "Operators - CODING - Part 5",
          "Loops",
          "Loops - CODING - Part 1",
          "Loops - CODING - Part 2",
          "Control flow",
          "Control flow - CODING",
          "Control flow - PRACTICE",
          "Code blocks",
          "Code blocks - CODING"
        ],
        "Methods and Arrays": [
          "Methods",
          "Methods - CODING",
          "Methods - PRACTICE",
          "Arrays",
          "Arrays - CODING"
        ],
        "Final practice": [
          "FINAL PRACTICE",
          "Section Summary"
        ],
        "BONUS SECTION": [
          "BONUS Material"
        ]
      },
      "requirements": [
        "Since the whole course is from complete beginner level, You don't need any previous knowledge",
        "A normal computer, the operating system doesn't matter. I'll show you how to write and run Java code on Windows, Linux or Mac."
      ],
      "description": "Learn Java through practical examples from the very beginning.\nJava is one of the most popular programming languages and the whole course is focusing on showing you the language features that are used at the biggest tech companies like Apple, Netflix, Google or Amazon.\n\n\nThis course is designed to learn programming from scratch. The only thing you'll need is your computer and it doesn't matter whether your operating system is a Windows or macOS or Linux.\n\n\nHow this course builds up?\nFirst I would like to show you the bigger picture and answer some fundamental questions. Why Java would be a good choice? What is it good for? How to learn it?\nEvery concept has a very clear and simple explanation with real-life examples.\n\n\nThe course is designed for those who have just started to learn programming and would like to learn the basics of Java.\n\n\nThe whole course is full of useful tips and tricks that can be very helpful if you apply for a job or you are doing your own project.\n\n\nAt the end of this course, you'll get an end-level task. If you can complete the tasks on your own it shows that you are ready to take the next level. If not, don't worry, I'll show you how I would do it, so the next time you'll easily do it.\n\n\nEnroll today! See you inside the course!",
      "target_audience": [
        "Complete beginners who curious to learn programming"
      ]
    },
    {
      "title": "Python Crash Course: Dive into Coding with Hands-On Projects",
      "url": "https://www.udemy.com/course/python-crash-course-cgev/",
      "bio": "Essential Python Skills: Learn Fundamentals, Functions, Data Structures, and Classes Through Project-Based Learning",
      "objectives": [
        "Master Python fundamentals, including variables, functions, and control flow.",
        "Apply Python skills to solve real-world problems through hands-on projects.",
        "Understand key data structures such as lists, dictionaries, and tuples.",
        "Explore advanced Python topics like exception handling and classes.",
        "Gain proficiency in loop structures including while and for loops.",
        "Develop a solid foundation in Python programming for further learning and career advancement."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Python installation"
        ],
        "Basics of Python": [
          "Variables",
          "input() Function",
          "String Methods",
          "Arithmetic Operators",
          "Comparison and Logical",
          "Type Conversion",
          "If Statement",
          "Exercises",
          "Quiz"
        ],
        "Control Structures and Collections": [
          "While Loops",
          "Lists",
          "For Loops",
          "Dictionaries",
          "Tuples",
          "Functions",
          "Quiz"
        ],
        "Project: ATM simulation": [
          "ATM simulation"
        ],
        "Advanced Topics": [
          "Keyword Argument",
          "Return Statement",
          "Exceptions Handling",
          "Comments",
          "Classes",
          "Inheritance and Polymorphism",
          "pypi",
          "Quiz"
        ],
        "Project: Rock Paper Scissors": [
          "Rock Paper Scissors"
        ],
        "Project: Hangman": [
          "Hangman"
        ],
        "Project: Password Generator": [
          "Step 1: Password Generator",
          "Step 2: GUI with Tkinter",
          "Step 3: Integration of Steps 1 and 2"
        ],
        "Project: Milestone Monitor": [
          "Project Into",
          "Milestone Monitor",
          "Creating executable on Mac"
        ]
      },
      "requirements": [
        "No Prior Experience Needed: This course is designed for beginners with no prior programming experience. We'll start from the basics and gradually build up your Python skills."
      ],
      "description": "Welcome to our Python Crash Course: A Hands-On Introduction to Coding! Are you ready to embark on an exciting journey into the world of Python programming? Whether you're a complete beginner or looking to brush up on your skills, this course is designed to equip you with the fundamental knowledge and practical experience needed to kickstart your coding journey.\nIn this course, we'll start by laying the groundwork with an overview of Python and how to set up your development environment. Then, we'll dive into the basics of Python programming, covering essential concepts such as variables, input functions, string manipulation, arithmetic operators, and more. Through interactive lectures and exercises, you'll gain a solid understanding of Python syntax and best practices.\nAs we progress, we'll explore control structures and collections, including while loops, lists, for loops, dictionaries, and tuples. You'll learn how to effectively use these control structures to organize and manipulate data in your programs. Additionally, we'll delve into the concept of functions, enabling you to write reusable and modular code for better code organization and efficiency.\nBut wait, there's more! No coding journey is complete without hands-on projects to apply your newfound skills. Get ready to tackle exciting projects like simulating an ATM, playing Rock Paper Scissors, guessing words in Hangman, and generating secure passwords. These projects will not only reinforce your learning but also provide real-world applications for your Python skills.\nAnd that's not all—our course also covers advanced topics such as keyword arguments, exception handling, classes, inheritance, and polymorphism. These concepts will take your Python skills to the next level and empower you to tackle more complex coding challenges with confidence.\nBy the end of this course, you'll have a solid foundation in Python programming, along with the practical experience gained through hands-on projects. Whether you're aspiring to become a software developer, data scientist, or simply want to automate everyday tasks, Python Crash Course is your gateway to mastering the world's most versatile programming language.\nSo, what are you waiting for? Let's dive in and unlock the amazing possibilities that Python has to offer! Get ready to code, create, and conquer the world of programming with Python Crash Course.",
      "target_audience": [
        "Beginners: Complete newcomers to programming who want to start with a versatile and widely-used language like Python.",
        "Students: High school or college students looking to learn programming fundamentals as part of their academic curriculum or for personal enrichment.",
        "Career Switchers: Professionals from non-technical backgrounds who want to transition into tech roles or explore careers in software development, data science, or web development.",
        "Self-Learners: Individuals who prefer self-paced, hands-on learning and want to acquire practical coding skills through real-world projects.",
        "Hobbyists: Enthusiasts who are curious about programming and want to explore Python as a hobby or for personal projects.",
        "Anyone Seeking Versatility: Python is widely used across various industries and domains, making this course valuable for anyone looking to acquire a versatile skillset applicable in fields such as web development, data analysis, artificial intelligence, and more."
      ]
    },
    {
      "title": "Solve 250 Python Quizzes",
      "url": "https://www.udemy.com/course/python-quiz/",
      "bio": "Solve 250 quizzes to boost your Python skills and prepare for any test, exam or interview. Python Cheat Sheet included!",
      "objectives": [
        "You will answer 250 multiple-choice quizzes designed to cover the most important areas of Python programming.",
        "You are going to DOWNLOAD a comprehensive Python CHEAT SHEET, as well as a PDF Course Notebook.",
        "You will have MY FULL SUPPORT for every course-related question or suggestion, plus the help of the community.",
        "You will have LIFETIME ACCESS TO COURSE UPDATES and new content, anytime, anywhere, on any device."
      ],
      "course_content": {
        "Some Initial Thoughts": [
          "Just starting out in programming? Read this!",
          "Interested in getting certified in Python?"
        ],
        "Installing Python for Testing Your Quiz Answers": [
          "How to Install Python on Windows",
          "How to Install Python on macOS"
        ],
        "Download the Python Cheat Sheet": [
          "Download the PDF Cheat Sheet",
          "EXTRA: Download a Python Notebook"
        ],
        "250 Multiple-Choice Python Quizzes": [
          "How to Properly Solve a Quiz on Udemy",
          "Quiz 1 - Strings",
          "Quiz 2 - Strings",
          "Quiz 3 - Strings",
          "Quiz 4 - Strings",
          "Quiz 5 - Strings",
          "Quiz 6 - Strings",
          "Quiz 7 - Strings",
          "Quiz 8 - Strings",
          "Quiz 9 - Strings",
          "Quiz 10 - Strings",
          "Quiz 11 - Strings",
          "Quiz 12 - Strings",
          "Quiz 13 - Strings",
          "Quiz 14 - Strings",
          "Quiz 15 - Strings",
          "Quiz 16 - Strings",
          "Quiz 17 - Strings",
          "Quiz 18 - Strings",
          "Quiz 19 - Strings",
          "Quiz 20 - Strings",
          "Quiz 21 - Strings",
          "Quiz 22 - Strings",
          "Quiz 23 - Strings",
          "Quiz 24 - Strings",
          "Quiz 25 - Strings",
          "Quiz 26 - Numbers",
          "Quiz 27 - Numbers",
          "Quiz 28 - Numbers",
          "Quiz 29 - Numbers",
          "Quiz 30 - Numbers",
          "Quiz 31 - Booleans",
          "Quiz 32 - Booleans",
          "Quiz 33 - Booleans",
          "Quiz 34 - Booleans",
          "Quiz 35 - Booleans",
          "Quiz 36 - Lists",
          "Quiz 37 - Lists",
          "Quiz 38 - Lists",
          "Quiz 39 - Lists",
          "Quiz 40 - Lists",
          "Quiz 41 - Lists",
          "Quiz 42 - Lists",
          "Quiz 43 - Lists",
          "Quiz 44 - Lists",
          "Quiz 45 - Lists",
          "Quiz 46 - Lists",
          "Quiz 47 - Lists",
          "Quiz 48 - Lists",
          "Quiz 49 - Lists",
          "Quiz 50 - Lists",
          "Quiz 51 - Lists",
          "Quiz 52 - Lists",
          "Quiz 53 - Lists",
          "Quiz 54 - Lists",
          "Quiz 55 - Lists",
          "Quiz 56 - Lists",
          "Quiz 57 - Lists",
          "Quiz 58 - Lists",
          "Quiz 59 - Lists",
          "Quiz 60 - Lists",
          "Quiz 61 - Sets",
          "Quiz 62 - Sets",
          "Quiz 63 - Sets",
          "Quiz 64 - Sets",
          "Quiz 65 - Sets",
          "Quiz 66 - Sets",
          "Quiz 67 - Sets",
          "Quiz 68 - Sets",
          "Quiz 69 - Tuples",
          "Quiz 70 - Tuples",
          "Quiz 71 - Tuples",
          "Quiz 72 - Tuples",
          "Quiz 73 - Tuples",
          "Quiz 74 - Tuples",
          "Quiz 75 - Tuples",
          "Quiz 76 - Tuples",
          "Quiz 77 - Tuples",
          "Quiz 78 - Ranges",
          "Quiz 79 - Ranges",
          "Quiz 80 - Ranges",
          "Quiz 81 - Ranges",
          "Quiz 82 - Ranges",
          "Quiz 83 - Ranges",
          "Quiz 84 - Ranges",
          "Quiz 85 - Ranges",
          "Quiz 86 - Dictionaries",
          "Quiz 87 - Dictionaries",
          "Quiz 88 - Dictionaries",
          "Quiz 89 - Dictionaries",
          "Quiz 90 - Dictionaries",
          "Quiz 91 - Dictionaries",
          "Quiz 92 - Dictionaries",
          "Quiz 93 - Dictionaries",
          "Quiz 94 - Dictionaries",
          "Quiz 95 - Dictionaries",
          "Quiz 96 - Dictionaries",
          "Quiz 97 - Dictionaries",
          "Quiz 98 - Dictionaries",
          "Quiz 99 - Dictionaries",
          "Quiz 100 - Dictionaries",
          "Quiz 101 - Dictionaries",
          "Quiz 102 - Dictionaries",
          "Quiz 103 - Dictionaries",
          "Quiz 104 - Dictionaries",
          "Quiz 105 - Dictionaries",
          "Quiz 106 - Conversions Between Data Types",
          "Quiz 107 - Conversions Between Data Types",
          "Quiz 108 - Conversions Between Data Types",
          "Quiz 109 - Conversions Between Data Types",
          "Quiz 110 - Conversions Between Data Types",
          "Quiz 111 - If / Elif / Else Conditionals",
          "Quiz 112 - If / Elif / Else Conditionals",
          "Quiz 113 - If / Elif / Else Conditionals",
          "Quiz 114 - If / Elif / Else Conditionals",
          "Quiz 115 - If / Elif / Else Conditionals",
          "Quiz 116 - If / Elif / Else Conditionals",
          "Quiz 117 - If / Elif / Else Conditionals",
          "Quiz 118 - If / Elif / Else Conditionals",
          "Quiz 119 - If / Elif / Else Conditionals",
          "Quiz 120 - If / Elif / Else Conditionals",
          "Quiz 121 - If / Elif / Else Conditionals",
          "Quiz 122 - If / Elif / Else Conditionals",
          "Quiz 123 - If / Elif / Else Conditionals",
          "Quiz 124 - If / Elif / Else Conditionals",
          "Quiz 125 - If / Elif / Else Conditionals",
          "You're Halfway There!",
          "Quiz 126 - If / Elif / Else Conditionals",
          "Quiz 127 - If / Elif / Else Conditionals",
          "Quiz 128 - If / Elif / Else Conditionals",
          "Quiz 129 - If / Elif / Else Conditionals",
          "Quiz 130 - If / Elif / Else Conditionals",
          "Quiz 131 - If / Elif / Else Conditionals",
          "Quiz 132 - If / Elif / Else Conditionals",
          "Quiz 133 - If / Elif / Else Conditionals",
          "Quiz 134 - If / Elif / Else Conditionals",
          "Quiz 135 - If / Elif / Else Conditionals",
          "Quiz 136 - For / While Loops",
          "Quiz 137 - For / While Loops",
          "Quiz 138 - For / While Loops",
          "Quiz 139 - For / While Loops",
          "Quiz 140 - For / While Loops",
          "Quiz 141 - For / While Loops",
          "Quiz 142 - For / While Loops",
          "Quiz 143 - For / While Loops",
          "Quiz 144 - For / While Loops",
          "Quiz 145 - For / While Loops",
          "Quiz 146 - For / While Loops",
          "Quiz 147 - For / While Loops",
          "Quiz 148 - For / While Loops",
          "Quiz 149 - For / While Loops",
          "Quiz 150 - For / While Loops",
          "Quiz 151 - For / While Loops",
          "Quiz 152 - For / While Loops",
          "Quiz 153 - For / While Loops",
          "Quiz 154 - For / While Loops",
          "Quiz 155 - For / While Loops",
          "Quiz 156 - For / While Loops",
          "Quiz 157 - For / While Loops",
          "Quiz 158 - For / While Loops",
          "Quiz 159 - For / While Loops",
          "Quiz 160 - For / While Loops",
          "Quiz 161 - For / While Loops",
          "Quiz 162 - For / While Loops",
          "Quiz 163 - For / While Loops",
          "Quiz 164 - Exceptions",
          "Quiz 165 - Exceptions",
          "Quiz 166 - Exceptions",
          "Quiz 167 - Exceptions",
          "Quiz 168 - Exceptions",
          "Quiz 169 - Exceptions",
          "Quiz 170 - Exceptions",
          "Quiz 171 - Functions & Modules",
          "Quiz 172 - Functions & Modules",
          "Quiz 173 - Functions & Modules",
          "Quiz 174 - Functions & Modules",
          "Quiz 175 - Functions & Modules",
          "Quiz 176 - Functions & Modules",
          "Quiz 177 - Functions & Modules",
          "Quiz 178 - Functions & Modules",
          "Quiz 179 - Functions & Modules",
          "Quiz 180 - Functions & Modules",
          "Quiz 181 - Functions & Modules",
          "Quiz 182 - Functions & Modules",
          "Quiz 183 - Functions & Modules",
          "Quiz 184 - Functions & Modules",
          "Quiz 185 - Functions & Modules",
          "Quiz 186 - Functions & Modules",
          "Quiz 187 - Functions & Modules",
          "Quiz 188 - Functions & Modules",
          "Quiz 189 - Functions & Modules",
          "Quiz 190 - Functions & Modules",
          "Quiz 191 - Functions & Modules",
          "Quiz 192 - Functions & Modules",
          "Quiz 193 - Functions & Modules",
          "Quiz 194 - Functions & Modules",
          "Quiz 195 - Functions & Modules",
          "Quiz 196 - File Operations",
          "Quiz 197 - File Operations",
          "Quiz 198 - File Operations",
          "Quiz 199 - File Operations",
          "Quiz 200 - File Operations",
          "Quiz 201 - File Operations",
          "Quiz 202 - File Operations",
          "Quiz 203 - File Operations",
          "Quiz 204 - File Operations",
          "Quiz 205 - File Operations",
          "Quiz 206 - Regular Expressions",
          "Quiz 207 - Regular Expressions",
          "Quiz 208 - Regular Expressions",
          "Quiz 209 - Regular Expressions",
          "Quiz 210 - Regular Expressions",
          "Quiz 211 - Regular Expressions",
          "Quiz 212 - Regular Expressions",
          "Quiz 213 - Regular Expressions",
          "Quiz 214 - Regular Expressions",
          "Quiz 215 - Regular Expressions",
          "Quiz 216 - Regular Expressions",
          "Quiz 217 - Regular Expressions",
          "Quiz 218 - Regular Expressions",
          "Quiz 219 - Regular Expressions",
          "Quiz 220 - Regular Expressions",
          "Quiz 221 - Regular Expressions",
          "Quiz 222 - Regular Expressions",
          "Quiz 223 - Regular Expressions",
          "Quiz 224 - Regular Expressions",
          "Quiz 225 - Regular Expressions",
          "Quiz 226 - Regular Expressions",
          "Quiz 227 - Regular Expressions",
          "Quiz 228 - Regular Expressions",
          "Quiz 229 - Regular Expressions",
          "Quiz 230 - Regular Expressions",
          "Quiz 231 - Classes and Objects",
          "Quiz 232 - Classes and Objects",
          "Quiz 233 - Classes and Objects",
          "Quiz 234 - Classes and Objects",
          "Quiz 235 - Classes and Objects",
          "Quiz 236 - Classes and Objects",
          "Quiz 237 - Classes and Objects",
          "Quiz 238 - Classes and Objects",
          "Quiz 239 - Classes and Objects",
          "Quiz 240 - Classes and Objects",
          "Quiz 241 - Advanced Python Concepts",
          "Quiz 242 - Advanced Python Concepts",
          "Quiz 243 - Advanced Python Concepts",
          "Quiz 244 - Advanced Python Concepts",
          "Quiz 245 - Advanced Python Concepts",
          "Quiz 246 - Advanced Python Concepts",
          "Quiz 247 - Advanced Python Concepts",
          "Quiz 248 - Advanced Python Concepts",
          "Quiz 249 - Advanced Python Concepts",
          "Quiz 250 - Advanced Python Concepts",
          "Wow, you really did it! 250 Python quizzes!"
        ],
        "10 Ways to Earn Money and Build a Portfolio with Python": [
          "Putting Your Python Skills to Work - Part 1",
          "Putting Your Python Skills to Work - Part 2",
          "Download the Presentation"
        ],
        "Final Section": [
          "Closing Thoughts",
          "Get your Certificate of Course Completion!",
          "Get Certified in Python Programming!"
        ]
      },
      "requirements": [
        "Prior basic-to-intermediate Python experience is required.",
        "You just need a laptop or PC and a decent Internet connection.",
        "You need a strong desire to grow and boost your Python skills."
      ],
      "description": "Practice and boost your Python skills with 250 multiple-choice quizzes.\nI am answering all your questions, usually in less than 24 hours.\nNo slides, no boring theory, no rambling, no chitchat. Just practice!\nAll my Python courses have received thousands of 5* reviews.\nOver 100,000 satisfied students across several e-learning platforms.\nPython Cheat Sheet and a Certificate of Completion are included.\n\n\nNote! It is strongly recommended that you have some basic-to-intermediate Python experience, or go through my Python Bootcamp: Learn, Code, Build course before attempting to solve the practice activities in this course.\n\n\nWhat others have to say about my courses?\n\"What an incredible value and learning experience!\" by Sean A.\n\"Excellent material. Kudos to a great instructor with a vast level of creativity.\" by Anthony W.\n\"The instructor is an excellent professional, skillful and engaging.\" by Georgios T.\n\"I can say this man is going on smoothly and perfectly, explaining in the most empirical way.\" by Kolapo A.\n\n\nWhy would you take this course?\nDo you want to become a better Python Developer without having to spend a lot on boring theoretical courses?\nDo you want to expand and solidify your Python skills in an organized way, with the help of 250 multiple-choice quizzes?\nDo you want to prepare for an interview and upgrade your career in a 100% hands-on fashion, with instructor support available?\n\n\nWhat's this course all about?\nYou will have to solve 250 multiple-choice quizzes ranging from beginner to advanced level and covering all the key Python concepts taught in my Python Bootcamp: Learn, Code, Build Udemy course.\nThis course contains practice activities covering the following Python concepts: strings, lists, tuples, ranges, sets, dictionaries, conditionals, loops, exceptions,  functions, file operations, regular expressions, classes and objects, comprehensions, lambda functions, among others.\nAs a bonus, you will get my Python Beginner's Cheat Sheet PDF, two videos covering 10 ways to earn money and build a portfolio using your Python skills, a certificate of completion and lifetime access to the course and any upcoming updates.\n\n\nHow is this course structured?\nSection 1: Some Initial Thoughts\nSection 2: Installing Python for Testing Your Quiz Answers\nSection 3: Download the Python Cheat Sheet\nSection 4: Solve 250 Multiple-Choice Python Quizzes\nSection 5: 10 Ways to Earn Money and Build a Portfolio with Python\nSection 6: Final Section\n\n\nImportant information before you enroll!\nDon't forget you are covered by a 30-day money back guarantee, full refund, no questions asked.\nOnce enrolled, you have unlimited, 24/7, lifetime access to the course from any device.\nYou will have instant and free access to any updates that I'm going to add to the course.\nYou will benefit from my full support regarding any question related to the course content.\n\n\nI strongly encourage you to boost your Python skills and take your job and career to the next level!\nLet's get started!\nEnroll now and I'll see you in the first lecture!",
      "target_audience": [
        "Junior/Intermediate Python developers and any kind of IT geeks who wish to take their Python programming skills to the next level.",
        "Anyone wanting to solidify their Python programming knowledge and skills using hundreds of quizzes."
      ]
    },
    {
      "title": "Java Fundamentals: Your Guide to Modern Software Development",
      "url": "https://www.udemy.com/course/java-programming-fundamentals-training/",
      "bio": "Master the core concepts of Java programming language and apply them to practical projects. Become a top Java Developer.",
      "objectives": [
        "Get end-to-end understanding of core concepts of Java",
        "Learn the core Java skills needed to apply for Java developer positions",
        "Master design principles, best practices and coding conventions for writing well-designed, professional Java code",
        "Be able to demonstrate your understanding of Java to future employers",
        "Prepare and apply for Oracle Java Certification exams (Oracle Certified Associate, Java SE 8 Programmer 1Z0-808)",
        "Understand Object Oriented Programming concepts like as classes and objects, threads, files, applets, swings, and act are essential",
        "Master OOP fundamentals and use real-world applications as case study",
        "Learn why Java is useful for the design of desktop and web applications",
        "Identify Java language components and how they work together in applications",
        "Design and program stand-alone Java applications",
        "How to design a graphical user interface (GUI) with Java Swing",
        "Learn how to extend Java classes with inheritance and dynamic binding",
        "Use exception handling in Java applications",
        "Understand how to design GUI components with the Java Swing API",
        "Learn Java generics and how to use the Java Collections API",
        "Write Programs using the Java Graphical User Interface",
        "Understand how to design applications with threads in Java",
        "Analyze event-driven programming techniques, such as generating and manipulating objects and classes, and utilizing Java for network programming and middleware",
        "Learn how to read and write files in Java",
        "Learn multi-tier applications and learn to design and develop them",
        "Analyze and identify enterprise applications",
        "Create a Java application for a distributed system",
        "Evaluate Java programming for networking ideas includes writing, compiling, executing, and troubleshooting"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Java Programming course by Uplatz.\n\n\nThis Java Programming Fundamentals course by Uplatz is for anyone who wants to learn Java from scratch, polish java skills, face java interviews and prepare for java certifications. Anyone can take this course and go from zero developments skills to being expert in OOPs and core Java.\nJava is the most popular language world wide and technologies like Servlets & JSP, J2EE, Struts, Spring, Hibernate, JMS or android for mobile applications are all based on core Java. Even Kotlin (android's new programming language) becomes easier if you know Java. Having a sound understanding of core java concepts is necessary, if you want to learn advance concepts, frameworks and android programming.\nIn this Introduction to Java Programming training course, you gain extensive hands-on experience writing, compiling, and executing Java programs. You will learn to build robust applications that use Java’s object-oriented features. Java is known for reliability, maintainability, and ease of development. Its unique architecture enables programmers to develop a single application that can seamlessly run across multiple platforms. Attend this course and learn to leverage these key features.\nThis Introduction to Java programming training course will teach you the latest Java language syntax and programming skills, allowing you to develop commercial object oriented and functional java applications.\n\n\nWhat is Java?\nJava is a concurrent, compiled, object-oriented programming language. It was created in 1995 by Sun Microsystems (now Oracle) and can be found across many websites, applications, and programs. It was modelled after C++, but intended to be simpler and easier to use.\nJava must be run on a software platform, such as the Java Platform by Oracle or the Android SDK for mobile devices. Java is commonly used in Android apps, enterprise software, financial and scientific software, big data calculations, and web applications.\nJavaScript is a high-level programming language, which is one of three core technologies of World Wide Web content production. It can be used to make web pages interactive and provide online programs, such as video games. It is widely used, and is employed by the majority of websites and is supported by all modern web browsers. As you can see, if your hoping for a career in programming or web development then this course will be extremely beneficial, and could help you get the career you want.\n\n\nWhy learn Java?\nJava is one of the most popular programming languages out there, mainly because of how versatile and compatible it is. Java can be used for a large number of things, including software development, mobile applications, and large systems development. As of 2019, 88% market share of all smartphones run on Android, the mobile operating system written in Java. Knowing Java opens a great deal of doors for you as a developer.\n\n\nWho learns Java?\nMobile app developers, web developers, and software engineers might need to know Java to create and maintain their products. Java is less intuitive and more complex than other web development languages like Python, so it’s better to start elsewhere if you’re new to programming.\n\n\nObjectives of Java Programming Fundamentals course\nDevelop an understanding on Java programming\nImplement standard SQL queries with databases\nTo be able to program with Java\nCore concepts of Java including Variables, datatypes, operators, control statements, arrays, packages, classpath, user-input and debugging\nObject Oriented Programming concepts and their application\nString, Wrapper classes, Exception handling and Enumeration in detail\nAdding appropriate comments to your code\nWriting professional Java code using Industry best practices\nBe ready to face interviews\nIn this Introduction to Java Programming training course, you gain extensive hands-on experience writing, compiling, and executing Java programs. You will learn to build robust applications that use Java’s object-oriented features. Java is known for reliability, maintainability, and ease of development. Its unique architecture enables programmers to develop a single application that can seamlessly run across multiple platforms. Attend this course and learn to leverage these key features.\n\n\nJava Programming Fundamentals course syllabus\n\n\nJava Overview\nHow the Java Environment Works\nHelloWorld Program\nLaunch Single-File Source Code\njShell REPL\nComments and Terminators\nIdentifiers\nSyntax and Types\nJava Variables\nvar declarations\nJava Types\nBasic Java Types\nReference types\nConditional Expressions\nLogical operators\nIf statement\nWhile Statement\nDo Statement\nFor statement\nSpecial flow of control operators\nSwitch statement\nNumerical Operators\nCasting\nStrings\nClasses and Objects\nWhat is an Object?\nObjects and Encapsulation\nWhat is a Class?\nClass Object Relationship\nThe Person class\nVariable types\nConstructors\nWorking with the class Person\nWorking with Methods\nMethod Definitions\nMethod Arguments & Return Types\nOverloading Methods\nMethod Invocations\nDefining methods\nConstructors Versus Methods\ntoString() method\nAdding behaviour to the class Person\nThe PersonApp program\nClass Inheritance\nInheritance in Java\nImplementing Inheritance\nRule for overriding methods\nRules for Polymorphic variables\nCasting and Inheritance\nThe super variable\nConstructors and Inheritance\nAbstract Classes, Class Side Behaviour and Final\nAbstract Classes\nAbstract Classes in Java\nDefining an Abstract Class\nExtending an Abstract Class\nUsing Concrete Subclasses\nClass Side Information\nClass Side Data\nClass Side Behaviour\nFinal Keyword\nJava Interfaces and Enumerations\nWhat is an Interface in Java?\nBasic Interface Definitions\nImplementing an Interface\nInterface\nUsing an Interface in a Contract\nInheritance by Interfaces and Types\nClasses and multiple Interfaces\nDefault Interface Methods\nStatic Interface Methods\nEnumeration Support\nImplementing Enumerated Types\nPackages\nPackages\nClass-Package Relationship\nDeclaring Packages\nPackaging the Person class\nRole of the Classpath\nJAR Files\nEncapsulation and Packages\nClass modifier\nConstructor Modifier\nVariable Modifier\nMethod Modifiers\nPackage Summary\nJava 9+ Modules\nIntroduction the JPMS\nJava Platform Module System\nWhy we need modules\nLook at what modules are\nHow to define a module\nHow to create a single module application\nHow to link modules\nArrays\nWhat is a Java Array?\nCreating arrays of Objects\nAccessing Array Elements\nMain method args array\nShort hand from\nRagged Arrays in Java\nWorking with Ragged Arrays\nImplications of Inheritance for Arrays\nInteger Array Example\nJava Generics\nGenerics and Basic Types\nGenerics and Their Types\nAdding Generics to your classes\nA simple user defined Generic class (the Bag class)\nType Equality\nGeneric Collection Assignment\nGenerics and Inheritance\nCollections Classes\nCollections API\nArrayList\nInterfaces v Concrete Classes\nHashMap\nIteration and Enumeration\nQueues\nGenerics and Collections\nFor Loops\nBoxing and Unboxing\nRaw Collections\nJava 9+ Immutable Collections\nWhy Immutability?\nImmutability\nList.of Factory method\nSet.of Factory method\nMap.of Factory method\nImmutable Collection Nodes\nJava 10 Enhancement\nError and Exception Handling\nErrors & Exceptions\nException types in Java\nPart of the Exception Hierarchy\nException Handling\nLocal Handling\nException Handling Example\nPassing the Buck\nTry with Resources\nDefining new Exceptions\nChained Exceptions\nNested / Inner Classes\nFour types of Nested / Inner Class\nProperties of Member level inner classes\nProperties of Method Inner classes\nAnonymous Method Inner classes\nJava 11 Nest-based Access\nJava Functions\nFunctional Programming\nFunctional Programming in Java\nFunctional Interfaces\nUsing Functional Interfaces\nLambdas in Java\nClosing / Capturing Variables\nReturning Functions\nCombining Functions\nHigher Order Functions\nDefining Lambdas\nMethod References\nJava Optional Type\nNull considered Harmful\nJava Optional Type\nOptional Variables\nCreating Optional values\nMethod Summary\nJava 9 Streams\nStreams\nStreams from Collections\nTerminal / Non Terminal Operators\nCreating a Stream\nMap Operation\nCollectors\nFilter operation\nSorted operation\nForEach\nPipelining Operations\nParallel Streams\nNot just collections\nFiles, Paths and IO Streams\nIntroducing NIO.2\nPaths class and Path Interface\nThe Files class\nFile Attributes\nThe File Watcher Service\nIO Streams\nScanners\n\n\nBy the end of this course, you will have:\nLearnt about Java class and Objects\nExplored defining methods and properties\nExamined Class Inheritance\nUnderstood Java Interfaces and Enumerations\nConsidered how to use Packages and Modules\nLearnt about Functional Programming in Java\nUnderstood how to handle Errors and Exceptions\nWorked with Files, paths and Stream IO\nUsed the new Streams API for processing data\nExplored the Collection classes\n\n\nWhat version of Java should you learn?\n\nGenerally speaking you would want to learn the very latest version of a computer programming language, but thats not necessarily the case with Java.\nUntil recently Java releases were infrequent (one major release in 3 years was common). Companies standardised on specific versions of Java. Right now most companies are still focused on Java 8, which is a relatively old version, dating back to 2015.\nOracle (the owners of Java) are now releasing new versions of Java every six months, and when the new version comes out the old version is no longer supported.\nBut to cater for most companies who tend to stick to specific versions of Java for a long time, they have marked the current version of Java - Java 11 as LTS - or Long Term support. That means that they guarantee to support this version for the long term - for a number of years at least.\nCompanies will stick to versions of Java that are supported in the long term. For career purposes you should learn the appropriate versions of Java that your future employer will likely be using. Right now thats Java 8 and Java 11 (Java 9 and Java 10 have been released and already been marked obsolete and are no longer supported).\n\n\nJob Prospects\nAccording to PayScale, the average salary for a Java developer is $69,722 per year, with an average salary range of $47,169 to $106,610 per year. The highest-paid Java developers are in San Francisco and Arlington, where the average reported yearly salaries are $97,000 per year.",
      "target_audience": [
        "Software Developers & Programmers",
        "Newbies and Beginners aspiring to become Java Web/App Developers",
        "Senior Java Developers Full stack, Spring Boot, Angular",
        "Full Stack Web Developers",
        "Front End Engineers & Front End Web Developers",
        "Application Developers & Programmers",
        "Java Developers - Artificial Intelligence",
        "Tech Leads & Architects",
        "Data Engineers & Data Scientists"
      ]
    },
    {
      "title": "Java for Beginners: Your Quick Guide to Java Programming",
      "url": "https://www.udemy.com/course/java-programming-for-beginners-online-course/",
      "bio": "You can learn Java Programming Quickly & Easily with this Java for Beginners Course. Start Your Java Career Here!",
      "objectives": [
        "You will learn important Java skills necessary to start your career in development",
        "Become a Java developer - one of the hottest skills in the modern world",
        "Learn the core foundation skills to progress on afterwards to study and pass your Java Certificate exam",
        "Learn the most popular programming language, great for building applications, software development, web development, web applications + more",
        "Learn Java to work in industries such as cloud, artificial intelligence, big data, the internet of things, and more,"
      ],
      "course_content": {},
      "requirements": [
        "NO programming experience is needed",
        "All you need is a desire to learn Java",
        "Everything you need to run & practice with Java is explained in the course"
      ],
      "description": "If you want to learn Java, and are an absolute beginner looking for a great course for someone with zero experience, this is the perfect Java course for you.\nWhy learn Java?\nJava is one of the most popular programming languages. Knowing Java will give you a highly desired skill, perfect for a long term career with a great salary. Java is used for software development, mobile and web applications, cloud and big data projects, the internet of things, artificial intelligence, and much more!\nBy learning Java, you can get the job of your dream!\nWhy take this Java for Beginners course?\nWe know there are countless Java courses out there. Many of them are packed with 'extra' hours of content that aren't necessary for your education. With this Java for Beginners course, we stick to the most important skills so that you can learn Java quickly and efficiently.\nYour lead instructor is Matt Speake, an incredible online Java teacher who breaks down Java to make it easy for anyone to understand. Matt will be there when you get stuck to answer your questions.\nWe believe this is the only & the best first Java course for you to take.\nWhat do you get when you enroll in this Java for Beginners course?\nEasy-to-watch video tutorials\nReal world project files to practice along with\nPremium instructor support\nCertificate of completion\nLifetime access to course updates\nWhat will you learn in this Java for Beginners course?\nHere are several of the core components of this Java course.\nLearn the basics of programming\nLearn the tools you need to program with Java\nLearn how to set up your Java programming environment\nLearn how to start a new project\nLearn variables & types of data\nLearn expressions & strings\nLearn conditionals & loops\nLearn methods, classes & objects\nLearn exceptions & collections\nDon't worry, if you don't understand what these terms mean, you'll understand everything from the course!\nLearn Java... Easily.\nWe're so excited to teach you Java, and help you on your journey to becoming a programmer.\nSee you in class!",
      "target_audience": [
        "Anyone who wants to become a Java developer",
        "Anyone interested in computer programming, with no experience",
        "Absolute beginners with no programming experience"
      ]
    },
    {
      "title": "Learn Bash Shell in Linux for Beginners",
      "url": "https://www.udemy.com/course/learn-bash-shell-in-linux-for-beginners/",
      "bio": "This course teaches beginning Linux shell scripting in the Bash shell",
      "objectives": [
        "Learn Using Scripts to Automate Tasks",
        "Control the Execution of the Script"
      ],
      "course_content": {},
      "requirements": [
        "Any Linux Based Operating System",
        "Knowledge of any Command Line is Helpful, but Not Necessary"
      ],
      "description": "This course teaches beginning Linux shell scripting in the Bash shell. The emphasis in the course is on the scripting language itself: using scripts to automate common tasks, and the logic within the language used to control the execution of the script.\nThe course is in two units, and contains over an hour of demos and discussion. This is the second part of the Linux course series from EDUMobile Academy.\n\n\nIn the first unit of the course, we’ll explore the shell environment itself, and cover such topics as:\n\n- a simple hello world script\n- making scripts executable\n- why we run a script with a ./ and how to remove it\n- running a script to act upon the currently running shell\n- variables and how to use them\n- the .bashrc file\n\nThe second unit covers scripting commands, particularly control flow. Topics include:\n\n- exit status of shell commands\n- the if statement and tests\n- handling command line arguments\n- random numbers\n- loops (while, until, and for)\n- the case statement\n\nI hope you join me for this beginner’s guide to the bash scripting language!",
      "target_audience": [
        "Any Fresher Who Wants to Learn Basic Linux Shell Scripting in Bash Shell",
        "Expert who Needs to Brush up Basic Bash Shell Skills"
      ]
    },
    {
      "title": "Building a Parser from scratch",
      "url": "https://www.udemy.com/course/parser-from-scratch/",
      "bio": "Recursive descent parser for a programming language",
      "objectives": [
        "Recursive descent parsers",
        "Build a parser for a full programming language",
        "Top-down parsing",
        "Abstract Syntax Trees (AST)",
        "Different AST formats",
        "Left-recursion",
        "Tokenizer and Tokens",
        "Regular Expressions spec"
      ],
      "course_content": {
        "Basic expressions and Tokenizer": [
          "Tokenizer | Parser",
          "Numbers | Strings",
          "From State Machines to Regular Expressions"
        ],
        "Program structure": [
          "Statements and Statement list",
          "Blocks: nested scopes",
          "Different AST formats",
          "Binary Expressions"
        ],
        "Control flow and Functions": [
          "Assignment Expression",
          "Variable Statement",
          "If-Statement",
          "Equality | Logical",
          "Unary Expression",
          "Iteration Statement",
          "Function Declaration"
        ],
        "Object-oriented programming": [
          "Member Expression",
          "Call Expression",
          "OOP | Classes",
          "Final Executable"
        ]
      },
      "requirements": [
        "Basic data structures and algorithms"
      ],
      "description": "Parsing or syntactic analysis is one of the first stages in designing and implementing a compiler. A well-designed syntax of your programming language is a big motivation why users would prefer and choose exactly your language.\nNote: this is a practical class on building a manual Recursive-descent parser. If you’re interested in parsing theory and automated algorithms you may also consider the [ Parsing Algorithms ] class.\nRecursive descent parsers are the group of parsers which are widely used on practice in many production programming languages. In contrast with automated parsing algorithms, the manual implementation allows having full control over the parsing process, and handling complex constructs, which may not be possible in the automatic parsers.\nBesides, implementing a full manual parser from scratch allows understanding and seeing this process from inside, demystifying internal structures, and turning building parsers into an interesting engineering task.\nIn the Building a Parser from scratch class we dive into pure practical implementation, building and learning different aspects of parsers.\nIn this class you will learn concept of Recursive descent parsing, understand what is Tokenizer and how it cooperates with Parser module, learn what is Abstract Syntax Tree (AST), and how to have different formats of these ASTs, what is “lookahead” and the predictive parsing, and eventually build a parser for a full programming language, similar to Java or JavaScript.\nImplementing a parser would also make your practical usage of other programming languages more professional.\nWho this class is for?\nThis class is for any curious engineer, who would like to gain skills of building complex systems (and building a parser for a programing language is a pretty advanced engineering task!), and obtain a transferable knowledge for building such systems.\nIf you are interested specifically in compilers, interpreters, and source code transformation tools, then this class is also for you.\nThe pre-requisites for this class are the basic data structures and algorithms: trees, lists, traversal, and regular expressions.\nWhat is used for implementation?\nSince we build a language very similar in syntax to JavaScript or Java we use specifically JavaScript — its elegant multi-paradigm structure which combines functional programming, class-based, and prototype-based OOP fits ideal for that.\nMany engineers are familiar with JavaScript so it should be easier to start coding right away. However we do not use very JS-specific constructs, so the implementation of the parser can easily be transferred to any other language of your choice.\nNote: we want our students to actually follow, understand and implement every detail of the parser themselves, instead of just copy-pasting from final solution. The full source code for the language is available in video lectures, showing and guiding how to structure specific modules.\nWhat's specific in this class?\nThe main features of these lectures are:\nConcise and straight to the point. Each lecture is self-sufficient, concise, and describes information directly related to the topic, not distracting on unrelated materials or talks.\nAnimated presentation combined with live-editing notes. This makes understanding of the topics easier, and shows how (and when at time) the object structures are connected. Static slides simply don’t work for a complex content.\nLive coding session end-to-end with assignments. The full source code, starting from scratch, and up to the very end is presented in video lectures of the class\nWhat is in the course?\nThe course is divided into four parts, in total of 18 lectures, and many sub-topics in each lecture. Below is the table of contents and curriculum.\nPart 1: Basic expressions and Tokenizer\nIn this part we describe basic expressions, such as Numbers and Strings, and also build the Tokenizer modules, operating with regular expressions.\nPart 2: Program structure\nIn this part we talk about program structures, such as statements and statement lists, blocks and recursive production rules. In addition we discuss different AST formats and start building more complex expressions.\nPart 3: Control flow and Functions\nIn this part we implement variables, assignment, work with operator precedence, and introduce function abstraction. In addition we define control structures such as If-statement and iteration loops.\nPart 4: Object-oriented programming\nThe final part of the course we implement classes and objects, talk about property and array access. In addition we implement generic function and method calls, and build the final parser executable.",
      "target_audience": [
        "Any curious engineers"
      ]
    },
    {
      "title": "Learn Java Programming - Beginners guide",
      "url": "https://www.udemy.com/course/learn-java-programming-from-beginner-to-pro-2020/",
      "bio": "Learn Java And Become a Java Programmer. Learn Core OOP Java fundamentals",
      "objectives": [
        "Learn the core Java skills needed to build real-life applications",
        "Acquire essential java basics for transitioning to the Spring and Springboot Framework",
        "Be able to build applications that connect to a MySQL Database",
        "Learn to develop state of the art Web Services",
        "Java Basics",
        "Learn to develop Desktop Applications for both Linux, Windows and Mac OS."
      ],
      "course_content": {
        "Java Basics": [
          "Introduction",
          "Java environment Setup",
          "Primitive Types - Theory",
          "Primitive Types",
          "The 8 Primitive Types",
          "Conditional Statements",
          "For Loop",
          "While Loop",
          "Functions",
          "Classes",
          "Say Hello"
        ],
        "Java Collection Framework": [
          "List Interface",
          "Set Interface",
          "SortedSet Interface",
          "Queue Interface"
        ],
        "Java FX (Desktop Applications)": [
          "Java FX Intro",
          "Adding buttons",
          "Button Event Handler",
          "Adding Label and TextField",
          "Adding Username and password fields",
          "Changing position of text Fields",
          "Java FX CSS styling",
          "Java Desktop Application Project"
        ],
        "Spring & SpringBoot Introduction": [
          "Spring vs SpringBoot",
          "How to create a SpringBoot project",
          "Dependency Injection"
        ],
        "Java and MySQL": [
          "Java DB Intro",
          "Setting up SpringBoot project",
          "MySQL Workbench",
          "Download MySQL Workbench and XAMPP",
          "MySQL Connection",
          "Creating Schema and table",
          "Connect MySQL and Java Project",
          "Fetching data part 1",
          "Fetching Data part 2",
          "Saving a User to DB",
          "Save a single user"
        ],
        "Java FXML": [
          "Intro to FXML",
          "Combine FXML and MySQL Project",
          "Button and Controller",
          "Reading User input part 1",
          "Rading User input part 2",
          "Adding User TableView",
          "Fetching Users",
          "Add CSS styling to FXML",
          "Add Styling to your FXML Application"
        ],
        "Java Web Service & API": [
          "Java Web Service & API Intro",
          "Setting up SpringBoot project",
          "A simple GET request",
          "Make a GET request",
          "Add Parameter",
          "Postman",
          "Request Data from a Database",
          "Add a Web Service to your User Application",
          "Fetching Users through Postman - Assignment Solution",
          "Securing our WS with Basic Authentication"
        ]
      },
      "requirements": [
        "no prior knowledge"
      ],
      "description": "\"Learn Java Programming - Beginners Guide\" is a comprehensive course designed for individuals who are new to programming and want to learn Java from scratch. This course is suitable for beginners as well as experienced programmers who want to refresh their Java skills.\nThe course starts with an introduction to programming and Java basics. You'll learn how to set up your development environment, including installing Java and an Integrated Development Environment (IDE). You'll also learn how to write your first Java program, including variables, data types, and control structures.\nNext, you'll dive into more advanced topics such as object-oriented programming (OOP), including classes, objects, inheritance, and polymorphism. You'll also learn how to use Java's built-in libraries and how to handle errors and exceptions.\nAfter mastering the basics, you'll learn how to use various tools to test and debug your Java code, including the Intellij IDE and JUnit testing framework. You'll also learn how to use Git for version control and collaborate with other developers.\nThroughout the course, you'll work on practical, real-world projects that will help you apply your newfound knowledge and skills. These projects include building a simple calculator, a tic-tac-toe game, and a basic web application using Java Servlets and JSP.\nBy the end of the course, you'll have a deep understanding of Java programming concepts, as well as the tools and techniques you need to build effective Java programs. Whether you're a student, a software developer, or someone who wants to learn programming as a hobby, this course will provide you with the skills you need to excel in your career.\n\n\nWhat to expect from this course?\nLearn the core Java skills needed to build real-life applications\nAcquire essential java basics for transitioning to the Spring and Springboot Framework\nBe able to build applications that connect to a MySQL Database\nLearn to develop state of the art Web Services\nJava Basics\nLearn to develop Desktop Applications for both Linux, Windows and Mac OS.",
      "target_audience": [
        "Beginner Java Developers",
        "Full-stack Developers",
        "Backend Developers",
        "Software engineers",
        "Computer Science Students",
        "Software Students"
      ]
    },
    {
      "title": "Linux Bash Scripting",
      "url": "https://www.udemy.com/course/linux-bash-scripting/",
      "bio": "Start with Bash scripting and Automate Tasks",
      "objectives": [
        "Linux users that want to start Bash scripting",
        "Any Linux user"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "First Script",
          "Keyboard Input",
          "Shell Menu",
          "For Loop",
          "If Statements",
          "Lists",
          "Strings",
          "Functions",
          "Files",
          "Save Command Output to File",
          "Stdout Tricks"
        ]
      },
      "requirements": [
        "No prequisities, except access to a Linux computer"
      ],
      "description": "This course is an introduction to Bash scripting.\nYou will learn the beginners concepts and be able to make your own bash scripts. This will make your life easier, as you won't have to type each command manually but instead run scripts. We'll go over file scripts, loops, if statements and many other scripting concepts.\n\n\nWhy Linux Bash Scripting?\nBash scripting is a very powerful tool in the hands of a Linux administrator. It is capable of doing everything similar to Windows batch file, but with more ease. Many system administrators are not familiar with Linux Bash scripting and thus do not find it useful. It is my opinion that any Linux sysadmin worth his or her salt, should learn how to use Bash scripting as soon as possible in order to automate their daily tasks.\nThere are a few reasons why Linux Bash scripting is so powerful. One reason is that it is very easy to use. Unlike Windows batch files, which can be quite complex and difficult to understand, Bash scripts are much simpler and easier to read. This makes them perfect for automating tasks that would otherwise be tedious and time-consuming.\n\nAnother reason why Linux Bash scripting is so useful is because it is extremely versatile. It can be used for a wide range of tasks, from simple file management to complex system administration. In addition, Bash scripts can be easily modified and customized to meet the specific needs of any user or organization.\n\nFinally, Linux Bash scripting is very popular among experienced Linux users and administrators. This popularity means that there is a large community of users who are familiar with the script and who can offer support and advice when needed.",
      "target_audience": [
        "Beginner Linux users",
        "System administrators"
      ]
    },
    {
      "title": "C Programming For Beginners - with 60 BONUS Simple Programs!",
      "url": "https://www.udemy.com/course/c-programming-language-tutorial-from-baby-steps-to-hardcore-programmer/",
      "bio": "Learn the C Programming language FAST - onscreen step by step, then IDE, then debugger. Designed for TECHNICAL INTERVIEW",
      "objectives": [
        "Understand C Programming Language with a SOLID foundation - By the end of this course, you will actually be able to write simple C Programs.",
        "LEARN and PRACTICE - 60+ (SIXTY) complete, simple, beginner-friendly C Programs HANDS-ON",
        "Learn how to design code by hand, then in the IDE - and THEN with a debugger when necessary",
        "Read and understand other code libraries and code projects in C language",
        "Comprehend the foundational features of C: Data Types, Operators, Input-Output, Conditionals, Looping, Arrays etc",
        "Self Test your understanding with Quizzes, Assignments, Q&A Forum and discussion boards",
        "NO OTHER COURSE gives 60+ simple, fully self contained, programs for you to practice"
      ],
      "course_content": {
        "Introduction to C language": [
          "WELCOME to our C Programming Course",
          "THEORY: History & Structure of C Programming Language",
          "Form of a C Program",
          "Quiz: Form of a C Program",
          "THEORY: The Form of a C Program",
          "Form of a C Program - With an example",
          "THEORY: Compiling a C Program",
          "Compiling, linking and running C program",
          "Types of errors"
        ],
        "BONUS: Get a FREE fantastic IDE (Integrated Development Environment) here!": [
          "How to: Download and Install your FREE IDE from here",
          "How to: Watch this course in HD"
        ],
        "Basic elements of C program": [
          "Introduction to Basic elements of C Language",
          "THEORY: The Basic Elements of C Programming",
          "Variables",
          "Categories of Variables",
          "Constants",
          "Identifiers and Rules of Identifiers",
          "Data Types Introduction",
          "Integer DataType",
          "Float and Double",
          "Character DataType",
          "Type casting"
        ],
        "Operators": [
          "Introduction to Operators",
          "Arithmetic Operators",
          "Relational Operators",
          "Logical Operators",
          "Conditional Operators",
          "Assignment Operators",
          "Increment Decrement Operators",
          "Bitwise Operators"
        ],
        "Input Output Statements": [
          "Reference Material: ASCII TABLE - downloadable",
          "Introduction to Input Output statements",
          "The printf Statement",
          "printf Statement Formats",
          "printf Program - Hello World",
          "printf Program - Sum of Two integers",
          "printf Program - Area of circle by r",
          "Printf Program - Largest of two assigned values",
          "printf Program - Area of a Rectangle",
          "The Scanf Statement",
          "scanf Program - Sum of two input numbers"
        ],
        "Conditional Statements": [
          "Introduction to Conditional Statements",
          "The IF Statement",
          "'if' statement program - Largest of two numbers",
          "if..else Statement and Program to check if number Even or Odd",
          "if Statement Program - Positive Negative or Zero numbers",
          "if Statement Program - Largest of 3 numbers",
          "if Statement Program - Number even or odd",
          "if..else Program - Largest of 2 numbers",
          "if..else Program - Given year is a Leap year or not",
          "if..else Program - Check Variable is Integer or Float",
          "if..else Program: Check Upppercase Lowercase",
          "if..else Program: If character is Alphabet"
        ],
        "Loop Statements": [
          "Introduction to loops",
          "The While Statement",
          "While Program - Display 5 to 1 in reverse order",
          "While Program - Display 1st 10 Even Numbers",
          "While Program- Display 1st ten Odd Numbers",
          "While program - Sum of 1st Five Natural Numbers",
          "While Program - Sum of Arithmetic Series",
          "While Program - Reverse Digits of Given Number",
          "The Do..While Statement",
          "Do..While Program - Factorial of N",
          "Do..While Program - Arithmetical Operation of User Choice",
          "The for Statement",
          "While Program - Sum of Digits of Given Number",
          "Do..While Program - Check Number is Palindrome",
          "Do..While Program - Sum of Arithmetic Series",
          "Do..While Program - 2nd Example - Sum of Arithmetic Series",
          "The for Statement - Syntax Continued - Multiple Initializations - with Program",
          "for statement - Program to Display 1st ten Odd Numbers",
          "for statement Program to Find Factorial of N",
          "for statement Program to Find Sum of Digits",
          "For statement Program: to Find Sum of Arithmetic Series",
          "For statement Program to Find Sum of Arithmetic Series - 2nd Program ver 2",
          "For statement Program: To Check for Prime Number",
          "Nested Loops - for Statement Program",
          "Nested Loops - An Example Program"
        ],
        "Arrays": [
          "Introduction to arrays",
          "Declaring Arrays",
          "Initializing Arrays",
          "Storing and accessing Array Elements",
          "Single Dimensional Arrays - Program to read and display 10 numbers",
          "Two Dimensional Arrays",
          "Storing and Accessing fromTwo Dimensional Arrays",
          "Multi-Dimensional Arrays - Program to read and display MxN array"
        ],
        "Strings": [
          "Introduction to Strings",
          "How to assign, read and display Strings",
          "Reading String data",
          "Reading String data - Continued - Other techniques",
          "Three ways of Displaying String data",
          "Assigning, Reading and Displaying - in program code - Part 1",
          "Assigning, Reading and Displaying - in program code - Part 2 - Further Technique",
          "String program 1 - Find Length of given String",
          "String program 2 - Copy given string",
          "String program 3 - Concatenate given strings",
          "String program 3 - Concatenate given strings - Lesson Continued - Further techni",
          "String program 4 - Compare given strings"
        ],
        "Pointers": [
          "Introduction to Pointers",
          "Introduction to pointers - continued - Declarations and code samples",
          "Pointer Datatype",
          "Pointer Operators",
          "Pointers Program - Sum of two numbers",
          "Relation between Arrays and Pointers",
          "Relation between Arrays and pointers - Advanced Techniques"
        ]
      },
      "requirements": [
        "Nothing - we use the Code::Blocks development environment - which is distributed in this course for Windows environment. Linux users can download from the link provided."
      ],
      "description": "This course is the FIRST, ONLY, and most comprehensive C PROGRAMMING BEGINNER'S course that brings the THREE ASPECTS TOGETHER - 1) On screen step-by-step explanation 2) Building programs in IDE and 3) hands-on exercises stepped through debugger. NO OTHER book, tutorial or course offers these unique set, anywhere on the internet.\nBefore you read further, see what students are saying about this course:\n\"Nice content , clear explanation and step by step videos. This course is form scratch to advance and I very enjoyed this course and learned a lot . This is an amazing course of C Programming and play an important role to the foundation of other programming course. I recommend to everyone to join this course.\" - Waseem Rauf\nWhy is this C Programming course THE BEST? Our numbers speak for itself:\nThe same C Programming course taught in classrooms over 18 years and 10000+ engineering students in India\nYou will feel you are learning face-to-face from an expert and friendly mentor.\nWe are HANDS-ON: more than 60 actual programs solved step-by-step - nobody else teaches like us, guaranteed.\nSee how programs are created step-by-step on screen, through the IDE and through the debugger\nSTRONG FOUNDATION into the core concepts of the C Programming Language\n\n\n\"Having seen great many tutorials on the net - this course is easily #1. The teaching style is amazing - with writing on the screen - much better than KhanAcademy. Through every concept the inner working is explained - which is the core of the matter for C language.\"\n\n\"Special mention throughout the course - explanation of the memory constructs for every C concept.\"\n\"I would like to give 11 out of 10 - as this course has exceeded my expectations!! Thanks Udemy\"\n------------\nCOURSE UPDATE 01-NOV-2017:\n\n12 NEW Programming lessons added ~2 hours added to the course! You will keep getting additional value from this course.\nFantastic free downloadable IDE added in a new Section\nDownloadable ASCII Table added\n2500+ students joined in 1 year\nWhy you should learn C Programming language?\nC programming is Present Everywhere – on every computing platform imaginable - from supercomputers to mobile and handheld devices\nSyntax and Semantics - C programming syntax is the root for every serious language – including C++, C#, Java, PHP, JavaScript, Objective C, ASPdotnet etc\nC programming language is the most popular language in the world today\nC programming is the Lingua Franca – default language of Universities worldwide, Open source\nWhat you will get from our C programming course:\n117 video lessons - short and topic specific\n60+ actual programs solved step-by-step, then in code and then again in the debugger - so you will see the program in run time!!\n12+ hours of instruction - you will feel you are learning from a gentle expert - who teaches from the very basics\nA world class COMPLETE coding environment for you to download and use is included - we use the same in our lessons (Windows version is included, you can download other versions very easily)\nPre-requisites:\nNo specific requirements! We teach from the very early basics - you do not need to know any previous programming language. THIS is very your journey to programming knowledge begins :-) We even include a complete coding environment for Windows, that you can freely download and use from our course.\nWho is this course for?\nStudents with or without C programming in their curriculum\nNewbies starting out in C programming\nSelf taught coders - who want to relearn C Programming in a systematic manner\nExperienced coders of other web languages - who want to learn what the greatness of C programming is all about\nAnyone who wants to lay a SOLID foundation in C Programming to their long and fruitful programming careers\n---------\nImportant information before you enroll:\nIn case you find the course useless for your career, don't forget you are covered by a 30 day money back guarantee, full refund, no questions asked!\nOnce enrolled, you have unlimited, lifetime access to the course!\nYou will have instant and free access to any updates I'll add to the course.\nCheck out the curriculum and the FREE lectures for a course preview\n\"Excellent course. A well-chosen level of information: from the basic (but not obvious) to advanced (but without a huge amount of details, which are not possibly to remember). Very good way of communication. No inconveniences often encountered in other courses like the useless movements of the mouse, clicking on everything what’s possible, repeating sentences several times etc...Thank you very much.\"\nDON'T WAIT - ENROLL INTO THIS COURSE NOW - JOIN OVER 10000+ LEARNERS WHO HAVE TAKEN OUR COURSES",
      "target_audience": [
        "Students with or without C in their curriculum",
        "Newbies starting out in programming",
        "Self taught coders - who want to relearn in a systematic manner",
        "Experienced coders of other web languages - who want to learn what the greatness of C is all about",
        "Anyone who wants to lay a SOLID foundation to their long and fruitful programming careers",
        "If you are an experienced programmer in C/C++/Java/C# etc., - this course is NOT for you - as it will cover many aspects of which you will be aware of already"
      ]
    },
    {
      "title": "Python: The Complete Guide for Software Testers",
      "url": "https://www.udemy.com/course/python-for-testers/",
      "bio": "Master Python for Testing: Automate Tests, Handle Exceptions, Explore OOP, and Dive into Python Libraries",
      "objectives": [
        "Master the basics and advanced concepts of Python programming.",
        "Gain a deep understanding of Python's data types, structures, and control structures.",
        "Learn Object-Oriented Programming (OOP) in Python and apply OOP concepts like inheritance, encapsulation, and polymorphism.",
        "Acquire skills for software testing in Python, including unit testing with PyTest, and handling exceptions & errors."
      ],
      "course_content": {
        "Course Overview": [
          "Introduction & Scope of the Python for testers Course",
          "Accessing Course Materials: Source Code Downloads",
          "How to Get the Most Out of This Course: Important Tips"
        ],
        "Python Basics": [
          "A Brief Introduction to Python Programming",
          "Installing Python: A Step-by-step Guide",
          "Your First Python Program: \"Hello, World!\"",
          "Choosing and Setting up Your IDE",
          "Diving Deeper into PyCharm",
          "Quiz for Section 2: Python Basics"
        ],
        "Exploring Python's Data Types & Structures": [
          "Launching Your First Python Project",
          "Understanding Python Syntax: The Basics",
          "Working with Python Variables",
          "Python's Data Types: An Overview",
          "Numeric Data Types in Python",
          "Handling Strings in Python",
          "Understanding Python's Lists and Tuples",
          "Working with Dictionaries in Python",
          "Python Sets: A Comprehensive Guide",
          "Booleans in Python: A Complete Guide",
          "Quiz for Section 3: Exploring Python's Data Types & Structures"
        ],
        "Mastering Python Operators & Control Structures": [
          "Python Operators: An In-depth Study",
          "Python's Control Structures: The Basics",
          "Using Conditional Statements in Python",
          "Homework: Practicing Conditional Statements",
          "Loop Structures in Python: A Detailed Overview",
          "Control Statements within Loops",
          "Homework: Practice Your Loop Knowledge",
          "Quiz for Section 4: Mastering Python Operators & Control Structures"
        ],
        "Functions and Scope in Python": [
          "Introduction to Python Functions",
          "How to Pass Arguments to Python Functions",
          "Returning Values from Functions in Python",
          "Homework: Enhance Your Function Skills",
          "Understanding Variable Scopes and Lifetime in Python",
          "Documenting Python Functions & Best Practices",
          "Section 5 Quiz: Functions and Scope in Python"
        ],
        "Diving into Object-Oriented Programming with Python": [
          "A Primer on Object-Oriented Programming",
          "Creating Classes & Objects in Python: A How-to Guide",
          "Exploring Class Attributes & Methods in Python",
          "Python Constructors & Their Role in Initialization",
          "Mastering Inheritance in Python",
          "Hands-on: Practice Inheritance in Python",
          "Understanding Encapsulation in Python",
          "Hands-on: Practice Encapsulation in Python",
          "Exploring Polymorphism in Python",
          "Hands-on: Practice Polymorphism in Python",
          "Practical Examples: Python OOP in Action",
          "Homework: Enhancing Your OOP Skills",
          "Section 6: Diving into Object-Oriented Programming with Python Quiz"
        ],
        "Advanced Python Concepts for QA Engineers": [
          "Exceptions & Error Handling in Python",
          "File Input/Output: Handling Files in Python",
          "Python Iterators: Mastering Iteration in Python",
          "Working with Dates in Python",
          "Using Built-in Math Functions in Python",
          "Quiz for Section 7: Advanced Python Concepts for QA Engineers"
        ],
        "Leveraging Python Packages & Libraries": [
          "Installing Python Packages with PIP",
          "Managing Dependencies with requirements.txt",
          "Understanding & Using Virtual Environments",
          "How to Create a Virtual Environment in Python",
          "Discovering Python's Rich Library Ecosystem",
          "Section 8: Leveraging Python Packages & Libraries Quiz"
        ],
        "Software Testing with Python": [
          "Introduction to Software Testing in Python",
          "Unit Testing with PyTest: A Comprehensive Guide",
          "Your First PyTest: A Hands-on Approach",
          "Homework: Practice Your Testing Skills",
          "Advanced PyTest Features: Enhancing Your Testing Abilities",
          "Bonus Lecture",
          "Quiz for Section 9: Software Testing with Python"
        ]
      },
      "requirements": [
        "Basic knowledge of software testing concepts. No prior programming experience needed, as the course starts with Python basics."
      ],
      "description": "Welcome to the \"Python: The Complete Guide for Software Testers\" course. This comprehensive course is specifically designed to guide you on a journey from manual to automated testing, using Python, one of the leading languages in the test automation landscape. By the end of this course, you'll not only have mastered Python and its application in test automation but you'll also be positioned to enhance your career in the booming field of software testing.\n\n\nWhat You'll Achieve in this Course:\n- Master Python from scratch, a powerful and user-friendly language for test automation\n- Learn the principles of Object-Oriented Programming (OOP) and how to apply them in Python\n- Gain proficiency in Python packages and libraries, setting up virtual environments, and managing dependencies\n- Become adept in software testing with Python and the PyTest framework\n\n\nWho Should Enroll in this Course?\nAre you a software tester looking to transition from manual to automated testing? Do you aspire to boost your income and marketability in the tech industry? If so, this course is tailored for you. Even if you've never programmed before, you'll find this course engaging, as it's designed to take you from Python novice to proficient in Python.\n\n\nWhat Makes this Course Unique?\nOur Python for Testers course stands out because it delivers more than just Python knowledge; it enables you to utilize Python in real-life software testing scenarios. This course's focus is on how Python can be harnessed in test automation, giving you practical skills to automate software tests and manage test failures and exceptions. Our dedication to your success in the field of software testing is evident in the course's design and structure.\n\n\nWhat's Included in this Course?\n- Comprehensive coverage of basic to advanced Python concepts\n- A deep dive into software testing principles with Python and PyTest framework\n- Engaging content, delivered via easy-to-follow video lessons\n- Premium support from the course instructor\n- Lifetime access to course updates\n\n\nYour Success is Our Goal\nWe're committed to your satisfaction and success. If, for any reason, you're not satisfied with this course, we offer a 30-day money-back guarantee, in accordance with Udemy's Terms of Use. We're continually updating our course content to keep it relevant, and your questions will always be answered promptly.\n\n\nEmbark on your journey in Python test automation today with \"Python: The Complete Guide for Software Testers\". Your future in software testing starts here.",
      "target_audience": [
        "Software testers looking to enhance their testing abilities with Python, as well as beginners interested in software testing and Python."
      ]
    },
    {
      "title": "Java And C++ Complete Course for Java And C++ Beginners",
      "url": "https://www.udemy.com/course/java-and-c-complete-course-for-beginners-2022/",
      "bio": "Java and C++ Programming Language in Java and C++ Complete Course for Beginners, C++ And Java All In One Course",
      "objectives": [
        "You will learn how to write a complete Java program that takes user input, processes and outputs the results",
        "You will learn OOPS concepts in Java",
        "You will learn java concepts such as console output, Java Variables and Data Types, Java Operators And more",
        "You will be able to use Java for Selenium in testing and development",
        "You will learn C++ concepts such as console output, C++ Variables and Data Types, C++ Operators And more",
        "You will learn how to write a complete C++ program that takes user input, processes and outputs the results",
        "You will learn common programming constructs as they are implemented in C++ including C++ 11. Topics include the use of C++ for memory management, file input/o",
        "You will learn about references, exceptions, and object-oriented programming C++"
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Computers",
        "No prior knowledge of Java and C++, things will be covered in this course"
      ],
      "description": "Why Learn Java?\nJava is a general-purpose, versatile and popular programming language. It's great as a first language because it is concise and easy to read, and it is also a good language to have in any programmer's stack as it can be used for everything from web development to software development and scientific applications.\nTake-Away Skills:\nThis course is a great introduction to both fundamental programming concepts and the Java programming language. By the end, you'll be comfortable programming in Core Java.\nThis Course is the first of a series of courses that make up the Core Java Specialization. The Core Java Specialization, in turn, is part of a series of programming specializations and designed to provide the skill set necessary to be hired as an IT developer using Java in many corporate environments. This course includes hands-on practice and will give you a solid knowledge of the Java language. After completing this course, you will be able to identify Java’s benefits, program in basic Java syntax using Java data types, and incorporate branches and loops. The audience for this course: - Anyone interested in learning Java - Programmers - Technical Managers - Application Developers\nTopics Covered:\nModule-1: Java Fundamentals\nBasic Java Program\nCompile and run a Java program\nUnderstanding console output\nJava Variables and Data Types\nJava Operators\nConditional statements\nLoops\nBreak and continue\nArrays\nSingle Dimensional array\nDouble Dimensional array\nString Class\nString methods\nModule-2: Java OOPS Concepts\nClasses and Objects\nJava methods\nPassing parameters to the methods\nCall by value and call by reference\nJava Constructor\nMethod Overloading\nConstructor Overloading\nthis keyword\nStatic variables and methods\nJava Inheritance\nMethod Overriding\nsuper keyword\nfinal keyword\nJava Interfaces\nJava Packages\nAccess Modifiers\nException Handling\nArray List\nHash Map\nJDBC\n\nC++ Complete Training Course 2022\nThis course will help you learn C++ basics and give you hands-on experience to create your own projects and work with computer memory. With its adaptability and fast rendering, you’ll find the C++ programming language used everywhere, from web browsers to game development and operating systems to science and machine learning tools.\nThis C++ Programming Course is designed to meet the industry benchmarks. This C++ programming course will give you extensive knowledge of Object-Oriented Programming in C++, Coding Styles and Design Patterns, Generic Programming and Standard Template Library.\nThe course examines common programming constructs as they are implemented in C++ including C++ 11. Topics include the use of C++ for memory management, file input/output (I/O), pointers, references, exceptions, and object-oriented programming. Basic data structures such as linked lists, stacks, and queues are covered in terms of their usage and implementation using C++.\nAlso, this course has been created to help you learn all the basics concepts that are the core of C++ Programing. This way, you will not only program in this language, but you will also understand the logic behind this programming language and will be able to create various applications in it on your own. Indeed, if you don’t have prior programming experience, the hardest part is understanding the programming logic and this course covers all the topics to help you succeed in C++ programming.\nSubjects/topics you will learn through the course are\nC++ Overview\nFunctions and variables\nClasses\nOperator Overloading\nInitialization and Assignment\nStorage Management\nInheritance\nPolymorphism\nException\nTemplates\nSee you Inside the course. Thank you",
      "target_audience": [
        "Beginner in Java development And C++ development",
        "Beginner in software development"
      ]
    },
    {
      "title": "Spring Security 6 with ReactJS, OAuth2, JWT | Spring Boot",
      "url": "https://www.udemy.com/course/spring-security-6-with-reactjs-oauth2-jwt-multifactor-authentication/",
      "bio": "Full Stack Secure Project Using Spring Boot, Spring Security 6, Multi-Factor Authentication, Password Security, JWT, AWS",
      "objectives": [
        "BUILD A SECURE NOTES APPLICATION: Design, develop, and deploy a FULL STACK secure notes application using Spring Boot, React, and Tailwind CSS.",
        "MASTER SPRING SECURITY CONCEPTS: Gain hands-on with JWT, OAuth2, and multi-factor authentication to secure your apps.",
        "GO FULL STACK: With React For Beginners Sections included, you also learn how to implement Security in Full Stack Web Applications",
        "BE SPRING SECURITY PRO : Learn the fundamentals and advanced concepts of Spring Security, including authentication providers, role-based authorization.",
        "MASTER ADVANCED SPRING SECURITY CONCEPTS: Learn authentication providers, role-based authorization, and custom filters.",
        "INTEGRATE FRONT END AND BACKEND: Handle CORS, CSRF, and JWT in React and Spring Boot for robust security.",
        "LEARN USER MANAGEMENT: Implement secure password practices and manage user roles effectively.",
        "IMPLEMENT OAUTH2 AUTHENTICATION: Add GitHub and Google sign-ins for seamless third-party authentication.",
        "BUILD SECURE API'S: Build secure APIs with Spring Boot, following best practices.",
        "DEPLOY ON AWS SECURELY: Deploy Spring Boot apps on AWS, following cloud deployment best practices.",
        "BUILD AUDIT FUNCTIONALITY: Add auditing to Spring Boot apps to track user actions.",
        "MASTER PASSWORD SECURITY: Use password encoders for security and implement password reset features.",
        "MANAGE USER ROLES: Effectively manage user roles and permissions in your applications."
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Java and Spring Boot is expected."
      ],
      "description": "MASTER SPRING SECURITY 6 WITH REACT: BUILD SECURE FULL STACK REAL-WORLD APPLICATIONS USING SPRING FRAMEWORK + SPRING BOOT!\nThought of Building Full Stack Application Using Spring Security, React, Tailwind CSS with PRODUCTION GRADE FEATURES?\nYou are at right place.\nBuild secure projects using Spring Boot, Spring Security 6, OAuth2, CORS and JWT. Gain hands-on skills with Spring Boot Security\nUnlock the Power of Spring Security and become a skilled Java Developer! Dive into the world of Spring Security and React to build secure, scalable, and production-grade applications. Whether you're new to Spring or looking to enhance your skills, this course provides a comprehensive path to mastering security in web development.\nTransform Your Development Skills with hands-on experience in creating a secure \"Secure Notes\" application. Learn how to integrate Spring Security with React, implement JWT for authentication, and explore advanced topics like OAuth2 and multi-factor authentication. This course covers everything you need to know, from authentication providers to deploying on AWS, making you proficient in full-stack web development.\nThis course is 23+ HOURS of expert instruction, practical exercises, and real-world projects. Designed for developers eager to secure their applications, this course offers a deep dive into Spring Security, React integration, and the latest security practices.\nLearn the essentials of secure web development and progress to advanced concepts with hands-on projects and practical applications.\nTHIS COURSE COVERS:\nIntroduction to Spring Security\nBasic Authentication & Custom Security Configurations\nIn-Memory Authentication Provider\nUser Management & Role-Based Authorization\nPassword Security & Encoders\nCustom Filters & CSRF Protection\nJWT Authentication & Authorization\nSign-In and Sign-Up Functionality\nJavaScript & React Basics\nTailwind CSS for Front-End Development\nCORS & CSRF with React and Spring Boot\nNotes Functionality & Auditing\nOAuth2: GitHub & Google Sign-In\nMulti-Factor Authentication\nDeploying on AWS\n[NEW UPDATE] React For Beginner Section Highlights\nIntroduction to React\nGetting Started with JSX\nComponents, Props, and State\nReact Hooks: useEffect, useRef, and useContext\nCustom Hooks in React\nWorking with APIs\nReact Hook Forms\nBy the end of this course, you'll be equipped to build and deploy secure applications using Spring Boot and React. Perfect for developers looking to advance their skills and create secure, production-ready applications. Enroll now to elevate your Spring Security expertise!\nGUARANTEE\nThis course is backed by a 30-day money-back guarantee.\nOUTCOME OF THIS COURSE\nBy the end of this course, you will:\nUnderstand Spring Security fundamentals and advanced concepts.\nBuild and deploy a secure \"Secure Notes\" application.\nMaster JWT and OAuth2 for authentication and authorization.\nIntegrate React and Spring Boot for full-stack development.\nDeploy applications on AWS with confidence.\nEffectively manage user roles and permissions.\nWHO IS THIS COURSE FOR?\nBeginners: Start your journey with hands-on guidance in Spring Security.\nAspiring Full Stack Developers: Gain skills to build secure, full-stack applications.\nJava Developers: Enhance your expertise with real-world, production-grade applications.\nBackend Developers: Implement advanced backend features using Spring Security.\nMicroservices Enthusiasts: Prepare for future microservices development with Spring Boot.\nJob Seekers: Acquire skills essential for job interviews and career advancement.\nWeb Developers: Enhance your skills in secure web development with Spring Boot.\nSO ARE YOU READY TO GET STARTED?\nWhat are you waiting for? Press the BUY NOW button and begin your journey to mastering Spring Security. See you inside the course!",
      "target_audience": [
        "Aspiring Full Stack Developers: If you're looking to become a well-rounded full-stack developer, this course will equip you with the skills to build secure applications using Spring Boot and React.",
        "Java Developers: Enhance your expertise by learning how to implement advanced security features and build real-world, production-grade applications with Spring Security.",
        "Backend Developers: Those focused on server-side development will benefit from in-depth knowledge of Spring Security, JWT, OAuth2, and authentication techniques.",
        "Security Enthusiasts: Individuals interested in learning how to secure web applications and understand modern security practices.",
        "Job Seekers and Career Changers: Professionals preparing for job interviews in web development and security roles, seeking to add valuable skills to their resume.",
        "Beginners Eager to Learn: Motivated learners with basic programming knowledge who are eager to dive into Spring Security and React development."
      ]
    },
    {
      "title": "Create Simple GUI Applications with Python and Qt",
      "url": "https://www.udemy.com/course/create-simple-gui-applications-with-python-and-qt/",
      "bio": "Learn how to build simple GUI applications with Python and PyQt. Create your own web browser! Includes code + Free EBook",
      "objectives": [
        "Learn how to create simple GUI applications with Python and Qt",
        "Complete PyQt ebook included for all students",
        "Discover the important features of the PyQt library",
        "Use Python to construct an aweseme interface for your app",
        "Build your own completely functional tabbed web browser!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installation - Windows",
          "Installation - MacOS X",
          "Installation - Linux"
        ],
        "Basic Qt Features": [
          "Creating a window",
          "Creating a window",
          "Signals, Slots and Events",
          "Signals, Slots and Events",
          "Actions: Toolbars and Menus",
          "Actions: Toolbars and Menus",
          "Widgets",
          "Widgets",
          "Layouts",
          "Layouts",
          "Dialogs",
          "Dialogs"
        ],
        "Build your own Web Browser: Mozzarella Ashbadger": [
          "Web browser",
          "Navigation",
          "Printing",
          "File operations",
          "Help",
          "Tabbed browsing"
        ],
        "Bonus Resources": [
          "Bonus Resources",
          "Get your FREE ebook here",
          "Source Code"
        ]
      },
      "requirements": [
        "No knowledge of Qt or PyQt expected",
        "Some experience with Python programming is required",
        "A guide to installation of PyQt on Windows, Mac and Linux is included"
      ],
      "description": "Welcome to Create Simple GUI Applications where we're going to use Python and Qt to do just that.\nIf you want to learn to build GUI applications with Python the learning curve is pretty steep. There is a lot you need to know just to get something to work.\n\nMany tutorials offer only screen casts and miss the simple concepts that actually matter. Like writing any code, successfully programming PyQt GUI applications is all about thinking in the right way. In this course I give you the real useful basics that you need to get building PyQt applications as quickly as possible. I include explanations, diagrams, walk-throughs and code to make sure you know what you're doing every step of the way.\nBy the end of the first 8 minute lesson you will have a running Qt application - ready to customise as you like. So, lets get started!",
      "target_audience": [
        "Python programmers who want to create GUI applications",
        "Some previous Python experience is required",
        "No knowledge of Qt or PyQt is needed"
      ]
    },
    {
      "title": "Java And C++ And PHP Crash Course All in One For Beginners",
      "url": "https://www.udemy.com/course/java-and-c-and-php-crash-course-for-beginners/",
      "bio": "Get Started With C++, Java And PHP Programming in This Crash Course, Learn C++, Java And PHP Basics All in One Course",
      "objectives": [
        "You will learn C++ concepts such as console output, C++ Variables and Data Types, C++ Operators And more",
        "You will learn how to write a complete C++ program that takes user input, processes and outputs the results",
        "You will learn common programming constructs as they are implemented in C++.",
        "You will learn how to write a complete Java program that takes user input, processes and outputs the results",
        "You will learn java concepts such as console output, Java Variables and Data Types, Java Operators And more",
        "You will learn PHP concepts such as basic syntax, input and output techniques, and console IO",
        "You will learn PHP arithmetic, assignment, conditional, comparison operators",
        "You will learn PHP loops and conditional statements"
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Computers",
        "No prior knowledge of Java and C++, And PHP things will be covered in this course"
      ],
      "description": "Get Started With C++ Programming, Java Programming And PHP Programming in This Crash Course\nSection 1: C++ Crash Course\nThis course will help you learn C++ basics and give you hands-on experience to create your own projects and work with computer memory. With its adaptability and fast rendering, you’ll find the C++ programming language used everywhere, from web browsers to game development and operating systems to science and machine learning tools.\nThis C++ Programming Course is designed to meet the industry benchmarks. This C++ programming course will give you extensive knowledge of Object-Oriented Programming in C++, Coding Styles and Design Patterns, Generic Programming and Standard Template Library.\nThe course examines common programming constructs as they are implemented in C++ including C++ 11. Topics include the use of C++ for memory management, file input/output (I/O), pointers, references, exceptions, and object-oriented programming. Basic data structures such as linked lists, stacks, and queues are covered in terms of their usage and implementation using C++.\nAlso, this course has been created to help you learn all the basics concepts that are the core of C++ Programing. This way, you will not only program in this language, but you will also understand the logic behind this programming language and will be able to create various applications in it on your own. Indeed, if you don’t have prior programming experience, the hardest part is understanding the programming logic and this course covers all the topics to help you succeed in C++ programming.\nSubjects/topics you will learn through the course are\nC++ Overview\nFunctions and variables\nClasses\nOperator Overloading\nInitialization and Assignment\nStorage Management\nInheritance\nPolymorphism\nException\nTemplates\n\n\nSection 2:  Java Crash Course\n\n\nTake-Away Skills:\nThis course is a great introduction to both fundamental programming concepts and the Java programming language. By the end, you'll be comfortable programming in Core Java.\nThis Course is the first of a series of courses that make up the Core Java Specialization. The Core Java Specialization, in turn, is part of a series of programming specializations and designed to provide the skill set necessary to be hired as an IT developer using Java in many corporate environments. This course includes hands-on practice and will give you a solid knowledge of the Java language. After completing this course, you will be able to identify Java’s benefits, program in basic Java syntax using Java data types, and incorporate branches and loops. The audience for this course: - Anyone interested in learning Java - Programmers - Technical Managers - Application Developers\nTopics Covered:\nModule-1: Java Fundamentals\nBasic Java Program\nCompile and run a Java program\nUnderstanding console output\nJava Variables and Data Types\nJava Operators\nConditional statements\nLoops\nBreak and continue\nArrays\nSingle Dimensional array\nDouble Dimensional array\nString Class\nString methods\nSection 3: PHP Crash Course\nIn this course, you'll explore the basic structure of a web application, and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and superglobal variables, among other elements. An introduction to Cascading Style Sheets (CSS) will allow you to style markup for webpages.\nBasic syntax\nInput and Output\nArithmetic operators\nConditional operators\nComparison operators\nAssignment operators\nLoops\nConditional statements\nand more\nSee you Inside the course. Thank you",
      "target_audience": [
        "Beginner in Java development And C++ development And PHP development",
        "Beginner in software development and web development"
      ]
    },
    {
      "title": "Master Java Reactive Programming with RxJava 2",
      "url": "https://www.udemy.com/course/master-java-reactive-programming-with-rxjava-2/",
      "bio": "Discover one of the most trending paradigms in programming world: Reactive Programming with RxJava",
      "objectives": [
        "You will understand the purpose behind RxJava development and how to use it",
        "You will have the right tools and knowledge to make your application reactive and asynchronous",
        "Master the Observable and Observer interfaces of rxJava",
        "learn how to manupulate and transform data streams with rxJava operators",
        "Test and debug you reactive app using some action operators",
        "Use schedulers in order to make rxjava apps multithreaded"
      ],
      "course_content": {},
      "requirements": [
        "Java basics",
        "Be familiar with basic functional programming is preferred but not mandatory",
        "Any IDE tool is sufficient"
      ],
      "description": "Reactive Paradigm is used widely in multiple projects around the world with a variety of programming languages. Reactive Approach use a higher level of abstraction than traditional approaches, where developers focus much more on what they need to do instead of how to do it, this approach is called the declarative programming. It uses also an event-driven approach where the application updates itself in response to external and internal events in a form of notifications to controllers. We use it much more on the MVC Pattern as the view is getting all the data it needs from controller in a reactive way, that’s why RxJava works perfectly with pattern designs.\nIn this course, we will be using RxJava 2.0, which is the latest version. It includes all the features of Java 8 Lambda expressions and also Modularity and Streams of Java 9 & 10.\nThe course is subdivided as following:\nObservable and Observers: working and manipulating data streams in a much more seamless way\nRxJava Operators: we will use lambda expressions in operators to transform, reduce, suppress and even perform all sorts of actions on data streams\nCombinations and multicasting: combining techniques like zipping and merging to put all different observables into one observable\nFlowables: a great alternative when dealing with huge data sets and with higher velocity\nConcurrency operators: to make rxjava applications multithreaded\nTransformers: to compose our own operators and be able to create new ones if needed\nTesting and debugging: with rxjava testing operators\nWith this comprehensive curriculum student will have a solid knowledge in rxjava\nSo let’s rock it guys !",
      "target_audience": [
        "Developers keen to have a grasp of new trends in java programming",
        "Software developers and students",
        "Professionals in the programming realm",
        "Anyone who has programming curiousity towards new trends"
      ]
    },
    {
      "title": "Learn C and C++ (Beginner to Advance)",
      "url": "https://www.udemy.com/course/learn-c-and-c-beginner-to-advance/",
      "bio": "Mastering C and C++: From Beginner to Expert",
      "objectives": [
        "Obtain the key concepts of programming that will apply not only to C++, but also to other programming languages.",
        "Learn Modern C++ rather than an obsolete version of C++ that most other courses teach.",
        "Learn C++ features from basic to more advanced, such as inheritance and polymorphic functions.",
        "Learn C++ using a proven curriculum that covers more material than most C++ university courses.",
        "The course includes Quizzes, Live Coding Exercises, Challenge Coding Exercises, and Assignments to help you solidify your knowledge."
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is needed for this course",
        "One System, with atleast 4GB of RAM and an active internet connection is required."
      ],
      "description": "Are you looking to become a proficient programmer? Look no further than learning C and C++. These powerful programming languages are widely used across many industries and applications. By learning C++, you'll not only acquire the key concepts of programming that apply to other languages but also get hands-on experience with modern C++ which is widely used in today's software industry.\nThis course will cover everything you need to know, from the basics of C++ to advanced topics like inheritance and polymorphism. You'll be guided through a proven curriculum that covers more material than most C++ university courses. Plus, you'll be learning from an experienced university full professor who has been using and teaching C++ for over 25 years.\nOur comprehensive course includes quizzes, live coding exercises, challenge coding exercises, and assignments to ensure you have a solid grasp of C++ programming. Don't settle for obsolete versions of C++ taught in other courses – learn modern C++ and become a skilled programmer. Start your journey today!\n\n\nAre you wondering which programming language to learn that will add value to your resume and increase your chances of getting a job interview? Look no further than C++. This programming language is considered a badge of honor among software developers and is routinely ranked in the top 5 programming languages by popularity. C++ has been consistently in the top 10 for close to 20 years, making it a very relevant language to learn.\n\n\nC++ is used for developing a lot of software today, including leading tech companies such as Amazon, Apple, Microsoft, PayPal, Google, Facebook, and Oracle, to name a few. Many of their products, including operating systems like Windows, Linux, and Mac OSX, as well as Adobe products like Photoshop and Illustrator, are written in C++.\n\n\nBut why should you learn C++? For one, it is a powerful language that can do many things that other languages cannot. C++ is also super fast and flexible, supporting both procedure and object-oriented programming. If you want to learn C++, finding a good course taught by an experienced instructor is critical. This is where the Modern C++ course, taught by Frank Mitropolous, comes in. Frank has been using C++ for over 2 decades and has taught students in both university courses and industry training courses.\n\n\nThis course focuses on teaching Modern C++ (specifically C++ 14 and C++17), which are the versions currently being used by the industry. While C++20 is new, the industry is mainly using C++14, and it will take years for them to migrate to C++20. Therefore, it is beneficial to learn Modern C++ first and focus on the latest versions later.\n\n\nThe course assumes no previous experience with C++ and covers key topics such as looping, functions, pointers, class hierarchies, and smart pointers. C++ may be complex, but with the right instructor and training, you can quickly learn the language and create your own programs. Learning the foundations of Modern C++ should be your priority, and this course will give you the necessary skills in the shortest possible timeframe.",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous coding experience, or anyone wanting to add C++ to their existing skillset.",
        "Anyone looking to increase career options by learning one the most in-demand programming languages."
      ]
    },
    {
      "title": "Python Programming in 5 Hours",
      "url": "https://www.udemy.com/course/python-beginner-to-advanced-with-web-scraping-projects/",
      "bio": "The Ultimate Python Course helps you to Master Python 3 Programming fast. [ Python 3.8 Updated ]",
      "objectives": [
        "Computer programming with Python",
        "Fundamentals of how programming works",
        "Data Types, Operators and Strings",
        "Collection Types: Tuple, List, Dictionary to store data",
        "Function and Lambda to reuse code",
        "Object Oriented Programming with Classes",
        "Modules, namespace and libraries",
        "Test Driven Development by Unit Test",
        "Understand complex topics like Decorator",
        "How to write code in Visual Studio Code editor and PyCharm IDE",
        "How to use Mac Terminal and Windows Powershell",
        "Files Input and Output including JSON, CSV and Binary",
        "Web Scraping",
        "SQLite Database Connectivity"
      ],
      "course_content": {},
      "requirements": [
        "Computer and internet connection to access the course materials",
        "Windows or Mac Operating System"
      ],
      "description": "The course is updated and added new materials in 2020.\nPython is one of the popular and beginner-friendly computer programming languages in the world.\nIt is everywhere. Using the Python programming language, you can develop a backend web application. You can use Python language in data science including machine learning, deep learning. We can also use Python in data analysis, data visualization and different kind of scripting. Python is also very popular in web scraping project where a program automatically collects data from various websites.\n\n\nI carefully crafted this course to help anyone, who wants to be a computer programmer as fast as possible. The goal of this Python programming course for absolute beginners is to speed up someone who never wrote any computer programming code but wants to be a computer programmer very fast.\nIf you have other computer programming experiences like JavaScript, Java, C++, C#, PHP or Ruby, you will learn Python much faster by following my course. This course is designed for any age of people who never programmed in Python before.\nThis Python course started from setup in both mac and in windows. You will also learn about various way to run Python programming code. You can run in Python-specific IDE like PyCharm or you can learn how to use Visual Studio code editor and mac terminal and windows Powershell to run Python code.\nNext, you will see the variables, the fundamental concept of Python programming where you can store data. You will also learn about how different kind of operators works in Python. Then you will learn about String, making decision-based on data, iterating part of code and some collection.\nI will teach you, how to define list or array, how to use them. How to use Tuple and Dictionary, two important collection type in Python. You will also learn about the unit of a python program like function and how to use it. You will learn the inline function called Lambda in Python.\nThen I will teach you, Object-oriented programming or in short OOP in Python. Using this concept you can create reusable code. You will also learn about the modules and some important packages in Python. I will not stop here, I will teach you about how to handle runtime programming error in Python by using Exception Handling.\nIn the advanced section, you will learn files input and output operation, CSV and JSON file parsing. You will also run about Python-based regular expression. Finally, I will teach you test-driven development by unit testing in Python, Decorator, and Closure. You will also see some tutorials linked at the end.\nDon’t waste your precious time\nThis 5-hour python course is the shortest and elegant programming course published on Udemy. I personally do not like to watch the long, boring video tutorial. I like to know the specific thing in the right way.\nZERO Risk with Money Back Guarantee…\nI am very confident that you will love my Python programming course. In case you're not happy, you can claim your FULL money back within 30 days. So sign up today and let's start learning!\n\n\nBy the end of this course, you'll understand:\nFundamental of Computer Programming using Python\nAdvanced and Modern Python Features\nObject-Oriented Programming using Python\nCollection types like list, dictionary and how to use them\nThe Clear understanding of Modules and Package\nHow to handle error in Programming\nHow to use Regular Expression\nTest-Driven Development by Unit Testing\nDecorator and Closure concept in programming\nBy solving coding challenges in the curricular you will boost your confidence\n\n\nSo don't waste your time by overthinking and Let's enroll in my course. I will be more than happy to guide you in this journey!",
      "target_audience": [
        "Anyone who is completely new to computer programming",
        "Anyone having basic programming knowledge of other languages like Php, Javascript",
        "Anyone who is interested in web development, data science or deep learning"
      ]
    },
    {
      "title": "Python for Everyone Master the Basics of Programming",
      "url": "https://www.udemy.com/course/python-for-everyone-master-the-basics-of-programming/",
      "bio": "Unlock Your Coding Potential: Prepare for a Fulfilling Programming Career",
      "objectives": [
        "Go from ZERO to HERO: With clear explanations, hands-on exercises, and real-world examples.",
        "You'll build a solid foundation in Python, even if you've never written a line of code before.",
        "Become a Problem-Solving Ninja: Learn how to apply your newfound Python skills to solve coding challenges and create your own simple programs.",
        "Build Your Confidence: This course is designed to be fun and interactive, keeping you motivated as you progress on your coding journey."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Python",
          "Installing Python and Pycharm",
          "Setting up Pycharm",
          "Drawing a Shape in Pytthon",
          "Data types and Variables",
          "Understanding about Strings",
          "Understanding about Numbers",
          "Collecting Input from user",
          "Making a Basic Calculator",
          "Making a Mad Libs game",
          "Basic of working with lists",
          "Different functions used in List",
          "Creating Tuples",
          "Functions in Python",
          "Using the return statement in Python Function",
          "Understanding IF Statement",
          "Using comparisions in IF Statement",
          "Building an Advanced Calculator using IF Statement",
          "Using Dictonaries in Python",
          "Using While Loops",
          "Building a Basic Guessing Game",
          "For Loops",
          "The Exponent Function",
          "Class Project-1",
          "Class Project 2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Unleash Your Inner Coding Hero with Python!\nAre you a complete beginner with no prior coding experience? This course is your step-by-step roadmap to mastering the fundamentals of Python programming and taking your first steps into the exciting world of coding.\nIn this beginner-friendly adventure, you'll:\nGo from ZERO to HERO: With clear explanations, hands-on exercises, and real-world examples, you'll build a solid foundation in Python, even if you've never written a line of code before.\nConquer the Essentials: Grasp core Python concepts like variables, data types, operators, control flow, functions, and more, all explained in an engaging and easy-to-understand manner.\nBecome a Problem-Solving Ninja: Learn how to apply your newfound Python skills to solve coding challenges and create your own simple programs.\nBuild Your Confidence: This course is designed to be fun and interactive, keeping you motivated as you progress on your coding journey.\nBy the end of this course, you'll be:\nConfident in writing basic Python code\nEquipped to solve problems using Python's programming power\nReady to tackle more advanced Python concepts in future courses\nThis course is perfect for:\nAbsolute beginners with zero coding experience\nAnyone who wants to learn the basics of Python programming in a fun and engaging way\nIndividuals seeking a career switch into the tech industry\nDon't wait! Enroll now and embark on your Python coding adventure!",
      "target_audience": [
        "Absolute beginners with zero coding experience"
      ]
    },
    {
      "title": "Perl for Beginners: Learn A to Z of Perl Scripting Hands-on",
      "url": "https://www.udemy.com/course/perl-for-beginners/",
      "bio": "Learn Perl from Industry Expert. Perl is the Swiss Army chainsaw of scripting languages due of its flexibility & power",
      "objectives": [
        "Understand Variables, Strings and Variables",
        "Implement Arrays",
        "Define Hashes",
        "Apply Conditions and Loops",
        "Use Regular Expression",
        "Implement Subroutines",
        "Handle Files",
        "Understand Reference",
        "Handle Variable Scoping, and Import Modules"
      ],
      "course_content": {
        "Introduction to Perl": [
          "Download PPT",
          "Download Code",
          "Perl Installation",
          "1st Perl Script"
        ],
        "Variables, Strings and Variables": [
          "Scalar Variables",
          "String Manipulation",
          "Operators in Perl"
        ],
        "Arrays": [
          "Array Basics",
          "In Built Array Functions Part 1",
          "In Built Array Functions Part 2",
          "Array Traversal"
        ],
        "Hash": [
          "Hash Basics",
          "In built function in hashes",
          "Hash Traversal"
        ],
        "Conditions and Loops": [
          "Conditions and Loops - Part 1",
          "Conditions and Loops - Part 2",
          "Conditions and Loops - Part 3"
        ],
        "Regular Expression": [
          "Regular Expression - Part 1",
          "Regular Expression - Part 2",
          "Regular Expression - Part 3",
          "Regular Expression - Part 4"
        ],
        "Subroutines": [
          "Subroutines Part 1",
          "Subroutines Part 2",
          "Subroutines Part 3",
          "Inbuilt Subroutines"
        ],
        "Variable Scoping, and Import Modules": [
          "Variable Scoping, and Import Modules in Perl"
        ],
        "File Handling": [
          "File Handling Part 1",
          "File Handling Part 2"
        ],
        "Reference": [
          "Hard Reference",
          "Symbolic References"
        ]
      },
      "requirements": [
        "System with Internet"
      ],
      "description": "Welcome to Perl for Beginners: Learn A to Z of Perl Scripting Hands-on\nPerl (Practical Extraction and Report Language) is a dynamic, high-level, scripting (interpreted) and a feature-rich programming language with over 29 years of development.\nPerl is especially designed for text processing.\nPerl is used for CGI scripting, network programming, finance, system administration , bioinformatics, GUIs and many other applications.\nThis hands-on Perl Training will give you a solid understanding and practical knowledge of Perl in order to be able to build any project.\nThis Course is delivered by an expert trainer with 10 years of Perl Scripting Experience.\nPerl Certification is a definite way to advance your career and will open doors to new Job opportunities.\n100% MONEY-BACK GUARANTEE\nThis course comes with a 30-day money back guarantee. If you're not happy, ask for a refund, all your money back, no questions asked.\nThis course is developed by Industry Expert and covers all relevant concepts so that you can apply them at your Work with ease. Get Lifetime access and 30 Days 100% Money Back Guarantee by Purchasing this course now. This course is now available at the best price and the price can increase anytime. Taking action and buying this course now is better than doing nothing!\nJoin in, As for getting Perl Certified,  this course is the authority and equally important you will get a certification of completion that validates your skills.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "This Perl course is for newbies who are not familiar with Perl and students looking for a quick refresher."
      ]
    },
    {
      "title": "Complete Modern PHP Developer Course",
      "url": "https://www.udemy.com/course/complete-modern-php-developer/",
      "bio": "The modern PHP course with a project, challenges and theory. Includes SQL and MVC Framework. Get started with PHP 8!",
      "objectives": [
        "Become an advanced, confident, and modern PHP developer from scratch",
        "Become job-ready by understanding how PHP really works behind the scenes",
        "PHP fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, etc.",
        "Modern OOP: Classes, constructors, polymorphism, encapsulation, inheritance and abstraction etc.",
        "Get fast and friendly support in the Q&A area",
        "How to think and work like a developer: problem-solving, researching, workflows",
        "Build a beautiful real-world project for your portfolio (not boring toy apps)"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of HTML and CSS is a plus, but not a must!",
        "Any computer and OS will work — Windows, macOS or Linux. We will set up your text editor the course.",
        "No coding experience is necessary to take this course! I take you from beginner to expert!"
      ],
      "description": "Updated to use PHP  8\nPHP is one of the most popular programming languages in the world. It powers the entire modern web. It provides millions of high-paying jobs all over the world.\nThat's why you want to learn PHP too. And you came to the right place!\n\n\nWhy is this the right PHP course for you?\nThis is the most complete and in-depth PHP course on Udemy (and maybe the entire internet!). It's an all-in-one package that will take you from the very fundamentals of PHP, all the way to building modern applications.\nYou will learn modern PHP from the very beginning, step-by-step. I will guide you through practical and fun code examples, important theory about how PHP works behind the scenes, and a beautiful and complete project.\nYou will become ready to continue learning advanced back-end frameworks like Symfony, Laravel, Code Igniter, or Slim.\nYou will also learn how to think like a developer, how to plan application features, how to architect your code, how to debug code, and a lot of other real-world skills that you will need in your developer job.\nAnd unlike other courses, this one actually contains beginner, intermediate, advanced, and even expert topics, so you don't have to buy any other course in order to master PHP from the ground up!\nBy the end of the course, you will have the knowledge and confidence that you need in order to ace your job interviews and become a professional developer.\n\n\nSo what exactly is covered in the course?\nBuild a beautiful real-world project for your portfolio! In this project, you will learn how to plan and architect your applications using flowcharts and common PHP patterns\nMaster the PHP fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, and more\nLearn modern PHP 8 from the beginning: arrow functions, destructuring, spread operator, variadic arguments, nullish coalesing operator, and more\nDeep dive into object-oriented programming: encapsulation, abstraction, inheritance, and polymorphism. This section is like a small standalone course.\nDive deep into design patterns: MVC, singleton pattern, factory pattern, dependency injection, and PSR concepts.\nLearn modern tools that are used by professional web developers: Composer and Packagist\nCheck out the course curriculum for an even more detailed overview of the content :)\n\n\nThis is what's also included in the package:\nUp-to-date HD-quality videos, that are easy to search and reference\nDownloadable starter code and final code for each section\nDownloadable free eBook with summaries of the core concepts taught in each section.\nFree support in the course Q&A\nCoding challenges with solutions included.\n\n\nThis course is for you if\nYou want to gain a true and deep understanding of PHP\nYou have been trying to learn PHP but still don't really understand PHP, or still don't feel confident to code real apps\nYou are interested in using a library/framework like Symfony, Laravel, Slim, or Code Igniter in the future\nYou already know PHP and are looking for an advanced course. This course includes expert topics!\nYou want to get started with programming, PHP is a great first language!\nDoes any of these look like you? If so, then start this adventure today, and join me and thousands of other developers in the only PHP course that you will ever need!",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of PHP",
        "Take this course if you have been trying to learn PHP but: 1) still don't really understand PHP, or 2) still don't feel confident to code real apps",
        "Take this course if you're interested in using a library/framework like Laravel, Symfony, or CodeIgniter in the future",
        "Take this course if you already know PHP and are looking for an advanced course. This course includes expert topics!",
        "Take this course if you want to get started with programming: PHP is a great first language!"
      ]
    },
    {
      "title": "Professional Certificate in Java Programming",
      "url": "https://www.udemy.com/course/professional-certificate-in-java-programming/",
      "bio": "Learn the Java [ From ZERO to HERO] - Comprehensive step by step guidance - Masterclass",
      "objectives": [
        "Basics of Java Programming",
        "At the end of this course, you will be able to develop your Java OOP skills to face interviews and Examinations Successfully",
        "Best Practices in Object Oriented Programming",
        "Learn about Object Oriented Programming Concepts, Threads, Exception Handling, I/O Streams, Garbage Collection",
        "Read and write data using input and output streams",
        "Generics in Java",
        "Collections in Java",
        "Garbage Collection in Java",
        "Exception Handling in Java"
      ],
      "course_content": {
        "Introduction to Java ( Java Basics )": [
          "Java Project Setup",
          "Code construct of Java",
          "Java Commenting",
          "Variables",
          "Java - Data Types",
          "Java - If Statement",
          "Java -Switch Statement"
        ],
        "Object Oriented Programming in Java": [
          "Entering the Object oriented programming world - Classes & Objects",
          "Classes & Objects",
          "Creating Objects from Classes",
          "Constructors",
          "Methods (parameter vs arguement)",
          "Method Overloading",
          "Method Overloading Demo",
          "Data Abstraction",
          "Encapsulation",
          "Inheritance",
          "Inheritance Demo",
          "Inheritance - instanceof Demo",
          "Static",
          "Abstract Classes",
          "Nested Classes - Inner Class",
          "Object Oriented Programming - Lab Exercise 1 [With Solution]",
          "Object Oriented Programming - Lab Exercise 2"
        ],
        "Threads": [
          "Creating Threads [Extending the Thread Class]",
          "Creating Threads [Using Runnable Interface]",
          "getName(),getId(),getPriority(),setPriority(3),getState(),MIN_PRIORITY, NORM_PRI",
          "Pausing the execution of a thread",
          "Synchronization Part 1 [Method Synchronization]",
          "Synchronization Part 2 [Synchronized Block]",
          "Deadlock - Threads"
        ],
        "Setup (Optional)": [
          "Download Eclipse"
        ],
        "I/O Streams": [
          "I/O Streams [Introduction]",
          "Byte Streams",
          "Byte Streams Demo",
          "Character Streams",
          "Character Streams Demo",
          "Creating Directories",
          "Listing Directories",
          "Java Object Serialization - Write an object to a file",
          "Java Object Serialization Serialization - Read an object from file",
          "Java Object Serialization - Transient variable"
        ],
        "Java Garbage Collection": [
          "Java Garbage Collection Part 1",
          "Java Garbage Collection Part 2",
          "Java Heap Space"
        ],
        "Exception Handling": [
          "Exception Handling - Introduction",
          "Exception Handling - Termination Demo",
          "TryCatchDemo",
          "Multiple CatchBlock Demo",
          "TryAndFinally Demo"
        ],
        "Few more topics": [
          "Introduction to Generics",
          "Arrays Part 1",
          "Arrays Part 2 -Insert search delete (unordered array)",
          "ArrayList Demonstration",
          "Vector [Lecture & Demo]",
          "Debugging - Difference between Step Into and Step Over in the Eclipse debugger"
        ],
        "Guided Programming Tutorials": [
          "Find factorial of a number using recursion",
          "Splitting the string using the split() method",
          "Find the GCD (Greatest Common Devisor)",
          "String reverse example using recursion"
        ],
        "Source codes": [
          "Inheritance Demo [My_Calculation]",
          "Exception Handling - Termination Demo [Source Code]",
          "Exception Handling - TryCatch Demo [Source Code]",
          "Exception Handling - MultipleCatch Demo [Source Code]",
          "Exception Handling - TryAndFinally Demo [Source Code]",
          "Exception Handling - CustomException Demo [Source Code]",
          "Thread Demo 1 [Source code]",
          "Thread Demo 2 [Source code]",
          "Thread Demo 3 [Source code]",
          "Thread Demo 4 [Source code]",
          "Write a Java program that takes two numbers as input and display the product",
          "Write a Java program to print the sum (addition), multiply, subtract, divide",
          "Write a Java program to print the area and perimeter of a circle.",
          "Write a Java program to count the letters, spaces, numbers and other character",
          "Write a Java program that takes five numbers as input to calculate and print t",
          "Write a Java program to check whether Java is installed on your computer."
        ]
      },
      "requirements": [
        "Basic knowledge of computers"
      ],
      "description": "Java is one of the most common, in-demand computer programming languages owned by the Oracle Corporation. Our associates at Academy of Computing & Artificial Intelligence got together and after carefully analyzing the top must learn computer programming languages in 2020, we were able to conclude that Java is the 3rd most used programming language according to stackoverflow. Furthermore, java has an average salary of $102,000 according to indeed making it a widely used and highly applicable language.\n\n\n\"Java is celebrating its 24th birthday this year and has been one of the most popular programming languages used for developing server-side applications. Java is a practical choice for developing Android apps as it can be used to create highly functional programs and platforms.\nThis object-oriented programming language does not require a specific hardware infrastructure, is easily manageable, and has a good level of security. Moreover, it is easier to learn Java in comparison to languages such as C and C++. No wonder, nearly 90 percent of Fortune 500 firms rely on Java for their desktop applications and backend development projects.\nDespite its industry age, the Java is incredibly stable and not heading for retirement anytime soon. This makes Java one of the most desirable languages among programmers in 2020.\" (Belani, 2020)\n\n\nHence, we came up with this course to benefit the students who are curious to learn the basics of Java.\nYou will learn the following -\n• Basics of Java Programming\n• Object Oriented Programming in Java\n• Threads in Java\n• I/O Streams in Java\n• Garbage Collection in Java\n• Exception Handling in Java\n• Generics in Java\n• Collections in Java\n\n\nAt the end of the Course you will understand the basics of Object Oriented Programming. You can enhance your core programming skills to reach the advanced level.\n\nBy the end of these videos, you will get the understanding of following areas the\n\nObject Oriented Programming - Classes & Objects,Creating Objects from Classes,Constructors, Methods (parameter vs argument), Method Overloading, Data Abstraction,Encapsulation,Inheritance,Abstract Classes,Nested Classes\nThreads\nI/O Streams\n\nJava Garbage Collection\n\nException Handling",
      "target_audience": [
        "Students interested in programming who want to learn Java."
      ]
    },
    {
      "title": "Learn Programming in Python With the Power of Animation",
      "url": "https://www.udemy.com/course/learn-programming-in-python-with-the-power-of-animation/",
      "bio": "A Programming Course in Python, great for beginners. It will teach you Python from scratch using Animation & programming",
      "objectives": [
        "You will be able to use Python as a programming language.",
        "Use the skills that you learn in order to start easily a different programming language.",
        "Develop a Library of Fundamental Programs with the Purpose of Modifying them and Using them in the Future",
        "You will be able to understand and solve programming problems.",
        "The course will be continually updated.",
        "We are here to answer your questions as soon as possible."
      ],
      "course_content": {},
      "requirements": [
        "No, you don't even have to download Python. You can go to repl_it - python and program there"
      ],
      "description": "Python is a great language to master! I know that the process of learning programming can be difficult and frustrating. For this reason, we decided to develop a different learning experience for you. Instead of just programming Python on a screen, we use the power of animation in order to analyze the basic ideas. At the same time, I use a digital pen in order to develop the solution of the problem for you. And finally, when you come to a good level of understanding of the problem, we start the actual programming in Python language.\nWith these 3 layers of teaching process, you will never feel that you can’t build a program in Python, because we will be helping you in every step of the way. You will go a step further, by learning not only the command lines in the Python language but you will also develop your algorithmic way of thinking, in order to solve any problem efficiently and easily.\nIf you already have previous exposure to a programming language not only programming in Python but also Java, C++, C you already know that the challenging part is not how to write a command line correctly. It is how to use all the bits and pieces that you have learned in order to solve a problem. How to take an application idea that you have and transform it into a program that works correctly under every situation. For this reason, we give the attention that every part of programming really needs. So in the first part of the course we will start by learning the basics about Variables and how to solve interesting and challenging programs only with Variables. Then in the next parts you will learn about the If statement, loops, functions and many more that a programming language like Python has. Our methodology involves solving carefully chosen problems. In most cases, we will create 2 or even 3 different solutions, in order to teach you not only how to solve a problem, but how to craft a solution, and how you can take different paths in order to reach a certain destination.\nTo follow this course you need to have a compiler to work in. You have two main options:\nThe first one is to download Python language from the internet. You can find numerous tutorials for that on YouTube, so I really don’t want to waste your time with information that is not essential.\nThe second one is to use a special web site where you can program in python language without any installation. More specifically, you can find it in google just by writing “replit - python language”.\n\n\nSo come along to check out how our different approach works for you!",
      "target_audience": [
        "Perfect course for someone who wants to start programming for the first time.",
        "It is also ideal for someone who already knows coding but struggles to solve problems or turn ideas into actual code.",
        "Finally, it is a great place to expand your knowledge by learning Python, if you have already mastered other programming languages."
      ]
    },
    {
      "title": "Linked Lists with C",
      "url": "https://www.udemy.com/course/linked-lists-with-c/",
      "bio": "Build a library for working with Linked Lists using the C programming language",
      "objectives": [
        "Student will learn how to create and use linked lists in C by developing a library of functions."
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Introduction to Linked Lists"
        ],
        "Linked Lists in C": [
          "Creating and Printing Linked Lists",
          "Inserting Nodes into a Linked List",
          "Deleting Nodes from a Linked List",
          "Length, Search, Count and Replace Operations for Linked Lists",
          "Deleting Matches from a Linked List",
          "Efficiently Deleting Matches from a Linked List",
          "Appending and Reversing Linked Lists",
          "Sorting and Removing Duplicates from a Linked List",
          "Delete and Insert After a Value in a Linked List",
          "Practice Challenge Questions",
          "Practice Challenge Question Solutions",
          "Performance Test: Linked List vs Array"
        ],
        "Creating the Linked List C Library": [
          "Creating the Library",
          "Documenting the Library"
        ],
        "Building your portfolio": [
          "Building Your Portfolio with Linked Lists",
          "Bonus Lesson: Hosting Your Portfolio FREE with GitHub Pages"
        ]
      },
      "requirements": [
        "Students should understand C programming., including dynamic memory allocation, typedef, and struct."
      ],
      "description": "In this course you will be taught through step-by-step live coding examples how to create and use a library of functions for working with Linked Lists in the C programming language!\nLinked Lists are an important type of data structure in computer science and computer programming, so before we walkthrough how to create and use them, we'll also cover what Linked Lists are, how they work, and some practical applications of Linked Lists.  The bulk of the course is spent on learning how to work with Linked Lists using C, with over 3 hours of video covering a series of common functionalities explaining step-by-step how they are implemented.  We'll also teach you how to package your functions together into a re-usable library, and how to document your code.\nBy the end of the course you will have a C library of Linked List functions that will help you build a great programming portfolio!\nLinked List functionalities that are covered include:\nCreating a linked list\nInserting nodes on the head and tail of a linked list\nDeleting nodes from the head and tail of a linked list\nSorting a linked list\nDeleting matching nodes from a linked list\nDeleting duplicate nodes from a linked list\nReversing a linked list\nDuplicating a linked list\nDetermining if a value is in a linked list\n...and many others, over 20 functions in total.",
      "target_audience": [
        "Students interested in learning about data structures in C programming."
      ]
    },
    {
      "title": "Spice Up Your C# Code With Advanced Language Features",
      "url": "https://www.udemy.com/course/spice-up-your-csharp-code-with-advanced-language-features/",
      "bio": "A comprehensive guide on how to spice up your C# code with many advanced language features",
      "objectives": [
        "Learn advanced C# language features",
        "Master Extension Methods",
        "What does the yield return statement do?",
        "Use Expression Bodied Properties",
        "Soft and hard typecasts",
        "What is an Auto Property Initializer?",
        "Have fun with Declaration Expressions",
        "The Null Coalescing Operator",
        "... and much more!"
      ],
      "course_content": {},
      "requirements": [
        "You need a Windows, Mac or Linux laptop with Microsoft Visual Studio, Xamarin Studio or Monodevelop",
        "You should be a beginner, intermediate, or advanced C# developer",
        "That's it!"
      ],
      "description": "In this course I am going to teach you some very cool and advanced C# language features.\nHow many of you can explain what the yield return statement does? What are the benefits of auto property initializers? And what's an expression bodied function?\nIf you don't know about these power features, you might be typing way too much code that the C# compiler can produce for you automatically. This is slowing you down and it may reduce the quality of your code.\nLet me help you!\nIn this course I will teach you 10 advanced power features of the C# language. You will learn all about the null coalescing operator, auto properties, object initialisers, lambda expressions, and much more! And I will also show you some very cool new language features that were introduced in C# version 6.\nBy the end of the course you will be fluent in advanced C#, and this will help you write better, cleaner and more compact code.\nWhy should you take this course?\nYou should take this course if you are a beginner or intermediate developer and want to learn advanced features of the C# language. This might seem like a challenge, but all of my lectures are very easy to follow and I explain everything clearly. You'll have no trouble following along.\nOr maybe you're preparing for a job interview? The knowledge in this course will help you prepare for any questions they might throw at you.",
      "target_audience": [
        "Beginner, intermediate, and advanced C# programmers who want to learn advanced C# language features",
        "Developers who are about to take a job interview and need to prepare for questions related to the C# language",
        "Professionals who want to write elegant and compact code in a large C# project"
      ]
    },
    {
      "title": "SAP Fiori, UI5, Gateway, ODATA for beginners with Hands-On",
      "url": "https://www.udemy.com/course/sap-fiori-ui5-gateway-odata-for-beginners/",
      "bio": "Best Course for beginners to understand Fiori, UI5, Gateway and ODATA services and start creating your own Fiori apps.",
      "objectives": [
        "In this course you'll learn basics of Fiori, UI5, Gateway, ODATA in SAP.",
        "You'll create, build and deploy your own UI5 Apps using Eclipse and SAP WebIDE.",
        "You'll also learn about SAP Gateway including how to register services on Gateway, System Aliases, etc",
        "You'll learn about Fiori Launchpad, Fiori Launchpad Designer, activation of Launchpad / Designer in SAP.",
        "You'll also learn how to activate out of box SAP Fiori Apps, build custom Fiori Apps and deploy them.",
        "Finally, you'll learn about creating ODATA services, registering them on Gateway, using CRUD operations on ODATA.",
        "In this course I am not teaching about HTML, CSS, Javascript. Please refer my other course \"Web Development Basics: Learn HTML, CSS and Javascript\" on Udemy"
      ],
      "course_content": {},
      "requirements": [
        "You need to know the basics of HTML, CSS, Javascript and developing simple web applications.",
        "It's good if you have basic knowledge in SAP and ABAP. Although I have tried my best to keep examples as simple as it can be."
      ],
      "description": "In this course you'll learn basics of Fiori, UI5, Gateway, ODATA in SAP. You'll be creating, building and deploying your own UI5 Apps using Eclipse and SAP WebIDE. You'll also learn about SAP Gateway including how to register services on Gateway, System Aliases, etc. I have also thought about Fiori Launchpad, Fiori Launchpad Designer, activation of Launchpad / Designer in SAP, initial setup needed, how to activate out of box SAP Fiori Apps, build custom Fiori Apps and deploy them. Finally, you'll learn about creating ODATA services, registering them on Gateway, using CRUD operations on ODATA.\nIn this course I am not teaching about HTML, CSS, Javascript. For this please refer my other course \"Web Development Basics: Learn HTML, CSS and Javascript\" on Udemy.\nThis course will be a boon for ABAP developers, UI5 developers, Fiori Consultants who are trying to learn and work in Fiori. It'll be useful for Java developers who are working in Fiori and understanding SAP. It'll also be useful for SAP Functional Consultants to have an overview of Fiori and how to work in it (so that they can guide technical, basis, security teams).",
      "target_audience": [
        "This course will be a boon for ABAP developers who are trying to learn and work in Fiori.",
        "It'll be useful for Java developers who are working in Fiori and understanding SAP.",
        "It'll also be useful for SAP Functional Consultants to have a overview of Fiori and how to work in it (so that they can guide technical, basis, security teams)."
      ]
    },
    {
      "title": "Pydantic V2: Essentials",
      "url": "https://www.udemy.com/course/pydantic/",
      "bio": "An in-depth guide to mastering Pydantic V2 for data modeling, parsing and validation",
      "objectives": [
        "Create Advanced Pydantic V2 Models",
        "Custom Validators and Serializers",
        "Leverage Annotated Types with Pydantic",
        "Aliases, Properties and Computed Fields",
        "Pydantic applications, including validating Python function arguments"
      ],
      "course_content": {},
      "requirements": [
        "This is not a course for Python beginners - you must be proficient in Python",
        "Known how to use the command line",
        "Installing Python, virtual environments, pip installs",
        "Solid understanding of Python concepts such as decorators, OOP, inheritance, composition",
        "Python type hinting basics"
      ],
      "description": "This is an advanced level course on using the Pydantic V2 library. This course is not for beginners!\n\n\nI have worked with Pydantic (starting with v1) for many years, and use that experience to bring you a course that focuses on the essential parts of Pydantic you will need to know to use it professionally,  effectively and to leverage it's full potential.\n\n\nPydantic provides a very flexible framework for modeling, validating and parsing data in Python.\n\n\nAlthough Pydantic is often associated with frameworks such FastAPI, it has far broader applications well beyond just REST API development. From modeling and validating data in databases (like Redis, DynamoDB, Clickhouse), queues (like SQS, ElasticMQ, RabbitMQ), and even CSV files,  to even providing argument validation for your custom Python functions!\n\n\nPydantic is a very flexible, fast-to-develop, and easy-to-understand data modeling framework that belongs in every serious Python developer's toolkit.\n\n\nAnytime you have a Python project that contains a fair amount of data validation and modeling into Python classes, Pydantic can be leveraged very effectively.\n\n\nYou can think of Pydantic as somewhat similar to Python's dataclasses, but with an advanced and flexible data validation layer, as well as the easy ability to deserialize (load) and serialize (output) these Python/Pydantic classes into plain dictionaries and JSON. Just like dataclasses, Pydantic uses Python's type hinting capabilities to define data models, but then adds in validation and serialization/deserialization capabilities, which are all fully customizable.",
      "target_audience": [
        "This course is for experienced Python developers who want to learn the essential parts of Pydantic in depth.",
        "Course covers the latest version of Pydantic - V2.x (not V1.x)"
      ]
    },
    {
      "title": "Java Mastery: Beginner’s Guide and Full-Stack AI Projects",
      "url": "https://www.udemy.com/course/code-java-in-5-hours-a-complete-beginners-guide/",
      "bio": "Master Java from scratch: Build a solid foundation in programming, logic, and problem-solving",
      "objectives": [
        "Understand the core concepts of Java programming",
        "Install and set up a Java development environment (JDK + IntelliJ IDEA)",
        "Write, compile, and run Java programs",
        "Work with variables, data types, operators, and expressions",
        "Take user input and print formatted output",
        "Apply decision-making statements and loops effectively",
        "Declare, initialize, and use arrays and multi-dimensional arrays",
        "Create and use methods with parameters and return types",
        "Grasp Object-Oriented Programming (OOP) principles and apply them in projects",
        "Build a mini-project: Employee Management System"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience is required",
        "A computer (Windows, macOS, or Linux)",
        "Willingness to learn and practice regularly",
        "Internet connection to download tools and access course content"
      ],
      "description": "In today’s fast-paced tech world, understanding how to code is a true superpower — and Java remains one of the most powerful, versatile, and in-demand programming languages globally.\nThis beginner-friendly course will take you from complete beginner to confident Java developer — not only by teaching you core Java concepts but also by integrating cutting-edge tools like GitHub Copilot, ChatGPT, and Cursor IDE to supercharge your learning experience.\nWhether you’re starting from zero or pivoting into tech, this course was designed to help you learn Java the smart way: through real-world projects, step-by-step lessons, and hands-on coding — including an AI-powered Employee Management System and a full-stack web app built with Spring Boot and AI collaboration tools.\nWe understand that learning to code can feel overwhelming. That’s why every topic is taught in plain language, with practical examples, interactive lessons, and tons of encouragement. You’ll learn not just how to write Java code — but how to think like a software engineer.\nBy the end of the course, you’ll have built multiple real-world apps and will understand key concepts like variables, loops, OOP, and even how to use AI tools to write better, faster, cleaner code.\nWhat You’ll Learn\nHow to install and configure Java JDK, IntelliJ IDEA, and Copilot\nJava syntax fundamentals: variables, data types, operators, and expressions\nControl flow using if-else, switch, and all types of loops\nHandle user input/output with Scanner and System.out\nWork with arrays, multi-dimensional arrays, and collections\nDefine and use methods to write modular, reusable code\nUnderstand Object-Oriented Programming (OOP): classes, objects, inheritance, polymorphism\nCreate your first apps using Cursor IDE, Copilot, and ChatGPT\nBuild a habit tracker, an Employee Management System, and a full-stack application\nDeploy a Java-based app using Spring Boot and AI DevOps support\nFinalize a real-world project with tests, documentation, and GitHub deployment\nNew! AI-Powered Learning Modules\nCoding with Cursor IDE and its interactive chat features\nSupercharging development with GitHub Copilot\nCreating your first AI-assisted programs\nUsing ChatGPT to debug, test, and deploy code\nBuilding and refining full-stack apps using Spring Boot and AI assistants\nWho This Course Is For\nAbsolute beginners with no programming experience\nStudents learning Java for school, university, or AP exams\nCareer changers aiming for entry-level developer roles\nAspiring backend or Android developers\nAnyone curious about how software is built and automated using AI\nCourse Includes\nOver 7 hours of on-demand, beginner-friendly video lessons\nMultiple hands-on projects (including an AI-enhanced final project)\nExercises after each section to reinforce learning\nSource code and downloadable resources\nInstructor support via Q&A\nLifetime access + all future updates\nCertificate of Completion\nMeet Your Instructor\nThis course is taught by Mariana Kolodzheieva, a seasoned software engineer and team lead with over a decade of experience. Mariana has mentored junior developers, led real-world tech projects, and is passionate about simplifying complex technical topics for beginners. With Mariana’s clear teaching and expert guidance, you’ll feel empowered to build your own apps and keep learning beyond this course.\n\nGet Started Today!\nIf you’ve always wanted to learn how to code — or if you’re ready to future-proof your career by learning Java with modern AI tools — this is the perfect place to start.\nWith project-based learning, real-world tools, and beginner-focused instruction, you’ll leave this course not just knowing Java — but ready to use it.\nEnroll now and write your first Java program in just minutes — with Copilot and ChatGPT by your side!\n30-day money-back guarantee. No risk — just real results.",
      "target_audience": [
        "Absolute beginners who want to start learning programming using Java",
        "High school and university students looking for a Java refresher",
        "Professionals switching to software development",
        "Anyone curious about Java and how software applications are built",
        "Future backend developers or Android app developers"
      ]
    },
    {
      "title": "Google Script How to Update Google Sheet data from a web App",
      "url": "https://www.udemy.com/course/google-script-course/",
      "bio": "Explore how you can use Google Script to connect Google Apps and with web apps to update your Google Spreadsheet",
      "objectives": [
        "output google sheets content",
        "send api requests to google script",
        "connect front end html and jQuery with backend Google Script"
      ],
      "course_content": {
        "Introduction to connecting Google Script with Apps": [
          "Introduction to Google App Script and Google Sheets",
          "setup Google Script",
          "Write your first Google Script",
          "Create dialog and webapp of Google script output",
          "Source Code",
          "html output append and update styling with Bootstrap",
          "Coding exercise add UI item render HTML",
          "Source Code Exercise",
          "Output content from spreadsheet",
          "Project Source Code",
          "Output Sheet content as Data",
          "Source Code",
          "Loop data output array as HTML",
          "Sheet data in HTML table with inputs",
          "data passing using jQuery from element",
          "Class google.script.run (Client-side API)",
          "Update Google Spreadsheet from HTML",
          "Launch Webapp",
          "Styling Tweaks",
          "Source Code review",
          "Source Code GS",
          "Source Code Sheet.html"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Supplementary Resource Collection: Access to Downloads"
        ]
      },
      "requirements": [
        "Google account",
        "Some basic knowledge of HTML JavaScript jQuery",
        "Programming experience"
      ],
      "description": "Use Google Script to connect your Google Sheet data to a web app so users can update content within your sheet.   Connect a sheet without having to share the entire sheet with them.   Google Scripts provides an amazing opportunity to extend what you can do with Google Sheets.  Source Code is included!!!!\nDid you know you can publish web apps that have web urls directly from Google, no hosting and only using your Google Account.\n\nGoogle Script is JavaScript with some added custom classes and methods.....  Using Google script allows you full control over what your Google Apps can do connecting them together and making them work smarter.\nLearn how to output and update your Google Sheet content using Google Script to publish it as a web URL.\nJavaScript, HTML are prerequisites to this course.  jQuery and Bootstrap are used within the application so experience using these technologies is essential to learning the content of this course.\nGoogle provides a powerful set of tools with Google Apps.   Google sheets is a great place to store data within a spreadsheet and then make use of that data in a number of ways.  This course demonstrate how to connect and google sheet content and output it to a web app, and then update the Google Sheet content directly from the web app without having to open Google sheets.\nShare data within your Google Sheet\nProvide a url to update data without providing access to the Google Sheet itself\nSelect and show content from a specific sheet\nYou will be amazed at how easy it is to work with Google Sheets\nThis course provides ways to use the data for web development and more.  Course covers outputting the data as a web app.  This will give you access to the data using a URL which you can then share online.   Select either one sheet or all its up to you no programming is needed.\nSource code is included as well as how to update it to get the content from your own Google Sheet.\nMinimal programming is required for this course, but a basic understanding is needed for the more advanced web application functionality.\nGoogle sheets provides a great way to collaborate and use data online within a nicely packaged spreadsheet.  Now you too can use that data.\nI'm here to help you learn more about web applications and ready to answer any questions you may have.\nJoin now and start doing some amazing things online!",
      "target_audience": [
        "Anyone who wants to learn how to create apps with Google Script",
        "Perfect for web developers",
        "Anyone who wants to update Google Sheets within a web app",
        "JavaScript Developers",
        "Web developers"
      ]
    },
    {
      "title": "Python For Beginners - The Basics Of Python Development",
      "url": "https://www.udemy.com/course/python-for-beginners-the-basics-of-python-development/",
      "bio": "Start to learn the basics of Python Programming And Development with an easy to follow course!",
      "objectives": [
        "How Python Programming Works",
        "The Basic Functions Of Python Programming"
      ],
      "course_content": {},
      "requirements": [
        "No Special Requirments. Basic Programming Knwoledge Would Be An Extra Advantage"
      ],
      "description": "Hello and welcome to the course.\nIf you’ve found your way here, chances are you fall into one of two categories. Either you’re just starting out in programming and have heard that Python is one of the best languages to begin with, or you’re already experienced with other programming languages and now want to pick up Python as a valuable addition to your skill set.\nEither way, you're in the right place.\nLet’s talk about Python for a moment. Python is a high-level, dynamically typed programming language that has become one of the most popular and widely used languages in the tech industry. It is known for its clean and readable syntax, which makes it especially friendly for beginners, while still being powerful enough to build complex systems and applications. Python has a massive ecosystem with libraries and frameworks that cover virtually every domain — from web development, automation, and scripting, to data science, machine learning, artificial intelligence, cybersecurity, and more.\nWhether you're interested in building a personal website, automating repetitive tasks, analyzing data, writing backend code, or even building the next big AI tool, Python has something to offer. Its versatility and simplicity are what make it such a beloved tool among developers and companies alike.\nIn this course, we won’t bore you with unnecessarily long theory or dry definitions. Instead, we’ll get hands-on with the core concepts that matter. You’ll learn how to write your first Python programs, understand how Python thinks, and gain the confidence to explore further on your own.\nBy the end of this course, you will have a solid foundation in Python programming, and you’ll be ready to start building real-world projects or go deeper into specialized fields that use Python every day.\nGo ahead and check out the preview lectures, and if it feels like the right fit, enroll now and begin your journey with Python.\nSee you inside the course.",
      "target_audience": [
        "People Who Want To Learn The Basic Functions Of Python Programming",
        "Python Beginners"
      ]
    },
    {
      "title": "C# Programming for Beginners : The First Steps",
      "url": "https://www.udemy.com/course/c-programming-a-practical-applications-approach/",
      "bio": "Introducing Beginners To Programming Windows Form Apps In C# Using A Practical Applications Approach",
      "objectives": [
        "Program fluently in C# using Microsoft Visual Studio for Windows Machines",
        "Understand how to create a basic Windows Form Application ... No Console Apps",
        "Understand the basic concepts of Selection, Repetition, and Methods",
        "Understand the intermediate concepts of Object Oriented Programming, String Handling, Arrays (One, Two Dimensional), Random Numbers, Graphics, and Animation",
        "Apply the programming skills learned to create meaningful computer app from the world of business, science , math and gaming.",
        "Create Business applications which simulate a computerized cash register for a cafeteria, and a sign in system for a doctors office",
        "Create Science applications which create charts that convert from Fahrenheit to Celsius",
        "Create applications which track student marks and determine averages, and highest and lowest marks",
        "Create applications which determine credit card eligibility for applicants based on a scoring system",
        "Create applications which check the validity of a credit card using String manipulation techniques",
        "Create a program that plays the card game War",
        "Create a Math program which displays a bar chart of sales over a period of years",
        "Create a Graphics program which simulates an \"Etch-A-Sketch\" drawing program",
        "Create a simple object animation then use it as the basis for a car race game",
        "Create a slot machine game",
        "Create a falling objects game ... where you move an object around with the keyboard and catch objects falling from the sky for points",
        "Create a Space shooter game",
        "Fully appreciate the wide range of applications that the study of Computer Science provides.",
        "* NEW * Extend the idea of coding and computational thinking by solving a series of advanced problems from a wide variety of disciplines."
      ],
      "course_content": {},
      "requirements": [
        "All course material (demos, notes) will be available for download during each individual lecture. The only software required to start the course is the free version of Microsoft Visual Studio Express or Community Edition for Windows (link provided in intro lecture)",
        "Our focus will be working with Visual Studio on Windows machines ... Unfortunately NOT MAC computers"
      ],
      "description": "Students will learn to create their own computer programs and video games using the C# programming language. No prior programming experience is assumed. This is a course for REAL BEGINNERS. We will introduce all the required programming skills from the ground up. This programming course is meant for ANYONE WHO WANTS TO LEARN TO CODE. We cover C# syntax but more importantly we introduce the PROBLEM SOLVING SKILLS necessary to convert practical problems to solutions in code. You get paid for solving problems everything else is just a technicality.\nOur focus will be working with Visual Studio on WINDOWS machines . All coding examples are fully compatible with the LATEST Visual Studio Edition (As of 2025 Visual Studio Community 2022 and Visual Studio 2026) for WINDOWS , Unfortunately they are not MAC compatible\nA language like C# is typically learned \"in a vacuum,\" and stripped of potentially distracting visual elements or front end graphical interfaces. This type of learning process - which is considered the standard approach is great for communicating the fundamentals. It allows you to focus on the most important and basic programming concepts you will need to understand, and is often presented through the output of a static, text-based console window. However, learning a language in this console vacuum can also be bland and boring, and can often lead to students becoming disengaged entirely.\nStudents are more likely to remain engaged by learning how to build Windows applications from day one in tandem with learning the C# programming language. Therefore, my lectures are designed to keep you engaged with the process of learning C# fundamentals by presenting them through a series of lessons aimed at creating simple, Windows Form based applications. This course, by jumping right into apps with a Graphical User Interface, allows the learner to feel like they are learning concepts that produce a tangible result.\nI walk you carefully through every possible feature you can imagine, and I use hundreds of existing projects you can learn from, or expand on to make your own project. It's worth sifting through a dozen mediocre Udemy courses to find a gem like this. It's pretty close to a one stop shop for taking you from knowing nothing about WinForms, to building your own whole applications.\nC# is a masterpiece in language design.\nC# doesn’t have all the associated headaches of C++, nor the drudge work of Java—but contains almost all of their advantages.\nC# is versatile: you can write web apps, games, desktop software, iOS and Android apps, and so forth. Probably the only area where Python beats C# is AI and Data Analytics , quite possibly due to the Python libraries and the established knowledge-user-base around it.\nIn modern web development, with C# you don’t even have to write client side Javascript. Blazor is a C# framework that enables you to build interactive client side applications with only HTML, CSS, and C#! Should you need to use Javascript, Blazor also supports interoperability with JavaScript libraries.\nIn game development, using C# (Monogame engine) you can get started in your programming journey by directly writing games which is more fun than dry exercises.\nThis course has more hours of video instruction (18 + hours) , lectures (90+) and exercises and supplemental resources (400+) than virtually any other Introductory C# course offered on Udemy. All for one low price.\nStudents will be exposed to all the stages in software development and develop problem-solving skills as well as learn the syntax of the C# language.\nThe challenges and applications are drawn from a variety of situations in the home, school and workplace. They address a wide spectrum of interests including business, science, math, art, music, and especially ANIMATION and GAMES (1/4 of the lectures).\nMy goal is not just to show you how to program, but to help you understand what you are doing, and why you are doing it. I am online daily to respond to any problems you may encounter.\nNot only do the videos show you how to become a programmer in great detail, but each time an important concept is taught, I offer you a challenge that is designed to help you really understand what you have just learned.\nYou will go away and complete the challenge, and then come back and see the challenge answered and explained in detail in the video, allowing you to check your results!\nHere's how I will help you to succeed:\no Each lecture starts with a list of objectives and speaking notes\no Every example covered in the lecture is available for download in the resources section including the objectives/speaking notes\no Almost every lecture has a set of Practice problems with full solutions provided\no My style of writing and teaching follows the KISS principle : Keep It Super Simple.\nI try to stay away from fancy computer terminology and try to teach like am speaking to a brand new user with little to no previous knowledge on the subject matter, etc. and I am always available for help, replying most times within a day.\nThis is NOT a static course, updates are made several times a month, with new Lectures and Challenge Problems (114 + as of Dec 2024 fully solved) added on a continual basis.\n\n\nAnd finally please do not judge a book by it's cover don't judge the course by the title or this small description section, if you want to know exactly all the topics covered please go to:\nCOURSE CONTENT\nSections\nLectures (press the down arrow) This will open up literally thousands of lines of very detailed lecture descriptions leaving no doubt what is and what is not covered.",
      "target_audience": [
        "This C# programming course is meant for ANYONE WHO WANTS TO LEARN TO CODE . We cover C# syntax but more importantly we introduce the problem solving skills necessary to convert practical problems to solutions in code. No prior programming knowledge is needed."
      ]
    },
    {
      "title": "Data Visualization with MATLAB - Projects and Examples",
      "url": "https://www.udemy.com/course/data-visualization-matlab/",
      "bio": "Learn how to Visualize Data with MATLAB in 2D, 3D, 4D, 5D and create animated plots with tens of projects and examples!",
      "objectives": [
        "Create 2D plots with MATLAB",
        "Create 3D plots with MATLAB",
        "Create Volumetric plots with MATLAB",
        "Express yourself by MATLAB plots",
        "Export figures from MATLAB for use in documents",
        "Have basic understanding of Quality Code in MATLAB"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Basic Settings and Basic Plot",
          "Basic Settings - Part 2"
        ],
        "2D Plots and Basic Properties": [
          "Customizing Plots Part 1 - Labels, Grid, Font Styling",
          "Customizing Plots Part 2 - Titles",
          "Customizing Plots Part 3 - Axis Limits",
          "Customizing Plots Part 4 - Line width and color",
          "Customizing Plots - Source code",
          "Hold on! Multiple Plots on a Single Figure?",
          "Hold on - Source code",
          "Legend - What does this line do?",
          "Legend - Source code",
          "Multiple Plots Part 1 - Figures",
          "Figures - Source code",
          "Multiple Plots Part 2 - Subplot",
          "Subplot - Source code",
          "Customizing Plots (Advanced) Part 1 - Markers",
          "Markers - Source code",
          "Customizing Plots (Advanced) Part 2 - Ticks and Grid Manipulation",
          "Ticks and Grid Manipulation - Source code",
          "Customizing Plots (Advanced) Part 3 - Ticklabel and Lineplots",
          "Ticklabel and Lineplots - Source code",
          "Two Y Axes on a single figure? Call PlotYY! (2D Project)",
          "PlotYY 2D Project - Source code"
        ],
        "3D Plots, Quality Code and Animation": [
          "Plot3 - Line plots in 3 dimensions",
          "Plot3 - Source code",
          "Meshgrid - Doorway to 3D+ plots",
          "Meshgrid - Source code",
          "Contour Plot - Wanna plot a mountain?",
          "Contour Plot - Source code",
          "3D Project",
          "3D Project Quality Code",
          "3D Project and Quality Code - Source code"
        ],
        "4D & 5D Plots": [
          "Slice and Dice Part 1 - 4D Slice Plots",
          "Slice and Dice P1 - Source code",
          "Slice and Dice Part 2 - Moving Slices",
          "Slice and Dice P2 - Source code",
          "Slice and Dice Part 3 - 5D Slice Plots",
          "Slice and Dice P3 - Source code",
          "4D, 5D and Animated Scatter Plots",
          "Scatter3 - Source code"
        ],
        "Exporting": [
          "Export your figure and use it anywhere!",
          "Exporting - Source code"
        ],
        "Hierarchy of MATLAB Graphical Objects and 2D Template": [
          "The Hierarchy of Graphical Objects in MATLAB",
          "Saving and Loading Your Variables",
          "SPECIAL GIFT: Predefined 2D Template To Visualize Your Data Easier and Faster",
          "2D Template Source Code"
        ],
        "Designing Interactive Plots": [
          "Making Your Plots Interactive - Callbacks - What is a Callback?",
          "Callbacks Example - Change Axes Properties By Pressing a Key",
          "SPECIAL GIFT: 3D Explorer - For Easier Visual Exploration of 3D MATLAB Plots",
          "3D Explorer - Source Code"
        ],
        "Visualizing up to 3D Matrices in a Plot": [
          "Introduction to the Project",
          "Visualizing an image(array data) within a plot as cells",
          "Fixing the stylings of the plot and the colorbar",
          "Making the data cursor show custom (relevant) information",
          "Matrix Visualization - Source Code"
        ],
        "Bonus Section": [
          "Further Reading",
          "Line styles, Marker types and Colors",
          "Colormaps",
          "Bonus Lecture: Get my other courses with a Huge Discount!"
        ]
      },
      "requirements": [
        "Have MATLAB",
        "Have basic coding skills, preferably with MATLAB",
        "Have something to express by MATLAB"
      ],
      "description": "Why Visualize Data?\nAs the volume and complexity of data and results continues to grow with the increasing complexity of data sources and algorithms, the need for intuitive representations of that data and results becomes increasingly critical.\nWe want to create the representations in such a way that the human mind can, after all, better understanding our universe and the processes taking place within – representation of a real-world object, an abstract mathematical expression, specific values of some measurable quantities, etc. Since 80 percent of the sensory information the brain receives comes from our eyes, the visual presentation of data is the natural choice.\nThe graphical representation of the results is often not only the most effective means of conveying the points of the study or work which has provided the data, but is in most cases an expectation of the audience of the work. It helps you to identify and emphasize areas of interest in data behavior, to express your thoughts, observations, and conclusions to others in a quick and intuitive way.\nWhy MATLAB?\n1. Ease of Use\nMATLAB is an interpreted language. Programs may be easily written and modified with the built-in integrated development environment and debugger.\n2. Platform Independence\nMATLAB is supported on many different computer systems, providing a large measure of platform independence. The language is supported on Windows, Linux, Unix, Macintosh. Programs written on any platform will run on all of the other platforms.\n4. Device-Independent Plotting\nMATLAB, unlike other computer languages, has many integral plotting and imaging commands. The plots and images can be displayed on any graphical output device supported by the computer on which MATLAB is running. This capability makes MATLAB an outstanding tool for visualizing data.\n5. Full set capabilities\nMATLAB has all graphics functions necessary to visualize scientific and engineering data. It includes features for representation of two-dimensional and three-dimensional diagrams, three-dimensional volume visualization, animation, tools to create diagrams interactively and the possibility of exporting to the most popular graphic formats. It is possible to customize diagrams adding multi-axes, change the colors of the lines and markers, add annotations, LaTeX expressions, legends and other plotting options.\nWhy this course?\nBreaks the complex plot techniques down into simplistic steps.\nEasy and intuitive approach from professional trainers.\nIdeal for students, academics, scientists.\nSuitable for beginner programmers.",
      "target_audience": [
        "Students",
        "Academics",
        "Scientists"
      ]
    },
    {
      "title": "Java Logical Programs and Data Structures For Beginners",
      "url": "https://www.udemy.com/course/java-logical-programs/",
      "bio": "Improve logic and over come the fear of programming",
      "objectives": [
        "Programs using Numbers",
        "Programs using Strings",
        "Programs using Arrays",
        "Programs using Recursion",
        "Programs on Patterns",
        "Concepts of Time Complexity",
        "Programs on Sorting",
        "Programs on Searching",
        "Implement Data Structures",
        "Create LinkedLists",
        "Create Stack",
        "Work with Queues",
        "Implement Trees",
        "Work on problems using Data Structures",
        "And more in easy steps"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Private Course Feedback Link",
          "How to make the best of this course",
          "Download Projects"
        ],
        "Numbers": [
          "Even or Odd",
          "Leap Year Checker",
          "Credit Card Issuer",
          "Print digits in a number",
          "Sum of digits in a number",
          "Sum of even and odd numbers",
          "Sum of prime digits",
          "Sum of multiples of 3",
          "Count the digits in a number",
          "Count the number of times a given digit occurs",
          "Check for Duck Number",
          "Reverse a number",
          "Palindrome or not",
          "Palindrome or not 2nd way",
          "Integer to binary",
          "Integer to Binary 2nd way",
          "Fibonacci Series",
          "Recursion Logic",
          "Fibonacci Series using recursion",
          "Niven Number",
          "Special Number",
          "Print Prime Numbers",
          "Perfect Number Check",
          "Armstrong Number Check",
          "All Special Two Digit Numbers"
        ],
        "Strings": [
          "Reverse a String",
          "Reverse a String Take 2",
          "Check if a String is Palindrome",
          "Count the words",
          "Count words Take 2",
          "Check if String Ends with a String",
          "String Ends With String",
          "Find Max Occurrences",
          "Find Gold",
          "Remove Vowels",
          "Count Vowels and Consonants",
          "Add Duplicates",
          "Print Even Words",
          "Replace with next char",
          "Check Order",
          "Find Duplicate Consecutive Characters",
          "Middle of the string"
        ],
        "Recursion": [
          "Introduction",
          "Factorial",
          "Sum of numbers till N",
          "Power",
          "Sum of cubes"
        ],
        "Arrays & Matrices": [
          "Create Array from user input",
          "Print Even Numbers",
          "Sum of Positive and Negative",
          "Reverse elements in a array",
          "Mini Peaks",
          "Min and Max in a array",
          "Print last M elements",
          "Print Odd Index Elements",
          "Create and print matrix",
          "Matrix Addition",
          "Print diagonal elements",
          "Sparse Matrix",
          "Swap Rows",
          "Matrix Transpose",
          "Symmetric or not",
          "Swap Columns",
          "Print Secondary Diagonal"
        ],
        "Patterns": [
          "Right Triangle",
          "Right Triangle - Two Variations",
          "Inverted Right Triangle",
          "Inverted Print Same Number",
          "Mirrored Right Triangle",
          "Mirrored right triangle Pattern 2",
          "Pascals Triangle",
          "Reverse Pascals Triangle",
          "Sand Glass"
        ],
        "Algorithm Complexity": [
          "Algorithm",
          "Time Complexity",
          "Constant Time Complexity",
          "Logarithmic Time Complexity",
          "Linear Time Complexity",
          "Quadratic Time Complexity",
          "Exponential Time Complexity"
        ],
        "Sorting": [
          "Bubble Sort Introduction",
          "Implement Bubble Sort",
          "Enhancement 1",
          "Enhancement 1 Implementation",
          "Enhancement 2",
          "Enhancement 2 Implementation",
          "Selection Sort Implementation",
          "Insertion Sort",
          "Insertion Sort Implementation"
        ],
        "Searching": [
          "Linear Search",
          "Linear Search Implmentation",
          "Binary Search",
          "Binary Search Implementation",
          "Recursive Binary Search"
        ],
        "Data Structures": [
          "Introduction",
          "Types"
        ]
      },
      "requirements": [
        "Knowledge of core java"
      ],
      "description": "---\nAll source code is available for download\nResponsive Instructor - All questions answered within 24 hours\nProfessional video and audio recordings (check the free previews)\n----\nAre you a College Student with Core Java background who is  interested in improving your programming skills or overcome the fear of coding , this course is for you.This course is also for those students who have completed my Core Java Made Easy Course.\n\n\nYou will start working on simple programs and move using numeric types\nPrint Digits in a number\nSum of Digits in a number\nCheck if a number is palindrome or not\nConvert integer to binary and visa versa\nCheck if a given number is Special and Perfect Number\nand More\n\n\nWork with Strings:\nReverse a String in different ways\nCount the words in given text\nFind words,Remove Vowels\nFind Duplicates,Replace Next Character\nand More\n\n\nUnderstand Recursion and write programs using it\nWrite programs using Arrays and Matrices\nSum of positive and negative numbers in a array\nFind min and max element in a array\nReverse elements in a array\nCheck if a given matrix is a sparse matrix\nDo Matrix Transpose\nSwap Rows and Columns\n\n\nWork with patterns:\nPrint Right Triangle\nPrint Inverted Right Triangle\nMirrored Right Triangle\nUnderstand Time and Space Complexity\nImplement Bubble Sort and enhance it\nImplement Selection Sort\nImplement Linear Search\nImplement Binary Search using recursive and non recursive ways\n\n\nData Structures:\nWhat are Data Structures\nDifferent Types of Data Structures\n\n\nLinked Lists:\nCreate a LinkedList\nInsert at the end\nInsert at the beginning\nInsert in the middle\nDelete at different positions\nTraverse\nFind Nth Node\nCheck if list has a loop\nReverse a List\nWork with Double LinkedList\n\n\nStacks:\nCreate a stack using an array\nCreate a stack using a List\nPush,Pop,Peek\nReverse a String using a stack\nCheck if symbols are balanced\n\n\nQueues:\nCreate a Queue using an Array\nCreate a Queue using a List\nenQueue, deQueue\n\n\nTrees:\nCreate a Tree\nPerform PreOrder,InOrder,PostOrder traversals\nmax, search, find and findMin",
      "target_audience": [
        "College Students Attending Interviews",
        "Students who have completed my Core Java Made Easy Course",
        "Students who want to improve logic",
        "Students who want to overcome fear of programming"
      ]
    },
    {
      "title": "Bash Scripting Basics",
      "url": "https://www.udemy.com/course/bash-scripting-basics/",
      "bio": "Automate Linux, Unix or Mac",
      "objectives": [
        "Learn the basics of bash scripting",
        "Create your own scripts",
        "Repeat commands using various loops",
        "Be able to automate anything Linux"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Variables",
          "Parameters",
          "If statements",
          "Loops",
          "Arrays",
          "Script",
          "Network script",
          "Output redirection",
          "Functions"
        ]
      },
      "requirements": [
        "Have Linux, BSD or Mac available"
      ],
      "description": "bash is a computer programming language and command language interpreter, usually for the UNIX operating system. The name comes from the Bourne-Again SHell. bash is a dialect of the popular bourne shell, and is one of the most popular shells for interactive use.\nScripts can be run on Linux, Mac OS X and the UNIX variants. At the end of this course, you will be able to create your own scripts.\nIn this course you learn the basics of bash scripting. You will learn:\nHow to setup a development environment for bash scripting\nHow to write bash scripts\nHow to run bash scripts\nHow to use variables and loops\nHow to use functions\nmuch more\nIf you are a developer you can use this material to get an idea what is possible with bash scripting and maybe you find some useful tips and tricks. If you are a system administrator you may discover in this series of tutorials some tricks for your daily tasks or some missing tools that could help you in your work.\nBash scripts run interpretively. That means that when you run a bash script, it's just executing each command one after the other in the order in which they're written.\nThis is not about advanced bash techniques, but about getting a good set of basic knowledge on bash scripting. The material here will work with any version of bash and even with other shells.\nI've been writing bash scripts for over a decade, and it really improved my productivity. With this course, hopefully you can do the same",
      "target_audience": [
        "Linux users that want to learn Bash Scripting"
      ]
    },
    {
      "title": "Beginners Ruby Programming Training - No Experience Required",
      "url": "https://www.udemy.com/course/ruby-programming/",
      "bio": "A Ruby Programming Course Training Video. Learn Real-World Programming Techniques At Your Own Pace.",
      "objectives": [
        "Learn The Core Fundamentals Of Ruby Programming",
        "Build A Solid Understanding Of Real World Ruby Programming Techniques",
        "Learn How To Program Ruby At Your Own Pace"
      ],
      "course_content": {
        "01. Introduction": [
          "Important - Download These First - Working Files",
          "0101 About Ruby"
        ],
        "02. Getting Started With Ruby": [
          "0201 Installing Ruby On Windows",
          "0202 Installing Ruby On Mac",
          "0203 Using The Ruby Interactive Shell",
          "0204 Ruby Scripts",
          "0205 Displaying Data",
          "0206 Getting Data In",
          "0207 Exercise 1"
        ],
        "03. Data And Variables": [
          "0301 Strings",
          "0302 Numbers",
          "0303 Booleans",
          "0304 Ranges",
          "0305 Arrays",
          "0306 Hashes",
          "0307 Creating Variables And Constants",
          "0308 Exercise 1",
          "0309 Exercise 2"
        ],
        "04. Operators And Expressions": [
          "0401 Arithmetic Operators And Expressions",
          "0402 Relational Operators And Expressions",
          "0403 Logical Operators And Expressions",
          "0404 Miscellaneous Expressions",
          "0405 Exercise 1"
        ],
        "05. Decisions": [
          "0501 Simple If Statement",
          "0502 If Else Statement",
          "0503 If - Else If Statement",
          "0504 Case Statements",
          "0505 Exercise 1",
          "0506 Exercise 2"
        ],
        "06. Repetition": [
          "0601 While Loops",
          "0602 Until Loops",
          "0603 Iterators Loops",
          "0604 For In And Each Loops",
          "0605 Altering Loop Control",
          "0606 Exercise 1",
          "0607 Exercise 2"
        ],
        "07. Methods": [
          "0701 Defining Methods - Part 1",
          "0702 Defining Methods - Part 2",
          "0703 Defining Methods - Part 3",
          "0704 Exercise 1",
          "0705 Exercise 2"
        ],
        "08. Classes And Objects": [
          "0801 Defining A Class - Part 1",
          "0802 Defining A Class - Part 2",
          "0803 Defining A Class - Part 3",
          "0804 Defining A Class - Part 4",
          "0805 Class Variables",
          "0806 Exercise 1",
          "0807 Exercise 2",
          "0808 Exercise 3"
        ],
        "09. Inheritance": [
          "0901 Defining Subclasses - Part 1",
          "0902 Defining Subclasses - Part 2",
          "0903 Defining Subclasses - Part 3",
          "0904 Exercise 1"
        ],
        "10. Modules": [
          "1001 Defining Modules - Part 1",
          "1002 Defining Modules - Part 2",
          "1003 Using Mixins",
          "1004 Exercise 1"
        ]
      },
      "requirements": [
        "Just The Will To Learn"
      ],
      "description": "In this Ruby training course, Infinite Skills teaches you the fundamentals of the Ruby programming language. Ruby was designed to be more powerful that Perl, and more object-oriented than Python, and has gained in popularity due to its power and ease of use. Mike will show you the basic functions and features of Ruby, and how to put them together to create powerful programs.\n\nYou will start with lessons for installing Ruby on either your Mac or PC, and how to run simple programs. This Ruby training video is designed for the absolute beginner, and no prior programming experience is necessary. Some of the topics the course covers in this video training are; working with data and variables, operators and expressions, decision making (if and case statements), loops, methods and functions and object-oriented programming. You will also learn about exception handling, reading and writing files, and working with the Ruby debugger.\n\nIn completing this computer based training course for Ruby programming, you will have a solid foundation to allow you to start creating programs using Ruby. From this starting point, you can move on to work with Ruby on Rails, or continue to hand-code your Ruby programs, but either way you will have a strong understanding of the fundamentals of the Ruby programming language. Working files are included for both courses, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Programmers And Developers Of All Levels - No Experience Required"
      ]
    },
    {
      "title": "C++ And PHP Complete Course for C++ and PHP Beginners",
      "url": "https://www.udemy.com/course/c-and-php-complete-course-2023/",
      "bio": "Learn C++ And PHP Course, Learn Basics And Advanced C++ And Java In This C++ And PHP Two In One Complete Course",
      "objectives": [
        "You will learn C++ concepts such as console output, C++ Variables and Data Types, C++ Operators And more",
        "You will learn how to write a complete C++ program that takes user input, processes and outputs the results",
        "You will learn common programming constructs as they are implemented in C++.",
        "You will learn C++ concepts such as console output, C++ Variables and Data Types, C++ Operators And more",
        "You will learn PHP concepts such as basic syntax, input and output techniques, and console IO",
        "You will learn PHP arithmetic, assignment, conditional, comparison operators",
        "You will learn PHP loops and conditional statements, POST and GET and more."
      ],
      "course_content": {
        "Introduction": [
          "C++ Arrays",
          "C++ Real Bitwise Operator",
          "C++ Relational Operators",
          "C++ Logical Operators.",
          "C++ Assignment Operators",
          "C++ The # Operators",
          "C++ The ## Operators",
          "C++ Raise Function",
          "C++ Pointers To Structure",
          "C++ Namespaces With directives",
          "C++ The Signal() Function",
          "Class Member Functions",
          "C++ Operator Overloading",
          "C++ Function Overloading",
          "C++ Thread Joining And Detaching",
          "Dynamic Memory Allocation For Arrays.",
          "C++ Nested Namespaces.",
          "C++ Operator Precedence",
          "C++ Multiple Inheritance",
          "C++ Function Template",
          "C++ Inheritance",
          "C++ Function like a Macros",
          "C++ Function Call by Pointer.",
          "C++ Define Objects",
          "C++ Function Call by Reference",
          "C++ Function call by Value",
          "C++ Accessing Structure Members",
          "C++ Class Template",
          "C++ Calling a Function",
          "C++ Default Values For Parameters"
        ],
        "PHP Complete Course": [
          "PHP Basic Syntax",
          "PHP Input And Output",
          "PHP Arithmetic Operators",
          "PHP Assignment Operators",
          "PHP Conditional Operators",
          "PHP Comparison Operators",
          "PHP script as web page",
          "PHP Web Concepts",
          "PHP Break Statement",
          "PHP Continue Statement",
          "PHP Console IO operations",
          "PHP For Loop",
          "PHP While Loop",
          "PHP Switch Case",
          "PHP MySql API",
          "PHP MySqli API",
          "PHP Inheritance",
          "PHP GET Method.",
          "PHP Function Statements",
          "PHP Scalar Type Declaration",
          "PHP Spaceship Operator",
          "PHP Null Coalescing Operator.",
          "PHP POST Method",
          "PHP CSPRNG",
          "PHP Cookies",
          "PHP Custom Exception Handler Function",
          "PHP Error Handling DIE function",
          "PHP Decision Making",
          "PHP Error Handler Function",
          "PHP Exception Handling",
          "PHP $_ REQUEST Variable",
          "PHP Anonymous Class",
          "PHP Class And Objects",
          "bonus lecture"
        ]
      },
      "requirements": [
        "Basic Understanding of Computers",
        "No prior knowledge of Java and C++, And PHP things will be covered in this course"
      ],
      "description": "Learn C++ And PHP Course, Learn Basics And Advanced C++ And Java In This C++ And PHP Two In One Complete Course\nSection 1: C++ Complete Course\nThis course will help you learn C++ basics and give you hands-on experience to create your own projects and work with computer memory. With its adaptability and fast rendering, you’ll find the C++ programming language used everywhere, from web browsers to game development and operating systems to science and machine learning tools.\nThis C++ Programming Course is designed to meet the industry benchmarks. This C++ programming course will give you extensive knowledge of Object-Oriented Programming in C++, Coding Styles and Design Patterns, Generic Programming and Standard Template Library.\nThe course examines common programming constructs as they are implemented in C++ including C++ 11. Topics include the use of C++ for memory management, file input/output (I/O), pointers, references, exceptions, and object-oriented programming. Basic data structures such as linked lists, stacks, and queues are covered in terms of their usage and implementation using C++.\nAlso, this course has been created to help you learn all the basics concepts that are the core of C++ Programing. This way, you will not only program in this language, but you will also understand the logic behind this programming language and will be able to create various applications in it on your own. Indeed, if you don’t have prior programming experience, the hardest part is understanding the programming logic and this course covers all the topics to help you succeed in C++ programming.\nSubjects/topics you will learn through the course are\nC++ Overview\nFunctions and variables\nClasses\nOperator Overloading\nInitialization and Assignment\nStorage Management\nInheritance\nPolymorphism\nException\nTemplates\nSection 2: PHP Complete Course\nIn this course, you'll explore the basic structure of a web application, and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and superglobal variables, among other elements. An introduction to Cascading Style Sheets (CSS) will allow you to style markup for webpages.\nBasic syntax\nInput and Output\nArithmetic operators\nConditional operators\nComparison operators\nAssignment operators\nLoops\nConditional statements\nand more\nSee you Inside the course. Thank you",
      "target_audience": [
        "Beginner in C++ development And PHP development",
        "Beginner in software development and web development"
      ]
    },
    {
      "title": "Mastering C Language - C Programming For Beginners",
      "url": "https://www.udemy.com/course/master-c-language-c-programming-language-for-beginners/",
      "bio": "Learn mastering C programming language only for beginners. Join the Comprehensive C Masterclass!",
      "objectives": [
        "Learn The Core Programming Language",
        "Learn Fundamentals of C Programming Language",
        "Learn C language basic syntax",
        "Learn Operators",
        "Learn C Arrays",
        "Learn C Loops",
        "Learn C Functions",
        "Learn Code Compilation Process",
        "Learn Using Command Line"
      ],
      "course_content": {
        "Introduction": [
          "Introduction of C",
          "Run C Code",
          "Hello World",
          "Structures of C",
          "Data Types",
          "Arithmetic Operation",
          "Comparison",
          "Function",
          "While Loop",
          "For Loop",
          "Input Variable",
          "Array in C",
          "String in C",
          "If else If Condition",
          "Repetition",
          "Pointer",
          "Operator",
          "List"
        ]
      },
      "requirements": [
        "No Need Programming Experience",
        "A Computer with Windows, Mac OS or Linux"
      ],
      "description": "The Course encourages newcomers to programming to consider starting with the C programming language, emphasizing its suitability for beginners. It also suggests that individuals with experience in other languages can benefit from learning C and that those in low-paying programming roles can elevate their careers through C proficiency.\n\n\nLearning C is not only a solid foundation for programming but also a means of improving one's skills in other programming languages, suggesting its versatile and valuable nature in the world of computer programming.\n\n\nWhy learn C programming language?\nThis course highlights the significance of the C programming language, often regarded as the foundation for many others. Despite its simplicity, C remains one of the most powerful and enduring languages, consistently ranking among the top programming languages worldwide for over 40 years. Learning C provides a foundational mental model of computer operations, benefiting one's proficiency in languages like C++, Java, or C#. By delving into the inner workings of memory management and CPU architecture, you gain insights that enable you to create more efficient programs, giving you a competitive edge in the development field. Ultimately, mastering C serves as an excellent starting point for those aiming to enhance their programming skills and become more adept developers. Key points include:\n\n\nC's foundational role in programming.\nIts enduring popularity and power.\nHow learning C enhances proficiency in related languages.\nThe advantage of understanding low-level computer operations.\nThe value of C in becoming a better developer.\nWhy enrolling in this course?\nEnrolling in this course is, without a doubt, one of the most valuable decisions you can make on your journey to programming proficiency. In an increasingly digital world, where coding skills are in high demand, this course opens doors to a world of opportunities. Whether you are a complete novice looking to kickstart your programming career or an experienced developer seeking to deepen your knowledge, this course offers something transformative for everyone. Here's why it's the best decision you can make:\n\n\nFundamental Knowledge: This course provides a solid foundation in the C Programming Language, a cornerstone of computer science, and the key to understanding many other modern languages.\n\n\nCareer Enhancement: By mastering C, you'll make yourself highly marketable for entry-level programming positions and gain a significant edge in a competitive job market.\n\n\nReal World Application: You'll not only grasp the theory but also develop practical skills that can be immediately applied in real time programming scenarios.\n\n\nEfficiency and Expertise: For those with prior C experience, this course deepens your understanding and efficiency as a developer, giving you the tools to write more robust and efficient code.\n\n\nContinuous Improvement: The course's commitment to refining content based on student feedback ensures that your learning experience will always be relevant and up to date.\n\n\nIn today's technology driven landscape, this course is a game changer. It empowers you to build a strong foundation, advance your career, and stay at the forefront of the ever-evolving world of programming. It's not just a course; it's your pathway to success.",
      "target_audience": [
        "Who are doing Software Engineering",
        "Who are very interested to learn Programming Languages",
        "Anyone looking to learn how to program in C language"
      ]
    },
    {
      "title": "A Complete Guide to Java Programming with Projects",
      "url": "https://www.udemy.com/course/master-in-java-in-one-day-java-programming-with-examples/",
      "bio": "100% Core Java Bootcamp | Learning to Java Programming in ONE DAY with Programming Examples | Source Code Available",
      "objectives": [
        "Understand the basic structure of Java programs and write their own programs.",
        "Work with different types of data and use variables to store and manipulate data.",
        "Use input/output techniques to read from and write to files and the console.",
        "Use different operators, math functions, and string manipulation techniques in their programs.",
        "Understand the concept of decision making and use if/else and switch statements to control program flow.",
        "Use different types of loops such as for, while, and do-while loops to repeat code.",
        "Use arrays to store and manipulate collections of data.",
        "Create and use functions to make their code more modular and reusable.",
        "Understand the concept of classes and objects and use them to model real-world objects."
      ],
      "course_content": {
        "Java ONE Day Course Introduction": [
          "Java ONE Day Course Introduction",
          "Introduction to Java Programming"
        ],
        "Last Course Update 13 September, 2025": [
          "New Updates"
        ],
        "Morning Session": [
          "02 Introduction to Java Programming",
          "Morning Session Article",
          "03 Environment Setup for Java",
          "04 Hello World in Java",
          "05 Input Output Function in Java",
          "06 Comments in Java",
          "Variables and Their Rules in Java",
          "08 Constant in Java",
          "Arithmetic Operations",
          "Java Morning Quiz"
        ],
        "Java Projects for Morning": [
          "Project #1",
          "Project #2"
        ],
        "Afternoon Session": [
          "09 Primitive Data Types in Java",
          "Afternoon Session Article",
          "10 Non Primtive Data Type in Java",
          "11 Operators in Java",
          "12 String in Java",
          "13 If and if else statement in Java",
          "14 if else if else statement in Java",
          "15 Switch Statement in Java",
          "16 Ternary Operators in Java",
          "Java Afternoon Quiz"
        ],
        "Java Projects for Afternoon": [
          "Project #3",
          "Project #4"
        ],
        "Evening Session": [
          "17 While Loop in Java",
          "Evening Session Article",
          "18 Do While Loop in Java",
          "19 For Loop in Java",
          "20 for each Loop in Java",
          "21 Array in Java",
          "22 Function in Java",
          "23 Methods Overloading in Java",
          "Java Simple Test",
          "Student Information Management System",
          "Java Evening Quiz"
        ],
        "Java Projects for Evening": [
          "Project #5",
          "Project #6"
        ],
        "Mini Projects for Practice": [
          "String Analyzer Tool",
          "Simple Login Authentication System"
        ],
        "Your Assignments": [
          "Assignment 01",
          "Assignment 02"
        ]
      },
      "requirements": [
        "You did not need to buy extra software or course",
        "It is good, if you have programming background",
        "It is good, if you have basic knowledge of C++"
      ],
      "description": "Learn Java Programming in One Day – Fast-Track to Coding Success\nDo you think learning Java programming requires months of study? Not anymore. With the right approach, structured sessions, and real practice, you can start coding in Java confidently in just one day. This course is designed to give you a comprehensive yet beginner-friendly introduction to Java, one of the most powerful and widely used programming languages in the world.\nFrom web applications to mobile apps and enterprise systems, Java is everywhere. Many professionals aiming to become a full stack Java developer or specialize in core Java begin their journey with the exact concepts covered in this course. If you’ve ever followed popular instructors like Rahul Shetty (Respected) and admired their teaching, this course is your chance to start your own Java journey today.\nHow This Course Is Structured\nTo make your learning smooth and effective, we break this one-day crash course into three manageable sessions:\nMorning Session: Fundamentals such as program structure, environment setup, input/output, comments, and data types.\nAfternoon Session: Operators, math, strings, booleans, decision-making, loops, and break/continue statements.\nEvening Session: Advanced topics including arrays, functions, function overloading, classes, objects, and class members—your first step into object-oriented programming.\nThis time-slot learning style ensures you absorb each concept clearly before moving on to the next.\nHands-On Projects Included\nTo make sure you apply what you learn, we’ve included practical projects you’ll build during the course:\nArithmetic Calculator\nTemperature Converter\nSimple Voting System\nStudent Grading System\nTo-Do List Manager\nStudent Information Management\nEach project strengthens your grasp of coding fundamentals while making your Java programming journey engaging and fun.\nWhy Enroll Today?\nThe secret to success in programming isn’t just learning—it’s practicing. This course gives you both the knowledge and confidence to start coding from day one. With consistent practice beyond this one-day bootcamp, you can grow toward more advanced Java topics, web development, mobile apps, or even become a full stack Java developer.\nRemember: every expert once started with the basics. If you commit today, you can join the millions of developers worldwide who use Java to create powerful applications.\nWhat You’ll Gain by the End\nA solid foundation in core Java concepts.\nHands-on experience with real coding projects.\nThe courage and motivation to keep practicing beyond this course.\nA strong first step toward your career as a Java programmer or developer.\nTake action now. Don’t wait for the “perfect time”—start today. By tomorrow, you could already be writing Java programs with confidence.\nThank you,\nFaisal Zamir",
      "target_audience": [
        "Beginners with no prior programming experience who want to learn how to code in Java.",
        "Students who want to learn Java programming as part of their computer science curriculum.",
        "Professionals who want to add Java programming skills to their existing skillset.",
        "Developers who want to learn a new programming language to enhance their career prospects.",
        "Entrepreneurs who want to develop their own Java-based applications.",
        "Anyone who wants to learn how to write simple to moderately complex Java programs for personal or professional reasons."
      ]
    },
    {
      "title": "Introduction to Kotlin for Java Developers",
      "url": "https://www.udemy.com/course/kotlin-java/",
      "bio": "Learn Kotlin, a modern language for the JVM (now officially supported on Android!)",
      "objectives": [
        "Solve problems in Kotlin",
        "Understand Kotlin's advantages over Java",
        "Effectively leverage Kotlin's null safety and mutability guarantees",
        "Speed up work with collection using Kotlin's collection operationrs",
        "Have fun with a new JVM language!"
      ],
      "course_content": {
        "Introduction to Kotlin": [
          "Introduction",
          "Downloading and Installing",
          "Our First Kotlin Program"
        ],
        "Types and Variables": [
          "Variable Declarations",
          "Type Inference",
          "Ranges",
          "Arrays",
          "Strings and String Interpolation"
        ],
        "Control Flow": [
          "Nullability",
          "If Statement",
          "Smart Casts",
          "For Iteration",
          "When Expression"
        ],
        "Functions": [
          "Top-Level Functions",
          "Return Types and Arguments",
          "Variable-Argument Functions",
          "Local (a.k.a. Nested or Inner) Functions",
          "Infix Functions"
        ],
        "Lambda Functions": [
          "Lambda Functions",
          "Higher-Order Functions",
          "Function Types with Receivers",
          "Functors"
        ],
        "Classes": [
          "Properties",
          "Extension Functions and Properties",
          "Primary Constructors and Initialization",
          "Delegated Properties",
          "Data Classes",
          "Singleton",
          "Companion Objects",
          "Inheritance",
          "Interfaces",
          "Class Delegation"
        ],
        "Collection Operations": [
          "Overview",
          "API Overview and Sequence Generators",
          "Quantifiers (any, all, count, contains)",
          "Projection (map, flatMap, associate)",
          "Aggregation (fold, reduce, joinToString)",
          "Filtering (filter, filterNot)",
          "Partitioning (drop & take)",
          "Grouping (groupBy)",
          "Sorting (sortedBy, sortedWith, compareBy, thenBy)",
          "Element Operations (first, last, single, elementAt)",
          "Set Operations (distinct, intersect, union, subtract)",
          "Summary"
        ],
        "Reflection": [
          "Class Reflection",
          "Function References",
          "Property References",
          "Constructor References",
          "Bound References"
        ],
        "Odds & Ends": [
          "Type Aliases",
          "Enumerations",
          "Exceptions",
          "Operator Overloads",
          "Type-Safe Builders"
        ]
      },
      "requirements": [
        "A basic knowledge of Java is beneficial"
      ],
      "description": "This is a course on the Kotlin programming language. Kotlin is a programming language made by JetBrains which targets the JVM. Kotlin is designed to be a better Java. It is more concise, safer, has better support for functional programming and is designed to speed up everyday development tasks. Kotlin also has great tool support, since it's made by the makers of IntelliJ IDEA, the world leading IDE.\nThis course is designed for people already familiar with Java who are looking for a more modern, expressive and powerful language for the JVM.\nIn this course, you will learn about:\nHow to install and run Kotlin and why toolability matters (I use IntelliJ)\nType inference and how it can save you a lot of time\nSmart control flow structures that let you write more succinctly\nMutability options (val and var), what they mean and how to use them\nNullability guarantees and how they make your code more safe\nThe power of functional literals (nested functions and lambdas)\nPowerful built-in delegation functionality\nHow to leverage Kotlin's collection operations to process data sets efficiently\n...and a lot more!\nThis course is completely live-demo based. All the lectures are examples of real code being edited and executed using the IntelliJ IDEA Community Edition IDE.\nUpdate: Google has just announced official support for Kotlin on Android. Congratulations to the Kotlin team!",
      "target_audience": [
        "Android developers wishing to learn the latest Google-approved language",
        "Java developers looking for a better programming language",
        "Developers looking for interesting language design ideas"
      ]
    },
    {
      "title": "Python and Tableau: The Complete Data Analytics Bootcamp!",
      "url": "https://www.udemy.com/course/python-and-tableau-the-complete-data-analytics-bootcamp/",
      "bio": "Become a master at Data Analytics with Python and Tableau - Build 3 Projects, share on your resume and learn by doing!",
      "objectives": [
        "In this course you'll understand the inner workings of the data analytics pipeline from using Python for Data Cleaning & Analysis and Tableau for Data Visuals",
        "Be able to program in Python and execute code",
        "Create Interactive Charts and Dashboards on Tableau",
        "Create a portfolio of 3 real life Python/Tableau projects to apply for data analytics jobs",
        "Learn how to perform Data Analytics on Python with Pandas, Numpy, Matplotlib and Others"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course: Why we're learning Python and Tableau",
          "Python and Tableau: A Brief Overview",
          "Lecture 3: Python for Data Analysis",
          "Why Data Visualization is Important",
          "How to Install Python on Windows",
          "How to Install Python on Mac",
          "How to Install Tableau Public - Windows and Mac",
          "How the Course is Structured"
        ],
        "Introduction to Python": [
          "Introduction to Spyder",
          "Playing around with Python"
        ],
        "Python - Project 1: Value Inc. Sales Analysis": [
          "Python Project 1 - Value Inc - Project Introduction and Working with Pandas",
          "Python - Project 1 - Value Inc - What happens when we close Spyder?",
          "Python Project 1 - Value Inc - Working with Calculations on Python",
          "Python Project 1 - Value Inc - Concatenating Variables and Working with iloc",
          "Python Project 1 - Value Inc - Using functions in Python like Split, Replace",
          "Python Project 1 - Value Inc - Running our Final Script",
          "Quick Review on Python"
        ],
        "Python Project 2 - Blue Bank Loan Analysis": [
          "Python Project 2 - Blue Bank - Working with Blue Bank's JSON data",
          "Python Project 2 - Blue Bank - Working with Arrays",
          "Python Project 2 - Blue Bank - If Statements and For Loops",
          "Python Project 2 - Blue Bank - Using Exceptions and Plots",
          "Python Project 2 - Blue Bank - Running our Final Script",
          "A Quiz covering learnings from Blue Bank"
        ],
        "Python Project 3 - BlogMe Sentiment Analysis": [
          "Python Project 3 - BlogMe - Group By and Aggregates",
          "Python Project 3 - Blog Me - Functions on Python",
          "Python Project 3 - Blog Me - Classes in Python",
          "Python Project 3 - Blog Me - Sentiment Analysis on Python",
          "A Quiz Covering the learnings from Blog Me"
        ],
        "Tableau - Project 1 - Value Inc": [
          "Tableau Project 1 - Value Inc - Introduction to Tableau Public",
          "Tableau Project 1 - Value Inc - Reviewing what we will be building",
          "Tableau Project 1 - Value Inc - Connecting to a Data Source",
          "Tableau Project 1 - Value Inc - Creating a Line Chart",
          "Tableau Project 1 - Value Inc - Creating Bar Charts",
          "Tableau Project 1 - Value Inc - Creating Maps and Headline Cards",
          "Tableau Project 1 - Value Inc - Creating Dashboards and Publishing",
          "Introduction to Tableau Server"
        ],
        "Tableau Project 2 - Blue Bank": [
          "Tableau Project 2 - Blue Bank - Reviewing what we will be building",
          "Tableau Project 2 - Blue Bank - Connecting to the Data",
          "Tableau Project 2 - Blue Bank - Building Charts Part 1",
          "Tableau Project 2 - Blue Bank - Building Charts Part 2",
          "Tableau Project 2 - Blue Bank - Building and Publishing Dashboard"
        ],
        "Tableau Project 3 - BlogMe Sentiment Analysis": [
          "Tableau Project 3 - BlogMe - Reviewing what we will be building",
          "Tableau Project 3 - Blog Me - Connecting to the Data",
          "Tableau Project 3 - BlogMe - Building Charts Part 1",
          "Tableau Project 3 - BlogMe - Building Charts Part 2",
          "Tableau Project 3 - BlogMe - Building and Publishing the Dashboard",
          "A Quiz about Tableau"
        ]
      },
      "requirements": [
        "Basic Knowledge of Computers",
        "Internet",
        "Microsoft Excel if Possible"
      ],
      "description": "Welcome to the most comprehensive Data Analytics course available on Udemy! When you become a Data Analyst, there are two things that you should be skilled at in order to be a master data analyst, Python and Tableau!\nThis course is a great choice for beginners looking to expand their skills in Data Analytics. You also create a solid portfolio of your work online and can link it on your resume.\nAt 11+ hours, this Python and Tableau course will teach you the core principles of Data Analytics at every stage in the pipeline. Even if you have no programming experience, this course will take you from beginner to professional.\nWhy you should take this course:\n\nOur learning is going to be project-centric: we will tackle the core concepts in Python and Tableau as it comes up in the real life projects we’ll be working on.\nYou get experience in both Python and Tableau - the two powerhouses in the data analytics community\nYou also understand how you can clean/analyze data in Python and then visualize it in Tableau - an end-to-end process that many data analysts use today.\nYou get a chance to showcase your work in a portfolio online\nWhat are the Projects you will work on?\nSales Analysis for Value Inc: We’re going to be working on a Sales Analysis for a popular retail company called Value Inc.\nHere we use Python for the following to clean our data and we use popular libraries like pandas and learn how to work with dataframes, perform calculations and much more. We are then going to extract that data to Tableau where we learn how to create calculations, parameters and develop a dashboard for the sales manager.\nLoan Analysis for Blue Bank: We’re also going to be working on a Loan Analysis for a bank. Using Python and Tableau, blue bank wants to see an analysis of people who have taken loans but might have issues paying back. We learn how to read JSON files, work with lists, dictionaries, Numpy and if statements. We also learn how to do exceptions, for loops and plots in Python. Once that's done, we extract the data to Tableau and build charts, work with Tableau Calculations and create an interactive dashboard.\nSentiment and Keyword Analysis: We’re also going to be doing a sentiment and keyword analysis for Blog Me. A blogging website that would like us to analyze news headlines and extract a sentiment from these articles. Here, we use a Natural Language Processing Library called Vader, that can extract sentiment on Python. We also learn about functions and classes on Python. Once we extract the data to Tableau, we learn how to perform Tableau Joins, work with sets and context filtering and finally create an interactive dashboard.\nIn this course you will learn the following:\nPython:\nInstall and Set Up Anaconda\nLearn about python variables and data types\nLearn about strings, integers\nUsing lists, tuples and dictionaries\nCreating functions\nUsing if statements and for/while loops\nCreating exception handling\nUsing the exponent function\nWorking with comments\nReading and writing files\nScripting classes and objects\nSentiment Analysis\nTableau:\nConnecting to a data source\nUnderstanding tableau joins and unions\nRename a data field\nAssign an alias to a data value\nAssign a geographic role to a data field\nChange data type for a data field\nChange default aggregation properties\nBar Chart\nLine Chart\nMap\nDual Axis\nCreate a set\nAdd a filter\nManual and computed sorts\nReference lines\nTable calculations\nBins and Histograms\nCalculated fields\nParameters\nCreate a dashboard\nAdd dashboard actions\nDownload dashboards\nBy the time you complete this course, you'll be a highly proficient Python and Tableau user. You will be using your skills as a data analyst to extract knowledge from data so you can analyze and visualize data with ease.",
      "target_audience": [
        "This course is for anyone who wants to kickstart their career in Data Analytics",
        "This course is for anyone who wants to learn more about Tableau",
        "This course is for anyone who wants to learn more about Python"
      ]
    },
    {
      "title": "Beginners Eclipse Java IDE Training Course",
      "url": "https://www.udemy.com/course/beginners-eclipse-java-ide-training-course/",
      "bio": "Learn how to create Java applications using the Eclipse Integrated Development Environment",
      "objectives": [
        "Learn how to use the Eclipse for programming Java applications"
      ],
      "course_content": {
        "Getting Started": [
          "Important - Download These - First",
          "0101 Overview",
          "0103 Reference Materials",
          "0104 Install Java 8 For Windows",
          "0105 Install Java 8 For Mac",
          "0106 Install Java 8 For Linux",
          "0107 Install Eclipse For Windows",
          "0108 Install Eclipse For Mac",
          "0109 Install Eclipse For Linux",
          "0110 General Eclipse Overview",
          "0111 Installing Plugins",
          "0112 How To Access Your Working Files"
        ],
        "Creating A Project": [
          "0201 Setting Preferences",
          "0202 Eclipse IDE Perspectives",
          "0203 Creating New Projects",
          "0204 Creating Packages",
          "0205 Creating Classes",
          "0206 Running The Program",
          "0207 Project Folder Structure"
        ],
        "Advanced Project Operations": [
          "0301 Adding JUnit Tests",
          "0302 Import A JAR File",
          "0303 Deleting From Eclipse And Removing A Project From Disk",
          "0304 Importing And Configuring An Existing Project",
          "0305 Folding Code Regions"
        ],
        "Editor And General Shortcuts": [
          "0401 Content Assist",
          "0402 Next And Previous Error",
          "0403 Maximizing The Code Editor",
          "0404 Matching Brackets",
          "0405 Previous Edit",
          "0406 Moving Between Editors",
          "0407 Project File Navigation",
          "0408 Run Selected Files",
          "0409 Clean Up, Import Statements And Add Or Remove",
          "0410 Code Editor, Navigation Selection And Line Deletion"
        ],
        "File And Edit Menus": [
          "0501 New, Open, Close And Save",
          "0502 Revert",
          "0503 Move, Rename, Refresh, Convert Line Delimiters, Print, and Restart",
          "0504 Switch Workspaces",
          "0505 Exporting",
          "0506 Properties And Recent File list",
          "0507 Edit Menu - Common Features",
          "0508 Expand Selection To",
          "0509 Find, Replace, Next and Previous",
          "0510 Bookmarking",
          "0511 Tasks",
          "0512 Smart Insert Mode",
          "0513 Tooltip, Set Encoding And Quick Fix",
          "0514 Advanced Content Assist And Word Completion"
        ],
        "Source": [
          "0601 Toggle, Block Comments And Element Comments",
          "0602 Shifting Code, Formatting And Correcting Indentation",
          "0603 Adding And Organizing Imports Statements",
          "0604 Overriding And Implementing Base Methods",
          "0605 Generating Accessors And Mutators",
          "0606 Generating Delegate Methods",
          "0607 Generating ToString, Hashcode And Equals",
          "0608 Generating Constructors",
          "0609 Surrounding Blocks Of Code For Try, Catch Conditions And Loops",
          "0610 Externalizing Strings",
          "0611 Sorting Members And Custom Clean Up"
        ],
        "Refactoring": [
          "0701 Renaming And Moving Files",
          "0702 Changing Method Signature",
          "0703 Extracting Methods",
          "0704 Extracting Expressions To Variables Or Constants",
          "0705 Inline Function",
          "0706 Converting Local Variable To Field",
          "0707 Extracting Superclass And Interface",
          "0708 Push Down And Pull Up",
          "0709 Extracting Class And Introducing Parameter Object",
          "0710 Indirection, Factory, And Encapsulate Field",
          "0711 Generalizing Declared Type And Inferring Generic Type Arguments"
        ],
        "Navigate And Searching": [
          "0801 GoTo Next, Previous And Matching Bracket",
          "0802 Open Declaration Type And Type Hierarchy",
          "0803 Open Resource And Open Call Hierarchy",
          "0804 Open Implementation And Open Super Implementation",
          "0805 Generating Javadocs And Opening Attached Javadoc",
          "0806 Show And Toggle Breadcrumb",
          "0807 Quick Outline And Quick Type Hierarchy",
          "0808 GoTo Line",
          "0809 Java Search, File Search And Text Search",
          "0810 References, Declarations And Implementations",
          "0811 Occurrences In File"
        ],
        "Building And Running Projects": [
          "0901 Building Projects",
          "0902 Clean",
          "0903 Project Properties",
          "0904 Running And Debugging Projects",
          "0905 Setting Breakpoints, Watchers And Stepping Through Code"
        ],
        "Conclusion": [
          "1001 Eclipse Marketplace",
          "1002 Wrap-Up"
        ]
      },
      "requirements": [
        "Pc or Mac"
      ],
      "description": "This Eclipse Java IDE training course from Infinite Skills teaches you how to develop applications in this integrated development environment. This course assumes you have some knowledge of Java.\n\nYou will start by learning how to create a project, including creating packages and classes, running the program, and the project folder structure. Brian will then teach you advanced project operations and editor and general shortcuts. This video tutorial will cover the file and edit menus, the source, refactoring, and navigating and searching. Finally, you will learn how to build and run projects, including running and debugging the project and setting breakpoints, watchers, and stepping through code.\n\nOnce you have completed this computer based training course, you will have gained the knowledge necessary to develop your own applications in Eclipse. Working files are included, allowing you to follow along with the author throughout the lessons",
      "target_audience": [
        "Programmers and Developers"
      ]
    },
    {
      "title": "Programming with Python",
      "url": "https://www.udemy.com/course/programming-with-python/",
      "bio": "Python is a powerful and versatile programming language used in a variety of applications including web, desktop, & more",
      "objectives": [
        "Define what Python is and how to install the necessary software including Eclipse and Python",
        "Understand the fundamentals of the Python programming language",
        "Work with control statements including loops and conditionals",
        "Break out code into reusable functions and modules",
        "Work with strings, numbers, dates, and times",
        "Use data structures such as lists, tuples, and dictionaries",
        "Read and write to text and CSV files with file I/O concepts",
        "Pickle and unpickle binary data",
        "Create, rename, and delete folders and directories with file OS",
        "Handle exceptions"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a PC at a beginner level",
        "Have access to an Internet connection to download necessary software applications",
        "Exercise files and support PowerPoint presentations are provided as additional resources at the beginning of each lecture."
      ],
      "description": "It's not often that you get to use a language as powerful and as versatile as Python. Python is a great language for writing web applications, cross-platform desktop applications, Artificial Intelligence software, shell scripts, perform scientific computation, and even create home automation software. To master these skills, you'll need a solid understanding of the Python language. In this course, Programming with Python, you'll start by learning the fundamentals of the language before venturing out to learn more advanced concepts like working with functions, modules, strings, numbers, dates and times, data structures, control statements, and much more. When you are finished with this course, you'll have a solid foundation to go out and build your own applications using Python.",
      "target_audience": [
        "This course is meant for beginning to intermediate programmers aspiring to learn the Python language"
      ]
    },
    {
      "title": "Intermediate Python Immersive Training | Boost your career",
      "url": "https://www.udemy.com/course/the-intermediate-python-training-boost-your-python-skills/",
      "bio": "Develop your Python programming skills and Master next-level Python features",
      "objectives": [
        "Building Iterators",
        "Coding regions in Python",
        "Awesome string formatters",
        "Generators in Python",
        "Regular expression operations in Python 3.9.0",
        "Python Built-in Modules",
        "Making a Python Package"
      ],
      "course_content": {
        "Python Iterators": [
          "Introduction to the course",
          "Iterator from fruitstuple and print each value",
          "Iterator from sequence of characters",
          "for loop to iterate through a tuple",
          "for loop to iterate through a string",
          "Build an iterator that returns numbers",
          "raise StopIteration"
        ],
        "Coding regions in Python": [
          "local scope of a function",
          "local variable can be accessed from a function inside function function",
          "Global variables are available from within any scope",
          "Naming and Renaming Variables",
          "The global keyword makes the variable global"
        ],
        "Awesome string formatters": [
          "Adding a placeholder",
          "displayed as a number with two decimals",
          "Adding Multiple Placeholders",
          "Using index numbers for placeholders",
          "Using named indexes"
        ],
        "Generators in Python": [
          "simple generator function with yield",
          "return a value and terminate the execution of the function",
          "Using generator function with for loop",
          "yield square of number",
          "loop and StopIteration automatically",
          "Use generator expression",
          "pass generator expression in a function"
        ],
        "Regular expression operations in Python 3.9.0": [
          "import the regular expressions module",
          "Search the string to see if match or no match",
          "regex function, metacharacters,special sequences and sets",
          "findall list of matches",
          "Search for the first white-space",
          "Making a search that returns no match",
          "Split at each white-space inthe string",
          "Control the number of occurrences",
          "replace every white space and count parameter",
          "search and return a match object",
          "span and Searching for upper case",
          "string property to return the string passed into the function",
          "Print the word that contains upper case"
        ],
        "Python Built-in Modules": [
          "display a list of all available modules",
          "create and change directory",
          "getcwd and rmdir",
          "sys module",
          "math module",
          "statistics",
          "collections and namedtuple",
          "collections and OrderedDict",
          "collections and deque",
          "random module with functions"
        ],
        "Making a Python Package": [
          "creating package called newpackage with files",
          "use from newpackage newfunctions to main",
          "work with init module and use modules",
          "Installing collected newpackage"
        ],
        "Bonus Section": [
          "Fibonacci Sequence",
          "Producing Story and Cues"
        ],
        "BONUS SECTION": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Computer and any Text Editor or IDE",
        "Python basics"
      ],
      "description": "Welcome to The Intermediate Python Immersive Training | Boost your career\nIn this course, you will learn in depth the most important Python language topics for the intermediate level.\nOnce you have completed this course, you will be able to use all these techniques, which we will list in detail.\nThere is a wonderful feature in this course, as it explains in important detail all you need in these topics in a direct and practical way that saves you valuable time and effort.\nOnce you have completed this course, you will be able to understand and use the following techniques in your Python programs:\nIterator from fruitstuple and print each value,  Iterator from sequence of characters, for loop to iterate through a tuple, for loop to iterate through a string,  Build  an iterator that returns numbers, raise StopIteration, local scope of a function, local variable can be accessed from a function inside function function, global variables are available from within any scope, Naming and Renaming Variables, The global keyword makes the variable global, adding a placeholders, displayed as a number with two decimals, Adding Multiple Placeholders, Using index numbers for placeholders, Using named indexes, simple generator function with yield, return a value and terminate the execution of the function, Using generator function with for loop, yield square of number, loop and StopIteration automatically, Use generator expression, pass generator expression in a function, import the regular expressions module, Search the string to see if match or no match, regex function, metacharacters, special sequences and sets,  findall list of matches, Search for the first white-space, Making a search that returns no match, Split at each white-space in the string, replace every white space  and count parameter, search and return a match object, .span and Searching for upper case, string property to return the string passed into the function, Print the word that contains upper case, display a list of all available modules, create and change directory, getcwd and rmdir, list files and sub directories, sys module, math module, statistics, collections and namedtuple, collections and OrderedDict, collections and deque,  random module with functions, creating package called newpackage with files, use from newpackage newfunctions to main, work with init module and use modules, Installing collected newpackage, .... and more.\n\n\nAnd if you have any inquiries in this course, the instructor will answer them and inform you in detail. In order to get the most out of this course.\nI hope you will join us on this wonderful journey which I promise will truly benefit you.",
      "target_audience": [
        "Python Intermediates",
        "Anyone who has finished the basics of Python and does not know where to go",
        "Python developers who want to master new features of modern python",
        "Anyone who wants to dive deeply into Python v3.9 Intermediate Topics without wasting time"
      ]
    },
    {
      "title": "React for Beginners: A Complete Guide to Getting Started",
      "url": "https://www.udemy.com/course/master-advanced-javascript-react/",
      "bio": "A Four Week Intermediate Course to Build Projects with React",
      "objectives": [
        "Have a firm understanding of the fundamentals of React.",
        "Start developing powerful front-end features on your own using elements of the 3 real-world React apps",
        "Make your website more interactive and engaging using JavaScript & React."
      ],
      "course_content": {
        "Week 1": [
          "Start Here",
          "What is React?",
          "Building a Single Page Application (SPA)",
          "The Hard Truth About React",
          "React's Hello World",
          "The Clock App",
          "The Virtual DOM",
          "Reading More Complex React Applications",
          "Install NPM (Node Packing Manager)"
        ],
        "Week 2": [
          "A New Social Media App Begins Now!",
          "Planning the Social Media Card",
          "Create the Class Card",
          "Create Your First Component",
          "Create All The Components",
          "Installing Babel via Terminal",
          "Props",
          "Connect To Our Data",
          "Loop Through Updates",
          "Homework"
        ],
        "Week 3": [
          "Pomodoro Timer",
          "What is the Pomodoro Technique?",
          "Build the Pomodoro Timer App",
          "Build the Pomodoro Component",
          "State",
          "The Component Lifecycle",
          "Alert Conditional",
          "Homework"
        ],
        "Week 4": [
          "Product Search App",
          "Installing React as a Dependency",
          "Build Your HTML Shell",
          "Capture The Input",
          "Pass the Query",
          "Search the Product",
          "Show Each Product Result",
          "Make Component Files",
          "Homework",
          "Completed Projects"
        ]
      },
      "requirements": [
        "An intermediate understanding of HTML, CSS and JavaScript are necessary for this course.",
        "Fluency in English",
        "Come self-driven and motivated to learn!"
      ],
      "description": "Advanced JavaScript: React is a series of video lessons and tutorials that show students who have a basic JavaScript background how to build three real-world projects that you can add to your website. You will learn how to make your website more interactive and engaging using JavaScript & React.\nReact was created by Facebook. Think about your Facebook timeline: There are a lot of different components there with a lot going on: the timeline updates when there are new status updates, you can “like” or comment on a status update, you can get messages from Messenger, you can search for people, right?\nFor a long, long time, creating interactive experiences like this in JavaScript was doable but led to messy code that was difficult to maintain. A common term for this is \"spaghetti code\" because all the different parts of it intertwine like the pasta on a plate of spaghetti and meatballs.\nReact gives us a way to organize our code. Our views (i.e. components) are self-contained and, ideally, do just a single thing. This helps us work with other people because when they come look at our code it will be easier for them to understand it. And it makes our code more robust because giving each component just one role to do cuts down on the likelihood of nasty bugs being introduced.\n\n\nWeek 1 - Fundamentals of React.js\nIn week one, we’ll build a simple React app! We’ll read through a complete React project so that you can begin to answer questions like: When do I choose between JavaScript vs. React? Why do I even need React? And why is React quickly becoming the most popular JS framework on the Web?\nWeek 2 - Social Media Card\nIf you’re building the next Twitter, Instagram, or any social media site that has user profiles then React can help you build your user interface. In this week, we’ll use API data, to populate a user profile page.\nWeek 3 - Pomodoro Timer\nThe Pomodoro Technique is a time management method used to break down work intervals: 25 minutes of deep work, followed by a 5 minute break. In this week, we’ll build an app to help us focus. The Pomodoro Timer we create will tell us when to work, and when to break.\nWeek 4 - Product Search\nIn the final week, you’ll build an app that searches through a list of products. This will be necessary for any app you create where you’d like to parse through lists of users, products, or any data set.",
      "target_audience": [
        "Students with JavaScript experience",
        "Students looking to excel at their current development job or make a career change.",
        "Students who would like to add powerful front-end features to their own app or website."
      ]
    },
    {
      "title": "Redux with React JS: Learn Redux with Modern React JS",
      "url": "https://www.udemy.com/course/redux-with-react-learn-redux-with-modern-react/",
      "bio": "Learn Redux, React Router and React Portals with my ReactJS Redux course. Master with Redux and create React app",
      "objectives": [
        "If you want to to learn Redux with React, React Router and React Portals, you are in the right place",
        "If you want to learn today's most popular frontend architectures, do not wait. This redux with react course is for you!",
        "Learn the most popular React Router, React-Portal and Redux libraries used with React JS",
        "Learn how to create multi-page web applications with Redux, React-Router",
        "Learn the easy and safe way to create modals with React Portals",
        "Learn how to manage the data of our application with the Redux library",
        "Learn how to easily access the data we hold globally from our components with React JS",
        "Learn how to manipulate the data stored in the Redux with modern react js store by creating actions",
        "This course is ideal for people who have a basic knowledge of HTML, CSS, JavaScript and React JS",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a frontend library in Javascript that was developed by Facebook.",
        "React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do.",
        "The most common use of React is to build dynamic user interfaces for single-page web applications.",
        "React encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions.",
        "Frameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application",
        "React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a",
        "Every technology or programming language has a learning curve, and React is no different.",
        "it is easy to learn if you are dedicated and determined to create frontend web applications.",
        "What is the difference between React Native and React JS, and which one should I learn?",
        "React, or React JS, is a front-end Javascript library for building UI components for the web.",
        "React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different.",
        "In React, web components are generated. In React Native, the generated components interact with a phone's native APIs.",
        "If your focus is web development, then you should learn React",
        "If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.",
        "Why is React so popular? There are many reasons why React is popular. One reason is that Facebook developed it.",
        "The world of web development is as wide as the internet itself.",
        "Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites"
      ],
      "course_content": {
        "What We Will Learn?": [
          "What We Will Learn?",
          "Project Files"
        ],
        "Context API": [
          "Section Overview",
          "Why State Management Libraries Are Needed",
          "Context API",
          "Stages of Using the Context API",
          "Let’s Start Using the Context API",
          "Context Provider",
          "Data Management",
          "Creating Multiple Context",
          "LocaleStorage",
          "Using Custom Hooks",
          "Quiz"
        ],
        "useReducer": [
          "Section Overview",
          "What is useReducer",
          "Project Setup",
          "useReducer",
          "Let's Start Using the Reducer Function",
          "Counter Reducer",
          "Quiz"
        ],
        "Context API Project": [
          "Section Overview",
          "Project Introduction and API Source",
          "Project Setup and File Structure",
          "Creating the Route Structure",
          "Header and Navbar",
          "Search Page",
          "News Card",
          "Home Page",
          "Context and Theme",
          "Slider",
          "Categories Page",
          "Filtering by Country",
          "Data Extraction With Custom Hook"
        ],
        "Redux": [
          "Section Overview",
          "Redux",
          "Redux Folder",
          "Counter Component and createStore",
          "useDispatch and useSelector",
          "How to Use Folders With Redux",
          "combineReducer",
          "Todo Component",
          "Todo Reducer",
          "Clear Action",
          "Quiz"
        ],
        "Redux Toolkit": [
          "Section Overview",
          "Redux Toolkit",
          "Let’s Start Using Redux Toolkit",
          "Using Actions in Redux Toolkit",
          "Todo Example",
          "Todo Slice",
          "addTodo & deleteTodo",
          "What is Redux Thunk",
          "Let’s Start Using Thunk in Redux Toolkit",
          "Post Component",
          "Quiz"
        ],
        "Redux Toolkit Project": [
          "Project Introduction",
          "Creation of File Structure",
          "Route Structure and Navbar",
          "Login Page",
          "authSlice",
          "newsSlice",
          "News Page and Card Structure",
          "What we did in this Application"
        ],
        "React Router v6.4+": [
          "Section Overview",
          "Setting up a File Structure",
          "React Router v6.4+",
          "Building the App Layout & Nested Routes",
          "Fetching Data With Loaders",
          "useNavigation",
          "Error Handling",
          "Dynamic Path",
          "Quiz"
        ],
        "Redux Toolkit With React Router v6.4+": [
          "Section Overview",
          "Project Introduction and API Resource",
          "Creation of the Project With Vite",
          "Creating the Folder Structure",
          "Creation of Route Structure",
          "Navbar",
          "Login Page",
          "Manage User State With Redux Toolkit",
          "Manage Movies Data With Redux Tollkit",
          "Movies Page",
          "Using Loader in MovieDetail Page"
        ],
        "What We Learned in This Course": [
          "What We Learned in This Course"
        ]
      },
      "requirements": [
        "This course is ideal for people who have a basic knowledge of HTML, CSS, JavaScript and React JS",
        "Desire to learn Redux",
        "Computer with access to the internet",
        "Desire to learn Redux with react, or (react js)",
        "Desire to learn Redux with modern react js",
        "Desire to learn Redux with modern react, (or reactjs)",
        "Desire to learn web development",
        "Desire to learn Redux with modern react js",
        "Desire to create real world web development project",
        "Desire to become web developer with redux with modern react",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello there,\nWelcome to Redux with React: Learn Redux with Modern ReactJS course.\nLearn Redux, React Router and React Portals with my ReactJS Redux course. Master with Redux and create React app\nReact is one of the best choices for building modern web applications. If you are new to React Redux or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn Redux.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nIn this course, we will take you through everything you need to know about Redux. You will find the most simple and easiest form of React-Router, React-Portal and Redux.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and full stack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nIn particular, Redux is a library that is said to be difficult to understand and implement for most developers. I attribute this problem to the fact that we are not very familiar with the Redux terms we need to know about Redux, and the other issue is, most of the time, the topic is not sequentially explained.\nIn this course, I explained the theoretical knowledge about Redux in the most basic and simple form on the ‘code pen’ tool, before proceeding to React. I explained the general steps and how Redux functions by providing a powerfull knowledge through a mixture of diagrams and the creation of a simple application.\nI have tried to make sure that you get familiar with Redux and get used to it quickly, by repeating the important concepts of Redux, such as Actions, Reducers, Dispatch, Store, Provider, Middleware, Redux-thunk, because learning something very quickly is depends on repetition.\nIf you have difficulty understanding Redux, this course is just for you.\nHands-On\nThis course will take you from a beginner to a more advanced level with hands-on examples.  You will be confident in using Redux, and if you ever get stuck, we will be there to help.\nHere is the list of what you’ll learn by the end of course,\nReact Router\nLink and Navlink\nProgrammitic Redirects\nRoute Parameters\nReact Router Switch Tag\nReact Portals\nWhy React Portals?\nCreating Modal With React Portals\nRedux Stores\nRedux Actions\nRedux Reducers\nStore Subscriptions\nSetting up Redux\nMapping State to PropsCard\nPageMap Dispatch to Props\nAction Creators\nRedux Thunk\nReact js and redux\nRedux project with react js\nWeb development with modern react js and redux\nredux framework\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\n\n\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses lightweight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time. Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nThis course has taught me so much! Before, I hardly even knew how to run an HTML file. Now, I can create a fully functioning Node.js server responding to HTTP requests!\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nRedux with React JS: Learn Redux with Modern React JS\nWe offer full support, answering any questions.\nSee you in the class!",
      "target_audience": [
        "Developers who want to take their web development skills to the next level and learn a future-proof technology",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone who wants to learn Reactjs, Redux, React-Router and React-Portals",
        "Anyone who wants to learn today's most popular front-end architectures, Redux and React js",
        "Students who want to take their Web development skills to the next level",
        "People who want to become web developer with redux and react",
        "People who want to front end developer with modern react js",
        "People who want to catch future technology with reactjs and redux"
      ]
    },
    {
      "title": "PHP for Absolute Beginners",
      "url": "https://www.udemy.com/course/getting-started-with-php-programming/",
      "bio": "Learn the basics of PHP programming. No prior experience required.",
      "objectives": [
        "To demonstrate a basic understanding of PHP",
        "To understand why, where and when PHP programming is used"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction To The Course",
          "What Is PHP?",
          "What Is PHP Used For?"
        ],
        "Getting Started with PHP Programming": [
          "Setting up a Web Server",
          "Commenting Code",
          "Echo/Print",
          "Variables",
          "If Statements",
          "Arithmetic Operators",
          "Comparison Operators",
          "Triple Equals",
          "Logical Operators",
          "Switch Statement",
          "Basic Arrays",
          "Multi-dimensional Arrays",
          "While Loop",
          "Do While Loop",
          "For Loops",
          "Foreach",
          "Functions",
          "$_GET",
          "$_POST",
          "Embedding PHP within HTML",
          "A better way to display HTML",
          "Arrays Part 1",
          "Arrays Pat 2",
          "Cookies Part 1",
          "Cookies Part 2",
          "Checkboxes",
          "Radio Buttons"
        ],
        "Exploring PHP Functions": [
          "PHP Functions You Should Know Part 1",
          "PHP Functions You Should Know Part 2",
          "PHP Functions You Should Know Part 3",
          "String Functions Part 1",
          "String Functions Part 2",
          "Date and Time Part 1",
          "Date and Time Part 2"
        ],
        "Creating Dynamic Web Pages with PHP": [
          "Part 1",
          "Part 2",
          "Part 3"
        ],
        "PHP Object Oriented Programming": [
          "Classes, Methods and Properties",
          "Encapsulation",
          "Constructor Method",
          "Protecting Methods/Properties",
          "Extending a Class (Inheritance)",
          "Scope Resolution Operators",
          "Class Constants",
          "Static Properties and Methods"
        ],
        "PHP Object Oriented Programming Projects": [
          "Calculator Application Example",
          "MySQL Database Example Part 1",
          "MySQL Database Example Part 2",
          "MySQL Database Example Part 3"
        ],
        "Common PHP Errors You Will Encounter": [
          "Introduction to PHP Error Reporting",
          "Changing Maximum File Upload Size",
          "Access Denied",
          "Undefined Index",
          "Cannot Modify Header Information",
          "Supplied Argument Not a Valid MySQL Result",
          "Unexpected $end"
        ],
        "PHP Security": [
          "File Includes",
          "File Uploading",
          "Null Byte",
          "Passing Variables",
          "Session Hijacking",
          "Cookies",
          "SQL Injection",
          "XSS (Cross-Site Scripting)"
        ],
        "Intermediate and Advanced PHP Programming": [
          "Sessions",
          "Using Single or Double Quotes",
          "Indenting Code",
          "Anonymous Functions",
          "Callbacks",
          "Ternary Operator",
          "Browser Identification",
          "Self Submitting Forms",
          "Include and Require",
          "Quickly Return True/False",
          "Tree Structures",
          "Explode: String to Array",
          "Implode: Array to String",
          "Array Dereferencing",
          "Creating Images with PHP"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer :)",
        "A desire to learn PHP Programming"
      ],
      "description": "Like us on Facebook and/or Follow us on Twitter. Message us to let us know you liked us, or Tweet us @sr_elearning.\nDo you want to be a web developer? Do you need to brush up on your PHP skills? Then you're in the right place!\nThis is the best Introduction to PHP course on Udemy. You will learn everything about the basics of PHP programming using real world examples. Source codes are included for each lesson so you can learn by deconstructing each element.\nIf you're interested in learning more about PHP after taking this course, check out the most comprehensive and popular PHP course on Udemy.\nWhat Is PHP?\nPHP is an open source (free) scripting language that allows you to create dynamic websites and work with servers. PHP is now used on over 20 million websites and over 1 million servers worldwide.",
      "target_audience": [
        "Aspiring web developers",
        "Experienced web developers",
        "PHP developers"
      ]
    },
    {
      "title": "Learn Python From Scratch - Basic to Advance",
      "url": "https://www.udemy.com/course/learn-python-from-scratch-basic-to-advance/",
      "bio": "This Python Course From Beginners to Advance Teaches You The Python Language in Less then 3 Hours - Python 3",
      "objectives": [
        "Installation,Syntax",
        "Variables In Python",
        "DataTypes In Python",
        "DataTypes Built-In Functions",
        "Arrays In Python",
        "Loops In Python",
        "Functions In Python",
        "OOPS Concept (Classes,Objects,Inheritance,Polymorphism etc.) In Python",
        "File Handling In Python",
        "Exceptional Handling In Python",
        "Math Module in Python",
        "Date Module in Python",
        "Exercises"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation and Our First Program \"Hello World\"",
          "Access Local Files in Google Colab"
        ],
        "Python Comments": [
          "Comments In Python"
        ],
        "Variables in Python": [
          "Variables in Python"
        ],
        "Operators In Python": [
          "Python Operators"
        ],
        "Data-Types in Python": [
          "Datatypes"
        ],
        "Python Numbers": [
          "Categories"
        ],
        "Python List": [
          "Python List"
        ],
        "Python Dictionary": [
          "Dictionary In Python"
        ],
        "Python Sets": [
          "Sets In Python"
        ],
        "Python Tuples": [
          "Tuples in Python"
        ]
      },
      "requirements": [
        "A Network Connection",
        "Google Account",
        "Windows,Linux or Mac Whatever System u have all are supported."
      ],
      "description": "Unlock the full potential of Python with our comprehensive Udemy course, \"Learn Python From Scratch - Basic to Advance\" Whether you're a novice programmer or an experienced developer looking to enhance your Python skills, this course is designed to provide you with a deep and practical understanding of the language.\n\n\nStarting with the basics, you'll be guided through a clear and engaging curriculum that covers essential Python concepts. From variables, data types, and control structures to functions, modules, and object-oriented programming, you'll build a strong foundation that will serve you throughout your coding journey. Each topic is explained in a beginner-friendly manner, using real-world examples and hands-on exercises to reinforce your learning.\n\n\nAs you progress, the course delves into more advanced topics, such as file handling, exception handling.\n\n\nThe course doesn't stop at just the technical aspects of Python. You'll also learn about best practices in coding, code optimization, and debugging techniques, ensuring that you not only write functional code but also maintainable and efficient programs.\n\n\nBy the end of this course, you'll have the confidence to tackle coding projects. Whether your goal is to develop versatile applications, analyze data, or automate tasks, \"Learn Python From Scratch - Basic to Advance\" equips you with the knowledge and skills needed to excel in the Python programming landscape.\n\n\nEnroll now and embark on a transformative learning journey that will empower you to harness the full potential of Python for your personal and professional aspirations.",
      "target_audience": [
        "This Course is suitable for all who want to learn python from scratch, Freshers in the programming field and also for those who want to gain some extra knoweldge to become a senior software developer in python programming language."
      ]
    },
    {
      "title": "The Complete C & C++ Programming Course - Mastering C & C++",
      "url": "https://www.udemy.com/course/the-complete-c-and-c-plus-programming-course-mastering-c-and-c-plus/",
      "bio": "Complete C & C++ Programming Course basic to advanced",
      "objectives": [
        "Fundamentals of Programming",
        "No outdated C++ Coding Style",
        "Loops - while, do-while, for",
        "The right way to code in C++",
        "Gain confidence in C++ memory management"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required!",
        "This course if for Absolute Beginners"
      ],
      "description": "Welcome to the definitive resource for aspiring programmers and software developers! \"The Complete C & C++ Programming Course\" is your comprehensive roadmap to becoming a master of the C and C++ programming languages. Whether you're a novice seeking to learn the foundational principles of programming or an experienced coder aiming to harness the power of C and C++, this course has got you covered.\n\n\nC and C++ are two of the most influential and versatile programming languages in the world, forming the backbone of software development for a myriad of applications, from embedded systems to high performance software. we will guide you through the entire spectrum of C and C++ programming, helping you build a solid foundation and advanced skills that will empower you to tackle a wide range of programming challenges.\n\n\nWhat You'll Learn:\n\n\nIntroduction to C & C++\nSetting Up Your Development Environment\nBasic Syntax and Data Types\nControl Structures\nFunctions and Modular Programming\nPointers and Memory Management\nObject Oriented Programming (OOP)\nFile Handling\nData Structures and Algorithms\nDebugging and Optimization\n\n\nWhy Choose This Course?\n\n\nComprehensive Learning Path\nHands On Coding Exercises\nLifetime Access\nCertificate of Mastery\n\n\nGain a solid foundation in C and C++ programming with hands-on experience. Enjoy lifetime access and receive a certificate of mastery. Unlock versatile career opportunities in software development and more.\n\n\nWhether you're aiming to become a professional software developer, enhance your coding skills, or unlock the full potential of C and C++ for your projects, \"The Complete C & C++ Programming Course\" is your ultimate destination.\n\n\nEnroll today and embark on your journey to mastering these powerful programming languages. Your journey to mastering C and C++ programming begins here.",
      "target_audience": [
        "Students interested in learning programming",
        "People totally new to programming",
        "Who is interested to start coding"
      ]
    },
    {
      "title": "Build Library Management System | Python & PyQt5",
      "url": "https://www.udemy.com/course/build-library-management-system-python-pyqt5/",
      "bio": "Build Library Management System With Python & PyQt5 & MySQL , Generating Excel Reports , Users , App Themes",
      "objectives": [
        "Installing Python",
        "Installing PyQt5",
        "Installing MySQL Server",
        "Design nice desktop applications with QtDesigner",
        "Styling desktop applications with CSS",
        "Design a database using mysql workbench",
        "Connecting to mysql database with python",
        "inserting , selecting , updating , deleting database data from our app",
        "Adding project themes and change between them easly",
        "Adding new users",
        "Updating user data",
        "Login at startup"
      ],
      "course_content": {
        "Library System With Python & PyQt5 & MySQL": [
          "Course Introduction",
          "Join The Community",
          "Tools Setup",
          "Project Structure",
          "Design Our UI Structure",
          "Designe Day to Day Operations Tab",
          "Design Book Tab",
          "Design Users Tab",
          "Design Settings Tab",
          "Design Themes Tab",
          "Connect Our UI To Python Code",
          "Design Our DB On MySQL Workbench",
          "Coding The Main Buttons",
          "Coding Settings Tab",
          "Show Settings Data In TableWidget Part 1",
          "Show Settings Data In TableWidget Part 2",
          "Retrieving Settings Data In All Combobox",
          "Add New Book Tab",
          "Add Books Search",
          "Edit & Delete Book",
          "Adding Users Part 1",
          "Adding Users Part 2",
          "Add App Themes",
          "Adding CLients Tab",
          "Add New CLient",
          "Search , Edit , Delete CLient",
          "Show All Clients & Books",
          "Fixing Issues In The Project",
          "Adding Day-To-Day Operations Tab Part 1",
          "Adding Day-To-Day Operations Tab Part 2",
          "Design Login Window",
          "Add Login To Our Project",
          "Add Export Buttons In The Design",
          "Enable Export To Excel Part 1",
          "Enable Export To Excel Part 2",
          "Fixing Themes Window Issue in UI"
        ],
        "Install on Client Machine": [
          "Install Our DB On Client Machine",
          "Converting Our Project To exe",
          "source code",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "only python basics"
      ],
      "description": "In this course you'll learn how to build a Library System with PyQt5 and Python!\nPyQt5 is one of the best frameworks for developing desktop applications that looks awesome\nIn this course I'll be developing on a my Mac machine, but you should be able to follow along if you're on a Windows or Linux.  I'll show you how to download and install Python and PyQt5\nYou'll be able to build Desktop Applications  and simple business Applications when you're finished with this course.\nwe will build a library system with:\nadding new books\nadding books categories\nadding books Author\nadding books Publisher\nadding day to day operations for rent or retrieving books\nGenerate Excel reports from our data\nAdding new users with user login  and editing user data\n\n\nWHAT DO YOU NEED TO TAKE THIS COURSE?\nYou don't need any tools or special skills to take this course. I'll show you how to download and install everything you'll need for free (PyQt, Python, and the Pycharm).\n\nDO I NEED TO KNOW PYTHON TO TAKE THIS COURSE?\nsimple python basics!  it's a good idea to learn Python if you want to use PyQt5. But you don't have to know advanced Python to take this course. I'll walk you through everything you need to know.\nBuilding desktop applications with PyQt5 is very easy , and the course will make it very fun\n\n\nWhat you’ll learn\nInstalling Python\nInstalling PyQt5\nInstalling MySQL Server\nDesign nice desktop applications with QtDesigner\nStyling desktop applications with CSS\nDesign a database using mysql workbench\nConnecting to mysql database with python\ninserting , selecting , updating , deleting database data from our app\nAdding project themes and change between them easly\nAdding new users\nUpdating user data\nLogin at startup\n\n\n\n\nAre there any course requirements or prerequisites?\nsimple python skills is needed\nWho this course is for:\nThis course is aimed towards absolute beginners who want to learn how to  build desktop applications with PyQt5 and Python",
      "target_audience": [
        "any one want to build awesome desktop applications with python"
      ]
    },
    {
      "title": "Scala Programming In-Depth",
      "url": "https://www.udemy.com/course/scala-programming/",
      "bio": "Scala Programming From Scratch To Depth",
      "objectives": [
        "Scala Programming from scratch to in-depth, starting from simple Hello World programs, Deep diving into Data Structures, Operators (Mathematical, Logical, Conditional) to concepts of OOPs and Functional Programming with Programs solved.",
        "Scala In Depth"
      ],
      "course_content": {
        "Scala Indepth": [
          "Introduction to Data Engineering Career Path",
          "Day 1 - Introduction to Scala",
          "Day 2 - Scala Basics",
          "Day 3 - Intellij Installation",
          "Day 4 - Functions, Classes, objects",
          "Day 5 - Constructors",
          "Day 6 - Singleton object, Compaignion Classes and Objects and Case Classes and O",
          "Day 7 - Strings",
          "Day 8 - Pattern Matching and Regex",
          "Day 9A - Implicit class",
          "Day 9B - Conditional Statements and Loops",
          "Day 10- Packages and Import",
          "Day 11-Exceptional Handling",
          "Day 12- Traits, Value Class and Universal Trait",
          "Day 13- Arrays",
          "Day 14- Arrays",
          "Day 15- Functional Programming (1 of 3)",
          "Day 16- Functional Programming (2 of 3)",
          "Day 17- Functional Programming (3 of 3)",
          "Day 18A- Closures",
          "Day 18B - Collections",
          "Day 19 - Collections - List (Day 1 of 1)",
          "Day 20 - Collections - List (Day 2 of 2)",
          "Day 21 - Collections - Sets",
          "Day 22 - Collections - Map",
          "Day 23 - Tuples Options and Iterator",
          "Day 24 - File Handling",
          "Career Guidance"
        ]
      },
      "requirements": [
        "No Prerequisite. Only Basic Computer or Laptop. Course is taught in simple language so any one can understand."
      ],
      "description": "Learn Scala Programming From Scratch To Depth\n\n\nFrom Simple program to Data Structures to OOPS and Functional Programming. Every thing covered with Hands on programming.\n\n\nTaught in very simple english language so any once can follow the course easily.\n\n\nNo Prerequisites\n\n\nPerfect start point to learn scala for Big Data Spark, Play, Scalatra, Lift, Sinatra, etc\n\n\nAbout Scala:\nScala is a versatile and powerful programming language that combines functional and object-oriented programming paradigms. Originally created by Martin Odersky and released in 2003, Scala has gained popularity for its concise, expressive syntax and its ability to seamlessly integrate with Java, making it a preferred choice for developers seeking a smooth transition from Java to a more modern language.\nScala's key features include strong static typing, immutability, and pattern matching, making it an excellent language for building robust and maintainable software. It offers a rich set of libraries and frameworks, particularly for web and data applications, with Play Framework and Akka being prominent examples.\nOne of Scala's standout features is its support for functional programming, which allows developers to write concise, elegant code that's easier to reason about. The language also supports concurrent and parallel programming through actors and futures.\nScala is a popular choice in industries such as finance, where performance, scalability, and maintainability are critical. Its versatility, compatibility with existing Java codebases, and active community make it a compelling language for a wide range of software development tasks.",
      "target_audience": [
        "People looking to learn Scala to use in Big Data - Spark or to build Frameworks, Applications, etc"
      ]
    },
    {
      "title": "Learn Advanced Python Programming",
      "url": "https://www.udemy.com/course/learn-advanced-python-programming-r/",
      "bio": "Advanced Python",
      "objectives": [
        "Students will learn about some of the advanced topics in Python.",
        "It covers a lot of very interesting topics related to machine learning",
        "It covers the intuition part of different Python Concepts",
        "It covers some Advance Level Applications made in Python"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Python which can also be covered in this course."
      ],
      "description": "In this course you will be able to learn about a lot of advanced python programming topics. This course covers topics that are related to machine learning as well many other advanced python programming topics. Anyone who is interested in learning python advanced programming can enroll in this course. It covers all the levels may it be beginner level python programmer, intermediate level python programmer or advanced level python programmer, he/she can enroll in this course and when he completes this course he will surely be enriched with the new and the advanced concepts of python programming. Basics of python is the pre requisite of this course but don't worry at all, if you don't have the basic knowledge of python then I have uploaded a crash course at the very end of this course. You can always start from the beginning and cover the basic concepts from the crash course and after that start on with the advanced topics that are a part of this course. Someone who has got advanced knowledge of python programming can also enroll in this course as this course covers the latest trends and updates in the language. This course has the latest advanced topics of python covered and I hope that you learn a lot from this course. Thank You.",
      "target_audience": [
        "Anyone who wants to learn the advanced python programming topics can enroll in this course."
      ]
    },
    {
      "title": "Coding for Kids: Code in Scratch, HTML, Python & AI + More",
      "url": "https://www.udemy.com/course/programming-from-scratch/",
      "bio": "Designed by a computer science PhD and a Kid to teach kids how coding actually works, not just how to follow steps.",
      "objectives": [
        "Build and Play 5+ Unique Games",
        "Master Essential Coding Concepts Easily",
        "Understand the 'Why' Behind Coding Decisions",
        "Develop Critical Problem-Solving Skills",
        "Enhance Logical and Computational Thinking",
        "Transition Easily to Text-Based Coding",
        "Solve Real-World Problems With Code",
        "Build a Solid Foundation for Future Tech Careers",
        "Employ sound code blocks in a game",
        "Learn Debugging: Fix and Understand Errors",
        "Design Own Games with Professional Assets",
        "Grasp Core Computer Science Concepts",
        "Cultivate Creativity in Digital Project Design"
      ],
      "course_content": {},
      "requirements": [
        "All you require is a knowledge of how to operate your computer...nothing more"
      ],
      "description": "Discover the Joy of Programming: Your Path Starts Here!\nWho Should Enroll?\nThis engaging course is designed for young minds eager to dive into the world of coding—guided by you. Whether you're a parent nurturing your child's curiosity or a student aiming to develop future-ready skills, this course offers the perfect foundation. Give your child a powerful head start in coding and spark a lifelong interest in technology.\nNote: This course is intended for purchase by adults.\nWhat Will You Learn?\nIn today’s digital era, programming isn't just a technical skill—it’s a tool for creativity, critical thinking, and innovation. This course introduces students to the fundamentals of coding through an exciting, hands-on journey. Starting with Scratch, a beginner-friendly platform developed by MIT, students will build interactive games while learning core programming concepts.\nFrom there, the course expands into HTML, where students create their own web pages, and Python, where they take their first steps into one of the world’s most powerful and versatile programming languages. Each language is taught in a way that’s accessible, creative, and deeply rewarding.\nLed by Craig, an experienced educator with a PhD in educational technology, and Joshua, a young coding prodigy, the course combines expert instruction with youthful insight—making learning both effective and fun.\nWhy Choose Our Course?\nOur course stands out in three key ways:\nEngagement: We make learning to code an adventure. Students are drawn in through game development, website creation, and real-world Python projects.\nAccessibility: Starting with visual programming in Scratch, then advancing to HTML and Python, learners gain confidence and skills that scale with their growth.\nExpert Guidance: Craig’s decades of educational experience and Joshua’s relatable approach create a uniquely supportive and inspiring learning environment.\nCourse Features\nThis course is crafted to deliver a comprehensive and immersive learning experience. You’ll find:\nHigh-quality video lessons with clear visuals and excellent audio\nStep-by-step walkthroughs of coding projects\nDownloadable practice exercises and solutions\nA progression from visual coding to text-based programming, easing the transition for beginners\nJourney Through the Course\nHere’s how you’ll explore the exciting world of programming:\nIntroduction to Programming and Scratch\nGame Development - Part 1: Build your first game using Scratch\nGame Development - Part 2: Add creativity with advanced features\nGame Development - Part 3: Discover variables and how they power your code\nIntroduction to HTML: Create your own web pages with structure and style\nIntro to Python - Part 1: Learn the basics of syntax, logic, and automation\nIntro to Python - Part 2: Work on small projects that bring your code to life\nConclusion and Next Steps: Reflect on what you've learned and explore how to keep growing\nWhy This Course Is a Must\nWith over 20 years in IT and education, Craig has empowered learners around the globe to succeed in the digital age. His approachable teaching style makes even complex topics feel achievable. Joshua brings the energy and perspective of a young coder who understands what it's like to start from scratch—literally.\nEmbark on this exciting journey today and give your child (or yourself!) the gift of coding. From game design to web creation to real-world Python projects, this course is a launchpad into the digital future.\nProgramming is not just a skill—it’s a passport to creativity, problem-solving, and endless opportunity. And it all begins right here.",
      "target_audience": [
        "Students who are using or planning on learning to program",
        "Adults who would like to learn to program",
        "Anyone who would like an easy introduction to programming, without the technical talk"
      ]
    },
    {
      "title": "Python Programming: The Complete Course for Success",
      "url": "https://www.udemy.com/course/python-programming-the-complete-course-for-success/",
      "bio": "Become a Python Expert: Comprehensive Course Covering Fundamentals, Advanced Techniques & Practical Success Strategies",
      "objectives": [
        "Overview of algorithms and their applications",
        "Basic Python programming refresher",
        "Operations on lists and tuples",
        "Use cases and applications",
        "Applications of stacks (e.g., backtracking, browser history)",
        "Introduction to queues and types (FIFO, priority queues)",
        "Implementing linked lists in Python",
        "Binary trees, binary search trees, AVL trees",
        "Basics of graph theory and types of graphs",
        "Applications of hash tables",
        "Bubble sort, selection sort, insertion sort",
        "Merge sort, quicksort, heap sort",
        "Implementing linear and binary search algorithms",
        "Principles of dynamic programming",
        "Heaps, tries, and segment trees",
        "Implementing and using advanced data structures"
      ],
      "course_content": {
        "Module 1: Introduction to Data Structures and Algorithms": [
          "Definition and importance of data structures",
          "Overview of algorithms and their applications",
          "Basic Python programming refresher"
        ],
        "Module 2: Basic Data Structures in Python": [
          "Operations on lists and tuples",
          "Use cases and applications",
          "Understanding stack data structure",
          "Implementing stacks using lists",
          "Applications of stacks (e.g., backtracking, browser history)",
          "Introduction to queues and types (FIFO, priority queues)",
          "Implementing queues using lists and deque",
          "For Loops and Range Function"
        ],
        "Module 3: Advanced Data Structures": [
          "Implementing linked lists in Python",
          "Use cases and applications of linked lists",
          "Binary trees, binary search trees, AVL trees",
          "Tree traversal techniques (in-order, pre-order, post-order)",
          "Basics of graph theory and types of graphs",
          "Graph traversal algorithms (BFS, DFS)",
          "Understanding hash functions and hash tables",
          "Applications of hash tables (e.g., caching, indexing)"
        ],
        "Module 4: Algorithmic Techniques and Sorting Algorithms": [
          "Divide and conquer, greedy algorithms, dynamic programming",
          "Bubble sort, selection sort, insertion sort",
          "Merge sort, quicksort, heap sort",
          "Comparing the efficiency of different sorting algorithms"
        ],
        "Module 5: Searching Algorithms": [
          "Implementing linear and binary search algorithms",
          "Understanding algorithm efficiency and use cases",
          "Dijkstra's algorithm for shortest paths"
        ],
        "Module 6: Recursion and Dynamic Programming": [
          "Principles of dynamic programming"
        ],
        "Module 7: Advanced Topics and Optimization Techniques": [
          "Heaps, tries, and segment trees",
          "Techniques to optimize algorithms for better performance",
          "Memory and space optimization strategies"
        ]
      },
      "requirements": [
        "No prior programming experience is required."
      ],
      "description": "Unlock your full potential with Python Programming: The Complete Course for Success! Whether you're a beginner or looking to sharpen your skills, this comprehensive course will guide you through the fundamentals of Python, one of the most popular and versatile programming languages. Learn to write clean, efficient code from scratch and build practical projects that reinforce your knowledge.\n\n\nWhat You'll Learn:\nPython fundamentals: variables, data types, loops, and functions\nObject-Oriented Programming (OOP) concepts\nHow to work with libraries like NumPy, Pandas, and Matplotlib\nWeb scraping, data analysis, and automation techniques\nBest practices for debugging, testing, and writing efficient code\n\n\nWhy This Course?\nThis course is designed with real-world applications in mind. You’ll not only master Python syntax but also learn how to apply it in real-life scenarios like web development, data analysis, and automation. With hands-on exercises and interactive coding challenges, you’ll gain the confidence to tackle complex projects and prepare for your career in tech.\n\n\nStep-by-step lessons, practical examples, and engaging challenges ensure you stay motivated throughout the learning process. By the end of this course, you’ll have a deep understanding of Python and the ability to solve problems with creativity and efficiency.\n\n\nStart your journey to success in Python programming today!",
      "target_audience": [
        "Anyone interested in Python Programming Complete Course for Success",
        "Anyone interested in automating tasks or diving into data analysis"
      ]
    },
    {
      "title": "C# Database Driven WinForm Apps (step by step projects)",
      "url": "https://www.udemy.com/course/csharp-database-programming/",
      "bio": "Project-based Learning: how to use C# Windows Forms and Microsoft Access Database to create small database driven apps",
      "objectives": [
        "Students will understand the basics of database programming using C# and MS Access database.",
        "Students will become familiar with database programming concepts.",
        "Students will be able to create small database-driven desktop apps.",
        "Students will understand basics of database concepts.",
        "Students will be able to create and modify Windows Forms and bind form objects with database objects.",
        "Students will be ready to tackle more complex projects."
      ],
      "course_content": {},
      "requirements": [
        "Visual Studio",
        "Basic familiarity with Windows Forms",
        "Basic C# Skills (loops, conditional statements, very basics of OOP etc.)",
        "Basic knowledge of Database terminology"
      ],
      "description": "WARNING!  Some students reported that the MS Access database used in this course will not work with the current version MS Office 365, even with legacy MS Access database redistributable engine. In majority of cases the issue is solved by installing 2016 version of the MS Access database redistributable engine (please see Q&A section of the course). If this doesn't work for you and you experience problems after purchasing the course, please note that Udemy offers 30-day money back guarantee.\nI created this course with a C# beginner in mind. Someone, who knows the basic C# concepts, and knows his way around loops, conditional statements, arrays, and very basics of object oriented programming, but never really had a chance to incorporate any of it with a relational Database project. If that describes you, then this is definitely a course for you.\nFor this course, I decided to use a Microsoft Access database, as that is a common database small business use around the world. Now, full disclosure: we won't be creating any earth shattering application and there will be a lot of room for improving our code. What we ARE going to be doing is LEARNING how to use with C# with MS Access, and we'll use a simple, but fairly common scenario - a small books database app.\n\nThe goal of this course is three fold\nFirst, is to show you how things work\nSecond, help you understand how things work under the hood.\nAnd third, to drill the basics so that they become a second nature to you.\nThis course concentrates solely on using Access database with C\nWe will use Windows Forms as the user Interface and we'll use form events to code the application logic to. This way, we won't get distracted with million other little things that come into play for truly well designed commercial app. Like I said, the goal here is to LEARN the basics, and to RETAIN the knowledge.\nFrom my own experience, from the beginners point of view, nothing is worse than taking a course to learn the basics, only to suddenly be introduced to a dozens of advanced real world concepts, that completely derail you from learning what you came here to learn in the first place...which is, the basics. What good is it for a beginner to watch someone build professional grade app when three quarter of the stuff presented goes right over your head? Not in this course.\nHowever, with that being said, if you go through this course, and if you code along, I am absolutely sure that at the end, you will have great foundation to build on, and you will be able to move to more sofisticated applications and coding styles.\nThe course consists of several sections. The first few sections introduce the basic concepts, such connecting to database, browsing through the records, binding database fields with form objects in the windows forms and other core concepts related to databases as well as windows forms.\nFirst project is a small Data Entry application. This project does not include database yet. We will create a simple data entry form and explore few properties and form objects. This project serves as a simple introduction or a refresher, and if you are familiar with basics of windows forms and the concept of properties and events, then you can safely skip this project. However, there still may be a few things you could learn from this project, as we will be working with timer, key press events, mouse events, and form elements in the run time.\nSecond project will be a mix of theory and practice. We'll spend a few minutes going through some basic theory where we will discuss some basic database concepts, SQL commands, and C# database objects and after each lesson, I will demonstrate a practical use of each of the concepts.\nIn our third project, we start putting the theory into practical use. It'll be just a simple project that loads data into our form from one table, but we will see in action how to connect to the database and how to select records from the table. Ir will also be a little departure from previous examples, as we will use a different database.\nFourth project is na SQL tester. Here, we will be able to test SQL commands. We'll use all the knowledge we acquired thus far, and introduce some cool techniques in the Windows Forms allowing us to create form elements at run time. And, we will have a small, but functional practice environment for SQL commands.\nFifth project is the last, and most comprehensive one. We will create a small books database app. Until this project, we were only displaying records, but now, we will learn to add new records, edit or delete existing records, we will work with multiple forms and tables, put in place an application state for different actions - such as enable and disable controls based on user's action, and also learn how to pass data from one form to another.\nThis whole course is designed as follow along course. Meaning, you are encouraged to code along with me. Everything is on the video, there are no code snippets being magically pasted into the Visual Studio. Also, I don not want you to just learn the concepts and then forget them a week later. I want you to remember and retain what you learn in this course.\nAnd let's face it - that is only possible when you not only work on the project along with me, but also try to do the exercises. Trying to solve problems on your own is at the core of learning to program. However, I won't just leave you figure things on your own, I am well aware that sometimes it may feel overwhelming. So I will also show you my solutions.\nAnd one more thing that makes or breaks learning to program - using what you learn, and using it frequently. Therefore, I code even the repetitive things from scratch and I don't simply just refer you to previous lessons. But that means, that if you just watch the course, it will feel repetitive. However, if you actually code along, I guarantee you will feel like you learn, and also REMEMBER what you learned.\nBut, If you prefer more instructional videos, that show everything once and move faster, then this course is not for you. Please keep that in mind before purchasing the course. I encourage you to watch some of the sample videos so you get a feel for the course structure and my teaching style.\nNow, I made the videos short and to the point. Most videos are only around 5 minutes long. That is deliberate, so each video is a small learning step that is easy to follow.\nAlright, there's a lot of coding to be done. So let's get to it!",
      "target_audience": [
        "Beginner C# developer who wants to create small database driven Windows Forms apps",
        "Selft Taught programmers or students interested in C# and databases",
        "Anyone seeking to get entry level position or internship,",
        "Students who like to learn by hands-on examples."
      ]
    },
    {
      "title": "Introduction to Computer Programming for Beginners 2025",
      "url": "https://www.udemy.com/course/philosophy-fundamentals-computer-programming/",
      "bio": "Learn the basic principles of Computer Programming and get started with C#, SQL, Java, C, C++ and Python",
      "objectives": [
        "Get started with C#, SQL, Java, C, C++ and Python",
        "The main principles and fundamentals of Computer Programming",
        "The main code constructs in C#, SQL, Java, C, C++ and Python",
        "How to become a great Programmer",
        "The main phases of the Software Development Life Cycle"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course! What will you Learn?",
          "The Philosophy of Computer Programming",
          "How Will this Course Help You?",
          "Terminology and Definitions",
          "Introduction"
        ],
        "You and Programming (Updated)": [
          "Section Overview",
          "The Right Reasons for Choosing Programming as a Field of Study",
          "Programming is Science but also an Art",
          "How to Cultivate a Growth Mindset for Learning Programming",
          "How to Use Online Communities and Forums for Programming Help (New)",
          "Skills Required for Programming aka the Right Ingredients",
          "Section Recap",
          "You and Programming"
        ],
        "Main Programming Principles": [
          "Section Overview",
          "Why do you Need to Know the Main Programming Principles?",
          "Abstraction",
          "Algorithms",
          "Data Structures",
          "Functions",
          "Inheritance",
          "Loops",
          "Branch Logic",
          "Exception Handling",
          "Section Recap",
          "Main Programming Principles"
        ],
        "Programming Languages": [
          "Section Overview",
          "Popular Programming Languages",
          "How to Choose a Programming Language",
          "Working with new Programming Languages",
          "Do you Need a Database?",
          "Data Access",
          "Section Recap",
          "Programming Languages"
        ],
        "Programming and the Software Development Life Cycle": [
          "Section Overview",
          "Programming is a Fun, Problem-Solving Technique",
          "Requirements Extraction and Analysis",
          "Control Flow Graph: Diagrams Do Help",
          "Specifications",
          "Software Design",
          "Development not Just Coding",
          "Testing and Debugging",
          "Quality Assurance",
          "Maintenance: That's Why you Need to Write Clean Code",
          "Section Recap",
          "Programming and the Software Development Life Cycle"
        ],
        "Let’s Use Some Programming Languages": [
          "Section Overview",
          "C#",
          "SQL",
          "Java",
          "C",
          "C++",
          "Python",
          "Your Next Programming Language",
          "Section Recap",
          "Let’s Use Some Programming Languages"
        ],
        "Databases (Updated)": [
          "About this Section",
          "How to Install SQL Server 2019 on a Standalone Windows Machine",
          "What is SQL Server Management Studio (SSMS)?",
          "How to Download and Install SQL Server Management Studio (SSMS)",
          "Connecting to SQL Server Using SQL Server Management Studio (SSMS)",
          "Creating Databases and Other Objects in SQL Server",
          "How to Offline Install SQL Server on Ubuntu Linux",
          "Benefits of Primary Keys in Database Tables",
          "Benefits of Using Stored Procedures in Databases",
          "Differences Between Batch and Streaming Data",
          "Useful T-SQL Scripts for SQL Development",
          "How to Find the Version of a SQL Server Instance",
          "What are T-SQL Snippets in SSMS?",
          "What are Non-Relational Databases (NoSQL)?",
          "What is Data Security?",
          "What is Transparent Data Encryption (TDE) in SQL Server?",
          "Best Practices for Securing Databases",
          "Data Warehousing vs. Data Lakes: Key Differences Explained",
          "Overview of Index Types and Uses in SQL Server"
        ],
        "Let’s Build a Simple Text Editor (Guide)": [
          "Section Overview",
          "Designing the Graphical User Interface (GUI)",
          "Adding Event Handling Code",
          "How to Add an Exception Handling Mechanism"
        ],
        "Let’s Build a Simple Image Viewer (Guide)": [
          "About this Section",
          "Building a Simple Image Viewer Using WinForms and C# - Step by Step Guide"
        ],
        "Special Topics (Updated)": [
          "Understanding Key Programming Terminology",
          "Section Overview",
          "How to Write to Flat File Using C#",
          "How to Read From Flat File Using C#",
          "How to Write to Flat File Using SQL in SQL Server",
          "How to Read From Flat File Using SQL in SQL Server",
          "How to Write to Flat File Using Java",
          "How to Read From Flat File Using Java",
          "How to Write to Flat File Using C",
          "How to Read From Flat File Using C",
          "How to Write to Flat File Using C++",
          "How to Read From Flat File Using C++",
          "How to Write to Flat File Using Python",
          "How to Read From Flat File Using Python",
          "How to Connect to SQL Server from a Visual C++ Program",
          "Deployment Options for Your .NET Apps",
          "Implementing Multithreading in .NET WinForms with the BackgroundWorker Class",
          "How to Set Filters for OpenFileDialog and SaveFileDialog in C#",
          "Essential Steps for Problem-Solving and Algorithmic Thinking",
          "How to Approach Problem-Solving in Programming",
          "Common Beginner Mistakes and How to Avoid Them",
          "Common Pitfalls in SQL Development"
        ]
      },
      "requirements": [
        "No course requirements",
        "This course can be taken from absolute beginners to experienced Programmers"
      ],
      "description": "Do you want to learn computer programming but don’t know where to start?\nThis beginner-friendly course is the perfect place to start your coding journey. No prior experience is required — we’ll go step by step from the very basics of programming to writing your first working programs.\nBy the end of this course, you’ll have the confidence to read, write, and understand simple code, preparing you for more advanced programming languages and real-world projects.\n\n\nWhat you’ll learn:\nUnderstand the core concepts of computer programming (variables, loops, functions, logic)\nWrite your first programs step by step with clear explanations\nApply programming fundamentals to solve real-world problems\nBuild a strong foundation to move into languages like Python, Java, or C#\nGain confidence to continue your coding journey without feeling overwhelmed\n\n\nWhy this course?\nDesigned specifically for absolute beginners\nSimple explanations with practical examples (no unnecessary jargon)\nHands-on exercises to reinforce learning\nTaught by an experienced programmer with 20+ years of coding and teaching experience\nRegular updates to keep your learning fresh\n\n\nWho is this course for?\nAbsolute beginners who want to learn programming from scratch\nStudents preparing for computer science or IT studies\nProfessionals who want to understand coding basics to enhance their career\nAnyone curious about how coding works and how programs are built\n\n\nReady to take the first step into the world of coding?\nEnroll now and start your programming journey today!",
      "target_audience": [
        "Beginner/Junior Programmers that are just getting started with Computer Programming",
        "College/University Computer Science Students",
        "Any Programmer who is looking to improve his/her skill set on Computer Programming",
        "People who are just getting started with Computer Programming"
      ]
    },
    {
      "title": "C# and Windows Forms Exercises for Beginners (step by step)",
      "url": "https://www.udemy.com/course/starting-out-with-visual-c-sharp-coding-exercises-for-beginners/",
      "bio": "Learn Visual C# .net with WinForms by doing programming projects for beginners",
      "objectives": [
        "Practice and understand loops, arrays, structures, LINQ, Databases, OOP and more",
        "Code beginner and intermediate projects using C#",
        "Become an intermediate programmer by understanding the how and why of each line in your program",
        "Think like a programmer",
        "Uderstand project requirements and choose the right approach to each solution",
        "Construct, identify, and use Windows Form Controls effectively"
      ],
      "course_content": {
        "Introduction": [
          "About the course"
        ],
        "Introduction To Visual C#: Getting started with forms and controls": [
          "Latin Translator",
          "Clickable Images",
          "Card Identifier",
          "Joke and Punch Line",
          "Heads or Tails",
          "Orion Constellation"
        ],
        "Processing Data": [
          "Name Formatter",
          "Tip, Tax, and Total Calculator",
          "Distance Traveled Calculator",
          "Sales Tax and Total",
          "Celsius and Fahrenheit Temperature Converter",
          "Body Mass Index",
          "Sentence Builder",
          "How Much Insurance?",
          "Cookie Calories",
          "Calorie Counter",
          "Automobile Cost",
          "Paint Job Estimator",
          "Property Tax Calculator",
          "Stadium Seating"
        ],
        "Making Decisions": [
          "Roman Numeral Converter",
          "Mass and Weight",
          "Magic Dates",
          "Color Mixer",
          "Distance Converter",
          "Book Club Points",
          "Software Sales",
          "Body Mass Index (revisited)",
          "Change For a Dollar Game",
          "Fat Percentage Calculator",
          "Time Calculator",
          "Workshop Selector"
        ],
        "Loops, Files, And Random Numbers": [
          "Distance Calculator (revisited)",
          "Distance Calculator (reading from a text file)",
          "Celsius-to-Fahrenheit Table",
          "Population Growth",
          "Pennies For Pay",
          "Ocean Levels",
          "Calories Burned",
          "Tuition Increase",
          "Dice Simulator",
          "Addition Tutor",
          "Random Number Guessing Game",
          "Factorial Of a Number",
          "Random Number File Writer",
          "Random Number File Reader"
        ],
        "Modularizing the Code with Methods": [
          "Retail Price Calculator",
          "Falling Distance",
          "Kinetic Energy",
          "Calories from Fat and Carbs",
          "Joe's Automotive Job Cost Calculator",
          "Hospital Charges",
          "Present Value Calculator",
          "Prime Number Finder",
          "Prime Number Finder and List Creator",
          "Rock, Paper, Scissors Game"
        ],
        "Arrays and Lists": [
          "Total Sales Calculator",
          "Sales Analyzer",
          "Charge Account Finder",
          "Driver's License Exam",
          "World Series Champions",
          "Name Search Part 1",
          "Name Search Part 2",
          "Population Data Analyzer",
          "Tic Tac Toe Game Simulator Part 1",
          "Tic Tac Toe Game Simulator Part 2",
          "Tic Tac Toe Game Simulator Part 3",
          "Tic Tac Toe Game Simulator Part 4",
          "Jagged Array of Exam Scores"
        ],
        "More About Processing Data": [
          "Word Counter",
          "Average Number of Letters",
          "Sentence Capitalizer",
          "Vowels and Consonants Finder",
          "Most Frequent Character Finder",
          "Word Separator",
          "Pig Latin",
          "Sum of Numbers in a String",
          "Alphabetic Phone Number",
          "Morse Code Converter",
          "Drink Vending Machine",
          "Slot Machine Simulator"
        ],
        "Classes and Multiform Objects": [
          "Pet Class",
          "Car Class",
          "Personal Info Class",
          "Employee Class",
          "Retail Item Class",
          "Dorm and Meal Plan Calculator Part 1",
          "Dorm and Meal Plan Calculator Part 2",
          "Dorm and Meal Plan Calculator Part 3",
          "Dorm and Meal Plan Calculator Part 4",
          "Dorm and Meal Plan Calculator Part 5",
          "Email Address Book"
        ],
        "Inheritance and Polymorphism.": [
          "Employee and Production Worker Classes",
          "Shift Supervisor Class",
          "Team Leader Class",
          "Person and Customer Classes",
          "Preferred Customer Class"
        ]
      },
      "requirements": [
        "Students should have installed Visual Studio in order to follow along.",
        "Students should be actively learning C# and Windows Forms",
        "Students should be familiar with the programming concepts presented in the exercises"
      ],
      "description": "Visual C# is an excellent programming language. It’s the main language in the .Net family of languages, and as such, it allows you to program some truly amazing solutions. So, congratulations on choosing to learn this amazing language. :-)\n\nAs it is common among beginner programmers, the enthusiasm to learn often is not enough to make the leap from beginner to intermediate.\nThe bad news is: code fear is real, and it hinders, or even stops your progress. The good news is: you can learn to eliminate it! And all it takes is a little practice and determination. And that’s where this course will help you greatly!\nThe course goes over C# programming projects from a popular college C# textbook: \"Starting Out with Visual C#\" by Tony Gaddis. I show you how to put the theory you learned into practice by showing you how to solve each exercise and walking you through all the Why’s and How’s.\nBecause the course goes over ALL exercises from one text book, some of the concepts are repeated across multiple exercises. The course is not meant to follow any particular guidline where each exercise builds up on the previous one, but rather serves as a comprehensive reference, allowing students to skip exercises that present concepts the student is already familiar with.\nYou and I will go on a journey to program simple solutions using basic programming techniques, all the way to more complex Database and OOP solutions.\nIn the process, you will learn the ins and outs of C# language. You will learn how to translate the project requirements into a working code. You will learn to use many different programming concepts, such as Conditional Statements, Loops, Arrays, Multi-dimensional arrays, LINQ, OOP, databases… and pick the right one for your solution. But above all, you will learn to think like a programmer!\nThis course is all about practice. Therefore, to benefit from this course, you need to be an active student. It doesn't matter if you are self-taught or attend a programming course. What matters is the time and effort you are willing to put into learning and practicing your skills.\nThere are no lectures in this course. However, I do my best to explain what I am trying to accomplish with each line of code, and touch on common pitfalls, too.\nThis is a course for beginner C# .net programmers who need to put the concepts and theory they learned into practice and for people who prefer to learn by doing.\nIf that's you, then let's start coding!",
      "target_audience": [
        "The course is best suited for students taking C# classes, or self-taught students.",
        "Beginners who are currently learning how to program in C# and need a guided practice exercises.",
        "Students who need to put the concepts and theory they learned into practice.",
        "Beginner C# .Net programmers seeking to cement the knowledge by doing short programming projects that are challenging, yet not out of his/her skill set exercises.",
        "Students who take C# classes and struggle with their homework, or students who need a little help or a reference will love this course."
      ]
    },
    {
      "title": "Introduction to R Programming",
      "url": "https://www.udemy.com/course/introduction-to-r-programming-w/",
      "bio": "Basics of R Software",
      "objectives": [
        "Any scientific task without the knowledge of software is difficult to imagine and complete in the current scenario.",
        "R is a free software that is capable of handling mathematical and statistical manipulations.",
        "R has its own programming language as well as built in functions to perform any specialized task.",
        "Intended to learn the basics of R software in this course."
      ],
      "course_content": {
        "Basic fundamentals of R": [
          "Why R and Installation Procedure",
          "Help_Demonstration_Examples_Packages and Libraries",
          "Command line_Data Editor and RStudio",
          "Basics and R as a Calculator",
          "R as Calculator_Builtin Functions and Assignments",
          "Quiz-1"
        ],
        "Basics of Calculations": [
          "Functions and Matrices",
          "Matrix Operations",
          "Matrix Operations (cont'd.)",
          "Missing data and Logical operators",
          "Logical Operators",
          "Truth table and Conditional executions",
          "Quiz-2"
        ],
        "Basics of Calculations and Data Management": [
          "Conditional Executions and Loops",
          "Sequences",
          "Sequences (cont'd.)",
          "Repeats",
          "Sorting and Ordering",
          "Quiz-3"
        ],
        "Data Management with Lists, Vector Indexing and Factors": [
          "Lists",
          "Vector Indexing",
          "Factors",
          "Quiz-4"
        ],
        "Strings-Display and Formatting": [
          "Print and Format functions",
          "Print and Format functions with Concatenate",
          "Paste Function",
          "Splitting",
          "Replacement and Manipulations",
          "Replacement and Evaluation",
          "Quiz-5"
        ],
        "Data Frames and Data Handling": [
          "Data Frames",
          "Data Frames (cont'd.)",
          "Data Frames (cont'd.)",
          "Importing CSV and Tabular Data Files",
          "Importing Data Files of Other Software and Redirecting Output",
          "Quiz-6"
        ],
        "Final Practice Exam": [
          "Final Practice Test"
        ]
      },
      "requirements": [
        "Mathematics background up to class 12 is needed.",
        "Having some preliminary knowledge will be helpful but not necessarily mandatory."
      ],
      "description": "Any scientific task without the knowledge of software is difficult to imagine and complete in the current scenario. R is a free software that is capable of handling mathematical and statistical manipulations. It has its own programming language as well as built in functions to perform any specialized task. We intend to learn the basics of R software in this course.\nAll industries involved in mathematical and statistical computations, programming and simulations and having R & D setup will use this R Programming course.",
      "target_audience": [
        "UG/PG students of Science and Engineering"
      ]
    },
    {
      "title": "Projects in Java",
      "url": "https://www.udemy.com/course/learn-java-by-building-projects/",
      "bio": "Master Java Programming Building Ten Projects",
      "objectives": [
        "Learn Java Programming",
        "Master Java APIs",
        "Learn proper development practices",
        "Build Projects using java"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Learn to Build a Media Player in Java": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "Learn to Build a Block Breaker Game in Java": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "Learn to Develop a Messenger in Java": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "Use Database in Java": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "Workload Distribution System Using Akka": [
          "1",
          "2",
          "3",
          "4",
          "5"
        ],
        "Course Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of Java"
      ],
      "description": "Java is the world most popular language and it powers billions of devices and systems worldwide. It is one of the most sought after programming skill and provide ample jobs and freelance opportunities. We bring together best of Java training with our unique offering where you will learn the most of the popular java APIs building ten assorted projects. It will help you learn the correct use of Java API along with best development practices.\nProject 1: Media Player\nObjectives: Create a media player using JavaFX with Sliders and JavaFX menus. The media player will be able to play audio files and video. Sliders will control the position in the media and the level of the volume.\nProject 2: Game\nObjectives: Manipulate Images with user input and collisions. Threads will be used to update image positions to create animation. KeyListeners will be used to update a position of a piece in the game.\nProject 3: Messenger\nObjectives: Create GUI using swing objects and use Java dot net to pass messages to and from clients. A server will run waiting for messages from clients. Users can login with a client by choosing a username. The server will send login and logout prompts to all logged in users.\nProject 4: Database Explorer\nObjectives: Continue to use Swing objects to create GUIs. Use MySQL drivers to connect and execute queries on a database. Information retrieved will be stored and displayed in JTable.\nProject 5: Akka\nObjectives: Use Akka to create a workload distribution system using Actors. An Actor System will create actors to process a range of numbers to check for primes. Akka will be used to utilize system resources more effectively.",
      "target_audience": [
        "Java Programmers",
        "Developers who want to learn Java programming"
      ]
    },
    {
      "title": "Advanced Ruby Programming: 10 Steps to Mastery",
      "url": "https://www.udemy.com/course/expert-ruby-programming-ten-steps-to-mastery/",
      "bio": "Take your Ruby programming to the next level with Huw Collingbourne's simple guide to advanced Ruby coding.",
      "objectives": [
        "Encapsulation and data hiding",
        "Singleton classes and methods",
        "Exception handling",
        "Threads and fibers",
        "Modules and mixins",
        "File handling",
        "YAML and Marshal",
        "Regular Expressions",
        "Metaprogramming"
      ],
      "course_content": {
        "Getting ready to go further in Ruby": [
          "Introduction",
          "Welcome To The Course",
          "How to follow this course",
          "Advanced Ruby Course Notes",
          "Code Archive",
          "The Book Of Ruby (course eBook)",
          "The Book Of Ruby paperback (exclusive discount)",
          "Conditional Statements",
          "Boolean tests and operators",
          "Tests and Conditions"
        ],
        "Classes, class methods and singletons": [
          "Class Methods",
          "Class methods and variables in use",
          "Singleton methods and classes",
          "Class methods and variables"
        ],
        "Arguments, return values and encapsulation": [
          "Passing Arguments and Returning Values",
          "Encapsulation and information hiding",
          "Arguments and Encapsulation"
        ],
        "Exception Handling": [
          "Recovering from Errors",
          "The Exception class hierarchy",
          "Exceptions"
        ],
        "Blocks, Procs and Lambdas": [
          "What are Blocks?",
          "Blocks In Depth",
          "Blocks, call and yield"
        ],
        "Symbols, Threads and Fibers": [
          "Symbols",
          "Bookofruby Ch11",
          "Threads and Fibers",
          "Symbols and Threads"
        ],
        "Modules and Mixins": [
          "Mixed-in Modules",
          "Modules and Classes",
          "Modules In Depth",
          "Modules"
        ],
        "Files, YAML and Marshal": [
          "Files and IO",
          "YAML",
          "Marshal",
          "Dealing with files"
        ],
        "Regular Expressions": [
          "Regular Expressions – an overview",
          "Processing files with Regular Expressions",
          "Regular expressions"
        ],
        "Dynamic Ruby and metaprogramming": [
          "Dynamic features of Ruby",
          "Writing Ruby programs at runtime!",
          "Metaprogramming"
        ]
      },
      "requirements": [],
      "description": "Advanced Ruby: a 2nd-level course. If you have already done some Ruby programming, this course will help to take your coding to the next level. It explains some of the more advanced features of Ruby including blocks and procs, threads, regular expressions, exception handling, singletons and metaprogramming. The course is based on Huw Collingbourne's book, The Book Of Ruby (a copy of 3rd PDF edition of the book is supplied with this course). All the source code is provided in the code archive. This course can be used with any editor or IDE and on any operating system that supports Ruby. If you are ready to go beyond the basics and gain a deeper understanding of how Ruby really works, this course is for you.\nNote: If you're new to programming, check out Ruby Programming for Beginners (now with over 24,000 students enrolled!).",
      "target_audience": [
        "This course is for anyone who already knows the fundamentals of Ruby and wants to take their Ruby coding skills to a higher level. Here you'll learn the tricks and techniques of the Ruby masters"
      ]
    },
    {
      "title": "C in Depth: The Complete C Programming Guide for Beginners",
      "url": "https://www.udemy.com/course/c-programming-beginners-advanced/",
      "bio": "C Programming For Beginners. Also Covers Advanced C Language Concepts with a Step by Step Practical Approach.",
      "objectives": [
        "Learn all Important Concepts of C",
        "Understand Keywords, Variables and Data Types",
        "Understand Comments and Operators",
        "Implement Statements",
        "Apply Loops",
        "Implement Functions",
        "Use Arrays",
        "Apply Pointers",
        "Use String and Method",
        "Understand File Handling",
        "Complete Projects"
      ],
      "course_content": {},
      "requirements": [
        "A Laptop connected with Internet",
        "Netbeans IDE"
      ],
      "description": "Welcome to C in Depth: The Complete C Programming Guide\nC is the most popular and widely used programming language for both systems and application development.\nC Language is very fast, portable and platform Independent and is a significant first step for new programmers.\n100% MONEY-BACK GUARANTEE\nThis course comes with a 30-day money back guarantee. If you're not happy, ask for a refund, all your money back, no questions asked.\nAt the end of C in Depth: The Complete C Programming Guide, you will be able to:\nLearn all Important Concepts of C\nUnderstand Keywords, Variables and Data Types\nUnderstand Comments and Operators\nImplement Statements\nApply Loops\nImplement  Functions\nUse Arrays\nApply Pointers\nUse String and Method\nUnderstand File Handling\nComplete Projects\nThis course is developed by Industry Expert and covers all relevant concepts so that you can apply them at your Work with ease. Get Lifetime access and 30 Days 100% Money Back Guarantee by Purchasing this course now. This course is now available at the best price and the price can increase anytime. Taking action and buying this course now is better than doing nothing!\nJoin in, As for learning C Language,  this course is the authority and equally important you will get a certification of completion that validates your skills.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "Anyone who wants to learn C Programming"
      ]
    },
    {
      "title": "Java Programming – the Master Course",
      "url": "https://www.udemy.com/course/java-programming-the-master-course/",
      "bio": "From Java Beginner to Java Expert in ten simple steps",
      "objectives": [
        "Master Java programming concepts from the ground up",
        "Use the source code examples to learn step-by-step",
        "Learn the basics - perfect for beginners",
        "Understand the special features of Java: object orientation, garbage collection, cross-platform development and serialization",
        "Videos explain everything in minute detail",
        "Read the supplied eBook, The Little Book Of Java, to explore the topics in even more depth"
      ],
      "course_content": {},
      "requirements": [
        "How to use a PC or Mac"
      ],
      "description": "Java is one of the most important of all computer programming languages. But learning Java can seem like a daunting task. Not any longer! With this course you will learn Java step-by-step, from the basics right through to advanced topics. This course is, quite simply, the fastest, easiest way to learn Java programming.\nThe course instructor Huw Collingbourne has already taught over 22,000 people to program on Udemy. This Java Programming Master Course includes over 85 videos to explain every topic in detail. All the source code is provided in sample programs ready-to-run on a PC or a Mac. And there is even a 125-page eBook, The Little Book Of Java, to provide even more information on all the topics discussed.\nIf you want to master Java programming quickly and easily, this is course for you.\nWhat you will learn\nThe fundamentals of programming – from the ground up\nHow to program Java on a Mac or on Windows\nThe nitty-gritty details of the Java language\nAdvanced topics such as generics, exception-handling, streams and serialization\nWho should take the course\nBeginners – if you've never coded before, you can learn Java step by step\nProgrammers switching to Java from some other language such as Ruby, Python, C or C#\nCross-platform developers – Java programs run on all major operating systems\nAnyone who wants to make a career in programming",
      "target_audience": [
        "Beginners – if you’ve never coded before, you can learn Java step by step",
        "Programmers switching to Java from some other language such as Ruby, Python, C or C#",
        "Cross-platform developers – Java programs run on all major operating systems",
        "Anyone who wants to make a career in programming"
      ]
    },
    {
      "title": "Python For Data Science - Real Time Coding Exercises",
      "url": "https://www.udemy.com/course/python-for-data-science-real-time-exercises/",
      "bio": "Practice all Python topics used in Data Science",
      "objectives": [
        "Python Programming Language from Scratch",
        "Gaining practical experience with real-time exercises",
        "Python Datatypes - List, Tuple, Set, Dictionary",
        "Understanding the concept of Programs in Python",
        "Writing and using Python functions",
        "Various Functions - Range, Input, Map, Filter, Split, Enumerate, Zip, Unzip, Def, Lambda",
        "Loops in Python - For loop, While loop etc",
        "Indexing, Slicing, Datatype Casting in Python",
        "You can download each lecture video and source code files"
      ],
      "course_content": {
        "Start Jupyter Notebook": [
          "Install Jupyter Notebook"
        ],
        "Python Programming": [
          "Variables in Python",
          "Variables",
          "Data Types in Python",
          "Data Types",
          "Python Lists",
          "List",
          "Python Tuples",
          "Tuples",
          "Python Sets",
          "Sets",
          "Python Dictionary",
          "Dictionary",
          "Strings in Python",
          "Strings",
          "Datatype Casting in Python",
          "Datatype Casting",
          "Python - Range Function",
          "Range Function",
          "Python - Input Function",
          "Input Function",
          "Indexing & Slicing in Python",
          "Indexing",
          "Python Operators",
          "Operators",
          "Python - Map Function",
          "Map Function",
          "Python - Filter Function",
          "Filter Function",
          "Python - Split Function",
          "Split Function",
          "Python - Enumerate Function",
          "Enumerate Function",
          "Python - Zip & Unzip Function",
          "Zip & Unzip Function",
          "Python - Def Function",
          "Def Function",
          "Python - Lambda Function",
          "Lambda Function",
          "If-Else in Python",
          "If-Else",
          "For Loop in Python",
          "For Loop",
          "While Loop in Python",
          "While Loop",
          "Python - Break & Continue Statements",
          "Break & Continue Statements"
        ]
      },
      "requirements": [
        "No programming experience required. You will learn everything from scratch",
        "You can use any one of these - Jupyter Notebook or PyCharm or Google Colab etc."
      ],
      "description": "In this course, you will embark on a journey into the world of the Python Programming Language through hands-on coding exercises in Jupyter Notebook, presented in an exceptionally accessible manner.\n\n\nTo begin, you will be guided through the installation and initial usage of the Jupyter Notebook environment, setting the stage for an immersive learning experience.\n\n\nSubsequently, we will delve into the various essential topics of Python programming.\n\n\nLets have a look at some theoretical part (not covered in video lectures).\n\n\nIntroduction -\nPython is a high-level programming language that uses instructions to teach the computer how to perform a task. Python is an easy to learn, powerful programming language.\nA language which is closer to the human language (like English) is known as a high-level language.\nPython provides an easy approach to object-oriented programming.\nObject-oriented is approach used to write programs.\nPython is a free and open source language i.e., we can read, modify and distribute the source code of Python scripts.\nIt was developed by Guido van Rossum and was released in 1991.\nPython finds its application in various domains. Python is used to create web applications, used in game development, to create desktop applications, is used in Machine Learning and Data Science.\n\n\nHow Python Works ? -\nWe write instructions in Python language.\nPython is an interpreted language, so there is no need to compiling it.\nPython programs runs (executed) directly through source code. The source code is converted into Intermediate Bytecode and then Bytecode is converted into the native language of computer (i.e., machine language) internally by Python Interpreter. The code is executed and the output is presented.\nPython Source Code > Intermediate Bytecode > Machine Language > Code Executed\n\n\nWhat is a Program ? -\nA Program is a set of instructions that tells the computer to perform a specific task. A programming language is the language used to create programs.\nEg. When we click on Play button on media player, then there is a program working behind the scene which tells the computer to turn on the music.\nA built-in function is a function which is predefined and can be used directly. Eg. print()\nComments are the pieces of code which are ignored by the python interpreter. Comments are used to make source code easier to understand by other people. Python supports single line comments mean they can cover only one line.\n\n\n\n\nThe various topics explained in this course video lectures with examples are as follows -\n\n\n1. VARIABLES\na = 2 , b = 1.2 , c = ‘Ram’, d = lambda (‘any function’)\n# Variables are used to store values. The stored values in the variables can be used later in the programs. We can retrieve them by referring to the variable names.\n\n\n2. DATATYPES IN PYTHON\nInteger (int), Float , String (str) , List , Tuple , Set , Dictionary\n\n\n3. String – String is a series of characters, surrounded by single or double quotes. Eg. “Hello”, ‘Hello999’, ‘999’.\n\n\n4. LIST\n[ int /float / str ] à A = [ 1 , 2 , 3.4 , 3.4, ‘a’ , ‘bcd’ ]\nà Collection of data-types, Mutable : Values can be changed , Ordered : Values order will be as it is , Changeable , Allows duplicate values.\n\n\n5. TUPLE\n( int / float / str ) à B = (1 , 2 , 3.4 , 3.4 , ‘a’ , ‘bcd’ )\nàImmutable : Values can’t be changed , Ordered : Values order will be as it is , Unchangeable, Heterogeneous Data, Allows duplicate values.\n\n\n6. SET\n{ int / float / str } à C = { 1 , 2 , 3.4 , 5.6 , ‘a’ , ‘bcd’ }\nàValues can’t be changed but new values can be added , Unordered : Values order may change , Arrange the items in ascending order, Doesn’t allow duplicate values, Un-indexed.\n\n\n7. DICTIONARY\n{ Key : Value } à D = { K1 : 1 , K2 : 2 , K3 : 3.4 , K4 : 5.6 , K5 : ‘ab’ , K6 : ‘bcd’ }\nà Mutable , Unordered , Doesn’t allows duplicate keys , Indexed, Keys must be unique & immutable.\n\n\n8. CONCATENATION – Combining Strings\nfirst = ‘Data’\nlast = “Science”\nnew = first + ‘ ’ + last + ‘ is the combined string’\n\n\n9. “\\n” – For next new line\nprint(\"My Name is\", \"\\n\" , \"My city is \", \"\\n\" ,\"My country is\")\nprint(‘Delhi’) , print(‘’) , print(‘Noida’) # To create a gap of one line between two strings.\n\n\n10. LIST FUNCTONS\n< Press ‘Tab’ button from the keyboard after typing the list name (A here) to show the available functions >\nA.append(55) - To add a new value at the end of the list.\nA.clear( ) – To clear/delete/blank a list.\nB = A.copy( ) – To create a copy of the list.\nA.count(5) – To count how many times a value occurs.\nA.extend(c) – To add a new list in the existing list.\nA.index(7) – To show the index of a value. # A.index(value, start_index, stop_index)\nA.insert(3,66) – To insert a new value at a given position.\nA.pop(3) – To delete a value with the help of index. # A.pop( )\nA.remove( 55) – To delete a value from the list.\nA.reverse( ) – To reverse the list.\nA.sort( ) – To sort the list. # A.sort(reverse=True)\ndel A[ 1 : 4 ] – To delete some items from the list.\ntype(A) – To see the type.\nList Concatenation - A = [1,2,3,4] , B = [5,6,7,8] ; C = A+B = [1,2,3,4,5,6,7,8]\n\n\n11. TUPLE FUNCTONS\nT.count(5) – To count how many times a value occurs.\nT.index(7) – To show the index of a value.\n\n\n12. SET FUNCTONS\nS.add(5) – To add a new value 5 in the set.\nS.clear() – To clear all the elements of the set.\nS.copy() – To copy a set.\nS1.difference(S2) – S1-S2 - It shows the elements of set S1 only.\nS1.difference_update(S2) – It removes all common elements from the set1.\nS.discard(x) – It will remove an element(x) from the set. If x is not in set, it will not show error.\nS.remove(x) – It will remove an element(x) from the set. If x is not in set, it will show an error.\nS.pop() – It deletes the first/random element of the set.\nS1.Union(S2) – Set1 | Set2 – It shows all elements of set1 and set 2.\nS1.Intersection(S2) – Set1 & Set2 – It shows common elements of set1 and set2.\nS1.Intersection_update(S2) – Now set S1 will contain only common elements.\nS1.isdisjoint(S2) – It returns True, if S1 & S2 don’t have any common values, otherwise False.\nS1.issubset(S2) – It returns True, if all elements of S1 are in set S2.\nS2.issuperset(S1) – It returns True, if all elements of S1 are in set S2, otherwise False.\nlen(S) – It shows the no. of unique elements in the set.\nS1.symmetric_difference(S2) – S1^S2 – To show the non-common elements from S1 and S2.\nS1.symmetric_difference_update(S2) - Now set S1 will contain only non-common elements.\nS1.update([4,5,6]) – To add multiple items, in list/tuple/set form.\n\n\n13. DICTIONARY FUNCTONS\nD.clear( ) – To delete the dictionary.\nE = D.copy( ) – To copy a dictionary.\nD.get(‘K1’) – To get the value against a key in the dictionary. If the key is not in dictionary, it will show None, without showing any error.\nD.items( ) – To show all the items of a dictionary.\nD.keys( ) – To show all the keys of a dictionary.\nD.values( ) – To show all the values of a dictionary.\nD.pop(‘K1’) – To delete the key alongwith its index.\nD.popitem( ) – To delete the last key with value.\nD.setdefault(‘K3’) , D.setdefault(‘K4’, value), D[‘K4’] = value - To add a key at the end of the dictionary.\nD.update(‘E’) – To add a new dictionary in the existing dictionary.\nD.fromkeys(A) – To create a dictionary, using list items as keys. And adding a value to all keys is optional.\n“Key” in D – To check the presence of any element(key) in the dictionary.\n\n\n14. DATATYPE CASTING\nConverting a datatype into another.\nint (1) =>1 - Converting int into int\nint (3.2) => 3 – Converting float into int\nint (‘5’) => 5 – Converting a numerical string into int\nint (‘a’) => error – Can’t convert an alphabetical string into int\nfloat (3.2) => 3.2 – Converting float into float\nfloat (6) => 6.0 – Converting int into float\nfloat (“10”) => 10.0 – Converting a numerical string into float\nfloat (‘b’) => error – Can’t convert an alphabetical string into float\n\n\nStr (‘a’) => ‘a’ – Converting a string into string\nstr (1) => ‘1’ – Converting an int into string\nstr (3.2) => ‘3.2’ – Converting a float into string\n\n\n15. RANGE - It creates a sequential list of numbers.\nrange(start value, stop value, step value) , range(0,50,1) , range(1, 50) , range(50)\n\n\n16. FUNCTION – A function is a block of code, which is defined to perform some task. We have call a function to run it whenever required.\nParameter : Given at the time of defining function . Ex : def func(a,b)\nArguments : Given at the time of calling the function . Ex : func(2,3)\ndef fun_name ( args / parameters ) : multiple line statement ,\ndef fun_name ( var1, var2 ) : multiple line statement\ndef new ( 2 , 3 ) : c = a + b , return c\n\n\nIf the number of arguments to be passed is not fixed…then we use the Arbitrary Arguments (with *args)\nEx : def func(*values) : for i in values print(i) # It can take any number of arguments.\nKeyword Arguments : We can also send the args with key=value syntax.\nEx : def new(b,a,c): print(\"The winner is \" , a)\nnew(a= ‘Ram’, b= ‘Sham’, c= ‘Shiva’) ….. O/p will be : The winner is Ram\n\n\n17. LAMBDA FUNCTION à It is a single line function.\nfun_name = lambda parameters : single line statement\nEx : sum = lambda a , b : a + b\n\n\n18. INPUT FUNCTION – It takes an input and can save it to a variable.\nEx 1 : a = input ( ‘Enter your name’ ) ,\nEx 2 : print ( ‘Enter your name’ )\nx = input ( )\n\n\n19. INDEXING – list.index( item ) , list [index value] , list [ start : stop : step ]\nA.index(25) , A[1] , A [ 1 : 20 : 2 ] , A [ : 4 ] , A[ 2 : ] , A [ : ]\n\n\nNegative Indexing – A[-1] , A [ 8 : 0 : -1 ] , A [ : : -1 ]\nString Indexing – A.index( ‘r’ ) , A[ : 16 ]\n\n\nNested List - List in a list\nEx : A = [ [1,2,3] , 4 , 5 , 6 , [ 7,8,9] ]\n\n\n20. FOR LOOP – for val in sequence : body of for loop,\nEx 1 : for x in [1,2,3,4,5] : print (x) ,\nEx 2 : for i in ‘banana’ : print (i)\n\n\nBREAK STATEMENT (For Loop) – To stop the loop at a given condition\n1) for val in sequence : body of for loop if val == ‘seq_value’ , break\nEx : for x in [1,2,3,4,5,6,7] :\nprint (x)\nif x == 5\nbreak\n2) for val in sequence : if val == ‘seq_value’ break , print(val)\nEx : for x in [1,2,3,4,5,6,7] :\nif x == 5\nbreak\nprint(x)\n\n\nCONTINUE STATEMENT (For Loop) – To skip over an iteration\n1) for x in [1,2,3,4,5] :\nif x == 4\ncontinue\nprint(x)\n2) for x in [1,2,3,4,5] :\nprint (x)\nif x == 4\ncontinue\n\n\nBREAK & CONTINUE STATEMENT (For Loop) –\nEx : for x in [1,2,3,4,5,6,7]:\nif x == 5 :\ncontinue\nif x == 6:\nbreak\nprint(x)\n\n\nRANGE FUNCTION –\nfor x in range (6):\nprint (x)\n\n\nELSE IN FOR LOOP –\n1) for x in range(6):\nprint (x)\nelse :\nprint (‘loop is finished’)\n\n\n2) for x in range(0,6):\nprint (x)\nif x == 4 :\nbreak\nelse :\nprint(‘loop is finished’)\n\n\nPASS STATEMENT – To pass over to the next commands\n1) for x in [1,2,3,4,5,6,7]:\nPass\n2) for x in [1,2,3,4,5,6,7]:\nif x == 3:\npass\nprint (x)\n\n\n21. WHILE LOOP – A while loop repeats a block of code as long as a certain condition is true.\n1) i = 0\nwhile i < 6 :\nprint (i)\ni = i +1\n2) i = 0\nwhile i < 6 :\ni = i +1\nprint (i)\n\n\nBREAK STATEMENT (While Loop) –\n1) i = 0\nwhile i < 6 :\nprint (i)\nif i == 4 :\nbreak\ni = i +1\n2) i = 0\nwhile i < 6 :\nif i == 4 :\nbreak\nprint (i)\ni = i + 1\n\n\nCONTINUE STATEMENT (While Loop) –\n1) i = 0\nwhile i < 6 :\ni = i +1\nif i == 3 :\ncontinue\nprint (i)\n2) i = 0\nwhile i < 6 :\nif i == 3 :\ncontinue\nprint (i)\ni = i +1\n3)i = 0\nwhile i < 6 :\nif i == 3:\ncontinue\ni = i + 1\nprint (i)\n\n\nELSE IN WHILE LOOP –\n1) i = 0\nwhile i < 6 :\nprint (i)\ni = i+1\nelse:\nprint (‘condition ends’)\n\n\nBREAK & CONTINUE STATEMENT (While Loop) –\ni = 0\nwhile i < 10 :\ni = i + 1\nif i = = 3:\ncontinue\nif i = = 9 :\nbreak\nprint (i)\n\n\n22. SPLIT FUNCTION\nIt splits a string into a list.\nSyntax : string.split ( separator , maxsplit )\n\n\n23. MAP FUNCTION\nIt takes all items of a list and apply a function to it.\nSyntax : map( function, iterables ) or map( condition, values )\nEx : list ( map ( lambda x : x+1 , [1,2,3,4,5] ) )\n\n\n24. FILTER FUNCTION\nIt takes all items of a list and apply a function to it & returns a new filtered list.\nSyntax : filter( function, sequence )\nEx : list ( filter ( lambda x : x%2 != 0 , [1,2,3,4,5,6] ) )\n\n\n25. ENUMERATE FUNCTION\nIt is used to display output with index. We can enumerate as list, tuple, set, dictionary.\nSyntax : enumerate( list )\nEx : list ( enumerate (‘apple’ , ‘mango’ , ‘orange’) )\n\n\n26. ZIP FUNCTION\nIt is used to zip different iterators(lists) in one.\nSyntax : z = zip(list1, list2, list3)\nz = list(z) , print(z)\nExample : A = [1,2,3] , B = [‘Ram’ , ‘Sham’ , ‘Shiva’] , C = [‘Delhi’, ‘Noida’, ‘Agra’]\nz = zip(A, B, C) , z = list(z) , print(z)\n\n\n27. UNZIP FUNCTION\nSyntax : list1, list2, list3 = zip(*z)\nEx : A, B, C = zip(*z)\n\n\nEmbark on this enriching journey and unlock the vast potential of Python programming for diverse applications.",
      "target_audience": [
        "Beginner Python Developers curious about Data Science"
      ]
    },
    {
      "title": "MATLAB Programming Simulink: Beginner to Pro with ChatGPT",
      "url": "https://www.udemy.com/course/matlab-programming-simulink-beginner-to-pro-with-chatgpt/",
      "bio": "MATLAB Programming Course: Simulation, Programming Code, and Simulink Programming for Comprehensive Learning",
      "objectives": [
        "Master MATLAB Basics: Students will gain proficiency in navigating the MATLAB environment, managing variables, and performing matrix and vector operations.",
        "Perform Data Visualization: Learn to create high-quality 2D and 3D plots, continuous and discrete visualizations, and export professional-grade graphs.",
        "Design Interactive Apps: Create GUIs in MATLAB’s App Designer, add callbacks, debug, and package standalone apps for seamless distribution.",
        "Develop MATLAB Applications: Build custom user-defined functions, work with loops and conditional statements, and integrate data for real-world problem-solving."
      ],
      "course_content": {
        "Introduction to MATLAB: Master the Basics of Programming and Simulation": [
          "Introduction to MATLAB: Learn the Basics to Advance Concepts",
          "MATLAB Environment: Command Window Practical Demo",
          "MATLAB Environment: Understanding and Managing the Workspace",
          "MATLAB Environment: Learn about the Editor Window in Matlab",
          "MATLAB Environment: Navigating and Utilizing the Current Folder"
        ],
        "Understanding MATLAB Variables": [
          "Creating MATLAB Variables: A Step-by-Step Guide",
          "Exploring Data Types in MATLAB",
          "Type Casting in MATLAB: Converting Data Types with Precision",
          "Working with 3D Matrices in MATLAB: Manipulation and Visualization",
          "Matrices in MATLAB: Fundamentals and Advanced Operations",
          "Matrix Indexing in MATLAB: Accessing and Manipulating Data",
          "Essential MATLAB Functions for Matrix Operations",
          "Useful Functions for Matrix Operations in MATLAB",
          "Vectors in MATLAB: Creation, Operations, and Applications"
        ],
        "Matrix Operations in MATLAB: A Comprehensive Guide to Mathematical": [
          "Colon Operator in MATLAB: Simplifying Matrix and Array Operations",
          "Element-by-Element Operations in MATLAB: A Detailed Guide to Array Calculations",
          "Linear and Logical Indexing in MATLAB: Efficient Data Selection and Manipulation",
          "Matrix Concatenations in MATLAB: Combining and Building Matrices",
          "Matrix Operations in MATLAB: Inverse, Determinant, and Row Reduction (rref)",
          "Matrix Operations in MATLAB: Mathematical and Computational Techniques"
        ],
        "Import and Export Data in MATLAB: Seamless Data Integration and Management": [
          "Exporting Data in MATLAB: Save as MAT and CSV Files",
          "Exporting Images in MATLAB: Save Graphics as PNG Files",
          "Exporting Tables in MATLAB: Save Data as TXT and CSV Files",
          "Direct Data Import in MATLAB: Simplify Data Integration",
          "Importing Text Files in MATLAB: Step-by-Step Guide for Data Handling",
          "Loading Data in MATLAB: Converting to Matrix and Table Formats",
          "Loading Images into MATLAB: A Guide to Image Processing and Analysis",
          "Loading Video Files into MATLAB: A Step-by-Step Guide for Video Processing"
        ],
        "2D Plots in MATLAB: Visualizing Data": [
          "3D Plots in MATLAB: Visualizing Data in Three Dimensions",
          "Continuous and Discrete Plots in MATLAB: Techniques for Data Visualization",
          "Creating High-Quality Plots in MATLAB: Tips for Professional Visualizations",
          "Generating High-Resolution Plots in MATLAB: Achieving 600 DPI",
          "Importing Data into MATLAB and Creating Informative Plots",
          "Combining Graphs in MATLAB: Merging Multiple Plots into a Single Figure",
          "Graphs and Plots in MATLAB: A Comprehensive Guide to Data Visualization",
          "Creating Subplots in MATLAB: Displaying Multiple Plots in a Single Figure"
        ],
        "Conditional Statements in MATLAB: Control Flow for Dynamic Programming": [
          "IF-ELSE-END Statements in MATLAB: Implementing Conditional Logic",
          "IF-ELSEIF-ELSE-END in MATLAB: Advanced Conditional Statements",
          "IF-END Conditional Statement in MATLAB: Simplifying Decision-Making",
          "SWITCH-CASE Conditional Statement in MATLAB: Streamlining Multi-Choice Logic"
        ],
        "Loops and Conditional Logic in MATLAB: Automating Repetitive Tasks": [
          "For Loop in MATLAB: A Guide to Iterative Programming",
          "Nested For Loops in MATLAB: Mastering Multi-Level Iterations",
          "While Loop in MATLAB: Efficient Control for Repetitive Tasks"
        ],
        "User-Defined Functions in MATLAB: Building Custom Solutions": [
          "Creating Functions with No Output in MATLAB: Simplifying Task Automation",
          "MATLAB Function Example: Building and Using Custom Functions",
          "User-Defined Functions in MATLAB: Creating Customized Programming",
          "User-Defined Functions with Direct Input in MATLAB: Streamlining Function Calls"
        ],
        "App Designer in MATLAB: Building Interactive Applications": [
          "Introduction to App Designer in MATLAB: Creating Interactive User Interfaces",
          "Building a Calculator GUI App in MATLAB App Designer",
          "Creating a Simple GUI in MATLAB: Draw a Graph with a Push Button Click",
          "Adding Callback Functions to Number Buttons in MATLAB App Designer",
          "Adding Functions to Operator Buttons in MATLAB App Designer",
          "Debugging the Calculator App in MATLAB: Identifying and Fixing Errors",
          "Creating an Add-On App in MATLAB App Designer: Enhancing Functionality",
          "Creating and Installing a Standalone App in MATLAB"
        ]
      },
      "requirements": [
        "Basic Computer Skills: Familiarity with using a computer, including file management and basic software installation.",
        "No Prior MATLAB Knowledge Required: The course starts from the basics, making it beginner-friendly.",
        "Access to MATLAB Software: Students should have MATLAB installed on their computer (trial or licensed version).",
        "Eagerness to Learn: A willingness to explore programming and problem-solving is the only essential requirement."
      ],
      "description": "Comprehensive MATLAB Programming and App Development Course\nThis MATLAB Programming and App Development course is a complete guide for beginners and professionals who want to master MATLAB's capabilities in programming, data visualization, and app creation. The course starts with an introduction to MATLAB, covering the environment, command window, workspace, editor, and file navigation. Students will learn how to create variables, explore data types, perform type casting, and manage matrices and vectors efficiently.\nMatrix operations are at the core of MATLAB, and this course delves into matrix indexing, concatenation, and advanced functions like inverse, determinant, and row reduction. You'll also explore MATLAB's powerful plotting features, including 2D and 3D plots, continuous and discrete data visualization, and creating high-resolution (600 DPI) graphs for professional presentations.\nThe course emphasizes data integration by teaching how to import and export data as MAT, CSV, text, and image files. You'll also learn to work with videos and directly integrate datasets into MATLAB for analysis.\nControl flow topics, including conditional statements (IF-ELSE, SWITCH-CASE) and loops (FOR, WHILE), are thoroughly covered, enabling you to write dynamic and efficient code. Additionally, the course includes creating user-defined functions to build custom solutions.\nIn the advanced section, you'll learn to use MATLAB's App Designer to build interactive applications. This includes creating GUIs, adding callback functions, debugging, and packaging standalone apps for PC installation.\nBy the end of this course, you’ll have a strong foundation in MATLAB programming, data visualization, and app development, equipping you to tackle real-world engineering, scientific, and data science problems. Whether you're a student, researcher, or professional, this course will empower you to leverage MATLAB for maximum impact.\nEnroll now to unlock the full potential of MATLAB programming and app development!",
      "target_audience": [
        "Students and Beginners: Individuals new to programming or MATLAB who want to build a strong foundation in technical computing.",
        "Engineers and Scientists: Professionals seeking to streamline their workflows by utilizing MATLAB for data analysis, simulations, and automation.",
        "Data Analysts and Researchers: Those looking to visualize, analyze, and interpret complex datasets using MATLAB's powerful tools.",
        "App Developers: Anyone interested in designing interactive GUIs and standalone applications with MATLAB’s App Designer."
      ]
    },
    {
      "title": "Python Unit Testing Fundamentals (using unittest & pytest)",
      "url": "https://www.udemy.com/course/python-unit-testing-fundamentals/",
      "bio": "Every Python Programmer Must Have This Skill!!",
      "objectives": [
        "Develop Unit Test Cases",
        "Develop Test Suites",
        "Run Test Cases",
        "Ignore & Skip Test Cases",
        "Developing Tests using \"unittest\" module",
        "Developing Tests using \"pytest\" module",
        "Generating Results in XML Format (pytest)",
        "Generating Results in HTML Format (pytest)"
      ],
      "course_content": {},
      "requirements": [
        "Python Programming Fundamentals",
        "IDE Environment - Basic Familiarity"
      ],
      "description": "You might be wondering what this course is about? Well, this course is all about Unit Testing with Python and how it can help you become better at the art of programming. In other words, this course will teach you how to use Unit Testing to improve code quality and support future development.\nUnit tests should provide immediate value in terms of reduced debugging and better design, which is why it’s a skill that should be mastered by all python programmers, regardless of their career path. This course will show you how to write unit tests for your code in Python! The course is designed to be practical with hands-on examples you can use right away.\nGood unit tests should provide immediate value in terms of reduced debugging and better design, and increase your confidence in the code.\nA lot of people can learn to write unit tests with this course, regardless of their career path. To help you get started, you get a 30-day money back guarantee on your purchase\n\n\nYou will learn:\nUnderstand the terms: Test Case, Test Suite, Test Runner, Unit Under Test and Test Fixture.\nWrite Unit Tests\nRunning Unit Tests\nWriting Test Suite\nSkipping and Ignoring Unit Tests\nSetup and TearDown\nTest Discovery\nHandling Known Errors\nBest Practices",
      "target_audience": [
        "DevOps Engineers",
        "Cloud Engineers",
        "Python Programmers",
        "Python Automation Engineers"
      ]
    },
    {
      "title": "Create Dynamic Forms HTML CSS JavaScript and jQueryUI",
      "url": "https://www.udemy.com/course/create-dynamic-web-forms-with-jquery/",
      "bio": "Guide to accessing form content and utilizing the data within jQuery and JavaScript code",
      "objectives": [
        "add jquery to html forms",
        "create more interactive web forms",
        "auto complete web form content"
      ],
      "course_content": {
        "HTML and CSS Forms": [
          "Introduction to creating forms HTML and CSS",
          "Section Source Code and Resource Guide",
          "Get coding how to setup your web dev editor and prepare to code",
          "Form Planning a web form HTML5 elements",
          "How to Apply CSS styling to Form Simple Web form example with CSS",
          "HTML5 Form Elements examples of common elements with attributes",
          "How to Customize Form Elements HTML5 elements and attributes",
          "Tips for good web form design user experience HTML5 elements"
        ],
        "jQuery UI form Options": [
          "Setting up jQuery UI autocomplete drop down for form input element",
          "jQueryUI with API AJAX request to populate array data for autocomplete",
          "jQuery UI autocomplete code example and sample form"
        ],
        "AJAX with JavaScript": [
          "Source code and PDF Guide to AJAX lessons with JavaScript",
          "Using XMLHttpRequest for AJAX",
          "XHR Readystates",
          "Get JSON data xHR",
          "xHR post Request",
          "JavaScript Fetch",
          "Fetch local JSON",
          "Random User API"
        ],
        "JavaScript and jQuery Coding examples Q&A responses": [
          "jQuery Click Counter",
          "JavaScript Code Guide"
        ],
        "Please note this section is from the older version of the course": [
          "Old course content in this section",
          "Older course content jQuery and Forms Course Introduction",
          "HTML CSS Lesson plan",
          "jQuery Keyup Content match in form field",
          "Source Code for matching content",
          "Form Select return value on change",
          "jQuery Event AJAX response from server",
          "jQuery and radio buttons and check boxes",
          "Source Code on Change Radio buttons check boxes",
          "jQuery UI autocomplete setup",
          "jQuery UI autocomplete from Dynamic JSON file",
          "Source Code jQuery UI auto complete from dynamic JSON file",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "basic HTML and jQuery",
        "computer with internet access"
      ],
      "description": "jQuery is a great way to add amazing functionality and dynamic effects onto your web pages.   jQuery provides great functionality when it comes to forms, and creating forms is an essential skill within web development.\nTogether with HTML forms jQuery can do so much.\nThis course will cover how to match two form fields to check if the content is the same which is a useful code snippet to help provide form content vetting.\nUse check-boxes to trigger events such as TOS windows and more.   Check-box interaction within a form is a much needed piece of functionality.\nLearn to make AJAX calls to the server with drop down values, checkboxes and radio buttons triggering events.   Dynamic form interaction allows you to provide each user a more customized form experience.\nAdd jQuery UI auto complete and populate the auto complete with dynamic JSON data.   JQuery UI has many pre-built capabilities that are easy to add to your web projects.\nBy the end of the course you will have the skills and know how to apply jQuery within your website.\nI am here to help you learn how to create your own websites and ready to answer any questions you may have.\nJavaScript and jQuery are in demand skills, and learning how to use them will help to separate you from the crowd.\nWant to know more, what are you waiting for take the first step.  Join now to start learning how you too can utilize jQuery within your website today.",
      "target_audience": [
        "anyone who wants to learn more about jQUERY and web forms",
        "web developers",
        "web content producers"
      ]
    },
    {
      "title": "The Complete Python Programming Bootcamp",
      "url": "https://www.udemy.com/course/pythonbootcamp/",
      "bio": "Learn everything about Python from the Basics to File and Browser Automation, Python GUI, Data Analysis and more!",
      "objectives": [
        "Gain a complete understanding of Python 3",
        "Write programs that can recognize patterns of text through \"regular expressions\"",
        "Create, Read and Write to Files on their System",
        "Crawl websites for data and pull information through BeautifulSoup",
        "Automate their web browsers with Selenium and run their own scripts",
        "Programmatically generate, update, and parse Word and Excel documents",
        "Schedule Tasks and understand Threading",
        "Creating GUIs in Python with Tkinter",
        "Analyze and Visualize Data with MatPlotLib"
      ],
      "course_content": {
        "Welcome to the Course!": [
          "Introduction"
        ],
        "Introduction to Python Programming": [
          "Arithmetic Operators",
          "Variables and Multiple Assignment",
          "Placeholders in Strings",
          "Quiz: Variables, Operators and Placeholders",
          "Exercises: Variables, Operators, Strings",
          "Solutions: Variables, Operators, Strings",
          "Introduction to Lists",
          "Dictionaries",
          "Tuples",
          "Quiz: Lists, Dictionaries, Tuples",
          "Exercises - Lists, Dictionaries, Tuples",
          "Solutions - Lists, Dictionaries, Tuples",
          "Conditional Statements",
          "For Loops",
          "While Loops",
          "Try and Except",
          "Quiz: Conditional Statements, Loops, Try & Except",
          "Functions",
          "In-Built Functions",
          "Object-Oriented Programming",
          "Inheritance"
        ],
        "File Input / Output and Automation with Word and Excel": [
          "OS Functions and File Input / Output",
          "Copying, Moving and Renaming Files",
          "Deleting Files and Folders",
          "Word Automation: Reading Word Documents",
          "Word Automation: The Run Object",
          "Word Automation: Writing to Documents and Styling",
          "Word Automation: Headings and Pictures",
          "Excel Automation: Introduction to OpenPyXL",
          "Excel Automation: Reading Sheets and Cells",
          "Excel Automation: Accessing Columns and Rows",
          "Excel Automation: Setting Fonts and Formulas",
          "Excel Automation: Merging Cells and Freezing Panes",
          "Excel Automation: Writing and Saving to Sheets",
          "Excel Automation: Adjusting Rows and Columns",
          "Excel Automation: Creating Charts"
        ],
        "Web Scraping, Parsing and Browser Automation": [
          "The Requests Module",
          "Getting Started with BeautifulSoup",
          "Attributes and Navigation",
          "Finding Elements and Getting Attributes",
          "Siblings, Elements and Children",
          "Introduction to Selenium",
          "Accessing Attributes and Content",
          "Clicking and Browser Buttons",
          "Entering in Text"
        ],
        "Data Analysis and Visualization - Graphs and Charts": [
          "Introduction to MatPlotLib",
          "Understanding the MatPlotLib Interface",
          "Adding Multiple Graphs",
          "Adding Data with NumPy",
          "Adding Labels and Titles",
          "Creating a Legend",
          "Displaying Gridlines and Axes",
          "Color Customization",
          "Line and Marker Customization",
          "More Styling with Plot()",
          "Multiple Figures in a Graph",
          "More Color Customization",
          "Creating Histograms",
          "Creating Pie Charts",
          "Creating Bar Charts",
          "Creating Scatter Plots",
          "Introduction to 3D Plots",
          "Creating 3D Scatter Plots",
          "Creating 3D Bar Charts"
        ],
        "Regular Expressions and Task Management": [
          "Regular Expressions: Regex Objects and Grouping",
          "Regular Expressions: Optional Matching and Findall()",
          "Regular Expressions: Character Classes and the Caret/Dollar Characters",
          "Regular Expressions: Greedy and Non-Greedy Matching",
          "Regular Expressions: Case-Insensitive Matching and Substitutions",
          "Threading and Scheduling: The Time Module",
          "Threading and Scheduling: Using the DateTime Function",
          "Threading and Scheduling: Python Threading",
          "Threading and Scheduling: Scheduling Tasks"
        ],
        "Python GUI and Gaming": [
          "Tkinter Introduction",
          "Creating Labels",
          "Creating buttons",
          "Adding Layouts",
          "The Fill Method",
          "Understanding the Grid Layout",
          "Inputting Entries",
          "Creating Check Buttons",
          "Adding GUI Login",
          "Adding Button Click Action",
          "Binding Button Functions",
          "More Binding!",
          "Getting Entry Data",
          "Adding a Message Box",
          "Creating Drop Down Menus",
          "Creating a Calculator: Part 1",
          "Creating a Calculator: Part 2",
          "Creating a Calculator: Part 3",
          "Creating a Calculator: Part 4",
          "An Introduction to Canvas",
          "Adding Canvas Objects",
          "Utilizing the Canvas Fill",
          "Creating a Random Rectangle Generator",
          "Adding Text and Arcs",
          "Adding Animations"
        ]
      },
      "requirements": [
        "No Programming Experience is required!",
        "Access to a Computer or Laptop"
      ],
      "description": "Do you want to become a programmer? Do you want to learn how to create games, automate your browser, visualize data, and much more?\nIf you’re looking to learn Python for the very first time or need a quick brush-up, this is the course for you!\nPython has rapidly become one of the most popular programming languages around the world. Compared to other languages such as Java or C++, Python consistently outranks and outperforms these languages in demand from businesses and job availability. The average Python developer makes over $100,000 - this number is only going to grow in the coming years.\nThe best part? Python is one of the easiest coding languages to learn right now. It doesn’t matter if you have no programming experience or are unfamiliar with the syntax of Python. By the time you finish this course, you'll be an absolute pro at programming!\nThis course will cover all the basics and several advanced concepts of Python. We’ll go over:\nThe fundamentals of Python programming\nWriting and Reading to Files\nAutomation of Word and Excel Files\nWeb scraping with BeautifulSoup4\nBrowser automation with Selenium\nData Analysis and Visualization with MatPlotLib\nRegex parsing and Task Management\nGUI and Gaming with Tkinter\nAnd much more!\nIf you read the above list and are feeling a bit confused, don’t worry! As an instructor and student on Udemy for almost 4 years, I know what it’s like to be overwhelmed with boring and mundane. I promise you’ll have a blast learning the ins and outs of python. I’ve successfully taught over 200,000+ students from over 200 countries jumpstart their programming journeys through my courses.\nHere’s what some of my students have to say:\n“I wish I started programming at a younger age like Avi.  This Python course was excellent for those that cringe at the thought of starting over from scratch with attempts to write programs once again. Python is a great building language for any beginner programmer. Thank you Avi!”\n\n\n“I had no idea about any programming language. With Avi's lectures, I'm now aware of several python concepts and I'm beginning to write my own programs. Avi is crisp and clear in his lectures and it is easy to catch the concepts and the depth of it through his explanations. Thanks, Avi for the wonderful course, You're awesome! It's helping me a lot :)”\n\n\n\"Videos are short and concise and well-defined in their title, this makes them easy to refer back to when a refresher is needed. Explanations aren't convoluted with complicated examples, which adds to the quick pace of the videos. I am very pleased with the decision to enroll in this course. Not only has it increased the pace I'm learning Python but I actively look forward to continuing the course, whenever I get the chance. Avi is friendly and energetic, absolutely delightful as an instructor.”\nSo what are you waiting for? Jumpstart your programming journey and dive into the world of Python by enrolling in this course today!",
      "target_audience": [
        "Beginner Programmers looking to learn how to code",
        "Anyone wanting to learn Python Programming",
        "Intermediate Python Programmers looking to dive deeper into Python",
        "Programmers looking to switch languages to Python"
      ]
    },
    {
      "title": "Make 20 Advanced Level Applications in Python",
      "url": "https://www.udemy.com/course/make-20-advanced-level-applications-in-python/",
      "bio": "Learn to make real time Applications in Python using Machine Learning Models and Advance Level concepts.",
      "objectives": [
        "Learn to make real time applications using Advance Level Python Concepts",
        "Learn to make real time applications using Machine learning models",
        "Get a Python Job",
        "Get a blueprint of making any type of Application in Pythobn"
      ],
      "course_content": {
        "Chat Room Application using Socket": [
          "Chat Room Application Intuition-1",
          "Chat Room Application Intuition-2",
          "Chat Room Application Intuition-3",
          "Chat Room Application Part-1",
          "Chat Room Application Part-2",
          "Chat Room Application Part-3",
          "Chat Room Application Part-4",
          "Chat Room Application Part-5",
          "Chat Room Application Part-6",
          "Chat Room Application Part-7",
          "Chat Room Application Part-8",
          "Chat Room Application Part-9",
          "Chat Room Application Extra Video - Working of WhatsApp"
        ],
        "Auto Email Sender Application": [
          "Auto Email Sender Application Part-1",
          "Auto Email Sender Application Part-2",
          "Auto Email Sender Application Part-3",
          "Auto Email Sender Application Part-4",
          "Auto Email Sender Application Part-5",
          "Auto Email Sender Application Part-6",
          "Auto Email Sender Application Part-7",
          "Auto Email Sender Application Part-8",
          "Auto Email Sender Application Part-9",
          "Auto Email Sender Application Part-10"
        ],
        "YouTube Download Manager Application": [
          "YouTube Download Manager Application Part-1",
          "YouTube Download Manager Application Part-2",
          "YouTube Download Manager Application Part-3",
          "YouTube Download Manager Application Part-4",
          "YouTube Download Manager Application Part-5",
          "YouTube Download Manager Application Part-6",
          "YouTube Download Manager Application Part-7",
          "YouTube Download Manager Application Part-8",
          "YouTube Download Manager Application Part-9",
          "YouTube Download Manager Application Part-10"
        ],
        "PDF Audio Reader Application": [
          "PDF Audio Reader Application Part-1",
          "PDF Audio Reader Application Part-2",
          "PDF Audio Reader Application Part-3",
          "PDF Audio Reader Application Part-4",
          "PDF Audio Reader Application Part-5",
          "PDF Audio Reader Application Part-6",
          "PDF Audio Reader Application Part-7",
          "PDF Audio Reader Application Part-8",
          "PDF Audio Reader Application Part-9"
        ],
        "Taking Screen Shot Application": [
          "Screen Shot Application Part-1",
          "Screen Shot Application Part-2",
          "Screen Shot Application Part-3",
          "Screen Shot Application Part-4",
          "Screen Shot Application Part-5",
          "Screen Shot Application Part-6",
          "Screen Shot Application Part-7",
          "Screen Shot Application Part-8",
          "Screen Shot Application Part-9",
          "Screen Shot Application Part-10",
          "Screen Shot Application Part-11"
        ],
        "Music Player Application": [
          "Music Player Application Part-1",
          "Music Player Application Part-2",
          "Music Player Application Part-3",
          "Music Player Application Part-4",
          "Music Player Application Part-5",
          "Music Player Application Part-6",
          "Music Player Application Part-7",
          "Music Player Application Part-8",
          "Music Player Application Part-9",
          "Music Player Application Part-10",
          "Music Player Application Part-11",
          "Music Player Application Part-12"
        ],
        "Movie Booking Application": [
          "Movie Booking App Part # 1",
          "Movie Booking App Part # 2",
          "Movie Booking App Part # 3",
          "Movie Booking App Part # 4",
          "Movie Booking App Part # 5",
          "Movie Booking App Part # 6"
        ],
        "Keyboard Application": [
          "Keyboard Application Part-1",
          "Keyboard Application Part-2",
          "Keyboard Application Part-3",
          "Keyboard Application Part-4",
          "Keyboard Application Part-5",
          "Keyboard Application Part-6"
        ],
        "Restaurant Management System Application": [
          "Restaurant Management System Application Part # 1",
          "Restaurant Management System Application Part # 2",
          "Restaurant Management System Application Part # 3",
          "Restaurant Management System Application Part # 4",
          "Restaurant Management System Application Part # 5",
          "Restaurant Management System Application Part # 6",
          "Restaurant Management System Application Part # 7",
          "Restaurant Management System Application Part # 8",
          "Restaurant Management System Application Part # 9",
          "Restaurant Management System Application Part # 10"
        ],
        "Advanced BMI Calculator Application": [
          "BMI Calculation Application Part-1",
          "BMI Calculation Application Part-2",
          "BMI Calculation Application Part-3",
          "BMI Calculation Application Part-4"
        ]
      },
      "requirements": [
        "Basics of Python or any other Programming Language is required",
        "You need a Laptop or PC"
      ],
      "description": "In this course, we will assume that you know basics of python or any other Programming Language and is now ready to make real time applications in python. I have been teaching students Programming Languages for many years and I have noticed that many students learn basics and Advance Level stuff but they do not use these concepts to make something real out of it. Here in this course, our main focus is to use Python Concepts and make real time Applications which will help you not only to make Apps but also to get a Job in Python or any other Programming Language.\n\n\nI have made all types of Apps in such a way that once you know how to make Apps in Python, making Apps in other Programming Language will get a lot easier for you because then you would have already known how to make Apps by using Computer Programming Concepts.\n\n\nYou are now ready to use Python to make something real out it. We will also use not only basic concepts but also teach you advance level concepts  and use them to make all the 20 Applications in Python.\n\nNot only that we have covered and taught many Machine Learning Models and then also using these Machine Learning Models, we have build Advance Level Applications as well. We are pretty sure that after taking this course in Python, you will then feel that you can now make any type of application using the Python Programming language and that you are now a professional programmer who now knows how to use a language to make something real out of it.\n\nWe hope that you will enjoy this course!",
      "target_audience": [
        "Anyone who want to use Python to make real time applications",
        "Anyone who want to use Machine Learning Models to make real time applications in Python",
        "Anyone who want to get a Job in Python",
        "Anyone who want to get a blueprint of making any type of App in Python"
      ]
    },
    {
      "title": "JavaScript Fundamentals to Advanced: Full Stack Development",
      "url": "https://www.udemy.com/course/javascript-fundamentals-to-advanced-full-stack-development/",
      "bio": "Comprehensive JavaScript Course: From Beginner to Full Stack Pro",
      "objectives": [
        "Understanding Javascript Console API",
        "Variables and Comments",
        "Different Types of Data in Javascript",
        "Learninng about Operators",
        "About the Conditional Statements",
        "Loops in Javascript",
        "Array Methods",
        "String Methods",
        "DOM Manipulation in Javascript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to JavaScript",
          "Writing the first code in Javascript",
          "Description about HTML, CSS AND Javascript",
          "Downloading and Installing VS Code",
          "Writing Javascript inside VS Code",
          "Understanding Javascript Console API",
          "Ways to Write the Javascript",
          "Variables and Comments",
          "Different Types of Data in Javascript",
          "Learninng about Operators",
          "Functions",
          "About the Conditional Statements",
          "Loops in Javascript",
          "Array Methods",
          "String Methods",
          "DOM Manipulation in Javascript",
          "Class Project"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Are you eager to master JavaScript and build robust, full-stack web applications? Look no further! This comprehensive course is your roadmap to success. Whether you're a coding novice or an experienced developer seeking to expand your skillset, you'll find everything you need to excel.\nDive deep into JavaScript fundamentals and build a solid foundation. Grasp core concepts, syntax, and data structures with ease. As you progress, explore advanced topics like object-oriented programming, functional programming, and asynchronous programming to elevate your coding abilities.\nUncover the world of front-end development by harnessing the power of HTML, CSS, and JavaScript. Create stunning user interfaces, implement interactive features, and optimize your web applications for performance.\nDelve into the realm of back-end development with Node.js and Express.js. Build scalable and efficient APIs, handle database interactions, and master server-side programming.\nConstruct full-stack applications from scratch, combining your front-end and back-end expertise. Learn to deploy your projects to the cloud and optimize them for production.\nKey Features:\nComprehensive coverage of JavaScript fundamentals and advanced topics\nHands-on projects to solidify your learning\nReal-world class project and best practices\nExpert instruction and support\nBy the end of this course, you'll be equipped with the skills and confidence to tackle complex web development challenges. Join us and embark on an exciting journey to become a proficient full-stack developer!\nEnroll now and start building your full-stack future!",
      "target_audience": [
        "Anyone interested to learn javascript"
      ]
    },
    {
      "title": "Python and Jupyter Notebooks for beginners",
      "url": "https://www.udemy.com/course/python-and-jupyter-notebooks-for-beginners/",
      "bio": "Learn Python with Jupyter Notebook from scratch",
      "objectives": [
        "How to install Jupyter Notebook",
        "How to run the Jupyter Notebook Server",
        "Common Jupyter Commands",
        "Jupyter Components",
        "Notebook Dashboard",
        "Explore Notebook Interface",
        "Create Notebooks",
        "Python Expressions",
        "Python Statements",
        "Python Variables",
        "Python Data Types",
        "Casting Data Types",
        "Python Operators",
        "Conditional Statements",
        "Python Loops",
        "Python Functions"
      ],
      "course_content": {
        "Introduction to Jupyter Notebook": [
          "Introduction",
          "What is Jupyter Notebook",
          "Installing Jupyter Notebook",
          "Running the Jupyter Notebook Server",
          "Common Jupyter Commands",
          "Jupyter Notebook Components",
          "The Notebook Dashboard",
          "Notebook user interface",
          "Creating a new notebook"
        ],
        "Introduction to Python": [
          "What is Python",
          "High and Low Level Programming languages",
          "Compilers and Interpreters",
          "Python Expressions",
          "Python Statements",
          "Python Code Comments",
          "Python Data Types",
          "Casting Data Types",
          "Python Variables",
          "Python List",
          "Python Tuple",
          "Python Dictionaries",
          "Python Operators",
          "Python Conditional Statements",
          "Python Loops",
          "Python Functions",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic working knowledge of using a computer",
        "Basic working knowledge of using the internet"
      ],
      "description": "Python is a very popular and powerful programming language.Python is versatile and can be fun to use in creating powerful and useful applications. Python can be used to create a variety of applications types\nfrom games, web applications,desktop applications. Python is also very prominently used in data science and data analysis.\nJupyter Notebook is an environment that we can use to experiment with Python interactively . It allows you to share live Python code with others .\nIn this introductory beginners course we will learn about the basics of Python and Jupyter notebook.",
      "target_audience": [
        "Beginners to Python",
        "Beginners to Jupyter Notebook"
      ]
    },
    {
      "title": "Ultimate Java Development and Certification Guide",
      "url": "https://www.udemy.com/course/ultimate-java-development-and-certification-guide/",
      "bio": "Learn to program in java and become a Oracle Java certified developer",
      "objectives": [
        "Understand Core Concepts of Java Programming",
        "Create complex software using Java",
        "Appear for Oracle Jave certification exam",
        "Master multi threaded programming in Java"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Eclipse Installation"
        ],
        "Java Syntax and Class Review": [
          "Primitive Types in java",
          "More Data Types",
          "Strings",
          "if-else-revisited",
          "Switch Statement",
          "Creating Arrays, For-Loops",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Encapsulation and Subclassing": [
          "Functions",
          "Intro to Objects",
          "Encapsulation",
          "Subclasses",
          "Subclassing - Advance",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Overriding Methods, Polymorphism, and Static Classes": [
          "Method Overloading",
          "Final Modifier",
          "Instanceof",
          "Static keyword",
          "Singleton",
          "Varargs",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Abstract and Nested Classes": [
          "Abstract Classes",
          "Nested Classes",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Interfaces and Lambda Expressions": [
          "Interfaces",
          "Interface or abstract class",
          "Subclassing interfaces, Default",
          "Anonymous Inner Classes",
          "Lambda Expressions",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Collections and Generics": [
          "Arraylists",
          "Generic Classes",
          "Hash Maps - Basics",
          "Hash Maps - Implementation",
          "Deques, Treesets",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Collections, Streams, and Filters": [
          "Builder Pattern",
          "Looping with Lambda Expressions",
          "Filtering with Lambda Expressions",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Lambda Built in Functional Interfaces": [
          "Interfaces in java.util.function",
          "Chapter Quiz",
          "Quiz Answers"
        ],
        "Lambda Expressions Continued": [
          "Lambda Expressions Continued",
          "Collectors",
          "Chapter Quiz",
          "Quiz Answers"
        ]
      },
      "requirements": [
        "No prior knowledge of java is assumed however knowledge of any other language such as python or c will be useful"
      ],
      "description": "Learn to program in Java and prepare for the Oracle Java certification exam with one single training program. This course serves the dual purpose of making you a proficient Java programmer by focusing on practical java paradigms and also help you get certified by making sure you are fully prepared for the java certification exam.\nThis course is for anyone who wants to learn java from the ground up. It starts with basic java installation and help you master the language by going through tons of programming examples. The main sections covered in the course are:\nJava Syntax and Class Review\nThis section ensures that you get familiar with the java syntax and general programming constructs. You will learn conditionals and iterators along with different data types and data structures.\nEncapsulation and Subclassing\nGet started with object oriented programming in this section learning about Classes, Objects, encapsulation and subclasses. These are the basic building blocks of Java programming.\nPolymorphism\nThis section will help you master concepts covering the powerful polymorphism feature in java. Topics such as method overriding, final, static keyword and singleton class will be covered in this section.\nAbstract and Nested Classes\nLearn to take a deep dive into object oriented programming with concepts such as nested and inner classes. Learn to use the power of Java for creating more complex programs.\nInterfaces\nLearn about Inheritance and its use with Java language. Understand why you should use interfaces and how they help in designing complex software.\nCollections and Generics\nLearn about the latest data structures introduced in Java and how they make programming easier.\nLambda Expressions, Streams and Filters\nGet to know the exotic concepts such as streams, filters and lambda expressions. Build programs with them and learn the perfect use.\nI/O Fundamentals\nInput output across systems is an important concept and this section will cover all the relevant topics with examples.\nDate and Time\nLearn to manage date and time in Java and learn the useful APIs\nThreads\nLearn multi threaded programming which executes different part of our programs as separate process. Learn all about deadlock and threading problems.\nLearn all this and much more in this truly ultimate course which will make you a champion Java developer by the end of it. So just enroll and see you in the first lecture.",
      "target_audience": [
        "Software developers who want to start learning java should take this course",
        "If you are preparing for java certification you will find this course very useful"
      ]
    },
    {
      "title": "Complete C# Programming: Beginner to Advanced with C# OOP",
      "url": "https://www.udemy.com/course/complete-c-programming-beginner-to-advanced-with-c-oop/",
      "bio": "Learn C# with hands-on projects, dive in C# OOP advanced step by step guide to classes, interfaces and C# OOP examples",
      "objectives": [
        "Thanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C",
        "C# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft.",
        "C# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications",
        "Encapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members .",
        "As is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on.",
        "Beautiful coding techniques",
        "Learn C# by coding",
        "Fundamentals of C#",
        "Fundamentals of C# and .NET Framework",
        "Conditional statements",
        "Create and usage of Arrays",
        "Create and usage of Methods",
        "Debug C# applications",
        "Apply OOP Concepts using C#",
        "How to use Visual Studio efficiently",
        "What objects, classes, fields, properties, methods and constructors are in detail",
        "How to use static, partial and nested classes",
        "How you can utilize abstract, sealed, virtual and overridden classes and members to build robust applications",
        "How to develop Console and Windows Forms Applications",
        "How to use System Input Output library to utilize file system for your needs",
        "How to use you layered architecture in your projects",
        "How to handle errors and exceptions in your applications",
        "How to use coding techniques to make efficient development",
        "c sharp programming",
        "c sharp for beginners",
        "c sharp from scratch",
        "Develop unity 2D or unity 3D games ( unity c# )",
        "c# oop",
        "oop c#"
      ],
      "course_content": {
        "What You Will Learn in C# For Complete Beginners Course?": [
          "No experience on C#? Don`t Worry!",
          "FAQ regarding C#",
          "C# .NET Framework",
          "Project Files and Course Documents"
        ],
        "Set Up Visual Studio": [
          "Development Environments",
          "How To Install Visual Studio 2019 On Windows?",
          "How To Install Visual Studion On Mac?",
          "How To Install Visual Studio 2022 On Windows?",
          "Here is The Source Codes For All The Projects"
        ],
        "Console Environment": [
          "What is Console App?",
          "Functions Used in Console Environment to Write and Read",
          "Read & Readline"
        ],
        "Variables in C#": [
          "What Is Variables in C# ?",
          "Type Conversions in Variables"
        ],
        "Windows Form": [
          "Introduction to Windows Form",
          "Review Necessary Windows",
          "Review Form Properties"
        ],
        "Review Objects in Toolbox": [
          "Using MessageBox",
          "Button",
          "Label",
          "Textbox in C#",
          "Groupbox in c#",
          "Radiobutton",
          "Checbox in c sharp",
          "Combobox in c sharp programming",
          "Datetimepicker in c sharp for beginners",
          "Switch and Data Transfer Between Forms"
        ],
        "Operators in c sharp from scratch": [
          "Using Operators"
        ],
        "Before Starting Know-How": [
          "Using Comment Line",
          "Using Region",
          "Naming Conventions",
          "Using Breakpoint",
          "Keyboard Shortcuts in Visual Studio"
        ],
        "Condition Controls": [
          "If -Else Statement",
          "Switch Case Statement"
        ],
        "Loops": [
          "While DoWhile",
          "For Loop",
          "Jump Statements",
          "Quiz"
        ]
      },
      "requirements": [
        "No prior knowledge of C# ( C sharp ) is required",
        "A computer with access to the internet",
        "Free software and tools used during the course",
        "Desire to learn C# OOP",
        "A Windows or Mac for installing all the free software and tools needed to practice",
        "Visual Studio - You can use any version of Visual Studio",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device."
      ],
      "description": "Hello there,\nWelcome to Complete C# Programming: Beginner to Advanced with C# OOP course.\nLearn C# with hands-on projects, dive in C# OOP advanced step by step guide to classes, interfaces and C# OOP examples\nWhether you’re using C# in conjunction with Xamarin Forms to build cross-platform apps, or designing a new video game in Unity with C#, Udemy has a course for you. Udemy hosts top-rated courses on everything from the fundamentals of C# programming to more advanced topics like databases and asynchronous programming.\n\nEven though C# is a language that’s relatively easy to learn and maintain, it isn’t just for beginners. Its scalability and large support community make C# the language of choice for Microsoft app developers and video game developers working with the Unity Engine. Like C++ and Java, C# is a high-level object-oriented programming language. It is generally more efficient than Java and has useful features such as operator overloading. C# is based on C++ but has several advantages over this older language: it is type-safe, more comprehensively object-oriented, and the syntax has been simplified in several important ways. Most importantly, C# interoperates exceptionally well with other languages on the .NET platform. For this reason, C# is a better choice for building applications for .NET.\n\nMost programmers will choose to learn the object oriented programming paradigm in a specific language. That’s why Udemy features a host of top-rated OOP courses tailored for specific languages, like Java, C#, and Python.\nObject-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real world objects into software modules called classes. Consider a simple point of sale system that keeps record of products purchased from whole-sale dealers and the products sold to the customer. An object-oriented language would implement these requirements by creating a Product class, a Customer class, a Dealer class and an Order class. All of these classes would interact together to deliver the required functionality where each class would be concerned with storing its own data and performing its own functions. This is the basic idea of object-oriented programming or also called OOP.\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its .NET initiative. The .NET framework and .NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL. C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with. Many programming languages in the past were designed for specific purposes. C# was developed with business and enterprise needs in mind. By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages. That includes generics, var types.\n\nWhat are the advantages of c# over C++ ?\nThanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications. Visual Basic was for business applications. What C# does is combine the rapid development capabilities of VB with the power of C++. C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables. It uses a simplified syntax, a huge improvement over the complex coding often required in C++. C# also removes memory management issues thanks to .NET’s garbage collection scheme. You do not have to reference items for garbage collection; the system can reclaim that memory as required.\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members so that they are treated as a single object. It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer. Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs. For example, suppose you have an object called “Patient” that contains patient-related data. In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data. In addition to information hiding, you can use encapsulation in C# to improve your code's reusability.\n\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development. In web application development, you can build dynamic websites and apps using .NET or another open-source platform of your choice. Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications. There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space. Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#.\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods. A method is a block of code that contains a series of statements. Programs run by executing methods. A constructor is a special method of a class that is automatically called whenever an instance of a given class is created. A constructor contains the instructions that execute when an object is created. Developers use it to assign specific initial values to the data members of the same class. In C#, you will get a compile-time error if you try to read from an uninitialized variable. You must first initialize your variables by giving them an initial value, which is what the constructor does. On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed. Destructors are called implicitly by the garbage collector in .NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on. There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it. However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey. The first thing to learn about is what C# is, how and where it is used, and why it was developed. From there, you can learn about data types, variables, keywords, and functions. Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling.\nDo you want to learn C# but have no experience at all.  Our C# course is the perfect place for you to start. In this course, we designed C# .NET  course to give you everything you need to become productive with C#.\nOOP, Object-oriented programming,  is the foundation of many current application development approaches. Interfaces and principles of object-oriented programming are crucial. It does not important whether you want to use C# to build web apps, mobile apps,  games, or understanding C# classes if you want to succeed with clean coding, agile, and design patterns, you have to master OOP.\nIn this course, we use interactive programming techniques; which means we will be building applications together and furthermore there will have lots of home-works to be done, of course, followed by answers. There will be lots of tips and tricks regarding beautiful and efficient C# coding techniques.\nCode with C# today!\nEnroll and master fundamentals of C# and programming with .NET framework, because you'll have lots of options waiting in front of you. Either choose to build mobile apps or you can change a job and work as a web developer. We want you to know that when you know the fundamentals well, switching to different technology stacks is easier.\nThat`s why you are at a great place to start with C#.\nAll my students will have a chance to learn not only the whats but also learn the whys and hows.\nWhat you will learn?\nC# Programming and Features of C#\nVisual Studio IDE\nConsole Application\nVariables\nPrimitive Types and Non-Primitive Types\nFlow Control Expressions\nArrays and Lists\nError Handling and Debugging\nFunctions\nReading File\nWriting to File\nDateTime\nIntroduction to Object-Oriented Programming\nClass Structure in Detail\nWindows Forms Applications\nSystem Input Output\nClass Hierarchies\nEvent-Driven Programming\nException Handling\nTips and Tricksc# .net\nunity c#\nc# unity\nc sharp\nc sharp programming\nselenium webdriver with c sharp\nselenium with c sharp\nc sharp for beginners\nselenium c sharp\nc sharp from scratch\nunity\nunity 2d\nunity 3d\nc sharp\noop\nc# oop\noop c#\nc# intermediate: classes, interfaces and oop\nc# oops\noops c#\noops in c#\noop in c#\noops concepts c#\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and the C# is easy to understand for the beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the C# language and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our Complete C# Programming: Beginner to Advanced with C# OOP course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Newbies or students looking for a refresher on the basics of C# and .NET",
        "People who wants to learn C# OOP",
        "People who wants to read and write C# code",
        "People who wants to learn Visual Studio",
        "Anyone who wants to learn how to code with C# programming language, regardless of their current level",
        "Anyone who wants to improve their programming skills",
        "Anyone who wants to build object oriented and / or windows forms applications",
        "Anyone who is interested in developing software with a design pattern",
        "Anyone who wants to develop .NET applications",
        "People who are willing to make a career in the corperate world",
        "People who wants to develop unity 2D or unity 3D games",
        "People who wants to understand the Unity better",
        "Newbies or students looking for a refresher on the basics of C# and OOP"
      ]
    },
    {
      "title": "Python Programming: Learn Python from Scratch to AI and ML",
      "url": "https://www.udemy.com/course/python-bootcamp-learn-ai-powered-python-programming/",
      "bio": "Learn Python Programming from basics to advance level, a complete beginner course with machine learning basics covered",
      "objectives": [
        "Learners will gain a solid foundation in Python programming, including variables, data types, operators, and basic syntax, enabling them to write simple program",
        "Students will learn essential programming concepts such as loops, conditionals, functions, and error handling, which are critical for building efficient and str",
        "Participants will explore Python's built-in data structures like lists, tuples, dictionaries, and sets, and understand how to manipulate and organize data effec",
        "By completing hands-on exercises and mini-projects, learners will build problem-solving skills and apply Python to real-world scenarios."
      ],
      "course_content": {
        "Getting Started with Python": [
          "Introduction : Getting Started with Python: Installation and PyCharm IDE Setup",
          "Python Programming print() Function: Displaying Strings, Numbers, and Variables",
          "Variables in Python: Definition, Usage, and Practice Examples",
          "Python input() Function: Getting User Inputs and Single and Multiple Variables",
          "Data Type Conversion in Python: Casting and Transforming Values",
          "String Indexing in Python: Understanding and Practicing with Examples",
          "String Methods in Python: Manipulating and Working with Text"
        ],
        "Python Basics and Operations: Logic, Conditional Statements, and Control Flow": [
          "Python Arithmetic Operations: Performing Calculations with Ease",
          "Useful Math Functions",
          "Conditional Statements: IF-ELSEIF-ELSE",
          "Python Programming : Learn the Logical AND Operator in Python",
          "Python Programming : Learn the Logical OR Operator in Python",
          "Python Programming : Learn the Logical NOT Operator in Python",
          "Comparison Operators in Python: Key to Control Structures and Logic"
        ],
        "Loops and Data Structures in Python: Efficient Iteration and Organization": [
          "Recap: Revisiting Key Python Concepts and Fundamentals",
          "While Loop in Python: Continuous Iteration and Control Flow",
          "For Loop in Python: Efficient Iteration and Sequence Handling",
          "Lists in Python: Storing and Managing Data",
          "List Methods in Python: Manipulating and Managing Lists",
          "Dictionaries in Python: Storing and Accessing Data with Key-Value Pairs"
        ],
        "Advanced Python Concepts and Object-Oriented Programming": [
          "Handling Exceptions in Python: Mastering Error Management",
          "Functions in Python: Writing Reusable and Modular Code",
          "Classes in Python: Introduction to Object-Oriented Programming",
          "Constructors in Python: Initializing Objects with Custom Logic",
          "Inheritance in Python: Leveraging Code Reusability and Extensibility"
        ],
        "Python Modules and Packages": [
          "Modules in Python: Organizing Code into Reusable Components",
          "Packages in Python: Grouping Modules for Better Structure",
          "Built-in Modules in Python: Leveraging Python's Standard Library",
          "PIP in Python: Managing External Packages and Dependencies"
        ],
        "AI and Machine Learning: Unlocking the Power of Intelligent Systems": [
          "Working with Spreadsheets in AI and Machine Learning",
          "Introduction to Jupyter Notebooks for Data Science",
          "Importing Data: Preparing for Machine Learning Models",
          "Keyboard Shortcuts for Efficient Data Science Workflow",
          "Training Machine Learning Models: A Step-by-Step Guide",
          "Evaluating Model Accuracy: Metrics and Techniques",
          "Exporting Trained Models: Saving and Deploying Your Work"
        ]
      },
      "requirements": [
        "This course is designed for absolute beginners, so no previous coding knowledge is required.",
        "Learners should be comfortable using a computer, navigating files, and installing software.",
        "Students will need a laptop or desktop with internet access to download Python and follow along with the course."
      ],
      "description": "Welcome to Python Course, where you Learn Python Programming from basics: Python Programming from basics to advance level, a complete beginner course with machine learning basics covered\nIn this fast-paced, hands-on course, you’ll revisit the core concepts of Python programming and strengthen your skills in record time. We’ll cover everything from data types, loops, and functions to more advanced topics like object-oriented programming and error handling. Each lesson is focused and practical, providing you with the tools you need to write clean, efficient Python code. You'll also work on mini-projects that apply the concepts learned in real-world scenarios. This course also emphasizes debugging and best practices to ensure you write reliable, high-quality code.\nBy the end of this course, you'll feel confident in your understanding of Python’s essentials, equipped to tackle more complex projects or advance to more specialized areas of programming. Whether you're preparing for a job interview, working on a project, or just brushing up on your Python knowledge, this course has got you covered. With clear explanations and practical exercises, you’ll be ready to take your Python skills to the next level and confidently apply them in your career.\n\nSure! Here’s an alternative ending line for your course description:\nIf you’re ready to sharpen your Python skills and unlock new opportunities, this course is the perfect starting point.",
      "target_audience": [
        "Individuals with no prior programming experience who want to start their coding journey with Python.",
        "Those looking to build a strong foundation in Python to pursue careers in software development, data analysis, or automation.",
        "Students, professionals, or hobbyists seeking to learn Python quickly for academic projects, career advancement, or personal growth.",
        "Individuals transitioning into tech roles who need a beginner-friendly yet comprehensive introduction to Python."
      ]
    },
    {
      "title": "Self Driving and ROS 2 - Learn by Doing! Map & Localization",
      "url": "https://www.udemy.com/course/self-driving-and-ros-2-learn-by-doing-map-localization/",
      "bio": "Create a ROS2 Self-Driving robot with Python and C++. Master Robot Localization, Mapping and SLAM",
      "objectives": [
        "Create a Real Self-Driving Robot",
        "Master ROS2, the latest version of the Robot Operating System",
        "Implement Mapping algorithms",
        "Implement Localization algorithms",
        "Implement SLAM algorithms",
        "Simulate a Self-Driving robot in Gazebo",
        "Programming Arduino for Robotics Applications",
        "Master Nav2",
        "Probability Theory",
        "Use Laser Sensors for real-world applications",
        "Master the slam_toolbox library"
      ],
      "course_content": {
        "Introduction": [
          "Course Motivation",
          "The Self-Driving Program",
          "Course Presentation",
          "Meet your Teacher",
          "[EXTRA]: Boost your Robotics Software Developer Career",
          "Get the Most out of the Course",
          "Course Material"
        ],
        "Setup": [
          "Install Ubuntu on WSL",
          "Install Ubuntu on Dual Boot",
          "Install Ubuntu on Virtual Machine",
          "<LAB>Install ROS 2 Jazzy on Ubuntu 24.04</LAB>",
          "<LAB>Install ROS 2 Humble on Ubuntu 22.04</LAB>",
          "<LAB>Configure the Development Environment</LAB>",
          "<LAB>Getting Started with the Simulated Robot</LAB>",
          "<LAB>How to use the Course Material</LAB>"
        ],
        "Introduction to ROS 2": [
          "Why a Robot Operating System?",
          "What is ROS 2",
          "Why a NEW Robot Operating System",
          "ROS 2 Architecture",
          "Hardware Abstraction",
          "Low-Level Device Control",
          "Messaging Between Process",
          "Package Management",
          "Architecture of a ROS 2 Application",
          "Introduction to ROS 2",
          "<LAB>Create and Activate a Worksapce</LAB>",
          "<PY>Simple Publisher</PY>",
          "<C++>Simple Publisher</C++>",
          "<PY>Simple Subscriber</PY>",
          "<C++>Simple Subscriber</C++>",
          "Workspaces, Publishers, Subscribers"
        ],
        "Probability for Robotics": [
          "Motivation",
          "Random Variables",
          "Conditional Probability",
          "Probability Distributions",
          "Gaussian Distributions",
          "Total Probability Theorem",
          "Bayes Rule",
          "Sensor Noise"
        ],
        "Global Localization": [
          "Where am I ?",
          "Robot Localization",
          "Robotics Convention for Localization",
          "Why a Robotics Convention for Localization?",
          "Gazebo Worlds and Models",
          "<LAB>Give an house to the Robot</LAB>",
          "Local and Global Localization",
          "Local Localization",
          "Global Localization",
          "Wheel Odometry Errors",
          "Laser Odometry Errors",
          "The Real Purpose of Global Localization",
          "Error Propagation",
          "Odometry Motion Model",
          "<PY>Odometry Motion Model</PY>",
          "<PY>Odometry Motion Model with Noise</PY>",
          "<C++>Odometry Motion Model</C++>",
          "<C++>Odometry Motion Model with Noise</C++>",
          "<LAB>Odometry Motion Model</LAB>"
        ],
        "Sensors for Localization and Mapping": [
          "What is a Map",
          "How Robots Perceive the World",
          "Sensors for Self-Driving Robots",
          "1D Sensors - Sonar",
          "2D Sensors - LiDAR",
          "<LAB>Add a 2D LiDAR to the Robot</LAB>",
          "<LAB>Simulate a 2D LiDAR</LAB>",
          "3D Sensors - RGBD Cameras and 3D LiDAR",
          "Speed and Separation Monitoring",
          "twist_mux",
          "<PY>Twist Relay</PY>",
          "<C++>Twist Relay</C++>",
          "<LAB>Configure twist_mux</LAB>",
          "<LAB>Use twist_mux</LAB>",
          "<PY>Safety Stop</PY>",
          "<C++>Safety Stop</C++>",
          "<LAB>Safety Stop</LAB>",
          "ROS 2 Actions",
          "<PY>Create an Action Server</PY>",
          "<C++>Create an Action Server</C++>",
          "<LAB>Create an Action Server</LAB>",
          "<PY>Create an Action Client</PY>",
          "<C++>Create an Action Client</C++>",
          "<LAB>Create an Action Client</LAB>",
          "<PY>Speed and Separation Monitoring</PY>",
          "<C++>Speed and Separation Monitoring</C++>",
          "<LAB>Speed and Separation Monitoring</LAB>",
          "<PY>Display Markers in RViz</PY>",
          "<C++>Display Markers in RViz</C++>",
          "<LAB>Display Markers in RViz</LAB>"
        ],
        "Map Representations": [
          "Map Representation",
          "Topological Maps",
          "OccupancyGrid",
          "Octomap and Voxel Grids",
          "Introduction to Nav2",
          "ROS 2 Lifecycle Nodes",
          "<PY>Create a Lifecycle Node</PY>",
          "<C++>Create a Lifecycle Node</C++>",
          "<LAB>ROS 2 Lifecycle CLI</LAB>",
          "Nav2 map_server",
          "<LAB>Nav2 map_server</LAB>",
          "Quality of Service",
          "<PY>Multi QoS Publisher</PY>",
          "<C++>Multi QoS Publisher</C++>",
          "<LAB>Multi QoS Publisher</LAB>",
          "<LAB>Nav2 map_server CLI</LAB>",
          "Nav2 lifecycle_manager",
          "<LAB>nav2_lifecycle_manager</LAB>"
        ],
        "Mapping with known Poses": [
          "Mapping with known Poses",
          "Occupancy Grid Mapping",
          "<PY>Occupancy Grid Publisher</PY>",
          "<C++>Occupancy Grid Publisher</C++>",
          "<LAB>Occupancy Grid Publisher</LAB>",
          "Understand LaserScan Message",
          "<PY>Draw Obstacles on Occupancy Grid</PY>",
          "<C++>Draw Obstacles on Occupancy Grid</C++>",
          "<LAB>Draw Obstacles on Occupancy Grid</LAB>",
          "Laser Model",
          "<PY>Laser Model</PY>",
          "<C++>Laser Model</C++>",
          "<LAB>Laser Model</LAB>",
          "Probabilistic Occupancy Grid",
          "<PY>Probabilistic Occupancy Grid</PY>",
          "<C++>Probabilistic Occupancy Grid</C++>",
          "<LAB>Probabilistic Occupancy Grid</LAB>"
        ],
        "Localization with known Map": [
          "Localization with known Map",
          "Map-based Localization",
          "Single and Multiple Hypothesis Localization",
          "Markov Localization",
          "Randomized Sampling",
          "Monte Carlo Localization",
          "Nav2 AMCL",
          "<LAB>Nav2 AMCL</LAB>",
          "<LAB>Using Nav2 AMCL</LAB>"
        ],
        "SLAM - Simultaneous Localization and Mapping": [
          "Simultaneous Localization and Mapping",
          "Why another Mapping approach?",
          "<LAB>Why another Mapping approach?</LAB>",
          "Chicken and egg problem",
          "Particle Filter SLAM",
          "EKF SLAM",
          "Graph SLAM",
          "Graph SLAM - Front-End and Back-End",
          "slam_toolbox",
          "<LAB>slam_toolbox</LAB>",
          "<LAB>Using slam_toolbox</LAB>",
          "<LAB>Start all the Functionalities</LAB>"
        ]
      },
      "requirements": [
        "Basic knowledge of Python or C++",
        "Basic knowledge of Linux",
        "No prior knowledge of ROS or ROS 2 required",
        "No prior knowledge of Robotics theory required",
        "No hardware required. All the course can be followed also using only the PC"
      ],
      "description": "Would you like to build a real Self-Driving Robot using ROS2, the second and last version of the Robot Operating System, by building a real robot?\n\n\nWould you like to get started with Autonomous Navigation of robots and dive into the theoretical and practical aspects of Localization, Mapping, and SLAM from industry experts?\n\n\nThe philosophy of this course is the Learn by Doing and quoting the American writer and teacher Dale Carnegie\nLearning is an Active Process. We learn by doing; only knowledge that is used sticks in your mind.\n\n\nIn order for you to master the concepts covered in this course and use them in your projects and also in your future job, I will guide you through the learning of all the functionalities of ROS, both from a theoretical and practical point of view.\n\n\nEach section is composed of three parts:\nTheoretical explanation of the concept and functionality\nUsage of the concept in a simple Practical example\nApplication of the functionality in a real Robot\n\n\nThere is more!\n\n\nAll the programming lessons are developed using both Python and C++. This means that you can choose the language you are most familiar with or become an expert Robotics Software Developer in both programming languages!\n\n\nBy taking this course, you will gain a deeper understanding of self-driving robots and ROS 2, which will open up opportunities for you in the exciting field of robotics.",
      "target_audience": [
        "Self-Driving enthusiast",
        "Makers and Hobbists keen on robotics",
        "Software developers who wants to learn ROS 2 and Robotics",
        "Students or Engineers who want to learn how to build a robot from scratch",
        "Developers who already know ROS 2 and want to use it in a real-world application",
        "ROS Developers who want to learn and migrate to ROS 2",
        "Robotics Engineers who want to develop skills in Autonomous Navigation",
        "Beginner Python developers curious about Self-Driving",
        "Beginner C++ developers curious about Self-Driving"
      ]
    },
    {
      "title": "The C++ Arsenal - Learn C++ and Unreal Engine 5",
      "url": "https://www.udemy.com/course/the-unreal-arsenal/",
      "bio": "Learn C++ Programming and Game Development Fundamentals with Unreal Engine 5 in this Course for Complete Beginners",
      "objectives": [
        "Learn to code with C++, a popular, fast, and powerful programming language!",
        "Learn C++ programming fundamentals through simple examples and illustrations",
        "Learn programming concepts that also apply to other languages",
        "Learn intermediate C++ features, such as memory management, object oriented programming, inheritance, polymorphism, and templates.",
        "Debugging and problem solving skills",
        "Learn the basics of the Unreal Engine 5 framework",
        "Apply your newly acquired C++ skills by building a small game in Unreal Engine 5"
      ],
      "course_content": {
        "C++101 - First Steps": [
          "Why Study C++ Programming?",
          "Orientation and Study Tips",
          "Software Development Facilities",
          "Visual Studio Community 2022 Installation",
          "Creating Empty C++ Console Projects & Adding Files to Projects",
          "The main Function",
          "Operators",
          "Preprocessor Directives, Namespaces and the Stream Insertion Operator - THEORY",
          "Preprocessor Directives, Namespaces and the Stream Insertion Operator PRACTICAL",
          "Pausing Program Execution",
          "Visual Studio - Basic Interface Customization",
          "Altering the Colour Theme in Visual Studio",
          "Saving Window Layouts in Visual Studio",
          "First Steps with C++ Quiz",
          "Lesson 1 Wrap-Up",
          "Using cout and the stream insertion operator"
        ],
        "C++101 - Variables, Comments and Arithmetic": [
          "Variables - Lesson Overview",
          "An Introduction to Literals and Variables",
          "The Assignment Operator and Variable Declaration & Initialization",
          "Variable Identifier Rules and Reserved Words",
          "Arithmetic Operators",
          "Initialization and Arithmetic Examples",
          "Arithmetic and output formatting exercise",
          "Assignment Operators",
          "Console Input",
          "Comments",
          "The Task List and Bookmarks",
          "Initialization Options",
          "Integer Types and the sizeof Operator",
          "The Division and Modulus Operators",
          "The Increment and Decrement Operators",
          "Variables and arithmetic Quiz"
        ],
        "C++101 - Floating-Point Types and Conversions": [
          "Floating-Point Types and Conversions Lesson Overview",
          "Floating-Point Types",
          "Constants",
          "Conversions and Mixed Expressions",
          "Floating-Point Representation and Conversion",
          "Floating Point Types and Conversions"
        ],
        "C++101 - Conditional Execution and Logical Operators": [
          "Conditional Execution and Logical Operators - Lesson Introduction",
          "The bool Type",
          "Relational Operators",
          "The if Statement",
          "Nested if...else Statements",
          "Nested if else statements exercise",
          "Logical Operators",
          "Relational Operators Exercise",
          "Test for a number in range",
          "Short Circuit Evaluation",
          "The char Type and Escape Sequences",
          "The if...else...if Statement",
          "Expressions Vs Statements"
        ],
        "C++101 - Switch Statements and the Conditional Operator": [
          "Switch Statements and the Conditional Operator - Lesson Introduction",
          "The switch Statement",
          "From day number to day name using a switch statement",
          "The Conditional Operator",
          "Visual Studio Tips & Tricks",
          "Multi-Caret Editing"
        ],
        "C++101 - Iteration Statements": [
          "Iteration Statements Lesson Introduction",
          "The while Loop",
          "Using the while loop to output the range of integers from 1 to 5",
          "The do...while Loop",
          "Counter, Sentinel and Situation Driven Loops",
          "Block Variables, Input Validation and Boolean Driven Loops",
          "The for Loop",
          "The sum of odd integers",
          "The break and continue Statements",
          "Nested Loops"
        ],
        "C++101 - Functions": [
          "Functions Lesson Overview",
          "An Introduction to Functions",
          "Value-Returning Functions",
          "Parameter Terminology and Function Comments",
          "A custom abs function",
          "Default Arguments",
          "The C++ Standard Library Headers",
          "Global Variables",
          "Functions Lesson Wrap-Up"
        ],
        "C++101 - Arrays and Range Based for Loops": [
          "Arrays Lesson Introduction",
          "An Introduction to Arrays",
          "One-Dimensional Array Examples",
          "Count the number of characters in an array",
          "The Range-Based for Loop",
          "Display the power of all integers in an array",
          "Type Inference with auto and decltype",
          "Two-Dimensional Arrays",
          "Three-Dimensional Arrays",
          "Arrays Lesson Wrap-Up"
        ],
        "C++101 - Debugging Fundamentals": [
          "Debugging Foundations",
          "Warnings and Warning Suppression",
          "Debugging in Visual Studio",
          "Refactoring",
          "Drivers and Stubs",
          "Stub Demo",
          "Programming Principles",
          "Rubber Duck Debugging"
        ],
        "C++101 Module Wrap-Up and Bonus Lectures": [
          "Configure the Default Project Location in Visual Studio",
          "Keyboards for Programming - Layouts and Ergonomics",
          "Note Taking and Learning Tips",
          "Customizing the Toolbars in Visual Studio",
          "What Sets This Course Apart"
        ]
      },
      "requirements": [
        "Windows PC capable of running Visual Studio and Unreal Engine 5.",
        "Dedication and willing to work hard."
      ],
      "description": "If you are an aspiring C++ developer or indie game developer, this course is for you!\n\n\nC++ is a fast, powerful, flexible, and feature-rich programming language. For more than twenty years, it has been ranked among the top five most popular programming languages!\n\n\nC++ is a widely used language for writing operating systems, image manipulation software, database engines, game engines such as Unreal Engine, and much more.\n\n\nBecause of its popularity and widespread use, having C++ skills can open up career opportunities.\n\n\nHaving C++ language skills is often seen as a badge of honour among software developers.\n\n\nWe begin from the very basics, studying C++ language features in isolation by using simple console applications.\n\n\nIntermediate C++ topics such as object-oriented programming, pointers, inheritance, and templates can be intimidating to some students, but I use simple examples, summaries, exercises, and step-by-step illustrations throughout.\n\n\nTo become a confident and competent C++ developer, you must understand that frameworks such as Qt and Unreal Engine have different implementations of some functionality. If you learn standard C++ only and expect to pick up those frameworks easily, you may end up disheartened by just how complex and confusing these frameworks seem. This course features Unreal Engine 5 lessons to help in this area. These lessons introduce the Unreal Engine framework in simple, step-by-step lectures with many exercises that will help boost your C++ problem-solving skills.\n\n\n\n\nWhat will I learn?\nFollowing the foundational modules, C++101 and C++102, you will learn to use intermediate C++ features to program game logic in Unreal Engine 5.\n\n\nModule C++101 (fundamentals):\nIn this module, we explore variables and variable types. Variables allow us to store things such as numbers or characters.\nI introduce Conditional Statements and Logical Operators. We will learn how to write decision-making logic.\nNext, we look at Iteration statements such as the while() loop and the for() loop. These statements allow us to write code that can execute repeatedly. We also have interesting ways to control the looping/repetition.\nI introduce Arrays, which are like containers of variables.\nThis module also includes an introduction to Functions, debugging, and some Visual Studio tips & tricks to speed up your workflow.\n\n\nModule C++102:\nObject Oriented Programming: Structs, Classes, Inheritance and Polymorphism.\nPointers and References are covered in detail.\nCharacters, character strings, and the standard string class.\nMore Debugging and Visual Studio tips & tricks.\nThis module also includes intermediate lessons on Templates, Smart Pointers, Callables and more.\n\n\nC++ Standards Covered:\nC++98\nC++11\nC++14\nC++17\n\n\nFor the Unreal Engine 5 content, I begin by introducing the fundamentals of the engine, followed by a simple C++ project where we will apply those fundamentals and also learn a few new things along the way.\n\n\nWhether you have no programming experience, or are already familiar with a programming language and want to learn how to code game logic in Unreal Engine 5 with C++, this course is for you!",
      "target_audience": [
        "Complete beginners.",
        "Aspiring C++ Programmers",
        "Aspiring independent game developers.",
        "Developers/Programmers who want to re-skill to game development.",
        "C# or Unity developers who want to broaden their skill set to boost job prospects."
      ]
    },
    {
      "title": "Python, Raspberry Pi, Electronics, and IoT Bootcamp",
      "url": "https://www.udemy.com/course/complete-python-raspberry-pi-and-iot-bootcamp/",
      "bio": "Learn Python 3 Basics, Advanced Python, Scientific Python, Raspberry Pi, Hardware, and IoT projects in a single course",
      "objectives": [
        "Python 3 Basics",
        "Python 3 Advanced Concepts",
        "Setting Up and using Raspberry Pi",
        "Scientific Python Ecosystem",
        "Basics of NumPy and Matplotlib",
        "Image Processing",
        "Work with MySQL",
        "Work with MySQL",
        "Simple LED project with Raspberry Pi GPIO",
        "IoT with Raspberry Pi",
        "Interfacing Hardware and Electronics with Raspberry Pi"
      ],
      "course_content": {
        "Introduction": [
          "Course Objectives, Audience, and Prerequisites",
          "Contents and Topics Overview"
        ],
        "Introduction to Python Programming Language": [
          "What is Python",
          "Python Distributions"
        ],
        "Python 3 and Raspberry Pi": [
          "Single Board Computers and Raspberry Pi",
          "Raspberry Pi OS Setup",
          "Remote Desktop Connection from Windows to Pi with VNC",
          "Install IDLE3 on Raspbian",
          "Python 3 on Raspberry Pi",
          "Additional Remote Connection Software",
          "Turning Raspberry Pi 4 into a Tablet with SunFounder Raspad 3"
        ],
        "Python 3 Basics": [
          "'Hello World!' on Raspberry Pi",
          "Interpreter vs Script Mode",
          "IDLE3",
          "Comparison of Raspberry Pi with PC and Mac"
        ],
        "Python 3 Programming Basics": [
          "Basic Data Types",
          "Assignment Operator",
          "print() function",
          "Comments",
          "input() function",
          "Code blocks and Indentation",
          "Reserved words in Python 3.7"
        ],
        "Arithmetic Expressions": [
          "Assignment Operator and Expressions",
          "Arithmetic Operations",
          "Associativity and Precedence"
        ],
        "Conditional Statements": [
          "Boolean Expressions",
          "If statement",
          "If else",
          "Nested If",
          "Elif Else"
        ],
        "Operators": [
          "Membership Operator",
          "Logical Operators",
          "Bitwise Operators"
        ],
        "Loops": [
          "While",
          "While Break",
          "While Continue",
          "For List",
          "For Range",
          "for-continue-break",
          "Prime numbers",
          "Factorial Computation",
          "Fibonacci Series"
        ],
        "Functions": [
          "Simple Functions",
          "Functions with Arguments",
          "Function with Return Values",
          "Functions with Arbitrary number of arguments"
        ]
      },
      "requirements": [
        "A Windows PC and a Raspberry Pi with Internet Connection",
        "Zeal and enthusiasm to learn new things",
        "a burning desire to take your career to the next level",
        "Prior Programming, electronics, and Maths experience will be very helpful although it is not mandatory"
      ],
      "description": "Become a Master in Python 3 and Raspberry Pi and acquire employers' one of the most requested skills of 21st Century! An expert level Python 3 and Raspberry Pi Professional can earn minimum $150000 (that's four zeros after 15) in today's economy.\nThis is the most comprehensive, yet straight-forward course for the Python 3 and Raspberry Pi on Udemy! Whether you have never worked with Python 3 and Raspberry Pi before, already know basics of Python Programming, or want to learn the advanced features of Raspberry Pi with Python 3, this course is for you! In this course we will teach you Raspberry Pi with Python 3.\n(Note, we also provide you PDFs, python programs, and Jupyter Notebooks in case you need them)\nWith over 215 lectures and more than 25.5 hours of video this comprehensive course leaves no stone unturned in teaching you Python3, Raspberry Pi, Basic Electronics, GPIO, Internet of Things, Image Processing, and much more.\nThis course will teach you Python 3 and Raspberry Pi in a very practical manner, with every lecture comes a programming video and a corresponding Jupyter notebook/ program file that has Python 3 code! Learn in whatever manner is the best for you!\nWe cover a wide variety of topics, including:\nPython 3 Installation on Windows\nRaspberry Pi Setup\nBasics of Python 3 Programming\nAdvanced Python 3 Programming\nObject Oriented Programming\nExceptions in Python\nPip and PyPI\nScientific Python\nNumPy and Matplotlib\nImage Processing with NumPy and Matplotlib\nMySQL and Python 3\nVarious Python IDEs\nInternet of Things\nImage Processing\nData Structures\nGraphs and Networks\nWeb Scrapping\nUnit Testing\nTest Driven Development\nLogging\nIntroduction to OpenCV\nCamera Module\nWebcam\nos and sys libraries\nand many more topics not listed here (see the actual course index for the list of topics)\nYou will get lifetime access to over 215 lectures plus corresponding PDFs, Image Datasets, python programs, and the Jupyter notebooks for the lectures!\nSo what are you waiting for? Learn Python 3 and Raspberry Pi in a way that will advance your career and increase your knowledge, all in a fun and practical way!",
      "target_audience": [
        "People who are just beginning to learn Python and Raspberry Pi",
        "Anyone who wants to learn programming and electronics in depth",
        "Scientists, Mathematicians, Physicists, and Engineers",
        "Programmers and Developers who have not programmed with Python before",
        "People looking forward for careers in domains like Data Science, IoT, and Python Programming",
        "Managers and Business Professionals"
      ]
    },
    {
      "title": "Python 3 for Beginners | Learn by Creating a Simple Game",
      "url": "https://www.udemy.com/course/python-3-for-beginners-online-learning-course/",
      "bio": "Welcome to one of the EASIEST Python 3 courses online! Learn by programming a fun game w/functions, loops & user inputs.",
      "objectives": [
        "Perfect for you if you're new to programming, new to Python or feeling intimidated at all.",
        "Learn the basics of Python programming starting with installing Python on your computer.",
        "Create your own Oregon Trail-like video game from scratch on your computer using Python.",
        "Gain a hands-on understanding of the most useful coding skills such as variables, loops, and functions.",
        "Build the confidence to go out on your own and search for coding ideas online and write your own simple programs."
      ],
      "course_content": {},
      "requirements": [
        "No prior experience needed. You just need a computer and the desire to learn."
      ],
      "description": "Python is one of the fastest growing programming languages. Everyone should know how to use Python. Even if you don't want to become a full-time computer programmer, Python can make you faster and more efficient at your job and even help improve your career prospects. Understanding Python can help you to solve complex problems that don't seem to have a solution outside of programming.\nLearning programming can feel very intimidating at first. That's why this course is designed for beginners to get you familiar with programming in Python in a fun and accessible way. If you've never done any programming or even installed programming software on your computer, this is the course for you! Alex's explanations are simple and easy to follow. He doesn't use a lot of complex jargon like so many computer programming instructors do. He'll walk you through every step, so you can follow along and learn all of the concepts taught in the course.\nAs Alex will tell you in the course, once you have the basics of Python programming down, you can then go out on the internet and lookup other things that you want to code. You can learn as you go and program whatever you want, growing your skills every step of the way.\nHere are just some of the things people do with Python:\nTrack the movement of stocks\nUpdate you when a website changes\nCreate video games\nCreate websites\nDo financial analysis\nSupercharge your computer\nSo, if you're ready to change your life (and maybe even your career) with Python, then this is the course to get you started.\nClick the button and join the course today.\nOr watch some of the free preview lectures to make sure that you'll love Alex's easy-going teaching style.\nAnd remember, with Udemy, you get a 30-day money back guarantee on this course. So, if for any reason you're not happy or feel like you didn't learn the basics of Python programming, you can get a full refund. You have nothing to lose and everything to gain from jumping in and learning Python today!",
      "target_audience": [
        "Beginners who have never programmed before.",
        "New Python users who haven't yet used or downloaded Python on their computer.",
        "Anyone else who has tried programming before but found it too difficult. This course breaks it down into the very simplest basics of programming in Python."
      ]
    },
    {
      "title": "Introduction to Computer Science",
      "url": "https://www.udemy.com/course/introduction-to-computer-science/",
      "bio": "Computer Science made fun and easy.",
      "objectives": [
        "Have a basic understanding of Computer Science",
        "Have an overview of what Computer Science has to offer"
      ],
      "course_content": {
        "Computer Science Introduction": [
          "Course Overview",
          "History of Computers and State of the Art",
          "Software and Hardware Overview",
          "Section 1 Quiz"
        ],
        "Computer Science Programming": [
          "Programming Languages",
          "System Software",
          "More Programming",
          "Data Strctures and OOP",
          "Section 2 Quiz"
        ],
        "Computer Science Algorithms": [
          "Introduction to Algorithms",
          "Operating Systems",
          "Section 3 Quiz"
        ],
        "Computer Science Hardware and Design": [
          "Fundamentals of Hardware",
          "Computer Organization and Design",
          "Microarchitecture Design",
          "Section 4 Quiz"
        ],
        "Computer Science Database, Networks and XML": [
          "Introduction to Databases",
          "SQL Databases",
          "XML and UML",
          "Introduction to Computer Networks and their Relevance",
          "Section 5 Quiz"
        ],
        "Computer Science OSI": [
          "OSI Layer",
          "TCP/IP Protocols",
          "The Internet",
          "Computer Security"
        ],
        "Computer Science Web Development": [
          "Web Development",
          "HTML5",
          "Digital Media"
        ],
        "Computer Science The Future": [
          "Computer Graphics",
          "Robotics"
        ],
        "Computer Science BONUS": [
          "Bonus Lecture( FREE STUFF)"
        ]
      },
      "requirements": [
        "How to turn on a computer"
      ],
      "description": "COURSE IS STILL BEING BUILT!!!!!!!!!!!!!!!!!!\n\n\n\nIn this Computer Science course we aim to help you understand Computer Science by explaining to you what goes into it and covering some areas of Computer Science So you can get a feel for it. . This course starts you out by showing you important aspects of Computer Science .\nThose who want to learn Computer Science this is how we do it\nWe use\nLectures\nQuizzes\nWe use these methods to give you a university type setting and feel it is the best way for us to teach you these skills. With Lectures we go over the details of Computer Science and explain how things work and should be done. And in Quizzes we makes sure the knowledge has absorbed. We try to give you a University setting with out the high cost of a University.\nWhat are the requirements?\nNothing is pre required, We go over everything with you and cover everything you need to know in this series.\nWhat am I going to get from this course?\nOver 30 lectures and Tons of content!\nYou will be able to make a decision about Computer Science",
      "target_audience": [
        "Those trying to decide if they want a career in Computer Science",
        "Those who want an idea of what Computer Science offers and covers"
      ]
    },
    {
      "title": "TypeScript Design Patterns And SOLID Principles",
      "url": "https://www.udemy.com/course/design-patterns-using-typescript/",
      "bio": "Complete Guide to Gang Of Four Design Patterns, SOLID Principles and Object Oriented Programming Using TypeScript.",
      "objectives": [
        "Master Gang of Four design patterns in TypeScript to write scalable and maintainable code for real-world applications.",
        "Gain in-depth understanding of SOLID principles to develop clean, modular, and robust TypeScript code for better software design.",
        "Creational Design Patterns including Singleton, Factory Method, Abstract Factory, Builder, and Prototype to effectively manage object creation in TypeScript.",
        "Gain expertise in Structural Design Patterns like Adapter, Bridge, Composite, Decorator and Facade to optimize your code.",
        "Behavioral Design Patterns including Observer, Strategy, Command, Iterator, State, Chain of Responsibility, and Visitor to enhance code flexibility.",
        "Grasp essential Object-Oriented Programming concepts such as inheritance, encapsulation, polymorphism, and abstraction to write clean, modular TypeScript code.",
        "Apply your knowledge through comprehensive real-world examples, solidifying your grasp on design patterns and OOP concepts in practical TypeScript projects."
      ],
      "course_content": {},
      "requirements": [
        "Basic familiarity with TypeScript and its Object-Oriented features is recommended.",
        "An eagerness to learn and expand your programming skills is essential for making the most out of this comprehensive course.",
        "Basic knowledge of TypeScript syntax is sufficient; you don't need to be well-versed in Object Oriented Programming concepts, as we'll cover that in the course."
      ],
      "description": "Welcome to this one-of-a-kind course specifically designed to transform your TypeScript programming skills by diving deep into the world of Gang Of Four Design Patterns, SOLID Design principles, and Object-Oriented Programming (OOP) concepts. Are you an aspiring or intermediate programmer looking to level up your game? Or are you an advanced programmer and need a refresher on the Gang Of Four Design Patterns and SOLID Design Principles? Do you have a grasp of TypeScript and now want to focus on architectural excellence and code reusability? If so, you've come to the right place!\n\n\nThis course isn't just another tutorial; it's your passport to becoming an advanced TypeScript developer. Throughout more than 140 high-definition videos, totaling over 10 hours of content, we'll delve into the nuances of effective software design and programming. We go beyond theory by providing practical, hands-on coding exercises and quizzes that reinforce your learning and provide the skills you need for the real world. With this course, you don't just learn; you practice, implement, and master the art of writing clean, efficient, and robust TypeScript code using the SOLID Design Principles and Gang Of For Design Patterns using TypeScript.\n\n\nUniquely, this course covers all three key areas you need for excellence in modern software development:\nDesign Patterns: Master the Gang Of Four Design Patterns like Singleton, Builder,  Strategy, and many more to solve specific problems efficiently.\nSOLID Design Principles: Understand and implement the SOLID principles that serve as the foundation for writing maintainable and scalable code.\nObject-Oriented Programming Concepts: Learn and apply the four pillars of OOP—Inheritance, Encapsulation, Polymorphism, and Abstraction—in TypeScript, enabling you to write code that is both functional and elegant.\n\n\nDesign Patterns You Will Learn In This Course:\nCreational Design Patterns\nFactory\nAbstract Factory\nBuilder\nPrototype\nSingleton\nStructural Design Patterns\nDecorator\nAdapter\nFacade\nBridge\nComposite\nBehavioral Design Patterns\nCommand\nChain of Responsibility\nObserver Pattern\nInterpreter\nIterator\nState\nStrategy\nTemplate\n\n\nBy the end of this course, you'll not only have a deep understanding of Software Design Patterns, SOLID principles, and OOP in TypeScript but also be equipped with the practical skills to apply these concepts in your future projects. Whether you are developing enterprise-level applications or working on freelance gigs, the skills you acquire here will make you stand out in the TypeScript development community.",
      "target_audience": [
        "TypeScript developers eager to elevate their programming capabilities by mastering Design Patterns and SOLID principles.",
        "Ideal for programmers intending to work on large-scale TypeScript projects, offering essential skills for maintainable and scalable code.",
        "Perfect for TypeScript developers aiming to contribute to popular OOP-based GitHub repositories, providing the design pattern expertise required.",
        "Ideal for those seeking to improve their ability to read and understand complex code, by mastering design patterns and OOP concepts.",
        "Perfect for TypeScript developers aiming to elevate code quality through the effective use of design patterns and SOLID principles."
      ]
    },
    {
      "title": "Introduction to Kubernetes using Docker",
      "url": "https://www.udemy.com/course/introduction-to-kubernetes-using-docker/",
      "bio": "Kubernetes: The World of Microservices",
      "objectives": [
        "What is container orchestration",
        "Learn how to install Docker from scratch",
        "Install a Kubernetes cluster from scratch",
        "Create Kubernetes pods, deployments, and services",
        "Configure Docker Hub and upload images",
        "How to use Docker to run and manage containers"
      ],
      "course_content": {},
      "requirements": [
        "You also need to have a valid credit card to open up a trial account on Google Cloud platform"
      ],
      "description": "Docker dramatically changed (for the better) the lives of those who transfer, install and manage software applications on a regular basis. It made the process much less complicated and virtually eliminated any stress involved. Now, Kubernetes has made the whole thing even easier (yes, it’s possible). Want to learn how to containerize your application and then automate it from start to finish? This is the course for you...\nUnderstand the World of Microservices\n·         Install Docker and a Kubernetes cluster from scratch\n·         Learn how to run and manage containers effectively\n·         Create Kubernetes pods, deployments and services\n·         Build Docker images and configure Docker Hub from scratch\n·         Deploy a multi-component software application efficiently and easily\nDevelop, Ship and Run Applications with Ease\nThis course is suitable for everyone, from complete beginners right up to expert computer nerds. All you need is a fast internet connection, a credit card to set up a free trial on Google Cloud (no extra cost), and a basic working knowledge of modern technology.\nYou’ll start off by getting familiar with Google Cloud, Docker and Kubernetes, learning what they do and how you’ll be using them. Then you’ll take an in-depth look at the two most important tools, Docker and Kubernetes. Once you’ve gotten  a good grasp on how each one works, you’ll move on to the course projects. You’ll install WordPress using Google Cloud, which includes creating Docker files, images, and containers along with deploying the site live.\nNext you’ll create and configure a back-end and front-end master and slave nodes with replication controllers; apps managed by Kubernetes using a cluster of VMs. Sound confusing? Don’t worry, you’ll get hands-on training at every step to guide you in the right direction.\nBy the end of this course you will know what containers are and more than one way to use them to deliver software applications faster. You’ll know everything you need to know about Docker and Kubernetes, and you’ll never have to worry about using either one for your software application project ever again!\nAbout Kubernetes and Docker\nDocker is the world’s leading software containerization platform. It packages your application into one standardised unit, wrapping it into a complete file system that contains everything needed to run on a server. Kubernetes is a system created by Google to automate the deployment, scaling and management of containerized applications (like the ones Docker creates). The two combined make life a breeze for anyone needing to transport, install and maintain complex software applications anywhere.",
      "target_audience": [
        "This course is for complete beginners as well intermediate and expert users.",
        "You must be tech savvy and have fast internet connection.",
        "You also need to have a valid credit card to open up a trial account on Google Cloud platform"
      ]
    },
    {
      "title": "Master JSON Using Python",
      "url": "https://www.udemy.com/course/master-json-using-python/",
      "bio": "The Data Engineer's Complete Guide to Working with JSON Data in Python (Beginner to Pro)",
      "objectives": [
        "Comprehend Complex JSON Structures",
        "Parse JSON in Python",
        "Interact with APIs through Python",
        "Alter JSON using Python",
        "Normalize Nested JSON Structures",
        "Convert Python Objects into JSON"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome to the Course!",
          "Installing Python",
          "Installing JupyterLab"
        ],
        "JupyterLab Crash Course": [
          "Working with Python Files",
          "Using the Terminal",
          "Using Interactive Python Notebooks"
        ],
        "JSON Structures": [
          "What is JSON?",
          "Objects",
          "Valid JSON Objects",
          "Arrays",
          "Valid JSON Arrays",
          "Nested JSON",
          "Valid Nested JSON"
        ],
        "Converting JSON Structures to Python Structures": [
          "Data Type Compatibility",
          "Deserializing JSON",
          "Deserialize JSON",
          "Serializing JSON",
          "Serializing & Deserializing JSON"
        ],
        "Manipulating Python Structures": [
          "Navigating Dictionaries & Lists",
          "Navigating Dictionaries",
          "List Methods",
          "List Methods",
          "Dictionary Methods"
        ],
        "Using Pandas with JSON": [
          "Normalizing JSON",
          "Exporting DataFrames to JSON"
        ],
        "Working with APIs in Python": [
          "API Basics",
          "Making Your First Request",
          "Request Components",
          "Response Components",
          "Congratulations!"
        ]
      },
      "requirements": [
        "No Prior Coding Experience Necessary"
      ],
      "description": "Unleashing the Power of Data Transportation with JSON\nYou may not realize it, but JSON is the wizard behind the curtain, orchestrating the smooth flow of data in the background of your daily life. Whether you're making a purchase online or checking the weather on your phone, JSON is the unsung hero making it all possible. With its incredible versatility, JSON is the secret sauce behind modern APIs and web applications. Get ready to unravel the mysteries of JSON and unlock the hidden world of data transportation.\n\n\nThe Multilingual Maestro of Readability\nOne of JSON's most captivating qualities is its unrivaled readability. In addition to being effortlessly decipherable by the human eye, JSON is easily interpreted by a myriad of programming languages. While this course focuses on how JSON can be used in Python, it also covers the fundamental and universal concepts of JSON.\n\n\nHands-on Learning Experience\nBrace yourself for a hands-on, practical learning experience that will unleash your inner coding genius. Become a true JSON master through coding exercises, quizzes, and real-world assignments. Whether you're shaping data structures or orchestrating complex transformations, you'll emerge from this course with a deep understanding of the capabilities Python possesses when it comes to working with JSON.",
      "target_audience": [
        "Aspiring Data Engineers who want to learn how to extract and manipulate data from APIs",
        "Beginner to Intermediate Python Programmers who want to become more proficient in handling JSON data in Python"
      ]
    },
    {
      "title": "Learn SAP ABAP: SAP ABAP Programming Language For Beginners",
      "url": "https://www.udemy.com/course/learn-sap-abap-sap-abap-programming-language-for-beginners/",
      "bio": "SAP ABAP online course will take you from scratch to an advanced level. SAP ABAP programming with hands-on examples!",
      "objectives": [
        "Learn SAP ABAP Programming",
        "Enhance your existing SAP ABAP skills",
        "Learn ABAP from scratch and become ABAP master",
        "Further your SAP career",
        "ABAP Development Tools",
        "ABAP Editor",
        "Transaction Codes For Beginners In ABAP",
        "Creating Data Dictionary Objects",
        "ABAP Programming Events",
        "Open SQL Overview",
        "ALV Grid Control",
        "Documentation",
        "Object-Oriented Programming major Component",
        "Dialog Programming",
        "Build on your procedural ABAP knowledge",
        "SAP ABAP is an object-oriented programming language that SAP developed in 1983 for use within SAP's enterprise resource planning (ERP) platform.",
        "It helps companies manage many, if not all, aspects of their business operations. To understand SAP ABAP, you need to understand SAP first.",
        "SAP is a platform that companies use to manage their internal resources, but there may be times that the company needs to modify the code of its platform.",
        "A common reason a developer might need to use SAP ABAP is that a company wants to integrate its SAP program with another computer program.",
        "The developer would use the SAP ABAP programming language to \"tell\" the SAP program how to speak with the other computer program."
      ],
      "course_content": {
        "What We Will Learn in SAP ABAP?": [
          "What We Will Learn in SAP ABAP course?",
          "FAQ About SAP ABAP, SAP, ABAP",
          "FAQ About SAP ABAP, SAP, ABAP"
        ],
        "SAP Overview": [
          "Intro to ABAP For Programming",
          "What is ERP?",
          "What is SAP?",
          "SAP Functional Modules",
          "SAP R/3 Architecture",
          "SAP ABAP Advantages and Disadvantages"
        ],
        "ABAP Development Tools": [
          "Download and Setup Java Runtime Environment in SAP ABAP Programming",
          "Download and Setup SAPGUI"
        ],
        "Login to SAP System": [
          "Adding a New SAP Application Server",
          "Logon to SAP and Logging Off from SAP",
          "GUI Customization and Navigation",
          "ABAP Editor"
        ],
        "Useful Transaction Codes For Beginners in ABAP": [
          "Useful Transaction Codes For Beginners in ABAP"
        ],
        "Creating Your First SAP ABAP Program": [
          "Create Package in SAP ABAP",
          "My First ABAP Program"
        ],
        "Predefined ABAP Data Types": [
          "Predefined ABAP Data Types"
        ],
        "SAP ABAP - Operators": [
          "Arithmetic Operators in SAP ABAP",
          "Comparison Operators in SAP ABAP",
          "Character String Operators in SAP ABAP"
        ],
        "String Processing in ABAP": [
          "SAP ABAP Introduction",
          "Concatenate String Function in SAP ABAP",
          "Condense… No-Gaps String Function in SAP ABAP",
          "SubFields (SubString) String Function in SAP ABAP",
          "Strlen String Function in SAP ABAP",
          "Replace String Function in SAP ABAP",
          "Search String Function in SAP ABAP",
          "Shift String Function in SAP ABAP",
          "Split String Function in SAP ABAP",
          "Translate String Function in SAP ABAP"
        ],
        "Decisions in SAP ABAP": [
          "IF Statement in SAP ABAP",
          "IF... Else Statement in SAP ABAP",
          "Nested IF Statement in SAP ABAP",
          "Case Control Statement"
        ]
      },
      "requirements": [
        "No previous SAP ABAP knowledge is required!",
        "Basic Computer Knowledge",
        "Desire to learn SAP ABAP Programming",
        "Be able to downoad and install virtual machines",
        "Be able to use SAP Systems",
        "We prefered Windows OS , but this is not mandatory. You can prefer to use other Operating Systems",
        "Desire to learn sap abap programming",
        "Desire to learn SAP ABAP",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Learn SAP ABAP: SAP ABAP Programming Language For Beginners course.\nSAP ABAP online course will take you from scratch to an advanced level. SAP ABAP programming with hands-on examples!\nThis SAP ABAP online course is among the awesome Udemy courses which teach step by step and follow the methodology of introducing concepts and demos ( Learn by doing ) to the students so that they can learn with ease SAP ABAP Programming. Sap abap, abap, sap, sap abap programming, abap on hana, abap programming, sap hana\nSAP ABAP is the most popular enterprise programming language developed by SAP and with this online course, you will be stepping into the world of SAP ABAP.\nLearn by doing!\nFirst, you will understand the fundamental skills needed to understand SAP ABAP programming and then you will start creating your own ABAP programs.\nA step by step approach we will help you to track your progress on the go and learn needed skills gradually at your own pace. At the end of this course, you will both have a knowledge and a practical skillset about SAP ABAP.\nIn this course you will learn;\nABAP Development Tools,\nLog into SAP System,\nGUI Customization and Navigation,\nABAP Editor,\nPredefined ABAP Data Types,\nTransaction Codes For Beginners In ABAP,\nCreating Your First Program,\nOperators,\nLoop Controls,\nLoop Control Statements,\nDecisions,\nString Processing,\nCreating Data Dictionary Objects,\nModularization in ABAP,\nConstants & Literals,\nClassic Selection Screen Programming,\nABAP Programming Events,\nProcessing Statements for Internal Tables,\nOpen SQL Overview,\nReport Programming,\nALV Grid Control,\nDialog Programming,\nDocumentation,\nCreate New Maintenance Table,\nObject-Oriented Programming major Component\nWhat is SAP ABAP?\nSAP ABAP is an object-oriented programming language that SAP developed in 1983 for use within SAP's enterprise resource planning (ERP) platform. It helps companies manage many, if not all, aspects of their business operations. To understand SAP ABAP, you need to understand SAP first. SAP is a platform that companies use to manage their internal resources, but there may be times that the company needs to modify the code of its platform. To do so, they would use a language called \"SAP ABAP.\" When they want to customize their platform, they get an SAP ABAP developer to program code — which can be thought of as a language that computers use — to tell the program what to do. A common reason a developer might need to use SAP ABAP is that a company wants to integrate its SAP program with another computer program. The developer would use the SAP ABAP programming language to \"tell\" the SAP program how to speak with the other computer program.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nNo Previous Knowledge is needed!\nThis course will take you from a beginner to a more experienced level.\nIf you are new to SAP ABAP or have no idea about what an ABAP programmer does no problem, you will learn anything you need to start SAP ABAP.\nIf you are working as an ABAP Programmer and you just need a refresher, you are also in the right place. You will learn step by step with hands-on examples.\nFresh Content\nSAP ABAP is used by the biggest organizations in the world to run their business systems. It’s no secret how technology is advancing at a rapid rate. New tools are released every day, SAP updates its system, and it’s crucial to stay on top of the latest knowledge. With this course you will always have a chance to follow latest trends.\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nLearn SAP ABAP: SAP ABAP Programming Language For Beginners\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to learn SAP ABAP language",
        "SAP Functional consultants who want to learn fundamentals of ABAP",
        "Beginners who are trying to get a job in IT industry in SAP",
        "Anyone who wants to become a seasoned ABAP Programmer",
        "SAP teams those involve in a SAP implementation project",
        "SAP ABAP Programmers",
        "People who want to learn sap abap programming",
        "People who want to develop sap erp"
      ]
    },
    {
      "title": "Java Generics In-Depth",
      "url": "https://www.udemy.com/course/java-generics-in-depth/",
      "bio": "Master Generics and gain a deep understanding of how to use, read and apply Generics in Java.",
      "objectives": [
        "Learn why Generics exist and how you can use it to make your code better",
        "Create your own Generic types to implement elegant solutions to problems",
        "Understand wildcards, upper bounds, lower bounds and master Generics syntax",
        "Gain knowledge to tackle the trickiest interview questions about Generics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Generics Basics": [
          "What are Generics?",
          "Generics In Lists Explained",
          "Autoboxing with Generics",
          "Parameterized types explained"
        ],
        "Generics Internals": [
          "How Generics works",
          "Generic lists vs typed arrays",
          "Create your own generic type",
          "Generics with constructors",
          "How inheritance works with generic types"
        ],
        "Wildcards and Advanced Generics": [
          "Generics wildcards explained",
          "Using Generics upper bound wildcards",
          "Using Generics wildcards",
          "Generics with multiple type parameters",
          "Using multiple upper bound types",
          "Using lower bound wildcards",
          "Using generics with static methods"
        ],
        "Next Steps": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Java programming knowledge"
      ],
      "description": "How often do you use Java Generics when writing your own types?\n\n\nJava Generics is very much an underrated and underutilized feature of Java. Yes, Java Generics is a necessary skill when working with Collection classes. But the true power lies with using it for your own types!\n\n\nMost Java developers get by with a rudimentary knowledge of Generics. However a good understanding of Generics adds an extra dimension to your Java code that makes it more type-safe and easier to work with.\n\n\nThis course covers an in-depth treatment to Java Generics and turn it from being a pain to being a joy to use.\n\n\nTopics covered:\n- Learn how Generics works with primitive types in conjunction with another Java feature - autoboxing and unboxing\n- Understand what parameterized types are. What does it mean to add parameter to type information?\n- Learn how to create your own custom generic types\n- Implications of Generics with inheritance and polymorphism\n- Understand wildcards, upper bounds and lower bounds with Generics\n- Learn how to work with static methods using Generic types\n\n\nTaught in the inimitable Java Brains style, this course covers everything you need to know to wield the power of Generics in your Java code as well as understand Generics syntax in other Java code.",
      "target_audience": [
        "Java Programmers, IT professionals who want to scale up their coding skills"
      ]
    },
    {
      "title": "Introduction to Python for genetics",
      "url": "https://www.udemy.com/course/introduction-to-python-for-genetics/",
      "bio": "Learn how to simulate and model basic problems of genetics in the Programming language Python!",
      "objectives": [
        "You will learn how to model genetics problems with Python",
        "The basic mendelian genetics",
        "DNA replication",
        "DNA transcription",
        "DNA translation",
        "The Hardy-Weinberg Theorem",
        "The main variable types",
        "User input",
        "Arithmetic operations",
        "Relational and logical operators",
        "Conditional statements",
        "For and while loops",
        "Tuples, lists and dictionaries",
        "Functions",
        "Modules",
        "File I/O",
        "How to calculate the frequency of recombinant genotypes and estimate the gene distance",
        "How to model the transcription process",
        "How to model the translation process",
        "How to solve a population genetics problem"
      ],
      "course_content": {
        "Introduction to the course": [
          "Course overview/introduction",
          "About the speed of the lectures"
        ],
        "####PART 1: BASIC GENETICS ######": [
          "Basic concepts",
          "The gene-protein flow and building blocks",
          "Inheritance and recombination",
          "The transcription process",
          "The translation process",
          "Population genetics: the Hardy-Weinberg Theorem",
          "Basic concepts of genetics"
        ],
        "#####PART 2: PROGRAMMING WITH PYTHON #####": [
          "Introduction to Python",
          "The importance of Python for biosciences",
          "The COLAB environment"
        ],
        "Variables and types": [
          "Main variables and types",
          "Arithmetic operators",
          "User input",
          "Variables, types, user input, arithmetics",
          "Exercises",
          "Solution - Estimating recombination frequency",
          "Erratum",
          "Solution - Calculating allele frequencies"
        ],
        "Strings and text manipulation": [
          "Strings - concept and methods",
          "String manipulation",
          "Exercises",
          "Solution: finding start and termination codons",
          "Solution: manipulating a DNA string"
        ],
        "Relational/logical operators and conditional statements": [
          "Relational/logical operators",
          "Conditional statements",
          "Nested and complex conditions",
          "Logical operators and conditional statements",
          "Exercises",
          "Biomolecule classifier",
          "Polypetide sequence analysis with string manipulation"
        ],
        "For and while loops": [
          "The for loops",
          "The \"nested\" for loops",
          "The while commands",
          "Loops",
          "Exercises",
          "Solution - base pairing verification",
          "Solution - Simulating the transcription process",
          "Solution - Hamming distance"
        ],
        "Tuples, lists and dictionaries": [
          "Tuples",
          "Lists",
          "Dictionaries",
          "Collections",
          "Exercises",
          "Solution - Transcription process with dictionaries",
          "Solution - Modelling the translation process",
          "Solution - challenge 1: RNA splicing"
        ],
        "Functions": [
          "Functions: definition and declaration",
          "Functions: optional parameters, scope and docstrings",
          "Functions",
          "Exercises",
          "Solution - A function that extracts the proportion (%) of AT's/CG's",
          "Solution - function that calculates the recombination frequency",
          "Solution - Challenge 1: Hardy Weinberg Theorem - interpretation of the results"
        ],
        "Modules": [
          "The math module",
          "The random module",
          "The time module",
          "Modules",
          "Exercises",
          "Solution - generating a random DNA sequence",
          "Solution - Timing the random sequence generation function",
          "Solution - Challenge 3: simulating the reproduction of two genotypes"
        ]
      },
      "requirements": [
        "A basic knowledge of genetics is desirable, but the course has a brief review of genetics at the beginning"
      ],
      "description": "Many students and professionals of biosciences are not familiar with programming. However, the increasing amount of biological data generated every year, along with advances in biotechnology and the increasing role of informatics in life sciences makes the programming knowledge essential for biologists, biotechnologists, and so on! In this introductory course, you will learn how to model simple genetics problems using the programming language Python. First, you will learn how to implement the commands or data structures in Python. And Finally, we will model some problems in the field of genetics using the knowledge acquired so far.\nSince this is an introductory course, we will not use third-party libraries, such as Biopython, matplotlib, pandas, etc., but only the built-in commands, modules, and data structures.\nIn the first section of the course, we have a very brief introduction to refresh some concepts of genetics, such as genes, alleles, frequency, etc... In the second part of the course, you'll learn the basic commands, data structures, and functions of Python. In these chapters, you must apply the knowledge acquired so far in the chapter to solve some problems related to genetics in Python! There are more than 20 exercises and challenges to be solved throughout the course!\nTherefore, if you want to:\nLearn to think algorithmically\nModel problems of genetics in a programming language\nLearn how to use the most popular programming languages to model problems of biology\n\n\n...this course is for you!",
      "target_audience": [
        "Biologists/biotechnologists",
        "Biology/biotechnologists students",
        "Programmers or computer scientists curious to understand the possible application of Python in genetics",
        "Python and/or genetics enthusiasts"
      ]
    },
    {
      "title": "Web Architecture With Golang - Google's Go Language",
      "url": "https://www.udemy.com/course/learn-golang/",
      "bio": "Learn Golang Web Architecture, Git, Curl, Interfaces, Context, Error Handling, & Escape Analysis with the Go Language",
      "objectives": [
        "Advance your skills with Google's Go (golang) programming language",
        "Learn the fundamentals of web architecture, context, and error handling",
        "Master the nuances of interfaces, method sets, and escape analysis",
        "Enhance your ability to use git and gain skills using curl",
        "Taught by a university professor",
        "From intermediate to advanced concepts",
        "Hands-on exercises with solutions",
        "Over 2.65 Million students taught",
        "Lifetime course access",
        "Learn at your own pace",
        "100% satisfaction guaranteed",
        "Never expires - lifetime access - forever!",
        "This course is tried, tested, and proven",
        "Mobile friendly"
      ],
      "course_content": {
        "Getting started": [
          "Welcome",
          "Course outline"
        ],
        "Git and versions": [
          "Introduction",
          "Github repo",
          "Git ignore",
          "Versioning codebase",
          "Access versions"
        ],
        "Code and curl": [
          "Introduction",
          "Separation of concerns",
          "Reviewing example code",
          "Post with curl",
          "Get with curl"
        ],
        "Hands-on Exercises - Ninja level 1": [
          "Hands-on exercise #1",
          "Hands-on exercise #2",
          "Hands-on exercise #3"
        ],
        "Software architecture": [
          "Introduction",
          "Exploring architecture",
          "Overview of buzzwords",
          "Monolith vs microservices",
          "Serverless",
          "Virtualization",
          "Containers",
          "Container orchestration",
          "Containers and orchestration illustrated",
          "Continuous integration, delivery, deployment",
          "REST",
          "SPA",
          "MVC"
        ],
        "Interfaces": [
          "Introduction",
          "One value, many types",
          "Concrete & abstract types",
          "Using an interface",
          "Using an interface II",
          "Decoupling data storage",
          "Coding the decoupling",
          "Improving the decoupling",
          "Standard library interfaces"
        ],
        "Housekeeping": [
          "Code organization conventions",
          "Adding documentation",
          "Testing",
          "Example tests",
          "No return",
          "Introduction to gomock",
          "Generating gomock code",
          "Testing with gomock",
          "Method sets explained",
          "Method sets example",
          "Empty interface"
        ],
        "Hands-on Exercises - Ninja level 2": [
          "Hands-on exercise #1",
          "Hands-on exercise #2",
          "Hands-on exercise #3",
          "Hands-on exercise #4",
          "Hands-on exercise #5"
        ],
        "Context": [
          "Where we are in the course",
          "Understanding context",
          "Reading documentation",
          "With timeout",
          "With value",
          "Abstracting with value",
          "Done"
        ],
        "Hands-on Exercises - Ninja level 3": [
          "Hands-on exercise #1",
          "Hands-on exercise #2 - attempt 1",
          "Hands-on exercise #2 - attempt 2",
          "Hands-on exercise #3",
          "Hands-on exercise #4 - attempt 1",
          "Hands-on exercise #4 - attempt 2",
          "Hands-on exercise #5"
        ]
      },
      "requirements": [
        "Prerequisite knowledge recommended for this course: familiarity with Google's Go (golang) programming language, and basic skills with git"
      ],
      "description": "There is a reason for the popularity of Google's Go (golang) Programming Language: Go was created by geniuses and is the next step in the evolution of programming languages. Knowing how to use Go well will increase your power and productivity as a programmer.\nThis course will give you the skills you need to advance your Go Programming Language skills. This course is very practical and applicable. It focuses on teaching you skills you can use.\nIn addition, this course will build your skills with web architecture, git, curl, interfaces, context, error handling, & escape analysis.\nPresented with high-quality video lectures, this course will visually show you many great things about Google's Go (golang) Programming Language and collaboration. Co-taught by a tenured professor in California and a Professional Developer, this is just some of what you will learn in this course:\nLearn to succeed as a student\nMaster intermediate skills using git\nLearn how to version your codebase in git\nAcquire the ability to use curl for web requests\nExplore the fundamentals of software and web architecture\nGain insight into REST, SPA, MVC, containers, and container orchestration\nExplore the nuances between monoliths and microservices\nAcquire an understanding of serverless architecture and continuous integration\nSolidify your abilities using interfaces to abstract code and decouple dependencies\nExplore the implications of method sets\nGain insight into code organization conventions\nStrengthen your skills with writing tests and creating mocks\nLearn to use the context package to write idiomatic Go code\nReinforce your abilities to write robust code using Go's error wrapping capabilities\nAcquire a thorough understanding of the heap, the stack, and escape analysis\nThis is an amazing course! This course will change your life. Being skilled at using the Go Programming Language will serve you and your career well. This course will increase your proficiency, productivity, and power as a programmer. You are going to love this course and it will forever change your life.\nYour satisfaction is guaranteed with this course.\nJoin me and enroll now!\n--\nThe art used in the course image was designed by Renee French.\nlicense: Creative Commons 3.0 Attributions license",
      "target_audience": [
        "This course is perfect for individuals who want to build their skills with the Go programming language."
      ]
    },
    {
      "title": "Advanced course on Outsystems Reactive Web Development",
      "url": "https://www.udemy.com/course/complete-course-on-outsystems-development/",
      "bio": "Learn Outsystems In detail, a Job and Certification oriented complete course on Outsystems Reactive Development.",
      "objectives": [
        "You will learn End-To-End Reactive Development With Outsystems.",
        "You will learn basic to advance feature of Outsystems Development.",
        "Students will learn Outsystems coding best practice and understanding around application architecture design.",
        "Students will learn how they can work on enterprise grade application.",
        "You will learn use of some advance UI widgets, and advance Database concepts.",
        "You will learn connecting with external database along with Integration with .NET code via \"Extensions\"",
        "You will learn Web API Integration with Outsystems Application.",
        "And Last but not least, you will learn everything which is required to work as an Outsystems Developer"
      ],
      "course_content": {},
      "requirements": [
        "Good to have basics of Object Oriented Programing Concepts understanding."
      ],
      "description": "Learn how to develop a Reactive Web Application using OutSystems Low Code Platform. Join a practical-based video session to learn the basic and advanced fundamentals of Outsystems. This course will teach you everything that you need to know to become an advanced-level Outsystems developer. A well-designed, well-drafted live video course that will show you live implementation of OutSystems fundamentals.\nCOURSE COVERS\nHow to start working with OutSystems\nCreate your first application and screen In Outsystems\nHow to use Widgets\nHow to perform Database CRUD operation and create forms and screens In Outsystems\nWeb blocks, Modularization, and enforcing role-based security.\nWorking with API, Timer, and BPTs.\nConnecting with External Database\nAdvanced Database Concepts.\nCreating Application Architecture.\nDemo application development to understand the actual development of enterprise-grade applications using Outsystems.\n100 plus detailed video lessons.\nQuiz and assessments to assess the overall understanding and learning from this course.\nOutsystems Best Practices\nLearn Outsystems In Detail\nLearn OutSystems Development\nWHO CAN DO THIS COURSE\nStudents\nIt professionals\nFreelancer\nSoftware Developers\nAnyone\nPREREQUISITE\nBasic understanding of computer\nGood to have a basic knowledge of OOPS concepts.\nTAKE AWAY\nAfter completing this course you could Develop a Reactive web application using Outsystems.\nYou will be able to give an interview and find a Job related to Outsystems Developer\nWill be able to work as a freelance Outsytsems Developer",
      "target_audience": [
        "Students and Professional who want to learn Outsystems.",
        "Novice Outsystems Developer who want to deepen their knowledge and want to learn advance concepts.",
        "Support Engineers, QAs, and Other developers who want to switch their profile to Outsystems Developer.",
        "And everyone who want to learn one of the highest paying skill of 2022."
      ]
    },
    {
      "title": "Object-Oriented Programming (OOP) - Learn to Code Faster",
      "url": "https://www.udemy.com/course/object-oriented-programming-with-python-learn-to-code-faster/",
      "bio": "Learn and Practice Object-Oriented Programming(OOP) with Python, Know how it works, and Learn how to code faster 2023",
      "objectives": [
        "Understand the benefit of using Object-Oriented Programming",
        "Learn how to build programs faster in Python",
        "Use and apply the classes and instances components and tools with many examples",
        "How to use different types of inheritance in different scales",
        "Learn Encapsulation for wrapping code and data together into a single unit",
        "Learn all about Access Modifiers and Getters and Setters",
        "How to use and apply Polymorphism in an object oriented style with many examples",
        "Learn how to abstract a problem in OOP in action",
        "Practice Object oriented programming, basics to advanced level, using Modern Python",
        "Get the instructor QA support"
      ],
      "course_content": {},
      "requirements": [
        "The basics of Python"
      ],
      "description": "Hello and welcome to the Object-Oriented Programming (OOP) - Learn to Code Faster Course.\n\n\nAny software engineer or developer needs to master object-oriented programming well because of its importance and its many advantages in the software industry.\nSo, we have created this course for you.\nTo learn all the important concepts of this type of programming with many practical examples and exercises in depth.\n\n\nIn this course, you will learn OOP (Object Oriented Programming) in Python.\nThis course will cover:\nUnderstand the benefit of using Object-Oriented Programming\nLearn how to build programs faster in Python\nUse and apply the classes and instances components and tools with many examples\nHow to use different types of inheritance in different scales\nLearn Encapsulation for wrapping code and data together into a single unit\nLearn all about Access Modifiers and Getters and Setters\nHow to use and apply Polymorphism in an object oriented style with many examples\nLearn how to abstract a problem in OOP in action\nPractice Object oriented programming, basics to advanced level, using Modern Python\nGet the instructor QA support\n\n\nPython is an object-oriented programming language, it’s very popular, has many advantages, and has a strong presence in all areas of software, in addition to being easy to learn, read and understand in a short time.\n\n\nOnce you complete this course, you will have learned all the concepts of object-oriented programming with application programs and many exercises, and you will be able to use this type of programming with ease and understanding to create high-professional programs, quickly and efficiently. We are here to help you at all times.\nThis course only requires knowledge of the basics of the Python programming language.\n\n\nMy name is Ahmed Ibrahim, a software engineer and Data Science Professional, and I have helped more than five hundred thousand students in this field, including developers, engineers and data analysts from more than one hundred and seventy-nine countries around the world.\nI hope that you will join us in this important course that contains a treasure of important information for everyone in the field of software.\n\nLet's get started to learn how to build programs faster in 2023!",
      "target_audience": [
        "Anyone who wants to learn how to code faster",
        "Programmers, Software Developers, and Software Engineers",
        "Python developers",
        "Anyone who wants to learn and practice OOP"
      ]
    },
    {
      "title": "Fundamentals of Programming",
      "url": "https://www.udemy.com/course/fundamentals-of-programming/",
      "bio": "The boring theory that YOU NEED if you want to make solid games and apps - Swift , C# Unity3D",
      "objectives": [
        "Learn the fundamentals of programming",
        "learn control flow statement",
        "practice exercises",
        "swift langage, and c# for Unity 3D",
        "learn about variables",
        "objects",
        "object oriented programming",
        "classes, inheritance, abstraction,"
      ],
      "course_content": {},
      "requirements": [
        "a desire to learn"
      ],
      "description": "Do you want to make cool video games and apps?\nDo you feel uncomfortable with programming?\nYou should, because programming is not always easy.\nSometimes, making one mistake in the code can bring software bugs\nSome bugs can be devastating such as this bug in the PACMAN game where the letters appears on top of the level, making the level unplayable.\nTo write good code, you need solid foundation.\nThis is what this course is all about.\nThis course teaches you the fundamentals of programming, just like you would learn in an American University, but in a fun way with real-life example that everyone understands.\nJoin this course now, your future self will thank you for it.\nSPOILER ALERT:\nNobody grew up thinking when I grow up I want to be a programmer, NOP!\nWe want to be superheroes, police officers, firemen, astronauts and make cool video games and apps.\nNow as soon as you try to make video games and apps, yo do a little research, next thing you know you need to learn how to program. You read a little bit about programming and then you're TURNED OFF. You know it's going to be a pain but you also know it's worth it because you're going to make awesome things with programming, right?!!!\n\n\nWell that's what this course is all about. You get a solid knowledge of the fundamentals of programming, just like you would learn in an American University, but not as boring. The instructor tries to keep it an entertaining as possible and to give you as many real-life example so that you're never lost.\nProgramming is a main activity of computers. It is a skill for creation. Once you can do it, the sky's the limit over what you can make computers do. A program is just a plan of action a machine can follow. Become a master and have your computer do everything you ask it to do.\nLearn the fundamentals now. Your future self will thank you for taking this course.",
      "target_audience": [
        "cool kids",
        "nerds and geeks",
        "Mark Zuckerberg fans",
        "Ironman fans"
      ]
    },
    {
      "title": "Get your Java dream job! Beginners interview preparation",
      "url": "https://www.udemy.com/course/get-your-java-dream-job-junior-interview-preparation/",
      "bio": "Learn Java Fundamentals, Object Oriented, Arrays, Collections, Maps and Solve puzzles to win Java interview questions!",
      "objectives": [
        "You will answer many Java interview questions more correctly and accurately",
        "Cope professional java interview with more confidence",
        "You will achieve better understanding in the Java topics learned in the course."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in Java",
        "Basic knowledge in Eclipse IDE"
      ],
      "description": "Hello and Welcome!\n\nScared of coding interview?\nThis course will practice you with the must know Java interview questions.\n\nIn addition it will also prepare you to crack Java puzzle pattern. If you can learn the pattern, you can beat coding interview!\nIf you want to get your dream job, and you are serious about your career you should take this course.\nIn this course we will review Java interview questions from different areas:\n\nJava Fundamentals – String, exceptions, autoboxing, garbage collectors and more.\nArrays - advantages and disadvantages, initialization, search, sort, puzzle.\nObject Oriented Concepts -  encapsulation, polymorphism, inheritance and abstraction. More practically we will discuss inheritance, interface and abstract classes, access modifier, overriding vs Hiding, marker interface and much more.\nCollections - Framework overview, List, ArrayList, Vector, Iterator.\nMaps - Map interface, HashMap, Hashtable\nPuzzles -  Programming puzzles and  \"What wrong with this code?\" questions are frequently asked in software programming Interviews in order to check your knowledge, your logical thinking and how strong and clear your mind is.\nInterview process - Improve your soft skills and understand the interview process that you are going to pass.\nLesson structure\nThe lecture were divided to short lectures of about 5 min each, so you will be able to come back to a specific topic and replay the lesson without the need to search in a specific long video for  the part that you would like to repeat on.\nEach lesson will include several questions; all of them are from real interviews. We'll go over the questions and answer them.\nQuiz\nSummarizing each few classes there will be a quiz, designed to repeat the material and help the student understand it even better.",
      "target_audience": [
        "A student to beginner developer who want to get a job as Java developer"
      ]
    },
    {
      "title": "Java Socket Programming: Build a Chat Application",
      "url": "https://www.udemy.com/course/java-socket-programming-build-a-chat-application/",
      "bio": "Learn Java socket programming concepts and build a multi-user chat application",
      "objectives": [
        "Understand Socket Programming in Java",
        "Write simple Client-Server Applications in Java",
        "Build a multi-user GUI Chat Application in Java"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Overview",
          "Installation of Eclipse IDE and JDK"
        ],
        "Networking Basics": [
          "Client-Server Architecture",
          "TCP/IP Protocol",
          "IP Address and Port Number"
        ],
        "Socket Programming Fundamentals": [
          "Introduction to Java I/O",
          "What is a Socket?",
          "Simple Client-Server Application: Part 1",
          "Simple Client-Server Application: Part 2",
          "Simple Client-Server Application: Part 3",
          "Source Code: Simple Client-Server Application"
        ],
        "Chat Application": [
          "Introduction to Swing",
          "Introduction to Multithreading",
          "Chat Application: Part 1",
          "Chat Application: Part 2",
          "Chat Application: Part 3",
          "Chat Application: Part 4",
          "Chat Application: Part 5",
          "Chat Application: Part 6",
          "Chat Application: Part 7",
          "Chat Application: Part 8",
          "Chat Application: Part 9",
          "Running the Chat Application",
          "Source Code: Chat Application",
          "Bonus Lecture: Discount Coupons for my other Java courses",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of Java is required"
      ],
      "description": "Socket programming is used for developing client-server applications in Java. In client-server architecture, the server provides some service and the client can use this service to get the desired output or result. Sockets also allow two or more computers to communicate with each other over the network using TCP/IP protocol.\nThis course is for anyone who has basic knowledge about core Java concepts and who is totally new to Java socket programming. This course may not be suitable for students/programmers who are not familiar with Java.\nThis course is going to teach you how to write client-server applications in Java using socket programming. It will also teach you how to write a multi-user/group chat application in Java with chat logging functionality. All the concepts are explained in a very simple language. This course is highly practical-based with a very few power-point presentations. Apart from socket programming, this course also gives you a short introduction to some of the Java concepts which are required for understanding our chat application. This chat application will give you a concrete understanding of all socket programming fundamentals.\nAnd finally, a chat application could be a good topic for your school/college mini-project. It is also an area which is quite unique to work on rather than regular Java projects. As it’s a short course, it wont be boring at all. You need to invest only around 2 hours of your time.\nI believe you will enjoy this course and learn a lot. Happy Coding :)",
      "target_audience": [
        "Students, programmers who have some basic knowledge of Java concepts and what to learn Socket Programming",
        "This course may not be suitable for students or programmers who are new to Java and are not familiar with Java core concepts."
      ]
    },
    {
      "title": "Golang For DevOps And Cloud Engineers",
      "url": "https://www.udemy.com/course/golang-for-devops-and-cloud-engineers/",
      "bio": "Learn by example how to use Go (Golang) with REST APIs, Amazon Web Services (AWS), Azure, GitHub, Kubernetes, and more",
      "objectives": [
        "Learn Golang basics by example",
        "Learn how to use Golang as a DevOps or Cloud Engineer with industry specific use-cases",
        "Learn how to use the AWS Go SDK",
        "Learn how to use the Azure Go SDK",
        "Learn how to use the Kubernetes API and Go SDK",
        "Integrate with GitHub Webhooks in Go",
        "Write your own Identity Provider (IdP) with OpenID Connect (OIDC)",
        "Write your own SSH Server and Client in Go",
        "Create an openssl-alike command line utility to create X.509 Certificates to run an https-secured webserver",
        "Integrate Let's Encrypt certificates and use mutual TLS (mTLS) between services",
        "Write your own DNS Server (Resolver) in Go, using only official Golang libraries"
      ],
      "course_content": {},
      "requirements": [
        "Some scripting or programming experience will be a plus, as not every foundational concept will be explained",
        "If you're planning to use AWS or Kubernetes with Go, you'll need some basic AWS/Kubernetes experience"
      ],
      "description": "If you are working in the Cloud or DevOps space, then this course is for you. Golang has been gaining massively in popularity in the recent years. Forget the small shell scripts you'd write to glue things together. You can create real programs with a great programming language created by Google. It compiles fast, it runs fast, it has static typing, and it has been used to write popular applications like Docker and Kubernetes. It's the best choice to write your next applications in!\nI'll show you how to write applications to integrate with any third party that has a REST API. While I'm explaining you our first program that will make API calls, you'll learn step by step how to use Go. Next, I'll show you how to integrate with the AWS API to launch a new instance using Go. Not launching instances anymore because you're workload is completely containerized? The next section shows you how to use the Kubernetes API using the Kubernetes go-client.\nOnce you went on to integrate with those technologies, you should be able to write your own Go code to integrate with the APIs that you're using within your organization. Happy learning!\nI also answer all questions in the Q&A section and you can reach out to me by direct message. I run weekly office hours if you want to talk to me!\nNote: this course has Closed Captions available in English (not auto-generated)\nUpdate 04/2024:\n* Added how to write a Kubernetes Operator Controller in Go",
      "target_audience": [
        "DevOps or Cloud Engineers looking to start using Golang",
        "Anyone with an interest in Golang",
        "Anyone who'd like to use Golang to integrate with AWS / Kubernetes / REST APIs"
      ]
    },
    {
      "title": "Advanced Foundations of Python Programming",
      "url": "https://www.udemy.com/course/advanced-foundations-of-python-programming-complete-training/",
      "bio": "Digging Into The Advanced Foundations of Python Programming - Become An Advanced Python Developer - Hands-On Training",
      "objectives": [
        "Advanced Collections: Named Tuples, Default Dictionary, Counters, Ordered Dictionary, Queues and Deques",
        "Advanced Functions: Zipping, Unzipping, Evaluating expressions, Memory view, Mapping objects with lambda, Enumerating objects and Executing Python expressions",
        "The *args and **kwargs to pass variable number of args",
        "Iterators and Iterables in Python: Iterate over sequences using different techniques and tricks. Building Iterators using FP and OOP",
        "Generator functions with many yield statements and Generator expressions",
        "Metaclass: Built-in metaclasses and building custom metaclass",
        "Decorators: Functional Programming, Regular way to decorate a function, and the best way using @",
        "Comprehensions: List comprehension, Dict comprehension, Set comprehension and Tuple comprehension",
        "Building Logger to indicate the problems",
        "Creating custom Calendar with different ways"
      ],
      "course_content": {},
      "requirements": [
        "Python Basics such as Variables, Data Types, Data Structures, Control Flow, Loops, Functions and Classes",
        "The Jupyter Notebook or any working environment for Python"
      ],
      "description": "Hello and welcome to the Advanced Foundations of Python Programming | 2023 Training Masterclass.\nLearn the Advanced foundations of modern python programming with this powerful, deep, direct to the point and interactive training.\nFor each concept in this course, you'll master the theory then you'll  practice with many real examples.\nDo you want to Advance your Python development career?\nDo you want to be able to create real programs using the advanced concepts of Python?\nThis effective training course is created for you to help you master the most important advanced concepts in python programming language, and it will save your valuable time.\nBy the end of this course you'll learn:\nAdvanced Collections: Named Tuples, Default Dictionary, Counters, Ordered Dictionary, Queues and Deques.\nAdvanced Functions: Zipping, Unzipping, Evaluating expressions, Memory view, Mapping objects with lambda, Enumerating objects and Executing Python expressions.\nThe *args and **kwargs to pass variable number of args.\nIterators and Iterables in Python: Iterate over sequences using different techniques and tricks.\nBuilding Iterators using FP and OOP.\nGenerator functions with many yield statements and Generator expressions.\nMetaclass: Built-in metaclasses and building custom metaclass.\nDecorators: Functional Programming, Regular way to decorate a function, and the best way using @.\nComprehensions: List comprehension, Dict comprehension, Set comprehension and Tuple comprehension.\nBuilding Logger to indicate the problems.\nCreating custom Calendar with different ways.\n\n\nThis advanced training course is full of examples to clarify each concept in detail.\nYou'll master all that and more, and if you encounter any problems during this course, you'll get the QA Instructor support as soon as possible.\nLearn, understand, practice and master the advanced foundations of the python programming language like python experts .\nSo, what are you waiting for, enroll now to go through this advanced and deep Training of the most popular Programming Language on the market, Python.\nBecome An Advanced Python Guru in no time!\nLet’s get started!",
      "target_audience": [
        "Python Beginners who know the Python basics",
        "Intermediate Python developer",
        "Anyone who wants to master the advanced foundations of Python in no time",
        "Python developer who wants to advance his dev career",
        "Python Developers from all levels who know the Python basics and curious about advanced concepts"
      ]
    },
    {
      "title": "C# Console Programming Exercises for Beginners Step by Step",
      "url": "https://www.udemy.com/course/c-sharp-college-programming-exercises-projects/",
      "bio": "Learn C# by doing programming projects for beginners",
      "objectives": [
        "Practice and understand loops, arrays, structures, OOP and more",
        "Code beginner and intermediate projects using C#",
        "Become an intermediate programmer by understanding the how and why of each line in your program",
        "Think like a programmer",
        "Uderstand project requirements and choose the right approach to each solution"
      ],
      "course_content": {},
      "requirements": [
        "Students should have installed Visual Studio in order to follow along.",
        "Students should be actively learning C#",
        "Students should be familiar with the programming concepts presented in the exercises"
      ],
      "description": "C# is an excellent programming language. It’s the main language in the .Net family of languages, and as such, it allows you to program some truly amazing solutions. So, congratulations on choosing to learn this amazing language. :-)\n\nAs it is common among beginner programmers, the enthusiasm to learn often is not enough to make the leap from beginner to intermediate.\nThe bad news is: code fear is real, and it hinders, or even stops your progress. The good news is: you can learn to eliminate it! And all it takes is a little practice and determination. And that’s where this course will help you greatly!\nThe course goes over variety of C# programming exercises and projects. I show you how to put the theory you learned into practice by showing you how to solve each exercise and walking you through all the Why’s and How’s.\nYou and I will go on a journey to program simple solutions using basic programming techniques, all the way to more complex ones, such as multi-dimensional arrays, structure of arrays, and OOP solutions.\nIn the process, you will learn a lot about C# language. You will learn how to translate the project requirements into a working code. You will learn to use many different programming concepts, such as Conditional Statements, Loops, Arrays, Multi-dimensional arrays, OOP… and pick the right one for your solution. But above all, you will learn to think like a programmer!\nThis course is all about practice. Therefore, to benefit from this course, you need to be an active student. It doesn't matter if you are self-taught or attend a programming course. What matters is the time and effort you are willing to put into learning and practicing your skills.\nThere are no lectures in this course. However, I do my best to explain what I am trying to accomplish with each line of code, and touch on common pitfalls, too.\nThis is a course for beginner C# .net programmers who need to put the concepts and theory they learned into practice and for people who prefer to learn by doing.\nIf that's you, then let's start coding!",
      "target_audience": [
        "The course is best suited for students taking C# classes, or self-taught students.",
        "Beginners who are currently learning how to program in C# and need a guided practice exercises.",
        "Students who need to put the concepts and theory they learned into practice.",
        "Beginner C# .Net programmers seeking to cement the knowledge by doing short programming projects that are challenging, yet not out of his/her skill set exercises.",
        "Students who take C# classes and struggle with their homework, or students who need a little help or a reference will love this course."
      ]
    },
    {
      "title": "Learn By Example: Scala",
      "url": "https://www.udemy.com/course/learn-by-example-scala/",
      "bio": "65 examples that will bring Scala to life for you",
      "objectives": [
        "Use Scala with an intermediate level of proficiency",
        "Read and understand Scala programs - including those with highly functional forms - written by others",
        "Identify the similarities and differences between Java and Scala, and use both to their advantage"
      ],
      "course_content": {
        "You, This Course and Us": [
          "You, This Course and Us"
        ],
        "Introducing Scala": [
          "Introducing Scala: Java's Cool Cousin",
          "Installing Scala",
          "Examples 1 and 2 - Hello world",
          "Example 3 - Mutable and Immutable ‘variables’",
          "Example 4 - Type Inference",
          "Type Inference",
          "Example 5 - String Operations",
          "Example 6 - A Unified Type System",
          "Example 7 - Emptiness in Scala",
          "Example 8 - Type Operations"
        ],
        "Expressions or Statements?": [
          "Module Outline - Loops and Conditionals",
          "Example 9 - Statements v Expressions",
          "Example 10 - Defining Values and Variables via Expressions",
          "Example 11 - Nested Scopes in Expression Blocks",
          "Example 12 - If/Else expression blocks",
          "Example 13 - match expressions",
          "Example 14 - match expressions: Pattern guards & OR-ed expressions",
          "Example 15 - match expressions: catch-all to match-all",
          "Example 16 - match expressions: down casting with Pattern Variables",
          "Pattern Matching",
          "Example 17 - for loops can be expressions OR statements",
          "Example 18 - for loops: 2 types of iterators",
          "Example 19 - for loops with if conditions: Pattern Guards",
          "Example 21 - while/do-while Loops: Pure Statements",
          "For Loops"
        ],
        "First Class Functions": [
          "Module Outline - Functions",
          "First Class Functions",
          "Functions v Methods",
          "Example 22 - Functions are named, reusable expressions",
          "Example 23 - Assigning Methods to Values",
          "Example 24 - Invoking Functions with Tuples as Parameters",
          "Example 25 - Named Function Parameters",
          "Example 26 - Parameter Default Values",
          "Parameter Default Values",
          "Example 27 - Type Parameters: Parametric Polymorphism",
          "Example 28 - Vararg Parameters",
          "Example 29 - Procedures are named, reusable statements",
          "Example 30 - Functions with No Inputs",
          "Example 31 - Nested Functions",
          "Example 32 - Higher Order Functions",
          "Higher Order Functions",
          "Example 33 - Anonymous Functions (aka Function Literals)",
          "Example 34 - Placeholder Syntax",
          "Example 35 - Partially Applied Functions",
          "Partially Applied Functions",
          "Example 36 - Currying",
          "Parameter Groups",
          "Example 37 - By-Name Parameters",
          "By-Name Parameters",
          "Example 38 - Closures"
        ],
        "Collections": [
          "Module Outline - Collections",
          "Example 39 - Tuples",
          "Tuples",
          "Example 40 - Creating Lists",
          "Example 41 - Simple List Operations",
          "Lists",
          "Example 42 - Higher Order Functions Introduced",
          "Simple Higher Order Methods",
          "Example 43 - Scan, ScanFold,ScanReduce",
          "Example 44 - Fold, FoldLeft, FoldRight",
          "Example 45 - Reduce,ReduceLeft,ReduceRight",
          "Example 46 - Other, Simpler Reduce Operations",
          "Scan",
          "Fold",
          "Reduce",
          "Example 47 - Sets and Maps",
          "Maps",
          "Example 48 - Mutable Collections, and Arrays",
          "Mutable Collections and Arrays",
          "Example 49 - Option Collections",
          "Example 50 - Error handling with util.Try",
          "Options"
        ],
        "Classes and Objects": [
          "Module Outline - Classes",
          "Example 51 - Classes",
          "Example 52 - Primary v Auxiliary Constructors",
          "Primary Constructors",
          "Example 53 - Inheritance from Classes",
          "Example 54 - Abstract Classes",
          "Example 55 - Anonymous Classes",
          "Example 56 - Type Parameters",
          "Example 57 - Lazy Values",
          "Example 58 - Default Methods with apply",
          "Example 59 - Operators",
          "Example 60 - Access Modifiers",
          "Example 61 - Singleton Objects",
          "Example 62 - Companion Objects",
          "Example 63 - Traits",
          "Traits",
          "Example 64 - Case Classes",
          "Example 65 - Self Types"
        ]
      },
      "requirements": [
        "Basic knowledge of programming, ideally in Java or C#",
        "The course will cover the installation of Scala - no worries on that front!"
      ],
      "description": "These 65 examples will make this cool-new-kid-on-the-block your steady, reliable friend\nLet's parse that.\nScala is cool because its all the rage for big data applications, and because it manages to be more sophisticated and elegant than Java.\nThat said, Java is a steady, reliable friend - a language you can depend upon, and in which you can express yourself.\nThese 65 examples will help you trust Scala the way you trust Java. Each is self-contained, has its source code attached, and gets across a specific Scala use-case. Each example is simple, but not simplistic.\nWhat's Included:\nThe Big Ideas: Before we get to the how, we better understand the why - this course will help clarify why we even need Scala when Java serves us so well\nThe Little Details That Matter: Pattern Matching, If Expressions, For Loops & Yield: Java has if-statements, while Scala has if-expressions. Differences like these matter, this course will cover them.\nFirst Class Functions are perhaps the most dramatically new feature of Scala - the foundation of functional programming support.\nCollections - Lists, Options, the Details of fold/reduce/shift in Scala  are yet another bit of the language that differs significantly from other traditional object-oriented languages. We will spend a lot of time on these topics too.\nClasses, Companion Objects, Traits, Self Types and Dependency Injection are Scala's way of providing Object Oriented support. Some of these concepts are similar to Java - those we will skim over. Others are quite different - we will be sure to cover these in detail.",
      "target_audience": [
        "Nope! Please don't enroll for this course if you are entirely new to programming",
        "Yep! Please DO enroll for this course if you know Java and are now looking to learn Scala from first principles",
        "Yep! Please DO enroll for this course if you are interested in learning functional programming concepts as embodied in Scala"
      ]
    },
    {
      "title": "Functional Programming in JavaScript: A Practical Approach",
      "url": "https://www.udemy.com/course/functional-programming-in-javascript-a-practical-guide/",
      "bio": "Finally, understand and use the concepts of functional programming in JavaScript.",
      "objectives": [
        "Functional programming techniques you can apply right now.",
        "Concepts that define a functional programming approach.",
        "The difference between an OOP approach and a functional approach in JavaScript.",
        "JavaScript libraries such a Lodash and Ramda that support a functional approach.",
        "Techniques such as currying, cloning and composition done using vanilla JavaScript.",
        "JavaScript concepts critical to understanding functional programming.",
        "Creating pure functions that avoid mutations and side effects.",
        "Declarative programming.",
        "Avoiding shared state and mutations."
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Making the Most of this Course"
        ],
        "Introduction to Functional Programming": [
          "Introducing Functional Programming"
        ],
        "Side Effects and Pure Functions": [
          "Avoiding Side Effects and Using Pure Functions",
          "Exercise 1 Start",
          "Exercise 1 Finish",
          "Exercise 1 Follow Up: Other Possible Solutions and the Problems",
          "Exercise 1 Follow Up: Using the Array.find Method."
        ],
        "Avoiding Shared State and Mutations": [
          "Avoiding Shared State",
          "Avoiding Mutations",
          "Cloning Objects",
          "Using the spread Operator for Shallow Cloning",
          "Exercise 2 Start",
          "Exercise 2 Finish",
          "Using Reduce, Map and Filter",
          "Exercise 3 Start",
          "Exercise 3 Finish",
          "Exercise 4 Start",
          "Exercise 4 Finish",
          "Exercise 4 Follow Up"
        ],
        "Function Composition": [
          "JavaScript Concepts Review: First Class and Higher Order Functions, Closure",
          "Function Composition Part 1",
          "Arrow Functions",
          "Exercise 5 Start",
          "Exercise 5 Finish",
          "Function Composition Part 2",
          "Exercise 6 Start",
          "Exercise 6 Finish",
          "Understanding Arity",
          "JavaScript Concepts for Understanding Currying",
          "Deep Dive into Currying",
          "Dissecting the Curry Function",
          "Exercise 7 Start",
          "Exercise 7 Finish"
        ],
        "Understanding Declarative Programming": [
          "Imperative versus Declarative Programming",
          "Exercise on Declarative Programming Start",
          "Exercise on Declarative Programming Finish"
        ],
        "Functional Programming Example: Comparing OOP to Functional": [
          "Functional Programming Example",
          "Example Follow Up"
        ],
        "Lodash": [
          "Using the Lodash JavaScript Library",
          "Exercise 8 Start",
          "Exercise 8 Finish"
        ],
        "Ramda": [
          "Using the Ramda JavaScript Library",
          "Exercise 9 Start",
          "Exercise 9 Finish"
        ],
        "Other Functional Techniques and Articles": [
          "Understanding Recursion",
          "Recursion Take 2",
          "Additional Articles"
        ]
      },
      "requirements": [
        "This course is intended for those that have already been introduced to JavaScript and have used it in projects.",
        "You need to feel comfortable reading and writing JavaScript code."
      ],
      "description": "Are you wanting to learn how to apply functional programming in JavaScript? Have the concepts been a bit difficult to grasp? Are you not quite sure how functional programming differs from other approaches used in JavaScript? If so, this course is for you!\nThe functional programming paradigm was difficult, at first, for me to grasp and implement. Therefore, I wanted to create a course that would help others make the leap and begin applying functional programming techniques into their own code. In this course you will learn techniques that you can apply today. But remember, you don't need to implement everything immediately. Implement those things that make sense and grow into it slowly.\nIn this course I have taken the approach of dissecting a technical definition of functional programming and using that definition as the structure of the course. We will break it down into pieces. Focus on those pieces and the techniques you can use right away. Each new concept will build on the previous concepts. And in the end you will see all the concepts come together.\nIf you learn by doing, this course gives you plenty of chances to work on exercises and then sit back and watch as I go through the exercise. By doing and then watching my approach, you will learn how to apply functional programming concepts to JavaScript.\nJump in today and begin learning a different way of using JavaScript!",
      "target_audience": [
        "JavaScript developers that want to learn functional programming techniques and concepts."
      ]
    },
    {
      "title": "Ladder Logic PLC Programming for Beginners",
      "url": "https://www.udemy.com/course/ladder-logic-plc-programming-for-beginners/",
      "bio": "Learn to Program PLC's in Ladder Logic Through 25 Examples and Exercises",
      "objectives": [
        "How to program PLC's using Ladder Logic/Ladder Diagrams",
        "Understand the fundamentals of Ladder Logic Programming including the relevant terminology.",
        "Understand the fundamentals of Boolean Logic, Boolean Algebra & Truth Tables.",
        "Uderstand how to use Ladder Logic operators and instructions.",
        "Understand a number of commonly used pieces of Ladder Logic code.",
        "Be able to read and write your own Ladder Logic programs/code.",
        "Complete a project where you write Ladder Logic code for a real world automation application."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamentals of Ladder Logic": [
          "What is Ladder Logic?",
          "Ladder Logic Structure & Program Flow",
          "Ladder Logic Terminology",
          "Boolean Logic: The Truth Table",
          "Boolean Logic: Boolean Algebra"
        ],
        "Basic Ladder Logic Instructions": [
          "The Normally Open (NO) Contact (IF A, Then X)",
          "The Normally Closed (NC) Contact (IF NOT(A), Then X)",
          "Combining Contacts: The AND Instruction (IF (A AND B), Then X)",
          "Combining Contacts: The OR Instruction (IF (A OR B), Then X)",
          "A Note on Multiple Outputs",
          "Exercise 1: Three Input AND Instruction",
          "Exercise 2: Three Input OR Instruction",
          "Solution to Exercise 1: Three Input AND Instruction",
          "Solution to Exercise 2: Three Input OR Instruction",
          "Combining Contacts: The XOR Instruction (IF (A XOR B), Then X)",
          "Solution to Exercise 3: Three Input XOR Instruction",
          "Exercise 3: Three Input XOR Instruction",
          "The Latch Circuit (Basic Motor Start/Stop)"
        ],
        "Math & Comparator Instructions": [
          "Addition, Subtraction & Multiplication Instructions",
          "Greater Than, Less Than & Equal To Instructions",
          "Check if a Value is within a given Range",
          "The Move Instruction",
          "Exercise 4: Math & Comparitors",
          "Solution to Exercise 4: Math & Comparators"
        ],
        "Timer Instructions": [
          "The ON Delay Timer",
          "The OFF Delay Timer",
          "Exercise 5: An Oscillator",
          "Solution to Exercise 5: An Oscillator"
        ],
        "Program Flow Control": [
          "An Introduction to Finite State Machines",
          "Finite State Machine Using Coils",
          "Output Coil vs. Set/Reset Instructions",
          "Finite State Machine Using Set/Reset"
        ],
        "Counters & One-Shots": [
          "Counters",
          "One-Shots"
        ],
        "Final Project": [
          "Final Project Introduction",
          "Exercise 6: A Traffic Light System Using a Finite State Machine",
          "Solution to Exercise 6: A Traffic Light System Using a Finite State Machine",
          "Exercise 7: A Traffic Light System WITHOUT Using a Finite State Machine",
          "Solution to Exercise 7: A Traffic Light System W/O Using a Finite State Machine"
        ],
        "Tips, Tricks & Things to Avoid": [
          "Avoiding Double Output Writes"
        ],
        "Conclusion": [
          "Download the Ladder Logic Cheat Sheet",
          "Congratulations"
        ]
      },
      "requirements": [
        "This is a beginner's course, some basic programming knowledge(In any language) is advantageous, but not required.",
        "You will learn everything you need to know.",
        "You DO NOT need acccess to a development environment to complete this course, all of the exercises can be completed with a pen and paper. Of course, you can also use a Ladder logic development environment should you have access."
      ],
      "description": "New to PLC programming or Ladder Logic? You've found the right starting point.\n\n\nIn this beginner's course, you will learn all of the basics you need to read and write Ladder Logic PLC code. Together, we will take an interactive approach to work through 25 examples and exercises in Ladder Logic code, taking you from Absolute beginner, to competent Ladder programmer.\n\n\nThis course covers everything you need to know to get started with ladder logic programming on any PLC brand, make or model:\n\n\nWe'll cover the fundamentals such as structure, terminology and boolean logic.\nWe'll work through some basic boolean ladder logic instructions and code examples.\nWe'll tackle some more advanced instructions such as mathematical operations and counters.\nWe'll implement timers to allow you to execute precise time controlled code.\nWe'll take a look at the concept of a Finite State Machine for program flow control.\nAlong the way, you will get the opportunity to complete coding exercises to reinforce and improve your understanding. Full video solutions and demonstrations for each exercise are provided!\nFinally, you'll get the chance to complete a project that incorporates everything you've learned in this course: Writing Ladder Logic Code for a real-world automation application.\n\n\nBonus: Get your hands on the Ladder Logic Cheat Sheet! The Cheat Sheet is a quick reference document that covers all of the code examples and solutions to the exercises in this course.",
      "target_audience": [
        "Beginners in Ladder Logic Programming",
        "Beginners in PLC Programming",
        "Beginners in Automation and Control Engineering",
        "Electrical Engineers",
        "Electrical Engineering Students",
        "Automation Engineers",
        "Automation Engineering Students",
        "Control System Engineers",
        "Control System Engineering Students"
      ]
    },
    {
      "title": "Learn Modern JavaScript: Getting Started",
      "url": "https://www.udemy.com/course/learn-modern-javascript-getting-started/",
      "bio": "JavaScript for Beginners; In Depth Training to truly Learn JavaScript; Gets You Started as a JavaScript Programmer",
      "objectives": [
        "Understand the strengths and weaknesses of JavaScript.",
        "Write JavaScript code and link it to a web page.",
        "Test JavaScript code using the browser console.",
        "Declare variables and manipulate values.",
        "Work with operators.",
        "Explain coercion and hoisting.",
        "Use the Date and Math object.",
        "Use template strings for displaying output.",
        "Incorporate if conditionals in your code.",
        "Use a switch statement when appropriate.",
        "Understand and apply the while and for loop.",
        "Create an array.",
        "Add and remove elements from an array.",
        "Use array methods.",
        "Create user defined functions.",
        "Create arrow functions.",
        "Explain scope.",
        "Create user defined objects.",
        "Explain prototypal inheritance.",
        "Use the constructor and class structure to create objects.",
        "Explain the DOM.",
        "Select and modify elements from the DOM.",
        "Create event handles to respond to user actions.",
        "Debug your code.",
        "Optimally deploy your JavaScript code."
      ],
      "course_content": {},
      "requirements": [
        "Prior to taking this course, it is best, but not required, to have some familiarity to HTML and CSS.",
        "As for tools, you will need a browser and a text editor."
      ],
      "description": "In Learn Modern JavaScript: Getting Started, you are taught the fundamentals of JavaScript the right way. We won't skip topics. Some topics may seem more advanced, but that is because they are crucial to a complete grounding of JavaScript. Most importantly, you are taught the why, not just the what and how.\nWe cover all the necessary topics to get you started on your way to becoming a JavaScript programmer. This course will start with the basics and very quickly begins increasing your knowledge of JavaScript. With all the hands-on exercise, you will get plenty of time to practice.\nJavaScript has changed and matured since its humble beginnings in 1995. One of the original goals of JavaScript, in those early years, was to make it easy for beginners. That goal has made it accessible for all types of people. However, this has also meant that JavaScript has been taught and learned incompletely by many. Not in this course!\nThis course contains 12 sections, over 115 different topics, over 13 hours of video tutorials, 12 exercises and everything you need for the proper grounding in JavaScript.\nIf you are ready to jump into the world of JavaScript or you want to add to your new found skills, this course is for you!",
      "target_audience": [
        "This course is intended for those who are getting started with JavaScript or who would like a refresher that includes the latest JavaScript."
      ]
    },
    {
      "title": "Python 101: Python for absolute beginners",
      "url": "https://www.udemy.com/course/python-101-for-absolute-beginners/",
      "bio": "Learn Python programming even if you've never coded before",
      "objectives": [
        "Beginner-friendly Python",
        "How to start coding even if you've never coded before"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Learning Python 2 vs Python 3",
          "Installing Python (Mac, Linux and Windows)",
          "How to execute Python code",
          "Basic arithmetic",
          "Introduction to variables in Python",
          "Formatting code in Python",
          "Code comments",
          "Introduction to Python data types",
          "Number data types",
          "String data types",
          "List data types",
          "Dictionary data types",
          "Tuple data types",
          "Set data types",
          "Boolean data types",
          "None data types",
          "Indexing and slicing in Python",
          "Accepting user input",
          "Type casting",
          "Print formatting",
          "Comparison operators",
          "Comparison shortcuts",
          "Multiple comparison operators",
          "For loops",
          "While loops",
          "Break and continue",
          "Functions",
          "Scope",
          "How to create a local Python server",
          "Importing packages and using them",
          "Your project",
          "Summary"
        ]
      },
      "requirements": [
        "A willingness to learn how to code",
        "Internet to streamt he videos",
        "A laptop or desktop to code (sorry, you can't code on your phone!)"
      ],
      "description": "Hi there,\nWelcome to Python 101 - your first step to learning how to program using Python.\nPython is in the top 3 most popular programming languages in the world. BIt's easy to learn, easy to read, and easy to write, plus Python is incredibly powerful.\nSome of the things you can create with Python are:\nWebsites\nAutomation tools for your home\nAPIs\nArtificial intelligence\nMachine learning\nMathematical algorithms\nScraping tools\nAnd more...\nSome of the most popular companies in the world use and support Python, too. Such as:\nGoogle who owns YouTube (made with Python)\nFacebook who owns Instagram (made with Python)\nDropbox (made with Python)\nYou get the point.. there's a lot of them!\nAnd in 2021 you will definitely want to know Python as it becomes more powerful and more popular. As it grows, so will job demand for Python programmers. The nice thing is: Python is easy to learn and quick to get a hang of.\nBut why use Python instead of other languages like Java?\nPython is consistently the top choice for new programmers - not because it's beginner-friendly, but because it's easy to read and write. You don't have to learn all sorts of new rules or write crazy letters beside each other. Python is made in such a way you can literally just read through your code like it's a book. No other language has that kind of power. Plus it's fast and scales well when there's a lot of use, unlike Node.js.\nHow much effort will this course take?\nBarely any! I've taught thousands of people how to program using Python and I've designed a perfect beginner course. I expect this course to take you about 7 hours in total, that's including all the small tasks at the end of almost every lesson and the final project.\nWhy Kalob as your instructor?\nHello, I'm Kalob, your instructor through Python 101. I'm a seasoned Python programmer, senior web developer, and have taught tens of thousands of people how to code using Python. I have helped people learn to make websites with absolutely no prior experience and then helped them land their first job at companies like Google, AWS, Facebook, Netflix, and more.\nI write Python every day, even for my hobby projects. It's my #1 choice for a programming language and I'm passionate about it. And once you start learning Python, I'm confident you'll be passionate about it as well.\nCan I take this class if I'm on Windows, macOS, or Linux?\nYes, of course, you can! There are only a few small cases where you would do things differently on Windows than on macOS, and I show you all the commands for every operating system in this course.\nHeads up! macOS and Linux are very similar operating systems behind the scenes. So we only need to cover one of them to learn both. Windows is the oddball, but it's still supported in this course.\nRequirements:\nYou will need a few things to get started in this course. First, a text editor like VS Code. And then you'll need to download and install Python.\nDownload VS Code for free\nDownload Python for free\nThank you for reading through this course description. I hope you choose Python as your programming language — if you do, I promise you won't regret it.\nHappy coding!",
      "target_audience": [
        "People who want to learn how to code",
        "People who want to get into fintech",
        "People who want to get into data science",
        "People who want to get into machine learning",
        "People who want to code things for fun (or professionally!)"
      ]
    },
    {
      "title": "New to Unix/Linux? Be an Expert in a MONTH-Shell Script 2025",
      "url": "https://www.udemy.com/course/step-by-step-unix/",
      "bio": "Step by Step Unix - Linux Commands |Grep in Detail | File and Folder operations | Best Practices | Quiz & Exercise",
      "objectives": [
        "Will have detailed knowledge of most useful commands of Unix/ Linux Operating System",
        "Will be able to perform back end testing &development activities like fetching, analyzing logs and verifying logs",
        "Will get decent understanding of Shell scripting & its implementation in testing tasks/activities",
        "Ready to perform complex task & activities on Linux/ Unix environment",
        "Detailed understanding of each and every command and how we can use them in Realtime projects"
      ],
      "course_content": {
        "Setup Environment for Practice | Setup Virtual machine on your system": [
          "Setup Virtual Environment on Windows Machine (For Practice)",
          "Environment Setup",
          "Use online environment for practice"
        ],
        "Basic Unix Commands | Learn most common commands for frequent activities": [
          "Start working with Basic Commands : Current Directory, Clear Terminal & Help",
          "Working with Directories - Create Directory, Move in & Move out to Directories",
          "Working with Directories - Create Multiple Directories, Delete Directory",
          "Different option to create files : Blank File, File with Content, Insert Data",
          "Listing files and Folders : Hidden Files, List Format and Sorted Order",
          "All uses of CAT command : Must for Practical Implementation & Interviews",
          "Check Your Knowledge"
        ],
        "Check content of File | Different ways to open a file and view its content": [
          "Documentation : Sample Data to be used for Practicing with me",
          "Setup Sample Data to be used for Practicing with me",
          "Check complete file content : CAT Command",
          "Check file content : Top few lines - Head Command",
          "Check file content : bottom few lines - Tail Command",
          "Check file content : with Paging - More Command",
          "Check file content : with Paging - Less Command",
          "Check file content : with VIM editor",
          "Commonly Asked Question : Get few lines from middle of the File"
        ],
        "Search Data in a File | Different Options to Search content in a file": [
          "What is Grep | Search data in 1 file",
          "Search data in more than 1 files",
          "Search data in all files of current directory",
          "Search data by ignoring case",
          "Search Data : Display Line number",
          "Search Data : Display File Name",
          "Search Data : With exact word",
          "Search Data : By ignoring given text",
          "Search Data : Display only count",
          "Search Data : Display surrounding lines",
          "Search Data : Multiple Content",
          "Search Multiple data with egrep"
        ],
        "Cut & Copy Files and Folder": [
          "Copy file from one location to another location -Part 1",
          "Copy file from one location to another location -Part 2",
          "Cut(Move) file from one location to another locations",
          "Rename File and Folder"
        ],
        "Merging Two or More commands | Most important topic for interview": [
          "Save command results to a File ( > & >> Operator)",
          "Get data from a File ( < Operator)",
          "Pass result of one command to another ( | Operator)",
          "Basic System Commands",
          "Check Your Knowledge"
        ],
        "Compare Files | Check same or different content in file": [
          "Compare Files - CMP Command",
          "Compare Files - COMM Command",
          "Compare Files - DIFF Command"
        ],
        "Search Files and Folder": [
          "Search File on current location",
          "Search file in the System"
        ],
        "Advance miscellaneous Operations": [
          "Display line with Pagination",
          "Merge lines in the file",
          "Check file information",
          "Sort File Content",
          "Check command History",
          "Fetch unique data from file",
          "Change File Permission"
        ],
        "***** Exercise ******": [
          "IMPORTANT------- Task for Students ----- : Search Lines having text",
          "IMPORTANT------- Task for Students ----- : Search Count",
          "IMPORTANT------- Task for Students ----- : Search specific count only"
        ]
      },
      "requirements": [
        "Good to have understanding of Log Files & Other files generating on Unix or Linux Server Machine",
        "Basic knowledge of Windows command prompt"
      ],
      "description": "Course Updates\nOct 2024 -  Added AWK and SED videos\nNov 2020 - Added File Search Videos (Grep Commands)\nApr 2020 - Updated video and audio quality of Section 1 and Section 2\nDec 2019 - Added virtual machine setup instructions\n\n\n\n\nUnix / Linux Command & Shell scripting\nThis is a Must to Learn course for every IT Professional(Be it developer or Tester), Now days in every job profile, you will find it mandatory to have skills to Work in Unix or Linux Environment.\nIn today's competitive environment, companies need professionals who are having good understand of Unix/Linux command and shell scripting.\nIn many domain like Telecom, Unix commands and shell scripting are basic prerequisite to start working.\nThis course is very useful for professional who are looking to do backend activities like data processing, log handling etc.\n\n\n- Here we will cover Unix commands which we can use in daily activities and also we have covered many interview question which are asked in interviews.\nSetup virtual machine(environment)\nUnix Basics to advance commands for Software Testers\nBasic commands\nCheck Log Files\nBasic files and folder operation\nFile Search\nContent Search\nMemory related commands\nCPU Processing\nMerging of command outputs\nPractice questions\nInterview Questions\nShell Scripting\nMany Practice sessions to check your knowledge\nThis course also contains AWK and SED command which are must for data processing with many conditions. Here you will start AWK and SED commands from very basic to expert level",
      "target_audience": [
        "Software Developers wants to perform backend activities",
        "Big Data Testing, AI. Machine Learning aspirants",
        "Freshers looking to search backend work/server work/ data processing on unix/linux machine"
      ]
    },
    {
      "title": "Drone Programming with Python - Face Recognition & Tracking",
      "url": "https://www.udemy.com/course/drone-programming-with-python-face-recognition-tracking/",
      "bio": "Operating drone with network programming, face recognition using OpenCV, automatic tracking, implementing web camera",
      "objectives": [
        "Remote automatic drone operation using Python",
        "Face recognition programming using OpenCV",
        "How to implement a web camera app using Flask's web framework",
        "Automatic tracking using face recognition with drone camera"
      ],
      "course_content": {
        "Introduction to the course": [
          "Why Python and Drone programming?",
          "What you need for this course",
          "Notes before going into this course",
          "Prior knowledge"
        ],
        "Operate your drone with an app": [
          "Operate your drone with an app",
          "Block programming your drone",
          "Play drone games using scratch"
        ],
        "Environment settings": [
          "Setup Python Development Environment on Mac",
          "Setup Python Development Environment on Windows"
        ],
        "Source code for this course": [
          "Download the source codes"
        ],
        "OpenCV": [
          "Install OpenCV on Mac",
          "Install OpenCV on Windows",
          "Use OpenCV for face recognition",
          "Face recognition with an image",
          "Face recognition with video"
        ],
        "Remote control your drone": [
          "Tello document and SDK",
          "Takeoff and Landing",
          "Receiving response from the drone",
          "Manage the drone to fly",
          "Manage the drone speed",
          "Manage the drone to rotate",
          "Manage the drone to flip",
          "Program the drone to patrol"
        ],
        "Creating the drone app framework": [
          "Installing packages",
          "Config",
          "Setting Flask",
          "jQuery and jQuery mobile",
          "Creating the Index page",
          "Extending the layouts",
          "Using POST to send commands to the back end",
          "Adding command buttons",
          "Singleton"
        ],
        "Tracking with face recognition using your drone cam": [
          "Manage drone with WEBUI",
          "Live stream from your drone camera",
          "Stream video on the web cam",
          "Face recognition with drone camera",
          "Tracking with drone camera",
          "Snapshot from the drone cam"
        ],
        "Creating a Drone Game": [
          "Shake Game Overview",
          "Creating the course class",
          "Display the course",
          "Fly the drone on the course",
          "Receive shake event from your smart phone",
          "Smartphone Shake Game",
          "Updating your codes"
        ]
      },
      "requirements": [
        "Basic level of python programming.",
        "Good to have knowledge of network, WiFi and IP address, as we will be connecting the drones through WiFi",
        "Better to have knowledge on building development environment with IDE"
      ],
      "description": "As you may know, robot technology is now very advanced. As an engineer working in one of the top IT companies in Silicon Valley for over 12 years, I feel that the trend to replace humans with robots will continue for quite a long time\nIn this course, we will be going to learn the following, using a toy drone that can fly indoors.\n-Drone operation using Python\n-Face recognition with OpenCV using the drone camera\n-Web framework and web camera\n-Automatic tracking\n-Drone flight game (shake your smartphone)\nStarting off with a toy drone will be a great way to start off your robot programming experience while you get used to Python. This is also an easy and fun way for your children to start coding. Now, let's get started with drone programming and be ahead of the robot technology trend!",
      "target_audience": [
        "People who are interested in programming drones.",
        "People who are interested in the next generation of autonomous driving and elementary image recognition",
        "People who are willing to develop an app using Python"
      ]
    },
    {
      "title": "Become a Professional Programmer",
      "url": "https://www.udemy.com/course/become-a-programmer/",
      "bio": "Learn programming with HTML5, CSS3, Python, Swift, Google Go, Java, Perl, C++, Ruby on Rails and more.",
      "objectives": [
        "Know how to use Html tags and build with the most common ones",
        "Learn the use of attributes and common settings",
        "create their own functions that assign variables of various types; hook up a basic UI with events; create their own classes and structs; cast between different data types; use the playground and xcode environment for debugging; implement protocols",
        "Students will learn Go fundamentals and see how to apply them to real world scenarios. Some of the bigger course concepts include: - Go Language - Advanced Go Topics - Concurrency",
        "Access and parse the web with Python",
        "Create an interactive, database driven website"
      ],
      "course_content": {},
      "requirements": [
        "Students only need to know how to use a browser and a text editor. It is up to the student to chose one of each - there are many free options available. I show the students what I am using and where to get it if they want to.",
        "be comfortable installing software on their computer"
      ],
      "description": "If you’re looking at this page, you’ve probably had ‘learn how to code’ at the top of your to-do list forever. Coding is the future, and the technology industry is crying out for good programmers fluent in a range of languages. With that in mind, we’ve created this bundle for people just like you. Whether you’re a complete newcomer to programming or you already have some experience but want to expand your knowledge, this bundle will set you up for a career as a professional programmer/.\nWith access for life, you can learn at your own pace and complete lessons according to your own schedule. Whether you take your time or power through at breakneck speed, you can rest assured you’re learning everything you need to know.\nThis bundle includes the following courses:\nHMTL5 and CSS3 Fundamentals: HTML5 is the latest version of the code that makes the web tick, and CSS3 is the next level of web design to go with it. Put them together and you have a recipe for future-proofed, flawless and perfectly functioning websites. This course will teach you both by diving right in at the practical end, and have your creating beautiful websites in no time.\nPython Programming for Beginners: Python is one of the most in-demand skills that top employers like Microsoft, Google and many more look for; and that’s a trend that only set to continue for the next few years at least. Python is a simple, versatile and highly readable code used for everything from building websites to controlling robots! Whether you’re new to Python or new to programming in general, this course will get you up to speed.\nSwift Programming for Beginners: Swift is one of the hottest new languages out there right now, and essential if you want to become a fully fledged iOS app developer. If you’re looking for a crash course to get a handle on Apple’s primary coding language, look no further. This course will turn you into an expert Swift engineer, building your knowledge from scratch with plenty of practical exercises.\nGoogle Go Programming: It should come as no surprise that Google has its own programming language. And since Google is one of the biggest names in the technology world, it should come as no surprise that learning Go is a sure-fire way to boost your employment credentials, both with this computing behemoth and just about everyone else too. This course will tell you everything you need to know.\nFundamentals for Java Programming: Every professional programmer worth their salt knows Java inside and out. It’s the most common programming language in the world, and it sets the tone for all other code. In short, you won’t get anywhere without it, so it’s worthwhile learning how to do it right; and that’s exactly what this course does – from the ground up.\nPerl Programming for Beginners: It’s easy to get a little lost in the sea of programming languages out there. Luckily, Perl is a great starting off point because it’s simple to use, easy to learn, and very versatile. If you don’t know where to take the first step to becoming a professional programmer, there are worse places to start. This course will help you grasp the fundamentals and get started in the programming world.\nC++ Programming Fundamentals: C++ is the Grandfather of many of the tech world’s programming languages – Java being just one. Learning C++ gives you a head start on learning any other language, and a leg up as far as your employability is concerned. By taking this course, you’ll lay down a solid coding foundation and gain an excellent platform for improving your skills.\nPython Web Programming: After you’ve completed our Python Programming for Beginners course, Python Web Programming will give you an extra edge and a new set of skills with a language that’s not only easy to learn, but a real money maker too. You’ll learn the art and the science behind web programming, graduating with all the tools necessary to build vibrant and sustainable web based programs.\nRuby On Rails: Ruby on Rails can sound intimidating for anyone who doesn’t know it, but in reality it’s not only extremely useful, but completely logical too. This course will take from zero to Rails developer, showing you how to create fully interactive Rails applications from the very beginning. You’ll learn how to connect databases, accept user input, and complete a comprehensive project so you’re ready to use RoR in the real world straight away.\nFundamentals of JavaScript: JavaScript is fast becoming one of the most widely used programming languages in the world, thanks in part to its ever growing catalog of libraries that allow you to do just about anything you want. Before you get into learning the JS libraries you'll need to know the basics. This is where you should start.\nAngularJS: AngularJS is one of the above-mentioned JS libraries, and is one of the reasons for JavaScript's sudden rise to popularity. Learn Angular programming here by first learning the basics, then moving on to Angular projects that you'll be proud to add to your portfolio.",
      "target_audience": [
        "Anyone who wants to be a programmer"
      ]
    },
    {
      "title": "Quick Start Guide Node JS for Beginners Getting started",
      "url": "https://www.udemy.com/course/node-js-course/",
      "bio": "Explore how you can get started with Node JS learn how to apply node and create mini applications with node code",
      "objectives": [
        "how to apply node js",
        "Create mini applications with node",
        "Use NPM packages in node apps",
        "Run node in terminal",
        "How to code node js"
      ],
      "course_content": {
        "Introduction to using Node": [
          "Node Quick Course Introduction",
          "NodeJS course Resource Guide",
          "Learn Node JS Getting Started.",
          "Source Code",
          "First Node File Run.",
          "Source code",
          "Global and Process Objects",
          "Source Code",
          "Process in and out.",
          "Source Code",
          "node Process number guessing Game.",
          "Source Code",
          "NodeJS Interval and timeout Countdown",
          "Source Code",
          "Node Modules Export.",
          "Source Code",
          "Make files read Files fs Module",
          "Source Code",
          "HTTP module output in browser",
          "Source Code",
          "index HTML page output in Browser",
          "Source Code",
          "More HTML Files Server",
          "Source Code",
          "Node Package Manager",
          "Source Code",
          "Express package",
          "Source Code",
          "Node Quick Course Review.",
          "NodeJS Quiz"
        ],
        "Additional Learning resources and content for further learning": [
          "PDF Node Gudie"
        ]
      },
      "requirements": [
        "JavaScript knowledge is required",
        "HTML CSS",
        "Programming experience"
      ],
      "description": "Get started with Node js - this fast paced course is designed to quickly show you the basics of node and how you can write node code.\nJavaScript is an absolute prerequisite to this course, you must have javaScript coding experience to take this course.\nCourse provides source code and a pdf guide loaded with source code and resources to help you follow the lessons.\nLearn how to setup your developer environment, install and get setup to code nodejs\nCourse covers the basics on coding node js\nExplore how modules works, the default modules already included with node.  Setup a local web server, load files.  Create files and read files from your computer using node.  Output html files directly into your browser.  Localhost setup and running on your own machine.\nLearn about creating modules and using them within your code.\nYou will be amazed at how easy it can be to do some really awesome things with node using just a few lines of code.\nThere are 100's of thousands of prebuilt node modules that you can utilize within your own code.  Using Node Package Manager NPM load packages and use them in your node application.\nTaught by an instructor with many years of real world web development experience ready to help you learn NodeJS\nFast friendly support is always available within the Q&A section\nWhat are you waiting for, you have nothing to lose, join now and start coding NodeJS today",
      "target_audience": [
        "Web developers",
        "Web designers",
        "JavaScript Coders"
      ]
    },
    {
      "title": "Google Apps Script Complete Course New IDE 100+ Examples",
      "url": "https://www.udemy.com/course/course-apps-script/",
      "bio": "Google Apps Script New Version Create custom functions within G Suite Docs Sheets GMail Drive Calendar and more",
      "objectives": [
        "Create custom functions within GSuite Apps Docs Sheets Gmail Slides",
        "Explore how to write Google Apps Script Code within G Suite App",
        "Create Google Script to power Google Apps",
        "Create custom functions and macros for Google Sheets",
        "Add custom menus, dialogs, and sidebars to Google Docs, Sheets, and Forms",
        "Publish web apps — either standalone or embedded in Google Sites",
        "Interact with other Google services",
        "Build add-ons to extend Google Docs, Sheets, Slides, and Forms"
      ],
      "course_content": {},
      "requirements": [
        "JavaScript and basic HTML and CSS knowledge",
        "Internet Access",
        "Google Account",
        "Basic Web development understanding"
      ],
      "description": "New IDE - More functions - Exciting new Course!!!!\nGoogle Apps Script is a rapid application development platform that makes it fast and easy to create business applications that integrate with Google Workspace.\nCode is in modern JavaScript\nAccess to built in libraries that can really power up your Google Workspace App\nConnect Google Workspace applications like Gmail, Calendar, Drive, and more.\nInteract with other Google services Calendar, Drive, Gmail, and Maps.\nNothing to install - code editor right in your browser\nYour scripts run on Google's servers\nExtending Google Workspace with Add-ons\nRapid application development platform based on JavaScript that lets you create business and productivity applications quickly and easily.\nLoaded with Google Apps Script Code Examples - 100s of code snippets to do amazing things with Google G Suite - Sample projects to create advanced functionality with Google Apps - Google Services\nAdd custom menus, dialogs, and sidebars to Google Docs, Sheets, and Forms.\nPublish web apps — either standalone or embedded in Google Sites.\nCreate customized user interfaces that are directly integrated into Google Workspace applications.\nBoost workflow efficiency when working with Google Workspace by automating or streamlining tasks\nConnect to non-Google services within Google Workspace applications, allowing you to retrieve or upload data from those services into and from Google Workspace\nExplore what you can create and how you can release functionality within your G Suite apps - Help with productivity connect Google Services together to DO EVEN MORE!!!!  Based on JavaScript ES6+ now packs more power with an easier to use editor - making coding fun.\nGoogle apps script works the way you expect and need it to work - its by far my favorite coding language - if you've never used Apps Script before then this is something that you must try.   Once you start writing code with apps script it will change everything.\nGoogle Workspace services are services that let you access the data of Google Workspace products such as Drive, Gmail, Calendar, Docs, Sheets, and others. These services are separate from APIs created for those products; in general, Google Workspace services are easier to use than Google Workspace APIs, but are optimized for only the most common use cases.\nTaught by a Google Developer Expert recognized GDE - with over 20 years of Coding Experience specializing in Google Apps Script - ready to help you learn more about creating amazing things with Google Apps Script.\nIntroduction to Getting Started with Google Apps Script\nStandalone vs Bound Scripts\nScript editor and Apps Script Dashboard\nWriting Code creating Apps Script create a Doc with Script\nWhat's New with Apps Script Editor\nCreating and Deploying a Webapp doGet() - HTML output in WebApp URL\nDeployment of webapp Dev version and Exec Version.\nGoogle Apps Script Sheets Spreadsheet Service Class SpreadsheetApp\nThis service allows scripts to create, access, and modify Google Sheets files. Access and create Google Sheets files.\nHow Macros work - generating Google Apps Script with Macro Recordings in Sheets\nSpreadsheetApp Class - Selecting Spreadsheet to manipulate with Code\nSpreadsheetApp methods SpreadsheetApp.getActiveSpreadsheet()\nSelecting Sheets within a Spreadsheet - Spreadsheet object methods - Get data and contents of a Sheet into an array. sheet.getDataRange() data.getValues() sheet.getName()\nStandalone script selecting a sheet by URL or ID. List sheets - update sheet names sheet.setName();\nCreate New Sheets on the fly with Apps Script - insertSheet()\nSheet ranges - updating the background colors of cells, selecting cells and ranges of cells. getRange() getRange(a1Notation) A1Notation the default method used for creating (and displaying) cell references to other cells. All cell addresses in A1 notation consist of a column letter and a row number\nGet range by numeric row and column values. sheet.getRange(rows,cols) range.setBackground(backColor) , range.setFontColor('white'), range.setFontSize(mySize+cols), range.setValue(total); getRange(row, column)\nMultiDimension arrays for content rows within the sheet. Get the range update content getRange(row, column, numRows, numColumns) getRange(row, column, numRows)\nDebugging and Dashboard settings\nSheet object common methods - getLastColumn() getLastRow()\nGet Selection getSelection()\nMini App - Copy Sheet Data to other part of Sheet\nGet all the Data range from Sheet object sheet.getDataRange(); Returns a Range corresponding to the dimensions in which data is present.\nDialogs and custom UI buttons - UI Menu within Sheets\nAppend Row - add new rows - Add row on top appendRow(rowContents)\nInsert insertRows(rowIndex)\nCell Formulas - spreadsheet.getRange().activate() .setFormula()\nCustom Functions using the custom function Using a custom function - Is Email mini App\nMini App - Copy Sheet to another new sheet\nAdding Notes to Cells\nCoding App MiniProject Challenge - Create a Custom Logger into a Sheet - track messages into log\nCoding App MiniProject Challenge - Create a custom Prepend Function Prepend Row Exercise\nGoogle Apps Script Docs Document Service Class DocumentApp\nThis service allows scripts to create, access, and modify Google Docs files. The document service creates and opens Documents that can be edited.\nBound Script getActiveDocument()\nSelect and add Content to Body getBody() appendParagraph() appendPageBreak()\nStandAlone Script DocumentApp.openById()\nAdd Body Content appendHorizontalRule()\nCreate a Doc using Script DocumentApp.create()\nGet Doc properties add to itself within the new Doc\nSet Name Get Editors and Get URL\nSelect Text getText()\nUse JavaScript Loop to generate rows of content\nTranslate selected Content to Spanish LanguageApp.translate()\nbody.getParagraphs() select and update text within Paragraphs\nDocumentApp Types and setting of DocumentApp.TextAlignment\nBody Get Children getChild() .setFontSize() .getNumChildren() with loop to iterate body children element containers\nStyle Attributes DocumentApp.Attribute\nReplace text body.replaceText()\nel.setAttributes(); using attribute object values and properties\nClear body content\nAdd list items\nAdd Tables data types\nDocumentApp UI prompt and alert\nActive User Session.getActiveUser()\nUI DocumentApp showModalDialog() HTML output HTML from File\nCursor position getCursor()\neditAsText() set part of text as bold\nSelected Text toUpperCase() getActiveDocument().getSelection()\nAdding Bookmarks with Code addBookmark()\nInsert Image into Document\nReplaceText Exercise\nExercise Sheet data to Doc Table\nCoding App MiniProject Challenge - Add Text within the doc press menu button\nCoding App MiniProject Challenge - Find and highlight text from Doc Content\nCoding App MiniProject Challenge - Insert Images in Doc content Insert Images\nGoogle Apps Script Drive Service Class DriveApp\nThis service allows scripts to create, find, and modify files and folders in Google Drive.\nSelecting files log all the file names from the drive\nIntroduction to Apps Script DriveApp Service getFiles\nHow to Get Files in specific Folder using DriveApp Service\nCreate a File HTML file make files within your gDrive apps script DriveApp Create a File\nDrive details get storage Get info and gdrive folder Drive Details\nClasses File Class\nTrash files move to trash Send Files to Trash with Google Apps Script\nFile permissions set File Access Permissions with Google Apps Script\nClass FileIterator\nFolders Class Folder\nSet permissions and remove permission on Folder\nGet details of Folder Class FolderIterator\nUser Object\nCoding App MiniProject Challenge - create an app to list folder details into Sheet\nCoding App MiniProject Move File from one folder to another\nCoding App MiniProject Search files return file object\nCoding App MiniProject Add and Remove Editors\nCoding App MiniProject Webapp folder urls in webapp from Search\nGoogle Apps Script Gmail Service Class GmailApp\nThis Service lets you send email, compose drafts, manage labels, mark messages and threads, and conduct a variety of other Gmail account management tasks. See also Mail Service, a simpler service that only allows the sending of email.\nMail Service vs GmailApp Service sendEmail(recipient, subject, body) This service allows scripts to send email on a user's behalf. Unlike Gmail Service, Mail Service's sole purpose is sending email; it cannot access a user's Gmail account. This service allows users to send emails with complete control over the content of the email. Sending an email in Mail Service sendEmail(recipient, subject, body, options) getRemainingDailyQuota() Sending an email in Mail Service sendEmail\nSending an email in GmailApp Service sendEmail(recipient, subject, body) sendEmail(recipient, subject, body, options) How to send emails - Sending Emails with Apps Script\nCreate a draft email createDraft(recipient, subject, body, options) Drafts email in GmailApp Service\ngetMessage() method in emails Threads within Gmail using GmailApp Service Inbox Threads.\nSending an email from HTML template file\nCoding App MiniProject Use Doc as Email template\nReplace of content in email use it as a template\nCoding App MiniProject how to use Spreadsheet data list to Send Emails\nHTML Body\nCoding App MiniProject Challenge send bulk emails from list in Sheets\nGmailApp Chat threads\nMaking a draft email\nMark message as read markMessageRead(message) Marks this message read and forces the message to refresh.\nAdd a Star to Message starMessage(message) getStarredThreads(start, max) Retrieves a range of starred threads irrespective of labels.\nGet user labels apply labels getUserLabels() Retrieves a list of user-created labels.\nmoveMessageToTrash(message) Message object\nSearch for message contents search(query, start, max) Search Gmail with the given query.\nCoding App MiniProject Class GmailAttachment - send and create attachments - Get attachments GmailApp Attachment Class\naccess Chat Threads GmailApp class using Apps Script\nfind messages - apps script GmailApp Search.\nGoogle Apps Script Calendar Service Class CalendarApp\nThis service allows a script to access and modify the user's Google Calendar, including additional calendars that the user is subscribed to. Allows a script to read and update the user's Google Calendar. This class provides direct access to the user's default calendar, as well as the ability to retrieve additional calendars that the user owns or is subscribed to.\nCalendarApp add location to info Class Calendar\nGet Events with options\nFull day events within the calendar\nAdd events with series\nSelecting Calendars using CalendarApp Class Code example\nDelete create and hide calendar\nHow to update Google Calendar Name add Description\nUpdate calendar color , description and name\nSelect and Update Calendar Events CalendarApp Event Class Examples\nCreate Events\nProject - Challenge - Spreadsheet Calendar Lister - CalendarApp and SpreadsheetApp Project\nCalendar Event Guest\nCalendar Event Class using Google Apps Script\nGet Guest details - update guests add and remove guest class\nEventGuest updates Represents a guest of an event.\nEventRecurrence class set the recurrence settings for an event series.\nGuestStatus get guest statuses a guest can have for an event.\nUpdate RecurrenceRule which represents a recurrence rule for an event series.\nCoding App MiniProject Spreadsheet Calendar Lister - CalendarApp and SpreadsheetApp Project\ncreate Events CalendarApp within Google Calendar with Apps Script\nGoogle Apps Script Slides Service Class SlidesApp\nThis service allows scripts to create, access, and modify Google Slides files. Google Slides documentation and features of the Slides service.\nCreate a Slide - open by slide id\nHow to use Slides Service Class SlidesApp with Google Apps Script\nSlides Bound Script Updates select slides within Google Slides and get Slides Update them\nSlides UI Add a custom menu to the active presentation, including a separator and a sub-menu\nA slide in a presentation. Class Slide\nCoding App MiniProject remove a slide from Google Slides presentation Remove Slide Button\nadd custom menu options for Slides Users SlideApp UI Menu\nPresentation Class - appendSlide add Editor set Slide Background\nUpdate textStyle Background Color Get TextRanges Get Page Elements Get Slides\nAdd UI menu button to duplicate Slide from Current Selection Code Example\nInsert Drive Images with UI button Delete and remove selected Slides\nList layouts Update Master Find text in shapes and remove shapes Source Code\nCoding App MiniProject Create a Presentation from Sheets Generate Slides from Sheet data - Project\nGoogle Apps Script Forms Service Class FormApp\nThis service allows scripts to create, access, and modify Google Forms. Allows a script to open an existing Form or create a new one.\nCreate a form create a form with Apps Script Forms Service Create a Form\nAdd Items to a form grid items, multiple choice and date items\nGet Form items update\nUpdate existing form items with new values make required\nAdd items to Form using Google Apps Script to Google Form using FormApp\nsetup Feedback within Google Form Feedback Within Form\nFormApp Class FormResponse\nSetting form to quiz\nAdding Form Feedback\nSetting Form to Quiz updating adding Feedback to form choices\nCoding App MiniProject FormResponses into Sheet Project Get form responses add to spreadsheet Project\nCoding App MiniProject send Google Form Responses list them within a Google Sheet FormResponse\nCoding App MiniProject How to Create a Math Quiz in Google Forms Apps Script Quiz Generator Project\nSet Progressbar shuffle questions add Scale Item Examples\nGoogle Apps Script Google Workspace services\nGoogle Workspace services are easier to use than Google Workspace APIs, but are optimized for only the most common use cases. Coding examples of common Google Apps Script Services\nClass ContactsApp within Google Services Apps Script\nuse LanguageApp Service within Google Apps Script\ngenerate Maps using Maps Service within Google Apps Script\nGoogle Apps Script Base Services Examples of Code\nCoding Example using Content Service with Apps Script\nCoding Example HTML Service within Google Apps Script\nSend data from client side back to Google Apps Script Class google script host\nGoogle WebApp Client Side data scriptlets services Host services Google\nStore values within Google Apps Script Class PropertiesService User Doc or script\nCreate a request to http endpoint API using UrlFetchApp Class\nGoogle Apps Script Common Services Mini Apps and Useful Coding Examples\nExamples of mini projects and Code examples for applying Google Apps Script to Create added functionality within G Suite Services\nCoding App MiniProject Create Charts in Google Spreadsheets setup Sheets\nCoding App MiniProject add Charts to Slides Create Slides Presentation\nCoding App MiniProject Create PDF in Drive email as Attachment Slides as PDF in Drive.\nCoding App MiniProject  - Docs UI menu Interactive\nCoding App MiniProject - Sheets UI menu button for advanced interaction\nGetting to know Sheets Simple Triggers on Edit and Change run some code\nCreate a webapp onGet onPost Simple triggers with Apps Script\nAutomation setup Triggers run code on events and regular time intervals\nCreating a multi page webapp with apps script\nInteractive Document custom functions Introduction Document UI File Docs Interactive Project\nCustom webapp Quiz Setup from sheets using a web app\nExplore how to deploy your apps script project as an Addon Extending Google Workspace. Add-ons are customized applications that integrate with Google Workspace productivity applications such as Gmail, Google Sheets, and Google Docs.\nTaught by a Google Developer Expert instructor with over 20 years of web dev experience ready to help you learn more about Google Apps Script",
      "target_audience": [
        "Anyone who wants to create amazing things using Google Scripts",
        "JavaScript developers who want to empower Google suite of products",
        "Web developers who want to incorporate Google Script functionality",
        "Application developers who want to access the power of Google G Suite",
        "App Script Google Script developers"
      ]
    },
    {
      "title": "Python Fundamentals: Beginner's Guide to Coding with Python",
      "url": "https://www.udemy.com/course/python-3-course/",
      "bio": "Python Fundamentals: A Comprehensive Guide to Coding with Python for Beginners",
      "objectives": [
        "Create your own Python Environment",
        "Create and Manage Variables and Numbers",
        "Create and Manage Python List, Tuple, Set and Dictionary"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, Mac, or Linux computer",
        "Everything else needed to start programming in Python is already included in the course."
      ],
      "description": "Welcome to my Python 3 tutorial where you’ll learn Python programming language from the ground up. This course is for everyone who wants to learn Python programming language from the beginning, so if you are an absolute beginner, don’t worry, I’ll teach you everything step by step. In this course, you’ll learn Python 3 fundamentals and you’ll be able to write a basic script. I have 10 years of experience in Python and I want to share this knowledge with you.\nWhy should you learn Python 3?\nPython is an interpreted, high-level, general-purpose programming language built for nearly every purpose. It is easy to learn, simple to read and write in. This helps developers to work faster and more efficiently. There are a lot of giant companies like Google, Facebook, Instagram, Netflix, and others who decided to use Python for creating web sites, apps, and systems. You should be wondering why they chose this programming language among others?\nPython stands out from the rest of the programming languages not only with its simplicity, but also with its speed. Coding with Python is even 5 times faster than using Java. That’s crazy! Also, this programming language is suitable for all types of platforms, so you can write code in Linux as well as Windows or MacOS. Moreover, Python has a large community of developers, so if you choose to learn Python 3 or some other version of Python, you will never be alone and always have a chance to learn or ask for help from a wide range of skilled professionals.\nWhat will you learn in this Python course?\nThis Python 3 tutorial is your first step to the Python learning journey. You don’t need any prior experience to enroll in this course. I’ll start from the very beginning by teaching you how to set up the programming environment, how to download and install Python 3, Java SE Development Kit and PyCharm. I’ll show you everything step by step, so you’ll be able to do it with ease. When your programming environment will be ready to use, we’ll jump into more interesting things.\nLet’s have a look at the main topics in this course:\nHow to create and run your first Python project\nHow to write a Python script\nHow to add comments in your script\nAll about Python variables (types, rules for naming variables, how to redefine them)\nHow to create and manage Python numbers\nHow to use strings in Python (empty string, string arithmetic operators, string indexing, string methods)\nHow to create and manage Python list, tuple, dictionary, and set\nAfter completing this Python course for beginners, you’ll learn Python 3 fundamentals and get a clear understanding of how to write a Python script.\nEnroll in this course and learn Python 3 today!\nIf you want to learn Python fundamentals in less than 5 hours and understand everything from the environment set up to coding in Python, this course is the best option for you. I’ll explain to you every step in detail, so you don’t need to worry, you’ll learn Python in the easiest possible way. Are you ready to deep dive into learning? Enroll in this course now and start your Python learning journey!",
      "target_audience": [
        "The Course is Designed for Beginners Looking to use Python programming Language",
        "No previous programming experience is assumed"
      ]
    },
    {
      "title": "Introduction to PHP Programming Language",
      "url": "https://www.udemy.com/course/introduction-to-php-programming-training-course/",
      "bio": "Learn the basics of PHP programming.",
      "objectives": [
        "By the end of the course, you will have a basic understanding of PHP"
      ],
      "course_content": {
        "Introduction": [
          "Course Objectives and Introduction to PHP",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Course Exercise Files",
          "PHP Development Environment; Whitespace and Comment; Exercise 1"
        ],
        "Variables, Syntax, Operators and Conditional Control": [
          "Variables; Exercise 2",
          "Echo vs. Print; Single vs. Double Quotes",
          "Operators",
          "Controlling the Flow of Execution; Exercise 3"
        ],
        "Defining Loops and Debugging": [
          "Course Review",
          "Repeating Codes; Exercise 4",
          "Debugging PHP; Scaffolding Code"
        ],
        "Working with Arrays and Functions": [
          "Arrays; Exercise 5",
          "Functions - Part 1",
          "External PHP",
          "Functions - Part 2; Exercise 6",
          "Runtime Error Handling",
          "-->>> For Serious Web Developers Only",
          "Become a Kick-Ass Web Developer"
        ]
      },
      "requirements": [
        "A text editor and a passion for learning."
      ],
      "description": "PHP is a server-side scripting language designed for web development. During this PHP beginner course, discover the fundamental concepts beginner PHP developers need to master. Your professional instructor combines practical lectures that ensure you have a grasp of the basics with coding examples.\nFollow along as you learn the PHP syntax, development environment, and other basic concepts",
      "target_audience": [
        "Anyone new to PHP"
      ]
    },
    {
      "title": "Learn to Program with C++",
      "url": "https://www.udemy.com/course/learn-c/",
      "bio": "Take your C++ Programming to the next level. Course Duration: 6.5 Hours - 80 Lessons",
      "objectives": [
        "How to create a functional app from start to finish using industry standard practices.",
        "Key coding concepts such as standard data types, variables, arithmetic expressions flow control, functions, classes, arrays, and pointers.",
        "Computing theory and mathematical principles strictly as they apply to everyday C++ coding"
      ],
      "course_content": {
        "Introduction": [
          "Working Files - Download These First",
          "Introduction",
          "What You Need for this Course",
          "What You Need To Program"
        ],
        "Getting Started": [
          "Download Code Blocks",
          "Introducing Code Blocks"
        ],
        "Writing Your First C++ Program - Hello, World!": [
          "Entering The Program",
          "Compiling And Running The Program",
          "Explaining The Program",
          "Syntax Highlighting",
          "Modifying The Hello World Program",
          "Finding And Correcting Errors",
          "Exercise Hello Viewer"
        ],
        "C++ Building Blocks - Data Types And Variables": [
          "Introduction To Data Types",
          "Data Types int And double",
          "Data Types string,char,bool",
          "Variable Naming Rules",
          "Declare And Assign Variables",
          "Exercise Hello Personal"
        ],
        "C++ Input And Output": [
          "cout Special Characters",
          "Formatted Output With iomanip",
          "Output With printf",
          "cin With Numbers",
          "cin With Strings",
          "Exercise"
        ],
        "Arithmetic Operators And Expressions": [
          "Arithmetic Operators",
          "Order Of Precedence",
          "Using Constants",
          "Using Math Library",
          "Mixing Data Types",
          "Exercise"
        ],
        "Making Decisions": [
          "Relational Operators",
          "Logical Operators",
          "Simple if Statement",
          "if else Statement",
          "Nested if Statements",
          "if else if Statement",
          "if else if With Logical Operators",
          "Question And Answer",
          "Simple Calculator"
        ],
        "Performing Repetition": [
          "while Loop Intro",
          "Count Controlled while Loops",
          "Sentinel Controlled while Loop",
          "Results Controlled while Loop",
          "for Loop - Part 1",
          "for Loop - Part 2",
          "Nested for Loops",
          "Exercise 1 - while Loop",
          "for Loop Exercises"
        ],
        "Functions": [
          "Function Introduction - Part 1",
          "Function Introduction - Part 2",
          "Functions With Multiple Parameters",
          "Predicate Functions",
          "Void Functions Introduction",
          "Reference Parameters",
          "Function Exercises - Part 1",
          "Function Exercises - Part 2"
        ],
        "Vectors": [
          "vector Introduction",
          "vector Initialization",
          "Adding Data To vector",
          "vector Data Access",
          "vectors And Functions",
          "Random Numbers",
          "Searching A vector",
          "vector Sort",
          "vector Exercise"
        ]
      },
      "requirements": [],
      "description": "A Verifiable Certificate of Completion is presented to all students who undertake this course.\nAs one of the most popular general purpose programming languages in the world, C++ can be used to create everything from small apps to complete video games and critical system drivers. Now you can get started with C++ in a step by step, hands-on video course, in far less time than trying on your own with this ultimate c plus plus tutorial .\nIn this 10 hour tutorial series, computer science professor Mike McMillan introduces you to the basics of programming in C++. With over 25 years of programming experience, 13 years of teaching, and having written 6 textbooks on programming, Mike offers the definitive guide to coding. Starting with the basics of the C++ programming language, this video tutorial covers all of the basic operations you need to start building your own programs with c plus plus programs",
      "target_audience": [
        "Anyone with an interest in creating their own applications from scratch.",
        "People who are wanting to move from HTML or CSS to full-on programming.",
        "Programmers who want to expand the number of languages they can use.",
        "People who want to learn programming through pragmatic examples instead of endless explanations."
      ]
    },
    {
      "title": "Learn Python Programming From Scratch",
      "url": "https://www.udemy.com/course/learn-python-programming-from-scratch/",
      "bio": "A Great Resource to Start and Master Python Development",
      "objectives": [
        "Master Python Programming",
        "Learn important data structures for Python",
        "Understand OOOPS in Python",
        "Master Web programming in python",
        "Learn to create professional projects in Python"
      ],
      "course_content": {
        "Writing the first python program": [
          "Python Introduction",
          "Setting up Python",
          "Your First Program",
          "Commenting Code"
        ],
        "Basic Python Syntax": [
          "Variables and Data Types",
          "Getting Input",
          "Reading and Writing Files"
        ],
        "Python programming constructs": [
          "Functions and Variables",
          "Conditional Statements",
          "Loops"
        ],
        "Python Data Structures": [
          "Lists",
          "Dictionaries - Part 1",
          "Dictionaries - Part 2",
          "Modules"
        ],
        "OOPS in Python": [
          "Classes and Objects",
          "Exceptions",
          "GUI Programming"
        ],
        "Advance python programming concepts": [
          "SQLite",
          "urllib",
          "Sending Emails",
          "XML Parsing"
        ],
        "Web programming in Python": [
          "Simple HTTP Server",
          "Web Programming - Part 1",
          "Web Programming - Part 2"
        ],
        "Django framework": [
          "Introduction to Django",
          "Programming with Django - Part 1",
          "Programming with Django - Part 2",
          "Programming with Django - Part 3",
          "Programming with Django - Part 4 - A",
          "Programming in Django - Part 4 - B",
          "Programming in Django - Part 4 -C"
        ],
        "Projects - I": [
          "Projects -1 - Part 1",
          "Projects - 1 - Part 2",
          "Projects - 1 - Part 3",
          "Projects - 1 - Part 4"
        ],
        "Projects - 2": [
          "Project 2 - Part 1",
          "Project 2 - Part 2 - A",
          "Projects 2 - Part 2 - B"
        ]
      },
      "requirements": [
        "Access to a PC with minimum of 2GB Ram"
      ],
      "description": "Python is one of the most important programming language and must be part of any programmer repertoire worth their salt. Python as a general purpose high level programming language is known for its simplicity. It provides constructs which allows developer to create software with fewer lines of code enabling better readability and less complexity. It also supports multiple programming styles such as functional, object oriented, procedural and imperative.\nThis course has been created for absolute beginners. You will start the training from the ground up and will get to know the python language and its potential in and out. We have kept the learn-ability curve pretty straight forward for this course. But this course will teach you advance python programming also. There are numerous practical coding examples to cement your concepts. You will also build couple of projects which will make you a complete python professional.\nThe main concepts covered in this course are\nBasic Python programming Syntax\nPython Data Structures\nObject Oriented Programming in Python\nWeb programming in Python\nDjango framework for Python\nLearn all this and much more in this amazing course.",
      "target_audience": [
        "Programmers who want to start with python",
        "Java,C and DB developers who want to use python and Django in their projects"
      ]
    },
    {
      "title": "C# OOP Concepts: Apply C# OOP Concepts On Real C# Projects",
      "url": "https://www.udemy.com/course/c-oop-concepts-apply-c-oop-concepts-on-real-c-projects/",
      "bio": "Here is your reference guide for C# OOP classes, interfaces and object-oriented programming with C# , interfaces and C#",
      "objectives": [
        "C# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft.",
        "Thanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C",
        "Encapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members .",
        "C# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications",
        "As is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on.",
        "Apply the OOP concepts using C#",
        "How to apply each subject on real C# projects",
        "You will have an infrastructure to learn programming languages like Java or Python in a very short time",
        "What objects, classes, fields, properties, methods and constructors are in detail",
        "N- tier Architecture",
        "How to make a professional project with 3 tier architecture and LINQ",
        "Solid Principles",
        "Using of Abstract Factory , Observer and Facade Design Patterns",
        "Using of Entity Framework",
        "Using of N- tier Architecture , Design Patterns and Entity framework together",
        "How to develop professional apps",
        "How to Create Personnel Tracking systems algorithm",
        "How to Create Stock Tracking systems algorithm",
        "How to use facade design pattern on a real app",
        "Using of basic SQL commands",
        "Using Folder and File Operations",
        "How to Delegate methods and use events",
        "How to Handled errors and exceptions in your apps",
        "How to use coding techniques to make efficient development",
        "Beautiful coding techniques",
        "c sharp programming",
        "c sharp for beginners",
        "c sharp from scratch",
        "Develop unity 2D or unity 3D games ( unity c# )",
        "c# oop",
        "oop c#",
        "c# c# projects c# project c# oop oop oop c# oak academy c# oop concepts oops c# object oriented programming c# c# programming c# oops oop concepts project c#",
        "c# interface c sharp projects c# advance c# with project c# interfaces object oriented programming c sharp oop oak academy c# c# oop project",
        "c sharp project oop concept c sharp csharp projects c# with projects c# oop solid principles c# real project c# object oriented csharp project",
        "c# interview c# oop concept oop in c# projects csharp oops in c#"
      ],
      "course_content": {
        "C# OOP: Classes, Interfaces and OOP with real C# Projects": [
          "Here is What We Covered in C# OOP Course?",
          "Project Files and Course Documents",
          "FAQ regarding C#"
        ],
        "Set Up Visual Studio": [
          "How To Install Visual Studio 2019 On Windows?",
          "How To Install Visual Studion On Mac?",
          "How To Install Visual Studio 2022 On Windows?"
        ],
        "C# Object- Oriented Programming ( OOP )": [
          "What’s C# OOP?",
          "Class and Object",
          "Encapsulation",
          "Static Using in C#",
          "Inheritance C# OOP",
          "Interface",
          "Polymorphism",
          "Abstract",
          "Nested Class",
          "Partial ve Sealed Class",
          "C# Quiz -1"
        ],
        "Enum Using": [
          "Enum Using"
        ],
        "Delegate Using": [
          "Delegate Using"
        ],
        "Exception Handling": [
          "Exception Handling"
        ],
        "Folder and File Operations": [
          "System IO Class",
          "Directory and Directory Classes ( Folder Operations )",
          "File and File Info Classes ( File Operations )",
          "Path Class",
          "C# Quiz - 2",
          "C# Quiz - 3"
        ],
        "N-Tier Architecture": [
          "N-Tier Architecture"
        ],
        "MSSQL Using": [
          "Introduction to SQL",
          "Insert Command",
          "Select Command",
          "Update Command",
          "Delete Command",
          "MS SQL Quiz"
        ],
        "Personnel Tracking App with N- Tier - Architecture, LINQ and Triggers": [
          "Final version of App",
          "Project Construction Stages",
          "Creating Database",
          "Creating Project Structure"
        ]
      },
      "requirements": [
        "Desire to learn C# OOP",
        "A Windows or Mac for installing all the free software and tools needed to practice",
        "Basic C# ( C sharp ) Knowledge",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn C # in Oak Academy",
        "No prior knowledge of C# ( C sharp ) is required",
        "Determination to learn and patience for complete c#"
      ],
      "description": "Hello there,\nWelcome to C# OOP Concepts: Apply C# Object Oriented Programming Concepts On Real C# Projects course\nHere is your reference guide for C# OOP classes, interfaces and object-oriented programming with C#\n\nWhether you’re using C# in conjunction with Xamarin Forms to build cross-platform apps, or designing a new video game in Unity with C#, Udemy has a course for you Udemy hosts top-rated courses on everything from the fundamentals of C# programming to more advanced topics like databases and asynchronous programming\n\nEven though C# is a language that’s relatively easy to learn and maintain, it isn’t just for beginners Its scalability and large support community make C# the language of choice for Microsoft app developers and video game developers working with the Unity Engine Like C++ and Java, C# is a high-level object-oriented programming language It is generally more efficient than Java and has useful features such as operator overloading C# is based on C++ but has several advantages over this older language: it is type-safe, more comprehensively object-oriented, and the syntax has been simplified in several important ways Most importantly, C# interoperates exceptionally well with other languages on the NET platform For this reason, C# is a better choice for building applications for NET\n\nMost programmers will choose to learn the object-oriented programming paradigm in a specific language That’s why Udemy features a host of top-rated OOP courses tailored for specific languages, like Java, C#, and Python\nObject-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real-world objects into software modules called classes Consider a simple point of sale system that keeps a record of products purchased from wholesale dealers and the products sold to the customer An object-oriented language would implement these requirements by creating a Product class, a Customer class, a Dealer class and an Order class All of these classes would interact together to deliver the required functionality where each class would be concerned with storing its own data and performing its own functions This is the basic idea of object-oriented programming or also called OOP\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its NET initiative The NET framework and NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with Many programming languages in the past were designed for specific purposes C# was developed with business and enterprise needs in mind By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages That includes generics, var types\n\nWhat are the advantages of c# over C++ ?\nThanks to the NET framework, C# has many advantages over C++ C# is a refined and modernized version of C++ C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications Visual Basic was for business applications What C# does is combine the rapid development capabilities of VB with the power of C++ C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables It uses a simplified syntax, a huge improvement over the complex coding often required in C++ C# also removes memory management issues thanks to NET’s garbage collection scheme You do not have to reference items for garbage collection; the system can reclaim that memory as required\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users With encapsulation, you can group properties, methods, and other members so that they are treated as a single object It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs For example, suppose you have an object called “Patient” that contains patient-related data In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data In addition to information hiding, you can use encapsulation in C# to improve your code's reusability\n\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development In web application development, you can build dynamic websites and apps using NET or another open-source platform of your choice Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods A method is a block of code that contains a series of statements Programs run by executing methods A constructor is a special method of a class that is automatically called whenever an instance of a given class is created A constructor contains the instructions that execute when an object is created Developers use it to assign specific initial values to the data members of the same class In C#, you will get a compile-time error if you try to read from an uninitialized variable You must first initialize your variables by giving them an initial value, which is what the constructor does On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed Destructors are called implicitly by the garbage collector in NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey The first thing to learn about is what C# is, how and where it is used, and why it was developed From there, you can learn about data types, variables, keywords, and functions Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling\nDo you want to use C# to build web apps, mobile apps, games or understanding C# classes\nor\nDo you want to succeed with clean coding, agile, and design patterns?\nIf your answer is Yes then you have to master C# Object Oriented Programming And you are definitely at the right place\nObject-oriented programming is the foundation of many current application development approaches Interfaces and principles of object-oriented programming are crucial During my C# OOP course, you will learn everything, from A to Z, about OOP on real C# projects\nIn this course, we use interactive programming techniques; which means we will be building applications together, and furthermore, there will be lots of work to be done, of course, followed by answers You will also learn tips and tricks regarding beautiful and efficient coding techniques\nThat`s why you are at a great place to start with OOP with C#\nWhat you will learn?\nApplying the OOP concepts using C#\nHow to apply each subject on real projects\nYou will have an infrastructure to learn programming languages like Java or Python in a very short time\nN- tier Architecture\nHow to make a professional project with 3 tier architecture and LINQ\nSolid Principles\nUsing of Abstract Factory , Observer and Facade Design Patterns\nUsing of Entity Framework\nUsing of N- tier architecture, design patterns, and Entity framework together\nHow to develop professional apps\nHow to Create Personnel Tracking systems algorithm\nHow to Create Stock Tracking systems algorithm\nHow to use facade design pattern on a real app\nUsing basic SQL commands\nUsing Folder and File Operations\nHow to Delegate methods and use events\nHow to Handled errors and exceptions in your apps\nHow to use coding techniques to make efficient developmentc#\nc# net\nunity c#\nc# unity\nc sharp\nc sharp programming\nselenium webdriver with c sharp\nselenium with c sharp\nc sharp for beginners\nselenium c sharp\nc sharp from scratch\nunity\nunity 2d\nunity 3d\nc sharp\noop\nc# oop\noop c#\nc# intermediate: classes, interfaces and oop\nc# oops\noops c#\noops in c#\noop in c#\noops concepts c#\nc# c# projects c# project c# oop oop oop c# oak academy c# oop concepts oops c# object oriented programming c# c# programming c# oops oop concepts project c# c# interface c sharp projects c# advance c# with project c# interfaces object oriented programming c sharp oop oak academy c# c# oop project c sharp project oop concept c sharp csharp projects c# with projects c# oop solid principles c# real project c# object oriented csharp project c# interview c# oop concept oop in c# projects csharp oops in c#\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nWhen you enroll, you will feel the OAK Academy`s seasoned instructors' expertise\nThis course starts with very basics You will learn everything with hands-on practice I'll also teach you the best practices and shortcuts\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the OOP with C# and be hungry to learn more\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nAre you ready to dive in now to my C# OOP Concepts: Apply C# OOP Concepts On Real C# Projects course\nWe offer full support, answering any questions\nSee you in the C# OOP Concepts: Apply C# Object Oriented Programming Concepts On Real C# Projects course!",
      "target_audience": [
        "Anyone who wants to learn how to code with C# programming language, regardless of their current level",
        "Anyone who wants to improve their programming skills",
        "Anyone who wants to build object oriented and / or windows forms applications",
        "Anyone who is interested in developing software with a design pattern",
        "Anyone who wants to understand the elements of full-stack software development",
        "Anyone who wants to develop .NET applications",
        "People who are willing to make a career in the corperate world",
        "Newbies or students looking for a refresher on the basics of C# and OOP",
        "People who wants to understand the Unity better",
        "People who wants to develop unity 2D or unity 3D games"
      ]
    },
    {
      "title": "Advanced TypeScript - A Production-grade TypeScript Course",
      "url": "https://www.udemy.com/course/advanced-typescript-bible/",
      "bio": "Become the TypeScript guru at your company with this comprehensive production-grade advanced TypeScript course.",
      "objectives": [
        "Better understand TypeScript",
        "You will become a better contributor and reviewer",
        "You will be the one to unblock others and raise their speed",
        "You will be the one who really knows what TypeScript is doing",
        "Advanced TypeScript types often used in library and framework code",
        "Type predicates, generic constraints, mapped types, conditional types, template literal types, function overloads, and others.",
        "Advanced TypeScript Patterns"
      ],
      "course_content": {
        "Introduction": [
          "Course Walk-through",
          "Real-world Applicability of the Concepts",
          "Project Setup"
        ],
        "Basics: Fundamental Types and Assignability": [
          "Intro",
          "Exact Values as Types",
          "Combining Types",
          "The unknown Type",
          "The never Type",
          "The any Type",
          "Representing Data in Typescript",
          "Practice #1",
          "Practice #2",
          "Practice #3",
          "Practice #4",
          "Practice #5",
          "Practice #6",
          "Practice #7",
          "Practice #8",
          "Practice #9",
          "Practice #10"
        ],
        "Basics: Classes": [
          "Annotating this",
          "Creating a Class",
          "Class Methods",
          "Receiving arguments via constructor",
          "Getter Methods",
          "Private Properties",
          "Setter Methods",
          "Inheritance"
        ],
        "Records": [
          "Object Structures",
          "Object Assignability Rules",
          "Accessing Object Properties",
          "Key Extraction",
          "Optional Properties",
          "Combining Object Types",
          "Combining Object Types via Interfaces",
          "Combining Object Types and Key Sets",
          "Constraints of Merging Object Types",
          "Using Record Types in TypeScript",
          "Working with TypeScript Helper Functions",
          "Practice #1",
          "Practice #2",
          "Practice #3",
          "Practice #4",
          "Practice #5",
          "Practice #6"
        ],
        "Understanding Arrays and Tuple Structures": [
          "Tuples",
          "Arrays",
          "Array-Tuple Hybrids in TypeScript",
          "Function Parameters: When Tuples Are Useful",
          "Safer Arrays",
          "Safer Tuples",
          "Tuple Length",
          "Practice #1",
          "Practice #2",
          "Practice #3",
          "Practice #4"
        ],
        "Conditional Types": [
          "Understanding Conditional Type Structures",
          "The extends Operator Explained",
          "Constraining Type Parameters in Generics",
          "Complex Conditional Types",
          "Advanced Pattern Matching with Conditional Types",
          "Understanding Type Inference",
          "Advanced Tuple Inferencing",
          "Type Extraction from Functions with infer",
          "Advanced Inference in Custom Generic Types",
          "Type Variables",
          "Practice #1",
          "Practice #2",
          "Practice #3",
          "Practice #4",
          "Practice #5",
          "Practice #6",
          "Practice #7",
          "Practice #8",
          "Practice #9"
        ],
        "Type Iteration and Traversal Methods": [
          "Looping Patterns",
          "Iterating Through Tuple Types",
          "Applying the map Method in TypeScript",
          "Applying the filter Method in TypeScript",
          "Applying the reducer Method in TypeScript",
          "Inferring Constraints",
          "Practice #1",
          "Practice #2",
          "Practice #3",
          "Practice #4",
          "Practice #5"
        ],
        "Template Literals": [
          "Template Literals 101",
          "Embedding Primitives in Template Literals",
          "Working with Union Types in Templates",
          "Templates Involving Objects",
          "Template Literals and Pattern Matching Techniques",
          "Resolving Complex Patterns",
          "Another use-case of infer",
          "Template Literals with Recursion",
          "Practice #1",
          "Practice #2",
          "Practice #3",
          "Practice #4",
          "Practice #5",
          "Practice #6"
        ],
        "Union Types": [
          "Exploring the Capabilities of Union Types",
          "Understanding Union Types Mechanics",
          "Union Types and Their Distribution Effect",
          "Merging Unions",
          "Union Types in Conditional Scenarios",
          "Exploring TypeScript Through Union Types",
          "The Role of never",
          "Transforming Union Types",
          "Understanding Object Unions",
          "Narrowing Unions",
          "Refining Union Types",
          "Filtering Unions with in",
          "Utility Functions for Union Types",
          "Union of literals and wider types"
        ],
        "Mapped Types": [
          "Intro",
          "How Mapped Types Work",
          "Leveraging keyof with Mapped Types",
          "Advanced Mapped Types with Generics",
          "Refining Object Keys",
          "Arrays and Tuples in the Context of Mapped Types",
          "Defining Optional Properties",
          "Key Remapping"
        ]
      },
      "requirements": [
        "Substantial TypeScript knowledge.",
        "At least 1 year of programming experience in any language."
      ],
      "description": "Master The Complete Type System of TypeScript!\n\n\nThe approach of this course sets it apart from other courses. Here, the focus is exclusively on TypeScript, without wasting time on configuring trivial projects. Instead, you'll dive straight into pure TypeScript knowledge.\nRather than enduring lengthy lectures, you'll encounter real-world code challenges accompanied by concise explanations. Armed with these insights and your existing skills, you'll tackle the challenges at your own pace.\nThe exercises and lessons are carefully designed to reinforce key TypeScript concepts across various contexts, enabling you to understand when, where, and how to apply them effectively in your own projects.\nTrue TypeScript experts possess a deep understanding of the language, which makes it feel straightforward and predictable rather than mysterious. The TypeScript Bible course aims to foster this level of comprehension.\nUpon completing the course, you'll achieve mastery, reducing your apprehension when facing complex TypeScript errors, boosting your confidence in typing dynamic signatures, and streamlining your coding process.\nBy enrolling in this course:\nYou'll enhance your abilities as a contributor and reviewer.\nYou'll be the one to remove obstacles and increase productivity for others.\nYou'll truly grasp the inner workings of TypeScript.\nThis course isn't just a compilation of TypeScript tricks. Instead, it's focused on helping you develop a strong understanding of the language's fundamentals. I believe that building a solid mental model of these basics is more empowering because it equips you to tackle a wider range of problems, even those we haven't explicitly covered.\nWhile knowing a few tricks can be helpful, true mastery comes from understanding the underlying building blocks of the language and how they interact. This deeper understanding enables you to solve real-world problems with confidence and creativity.\nThe initial sections of the course are designed to lay a solid foundation for you. These sections will guide you through the essential concepts and principles you'll need to grasp before delving into the more advanced and complex topics covered later in the course.\nContent Description By Sections:\nSections 1,2,3:\nEvery programming language involves transforming data, and TypeScript is no different. However, what sets TypeScript apart is that types themselves serve as our data. In this course, we'll write programs that manipulate types as input and output other types.\nTo truly master TypeScript, you'll need a solid understanding of its various data types and structures. In the initial three sections, we'll delve into these concepts, exploring how they relate to the familiar concepts we use at the value level while also highlighting their unique characteristics.\nSection 4:\nAfter exploring the various types available to us in the first three sections, it's time to put our knowledge into practice by implementing our first TypeScript algorithms! This is where we transition from theory to practical application, diving into writing actual code using the language of types.\nSection 5:\nNext, we're going to delve into loops and recursive types. In this section, we'll harness recursion to iterate over tuple types. If recursive algorithms are new to you, the code I'll be demonstrating might seem unfamiliar at first. However, stay patient and keep in mind that we're not just mastering a new programming language, but a functional one at that! Understanding these concepts takes time, and being open to a bit of discomfort is crucial for advancing your skills.\nSection 6:\nFollowing that, we'll explore Template Literal Types, an exceptional feature exclusive to TypeScript's type system.\nSection 7:\nNext up, we'll delve into union types. Union types are remarkable as they allow us to accurately model the finite set of possible states our applications can be in. Without them, our types would be so imprecise that they would hardly be of any value.\nSection 8:\nIn this section, we'll explore loops with mapped types. Here, we'll discover how to transform and filter object types using Mapped Types. We'll combine them with other features of the type system, such as Template Literal Types and Conditional Types, to construct functions with incredibly intelligent type inference.\nSections 9+ (Extra Material):\nAnd finally, you'll find dozens of additional sections filled with even more TypeScript challenges and material to further hone your skills.\nWhen you’ve completed the all the exercises, you’ll reach a point of mastery where you will find yourself as the typescript go-to expert in your team.\nReview the course material titles to decide if it aligns with your expectations.\nThis course is ideal for TypeScript developers seeking to elevate their skills from intermediate to advanced levels. If this resonates with you, then this course is your next step toward mastery!",
      "target_audience": [
        "Any developer who is ready to work at becoming a Typescript Guru"
      ]
    },
    {
      "title": "Python for Everybody: Five Domain Specialization",
      "url": "https://www.udemy.com/course/python-for-everybody-five-domain-specialization/",
      "bio": "Game Development, Data Visualization, Web Scraping, Security and Cryptography, and Hacking--all at one course!",
      "objectives": [
        "Python basics like data-types, loops, decision-makings, file handling, libraries, modules, date-times etc.",
        "Create more than 10 real world projects",
        "Create a web scraper using BeautifulSoup and Selenium webdriver",
        "Python Advanced Concepts like functional programming, decorators, list comprehension, heapQ, Stacks etc.",
        "Famous python libraries: collection, datetime, pygame, numpy, pandas etc.",
        "Object oriented Programming and its features like: Inheritance, Polymorphism, Operator Overloading",
        "Game Development from scratch using turtle and pygame libraries",
        "Security and Cryptography: Message and Password Encryption and Decryption",
        "Data Visualization using numpy, pandas and matplotlib",
        "Hacking from scratch",
        "Using python to create Malware, Backdoor and Keylogger"
      ],
      "course_content": {},
      "requirements": [
        "Any machine with OS (Windows, MacOSX, and Linux)",
        "No programming background is essential (if there is, it will be useful)",
        "No prior knowledge of Python is required",
        "Fair internet connection is required to install some softwares and python libraries"
      ],
      "description": "Welcome to Python Programming world: The most popular language skill to have in 2020. You are going to learn every bit of python language in this course so that you can apply your knowledge in real-world apps.\nIn this course, You will learn:\n1. Web Scraping using BeautifulSoup and Selenium Webdriver\n2. Game Development using Pygame module\n3. Data Visualization using pandas, numpy and matplotlib module\n4. Security and Cryptography\n5. Hacking and Exploiting (Create Backdoors and Malware from Scratch)\n\n\nTOPICS TO BE COVERED IN THIS COURSE:\nBasic Python course Highlights:\nInstalling Python\nRunning Python Code\nStrings\nLists\nDictionaries\nTuples\nSets\nNumber Data Types\nPrint Formatting\nFunctions\nScope\nargs/ kwargs\nBuilt-in Functions\nDebugging and Error Handling\nModules\nExternal Modules\nObject-Oriented Programming\nInheritance\nPolymorphism\nEncapsulation\nAdvanced Methods\nIterators\nClosures\nand much more!\nAdvanced Python Topic Highlights:\nFunctional Programming (lambda, map, reduce)\nDecorators\nList Comprehensions, Dictionary Comprehensions\nHeapQ, Stack Implementation\nClasses and objects\nMetaclasses\nNecessary Module covered:\nos\ncollection\nrandom\nsubprocess\ndatetime\nmath\nnumpy\npandas\nmatplotlib\nbeautifulsoup, selenium\nsqlite\ncryptodome\nturtle, pygame\nmultiprocessing and so on...\n\n\nPROJECTS SECTION\nProjects (Basic to advance):\nWeb scraping on real websites\nSnake game\nDodge Car race game\nPacman game\nPassword and message hashing\nCryptography\nNBA data visualization\nMaking mac-changer with Python (Hacking)\nMalware from scratch\nBackdoor and Python Keylogger from scratch\nFrequently Asked Questions:\nIs Python A Good First Programming Language To Learn?\nEven though it has not yet been adopted as a first language by many computer science programs, Python is widely seen by industry experts as a great first programming language when learning to code and its extensive use in SpaceX to automate and handle technologies to launch rockets, Instagram, Google to support their backends and Many companies to support and execute ML and Deep Learning Algorithms; Its undoubtedly No.1 Programming Language to learn.\nFor starters, the syntax of Python is simpler than that of most other major programming languages, with fewer exceptions and special cases. It also tends to use plain English keywords in place of the system of punctuation that has to be memorized in other languages, making it easier to learn to code. Given these conventions, Python code tends to appear as less of a \"jumble\" to newcomers than it does in comparable languages.\nAnother great feature of Python is the ubiquity of its use. While Python is optimized for development on Linux and Unix systems, interpreters are available for just about every major operating system. All implementations of Python are supported by an excellent standard library, which means that new students can very quickly move on to creating actual functional programs that are useful. Additionally, the standard implementation of Python, CPython, is free and open-source.\nWhat Type Of Jobs Are Available To Python Programmers?\nIn the job market, if you observe the trends; Python is often looked like a strong language to support some primary language that is more broadly used like C or Java. But Lately, with the evolution of ML and Deep Learning Algorithms; it is highly demanded skill to have in 2020 and later. There are a variety of jobs that one can get focusing exclusively on Python development, however. Many of these jobs will be in building and improving the internal tools that a company uses to create its finished marketable products, rather than working on the finished product itself.\nOne specific economic sector where the presence of Python programming is particularly strong is the geospatial industry. This is a critical industry that deals with navigational tools such as GPS, radar, and light measurements.\nIf you're interested in web applications, Python is a better choice for development (working with the back-end or server-side) rather than design (creating the actually finished front-end that site visitors interact with). As mentioned previously, Google employed Python for many components of its search engine, and it is quite widely used in the data mining industry.\nFinally, Python can also be used for game development. Some famous examples of games developed either entirely or in large part with Python include EVE Online, Civilization IV, the Battlefield game series, and the Mount & Blade games. The popular development environment Blender is written in Python.",
      "target_audience": [
        "Beginners who want to specialize area like web scraping, game development using Python",
        "Beginners who want to learn about hacking and cryptography using Python",
        "Begineers who want to learn about data visualization using Python"
      ]
    },
    {
      "title": "The Complete Python Bootcamp from Zero to Expert",
      "url": "https://www.udemy.com/course/the-complete-python-bootcamp-from-zero-to-expert/",
      "bio": "Become a Python Expert. Learn Python Programming From Scratch with Hands on Exercises. Learn Data Science, Games & Apps",
      "objectives": [
        "Master Python Programming",
        "Become a professional Python Developer",
        "Program fluently in Python",
        "Learn Machine Learning with Python",
        "Analyze and Visualize Data",
        "Master modern Python",
        "Master art of Functional and Object Oriented Programming",
        "Learn how to use Python in Web Development",
        "Build a Machine Learning Model",
        "Learn Data Science"
      ],
      "course_content": {
        "Lets Get Started": [
          "Download and Installation Python and Pycharm",
          "First Project",
          "Create Files",
          "Syntax",
          "Data Types",
          "Arrays",
          "Classes and Objects",
          "Operators",
          "If Else",
          "While Loops",
          "Object State and Instances"
        ],
        "Variables": [
          "Output Variables",
          "Global Variables"
        ],
        "Strings": [
          "Format - Strings",
          "Escape Characters",
          "String Methods",
          "String Exercises"
        ],
        "Python List": [
          "List Comprehension",
          "Sort Lists",
          "Copy Lists",
          "Join Lists",
          "List Methods"
        ],
        "Python Tuples": [
          "Unpack Tuples",
          "Join Tuples",
          "Tuple Methods"
        ],
        "Python Sets": [
          "Loop Sets",
          "Join Sets",
          "Set Methods",
          "Set Exercises"
        ],
        "Dictionaries": [
          "Remove Dictionary Items",
          "Loop Dictionaries",
          "Copy Dictionaries",
          "Nested Dictionaries",
          "Dictionary Methods"
        ],
        "Python Matplotlib": [
          "Introduction of Matplotlib",
          "Plotting",
          "Markers",
          "Line",
          "Labels",
          "Grid",
          "Subplot",
          "Scatter",
          "Bars",
          "Histograms",
          "Pie Charts"
        ],
        "Python MySQL": [
          "Create Database",
          "Create Table",
          "Insert Into Table",
          "Select From",
          "Where",
          "Order By",
          "Delete From By",
          "Drop Table",
          "Update Table",
          "Limit",
          "Join"
        ],
        "Python MongoDB": [
          "Create Database",
          "Create Collection",
          "Insert",
          "Find",
          "Query",
          "Sort",
          "Delete",
          "Drop Collection",
          "Update",
          "Limit"
        ]
      },
      "requirements": [
        "No specific knowledge needed"
      ],
      "description": "Welcome to \"The Complete Python Bootcamp from Zero to Expert,\" an all-inclusive journey that takes you from absolute beginner to proficient Python programmer, regardless of your prior coding experience. This comprehensive course is designed to equip you with a solid understanding of Python programming, covering everything from the basics to advanced concepts, transforming you into a Python expert.\n\n\nPython is one of the most versatile, beginner-friendly, and sought-after programming languages in the world. Whether you're an aspiring software developer, data analyst, web developer, or someone simply eager to learn programming, this course is your pathway to mastering Python.\n\n\n\n\nKey Learning Objectives:\n\n\nFamiliarize yourself with Python's syntax, data types, variables, and fundamental programming concepts.\n\n\nUnderstand control flow with conditional statements, loops, and logical operations to create dynamic programs.\n\n\nMaster the creation and utilization of functions, modules, and packages for reusable and modular code.\n\n\nExplore Python's data structures such as lists, tuples, dictionaries, and sets for efficient data organization and manipulation.\n\n\nLearn the principles of OOP, including classes, objects, inheritance, polymorphism, and encapsulation.\n\n\nGrasp techniques for handling errors and debugging to create robust and error-free programs.\n\n\nMaster reading from and writing to files, managing data persistence, and handling user input.\n\n\nDelve into advanced Python topics like decorators, generators, context managers, and more to enhance your programming skills.\n\n\n\n\nWhy Choose This Course?\n\n\nThis course is structured to take you from a complete beginner with zero coding knowledge to an expert Python programmer.\n\n\nPractice what you learn with coding exercises, quizzes, projects, and practical examples that reinforce your understanding.\n\n\nLearn from experienced instructors who simplify complex concepts and are passionate about guiding you through your Python learning journey.\n\n\nEnroll once and enjoy lifetime access to the course materials, allowing you to learn at your own pace and revisit topics whenever needed.\n\n\nPython's versatility makes it applicable across various domains, including web development, data analysis, automation, and more.\n\n\nWhether you aspire to become a web developer, data scientist, or automate tasks, \"The Complete Python Bootcamp from Zero to Expert\" is your gateway to mastering Python programming. Enroll today and embark on your journey to becoming a proficient Python developer. Don't miss this opportunity to elevate your programming skills from zero to expert!",
      "target_audience": [
        "All levels of students",
        "Anyone who want to explore the world of Python",
        "This course is for you, if you want a great career"
      ]
    }
  ]
}