{
  "courses": [
    {
      "title": "Polymer 3: Learn Polymer 3 in 2020",
      "url": "https://www.udemy.com/course/polymer-3-create-web-components-with-polymer-3/",
      "bio": "Install Polymer 3, Master Polymer 3, Create custom web components with Polymer 3",
      "objectives": [
        "Install Polymer 3",
        "Create Polymer 3 Application/Element",
        "Build Article Template with Polymer 3",
        "Build TODO List with Polymer 3",
        "Build Image Slider with Polymer 3"
      ],
      "course_content": {},
      "requirements": [
        "A bit of experience with HTML and Javascript"
      ],
      "description": "So, do you want to learn Polymer 3?\nYou have come to the right place, in this course I will teach you everything you need to know about polymer 3. Polymer allows apps that launch quickly, respond instantly and can be accessed from anywhere—on devices of all types and sizes, under any network conditions. Polymer is just great.\n\n\nCompanies that use polymer:\nGoogle\nEA\nCocaCola\nComcast\nIng\nBBVA\nUSA Today\nAnd many more\nVersion 3.0 of the Polymer library brings web components into the mainstream, embracing JavaScript modules and npm.\n\n\nWhat will I learn?\nWell, we start off by installing everything we need in order for us to be able to use Polymer 3,  don't worry if you are a beginner who has never used bash or command line, I explain everything you need to know\nThen we create our first simple web component - Article, This component is extremely simple but by building it you will understand how data binding works, how to install web components, how to add web components into your app, and basically how the polymer works.\nThen we move on to TODO list, this project is a bit more advanced, You will learn how 2-way data binding works, how to use web components like paper-input and paper-checkbox, how to use dom-repeat element, how to add custom functions to your web component and much more.\nThe last project is the Image Slider, this application uses 2 custom web components, That works together, In this project, we will leverage the functionality of Javascript and make an actual slider that you can use on your website.\n\n\nRequirements:\nA bit of experience with HTML and Javascript\nWho should take this course?\nAnyone who wants to learn Polymer 3\nAnyone who wants to create custom Web Components",
      "target_audience": [
        "Anyone who wants to learn Polymer 3",
        "Anyone who wants to create custom Web Components"
      ]
    },
    {
      "title": "Mastering Sitefinity MVC Widget Development",
      "url": "https://www.udemy.com/course/mastering-sitefinity-mvc-widget-development/",
      "bio": "Learn the ins and outs of developing professional MVC widgets for Sitefinity",
      "objectives": [
        "Students will learn how to create MVC based Widgets in Sitefinity and create Widget Designers to facilitate changes of properties.",
        "You will be able to understand the use of Angular in building Widget Designers",
        "You will be able to create external Assemblies to host your widgets",
        "You will be able to bring Razor syntax highlighting to Class Library projects for Widgets"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Visual Studio for Sitefinity Development": [
          "Start a Visual Studio Project for Sitefinity",
          "Adding Nuget Packages to Visual Studio Projects",
          "Building and Running your Nuget package based Sitefinity Application"
        ],
        "Developing MVC Widgets in Visual Studio": [
          "Introduction to Sitefinity VSIX and Sitefinity CLI",
          "Installing the Sitefinity CLI",
          "Generating the First Sitefinity Widget",
          "The use of ControllerToolboxItem Attribute",
          "Using the First Widget on a Page",
          "Using a second widget on a page with HandleUnknownAction"
        ],
        "Sitefinity Automatic Widget Designers": [
          "Introduction to Widget Designers",
          "Adding Multiple Type properties to Models",
          "Adding Multiple Type properties to Conntrollers",
          "Adding Multiple Type properties to Views",
          "Adding Simple Attributes to affect visability of public properties",
          "Using MixedContentContext for Image Properties",
          "Using Library Manager API to access the Image in the View",
          "Adding Page Selectors, Tag Selectors, News Selectors and more to Designers"
        ],
        "Sitefinity custom Widget Designers": [
          "Sitefinity Feather Convention for creating Custom Widget Designers",
          "Adding a second Custom Widget Designer",
          "Adding a JSON file to set priority and visibility",
          "Adding JSON file to set Components and Scripts",
          "Using Angular to persist public property to the database",
          "Fixing the missing sf-Date-Time-Selector for the Custom Designer"
        ],
        "Developing MVC Widgets in Class Libraries": [
          "Creating a class library to contain an MVC Widget for Sitefinity",
          "Upgrading the Sitefinity Application",
          "Adding Nuget Packages to the Class Library",
          "Adding the ConntrollerContainer Attribute to the assembly",
          "Using the Sitefinity CLI to generate a Widget for the Class Library",
          "Enabling Code Completion for CSHTML files in Class Library",
          "Building and running our new widget from the Class Library",
          "Modifying the CssClass, sfMvcIcn and the main icon for the widget"
        ]
      },
      "requirements": [
        "Understanding of Sitefinity as a Content Management System",
        "Prior knowledge of MVC is a plus",
        "General Knowledge of .NET development is a plus"
      ],
      "description": "In addition to Sitefinity CMS built-in widgets, you can create new widgets from scratch and implement your own logic and customize widgets' built-in functionality. You also have the option of keeping the widgets in separate assemblies and deploy them independently of your project. You can then use your new widgets side by side with the built-in ones.\nWith Sitefinity CMS, you have the option to develop widgets in both the SitefinityWebApp project or in external assemblies. The underlying development concept is the same but the way you organize and manage your code differs between the two methods.\nIn this course you will learn the following:\n\n\nBuilding a Sitefinity application from scratch using Nuget Packages in Visual Studio\nUsing the Sitefinity CLI to generate boiler plate code for Widgets\nUnderstand the use of Controllers, Models and Views in the structure of a Sitefinity Widget\nLearn about the Automatic Widget Designer in Sitefinity\nLearn about the Property Attributes that facilitate the creation of complex UX in Widget Designers\nBuilding Custom widget Designers and the use of Sitefinity Feather\nUsing JSON files to set the Priority, Visibility, Components and Scripts for a Designer\nUsing Angular to connect public properties to the Sitefinity database in Designers\nBuilding Class Libraries to host external Sitefinity Widgets\nTips and tricks along the way to make Sitefinity MVC Widget Development fun and productive.",
      "target_audience": [
        "The target students for this course are students looking to develop MVC widgets for Sitefinity professionally",
        "Also students needing to build Widget Designers for Sitefinity MVC Widgets"
      ]
    },
    {
      "title": "Top Ruby on Rails and Ruby Bundle: Learn Ruby and Rails",
      "url": "https://www.udemy.com/course/ultimate-ruby-on-rails-and-ruby-bundle-learn-ruby-and-rails/",
      "bio": "Learn Ruby on Rails and Ruby Programming The Fast and Easy Way!",
      "objectives": [
        "Build Web Apps With Ruby On Rails",
        "Build Your Own Stock Market Website",
        "Build Your Own Weather App",
        "Build Your Own To-Do List App",
        "Learn Ruby Programming",
        "Understand Rails Webhosting",
        "Download and Install Ruby on Rails",
        "Download and Install Git Bash Terminal",
        "Push Code To Github",
        "Understand the Bootstrap CSS Framework",
        "Connect To a 3rd Party API",
        "Understand How To Use Databases With Rails"
      ],
      "course_content": {},
      "requirements": [
        "You need a computer with Internet access",
        "No programming skills necessary to take this course"
      ],
      "description": "This is a bundle course of four of my popular Ruby on Rails and Ruby Programming courses all in one course. Aimed at the absolute beginner, in this course you'll learn the Ruby programming language and the Ruby on Rails Web Framework for building websites.\nThis course is broken up into four sections:\nRuby Programming\nRuby on Rails To-Do List App\nRuby on Rails Weather App\nRuby on Rails Stock Market App\nWe'll start out learning the Ruby programming language.  You don't need any prior knowledge or special tools to learn Ruby, I'll walk you through everything you need to know. You'll learn:\nPrinting to the Screen\nVariables\nNumbers and Simple Math\nComparison Operators\nAssignment Operators\nAfter that, we'll move into more intermediate topics like:\nConditional If/Else Statements\nWhile Loops\nFor Loops\nFizzbuzz\nFinally we'll finish up with more advanced topics like:\nArrays\nObjects\nFunctions\nClasses\nAfter that we'll learn the Ruby on Rails Web Framework by building out Three awesome Web Apps!  I'll teach you how to install Ruby on Rails and set up all the tools you'll need, and then we'll dive right in and start building out apps!\nThe first app we'll build is a daily \"To-Do\" List App.  It will allows you to create lists of things you want to do in a day (take out the trash, feed the dog, buy groceries, etc).  You'll learn how to use a database in Rails, how to add things to the database, and how to remove them.\nIn the next App, we'll build a Weather App that checks air quality in your neighborhood.  We'll learn how to connect to a third party API to grab weather data, and then do cool stuff with it.\nIn the last app, we'll build a full blown Stock Market Portfolio App. You can lookup stock market data on any company, save the data to your own personal portfolio, and all kinds of other cool things!\n\n\nIf you've every wanted to learn web development with the Ruby on Rails and Ruby stack, this is the course for you...\n\n\nSign up today and I'll see you on the inside!\n\n\n-John Elder",
      "target_audience": [
        "This course is meant for absolute beginners who want to learn Ruby on Rails for Web Development",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "Learn HTML: Course For Beginners",
      "url": "https://www.udemy.com/course/html-course-for-beginners/",
      "bio": "Complete Guide to Learn HTML for Beginners",
      "objectives": [
        "will learn HTML basics",
        "will examine many of HTML Elements.",
        "will create HTML files",
        "will write HTML Code using Visual Studio Code",
        "will test HTML pages on the web browser",
        "will validate HTML using W3C Markup Validation"
      ],
      "course_content": {
        "Course Introduction and Work Environment Setup": [
          "Course Introduction",
          "Setting things up"
        ],
        "Introduction to HTML": [
          "What is HTML and How does it Work",
          "HTML Introduction Quiz"
        ],
        "HTML Syntax and Structure": [
          "HTML Elements",
          "Paragraphs",
          "Headings",
          "Line Breaks",
          "Images",
          "Hyperlinks",
          "Lists",
          "Divisions",
          "Tables",
          "Forms",
          "Other HTML Elements",
          "HTML Elements Practice Test",
          "Inline Elements vs Block Elements",
          "Inline Elements vs Block Elements Quiz",
          "Structure of HTML file",
          "HTML Validation",
          "HTML Iframe"
        ],
        "Summary & Exercises": [
          "Course Summary",
          "Hello, World Project",
          "To-Do List Project"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "Internet Access"
      ],
      "description": "Learn HTML: Course For Beginners\nComplete Guide to Learn HTML (Hypertext Markup Language) for Beginners.\nIn this HTML course you will:\nLearn HTML basics,\nUse Visual Studio Code as the Text Editor for creating HTML files,\nWrite HTML code examples,\nTake HTML exercises and exams,\nGain knowledge about many HTML elements and Learn how to use them correctly,\nValidate HTML files using W3C Markup Validation Service,\nStart creating beautiful websites.\nCourse instructions\nYou have to install visual studio code as per the \"setting things up\" lesson\nEach practical lesson comes with a zip file of source code, and you can download the source files from the resources section.\nEach HTML exam is formed of quick multiple-choice questions, you have to answer them carefully without mistakes.\nAt the end of the course, you will find two small coding exercises you have to do exactly the same as required in the description so you can pass the project code validation.\nAfter finishing the class hundred percent, you will get a certificate of completion.\nGood Luck with your journey with HTML.\nIf you have any questions do not hesitate to send me a message directly, and I will be available to answer your questions.\nBest Regards,\nAM Learning\nMake Learning Fun",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "Master JavaScript - The Most Complete JavaScript Course 2022",
      "url": "https://www.udemy.com/course/master-javascript-the-most-compete-javascript-course-2020/",
      "bio": "Master JavaScript 2022!Projects, challenges, JavaScript ES6, ES7, ES8 ,ES9, ES10, ES11, OOP, AJAX, Webpack,Laravel",
      "objectives": [
        "Master JavaScript"
      ],
      "course_content": {
        "JavaScript - Genesis New Course": [
          "0- How to get maximum from this course",
          "1. Javascript Intro",
          "2. Javascript Origins",
          "3. Javascript Types",
          "4. Javascript Comparsion Operators",
          "5. Javascript Variables",
          "6. Javascript Conditions And Logical Operators",
          "7. Javascript Functions",
          "8. Javascript Arrays",
          "9. Javascript Objects",
          "10. Solution For Exercise 7",
          "11. Javascript Terminology",
          "12. Javascript Loops, For, Foreach, While, Do While",
          "13. Exercise 9 Solutions",
          "14. Javascript Scope"
        ],
        "JavaScript DOM - Metamorphosis NEW Course": [
          "1. Dom & Javascript Engine",
          "2. Dom Selectors",
          "3. Dom - Selectors 2",
          "4. Dom - Creating New Html Element",
          "5. Dom - Events",
          "6. Dom - Events 2",
          "7. Dom - Mouse Events",
          "8. Dom- Keyboard Events",
          "9. Event Bubbling And Delegation"
        ],
        "Advanced JavaScript - Supernova New Course": [
          "1. Introduction",
          "2. Advanced Es6 Features Let & Const, Destructoring, Template Literals, Arrow Fn",
          "3. Lexical Environment, Closures, Compose Fn, Currying",
          "4. Advanced Array Methods",
          "5. Obejcts Reference Type, Context, This Keyword, Classes, Inheritance, Const",
          "6.Pass By Value And Pass By Refrence, Promitive & Non-Primitive, Spread Operator",
          "7. Type Coercion"
        ],
        "JavaScript - Stellar New Course": [
          "1. Json",
          "2. Ajax- Without Page Refresh Using Fetch",
          "3. Callback, Anonymous Fn, Callback Hell, Asynchronous Fn",
          "4. Promises",
          "5. Es7 Features",
          "7. Es8 Features Like Padstart, Padend, Object Values And Object Entries",
          "8.Async Await",
          "9. Es9 - Spread Operator",
          "10. Es9 Finally, For Await Of",
          "11. Es10 Features Including Trimstart && Trimend",
          "12. Modules, Export And Import",
          "13.Es11 - 2020 Javascript Features",
          "14. Es11 Features 2"
        ],
        "JavaScript Fundamentals": [
          "0. Important Lecture - How To Get Maximum Of This Course",
          "1. Javascript Fundamentals, Environment Setup, Our First Index File Created",
          "2. Difference Between Inline And External Js Files",
          "3. Primitive JavaScript Data Types And Alert Box",
          "4. Variables Naming Convention Rules",
          "5.Variable Mutation And Javascript Coercion, Plus Defining Multiple Variables",
          "6.Logical Operators, Math Operators, Types Of, Prompting Users For Information",
          "7.Operator Precedence",
          "8.Coding Assignment, Weight Converter",
          "9. JavaScript If Else Statements"
        ],
        "JavaScript HTML DOM Manipulation": [
          "1.JavaScript Dom and Dom Manipulation",
          "2. Document Object and Its Properties",
          "3.Single Query Selectors getElementById and qyerySelector",
          "4. DOM Selectors for Multiple Elements",
          "5. DOM, Parents, Siblings, Previous,",
          "6. EventListeners onClick & Mouse over",
          "7.Mouse Events",
          "8.Local Storage And Session Storage",
          "9.Create Element's, Constants and Variables",
          "10. Mini Project Our To Do List",
          "11. JavaScript Working on Our To Do List App, Display the list elements",
          "12. Displaying Items From Localstorage and Delete Items on Clear",
          "13. To Do List App Finished",
          "14. Event Bubbling and Event Delegation"
        ],
        "Dice Game Run To 20": [
          "0. Run To 20, Dice Game With JavaScript",
          "1. Project Walkthrough, and Setting your Js file",
          "2. QuerySelector, getElementById, ClassList To Add classes to our dice game",
          "3.Roll the Dice with Random number and displaying it on GUI",
          "4. Toggle Between Player Status, Calculate Their Dice Number For Each Player and",
          "5. Build the Blocks in Payer Score Board Using Function and Loops",
          "6. Reset, Announcing Winner, And Smart Way to Stop The Game From Running"
        ],
        "Advanced JavaScript Objects and Functions": [
          "1.JavaScript Object Inheritance And The Property Chain",
          "2. Objects, Inheritance And Prototype Chaining",
          "3. Console Log, Inspecting Arrays, Properties And Prototypes",
          "4. Object Create In JavaScript",
          "5. Primitives Vs Objects",
          "6. This Keyword , Constructor And Global This Keyword",
          "7. JavaScript Built In Constructors",
          "8. Important, Example Of First Class Functions",
          "9. Javascript Returning Functions",
          "10. IIFE- Immediately Invoked Function Expression",
          "11. Closures, Closure Function Behind Scenes",
          "13.Call, Apply And Bind Methods"
        ],
        "Burny - Calorie App": [
          "1. Project Walkthrough And What We Are Building-1",
          "2. HTML Markup, CSS, JS, Sass, Font-Awesome Explained",
          "3. Architecture, Modules, Data Encapsulation, To Do List First Section",
          "4. Setting The Architecture And Three Modules For Our App",
          "5.Add Event listener & KeyPress Listener For our Form Submission",
          "6. Read Form Data, Connect Main With Ui Controller And Use Class Names Object",
          "7.Clean The Code And Group Event Listeners",
          "8. Using Parsefloat, Parseint, Isnan To Prevent Wrong Form Values To Be Submited",
          "9. Function Constructors For Add And Burn Calories Plus How To Store The Data",
          "10. Adding Calories And Storing Inside Our Storage Array",
          "11. Storing New Calories With Unique Id Inside Our Storage",
          "12.Display The Calorie Item From Storage To UI",
          "13. Display Notification For Food Or Exercise Calories Plus Motivational Talk",
          "14. Calculate Added ,Burned Calories Return And Store Their Values, Long Lecture",
          "14. Display The Result In Front UI",
          "15. Finishing The Remaining Calories Front UI",
          "16. Second To Do List, Congratulations On The Finishing The First Part",
          "17. Delete Calories Event Delegation, Parent Node, Select Food And Exercise Ids",
          "18. Delete Calories From Storage, Ui And Update The Front UI",
          "19. Last Stage Planning And Outlining Our Coding Points",
          "20. Display Date Name, Month Name Using Date Function, Reset Everything",
          "21.Format Calories To Include Decimal Point And Comma",
          "22. Use The Functions And Display The Results On From UI",
          "23. Clear Form , Error Notification and Clean The Code"
        ],
        "ES6- ES2015 Next Generation JavaScript": [
          "1. Welcome To ES6 What We Will Cover",
          "2. New Way Of Declaring Variables Let And Const",
          "3. ES5 Vs ES6 Blocks And Iffes, Data Encapsulation",
          "4. String Methods, Template Literals Using Backtick",
          "5. Arrow Function, With Single Or Multiple Arguments",
          "6. A JS Break, Looking into Sass, Css, Bem, Box Shadows & Create A Traffic Light",
          "7.Lexical This Keyword",
          "8. Destructuring Data Sets",
          "9.For Of, Findindex, Find, Array.From",
          "10. Spread Operator, Arrays And NodeLists",
          "11.Rest Operator",
          "12. Default Parameters",
          "13. JavaScript Maps",
          "14. Classes, Synthetic Sugar Over Prototype Property",
          "15. Subclasses & Inheritance Explained With Person Actor Class"
        ]
      },
      "requirements": [
        "No requirements or prerequisites"
      ],
      "description": "Course Requirements\nIn order to follow me in this course, no coding experience is necessary, I will take you from the very beginning and will turn you into an expert.\nDuring this course, I'm using Windows but any OS will work — Windows, macOS, or Linux. Together we will set up the text editor we need to for the course.\nIt is always recommended to have a basic understanding of HTML and CSS, that will be helpful but not a must! The course also includes a section of CSS, SASS, HTML intro so you can navigate easily.\n\n\nDescription\n\n\n*** The #1 Complete JavaScript course on Udemy! ***\n\n\nJavaScript is the leading #1 programming language and the question is do you want to master it?\n\n\nIf you are tired of wasting your time and money on watching random YouTube videos or taking JavaScript courses that are not complete, simple, or complex?\nAre you struggling to deeply understand ow JavaScript really works behind the scenes and how to apply your knowledge to real projects?\n\n\nIf the answer to my previous questions is YES... Then this is the course that will change all of that. This is what you have been looking for so long!\n\n\nWhat this course will cover?\n\n\nThis is not just a JavaScript course, this course will offer you much more, modern CSS, HTML, and JavaScript practices. All of the current versions of JavaScript are included.\n\n\nI will take you from being a complete JavaScript beginner to be a professional advanced developer. This course will help you learn how JavaScript works and how to code, solve problems, and debug. Along the course, you will learn how to structure and organize code using common JavaScript patterns, module patterns, and modern Architecture.\n\n\nSo, what are you waiting for come and join me on this awesome journey where I explain everything on the way with great detail and a large number of exercises!\nThis course will help you to understand how, and why JavaScript code is working. Where to apply your knowledge and how to be a perfect debugger, to train your eye for mistakes and fix them.\n\n\nNow I want to be clear this course will contain a lot of coding challenges, projects, and theory lectures. So, you need all of these in order to build real-world projects.\n\n\nThis course is different because it's not just about writing code, it's also about how and why code works the way it does. Because it's the perfect mix between theory and practice. Because it focuses not only on small coding examples but also on real-world projects and use cases.\n\n\nThis will empower you to be a capable JavaScript Developer so you can write, understand, and debug JavaScript code using all the latest techniques that we will cover.\n\n\nWhat will be covered in this course\nIn short all of the versions staring from ES5, ES6, ES7, ES8, ES9, ES10, ES11, and any ESNEXT version,\n\n\nJavaScript fundamentals like:\nvariables,\ndata types\nBoolean logic\nif/else statements\nloops\nternary operators\nfunctions\nobjects\narrays\nand my hands are tired of typing but much more.\n\n\nIn order to understand JavaScript and how it truly works behind the scenes, you will learn in-depth about\nExecution contexts\nscoping\nthe 'this' keyword,\nand more....\n\n\nJavaScript and Website Interaction-one of my favorite parts:\nDOM manipulation\nSelect and change Webpage Elements,\nDOM Events.\n\n\nWe will cover much more complex features like\nFunction constructors\nPrototypal inheritance\nFirst-class functions\nClosures,\nThe bind and apply methods, and more.....\n\n\n•At this stage we are having chance to code up 3 beautiful real-world apps where you can apply your knowledge and learn the new concepts\n(Note provided the starter HTML and CSS code for these projects).\n\n\n• Design is a very important and elegant thing so you will learn how to use\nmodules and functions so you can separate your code and that will allow you to create data privacy and encapsulation, and why that is something very important.\n\n\n•What's new in ES6 / ES2015 the biggest update for JS.\n\n\n•You will learn about Asynchronous JavaScript: the event loop, promises, async/await, AJAX calls and APIs, promise all, Promise Race, Promise Reject, Promise settled.\n\n\n• Modern JavaScript 2020 where you will learn how to set up a modern development workflow using Node.js NPM, Webpack, Babel, and ES6 modules.\n\n\n\n\n\n\nSo, is this course the right one for you?\n\n\nStudent #1: I want to gain a deep understanding of how JavaScript works and I would love to learn as much as I can: I want to learn JavaScript.\n\n\nStudent #2: I have taken another JavaScript course but they are confusing and hard so:\n1) still don't really understand JavaScript\n2) still don't feel confident to code real-world apps. Then there is no brainer take this course it will be a perfect match for you!\n\n\nStudent #3: I'm interested in using popular libraries/frameworks like React, Angular, or Node.js but I can't understand how they work.\n1) Well, JavaScript is the one that needs to be taken before using popular libraries. This course will give you the knowledge to learn them all.\n\n\nStudent #4: You want to get started with web development: Them Master JavaScript is a great course where you can learn JavaScript language and learn how to code.\n\n\nStill not sure?\n\n\nAccess to HD quality videos for life.\nNo monthly subscription.\nLearn at your own pace, whenever you want, how much you can.\nEnglish Language captions provided by Udemy.\nAll resources are available like the starter and final code for each section. Lectures are also included\nQ&A when you have questions or get stuck.\nMultiple coding challenges to apply and practice your skills (solutions included).\n\n\nNow if this sounds like a good option for you then please lets both you and I start this adventure today by clicking the “Take this course\" button, and join me in the only JavaScript course that you will need!\nWho this course is for:\nThis course is for someone that wants to gain\ndeep understanding of the most popular programming language in the world: JavaScript.\nIf you are a student and want to learn a web development language that sits in the first 4 always\nIf you're interested in using popular libraries/frameworks like React, Angular, or Node then you need this course.\nIn general: JavaScript is a great language to learn how to code and that makes this course irresistible.",
      "target_audience": [
        "From Zero to Hero, Go From Beginner to an Advanced JavaScript developer",
        "3 Amazing real-world apps you can code, starting from with both ES5 and going all to ES11+ (Real World Apps)",
        "JavaScript Fundamentals: Variables, boolean logic, if/else, loops, functions, arrays, etc",
        "Asynchronous JavaScript: The event loop, promises, async/await, AJAX and APIs, JSON, HTTPS",
        "Modern Features like the 'this' keyword, function constructors, prototypal inheritance, first-class functions, closures",
        "Promise all, Promise settledAll, Promise Race, Promise Reject, Promise Resolve",
        "Modern JavaScript for 2020: NPM, Webpack, Babel and ES6 modules, Architecture",
        "Understand How JavaScript Really Works Behind the Scenes",
        "What is new in ES6",
        "What is new in ES7",
        "What is new in ES8",
        "What is new in ES9",
        "What is new in ES10",
        "What is new in ES11",
        "ES6: arrow functions, classes, default and rest parameters, etc.",
        "Coding Challanges",
        "To Do List App",
        "LocalStorage",
        "Movie API Project",
        "Amazing opportunity to learn how CSS, SASS and HTML work behind the scenes",
        "DOM Manipulation",
        "Fetching Data From Remote API async/await",
        "Q&A",
        "Module Patterns",
        "Export and Import",
        "BigInt"
      ]
    },
    {
      "title": "Laravel 9 - Building a Complete Job Portal Application",
      "url": "https://www.udemy.com/course/laravel-building-complete-job-portal-application/",
      "bio": "Learning Laravel fundamentals (A to Z) and developing a complete dynamic multi-user job portal website with Laravel 9",
      "objectives": [
        "Laravel 8 or Laravel 9 from scratch",
        "Laravel Fundamentals (A to Z)",
        "Laravel Single and Multi Auth (with Guard) System",
        "Visual Studio Code Editor and Important Plugins",
        "Laravel CRUD option",
        "Laravel Login System",
        "Forget Password and Reset Password System",
        "Email Verification System Logic and Implementation",
        "Contact form email sending",
        "Website logo, favicon and other items setup",
        "Admin profile management",
        "Photo uploading system",
        "Toastr message notification system",
        "Company Profile Management",
        "Company Login and Registration",
        "Candidate Login and Registration",
        "Candidate Profile Management",
        "CV Creation and Uploading System",
        "Pricing Package Management",
        "Advanced Job Searching Option",
        "Uploading Project to Live Server",
        "Candidate Job Apply and Bookmarking System"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local Server Setup (Windows OS)": [
          "Installing XAMPP",
          "Shift between php versions in XAMPP",
          "Installing Laragon",
          "Shift between php versions in Laragon"
        ],
        "Local Server Setup (Mac OS)": [
          "Installing XAMPP",
          "Installing MAMP",
          "Shift between php versions in MAMP"
        ],
        "Code Editors": [
          "Code Editors"
        ],
        "Visual Studio Code Editor": [
          "VS Code Installation",
          "Opening Folders (Single and Multiple)",
          "Autosave",
          "Installing Extensions",
          "Export Settings",
          "Reset VS Code",
          "Creating and Working with Snippets",
          "Extension - Bootstrap 5 Quick Snippets",
          "Extension - Auto Rename Tag",
          "Extension - Material Icon Theme",
          "Extension - Vscode Great Icons",
          "Extension - Live Server",
          "Extension - Live Server Preview",
          "Extension - HTML CSS Support",
          "Extension - Laravel Blade Snippets",
          "Extension - Laravel Blade Spacer",
          "Extension - Laravel Artisan",
          "Extension - Laravel-goto-controller",
          "Color Scheme",
          "Working with Terminal",
          "Settings Sync"
        ],
        "Laravel Fundamentals (A to Z) - Laravel 8 & Laravel 9": [
          "Important Notes about Laravel 8 and Laravel 9 - How to install",
          "What is MVC",
          "What is Laravel",
          "What is Composer; Download and Install Composer (Windows OS)",
          "Install Composer in Mac OS",
          "Install Laravel",
          "Laravel Folder and File Structure",
          "Routes - Basic, Routes with parameter - Part 1",
          "Routes - Names route, URL, URL to Route - Part 2",
          "Controller",
          "Blade - Part 1",
          "Blade - Part 2",
          "Middleware - Part 1",
          "Middleware - Part 2",
          "Route Group",
          "Database and Migration",
          "Model",
          "Database - Raw SQL (Insert Data)",
          "Database - Raw SQL (Show Data)",
          "Database - Raw SQL (Update Data)",
          "Database - Raw SQL (Delete Data)",
          "Database - Raw SQL (Join Tables)",
          "Database - Query Builder (Insert Data)",
          "Database - Query Builder (Show Data)",
          "Database - Query Builder (Update Data)",
          "Database - Query Builder (Delete Data)",
          "Database - Query Builder (Join Tables)",
          "Database - Eloquent ORM (Insert Data)",
          "Database - Eloquent ORM (Show Data)",
          "Database - Eloquent ORM (Update Data)",
          "Database - Eloquent ORM (Delete Data)",
          "Database - Eloquent ORM (One to One Relationship)",
          "Database - Eloquent ORM (One to One Reverse Relationship)",
          "Database - Eloquent ORM (One to Many Relationship)",
          "CRUD Implementation (Form Validation, Error Message, Insert Data) - Part 1",
          "CRUD Implementation (Show Data) - Part 2",
          "CRUD Implementation (Update Data) - Part 3",
          "CRUD Implementation (Delete Data) - Part 4",
          "CRUD Implementation (Image Upload, Validation, Insert Photo) - Part 5",
          "CRUD Implementation (Image Upload, Validation, Update Photo) - Part 6",
          "CRUD Implementation (Image Upload, Validation, Delete Photo) - Part 7",
          "Soft Delete and Data Restore",
          "Force Delete",
          "Helper Functions",
          "Sending Email",
          "Seeder and Faker - Part 1",
          "Seeder and Faker - Part 2",
          "Edit .env file contents using user interface (Laravel 8 Only)"
        ],
        "Laravel Authentication - Single User and Multi User": [
          "Authentication (Single User) - Part 1",
          "Authentication (Single User) - Part 2",
          "Authentication (Single User) - Part 3",
          "Authentication (Single User) - Part 4",
          "Authentication (Single User) - Part 5",
          "Authentication (Single User) - Part 6",
          "Authentication (Multi Auth using Single Table) - Part 7",
          "Authentication (Multi Auth using Single Table) - Part 8",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 9",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 10",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 11"
        ],
        "Payment Method Integration": [
          "PayPal - Part 1",
          "PayPal - Part 2",
          "Stripe - Part 1",
          "Stripe - Part 2",
          "Final Source Codes"
        ],
        "Admin Panel - Template Mastering": [
          "Admin Panel HTML template (Bootstrap 5)",
          "Installing Laravel 9 and Creating Database",
          "Layouts Creation and Home Page",
          "Login and Forget Password Page",
          "Create migration and models for admins table",
          "Admin middleware",
          "Creating demo admin user in phpmyadmin",
          "Setup email and add mailtrap account",
          "Login, logout, error message and admin guard setup",
          "Forget password, sending email with reset link",
          "Reset password complete",
          "Admin profile information and photo update",
          "Converting the admin panel to Bootstrap 5 - Part 1",
          "Converting the admin panel to Bootstrap 5 - Part 2",
          "Converting the admin panel to Bootstrap 5 - Part 3"
        ],
        "FrontEnd - HTML Template": [
          "About HTML Template (Bootstrap 5)"
        ]
      },
      "requirements": [
        "Basic Knowledge in PHP Language",
        "Basic Knowledge in OOP Concept",
        "Knowledge about using local server. Ex: xampp or wampp",
        "Basic knowledge about HTML, CSS and Bootstrap",
        "Basic knowledge about using code editor like Notepad++, Sublime Text or any"
      ],
      "description": "In this course, I have taught the students the Laravel framework from scratch. After showing all the basics of Laravel, authentication system, template mastering etc., I have developed a complete job portal web application with the laravel version Laravel 9.\n\nThe persons who are very beginner in Laravel and only have few php and oop idea, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have coded following the standard and showed some advanced features.\nAdmin Panel Features:\nAdmin can change logo, favicon etc.\nAdmin can change top bar and footer information.\nAdmin can control the home page information.\nAdmin can create, edit and delete blog categories.\nAdmin can create, edit and delete blog posts.\nAdmin can create, edit and delete job categories.\nAdmin can create, edit and delete job locations.\nAdmin can create, edit and delete job experiences.\nAdmin can create, edit and delete job types.\nAdmin can create, edit and delete company industry.\nAdmin can create, edit and delete company size\nAdmin can create, edit and delete company location\nAdmin can create, edit and delete why choose us section\nAdmin can create, edit and delete testimonials.\nAdmin can send email to subscribers\nAdmin can see all the company profiles and can delete them\nAdmin can see all the candidate profiles and can delete them\nAdmin can change his own photo, information and password\nAdmin can manage advertiesments in job listing and company listing pages\nCompany Features:\nCompany can create account for free\nCompany can login and work with forget password option\nCompany can change profile information\nCompany can buy package using PayPal and Stripe\nCompany can renew package anytime\nCompany can check orders\nCompany can update orders\nCompany can create, edit and delete jobs\nCompany can check candidate list\nCompany can approve or reject candidates\nCompany can make a job featured\nCompany can make a job urgent\nCandidate Features:\nCandidate can create account for free\nCandidate can login and work with forget password option\nCandidate can change profile information\nCandidate can create, edit and delete education\nCandidate can create, edit and delete job experience\nCandidate can create, edit and delete skill\nCandidate can create, edit and delete awards\nCandidate can create, edit and delete resumes\nCandidate can apply in jobs\nCandidate can bookmark any job\nCandidate can search job by category, location, title, type etc.",
      "target_audience": [
        "Persons who want to learn a php framework from scratch",
        "Persons who want to learn making a complete web application from beginning",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to learn making a job portal application with Laravel"
      ]
    },
    {
      "title": "The Django Bible™ | Python for Web Developer",
      "url": "https://www.udemy.com/course/the-django-bibletm-python-for-web-developer/",
      "bio": "Build 6 stunning web apps, Learn Back End Web Development using django 3.1.2 and plus!",
      "objectives": [
        "Build any website you want ranging from online blog to e-commerce",
        "Python basics like data-types, loops, decision-makings, file handling, libraries, modules, date-times etc.",
        "Object oriented Programming and its features like: Inheritance, Polymorphism, Operator Overloading",
        "Learn Python and build core fundamental logic",
        "Learn about apps, templates, models & migrations, admin customization & more",
        "Learn by creating 6 web application",
        "Use Django as a back end for the websites",
        "Learn about client and server side programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to E-library: First Project",
          "Introduction to Idea Peacher App: Second Project",
          "Introduction to Travelling Guide App: Third Project"
        ],
        "Python Basics: Learning objects and data structures": [
          "Install Python on Windows",
          "Download and setup Pycharm code editor on Windows",
          "Download Visual Studio code editor on Windows",
          "Install python on Linux Machine",
          "Download and setup Pycharm code editon on Linux (optional)",
          "How to read Python documentation",
          "Variables on Python",
          "Data Types: String, Set and Numbers",
          "Data Types: List, Dictionaty and Tuple",
          "Input and Print",
          "Operators and Operands",
          "Logical Operators and Operations",
          "Comments and User Input",
          "Built-in Modules and Creating your own Modules",
          "Python \"List\" Data Structures",
          "Python \"Dictionary\" Data Structures",
          "Learn Strings and String Methods in detail",
          "String Formatting",
          "Python Indentation",
          "Python Conditionals: if...else statements",
          "Looping in Python: while Loops",
          "Looping in Python: for Loops",
          "User Defined Functions in Python",
          "Default Arguments in Python",
          "Anonymous/Lambda functions"
        ],
        "Advanced Python Programming": [
          "Functional Programming: lambda, map and reduce",
          "Iterators in Python",
          "Generators in Python",
          "Decorators",
          "List and Dictionary Comprehensions",
          "Classes and Objects in Python",
          "Basic Inheritance in Python",
          "Multiple Inheritance in Python",
          "Polymorphism in Python",
          "Properties",
          "Operator Overloading in Python",
          "Exception Handling",
          "File Handling",
          "__name__ == \"__main__\""
        ],
        "Python module for Web Developers": [
          "Python \"math\" module",
          "Python \"random\" module",
          "Python \"datetime\" module",
          "Python \"sqlite\" module",
          "Python \"collection\" module",
          "Python \"os\" module"
        ],
        "Introduction to django 3": [
          "Introduction to Web server",
          "Static vs Dynamic Websites",
          "Introduction to django",
          "What does django code looks like?",
          "Installing django",
          "Django Project Structure",
          "Selecting Proper Text Editor",
          "Creating apps",
          "Creating models",
          "Basic ORM on models (flight model)",
          "Refining our model (using Foreign Key)",
          "Rendering Templates",
          "Django Admin",
          "Take Flights one by one (Primary Key concepts)",
          "Templating Inheritance",
          "Many to Many Field (m:n relationships between classes)",
          "User Registration",
          "Login and Authentication",
          "Logout Implementation",
          "Introduction to Object Relational Mapping (ORM)",
          "ORM Theory: Foreign Key",
          "ORM Theory: Many To Many Field",
          "ORM Query Part 1",
          "ORM Query Part 2",
          "ORM Query"
        ],
        "Django Upload/Download/Search features": [
          "Django upload feature: setting up",
          "List all the data into the table: Basic ORM",
          "Implement search features in your webapp"
        ],
        "CRM project: Tracking all Customer Records (sales, quantity, amount) of Products": [
          "Starting by creating model and sign up for user",
          "Implementing Login and Logout features",
          "Adding Product and Order models",
          "Home Page",
          "CRUD operation Part 1",
          "CRUD operation Part 2",
          "Implementing Python decorators for user level permissions 1",
          "Implementing Python decorators for user level permissions 2",
          "Testing groups/users for different users",
          "Django Admin for CRM"
        ],
        "E-library: First Webapp": [
          "Intro to E-library",
          "Registering user",
          "Login and Logout user",
          "Making Two User: Reader and Author",
          "Creating models (database implementation)",
          "Adding userInfo to database",
          "Redering Book details in html",
          "Reading Book details",
          "Refining Book details",
          "Adding new Books to the database",
          "Configuring database for Book",
          "Fetching unique book through Primary Key",
          "Using Decorators to implement user level permissions (allowed/not allowed users)"
        ],
        "IdeaPeacher: Second Web app": [
          "Intro to idea Peacher: Register user",
          "Login and Logout user",
          "Creating models",
          "Refining models using relationships (1:n, n:m)",
          "IdeaPeacher home page",
          "Creating decorators to allow/restrict user to visit page",
          "Finishing and testing decorators",
          "Adding comment section to the web app",
          "Submitting idea/project to the webapp",
          "Working with Materialize CSS",
          "Adding comment to database",
          "Update, Delete ideas"
        ],
        "Travellers guide: Third Webapp": [
          "Introduction to Travellers guide and setting up",
          "Register user",
          "Sign in/out user",
          "Creating and implementing relationships between tables (models.py)",
          "Rendering travelling posts",
          "Rendering time and details of posts",
          "Rendering \"view more\" options for posts",
          "navigation view for posts",
          "Follow the users/posts",
          "Create posts through forms",
          "Edit posts through forms",
          "Deleting posts and final output"
        ]
      },
      "requirements": [
        "Proper Internet Connection for downloading some packages",
        "Some programming background would be helpful but not mandatory"
      ],
      "description": "Have you ever wonder how to create a Web application but didn't know where to start? Have you previously tried to learn Django but got fed up with impertinent course videos and poorly written tutorials?\nThen, you ended up on the right course!\nIn this course, I will take you through the basics of python through Django basics and all the way of creating real-world web applications. Wouldn't it be the craziest experience if you could build any web application after learning this single course?\n\nWhat is Django and Why to use it?\nDjango is an open-source python web framework used for rapid development, pragmatic, maintainable, clean design, and secures websites. A web application framework is a toolkit of all components need for application development.\nThe main goal of the Django framework is to allow developers to focus on components of the application that are new instead of spending time on already developed components. It is fully featured than many other frameworks on the market. It takes care of a lot of hassle. involved in web development; enables users to focus on developing components needed for their application.\nChoosing a language and framework because you used it on your last project — or because you are more familiar with it — is not the way to go.\nBefore starting a new software project, you want to evaluate which language and framework is the best fit for your desired outcomes. What matters most to you? Security, rapid development, scalability, versatility, support?\nIt’s better to make an informed choice before you begin your build rather than regretting it later (or worse “hacking” stuff into the project down the road because the stack you used doesn’t support it properly).\nAfter years of experience with different technologies (including both mobile & web development), I believe Django offers a complete suite of features which no other web framework offer.\n\n\nContent of the course:\nA. Basic Python course Highlights:\nInstalling Python\nRunning Python Code\nStrings\nLists\nDictionaries\nTuples\nSets\nNumber Data Types\nPrint Formatting\nFunctions\nScope\nargs/ kwargs\nBuilt-in Functions\nDebugging and Error Handling\nModules\nExternal Modules\nObject-Oriented Programming\nInheritance\nPolymorphism\nEncapsulation\nAdvanced Methods\nIterators\nClosures\nand much more!\n\n\nB. Django Overview:\nDjango project structure\nModel View Controller\nDjango Apps\nDjango Admin\nDjango View And Template\nFunction-Based View\nDjango Forms\nModel Relationships\nORM\nCSS/HTML and many more\nC. Project Overview:\nFlight Tracker\nE-library\nTravelling Journal\nCustomer Resource Management (CRM)\nIdea Peacher App\nBook Upload Download\nCourse material is regularly updated to include all of the newest updates and information. Additionally, I have made this course downloadable, so you can work through the class offline, making it as convenient as possible for you!",
      "target_audience": [
        "Begineers who want to develop web apps",
        "Python Developers looking to get into Web Development"
      ]
    },
    {
      "title": "Django Essentials: Build and Deploy Real-World Apps",
      "url": "https://www.udemy.com/course/mastering-django/",
      "bio": "Learn Django by Building, Deploying, and Showcasing Real-World Web Applications",
      "objectives": [
        "1. Build dynamic web applications using Django.",
        "2. Implement user authentication and manage databases.",
        "3. Create and customize templates for web pages.",
        "4. Showcase and deploy projects professionally."
      ],
      "course_content": {
        "Getting Started with Django": [
          "Welcome and Course Overview",
          "Why Python for Modern Applications?",
          "Setting Up Your Django Development Environment",
          "Understanding Data Types in Python",
          "Creating and Using Functions in Python",
          "Working with Modules in Python",
          "Import and Clean Datasets in Jupyter Notebook with Pandas",
          "Creating Your First Django Project",
          "Getting Started with Django"
        ],
        "Building and Structuring Django Applications": [
          "Building Your First App",
          "Mapping Views to URLs",
          "Setting Up a Database",
          "Building and Structuring Django Applications"
        ],
        "Working with Models, Views, and Templates": [
          "Creating Models",
          "Exploring the Admin Interface",
          "Adding Views",
          "Adding Templates",
          "Working with Models, Views, and Templates"
        ],
        "Advanced Django Features": [
          "Implementing Generic Views",
          "Working with Forms",
          "Advanced Django Features"
        ],
        "Practical Django Projects": [
          "Building a Real-World Snake Game Project",
          "Simple Django Web App: Convert PDF to Word",
          "How to Push a Django Project to GitHub: Step-by-Step Guide",
          "Deploy Django Project on Render"
        ],
        "Conclusion and Further Learning": [
          "Next Steps and Additional Resources"
        ]
      },
      "requirements": [
        "Basic knowledge of Python programming.",
        "Familiarity with HTML, CSS, and JavaScript is helpful but not mandatory.",
        "A computer with internet access to install Django and related tools.",
        "A willingness to learn and build real-world web applications."
      ],
      "description": "Django Essentials: Python, Pandas, and Real World Web Apps\nUnlock the power of Django and Python to build and deploy professional web applications from scratch! In this comprehensive course, you’ll master Django by creating real-world projects like a Snake Game and a PDF to Word converter, while learning foundational Python skills and data processing with Pandas to supercharge your apps. Perfect for beginners and Python developers looking to break into web development, this course guides you step-by-step from setup to deployment.\nStart with the essentials: master Python data types, functions, and modules to build a strong foundation for Django development. Then, dive into creating Django projects, designing interactive apps, and working with databases, models, and the admin interface. Explore advanced features like class-based views, forms, and data processing with Pandas to handle real-world data tasks. Finally, bring it all together by building portfolio-ready projects and deploying them to a live server.\nBy the end, you’ll have the skills to create dynamic, data-driven web apps, showcase them in a professional portfolio, and stand out to employers or clients. Whether you’re new to programming or aiming to add Django to your skillset, this course provides everything you need to succeed in web development.\nWhat You’ll Learn:\nMaster Python fundamentals: data types, functions, and modules for seamless Django development.\nProcess and analyze data with Pandas to create data-driven Django applications.\nSet up a Django development environment and build your first Django project.\nCreate Django apps, map views to URLs, and manage databases with models and migrations.\nCustomize Django’s admin interface for efficient app management.\nImplement class-based views and handle user input with forms.\nBuild real-world projects, including a Snake Game and a PDF to Word converter.\nDeploy Django projects to a live server for a professional portfolio.\nWho This Course Is For:\nBeginners with basic Python knowledge looking to learn web development with Django.\nPython developers wanting to create dynamic, data-driven web applications.\nAspiring full-stack developers aiming to build portfolio-ready projects.\nData enthusiasts interested in integrating Pandas with Django for real-world applications.\nJoin now to transform your Python skills into professional Django web apps and take the first step toward a career in web development!",
      "target_audience": [
        "Aspiring web developers looking to master Django.",
        "Python programmers interested in web application development.",
        "Anyone eager to learn and deploy dynamic web applications.",
        "Students or professionals building a portfolio of real-world projects."
      ]
    },
    {
      "title": "Angular Crash Course - Learn Angular And Google Firebase",
      "url": "https://www.udemy.com/course/angular-and-google-firebase-frontend-development/",
      "bio": "Build Real World Angular Project along with Google Firebase as backend for our project - Angular Web Development",
      "objectives": [
        "Learn and Master Angular in a very practical approach",
        "Learn Angular Essentials, for students who want to have a quick and basic refresher",
        "Build real world web applications like a Blog website",
        "Suitable for beginners who have some knowledge in JavaScript, HTML and CSS",
        "Use Angular Components, Services, Standalone Components, Events, Signals, Inputs, etc",
        "Learn and Master Google Firebase and add it to Real world Angular application",
        "Authentication (Login, Register and Logout) using Google Firebase (Angular Fire Library)",
        "CRUD for Angular , Save, Update and Delete data in a Google Firebase database",
        "Image hosting - Upload and save images on Google Firebase Storage"
      ],
      "course_content": {},
      "requirements": [
        "This course is for the enthusiast. If you know how web development works, know HTML, CSS and some Javascript, then this is the course for you.",
        "A laptop or desktop",
        "Free version of Visual studio code or any code editor of your choice"
      ],
      "description": "This course has been recorded from scratch in December 2024 in the latest version of Angular i.e. Angular 19.\n\n\nYou don't need 100+ hours to learn Angular. This course is especially designed for busy developers who want to learn Angular in a fast practical approach. We will use Angular to build a frontend website and we will use popular Google's Firebase as a backend to store the data for our frontend application.\n\n\nThis course will teach you the basics of Angular and then create a real world Angular application as you learn and improve on concepts that you implement in this application.\n\n\nLearn and use Google Firebase by connecting your Angular application to Google Firebase backend.\n\n\nEnroll in this course if you want to:\nCreate fast reactive frontend applications using Angular\nLearn Angular 19\nLearn Google Firebase that is a backend for your application to maintain the dynamic data for your application\nLearn to build Angular applications using the latest Angular version, using Signals, Effects, Services, etc.\nGrow your resume by learning a industry favorite frontend framework\n\n\nWhat's inside this course:\nSetting up Development Environment for Angular projects\nCreate new Angular application from scratch\nAngular CLI\nComponents\nStandalone components\nServices\nReactive Forms\nForm Validation\nData Binding\nDynamic Templates\nProperties and Data Binding\nAdding Packages\nRouting\nPipes\nTailwind CSS\nGoogle Firebase and a backend service to store data\nGoogle Firebase Authentication\nGoogle Firestore to store and upload files\nBuilding front end application and integrate with backend database (Google Firebase)\nSignals and Observables\nLoops and Conditionals\n\n\n30 Day Full Money Back Guarantee from Udemy\nThis course comes with a 30-day full money-back guarantee from Udemy",
      "target_audience": [
        "Beginner Web Developers who have some knowledge in HTML, CSS and Javascript"
      ]
    },
    {
      "title": "Learn PHP CodeIgniter Framework with AJAX and Bootstrap",
      "url": "https://www.udemy.com/course/learn-php-codeigniter-framework-with-ajax-and-bootstrap/",
      "bio": "Learn one of the most popular PHP MVC Framework using Ajax,Bootstrap and build secure,fast Web Applications in PHP,CI",
      "objectives": [
        "Learn MVC Concepts",
        "Learn How to use CodeIgniter",
        "Learn How to build Web Applications",
        "Learn new PHP Skill that is based on MVC Pattern according to market needs and High paying."
      ],
      "course_content": {},
      "requirements": [
        "Determination",
        "Basic HTML,CSS",
        "Basic OOP PHP",
        "Don't worry if you are new, I will guide you just let me know, I will guide you about HTML,CSS,PHP."
      ],
      "description": "Continuously updating course on Udemy. Updated: 22/09/2016\nReal time live coding and Real time Practice Projects which will also help in future development.\n\n\nLearn Codeigniter - the most popular PHP Framework! In this course you will build a complete application in the CodeIgniter Framework from Scratch. You'll learn how the MVC pattern works as I will explain you the MVC concepts in easy way using diagram.\nIf you want to learn how to make Dynamic PHP Applications using MVC then this course is for you, yes for you.\n\nWhy Codeigniter?\nBecause it is the most popular PHP framework and is on demand for jobs and freelance projects.\n\n\nModel-View-Controller Based System\nExtremely Light Weight\nSecurity\nForm validation\nDatabase configurations\nDatabase queries (CRUD)\nFrom the market point of view all the High paying Development Jobs require Framework knowledge.One Individual must know how to use and make a professional Web app using MVC Framework. So CodeIgniter is the best choice to start with the MVC Framework in PHP.\nNote: All the Students can message me any time for any help I would love to help you.\n\nSee you guys in the course.",
      "target_audience": [
        "Don't worry if you are new, I will guide you just let me know, I will guide you about HTML,CSS,PHP.",
        "This course is for students who want to developer PHP dynamic applications and websites faster and secure.",
        "This course is for students who have basic Knowledge HTML,CSS",
        "This course is for students who have basic Knowledge of OOP in PHP.",
        "This course is for students who want to become better at PHP.",
        "This course is for students who want to improve their careers or get a better job."
      ]
    },
    {
      "title": "Programming using C & Data Structures from Basic to Advanced",
      "url": "https://www.udemy.com/course/c-data-structures-basic-to-advanced/",
      "bio": "Learn C & Data Structures - Every module feature demonstrated with real-time examples",
      "objectives": [
        "This course will hone your programming skills and help you become great programmer",
        "Understand the fundamentals of Data Structures thoroughly through hands-on coding",
        "Learn to see a bigger picture of design of algorithms in general"
      ],
      "course_content": {
        "Introduction and First Program": [
          "Why Programming",
          "History of C Language",
          "Hello World Program"
        ],
        "Variables and Datatypes": [
          "Identifiers in C",
          "Variables and DataTypes",
          "Constants"
        ],
        "Console IO Operations": [
          "Printf and Scanf",
          "Unformatted IO Functions"
        ],
        "Operators and Expressions": [
          "Expressions and Arithmetic Operators",
          "Relational and Logical Operators",
          "Bitwise Operators",
          "Unconditional Branching using goto statement"
        ],
        "Control Flow Statements": [
          "If Statement",
          "Switch Statement",
          "While Loop",
          "Do While Loop",
          "For Loop",
          "Break and Continue",
          "Special Cases"
        ],
        "Working with Functions": [
          "Introduction and Writing Functions",
          "Scope of Variables,Storage Classes,Pass by Value and reference",
          "Recursion"
        ],
        "Working with Arrays": [
          "Arrays Declaration and Initialization",
          "Sample Programs using Arrays",
          "Arrays as Function Parameters",
          "2-Dimensional Array"
        ],
        "Pointers": [
          "Introduction to Pointers",
          "Pointers as Function Parameter",
          "Pointer Arithmetic",
          "Function Pointers",
          "Dynamic Memory Allocation using malloc",
          "calloc and comparision with malloc"
        ],
        "String Handling": [
          "Introduction to Strings",
          "Sample Program",
          "More Sample Programs",
          "Standard String Library Functions",
          "Array of String"
        ],
        "Structures and Unions": [
          "Declaring and Instantiating Structures",
          "Structure as Parameter and Pointer to Structure",
          "Enumerated Data Type",
          "Union",
          "Bit Fields"
        ]
      },
      "requirements": [
        "A computer with c language installed in it",
        "Upto date browser with good internet connection",
        "Should have knowledge in C language programming"
      ],
      "description": "C language which is considered the mother of all languages, is and will be the most sought after programming language for any beginner to jump start his career in software development. Not only does it help a beginner to understand what software programming is all about, it also gives an excellent platform to build programming skills for those who eventually want to learn modern languages like C# or Java for developing advanced level applications.\nBestDOtNetTraining's online training videos which include both the concepts and practical examples will help you learn the C language down to the minutest detail. Every topic in the course is covered in-detail along with sample programs and assignments (along with solutions).\nThis combination of concepts and practical is guaranteed to make you an expert on the language and will put you in a position to tackle even the toughest of interview challenges. And if that wasn’t enough, our course offering will also provide you a library of Interview Questions in each and every module of our \"C\" training program.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\nUnderstand the purpose of programming.\nDownload and understand the role of IDE in writing \"C\" programs.\nGain knowledge about how one can write Software Programs.\nWrite interactive programs to perform input and output operations.\nApply logic using programming techniques & decision making statements.\nUnderstand the advantage of using Arrays and Pointers for handling large data.\nLearn how to break up a big task into smaller units using functions.\nUnderstand how memory can be dynamically allocated and de-allocated for pointers.\nPersist data of the program into data files for using at later point of time.\nCreate and process data in files using file I/O functions.\nRead and consume command like arguments in a program.",
      "target_audience": [
        "Who want to enhance their career as a programmer",
        "Who want to revise java concepts before attending an interview",
        "Anyone who wants to become a great programmer, not just a mediocre programmer"
      ]
    },
    {
      "title": "Building Websites Create a fully functional Web contact form",
      "url": "https://www.udemy.com/course/how-to-create-a-fully-functional-web-contact-form/",
      "bio": "Step by step guide on how to create a submit-able web form scratch using HTML CSS jQuery Bootstrap and PHP",
      "objectives": [
        "create a web contact form",
        "understand how to add security checks to forms",
        "be able to send emails from a form to an address",
        "use jQuery to check fields in form",
        "validate form content on submission with PHP and jQuery"
      ],
      "course_content": {
        "Introduction to creating a Fully functional web form": [
          "Introduction to creating forms",
          "Developer Resources",
          "Create HTML Bootstrap structure",
          "Create form structure",
          "Add PHP session holder",
          "Source Code Contact Form",
          "PHP Get Post Data",
          "AnitSpam Check using PHP",
          "PHP send Email",
          "Upload file and send email to email address",
          "PHP form Fixes",
          "Source Code PHP mail",
          "jQuery Form Check setup",
          "jQuery Toggle Error messages",
          "Web Contact Form live Test",
          "Web Contact Form Tweaks and Adjustments",
          "Source Code Complete Project",
          "Course Resources",
          "Check to ensure sendmail is functioning"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Bonus Educational Resources: Downloadable Content, Practical Examples"
        ]
      },
      "requirements": [
        "basics of HTML CSS jQuery and PHP",
        "computer access"
      ],
      "description": "Web forms are a crucial communication format between your website visitors and you.  This course will show you how to build one from scratch!   Create a fully functional dynamic web contact form that can be used on any website to collect messages from visitors.  Lets your web visitors send you email messages.   This form comes complete with several layers of security checks to ensure spam and unwanted emails are not valid.\nForm is HTML5 so depending on the input type HTML5 will check for validity.\nSecurity question that get dynamically generated and needs to be filled out correctly before the form contents get sent to your email address\njQuery layer of form field input checks, to ensure all fields have values\nPHP back end form Post checks, to ensure all fields have correct content and data can be sent to a selected email address.   Also stores values on error so that the visitors don't have to re-enter the values.\nStep by step training introducing all the core concepts and development steps to produce a web contact form.   Source code is included so that you can follow along and try it out for yourself.\nThe course covers multiple approaches to form development, and the code is flexible enough to be updated and used for a more specific projects.\nHTML - used to setup the form structure\nCSS - used at a basic level to create limited styling\nBootstrap - used to help style the form container\njQuery - selecting elements, and looping values\nPHP - used to collect posted values, set variables, and send mail function.\nSee how all these languages can work together to create a complete project\nThis course is perfect for anyone who wants to learn about setting up a contact form on a website.  Everything is included, from an instructor with over 18 years of web development experience.\nI'm ready to answer any questions you may have, and here to help you learn about web development.",
      "target_audience": [
        "web developers and designers",
        "anyone who wants to create dynamic content online",
        "anyone who needs to add a web form to their website"
      ]
    },
    {
      "title": "Asp .Net C# Programming with JS and HTML: Beginner to Expert",
      "url": "https://www.udemy.com/course/html-javascript-aspnet-csharp-programming-beginner-to-expert/",
      "bio": "Learn HTML, JavaScript and C# Basic Concepts, OOP C# programming techniques and methods for Object Oriented Programming",
      "objectives": [
        "Create Dynamic web applications and websites",
        "Get a job as a aspnet application developer",
        "Create your own stunning, html layouts for awesome websites",
        "Start your own online business on web development",
        "Master front-end development using HTML & JavaScript code development using C# language",
        "Code JavaScript for creating lightweight web pages",
        "Apply HTML, JavaScript and aspnet C# Beginner to start code on real-world tasks",
        "Learn What is Generative AI / Gen AI",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Get Course requirements",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "HTML": [
          "Introduction HTML",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "Overview of a Webpage",
          "Structure of a Full HTML Webpage",
          "First Hello World! Webpage"
        ],
        "HTML Basic": [
          "Heading tags",
          "Paragraph",
          "Formatting Text",
          "List Items Unordered",
          "List Items Ordered",
          "Classes",
          "IDs",
          "Comments",
          "Heading tag exercise"
        ],
        "HTML Intermediate": [
          "Images",
          "Forms",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar - Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps"
        ],
        "HTML Advanced": [
          "HTML Audio",
          "HTML Video",
          "Canvas",
          "Iframes",
          "Input Types",
          "Input Attributes",
          "Registration Form",
          "Contact Us Form",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Introduction": [
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Unlock the power of full-stack web development with \"ASP .NET C# Programming with JS and HTML: Beginner to Expert.\" This comprehensive course is designed to take you from a beginner to an expert in developing modern web applications using ASP.NET, C#, JavaScript, and HTML. Whether you're new to programming or looking to expand your skill set, this course provides everything you need to master the core technologies used in web development today.\n\n\nYou’ll start by learning the basics of HTML and CSS to create the structure and design of web pages. From there, you'll dive into JavaScript to add interactivity and dynamic features to your websites. The core of this course focuses on ASP.NET and C#, where you'll learn to build robust server-side applications. You'll explore how to work with databases, manage data using Entity Framework, and create secure, scalable web applications.\n\n\nAs you progress, you’ll develop the skills to integrate front-end and back-end development, enabling you to build full-stack applications. Topics like handling form submissions, user authentication, and app integration in detail. The course also includes hands-on projects, such as building a data management system or a web app, giving you the practical experience needed for real-world development.\n\n\nBy the end of this course, you’ll have the confidence and skills to develop professional web applications using ASP.NET, C#, JavaScript, and HTML.\n\n\nJoin now and start your journey to becoming a full-stack web developer!",
      "target_audience": [
        "Beginner HTML, JavaScript and AspNet C# developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer",
        "Anyone who wants to start AspNet Coding career"
      ]
    },
    {
      "title": "Building Shopify Themes From Scratch",
      "url": "https://www.udemy.com/course/building-shopify-themes-from-scratch/",
      "bio": "Master The World's Largest E-Commerce Platform",
      "objectives": [
        "Building Shopify Theme",
        "Learn E-Commerce",
        "Learn Web Designing",
        "Creating Online Store within minutes"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pre-requistics"
        ],
        "Getting Started": [
          "What is Shopify",
          "Five things you need to know about shopify",
          "Liquid",
          "Templates",
          "Objects",
          "Filters",
          "Logic",
          "Theme-Liquid"
        ],
        "The Setup": [
          "Becoming a Partner with Shopify",
          "Creating a Developer Setup",
          "Uploading a Skeleton theme",
          "Uploading products CSV file for custom manupulation",
          "Using the online and offline editiors"
        ],
        "Starting from scratch": [
          "Working with Theme.liquid File",
          "Referencing stylesheets via output tag",
          "Adding and referencing script tag",
          "Setting up the HTML markup",
          "Designing with CSS"
        ],
        "Displaying and Designing products": [
          "Index.Liquid Manupulation",
          "Displaying Products on Homepage PArt 1",
          "Displaying Product in Homepage Part 2",
          "Designing Products with CSS"
        ],
        "Creating collection of products": [
          "Collection.liquid Manipulation part 1",
          "Collection.liquid Manipulation Part 2",
          "Adding pagination to collection products"
        ],
        "Adding contents dynamically to pages": [
          "Adding contents dynamically to pages",
          "Creating a 404 page"
        ],
        "Evaluating Product Images, Descriptions and More": [
          "Adding Initial Markup and Outputting Image",
          "Designing Product.liquid with CSS",
          "Adding descriptions with Sprinkling CSS and Purchase price option",
          "What is SelectCallback Function",
          "Adding SelectCallBack Function",
          "Adding Next and Previous Options to Products"
        ],
        "Setting Up a Cart System for users": [
          "Setting up a skeleton for Cart.liquid file",
          "Adding tables and looping through product utems",
          "Adding the update and checkout buttons",
          "Adding cart items to toolbar designing with CSS"
        ],
        "Creating customer accounts": [
          "Setting up the environment for customer accounts",
          "Integrating customer accounts in the theme",
          "Demonstarting customer accounts usage"
        ]
      },
      "requirements": [
        "Internet",
        "HTML/CSS Basic Skills"
      ],
      "description": "Shopify is an e-commerce platform that enables individuals and businesses to create online stores.\nShopify is a one-stop solution for ecommerce, requiring no special software or skills. Find out how to create themes for shopify. Learn to sign up for an account, configure tax and notification settings, set up payment processing and shipping options, and start adding products (digital or physical) to your store. Morten also shows you how to customize the look of your store with Shopify's themes, and then moves right into processing orders and managing customer accounts. Shopify is a simple, secure solution for most small businesses. Find out how to make it work for yours.\nTopics include:\nWhat is Shopify?\nSetting up your account\nConfiguring sales tax\nSetting up a payment gateway\nChoosing shipping options\nPublishing extra pages and blog posts with Shopify\nPicking a theme\nTesting the user experience\nReceiving and processing orders\nDesigning products\nCreating collection\nCreating dynamic pages\nMedia products\nCreating cart system\nMuch more\nYou will also learn a lot of web designing principles. Shopify developers are earning a lot of money by creating awesome themes.\nShopify theme is the growing area in the themeforest. Learn now and conquer the future.",
      "target_audience": [
        "Anyone interested in Web designing",
        "Freelancers"
      ]
    },
    {
      "title": "Typescript: Type Script & JS with Real Javascript Projects",
      "url": "https://www.udemy.com/course/typescript-type-script-js-with-real-javascript-projects/",
      "bio": "TypeScript and Java script with real type script, three js and javascript projects. Learn Typescript & JS from scratch",
      "objectives": [
        "TypeScript is a programming language that helps developers turn medium-sized JavaScript projects and prototypes into large-scale ones.",
        "TypeScript is a syntactical superset of JavaScript, any JavaScript program is also a valid TypeScript program.",
        "TypeScript is better suited than JavaScript for large applications, but it requires a foundational knowledge of JavaScript to use.",
        "TypeScript is mainly associated with development careers. Typical job titles for TypeScript developers include senior developer, front end developer.",
        "Typescript is a superset of JavaScript. As its name suggests, TypeScript adds optional static typing to the JavaScript language.",
        "JavaScript is a text-based computer programming language used to make dynamic web pages.",
        "What is JavaScript? JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for webdevelop",
        "React vs. Angular vs. Vue: what is the best JavaScript framework? Choosing the best JavaScript framework for your web project depends on what you are lookingfor",
        "What is conditional statements (if else, switch case, ternary operator), how to use in Javascript",
        "What is Javascript Boolean Logic",
        "What are Javascript variables, why are they used",
        "How to include JS File in HTML CSS Javascript",
        "How to write Javascript Functions, what are the differences between Function Decleration and Function Expression",
        "What is Javascript loops (for loops, while loops, continue and break statements), how to use them",
        "How to create Javascript Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "Understand what TypeScript (typescript angular typescript react three js jest threejs) really it is about and how works",
        "Learn what TypeScript (typescript react react typescript Type script typescript node nodejs typescript angular typescript )for is and why we should use it",
        "How to create Javascript objects, how to update them, object methods",
        "What is DOM, how to manipulate DOM in Javascript",
        "What are the main uses of JavaScript? JavaScript is a text-based programming language used for client- and server-side development.",
        "What is JSON and what is it used for? Because of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects.",
        "With all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences.",
        "Microsoft introduced TypeScript to solve this scalability problem. TypeScript is often referred to as JavaScript with type .",
        "Developers use TypeScript when they need to scale up their JavaScript development.",
        "Developers with an understanding of TypeScript (which implies skill in JavaScript) might work in a wide range of fields building applications for both server-si",
        "Learn how to define variables using data types in type script",
        "Use the different types of variable prefixes like let and const in typescript."
      ],
      "course_content": {
        "Introduction to Javascript, Javascript Projects for Web Development": [
          "Introduction to JavaScript",
          "Setup Visual Studio Code in Javascript and Javascript Projects",
          "Adding js file in JavaScript",
          "Project Files and Course Documents",
          "FAQ about Javascript, and Javascript Projects",
          "quiz"
        ],
        "Javascript Language Basics": [
          "Javascript Variables and Data Types",
          "Javascript Type Coercion",
          "Javascript Variable Mutation",
          "Javascript Basic Operators",
          "Javascript Boolean Logic",
          "Javascript Logical Operators",
          "quiz"
        ],
        "Javascript Conditional Statements": [
          "Javascript Conditional Statements",
          "Javascript Code Quiz 1 Solution",
          "Javascript Ternary Operator",
          "Javascript Switch, case statements",
          "Javascript Code Quiz 2",
          "Javascript Code Quiz 2 Solution",
          "quiz"
        ],
        "Javascript Loops": [
          "Introduction to Loops in Javascript",
          "Javascript While Loops",
          "Javascript While Loops Quiz",
          "Javascript While Loops Quiz Solution",
          "for Loops in Javascript",
          "for Loops Quiz Solution",
          "Javascript Continue and Break Statements",
          "quiz"
        ],
        "Functions in Javascript": [
          "Introduction to Functions in Javascript",
          "Javascript Function Decleration",
          "Javascript Function with Arguments",
          "Javascript Function return",
          "Javascript Function Expression",
          "Javascript Function Quiz",
          "Javascript Function Quiz Solution",
          "Javascript Function Scope",
          "quiz"
        ],
        "Javascript Arrays": [
          "Introduction to arrays in Javascript",
          "Javascript Array Features",
          "Javascript Array Methods",
          "Array Quiz",
          "Javascript Array Quiz Solution",
          "Javascript Array Iteration",
          "Javascript Array Iteration Quiz",
          "Array Iteration Quiz Solution",
          "quiz"
        ],
        "Javascript Objects": [
          "Introduction to objects in Javascript",
          "Javascript Object update",
          "Javascript Complex Data Structures",
          "Javascript Object Quiz",
          "Javascript Object Quiz Solution",
          "Javascript Object Methods",
          "this Keyword in Javascript",
          "quiz"
        ],
        "Javascript DOM": [
          "Introduction to DOM in Javascript",
          "What is DOM in Javascript",
          "Javascript Select and Change",
          "Javascript Select Methods",
          "Javascript Manipulation Methods",
          "Javascript innerHTML and textContext",
          "Javascript Attribute Manipulation",
          "quiz"
        ],
        "Javascript Event Handlers": [
          "Introduction to Event Handlers in Javascript",
          "Javascript Event Handler Codequiz",
          "Javascript Codequiz Solution",
          "callback Function in Javascript",
          "Javascript Different Event Types",
          "Todolist Quiz Solution in Javascript",
          "quiz"
        ],
        "Javascript Todo App Project": [
          "Javascript Project Introduction",
          "Javascript Create Add Task Controller",
          "Javascript Add Task To Data Structure",
          "Javascript Add Task To User Interface",
          "Javascript Create Delete Task Controller",
          "Javascript Delete Task From Data Structure",
          "Javascript Delete Task From User Interface",
          "Javascript Create Done Task Controller",
          "Javascript Done Task In User Interface"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS for JavaScript",
        "Willingness and Motivation to successfully complete the training",
        "Desire to learn Typescript",
        "Desire to learn Javascript",
        "Desire learn Javascript Projects",
        "Desire to learn Modern Javascipt",
        "Desire to learn javascript libraries; React, Angular, NodeJS",
        "Desire to learn angular project",
        "Desire to learn Javascript Apps",
        "Basic ES6 knowledge would be beneficial but not required",
        "No prior Typescript knowledge is required",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Typescript, three js, type script, typescript react, angular, react typescript, three.js, javascript, java script, javascript projects, js, html css javascript, angular project, angular\n\nHello there,\nWelcome to the \" Typescript: Type Script & JS with Real Javascript Projects \" course.\nTypescript and Java script with real type script, three js and javascript project. Learn Typescript & JS from scratch.\nTypeScript is a programming language that helps developers turn medium-sized JavaScript projects and prototypes into large-scale ones. JavaScript, a widely-used programming language, was designed to be easy to use for developers and non-developers alike. As a result, JavaScript development is difficult to scale up. Microsoft introduced TypeScript to solve this scalability problem. TypeScript is often referred to as JavaScript with type because it allows developers to find errors while writing their code rather than wait until the application is running. And because TypeScript is a syntactical superset of JavaScript, any JavaScript program is also a valid TypeScript program.\nTypeScript is a programming language developed and maintained by Microsoft. It introduces additional features like strict type binding (variables are bound to specific data types) to JavaScript and can also be compiled down to Java Script as well.\nJavaScript is a text-based computer programming language used to make dynamic web pages. A must-learn for aspiring web developers or programmers, JavaScript can be used for features like image carousels, displaying countdowns and timers, and playing media on a webpage. With JavaScript online classes, you can learn to build interactive web applications, choose the best framework, and work with other programming languages like HTML and CSS.\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload.\nJoin learners and train up on JavaScript on Oak Academy. Choose from a wide range of top-rated JavaScript courses. From back-end development to app or website building, we’ve got you covered. Our real-world experts can lead you through hands-on projects to apply your skills.\nIn this course, we're going to start with the basics and I'm going to show you how fun it is to build Type Script programs. After you're familiar with the syntax, we're going to move on to more advanced Type script development techniques, such as: working with closures, object-oriented programming, real-time asynchronous development, and decorators.\nThis course is for beginners. Before taking this course, you only need to have a basic knowledge of HTML and CSS. In our course, the basics of JavaScript are dealt with in detail, and students are provided to test what they have learned with code quizzes prepared for each subject.\nJavaScript is the number one programming language for internet applications.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nDuring our course, you will be informed about the basics of JavaScript in detail and how to solve problems.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nIn our course, you can test what you have learned on both MAC and Windows computers. You do not need to purchase any tools or applications as free tools and platforms are used.\nDuring the course, I made sure to explain all the topics that may seem complicated to you as simple and detailed as possible. I have used some diagrams to help you understand better.\n\n\nFrequently asked questions\nWhat is Typescript?\nTypescript is a superset of JavaScrip\nTypeScript is a programming language that helps developers turn medium-sized JavaScript projects and prototypes into large-scale ones. JavaScript, a widely-used programming language, was designed to be easy to use for developers and non-developers alike. As a result, JavaScript development is difficult to scale up. Microsoft introduced TypeScript to solve this scalability problem. TypeScript is often referred to as JavaScript with type because it allows developers to find errors while writing their code rather than wait until the application is running. And because TypeScript is a syntactical superset of JavaScript, any JavaScript program is also a valid TypeScript program.\nWhat is the difference between Typescript and Javascript?\nTypescript is a superset of JavaScript. As its name suggests, TypeScript adds optional static typing to the JavaScript language. JavaScript is a scripting language that allows developers to create dynamic web content. It is known for being fairly easy to use and learn. This makes it a popular programming language for small and medium-scale web projects. Developers use TypeScript when they need to scale up their JavaScript development. Its language is more powerful and intuitive, allowing developers to find and correct errors during compile time, rather than only during run-time, as with JavaScript. TypeScript is better suited than JavaScript for large applications, but it requires a foundational knowledge of JavaScript to use.\nWhat careers use Typescript?\nTypeScript is mainly associated with development careers. Typical job titles for TypeScript developers include senior developer, front end developer, stack developer, and software engineer. Because TypeScript is a superset of JavaScript, learning TypeScript is a great next step for engineers who are already skilled in JavaScript. Programming knowledge is applicable in just about every industry, so developers with an understanding of TypeScript (which implies skill in JavaScript) might work in a wide range of fields building applications for both server-side and client-side execution.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add functionality.\nWhen you complete the course you will learn;\nTypeScript features, syntax, and keywords in nodejs typescript\nTooling and Framework Options in typescript\nHow to create a class\nTypeScript variables and functions in angular typescript\nTypeScript declarations\nTypeScript classes and interfaces\n\n\nTypes and how to use them in typescript\nHow the TypeScript Compiler works\nES6 Features in TypeScript\nClasses in TypeScript\nInterfaces type script\nunderstanding typescript\nHow you can operate on variables in Javascript\nBoolean logic  in Java script\nHow to create a conditional statement  in JS\nHow you can perform transactions with Loops  in Javascript project\nHow a function is created and why it needs arguments\nHow Arrays and Objects, which are basic data structures, are created in Javascript\nHow DOM Manipulation is done\nYou will have learned and had the opportunity to test what you have learned with the code quizzes in our course.\nThis course is going to take you from the beginning to a further level. Please save you learn ambition and if you have questions contact with me.\nStep-by-Step Way, Simple and Easy With Exercises\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nNow dive into our ;\n\" Typescript: Type Script & JS with Real Javascript Projects\nTypescript and Java script with real type script, three js and javascript project. Learn Typescript & JS from scratch \" course.\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who trying to learn JavaScript but still don't really understand JavaScript, or still don't feel confident to code real apps",
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "People who want to learn Typescript, type script.",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "If you want to get started with programming: JavaScript is a great first language!",
        "People who want to learn Javascript projects",
        "People who want to learn javascript libraries; react, angular, nodejs",
        "People who want to learn javascript project, react node project, node js projects",
        "Anyone learning Angular should definetely understand how to Typescript works.",
        "This Course is for every student who wants to extend his or her horizon beyond vanilla JavaScript",
        "Anyone who Javascript developer looking to understand how to structure large codebases."
      ]
    },
    {
      "title": "Build A Complete CMS App Using Angular 5",
      "url": "https://www.udemy.com/course/build-a-complete-cms-app-using-angular-5/",
      "bio": "Master Professional Development in Angular By Building a Real World App. Learn Firebase, Angular CLI and Material Design",
      "objectives": [
        "Learn to build a professional App using Angular 5",
        "Master technologies such as Firebase, Git and Angular CLI",
        "Get expereince in full development lifecycle",
        "Learn how to use Angular in your personal projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation of Angular5 app using CLI": [
          "Installation of Angular5 app using CLI"
        ],
        "Building simple API (LoopBack or Firebase)": [
          "Connecting to Firebase",
          "Getting data from Firebase"
        ],
        "Building Authorization & Authentication (with users roles and privileg": [
          "Preparation for Authentication",
          "Authentication with Google Firebase",
          "Authorization with Google Firebase",
          "Securing routing with Authorization"
        ],
        "Material Design for Angular5 (Introduction)": [
          "Binding Material Design",
          "Structuring Page with Material Modules"
        ],
        "Creating Administrator CMS (Structure of Admin module)": [
          "Admin page structure and routing",
          "Admin page layouting"
        ],
        "Building data models (few data models in FireBase to CRUD)": [
          "Firebase data structure and model"
        ],
        "Building Services and Admin Forms to CRUD": [
          "Building Services",
          "Menus collection management",
          "Posts collection management"
        ],
        "Creating Routes & Views of Users": [
          "Restructuring and creating Front page Modules",
          "Extending Front-page Routing with conditional routing",
          "Front page Layout of Posts based on selected Menu"
        ],
        "Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knolwedge of JavaScript is essential to complete the course"
      ],
      "description": "If you want a no-nonsense course that dives right into Angular 5, but also covers the fundamentals, then look no further. This course of epic proportions was designed to help students become familiar with Angular 5, with or without experience of older Angular versions.\nThe course combines theory and practical applications to bring you the most perfect tutorial for learning Angular 5. Starting at the very beginning, the instructor breaks down the fundamentals of Angular 5 and the proceeds to take you step-by-step to building a complete application using Angular 5 from scratch.\nThe latest version of Angular 5 revamps a few things from the older versions including improved build optimizer, Universal State Transfer API and DOM Support, improvements to the compiler, improved support for the decorator, Internationalized Number, Date, and Currency Pipes, improved zone speed, improved CLI and so much more!\nThe course will start by going over Angular 5 documentation, including covering some important concepts such as forms, validation, routing & navigation, etc. You’ll also go over other important fundamentals such as components, directives, pipes, services, classes, guards, interfaces, enums, etc.\nIn addition to the basics, we’ll also cover a number of different technologies such as AngularFire Tool component, CloudFireStore including how to add, edit, modify and delete collections in CloudFireStore, Visual Studio Code Editor, Angular CLI, Material Design & Material Icons, Integrating Auth Indication and Authorization and so much more.\nBut that’s not all, the course also includes building a complete sample website from scratch along with the instructor. In this project, you’ll learn exactly how to use Angular 5 to build a sample Technology Blog Website that can fetch data from the back end and integrates some of these amazing technologies.\nAt the end of this course, you will not only be familiar with Angular 5, but you’ll also be able to build your own website from scratch as well as have a complete finished website on your porfolio.\nEnroll now and master Angular 5 with this comprehensive course!",
      "target_audience": [
        "Anyone who wants to learn to develop professional software using Angular will find this course very useful"
      ]
    },
    {
      "title": "Spring Framework and Spring Boot for Java",
      "url": "https://www.udemy.com/course/java-spring-social-network/",
      "bio": "Discover how to build powerful web apps with Java, using the Spring Framework and Spring Boot",
      "objectives": [
        "Create web apps with Spring Boot and Java",
        "Create a simple social network with Spring Boot",
        "Create Java web apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Prerequisites",
          "About Spring Boot Versions",
          "Installing Software",
          "Creating a Maven Spring Boot Project",
          "A Basic Web App",
          "Template Engines",
          "Adding a JSP",
          "Generating a Project Without Eclipse",
          "Packaging With Maven",
          "Building With Eclipse",
          "Executable Wars",
          "Deploying to an Existing Tomcat Server",
          "Multiple Controllers"
        ],
        "Composing Pages With Apache Tiles": [
          "Setting Up Apache Tiles",
          "Creating Tiles Definitions",
          "Adding and Extending Tiles Definitions"
        ],
        "Bootstrap and Static Resources": [
          "Static Resources - Bootstrap",
          "Adding a Bootstrap Navbar",
          "Styling the Navbar",
          "Setting the Context Root",
          "The Bootstrap Grid",
          "Bootstrap Panels",
          "Adding a HTML Form"
        ],
        "Using Data: Hibernate and JPA": [
          "JUnit",
          "MySQL Databases",
          "Creating a MySQL User",
          "Connecting to MySQL",
          "Creating a Domain Object",
          "Using JPA",
          "Using CrudRepository",
          "Retrieving the Most Recent Status Object"
        ],
        "Spring Forms and Displaying Data": [
          "Adding a Service Layer",
          "Model and View",
          "Spring Forms",
          "Displaying Data",
          "Formatting Dates"
        ],
        "How Forms Work": [
          "JSPs, Objects and Classes",
          "Model Attributes",
          "Refreshing and Updating"
        ],
        "Form Validation": [
          "Validating Forms",
          "Customising Validation Messages"
        ],
        "Pagination": [
          "About Paging",
          "Getting Pages of Results",
          "Getting URL Parameters",
          "Outputting Pages",
          "Formatting the Status Updates",
          "Outputting Page Numbers",
          "Custom Tags",
          "Cycling Through Page Blocks",
          "Displaying Page Number Blocks",
          "Fixing the Block Hyperlinks and Separator",
          "Jumping to the First Page of Blocks"
        ],
        "Improving the App: Dropdowns, WYSIWYG and Other Stuff": [
          "What If There Is Only One Page",
          "Redirecting",
          "Editing the Home Page",
          "Javascript Visual Editors",
          "Dropdown Menus"
        ],
        "Editing and Deleting Data": [
          "Adding Edit and Delete Links",
          "Deleting Status Updates",
          "Displaying Statuses for Editing",
          "Saving Edits"
        ]
      },
      "requirements": [
        "Have a basic understanding of Java programming"
      ],
      "description": "This course teaches you how to create web apps using the Spring framework.\nYou'll learn how to use Spring Boot to rapidly configure Spring and as a demo we'll make a simple social network web app, complete with editable profiles, a messaging system, and various other features.\nIf you know basic Java, you're fairly confident about writing basic programs and you want to learn powerful and popular Java framework, this course is for you.",
      "target_audience": [
        "Java programmers who want to learn how to create web apps",
        "Intermediate Java beginners who want to improve their Java knowledge"
      ]
    },
    {
      "title": "Complete CodeIgniter 4 Framework with Bootstrap Admin Panel",
      "url": "https://www.udemy.com/course/complete-codeigniter-4x-framework-with-bootstrap-admin-panel/",
      "bio": "Complete Guide for the CodeIgniter 4 Framework Development Using MySQL Step by Step from scratch",
      "objectives": [
        "Complete Course of CodeIgniter 4 Framework development from Beginners to Advance level",
        "Understanding complete architecture to handle CodeIgniter 4 Framework with MySQL.",
        "Course provides the best skill to make Standalone Web Developer for CodeIgniter Framework.",
        "CodeIgniter with Easy and Detailed with theory & video sessions",
        "CodeIgniter Advance topics are well structures to learn in easy way.",
        "CodeIgniter advance sessions over View Cells, Parser, Services, Spark, Migrations, Seeders and many more easily explained",
        "Bootstrap Admin Panel Development using CodeIgniter 4"
      ],
      "course_content": {
        "Course Overview & Demonstration": [
          "What is CodeIgniter Framework ?",
          "Course Modules List",
          "Sample Admin Application review"
        ],
        "CodeIgniter Framework Basics": [
          "Code Editor Settings & Manual Installation",
          "Composer Installation & Compare with Manual Installation",
          "Launch Local Development Server",
          "Framework Folder Architecture",
          "About Environment Variables (env)",
          "Default Controller, Route & View"
        ],
        "Controller & View Concept": [
          "What is Controller and how can we declare ?",
          "What is a View File & How can we load ?",
          "Passing Dynamic values from Controller to View",
          "Conditional Blocks & Loops in Views",
          "Loading Multiple Views",
          "Create & Load Layout",
          "Load Global & Specific Assets to Layout",
          "Include Partials to Layout",
          "Settings of Developer Environment .env"
        ],
        "Understanding Routes Configurations": [
          "About Closures Routes",
          "Available Route Methods",
          "Configure Namespaces in Routes",
          "Settings of Named Routes",
          "About Parameterized Routes & it's rules",
          "Query String Parameters of Routes"
        ],
        "Working with Database Basics - Raw Query": [
          "Database Configuration & Run First Query",
          "Raw Query - Insert, Update & Delete Methods",
          "Raw Query - Get Data Format Methods",
          "Raw Query - Query Helper Methods"
        ],
        "Database - Query Builder Class": [
          "Query Builder Class - Overview & Simple Get Method",
          "Query Builder Class - Adding \"where\" Conditions",
          "Query Builder Class - Insert Data To Table",
          "Query Builder Class - Update Table Data Row",
          "Query Builder Class - Delete Operations of Table",
          "Query Builder Class - Joins in MySql"
        ],
        "Database - Models": [
          "Models - Overview ( Create & Load )",
          "Models - Configurations of Member variables",
          "Models - Find Methods ( Data Selection )",
          "Models - Insert, Update & Delete Operations"
        ],
        "Database - Models with Entities": [
          "Entity - Overview & Basics with Model",
          "Entity - Data Map Feature",
          "Entity - Set Mutators Feature",
          "Entity - Set Accessors Feature",
          "Entity - Virtual Properties"
        ],
        "CodeIgniter Helpers": [
          "Form Helper #1",
          "Form Helper #2",
          "Session Helper- Set & Get Flash Message",
          "Cookie Helper",
          "HTML Helper",
          "URL Helper",
          "Custom - User Defined Helper"
        ],
        "CodeIgniter Services/Libraries": [
          "Service - CURL Request",
          "Service - Pager",
          "Service - Session",
          "Library - File Upload",
          "Service - About Basic Form Validation #1",
          "Service - More Rules of Validation #2",
          "Service - User Custom Messages & Single Field Error",
          "Create Custom Rule #1",
          "Create Custom Rule #2"
        ]
      },
      "requirements": [
        "Beginner concept of PHP",
        "Little concept about MVC Pattern",
        "MySQL basics to handle database"
      ],
      "description": "We will learn the complete idea to develop a Complete CodeIgniter 4 Framework with Bootstrap Admin Panel. No Experience in CodeIgniter programming required, you can learn from scratch. Learn practical skills of Development in CodeIgniter 4 with mysql database driver.\nBegin your journey of CodeIgniter 4 Development with MySQL database driver here and create a CRUD based Admin Panel from it.\nIf you have just decided to learn Complete CodeIgniter 4 then you have made the right choice, so take a breath. Development in CodeIgniter is very easy to learn which means that you will be through the basics and on to writing standard code in a very short time.\nThis course is a step by step guide through the CodeIgniter 4 development with MySQL programming language.\n\n\nUnderstanding complete architecture to handle CodeIgniter 4 Framework with MySQL.\nCodeIgniter Framework development each concept is easily explained in details.\nCovered each topics in well prepared theory with video session.\nVideo lectures are well structured to get complete idea about CodeIgniter Framework development guide.\nLearn Bake Console commands inside this course with all steps in detailed concept.\nCourse brings the capability to handle CodeIgniter projects as well as to develop new projects in CodeIgniter.\nCovered all basics to advance topics in detail.\nBeginners to advance topics with full video sessions.\nCovered advance topics like ORM, View Cells/Parser, Spark, Migrations, Seeders etc in easy way.\nCourse provides the best skill to make Standalone Web Developer for CodeIgniter Framework.\nThis course is for every level. For beginners, it will be very perfect to enroll and learn development in very easy steps with detailed concept.",
      "target_audience": [
        "Beginner CodeIgniter Framework developers",
        "PHP Framework lovers",
        "CodeIgniter Beginners/Expert level student curious to learn web development"
      ]
    },
    {
      "title": "Building Minimal APIs with ASP.NET Core 9 and EF Core",
      "url": "https://www.udemy.com/course/building-minimal-apis-with-aspnet-core-and-ef-core/",
      "bio": "ASP.NET Core, Web APIs, SQL Server, User System, GraphQL, Redis, REST, and more!",
      "objectives": [
        "Build Web APIs with .NET Core",
        "Publish Web APIs in Azure",
        "Use Azure DevOps to configure continuous integration and continuous delivery (CI/CD)",
        "Develop a Web API using Minimal APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Web APIs",
          "Architecture of Our Solution",
          "Web APIs Architectural Styles - REST",
          "SOAP",
          "GraphQL",
          "What is .NET?",
          "What is C#?",
          "What is ASP.NET Core?",
          "Controllers vs Minimal APIs",
          "Summary",
          "Github Repository"
        ],
        "Creating the Web API": [
          "Introduction",
          "Installing .NET",
          "Installing Visual Studio",
          "Installing Visual Studio Code",
          "Installing SQL Server",
          "Installing Postman",
          "Creating the Web API with Visual Studio",
          "Creating the Web API with the dotnet CLI",
          "Solutions and Projects",
          "Nullables and Implicit Usings",
          "The LaunchSettings File",
          "Configurations Providers - AppSettings",
          "The Program Class",
          "List of Genres",
          "Summary"
        ],
        "REST Principles": [
          "Introduction",
          "Client-Server Separation - CORS",
          "Visualizing the CORS Error",
          "Enabling CORS Configuration in ASP.NET Core",
          "Configuring CORS in Endpoints",
          "Not Using State",
          "Introduction to Cache",
          "Implementing OutputCache",
          "Layered-System",
          "Documenting the Web API with Swagger",
          "Summary"
        ],
        "Introduction to Entity Framework Core": [
          "Introduction",
          "What is a Database?",
          "What is Entity Framework Core?",
          "Entity Framework Core Versions",
          "Code First vs Database First",
          "Installing the EF Core CLI",
          "Installing EF Core",
          "Creating the Genre Entity",
          "Creating Our First Migration",
          "Configuring Columns",
          "Inserting Genres",
          "Selecting Genres",
          "Cleaning Up the Cache",
          "Ordering Records - OrderBy and OrderByDescending",
          "Updating Genres",
          "Deleting Genres",
          "MapGroup",
          "Going From Lambda Expressions to Named Methods",
          "Group of Endpoints per Class",
          "DTOs",
          "AutoMapper",
          "Summary"
        ],
        "Actors, Movies and Comments": [
          "Introduction",
          "Creating the Actor Entity",
          "Actors CRUD",
          "Endpoint for Inserting Actors",
          "Preparing the App to Store Images",
          "Azure Storage",
          "Saving Files Locally",
          "Getting Actors",
          "Filters",
          "Pagination",
          "Implementing Pagination",
          "Updating Actors",
          "Deleting Actors",
          "Creating the Movie Entity",
          "Movies CRUD",
          "Endpoint for Inserting Movies",
          "Selecting Movies",
          "Updating Movies",
          "Deleting Movies",
          "Creating the Comment Entity",
          "Comments CRUD",
          "Endpoint for Inserting Comments",
          "Getting the Comments of a Movie",
          "Updating and Deleting Comments",
          "Getting a Movie and its Comments",
          "Configuring a Many-to-Many Relationship between Genres and Movies",
          "Assigning Genres to a Movie",
          "Creating an Endpoint to Assign Genres",
          "Configuring a Many-to-Many Relationship between Actors and Movies",
          "Assigning Actors to a Movie",
          "Creating an Endpoint to Assign Actors",
          "Getting a Movie and its Genres and Actors",
          "Ordering Related Data",
          "Summary"
        ],
        "Validations and Error Handling": [
          "Introduction",
          "Validations - FluentValidation",
          "Validating That a Field is Not Empty",
          "Customizing Validation Errors",
          "Multiple Validations on a Single Property",
          "Customized Validation",
          "Asynchronous Validation",
          "Getting a Route Parameter",
          "Multiple Validations on Multiple Properties",
          "Reusing Validation's Settings",
          "Introduction to Filters",
          "Getting Arguments in Filters",
          "Using Filters to Centralize Validations",
          "Using a Generic Filter",
          "Validating Comments",
          "Validating Movies",
          "Error Handling - Validating the Data Type",
          "Modifying the Error Message",
          "Saving the Error Message in a Database",
          "Summary"
        ],
        "Security": [
          "Introduction",
          "Authentication and Authorization",
          "Protecting Endpoints",
          "Creating a Test JWT",
          "Configuring Identity",
          "Configuring JWTs",
          "Registering Users",
          "Login Users",
          "Completing the Comment Entity",
          "Creating the User Service",
          "Updating and Deleting Comments",
          "Configuring Claim-Based Authorization",
          "Using the Admin's Claim",
          "Renewing Tokens",
          "Summary"
        ],
        "Advanced Scenarios": [
          "Introduction",
          "Logging",
          "Model Binding",
          "AsParameters",
          "Bind Async",
          "Using IParsable for Saving Code",
          "Documenting the Web API - Adding Parameters",
          "General Modifications to the Swagger Page",
          "Adding Descriptions to Endpoints",
          "Swagger and FromForm",
          "Swagger and JWT",
          "IParameterFilter to Personalize the Metadata of the Endpoints",
          "Filtering and Ordering Movies",
          "Deferred Execution",
          "Ordering the Results of a Query Dynamically",
          "Delimiting Options in the Ordering Field",
          "Introduction to Distributed Cache",
          "Installing Redis",
          "Using Redis in ASP.NET Core",
          "REST Limitations",
          "Introduction to GraphQL",
          "Installing GraphQL in ASP.NET Core",
          "Making Queries in GraphQL",
          "Adding the Other Entities",
          "Making Mutations in GraphQL",
          "GraphQL and JWT",
          "Summary"
        ],
        "Deployments": [
          "Introduction",
          "Deploying to Azure App Service",
          "Fixing an App that Won't Start",
          "Fixing an Error in Production - Application Insights",
          "Deploying to IIS",
          "Introduction to Continuous Integration and Continuous Delivery",
          "Continuous Integration in Azure DevOps",
          "Continuous Delivery in Azure DevOps",
          "Summary"
        ],
        "The End": [
          "Congratulations"
        ]
      },
      "requirements": [
        "Basic knowledge of C# (know what a class is, invoking functions, if statements, loops)"
      ],
      "description": "Learn how to develop Minimal APIs with ASP.NET Core from scratch with this amazing course.\nWe are going to see the entire life cycle of developing a Web API, from creating the solution, developing the endpoints, working on resource manipulation, to putting it into production in Azure and IIS.\nIn this course we will do a project which you will be able to publish and show as part of your portfolio.\nWe will also learn how to use Azure DevOps to configure a Continuous Integration and Continuous Delivery pipeline, to be able to publish your projects from their source code in Github, Bitbucket, or any other GIT repository provider.\nSome of the topics we will see are:\nCreation of REST Web APIs\nCreate a database\nUse Entity Framework Core to read, insert, update, and delete records from a database\nCreate a user system so that our clients can register and log in to the Web API\nWe will use Json Web Tokens (JWT) for authentication\nClaims-based authorization, so that only some users can use certain endpoints\nUsing cache to have a faster application\nUsing Redis for distributed cache\nWe will use GraphQL so that customers can indicate exactly what they want to consult\nWeb APIs are fundamental in modern web development. Since they allow us to centralize and protect the logic of our solutions. In addition, it is in a Web API that we typically have access to a central database with which all your users can communicate. Whether you build a social network, a delivery application, or even an office app, a Web API allows you to work on the back-end of mobile applications (Android, iOS, MAUI, etc.), web (React, Angular, Blazor, Vue, etc.), desktop, among others.",
      "target_audience": [
        ".NET developers who wish to learn how to build Web APIs"
      ]
    },
    {
      "title": "Java Full Stack Spring Boot and Angular (Inc. JWT + Cloud)",
      "url": "https://www.udemy.com/course/java-full-stack-spring-boot-and-angular-inc-jwt-cloud/",
      "bio": "Spring security, Heroku Cloud Deployment via Github, PostgreSQL, Hibernate, Lombok, Angular12, Full Stack Development",
      "objectives": [
        "Develop a Spring Boot backend using REST APIs and PostgreSQL database",
        "Develop a Angular frontend using Angular CLI, Routers",
        "Develop a Heroku Cloud Deployment from Java and Angular in production mode",
        "Cloud Deployment for Java and NodeJS",
        "Heroku Cloud Deployment",
        "Learn the basics of Angular - Angular Modules, Components, Data Binding and Routing",
        "Role Base Authorization and Authentication",
        "Use Spring Security to configure Basic Authentication and JWT",
        "Learn the magic of Spring Boot - Auto Configuration, Spring Initializr and Starter Projects",
        "RXJS Observables and Observers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Architecture of All System"
        ],
        "Setting Up Development Environment": [
          "Download and Install Java 11+",
          "Download and Install Intellij",
          "Download and Install PostgreSQL",
          "Download and Install Git",
          "Download and Install Lombok on Intellij",
          "Download and Install Postman"
        ],
        "Overview for Basic Frameworks and Tools": [
          "Spring Boot Overview - Annotations, Beans, Configuration",
          "Rest API Overview - Http Methods",
          "SQL Overview - Basic CRUD Operations",
          "Lombok Overview - Getter, Setter, Constructors",
          "Git Overview - Git vs Github"
        ],
        "Restful Web Services - Overview": [
          "@RequestParam Annotation and How does it work?",
          "@PathVariable Annotation and How does it work?",
          "@RequestBody Annotation and How does it work?"
        ],
        "Spring Boot - Backend - Server Side": [
          "Source Code for the Backend",
          "Overview - Architecture of Backend Project",
          "Create Project with Spring Initializer",
          "Why Did We Choose Gradle? Isn't Maven most common one?",
          "Create Database on PostgreSQL with PgAdmin",
          "Configure Database Properties on Application Properties",
          "Entity Diagram",
          "Implement The User Entity Model Class",
          "Do you want to learn more about ID Generated Strategies? - Optional",
          "Implement The Book Entity Model Class",
          "Implement The Purchase Entity Model Class",
          "Implement the User Repository Class with JPA CRUD Repository",
          "Implement the Book Repository Class with JPA CRUD Repository",
          "Implement the Purchase Repository Class with JPA CRUD Repository + Projections",
          "Implement the User Service Class - Business Layer",
          "Implement the Book Service Class - Business Layer",
          "Implement the Purchase Service Class - Business Layer"
        ],
        "Overview for Spring Security - Optional": [
          "What is Authentication?",
          "What is Authorization?",
          "How does Spring Security handle Authentication and Authorization?"
        ],
        "Security Implementation": [
          "Load User by Username - User Details Service",
          "Configure Security - Authentication Manager and HttpSecurity",
          "Circular Reference Error - Spring Boot 2.6+"
        ],
        "JWT Implementation": [
          "JWT Overview and Install JWT Libraries",
          "JWT Helper Methods - Token Generation, Validation",
          "Implement JWT Authentication Filter"
        ],
        "Implement User Log In and User Sign Up": [
          "Authenticate User with Authentication Manager - Service",
          "Create Endpoints for User Log In and User Sign Up - Controller"
        ],
        "Internal API Implementation": [
          "Create Internal Authentication Filter",
          "Create Connection between JWT and Internal Filters",
          "Internal Controller Implementation"
        ]
      },
      "requirements": [
        "Basic Java knowledge"
      ],
      "description": "In this course, we will create a new project like online-book-shopping.\n\n\nWhen I say online-book-shopping application, we can think of it like that we will have a book-list page. Somehow users or customers will see these book-lists and they can buy one of them. Of course, at the end of it, this purchase will be stored and displayed later.\n\n\nAnd we will implement this project using Spring Boot, Angular, and PostgreSQL.\n\n\nIn our project, we will implement CRUD operations. These CRUD operations will be for users and books. We will use users for user sign-in, sign-up and authorization operations. And we will use the books for creating, editing, deleting book operations.\n\n\nThese CRUD operations will be requested from Angular. So on the backend, we will create an infrastructure for these CRUD operations and on the frontend, we will serve them with the user interface.\n\n\nOur project goes on with User and book operations.\nOur main operations will be user login, register, book-list, create-book, delete-book etc.\nAlso, we will go on with the role based application. So we will use different roles like “Admin”, “User”. Then we will provide different authorizations to these users according to the role.\nAnd this all things will be provided with a secure way in both Angular and Spring Boot.\n\n\nWe will have two main components to implement our project.\nThese are server side and client side.\n\n\nIn Server Side:\n\n\nOf course here, our main library will be Spring-boot. We will implement the whole infrastructure on the backend with the Spring boot. It will provide easy and fast configuration to us.\n\n\nWe will implement the Model view controller architecture on our project.\n\n\nSpring-security will be one of the main topics in our application. Also, we will use JWT to provide security.\n\n\nIn Spring Boot, Data will be presented to the client as an API call so Spring Rest Controller will be used to handle it.\n\n\nWe will use PostgreSQL as Database. We can use other databases also but at the end of it we will deploy our codes to Heroku. Postgresql can be used on Heroku for free so we chose that.\n\n\nWe will also use Object Relational Mapping with Java Persistence API and Hibernate.\n\n\nYou know, We can map our database tables to objects with hibernate.\n\n\nWe will use JPA Repository and Crud Repository in Spring Boot.\nSo these repository templates will handle common database operations like save, update, find, delete.\n\n\nWith Spring Boot, we will also use Lombok library to clear code.\nYou know that we don't want to implement getter, setter, equals and hash code. So we can escape it using Lombok @Data or @Value annotation.\n\n\nWe will use Gradle To handle all dependencies on server side.\n\n\nFor our all services, we will create cloud deployment with Heroku. Heroku is an amazing free framework. We can deploy our spring-boot projects with some configuration over github easily. So At the end of the course, we will have an application on production and we will have a code on github that is accessible by everyone.\n\n\nThat's all about Server side.\n\n\nLet's talk about Client Side.\n\n\nWe will create an angular application on the client side and it will provide a cool user-interface. So we will create some pages like home-page, admin dashboard, login page and register-page. Then we will assign the server apis to these pages and we will consume and produce the data from the user-interface easily and user friendly.\n\n\nOn angular, we will also implement the model view controller architecture. We will use the cool features of typescript etc.\n\n\nAt the end of it, we will build it and we will serve it to heroku also. So at the end of the course, we will have a live application on production.\n\n\nLast but not least, we will implement security and authorization on angular also. We will work with different roles and according to these roles, we will implement unauthorized and not-found pages on the user interface also.\n\n\nWe will see the details of them one by one.",
      "target_audience": [
        "All developers curious about Java and NodeJS"
      ]
    },
    {
      "title": "Learn HANA® SQL",
      "url": "https://www.udemy.com/course/learn-hana-sql/",
      "bio": "Learn HANA® Native SQL, Modelling , Procedures and Performance Enhancement",
      "objectives": [
        "At the end of the course you will have a strong understanding and practical knowledge about SAP® HANA®"
      ],
      "course_content": {},
      "requirements": [
        "Some level of experience in SAP®"
      ],
      "description": "This one comprehensive course covers all the aspect of HANA® Development to help you when it matter. We have covered all concepts from basics to intermediate to advance in step-by-step, We have covered the details of HANA® Architecture, HANA® Modelling, Procedure, XSJS and XS oData and lot More.\nAlso, when it comes to HANA® Modeling. We create Logical Containers to hold our Virtual data in views, may it be Attribute Views, Analytical Views, Calculation View or even creating custom calculated column these takes lot of time to search through, and all of these are covered in a detail and simple way with demos in this course. We have given special attention to:\nFiltering, Selecting , Decision Making, Types, Attributes and measures\nAttribute Views - Keys Fields Filtering Records and Preview Data\nAnalytical Views - Characteristics, Facts and Dimension Table Overview\nAnalytical Views - Data Foundation and Nodes\nAnalytical Views - Selecting Columns, Joins and Specifying Measures\nAnalytical Views - Calculated Column and Data Preview\nCalculation Views - Characteristics, Nodes and Types\nCalculation Views - Adding Data Source, Selecting Column\nGraphical Calculation Views(GCV)\nGCV - Join, Union, Projection, Aggregation and Rank\nGCV - Renaming Nodes, Auto Layout, Keys and Aggregation\nGCV - Input Parameters, Filtering And Calculated Columns\nScripted Calculation Views\nAnd not only this we have given attention to Procedure, XSJS and XS oData. So you would be able to get complete information on:\nTable types\nLocal temporary tables\nScalar Variables and User-defined functions\nTable User Defined Functions\nLooping concept inside Procedures\nArray functions like array aggregation\nImperative statement and declarative statement  XSJS Service API’s\nExposing xs oData Services with Views\nAll covered in our course in simple to explanation and hands-on manner.",
      "target_audience": [
        "SAP Consultants",
        "Architects",
        "Developers",
        "Senior Consultants"
      ]
    },
    {
      "title": "React for absolute beginners",
      "url": "https://www.udemy.com/course/react-for-absolute-beginners/",
      "bio": "Learn React from scratch with hands-on projects",
      "objectives": [
        "Setup local react development environment",
        "Access react library from CDN",
        "Understand what components",
        "Create components",
        "Create components in ES6",
        "Convert component functions to ES6 Class",
        "Understand Props",
        "Use props with components",
        "Understand JSX",
        "Use JSX as an expression",
        "Use child elements in JSX",
        "Nest JSX elements",
        "Understand state",
        "Adding a state to a class",
        "Build simple react projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML",
        "Basic understanding of CSS",
        "Basic understanding of JavaScript"
      ],
      "description": "React.js is a an open-source JavaScript library for creating user interfaces\nReact adopts  a component based approach in developing applications.\nEvery react app can considered a component or a collection of components which can be re-usable.\nThis course is for absolute beginners to react and will teach you from scratch what you need to know to begin\ncreating react based applications. React is fun and easy to learn.\nReact.js is designed to make the process of building modular, reusable user interface components simple and intuitive. With React you can design  simple views for each state of an application. You can also use  React to efficiently update and render  components when your data changes.  I will walk you through how to create react components from scratch, review components properties, and component state, as well as the foundational parent/child relationships within React.js. I will also take you through  the lifecycle of components . You will be transpiling JSX code using babel which is an in browser transpiler that converts  JSX code into readable format.\nWhat you will learn includes:\n\nSetting up a local react development environment\nAccessing React Library via CDN\nUsing Creating a React App tool to create new react projects\nAccessing Reaact from JSBIN\nCreating React Components\nCreating React Components in ES6\nConverting React functions to ES6 Class\nUsing JSX\nEmbedding JSX as expressions\nUsing props\nUsing State\nComponent life cycle\nCreating a  React mortgage calculator\nCreating a React Todo List App\nCreating a React static tweet component\nCreating a React countdown timer\nCreating a React digital clock",
      "target_audience": [
        "Anyone who wants to learn React",
        "Beginner programmers",
        "Beginner developers"
      ]
    },
    {
      "title": "Mastering Odoo v11.0 Development",
      "url": "https://www.udemy.com/course/mastering-odoo-v110-development/",
      "bio": "Learn how to develop modules for Odoo v11.0 CE, then push it to remote servers and deploy it using Apache2 and Nginx.",
      "objectives": [
        "Install and Configure Odoo v11.0 on Ubuntu 17.10 for developers.",
        "Configure Apache2, Nginx uWSGI for Odoo v11.0 on Ubuntu 17.10",
        "Develop new modules (models / views / translation files) from scratch.",
        "Edit existing modules (models / views).",
        "Manage Odoo security framework by creating groups and assign the access rights for each group.",
        "Manage record rules to limit CRUD under certain conditions for specific groups.",
        "Track updates on each document using social network.",
        "Use the command 'scaffold' to build the basic structure of the module.",
        "Learn about the configuration that should improve the server's performance.",
        "Play with the options and attributes of the command odoo-bin.",
        "Install requirements using pip.",
        "Create demo files for testing purposes.",
        "Use local and remote databases.",
        "Backup & Restore DBs remotely.",
        "Understand & use new APIs",
        "Create and use wizards.",
        "Inherit models to add and override fields and methods.",
        "Inherit views to add fields, add/modify attributes or remove fields.",
        "Use XML-RPC Library"
      ],
      "course_content": {
        "Introduction & Installation": [
          "Introduction",
          "Where to get help !!",
          "Download and Install Odoo v11.0 with Demo Data on Ubuntu 17.10",
          "Cloning Odoo 11.0 from Github",
          "Configure PyCharm CE IDE"
        ],
        "Technical Basics": [
          "Roadmap of this course",
          "Create the first Module using Scaffold",
          "Manifest File",
          "Technical Concepts",
          "CRUD in Odoo"
        ],
        "First steps with the first module": [
          "Add a new object / model with simple fields.",
          "Add a simple tree & form views, view actions and menu items",
          "Deeper technical exploration"
        ],
        "Odoo Commands": [
          "Odoo Command: start"
        ]
      },
      "requirements": [
        "Intermediate Python Knowledge.",
        "Intermediate Linux (Ubuntu or CentOS) Knowledge and working with Command Line.",
        "PC or Laptop with Ubuntu 17.10 installed.",
        "Pycharm Community Edition is recommended as Python IDE.",
        "Virtual Machine with Ubuntu 17.10 server or CentOS 7 installed.",
        "install git using the command (sudo apt-get install git).",
        "install SSH using the command (sudo apt-get install openssh-client)."
      ],
      "description": "Odoo is a modern ERP system released under AGPL license, and it offers HR, CRM, Project Management, Sales, Purchases, Inventory Management, Accounting, .....\nOdoo is based on Open Object ( A smart Open Source Professional Rapid Application Development Framework in Python).\nI promise to be available to answer your questions and to discuss your ideas.\nLearn everything you need about Open Object framework to build new modules for Odoo V11.0:\nBasics: Build simple module and its Interface.\nIntermediate: Reports, Workflows, Security, Wizards.\nAdvanced: Advanced Views (Calendar, Search, Gantt and Kanban views), XML-RPC library.\nThrough the course, We will write a new module from Real Life:\nCreate New Objects, Views, Security Groups and Rules, Wizard and Reports.\nExtend (Inheritance) Existing Objects, Views, Security Groups and Rules .....\nBy the completion of this online training course, you will be fully versed, and capable of working with and creating your own Odoo v11.0 modules for real customers.",
      "target_audience": [
        "Python Developer who wants to learn about Odoo v11.0 development.",
        "Odoo Beginners who want to learn Odoo V11.0 CE.",
        "Odoo Intermediates who want to Improve their Odoo technical skills.",
        "Improving debugging skills using PyCharm Community Edition.",
        "Odoo developers who worked on old versions and want to start with new versions of Odoo."
      ]
    },
    {
      "title": "Advanced Rest Api's with .Net Core , MSSQL & MongoDB",
      "url": "https://www.udemy.com/course/advanced-rest-apis-with-net-core-mssql-mongodb/",
      "bio": "Build advanced REST Api's with .Net Core 6.0 , Entity Framework Core , MS-SQL and MongoDB",
      "objectives": [
        "You'll be able to Create Advanced Restful Api's with .Net Core",
        "Create Rest Api's with Dependency Injection and Repository Layer Pattern",
        "Connect Rest Api's with MS-SQL Database with Entity Framework and add migrations",
        "Add Data Transfer Objects (DTO's) and integrate Automapper inside the Rest Api's",
        "Learn how to use the OData inside the Rest api's",
        "Learn Rate Limit and integrate it inside the Rest Api's",
        "You'll also learn MongoDB , Install MongoDb Compass GUI , Connect MongoDB with .Net Core Rest Api's",
        "Implement MongoDb CRUD with .Net Core",
        "Create Azure CosmosDb Api for Mongo DB and connect it with the Rest Api's",
        "Deploy the Rest Api's to Microsoft Azure"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure",
          "Prerequisites"
        ],
        "Dependency Injection with .Net Core Rest Api": [
          "Create .Net Core Project",
          "Add Models",
          "Add Interfaces",
          "Configure NuGet Packages For Entity Framework Core & MSSQL DB",
          "DbContext Class",
          "Setup Connection String",
          "Add Migrations",
          "Add Services",
          "Extension Methods",
          "Create Controllers",
          "Run Api's"
        ],
        "Status Code & Error Handling with Service Layer": [
          "Change Interface",
          "Change Services Get Method",
          "Change Services Add, Update and Delete Method",
          "Change Controller Class Methods",
          "Check Status Codes"
        ],
        "Data Transfer Object (DTO'S) & Automapper": [
          "What is DTO's ?",
          "Implement DTO's in Rest Api's",
          "Configure Automapper Nuget Package",
          "Implement Automapper inside Rest Api's"
        ],
        "OData & Rate Limiting": [
          "What is OData?",
          "Implement OData inside Rest Api's",
          "What is Rate Limiting ?",
          "Implement Rate Limit inside Rest Api's"
        ],
        "MongoDB inside .Net Core Rest Api's": [
          "What is MongoDB ?",
          "Setting up MongoDB",
          "Configure MongoDB Nuget Package",
          "Setting up Mongo Client",
          "MongoDB CRUD Operations",
          "Run Rest Api's with MongoDB"
        ],
        "Azure Cosmos DB Api For Mongo DB": [
          "What is Azure Cosmos DB Api for MongDB",
          "Integrate Azure Mongo DB inside Rest Api's"
        ],
        "Deployment": [
          "Create Azure Web App",
          "Deploy Rest Api's to Microsoft Azure",
          "Source Code",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Asp Dot Net and Entity Framework.",
        "The student must have a 3 - 6 months of experience with .Net Core Restful Api's.",
        "Microsoft Azure account is required if you want to publish Or deploy the Api's and connect the api's with Azure Cosmos DB"
      ],
      "description": "In this course we'll cover all the advanced functionality of Rest Api's with .Net Core and C#. This course is designed for those who are familiar with .Net Core Rest Api's.\nThe main focus of this course is on the Restful Web Api via ASP.NET Core and C#. So if you're familiar with C# , ASP.NET Core and Entity Framework Core Or if you want to create the Restful Api's with .Net Core then this is the right course for you.\nIn this course we'll start our work from the scratch and we will not use any copy paste technique. We'll write all the code from scratch.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to Create Rest Api's with Dependency Injection Or repository Layer Pattern\nCreate Restful Api's via Entity Framework Code First Approach\nConnect Api's with MS-SQL Database\nAdd Migrations in Rest Api's\nImplement Status Codes & Error Handling with Service Layer Pattern\nIntegrate DTO's and Automapper in Rest Api's\nIntegrate OData and Rate Limiting functionality in Rest Api's\nInstall MongoDB Compass GUI, Connect MongoDB with .Net Core Rest Api's\nPerform CRUD with .Net Core Rest Api's and MongoDB\nIntegrate Azure CosmosDB Api for MongoDB\nDeploy Rest Api to Microsoft Azure\nA valuable Skill at Your Fingertips  Learning the Rest Api 's put a powerful and attractive look in your Resume .Both C# and ASP.NET are open source, easy to learn and has an excellent Microsoft support.\nJobs in Rest Api's are plentiful, and being able to learn the Web Api 's with a professional way will give you a strong background to more easily pick up other challenging platforms and create the Rest Api's for other platforms.\nContent and Overview  Suitable for C# programmers, Asp.Net Developers , Software engineers or Backend Developers. Through this course , you’ll create a  Restful Api's and establish a strong understanding of the concept behind Restful Api's.\nWhat am I going to get from this course?\nLearn Rest Api's from a Microsoft (MVP), Xamarin MVP from your own desk.\nCreate Restful Api in ASP.NET Core 6.0 with me.\nSuitable for intermediate & advanced programmers, C# Asp.Net developers and ideal for users who learn faster when shown.\nVisual training method, with Hands on Lab Practice  and coding.\nBreaks even the most complex scenarios down into simplistic steps.\nAlso you'll be able to learn all the Advanced concepts of Rest Api's like OData , rate Limiting , DTO's , Automapper , MongoDB, CosmosDB and Deployment  etc.\nAfter this course you can also apply those Rest Api's concepts in some other programming language.",
      "target_audience": [
        "Everyone who has some basic knowledge of .Net Core , Entity Framework and C# and willing to start career in Rest Api's and back end development .",
        "Some prior programming experience in C# and Object Oriented will also help to pick the concepts easily."
      ]
    },
    {
      "title": "Creative CSS and Javascript Effects and Animation",
      "url": "https://www.udemy.com/course/creative-css-and-javascript-effects-and-animation/",
      "bio": "Awesome Website Background Animation Effects using CSS & Vanilla Javascript",
      "objectives": [
        "Creative Javascript Animation Effects For Web Design",
        "master is javascript animations",
        "be able to create any creative css javascript animation",
        "Javascript Banner Animation",
        "Parallax Background using Javascript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Basic Setup",
          "Let's Begin",
          "Starry Night Website Banner Animation Effects Part 01",
          "Starry Night Website Banner Animation Effects Part 02",
          "Starry Night Website Banner Animation Effects Part 03",
          "Javascript Image Drop Animation Effects",
          "Javascript Image Rain Animation Effects",
          "Javascript Image Tornado Animation Effects",
          "Ironman Parallax Scene using CSS & ScrollTrigger",
          "Execute Animation on Page Scroll",
          "Play Video on Scroll using Javascript"
        ],
        "Just Code | No Voice": [
          "Golden Dust Text Reveal Animation Effects"
        ]
      },
      "requirements": [
        "Basic knowledge of html css and javascript"
      ],
      "description": "In this course i'll teach you how to make awesome and creative banner animation and parallax effects using CSS & Javascript.and many more cool stuff.\nSo in this course you will master css and javascript animations, transitions, and transforms, starting from scratch, and not only that, we’re also gonna get our hands dirty and create many examples together so that you will get tons of ideas, and lots of inspiration to help you create any complex animation you can think of.",
      "target_audience": [
        "frontend developers",
        "website designer",
        "UX/UI Designer",
        "Javascript Developers",
        "CSS Developers",
        "Tutorial for front end developer",
        "From Zero to Front-end Hero",
        "javascript front end tutorial",
        "Creartive Javascript course",
        "CSS Javascript Banner Animation",
        "Parallax Effects"
      ]
    },
    {
      "title": "React: Web Apps with ReactJS and Redux - The Complete Course",
      "url": "https://www.udemy.com/course/react-web-apps-with-reactjs-and-redux-the-complete-course/",
      "bio": "Master React and Redux. Learn Reactjs with live examples and more. Detailed Walkthroughs to help you master React Redux",
      "objectives": [
        "Understand the terminology and concepts of React and Redux",
        "Develop entire React JS and Redux applications from scratch.",
        "Build powerful, fast, user-friendly and amazing applications with React JS and Redux",
        "Develop cross-platform (iOS and Android) mobile apps",
        "Apply for high-paid jobs or switch careers",
        "Work as a freelancer in one the most-demanded sectors"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction 2",
          "Introduction 3",
          "Requirements",
          "Requirements"
        ],
        "Requirements First Steps": [
          "GIT NPM",
          "First Glance Project",
          "Second Glance Project"
        ],
        "Pokemon App Pure React": [
          "Pokeman App 1",
          "Pokeman App 2",
          "Pokeman App 3",
          "Pokeman App 4",
          "Pokeman App 5",
          "Pokeman App 6",
          "Pokeman App 7",
          "Pokeman App 8",
          "Pokeman App 9",
          "Pokeman App 10",
          "Pokeman App 11",
          "Pokeman App 12",
          "Pokeman App 13",
          "Pokeman App 14",
          "Pokeman App 15",
          "Pokeman App 16",
          "Pokeman App 17",
          "Pokeman App 18",
          "Pokeman App 19"
        ],
        "Hold Breath and Contemplate": [
          "Use Git to see Solutions",
          "Intro to Redux"
        ],
        "Zookeeper Redux App": [
          "Zookeeper App Introduction",
          "Init App Root Reducer",
          "Upgrading App for the Reducer",
          "Animal List Reducer",
          "Using Connect to Bind Props",
          "Mapping Store State to Props",
          "Actions in Action",
          "Actions Problem Fixed",
          "A Step Back Contemplate",
          "Animal Details",
          "JSON Server API Prep",
          "Postman 1",
          "Postman 2",
          "Build an API with Faker",
          "Words on Solutions in GIT"
        ],
        "Zookeeper Async": [
          "Get Application from Branch",
          "Make use of Thunk",
          "Action an Error on Saving",
          "Refectoring the Action",
          "Lifecycle Methods",
          "Render Race Conditions",
          "Iterating over API Results",
          "Starting the Post Feature",
          "Writing the Form",
          "Binding Input Values to State",
          "Collection State",
          "Preparing Everything for POST",
          "Creating Axios POST",
          "Map Dispatch to Props Inside Animal Add",
          "POST in the Network Tab",
          "Update List with Reducer",
          "Delete Action",
          "Delete Reducer"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)"
      ],
      "description": "React and Redux are the skills that will put you more in demand in the modern web development industry. React JS is the future of web development\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build React components and structure applications with Redux.\nWith this course you can easily and quickly build and launch real-world React based web applications.\nThe Complete React Redux Course starts with the basics and covers everything you’ll need to build and launch React web apps. You’ll will practice how to build and launch a React app, from the first line of code to the final production deployment.\nTake the dive into React JS and Redux. Let’s get started coding!\nAt the end of this training, you will be able to\nUnderstand the terminology and concepts of React and Redux\nDevelop entire React JS and Redux applications from scratch.\nBuild powerful, fast, user-friendly and amazing applications with React JS and Redux\nDevelop cross-platform (iOS and Android) mobile apps\nApply for high-paid jobs or switch careers\nWork as a freelancer in one the most-demanded sectors\n100% MONEY-BACK GUARANTEE\n\nGet Lifetime access and 30 Days 100% Money Back Guarantee by Purchasing this course now. If you're not happy, ask for a refund, all your money back, no questions asked.\nThis course is now available at the best price and the price can increase anytime. Taking action and buying this course now is better than doing nothing!\nJoin in, As for learning React and Redux,  this course is the authority and equally important you will get a certification of completion that validates your skills.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "Programmers looking to learn React and Redux",
        "Anyone who want to learn how to build reactive and fast web apps"
      ]
    },
    {
      "title": "Tailwind CSS Mega Course: Basic to Advanced-Build 3 Projects",
      "url": "https://www.udemy.com/course/tailwind-css-mega-course-basic-to-advanced-build-2-projects/",
      "bio": "Master Tailwind CSS: Beginner to Advanced Concepts in Project-Based Course, Design Responsive Website Using Tailwind CSS",
      "objectives": [
        "Tailwind CSS From Basics to Advanced",
        "Build an E-Commerce Website Using Tailwind CSS",
        "Explore Various Approaches to Using Tailwind CSS",
        "Applying Tailwind CSS in Real-World Projects",
        "Exploring Advanced Features of Tailwind CSS",
        "How to Organize Tailwind CSS Code"
      ],
      "course_content": {
        "Introduction": [
          "Movie Web App Project Course Intro"
        ],
        "Basic of Tailwind CSS": [
          "Introduction To Tailwind CSS Part-1",
          "Tailwind CSS Installation and Setup Part-2",
          "Tailwind CSS Configuration Part-3",
          "Tailwind CSS Configuration and Font Size Part-4",
          "Font Size Part-5",
          "Custom Font Size Part-6",
          "Font Style and Custom Fonts Part-7",
          "Text Decoration and Styling Part-8",
          "Margins Part-9",
          "Padding and Border Part-10",
          "Space Between Class Part-11",
          "Hoover Effect Part-12",
          "Focus and Active Effect Part-13",
          "Active and Layer Part-14"
        ],
        "Utility First Approach": [
          "Utility First Approach Part-1",
          "Utility First Approach Part-2"
        ],
        "Navigation Bar": [
          "Navigation Bar Structure Part-1",
          "Navigation Bar Components Part-2",
          "Navigation Bar Icon and Styling Part-3",
          "Navigation Bar Placement and Styling Part-4",
          "Navigation Bar Styling Part-5",
          "Navigation Bar Buttons and Styling Part-6",
          "Navigation Bar Styling Part-7"
        ],
        "Movie Web App: Project - 1": [
          "Movie Web App Project - Source Code",
          "Movie Web App Project - Live Overview Demo",
          "Setting Up The Project Environment Part - 1",
          "Navigation Bar - I Part - 2",
          "Navigation Bar-II Part - 3",
          "Banner Slider-I Part - 4",
          "Banner Slider-II Part - 5",
          "Banner Slider-III Part - 6",
          "Banner Slider Gradient Overlay Part - 7",
          "Banner Aside Bar Part - 8",
          "Movie Card Part - 9",
          "Generating Multiple Movie Cards Part - 10",
          "Flowbite Footer Part - 11",
          "Mobile Responsive Property Free Hosting Part - 12",
          "Responsive Techniques Part - 13"
        ],
        "E-Commerce Web App : Project - 2": [
          "Homepage E-Commerce Part-1",
          "Homepage E-commerce Part-2",
          "Homepage-Icons-E-commerce Part-3",
          "Homepage-Body-E-Commerce Part-4",
          "Homepage-Body-E-Commerce Part-5",
          "Homepage-Buttons-E-Commerce Part-6",
          "Homepage-Image-E-Commerce Part-7",
          "About Us Page-E-Commerce Part-8",
          "About US Page-E-Commerce Part-9",
          "About Us Page Mission Value E-Commerce Part-10",
          "About Us Page Styling E-Commerce Part-11",
          "About Us Page Styling E-Commerce Part-12",
          "Product Page E-Commerce Part-13",
          "Product Page E-Commerce Part-14",
          "Product Page Animation E-Commerce Part-15",
          "Fruit Page E-Commerce Part-16",
          "Fruit Page E-Commerce Part-17",
          "Fruit Page E-Commerce Part-18"
        ],
        "Restaurant Web App : Project - 3": [
          "Restaurant Web App Project - Source Code",
          "Restaurant Web App Project - Live Overview Demo",
          "Installations and Configurations-I Part-1",
          "Installations and Configurations-II Part-2",
          "Home Page Background-I Part-3",
          "Home Page Navigation Bar(1)-II Part-4",
          "Home Page Navigation Bar(2)-III Part-5",
          "Home Page Icons Styling and Buttons-IV Part-6",
          "Home Page Text-V Part-7",
          "Home Page Labels-VI Part-8",
          "Menu Page Background-I Part-9",
          "Menu Page Menu Bar(1)-II Part-10",
          "Menu Page Menu Bar(2)-III Part-11",
          "Menu Page Food Card(1)-IV Part-12",
          "Menu Page Food Card(2)-V Part-13",
          "Menu Page Styling-VI Part-14",
          "Review Page Background and Headings-I Part-15",
          "Review Page Review Card(1)-II Part-16",
          "Review Page Review Card(2)-III Part-17",
          "Review Page Styling-IV Part-18",
          "Reservations DineIn Page Reservation Box(1)-I Part-19",
          "Reservations DineIn Page Reservation Box(2)-II Part-20",
          "Reservations DineIn Page Text Box and Icons(1)-III Part-21",
          "Reservations DineIn Page Text Box and Icons(2)-IV Part-22",
          "Reservations DineIn Page Reservation Box and Button-V Part-23",
          "Reservations DineIn Page Image and Information-VI Part-24",
          "Reservations Table Page Backend-I Part-25",
          "Reservations Table Page Transformations-II Part-26",
          "Reservations Table Page Text Boxes-III Part-27",
          "Reservations Table Page Styling and Image-IV Part-28",
          "Chefs Page Background Text and Styling-I Part-29",
          "Chefs Page Images-II Part-30",
          "Landing Page Homepage-I Part-31",
          "Landing Page Reservations-II Part-32",
          "Landing Page Menu and Review-III Part-33",
          "Landing Page Chefs-IV Part-34",
          "Landing Page Footer(1)-V Part-35",
          "Landing Page Footer(2)-VI Part-36"
        ]
      },
      "requirements": [
        "Students don't need to have any prior experience to take this course. They will learn everything they need from this course."
      ],
      "description": "Thank you for visiting the Tailwind CSS Mega Course! This in-depth course covers all you need to know whether you're a novice trying to learn the fundamentals or an experienced developer hoping to learn advanced approaches. The process of creating visually beautiful and responsive websites is made easier using Tailwind CSS, a utility-first CSS framework.\n\n\nThroughout this course, you will construct two fascinating projects as you progress from the basics of Tailwind CSS to more complex ideas. First, you'll master the fundamentals of Tailwind CSS and how to design your HTML elements by using utility classes efficiently.\n\n\nYou'll develop two real-world projects from start with practical examples and hands-on supervision, putting your newly acquired knowledge to use in a real-world scenario. You will have the knowledge and self-assurance necessary to create responsive websites using Tailwind CSS like a pro by the conclusion of the course.\n\n\nKey Features:\nFull explanation of all topics related to Tailwind CSS, from fundamentals to advanced ideas.\nTwo full project builds using a hands-on approach.\nBuild an E-Commerce Website.\nLearn how to design a navigation bar.\nReal-world applications and applicable examples.\nLearn optimization strategies and best practices.\nCome along on this trip to become an expert in Tailwind CSS and improve your web development abilities!",
      "target_audience": [
        "If you are learning Tailwind CSS",
        "If you want to use Tailwind CSS in a real-world project",
        "If you want to learn the best practices of Tailwind CSS",
        "If you want to design a complete project using Tailwind CSS"
      ]
    },
    {
      "title": "Serverless Framework Guide: API Gateway , AWS & Node.js",
      "url": "https://www.udemy.com/course/aws-lambda-serverless-framework-build-ecommerce-apis/",
      "bio": "Master AWS & Serverless Framework : Build a Scalable Multi-Store with AWS Lambda, DynamoDB, S3, SQS, SES & More",
      "objectives": [
        "Authentication and Authorization",
        "Learn the fundamentals and advanced options of AWS Lambda",
        "Deploy real world project that interact with Amazon Cognito, SQS, S3, SES, SNS, EventBridge, API Gateway, DynamoDB, CloudWatch and many more",
        "Microservices Architecture",
        "Data Persistence (DynamoDB)",
        "Software Development with NodeJS",
        "Cloud Infrastructure & AWS Services",
        "Learn AWS Lambda with a hands-on project.",
        "Severless Computing",
        "Cloud Development",
        "Develop and deploy AWS Lambda functions properly with the Serverless Framework"
      ],
      "course_content": {
        "Getting Started with AWS Lambda": [
          "What you will learn",
          "Why Serverless ?",
          "Please Ask Me Anything",
          "Understanding AWS",
          "Questions",
          "What is AWS Lambda?",
          "Create AWS Account",
          "AWS Lambda Function: Create & Deploy",
          "Create Another AWS Lambda Function"
        ],
        "Introduction to IAM": [
          "IAM = Identity and Access Management",
          "Managing IAM Users and Groups on AWS",
          "AWS Policy Types"
        ],
        "Introduction to Serverless Framework & AWS CLI": [
          "Manual AWS Lambda vs Using Serverless Framework",
          "Benefits of Serverless Framework for Lambda Deployment",
          "Install The AWS CLI",
          "The AWS CLI",
          "Configuring the AWS CLI and IAM",
          "IAM with Task-Based Access",
          "IAM Best Practice: Least Privilege",
          "Questions",
          "The Configuration Step",
          "Install Node JS",
          "Install the Serverless Framework",
          "Question"
        ],
        "AWS Lambda Basics with Serverless Framework": [
          "Section Intro",
          "Create a Serverless Project",
          "Understanding serverless.yml",
          "Quick Summary: serverless.yml",
          "Mastering the serverless.yml Configuration File",
          "Align the runtime",
          "Deploy a Service",
          "Test Your Knowledge: Serverless Framework Essentials",
          "Deploying a Single Function",
          "Deploying a Single Function with the Serverless Framework",
          "Removing Resources",
          "Serverless Framework: Removing Deployed Resources",
          "Greet Lambda Function"
        ],
        "API Gateway": [
          "What is an API Gateway?",
          "API Gateway Endpoint",
          "API Gate Way Quiz",
          "API Gateway Methods",
          "Master API Gateway Methods",
          "Define Lambda Function",
          "Define API Gateway Function",
          "Deploy API Gateway Function",
          "API Gateway Response Codes",
          "API Gateway Response Codes Questions"
        ],
        "AWS CloudFormation": [
          "What is AWS CloudFormation",
          "Introduction to AWS CloudFormation",
          "AWS CloudFormation Service",
          "Understanding the Deployment Process in Serverless Framework"
        ],
        "Amazon CloudWatch": [
          "What is CloudWatch ?",
          "Amazon CloudWatch for Monitoring AWS Resources",
          "Amazon CloudWatch Service",
          "Part Two Understanding Amazon CloudWatch for Monitoring AWS Resources"
        ],
        "Introduction to Amazon Cognito": [
          "What is Amazon Cognito",
          "SecretHash in Cognito",
          "Understanding the Role of secretHash in AWS Cognito",
          "Amazon Cognito's Client ID & Client Secret",
          "Understanding Client ID and Client Secret in AWS Cognito"
        ],
        "Authentication Service Using Amazon Cognito": [
          "Create Authentication Service Project",
          "Configure Amazon Coginito Service",
          "Create Signup Lambda Function",
          "Configuring API Gateway to Handle Sign-Up Requests",
          "Deploying the Sign-Up Lambda Function",
          "Introduction to Amazon Cognito",
          "Setting Up User Authentication with Amazon Cognito",
          "Quick Summary - serverless.yml"
        ],
        "Authentication Service: Confirmation Code Handler": [
          "Handling User Account Verification in Amazon Cognito",
          "Exposing the Confirm Sign-Up API through API Gateway",
          "Deploy The Confirm Sign-Up Function"
        ]
      },
      "requirements": [
        "Be willing to learn; everything is well explained"
      ],
      "description": "Building modern applications requires scalability, flexibility, and efficiency. This course teaches you how to design and deploy a multi-store application using a serverless microservices architecture on AWS, with API Gateway as a core component.\nYou will gain hands-on experience with AWS Lambda, API Gateway, DynamoDB, S3, and other essential cloud services while following best practices for performance, security, and automation. This course provides practical, real-world examples to help you understand how to architect, develop, and deploy highly scalable applications.\nWhat You Will Learn\nBuild a multi-store application with a fully serverless backend\nImplement microservices for better scalability and maintainability\nUse API Gateway, AWS Lambda, DynamoDB, and S3 for a complete serverless stack\nWork with event-driven architectures using SQS, SNS, and EventBridge\nAutomate deployments with Infrastructure as Code using Serverless Framework and AWS CloudFormation\nImplement authentication and authorization with Cognito and IAM\nMonitor and troubleshoot applications using CloudWatch and logging strategies\nOptimize performance, security, and cost efficiency for cloud-based applications\nThis course is designed for developers, backend engineers, and cloud enthusiasts looking to master serverless computing, API Gateway, and AWS. Whether you are new to AWS or want to refine your skills, this course will equip you with the knowledge to build scalable, production-ready applications.\nEnroll today and start building in the cloud.",
      "target_audience": [
        "A backend developer looking to transition from traditional server-based architectures to serverless solutions",
        "A Node.js developer who wants to build and deploy applications using AWS Lambda and Serverless Framework",
        "A cloud computing enthusiast eager to learn AWS services like API Gateway, DynamoDB, S3, SQS, SNS, EventBridge, Cognito, and more",
        "A tech professional who wants to gain hands-on experience in deploying and managing microservices",
        "A freelancer or entrepreneur who wants to build and scale eCommerce applications using AWS Serverless"
      ]
    },
    {
      "title": "Laravel 9 - Building a Complete Portfolio Website (A to Z)",
      "url": "https://www.udemy.com/course/laravel-building-a-complete-portfolio-website/",
      "bio": "Learning Laravel fundamentals (A to Z) and developing a personal portfolio website with Laravel 9",
      "objectives": [
        "Laravel 8 or Laravel 9 from scratch",
        "Laravel Fundamentals (A to Z)",
        "Laravel Single and Multi Auth (with Guard) System",
        "Visual Studio Code Editor and Important Plugins",
        "Laravel CRUD option",
        "Laravel Login System",
        "Forget Password and Reset Password Sytem",
        "Email Verification System Logic and Implementation",
        "Contact form email sending",
        "Website Color Settings Option",
        "Website logo, favicon and other items setup",
        "Admin profile management",
        "Photo uploading system",
        "Toastr message notification system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local Server Setup (Windows OS)": [
          "Installing XAMPP",
          "Shift between php versions in XAMPP",
          "Installing Laragon",
          "Shift between php versions in Laragon"
        ],
        "Local Server Setup (Mac OS)": [
          "Installing XAMPP",
          "Installing MAMP",
          "Shift between php versions in MAMP"
        ],
        "Code Editors": [
          "Code Editors"
        ],
        "Visual Studio Code Editor": [
          "VS Code Installation",
          "Opening Folders (Single and Multiple)",
          "Autosave",
          "Installing Extensions",
          "Export Settings",
          "Reset VS Code",
          "Creating and Working with Snippets",
          "Extension - Bootstrap 5 Quick Snippets",
          "Extension - Auto Rename Tag",
          "Extension - Material Icon Theme",
          "Extension - Vscode Great Icons",
          "Extension - Live Server",
          "Extension - Live Server Preview",
          "Extension - HTML CSS Support",
          "Extension - Laravel Blade Snippets",
          "Extension - Laravel Blade Spacer",
          "Extension - Laravel Artisan",
          "Extension - Laravel-goto-controller",
          "Color Scheme",
          "Working with Terminal",
          "Settings Sync"
        ],
        "Laravel Fundamentals (A to Z) - Laravel 8 & Laravel 9": [
          "Important Notes about Laravel 8 and Laravel 9 - How to install",
          "What is MVC",
          "What is Laravel",
          "What is Composer; Download and Install Composer (Windows OS)",
          "Install Composer in Mac OS",
          "Install Laravel",
          "Laravel Folder and File Structure",
          "Routes - Basic, Routes with parameter - Part 1",
          "Routes - Names route, URL, URL to Route - Part 2",
          "Controller",
          "Blade - Part 1",
          "Blade - Part 2",
          "Middleware - Part 1",
          "Middleware - Part 2",
          "Route Group",
          "Database and Migration",
          "Model",
          "Database - Raw SQL (Insert Data)",
          "Database - Raw SQL (Show Data)",
          "Database - Raw SQL (Update Data)",
          "Database - Raw SQL (Delete Data)",
          "Database - Raw SQL (Join Tables)",
          "Database - Query Builder (Insert Data)",
          "Database - Query Builder (Show Data)",
          "Database - Query Builder (Update Data)",
          "Database - Query Builder (Delete Data)",
          "Database - Query Builder (Join Tables)",
          "Database - Eloquent ORM (Insert Data)",
          "Database - Eloquent ORM (Show Data)",
          "Database - Eloquent ORM (Update Data)",
          "Database - Eloquent ORM (Delete Data)",
          "Database - Eloquent ORM (One to One Relationship)",
          "Database - Eloquent ORM (One to One Reverse Relationship)",
          "Database - Eloquent ORM (One to Many Relationship)",
          "CRUD Implementation (Form Validation, Error Message, Insert Data) - Part 1",
          "CRUD Implementation (Show Data) - Part 2",
          "CRUD Implementation (Update Data) - Part 3",
          "CRUD Implementation (Delete Data) - Part 4",
          "CRUD Implementation (Image Upload, Validation, Insert Photo) - Part 5",
          "CRUD Implementation (Image Upload, Validation, Update Photo) - Part 6",
          "CRUD Implementation (Image Upload, Validation, Delete Photo) - Part 7",
          "Soft Delete and Data Restore",
          "Force Delete",
          "Helper Functions",
          "Sending Email",
          "Seeder and Faker - Part 1",
          "Seeder and Faker - Part 2",
          "Edit .env file contents using user interface (Laravel 8 Only)"
        ],
        "Laravel Authentication - Single User and Multi User": [
          "Authentication (Single User) - Part 1",
          "Authentication (Single User) - Part 2",
          "Authentication (Single User) - Part 3",
          "Authentication (Single User) - Part 4",
          "Authentication (Single User) - Part 5",
          "Authentication (Single User) - Part 6",
          "Authentication (Multi Auth using Single Table) - Part 7",
          "Authentication (Multi Auth using Single Table) - Part 8",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 9",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 10",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 11"
        ],
        "Admin Panel - Template Mastering": [
          "Admin Panel HTML template (Bootstrap 5)",
          "Installing Laravel 9 and Creating Database",
          "Layouts Creation and Home Page",
          "Login and Forget Password Page",
          "Create migration and models for admins table",
          "Admin middleware",
          "Creating demo admin user in phpmyadmin",
          "Setup email and add mailtrap account",
          "Login, logout, error message and admin guard setup",
          "Forget password, sending email with reset link",
          "Reset password complete",
          "Admin profile information and photo update",
          "Converting the admin panel to Bootstrap 5 - Part 1",
          "Converting the admin panel to Bootstrap 5 - Part 2",
          "Converting the admin panel to Bootstrap 5 - Part 3"
        ],
        "FrontEnd - HTML Template": [
          "About HTML Template (Bootstrap 5)"
        ],
        "FrontEnd - Template Mastering": [
          "Rename Admin Panel Laravel Folder to Personal Website Project",
          "Front End Template Mastering - Part 1",
          "Front End Template Mastering - Part 2",
          "Front End Template Mastering - Part 3"
        ]
      },
      "requirements": [
        "Basic Knowledge in PHP Language",
        "Basic Knowledge in OOP Concept",
        "Knowledge about using local server. Ex: xampp",
        "Basic knowledge about HTML, CSS and Bootstrap",
        "Basic knowledge about using code editor like Notepad++, Sublime Text or any"
      ],
      "description": "In this course, I have taught the students the Laravel framework from scratch. After showing all the basics of Laravel, authentication system, template mastering etc., I have developed a complete personal portfolio website with the latest version of Laravel, Laravel 9.\n\nThe persons who are very beginner in Laravel and only have few php and oop idea, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have coded following the standard and showed some advanced features.\nAdmin Panel Features:\nAdmin can change the website color\nAdmin can change logo, favicon etc.\nAdmin can change header information.\nAdmin can control the home page information.\nAdmin can create, edit and delete blog categories.\nAdmin can create, edit and delete blog posts.\nAdmin can create, edit and delete services.\nAdmin can create, edit and delete portfolios.\nAdmin can create, edit and delete skills.\nAdmin can create, edit and delete education.\nAdmin can create, edit and delete experience.\nAdmin can create, edit and delete testimonials.\nAdmin can create, edit and delete client sections.\nAdmin can create, edit and delete social icons.\nAdmin can control counter section.\nAdmin can control the share and comment section during post.\nAdmin can change his own photo, information and password.",
      "target_audience": [
        "Persons who want to learn a php framework from scratch",
        "Persons who want to learn making a complete web application from beginning",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to learn creating a personal website in laravel"
      ]
    },
    {
      "title": "Building FullStack E-Commerce App using SpringBoot & React",
      "url": "https://www.udemy.com/course/building-fullstack-e-commerce-app-using-springboot-react/",
      "bio": "Spring into Action: Unleashing E-Commerce Magic with React & SpringBoot",
      "objectives": [
        "Developers aspiring to excel in FullStack with SpringBoot and React.",
        "Web developers eager to build robust with SpringBoot and React.",
        "Students looking to kickstart their careers with hands-on experience in FullStack development.",
        "Experienced coders transitioning to FullStack, specializing with SpringBoot and React.",
        "Entrepreneurs seeking to understand the tech behind e-commerce apps built with SpringBoot and React.",
        "Tech enthusiasts exploring the world of FullStack using SpringBoot and React.",
        "Managers and Project leaders aiming to gain insights into FullStack e-commerce app development with SpringBoot and React..",
        "IT professionals wanting to expand their skill set with SpringBoot and React for e-commerce projects.",
        "Innovators excited to create cutting-edge e-commerce solutions with SpringBoot and React..",
        "Anyone with a passion for tech, ready to dive into FullStack using SpringBoot and React."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Github Strategy",
          "Solution Walkthrough",
          "Demo"
        ],
        "Spring Initializr": [
          "Spring Initializr Introduction",
          "Spring Initializr",
          "Setting up Project IDE",
          "Creating Folder Structure",
          "Setting up Application",
          "Seed Data Setup",
          "Docker Setup",
          "Visualizing Data using MySQL Workbench",
          "Creating Brand JPA Entity",
          "Creating Type Entity",
          "Creating Product Entity",
          "Setting up Associations"
        ],
        "Implementing Repository": [
          "Repository Pattern Introduction",
          "Github Strategy",
          "Creating Repositories",
          "Creating Models",
          "Creating Services",
          "Implementing Brand Service",
          "Implementing Type Service",
          "Creating Product Service Implementation - 1st Part",
          "Creating Product Service Implementation - 2nd Part",
          "Creating Product Controller -1st Part",
          "Creating Product Controller - 2nd Part",
          "Demo of APIs",
          "Adding Swagger Implementation"
        ],
        "Implementing Specification Pattern": [
          "Specification Pattern Section Introduction",
          "Creating Pagination Support",
          "Creating Specifications",
          "Creating the Brand Specification",
          "Finishing the other Criterias",
          "Controller Implementation using Specification Pattern",
          "Demo"
        ],
        "Creating React Application": [
          "Introduction to React Application",
          "About ViteJS",
          "Creating Client Project Structure",
          "Running the Application",
          "Understanding React Folder Structure",
          "Understanding Code",
          "State Hook example",
          "Understanding the State Hook code",
          "Calling Products API using useEffect hook",
          "Implementing Cors Config",
          "Fetching Products using Promise",
          "Adding a Typescript interface for Product",
          "Files and Folder Organization",
          "Fixing the import issue"
        ],
        "Creating React Component": [
          "Getting Started with React Component",
          "Creating Catalog Component",
          "Adding Material UI",
          "Creating Product List Component",
          "Creating Product Card Component",
          "Finishing Product Card and Product List",
          "Creating AppBar",
          "Creating ThemeBuilder",
          "Applying Theme Provider",
          "Making AppBar Static"
        ],
        "Implementing React Router": [
          "Getting Started with React Router",
          "Installing React Router",
          "Creating Home and Contact Page",
          "Creating Router",
          "Creating Product Detail Page and Activating Route",
          "Creating NavLinks",
          "Activating NavLinks",
          "Activating Account Links",
          "Understanding the NavLink Code",
          "Updating Product Card",
          "Loading the Product",
          "Designing the Product Detail Page"
        ],
        "Implementing Best Practices": [
          "Introduction to Best Practices",
          "Centralizing the API Requests using Axios",
          "Modifying the Catalog and Product Details Page",
          "Creating Not Found Page",
          "Creating Server Error",
          "Implementing Error Interceptors",
          "Router Changes",
          "Implementing Toast Notification",
          "Implementing Custom Error Exception",
          "Demo of Exception Handler",
          "Creating Spinner Component",
          "Implementing Spinner"
        ],
        "Implementing Basket Functionality - Server Side": [
          "Getting Started with Basket Functionality - Server Side",
          "Importing Redis Library in Maven",
          "Creating Basket Class",
          "Creating Basket Item Class",
          "Making changes in Application.Yaml file",
          "Creating Basket Repository",
          "Creating Basket and BasketItemResponse class",
          "Creating Basket Service",
          "Implementing Basket Service Implementation - 1st Part",
          "Creating BasketResponse Mapping",
          "Implementing BasketItemResponse Mapping",
          "Basket Service Implementation - 2nd Part",
          "Basket Service Implementation - 3rd Part",
          "Creating Basket Controller - 1st Part",
          "Creating Basket Controller - 2nd Part"
        ],
        "Implementing Basket Functionality - Client Side": [
          "Getting Started with Basket Functionality - Client Side",
          "Creating Basket & Basket Item Type",
          "Redux Introduction",
          "Installing Redux Libraries",
          "Creating the Redux Store",
          "Creating Basket Slice",
          "Making Provider changes in Main file",
          "Creating the Basket Page",
          "Creating Basket Skeleton",
          "Creating Basket Service - 1st Part",
          "Creating Basket Service - 2nd Part",
          "Implementing Basket Service -3rd Part",
          "Implementing Increment and Decrement Quantity",
          "Installing CUID2 Package",
          "Updating Agent Code",
          "Exporting Basket Functionality from Agent",
          "Modifying the Basket Page",
          "Updating Header with Basket State Changes",
          "Add To Cart Demo"
        ]
      },
      "requirements": [
        "Basic Java, SpringBoot & React Skills"
      ],
      "description": "Welcome to \"Building FullStack E-Commerce App using SpringBoot & React\" – an immersive learning experience meticulously crafted for developers eager to master the art of full-stack e-commerce application development with SpringBoot and React.\nEmbark on a transformative journey where you'll harness the powerful synergy of SpringBoot's robust back-end capabilities and React's dynamic front-end framework. Over the course of 17+ hours, you'll transition from grasping core concepts to applying industry-standard design patterns.\n\n\nYour comprehensive curriculum includes:\n- Mastery of SpringBoot essentials and advanced features\n- Efficient data access with Spring Data JPA\n- Elegant implementation using Specification Pattern\n- Mapping Via Builder pattern and MapStruct Libraries\n- Data Integration using MySql & Redis via Docker\n- Secure user authentication and authorization with Spring Security\n- Creating RESTful APIs with Spring Boot for seamless data communication\n- React best practices, including redux, thunk api, and many more\n- Styling with Material UI, roboto, styled and many more for a polished app.\nWhether you're an intern, junior developer, senior developer, tech lead, architect, or senior architect, this course offers a tailored path to elevate your expertise. You'll engage in hands-on projects, reinforce your learning with quizzes, and stay updated with yearly content refreshes.\nDive into 15 comprehensive sections, spanning over 206+ videos, all geared towards a pragmatic and thorough understanding of full-stack e-commerce development. Plus, enjoy lifetime access to all course materials and future updates.\n\n\nWho Should Enroll?\n- Interns: Build a solid foundation for a tech career by applying academic knowledge to real-world projects.\n- Junior Developers: Upgrade your skill set with advanced full-stack e-commerce development practices.\n- Senior Developers: Lead the way in e-commerce application development.\n- Tech Leads: Direct cutting-edge projects with confidence, leveraging SpringBoot and React.\n- Architects: Incorporate insights into your design strategies for innovative, scalable e-commerce solutions.\n- Senior Architects: Pioneer the integration of robust architecture, leading high-impact projects with expertise.\n\n\nCourse Stats: What You'll Get\n- Fast-Track Your Learning: Dive into a meticulously crafted course designed for maximum engagement and superior learning outcomes.\n- 15 Engaging Sections: Traverse the depths of full-stack e-commerce development, from fundamentals to advanced design patterns and beyond.\n- 206+ In-Depth Videos: Each video is a stepping stone, providing clear explanations, step-by-step instructions, and real-world applications.\n- 17+ Hours of Content: Immerse yourself in a comprehensive curriculum that fits your schedule, accessible anytime, anywhere.\n- Yearly Updates: Stay in sync with the latest trends and best practices in SpringBoot and React as technology evolves.\n- Lifetime Access: Your one-time enrollment grants you unrestricted access to all current and future course content—forever.\n\n\nThis isn't just another course—it's your gateway to pioneering e-commerce applications that are as smart and efficient as they are scalable. The future of e-commerce development begins with your decision to join us. Let's embark on this journey together!",
      "target_audience": [
        "Developers: Master FullStack development with SpringBoot and React to build dynamic web applications",
        "Web Developers: Expand your expertise by integrating SpringBoot and React for modern web development.",
        "Students and Graduates: Kickstart your career with hands-on FullStack skills in SpringBoot and React..",
        "Experienced Coders: Transition to FullStack specialization with SpringBoot and React.",
        "Tech Entrepreneurs: Understand the tech behind e-commerce with SpringBoot and React for informed business decisions.",
        "Tech Enthusiasts: Explore FullStack magic using SpringBoot and React for personal or professional projects.",
        "Tech Enthusiasts: Explore FullStack magic using SpringBoot and React for personal or professional projects.",
        "IT Professionals: Expand your skill set with SpringBoot and React for competitive advantage.",
        "Innovators: Create cutting-edge web apps with SpringBoot and React to bring your ideas to life.",
        "Curious Learners: Explore SpringBoot and React to satisfy your curiosity and personal growth."
      ]
    },
    {
      "title": "The Web3 Rust Course - NEAR Smart Contracts Web Development",
      "url": "https://www.udemy.com/course/the-web3-rust-course-near-smart-contracts-web-development/",
      "bio": "The Officially Partnered Industry Intro Certified NEAR Protocol Web Development Course from Zero to Certificate",
      "objectives": [
        "Code along and develop an impressive Smart Contract on NEAR Example from scratch for your portfolio",
        "Learn how to develop professional Web Applications with modern Tools & Libraries Including NodeJs, Cargo, Rust SDK, JavaScript and much more",
        "Get interview-ready by understanding how Rust and WebAssembly (Virtual Machine) works",
        "Prepare for your industry level certification course and exam by gaining the key basics throughout this course for the NEAR Protocol and Blockchain Technology",
        "How to write code with functions on Rust, read basic smart contracts, and clearly document your thought process",
        "Interact with an online community of thousands of developers and practice team and communication oriented professional soft skills",
        "Learn key soft skills to work in a Web3 community as a community growth member both technical or non technical"
      ],
      "course_content": {
        "What Is Web3 Exactly": [
          "Welcome to Web3!",
          "Important Note - How To Take This Course Depending On Your Skill Level and Goals",
          "What Is Web1",
          "What Is Web2",
          "All of Your Web3 Rust Course - NEAR Smart Contracts Questions Answered Here",
          "Centralization vs Decentralization",
          "Centralization Vs Decentralization Online",
          "More Fundamentals On Web3",
          "A Very Brief History Of The Internet",
          "The Origin Protocol",
          "A Deeper Dive Into Web2 Macro Data",
          "The Power of Web & Decentralization",
          "Build an Online Professional Presence to Boost Your Web 3.0 Career",
          "Join Our Free Online Learning Community",
          "Exercise - Meet The Community",
          "Web3 Quiz"
        ],
        "Intermediate Web3 Fundamentals": [
          "A Deeper Dive and Review of Web3",
          "Why Web3 & Decentralized Networks Matter",
          "Current Problems & Cons With Web3",
          "Current Problems & Cons With Web3 II",
          "Recap & Final Review of Web3",
          "Advanced Web3 Quiz"
        ],
        "What Is Blockchain": [
          "Introduction To Blockchain Technology",
          "How Blockchain Fundamentals Work",
          "How Blockchains Fundamentals Work (Deeper Dive)",
          "The Double Spending Problem - Bitcoin's PSS",
          "Blockchain Fundamentals"
        ],
        "What Is The NEAR Protocol": [
          "Welcome To The NEAR Protocol (What is NEAR)",
          "Introduction To The NEAR Protocol",
          "Building On NEAR",
          "Introduction To Sharding & Nightshade",
          "Explore the NEAR Ecosystem a little bit!",
          "Now Is the Time to Throw Yourself Into the Web 3.0 World"
        ],
        "Setting Up a Local Smart Contract Environment": [
          "Quick Important Note About the following sections for beginners!",
          "Building A Local Environment From Scratch",
          "Prerequisistes & Notes For This Course",
          "Create A Near Wallet on Testnet",
          "Optional Exercise!",
          "Setting up NEAR CLI And Authentication",
          "Install Rust & WASM Tool",
          "Code Out The Build Script for WASM Compiler",
          "Code Along The Test Script & The Batch Script",
          "Modifying the Cargo TOML File - Cold Along",
          "Your Web 3.0 Project Won't Sell Itself - You Must Sell It"
        ],
        "Rust Glossary Section": [
          "Quick Note About This Section",
          "What Is Rust And Why It Matters Quick Overview",
          "What Is Rust Concurrency",
          "Rust - The Borrow Checker",
          "Safe Mode and Unsafe Mode in Rust",
          "The Rust IDE Playground",
          "Hello World Example in Rust",
          "What Are Macros in Rust",
          "What Is The Print Line Println macro in Rust",
          "Print line Println Exericse in Rust",
          "What Are Datatypes in Rust",
          "How To Declare Variables in Rust - Strings Integers and Booleans in Rust",
          "Printing Variables as Arguments in Rust",
          "Exercise - Write Variables in Rust",
          "Solution - Write Variables in Rust",
          "What Are Integers in Rust",
          "Integer Range and Integer Overflow in Rust",
          "Integer Exercise Example in Rust",
          "Integer Solution Example in Rust",
          "+++ More Examples from Beginner to Advanced on Rust"
        ],
        "Introduction To Rust Functions & Unit Tests": [
          "Rust Coding & Unit Tests",
          "Exercise - Unit Test in RUST",
          "Exercise on Unit Testing",
          "Unit Test Solution",
          "Ace Your Next Web 3.0 Rust NEAR Job or Grant Interview"
        ],
        "Setting Up Rust Smart Contracts On NEAR": [
          "Quick Note About This Section",
          "Final Solution Code",
          "Download and Setup The Skeleton Project for Smart Contracts",
          "Reading Basic Smart Contract Code with RUST on NEAR",
          "Exercise - Rust Syntax",
          "Share Your Rust Knowledge",
          "Implementing Contract Basics & Functions On NEAR",
          "Conditional Operations on RUST Basics for NEAR Smart Contracts",
          "Intermediate Review of A Completed Rust Smart Contract on NEAR",
          "Communicate Your Smart Contracts and NEAR Projects with Passion"
        ],
        "Code Along More Advanced Rust Smart Contracts on NEAR": [
          "Compile a NEAR Smart Contract WASM",
          "Exercise - Create A NEAR Sub Account with Terminal",
          "Solution - Create A NEAR Sub Account with Terminal",
          "Deploy Your First Smart Contract With NEAR",
          "Interact with RUST View Functions on NEAR Smart Contracts Part I",
          "Interact with RUST View Functions on NEAR Smart Contracts Part II",
          "Interact with Smart Contracts with RUST and NODE on NEAR",
          "Interacting and Authenticating NEAR Blockchain Data",
          "Exercise - Call The Password Guess From the Live Rust Smart Contract",
          "Solution - Call The Password Guess From The Smart Contract",
          "Clear The State of The Sub Account!"
        ],
        "Cybersecurity Debugging and Cryptography with NEAR Smart Contracts": [
          "Cryptographic Hashing with Sha256 on Rust SDK",
          "Code Along - Unit Test Debug Hash in Rust",
          "Cryptographic Hashing out Strings in Rust for NEAR",
          "Code Along Function For Password Guess",
          "Assertions in Rust for NEAR",
          "Solution For Assertions in Rust for NEAR",
          "Security Vulnerability Modifications to Smart Contracts",
          "Solution for Hashing Modifications",
          "Debugging Security Code in Rust for NEAR Smart Contracts",
          "Exercise - Clean the state and compile the updated NEAR smart contract",
          "Solution - Clean the state and compile the updated NEAR smart contract",
          "Batch Deployment and Final Security Mods",
          "Final Solution File Package"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know inside. *Basic Rust, Solidity, JavaScript, C++ & Web Development is a plus!",
        "It helps to have a 'put-yourself-out-there' attitude in order to succeed in this course"
      ],
      "description": "The Officially Partnered Industry Level Certified NEAR Protocol Web Development & Community Integration Course - Zero To Certificate.\nThis course is supported and partnered officially with the NEAR University and Academy to prepare you for their curriculum and placements into their developing community with plenty of early opportunity for those who wish to work hard and succeed in something new and exciting.\n---\nLearn how to write and read Rust Smart Contracts - Developed on NEAR - NodeJs + Rust SDK + Cargo for  Smart Contracts (built on NEAR) - Blockchain\nBecome a entry level Web Developer for RUST in Web3 by learning the best in demand skills taught by renown engineer and full stack developer Clarian North. Join in early on an exciting technology implementing global changes to multiple industries and businesses.\nThis course was designed to integrate you into one of the most important and highest regarded Layer 1 level Protocols in Blockchain NEAR is a carbon neutral public blockchain revolutionize the internet as well as teaches the very latest Web Development techniques and version of using the Rust SDK for writing Smart Contracts\n---\nJoin a live online school and community of mentors and developers for supportive blockchain discussions, debugging, hackathons and more! Level up with a curriculum by an instructor who has worked in the tech and entertainment industry for top brands and independent projects which have gone viral all over the world.\nThis course is also flexible and you can move through sections at different paces depending on your entry skill level: The “beginner” path (full course for total noobs to porgramming and blockchain including NEAR and the “experienced path” (condensed version for those enrolled with prior web development and programming experience) - you are free to choose the path which serves your goals and time requirements the most! :-)\n---\nWeb3 and decentralization is changing the way the world does business as part of the most disruptive technology (blockchain) since the very early days of the internet and you can build and learn how to use them in order to shape your own path whether you're looking for work in development, social media, community management, business development and many many more opportunities!\n\n\nNEAR has provided over 1 Billion dollars of grants and has amazing community integration tools at your disposal waiting for you to get in early and startin development. We code along step by step by diving into all the key industry standard fundamentals, discover an impressive sum of techniques and examples as well as expose you to advanced concepts and the best practices and proper conventions along the way.\nYou will be provided with clear and deep dives into theory, project case studies and many examples, including assignments and exercises and build a strong understanding of Web3 and Smart Contract development for interviews that are directly related to the NEAR University and Academy - We put the most hours in to get the most out of it  :)\nThis is the only Web3 officially partnered certified NEAR and Rust Web Development focused course on Udemy. It's an all-in-one topic by topic focused approach that will take you from the very fundamentals of Smart Contracts and programming, all the way to understanding the ecosystem, the fundamentals of blockchain and more.\nWelcome to “NEAR Protocol Rust Web Development & Community Integration Course!”\nThis course will teach you not only fundamentals for Web3 and decentralization, but entry level coding and Web Development in a clear project driven way from scratch, adhering to employable skill expectation and the best practices you need. You will learn all the key fundamentals as well as advanced concepts and related topics to turn you into an entry level Web Developer prepared for the NEAR Grant Programs as well as the NEAR University level placements and programs. It's up to you if you wish to move directly into the community after this course or continue to learn and prepare yourself for an exciting new journey ahead.\nThis is a succinct and practical course because we deep dive into the key important things you need to know and learn to read and authenticate blockchain code, decentralized networks with smart contracts for minting and transferring tokens and so much more!\nNo matter if you know nothing about Blockchain and NEAR and Rust or if you already got some basic Web Developer knowledge (not required - the flexibility on how to navigate through the course is included inside), you will get tons of useful NEAR based and Smart Contract information and knowledge out of this course!\nOur goal with this course is to teach you the working skills you need to build your own Smart Contracts with Rust, get a job in the blockchain space whether technical or non technical, or innovate the world at your own choosing with your new found powers. With these skills you can apply directly for NEAR grants or enter the NEAR Academy and University to build a path that can lead you to jobs, use it in your own projects or simply enhance your portfolio as a developer or community growth manager - whatever your goal is: This course will take you there!\nThe world is shifting more and more towards learning and working at home. This is an opportunity for you to start learning the most in demand skills, showcase those Web Development skills, and gain the experiences you need to develop your passion into something real.\n--------\nThis is the Officially Partnered Industry Level Certified NEAR Protocol Web Development & Community Integration Course - Zero To Certificate.\nAfter completing the final course material, you will have entry level technology knowledge on blockchain and Web3, writing smart contracts and ready for NEAR industry Level Certification\nWhat's in this course?\n• Introductions to the key Blockchain tools you need including: Reading Smart Contracts, Understanding Decentralized Networks, NEAR, tools such as the Rust SDK and basic JavaScript\n• All the core basics: How Smart Contracts work (building and deploying and smart contract from scratch on your computer at home) and how to implement with the best practices.\n• Web Development under the hood: Rust and JavaScript, writing basic batch files and shell scripts\n• Working with structs and functions to deploy smart contracts\n• Gain a stronger knowledge of how Blockchain technology works under the hood and use it in order to strengthen your industry level understanding for certification\n• Building Website & Application Fundamentals: Node Js, Batch scripts, Toolchains, Libraries, Package files, and modiying package script management files\n• Rust and WebAssembly Compiling\n• Make your own NEAR Wallet step by step\n• Work fluently on the NEAR Testnet to run function calls and interact with Smart Contracts live\n• Authenticate Smart Contracts by reading the NEAR explorer and understanding the highlighted metadata\n• Writing basic test modules in the Rust Library file with key differences between assertion methods\n• Cryptographic hashing functions with Sha256\n• Learn basic cybersecurity vulnerabilities in Web3\n• Migrating and Updating Smart Contracts with Cargo\n• Learn Rust Fundamentals and for Smart Contract Creation Techniques\n• An in-depth understanding of the NEAR Protocol and its benefits and importance in the BlockChain Space\n• Developing a Local Environment for writing Smart Contracts\n• Implementing Authentication\n• Unit Testing With Rust\n• Encode private data on the Blockchain securely\n• And so much more - scroll through our full curriculum to see the full breakdown of lessons and projects!\nThis course is a focused employable bootcamp into preparing your for industry entry level Certification of working on the NEAR Public Blockchain\nAnd in case if you are wondering if you need any experience to get started -\nYou do not need any web development or programming knowledge to get started!\nThis course requires zero prior knowledge to get started! Some basic web development skills including Javascript along with Solidity or Rust would definitely move you through the course at a much faster pace than others, however, this course includes introductory sections (they are purely optional) so that we all move through the key lessons together regardless our skill level!\nPlease see the full curriculum, the free preview videos and whenever you’re ready...\nLooking forward to seeing you in the lessons!",
      "target_audience": [
        "Anyone looking for work and fresh opportunities in the growing and early Web3 Industry",
        "Take this course if want to learn how to build and read smart contracts from scratch with modern Web Development Technology",
        "Take this course if are interested in working on a blockchain project in the future and entering the industry",
        "Take this course if you want to learn more about how to start working in an industry capacity for a top level Blockchain"
      ]
    },
    {
      "title": "Python programming with MySQL database: for Data Science",
      "url": "https://www.udemy.com/course/python-programming-with-mysql-database-from-scratch/",
      "bio": "Learn Python programming, HTML web pages and MySQL database Concept and techniques in ONE course",
      "objectives": [
        "Create your own stunning, html layouts for awesome websites",
        "Start your own online business as developer",
        "Create web applications and websites",
        "Learn Python coding for Data Science coding",
        "Master front-end development using HTML, Python coding and back-end development using MySQL database",
        "Apply HTML, Python and MySQL Beginner to start code on real-world tasks",
        "Learn to apply fully function dynamic web applications using Python coding with MySQL",
        "Identify and create analytical reporting system with MySQL RDBMS",
        "Learn What is Generative AI / Gen AI",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Get Course requirements",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "HTML": [
          "Introduction HTML",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "Overview of a Webpage",
          "Structure of a Full HTML Webpage",
          "First Hello World! Webpage"
        ],
        "HTML Basic": [
          "Heading tags",
          "Paragraph",
          "Formatting Text",
          "List Items Unordered",
          "List Items Ordered",
          "Classes",
          "IDs",
          "Comments",
          "Heading tags exercise"
        ],
        "HTML Intermediate": [
          "Images",
          "Forms",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar - Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps"
        ],
        "HTML Advanced": [
          "HTML Audio",
          "HTML Video",
          "Canvas",
          "Iframes",
          "Input Types",
          "Input Attributes",
          "Registration Form",
          "Contact Us Form",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "Python Introduction": [
          "Introduction to Python",
          "Python vs Other Languages",
          "Why Its Popular",
          "Command Line Basics",
          "Python Installation (Step By Step)",
          "PyCharm IDE Installation",
          "Getting Start PyCharm IDE",
          "First Python Hello World Program"
        ],
        "Python Basic": [
          "Variables",
          "Data Types",
          "Type Casting",
          "User Inputs",
          "Comments"
        ],
        "Python Strings": [
          "Strings",
          "String Indexing",
          "String Slicing",
          "String Built-in Functions",
          "Formatting String (Dynamic Data)"
        ],
        "Python Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "AND Operator",
          "OR Operator",
          "NOT Operator",
          "Booleans"
        ],
        "Python Data Structures": [
          "Arrays in Earlier",
          "Lists",
          "Add List Items",
          "Remove List Items",
          "Sort Lists",
          "Join Lists",
          "Tuples",
          "Update tuples",
          "Join tuples",
          "Dictionaries",
          "Add Dictionary Items",
          "Remove Dictionary Items",
          "Nested Dictionaries",
          "Sets",
          "Add Set Items",
          "Remove Set Items",
          "Join Set Items"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No pre-knowledge is required - you will learn from basic",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Unlock the potential of Python and MySQL for data science with \"Python Programming with MySQL Database: For Data Science.\" This course is designed to teach you how to leverage Python and MySQL to work with data, build insightful analytics, and develop data-driven applications. Whether you're a beginner or have some experience with programming, this course will provide the knowledge and hands-on experience needed to use these powerful tools in data science projects.\n\n\nYou’ll begin by learning the basics of Python programming, including data types, control structures, and functions. As you progress, you’ll explore how to interact with MySQL databases using Python. Learn how to create, read, update, and delete data in MySQL, as well as how to write complex queries to extract meaningful insights from large datasets.\n\n\nThe course focuses on practical applications, guiding you through real-world examples where Python is used to analyze data and MySQL serves as the backend database. You'll also learn how to perform data cleaning, aggregation, and statistical analysis to make informed decisions. The course includes hands-on projects.\n\n\nBy the end of the course, you’ll be equipped with the skills to work with databases, analyze data, and create data science projects that use Python and MySQL efficiently.\n\n\nEnroll today and take your data science skills to the next level with Python and MySQL!",
      "target_audience": [
        "Beginner Python developers and MySQL development curious about data science",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer",
        "Anyone who wants to start Python coding with database career"
      ]
    },
    {
      "title": "Kickstart HTML, CSS and PHP: Build a Responsive Website",
      "url": "https://www.udemy.com/course/html-css-and-php-build-a-responsive-websites/",
      "bio": "Earn a professional credential learning HTML, CSS Front-End and PHP Backend Coding From Scratch",
      "objectives": [
        "Learn how to Create a Website with HTML and CSS",
        "Solid Understanding of PHP Programming Language",
        "Set up a Local Development PHP Web Server",
        "Declare and initialize PHP variables",
        "Understand and Use PHP switch statement",
        "Seperate PHP Logic and Presentation",
        "PHP Loops",
        "PHP Break and Continue",
        "Custom Function in PHP",
        "PHP Variable Functions",
        "Recursive Function in PHP",
        "Setup VirtualHost on Windows and Mac Os",
        "Understand Web Form Processing in PHP",
        "Understand and use PHP Sessions And Cookies",
        "Understand and use PHP Selection Statements",
        "Understand and use PHP Array Functions",
        "Working with Arrays in PHP",
        "String Manipulation in PHP",
        "Understand and PHP Script Tag",
        "Creating PHP Sites",
        "Understand and use Multidimensional Arrays",
        "Understand Basic if..else...elseif Statments",
        "Displaying Outputs with PHP",
        "Understand Variable Scoping in PHP",
        "Associating CSS with HTML Document",
        "Understand and Use Universal, Class and ID Selectors in CSS",
        "Working with Colors and Backgrounds in CSS",
        "Working with Borders, Margins, Links, Float and Padding in CSS",
        "Building a Responsive Website From Scratch",
        "Understand and Use CSS Media Queries",
        "Build a Simple CSS Grid System"
      ],
      "course_content": {
        "Welcome to the Course!": [
          "Course Overview"
        ],
        "Introduction to HTML": [
          "Create and save your first web page with IDE",
          "Create and save your first web page with notepad",
          "HTML Document Structure Explained",
          "HTML Basic Tags",
          "HTML Attributes",
          "Formatting Text",
          "HTML Quiz 1",
          "Working with Images in HTML",
          "Working with Links in HTML",
          "Working with List in HTML",
          "Working with HTML Table",
          "Working with HTML Form",
          "HTML Quiz 2",
          "Block and Inline Elements",
          "HTML Entities and Symbols",
          "iFrame",
          "HTML Head Element",
          "HTML Quiz 3",
          "URL - Uniform Resource Locator",
          "How to Review This Course",
          "HTML Project - Create a Simple Website"
        ],
        "Introduction to CSS": [
          "Associating CSS with HTML Document",
          "Universal, Class and ID Selectors",
          "Working with Colors and Backgrounds in CSS",
          "Working with Borders, Margins and Padding in CSS",
          "Styling Links With CSS",
          "CSS Float and Clear",
          "Positioning",
          "Source Code Introduction to Css",
          "Building a Responsive Website - Container Class",
          "Building a Responsive Website - Styling Navigation Bar",
          "Building a Responsive Website - Media Queries",
          "Building a Responsive Website - Grid System",
          "Building a Responsive Website - Footer",
          "Building a Responsive Website - Homepage",
          "Building a Responsive Website - Books Page",
          "Building a Responsive Website - Styling Contact Page",
          "Souce Code Responsive Website",
          "CSS Reference Guide"
        ],
        "Introduction to Programming with PHP": [
          "Setting Up Development Environment - Windows",
          "Setting Up Development Environment - Mac OS",
          "Creating PHP Sites",
          "PHP Script Tag",
          "Displaying Outputs with PHP",
          "Variables",
          "Variable Scope",
          "PHP Data Types - Part 1",
          "PHP Data Types - Part 2",
          "PHP Constant",
          "String Manipulation in PHP",
          "Comments",
          "Working with Arrays in PHP",
          "PHP Array Functions",
          "PHP Logic and Presentation",
          "Selection Statements - Part 1",
          "Selection Statements - Part 2",
          "Selection Statements - Conclusion",
          "PHP Loops",
          "PHP Break and Continue",
          "Custom Function in PHP",
          "PHP Variable Functions",
          "Recursive Function in PHP",
          "Setup VirtualHost on Windows",
          "Setup VirtualHost on Mac",
          "Processing Web Form with PHP",
          "PHP Sessions And Cookies",
          "Source Code Intro to PHP"
        ]
      },
      "requirements": [
        "Passion to learn",
        "You should be able to use a computer at a beginner level",
        "Able to work with web browsers to navigate the internet"
      ],
      "description": "There’s never been a better time to learn and master web development than right now. In this series you’ll learn about HTML, CSS and PHP and how to build a responsive website from scratch in hours.\nDo you want to learn how to create beautiful and responsive websites and web development? if your answer is yes then this is the right course for you.\nIn this step by step course you will begin with HTML the language that powers the web, after learning the fundamentals of HTML you will then learn how to beautify your website with Cascading Style Sheet (CSS).\nHypertext Markup Language (HTML) and Cascading Style Sheets (CSS) are the fundamentals you need, to start designing amazing websites, After learning the fundamentals of both HTML and CSS we shall then build a Responsive Website step by step.\nWhen you become comfortable with HTML and CSS you will then take your skills to the next level with the fundamentals of PHP programming. I will be teaching all you need to know to get up and running with PHP web development. Starting with setting up local development environment on your computer, to understanding the nitty-gritty of PHP programming language.\nThis is your first step to becoming a professional web developer, the knowledge you gain in this course will make it super easy to understand programming and web development and building systems.\nTimely Support !\nIf you ever encounter any problem why taking this course, don't worry I am always here to help and guide you through.\nEnroll today and get the skills and knowledge you need to succeed as a freelancer. Every minute you let by is money and opportunity that are passing you by.",
      "target_audience": [
        "Complete beginners",
        "Any person that want to build and edit their website",
        "Any person who want become a freelance web developer"
      ]
    },
    {
      "title": "Learn By Example: Angular JS",
      "url": "https://www.udemy.com/course/learn-by-example-angular-js/",
      "bio": "A complete first principles guide to Angular JS",
      "objectives": [
        "Build intermediate level web applications using the Angular framework",
        "Develop custom directives, filters, services and other Angular components",
        "Understand behind the scenes details of the digest loop, dependency injection and other Angular Constructs"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of the Javascript programming language",
        "A basic understanding of web programming, HTML, CSS etc"
      ],
      "description": "NOTE: This course uses Angular version 1.5.8 and is not compatible with Angular 2\nAngular JS is a complete re-imagination of how web applications should be built. It takes best practices, learnt the hard way, and makes them super simple for everyone to use. Learn by example, in small easy-to-digest bits.\nLet's parse that.\nA complete re-imagination: Angular introduces a whole bunch of new concepts, which seem daunting but you'll soon find that they are essential building blocks, your applications *just work*, are long-lived and easy to maintain\nBest practices made super simple: The model-view-controller design pattern, dependency injection, view-agnostic code, testability - Angular sets up structures which ensure that developers write code the right way\nIn this course, we will learn by example. Each example is self-contained, has its source code attached, and gets across a specific Angular use-case. Each example is simple by itself, but they come together as building blocks to build complex use cases.\nWhat's included in this course:\nInstalling and setting up a basic web server with Angular libraries\nAngular basics: Templates, controllers, directives, scopes, services, filters, expressions and data binding\nAngular in-depth: Custom directives for template expansion and DOM manipulation, scope inheritance and isolated scopes, custom filters and comparators, forms and validation, routing and single page applications\nAngular behind the scenes: The $watch list, $apply function and the $digest loop, dependency injection and service recipe types",
      "target_audience": [
        "Yep! Students who understand Javascript and have built simple web applications",
        "Nope! Students who have not been exposed to any kind of web programming"
      ]
    },
    {
      "title": "Introduction to Sitecore Fundamentals",
      "url": "https://www.udemy.com/course/introduction-to-sitecore-fundamentals/",
      "bio": "An Introduction to Sitecore",
      "objectives": [
        "Learn the basics on how to access and use Sitecore.",
        "Learn the basic Sitecore terminologies and functionalities.",
        "Learn how to use the Content Editor and Experience Editor.",
        "Explore the Sitecore application and its features.",
        "Learn the Sitecore's architecture and the different user roles."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge about websites.",
        "Basic knowledge on HTML and CSS.",
        "Basic knowledge on Web Content Management Systems."
      ],
      "description": "This course will teach you the fundamentals of Sitecore as a Web Content Management System. You will basically learn the terminologies used, important applications, basic functionalities, and architecture of Sitecore. This course will also cover the important features and different user roles. And above all, this course will guide you on how to use, access, and explore Sitecore. This course contains lectures, quizzes, and laboratories on exploring the Sitecore application.",
      "target_audience": [
        "Students, Professionals, Content Authors and Developers who wants to learn about Sitecore.",
        "Students, Professionals, Content Authors, Developers and IT Enthusiasts who wants to explore on Web Content Management Systems."
      ]
    },
    {
      "title": "HTML CSS and SASS Bootcamp",
      "url": "https://www.udemy.com/course/build-website-with-html-css-sass-beginner-to-advanced/",
      "bio": "Learn web design & web development from scratch using HTML, CSS & Sass. We cover CSS Animation, Grid, FlexBox and Git.",
      "objectives": [
        "Fundamentals of HTML5 and CSS3",
        "Build Multiple Responsive Websites With Great UI",
        "Indept Understanding Of Page Layout",
        "Fundamentals of FlexBox and Grid System",
        "Advanced CSS Topics such as Variables, Pseudo-elements, etc.",
        "CSS Animation",
        "All Skill Levels",
        "SASS - Learn all the basics of SASS",
        "CSS Architecture",
        "Command Line, Git and GitHub"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get the best from this course"
        ],
        "Environment Setup": [
          "Environment setup - Installing necessary tools",
          "Visual Studio Code Setup",
          "Visual Studio Code Setup - EMMET Extension",
          "Emmet Solution",
          "RESOURCES AND COURSE FILES"
        ],
        "Introduction To HTML": [
          "What is HTML?",
          "HTML Syntax - Tags, Elements and Attributes",
          "Structure of an HTML Page",
          "Comments",
          "Header Tags",
          "Paragraph Tags",
          "Formatting text",
          "Unordered List",
          "Ordered List",
          "Images and Favicon",
          "Adding Audio files to a webpage",
          "Adding Video files to a webpage",
          "Forms",
          "Table",
          "Links",
          "iFrames",
          "Entities and Emojis",
          "Icon Fonts",
          "Types of Elements",
          "How to layout HTML page semantically"
        ],
        "Introduction to CSS": [
          "What is CSS?",
          "CSS Syntax",
          "Inline and Internal CSS",
          "External CSS",
          "CSS rule priority",
          "CSS Comments",
          "Colors",
          "Selectors - Classes and id",
          "Border",
          "Border - CSS Challenge",
          "Padding",
          "Margins",
          "Span Tag and Class",
          "Challenge 2 - Basic Web Page",
          "Challenge 2 - Basic Web Page - Solution Part 1",
          "Challenge 2 - Basic Web Page - Solution Part 2",
          "The Box Model - Part 1",
          "The Box Model - Part 2",
          "Universal selector",
          "Formatting Text",
          "Fonts",
          "Google Fonts",
          "Links and Pseudo-classes",
          "Buttons",
          "Absolute and Relative position",
          "Fixed Position",
          "Floats - We don't use them in modern CSS",
          "Replacing Floats with Flexbox",
          "Background image",
          "Units in CSS",
          "Media Queries for Responsive Design",
          "Debugging your code",
          "Code Faster with EMMET Extension"
        ],
        "PROJECT 1 - A Restaurant Website": [
          "Project Overview - What we would create",
          "Project Environment Setup",
          "Building the Header section - Markup",
          "Adding some global styles",
          "Building the Header section - CSS",
          "Building the Intro section - Markup",
          "Building the Intro section - CSS",
          "Building the About section - Markup",
          "Building the About section - CSS",
          "Building the Menu section - Markup",
          "Building the Menu section - CSS",
          "Building the Testimonial section - Markup",
          "Building the Testimonial section - CSS",
          "Building the Order section - Markup",
          "Building the Order section - CSS",
          "Building the Footer section - Markup",
          "Building the Footer section - CSS"
        ],
        "FLEXBOX": [
          "Flexbox Part 1",
          "Flexbox Part 2"
        ],
        "Grid System": [
          "CSS Grid System - Part 1",
          "CSS Grid System - Part 2",
          "CSS Grid System - Part 3"
        ],
        "Advanced CSS Concepts": [
          "Pseudo Classes",
          "Pseudo Elements",
          "Using the before Pseudo Elements",
          "Box Shadow",
          "CSS Variables",
          "Background"
        ],
        "CSS Animation": [
          "Transition",
          "Transform - Translate Property",
          "Transform - Scale Property",
          "Transform - Rotate Property",
          "Transform Origin",
          "Transform - Skew Property",
          "Keyframes"
        ],
        "Project 2 - Design Agency Website": [
          "Project Overview - What we would create",
          "Environment Setup",
          "Building the Header section - Markup",
          "Building the Header section - CSS - Part 1",
          "Building the Header section - CSS - Part 2",
          "Building the Intro section - Markup",
          "Building the Intro section - CSS",
          "Building the About section - Markup",
          "Building the About section - CSS",
          "Building the Service section - Markup",
          "Building the Service section - CSS",
          "Building the Pricing section - Markup",
          "Building the Pricing section - CSS",
          "Building the Testimonial section - Markup",
          "Building the Testimonial section - CSS",
          "Building the Contact section - Markup",
          "Building the Contact section - CSS",
          "Fixing the contact us section image",
          "Building the Footer section - Markup",
          "Building the Footer section - CSS",
          "Linking up various sections"
        ]
      },
      "requirements": [
        "A computer",
        "Internet Access",
        "No Previous Coding/Design Knowledge is Required - We take a beginner friendly approach before we get into advanced topics"
      ],
      "description": "This course is for beginners who want to learn web design and web development, as well as for existing web designers/developers who want to sharpen their understanding and skill in creating responsive and great websites.\nIn this web design course, we begin by going over the fundamentals of HTML and CSS, after which we look at the essentials of page layout.\nWe then create a mini project to test our understanding.\nWe also cover Flexbox, Grid layout, CSS Animation, SASS and some advanced CSS topics which you need for a good foundation in web design and web development. This would enable us to build a big project where we implement all the topics discussed.\nWe then proceed to teach about the COMMAND LINE, GIT and GITHUB, which is a tool every web developer should be familiar with.\n\n\nWHAT IS THE GOAL OF THIS COURSE?\nAt the end of this course, you would be confident about creating responsive real-world websites with HTML and CSS and your understanding of all the essentials would be solidified. Your web design and web development skills would also be sharpened.\n\n\nWHAT IS COVERED IN THIS COURSE?\n1. Introduction and VSCode setup\n2. HTML and CSS Fundamentals\n3. Build a simple Page with HTML and CSS Basics\n4. How to code HTML and CSS faster with EMMET\n5. Build a Restaurant Website\n6. FlexBox\n7. Grid Layout - With Mini project\n8. Advanced CSS Concepts\n9. CSS Animations - transitions, transforms, and Keyframes.\n10. Build a Wed Design Agency Website using many advanced concepts learned.\n11. Optimize and Host the website on Netlify.\n12. SASS - Syntactically Awesome Stylesheet\n\n\nWe are confident that at the end of this course, your web design and web development skills with HTML, CSS and SASS would be greatly improved.\n\n\nThis course is project-based.\nWe believe the best way to learn web design and web development is by practicing and that is why we build several projects including real-world responsive websites from scratch with HTML CSS and SASS. With the projects you build in this web design and web development course, you would be able to approach and any web design or web development project with clarity and confidence.\n\nLecture Approach\nThis web design and web development course with HTML, CSS and SASS take a beginner-friendly approach. We explain many advanced CSS concepts in an easy to understand manner. We cover the important basics of web development before delving into advanced areas in web development.",
      "target_audience": [
        "Beginner With no knowledge of web development",
        "Intermediate level web developers"
      ]
    },
    {
      "title": "API for beginners JavaScript Getting Started with APIs AJAX",
      "url": "https://www.udemy.com/course/javascript-apis/",
      "bio": "Explore using JavaScript XHR and fetch to connect to multiple web API endpoints retrieve JSON data and update HTML",
      "objectives": [
        "Use AJAX to get JSON data into their web pages",
        "Use XHR requests to connect to servers and APIs",
        "Explore how to connect to APIs"
      ],
      "course_content": {
        "Introduction to connecting to APIs": [
          "API course introduction",
          "Source Code and downloadable files for the course.",
          "web developer setup",
          "JavaScript XHR request AJAX",
          "Tweak and Adjust AJAX request",
          "JSON methods Parse to JavaScript Objects",
          "Quick Jokes api Click Button Get Joke",
          "Code Tweak AJAX.",
          "Getting Results AJAX",
          "Error handling and updates",
          "Introduction JavaScript fetch",
          "Fetch array objects",
          "fetch response methods",
          "Fetch Error Handling",
          "Fetch Adding Headers Params",
          "Using myJSON endpoints",
          "Short functions new JavaScript",
          "More fun with APIs",
          "Country Questions mini app",
          "Country Application complete.",
          "API Conclusion Lesson",
          "Resources and Source Code"
        ],
        "Bonus Section more JavaScript coding Examples and Code snippets": [
          "HTTPrequest and Fetch",
          "JSON and JavaScript",
          "Extended Resource Compendium"
        ]
      },
      "requirements": [
        "JavaScript Experience and HTML and CSS",
        "You should have web development Experience"
      ],
      "description": "Access several popular web APIs and retrieve response content for web applications.  Step by step instruction on how to access web APIs using JavaScript XHR and fetch to get JSON data and update your web content.\nJavaScript is a prerequisite to this course - do not take this course if you do not have JavaScript core knowledge\nHTML and using an editor is also a prerequisite to the course - the scope of the course is to focus on JavaScript APIs\nThis course covers how to make AJAX requests using the XMLHttpRequest within JavaScript as well as fetch.  JavaScript code knowledge is a prerequisite for the course.  Scope of this course is focused on using JavaScript to connect to web APIs.\nExamples and source code accessing over 7 different APIs\nCourse Covers\nExplore what XHR is and how it works\nHow to use JSON response data\nConnect to Joke API to get new content and update it in your HTML page\nJavaScript Objects and how it relates to JSON data\nHow to iterate JSON data and output it on your HTML\nUse JavaScript fetch\nError handling and responses\nSetting up your own JSON endpoints to practice connecting to JSON content\nES6 JavaScript fetch and short functions\nLearn how to build an api that output country data\nOnline resources and more\nConnecting to web APIs\nPractice AJAX\nYou'll get friendly support in the Q&A area and all the source code available for download.\nYou will be amazed at how easy it can be to do some much.\nGo ahead and hit that \"take this course\" button to start learning the how to use JavaScript to connect to web APIs Today.\nTaught by an instructor with over 20 years of web development experience, ready to help you learn and answer any questions you may have.\nWhat are you waiting join now to start learning JavaScript API connections, you have nothing to lose.",
      "target_audience": [
        "Web developers who want to practice connecting to APIs",
        "Anyone who wants to use JavaScript xHR to connect to APIs",
        "Anyone who wants to use JavaScript fetch to connect to APIs",
        "Anyone who wants to learn more about XHR",
        "JavaScript developers"
      ]
    },
    {
      "title": "Open Source Web GIS Development",
      "url": "https://www.udemy.com/course/web-gis-development-2021/",
      "bio": "Spatial data visualization for better understanding",
      "objectives": [
        "Leafletjs",
        "GeoServer",
        "JavaScript",
        "Open-Source web-GIS development",
        "Bootstrap",
        "HTML and CSS",
        "User Interface design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Basic overview of the course",
          "Code and demo dataset",
          "Overview of the project"
        ],
        "Leaflet mapping": [
          "Sorry for the background noise",
          "Overview of this section",
          "Leaflet basic setup",
          "Leaflet layer control",
          "Demo dataset",
          "Loading shapefile to leaflet map",
          "Layer control for building dataset",
          "Sidebar layer controller",
          "Sidebar layer controller into action",
          "Code management",
          "Summary",
          "Leaflet quiz"
        ],
        "GeoServer": [
          "Overview of this section",
          "Geoserver installation",
          "Upload data to the geoserver",
          "Create style for the maps"
        ],
        "Map layer managing": [
          "Overview of this section",
          "WMS request in leaflet",
          "Layer card generator",
          "Layer switch option",
          "Layer visualization by default",
          "Map opacity controller",
          "Map legend control"
        ],
        "Basic tools for web-GIS development": [
          "Overview of this section",
          "Mouse coordinate",
          "UI development for basic functions",
          "Default map view",
          "Full browser map view",
          "Print map",
          "BetterWms implementation",
          "CORS enable in geoserver"
        ],
        "Extra things": [
          "Adding navbar",
          "About page",
          "WMS map zindex (bug solving)"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JS"
      ],
      "description": "This course is mainly designed for the peoples who are highly interested in the web-mapping/web-GIS development. In this course, I mainly focused on the leaflet, JavaScript and GeoServer. Since it is a practical-based course, I directly started to write the code rather than making slides. Inside the course, you will find simple, effective, and alternative ways to do the tasks. At the end of this course, you will build a very nice geospatial data visualization portal.\nLeaflet: Leaflet is the leading open-source JavaScript library for mobile-friendly interactive maps. Weighing just about 39 KB of JS, it has all the mapping features most developers ever need. Leaflet allows developers without a GIS background to very easily display tiled web maps hosted on a public server, with optional tiled overlays. It can load feature data from GeoJSON files, style it and create interactive layers, such as markers with popups when clicked.\nGeoServer: GeoServer implements industry-standard OGC protocols such as Web Feature Service (WFS), Web Map Service (WMS), and Web Coverage Service (WCS). Additional formats and publication options are available as extensions including Web Processing Service (WPS), and Web Map Tile Service (WMTS). GeoServer aims to operate as a node within a free and open Spatial Data Infrastructure. Just as the Apache HTTP Server has offered a free and open webserver to publish HTML, GeoServer aims to do the same for geospatial data.",
      "target_audience": [
        "GIS developers",
        "Anyone who is interested to work on spatial data"
      ]
    },
    {
      "title": "APIs in Action: Build API-Based Applications",
      "url": "https://www.udemy.com/course/apis-in-action-build-api-based-applications/",
      "bio": "Learn API Basics, Develop 3 API-Based Applications, Understand HTTP, XMLHttpRequest, JSON and XML Basics!",
      "objectives": [
        "Understand what an API is",
        "Learn how to make the best use of APIs",
        "Develop API-Based applications",
        "Use XMLHttpRequest object in JavaScript and jQuery"
      ],
      "course_content": {
        "Introduction to APIs": [
          "Applications You are Going to Develop",
          "What is an API?",
          "API: Real-World Comparison",
          "APIs in Action"
        ],
        "Theory behind APIs": [
          "API Vs Web Service",
          "HTTP Basics",
          "HTTP Status Codes",
          "SOAP Vs REST",
          "XML Vs JSON",
          "When and Why are APIs Most Useful?"
        ],
        "Let's Develop API-Based Applications": [
          "Currency Converter - Part 1",
          "Currency Converter - Part 2",
          "Currency Converter - Part 3",
          "Currency Converter - Part 4",
          "Language Detector - Part 1",
          "Language Detector - Part 2",
          "Language Detector - Part 3",
          "World Clock - Part 1",
          "World Clock - Part 2",
          "World Clock - Part 3",
          "World Clock - Part 4",
          "World Clock - Part 5",
          "World Clock - Part 6"
        ],
        "BONUS Section": [
          "BONUS Lecture: Special OFFER on Our Other Course"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript helpful"
      ],
      "description": "APIs (Application Programming Interfaces) are gaining popularity nowadays among businesses in different industries. APIs allow us to create applications that access the features or data of an operating system or application. This course \"APIs in Action: Build API-Based Applications\" helps you understand the basics of API and also to make use of existing APIs to develop your own applications from scratch.\nBy completing this course, you will understand basic AJAX concepts, JSON and XML processing and also web application development. You will learn how to use XMLHttpRequest object in JavaScript as well as jQuery.\nThe applications you are going to develop as part of this course are\nCurrency Converter\nLanguage Detector\nWorld Clock",
      "target_audience": [
        "Web developers",
        "People interested to learn about APIs",
        "People who want to develop applications using free APIs"
      ]
    },
    {
      "title": "ArcGIS Web Maps with HTML, JS, CSS, and off the shelf tools",
      "url": "https://www.udemy.com/course/design-web-maps-with-html-js-css-and-/",
      "bio": "You will learn how to make maps with ArcGIS Online Configurable Apps and Web Appbuilder Developer (Coding tips provided)",
      "objectives": [
        "Essentials of web programming and creating online mapping applications"
      ],
      "course_content": {
        "Intro": [
          "Introduction"
        ],
        "Capabilities of ArcGIS Online (Using off the shelf tools rather than scripting)": [
          "ArcGIS Online Overview",
          "ArcGIS Online Overview Continued",
          "ArcGIS Online: Web Map Overview",
          "ArcGIS Online: Create and Upload Data 1st Video",
          "Upload Layers from Arcmap to ArcGIS Online",
          "Web Appbuilder (Online)",
          "Create a Web Map with Configurable Apps (Online)"
        ],
        "Learning Programming": [
          "History of the Internet and Programming Basics",
          "Learning HTML and CSS",
          "Learning Javascript"
        ],
        "Customize off the shelf online maps with programming": [
          "Popups: Methods 1 and 2 (Configure and Minimal)",
          "Popup Method 2 (no HTML)",
          "Popup Method 3 (with HTML) and adding photos in Popups",
          "Arcade (Javascript) Expressions in Web Maps",
          "CSS in a Mapping App",
          "Create a Custom Basemap",
          "Create a Webmap with Custom Basemap",
          "AGO Assistant",
          "Learning ArcGIS Server Rest Javascript API"
        ],
        "Learning Web Appbuilder Developer: half off the shelf/half customizable builder": [
          "Web Appbuilder (Developer) Setup",
          "Web Appbuilder (Developer)"
        ],
        "Download and Customize": [
          "Web Appbuilder Developer Part 1",
          "Customizing a downloaded Web Appbuilder Developer Script P2",
          "Story Map Intro",
          "Story Map Setup",
          "Walkthrough of Customized Storymap Script",
          "Sample App"
        ],
        "Uploading and Hosting your website": [
          "Final: Overview of Topics Covered"
        ]
      },
      "requirements": [
        "Nothing. Although if you want to follow me: A computer (preferably a PC), notepad ++ or other software to write scripts, and an ArcGIS Developer account (free) if you want to follow along. Or you can watch."
      ],
      "description": "There are several resources that can help you develop interactive online web maps. The one I will cover in this course is using the ArcGIS Online map builder platform. This class will run through how to use this resource while highlighting cool features it has that will make your maps come to life as well as understanding the basic essentials needed to get started creating web maps with the map builder on your own.\n\n\nCourse Summary/Overview:\nI will show you how to create web maps/apps with the ArcGIS Online map builder and then download them from ArcGIS Online for further customization.  I will then detail how to further refine the downloaded web maps with code (html, css, javascript). Coding changes to maps made using the ArCGIS Online map builder cannot be done without downloading it. There are also several other details about ArcGIS Online that you will need to know along the way that I will also cover as far as adding map data, creating map data, symbolizing map data, creating popups for map layers, creating cool maps exclusive to the platform such as storymaps, and more. This course should give you all the necessary tools to get started developing GIS web applications on your own with ArcGIS Online. This course is targeted for those wanting to learn more about making web maps for free. Please refer to the overview videos for further details. Thank you for stopping by to read this and I look forward to seeing you in the course.",
      "target_audience": [
        "Those wanting to learn website design and programming as it relates to maps"
      ]
    },
    {
      "title": "Learning Path: CSS: Mastering Web Design with CSS3 Selectors",
      "url": "https://www.udemy.com/course/learning-path-css-mastering-web-design-with-css3-selectors/",
      "bio": "Upgrade your selection skills using CSS3 selectors to build modern websites",
      "objectives": [
        "Master the fundamental CSS concepts, such as the box model, the anatomy of a rule set, and the types of style sheets",
        "Rename elements with classes, use descendant selectors, and understand specificity rules",
        "Become proficient with CSS3 properties such as transitions, transforms, gradients, pseudo classes, and animations",
        "Delve into modular, reusable, and scalable CSS code for more organized and smaller style sheets",
        "Understand media queries and the other fundamentals of responsive web design",
        "Reduce the excess overhead on your web pages using combinator selectors",
        "Enhance the usability of your web pages by adding dynamic content on the fly with the help of structural selectors"
      ],
      "course_content": {
        "Mastering CSS - Second Edition": [
          "The Course",
          "The Anatomy of a Rule Set and the ThreeTypes of Style Sheets",
          "The Box Model and Block versus Inline Elements",
          "Text Editors",
          "CSS Reset",
          "Chrome Dev Tools",
          "Renaming Elements: Classes and IDs",
          "Descendant Selectors",
          "Floats Introduction – Flowing Text around Images",
          "Creating a Multicolumn Layout",
          "Solving the Problems of Floats",
          "Creating Buttons with Modular CSS",
          "Multiple Classes",
          "Specificity Rules",
          "Transitions",
          "Transforms",
          "Styling a Call to Action button",
          "Gradients",
          "Starting the Navigation",
          "Using Pseudo Classes",
          "Absolute Positioning",
          "Building the Drop-down",
          "CSS Animations",
          "CSS Anima-tions(Continued)",
          "Finalizing the Navigation",
          "Fluid Grid",
          "Flexible Images",
          "Media Queries",
          "Mobile Menu",
          "Viewport Meta Tag",
          "The @font-face Property",
          "Font Kits and Font Services",
          "Google Web Fonts",
          "Subscription Font Foundries",
          "Icon Fonts",
          "2x Images",
          "The JavaScript Approach",
          "1.5x images",
          "Background Images",
          "SVG",
          "Srcset",
          "Introduction to Flexbox",
          "From Floats to Flexbox",
          "Understanding flex-grow, flex-shrink, flex-basis, and flex",
          "More Layout, More Positioning",
          "Building the Product Listing",
          "flex-wrap and align-content",
          "Changing the Display Order of Content",
          "Vendor Prefixes",
          "Next Steps",
          "Conclusion and Links"
        ],
        "Mastering CSS3 Selectors": [
          "The Course Overview",
          "The Universal Selector",
          "Linking and Action Selectors",
          "CSS2 Attribute Selectors",
          "CSS3 Attribute Selectors",
          "Localizing Your Site with Language Selectors",
          "Working with the not CSS3 Selector",
          "Combining Logic with combinator Selectors",
          "Playing with the CSS3 UI Selectors",
          "Adding Dynamic Content Before or after an Element",
          "Manipulating Inner Content with Inner Content Selectors",
          "Focusing on a Target with CSS3",
          "Getting to Know the Structural Selectors",
          "Comparing Between only-child and only-of-type"
        ]
      },
      "requirements": [
        "A basic understanding of the HTML syntax is required to take this Video Learning Path.",
        "Atom editor is recommended for editing the code."
      ],
      "description": "CSS is a deceptively simple presentation language that has significantly developed over the last few years. Front-end developers need to keep style sheets manageable and organized by taking a modular approach to building a website.\n\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nIn this Video Learning Path, we start off with a brief review of the foundations of CSS by using a good text editor to automate your authoring and set up a CSS baseline.\nWe then move on to explore the power of CSS3 selectors and how they can be intelligently leveraged to create powerful interactive sites.\nAs we proceed, we'll master the usage of a wide array of selector techniques and tricks, manipulating inner content, understanding structural selectors, and more.\nBy the end of this Video Learning Path, you’ll have complete control over every element of your web page to make it behave exactly the way you want it to.\nThis Learning Path is authored by some of the best in the field.\nAbout the Authors\nRich Finelli is a husband and a father living in Piscataway, NJ, working as a frontend developer. He’s truly passionate and excited for all frontend technologies and enjoys learning about web design and development.\nBen Fhala discovered his passion for data visualization seven years ago while he was working at Parsons in New York, in their data visualization department, PIIM. He is the owner of the online video training school, and an Adobe ACP. He enjoys spending most of his time learning and teaching and has a love for visual programming and visualization in general. He has technically directed many award-winning projects and has been part of teams that have won three Agency of the Year awards.",
      "target_audience": [
        "This Video Learning Path is for front-end developers who are willing to learn advanced concepts of CSS."
      ]
    },
    {
      "title": "HTML and CSS Crash Course for Beginners",
      "url": "https://www.udemy.com/course/html-and-css-crash-course-for-beginners/",
      "bio": "Master web development faster than you ever thought possible.",
      "objectives": [
        "Setting up a website environment",
        "Basic formatting using HTML tags",
        "Using hyperlinks",
        "Adding images",
        "Organizing text by using tables",
        "Introduction to Cascading Style Sheets (CSS)",
        "Formatting text",
        "The CSS Box Model",
        "HTML5 and new tags",
        "Adding multimedia",
        "CSS rules",
        "Advanced CSS",
        "Working with navigation menus"
      ],
      "course_content": {
        "Introducing HTML": [
          "Course Objectives and Introduction to HTML",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Course Demo Files",
          "Setting Up the Environment for Web Development - Demo",
          "Basic Formatting Tags",
          "How to Use the HTML Tags - Demo",
          "Lists, Hyperlinks and Image Tags",
          "More HTML Tags - Demo",
          "HTML Tables",
          "Table and Form Tags - Demo",
          "Course Review"
        ],
        "Introducing CSS": [
          "Introduction to CSS",
          "CSS Styles - Demo",
          "Color Keywords, Text and Fonts",
          "How to use CSS Style Properties - Demo",
          "CSS Box Model",
          "CSS Box Model and How to Manipulate Placement of Elements - Demo"
        ],
        "More HTML and CSS": [
          "Block and Inline Elements; More Tags",
          "Div Tag - Demo",
          "New HTML Tags",
          "Video, Footer and Nav Tags - Demo",
          "CSS Rule Set, Grouping, Nesting, Pseudo Classes and Pseudo Elements",
          "CSS Block Model and CSS Popup - Demo",
          "Position Property",
          "Designing a Web Site Using the CSS Concepts - Demo 1",
          "Navigational Menu - Demo 3",
          "Designing a Web Site Using the CSS Concepts - Demo 2",
          "Advanced CSS",
          "Navigational Menu - Demo 1",
          "Navigational Menu - Demo 2"
        ],
        "Conclusion": [
          "Course Wrapup"
        ],
        "HTML & CSS Online Quiz": [
          "Assessment Test"
        ]
      },
      "requirements": [
        "A text editor and a passion for learning."
      ],
      "description": "During this Learn HTML and CSS Crash course, you’ll discover necessary elements behind becoming a web developer.\nThe objective of this “crash course” is to take someone who is a “mouse and keyboard” user and teach them the essentials of web development by teaching HTML, CSS and some HTML5.This is a fundamental course for learning HTML and it does not assume that participants have prior knowledge.\nBy the end of the HTML and CSS Crash Course, you will know the essentials for creating your first website.\nIncluded:\nDemo files\nAn optional quiz to test what you’ve learned\nCertificate of completion\n\n\nWhat People Are Saying:\n★★★★★ “Simple instructions to follow. Very good for people who a fast introduction to HTML and CSS.” -Andreas Gosch\n★★★★★ “Very informative. It was the correct way to invest my time and money. Thank you for the great course.” -Yamen Suliman\n★★★★★ “In conjunction with other courses this provides great support for understanding of the HTML and CSS concepts. I'll take the opportunity to go through this again.” -James Scott\n★★★★★ “Course material and presentation are focused, well organized and appropriately targeted to the beginner. Presentation rate starts slow and is very thorough in establishing a consistent presentation of new material. Course progressively increases in presentation rate, detail and inter-connectivity of material. This course has clearly been designed and presented by someone who has mastered the ability to teach which is a rare and valuable skill. The course definitely delivers and the instructor is outstanding.” –Don Ricardo\n★★★★★ “Starts at a basic introductory level and slowly works its way up to advanced HTML and CSS concepts using clear examples. The instructor speaks in a very understandable and straightforward tone. If you have no HTML experience or even if you already have basic HTML skills, this course will reinforce your HTML knowledge and give you an excellent tutorial on CSS. I recommend it highly.” -Mario Chiara",
      "target_audience": [
        "People who want to become web designers and developers",
        "Web design students",
        "Total beginners"
      ]
    },
    {
      "title": "Learn React In a Better Way",
      "url": "https://www.udemy.com/course/learn-react-in-a-better-way/",
      "bio": "Master React main concepts and build Single Page Applications using ReactJS",
      "objectives": [
        "Master main React concepts",
        "Create Single Page Application using ReactJS"
      ],
      "course_content": {
        "Introduction": [
          "Why should you take this course",
          "Why should You choose react",
          "What is react",
          "Create hello world react",
          "Understand hello world react",
          "Tweak hello world react",
          "Render your name using react",
          "Components",
          "Who is the instructor",
          "Course concepts",
          "Teaching Methods",
          "What will you gain from this course"
        ],
        "Components and Props": [
          "Introduction",
          "Writing sample code with code pen",
          "Greeting component",
          "MyName component",
          "Greeting component with props",
          "Name component with props",
          "Greeting component with props and children",
          "Create Name component with props and children",
          "Person sample without component",
          "Person sample with component",
          "Coding Exercise - Flats",
          "Summay"
        ],
        "Next Generation JavaScript": [
          "Introduction",
          "Let and const",
          "Let and const",
          "Arrow function",
          "sum and add5 arrow functions",
          "Array map function",
          "Create new array using map function",
          "Array filter function",
          "Create new array using filter function",
          "Modules",
          "Modules",
          "Class",
          "Circle class",
          "Class advanced features",
          "Circle class using advanced features",
          "Class inheritance",
          "Instructor class",
          "Spread operator",
          "Combine arrays and combine objects",
          "Rest operator",
          "Generic sum function",
          "Destructuring",
          "Assign more then one value using destructuring",
          "Function default arguments",
          "Increment function using default argument",
          "Summary"
        ],
        "Components and state": [
          "Introduction",
          "React project setup",
          "React project setup",
          "React project structure",
          "React project structure",
          "JSX",
          "JSX",
          "Person component with props in react project",
          "Person component with more props",
          "Events",
          "InputLogger component",
          "State",
          "Increment component",
          "Unidirectional data flow",
          "Unidirectional data flow",
          "Pass function in props",
          "Count clicks",
          "Stateless vs stateful components",
          "Stateless vs stateful components",
          "Coding Exercise - Input Output",
          "Summary"
        ],
        "Debugging": [
          "Introduction",
          "Chrome Dev Tools",
          "Chrome Dev Tools",
          "React Developer Tools - installation and features",
          "React Dev Tools - features",
          "React Developer Tools - advanced features",
          "React Developer Tools - advanced features",
          "[LEGACY] React Developer Tools - using production build",
          "[LEGACY] React Developer Tools - using production build",
          "Summary"
        ],
        "Styling": [
          "Introduction",
          "External css",
          "Styling for booking flats",
          "Inline styling",
          "Add inline styling to count clicks",
          "Dynamic styling",
          "Add dynamic styling to count clicks",
          "JSX conditions",
          "Use JSX condition in count clicks",
          "Css problem",
          "CSS problems",
          "CSS modules new",
          "CSS modules new",
          "Css modules old",
          "Css modules old",
          "Coding Exercise - Input Validation",
          "Summary"
        ],
        "Advanced rendering": [
          "Introduction",
          "Rendering list",
          "Popular languages on github",
          "Rendering list with index",
          "Popular languages + rank on github",
          "Rendering list and remove item",
          "Remove language from list",
          "Rendering list with key",
          "Handle key warning",
          "Dynamic class name",
          "Button component",
          "Coding Exercise - Vacations Wish List",
          "Summary"
        ],
        "Component life cycle": [
          "Introduction",
          "Mount phase",
          "Posts component",
          "Update phase via setState",
          "Load posts from jsonplaceholder.",
          "Update phase via new props",
          "LoadingMsg component",
          "Unmount phase",
          "LoadingMsg unmount",
          "Component life cycle common methods and restrictions",
          "Component life cycle common methods and restrictions",
          "DOM update strategy",
          "Dom update strategy",
          "Coding Exercise - Hooking Logging",
          "Summary"
        ],
        "Single Page Application and routing": [
          "Introduction",
          "SPA and routing concepts",
          "SPA and routing concepts",
          "Route to component - setup",
          "Route to component - setup",
          "Route to component - router components",
          "Route to component - router components",
          "Pass info via router - match.params",
          "Pass info via router - match.params",
          "Pass info via router - location.search",
          "Pass info via router - location.search",
          "Route to non exist component",
          "Route to non exist component",
          "Route programatically using Redirect",
          "Route programatically using Redirect",
          "Route programmatically using history.push",
          "Route programatically using history.push",
          "Pass props to component via router render",
          "Pass props to component via router render",
          "Coding Exercise : Library Single Page Application",
          "Summary"
        ],
        "Projects": [
          "Introduction",
          "Tic Tac Toe Application",
          "Generic & easy to use form",
          "Authentication starter project",
          "Summary"
        ]
      },
      "requirements": [
        "Basic knowledge in JavaScript + HTML + CSS. No prior knowledge of ES6\\ES7 is needed",
        "Editor , VS code is recommended",
        "Computer and internet"
      ],
      "description": "You’re here because you know HTML\\CSS\\JavaScript and you want to move forward to popular and advanced technology. You’re here because you are react BEGINNER and you have a mission : you want to learn React from scratch in a better way : step by step so you will master its main concepts and build Single Page Applications using React\n\n\n\nI am here because i can help you accomplish your mission. I have B.s.c + M.s.c in mechanical engineering . I have been doing software applications for more than 20 years in the Hi - Tec industry and i have a lot of teaching experience. You can trust me and my teaching methods . I had learned many many technologies in the past (check my LinkedIn profile) and i know exactly what is needed to learn and how.\n\n\nCheck what students say about my course :\n\"This was one of the best courses I have ever taken. The pace and explanations were incredibly easy to follow. Everything important about React was covered and Nathan explained every little detail so well that anyone can understand it and gain a good understanding. I have learned a lot from this course, and I hope that Nathan will add others in the future.\"\n\n\n\"I love it so far I will drop a review midway through :) from my experience coming from a developer bootcamp this way of learning is much more natural and effective! To be honest, I took two other react courses both of them lecture style, and I don't feel like I got enough from the time I put in, they were both about 30 hours long with sparse assignments I felt like a zombie just typing along. I feel like I'm learning a lot! Most importantly I feel like my retention level and understanding are finally getting somewhere and I can actually apply the things I learn.\"\n\n\n\"Nathan describes very very well, i got many javascript courses at Udemy, but Nathan explaines better them others.\"\n\n\n\n\nIn this 4.5  hours course  i teach React in a better way then other courses :\n- Every complicated concept is broken to few small EASY to grasp concepts\n- Every lesson is FOCUSED on one subject only\n- Lesson are SHORT, typically less than five minutes, so you can stay focused throughout it\n\n- You have FEEDBACK after every lesson via the Quiz \\ Exercise\n- You will feel PROGRESS after every lesson via your correct solution of Quiz \\ Exercise\n- I do not believe in one project which last the whole course , because in my vast experience its much better to learn using small isolated samples . In this way you learn and master CONCEPTS which will allow you to do many projects , not just one that the lecturer did. Also small isolated code samples are better when you come back to the course to clarify specific concept (try to do this with one big project which last the whole course ...)\n- Overall you will SAVE TIME in this course compare to other courses\n\n\nThe course cover the following concepts :\n\nComponent (stateless \\ stateful)\nNext generation JavaScript\nReact project setup\nJSX\nState\nProps\nEvents\nDebugging\nUnidirectional data flow\nStyling\nRendering list and using keys\nComponent Life Cycle 16.3\nRouting using react-router\nSingle Page Application",
      "target_audience": [
        "Anyone that has basic knowledge in JavaScript + HTML + CSS and want to learn react from SCRATCH , master its main concepts and create Single Page Application using React."
      ]
    },
    {
      "title": "Using MODX CMS to Build Websites: A Beginner's Guide",
      "url": "https://www.udemy.com/course/using-modx-cms-to-build-websites-a-beginners-guide/",
      "bio": "Achieve total creative freedom using MODX, and do away with the restraints of Wordpress, Drupal and Joomla.",
      "objectives": [
        "An understanding of the versatility, power and ease of use of MODX",
        "The knowledge of how to build an attractive, functional, and responsive website step-by-step with MODX"
      ],
      "course_content": {
        "Introduction To The Course": [
          "Course Goals"
        ],
        "Setting Up For Development": [
          "Downloading MODX",
          "Hosting",
          "Creating a Database",
          "Installing MODX",
          "Key Concepts"
        ],
        "Building Your Website": [
          "Finding a Theme",
          "Your Web Page Templates",
          "Website Assets",
          "Creating Pages",
          "Working With Reusable Code And Navigation",
          "Adapting Templates For Your Website",
          "Getting User Data: The Contact Us Page",
          "Summary"
        ],
        "Search Engine Optimisation": [
          "SEO Settings And Best Practices",
          "Improve Your Website's Crawlability With A Sitemap",
          "Get Statistics With Google Analytics",
          "Webmaster Tools"
        ],
        "Social Media": [
          "Improve The Quality Of Shares By Social Media"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Knowledge of HTML",
        "Knowledge of CSS",
        "Familiarity using computers on-line"
      ],
      "description": "Content Management Systems (CMS's) help you create and manage your website on-line. This course will guide you through using MODX to build and maintain your website with total creative freedom.\nWhy does MODX win out over other CMS's? Too often they get in the way. You want to add something but you have to add it as a \"widget\" or a \"block\". You want to change the layout of your site but you don't have access to the code. MODX changes all that, you have total control over the code.\nYou may be familiar with Drupal, Joomla and Wordpress, while these are good at what they do, they all have their limitations. MODX is different, you are unrestrained, you can design your website exactly how you want, to look like you want it to look and do what you want it to do.\nThis course introduces you to the basic concepts of the MODX content management system so you can get up and running with a website that is totally under your control in no time at all. You will learn:\nhow to download MODX\nhow to host MODX\nhow to create the required database\nhow to install MODX\nwhat are the key concepts for using MODX\nfinding and using a free website theme\nadapting a theme to your requirements\ncollecting data from your users\nhow to implement search engine optimisation best practices\nhow to set up Google Analytics and Webmaster Tools to help optimise your site\nhow to make your website social media friendly\nThe objectives are to:\nUse MODX with power, ease, and flexibility\nBuild an attractive, functional, and responsive website step-by-step with MODX.\nMODX is an open source CMS software project which means it has been developed by a community of programmers around the world and is given away for free.\nThe course is made up of step-by-step video lessons in which a responsive website is built using the MODX system and a free template.\nA basic understanding of HTML and CSS is all that is required to discover the power of MODX.\nYou can learn all you need to know to start using MODX in just two and a half hours.\nYou should take this course if:\nYou have just completed one of the many HTML and CSS courses and want to check out the different CMS options open to you.\nYou use another content management system such as Joomla, Drupal or Wordpress and you want to compare it to MODX.\nThe instructor will be available to answer any questions you have during the course.",
      "target_audience": [
        "Those wanting to develop a website with complete creative control",
        "Web developers who use other content management systems",
        "Artist, designers, photogrophers who want control of their website",
        "Anyone who is ready to take the next steps after studying HTML and CSS",
        "Those wanting to earn money by building websites"
      ]
    },
    {
      "title": "Basic Java Programming with NetBeans",
      "url": "https://www.udemy.com/course/basic-java-programming-with-netbeans/",
      "bio": "Take the first step into the world of programming!",
      "objectives": [
        "They will have an excellent understanding of the fundamentals in Java programming.",
        "In this course you will get a head-start into your Java studies",
        "In this course you will learn how to program basic Java"
      ],
      "course_content": {},
      "requirements": [
        "Nothing. No prior knowledge of programming is needed.",
        "You will need a computer with access to the internet"
      ],
      "description": "Welcome to my Basic course on Java Programming with NetBeans!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as tough several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nJava, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Java over any other language. Of course, it goes without saying that Java is an excellent language, but do you know what is required of you to start programming Java?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course.\nI help you:\nInstall your IDE\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nas well as BONUS methods and code!\nWhat about NetBeans? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several lessons that will help you get comfortable with the IDE as well as more adept at program creation.\nGo no further if you're looking for the course that will guide you into the world of programming! With my course I can guarantee that the knowledge you learn will help you get a head-start in Java programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Students ready to learn the joys of programming for the first time.",
        "Students wishing to begin their studies in Java",
        "Students wanting to get more comfortable with the NetBeans IDE"
      ]
    },
    {
      "title": "HTML, CSS & Python – Web Development Certification Course",
      "url": "https://www.udemy.com/course/html-css-python-certification-course/",
      "bio": "Learn Advanced Web Development with Html, CSS, And Python Complete Job ready course",
      "objectives": [
        "The Structure of an HTML Page",
        "Core HTML Tags",
        "HTML Text Formatting & Decoration",
        "HTML Image Insertion",
        "HTML Embedding Videos",
        "Form Tags and Attributes - Buttons, Input Areas, Select Menus",
        "Parts of a CSS Rule",
        "CSS - Classes, Spans, Divisions",
        "CSS Text Properties, Margins, & Padding",
        "CSS Borders, Backgrounds, & Transparency",
        "CSS Positioning - Relative, Absolute, Fixed, Float, Clear",
        "Responsive Web Page Design using CSS",
        "Learn how to use Python 3 the right way",
        "Understand complex functions in python",
        "Be able to use python on a daily basis",
        "Create your own basic programs with python"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "No experience required"
      ],
      "description": "Welcome to the HTML, CSS  & Python – Web Development Certification Course\n\nLooking to take your coding skills to the next level? Look no further than the HTML, CSS  & Python – Web Development Certification Course, a two-part series designed to provide an in-depth look at the fundamentals of coding in HTML and CSS, as well as an introduction to Python. Whether you're in school, looking to learn a new skill, or need to learn programming for work, this course has everything you need to get started.\nWith a focus on learning by practice, this course will teach you the basics of each programming language and provide ample opportunity to put your knowledge into practice. By the end of the course, you'll have a solid understanding of Python and the ability to create small and simple applications.\nWhat sets this course apart is the way it's structured. You'll start with the basics of HTML development and move on to exploring CSS attributes, components, and positioning. Then, you'll dive into Python, learning everything from installing your text editor to writing your first lines of code. This course is designed to help you think like a programmer, not just memorize lines of code.\nThis course is perfect for beginners, as well as those with some prior programming experience looking to refresh their knowledge. And with a 100% satisfaction guarantee, there's no risk involved. If you're not happy with what you've learned, you have 30 days to get a complete refund, no questions asked.\nEnroll now and start learning today. The possibilities are endless!",
      "target_audience": [
        "Beginner Web Developers who want to learn to Code in HTML & CSS",
        "People interested to learn how to program in python",
        "People curious about programming"
      ]
    },
    {
      "title": "Vue & Django Full Stack: web app, backend API",
      "url": "https://www.udemy.com/course/vue-and-django-full-stack/",
      "bio": "Vue single page web app, Django 2 REST API with Python 3",
      "objectives": [
        "Making a Single page app with Vue",
        "Creating RESTfull API with Django"
      ],
      "course_content": {
        "Introduction": [
          "Project requirements",
          "Technology overview",
          "IDE",
          "Debugging"
        ],
        "Django Introduction": [
          "Introduction",
          "Python Installation",
          "Virtual environment",
          "Creating Project",
          "PyCharm IDE",
          "Files overview and new app",
          "Migrations",
          "User and admin",
          "Field options",
          "Field types",
          "Urls",
          "Class Views",
          "Model objects methods",
          "Templates",
          "Dynamic templates",
          "Admin customisation",
          "REST",
          "Serializers",
          "Postman & HTTP methods",
          "Token",
          "Permissions",
          "One to one",
          "One to many",
          "Many to many"
        ],
        "Django API project": [
          "Starting API project",
          "URLs",
          "Models",
          "Serializers",
          "Testing API",
          "Custom method",
          "Request Data",
          "Update and Create",
          "Ratings",
          "Token Auth",
          "Register User",
          "Restrictions"
        ],
        "Vue Introduction": [
          "Framework Introduction",
          "Vue instance",
          "Binding",
          "Conditionals",
          "Loops",
          "Events",
          "Styles",
          "Computed properties",
          "Form inputs",
          "Life cycle",
          "Components",
          "Props",
          "Emit",
          "Filters",
          "Mixins",
          "CLI"
        ],
        "Vue Project": [
          "Create Project",
          "Simple component",
          "Layout",
          "Fetching data from API",
          "CORS",
          "Item component",
          "Passing data between components",
          "Font Icons",
          "Star rating",
          "Highlight on mouse",
          "Rating in UI",
          "Local state",
          "CRUD icons",
          "Delete request",
          "Toggle components",
          "Edit component",
          "POST new record",
          "Routing",
          "Auth component",
          "Login functionality",
          "Cookies",
          "Dynamic token",
          "Logout",
          "Register user",
          "Styling"
        ],
        "Deploy Apps": [
          "Heroku overview",
          "Preparing Django for Heroku",
          "Deploying to Heroku",
          "Firebase project",
          "Deploying web application",
          "App with the live API"
        ]
      },
      "requirements": [
        "basic knowledge of Javascript",
        "basic knowledge of Python"
      ],
      "description": "Welcome to this Full stack course. This course is mainly based on Django and Vue but we will cover much more than just these frameworks. We will build full applications including backend restful API and front-end web app.\nWe will discover how to make a user authentication (register and login users), how to create a full CRUD (create, read, update and delete) and how to create our own endpoints. I will show how to communicate between the API and web app. We will discover how to style the application and restrict certain parts of it to authenticated users only. All that done with very popular frameworks. We will use javascript and python programming languages and basic knowledge of these is required.\nThis course is built from two kinds of sections: First is an introduction to the framework where I explain everything from scratch, and 2nd is a hands-on section to build a ready application. After finishing this course you will have both knowledge and also experience how to build a full-stack application using Django and Vue.\nAlso, I will show you how to deploy back-end API and front-end web app on the production server absolutely for free. You don’t need to spend any money to put your full application live.",
      "target_audience": [
        "beginner developers who wants to learn Django and Vue"
      ]
    },
    {
      "title": "Java Masterclass | Beginner to OOP Programming with NetBeans",
      "url": "https://www.udemy.com/course/java-masterclass-basic-to-oop-programming-with-netbeans/",
      "bio": "Learn Basic to Advanced Java programming Techniques and Methods as well as Object Orientated Programming",
      "objectives": [
        "They will have an excellent understanding of the fundamentals in Java programming.",
        "Use many advanced Java programming techniques and have a great understanding Object Orientated Programming. These are essential skills for every form of Java programmer."
      ],
      "course_content": {},
      "requirements": [
        "Nothing. No prior knowledge of programming is needed."
      ],
      "description": "Welcome to my Basic course on Java Programming with NetBeans!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as tough several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nJava, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Java over any other language. Of course, it goes without saying that Java is an excellent language, but do you know what is required of you to start programming Java?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course. Further on, once completing the basic section, we move onto advanced Java programming and OOP. Data is important in the technological world that we live in, but what we use is processed data, so you, as the budding programmer need to know this as well. I show you how to scan through large amounts of data with ease as well as extract specific types and process it as well.\nWhat about NetBeans? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several projects that will help you get truly comfortable with the IDE as well as more adept at program creation.\n\n\nI help you:\nInstall your IDE\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nAdvanced Java Methods\nData Collection\nData Processing and Storage\nData Extraction\nData Scanning\nOOP, Object Orientated Programming\nand BONUS tips and tricks!\n\n\nGo no further if you're looking for the course that will guide you into the world of programming! With my masterclass course I can guarantee that the knowledge you learn will help you get a head-start in Java programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Students ready to learn the joys of programming for the first time.",
        "I.T Students",
        "Basic Java programmers",
        "Beginner Programmers",
        "Java Programmers Wanting to Learn OOP"
      ]
    },
    {
      "title": "React Progressive Web App With Workbox and Webpack Tutorial",
      "url": "https://www.udemy.com/course/react-progressive-web-app-with-workbox-and-webpack-tutorial/",
      "bio": "Learn how to create a React PWA app from scratch with Workbox",
      "objectives": [
        "Creating a custom React PWA with Webpack and Workbox.",
        "React PWA with Workbox"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "React Application Setup with Webpack": [
          "Set up React Application with Webpack",
          "Add Loaders and Babel Configuration",
          "Set up Webpack Server in Development and Production"
        ],
        "Creating Components, Adding SVGS, Images, Styles, Routing": [
          "Create layout component, Add SVG logo, Adding Fonts and Styles",
          "Adding Routing with Reach Router and Navigation in the header",
          "Add Images and Background images"
        ],
        "Fetching Data from Third Party API and ENV Variables": [
          "Fetching Data from Third Party API using Axios and setup ENV Variables"
        ],
        "Introduction to Workbox, Service Workers and Caching | Setup and Registration": [
          "What is Workbox, Service Worker?",
          "Setup Workbox Webpack Plugin, CopyWebpack plugin and Manifest.json file",
          "Register Service Workers and Cache Update",
          "Using Workbox Core and Precaching"
        ],
        "Caching At Runtime and Caching Strategies": [
          "Routing | Caching Google Fonts | StaleWhileRevalidate & Cache First Strategies",
          "Caching Images, styles and scripts - Cache first",
          "Cache third party api response"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript"
      ],
      "description": "This course targets all:  beginners, intermediate and advanced.\nIt teaches you on how to create a React PWA app from scratch with Workbox. You will learn the following in this course:\nIntro to React PWA With Webpack And Workbox\nCreate a React Project from Scratch With Webpack 5 From Scratch\nSetup a React app with Webpack and Babel\nSetup Webpack Dev Server | React Development and Production Server\nUsing SVG Icons In React | Google fonts and styles | Create layout component\nReach Router | Navigation in React\nReact Background Image | Set a background Image With React Inline Styles\nAdding Custom Environment Variables in React with Dot Env\nFetch data in React using axios\nWhat Are Service Workers | Workbox Webpack Plugin | InjectManifest\nSetup Workbox Webpack Plugin Configuration and manifest.json\nService Worker Registration | Workbox Window | Cache update on application re-deploy\nWorkbox Precaching In React | Workbox Core | preCacheAndRoute | skipwaiting\nCaching Google Fonts Using Workbox | StaleWhileRevalidate | CacheFirst Caching Strategies\nService Worker: How to cache images\nYou will also learn about how a Runtime caching is done in React PWA app using Workbox\n\nIn this collection, you'll learn what makes a Progressive Web App special, how they can affect your business, and how to build them.\nA service worker is a script that your browser runs in the background, separate from a web page, opening the door to features that don't need a web page or user interaction. Today, they already include features like push notifications and background sync.",
      "target_audience": [
        "JavaScript Developers"
      ]
    },
    {
      "title": "Golang Microservices: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/go-microservices/",
      "bio": "Break a Golang Monolith into Microservices with Apache Kafka and Event-Driven Architecture",
      "objectives": [
        "Event Driven Architecture with Apache Kafka",
        "Multiple Database Connections",
        "Internal Http Requests",
        "Run Docker with multiple networks",
        "Import Data from multiple databases",
        "Use Kubernetes",
        "Deploy to Google Cloud Platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Monolith": [
          "Setup",
          "Stripe Keys",
          "Exploring the Code",
          "Monolith vs Microservices"
        ],
        "Email Microservice": [
          "Email Diagram",
          "Setup",
          "Kafka Setup",
          "Confuent Cloud CLI",
          "Consuming Kafka Messages",
          "Producing Kafka Messages",
          "Sending Emails"
        ],
        "Users Microservice": [
          "Users Diagram",
          "Setup",
          "Importing Data",
          "Adding Routes",
          "Http Requests",
          "Login",
          "Requests with Headers",
          "Refactoring Requests",
          "Services",
          "Logout",
          "Completing authController",
          "Ambassadors",
          "Getting a User",
          "User Context",
          "Scopes",
          "Removing the User",
          "External Networks",
          "Sharing Packages"
        ],
        "Admin Microservice": [
          "Admin Diagram",
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Configuring Kafka"
        ],
        "Ambassador Microservice": [
          "Ambassador and Checkout Diagram",
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Configuring Kafka",
          "Consumer Service",
          "Testing Kafka Events",
          "Handling Errors"
        ],
        "Checkout Microservice": [
          "Setup",
          "Moving Controllers",
          "Configuring Kafka",
          "Testing the Frontend"
        ],
        "Kubernetes & Deployment": [
          "Kubernetes",
          "Production Build",
          "Pods",
          "Environment Variables",
          "Kompose",
          "Secrets",
          "Google Kubernetes Engine",
          "Cloud Shell",
          "Cloud SDK",
          "Container Registry",
          "Cloud SQL",
          "Authorized Networks",
          "Users Kubernetes Files",
          "Users Deployment",
          "Ingress",
          "Private IP",
          "Admin Setup",
          "Admin Kubernetes Files",
          "Admin Deployment",
          "Ambassador Setup",
          "Ambassdor Kubernetes Files",
          "Ambassador Deployment",
          "Checkout Setup",
          "Checkout Kubernetes Files",
          "Checkout Deployment"
        ]
      },
      "requirements": [
        "Good understanding of Golang"
      ],
      "description": "Welcome to Golang and Kafka: Breaking a Monolith to Microservices Course - the course that will take your Golang development skills to the next level.\nHere are some interesting facts:\nThe average Golang developer salary in the US is $131,844\nHowever:\nThe average salary for the Golang developers that know the Microservices Architecture in the US is $160,000\nThis means if you are a Golang developer you have the potential to increase your salary by up to 20% just by purchasing this course!\n\n\nHow this course works\nThis course will start with a pre-built monolith, the building of the starting app won't be covered in this course. So in this course, you will start immediately with Microservices Architecture, this course is intended for people that have a solid understanding of Golang and want to learn in a short amount of time more advanced concepts. I am very clear and precise in my way of teaching so this course won't have unnecessary explanations on my part, I will explain what is needed when it is needed.\nIf you are interested in learning how the Monolith is created you can check my other courses:\nAngular Material, Universal & Golang: A Rapid Guide\nReact, Next.js and Golang: A Rapid Guide - Advanced\nVue 3, Nuxt.js and Golang: A Rapid Guide - Advanced\nIn those courses, you will learn how to build a SPA with your favorite frontend framework.\n\n\nWhat you will learn in this course\nIn this course, you will start with a pre-built monolith and you will learn:\nWhat is the Microservices Architecture\nHow to Configure Kafka with Golang\nInternal Http Requests\nHow to make a Microservice only for Authentication Purposes\nRun Docker with multiple networks\nProduce Kafka Events to multiple topics\nCreate Custom Middlewares & Services\nImport Data from multiple databases\n\n\nAbout Me\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Golang developers curious about the Microservices Architecture"
      ]
    },
    {
      "title": "Learn Javascript Web App Development -Build A Calculator App",
      "url": "https://www.udemy.com/course/create-a-calculator-web-app-with-javascript-html-css/",
      "bio": "Javascript for Front End Web Development - Build Your Own Calculator App Using Javascript, HTML5 & CSS in an hour",
      "objectives": [
        "Create a working calculator web app by learning HTML5, CSS3 & Javascript",
        "Improve your web app development & javascript skills",
        "Improve your logical problem solving skills",
        "Build your front end web design and development skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML building blocks": [
          "The header section",
          "Section 2 Quiz part 1",
          "HTML blocks for the calculator",
          "Section 2 Quiz part 2"
        ],
        "Styling the calculator app - achieving the final look": [
          "Styling the app - part 1",
          "Styling the app - Part 2",
          "Section 3 Quiz"
        ],
        "[OPTIONAL] Javascript Basic Concepts (related to this project)": [
          "Connecting HTML and script/JS files",
          "An introduction to variables and assigning values",
          "Mathematical operators and alerts",
          "Conditional statements - if else statement",
          "Conditional statements - Switch case",
          "Loops - For loop",
          "Arrays - 1 dimensional arrays",
          "Arrays - 2 dimensional arrays",
          "An introduction to functions (function definition and calls)",
          "Intro to DOM - getElementById and InnerText",
          "Intro to DOM - adding click events to buttons",
          "More Event listeners Part 1",
          "More Event listeners Part 2"
        ],
        "Adding logic with Javascript - The easy way": [
          "Making the app work with Javascript",
          "Separating the Javascript",
          "Separating the Javascript - part 2",
          "The calculator app - code",
          "Section 3 Quiz"
        ],
        "Some design enhancements for the app": [
          "Close the input box to external inputs",
          "Design enhancements - add shadows, change backgrounds"
        ],
        "Adding logic with Javascript - The professional way": [
          "Making changes in the HTML code and the window onload function",
          "Retrieve the necessary elements using DOM functions",
          "Create the button click event for the calculator buttons",
          "Create the button click function",
          "Create the function that lets you enter information into the display box",
          "Create the function that does your calculator's calculations",
          "Create the function that does your calculator's calculations Part 2",
          "Create the function that erases your display & finish coding the calculator",
          "Calculator app - professional code"
        ],
        "Conclusion": [
          "Feature ideas to try out",
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "Just a computer. I'll teach you everything you need to know to create the app"
      ],
      "description": "Practice makes perfect. Start your journey into becoming a professional front end web developer here!\nAt DigiFisk, we like making learning fun. Our courses are interactive and fun with a ton of practical elements to it. We've decided to take it a step further with our Web application development practice series.\nOnce you learn the syntax of a programming language, the next logical step is to start creating software and apps. But that's where most students get stuck. Problem solving isn't as easy as learning a bunch of syntaxes.\nBut we aim to make it easy for you.\nWhat will you learn in this course?\nIn this course, you'll learn how to build your own Calculator web app from the ground up with just HTML5, CSS and Javascript in less than an hour..\nYou'll learn:\n1. How to create the HTML5 structures of an app.\n2. How to make an app pretty with CSS (design, design, design!)\nand last but never the least\n3. How to make an app work (solve problems) with logic, i.e Javascript\nBy the end of the course, you'll be one stop closer to creating web apps like a pro. You could even try creating other smaller web apps.\nHow is this course designed?\nI've made this course as easy to understand as possible. I've structured it in such a way that each section will handle one of the 3 languages covered here.\nIntroduction: This is where I'll explain how the app works, and what we'll be using to achieve the same results.\nModule 1: I'll be teaching you how to create the bare bones of the app with HTML5. The result will be a page with all the elements we need in our app, devoid any colors or design elements.\nModule 2: Here, we'll \"beautify\" our app. We'll be using CSS elements to give our app colors and styles. At the end of this module, we'll have a calculator app that looks like the final result, albeit one that does not perform any calculations yet.\nModule 3: This would be the meat of the course. We'll be delving into Javascript in this module, and I'll teach you how to make the app work (perform calculations and display the results) in here.\nFinal section: Finally, I'll give you some ideas on how to improve the app and make it your own in terms of design and functionalities.\nThis course is for you if:\n1. If you like learning by doing rather than hours of boring theoretical lectures.\n2. If you have the passion for programming, and if you know the basics of at least HTML5 and CSS, this course will take you one step further in your development skills.\n3. If you're a complete newbie, don't worry. I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.\nSo, what are you waiting for? Get this course today, and begin your journey into the wonderful world of web development!",
      "target_audience": [
        "This course is for people who want to learn web development the fun way",
        "This course is also for people who've learned the basics and want to move on to practical programming"
      ]
    },
    {
      "title": "Astro JS v5 & WordPress (Astro.js, TailwindCSS & WordPress)",
      "url": "https://www.udemy.com/course/astro-js-wordpress/",
      "bio": "Astro JS + Headless WordPress: Build a fully functioning real estate property website with Astro.js Tailwind + WordPress",
      "objectives": [
        "Increase your value and improve your knowledge as a web developer",
        "Learn Astro JS",
        "Create a static, server-compiled, content-driven website using Astro JS & Headless WordPress",
        "Set up WordPress as a backend to build content, then render the content as pages with Astro JS & GraphQL",
        "Deploy your Astro JS static website and rebuild whenever content changes using Vercel",
        "Learn how to style Astro JS apps with Tailwind CSS",
        "Learn how to create custom WordPress Gutenberg blocks with ACF pro",
        "Create static file api endpoints with Astro JS",
        "Implement smooth view transitions using Astro's View Transitions API",
        "Create a basic WordPress theme for our headless WordPress backend"
      ],
      "course_content": {
        "Introduction and project setup": [
          "Important! Read this before you start the course! (Github repo etc)",
          "Project overview",
          "High level overview of Astro & WordPress architecture",
          "Udemy ratings and reviews",
          "NEW - Astro project setup",
          "NEW - Add tailwind css to astro",
          "Setup prettier for auto formatting code on save",
          "Local WordPress site setup",
          "Create basic WordPress block theme"
        ],
        "Build out the homepage": [
          "Query WordPress data from within Astro",
          "Create BlockRenderer component in Astro",
          "Render first blocks from the BlockRenderer component",
          "Create common head component and add SEO data"
        ],
        "Build out the navbar": [
          "Add the navbar and site logo in WordPress",
          "Render the navbar within Astro",
          "Render the site logo within Astro using the Astro Image component",
          "Add additional pages within WordPress",
          "Add the Navigation block to the Header",
          "Render the Navigation links in Astro",
          "Render the navigation submenu in Astro (part 1)",
          "NEW - Render the navigation submenu in Astro (part 2)",
          "Integrate React into Astro and render Font Awesome icon",
          "Map WordPress page routes to use Astro site url"
        ],
        "Build the additional pages": [
          "Dynamic routes in Astro",
          "Render correct data for pages",
          "Add poppins font to Astro site and WordPress theme",
          "Create the Cover block for the homepage in WordPress",
          "Add default styles for the Button block in WordPress",
          "Render the Cover block within Astro",
          "Render the Heading block within Astro (+ demo of named slots)",
          "NEW - Render the Buttons and Button blocks within Astro",
          "Finish the Cover component",
          "Add Image block and render Image component in Astro",
          "Add remaining homepage content and small styling fixes",
          "Create custom Tick Item block in WordPress",
          "Finish the Tick Item block",
          "Render the Tick Item block in Astro",
          "Create the global footer in WordPress",
          "Render the global footer in Astro"
        ],
        "Build out the property pages": [
          "Create Property custom post type and property details custom fields",
          "Build out more of the property page in WordPress",
          "Create custom Property Details block in WordPress",
          "Render property details block in Astro",
          "Add more properties in WordPress",
          "Create Property Search custom block in WordPress",
          "Render the property search filters in Astro",
          "Set up SSR in Astro",
          "Render the buying/all-properties page as SSR",
          "Generate static file endpoint for buying/all-properties page",
          "Query for the static file endpoint in an SSR page",
          "Fix 404 page",
          "Hook up the url query string to the search form",
          "Generate static endpoint for properties",
          "Render properties in property search",
          "Filter the properties based on search filters",
          "Implement pagination for the property search",
          "Add styling for the page numbers in Astro",
          "Implement View Transitions API"
        ],
        "Build out the contact form": [
          "Create the contact form in WordPress and render on contact page",
          "Render the contact form in Astro as a React component"
        ],
        "Deploy": [
          "Deploy local WordPress site to Flywheel hosting",
          "Upload Astro project to github repo",
          "Deploy Astro project to Vercel",
          "Set up automatic rebuilds of Astro site anytime WordPress data changes"
        ],
        "Extras": [
          "Render site logo for the favicon in the Astro project",
          "Implement the mobile menu functionality with a React component (part 1)",
          "Implement the mobile menu functionality with a React component (part 2)",
          "Improve google page speed score (part 1)",
          "Improve google page speed score (part 2)",
          "BONUS!"
        ]
      },
      "requirements": [
        "Have a good understanding of Javascript",
        "Experience WordPress would be beneficial but is not a requirement",
        "Experience with React would be beneficial but the React code in this course is minimal"
      ],
      "description": "This course has been updated to Astro v5 and Tailwind v4.\nDive into the world of modern web development with the Astro JS & Headless WordPress course.\nYou'll explore the innovative integration of Astro JS with a headless WordPress backend, and deploy your website with the cutting-edge hosting platform, Vercel. Experience the advantages of Server-Side Rendering (SSR) and Static Site Generation (SSG) for optimal performance, and write your code confidently in TypeScript.\nCourse Highlights:\nReal-World Project: Build 'Astro Estates', a sophisticated real estate website, applying your skills in a project that mirrors professional development workflows.\nTailwind CSS Integration: Achieve stunning, responsive, and modern designs effortlessly with Tailwind CSS, right within your JavaScript environment.\nHeadless WordPress: Dive into basic WordPress block and theme development tailored for headless architecture.\nGraphQL Expertise: Fetch data seamlessly from WordPress using GraphQL, simplifying data management and boosting your site's speed.\nSeamless Page Transitions: Implement the View Transitions API for fluid, app-like navigational experiences between pages.\nStatic and Dynamic Harmony: Learn to manipulate static files and leverage API endpoints for content delivery.\nReact JS Interactivity with Astro island architecture: Bring your static sites to life with interactive elements using Astro's island architecture and React JS, the industry standard for UI development.\nEffortless Deployment with Vercel: Discover the simplicity and power of deploying your projects on Vercel, ensuring your sites are not only blazing fast but also globally distributed and scalable.\nBy the time you complete this course, you'll have a profound understanding of building and deploying full-stack web applications using Astro JS and WordPress with Vercel. This skill set will empower you to craft web experiences that are not just high in quality but also in demand by modern businesses.\nJoin the Astro JS & Headless WordPress course now and start your journey to becoming a full-stack web development expert, with the power to deploy industry-leading websites with ease!",
      "target_audience": [
        "Web developers who want to learn a better approach to creating static, content-driven websites with WordPress, React JS, and GraphQL, using Astro JS"
      ]
    },
    {
      "title": "Mastering Google Maps JavaScript API: A Comprehensive Guide",
      "url": "https://www.udemy.com/course/google-maps-javascript-api/",
      "bio": "The complete guide of Google Maps JavaScript APIs from A to Z",
      "objectives": [
        "How to set up and integrate the Google Maps JavaScript API into web applications.",
        "Key concepts related to maps, markers, and geolocation.",
        "Customizing the appearance of maps, including map styles, themes, and controls.",
        "Adding custom markers, icons, and info windows to maps.",
        "Adding interactivity to maps, such as click events and user interactions.",
        "Implementing features like zooming, panning, and street view.",
        "Loading and displaying geographic data in GeoJSON format on maps.",
        "Building interactive maps with data overlays.",
        "Identifying and addressing common issues and errors in API usage."
      ],
      "course_content": {
        "Introduction": [
          "Getting start with Google Maps Platform",
          "Create and use API key",
          "First Web Mapping Application",
          "SampleCode: First Web Mapping Application"
        ],
        "Map Options": [
          "Understand the Map Options",
          "Manage UIContorls with Map Options",
          "SampleCode: Manage UIContorls with Map Options",
          "Change Google Map Types",
          "SampleCode: Change Google Map Types",
          "Change Map Localization",
          "SampleCode: Change Map Localization"
        ],
        "Geometries and Overlays": [
          "Draw Geometries and Overlays on the Map",
          "Draw Point Geometry (Markers) on the Map",
          "SampleCode: Draw Point Geometry (Markers) on the Map",
          "Draw Shape Geometry (Polyline) on the Map",
          "SampleCode: Draw Shape Geometry (Polyline) on the Map",
          "Draw Shape Geometry (Polygon) on the Map",
          "SampleCode: Draw Shape Geometry (Polygon) on the Map",
          "Add a Ground Overlay (Raster) to the Map",
          "SampleCode: Add a Ground Overlay (Raster) to the Map"
        ],
        "Map Events": [
          "Interact with Map Events",
          "SampleCode: Interact with Map Events",
          "Display Map Info Windows",
          "SampleCode: Display Map Info Windows",
          "Displaying User or Device Position on Maps",
          "SampleCode: Display User or Device Position On Maps"
        ],
        "Geospatial Data Layers": [
          "Understand Geospatial Data Layers",
          "Display Data Layer on a The Map",
          "Sample Code: Display Data Layer on The Map",
          "Listen to Data Layer Events",
          "SampleCode: Listen to Data Layer Events",
          "Style Data Layer Features",
          "SampleCode: Style Data Layer Features"
        ],
        "KML and GeoRSS Layers": [
          "Renders KML on the Map",
          "SampleCode: Renders KML on the Map",
          "Renders GeoRSS on the Map",
          "SampleCode: Renders GeoRSS on the Map",
          "Listen to KML Layer Events",
          "SampleCode: Listen to KML Layer Events"
        ],
        "Heatmap Layers": [
          "Render Heatmap Layers",
          "SampleCode: Render Heatmap Layers",
          "Style Heatmap Layers",
          "SampleCode: Style Heatmap Layers"
        ],
        "Traffic and Transportation Layers": [
          "Adding Traffic Layer",
          "SampleCode: Add Traffic Layer",
          "Adding Transit Layer",
          "SampleCode: Add Transit Layer"
        ],
        "Geocoding Service": [
          "Find Address with Geocoding Service",
          "SampleCode: Find Address with Geocoding Service",
          "Find Address from Coordinates with Reverse Geocoding",
          "SampleCode: Find Address from Coordinates with Reverse Geocoding"
        ],
        "Elevation Service": [
          "Get Elevations for an Location",
          "SampleCode: Get Elevations for an Location"
        ]
      },
      "requirements": [
        "Just basics of JavaScript"
      ],
      "description": "In a course focused on the Google Maps JavaScript API, students can expect to learn a range of skills and knowledge related to utilizing this powerful mapping tool for web development. The specific learning outcomes will depend on the course's depth and duration, but here are some common topics and skills that students can expect to gain:\nUnderstanding the Basics:\nHow to set up and integrate the Google Maps JavaScript API into web applications.\nKey concepts related to maps, markers, and geolocation.\nMap Customization:\nCustomizing the appearance of maps, including map styles, themes, and controls.\nAdding custom markers, icons, and info windows to maps.\nInteractive Maps:\nAdding interactivity to maps, such as click events and user interactions.\nImplementing features like zooming, panning, and street view.\nWorking with GeoJSON Data:\nLoading and displaying geographic data in GeoJSON format on maps.\nBuilding interactive maps with data overlays.\nError Handling and Troubleshooting:\nIdentifying and addressing common issues and errors in API usage.\nBest Practices and Optimization:\nEnsuring efficient and optimized use of the API to improve website performance.\nHandling API rate limits and billing considerations.\nBy the end of the course, students should be well-equipped to integrate Google Maps into their web applications, build location-aware features, and customize maps to meet their specific needs. They will also have a solid foundation for exploring more advanced applications of the Google Maps JavaScript API in their projects.",
      "target_audience": [
        "web developers"
      ]
    },
    {
      "title": "Learning Apache mod_rewrite",
      "url": "https://www.udemy.com/course/learning-apache-mod_rewrite/",
      "bio": "Basic to Advanced Patterning and Rewriting Techniques",
      "objectives": [
        "Learn how to adjust,test and configure Apache mod_rewrite directives",
        "Learn basic regular expressions",
        "Study Advance Rewriting Solutions"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction And Course Overview",
          "How To Access Your Working Files"
        ],
        "Getting Started With mod_rewrite": [
          "Getting Started With Apache mod_rewrite",
          "Adjusting Configuration And Testing For Success",
          "Module mod_rewrite Usage"
        ],
        "Basic Regular Expressions": [
          "Regular Expressions - Part 1",
          "Regular Expressions - Part 2"
        ],
        "Rewrite Directives": [
          "vHost Setup",
          "mod_rewrite Variables",
          "RewriteRule Directive",
          "RewriteCond Directive - Part 1",
          "RewriteCond Directive - Part 2",
          "RewriteBase And Options",
          "RewriteMap TXT Mapping",
          "RewriteMap RND Mapping",
          "RewriteMap DBM Mapping",
          "RewriteMap PRG-INT Mapping",
          "RewriteRule Flags"
        ],
        "Advanced Rewriting Solutions": [
          "Rewrite Logging",
          "Rewrite Security",
          "Generation, Redirection, And Control"
        ],
        "Conclusion": [
          "Wrap Up"
        ]
      },
      "requirements": [
        "This course is designed for users that already have experience with web development or system administration."
      ],
      "description": "In this Learning Apache mod_rewrite training course, expert author Daryl Wood teaches you about the installation, configuration, and practical use cases for a powerful Apache module. This course is designed for users that already have experience with web development or system administration.\nYou will start by learning how to adjust configuration, then jump into learning basic regular expressions. From there, Daryl will teach you about rewrite directives, such as RewriteRule directive, RewriteBase and options, and RewriteRule flags. Finally, this video tutorial will cover advanced rewriting solutions, such as logging, security, and content-load-access.\nOnce you have completed this computer based training course, you will be fully capable of using Apache mod_rewrite for your modifying and rewriting needs. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Anyone wanting to improve their skills with rewrite rules and conditions"
      ]
    },
    {
      "title": "MERN Stack Expense Tracker Application",
      "url": "https://www.udemy.com/course/mern-stack-expense-tracker-application/",
      "bio": "Build a MERN Stack Expense Tracker Application to track your daily needs",
      "objectives": [
        "MERN Stack all CRUD Operations",
        "User Authentication to make this application accessible to multiple users",
        "Add , Edit , Delete Transactions",
        "Complete server side filtering with Mongo DB advanced queries",
        "Date and Date Range Filters to analyse the transactions in a particular period of time.",
        "Analyse the transactions based on count , amount , total turnover.",
        "Category wise analysis and statistics for both income and expense transactions.",
        "By the end of the course you will know you to work full stack applications in both local and production environment",
        "Deploying the app to Heroku ( Live Production Environment )",
        "24/7 Support from the team"
      ],
      "course_content": {
        "Introduction and Resources": [
          "PROMO"
        ],
        "Front End Setup": [
          "React App Setup",
          "Folder Structure , NPM Modules",
          "Layout Part - 1",
          "Layout Part - 2"
        ],
        "Backend Setup": [
          "Node + Express Server Setup",
          "Mongo DB Node Connectivity"
        ],
        "User Login / Registration UI": [
          "Login-Register Part-1",
          "Login-Register Part-2"
        ],
        "User Login-Registration API's": [
          "User Model and API's",
          "Login Registration Testing"
        ],
        "Loaders / Protected Routes": [
          "Loaders , Notification Messages",
          "Protected Routes"
        ],
        "Add Transaction - UI": [
          "Add Transaction - 1",
          "Add Transaction - 2"
        ],
        "Add Transaction - API's": [
          "Transaction Model",
          "Add Transaction API",
          "Display Transactions in Table"
        ],
        "Filters": [
          "Date Filters Demo",
          "Date Range Filters",
          "Type Filtes"
        ],
        "Analytics": [
          "Analatics Component",
          "Total Transactions Analysis",
          "Total Turnover Analysis"
        ]
      },
      "requirements": [
        "React",
        "Javascript"
      ],
      "description": "Hi , Welcome to the course MERN Stack Expense Tracker\nAn expense tracker is a platform where we will list all our income and expenditures from various sources like salary , freelance , food , travel , medical , education etc to make an analysis about our money. So we can have any idea where we are spending our amount.\nGenerally we will use excel sheets , online money tracker sites and some people will maintain a notes.\nSo Here My Question Is , As a Web Developer do we have to depend on the above things to track our money.\nMy Answer is NO , Even beginners can develop their own expense trackers if the know how to perform CRUD operations using MERN Stack. And that's what we will learn in this course.\n------------------------------\nSo In this course I will teach you how to develop your own Expense Tracker with the worlds most popular tech stack MERN.\nWe will learn the following concepts on the next six hours.\n\n\nMERN Stack all CRUD Operations\nUnderstanding how Real Time Projects developed using the world most popular tech stack MERN.\nUser Authentication to make this application accessible to multiple users\nAdd , Edit , Delete Transactions\nComplete server side filtering with Mongo DB advanced queries\nDate and Date Range Filters to analyse the transactions in a particular period of time.\nAnalyse the transactions based on count , amount , total turnover.\nCategory wise analysis and statistics for both income and expense transactions.\n24/7 Support from the team\nBy the end of the course you will know you to work full stack applications in both local and production environment\nDeploying the app to Heroku ( Live Production Environment )\n\n\nWhat is an Expense Tracker?\n\n\nPersonal finance management is an important part of people’s lives. However, everyone does not have the knowledge or time to manage their finances in a proper manner. And, even if a person has time and knowledge, they do not bother with tracking their expenses as they find it tedious and time-consuming. Now, you don’t have to worry about managing your expenses, as you can get access to an expense tracker that will help in the active management of your finances.",
      "target_audience": [
        "Students who want to build their own applications without depending on other third party websites to solve their real life problems",
        "React Developers",
        "MERN Stack Developers",
        "Full stack Developers"
      ]
    },
    {
      "title": "Cloud Computing with Microsoft Azure BUNDLE",
      "url": "https://www.udemy.com/course/cloud-computing-with-microsoft-azure-bundle-2019/",
      "bio": "Azure Bootcamp with multiple Projects on Microsoft Azure. Learn all Azure cloud services",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Microsoft Azure.",
        "Having command over large number of options, services and tools available on Microsoft Azure Cloud Platform.",
        "Learn about storage services like BloB, StorSimple, Disk, File, Table, Backup, Data Lake, Queue, and Archive with practical exercises and projects.",
        "Learn about networking services like DNS, Firewall, Traffic Manager, ExpressRoute, Virtual WAN, Vnet (Virtual Network), NSG ( Network Security Group)",
        "Learn about containers services like Docker, Kubernetes, Service Fabric Cluster, Azure Kubernetes Service (AKS), Container Instances and Container Registry",
        "Learn about analytics services like HDInsight, Apache Spark, Jupyter, Zappelin, Stream Analytics, Lake Analytics, Data Bricks.",
        "Learn about devops services like azure board, artifacts, repos, pipelines, test plans, and much more",
        "Learn about security and Cloud migration Azure services",
        "Learn about Machine learning and Artificial Intelligence related services like computer vision, natural language understanding, content moderator, translator,"
      ],
      "course_content": {
        "Welcome to Microsoft cloud platform AZURE course": [
          "Welcome"
        ],
        "Cloud Service : Storage": [
          "Overview",
          "Introduction to Azure Storage",
          "Storage service : BLOB",
          "Storage service : DISK",
          "Storage service : FILES",
          "Storage service : TABLES",
          "Storage service : QUEUE",
          "Storage service : DATA LAKE",
          "Storage service : StorSimple",
          "Storage service : BACKUP",
          "Storage service : ARCHIVE",
          "Let's create a simple BLOB storage instance",
          "Let's create a simple FILE storage instance",
          "Az Storage Quiz"
        ],
        "Accessing Azure storage services using AZURE CLI": [
          "Managing Azure BLOB service using AZURE CLI",
          "Managing Azure FILE service using AZURE CLI - Part 1",
          "Managing Azure FILE service using AZURE CLI - Part 2",
          "Managing Azure FILE service using AZURE CLI - Part 3",
          "Managing Azure FILE service using AZURE CLI - Part 4",
          "Assignment on BLOB"
        ],
        "PROJECT : Host a Website on Cloud": [
          "Overview",
          "Learn to host a static website - Part 1",
          "Learn to host a static website - Part 2",
          "Learn to host a static website - Part 3",
          "Congratulation, Champ !!",
          "Adding upload option into website - Part 1",
          "Adding upload option into website - Part 2",
          "Adding upload option into website - Part 3",
          "Adding upload option into website - Part 4",
          "Adding upload option into website - Part 5",
          "ANOTHER MILESTONE ACHIEVED",
          "Learn to host scalable and optimized WordPress - Part 1",
          "Learn to host scalable and optimized WordPress - Part 2"
        ],
        "Some more options to access Azure services": [
          "Using Cloudshell",
          "Running python codes in cloudshell",
          "Installing Azure CLI for windows",
          "Using Azure SDk with Powershell",
          "Downloading Storage Explorer",
          "Managing storage services using Storage Explorer",
          "List of Azure commands for CLI"
        ],
        "Cloud Service : Container": [
          "Why Docker?",
          "Architecture of Kubernetes",
          "What is Pod and Services in Kubernetes?",
          "Container Service : Docker",
          "Container Service : Kubernetes",
          "Container Service : Container Registry",
          "Container Service : AKS (Azure Kubernetes Service)",
          "Container Service : Container Instances",
          "Container Service : Service Fabric Cluster",
          "Az Container Quiz"
        ],
        "PROJECT: AKS (Azure Kubernetes Services)": [
          "Project AKS: Part 1",
          "Project AKS: Part 2",
          "Project AKS: Part 3",
          "Project AKS: Part 4"
        ],
        "PROJECT Container Instance": [
          "Project Container Instance: Part 1",
          "Project Container Instance: Part 2",
          "Project Container Instance: Part 3",
          "Project Container Instance: Part 4"
        ],
        "PROJECT Container Registry": [
          "Project Container Registry: Part-1",
          "Project Container Registry: Part-2"
        ],
        "Cloud Service : Networking": [
          "Networking Service : DNS",
          "Networking Service : Traffic Manager",
          "Networking Service : Firewall",
          "Networking Service : ExpressRoute",
          "Networking Service : Virtual WAN",
          "Networking Service : NSG (Network Security Group)",
          "Networking Service : VNet (Virtual Network)",
          "Az Networking Quiz"
        ]
      },
      "requirements": [
        "No prerequisites at all. But if you are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "Microsoft Azure is one of the most popular Cloud Computing platforms with wide range of tools and services that are remotely accessible from anywhere in the world. It has never been so easy to integrate almost any kind of application with wide array of technology based cloud services, with massive scalability, elasticity, fault tolerance and cost effective. Currently, Azure is the fastest growing Cloud Computing platform, that is expected to overtake AWS very soon in terms of market share. So, if you are already familiar with AWS or you are just starting with Azure, this course could provide you comprehensive learning (with roughly 18 hours of content) on a large number of cloud services with hands-on practical examples on Microsoft Azure. You will be introduced to Azure in the first few sections, followed by a very detailed learning on various categories such as Storage, Database, Machine Learning, Security, etc. And if you spend your time wisely on learning Microsoft Azure cloud services, you could easily learn Azure in 30 days.\nThis course will provide you a complete coverage of Microsoft Azure, and you would be in a better position to qualify the skillset required in various Azure Certification exams. At the end of various section in this course, you can test your skills by attempting the Quiz. This way you could get prepared for real life scenarios and certification exams. You would be learning following Services in different categories:\nAzure Storage-           BloB, File, Disk, Table, Queue, Data Lake, StorSimple, Archive, Backup.\nAzure Container-      Docker, Kubernetes, Container Registry, AKS, Container Instance, Service Fabric Cluster\nAzure Networking-   DNS, Traffic Manager, Firewall, ExpressRoute, Virtual WAN, NSG  (Network Security Group), VNet\nAzure Database-         SQL Database, CosmosDB, Data Warehouse\nAzure Machine Learning-   Computer Vision, Custom Vision, Content Moderator, Translate, Text Analysis\nAzure Chatbot-          Simple, Web, Facebook, QnA, LUIS\nAzure Analytics-        Stream Analytics, HDInsight, Lake Analytics, Data Explorer, Databricks\nAzure DevOps-             Boards, Artifact, Repos, Pipelines, Test Plan, Tool Integration, DevTest Labs, Application Insight, Azure Organisation\nAzure Security-           Security Centre, Azure Active Directory,  VPN Gateway, DDoS Protection, Key Vaults, Dedicated HSM, Application            Gateways, Sentinel, Information Protection\nAzure Migration-     Site Recovery, Database Migration, Migrate, Migration Project, DataBox\nWhat is Microsoft Azure?\nMicrosoft Azure is a popular cloud computing platform where we can provision a variety of cloud services for various domains and application.\n\n\nYou would be learning concepts and methodologies with practical exercises. This course consists of multiple Projects on various topics.",
      "target_audience": [
        "Anyone who just wants to learn and test Microsoft Azure Cloud Platform or any developer willing to develop his/her application over Microsoft Azure.",
        "Anyone who want to make a career in Cloud Computing, by developing Professional skills on Microsoft Azure."
      ]
    },
    {
      "title": "PHP Bootcamp: The Complete Programming Course With MYSQL",
      "url": "https://www.udemy.com/course/php-bootcamp-the-complete-programming-course-with-mysql/",
      "bio": "Master PHP Development: Comprehensive Bootcamp Covering Basics to Advanced Techniques for Web Applications.",
      "objectives": [
        "Overview of the course structure and objectives",
        "Setting up the learning environment",
        "Understanding PHP tags and basic syntax",
        "Understanding variables and data types in PHP",
        "Arithmetic, comparison, and logical operators",
        "Expressions and operator precedence",
        "Loops (for, while, do-while, foreach)",
        "Conditional statements (if, elseif, else, switch)",
        "Function arguments and return values",
        "Array functions and operations",
        "String functions and regular expressions",
        "Validating and sanitizing user input",
        "Using $_GET and $_POST for data transmission",
        "Setting up a MySQL database",
        "Connecting PHP with MySQL",
        "Performing CRUD operations (Create, Read, Update, Delete)",
        "Preventing SQL injection",
        "Enhancing database security",
        "Implementing polymorphism",
        "Understanding RESTful APIs",
        "Making HTTP requests with cURL",
        "Securely storing passwords"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience is required."
      ],
      "description": "Learn to build dynamic, data driven websites and web applications from the ground up with PHP in this beginner friendly bootcamp. PHP Bootcamp: The Complete Programming Course  With MYSQL is designed to take you through the entire process of mastering PHP, one of the most popular server-side programming languages used in web development today.\n\n\nStarting with the basics, you'll explore everything from setting up your development environment to advanced PHP features like object-oriented programming, working with databases, and handling user authentication. You'll also dive into HTML, CSS, and JavaScript to ensure a solid understanding of both front-end and back-end development.\n\n\nWhat you'll learn:\nCore PHP concepts and syntax, from basic to advanced\nHow to build dynamic websites with PHP and MySQL databases\nForm handling, sessions, cookies, and user authentication\nIntroduction to Object-Oriented Programming (OOP) with PHP\nWorking with APIs and external data sources\nDeploying PHP applications on a live server\n\n\nThis course is perfect for beginners looking to start their journey in web development, as well as experienced developers wanting to deepen their understanding of PHP. By the end, you'll have the skills to create fully functional, database driven websites and applications with confidence. Enroll today and unlock the power of PHP for web development!",
      "target_audience": [
        "Anyone interested to learning PHP Programming course with MYSQL."
      ]
    },
    {
      "title": "React Instagram Clone - CSS Grid Mastery",
      "url": "https://www.udemy.com/course/css-grid-with-react/",
      "bio": "Build an Image Gallery app with React, React Router and styled-components, mastering CSS Grid with over 100 examples!",
      "objectives": [
        "Explore the properties of CSS Grid, with over 100 example Grids",
        "Build a complete Image Gallery app with React, React Router and Styled Components",
        "Responsive Layouts: Use media queries and grid-template-areas to quickly build layouts for any device",
        "Styled-components: Write CSS inside of React components",
        "Stock photos: Learn how to gather, and resize trendy stock photos for a professional look and feel",
        "Build 2 Layouts: Square and Cascading row heights",
        "React Router: Learn how to restyle Links, matching routes with search parameters",
        "Image Modals: Learn how to globally lock scrolling when an image modal is open"
      ],
      "course_content": {},
      "requirements": [
        "To build the GridGallery app, you should have prior experience running create-react-app, basic knowledge of React, CSS, and Web Development. The first section does not discuss React and is just about CSS Grid"
      ],
      "description": "Now updated for the latest version of React and Styled-components!\nFirst learn CSS Grid with the Gridfolio App, exploring each parent and child property of CSS Grid. Then build the GridGallery app, an Image Gallery app built with React, React Router and Styled-components.\nWith the Gridfolio app, you'll access over 100 Grids, with grids for each parent and child property of CSS Grid. We explain through example, so you'll see how each Grid property changes with new and different values, and how you can combine multiple Grid properties together.\nWe'll discuss the more confusing properties of CSS Grid, like grid-auto-flow, grid-template-areas, and the elusive grid property. Each lecture expands on the previous, giving you knowledge that you can build on and use in the GridGallery app, a professional React project worthy of any React career developer. You'll also get the full source code to the Gridfolio project.\nWith the GridGallery app, you'll build a real Image Gallery app. Starting from the create-react-app boilerplate, you'll learn through examples from React Router, style an Image modal, build and test a responsive PhotoGrid that works on any device. You'll learn how to find your own stock photos and fonts to personalize your image gallery. You'll use styled-components to easily style React components without new CSS files. You'll gain full access to the source code of the GridGallery app project, so you can reference the completed project at any time.\nWe're here to answer your questions and we want you to succeed! With the Q&A section, you'll join a community of developers building the same project, so you can collaborate and get instant feedback to your issues.\nThanks, and best of luck!\n-Developers at react.school",
      "target_audience": [
        "Experienced React Developers looking to incorporate CSS Grid into their workflow"
      ]
    },
    {
      "title": "Wordpress Theme - GeneratePress Masterclass",
      "url": "https://www.udemy.com/course/generatepress-theme-masterclass-for-wordpress/",
      "bio": "How to quickly and effectively build WordPress Websites",
      "objectives": [
        "How to build a website using the GeneratePress Theme for WordPress"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of WordPress, CSS, and HTML"
      ],
      "description": "In this course students will learn how to use both the free and premium versions of the amazing WordPress Theme named GeneratePress.\n\n\nYou will learn the following:\nHow to design a website using GeneratePress Free\nHow to design a website using GeneratePress Premium\nHow to use Elements\nHow to use Hooks\nHow to stylize your entire site\nHow to import and modify stock sites from the GeneratePress library\n\n\nThis course will show you how you really do not need much other than GeneratePress when designing your website and how it can be used to quickly prototype and change things on the fly.",
      "target_audience": [
        "Beginner to Advanced WordPress Developers and Designers"
      ]
    },
    {
      "title": "Full Stack Web Development with Python and Django Course",
      "url": "https://www.udemy.com/course/crash-course-web-development-python-django/",
      "bio": "Learn how to create websites and web apps using HTML, CSS, Bootstrap, Python and Django!",
      "objectives": [
        "Build website and web applications",
        "HTML and CSS for front end web development",
        "Bootstrap for responsive web design",
        "Python",
        "Django for creating robust websites and web apps"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a computer and know how to use the internet."
      ],
      "description": "Do you want to learn how to create websites and web apps? Do you have an idea for a web app that you want to create, but don't know where to start? Maybe you just want to learn a new skill.\nThis class will cover everything you need to know to start creating functional websites and web apps. Although this course is focused for beginners, it will culminate in creating a blog from scratch. You do not need to have any programming knowledge in order to complete this class.\nSome of the topics we will cover include:\nHTML\nCSS\nResponsive Web Design\nBootstrap\nPython\nDjango\nFront End vs. Back End Development\nDatabases\nModel, View, Template (MVT) structure\nSelf described as the \"The Web Framework for Perfectionists with Deadlines,\" Django is one of the most widely used frameworks for building websites and web apps. It is built using Python, which is also one of the most popular programming languages today. It has a wide variety of applications, including web development, data science, machine learning and artificial intelligence.\nThis course focuses only on the topics you need to know in order to get a web app up and running.",
      "target_audience": [
        "Somebody who wants to learn how to build web applications with Python and Django",
        "People who are interested in learning full stack web development",
        "Entrepreneurs who want to try and get their idea out there"
      ]
    },
    {
      "title": "Optimize Front-End Web Apps : AI, Performance and SEO",
      "url": "https://www.udemy.com/course/optimize-front-end-web-apps-ai-performance-and-seo/",
      "bio": "Master HTML, CSS, JavaScript, React & AI for Superior Web Performance",
      "objectives": [
        "Build responsive web applications using HTML, CSS, and JavaScript.",
        "Apply AI tools for automated web performance optimization.",
        "Implement best practices for efficient front-end development.",
        "Use React. js to develop dynamic Single-Page Applications (SPAs).",
        "Measure and enhance web app performance for improved UX.",
        "Understand and apply the client-server model in web apps.",
        "Optimize image sizes and use of libraries for faster load times.",
        "Design web interfaces that adapt to different devices using responsive design.",
        "Integrate basic SEO techniques for higher web visibility.",
        "Gather and utilize user feedback for continuous improvement."
      ],
      "course_content": {},
      "requirements": [
        "Basic computer literacy and internet navigation skills.",
        "No prior programming experience required; beginners welcome.",
        "Access to a computer with internet and permission to install software.",
        "Curiosity and willingness to learn about web development."
      ],
      "description": "In the rapidly evolving digital landscape, the performance of web applications has become paramount for ensuring an engaging user experience. Our comprehensive course, \"Optimize Front-End Web Apps: AI, Performance, & SEO,\" is meticulously designed to equip you with the essential skills and knowledge to excel in optimizing web applications. This course spans from the basics of web application structure, covering HTML, CSS, and JavaScript, to the advanced techniques of leveraging Artificial Intelligence (AI) for performance enhancement and creating responsive designs that adapt to various devices seamlessly.\nYou will embark on a journey starting with understanding the fundamental concepts of web applications and the pivotal role of browsers in rendering pages. Moving forward, we delve into the significance of web performance, introducing tools to measure and strategies to enhance load times, directly impacting user experience. The course innovatively integrates AI, exploring its application in automated optimization, personalization, and revolutionizing user interfaces, offering you an edge in the web development domain.\nAs you progress, practical sessions on setting up a development environment, using browser developer tools, and building simple front-end applications will solidify your learning. Gain insights into the client-server model, backend integration, and the essentials of databases, preparing you for full-stack understanding. The course also demystifies optimizing front-end performance, introduces responsive design, and provides a thorough overview of web frameworks, with a focus on React.js for developing Single-Page Applications (SPAs).\nWe ensure that you're well-versed in the basics of SEO and web accessibility, making your applications not just fast and efficient but also discoverable and accessible to a wider audience. Culminating in a capstone project, you'll apply what you've learned by building a web application using React.js, synthesizing knowledge across the course's spectrum.\nWhether you're a beginner eager to dive into the world of web development or a professional looking to enhance your skills in front-end optimization, this course offers a blend of theory, practical knowledge, and hands-on experience to set you apart in the competitive tech landscape.",
      "target_audience": [
        "Aspiring web developers seeking to enter the field with a solid foundation.",
        "Front-end developers aiming to enhance their skills in performance optimization.",
        "Professionals in related fields looking to switch to web development.",
        "Hobbyists interested in building their own web applications for personal projects.",
        "Students in computer science or related disciplines seeking practical web development skills.",
        "Entrepreneurs needing to understand web development basics for their startups."
      ]
    },
    {
      "title": "Django channels - create your own web chat application",
      "url": "https://www.udemy.com/course/django-channels-create-your-own-web-chat-application/",
      "bio": "Master Django Channels: Build Real-Time Web Apps, Learn Consumers, and Integrate JavaScript",
      "objectives": [
        "Django Channels Basics: Understand the fundamentals of Django Channels for building real-time web applications.",
        "Integrating WSGI and ASGI: Learn how to effectively use and combine WSGI and ASGI interfaces in Django projects.",
        "Creating Consumers: Master the creation of both synchronous and asynchronous consumers to handle real-time data efficiently.",
        "Using Channels in Django Views: Discover how to integrate Channels with Django views to send and receive real-time events.",
        "How to Create a Chat Application: Build a fully functional chat application using Django Channels, capable of sending messages individually to one user or broad",
        "Real-Time User and Group Messaging: Implement targeted messaging for individual users and groups within your application.",
        "Managing Consumer Scope and Sessions: Learn to manage consumer scope and access user sessions through the ASGI interface.",
        "JavaScript Integration for Real-Time Features: Utilize JavaScript to connect with Django Channels and enhance client-side real-time functionality."
      ],
      "course_content": {
        "preparing the environment": [
          "install python",
          "install visual studio code (the editor)",
          "install extensions for visual studio code",
          "Virtual Environments",
          "install python's libraries"
        ],
        "creating the project": [
          "create Django project and application",
          "add the pages and URLs of the project"
        ],
        "Introduction to our plan": [
          "what is the idea of creating a chat application ?"
        ],
        "Introduction to Asynchronous and Synchronous": [
          "what is Asynchronous and synchronous ?"
        ],
        "Introduction to ASGI": [
          "Django interfaces"
        ],
        "Introduction to channels": [
          "what is channels ?",
          "what is layers of channels ?",
          "what is scope ?",
          "what is daphne ?",
          "Channels structure"
        ],
        "add channels in our project": [
          "routing",
          "consumers",
          "utilize ASGI interface",
          "settings"
        ],
        "Client side": [
          "add JavaScript to a page and connect through WebSocket",
          "send an event to the consumer",
          "receive an event from the consumer"
        ],
        "consumers": [
          "accept a connection",
          "receive an event",
          "disconnect the connection",
          "send method",
          "using scope"
        ],
        "channels' Middleware": [
          "what is the middleware ?",
          "how can i use a middleware ?"
        ]
      },
      "requirements": [
        "Django basics",
        "small knowledge about JavaScript : how to work with loops and conditions",
        "small knowledge about HTML and CSS to create the pages of the chat"
      ],
      "description": "Unlock the power of real-time web applications with our comprehensive Django Channels course. This course is designed to teach you how to use Django Channels to build dynamic, interactive applications.\n\n\nWhat You’ll Learn:\nIntroduction to Django Channels: Discover the fundamentals of Django Channels and how to leverage it for creating real-time web applications, such as web chat systems.\nUtilizing WSGI and ASGI Interfaces: Learn to effectively use and integrate WSGI and ASGI interfaces in your Django projects.\nCreating Synchronous and Asynchronous Consumers: Master the creation of synchronous and asynchronous consumers for handling real-time data.\nIntegrating Channels with Django Views: Explore how to use Django Channels within views and send real-time events through consumers.\nUser and Group Messaging: Learn to specify individual users or groups for targeted messaging and event broadcasting.\nManaging Consumer Scope and Sessions: Understand how to manage consumer scopes and user sessions via the ASGI interface, including accessing logged-in user data.\nJavaScript and Real-Time Connections: See how to use JavaScript to connect with Django Channels consumers and enable real-time functionality on the client side.\nThis course provides a step-by-step guide to mastering real-time features in Django, optimizing your skills in building scalable, interactive web applications. Whether you’re looking to enhance your Django expertise or build cutting-edge real-time applications, this course has you covered.\n\n\nEnroll now and start building dynamic web applications with Django Channels!",
      "target_audience": [
        "Web Developers looking to enhance skills with real-time features using Django Channels",
        "Python Developers interested in adding real-time messaging to Django projects",
        "Software Engineers aiming to build interactive applications with real-time communication",
        "Tech Enthusiasts eager to learn advanced real-time web development techniques",
        "Students and Beginners wanting to explore chat application development with Django Channels"
      ]
    },
    {
      "title": "JSP Programs and Project: Build a Product Management System",
      "url": "https://www.udemy.com/course/jsp-programs-and-project/",
      "bio": "Build a JSP Database Application in around 3 hours",
      "objectives": [
        "Understand some basic concepts of JSP with the help of examples.",
        "Understand the concepts required to build a JSP application",
        "Build a complete JSP project with database operations."
      ],
      "course_content": {
        "Introduction": [
          "Installation of Eclipse IDE and JDK",
          "Installation of Oracle Database",
          "Introduction and Course Overview",
          "Setup Tomcat Server"
        ],
        "JSP Basic Programs": [
          "Program 1: Hello World in JSP",
          "Program 2: Even Odd",
          "Program 3: Multiplication Table",
          "Program 4: Month of the year",
          "Program 5: Print Request Info",
          "Program 6: Click Counter",
          "Program 7: Factorial Calculator",
          "Program 8: Registration Application",
          "Program 9: Page Redirection",
          "Program 10: Simple Header Footer"
        ],
        "JDBC Basics": [
          "JDBC Connectivity Steps",
          "Establishing connection with the database",
          "Reading data from database",
          "Create Table using Statement",
          "Statement Vs PreparedStatement",
          "Insert using Statement",
          "Insert using PreparedStatement"
        ],
        "JSP Database Programs": [
          "Program 11: Read from database",
          "Program 12: Add record into database from JSP page",
          "Program 13: Dynamic Menu"
        ],
        "JSP Project: Product Management System": [
          "Introduction",
          "Login/Logout: Part 1",
          "Login/Logout: Part 2",
          "Creating Header",
          "View Products",
          "Add Product",
          "Edit Product",
          "Delete Product",
          "Search Product",
          "Running the application"
        ],
        "Conclusion and Source Code": [
          "Conclusion",
          "Bonus Lecture: Discount Coupons for my other Java courses"
        ]
      },
      "requirements": [
        "Basic knowledge of Core Java is required",
        "Basic theoretical knowledge of JSP and Servlets would be helpful as this course contains only practicals"
      ],
      "description": "JavaServer Pages(JSP) is a server-side web technology which is used to create dynamic web pages.  This course is designed to help you build your first JSP application in a short time. This course will cover all necessary concepts which are required for building your first project.\nThis course is suitable for anyone who has some basic knowledge about Core Java and wants to build a JSP project in less time. The course expects the students to have some theoretical knowledge about JSP and Servlets. It has several programming examples which will cover some basic JSP concepts. This course is highly practical-base and main focus is on practicals rather than the theory.\nApart from JSP concepts, this course also covers some basic JDBC concepts which will be helpful for building a database CRUD application. A CRUD application is basically a database application which performs basic operations like Create/Insert(C),Read(R), Update(U), Delete(D). It also has a project at the end which is a Product Management System.\nThis project has the following functionalities:-\nLogin/Logout\nView Products\nAdd Product\nEdit Product\nDelete Product\nSearch Product\nThe above project is explained line by line in the video lectures and the source code will available for students to download.(Check Conclusion and Source Code section)\nSome of the key points regarding this course:-\nTotal hands-on programming experience.\nJSP programming examples explained.\nBasic JDBC concepts covered.\nProject: Product Management System\nRequires 2-3 hours of your time.\nAs it’s a short course, it won’t be boring at all. You need to invest only around 2-3 hours of your time. I believe you will enjoy this course and learn a lot. Happy Coding :)",
      "target_audience": [
        "Anyone who wants to learn plain JSP with examples.",
        "Anyone who wants to build a JSP project in a less time"
      ]
    },
    {
      "title": "Interaction Design Specialist For Web Developers",
      "url": "https://www.udemy.com/course/interaction-design-specialist-for-web-developers/",
      "bio": "Learn how to become an Interaction Design Specialist along with Wireframing fundamentals and boost your career",
      "objectives": [
        "Understand the fundamentals of Interaction Design",
        "Think like a Designer",
        "Create Wire Frames before creating Web Sites",
        "Learn the principles of Interaction Design"
      ],
      "course_content": {
        "Introduction and Course Agenda": [
          "Introduction",
          "Course Agenda",
          "Interaction Designer Salaries"
        ],
        "Interaction Design Fundamentals": [
          "What is Interaction Design? Part A",
          "Your feedback: Updates - Let us know!",
          "What is Interaction Design? Part B",
          "Basic Principles of Design",
          "Practice Task: Challenge Best Practices"
        ],
        "All About Wire Frames": [
          "What is a Wire Frame?",
          "Practice Task- Basic Wire Frame",
          "Wire Frame Tools",
          "Practice Task - Tools for creating Wire Frames",
          "Wire Frame Tool - Exploring ProtoShare",
          "Creating a Wire Frame From Scratch",
          "Practice Task: Layout Design",
          "Wire Frame Management - Part 1",
          "Practice Task: Wire Frame Management- Visit Twitter.com and Evaluate other sites",
          "Wire Frame Management - Part 2"
        ],
        "Course Conclusion": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "You need to be tech savvy",
        "You need a stable internet connection",
        "You should have created Web Site in WordPress or from scratch, and have basic understanding of Web Site design, HTML, and CSS"
      ],
      "description": "The overall goal of this Interaction Design Specialist for Web Developers course is to help you design better products, services, processes, strategies, spaces, architecture, and experiences. Design Thinking helps you develop practical and innovative solutions for your problems.\nThe Interaction Design and wireframing approach has rapidly been adopted by some of the world's leading brands, such as Apple, Google, Samsung, and GE and the approach is being taught at leading universities around the world, including Stanford and Harvard.\nInteraction Design is a human-focused, prototype-driven process for innovation. In this course you will develop a solid understanding of the fundamental concepts of Interaction Design along with wireframing techniques and you will learn how to implement your new found knowledge in your professional work life.\nThe Benefits you will learn:\nThe fundamental concepts of Interaction Design and wireframing\nLearn wireframing techniques and principles\nLearn the difference between interaction design vs interactive design\nWhy you should use Design Thinking and why it is more effective than traditional business methods when the goal is innovation and great design in a business environment.\nPractical Interaction Design methods and tools such as Wire Frame that will empower you to apply Interaction Design at work.\nEthnographic and analysis methods, which differ from classical market research, such as focus groups and surveys.\nBy working through a complete innovation project.\nHow to initiate a new working culture based on a user-centric approach, empathy, and playful testing. A great deal of design still takes a top-down approach; specified, or determined in ways that do not involve iterative engagement with clients, customers, or end-users.\nEarly and fast prototyping as well as testing methods that will help you reduce risks and accelerate organizational learning. This is especially important if you are responsible for the introduction of new products and services.\nRecommended Background\nInteraction Design is an approach that can be applied by anyone who is interested in improving - or inventing - a given product, service, experience, or strategy.\nHowever, this beginner course is specifically designed for Web developers and programmers in mind. Anyone who uses Wireframing, Axure RP, Balsamiq, wireframes, HTML5, CSS, Bootstrap 4 framework, Java, PHP, JavaScript, Nodejs, and other programming languages to create Web Sites - then this course is for you\nYou can also take this course if you are:\nUX designers, web designers, Industrial designers, service designers, exhibit designers, visual communication designers, and architects.\nEngineers.\nMarketing professionals.\nExecutives and senior business leaders.\nDecision makers in R&D of products, services, systems, and experiences.",
      "target_audience": [
        "This Interaction Design Specialist course is designed for Web Developers and Programmers",
        "Any person who create Web Sites using WordPress can benefit from this course",
        "This course is also beneficial to individuals who use Java, Javascript, PHP, Bootstrap4, and other programming languages",
        "If you know CSS and HTML and need to gain additional skills, then this course is for you",
        "This course is not for individuals who are new to the computing industry",
        "You must have some prior knowledge of creating basic Web Sites"
      ]
    },
    {
      "title": "The Full Stack Developer Bootcamp",
      "url": "https://www.udemy.com/course/the-full-stack-developer-bootcamp/",
      "bio": "Full Stack JavaScript Web Development From Scratch.",
      "objectives": [
        "Build Full Stack JavaScript Web Sites And Applications.",
        "Work on the web, making websites with HTML, CSS, JavaScript, React, etc.",
        "Gain an understanding of how to turn your ideas into a reality through knowledge of various languages.",
        "how to use git",
        "how to use command line"
      ],
      "course_content": {
        "Level 1 | Overview + Downloads + Github": [
          "Welcome | Course Overview",
          "Discussing the Course + Other Lectures",
          "Class Group & Chat",
          "Visual Code + Node.js + Github",
          "How to Run VS Code From the Terminal on Mac OSX",
          "The Command Line (Git Bash)",
          "Git Tracking & Repositories",
          "Git Cloning & Forking",
          "Git README's",
          "Basic Git Command Recap",
          "Mini Project | Practicing Git Knowledge",
          "Mini Project Walkthrough"
        ],
        "Level 2 | Unlocking the Power of HTML": [
          "HTML: Section Overview",
          "HTML Fundamentals",
          "Create a H1 Heading and a paragraph.",
          "VS Code Plugins",
          "Block & Inline Elements + HTML Entities",
          "Build a Basic HTML Site Project",
          "Build a Basic HTML Site Solution",
          "Learning Tables and Forms",
          "Divs & Spans",
          "Classes & ID's",
          "What is Semantic HTML? HTML5 Tags",
          "Coding Project | Transform your Skillset",
          "Coding Project Walkthrough",
          "Recapping HTML",
          "Bonus: HTML Assignments",
          "Create a HTML Site about your Favorite Movie",
          "Image Gallery",
          "Debugging HTML",
          "What is the difference between an Unordered and Ordered List?"
        ],
        "Level 3 | The Beauty of CSS": [
          "CSS: Section Overview",
          "CSS Fundamentals",
          "Styling Classes/ID’s",
          "Further Selector Knowledge",
          "Linking up Pages & Styles",
          "Typography Rules",
          "Setting up Backgrounds",
          "The Box Model",
          "Floats",
          "Coding Project | Favorite Band Website",
          "Coding Project Review | Band Website",
          "Positioning",
          "The Art of Cascading",
          "Media Queries & Responsive Design",
          "Coding Project | Crafting a Portfolio Site",
          "Coding Project Walkthrough | Portfolio",
          "CSS3",
          "Gradients + Shadows",
          "CSS3 Animations & Transitions",
          "Coding Project | Choose Your Project",
          "Recapping CSS",
          "BONUS: The DevTools",
          "Study Notes -- Extra CSS"
        ],
        "Level 4 | More About Git": [
          "Git: Section Overview",
          "Github Pages",
          "Git Branching",
          "Git Branching Walkthrough",
          "Git Merging"
        ],
        "Level 5 | Bootstrap": [
          "Bootstrap: Overview",
          "What is it + How Do We Use it?",
          "The Bootstrap Grid",
          "Typography + Buttons",
          "Forms & Tables",
          "Other Components",
          "Building a Site with Bootstrap",
          "Rebuild Wikipedia in Bootstrap",
          "Wikipedia in Bootstrap Walkthrough Part 1.",
          "Wikipedia in Bootstrap Walkthrough Part 2.",
          "Independent Project"
        ],
        "Level 6 | Beginner JavaScript": [
          "Beginner JavaScript Overview",
          "Variables & Datatypes",
          "The Console",
          "Logic & Conditionals",
          "Conditionals Extra | The Switch Statement",
          "Should the Employee Be Payed Overtime?",
          "Functions",
          "Scope",
          "Loops | Part One",
          "Loops | Part Two",
          "Mini Project | Number of Letter",
          "Arrays",
          "-- Currently Working On This Section --"
        ]
      },
      "requirements": [
        "There is no prerequisites for this course, this course is aimed at ensuring students of all knowledge levels can take and understand it thoroughly."
      ],
      "description": "Through lectures aimed at hands on practice and teaching the foundation of coding, The Full Stack Developer Boot camp is a course that will take you through various languages and work, building up the skills you need in order to be a developer. We focus on code and teach you how to use GIT so when you are done with our course you have multiple projects to show for it. We want you to have up to date skills and a portfolio of projects to show for it. This isn't a course driven by slides and instead puts the student in control, pushing them to code in every single lecture. We focus on html, css, JavaScript, and JavaScript libraries such as React.JS, Node.JS and MongoDB. Plus we cover Computer Science areas such as algorithms and Data Structures that will help you pass code interviews.\n\n\n*PLEASE READ*\nThis course is being built. We add a few lectures every other night. And we are working hard to make it the best course you can find for Full Stack JavaScript Development. We bring you the boot camp with what we hope is high quality and a lot less of a price tag.",
      "target_audience": [
        "New Developers",
        "Seasoned Developers",
        "Any one with a passion for development and the web",
        "Anyone who wants to learn React",
        "Anyone who wants to learn JavaScript",
        "Anyone who wants to learn Node"
      ]
    },
    {
      "title": "CSS Tutorial For Beginners: Style Your Wordpress Templates",
      "url": "https://www.udemy.com/course/css-tutorial-for-beginners-style-your-wordpress-templates/",
      "bio": "The COMPLETE guide to bringing new life and a professional look to your website",
      "objectives": [
        "Take your websites to the next level by changing their look and their style",
        "GET RID of your frustration making changes to your website by truly understanding what's going on",
        "Have CONFIDENCE to know you can make any website look better quickly",
        "Get UNSTUCK and feel free to make new changes without being worried it will take you hours to fix"
      ],
      "course_content": {
        "Quick Course Overview": [
          "Intro To This Course"
        ],
        "Welcome! Overview Of CSS Selectors And Setup": [
          "What Are CSS Selectors + Why Do We Care?",
          "What You Need To Be Set Up For This Course",
          "What's The Point Of Using CSS?",
          "How Does The Code Work To Let Us Use CSS?",
          "Behind The Scenes Of A Form!",
          "More About CSS Selectors: Be Broad Or Be Specific"
        ],
        "Saving Changes + Child Themes": [
          "How Do We Save Our Changes?",
          "Why Use A Child Theme?",
          "How To Set Up A Child Theme In Wordpress",
          "Quick Overview On Chrome DevTools: Our New Best Friend"
        ],
        "Let's Dive In To CSS: Specific Changes": [
          "Selecting Our Code In Different Ways: There Isn't Just ONE Answer!",
          "Divs: Let's Play With Margin + Padding",
          "Divs: Floats, Backgrounds + Widths",
          "Using Multiple Selectors For The Same Div SAVES US TIME!",
          "Making Elements DISAPPEAR: Use The Display Property",
          "Divs: It's Time To FLOAT",
          "Using Placeholder Text In Your Form",
          "Watch Your Code: Placeholder MISTAKE!",
          "Using Borders: Do This To FIX Your Code",
          "What Does Text-Transform Do?",
          "Pay Attention To Small Details: Line-Height Is Important",
          "Styling Your Placeholder Text"
        ],
        "Common HTML & CSS You'll See Over And Over Again": [
          "Quick Run-through: HTML Elements You Use Every Day.",
          "Working With Images: Width, Height + Retina-Friendly",
          "Working With Links: Padding, Margin + Fixing A Common Issue",
          "Styling Links To Change When You HOVER Over Them",
          "Make A Link \"Pop\" When You Click It",
          "Quick Overview: Responsive Design"
        ],
        "Let's Go Deeper: More Common Issues + Quick Fixes": [
          "Percentages, Pixels + The Border-Box \"Hack\"",
          "Force An Element To STAY PUT",
          "Centering: Text-Align VS. Margin",
          "Should We Write Styling Into The HTML Or CSS File?",
          "CSS Specificity: Which Code Wins?",
          "How To Fix Collapsed Divs",
          "Clear Your Floating Divs!"
        ],
        "Create Your Own Form From SCRATCH!": [
          "Form Setup: What You Need To Do For This Section",
          "Next Step: Give The Inputs Some Room",
          "Width + Border-Box Saves Us Time And Having To Do Math!",
          "Form Input Backgrounds",
          "Form Borders",
          "Next Step: Text-Transform + Text-Align",
          "Make Your Fonts Match (And Use Google Fonts!)",
          "The Perfect Submit Button",
          "Make The Submit Button Change On Click!",
          "Get Inspiration From Other Websites: Model Their Code"
        ],
        "The END!": [
          "Learn One Thing At A Time + Ask Me Anything!"
        ]
      },
      "requirements": [
        "You should be familiar with Wordpress",
        "You should have very basic knowledge of HTML",
        "All required software is free (and download links are included)",
        "You should make sure you like my teaching style (please preview a video)!"
      ],
      "description": "Are you someone who has been working with Wordpress and want to take your sites to the next level by changing their look and their style?\nOr maybe you’re frustrated because you want to make changes but you can’t figure out how to do it.\nMaybe you’ve tried to make your website look better, and you’ve done the best you can but you keep getting stuck.\nIf you don’t learn this, I’m sorry to say that that frustration doesn’t go away! And as frustrating as it is now, imagine what you’ll feel like a month or a year from now when you STILL DON’T KNOW how to make your website look better quickly and easily.\nI KNOW how that frustration feels, I’ve been there, and I know how annoying it can be to know what kind of changes you want to make, but then not know HOW to make them. But I’ve learned the RIGHT way to style websites, and it’s called CSS, and that’s what I want to teach you today.\nTake a look at this example of how a simple boring form can be easily and quickly transformed into something mobile friendly and responsive! I’ll walk you through exactly how to do this and other things like it in this course.\nAlso, imagine what it will feel like to be able to look behind the scenes of any Wordpress website you visit and see how THEY styled it, and then be able to model that styling for your own website!\nImagine using code that makes your website look so much better the INSTANT you add it.\nAnd what will you feel like when you can take a boring theme and injecting it with life and your own personality, quickly and easily using CSS.\nThis course is the complete guide to beginner css and it is the exact tool you NEED in order to style your Wordpress website.\nWHEN YOU join this course TODAY, you get lifetime access. Not only that: this course will be super helpful to you now AND in the future whenever you have a question about CSS. It’s easy to ask any questions at any time and I’ll be right there with you, answering them.\nTake this course NOW and I’ll see YOU on the other side!",
      "target_audience": [
        "This course is for people who want to make changes to the LOOK and STYLE of their Wordpress website",
        "This course is for BEGINNERS to CSS and styling websites",
        "This course is for people who want to quickly and easily make their site more user-friendly and fun",
        "This course is NOT for someone who doesn't care about how their website looks",
        "This course is NOT for someone who hates learning about ways to quickly and easily make their site more user-friendly and fun",
        "This course is NOT for someone who hates learning and figuring new things out"
      ]
    },
    {
      "title": "JavaScript Mastery: Best Practices & Coding Efficiency",
      "url": "https://www.udemy.com/course/javascript-mastery-best-practices-coding-efficiency/",
      "bio": "Unlock Excellence in Coding, Async Programming, UI Development & Debugging",
      "objectives": [
        "Master JavaScript best practices for clean, efficient code.",
        "Utilize async/await and promises for asynchronous programming.",
        "Develop responsive and interactive UIs with modern JS frameworks.",
        "Implement effective error handling and debugging strategies.",
        "Organize and structure JavaScript code for maintainability.",
        "Apply coding style guides and linters for consistency.",
        "Understand and use JavaScript data types and operators correct",
        "Write concise, readable functions and avoid common pitfalls.",
        "Leverage Git & GitHub for version control and collaboration.",
        "Optimize JavaScript performance for faster web applications."
      ],
      "course_content": {
        "Introduction to JavaScript Best Practices": [
          "Introduction",
          "Importance of best practices in JavaScript development",
          "Setting up your coding environment",
          "Introduction to coding style guides and linter tools",
          "Role of AI in Programming",
          "Coding Exercise: JavaScript code according to best practices"
        ],
        "Code Structure, Organization, and Understanding": [
          "Understanding of JavaScript",
          "Implementing efficient file organization and structure",
          "Using comments effectively to document code",
          "Important Extensions",
          "How to console in a vs code"
        ],
        "Variables, Functions, and Datatypes": [
          "Choosing the right variable scope (let, const, var)",
          "Datatypes (String, Number, Boolean, Arrays, Objects, Null,)",
          "Operators: Arithmetic, Comparison, Logical, etc",
          "Control Flow: Implementing if-else Statements and switch-case Constructs",
          "Loops: Using for, while, and do-while for Iteration",
          "Objects and Arrays: Utilizing Methods and Properties",
          "Writing concise and readable functions",
          "Avoiding common pitfalls with functions (e.g., hoisting)",
          "Coding Exercise: Implement various functions for calculations, and user interac"
        ],
        "Asynchronous Programming": [
          "Understanding the event loop and asynchronous nature of JavaScript",
          "Using promises and async/await for asynchronous operations",
          "Avoiding common pitfalls with asynchronous programming",
          "Implementing efficient data fetching and manipulation techniques",
          "Coding Exercise: Develop a web application that utilizes asynchronous operation"
        ],
        "User Interface Development": [
          "Best practices for writing clean and efficient JavaScript for DOM manipulation",
          "Implementing event listeners and handling user interactions",
          "Using libraries and frameworks for UI development (React, Next, Angular, Vue).",
          "4 Building responsive and accessible user interfaces",
          "Coding Exercise: Develop a web application with a responsive and interactive us",
          "Coding Exercise: Develop a web application with a responsive and interactive use"
        ],
        "Error Handling and Debugging": [
          "Understanding different types of errors in JavaScript",
          "Implementing try-catch blocks for error handling",
          "Using debugging tools and techniques",
          "Writing unit tests to prevent regressions and ensure code functionality",
          "Coding Exercise: Implement error handling mechanisms for various scenarios and"
        ],
        "Code Testing and Debugging": [
          "Introduction to unit testing frameworks (e.g., Nest)",
          "Implementing end-to-end testing for web applications"
        ],
        "Best Practices for Performance Optimization": [
          "Understanding factors that affect JavaScript performance",
          "Implementing techniques for code optimization",
          "Leveraging browser caching and optimization strategies"
        ],
        "Git&GitHub": [
          "Set up a Git repository on GitHub for your JavaScript project.",
          "Make a pull request and contribute to an open-source project on GitHub."
        ],
        "Course Wrap-up": [
          "Common JavaScript pitfalls and how to avoid them",
          "Course takeaways and key learning points"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS.",
        "Access to a computer with internet and a text editor.",
        "Familiarity with basic programming concepts.",
        "No prior JavaScript experience required; ideal for beginners.",
        "Eagerness to learn and experiment with new techniques."
      ],
      "description": "Dive deep into the world of JavaScript with our comprehensive course, \"JavaScript Mastery: Best Practices & Performance Optimization.\" Designed for developers looking to refine their skills, this course offers a thorough exploration of JavaScript's best practices, ensuring your code is not only functional but also efficient and maintainable.\nStarting with an introduction to the significance of best practices in JavaScript development, we guide you through setting up your coding environment, understanding coding style guides, and leveraging linter tools. The role of AI in programming is demystified, providing insights into how artificial intelligence can enhance your coding process.\nDelve into code structure, organization, and variables, functions, and datatypes, mastering the nuances of effective file organization, commenting, and the use of variable scopes. Learn to implement control flow mechanisms and loops for seamless code execution, and understand the criticality of choosing the right data types and operators for your projects.\nAsynchronous programming is a game-changer in JavaScript, and our course covers everything from the event loop to utilizing promises and async/await, enabling you to develop sophisticated web applications that handle data fetching efficiently.\nUser interface development is also a significant focus, with practical exercises on writing clean JavaScript for DOM manipulation, implementing event listeners, and using popular libraries and frameworks like React and Vue.js to create responsive and interactive user interfaces.\nError handling, debugging, and testing form the backbone of reliable coding practices. We cover different types of errors, try-catch blocks, debugging tools, and unit testing to ensure your code is robust and regression-free. Additionally, we introduce unit and end-to-end testing frameworks, enhancing your debugging skills and ensuring your applications run smoothly.\nThe course culminates in best practices for performance optimization, including code optimization techniques and leveraging browser caching strategies. Git & GitHub sessions prepare you to manage your projects professionally and contribute to open-source projects.\nBy the end of this course, you'll have a solid understanding of JavaScript best practices, from writing clean code and optimizing performance to developing responsive user interfaces and debugging efficiently. Join us to elevate your JavaScript skills to a professional level, ready to tackle any project with confidence and expertise.",
      "target_audience": [
        "Aspiring developers seeking to learn JavaScript from scratch.",
        "Front-end developers aiming to enhance their JavaScript skills.",
        "Back-end developers looking to expand into full-stack development.",
        "Students and hobbyists interested in web development technologies.",
        "Professionals seeking to understand web application development",
        "Anyone interested in building interactive websites and applications."
      ]
    },
    {
      "title": "Create a fully functional HTML contact form from Scratch",
      "url": "https://www.udemy.com/course/html-contact-form-learn-to-create-html-form-in-30-minutes/",
      "bio": "Step by step guide on how to create a submit-able web form scratch using HTML",
      "objectives": [
        "HML FORMS",
        "You will have understanding of HTML FORMS",
        "Code in HTML FORM",
        "In the end of this course you will be able to create forms structures"
      ],
      "course_content": {
        "Introduction": [
          "What is HTML FORM ?"
        ],
        "HTML <Form>": [
          "<Form>"
        ],
        "Text & Password Inputs": [
          "Text Input",
          "Update",
          "Text input control",
          "Password Input",
          "Password Input Code"
        ],
        "Input Controls": [
          "Multi-line/textarea input",
          "Multi-line text input controls code example",
          "Check Boxes",
          "Checkboxes code",
          "Radio button",
          "Radio button code",
          "Select Box Control",
          "select box control code",
          "File Upload Box Control",
          "File Upload Box Control code",
          "Reset Button",
          "Reset Button code"
        ],
        "Project": [
          "HTML form project"
        ],
        "Bonus Lecture: Alumni Special Deals": [
          "10,000 free templates",
          "OE Alumni Club Member Benefits"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "Any operating system (windows, mac, linux..)",
        "A code editorA browser"
      ],
      "description": "With the purchase of this course you will become Member of OE Alumni Club and the Benefits include but not limited to.\nYou can ask any question in Q&A Section.\nYou get discounts on other courses.\nWe will be running Live streams and you will get passes to learn from them.\nDescription\nLearn HTML Form, The first coding language you need to know to succeed in web development, because it' easy to understand and easy to code\nBuild a Good and Strong foundation in HTML FORMS.\nHTML Forms\nHTML Form Element\nHTML Input Types\nA Powerful Skill at Your Fingertips\nLearning the fundamentals of HTML FORMS puts a powerful and very useful tool at your fingertips. HTML is easy to learn, has excellent documentation, and it's the base of web development.\nHTML development are awesome, and being able to learn HTML will give you a strong background to learn other web and app development programming languages.\nContent and Overview\n\nSuitable for beginning Developers, through this course of 28 lectures and 1.5 hours of content, you’ll learn all of the HTML Skills and establish a strong understanding of the concept behind Web Development. Each Section closes with a challenge, putting your new learned skills into practical use immediately.\nHTML Forms are one of the main points of interaction between a user and a web site or application. They allow users to send data to the web site. Most of the time that data is sent to the web server, but the web page can also intercept it to use it on its own.\nAn HTML Form is made of one or more input elements. Those input elements can be text fields (single line or multiline), select boxes, buttons, checkboxes, or radio buttons. Most of the time, those input elements are paired with a label that describes their purpose.",
      "target_audience": [
        "Who wants to level up their HTML FORMS skills",
        "Who have not understood some HTML FORMS",
        "Who wants to learn and code HTML FORMS"
      ]
    },
    {
      "title": "Build your own awesome responsive Personal PORTFOLIO site",
      "url": "https://www.udemy.com/course/build-your-own-awesome-responsive-personal-portfolio-site/",
      "bio": "Learn HTML5, CSS3, JS, Bootstrap and HOSTING while you create your own personal landing portfolio website",
      "objectives": [
        "Front-end development",
        "HTML",
        "CSS",
        "Javascript",
        "Git and Github",
        "Hosting",
        "Building Personal Portfolio",
        "Self Branding"
      ],
      "course_content": {},
      "requirements": [
        "Basics of coding"
      ],
      "description": "Grab on to your seat belts, you are going to build your very own personal PORTFOLIO site now.\nIn the process, you will learn about HTML5, CSS3, JavaScript, Bootstrap, and some design systems based on bootstrap. You will also learn about hosting a responsive portfolio on the internet. You will follow along with complete details, no points skipped. I will show you while I create my own portfolio. You will also learn the basics of Git and GitHub as well.\n\n\nWhy do you need a portfolio?\nA portfolio website communicates your professionalism and commitment to the art more effectively and plainly than a CV. You don't just tell; you present real-life examples and scenarios that speak for themselves. Furthermore, the portfolio website allows you to demonstrate your mature and professional approach to selling your work as well as yourself. Your portfolio is the only place on the internet where you have complete control.\nYou can construct a never-before-seen platform with unique content and a recognizable brand just how you want it. Your inner creativity can go far beyond any cliché with a private portfolio website. An online portfolio will ensure that you are visible and searchable to potential clients. It enables potential employers to locate you as soon as they use a search engine or go through candidate applications.\nA web-based portfolio humanizes you as a master of your craft. People come to you because they like you, not because you're a great web designer, marketer, or copywriter. It's a clever psychological ruse, to be sure. Customers choose people who appear to be more decent, \"likable,\" and friendly-looking than others. Hard skills, on the other hand, are frequently regarded later.",
      "target_audience": [
        "Beginner developers",
        "People curious about Front end development",
        "One who wants to create their own personal portfolio",
        "One who wants personal website",
        "Curious about web development",
        "Interested in HTML, CSS and Javascript"
      ]
    },
    {
      "title": "Learn WordPress Now: WordPress for Beginners",
      "url": "https://www.udemy.com/course/learn-wordpress-now/",
      "bio": "Introductory WordPress course for beginners who want to become familiar with WordPress and create a blog using WordPress",
      "objectives": [
        "Learn how to use the WordPress web platform to set up and create a blog or website",
        "How to navigate the WordPress dashboard",
        "Learn WordPress terminology and language",
        "How WordPress can be used and the functions of each button"
      ],
      "course_content": {},
      "requirements": [
        "Interested in learning how to use WordPress",
        "Interested in setting up a website or blog using WordPress",
        "No prior experience needed. You will learn everything you need to know!"
      ],
      "description": "Have you ever wanted to start a website or blog on WordPress but didn't know where to start? Ever felt overwhelmed by all the technical lingo or steps? Not to worry! With my Learn WordPress Now: WordPress for Beginners course, I take your hand and guide you step-by-step from the very beginning to show you how to get started and become familiar with the WordPress platform in order to have your own blog or website set up in under an hour! In this course, you'll not only learn the steps needed to take to get started, but you'll also learn useful terms associated with WordPress, the function and purpose of certain buttons, how to customize your website, and publish blog posts, and pages, and much more! This course is designed for beginners who are right at the beginning of their WordPress journey, so no need to worry about needing to have prior experience in order to take this course. This course also offers a tutorial-based approach in which I teach you where to go and what to click, and you can either follow in real time or take notes. Not only this but this course is packed with quizzes and material to help you remember the terms and steps you have to take to where you want to go. Additionally, this course is also updated to the latest version of WordPress as of September 2021, and not much will change in future versions as the WordPress platform has recently been redesigned and upgraded. I guarantee that you will find this course helpful and motivating in order to get you on your way to becoming fluent in WordPress!",
      "target_audience": [
        "Beginner WordPress users",
        "People interested in learning how to use WordPress"
      ]
    },
    {
      "title": "Master class Bootstrap 5 Course - Responsive Web Design",
      "url": "https://www.udemy.com/course/bootstrap-5/",
      "bio": "Become an in-demand Bootstrap Ninja by learning all the web developments features for creating responsive websites",
      "objectives": [
        "Bootstrap Programming",
        "Web Programming",
        "Application Programming",
        "Mobile Development",
        "Mobile Design",
        "Cross Platform Development",
        "Web Development",
        "Semantics of General Programming",
        "The Format of Coding Applications",
        "Web Design",
        "All The Features of Bootstrap & Web Development",
        "JavaScript Programming",
        "Bootstrap 5 Development"
      ],
      "course_content": {},
      "requirements": [
        "Passion For Learning Bootstrap",
        "Basic Computer Knowledge and Skills",
        "Passion For Learning Web Development",
        "Basic Knowledge of Computer Science Is Optional"
      ],
      "description": "Learn about everything there is to know about Master class Bootstrap 5 Course - Responsive Web Design. A step by step process is used to explain every facet of these topics.\nNOTE: This course includes information on web programming, design, OOP, JavaScript!\nGain a good understanding of the following concepts with this course:\nWhat Bootstrap 5 is?\nWeb Certifications\nHow to develop websites using Bootstrap & a responsive design philosophy\nFeatures of the Bootstrap language\nCoding semantics\nApplication programming\nWebsite programming\nBootstrap is the most popular responsive framework in the world. It is requested by all companies such as Google, Facebook and Microsoft for development. This course will ensure you are not left out as more and more companies request this awesome and powerful language. This course will teach you everything about programming Bootstrap websites.\nYou will receive all the knowledge to use and leverage the powerful technology behind these amazing and wonderful platforms.\nOver 675,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only Bootstrap Programming course that you will need!",
      "target_audience": [
        "Anyone Looking To Learn About Bootstrap Coding",
        "Developers Looking To Learn The Skills Needed To Utilise Bootstrap Features",
        "Bootstrap Developers",
        "JavaScript Developers",
        "Web Developers",
        "Web Designers",
        "Front End Developers",
        "Back End Developers",
        "Application Programmers",
        "People Looking To Learn About Programming",
        "Those Seeking To Understand How Bootstrap Programming Works",
        "People Seeking Guidance On How To Create Bootstrap Websites",
        "Beginners & Experts In This Field",
        "People With a Desire To Improve Their Programming Knowledge"
      ]
    },
    {
      "title": "Java Programming Masterclass: Build 50 Real-World Projects",
      "url": "https://www.udemy.com/course/java-development-projects/",
      "bio": "Mastering Java Development: JSP, JDBC, Servlets, Swing, Spring Boot, Maven, Hibernate",
      "objectives": [
        "Gain in-depth understanding of core & advanced features of Java",
        "Master Object-Oriented Programming concepts by using a real-world application as a case study",
        "Get real-world experience by developing an Java based Web application using technologies like JSP, Servlets",
        "Discover best practices to write clean, maintainable, and efficient Java code.",
        "Unlock career growth by mastering one of the industry's leading programming languages.",
        "Get hands-on experience in Java libraries, frameworks, and the Java ecosystem.",
        "Build portfolio-worthy projects that showcase your Java programming skills."
      ],
      "course_content": {},
      "requirements": [
        "Knowledge Of JAVA"
      ],
      "description": "This extensive Java Projects Development Course provides a plethora of practical projects designed to bolster your proficiency in Java programming. Through a series of hands-on projects, you will gain valuable experience in Java development while delving into a myriad of Java technologies and frameworks. From constructing engaging interactive games and robust management systems to crafting sophisticated web applications and indispensable utilities, this course encompasses a vast array of Java applications to elevate your programming prowess significantly. Upon completing the course, you will possess a substantial portfolio of Java projects, allowing you to effectively showcase your expertise to potential employers or clients.\nBelow is the series of 50 projects taught in this course:\nProject-1: Childhood Revisited: Tic Tac Toe Game - Java, Swing, AWT\nProject-2: Advanced Digital Calculator - Java, JFrame\nProject-3: Hurdles & Paths: Maze Game - Java, JFrame\nProject-4: Comprehensive Student Management System - Java, MySQL, JDBC\nProject-5: Restaurant Billing & Menu System - Java, JFrame, MySQL\nProject-6: Servlet-Based User Management - Java, Servlet, MySQL\nProject-7: CLI Music Player Navigator - CORE Java\nProject-8: Peer-to-Peer Java Chat Application - Java, Swing, Socket\nProject-9: SpringBoot CRUD API Explorer - Java, SPRINGBOOT\nProject-10: All-In-One Gym Management Suite - Java, JFrame, MySQL\n\n\nProject-11: Multiscale Temperature Converter GUI - Java, JFrame, JSE\nProject-12: File Operations Mastery System - Java, Core Java, JSE\nProject-13: Bus Ticketing & Management System - Java, JFrame, MySQL\nProject-14: Universal Admin Monitoring Portal - Java, JSP, MySQL, JEE\nProject-15: Guess the Computer's Number Game - Java, JFrame, JSE\nProject-16: Symbol Pairing: Find the Twins Game - Java, JFrame, JSE\nProject-17: Musical Inventory Management Portal - Java, JFrame, MySQL, JEE\nProject-18: The Learning Parental Piggy Bank - Java, JFrame, MySQL\nProject-19: Centralized Food Stock Manager - Java, JFrame, MySQL, JSE\nProject-20: Personal Budget & Finance Tracker - Java, JFrame, MySQL, JSE\n\n\nProject-21: Electric Efficiency: Automate Electricity Billing with Java, Swing, JDBC, MySQL\nProject-22: Hotel Haven: Streamline Hotel Management with Java, Swing, JDBC, MySQL\nProject-23: Airborne: Elevate Airlines Management with Java, Swing, JDBC, MySQL\nProject-24: University Universe: Manage Academics Effortlessly with Java, Swing, JDBC, MySQL\nProject-25: Journey Jockey: Optimize Travel and Tourism with Java, Swing, JDBC, MySQL\nProject-26: Store Success: Enhance Store Billing Systems with Java, Swing, JDBC, MySQL\nProject-27: Bank Balance: Revolutionize Bank Management with Java, Swing, JDBC, MySQL\nProject-28: App Odyssey: Explore Application World with Java Core, Swing, AWT\nProject-29: Payroll Precision: Handle Payroll Efficiently with Java, Swing, JDBC, MySQL\nProject-30: Cab Comfort: Simplify Cab Booking Systems with Java, Swing, JDBC, MySQL\n\n\nProject-31: Playlist Paradise: Create a Java Playlist Application with SE & OOPS\nProject-32: Web Wizardry: Develop a Java Web Browser Application with SE, Maven & OpenJFX\nProject-33: Pentomino Puzzles: Master Pentominoes Game with Java SE and Swing API\nProject-34: Number Ninja: Play the Number Puzzle Game in Java SE with Swing API\nProject-35: Currency Converter Pro: Convert Currency Smoothly with Java SE, Maven, Swing\nProject-36: Bridge Battle: Challenge in the Bridge Game with Java SE, Swing & Java AWT\nProject-37: RPS Royale: Play Rock Scissor Paper Game with Java SE, Maven, Swing\nProject-38: Dungeon Delve: Embark on an Adventure in Dungeon Game with Java SE & OOPS\nProject-39: Minesweeper Marvel: Conquer Minesweeper Game with Java SE and Swing API\nProject-40: Sokoban Strategy: Solve Puzzles in Sokoban Game with Java SE and Swing API\n\n\nProject-41: SchoolPay Plus: Manage School Payments Effortlessly in JAVA-Core Java\nProject-42: Notepad Nirvana: Craft Your Notepad Clone using JAVA-Core Java\nProject-43: Snake Saga: Feed the Snake in this JAVA GUI Game-Core Java, Swing API\nProject-44: Music Melody: Create a Music Playlist Library using JAVA-Core Java, Swing API\nProject-45: Tic-Tac-Thrill: Play an Engaging Noughts and Crosses Game in JAVA-Core Java\nProject-46: Foodie Fiesta: Order Food Hassle-Free with Food Ordering System in JAVA-Core Java, Swing API\nProject-47: Download Dynamo: Manage Downloads Efficiently in Download Manager in JAVA-Core Java\nProject-48: ATM Access: Experience ATM Machine Interface using JAVA-Core Java\nProject-49: Contact Keeper: Organize Contacts Seamlessly in Contact Repository Interface using JAVA-Core Java\nProject-50: Paint Pro: Unleash Creativity with Painting Canvas Tool in JAVA Swing-Core Java",
      "target_audience": [
        "Beginners In JAVA"
      ]
    },
    {
      "title": "Dialogflow Guide: From Zero to AI Chatbot Developer",
      "url": "https://www.udemy.com/course/dialogflow-guide-from-zero-to-ai-chatbot-developer/",
      "bio": "Zero to Hero in Dialogflow: Create Intelligent Assistants, Build, Deploy, Scale, Design, Test, and Launch for Success.",
      "objectives": [
        "Understand the fundamentals of conversational AI and Natural Language Understanding",
        "Create and configure Dialogflow agents from scratch",
        "Design effective intents and rich entities to capture user inputs",
        "Use contexts and session parameters to manage multi‑turn dialogues",
        "Implement fulfillment with webhooks or Cloud Functions to connect to external APIs & databases",
        "Integrate agents with popular messaging platforms and host them on websites or mobile apps",
        "Apply best practices in conversational UX to guide users naturally and handle errors gracefully",
        "Leverage Dialogflow’s analytics & training tools to monitor performance & iteratively improve your agents",
        "Distinguish between Essentials (ES) & Customer Experience (CX) editions & choose right features for use case"
      ],
      "course_content": {},
      "requirements": [
        "Willingness to Learn"
      ],
      "description": "CRITICAL NOTICE Prior to Enrollment:\n\n\nThis course does not serve as a substitute for official vendor materials necessary for certification exams. It lacks endorsement from the certification vendor, and participants will not receive official certification study materials or a voucher as part of this course.\nUnlock the power of conversational AI as you dive into this comprehensive Dialogflow course designed to take you from novice to chatbot ninja.\nDialogflow is Google Cloud’s conversational AI platform that lets you build natural and rich conversational experiences—whether through text or voice—across a variety of applications and devices. At its core, Dialogflow uses Natural Language Understanding (NLU) to interpret the intent behind what users say, map it to predefined “intents,” and extract key information (“entities”) from the conversation. It handles language detection, intent classification, and entity extraction out of the box, freeing you to focus on designing the flow and personality of your chatbot or voice assistant.\nYou’ll start by understanding the core principles of natural language processing and how Dialogflow leverages Google’s powerful AI engine to interpret user intent.\nStep by step, you’ll build real-world chatbots for both text and voice interfaces—learning to craft effective intents, define rich entities, and fine‑tune responses so your virtual assistants feel truly human. Along the way, you’ll gain hands‑on experience setting up fulfillment with webhooks and integrating external APIs to pull in dynamic data, giving your bots supercharged capabilities.\nBy working through practical, project‑based lessons, you’ll create five unique chatbots that tackle real business challenges: a customer support agent that handles FAQs, a booking assistant that schedules appointments, an e‑commerce helper that suggests products, a voice‑enabled smart home controller, and a fun trivia quiz bot that showcases advanced contexts and follow‑up intents.\nYou’ll discover how to connect your Dialogflow agents to popular messaging platforms like Facebook Messenger, Slack, and Telegram, as well as how to host them on your own website or mobile app using Firebase and Cloud Functions. This end‑to‑end workflow will give you the confidence to deploy scalable solutions to production.\nThroughout the course, you’ll learn best practices for conversation design—ensuring your bots guide users naturally, recover gracefully from errors, and collect necessary information without friction. You’ll explore advanced topics like slot‑filling, entity synonyms, and composite entities, plus how to leverage contexts and session parameters to manage multi‑turn dialogues. You’ll also get a behind‑the‑scenes look at Dialogflow’s analytics and training tools, enabling you to continuously improve your agent’s performance as you gather real user data.\nWhether you’re a developer looking to add AI‑powered chatbots to your portfolio or a product manager seeking to streamline customer interactions, this course will equip you with actionable skills and a deep understanding of conversational AI. By the end, you’ll not only have a rich collection of deployable chatbot projects but also the expertise to design, build, and maintain intelligent assistants that delight users and drive business value.\nJoin now, and start transforming the way people interact with your applications!\nThank you",
      "target_audience": [
        "Aspiring Chatbot Developers: If you want hands‑on experience building intelligent bots from the ground up, you’ll get the practical skills you need.",
        "Software Engineers & Web Developers: Learn to integrate conversational interfaces into your apps using Dialogflow’s APIs, webhooks, and Google Cloud Functions.",
        "Product Managers & UX Designers: Discover the principles of conversation design and how to map user journeys so you can lead AI‑powered projects with confidence.",
        "Customer Support & Operations Teams: Automate routine inquiries, bookings, and FAQs with chatbots that free up your team to focus on higher‑value tasks.",
        "Business Owners & Entrepreneurs: No deep coding background required—learn to deploy text‑ and voice‑bots that enhance customer engagement, generate leads, and streamline workflows.",
        "AI & Data Enthusiasts: Explore the nuts and bolts of natural language understanding, entity extraction, and intent classification on a world‑class platform."
      ]
    },
    {
      "title": "Laravel Essentials: User Roles & Permissions with Spatie",
      "url": "https://www.udemy.com/course/laravel-10-essentials-user-roles-permissions-with-spatie/",
      "bio": "Laravel Access Control Made Easy: Implementing Roles and Permissions with Spatie",
      "objectives": [
        "Install and configure XAMPP, Composer, and Laravel to create a conducive development environment.",
        "Set up authentication features including sign-in, sign-up, and forget password functionalities to enhance user security.",
        "Learn to perform CRUD operations on user data, including listing, creating, updating, and deleting users.",
        "Install Spatie Permissions for ACL and understand how to define roles, permissions, and seeders to manage access control.",
        "Create, list, update, and delete roles to effectively organize users within the application.",
        "Define and manage permissions for various user roles, including creating, updating, and deleting permissions, as well as syncing permissions.",
        "Explore advanced techniques such as protecting links using Blade directives and URLs using middleware to enforce access control.",
        "Understand the importance of access control in building secure and scalable web applications."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of PHP",
        "Understanding of Laravel Fundamentals",
        "Desire to Learn"
      ],
      "description": "Unlock the power of Laravel for advanced user management and access control with our comprehensive course, \"Laravel Essentials: User Roles & Permissions with Spatie.\" Designed for intermediate Laravel developers, this course dives deep into implementing robust user roles and permissions using the popular Spatie library.\n\n\nIn this course, you'll embark on a hands-on journey through essential Laravel concepts and tools, meticulously structured into seven sections to guide you through every step of the process.\n\n\nSection 1: Setting Up Development Environment Start by setting up your development environment with XAMPP Server, Composer, and Laravel. Learn how to configure authentication to secure your application's access.\nSection 2: Setting Up Template Design a sleek and intuitive user interface with dedicated pages for the dashboard, sign-in, sign-up, and password recovery.\nSection 3: Managing Users Explore user management functionalities including listing, creation, deletion, and updating of user accounts.\nSection 4: Implementing Access Control with Spatie Permissions Delve into Spatie Permissions for fine-grained access control. Learn to seed roles and permissions efficiently to streamline your application's authorization process.\nSection 5: Managing Roles Master role management with features for creating, listing, updating, and deleting roles. Dive deep into showcasing role details for enhanced administrative control.\nSection 6: Managing Permissions Gain expertise in permission management by learning how to list, create, update, and delete permissions. Understand the importance of synchronizing permissions for seamless access control.\nSection 7: Implementing Access Control Techniques Discover advanced techniques for protecting links and URLs using Blade directives and middleware, ensuring robust security for your Laravel application.\n\n\nBy the end of this course, you'll have the skills and confidence to implement sophisticated user roles and permissions systems in your Laravel applications, empowering you to build secure and scalable web solutions with ease.\nEnroll now and take your Laravel development skills to the next level with \"Laravel Essentials: User Roles & Permissions with Spatie.\"",
      "target_audience": [
        "Intermediate Laravel Developers",
        "Web Developers familiarity with PHP",
        "Software Engineers interested in Laravel",
        "Laravel Professionals seeking career advancement",
        "Tech Enthusiasts keen on Laravel"
      ]
    },
    {
      "title": "Master Tailwind CSS: Build 2 Advanced Projects",
      "url": "https://www.udemy.com/course/master-tailwind-css-with-projects/",
      "bio": "Master the latest Tailwind CSS v.3 with project based approach and learn to convert Figma design to Tailwind CSS website",
      "objectives": [
        "Customize & Configure Tailwind CSS.",
        "Make Ultra responsive designs with Tailwind CSS (RWD).",
        "Write Optimized and Performant Code for Production.",
        "Apply Dark and Light Mode.",
        "Managing duplication and create reusable styles.",
        "Convert Figma design to Real website Using Tailwind CSS"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML and CSS"
      ],
      "description": "Tailwind CSS is a highly customizable CSS framework which can be used directly in your HTML. No more heavy CSS. it's designed from the ground up with customization in mind.\n\nWhy Tailwind CSS?\n• Easily customize and configure however you want to.\n• Create unique looking website (this is not the case in Bootstrap).\n• Utility First\n• Faster CSS Styling Process\n• Responsive Design.\n• Easily used with any frameworks.\n• Tiny (super fast in production).\n• Easily apply Dark Mode and more themes.\n• Beautiful Color Presets.\n• Plugins.\n• Customization...Customization...Customization.\n\n\nIn this course I will take project based approach to teach you the latest Tailwind CSS. we will build 2 beautiful real world production ready websites together. we will see the basics, some of the advanced concepts and techniques to achieve our needs. In these project we will not only see the common designs(like cards, buttons, form inputs...) but we will go beyond and cover how you can make really great designs.\nI will update this course regularly when necessary.\n\n\nWhat You Will Learn?\n• Customize & Configure Tailwind CSS.\n• Write Optimized and Performant Code for Production. ?\n• Make responsive designs with Tailwind CSS (RWD).\n• Apply Dark and Light Mode.\n• Managing duplication and creating reusable styles.\n• Not only bound to the pre-defined styles but you will learn hot to add and customize your own presets.\n• Practically Understand the difference between tailwind CSS and other CSS frameworks like bootstrap.\n\n\n2 Real World Projects\nWe will create 2 real world websites. These projects are open source and free to use.\nTail Listing - Business and Directory Listing Website\nTail Furniture - Furniture Showcase Website (Figma to Tailwind CSS)",
      "target_audience": [
        "For anyone with no previous tailwind CSS experience.",
        "For frontend/backend Developers.",
        "Already Know Tailwind CSS but want to learn more and build projects.",
        "Anyone who want to learn and work with Tailwind CSS."
      ]
    },
    {
      "title": "Google Apps Script Consent Form Exercise - JavaScript Cloud",
      "url": "https://www.udemy.com/course/google-apps-script-course/",
      "bio": "Practice Exercise for Learning how to use Google Apps Scripts - Track within a Spreadsheet, send email, convert to PDF",
      "objectives": [
        "Create Google Script to power Google Apps",
        "Create apps with Google Script",
        "Build a form that submits data to a spreadsheet and sends email"
      ],
      "course_content": {
        "Introduction to using Google Apps Script": [
          "Google Script App Introduction",
          "Setup Google Script",
          "Setup Developer Environment",
          "HtmlService Output HTML",
          "HtmlService Try and Catch",
          "HTML form submission to GS",
          "Google Script RUN",
          "SpreadSheet App add data",
          "Send and Email with PDF of Doc",
          "Add to Google Sites Embed Web app URL",
          "Source Code Overview",
          "Source Code"
        ],
        "Bonus Section": [
          "Google Apps Script Resource and code example Guide",
          "Reference Materials and Links"
        ]
      },
      "requirements": [
        "Google account",
        "JavaScript and basic HTML and CSS knowledge",
        "Basic Web development understanding"
      ],
      "description": "Learn more about what Google Script can do and how to create time saving amazing applications.\nApps Script is a scripting language for light-weight application development in the G Suite platform.  Google Apps Script is a scripting language based on JavaScript that lets you do new and cool things with G Suite products like Docs, Sheets, Gmail and others. There's nothing to install — we give you a code editor right in your browser, and your scripts run on Google's servers.\n\nWithin the lessons of the course we show you how to build a fully functional mini application that can accept user data within a form, submit that content to a spreadsheet, email out a response, take a document and convert it to a pdf.  All this an a whole lot more, source code is included.\nSource code included, learn how to use Google Script to extend what your Google Docs can do.  Along with friendly support in the Q&A to help you learn and answer any questions you may have.\n\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nTaught by a knowledge instructor with many years of web development experience, ready to help you learn.\nJoin now and create your own Google Scripts Apps see what is possible.",
      "target_audience": [
        "Anyone who wants learn more about Google Scripts",
        "Anyone who wants to explore how to use Web App within Google Script",
        "Web developers who want to incorporate Google Script functionality",
        "Practice and apply Google Suite of Products"
      ]
    },
    {
      "title": "WordPress Speed Optimization & Google Core Web Vitals 2024",
      "url": "https://www.udemy.com/course/wordpress-speed-optimisation/",
      "bio": "The Ultimate WordPress Speed Optimization & Google Core Web Vitals Course - Your A - Z Blueprint For Performance & Speed",
      "objectives": [
        "Master the fundamentals of web page speed and how page loading times are measured in the real world",
        "Dive into Googles Core Web Vitals and uncover exactly what your website needs to perform at its best and maximise search engine rankings",
        "Uncover the Speed Optimization tools I use for every single clients website to lightning fast page loads every single time",
        "Learn all the speed optimisation skills for yourself and apply your new skills to your own websites for better user experience and performance",
        "After mastering speed optimisation with these new skills, you will be able to start your own WordPress speed optimisation service and create additional money",
        "Learn my own 'Real World' strategies, plugins, tips and tricks that I apply to client websites that I charge $350+ for",
        "Apply what you learn in this course to maximise your visitors user experience, SEO performance, user engagement and ultimately monetisation, sales and income",
        "The most up-to-date course with all of the most up-to-date techniques, plugins and tools so you can dominate your user experience and search engine rankings",
        "Master the skills to be able to troubleshoot website page speed issues and resolve them 'on the fly' as they arise and before they cause any performance issues",
        "Utilise your new skills to save resources with your hosting company and cut your costs for your website/business"
      ],
      "course_content": {},
      "requirements": [
        "Completely beginner friendly - all you need is a basic understanding of WordPress",
        "Take you from zero to hero at WordPress speed optimisations",
        "You will need a paid subscription to Perfmatters which costs $20 per year (including coupon code)"
      ],
      "description": "Have you ever wondered why your competitors outrank you on the search engines when your content is so much better? Ever  questioned why your website loads so slowly when your competitors load in a blink of an eye?\n\n\nFinally, my WordPress Speed Optimization Blueprint course is here! This is where I will show you how you can make your website load in the blink of an eye so you can outperform your biggest competitors and rank higher on the search engines!\n(This course was requested by more than 1,000 of my students)\n\n\nMaster all of my personal tips, tricks & techniques I have been tweaking, improving and optimising for the past 15 years, so that you can uncover the same kind of crazy-fast page load speeds & Google Lighthouse Scores I have been delivering for clients for years.\n\n\nSo, why are page loading times so important? Below are some fun facts from a 2022 survey;\n\n\nGoogle's Revelation: A 500ms (half-second) slowdown chops down their ad revenue by 20%. Quick and impactful!\nAmazon's Discovery: A barely-there 100ms delay (one-tenth of a second) shaves off 1% of their revenue. Every millisecond counts!\nYahoo's Triumph: Improving their load time by just 400ms led to a 9% surge in traffic. Speed does wonders!\nUser Preference: 27% admit they'd skip to a competitor if a site drags its feet. Loyalty has its limits!\nGoogle's Speed Crusade: They're so gung-ho about speed and user experience, that they're testing a \"SLOW\" label in search results for the tortoises of the web world. Speed is king!\n\n\nNot only do page loading times impact on user experience but also your ability to rank high on the search engine results pages. Since Google has confirmed that page loading times and user experience are now a ranking factor, there has never been a more important time to ensure your website pages load with lightning-fast speeds.\n\n\nJust some of the things you will learn from this course are;\n\n\nFundamentals of Page Speed and how this is measured\nMaster Google's Page Page Insights (PSI) tool and how to troubleshoot your reports\nMaster Google's Core Web Vitals and create changes that positively impact your user experience and ranking potential\nLearn the very best hosting companies I use for the fastest speeds for hundreds of mine and my client's websites\nLeverage the 3 main types of web cache and save resources, costs and catapult your website performance\nIdentify and fix render-blocking resources\nResolve modification and contamination issues\nFine-tune your JS, CSS & HTML page optimizations and squeeze every single millisecond from your page loading times\nMaster image optimizations, lazy loading and preloading\nLearn the skills to troubleshoot and resolve key web vital issues such as Largest Contentful Paint & Cumulative Layout Shift\nMy name is Ricky Wallace, and I have been building websites for clients for over 15 years. With every website I build, I offer a side service for $350 to optimise their website for speed. If you are a WordPress developer, or even aspiring to be one, then this course will show you how you can add additional $ onto every new client and bring in an additional stream of revenue on top of your standard services.\n\n\nAnd even if you do not want to make a business out of this, you will still learn how you can apply these speed optimisations to all of your own personal and business websites so that they perform better and rank higher than every single one of your competitors.\n\n\nReady to get started?\nSee you on the inside :)\nRicky",
      "target_audience": [
        "WordPress website owners who want to maximise page loading times, website performance, user experience, sales, income and monetisation",
        "WordPress developers who want to add an additional service to their skillset, ready for additional income and sales",
        "Anyone wanting to maximise WordPress speed optimisations, performance and cut down hosting costs"
      ]
    },
    {
      "title": "ASP NET CORE WEB API",
      "url": "https://www.udemy.com/course/aspnet-core-web-api/",
      "bio": "Comprehensive Asp Net Core Web API from Intermediate to Advanced. Entity Framework Core,RESTful Web Services ,Postman",
      "objectives": [
        "Learn RESTful web services with Asp Net Core Web API",
        "Fully Understand How To Use Web API in Asp Net Core",
        "Learn and apply about JSON"
      ],
      "course_content": {
        "Web API Basics": [
          "Introduction",
          "What is Web API",
          "More details about Web API",
          "Why choose Asp Net Core Web API",
          "Http Protocols",
          "First Web API project",
          "Asp net Core Web API project overview",
          "What is Postman and Fiddler",
          "What is Postman and Fake Data"
        ],
        "Entity Framework Core (InMemory Cache)": [
          "Create Database Table",
          "Using Entity Framework InMemory",
          "Create the Database Context",
          "Dependency Injection and Register the Database Context",
          "Source Codes"
        ],
        "Entity Framework Core": [
          "What is Entity Framework Core",
          "Add Entity Framework Core to Project",
          "Adding Entity Framework to Csproj Files (New)",
          "Create Database Tables",
          "Base Classes in Entity Framework Core",
          "Create Data Context in Entity Framework Core",
          "Adding Dependency Injection",
          "Dependency Injection"
        ],
        "Working With Web API": [
          "Setup And Create Controllers",
          "Create Actions",
          "Working with Data and Postman",
          "Upgrade Post Method",
          "Web API - Update Method",
          "Web API - Delete Method",
          "Source Codes"
        ],
        "Best Practises": [
          "Query String in Web API",
          "Working with Controllers"
        ],
        "E-commerce Project API": [
          "Project Overview (Code)",
          "Talk About Api Controllers",
          "Coding Category Api (Get)",
          "Coding Category Api (Post)",
          "Coding Category Api (Update)",
          "Coding Category Api (Delete)",
          "Coding Product Api (Constructure)",
          "Coding Products Api (Get)",
          "Coding Products Api (Get Method ViewModels For Update)",
          "Coding Products Api (Get Method ViewModels For Insert)",
          "Coding Products Api (Post Image Files)",
          "Coding Products Api (Create Products)",
          "Coding Products Api (Delete Products)",
          "Source Codes",
          "Last Touches"
        ]
      },
      "requirements": [
        "Basics of Asp Net Framework",
        "Visual Studio 2017 (FREE)",
        "Postman or Fiddler (FREE)",
        "Some knowledge and experience in C#"
      ],
      "description": "Wellcome to ASP.NET Core Web API Course!\nIn this course, you will learn Web API on ASP.NET Core with details. This course starts from beginner level and expands to the advanced level.\nWhile we teach you about Web API, we will perform more than one live projects on different platforms and different frameworks.\nWe will discuss normally created Web API projects,\nAlso Web API projects that are created by the templates on Visual Studio 2017.\nAnd lastly we will learn about everything about a project that will be created by us manually from zero.\nWe will work with Entity Framework and learn how to get data with it.\nSo you will learn everything from beginner level to advanced level about Web API.\nWhen these topics are all covered you will be comfortable about the Web API subject and you will be able to integrate Web API to the projects that you create like Angular 2, Web or Mobile Apps.\nAnd also you will learn the important points to be careful of and some hints about Web API.\nThis is the most comprehensive Web API Course EVER :)",
      "target_audience": [
        "Web Developers",
        "Mobile Developers",
        "Desire to learn Web API"
      ]
    },
    {
      "title": "E-commerce Web with Angular 8 (Material) & Firebase in 2020",
      "url": "https://www.udemy.com/course/e-commerce-apps-with-angular-8-material-firebase-2020/",
      "bio": "Building Web Applications (E-commerce - Elearning) with Angular 8 (Material) & Firebase in 2020.",
      "objectives": [
        "Angular, Firebase, NoSQL",
        "Master the essential Angular concepts",
        "Master the essential Firebase concepts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What's Firebase ?",
          "Setting Up the Development Environment",
          "Create a new project in Angular",
          "Create a new project in firebase.google.com",
          "Installation & configuration Firebase",
          "Create database Real-time in Firebase and test the connection",
          "Installation Angular Material",
          "Configuration Angular Material",
          "Download the project.zip"
        ],
        "Front-End Architecture,Navigation Menu,Routes": [
          "Introduction",
          "Organise the project in small modules",
          "Creation the folder of components, models, services",
          "Creating Navigation Menus",
          "Defining the routes",
          "Defining the routerlink",
          "Add tab-group for courses component",
          "Download the project.zip"
        ],
        "Adding and getting the data from database NoSQL firebase": [
          "Introduction",
          "Adding the list of categories in the database firebase",
          "Getting a list of categories",
          "Adding the list of courses in database firebase",
          "Creating a service to get the list of courses",
          "Display the list of courses in the template HTML",
          "Download the project.zip and firebase-project.json"
        ],
        "Authentication and Authorization": [
          "Introduction",
          "Architecture",
          "Implementation of the Login",
          "Implementation of the logout",
          "Modify the Menu",
          "Displaying the Current User",
          "Protecting the routes",
          "Save users in database firebase",
          "Protecting the routes for Admin",
          "Adding Admin role to project",
          "Download the project .zip"
        ],
        "Admin : Mangement courses": [
          "Introduction",
          "Displaying the list of courses",
          "Adding the Popup",
          "Creating a template HTML for Popup",
          "Adding the Reactive Forms",
          "Update a course",
          "Delete a course",
          "Download the project.zip"
        ],
        "Shopping Cart": [
          "Introduction",
          "Add shopping cart in database Firebase",
          "Showing and hiding the button Add course",
          "Increment Shopping Cart",
          "Create a recap of Shopping Cart",
          "Download the project.zip"
        ],
        "Creating the order module": [
          "Introduction",
          "Creating a summary order",
          "Creating the payment module",
          "Creating the order for courses",
          "Clearing the shopping cart",
          "Creating the checkout order success",
          "Access the content of courses",
          "Create the course content",
          "Download the project.zip"
        ],
        "Deployment with Firebase": [
          "Deployment with Firebase"
        ]
      },
      "requirements": [
        "Javascript, HTML, CSS"
      ],
      "description": "Building Web Applications (E-commerce - Elearning ) with  Angular 8 (Material) & Firebase (2020).\nAngular and Firebase  had  become one of the most widely used web development frameworks. This course, Angular &  Firebase , will teach you the fundamentals of writing applications with Angular & Firebase- whether or not you've had past experience with Angular.\nBy the end of watching this course, you'll be able to:\nBuild real client apps with Angular & Firebase\nDefine an architecture for the project\nWrite clean and maintainable code like a professional\nApply best practices when building Angular apps.\n\n\nOver the next 5 hours, you'll learn the essentials of building client apps with Angular & Firebase & NoSQL:\nDisplaying data and handling events\nBuilding re-usable components\nManipulating the DOM using directives\nBuilding template-driven and reactive forms\nUsing a Material.\nUsing Reactive Extensions and observables.\nAdding routing and navigation\nImplementing authentication and authorization with Firebase\n\n\nAnd on top of all these, you'll get:\nDownloadable source code",
      "target_audience": [
        "IT students, Developers, IT architects"
      ]
    },
    {
      "title": "Laravel 2023 bootcamp - very comprehensive - 125 videos!",
      "url": "https://www.udemy.com/course/laravel-56-masterclass-build-an-election-voting-app/",
      "bio": "This tutorial touches all aspects of laravel comprehensively and extensively. Best tutorial on this topic.",
      "objectives": [
        "Basics of Laravel",
        "Learn Laravel Installation",
        "Laravel Environment Setup and Configuration",
        "Laravel Directory Structure",
        "Understand Request Lifecycle in Laravel",
        "Understand Service Providers, Facades and Contracts",
        "Learn Laravel Routing - GET, POST, PUT, PATCH etc",
        "Learn how to create and use Middlewares in Laravel",
        "Learn to use CSRF Protection in forms",
        "Learn Controllers Requests and Responses",
        "Learn Laravel Views and blade templating Engine used in Laravel",
        "Learn Laravel URL Generation and Resource URLS",
        "Learn to create Sessions in Laravel and Use them anywhere in your code",
        "Learn form Validation",
        "Learn debugging Errors & Logging",
        "Learn Frontend Scaffolding with laravel and how to auto generate html codes",
        "Learn authentication Authorization",
        "Learn how to implement social media login with Facebook in Laravel",
        "Learn how to implement Pagination neatly in Laravel",
        "Learn how to create , modify and implement Migrations",
        "Learn Laravel Eloquent ORM and Relationships",
        "Learn how to integrate new templates in Laravel",
        "Learn how to integrate social media icons in Laravel"
      ],
      "course_content": {
        "Introduction": [
          "Entity Relationship Analysis",
          "Important Laravel resources",
          "installing wampserver",
          "Before you continue",
          "download laravel",
          "setup laravel",
          "What is MVC?",
          "laravel MVC folder structure",
          "run migrations",
          "run laravel Auth"
        ],
        "LARAVEL SOCIALITE": [
          "create a facebook app",
          "setup laravel socialite",
          "complete socialite setup",
          "solve facebook login error",
          "fix facebook https error using ngrok",
          "complete facebook app setup",
          "get data from facebook",
          "implement facebook login.",
          "redirect registration page to login",
          "Laravel socialite login implementation for LinkedIn, google, twitter and github"
        ],
        "Laravel 5.6 Migrations": [
          "Read more on migrations using Laravel",
          "create roles migration",
          "create nominations migration",
          "create categories migration",
          "create nomination_user migration",
          "run migration"
        ],
        "Generator": [
          "install laravel generator",
          "complete laravel generator installation"
        ],
        "Scaffolding": [
          "login using laravel facebook",
          "add profile picture",
          "scaffold categories",
          "scaffold the remaining tables",
          "fix the menu"
        ],
        "Middlewares": [
          "how to create middleware",
          "create further middlewares",
          "routes for categories and nominations",
          "test routes"
        ],
        "Blade templating": [
          "fix categories",
          "design user profile page",
          "finish user profile",
          "fixing the category page",
          "install tabs for nomination and voting",
          "hide nomination field",
          "number of nominations",
          "making nomination tab active",
          "join table explanation",
          "track number of nominations using nomination_user",
          "check if record exists in the database",
          "display form only if user has not nominated before",
          "display nomination photocard",
          "finish up nomination photo card",
          "fixing middleware routing",
          "download date time picker",
          "setup date time picker",
          "test date time picker",
          "finish setting index page",
          "fix categories routes for admin",
          "fix nomination tab",
          "fix middleware errors"
        ],
        "Nominees": [
          "how to debug a laravel code",
          "display selected nominees",
          "hide unselected nominees",
          "set selected to yes instead of 1",
          "add dividers to menu",
          "recap of the strategy",
          "understanding bootstrap tabs",
          "fix tab display inconsistencies",
          "nominations.show-fields",
          "nomination.show-fields continued",
          "finish up nomination.show-fields post cards",
          "set admin selection category drowpdown",
          "redesign the selected candidates card",
          "fix nomination redirect"
        ],
        "Voting": [
          "add voting button.",
          "add voting route",
          "create voting and update nomination",
          "display vote count",
          "voters can only vote once",
          "remove voting tab",
          "check nomination status"
        ],
        "Roles": [
          "change default page after login",
          "create roles drop down",
          "admin user list",
          "hide all fields except role dropdown"
        ]
      },
      "requirements": [
        "Basic PHP knowledge, that's all."
      ],
      "description": "Have you ever wished you could find this one tutorial that will teach you Laravel, PHP MVC, Front end development with bootstrap, css, html, blade etc completely and comprehensively? Well here it is finally.\nOver 120 videos, this course will take you step by step through all the awesome features of Laravel, comprehensively and beyond.\n\nA lot of topics were covered, in several instances I will take a detour just to spend more time explaining a concept very well. As we go deeper and deeper the style of teaching gradually changes as you get better at coding Laravel. All in all, you will end up exceptionally good with all the topics covered.\n\nHave you ever wished you could find this one tutorial that will teach you Laravel, PHP MVC, Front end development with bootstrap, css, html, blade etc completely and comprehensively? Well here it is finally.\nOver 120 videos, this course will take you step by step through all the awesome features of Laravel, comprehensively and beyond.\n\nA lot of topics were covered, in several instances I will take a detour just to spend more time explaining a concept very well. As we go deeper and deeper the style of teaching gradually changes as you get better at coding Laravel. All in all, you will end up exceptionally good with all the topics covered.",
      "target_audience": [
        "Beginner PHP developers who wish to learn Laravel Framework",
        "Laravel developers who wish to learn laravel 5.5 and Laravel 5.6"
      ]
    },
    {
      "title": "Laravel 2023 course - multi-user roles/level & admin section",
      "url": "https://www.udemy.com/course/laravel-56-course-multi-user-roleslevel-admin-section/",
      "bio": "I hope that this course teaches you once and for all - user roles/levels/permissions/admin/access restriction etc",
      "objectives": [
        "Download Laravel",
        "Setup laravel",
        "Create and run migrations",
        "Create multiple user roles",
        "Grant multiple permission levels to different pages and modules as desired"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of PHP at a beginner level",
        "You should have built at least a basic PHP site in the past"
      ],
      "description": "If you have been wanting to learn how to add user roles, levels, permissions, admin dashboard etc to your app, then this is the course to learn.\nIf you have taken any of my course (Dave Partner) in the past, then you should know that you are expecting a very high standard, well explained and well thought out course.\nThe method I teach in this course will work on any framework, language or platform. So, not only will it work on Laravel 2019, it will work on all versions of laravel and even other frameworks such as CakePHP, Flask, CodeIgniter, RawPHP, Django etc\nSo tag along and lets go for a nice ride!\n\n\nIf you have been wanting to learn how to add user roles, levels, permissions, admin dashboard etc to your app, then this is the course to learn.\nIf you have taken any of my course (Dave Partner) in the past, then you should know that you are expecting a very high standard, well explained and well thought out course.\nThe method I teach in this course will work on any framework, language or platform. So, not only will it work on Laravel 2019, it will work on all versions of laravel and even other frameworks such as CakePHP, Flask, CodeIgniter, RawPHP, Django etc\nSo tag  along and lets go for a nice ride!\n\n\nIf you have been wanting to learn how to add user roles, levels, permissions, admin dashboard etc to your app, then this is the course to learn.\nIf you have taken any of my course (Dave Partner) in the past, then you should know that you are expecting a very high standard, well explained and well thought out course.\nThe method I teach in this course will work on any framework, language or platform. So, not only will it work on Laravel 2019, it will work on all versions of laravel and even other frameworks such as CakePHP, Flask, CodeIgniter, RawPHP, Django etc\nSo tag along and lets go for a nice ride!\n\n\nIf you have been wanting to learn how to add user roles, levels, permissions, admin dashboard etc to your app, then this is the course to learn.\nIf you have taken any of my course (Dave Partner) in the past, then you should know that you are expecting a very high standard, well explained and well thought out course.\nThe method I teach in this course will work on any framework, language or platform. So, not only will it work on Laravel 2019, it will work on all versions of laravel and even other frameworks such as CakePHP, Flask, CodeIgniter, RawPHP, Django etc\nSo tag  along and lets go for a nice ride!",
      "target_audience": [
        "Anyone who wishes to understand user roles and levels"
      ]
    },
    {
      "title": "Google Chrome Extension Development For Beginners [2021]",
      "url": "https://www.udemy.com/course/google-chrome-extension-development-for-beginners-2020/",
      "bio": "Everything you need to know about google chrome extension development.",
      "objectives": [
        "Fundamentals of Chrome extension development",
        "How to add User Interface to the Chrome extension",
        "How to make Scripts communicate with one another",
        "How to store data",
        "How to use chrome APIs",
        "How to use chrome extension official documentation",
        "Publishing your Chrome extension to Chrome Web Store",
        "MORE COMING SOON!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Useful Links",
          "How to get the most out of this course?",
          "Setup",
          "What is a Chrome Extension?",
          "Let's Create Our First Google Chrome Extension",
          "Introduction Quiz",
          "UPDATES"
        ],
        "User Interface": [
          "Icons",
          "Types of Chrome Extensions",
          "Popup",
          "User Interface Quiz"
        ],
        "Scripts": [
          "Popup Script",
          "Background Scripts",
          "Chrome Extension 1 - Background Script",
          "Chrome Extension 1 - Manifest File",
          "Chrome Extension 1 - Demo And Summary",
          "Match Patterns",
          "Content Scripts",
          "Chrome Extension 2 - Content Script",
          "Chrome Extension 2 - Manifest File",
          "Chrome Extension 2 - Demo And Summary",
          "Quiz On Scripts"
        ],
        "Message Passing": [
          "What is Message Passing?",
          "Types Of Message Passing",
          "How To Pass Messages Across Scripts?",
          "Chrome Extension 1 - Passing Message From Popup Script to Content Script",
          "Chrome Extension 1 - Manifest File",
          "Chrome Extension 1 - Popup HTML",
          "Chrome Extension 1 - Popup Script",
          "Chrome Extension 1 - Content Script",
          "Chrome Extension 1 - Demo And Summary",
          "Permissions",
          "Why didn't we declare APIs in our previous Chrome Extensions?",
          "Chrome Extension 2 - Passing Message From Content Script To Background Script",
          "Chrome Extension 2 - Manifest File",
          "Chrome Extension 2 - Content Script",
          "Chrome Extension 2 - Background Script",
          "Chrome Extension 2 - Demo And Summary",
          "Quiz On Message Passing"
        ],
        "Storage": [
          "Storage Introduction",
          "Chrome Extension 1 - Popup",
          "Chrome Extension 1 - Background Script",
          "Chrome Extension 1 - Popup Script",
          "Chrome Extension 1 - Manifest File",
          "Chrome Extension 1 - Demo And Summary",
          "Quiz On Storage"
        ],
        "Publish Your Chrome Extension!": [
          "Publish Your Chrome Extension!"
        ],
        "MORE LECTURES COMING SOON!!": [
          "Congratulations!"
        ]
      },
      "requirements": [
        "You do not need any prior knowledge about Google Chrome Extension development",
        "Basic knowledge of HTML, CSS and JavaScript"
      ],
      "description": "In this course you will learn the fundamentals of google chrome extension development.\nMy aim is not to create a shortest possible crash course on google chrome extension development, but to make you comfortable with the process of chrome extension development.\nIn this course, you will find me visiting the official google chrome extension documentation page frequently and that is because I want to make you comfortable with the documentation so that in future if you get stuck creating your extension, you can immediately refer the documentation for help.\nI hope you will find this course helpful.\nWishing you all the luck!",
      "target_audience": [
        "Google Chrome Extension Developers",
        "Web Developers",
        "JavaScript Developers",
        "Software Developers"
      ]
    },
    {
      "title": "Front End Development For Beginners",
      "url": "https://www.udemy.com/course/front-end-development-for-beginners/",
      "bio": "HTML, CSS, JavaScript and React JS",
      "objectives": [
        "Introduction to front-end web development and create your first web pages on the Internet.",
        "Create and style websites using HTML and CSS.",
        "Introduction to JavaScript.",
        "Learn how to add interactive experiences to a website and how to create animations and games."
      ],
      "course_content": {
        "Introduction": [
          "Alida School - Introduction to Front End Development for Beginners"
        ],
        "What is HTML": [
          "What is HTML"
        ],
        "Structure of a Webpage": [
          "Structure of a Webpage"
        ],
        "HTML Blocks and Inline Elements": [
          "HTML Blocks and Inline Elements"
        ],
        "Text Formatting": [
          "Text Formatting"
        ],
        "HTML Lists": [
          "HTML Lists",
          "Quiz 1",
          "Quiz 2",
          "Quiz 3",
          "Quiz 4"
        ],
        "HTML Comments": [
          "HTML Comments"
        ],
        "HTML Hyperlinks": [
          "HTML Hyperlinks"
        ],
        "HTML Tables": [
          "HTML Tables"
        ],
        "HTML Media": [
          "HTML Media"
        ]
      },
      "requirements": [
        "No programming or coding experience needed. You will learn everything you need to know.",
        "Basic computer skills"
      ],
      "description": "Front end developers mainly use HTML, CSS, JavaScript and React JS to build front ends.\n\n\nHTML is the building block of web pages and it stands for HyperText Markup Language.\n\n\nCSS stands for Cascading Style Sheet and it’s used for styling web pages and making them beautiful.\n\n\nJavaScript is a programming language and it’s used to give functionality to web pages.\n\n\nReact is a JavaScript library for building fast and interactive user interfaces and it’s currently the most popular JavaScript library in the world for building user interfaces.\n\n\nYour front end development journey should start with HTML and then be followed by CSS. If you spend 3 to 5 hours per day every day studying and coding each one of them, within 4 to 6 weeks you’ll attain a reasonable level of understanding about HTML and CSS.\n\n\nOnce you learn HTML and CSS then you need to learn JavaScript. Learning, understanding and being able to apply the fundamentals of JavaScript should take you approximately six weeks.\nAs you can see the first three months are all about learning the fundamentals of HTML, CSS and JavaScript. When you start working on projects, you’ll learn more libraries, packages and frameworks.\n\n\nIn summary, the essential skills for every front developer are HTML, CSS, JavaScript and React. You’ll see these tools listed in almost every job description. For now, keep in mind that less is more and just focus on these five skills and tools.",
      "target_audience": [
        "This course is for students that want to learn web development."
      ]
    },
    {
      "title": "Webpack 5 and Vite: A New Way to Learn - Active Thinking",
      "url": "https://www.udemy.com/course/webpack-5-vite/",
      "bio": "Learn by \"Guessing\"; Understand Webpack Better by Learning Vite; Master Vite based on Webpack Experience.",
      "objectives": [
        "Master Webpack 5 and Webpack DevServer",
        "Master Vite",
        "Master Webpack and Vite library",
        "Master Webpack Module Federation"
      ],
      "course_content": {
        "Webpack 5: Bundling, Tree Shaking, Lazy Loading, Loaders, Plugins, Asset Modules": [
          "Active Thinking: Exploring Webpack By Guessing",
          "Active Thinking: Reverse Engineering the Webpack Config File",
          "Webpack Introduction (the Traditional Approach)",
          "Webpack Watch & WatchOptions",
          "Webpack Dev Server",
          "Static Files",
          "Deduplication",
          "Multiple Entry Points",
          "Tree Shaking",
          "Side Effects",
          "ES6 Dynamic Module Crash Course",
          "Lazy Loading",
          "splitChunksPlugin",
          "htmlWebpackPlugin",
          "htmlWebpackPlugin: Multiple Pages",
          "Webpack.ProvidePlugin",
          "Webpack Asset Modules",
          "Asset",
          "Asset Modules Public Path",
          "CSS",
          "Minimizing CSS",
          "On-demand CSS",
          "SASS",
          "PublicPath and Deployment",
          "Separate Config Files",
          "Challenge: HTML File as Static Asset"
        ],
        "Vite": [
          "Vite Introduction: Making Educated Guesses Based on Webpack Experience",
          "Vite Lazy Loading: Proving a Hypothesis",
          "Vite Asset Files: \"File-loader\"",
          "Vite Asset Files: RAW and Data URI",
          "Vite Asset Files: Public Directory and HTML Files",
          "CWD",
          "Vite Config File: Custom Vite Root",
          "Vite Config File: Custom Input and Output",
          "Vite Config File: Split CSS and Control Data URI",
          "Vite Config File: Base Path"
        ],
        "Library with Webpack & Vite": [
          "Webpack Library Preparation",
          "Webpack Library Type",
          "Webpack External Dependencies",
          "Vite Library: All in One"
        ],
        "Webpack Module Federation": [
          "Preparation: Lerna",
          "The \"REMOTE\" Project",
          "The \"LOCAL\" Project",
          "Shared Dependencies"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "Basic NPM knowledge"
      ],
      "description": "This course teaches both Webpack and Vite, but we did not just stack a Webpack course and a Vite course together.\nWe want to help you master Webpack with less time and effort. This is why we add a Vite course.\nStudying Webpack lays the foundation for the following Vite study. Your Webpack experience enables you to instantly understand similar concepts in Vite. As a result, you can master Vite with much less time and effort.\nMeanwhile, learning Vite gives you the perfect opportunity to review and apply your Webpack knowledge.\nBy comparing the similarities and differences between Webpack and Vite, you can deepen your understanding of both subjects.\n\"Exploring\" in the \"darkness.\"\nInstead of directly telling you what to do, this course takes a different approach—“forcing” you to figure things out by yourself. You will not only learn how but also know why.\nSince Webpack 4, a config file is no longer needed. This, of course, is just a marketing gimmick, something Webpack does to attract more new users by appearing to be simple and convenient.\nWe take advantage of this feature. We will create a project and adapt it to meet the default Webpack settings. In this process, you will develop a more accurate and much deeper of how Webpack works and how to configure it.\nIf you prefer the old way of learning, where I give you detailed instructions on how to do everything, we have got you covered. We have prepared a traditional Webpack entry lesson, which teaches everything step by step.",
      "target_audience": [
        "JavaScript developers who want to learn Webpack 5",
        "JavaScript developers who want to learn Vite",
        "Webpack developers who want to learn Webpack module federation"
      ]
    },
    {
      "title": "MERN Stack : Hotel Booking App with React ,Node ,Mongo 2021",
      "url": "https://www.udemy.com/course/mern-stack-hotel-booking-app-with-react-node-mongo-2021/",
      "bio": "Learn how to build complex applications without state management tool REDUX",
      "objectives": [
        "React - Node API Connections",
        "Working with local storage",
        "Booking Rooms",
        "Adding New Rooms Date Range Filters",
        "Date Range Filters",
        "Common payment gateway , Placing orders with stripe",
        "Retrieve Bookings to user profile",
        "Separate Dashboards for User and Admin",
        "Complete Animations oriented screens",
        "Managing Bookings , Rooms , Users from Admin panel",
        "By the end of the courses, you will know how to work with complex MERN Stack apps without redux including the payment gateway."
      ],
      "course_content": {
        "Introduction": [
          "PROMO / Source Code"
        ],
        "Project Setup": [
          "React App Setup",
          "Navbar",
          "Node Server Setup",
          "Mongo DB Connection"
        ],
        "Get Rooms To Home Screen": [
          "Room Model",
          "Adding static data to Mongo DB",
          "Get all rooms Backend",
          "Get all rooms Front-End"
        ],
        "Home Screen": [
          "Homescreen Design",
          "Room model popup in Home screen"
        ],
        "Booking Room Screen": [
          "Booking Room Screen Front End",
          "Booking Room Screen Backend",
          "Success , Error , Loading components"
        ],
        "User Authentication": [
          "Register , Login Screens Front End",
          "Register , Login Backend",
          "User Authentication Final"
        ],
        "Booking Room": [
          "Dates Introduction",
          "Booking Model",
          "Booking a Room",
          "Filter Rooms based on Current Bookings"
        ],
        "Payment Gateway": [
          "Payment Demo",
          "Stripe - Front End",
          "Stripe Backend",
          "Payment Gateway styling"
        ],
        "Search and Type Filter": [
          "Rooms Filtering"
        ],
        "User Profile": [
          "Get user bookings",
          "Cancel booking"
        ]
      },
      "requirements": [
        "React Basics",
        "Node Basics",
        "Javascript Fundumentals"
      ],
      "description": "React is an open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser\nExpress.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs. It has been called the de facto standard server framework for Node.js.\nMERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js frontend framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and really any frontend JavaScript framework can work.\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework, and Node.js the popular and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nIn this course, you will learn the following topics\nWorking with Complex topics in React Node,\nBooking Rooms,\nCancel Bookings\nAdding Rooms data to Database,\nEdit Rooms after adding,\nStripe Payment Gateway Integration,\nUser Dashboard,\nAdmin dashboard,\nManage Users, Rooms, Bookings from the Admin panel\nPushing Code to Github,\nHosting application in Heroku\nBy the end of the course, you will know how to work with complex apps without REDUX including the payment gateway.\n24/7 Q/A Support.",
      "target_audience": [
        "React Developers",
        "Javascript Developers",
        "MERN Developers"
      ]
    },
    {
      "title": "Learn JavaScript, Get Hired | The Full Bootcamp",
      "url": "https://www.udemy.com/course/learn-javascript-get-hired-bootcamp/",
      "bio": "JavaScript is the most in-demand skill. Get an extra advantage with this course's special JS interview question videos.",
      "objectives": [
        "the differences between function declarations, expressions, and arrow functions.",
        "a myriad of ways to write clean JavaScript code.",
        "when the `this` keyword is relevant.",
        "intricacies of types - coercion, null vs. undefined, truthy, falsy, and more.",
        "why and how almost everything is an object.",
        "the differences between let, const, and var.",
        "a handful of ways to create object clones.",
        "closures, function factories, and higher-order functions.",
        "constructor functions",
        "prototypes and the prototype-based inheritance model.",
        "asynchronous code.",
        "how to track code through the JavaScript runtime - through the callstack, heap, queue, and event loop.",
        "and much more!"
      ],
      "course_content": {
        "Introduction": [
          "JavaScript and What You'll Get From This Course",
          "Course Repository"
        ],
        "The Basics": [
          "Preview | The Basics",
          "The Console, Operators, and Variables",
          "Booleans and Conditionals",
          "Syntax - Semicolons and Comments",
          "Undefined and Primitives",
          "Arrays",
          "Objects",
          "Loops and Iteration",
          "Quiz | The Basics",
          "Summary | The Basics"
        ],
        "Functions": [
          "Preview | Functions",
          "Functions - Declarations vs. Expressions",
          "Arrow Functions",
          "Methods and the `this` Keyword",
          "More on `this` and Function Expressions vs. Arrow functions",
          "Interview Question | The `this` Keyword",
          "Callbacks",
          "Interview Question | Callbacks",
          "Quiz | Functions",
          "Summary | Functions"
        ],
        "Types - Digging Deeper": [
          "Preview | Types - Digging Deeper",
          "A Dynamic Language and Types",
          "Almost Everything is an Object",
          "Equality and Type Coercion",
          "Truthy and Falsy",
          "Null vs. Undefined",
          "Explicit Type Conversion",
          "Interview Question | JavaScript Types",
          "Quiz | Types - Digging Deeper",
          "Summary | Types - Digging Deeper"
        ],
        "Syntax - the Intricacies": [
          "Preview | Syntax - the Intricacies",
          "Let, Const, and Mutability",
          "Let, Const, Var, and Scope",
          "Var and Function Hoisting",
          "Interview Question | Scope and Hoisting",
          "Template Literals and Ternary Operators",
          "Quiz | Syntax - the Intricacies",
          "Summary | Syntax - the Intricacies"
        ],
        "Objects - Deeper Concepts": [
          "Preview | Objects - Deeper Concepts",
          "The Property Shorthand and Destructuring Assignment",
          "Object methods",
          "Spread Syntax",
          "Object.is, References, and Shallow Clone",
          "A Note on Writing JSON",
          "JSON.parse, JSON.stringify, and an Attempt at Deep Cloning",
          "Custom and Lodash CloneDeep",
          "Interview Question | Cloning an Object",
          "Quiz | Objects - Deeper Concepts",
          "Summary | Objects - Deeper Concepts"
        ],
        "Functions - Deeper Concepts": [
          "Preview | Functions - Deeper Concepts",
          "Closures",
          "Function Factories",
          "Higher Order Functions",
          "Interview Question | Closures, Higher-Order Functions, and Callbacks",
          "Quiz | Functions - Deeper Concepts",
          "Summary | Functions - Deeper Concepts"
        ],
        "Constructors and Prototypes": [
          "Preview | Constructors and Prototypes",
          "Object-Oriented Programming",
          "Constructor functions",
          "Classes",
          "Prototypes and the Prototype-Based Inheritance",
          "Object Prototype, .__proto__, and the prototype chain",
          "Interview Question | Prototype-Based Inheritance",
          "Quiz | Constructors and Prototypes",
          "Summary | Constructors and Prototypes",
          "Class Inheritance"
        ],
        "Asynchronous Code and the JavaScript Engine": [
          "Preview | Asynchronous Code and the JavaScript Engine",
          "Asynchronous Code with SetTimeout",
          "Fetch and Promise",
          "Promise from Scratch",
          "JavaScript Engine and Runtime",
          "Await and Async",
          "Interview Question | Asynchronous JavaScript",
          "Quiz | Asynchronous Code and the JavaScript Engine",
          "Summary | Asynchronous Code and the JavaScript Engine"
        ],
        "Conclusion": [
          "Congratulations and Next Steps",
          "Bonus Lecture: A React.js and Redux Bootcamp"
        ]
      },
      "requirements": [
        "Minimal experience in another language will help. But it's not necessary. You can be a beginner.",
        "If you're more experienced, start the course at a later section. It would be valuable to go through the interview question videos - no matter your level."
      ],
      "description": "If your goal is to learn JavaScript and get hired, take this course.\nAccording to the 2018, Hackerrank developer survey, JavaScript is the number one skill that companies are looking for in the tech industry. After all, JavaScript is the language that runs in the browser. And almost every company does business through a web application.\nJavaScript frameworks are also the biggest gap between what employers demand, and what candidates can provide. This is because JavaScript still isn't a part of the core curriculum at many universities. Rising software engineers don't have JavaScript skills unless they learn on their own.\n\n\nTherefore, according to the statistics, learning JavaScript is smartest choice to increasing your chances of landing a job.\nIn addition, this course is going to give you an extra advantage. Throughout the course, there are special interview-question based videos. These focus on particularly tricky question, that you may get asked about during a JavaScript interview.\n\n\nHere's how the course journey will go:\nFirst: the Basics. You'll ramp on the console, syntax, objects, and other language fundamentals.\nSecond: Functions. There are a few ways to create functions. So you'll explore those differences, and important concepts like the `this` keyword.\nThird: Types - Digging Deeper. There are some big questions about types: what is type coercion? How are truthy and falsy different? What is null vs. undefined? In this section, you'll cover those questions and more.\nFourth: Syntax - the Intricacies. In this one, you'll discover JavaScript features that can help make your code cleaner. You'll also investigate odd language behavior like hoisting.\nFifth: Objects - Deeper Concepts. This section will introduces more features that can clean up code around objects. The larger topic in this section is a series of videos on creating object clones.\nSixth: Functions - Deeper Concepts. The theme of \"Deeper concepts\" continues. This time, it's functions. In this section, you'll dig into big terms like closures, function factories, and higher-order functions.\nSeventh: Constructors and Prototypes. This is probably the most crucial section in the course. Exploring prototype-based inheritance is an illuminating experience. You'll discover the \"why\" and \"how\" behind the truth that almost everything is an object in JavaScript.\nEighth: Asynchronous code and the JavaScript engine. This last section will complete the investigation of JavaScript under the hood. You'll track code as it executes through the JavaScript runtime components: the callstack, queue, and event loop.\n\n\nThe course is meant for all levels. If you start from the beginning, you will learn JavaScript from scratch. But the course is designed to allow intermediate to advanced students to start at later sections, if they see fit. The lessons and interview question videos would benefit anyone, no matter their experience.\nIn addition to the interview-question based videos, there are resources like quizzes to help reinforce your learning.\nOverall, the statistics say that investing your time in JavaScript is a wise decision. On top of this, this course is giving you a greater advantage by preparing you for the tough interview questions.\nUltimately, if your goal is to get hired for your JavaScript skills, then this course will set you on that path!",
      "target_audience": [
        "Newcomers to JavaScript.",
        "Anyone who wants to review the tricky parts about JavaScript.",
        "Those looking to get a job in the tech industry with JavaScript."
      ]
    },
    {
      "title": "HTML for beginners",
      "url": "https://www.udemy.com/course/the-way-to-web-development-by-learning-html-5-from-scratch/",
      "bio": "HTML + inline css course",
      "objectives": [
        "able to know all tricks that used in HTML to make something great (header - paragraph - image - link -......etc).",
        "able to understand any HTML page and Edit it easily.",
        "review what you know about HTML + learn more tricks if you already know basics of HTML.",
        "able to make an entire web page just using HTML (we will establish an entire Html page at the end of the course)",
        "a small introduction about CSS ( Inline CSS )."
      ],
      "course_content": {
        "Getting started": [
          "Introduction to this course",
          "Introduction to HTML 5",
          "How to run Html code"
        ],
        "beginning Level": [
          "Structure of HTML page",
          "HTML Headings",
          "HTML Paragraph",
          "HTML Formatting",
          "Quiz 1"
        ],
        "intermediate Level": [
          "Style in HTML 5",
          "adding color",
          "adding background-color",
          "borders",
          "Quiz 2"
        ],
        "advanced Level": [
          "How to add image",
          "How to add a link",
          "Making a list",
          "Making table",
          "Quiz 3"
        ],
        "super advanced level": [
          "Forms",
          "audio",
          "video",
          "entities",
          "Quiz 4",
          "final project"
        ]
      },
      "requirements": [
        "any operating system",
        "up to date browser (google chrome is preferred )",
        "Notepad++ or any type of text editors (you will find it in the first section of the course)"
      ],
      "description": "the course initiates with an introduction about HTML, the syntax of HTML page and how to display the page on browser.\nthen will start with explaining most important tags like (paragraph , heading , image , link, etc...) , and explain the attributes used with each tag.\nthen we will learn how to make inline CSS using style attribute to add some  color and background color  to your page.\nfinally the super advanced section which contain forms like (submit button , selection , checkbox ,etc...) , how to add audio and video in your page and at the end of this section there is a project which will help you to practice what you have learned in this course and also learn some other tricks.",
      "target_audience": [
        "for all people who want to become a web developer",
        "people who don't know from where they should start to become a web developer ,Either web designer",
        "people who want to learn HTML from scratch"
      ]
    },
    {
      "title": "JSP (JavaServer Pages) Complete Certification Training",
      "url": "https://www.udemy.com/course/jsp-java-server-pages-training/",
      "bio": "Become a Full Stack Web Developer. Learn core concepts of JSP and build interactive & complex web applications using JSP",
      "objectives": [
        "Describe JavaServer Pages and their relationship to servlets and J2EE generally",
        "How to build database-related Web applications using JavaServer Pages",
        "Fundamentals of Java server side web development",
        "How a JSP is translated into a servlet and processed at runtime",
        "Newer features and techniques, including JSP expressions and the JSTL tags",
        "Know everything about JSP and learn to apply JSP code to build a web application",
        "Manage cookies to store client-specific information at various scopes and duration",
        "How linking is done with database through coding",
        "How to build a fully functioning JSP and Servlets web application from scratch",
        "Understand and use Java Database Connectivity",
        "Write JavaBeans and access JavaBeans from servlets / JSPs",
        "Use JavaBeans to implement effective interactive JSP applications",
        "Use JSP tags and understand JSP JavaBean scopes",
        "How to use JSP forwarding",
        "Use Model, View, Controller methodologies",
        "Enumerate and use the implicit objects available to scripting elements",
        "Explain the use of directives on JSPs and outline the principal directives",
        "Implement simple JSPs that use Java code in declarations, expressions and scriptlets",
        "Use Java exception handling and JSP error pages to handle errors in JSP applications",
        "Implement session management for a JSP application",
        "Describe custom tags in JSP and explain how they are implemented",
        "Describe the various uses of XML in JSP applications",
        "Deploy a logical Web application to a Web server in a WAR file",
        "Implement an interactive Web application using HTML forms and JSP"
      ],
      "course_content": {
        "Introduction to Web": [
          "Introduction to Web"
        ],
        "Introduction to JSP (JavaServer Pages)": [
          "Introduction to JSP (JavaServer Pages)"
        ],
        "Directory Structure": [
          "Directory Structure"
        ],
        "Lifecycle JSP": [
          "Lifecycle JSP"
        ],
        "Scripting Elements": [
          "Scripting Elements - part 1",
          "Scripting Elements - part 2",
          "Scripting Elements - part 3"
        ],
        "Implicit Object Request": [
          "Implicit Object Request"
        ],
        "Implicit Project": [
          "Implicit Project - part 1",
          "Implicit Project - part 2",
          "Implicit Project (Login) - part 3",
          "Implicit Project (Reg) - part 4",
          "Implicit Project - part 5",
          "Implicit Project (Output) - part 6"
        ],
        "Directive Page": [
          "Directive Page - part 1",
          "Directive Page - part 2"
        ],
        "Directive Include": [
          "Directive Include - part 1",
          "Directive Include - part 2"
        ],
        "JSP Action Tag - Usebean": [
          "JSP Action Tag - Usebean - part 1",
          "JSP Action Tag - Usebean - part 2",
          "JSP Action Tag - Usebean - part 3"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the JavaServer Pages (JSP) course by Uplatz.\n\n\nJavaServer Pages (JSP) is a server-side programming technology that enables the creation of dynamic, platform-independent method for building Web-based applications. JSP have access to the entire family of Java APIs, including the JDBC API to access enterprise databases. This tutorial will teach you how to use JavaServer Pages to develop your web applications in simple and easy steps.\nJSP is essentially a server-side scripting language that helps you to create dynamic, platform-independent method for building applications based on web. One of the original Java web technologies, JavaServer Pages is widely used to build dynamic web pages that connect to the Java backend. JSP is a Java standard technology that enables you to write dynamic, data-driven pages for your Java web applications.\nJSP is built on top of the Java Servlet specification. The two technologies typically work together, especially in older Java web applications. From a coding perspective, the most obvious difference between them is that with servlets you write Java code and then embed client-side markup (like HTML) into that code, whereas with JSP you start with the client-side script or markup, then embed JSP tags to connect your page to the Java backend. JavaServer Pages (JSP) technology allows you to easily create web content that has both static and dynamic components. JSP technology makes available all the dynamic capabilities of Java Servlet technology but provides a more natural approach to creating static content. By using JSP, you can take input from users through forms present on web page, display records from a database or another source, and can move dynamically from one page to another JSP page present in same file or other file.\nSince JavaServer Pages are built on top of the Java Servlets API, so like Servlets, JSP also has access to all the powerful Enterprise Java APIs, including JDBC, JNDI, EJB, JAXP, etc. JSP pages can be used in combination with servlets that handle the business logic, the model supported by Java servlet template engines. JSP is a complimentary technology to Java Servlet which facilitates the mixing of dynamic and static web contents. JSP is Java's answer to the popular Microsoft's Active Server Pages (ASP). JSP, like ASP, provides a elegant way to mix static and dynamic contents. The main page is written in regular HTML, while special tags are provided to insert pieces of Java programming codes. The business programming logic and the presentation are cleanly separated. This allows the programmers to focus on the business logic, while the web designer to concentrate on the presentation.\nA JSP page is a text document that contains two types of text: static data, which can be expressed in any text-based format (such as HTML, SVG, WML, and XML), and JSP elements, which construct dynamic content. JSP helps developers to insert java code in HTML pages by using special JSP tags, most of which start with <% tag and ends with %> tag. Developers of programmers write JSP as a normal text file and then attach this JSP code with any other file like html, xml, etc. The recommended file extension for the source file of a JSP page is .jsp. The page can be composed of a top file that includes other files that contain either a complete JSP page or a fragment of a JSP page. The recommended extension for the source file of a fragment of a JSP page is .jspf.\nThe JSP elements in a JSP page can be expressed in two syntaxes, standard and XML, though any given file can use only one syntax. A JSP page in XML syntax is an XML document and can be manipulated by tools and APIs for XML documents. This chapter and Chapters Chapter 7, JavaServer Pages Standard Tag Library through Chapter 9, Scripting in JSP Pages document only the standard syntax. The XML syntax is covered in Chapter 6, JavaServer Pages Documents.\nFinally, JSP is an integral part of Java EE, a complete platform for enterprise class applications. This means that JSP can play a part in the simplest applications to the most complex and demanding.\n\n\nUplatz provides this in-depth training on JavaServer Pages (JSP) to help you master the most widely used technology for developing web applications.\nThis practical, application-oriented Java JSP training course teaches Java Servlets, JDBC and JSP and shows how to use it to develop simple to complex database-driven Web applications. It is intended for experienced Java (J2SE) programmers who want to build Web applications or J2EE components and systems.\nThis JavaEE JSP training course for web developers & programmers will show you how to build end to end Web applications using JEE best practices, design patterns, and technologies to ensure that you get a performant, scalable JEE/JSP applications. JSP training develops skills to create web pages that display dynamically-generated content.\n\n\nFeatures of JSP\nA language for developing JSP pages, which are text-based documents that describe how to process a request and construct a response\nAn expression language for accessing server-side objects\nMechanisms for defining extensions to the JSP language\nJSP technology also contains an API that is used by developers of web containers\n\n\nAdvantages of JSP\nUsing Javaserver Pages is very simple and like other Java based programs a candidate can learn JSP without having any in depth knowledge or Java related training. Also it can even be implemented by non- Java programmers.\nJavaserver Pages allows developers to make presentation codes, since the webpages are compiled dynamically into servers.\nJSP allows web developers to change a specific portion in the template of a page, without affecting the entire application logic.\nJSP is a portable platform, which means the technology can be used in other web servers and operating system.\nJavaserver Pages provided implicit exception handling mechanism and compiles pages automatically.\nSeparation of static and dynamic contents: The dynamic contents are generated via programming logic and inserted into the static template. This greatly simplifies the creation and maintenance of web contents.\nReuse of components and tag libraries: The dynamic contents can be provided by re-usable components such as JavaBean, Enterprise JavaBean (EJB) and tag libraries - you do not have to re-inventing the wheels.\nJava's power and portability.\n\n\nJSP (JavaServer Pages) - course syllabus\n\nTopics covered\nIntroduction to Web\nIntroduction to JSP\nDirectory Structure\nLifecycle JSP\nScripting Elements - part 1\nScripting Elements - part 2\nScripting Elements - part 3\nImplicit Object Request\nImplicit Project - part 1\nImplicit Project - part 2\nImplicit Project (Login) - part 3\nImplicit Project (Reg) - part 4\nImplicit Project - part 5\nImplicit Project (Output) - part 6\nDirectives Page - part 1\nDirective Page - part 2\nDirective Include - part 1\nDirective Include - part 2\nJSP Action Tag - Usebean - part 1\nJSP Action Tag - Usebean - part 2\nJSP Action Tag - Usebean - part 3\nJSP - Include Action Tag - part 1\nJSP - Include Action - part 2\nJSP - Forward Action - part 1\nJSP - Forward Action - part 2\nExpression Language - part 1\nExpression Language (Param) - part 2\nExpression Language - part 3\nExpression Language (RequestScope) - part 4\nJava Bean using Expression Language - part 1\nJava Bean using Expression Language - part 2\nJava Bean using Expression Language - part 3\nJSTL Core - part 1\nJSTL Core - part 2\nJSTL Core (URL) - part 3\nJSTL SQL - part 1\nJSTL SQL (Update) - part 2\nJSTL SQL Update - part 3\nSQL Param\nJSTL - Function - part 1\nJSTL - Function - part 2\nJSTL - Function - part 3\nMVC in JSP - part 1\nMVC in JSP - part 2\n\n\nDetailed-level list of topics covered\n1. Web Applications\nServer-Side Programming\nWeb Protocols and Web Applications\nRole of Web Servers\nJava Servlets\nUsing Tomcat Web server\nStructure of a Java Servlet\n2. Servlets Architecture\nServlets Architecture\nServlet and HttpServlet\nRequest and Response\nReading Request Parameters\nProducing an HTML Response\nRedirecting the Web Server\nDeployment Descriptors\nServlets Life Cycle\nRelationship to the Container\n3. Interactive Web Applications\nBuilding an HTML Interface\nHTML Forms\nHandling Form Input\nApplication Architecture\nSingle-Servlet Model\nMultiple-Servlet Model\nRouting Servlet Model\nTemplate Parsers\n4. Session Management\nManaging Client State\nSessions\nSession Implementations\nHttpSession\nSession Attributes\nSession Events\nInvalidating Sessions\n5. Configuration and Context\nThe Need for Configuration\nInitialization Parameters\nProperties Files\nJNDI and the Component Environment\nJDBC Data Sources\nWorking with XML Data\n6. Filters\nServlet Filters\nUses for Filters\nBuilding a Filter\nFilter Configuration and Context\nFilter Chains\nDeploying Filters\n7. Database and SQL Fundamentals\nRelational Databases and SQL\nSQL Versions and Code Portability\nDatabase, Schema, Tables, Columns and Rows\nDDL - Creating and Managing Database Objects\nDML - Retrieving and Managing Data\nSequences\nStored Procedures\nResult Sets and Cursors\nUsing SQL Terminals\n8. JDBC Fundamentals\nWhat is the JDBC API?\nJDBC Drivers\nMaking a Connection\nCreating and Executing a Statement\nRetrieving Values from a ResultSet\nSQL and Java Datatypes\nSQL NULL Versus Java null\nCreating and Updating Tables\nHandling SQL Exceptions and Proper Cleanup\nHandling SQLWarning\n9. Advanced JDBC\nSQL Escape Syntax\nUsing Prepared Statements\nUsing Callable Statements\nScrollable Result Sets\nUpdatable Result Sets\nTransactions\nCommits, Rollbacks, and Savepoints\nBatch Processing\nAlternatives to JDBC\n10. Introduction to Row Sets\nRow Sets in GUI and J2EE programming\nAdvantages of RowSets\nRowSet Specializations\nUsing CachedRowSets\n11. JSP Architecture\nJSP Containers\nServlet Architecture\nPage Translation\nTypes of JSP Content\nDirectives\nContent Type\nBuffering\nScripting Elements\nJSP Expressions\nStandard Actions\nCustom Actions and JSTL\nObjects and Scopes\nImplicit Objects\nJSP Lifecycle\n12. Scripting Elements\nTranslation of Template Content\nScriptlets\nExpressions\nDeclarations\nDos and Don'ts\nImplicit Objects for Scriptlets\nThe request Object\nThe response Object\nThe out Object\n13. Interactive JSP Applications\nHTML Forms\nReading CGI Parameters\nJSPs and Java Classes\nError Handling\nSession Management\nThe Session API\nCookies and JSP\n14. Using JavaBeans\nSeparating Presentation and Business Logic\nJSP Actions\nJavaBeans\nWorking with Properties\n<jsp:useBean>\n<jsp:getProperty> and <jsp:setProperty>\nUsing Form Parameters with Beans\nObjects and Scopes\nWorking with Vectors\n15. The Expression Language and the JSTL\nGoing Scriptless\nThe JSP Expression Language\nEL Syntax\nType Coercio\nError Handling\nImplicit Objects for EL\nThe JSP Standard Tag Library\nRole of JSTL\nThe Core Actions\nUsing Beans with JSTL\nThe Formatting Actions\nScripts vs. EL/JSTL\n16. Advanced JSP Features\nWeb Components\nForwarding\nInclusion\nPassing Parameters\nCustom Tag Libraries\nTag Library Architecture\nImplementing in Java or JSP\nThreads\nStrategies for Thread Safety\nXML and JSP\n17. JSP for Web Services\n\n\nJSP Training Learning Objectives\nExplain the fundamentals of HTML and HTTP in the World Wide Web.\nDescribe JavaServer Pages and their relationship to servlets and J2EE generally.\nDescribe how a JSP is translated into a servlet and processed at runtime.\nExplain the use of directives on JSPs and outline the principal directives.\nImplement simple JSPs that use Java code in declarations, expressions and scriptlets.\nEnumerate and use the implicit objects available to scripting elements.\nImplement an interactive Web application using HTML forms and JSP.\nUse Java exception handling and JSP error pages to handle errors in JSP applications.\nImplement session management for a JSP application.\nManage cookies to store client-specific information at various scopes and durations.\nUse JavaBeans to implement effective interactive JSP applications.\nDescribe custom tags in JSP and explain how they are implemented, both using Java and JSP itself, and how they are used.\nDiscuss threading issues in JSP and describe the use of directives to control how threading is handled.\nDescribe the various uses of XML in JSP applications.\nDeploy a logical Web application to a Web server in a WAR file.\nDescribe the use of the JSP expression language to simplify dynamic page output.\nWrite JSP expressions and implement JSPs that use them in favor of scripts.\nImplement JSPs that use basic JSTL actions to simplify presentation logic.\nDecompose a JSP application design into fine-grained, reusable elements including JavaBeans, custom tag handlers and tag files that use JSTL.\nUse core JSTL actions to complement standard actions, custom actions, and\nJSP expressions for seamless, script-free page logic.\nDirect conditional and iterative processing of page content by looping through ranges of numbers, over elements in a collection, or over tokens in a master string.\nSet locale and time zone information in JSPs, and use them to correctly format numbers, dates and times for all clients.\nUse resource bundles to manage application strings, and produce the appropriate strings at runtime for a particular client locale.\nLocate a data source, query for relational data, and parse result sets.\nPerform updates, inserts and deletes on relational data using SQL actions.\nManage queries and updates in transaction contexts.\nDerive information from parsed XML content using XPath expressions.\nImplement conditional processing and loops based on XML information.\nApply XSLT transformations to XML content.\nImplement a simple Web service that reads and writes SOAP.\nUnderstand and appreciate the role of Java Servlets in the overall Java 2 Enterprise Edition architecture, and as the best Java solution to HTTP application development.\nUse request and response objects provided to a servlet to read CGI parameters and to produce an HTML response.\nDevelop interactive Web applications using HTML forms and servlets.\nManage complex conversations with HTTP clients using session attributes.\nUnderstand the role of JDBC in Java persistence code, and use JDBC for persistence in servlet applications.\nPreserve portability and ease of administration for a servlet application by parameterizing servlet code, using initialization parameters, properties files, and JNDI.\nUse JavaBeans classes to share complex business data between components.\nImplement filters to adapt existing servlets with new features, and to maximize the decomposition of logic between vertical business functions and horizontal facilities.\n\n\nComparison of JSP vs. similar technologies or concepts\nJSP vs. Active Server Pages (ASP)\nThe advantages of JSP are twofold. First, the dynamic part is written in Java, not Visual Basic or other MS specific language, so it is more powerful and easier to use. Second, it is portable to other operating systems and non-Microsoft Web servers.\nJSP vs. Pure Servlets\nIt is more convenient to write (and to modify!) regular HTML than to have plenty of println statements that generate the HTML.\nJSP vs. Server-Side Includes (SSI)\nSSI is really only intended for simple inclusions, not for \"real\" programs that use form data, make database connections, and the like.\nJSP vs. JavaScript\nJavaScript can generate HTML dynamically on the client but can hardly interact with the web server to perform complex tasks like database access and image processing etc.\nJSP vs. Static HTML\nRegular HTML, of course, cannot contain dynamic information.",
      "target_audience": [
        "Web Developers & Java Web Application Developers",
        "Full Stack Java Developers",
        "Java/J2EE/JSP Developers & Programmers",
        "Anyone aspiring for a career in Web Development",
        "JSP & Java Servlets Programmers",
        "Software Engineers & Developers",
        "Newbies & Beginners wishing to learn the full Java stack - Java, JSP, Java Servlets",
        "Senior Java Developers & Lead Java Developers",
        "Java Consultants & Principal Java Developers",
        "MEAN and MERN Full Stack Web Developers"
      ]
    },
    {
      "title": "Build a Virtual Assistant Website in 1 Hour with Carrd",
      "url": "https://www.udemy.com/course/build-a-virtual-assistant-website-in-1-hour-with-carrd/",
      "bio": "Build a responsive website to attract clients in 1 hour. No coding or design skills needed!",
      "objectives": [
        "Learn the must-have elements that make a successful website.",
        "Learn how Carrd functions in short, simple, fast-paced lessons.",
        "Create a fully responsive website in 1 hour.",
        "Learn how to create incredible copy for your website that attracts clients."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course"
        ],
        "Branding 101": [
          "Personal branding exercise",
          "Naming your business after yourself",
          "Using a DBA for your business",
          "Wrapping up your name",
          "Color theory",
          "Branding Quiz"
        ],
        "Must-have elements on your website": [
          "Headshots",
          "Writing an effective bio",
          "Your special sauce",
          "Contact info and CTA",
          "Testimonials + script",
          "Buying a custom domain",
          "Website Elements Quiz"
        ],
        "Building your website": [
          "Carrd pros",
          "Get familiar with Carrd's editor",
          "Fonts on Carrd",
          "Hero section + exercise",
          "Which website has a better hero section?",
          "Sign up and contact forms",
          "Changes colors, boarders, drop shadows",
          "Containers",
          "Selling yourself with Copy.ai",
          "About section",
          "Testimonials and icons",
          "How I made my testimonial section in Canva",
          "Rates",
          "[Optional] Linking forms to email marketing platform",
          "Formatting mistakes!",
          "Publishing to your domain",
          "Website Quiz"
        ],
        "Mobile and SEO": [
          "Mobile",
          "Carrd dashboard & documentation",
          "SEO",
          "Test your SEO",
          "Mobile Quiz"
        ],
        "Simple Psychology Secrets to Make Your Website Pop": [
          "The bandwagon effect",
          "Framing effect",
          "Thank you!"
        ]
      },
      "requirements": [
        "A laptop is ideal, but a tablet can suffice."
      ],
      "description": "Do you really need a virtual assistant website? If you're thinking about becoming a VA, or you've already set the wheels in motion, you're probably wondering whether or not you need a website.\nHaving a website is an opportunity to make a great first impression and give clients comfort that you're a real business. Showcasing your brand to your prospective clients is one of the most important things that you can do!\n\n\nThis course is for you if:\nYou need help attracting clients.\nYou want to share your specific services, pricing, and testimonials in a simple format.\nYou want to create a more legitimate calling card for your business.\nYou want something more formal than a LinkedIn page.\nYou want to build something fast - not waste your precious time over learning how to build a website.\n\n\nThis course is not for you if:\nYou are already familiar with building websites or having coding experience.\nYou are a perfectionist. Sorry, friends! This course favors speed and execution over perfection.\nYou're expecting an award-worthy website. The sites we'll make are great, but we won't be winning any gold medals any time soon.\n\n\nIf you're still with me at this point, great! It means that you want to own your website means and control it and its content. Let's cover what you get in this course.\n\n\nCourse Overview\nWe'll start the course off by learning about the MUST HAVE components of a website. If you're not strategic about your content, you're not going to attract the attention your business deserves. You'll also learn some tactics that help makes clients take action on your site.\n\n\nYou'll learn about color theory, simple copywriting and website building. Follow this course in real-time and you'll have a website up in no time!\n\n\nWe'll build a site in Carrd, a no-code site that allows you to create simple, 1 page websites.\nYou'll learn about new tools to help you write persuasive messaging for your business (in seconds)!\nYou'll learn how SEO makes your site discoverable.\nYou'll learn how to link your website to email marketing sites like MailerLite or MailChimp.\nLearn some psychological tricks to help drive clients (and sales) to your website!\nThis course isn't designed to show you tons of features or the ins and outs of particular tools. Our focus is on building a website quickly!\n\n\nWhy this course?\nYou will get a website up and running in 1 hour.\nIt's a realistic, fast paced course that doesn't require coding or design skills.\nSave money on paying an expensive web designer.\nEliminate weeks of frustration trying to figure out how to make your website.\nCreate compelling and persuasive messaging to attract clients.\nLearn to link to email marketing sites (optional) to grow your mailing list or keep in touch with clients.\n\n\nFrequently Asked Questions\n----\nHow much will I need to spend on tools?\nAll tools presented in this course have a free version (yay).\nIf you choose to pay for upgraded accounts to unlock more features:\nCarrd Pro Plan: $19/year. Price does not include a domain name (which cost ~ $10/year).\n\n\nDid you really make this in 1 hour?\nYep! I make new websites for my own business constantly (seriously). I like to keep things fresh and make changes based on traffic to my site and feedback from clients.\n\n\nWhy one hour?\nBecause done is better than perfect. It's too easy to be paralyzed by the fear of perfection. A website can never be perfect and there is never a perfect time to launch your site. Our focus is creating a website that funnels traffic to your business - without paralyzing fear.\n\n\nIs this course fast paced?\nIt's lightning fast. It's a cheetah running at top speed. It's a Porsche screaming down the Autobahn. We move fast because I want you to see how truly fast you can choose your brand colors, land on your brand's tone, and create a website for your business.\n\n\nIf you're ready to flex your creative muscle and get a shiny new website up and running, head to Lecture 1 now!",
      "target_audience": [
        "Virtual Assistants in need of a website that helps attract clients and drive sales!"
      ]
    },
    {
      "title": "Bootstrap Mastery: Build Responsive Websites Like a Pro",
      "url": "https://www.udemy.com/course/bootstrap-53-mastery-build-responsive-websites-like-a-pro/",
      "bio": "From Basics to Advanced: Create Stunning, Responsive Websites with Bootstrap 5.3",
      "objectives": [
        "Get an in-depth introduction to Bootstrap 5.3, its history, and new features.",
        "Learn how to structure your website using Bootstrap’s grid system and responsive breakpoints.",
        "Explore Bootstrap’s wide range of components like buttons, navbars, modals, and more, to build dynamic and interactive sites.",
        "Understand how to effectively style your typography, images, tables, and figures.",
        "Master Bootstrap forms with validation, custom inputs, and layout options.",
        "Apply your knowledge by building two live projects – an album page and a pricing table, showcasing your newfound Bootstrap skills."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Bootstrap 5.3",
          "Bootstrap History",
          "What's new in Bootstrap 5",
          "Basic Terminology",
          "How to Install Bootstrap",
          "Section-1 Quiz"
        ],
        "Layout": [
          "Breakpoint",
          "Container",
          "Grid",
          "Column",
          "Gutters",
          "Section-2 Quiz"
        ],
        "Components": [
          "Accordion",
          "Alert",
          "Badge",
          "Breadcrums",
          "Button",
          "Button Group",
          "Card",
          "Carousel",
          "Collapse",
          "Dropdown",
          "List Group",
          "Modal",
          "Navbar",
          "Navs & Tabs",
          "Offcanvas",
          "Pagination",
          "Placeholder",
          "Popover",
          "Progress",
          "Scrollspy",
          "Spinner",
          "Toast",
          "Tooltip",
          "Section-3 Quiz"
        ],
        "Content Styling": [
          "Typography",
          "Images",
          "Tables",
          "Figures",
          "Section-4 Quiz"
        ],
        "Working with Form": [
          "Form Control",
          "Select",
          "Checkbox & Radio Button",
          "Range",
          "Input Group",
          "Floating Label",
          "Layout",
          "Validation",
          "Section-5 Quiz"
        ],
        "Utilities": [
          "Border",
          "Text",
          "Shadow",
          "Section-6 Quiz"
        ],
        "Projects": [
          "Making a Album Page",
          "Making a Pricing Table",
          "Section-7 Quiz"
        ],
        "Resources": [
          "Practice Code"
        ]
      },
      "requirements": [
        "Basic HTML5 CSS3 Knowledge needed",
        "Laptop or Desktop"
      ],
      "description": "Are you ready to design stunning, responsive websites effortlessly? Whether you're a beginner or a seasoned developer, this course will guide you through mastering Bootstrap 5.3, the most popular front-end framework for building modern web applications.\nIn this comprehensive course, you'll learn everything you need to know about Bootstrap 5.3, from basic layouts to advanced components and utilities. We’ll cover the essentials of responsive web design, ensuring your websites look perfect on any device, whether it's a mobile phone, tablet, or desktop.\nThroughout the course, you'll gain hands-on experience building real-world projects, such as an album page and a pricing table, giving you practical skills to showcase in your portfolio. By the end, you'll understand how to create professional-grade websites quickly and efficiently using Bootstrap.\nWhy Enroll?\nHands-On Learning: Build real-world projects as you go, reinforcing the concepts taught in each section.\nExpert Instruction: Learn from a seasoned web developer with years of experience in building responsive, professional-grade websites.\nBoost Your Career: Whether you're improving your freelance portfolio or aiming to land a job in web development, this course will equip you with the skills and confidence to succeed.\nLifetime Access: Gain unlimited access to course materials, so you can revisit concepts as needed.\nWhether you're looking to enhance your web development skills or build professional-grade websites for your portfolio, this course offers a step-by-step guide to mastering Bootstrap 5.3. Join thousands of developers who rely on Bootstrap to create beautiful, responsive websites efficiently.\nEnroll today and start building responsive websites like a pro!",
      "target_audience": [
        "Front-End Developers",
        "Freelancers and Web Designers",
        "Developers Seeking Responsive Design Skills"
      ]
    },
    {
      "title": "React, NextJS and NestJS: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/react-nestjs-advanced/",
      "bio": "React with Typescript, Next.js, Redux, NestJS, Docker, Redis, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "React Hooks with Typescript",
        "React Material UI",
        "NextJS with Typescript",
        "Use Redux"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Nest Admin": [
          "Setup",
          "Docker",
          "Database",
          "TypeORM",
          "Admin Authentication Endpoints",
          "Validations",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Profile",
          "Admin Endpoints",
          "Ambassadors",
          "Products",
          "Orders",
          "Seeding Orders",
          "Exposing Fields",
          "Links",
          "Relations Without Foreign Keys",
          "Shared Module"
        ],
        "Nest Ambassador": [
          "Ambassador Authentication Endpoints",
          "Multiple Routes",
          "Scopes",
          "Revenue",
          "Ambassador Endpoints",
          "Redis",
          "Caching Products",
          "Event Emitters",
          "Searching Products",
          "Sorting Products",
          "Paginating Products",
          "Creating Links",
          "Stats",
          "Rankings",
          "Redis Sorted Sets",
          "Formatting the Rankings"
        ],
        "Nest Checkout": [
          "Checkout Endpoints",
          "Getting Link Data",
          "Creating Orders",
          "Transactions",
          "Stripe",
          "Configuration",
          "Update Rankings",
          "Sending Emails"
        ],
        "React Admin": [
          "Setup",
          "Template",
          "Router",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Material UI",
          "Pagination",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Orders",
          "Profile",
          "Redux",
          "Using Redux"
        ],
        "React Ambassador": [
          "Setup",
          "Common Files",
          "Navigation",
          "Header Component",
          "Stats and Rankings",
          "Products",
          "Searching Products",
          "Sorting Products",
          "Lazy Loading",
          "Selecting Products",
          "Generating Links"
        ],
        "Next.js Checkout": [
          "Setup",
          "Template",
          "Routes",
          "Link Data",
          "Order Total",
          "Submitting the Form",
          "Stripe",
          "Confirming Orders"
        ]
      },
      "requirements": [
        "Good understanding of NestJS",
        "Good understanding of React"
      ],
      "description": "Learn how to create an Ambassador App using React, NextJS and NestJS. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big NestJS API.\nIn NestJS you will learn:\nUse Docker\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Interceptors and Guards\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nLogin with Scopes\nUse Redis\nUse Stripe\nSending Emails\nFilter Cached products\nIn React you will learn:\nCreate a React project with Typescript\nCreate a Next.js project with Typescript\nReact Material UI\nUse Redux\nUse React Hooks\nCreate public and private routes\nRestrict routes for unauthorized users\nUse Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Practical Tricks to Create your Custom Odoo Docker Image",
      "url": "https://www.udemy.com/course/odoo-docker-image/",
      "bio": "How to dockerize your custom Odoo in simple steps",
      "objectives": [
        "How to run the official Odoo Docker Image",
        "How to create custom Odoo Docker Image",
        "How to mount local custom add-ons inside the container",
        "How to embed your custom addon into the image",
        "How to run the custom image using docker and docker compose",
        "How to link custom image generation to a GitHub repository",
        "How to make your image pull or clone GitHub repository on restart"
      ],
      "course_content": {
        "Introduction": [
          "Objectives",
          "Why and What is Docker",
          "Container vs Virtual Machine",
          "Download Resources"
        ],
        "Installation and Test": [
          "Docker Installation on Ubuntu",
          "Docker Installation on Centos",
          "Docker Installation on Windows 10",
          "Docker Installation on MacOS",
          "Pull and Run Odoo Official Docker Image"
        ],
        "The Dockerfile": [
          "What is Dockerfile",
          "Clone Odoo Docker from Github",
          "Create Docker Hub Account",
          "Try to Build and Start Our Custom Image",
          "Base Image and Install Basic Packages",
          "Install PostgreSQL Client Package",
          "Install Odoo Package",
          "Mount Volumes, Port, Setup User, and Start Command",
          "Install Additional Python Package"
        ],
        "Build, Run, and Push the Image": [
          "Run Manually with Data Volume Mounted",
          "Run Manually with Addons Volume Mounted",
          "Run in the Background and See the Logs",
          "Entering the Container Shell",
          "Run with Custom Config on Host",
          "Stop, Start, and Restart",
          "Run with Inline Arguments",
          "Push the Image",
          "Remove Unused Containers"
        ],
        "The Entrpoint File": [
          "The entrypoint.sh file explanation",
          "Environment Variables"
        ],
        "Run with Docker Compose": [
          "Docker Compose Installation",
          "Start, Stop, Pull",
          "Docker Compose YML File",
          "Mounting Local Addon Folders",
          "Try to Install the Mounted Addon"
        ],
        "Embedding Custom Addons": [
          "Prepare the Addon to Embed",
          "COPY Command",
          "Re-build our Custom Image",
          "Testing and Installing the Addons"
        ],
        "Make It Private": [
          "Docker Hub Repository Configuration",
          "Add Collaborators"
        ],
        "Install Odoo from Source Code": [
          "Download Odoo Source Code",
          "Additional Required Packages",
          "Copy Source Code",
          "Add Odoo User",
          "Run Python Package Installation",
          "Prepare /var/lib/odoo Directory",
          "Set Default User",
          "Copy Odoo Executable",
          "Edit entrypoint.sh File",
          "Build the Image",
          "Run the Container",
          "Fix Warnings dan Rebuild"
        ],
        "Github Integration: Automatic Create Image": [
          "Prepare a GitHub Repository",
          "Removing dot git Folder for Cloned Repository",
          "Docker Hub Settings",
          "Test the Auto Build"
        ]
      },
      "requirements": [
        "Linux Basic Commands",
        "Odoo Installation on Linux"
      ],
      "description": "So, you have reached at a point to implement Odoo not in the default standard way.. Where your Odoo implementation has required many instances running in parallel and can't be handled with a single or two servers anymore.. And the decision is to utilize Docker, as it can be scaled and managed easily as the client request increased dramatically.\nThen, this course is for you..\nDocker will reduce the complexity of implementing a software system that requires many supporting subsystems, libraries, external program, where sometimes a small difference of minor version or setting can cause the whole system failed to work.\nDocker will solve the ‘it works in my laptop’ problem we commonly face while working with developers.\nI will teach you how to start creating your custom Odoo Docker Image, begins with running the official one that we got from Odoo, then tweak it to suit your needs and start generating your custom image. Direct to the point, not that much theory.\nThen I will also teach you how to integrate your custom image to a Github repository (Gitlab works as well), so that every commit to the repository will automatically create a new image version..\nOr, when you need to pull the repository on every docker container restart..\nOr, when you need to clone the repository on every docker container restart..\nI will teach you all of those practical things step by step, no need for any prior knowledge of Docker, just a little bit of Linux standard commands.\nPlease also check my other course on how to manage the docker containers in Kubernetes environment to achieve the autoscaling and zero downtime for our Odoo instances.\nHope you find this course useful for you daily jobs.\nSee you soon on the class!",
      "target_audience": [
        "Anyone who want to explore docker and Odoo as the case study",
        "Anyone who want to implement custom Odoo Image on top of Docker",
        "Odoo consultant",
        "Odoo developer",
        "Odoo consultant"
      ]
    },
    {
      "title": "Java Full stack Spring Boot and React (Inc JWT,Router,Redux)",
      "url": "https://www.udemy.com/course/java-full-stack-spring-boot-and-react-inc-jwtrouterredux/",
      "bio": "Mysql, MVC, CRUD, Lombok, Full Stack Development, JWT (Json Web Token)",
      "objectives": [
        "Full Stack Development with React and Spring Boot",
        "Redux State Management Application",
        "React Router Dom Implementation on Example Cases",
        "Json Web Token Example on Backend and Frontend"
      ],
      "course_content": {},
      "requirements": [
        "Basic Java Knowledge",
        "Basic Javascript Knowledge"
      ],
      "description": "In this course, we will create a new project like an online-product-seller.\n\n\nWhen I say online-product-seller application, we can think of it like that we will have a product-list page. Somehow users or customers will see these product-lists and they can buy one of them. Of course, at the end of it, this purchase will be stored and displayed later.\n\n\nAnd we will implement this project using Spring Boot, ReactJS, and MySQL.\n\n\nIn our project, we will implement CRUD operations. These CRUD operations will be for users and products. We will use users for user sign-in, sign-up and authorization operations. And we will use the products for creating, editing, and deleting product operations.\n\n\nThese CRUD operations will be requested from ReactJS. So on the backend, we will create an infrastructure for these CRUD operations and on the frontend, we will serve them with the user interface.\n\n\nOur project goes on with User and product operations.\nOur main operations will be user login, register, product-list, create-product, delete-product etc.\nAlso, we will go on with the role based application. So we will use different roles like “Admin”, “User”. Then we will provide different authorizations to these users according to the role.\nAnd this all things will be provided with a secure way in both React and Spring Boot.\n\n\nWe will have two main components to implement our project.\nThese are server side and client side.\n\n\nIn Server Side:\n\n\nOf course here, our main library will be Spring-boot. We will implement the whole infrastructure on the backend with the Spring boot. It will provide easy and fast configuration to us.\n\n\nWe will implement the Model view controller architecture on our project.\n\n\nSpring-security will be one of the main topics in our application. Also, we will use JWT to provide security.\n\n\nIn Spring Boot, Data will be presented to the client as an API call so Spring Rest Controller will be used to handle it.\n\n\nWe will use MySQL as Database. We can use other databases also but most of us familiar with MySQL.\n\n\nWe will also use Object Relational Mapping with Java Persistence API and Hibernate.\n\n\nYou know, We can map our database tables to objects with hibernate.\n\n\nWe will use JPA Repository and Crud Repository in Spring Boot.\nSo these repository templates will handle common database operations like save, update, find, delete.\n\n\nWith Spring Boot, we will also use the Lombok library to clear code.\nYou know that we don't want to implement getter, setter, equals and hashcode. So we can escape it using Lombok @Data or @Value annotation.\n\n\nWe will use Maven To handle all dependencies on the server side. Actually, here we can also use Gradle. Gradle provides better performance than maven but Maven is the most common one. So we'll go on with maven.\n\n\nThat's all about Server side.\n\n\nLet's talk about Client Side.\n\n\nWe will create a ReactJS application on the client side and it will provide a cool user-interface. So we will create some pages like home-page, admin dashboard, login page and register-page. Then we will assign the server apis to these pages and we will consume and produce the data from the user-interface easily and user friendly.\n\n\nLast but not least, we will implement security and authorization on ReactJS also. We will work with different roles and according to these roles, we will implement unauthorized and not-found pages on the user interface also.\n\n\nWe will see the details of them one by one.",
      "target_audience": [
        "All developers curious about React and Spring Boot"
      ]
    },
    {
      "title": "Coding for everybody: Full stack development course",
      "url": "https://www.udemy.com/course/coding-for-everybody-full-stack-development-course/",
      "bio": "Unlocking the World of Programming for All Skill Levels using AI techniques",
      "objectives": [
        "Working on real world coding projects",
        "Learn to apply ChatGPT AI techniques for your project source code",
        "Create your own stunning, layouts for awesome websites",
        "Start Coding on Full stack development",
        "Master client-end development using JavaScript, back-end development Python with PHP and MySQL",
        "Apply JavaScript, Python for data science and PHP Code and MySQL database queries on real-world tasks",
        "Create fully function web apps using Python, PHP, MySQL and JavaScript",
        "Complete a Full life cycle of a real world web application with hands on sessions",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask great questions",
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer",
          "What is Source code",
          "ChatGPT Open AI for Software Developers",
          "Best Practices for Learning Online Course"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting",
          "variable creation exercise"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Functions": [
          "Creating a Function",
          "Function Call()",
          "Function with parameters"
        ],
        "JavaScript Error Handling": [
          "Try-catch",
          "Try-catch-finally"
        ],
        "JavaScript Client-Side Validations": [
          "On Submit Validation",
          "Input Numeric Validation"
        ],
        "PHP Introduction": [
          "What is PHP",
          "Installing XAMPP for PHP, MySQL and Apache",
          "Installing Code Editor(Visual Studio Code)",
          "Creating PHP Project on XAMPP",
          "Hello World Program"
        ],
        "PHP Basic": [
          "Variables",
          "Echo and Print",
          "Data Types",
          "Numbers",
          "Boolean",
          "Arrays",
          "Multi-Dimensional Array",
          "Sorting Arrays",
          "Constants"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Become a full-stack developer with \"Coding for Everybody: Full Stack Development Course,\" where you'll learn to build dynamic, interactive, and fully functional web applications using JavaScript, PHP, and Python. This course is designed for both beginners and those looking to enhance their coding skills, providing you with the knowledge and practical experience needed to develop both the front-end and back-end of websites.\n\n\nYou'll start by mastering the basics of JavaScript to build responsive, user-friendly web pages. As you progress, you'll dive deeper into JavaScript, learning how to create dynamic interfaces and interact with users in real-time. Next, you'll explore PHP, a powerful back-end language, learning how to handle server-side logic, interact with databases (using MySQL), and develop web applications that can process user data.\n\n\nYou'll also gain expertise in Python, one of the most popular and versatile languages, and learn how to use it in web development. These python will learn to apply data science concepts and efficient server-side applications.\n\n\nThe course emphasizes hands-on projects, where you'll create real-world applications such as content management systems, e-commerce sites, and social media platforms. By the end of the course, you’ll be equipped to develop and deploy full-stack web applications using a combination of JavaScript, PHP, and Python.\n\n\nEnroll today and start your journey toward becoming a versatile, job-ready full-stack developer!",
      "target_audience": [
        "Beginner JavaScript, Python, PHP and MySQL developers curious about data science development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to learn full-stack development using ChatGPT AI",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Next.js 15 Full Stack Complete Learning Management System",
      "url": "https://www.udemy.com/course/nextjs-complete-learning-management-system/",
      "bio": "Next.js 15 Mastery: Build a Modern Learning Management System from Scratch Create a Scalable Full-Stack LMS with Next.js",
      "objectives": [
        "Build Full Stack Learning Management System",
        "Design Total Application with Tailwind CSS and Shadcn From Scratch",
        "React js Fundamental",
        "MongoDB Fundamental",
        "Next js Fundamental",
        "Multiple Authenticated as Student and Instructor",
        "Instructor and Student Unique Dashboard",
        "Send Email Option for Student and Instructor",
        "Instructor Add Course with Multiple Options",
        "Course Quiz Option Setup",
        "Course Certificate Download PDF Option",
        "Lesson Authorization Guard Setup",
        "Course Progress Bar Setup",
        "Reset Password and Account Page Setup",
        "Enrolment Success, Send Email Options",
        "Stripe Payment Integration",
        "Protected Route in Next.Js",
        "Manage Video Player for Lesson",
        "Course Review Setup",
        "Category Wise Courses",
        "Related Course in Course Page",
        "Login Logout Instructor and Student with Next Auth",
        "Section Wise Complete Source Code",
        "Lecture by Lecture Source Code",
        "Model Creation and Query Testing"
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of JavaScript",
        "Good Grasp of Tailwind CSS",
        "HTML and CSS Knowledge",
        "Basic Command Line Knowledge"
      ],
      "description": "Master Next.js 15 & Build a Complete Learning Management System from Scratch\nAre you ready to take your Next.js skills to the next level? Whether you're a beginner or an experienced developer, this Next.js 15 Full Stack Advanced Learning Management System course is designed to help you master full-stack development while building a professional-grade LMS. You'll gain hands-on experience with Next.js 15, MongoDB, Tailwind CSS, and Shadcn, while implementing secure authentication, payment integration, and course management features from scratch.\nWhat You'll Learn\nIn this course, you'll build a fully functional Learning Management System (LMS) with the latest technologies, following best coding practices and real-world implementation techniques. Here’s a breakdown of what you’ll accomplish:\nFull-Stack LMS Development – Design and develop a complete LMS with Next.js 15, MongoDB, and Tailwind CSS.\nAuthentication & Authorization – Implement NextAuth to create role-based authentication for students and instructors.\nInstructor & Student Dashboards – Create two distinct dashboards with personalized features for each user type.\nCourse Management System – Enable instructors to create, update, and manage courses with multiple options.\nVideo Player Integration – Embed and manage videos for course lessons effectively.\nCourse Quiz System – Set up interactive quizzes within courses to enhance student engagement.\nCourse Completion Certificates – Generate and download PDF certificates upon course completion.\nCourse Progress Tracking – Implement a progress bar to track lesson completion.\nEmail Notifications – Send email updates to students and instructors.\nStripe Payment Integration – Allow secure payments for course enrollments.\nLesson Authorization Guard – Restrict access to lessons based on enrollment status.\nCourse Reviews & Ratings – Enable students to leave reviews and ratings for courses.\nCategory-Based Course Listing – Organize and display courses by category.\nRelated Courses Section – Suggest relevant courses on the course page.\nPassword Reset & Account Management – Implement account recovery and user profile management.\nProtected Routes in Next.js – Secure pages and restrict unauthorized access.\nOptimized Performance & SEO – Leverage Next.js 15 features for server-side rendering (SSR) and static site generation (SSG) to improve performance and SEO.\nWhy Take This Course?\nThis course is not just theory—you'll build an industry-standard LMS from scratch while learning real-world full-stack development. Whether you're aiming to create an educational platform, enhance your web development skills, or build your own online course website, this course is the perfect choice.\nWho Is This Course For?\nAspiring Full-Stack Developers who want to learn Next.js 15, MongoDB, and modern web technologies.\nEntrepreneurs & Educators looking to build an e-learning platform for their courses.\nFreelancers & Web Developers who want to add LMS development to their skill set.\nStudents & Professionals eager to enhance their knowledge of full-stack web development.\nCourse Structure\nThis course is designed in a section-wise format, with step-by-step explanations and lecture-by-lecture source code. You’ll start with fundamentals, move to advanced topics, and finally deploy a fully functional LMS.\nBy the end of this course, you'll have a production-ready Learning Management System that you can use, modify, or even deploy as a SaaS product.\nDon't miss out—enroll now and start building your own Learning Management System with Next.js 15!",
      "target_audience": [
        "Frontend Developers looking to level up their skills by learning backend development with Next js and MongoDB.",
        "Full-Stack Developers who want to build high-performance, full-stack applications using modern technologies.",
        "Freelancers looking to expand their service offerings",
        "Tech enthusiasts eager to explore modern web development trends",
        "Anyone Interested in Web Development",
        "Build Your Won EdTech Platform"
      ]
    },
    {
      "title": "React: A Quick Understanding (Deep Dive JumpStart < 2 Hours)",
      "url": "https://www.udemy.com/course/react-quick-understanding/",
      "bio": "A quick deep dive mini bootcamp - React 19, JSX, Components, Hooks, use, Data Fetching, Suspense, AI and LLM generation",
      "objectives": [
        "Build functional React components that accept props and return JSX to create reusable UI building blocks.",
        "Understand what the Fiber Tree and Reconciliation are",
        "Write JSX syntax correctly and understand the basic rules for creating component markup that React can render.",
        "Understand what hooks really are and state hooks in React",
        "Fetch data using React 19's new use hook and display loading states with Suspense boundaries.",
        "Instruct an AI to generate React code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup",
          "Downloading Source Code",
          "Conceptual Aside: Imperative vs Declarative Code"
        ],
        "Components and JSX": [
          "Components and JSX",
          "The DOM Tree and Imperative Programming",
          "Conceptual Aside: Pure Functions",
          "Components and Pure Functions",
          "Mounting and Rendering",
          "Conceptual Aside: Transpilation",
          "JSX and Transpilation",
          "A React Component",
          "Events",
          "Reacting to an Event",
          "Props and Children",
          "Multiple React Components"
        ],
        "React Elements, The Fiber Tree, and Reconciliation": [
          "React Elements and the Fiber Tree",
          "React Elements",
          "The Fiber Tree (aka The Virtual DOM) and Re-Rendering",
          "Reconciliation",
          "Explore the Fiber Tree"
        ],
        "State, Hooks, and Data Fetching": [
          "State and Hooks",
          "Conceptual Aside: Linked Lists",
          "Hooks",
          "Conceptual Aside: State",
          "useState",
          "Adding State",
          "useReducer",
          "Complex State with Reducers",
          "use, Data Fetching, and Suspense"
        ],
        "React, AI, and LLMs": [
          "React, AI, and LLMs",
          "Prompting an AI for React Code",
          "Use an LLM to generate React code"
        ],
        "Conclusion": [
          "A Quick Favor",
          "Conclusion",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic JavaScript and HTML knowledge"
      ],
      "description": "Master an accurate React mental model in record time! Don't just copy code. Understand React.\nMost React tutorials teach you to type along like a robot. You end up with working code but no real understanding of why it works. When bugs appear, or your faced with challenges you didn't see in the projects you imitated, you're stuck.\nThis course is different. Build an accurate mental model of React's core concepts so you can debug faster, make better architectural decisions, write clean maintainable code, and direct an LLM properly to generate React code.\nWhat You'll Learn\nComponents & JSX\nWhat components really are and why they must be \"pure\"\nHow JSX works under the hood and why its rules exist\nWhat props are and how they work\nWriting semantic, maintainable component markup\nReconciliation and the Fiber Tree\nHow React works under-the-hood\nWhere React actually stores information\nHooks\nuseState: Why immutability matters and how React detects changes\nuseReducer: When to choose reducers over simple state\nModern Data Fetching\nMaster React 19's new use hook for clean async code\nUnderstand Suspense boundaries\nAI and LLM Prompting\nUse your knowledge to properly prompt an AI\nGet the best results from an LLM generating React apps\n\n\nI've read all of React's source code, and have given popular talks at React Summit (the world's biggest React conference). Join me in understanding React!\n\n\nPrerequisites\nBasic JavaScript (functions, objects, arrays)\nHTML and CSS familiarity\nNo prior React experience required",
      "target_audience": [
        "Beginner, intermediate, or even advanced React devs who want a clear mental model of React"
      ]
    },
    {
      "title": "Firebase Authentication & Security Complete Guide",
      "url": "https://www.udemy.com/course/firebase-authentication/",
      "bio": "Authenticate users with email, Google, Facebook, Twitter and Github. Learn Authorization by building a \"To do list\" app",
      "objectives": [
        "Authentication with email and password",
        "OAuth Authentication - Google, Facebook, Twitter, Github",
        "Uploading profile images",
        "User ability to delete account",
        "To do list application that demonstrates Authorization",
        "Hosting",
        "JavaScript & ECMAScript"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate JavaScript Knowledge"
      ],
      "description": "Authentication, the ability to create users and sign in to a website, can be tricky to set up. This course is designed to simplify the process and walk you through how to do it step by step.\nLearn how to authenticate users with email, Google, Facebook, Twitter, and Github. Users will also be able to reset their passwords or delete their accounts.\nAfter authenticating we will build a \"to-do list\" application that demonstrates how to store data related to the user. This is commonly referred to as authorization. In this app, the user will be able to save tasks for themselves and also view or mark them as complete.\nWhile learning authentication we also extend the app so you end up getting experience with a lot of the Firebase services. For instance, this course uses Firebase Storage for profile uploading, the Realtime Database for to-do list items and Firebase Hosting for a fully deployed live site.\nFirebase is hands down the fastest way to create full-stack applications in 2019. Firebase is a suite of cloud services backed by Google that allows you to launch applications extremely quickly. Because it's a BaaS (Backend as a Service) you get all the benefits of a backend without the complications of setting one up. Firebase's services are 100% free until you reach a monthly data cap. It's meant to be enough for testing full-stack apps on the platform but it's enough to run your site live for FREE (if your app is in its beginning stages - upgrade if needed). This guide assumes you have some JavaScript knowledge but absolutely zero knowledge of Firebase.",
      "target_audience": [
        "Need your app or website to know who your users are? You need authentication. If you want a simple easy to use guide then this is the course for you."
      ]
    },
    {
      "title": "Gatsby JS & Prismic: Build RAPID Gatsby sites [Gatsby.js v4]",
      "url": "https://www.udemy.com/course/gatsby-js-prismic-netlify/",
      "bio": "Gatsby JS & Prismic. Use Prismic headless CMS data in Gatsby to generate Gatsby.js static sites & deploy to Gatsby cloud",
      "objectives": [
        "Increase your value and improve your knowledge as a front-end / React JS developer",
        "Learn Gatsby",
        "Create a static, server-compiled, content-driven website using Gatsby JS (with React JS & GraphQL)",
        "Learn how to use GraphQL and GraphiQL in Gatsby to query data stored in Prismic CMS",
        "Deploy your Gatsby JS static website and rebuild whenever our Prismic content changes using Netlify",
        "Use Netlify forms from within Gatsby to capture user's email address and personal details"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Important: Before you begin this course",
          "Introduction - overview of the Gatsby JS + Prismic course",
          "Udemy reviews and ratings",
          "Gatsby overview and project setup",
          "Prismic setup and overview",
          "Linking Gatsby to Prismic"
        ],
        "Page generation and rich text": [
          "Querying Prismic data using the GraphiQL tool",
          "Generating pages from Prismic data in Gatsby",
          "Rendering the Title field using the RichText component",
          "Rendering the rich text field using the RichText component"
        ],
        "Navigation": [
          "Create and query for the navigation",
          "Rendering and styling the navigation"
        ],
        "Prismic slices": [
          "Create the homepage and hero slice",
          "Rendering the homepage and hero slice",
          "Finishing the hero component",
          "Create the call to action slice",
          "Finish the call to action component",
          "Create the price options slice",
          "Finsihing the price options component"
        ],
        "Contact page and form": [
          "Create the contact page and contact form slice",
          "Finishing the contact form"
        ],
        "Finishing touches": [
          "Search Engine Optimisation (SEO)",
          "Rich text slice and component",
          "Handling internal links in Rich Text"
        ],
        "Deploy Gatsby site to production / live site": [
          "Deploy to Gatsby Cloud & auto rebuild site whenever prismic data changes",
          "BONUS!"
        ]
      },
      "requirements": [
        "A basic understanding of React JS",
        "Be able to install Node and NPM locally on your machine",
        "Have either a Windows or Mac OS machine"
      ],
      "description": "Do you want to improve your React JS skills and increase your value as a front-end developer?\n- \"Gatsby lets you build blazing fast sites with your data, whatever the source. Liberate your sites from legacy CMSs and fly into the future.\"\nIn this course we'll be building a Gatsby site from a Prismic CMS data source!\nLevel-up your React skillset by learning Gatsby.js with a Prismic CMS backend! Gatsby JS uses React JS and GraphQL to generate and build static pages from a given dataset. This course will look at setting up Prismic as a headless CMS while using GatsbyJS to generate a blazing-fast server-rendered React website from Prismic data, such as pages, menus, media, (and more!) using GraphQL to query that data.\nWe'll be creating a landing page website in this course, looking at initial setup and development of Gatsby JS and Prismic locally, creating React components in Gatsby based on Prismic data, and querying Prismic data with GraphQL to automatically generate our static pages.\nNo landing page is complete without a contact form so we'll be creating a dynamic contact page in Gatsby where we can update our form fields within Prismic and use formspree to capture our user's email address and various other details.\nWe'll look at how we can query Prismic data with GraphQL using the GraphiQL browser tool. Once we're familiar and comfortable developing with GatsbyJS and Prismic, we'll progress onto setting up and deploying a live website using Gatsby cloud that re-builds our static web pages every time we update content in our Prismic backend.\nIt's recommended you have rudimentary knowledge of React. We'll be covering everything else from Gatsby.js, Prismic, GraphQL, and styled-components!\nSpeed past the competition with Gatsby!\nGatsby.js builds the fastest possible website. Instead of waiting to generate pages when requested, Gatsby pre-builds pages and lifts them into a global cloud of servers (we'll be using Gatsby cloud for this) - ready to be delivered instantly to your users wherever they are.\nSome advantages of using Gatsby include:\nNo waiting for API responses\nNo waiting to render components based on requested data\nNo loading spinners!\nNo waiting for a server to compile a page to serve to the browser - these pages are already pre-compiled with Gatsby and ready to serve instantly to your users!\nWe certainly cover a lot in this Gatsby course!",
      "target_audience": [
        "React developers who want to increase their value and skillset",
        "React developers who want to get ahead of the game and learn more than the average developer",
        "Developers who want to generate and create rapid websites and landing pages for their clients"
      ]
    },
    {
      "title": "Web 3.0, Blockchain, Smart Contracts & Crypto Practice Tests",
      "url": "https://www.udemy.com/course/web3-blockchain-smartcontracts-crypto-practice-tests/",
      "bio": "Web 3.0 Complete Multiple Choice Questions Pack for Learning, Interviews, & Practice - Containing over 250 Questions !",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "In recent months, you may have come across a phrase growing in popularity: Web3. You might be wondering what it is, what it will mean for the future, and how exactly the third-generation internet differs from the first two. Let’s cut to the chase: It’s a revolution !\nAs we move into the future, we find increasing need for a fully trusted trust interaction system. Web 3.0 is a re-imagination of the sorts of things we already use the web for, but with a fundamentally different model for the interactions between parties. Web 3 represents the next generation of the internet, one that focuses on shifting power from big tech companies to individual users.\n\n\nWhy you should Learn about Web 3 :\nIts high time that you sharpen your knowledge about Web3. Everyone in the world from Jack Dorsey to Elon Musk - are talking about Web3. Governance on Web3 is puts power in the hands of its users, not a centralized overlord.\nWe are now at the beginning of the web3 era, which combines the decentralized, community-governed ethos of web1 with the advanced, modern functionality of web2.\nWeb3 offers a new way that combines the best aspects of the previous eras. It’s very early in this movement and a great time to get involved.\nEveryone is moving into this new piece of technology - new dApps are created everyday, People are making millions off selling their NFTs, there are countries accepting Cryptocurrencies as the mode of payment - the world is slowly accepting Web3 and this is the right stage to enter this new era.\n\n\nWhy you should take this Practice Test on Web 3:\nMany crucial topics around Web3 are included in this Practice Test.\nFor almost each question, detailed descriptions are also given.\nThere are both simple and complex questions. There are also code based questions.\nYou can re-take the exam as many times as you like.\nThe test can be stopped and resumed at any time.\nThe progress bar at the top of the screen shows both your progress and your time. Don't panic if you're running out of time; you can still complete the test.\nYou can skip a question to come back to at the end of the exam.\nBefore submitting your test, you can also use \"Mark for Review\" to go back through any questions you're not positive about.\nClick the stop button to complete the exam and show the results immediately.\nI will add new topics and more questions on regular basis.\n\n\nIn these Practice Tests, we cover topics like :\nBlockchain\nWeb3 fundamentals\nSolidity\nVyper\nBitcoin\nEthereum\nBlocks\ndApps\nGas\nMining\nNFT\nEVM\nToken\nWallet\nRust\nSmart Contracts\nICO\n..and many many more topics !\n\n\nMost Importantly, guidance is offered beyond the test. This test will not only give you a refresher of your current knowledge, but will encourage you to check multiple resources around certain topics of the questions you are unaware on. Also, once you enroll in this course, you will also receive my monthly Emails around Web3 that I specifically curate to share latest happenings on this topic. New questions and topics will be periodically added to this course to keep your knowledge up to date !\nA Verifiable Certificate of Completion is presented to all students who undertake this course.",
      "target_audience": [
        "All – Management, Professionals, Recruiters, Startups, Experienced, Freshers and Students",
        "Anyone wishing to sharpen their knowledge of Web3 Technology.",
        "Anyone who want to enter the Web3 universe as this is the right time",
        "Anyone preparing for interviews (campus/off-campus interviews, walk-in interview and company interviews)",
        "Anyone preparing for aptitude tests on Solidity, Blockchain, Rust, or any Web3 topic."
      ]
    },
    {
      "title": "MERN Stack Bus Ticket Booking App",
      "url": "https://www.udemy.com/course/mern-stack-bus-ticket-booking-app/",
      "bio": "Build MERN Stack Bus Ticket Booking App From Scratch using React , Redux , Stripe , Antd , Node , MongoDB",
      "objectives": [
        "In this course, we will cover a range of topics, including building full-stack real world applications from scratch, working with complex MongoDB queries, schem",
        "We will also cover how to implement JWT authentication and password hashing for securing the application. You will learn how to use the Ant Design library for U",
        "We will even cover how to implement seats availability checking and Stripe payment gateway integration for handling payments. You will learn how to handle negat",
        "We will also cover how to manage tickets and users from the admin panel. We will even cover how to push your code to GitHub and host your application on Heroku.",
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a bus ticket booking application with"
      ],
      "course_content": {
        "Introduction": [
          "Project Demo / Resoures"
        ],
        "Front End Setup": [
          "React App",
          "Node Modules and Folder Structure"
        ],
        "Backend Setup": [
          "Node Express Server Setup",
          "Node Mongo Connection"
        ],
        "Authentication Front End": [
          "Registration Screen",
          "Login Screen"
        ],
        "Authentication Backend": [
          "User Model and Register API",
          "User Registration API Integration",
          "Login API"
        ],
        "Authorization and Protected Routes": [
          "Authorization Part - 1",
          "Authorization Part - 2"
        ],
        "Redux setup and Alert Messages": [
          "Redux Setup",
          "Spinner Component"
        ],
        "Layout": [
          "Layout Structure",
          "Menu Items",
          "Layout Responsive"
        ],
        "Buses": [
          "Add Bus",
          "Add Bus API",
          "Get All buses",
          "Edit Bus",
          "Delete Bus"
        ],
        "Booking Bus": [
          "Displaying all buses",
          "Booking Page-1",
          "Booking Page-2",
          "Booking API"
        ]
      },
      "requirements": [
        "Javascript Basics"
      ],
      "description": "Hi Guys, Welcome to the course 'MERN Stack Bus Ticket Booking Application'\nIn this course, you will learn the following topics\n\n\nBuilding full-stack real world applications from scratch\nWorking with complex MongoDB, queries, schemas, models\nSeparate User Interfaces for Users, Admins\nJWT Authentication and Password Hashing\nAnt Design Library for UI Components,\nRedux Toolkit,\nSeats Availability Checking\nStripe Payment Gateway Integration\nHandling negative payment scenarios\nManage Tickets and User from the Admin Pane;\nPushing Code to GitHub,\nHosting application in Heroku\n24/7 Q/A Support.\nMERN stands for MongoDB, Express, React, Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is the famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a bus ticket booking application with separate user interfaces for users and admins. By the end of this course, you will have the skills and knowledge needed to create a fully functional bus ticket booking application with seats availability checking, payment gateway integration, and a secure authentication system."
      ]
    },
    {
      "title": "PhpStorm and docker master class. Best php IDE for fullstack",
      "url": "https://www.udemy.com/course/phpstorm-masterclass-best-php-ide-fullstack-laravel-angular-react/",
      "bio": "PhpStorm to develop with docker, php, xdebug , optimize it for Laravel, wordpress.automate tasks frontend sass, webpack",
      "objectives": [
        "Instal phpstorm",
        "navigate thecode, files and folders and all shortcuts",
        "Create laravel projects",
        "Integrate git and github",
        "remote server configuration and automatic upload",
        "Debugging with xdebug",
        "watchers configuration for webpack and typescript",
        "debugging with javascript"
      ],
      "course_content": {
        "Introduction": [
          "phpstorm Introduction",
          "phpstorm .Installing",
          "phpstorm. Configuring phpstorm and creating a project"
        ],
        "Configuring phpstorm and navigating the menu": [
          "phpstorm. Opening a php storm project and searching in files",
          "phpstorm. Configuring a phpstorm project. Line ending and file encoding",
          "phpstorm. Configuration of phpstorm toolbars and views",
          "Note on installing php"
        ],
        "Installing php in windows": [
          "phpstorm. Installing php",
          "phpstorm. Adding php to the path",
          "phpstorm. Installing php 8",
          "phpstorm. Installing xdebug"
        ],
        "Installing php in mac": [
          "phpstorm. Installing php"
        ],
        "Installing php in ubuntu linux": [
          "phpstorm. Installing php",
          "phpstorm. Installing xdebug"
        ],
        "Creating phpstorm projects": [
          "phpstorm. Creating a phpstorm project from CVS",
          "phpstorm. Cloning and creating a phpstorm project with git from github",
          "phpstorm. Create, clone, push and merge a github project",
          "phpstorm. Loading files of a project to a remote server with ssh and ftp",
          "Phpstorm. Navigating a remote host with ssh and ftp"
        ],
        "Creating and refactoring php code with phpstorm": [
          "phpstorm. Navigating and refactoring in php code",
          "phpstorm. Refactoring php code with phpstorm",
          "phpsCreating a file with phpstorm, generating getters and setters of a php class",
          "phpstorm. Creating php code templates and live templates with phpstorm"
        ],
        "Debugging with phpstorm": [
          "phpstorm. Configuring xdebug for phpstorm",
          "phpstorm. Step by step debug with phpstorm and xdebug"
        ],
        "Using docker with phpstorm": [
          "Install docker on mac",
          "Installing Docker on Ubuntu",
          "Docker. Install wsl2 and unbuntu on windows",
          "Installing docker desktop on windows",
          "Docker. Run a php-apache image and mount a volume",
          "Docker. Creating our own image with Dockerfile with apache and php",
          "Docker. Creating a mariadb container",
          "Docker. Creating mariadb image and container",
          "Docker. Creating volume. Mapping volume to mariadb data",
          "Docker. Creating networks. Connecting mariadb container with apache-php containe",
          "Docker. Docker-compose file. Composing different services with a dockercompose"
        ],
        "Http client and REST console": [
          "phpstorm. Http client and REST console"
        ]
      },
      "requirements": [
        "Pc , linux or Mac with Internet connection"
      ],
      "description": "PhpStorm master class. The Best php IDE for fullstack development and docker container and images management\nFull support of all php8 features.\nHTML / CSS / JavaScript editor with all the features of webstorm\nMake the most of PhpStorm to develop with php\noptimize it for Laravel\nautomate frontend tasks sass, webpack.\nPhpStorm, my favorite IDE, is one of the best IDEs for working with PHP based web projects\nPhpStorm is perfect for working with Symfony, Laravel, Drupal, WordPress, Zend Framework, Magento, Joomla!, CakePHP, Yii and other frameworks.\nFront-end technologies included Make the most of cutting-edge front-end technologies, such as HTML 5, CSS, Sass, Less, Stylus, CoffeeScript, TypeScript, Emmet and JavaScript, with refactoring, debugging and unit testing available. See changes instantly in the browser with Live Edit.\nVersion control system integration, remote deployment support, database / SQL, command line tools, Docker, Composer, REST client and many other tools.\nAll WebStorm features are included in PhpStorm, with full support for PHP and database / SQL added on top of it.\nPHPDoc support, code (re) arranger and formatter, quick-fixes.\nCode refactoring reliably with Rename, Move, Delete, Extract Method, Inline Variable, Push members Up / Pull members Down, Change Signature and many more refactoring\nIt works with Xdebug and Zend Debugger, and can be used both locally and remotely. Unit Testing with PHPUnit, BDD with Behat and profiler integration are all also available.\nWHAT YOU WILL LEARN:\nInstallation\nConfiguration\nNavigating interfaces and shortcuts\nNavigation in code and files\nRefactoring\nCreation of live templates\nDebug with xdebug\nInstall docker\ncreate docker containers\nAccess docker containers from phpstorm\nJavascript debugging\nConnection to databases such as mysql and oracle\nGIT and GITHUB connection\nRemote Server connectiono\nConfiguration and automatic upload with ftp, sftp and ssh\nOptimization and plugin for laravel\nCreation of watchers for webapck and typescript",
      "target_audience": [
        "php developer",
        "web developer",
        "frontend developer",
        "backend developer"
      ]
    },
    {
      "title": "Svelte Crash Course through Projects w/ Backend Connections",
      "url": "https://www.udemy.com/course/svelte-crash-course-through-projects-w-backend-connections/",
      "bio": "Learn Svelte through 2 Projects (includes Reactivity, Components, Backend Connectivity and Best Practices)",
      "objectives": [
        "Find out why compiled front-end code is such a great idea",
        "Learn Svelte constructs, components, messages and events and many more",
        "See how to use Stores and best practices for them",
        "Learn how to properly connect Svelte to a backend"
      ],
      "course_content": {
        "Intro and Basic Setup": [
          "Intro to the Course",
          "Into to the Svelte Way!",
          "Resource Access and Instructions for Usage",
          "Creating the Basic Todo Template",
          "Create Essential Components for Todo"
        ],
        "Data Flow, Properties, Events and Handlers": [
          "Defining and Passing Data to Components",
          "Click Events, Handlers and Message Dispatch",
          "Adding Reactivity to Components"
        ],
        "Data from Other Components, Binding and Other Features": [
          "Access Data from Within Other Components",
          "Adding Deletion Functionality",
          "Adding Animations Easily through Transitions",
          "Handling Keypress Events"
        ],
        "Project 2: Chitter - Creating The Template": [
          "Setup and Creating the Basic Template",
          "Creating the Chits Container and Chit Components"
        ],
        "Chitter - Store and Access Data Efficiently": [
          "Svelte Stores and Why to Use them!",
          "Inserting Data into Stores (the long way!)",
          "Saving Data into Stores the Right Way!",
          "Adding Another Custom Function to the Store",
          "Adding Delete Functionality"
        ],
        "Create a Dummy Backend in Stores": [
          "Structuring the Codebase for Handling Backend"
        ],
        "Communicating with the Backend through a REST API": [
          "Creating a Backend and Getting Data from Svelte",
          "Sending Data to the Backend from Svelte",
          "Delete from the Backend"
        ],
        "Creating Session Data for User Login": [
          "Creating a Login Form and Saving Session Data",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Have basic understanding of HTML and CSS",
        "Some knowledge of Javascript is useful",
        "NO knowledge of React or another framework required"
      ],
      "description": "The next big thing:\nIf you think React, Vue and Angular are the only popular front-end frameworks, you're missing out on the next big thing: SVELTE!\n\n\nWhy Svelte?\nSvelte is a radical new way of handling frontend. It brings the best of both worlds .. it lets you create your front-end in a modular way. It has components, events, messages, data stores -- everything a modern framework has. BUT ... it doesn't come with all the baggage of performance overhead. Svelte achieves this by compiling your code once on the server-side and sending pure javascript to the browser.\nThis makes frontends written in Svelte blazingly fast and extremely easy to maintain. This is why many believe Svelte to be the future of front-end development.\n\n\nWhy Get This Course?\nWith this course, you can learn the best practices in Svelte and how to use it to create real-world applications. We cover all important aspects of Svelte including:\n\n\nSvelte constructs\nComponents\nComponent interactions and properties\nEvents, handlers and messages\nSvelte shorthands to save time\nStores and best practices associated with them\n... most importantly, see how to connect Svelte to the backend through REST in the best way possible!\n\n\nWhat You Will Learn?\nBy the end of the course, you'll have a thorough understanding of the philosophy of Svelte and you would be able to dive even deeper into your particular use case. This is supposed to be the first step in your journey towards compiled frontends. Take this first step and the rest of the stuff will be much, much easier for you. You will understand the philosophy of Svelte and the official docs will make much more sense to you so that you can continue to learn on your own independently!\n\n\nSupport and Money Back Guarantee\nFinally, I provide exceptional support for all my courses. All questions are answered within 24 hours. Plus, if you don't like the contents, I absolutely do not mind if you take advantage of the 30-day money-back guarantee!\nAs you might be able to see through this text, I'm very passionate about Svelte. So, join me now and let's create some projects with Svelte!",
      "target_audience": [
        "Front-end developers",
        "Anyone who is creating dynamic websites",
        "Those working in React, Vue or Angular who want to learn the framework that might replace these in the future!"
      ]
    },
    {
      "title": "Advanced HTML5 Tutorial for Web Developers",
      "url": "https://www.udemy.com/course/advanced-html5-for-web-developers/",
      "bio": "Take Your HTML5 Skills To The Next Level. Master The Advanced Features Of HTML5 With This Practical Hands-on Tutorial",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "In this Advanced HTML5 training course, an expert author  takes you deep into the advanced techniques and functions that HTML5 has to offer you. This course is designed for students that have already completed the Learning HTML5 tutorial, or have solid experience in the basics of HTML5.\n\nYou will begin by exploring some Javascript basics - writing to an HTML page, using variables and functions, interacting with HTML, looping and drag and drop functions. You will contiue by exploring how to utilize and create custom media controls. The course covers some of the more popular CSS3 features such as colours and backgrounds, gradients, borders and text effects. The video tutorial continues on to cover HTML5 canvas functions, more CSS3 techniques, Geolocation, and finally, HTML5 for Mobile Apps.\n\nBy the completion of this Advanced computer based training course for HTML5, you will have a deeper understanding of how to take advantage of the many new features and functions that HTML5 has to offer. Working files are included to allow you to work alongside the author as you progress through the training.",
      "target_audience": []
    },
    {
      "title": "Learn Web Development by Creating a Food Ordering App",
      "url": "https://www.udemy.com/course/guide-to-web-development-hustler-edition/",
      "bio": "Learn to build full stack web apps with React and Firebase in this fast paced course with a capstone project.",
      "objectives": [
        "Master frontend development with React",
        "Master backend development with Firebase",
        "Learn professional developer best practices.",
        "Build fully-fledged websites and web apps for your startup or business.",
        "After the course you will be able to build ANY website you want.",
        "Learn the latest technologies, including Javascript, React, Node and Firebase"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "House keeping",
          "Summary"
        ],
        "Introduction to HTML": [
          "Introduction to HTML",
          "VSCode",
          "HTML Tags",
          "HTML forms",
          "HTML blog"
        ],
        "CSS": [
          "Introduction to CSS",
          "CSS selectors",
          "Popular CSS properties",
          "Flex system",
          "Debug CSS"
        ],
        "Javascript": [
          "Introduction",
          "Syntax",
          "Usage with HTML",
          "Objects",
          "Classes",
          "Template literals",
          "DOM",
          "Data types",
          "Arrays",
          "Functions",
          "Arrow Functions",
          "Pass and return from functions",
          "If conditions and logical operators",
          "Switch",
          "Looping through content",
          "Events",
          "Promises",
          "Troubleshooting Javascript in the browser"
        ],
        "CLI": [
          "What is CLI",
          "Setup iTerm (MAC)",
          "Setup Git Bash (WINDOWS)"
        ],
        "Node": [
          "What is Nodejs",
          "NPM dependency management"
        ],
        "Github": [
          "Introduction to Github",
          "Cloning repository",
          "Branches and Pull Requests",
          "Conflicts and ignore"
        ],
        "Typescript": [
          "Typescript"
        ],
        "React": [
          "Introduction to React",
          "Files and folder structure",
          "Components",
          "JSX",
          "Props",
          "State",
          "Conditional Rendering",
          "useContext",
          "Custom hooks",
          "useEffect",
          "Chakra UI"
        ],
        "React Intermediate": [
          "Start contact application",
          "React router",
          "Add new contact",
          "Form validation",
          "Edit and Delete contact"
        ]
      },
      "requirements": [
        "No programming experience needed - I’ll teach you everything you need to know",
        "A computer with access to the internet",
        "No paid software required",
        "I’ll walk you through, step-by-step how to get all the software installed and set up"
      ],
      "description": "Do you want to learn how to create modern and dynamic web applications using the latest technologies? Do you want to master the skills that are in high demand in the web development industry? Do you want to learn from a real web developer who has built successful projects for clients and startups?\nIf you answered yes to any of these questions, then this course is for you. Guide to Web Development (2024) - Hustler Edition is a comprehensive and practical course that will teach you how to build full-stack web apps with React and Firebase. React is a powerful and popular front-end library that lets you create interactive user interfaces with ease. Firebase is a cloud-based platform that provides various services such as authentication, database, storage, hosting, and more. Together, they form a perfect stack for building scalable and secure web apps.\nIn this course, you will learn by doing. You will work on real projects that will challenge you and help you apply what you learn. You will also get access to the source code and resources for each project. You will learn how to:\nSet up your development environment and tools\nCreate responsive and attractive web pages with HTML, and CSS\nUse JavaScript and React to add interactivity and functionality to your web pages\nUse Firebase to store and retrieve data, authenticate users, upload files, and deploy your web apps\nUse various React libraries and components such as React Router, React Hooks, Chakra UI, and more\nUse best practices and tips for writing clean and maintainable code\nDebug and troubleshoot common errors and issues\nAnd much more!\nThis course is designed for beginners who have some basic knowledge of HTML, CSS, and JavaScript. You don’t need any prior experience with React or Firebase. You will learn everything from scratch in a clear and easy-to-follow way. This course is also fast-paced and project-led. You will only learn the information that is relevant and useful for building web apps. No fluff or filler content.\nBy the end of this course, you will have the confidence and skills to create your own full-stack web apps with React and Firebase. You will also have a portfolio of projects that you can showcase to potential employers or clients. You will be a hustler who can get things done.\nSo what are you waiting for? Enroll now and start your journey to becoming a web developer.",
      "target_audience": [
        "If you want to learn to code through building fun and useful projects, then take this course.",
        "If you want to start your own startup by building your own websites and web apps.",
        "If you want to take ONE COURSE and learn everything you need to know about web development, take this course"
      ]
    },
    {
      "title": "HTML in Hindi | Learn HTML & CSS 2025 | Learn HTML 5 2025",
      "url": "https://www.udemy.com/course/become-a-web-developer-in-2023-from-zero-to-expert/",
      "bio": "Learn HTML, CSS, JavaScript, and modern web development frameworks to build responsive and interactive websites.",
      "objectives": [
        "HTML5 introduction",
        "HTML5 Full Knowledge",
        "What is HTML5 Elements?",
        "Block & inline Elements",
        "HTML5 img Insert to Your Web Page",
        "HTML5 Table with Internal CSS3",
        "Internal & inline & External CSS3",
        "HTML5 All Tag Discuss",
        "Bonus Project with Complete Responsive Website",
        "HTML5 & CSS3 Learn in Briefly Discuss",
        "How to Download Best Editor to Code HTML5 & CSS3",
        "How to Make Table Borders",
        "How to Make Website Layout From Scratch",
        "QR Generator Using HTML,CSS and Javascript"
      ],
      "course_content": {},
      "requirements": [
        "You Need a Computer",
        "You Need a Internal Connection For Download Sublime Text 3",
        "No Skills Required This is For Beginners To Learn Web Development"
      ],
      "description": "Are you ready to start your journey HTML in Hindi | Learn HTML & CSS 2025 | Learn HTML 5 2025  towards becoming a web developer? Look no further! Our comprehensive course on web development has everything you need to go from zero to expert.\nIn this course, you will learn the fundamental technologies and skills needed to build modern websites. We will cover a wide range of topics, including:\n\n\nHTML: The markup language used to structure and content of web pages\nCSS: The style sheet language used to control the look and feel of web pages\nJavaScript: The programming language used to add interactivity and logic to web pages\nResponsive design: Techniques for creating websites that adapt to different screen sizes and devices\nWeb frameworks: Tools and libraries that make it easier to build complex web applications\nOur step-by-step video lessons will guide you through the entire development process, from the basics of HTML and CSS to advanced techniques like responsive design and modern web frameworks. You will also have the opportunity to build a variety of projects to practice your skills and apply what you have learned.\nThroughout the course, we will focus on best practices for building professional-quality websites that are responsive, interactive, and optimized for search engines. By the end of this course, you will have the skills and knowledge to create stunning websites that are ready for the modern web.\nSo don't wait any longer! Enroll now and start your journey towards becoming a web developer. We can't wait to see what you build!",
      "target_audience": [
        "People who have no experience in web development and want to learn it",
        "People who want to Create a Responsive Website",
        "People who want to a Create Website From Scratch"
      ]
    },
    {
      "title": "Hibernate Fundamentals: Hands-On Primer With Java EE & JPA",
      "url": "https://www.udemy.com/course/hibernate-fundamentals/",
      "bio": "Learn Hibernate ORM Framework, Java EE including JPA, configure and build Java programs within Hibernate environment",
      "objectives": [
        "Learn all about Hibernate and its importance",
        "Create Java app from scratch using Hibernate environment",
        "Install and Configure Hibernate along with SQL tools",
        "Create Java Persistence class",
        "Create the Hibernate XML Mapping File",
        "Create the Hibernate XML Configuration File",
        "Test the application and connect to the MyPHPadmin back-end Database"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a PC at beginner level",
        "You should have basic programming knowledge in Java",
        "Understand what Object Oriented Programming is about along with concepts",
        "You should be able to write basic Java programs",
        "You should be familiar with Relational Database Management System"
      ],
      "description": "Course Description:\nThis Hibernate Fundamentals: Hands-On Primer With Java EE & JPA course provides an introduction to the Hibernate ORM framework. You will understand the concept of Object Relational Mapping (ORM). You will learn to use Hibernate to write Java applications that connect to a relational database. You will also learn various JPA annotations that let you map classes to relational models.\nCore Hibernate Concepts:\n\nHibernate Introduction and Architecture\nHibernate Architecture\nUnderstanding First Hibernate application\nHibernate with Eclipse Java EE - IDE\nHibernate in Eclipse (Mars & Oxygen - Latest)\nConfiguring Hibernate with MySQL\nJoin thousands of other students and share valuable experience and projects\nGet started today and join thousands of our happy students, many of whom have changed careers, created second incomes or added critical new skills to their tool kits. Our students have become successful web developers and are earning six figure salaries. Some are freelancing and earning even more with high scaled projects.\nOh, and did I mention you get FREE unlimited hosting for one year ClayDesk Web hosting Service?\nEnroll now in Hibernate Fundamentals: Hands-On Primer With Java EE & JPA today and revolutionize your learning. Start with scratch and learn the fundamentals. Jump right in and take an in-depth look into the Hibernate front-end and back-end functionality and features. Start building Java apps and programs and store them Java Objects into MySQL DB and enhance your skill set.\n“Excellent course gives you everything you need to know for writing programs using Java within the Hibernate environment - not to mention the core installation and configuration - simply superb!” – Chris Bastian\nSee you in class\nSyed Raza, Team ClayDesk, and co-instructors",
      "target_audience": [
        "Anyone who wants to learn about Hibernate",
        "Beginner, Intermediate, or Expert level developers",
        "Existing Developers who wish to learn about Hibernate"
      ]
    },
    {
      "title": "WordPress Complete Course On LocalHost (An Extensive Guide)",
      "url": "https://www.udemy.com/course/wordpress-complete-course-on-localhost/",
      "bio": "This is a complete WordPress course for absolute beginners setup on localhost. It covers WordPress from A to Z !",
      "objectives": [
        "To Install Wordpress on your PC or Mac computer (LOCALHOST), so you can learn without having to pay hosting or domain fees.",
        "This course will teach anyone to build a functional, elegant, beautiful, responsive and visually appealing website with WordPress.",
        "Navigate around the WordPress dashboard, know what every tab in the dashboard does and how to use it.",
        "Create pages and posts, and most importantly, know the difference between the two.",
        "Correctly use post categories and tags, and understand why these can cause you problems at the search engines if used incorrectly.",
        "Understand plugins & themes and how to find/install them",
        "Create a static homepage useful for most websites, or a blog like homepage useful for bloggers.",
        "Understand the main features of WordPress",
        "Create custom menus and navigation systems that both visitors and search engines will find useful including mega menus.",
        "Know how to configure Wordpress for best results",
        "Protect your WordPress website from hackers and spammers",
        "Create a Responsive Website that looks good on any browser and any device including desktop computer, mobile phone and tablet.",
        "Complete and extensive details about the page builder (Elementor) to design the layout (User Interface)",
        "Complete mini course of WOOCOMMERCE to learn how to make e-commerce websites",
        "Adding simple, downloadable, virtual, variable, suscriptions, affiliate/external products to your e-commerce store",
        "All about shipping, coupons and payment methods of your e-commerce store",
        "You'll be able to develop complete WordPress website at the end of this course and earn a handsome amount of money by freelancing in this field."
      ],
      "course_content": {
        "Introduction": [
          "What Is WordPress ?",
          "Introduction To WordPress & Course"
        ],
        "WordPress Installation on Localhost": [
          "Installing WordPress Using Bitnami",
          "Installing WordPress Using Xampp"
        ],
        "WordPress Essentials - Themes, Plugins, Menus, Pages": [
          "Installing a WordPress Theme",
          "Creating Navigation Menus",
          "Creating New Pages",
          "Installing WordPress Plugins"
        ],
        "Blog Posts": [
          "Create Blog Posts",
          "Duplicate Blog Posts and Pages"
        ],
        "Resetting Wordpress Website": [
          "Reset WordPress To Defaults (To Start Over)"
        ],
        "WordPress Building Blocks - Start Creating Your First Website": [
          "Create a Contact Form",
          "Create Responsive Tables",
          "Add New Users To Website",
          "Create & Display Widgets",
          "Add An Image Gallery",
          "Create Popups (All Types)",
          "Add a Coming Soon Page",
          "WordPress Media Library",
          "Create a Slider",
          "Permalink Structure",
          "Fix Page Not Found Error",
          "Multistep Form",
          "Live Chat",
          "Google Maps",
          "WhatsApp Chat",
          "Social Share Buttons",
          "Mega Menus",
          "Menu Anchors",
          "Scroll To Top Button",
          "Search Box In Nav Menu"
        ],
        "WordPress Maintenance": [
          "Backup Your Webiste",
          "Secure Your Website",
          "Update WordPress Manually"
        ],
        "Elementor Page Builder": [
          "Installing Elementor & Elementor Pro (FREE)",
          "Getting Started With Elementor",
          "Add a Video With Elementor",
          "Add a Contact Form With Elementor",
          "CTA Button With Elementor",
          "Create Button Anchors",
          "Create Custom navigation Menus",
          "Elementor Templates",
          "Section Backgrounds in Elementor",
          "Testimonial Slider Using Elementor",
          "Multistep Form Using Elementor"
        ],
        "All About E-Commerce Websites (WooCommerce)": [
          "Installing WooCommerce",
          "Adding Simple Products",
          "Adding Downloadable Products",
          "Adding Variable Products",
          "Adding Grouped Products",
          "Adding Subscription Products",
          "Adding Affiliate Products",
          "Shipping in WooCommerce",
          "Creating Coupons",
          "Adding Payment Methods To Store",
          "Adding Stripe Payments",
          "Edit Checkout Form Fields"
        ],
        "Complete Websites Creation": [
          "Complete website in under 10 Mins",
          "Complete E-Commerce Website in 10 Mins"
        ]
      },
      "requirements": [
        "No prior knowledge of WordPress is required as everything will be covered in this course.",
        "You don't need any coding experience at all. That is the beauty of Wordpress.",
        "You will need a working computer and a web browser connected to the internet."
      ],
      "description": "WordPress Complete Course for Beginners on Localhost (An Extensive Guide)\nIt has never been easier to build a fantastic, responsive website that looks great on computers, tablets, and mobile phones.\nYou can learn WordPress WITHOUT having to buy web hosting or a domain name. I'll show you how you can set it all up on your own computer using free tools.\nThe primary goal of this course is to teach anyone, even a complete beginner, how to become a WordPress expert in a few short hours, without lots of technical jargon. I'll guarantee that after taking this course you'll have the knowledge you need to build a responsive, beautiful website with the latest version of WordPress. Not only will you know more than 99% of WordPress users out there, but you'll actually enjoy using WordPress too.\n\n\nAbout the Course\nThis course will guide you through every single step from installation to finished website. I'll show you how you can install WordPress on your own computer for free, so you don't have to pay for a domain name or hosting fees while you complete this course. Once you've got WordPress installed on your computer, you will learn how to build and run a successful, beautiful, responsive-design website you can be proud of.\n\n\nWho is this WordPress course for?\nHave you ever wanted to build a professional looking website, but didn't know where to start? Now you can. WordPress for Beginners is a complete course for anyone, no matter what your technical ability. This course assumes no prior knowledge!\nAt the start of the course, I'll walk you through setting up WordPress on your own computer so that you don't need to pay for a web host (or a domain name) while you master WordPress. We'll start at the very beginning by logging in to have a look around to familiarize ourselves with the main areas of the Dashboard.\nBy the end of this course, you will have a website that you are truly proud of.\nIf you want to learn WordPress without paying for a web host, this course is perfect. I'll show you how you can install WordPress on your very own computer while you learn.\nThis course is for you if you want to build a website, whether for personal or business reasons.\nIf you want to learn to master WordPress without getting bogged down with technical jargon, this course is for you.\nIf you want to get step-by-step, over-the-shoulder tuition from an ex-school teacher who has been using and teaching WordPress since 2004.\nThis course is perfect for you if you are taking over an existing WordPress website, or want to build one from scratch, but don't know where to start.\nThis course is for anyone that wants to be the WordPress go to guy or gal.",
      "target_audience": [
        "This course is for absolute beginners who want to learn WordPress and earn online with freelancing in this field.",
        "This course is for you if you want to build a website, whether for personal, business reasons or as a freelancer for a client..",
        "This course is for you, if you want to learn to master WordPress without getting bogged down with technical jargon.",
        "This course is for you, if you want to get step-by-step, over-the-shoulder tuition from an experienced WordPress developer and freelancer.",
        "This course is for anyone that wants to be the WordPress goto guy or gal."
      ]
    },
    {
      "title": "A Complete Laravel basics from beginner to expert",
      "url": "https://www.udemy.com/course/learn-laravel-from-beginner-to-expert/",
      "bio": "Learn all the necessary functionality of Laravel and start working as a professional",
      "objectives": [
        "Develop their own professional website.",
        "Can work for online clients on Laravel projects"
      ],
      "course_content": {
        "Course Start here": [
          "Introduction",
          "Laravel Overview , Installation and creating new project",
          "Folder Structure",
          "Routing Controllers and Views",
          "Models and Migrations",
          "Forms and form submission",
          "Form validation and Query builders",
          "Creating a new Project (Articles) with Login/Register functionality",
          "Add new articles",
          "File Uploading",
          "Image Resizing",
          "Sending emails , Ajax submission and json response"
        ]
      },
      "requirements": [
        "PHP",
        "Basic HTML",
        "Css",
        "Jquery"
      ],
      "description": "Laravel is the most popular framework according to 2015 survey and it is gaining popularity day by day only because of its code structure, flexibility and maintainability. According to the survey Laravel is more popular framework then Codeignitor, yii and symfony together. The best time to learn this framework is NOW.\nHow is this course unique from there?\nThis course helped beginners as well as experts solving regular problems during coding. In this course you will learn all the available features given to us from Laravel framework. This course is all about students who are willing to learn Laravel and want their programming skills enhanced. Becoming a professional is not difficult until you find the right mentor. You will learn all sort of Best Practices that professionals use for web application development.\nThis course will make you a professional\nIn this course I will describe you all the most famous features of Laravel that is making this framework fly. Some of them will be like:\nLogin/Register Scaffolding\nForms and form submission with validation rules and resizing\nAll concepts for MVC architecture with practice.\nLayouts, Routes\nMigrations, Databases, Eloquent\nAll important features like these\nYou will learn the code that uses by professionals All the BEST PRACTICES that will make your application more fast secure and accurate.\nAfter taking this course you will be able to work on either your own Website or work as a freelancer taking Laravel projects and earn money with high rates because Laravel developers are hard to find. And those who have Laravel skills can earn a decent money from their home.",
      "target_audience": [
        "Students who have basic knowledge of PHP and willing to learn a PHP framework",
        "Who want to start their own website and don't have enough knowledge about how to do that. Laravel will help them",
        "Students willing to learn a framework of PHP"
      ]
    },
    {
      "title": "Functional Programming For JavaScript Developers",
      "url": "https://www.udemy.com/course/master-functional-js/",
      "bio": "Unlock the powers of functional programming hidden within JavaScript to build smarter and more reliable web apps.",
      "objectives": [
        "Master Functional Programming in JavaScript: Utilize JavaScript's functional programming capabilities for elegant and efficient code.",
        "Optimize Concurrency and Performance: Implement advanced concurrency constructs and performance optimization techniques for responsive applications.",
        "Employ Immutable Data and Closures: Enhance code reliability and maintainability using closures and immutable data structures.",
        "Leverage Advanced OOP and ES6+ Features: Apply object-oriented programming and the latest ECMAScript standards to develop modular and scalable applications.",
        "Master DOM Manipulation and Cross-Browser Strategies: Achieve expertise in DOM manipulation and ensure application compatibility across browsers.",
        "Implement Advanced Design Patterns: Utilize sophisticated design patterns, including dependency injection, for maintainable code architectures.",
        "Solve Real-World Problems: Apply functional programming principles to tackle real-world web development challenges effectively.",
        "Stay Updated with Web Development Trends: Gain insights into the latest trends and technologies in web development for future-ready applications.",
        "Develop Professional-Level Web Applications: Create efficient, maintainable, and high-quality web applications that meet industry standards.",
        "Embrace Continuous Learning: Establish a foundation for ongoing learning and adaptation in the evolving field of web development."
      ],
      "course_content": {},
      "requirements": [
        "A PC or Mac",
        "Internet Access"
      ],
      "description": "Unlock the Future of Web Development: Master Functional JavaScript and Write Code That Scales\nAre you ready to transcend traditional JavaScript and architect web applications that are not just functional, but truly exceptional? Step into the vanguard of web development with \"Mastering Functional JavaScript: Build Cleaner, Faster, More Scalable Applications\" – your definitive guide to transforming your JavaScript skills and revolutionizing the way you code.\nIn today's hyper-dynamic digital landscape, the demand for sophisticated, high-performance web experiences is relentless. To not just keep pace, but to lead, developers must command techniques that ensure their code is robust, maintainable, and incredibly efficient. This course is your gateway to Functional Programming (FP) in JavaScript – a paradigm shift that will empower you to write smarter, more expressive code, and conquer complexity with elegance.\nWhy Functional JavaScript? Your Competitive Edge.\nFunctional Programming isn't just another trend; it's a powerful, proven methodology that emphasizes immutability, first-class functions, and declarative code. By embracing FP, you'll unlock:\nUnparalleled Code Clarity: Write JavaScript that is inherently easier to read, understand, and reason about.\nEffortless Maintainability: Simplify debugging and updates with pure functions and predictable state management.\nEnhanced Testability: Create functions that are isolated and deterministic, making testing a breeze.\nSuperior Scalability: Build applications that can grow in complexity without collapsing under their own weight.\nA Modern Toolkit: Equip yourself with the techniques used by leading tech companies to build cutting-edge applications.\nWhat You’ll Master: From Fundamentals to Advanced Application\nThis comprehensive course is meticulously designed to elevate your JavaScript expertise. You will:\nDominate JavaScript as a Functional Language:\nUnleash the full power of JavaScript by mastering core FP tenets: first-class functions, higher-order functions, currying, and seamless function composition. Write code that is not only concise but profoundly expressive and reusable.\nEngineer for Concurrency & Peak Performance:\nConquer JavaScript's asynchronous nature. Dive deep into Promises, async/await, and the event loop to architect non-blocking, blazing-fast applications that deliver an exceptional user experience, even under demanding loads.\nHarness Immutability & Closures for Rock-Solid Code:\nExplore the transformative impact of immutable data structures. Build applications that are more predictable, resilient to bugs, and easier to debug. Master closures to elegantly manage state and craft modular, encapsulated components.\nLeverage Advanced Object-Oriented Techniques & Modern ES6+ Syntax:\nIntegrate the best of both worlds. Explore JavaScript’s sophisticated object-oriented capabilities, including classes and modules, synergized with the latest ES6+ features to write clean, modern, and highly organized code.\nCommand the DOM & Ensure Flawless Cross-Browser Compatibility:\nGain practical, in-depth knowledge of DOM manipulation. Ensure your web applications are responsive, dynamic, and deliver a consistent, high-quality experience across all major browsers and platforms.\nImplement Powerful Design Patterns & Dependency Injection:\nElevate your architectural thinking. Discover and implement proven design patterns to solve common software challenges elegantly. Learn dependency injection and other contemporary best practices for flexible, testable, and maintainable systems.\nThe \"Functional JavaScript Accelerator\" Difference: Why This Course Will Transform Your Career\nThis isn't just another online tutorial. It's an immersive, career-defining learning experience:\nDeeply Interactive & Applied Learning:\nLearn by doing. Engage with hands-on coding exercises, real-world case studies, and challenging projects that solidify every concept. You won't just learn theory; you'll apply functional principles to build tangible web applications.\nExpert Mentorship & Personalized Feedback:\nAccelerate your growth with direct access to seasoned instructors who are invested in your success. Receive personalized feedback, guidance on complex problems, and the support you need to truly master the material.\nFuture-Proof Your Skills with Cutting-Edge Practices:\nStay ahead of the curve. This course is continuously updated to reflect the latest trends, best practices, and tools shaping the future of JavaScript and web development. You're not just learning FP; you're learning to be a forward-thinking developer.\nJoin an Elite Community of Motivated Developers:\nBecome part of a vibrant, collaborative learning environment. Network with passionate, like-minded professionals, share insights, ask critical questions, and grow together as you navigate the course.\nIs This Course Your Next Breakthrough?\nThis program is engineered for intermediate JavaScript developers who are driven to elevate their craft, break through coding plateaus, and unlock new levels of proficiency. If you're looking to:\nDramatically improve the performance and reliability of your web applications.\nWrite code that is significantly more modular, maintainable, and a joy to work with.\nExpand your JavaScript toolkit with highly sought-after, advanced techniques.\nPosition yourself as a leader in modern web development.\nThen this course is unequivocally for you.\nYour Transformation Awaits: The Skills You'll Command\nUpon successful completion, you will not just understand functional programming; you will embody it. You will:\nPossess a profound and practical understanding of functional programming principles and their expert application in JavaScript.\nConfidently architect and build highly efficient, modular, and exceptionally maintainable web applications.\nAchieve mastery over pivotal JavaScript concepts including closures, immutability, higher-order functions, and asynchronous patterns.\nBe adept at optimizing code for peak performance and scalability, capable of tackling large-scale, complex applications.\nGain unwavering confidence in navigating advanced JavaScript topics, including concurrency, Promises, and async/await.\nTake the Quantum Leap: Redefine Your JavaScript Journey Today!\nThis is more than a course; it's an investment in your future. It’s your opportunity to fundamentally reshape your approach to JavaScript development, opening doors to elite career opportunities, enhancing your freelance prowess, or establishing yourself as a thought leader in the web development arena.\nDon't just write code. Architect solutions. Innovate. Lead.\nEnroll Now and embark on a transformative journey to becoming a master of Functional JavaScript. Your future as an elite, efficient, and innovative web developer starts here!",
      "target_audience": [
        "Web Developers",
        "Software Developers",
        "Programmers",
        "Anyone who wants to learn Functional Programming"
      ]
    },
    {
      "title": "Learn Docker with .Net Core For Absolute Beginners",
      "url": "https://www.udemy.com/course/learn-docker-with-net-core-for-absolute-beginners/",
      "bio": "Learn all the fundamentals of docker by making .Net Core Web Application",
      "objectives": [
        "Learn all the essentials of Docker (Docker Files , Images , Containers)",
        "Understand Containerization",
        "Build .Net Core App with Docker",
        "Build Docker Images",
        "Run Docker Container",
        "Push Docker Image To Docker Hub",
        "Deploy Docker Image To Microsoft Azure Container Instance",
        "Pull Docker Image inside another machine"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure",
          "Prerequisites"
        ],
        "Getting Started with Docker": [
          "What is Docker ?",
          "Containerization",
          "Docker Containers Vs Virtual Machines",
          "Docker Files , Images & Containers"
        ],
        "Installation & Configuration": [
          "Overview",
          "Docker Hub",
          "Install Docker on Windows Machine",
          "Docker Hello World",
          "Docker Pull Vs Docker Run"
        ],
        "Docker with .Net Core App": [
          "Create .Net Core Project",
          "Adding Docker Support"
        ],
        "Build Docker Image": [
          "Build Docker Image",
          "Check Docker Image"
        ],
        "Run Docker Container": [
          "Run Docker Container",
          "Run Docker Container Implementation"
        ],
        "Docker Deployment": [
          "Overview",
          "Push Docker Image",
          "Push Docker Image To Docker Hub",
          "Deploy Docker Image to Azure Container Instance"
        ],
        "Pull Docker Image": [
          "Overview",
          "Pull Docker Image",
          "Run Docker Image Inside The Container",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "The student's must have a Windows machine.",
        "Basic knowledge of Asp .Net Core Rest Api Or Asp. Net Core Web App is required.",
        "No Prior knowledge of Docker is required."
      ],
      "description": "Welcome to the Docker course with .Net Core.\nThis course is made with Docker & .Net Core. The main focus of this course is on the Docker technology. If you have no prior experience of Docker then this course is a perfect jumpstart for you. But keep in mind to complete this Docker course you must have a basic knowledge of Rest Api's Or Web Application with .Net Core .\nSo if you're familiar with  Asp.Net Core and if you want to learn docker then this is the right course for you.\nIf you don't have any idea about Docker then don't worry because in this course we'll cover all the Docker concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nWhat is Docker ?\nHow to setup development environment.\nCreate Sample .Net Core Web Application.\nBuild Docker Image.\nRun Docker Container.\nPush Docker Image to Docker Hub.\nDeploy Docker Image inside Azure Container Instance.\nPull Docker Image inside another machine.\nNote : This is a short course to learn docker and this course is specially designed for those students who are new in this docker field. If you're experienced developer and already know how to work with docker then this course is not for you.",
      "target_audience": [
        "Developers who are familiar with .Net Core.",
        "Developers who want to build the .Net Core App with Docker."
      ]
    },
    {
      "title": ".NET Identity with Angular (JWT, Email Confirmation, MFA)",
      "url": "https://www.udemy.com/course/aspnet-core-identity-with-angular-jwt-email-confirmation/",
      "bio": "Full-Stack Authentication with .NET 9 Web API & Angular 20 (ASP.NET Identity + JWT + MFA)",
      "objectives": [
        "Build a complete real-world application from scratch",
        "ASP NET Core Identity using .NET 9 (Web API) as Server side and Angular 20 as Client side",
        "JWT Authentication and Authorization with Roles and Policy",
        "Email confirmation, multi-factor authentication setup, and forgot username/password implementation",
        "ASPNET User manager, Role manager and Signin manager",
        "Entity Framework Core, Migrations, Seed database",
        "Implementation of user registration, login, email confirmation, forgot username or password, reset password",
        "Signup and signin to the application using Google and Facebook account",
        "Develop user interface, create form, angular components, services and communicate with API",
        "Angular auth guard, role base restriction",
        "Admin panel, to create and edit members, Lock and Unlock members",
        "Deploy and publish the end product of the web application to Azure"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Source code"
        ],
        "Setup Web API (.NET 9 with Angular 20)": [
          "Project Creation",
          "Nuget Installation",
          "Identity Model",
          "First Migration",
          "AccountController",
          "AddIdentity Service",
          "Register endpoint",
          "Login endpoint and token service",
          "Token service continue",
          "Store JWT in cookie",
          "Add Authentication",
          "Logout and refresh user"
        ],
        "Context Init, ApiResponse, Client CORS": [
          "Context Initializer",
          "Name-email-taken endpoints",
          "Authorized PlayController",
          "ApiResponse creation",
          "Using from ApiResponse",
          "Handle locked user message",
          "ApiCoreController and CORS Policy"
        ],
        "Angular setup": [
          "Angular installation with ssl",
          "Package installations and environments add",
          "Folder structure angular",
          "Angular routing and navbar-footer modifcation",
          "Models and notification modal",
          "Angular dependencies and imports"
        ],
        "Angular, Login, Register, Interceptors, Guards": [
          "Login component",
          "Login component continue",
          "Login persistence",
          "Creds interceptors and auth guard and return url",
          "Error interceptor",
          "Register component",
          "Register component continue",
          "Play component"
        ],
        "Email Confirmation and Reset Password API side": [
          "Setup email service and IServiceUnitOfWork",
          "Test sending email",
          "Migration to AppUserToken",
          "Email confirmation part 1",
          "Email confirmation part 2",
          "Resend email confirmation link",
          "Forgot username or password part 1",
          "Forgot username or password part 2",
          "Reset password"
        ],
        "Email Confirmation and Reset Password Client side": [
          "Creating the required components",
          "Confirm email",
          "Resend confirmation email link",
          "Reset password part 1",
          "Reset password part 2"
        ],
        "Edit Profile in API and Angular": [
          "Pre section modification api",
          "Change password api",
          "Delete account api",
          "Edit profile api",
          "Create componenets and my-profile page navigation client",
          "My-profile page navigation continue",
          "Model creation and my-profile service",
          "Form input component",
          "Change password component",
          "Delete account",
          "Edit profile part 1",
          "Edit profile part 2 (confirm box)"
        ],
        "Multi-Factor Authentication": [
          "Get QR code endpoint",
          "Mfa enable and disable",
          "Create Mfa token and get username from it",
          "Login using MFA",
          "MFA setup part 1 (Angular)",
          "MFA setup part 2 (Angular)",
          "Login with MFA"
        ],
        "Assignment (Disable MFA email request)": [
          "Disable MFA Assignment instruction",
          "Assignment solution"
        ]
      },
      "requirements": [
        "At least one year of Web application programming experience with .NET and Angular",
        "Experience with Entity Framework",
        "Basic SQL Server knowledge",
        "This course is not designed for an absolute beginner",
        "If you don’t have one year of experience, but you are still willing to take this course, then sure go ahead as I explain everything as detail as possible"
      ],
      "description": "ASP.NET Identity is a powerful authentication and authorization framework that helps you manage user authentication and access control for your web applications.\n\n\nIn this comprehensive course, you will learn everything you need to know to implement secure user authentication and authorization using ASP.NET Identity with token-based authentication (JWT).\n\n\nWe will build a complete web application from scratch, using .NET 9 (Web API) as the server side and Angular 20 as the client side. Together, we’ll implement and handle a fully functional user registration, login, email confirmation, multi-factor authentication (MFA), profile management (create and edit profile), and more.\n\n\nStarting with the basics, you’ll learn how to create and configure user accounts and roles, and how to use JWT authentication providers to secure your web application. You’ll also learn how to customize the authentication process to fit the specific needs of your application, including integrating with external authentication providers like Facebook and Google.\n\n\nFrom there, we’ll dive deeper into authorization and access control, exploring how to implement role-based authorization and how to secure resources to add an extra layer of protection to your application.\n\n\nThroughout the course, you’ll work on hands-on exercises and projects, applying your skills by designing and building real-world applications that demonstrate your mastery of ASP.NET Identity.\n\n\nBy the end of this course, you’ll have the knowledge and confidence to implement secure user authentication, multi-factor authentication, and role-based authorization in your own web applications.",
      "target_audience": [
        "This course is designed for individuals interested in leveraging their knowledge of .NET Core and Angular to develop an application that simulates a real-world user registration and login scenario"
      ]
    },
    {
      "title": "Accelerated Mobile Pages (AMP) - The Complete Course",
      "url": "https://www.udemy.com/course/amp-the-complete-course/",
      "bio": "Learn how to create AMP websites, stories, emails and ads",
      "objectives": [
        "Develop AMP websites",
        "Compose AMP emails",
        "Make AMP stories",
        "Use AMP ads",
        "Add interactivity in AMP pages without JavaScript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Debunking AMP myths"
        ],
        "Getting started with AMP": [
          "Output \"Hello World\" with AMP",
          "How to validate AMP pages",
          "Adding images with AMP part 1 - <amp-img> basics",
          "Adding images with AMP part 2 - responsive images"
        ],
        "AMP attributes": [
          "What are HTML attributes?",
          "fallback attribute",
          "placeholder attribute",
          "noloading attribute",
          "media attribute",
          "width and height",
          "layout attribute"
        ],
        "Most used AMP components": [
          "What are AMP components?",
          "AMP components development pattern",
          "amp-accordion",
          "amp-carousel",
          "amp-lightbox",
          "amp-image-lightbox",
          "amp-lightbox-gallery",
          "amp-youtube"
        ],
        "Add interactivity to AMP pages without JavaScript": [
          "The \"on\" AMP attribute",
          "Events and actions",
          "Hide and show elements",
          "Practical example: Navigate to a URL based on <select> option change",
          "Practical example: Hero video overlay",
          "Introduction to amp-bind",
          "amp-bind practical example: Creating an \"Add to favorites\" button"
        ],
        "AMP forms": [
          "AMP forms basics - components, attributes, template engine",
          "PHP code for form submission",
          "Displaying error and success messages",
          "Coding an AMP newsletter subscription form",
          "Processing subscription form submissions"
        ],
        "Creating an AMP website": [
          "Use external stylesheets with AMP",
          "Coding the header - adding the logo and phone number",
          "Adding a sticky header with CSS",
          "Adding an image",
          "Coding a testimonials slider with amp-carousel",
          "Embedding Google Maps with amp-iframe",
          "Testing and validating the AMP site before launch"
        ],
        "AMP Stories": [
          "What are AMP stories?",
          "AMP stories basics - adding the necessary components, elements and attributes",
          "Coding the stories layout",
          "Adding text and images to story slides",
          "Adding background audio to a story",
          "Animating the stories with animate-in",
          "Finishing up our story with bookend.json"
        ],
        "AMP Email": [
          "What are AMP emails?",
          "Getting started with AMP Email",
          "Coding a simple AMP email with a slider",
          "Fetching JSON with amp-list",
          "Creating a dynamic email"
        ],
        "AMP Ads": [
          "What are AMP ads?",
          "Getting started with AMP ads",
          "Adding ads on your AMP site"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "JavaScript",
        "Basic PHP",
        "JSON",
        "CORS"
      ],
      "description": "Warning: I am no longer providing help or support for this course.\nLearn AMP from scratch and become awesome at it! After the course, you will be able to offer to your clients to redesign their site in AMP, or add \"AMP\" in your CV to make you more employable as a front-end developer.\nWe will start with the absolute basics and progress until we can built stories, emails, ads and websites.\nAll examples are practical and are projects that I was asked to create by my clients. You will be able to apply your knowledge right away.\nWe will start by building a landing page for a veterinary hospital, create an AMP story for our history site, compose a dynamic email that updates its content and make a simple AMPHTML Ad.\nWe will also take a look at how to make our AMP pages interactive with AMP actions & events and amp-bind - we will built a URL navigating drop-down and an \"Add to favorites\" button.",
      "target_audience": [
        "Web developers who wants to expand their knowledge of web development and AMP",
        "Freelancers",
        "Web design studio employees",
        "Front-end developers"
      ]
    },
    {
      "title": "Modern Web Development || Zero To Front End",
      "url": "https://www.udemy.com/course/modern-front-end-development-zero-to-mastery/",
      "bio": "Learn senior front end developer skills from HTML,CSS,JavaScript,React,Hooks,Context API,Testing CI and more",
      "objectives": [
        "Build Advanced Web Application",
        "Learn HTML5 CSS3",
        "Get The First Job as Web Design",
        "Master React",
        "Write Tests"
      ],
      "course_content": {
        "Introduction": [
          "Course Outline",
          "Download The Tools That We need",
          "Let us try git for the first time",
          "Let us work with visual studio code (VSC)",
          "What is HTML and CSS ?",
          "Different Types of Tags in HTML",
          "CSS in Action intro",
          "Let us take an exercise part 1",
          "finish the exercise"
        ],
        "Build The Navigation of The Website": [
          "Section Intro",
          "Create The Files For the Project",
          "add the html for the first project",
          "add the style to the first project"
        ],
        "more advanced type of navigation": [
          "more advanced type of navigation part 1",
          "style the navigation"
        ],
        "Navigation Challenge for You": [
          "Build Instagram Navigation Clone",
          "Finish The challenge"
        ],
        "Building The Header Basics Types": [
          "Section Intro",
          "build basic type of header",
          "Finish The Header"
        ],
        "More Advanced Types of header": [
          "add the html for the header",
          "Finish The Header"
        ],
        "The Header challenge For You": [
          "add the html for the header challenge",
          "add the style to the header challenge",
          "Finish The challenge"
        ],
        "Start Working With Sections": [
          "Section Intro",
          "one column layout",
          "Two Column Layout",
          "Three Column Layout",
          "Four Column Layout"
        ],
        "Style The Hole Page": [
          "Section Demo",
          "Images as Background fro the Sections",
          "Add The Footer to the page",
          "Add Animation to the page",
          "add title to the sections"
        ],
        "One Step in the World of organization": [
          "Section Intro",
          "write comments in the code",
          "clean up the css fils with the classes",
          "intro to the BEM notation"
        ]
      },
      "requirements": [
        "mac,windows or linux"
      ],
      "description": "Welcome to Modern Front-End Development || Zero To Mastery!\nThis is the only path that you need to start new job as front end developer .\nin this course you will learn the technical skills that any senior Front end developer has and you will apply theme in action by getting a job .\n\n\nTools We Need:\n00-Visual Studio Code\n01-Web Browser (Chrome,Safari,Firefox)\n02-Git Bash (Git command Line)\nSkills:\n00- HTML5 && CSS3\n01-SASS\n02- Git && Github\n03- Responsive Web Design\n04- Web Accessibility\n05- JavaScript && ES6\n06- React (Context API and Hooks)\n07- Testing With Jest and Enzyme\n08- Job Interviews\n\n\n-each one of these skills will take a lot of time to understand 100%\n- learn HTML5 include HTML5 tags and Semantic HTML5\n- learn CSS3 include building layouts with Flexbox, Grid, Position and style advance Website\n- learn Web Accessibility include support your website to more amount of users\n- learn Git and Github include push your website live on the web\n- learn Responsive Web Design include (Responsive Layouts - Responsive Images - Cross Browser Support )\n- learn javascript include ( basics javascript - intermediate javascript - advanced javascript )\n- learn React include ( create-react-app - component - state - Life Cycle - API Requests - CRUD - Context API - Hooks )\n- learn Testing include test plain JavaScript Code and Testing React Applications\n\n\n-other topics will be explained:\n-we will start the course by teaching you basics of building websites then we will keep moving from the easy to the intermediate then to the advanced topics all with real world projects\n-Through out this course you will understand how to think like a programmer\n-we will show you what a poor developer looks like just to make you able to avoid that\n-been able to use the most recent tools\n-refactoring any code to be more readable\n\n\nHopefully Your are interested into learning FrontEnd Development !\nif you are then let us get started .",
      "target_audience": [
        "new Developer",
        "Designers",
        "Anyone else"
      ]
    },
    {
      "title": "Build & Deploy Multi Ecommerce Website React Next.js 2025",
      "url": "https://www.udemy.com/course/build-deploy-multivendor-ecommerce-website-nextjs/",
      "bio": "Master Next.js: Build & Deploy a Multi-Vendor E-Commerce Platform (2025) - Next.js, TypeScript, MySQL, Prisma, Clerk...",
      "objectives": [
        "Build and deploy a complete multi-vendor e-commerce platform using Next js",
        "Create a responsive homepage with dynamic components and advanced features like country detection and lightning-fast search",
        "Develop robust product pages with variant management, live watcher counts, and customizable shipping details by country",
        "Design and implement user-friendly admin, seller, and store dashboards for seamless management",
        "Implement advanced features like seller-specific shipping fees, quantity-based shipping rates, and weight-based calculations",
        "Create dynamic, HTML-based product descriptions and integrate product reviews, Q&A sections, and specifications",
        "Develop a fully functional cart and checkout system with live price updates, shipping adjustments, and multiple payment options",
        "Build standalone apps like fast search functionality and integrate them into the main platform",
        "Learn to manage global settings like categories, offers, and admin-level store approvals",
        "Master Next js concepts, including server-side rendering, API routes, and seamless integration of third-party services"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript and React",
        "Familiarity with HTML and CSS for front-end development",
        "Basic knowledge of Next js is helpful but not mandatory",
        "A general understanding of database concepts and APIs",
        "A computer with Node js and a code editor like VS Code installed (Optional)",
        "Willingness to learn and experiment with advanced web development concepts",
        "No prior experience with e-commerce development is required—this course is beginner-friendly",
        "An active internet connection for accessing course materials and setting up tools"
      ],
      "description": "Welcome to Master Next.js: Build & Deploy a Cutting-Edge Multi-Vendor E-Commerce Platform (2025)—a course like no other! Whether you’re a developer looking to expand your portfolio, an aspiring entrepreneur eager to learn advanced web development, or a coding enthusiast hungry for hands-on experience, this course will transform your skills and elevate your projects to the next level.\nIn this comprehensive course, we’ll guide you through every step of building and deploying a robust multi-vendor e-commerce platform using Next.js, one of the most powerful and in-demand frameworks for modern web development. Together, we’ll create an enterprise-grade application packed with industry-leading features found in platforms like Amazon and Etsy. By the end of this course, you’ll have built a feature-rich, scalable, and professional e-commerce website that will make your portfolio shine and prepare you for high-paying job opportunities in the competitive tech landscape.\n\nWhat You’ll Learn:\nBuild a multi-vendor e-commerce platform from scratch, including a responsive Storefront, Admin Dashboard, and Seller Dashboard.\nImplement advanced features like customizable shipping rates by country, seller-specific shipping fee calculations, and dynamic shipping discounts based on quantity or weight.\nCreate seamless standalone apps that integrate with the platform, including a live product viewer count and a real-time search engine with suggestions.\nManage variant-specific inventory, allowing sellers to define unique sizes, prices, quantities, and discounts for each product variant.\nImplement dynamic HTML-based product descriptions and specifications for complete seller customization.\nAdd features like detailed product reviews with image uploads, Q&A sections, and related product suggestions.\nBuild and manage a user-friendly cart and checkout system, with automatic country-based shipping calculations, coupon integration, and payment options like PayPal, credit cards, and Apple Pay.\nExplore comprehensive order management, allowing sellers to track product-level statuses and users to monitor their purchases.\nDevelop a robust profile page where users can manage addresses, view order history, track product view history, follow stores, and manage wishlists.\nEnable a seller registration system, allowing users to apply to create stores and manage their businesses.\nBuild a global admin dashboard, empowering admins to control categories, subcategories, offers, store approvals, and more.\nKey Features of the Course Project:\nHomepage\nA beautifully designed, fully responsive homepage.\nAutomatic country detection with the option to select manually.\nDynamic product displays tailored to the user’s location.\nLightning-fast search functionality with real-time suggestions.\nProduct Page\nInteractive image swiper with zoom functionality.\nSupport for product variants, each with its own sizes, quantities, prices, and discounts.\nLive viewer count, updating in real-time whenever someone visits or leaves the page.\nComprehensive shipping details displayed dynamically based on country and store-specific rules.\nOptions for free shipping worldwide or free shipping for specific countries only.\nDetailed product sections, including HTML descriptions, specifications, Q&A, and related products.\nA store card showcasing the seller’s information and other suggested stores.\nCart & Checkout\nA cart system with live updates for price, shipping fees, and country changes.\nThe ability to add or remove items, move products to a wishlist, and always see the latest product details.\nCheckout page with address management and dynamic updates for shipping fees.\nCoupon code integration for applying discounts.\nAdmin Dashboard\nControl global platform settings, including categories, offers, and store approvals.\nMonitor seller activity and manage store statuses, ensuring a safe and professional marketplace.\nSeller Dashboard\nTools to create and manage products in extraordinary detail, including variants, descriptions, specifications, and shipping details.\nManagement of store-level shipping rates with options for country-specific settings.\nThe ability to create and distribute coupons for promotional discounts.\nDetailed order management, including product-level statuses for better tracking and communication with customers.\nStandalone Features\nA real-time search page with advanced filtering and sorting options.\nA dedicated store page featuring seller-specific product listings and filtering options.\nUser profiles with sections for managing orders, reviews, wishlists, and store followings.\n\nWhy This Course?\nThis course is more than just a coding tutorial—it’s a gateway to building professional-grade projects that will set you apart in the competitive job market. You’ll learn real-world development practices, solve complex challenges, and implement features that are typically found in large-scale e-commerce platforms.\nBy the end of this course, you’ll have developed a complete, production-ready application that demonstrates your expertise in modern web development. Not only will this project become the standout piece in your portfolio, but it will also give you the confidence to tackle any advanced development challenge.\n\n\nWho Should Take This Course?\nDevelopers eager to add a sophisticated and professional project to their portfolio.\nIntermediate to advanced programmers wanting to master Next.js and full-stack development.\nEntrepreneurs and tech enthusiasts interested in learning how to build scalable, feature-rich web applications.\nAnyone aiming to sharpen their skills and gain real-world experience with cutting-edge technologies.",
      "target_audience": [
        "Aspiring developers who want to build a standout project for their portfolio",
        "Front-end developers looking to advance their skills by building a full-stack application.",
        "Web developers interested in learning how to create feature-rich e-commerce platforms",
        "Students eager to gain hands-on experience with Next js and modern web technologies",
        "Entrepreneurs or small business owners who want to understand how multi-vendor e-commerce platforms work",
        "React developers aiming to transition into full-stack development",
        "Freelancers seeking to expand their service offerings with complex e-commerce solutions",
        "Tech enthusiasts curious about creating a scalable and dynamic application from scratch"
      ]
    },
    {
      "title": "Theming Angular 19-20 and Material MD3 - The missing guide",
      "url": "https://www.udemy.com/course/theming-angular-and-material-md3-the-missing-guide/",
      "bio": "Learn how Angular Material 19-20 (MD3) does Theming and Customization using Modern CSS Techniques and SCSS",
      "objectives": [
        "Learn how Angular Material Theming system works under the hood - by using the same pattern on your own components",
        "Build a reusable theming system for any Angular app—not just those using Material.",
        "Create multiple themes and switch them at runtime with full light/dark mode support.",
        "Use multiple themes simultaneously within the same app to highlight different semantic contexts or user modes",
        "Customize Angular Material components by overriding tokens and introducing your own design tokens.",
        "Style typography and icons, self-host fonts, and integrate custom SVGs with full theming support.",
        "Build dynamic themes using custom properties, color-scheme, color-mix(), relative colors, and light-dark() CSS functions.",
        "Set up a flexible color system using OKLCH and understand how color roles map to design palettes.",
        "Use SCSS to generate palettes, manage styles, and organize theming logic with maps and mixins."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you need to know",
          "Practicing what you learn"
        ],
        "Modern CSS Features for Theming": [
          "Introduction to modern CSS",
          "Custom Properties in CSS",
          "Applying custom property using the `var` function",
          "Using `var` in composite properties",
          "Try it yourself: The 'var' function",
          "Color System: Palettes and Themes",
          "Introduction to Color Spaces: RGB",
          "Demonstrating RGB palettes",
          "Try it yourself: RGB Palettes",
          "A color space for humans: HSL",
          "Try if yourself - HSL Palettes",
          "A color space for themes: OKLCH",
          "Try it yourself: OKLCH",
          "More Color spaces",
          "New color and alpha syntax"
        ],
        "Dynamic Themes using CSS": [
          "Introduction to dynamic themes",
          "The `color-mix` function",
          "Mixing in different color spaces",
          "Dynamic palette using color-mix",
          "Try it yourself: color-mix",
          "Relative colors using the 'from' keyword",
          "Using the calc function with relative colors",
          "Using min, max, and clamp with relative colors",
          "Building palettes and applying a theme",
          "Try it yourself - Palettes using Relative Colors",
          "Light and Dark: The `color-sheme` property",
          "Conditional Colors: The `prefers-color-sheme` media query",
          "Conditional Colors: The `light-dark` function",
          "Try it yourself: Dark and Light Color Schemes"
        ],
        "Code Along - theming an Application using CSS": [
          "Exercise Introduction",
          "Introduction to the application",
          "Creating color custom properties",
          "Creating palette entires",
          "Using palette entries in the components",
          "Setting semantic palettes for notifications"
        ],
        "Scss essentials for Theming": [
          "Introduction to Scss",
          "What are style preprocessors?",
          "Code along: Our Scss Playground",
          "Nesting in Scss",
          "The '&' (parent) selector",
          "Using Scss variables",
          "Debugging in ScSS",
          "Expression interpolation",
          "Functions in Scss",
          "Using built in modules",
          "Lists in Scss",
          "Maps in Scss",
          "Mixins in Scss",
          "Flow control in Scss using @if and @for",
          "Modules and Partials",
          "Summary"
        ],
        "Code Along - Theming Angular applications": [
          "Introcution to Theming in Angular",
          "Getting familiar with our demo project",
          "Refactoring palette entries to use relative colors",
          "Setting up Scss configuration",
          "Moving global styles to mixins",
          "Implementing the color system and theme mixins",
          "Automating the color system mixin -Part 1",
          "Automating the color system mixin - Part 2",
          "Creating Theme service",
          "Applying the Theme State on the DOM",
          "Connecting theme selection UI to the service",
          "Understanding Design tokens",
          "Styling widgets based on Design Tokens",
          "The catch!"
        ],
        "Introduction to Angular Material Theming": [
          "Introduction to Angular Material Theming",
          "The story of Material Design",
          "What does MD2 and MD3 mean?",
          "Getting started with Angular Material",
          "Improving IntelliSense for Angular Material Imports",
          "Using the mat.theme mixin",
          "Comparing MD3 themes with previous versions",
          "Using system design tokens",
          "Try it: Setting up themes and using web tokens",
          "The theme palettes",
          "The color system variables",
          "The theme-type property",
          "Global and scoped themes",
          "Try it: Scoped Themes",
          "Using the theme shadows and elevation",
          "Understanding theme density",
          "Try it: Theme density and shadows"
        ],
        "Advanced Customizations in Angular Material": [
          "Introduction to Customization in Angular Material",
          "Why we need schematics to generate themes?",
          "The custom theme scematics",
          "Custom themes with SCSS files",
          "Adding custom system tokens using wrapper mixin",
          "Theme Overrides",
          "Try it - Theme Overrides",
          "Overriding Material component tokens",
          "Customizing the Card component",
          "Try it - Customize the toolbar",
          "How to display button in accent or warn colors?",
          "Try it: Accent and Warn buttons"
        ],
        "Typography and Iconograpy in Anuglar Material MD3": [
          "Introduction to Typography and Icons",
          "Typography styles in Material MD3",
          "Using Typography system variables",
          "Customizing the theme typography",
          "Try it: Typography",
          "Self Hosting fonts in our public folder",
          "Self hosting fonts using npm",
          "Understanding the icons system in Material",
          "Understanding mat-icon Font Sets",
          "Try it - Icons and Font Sets",
          "The new \"Material Symbols\"!",
          "Customizing symbol variations",
          "Try it - Material Symbols",
          "Custom SVG Icons",
          "Try it - Custom SVG Icons",
          "Other Icon Registry features"
        ],
        "Summary": [
          "Angular Material MD3 - Checklist",
          "Course Summary",
          "Important final words",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Prior basic experience with angular",
        "Some experience in modern angular with signals",
        "Familiarity with CSS fundamentals like selectors and colors and fonts",
        "NO prior knowledge of Angular Material is required"
      ],
      "description": "What if you could control the look of your entire app with a single color? What if your design could adapt to light and dark modes—automatically? What if Angular Material actually felt... flexible?\n\nTheming Angular and Material MD3 – The Missing Guide is a Udemy course by Angular instructor Kobi, designed to teach you how to Angular Material build scalable theming systems using modern CSS, SCSS. And how you can also do it in your own libraries.\n\nThis Angular theming course shows how modern CSS and the latest Angular Material unlock powerful, flexible theming capabilities. Learn to build a scalable, reusable theming system for your Angular apps that adapts to light and dark modes, and supports multiple palettes. Take full control of your application’s look and feel by customizing every aspect of Angular Material with clarity and ease.\n\nWhat You’ll Learn:\nBuild dynamic themes using custom properties, color-scheme, color-mix(), relative colors, and light-dark() CSS functions.\nSet up a flexible color system using OKLCH and understand how color roles map to design palettes.\nCreate multiple themes and switch them at runtime with full light/dark mode support.\nUse SCSS to generate palettes, manage styles, and organize theming logic with maps and mixins.\nCustomize Angular Material components by overriding tokens and introducing your own design tokens.\nStyle typography and icons, self-host fonts, and integrate custom SVGs with full theming support.\nBuild a reusable theming system for any Angular app—not just those using Material.\nWhy This Course?\nCovers the full theming stack—from modern CSS to SCSS and Angular Material.\nReal-world structure and best practices that you can apply immediately in your projects.\nPractical demos and reusable code that save you time and help you build faster.\nTaught by an experienced Angular instructor focused on clarity, usefulness, and developer experience.\nTheming Angular and Material MD3 – The Missing Guide is your complete path to mastering dynamic theming and building professional, themeable Angular applications with modern CSS, SCSS, and Angular Material.",
      "target_audience": [
        "Angular developers who want to create professional, polished apps with consistent themes.",
        "Developers with prior knowledge of previous versions of Angular Material - Feeling lost with recent changes",
        "Angular developers looking to unlock the full power of Angular Material’s new theming system.",
        "Designers working closely with developers and want better control over color, typography, and layout implementation."
      ]
    },
    {
      "title": "HTML5 APIs For JavaScript - A Course For Web Developers",
      "url": "https://www.udemy.com/course/html5-apis-for-javascript-a-course-for-web-developers/",
      "bio": "A Web Developers Guide To HTML5 APIs For JavaScript.",
      "objectives": [
        "Learn How To Take Full Advantage Of The New HTML5 API's For JavaScript"
      ],
      "course_content": {
        "My First Section": [
          "Working Files - Download These First",
          "0101 What You Will Learn",
          "0102 What You Need To Know"
        ],
        "What Is A Browser API?": [
          "0201 What Is A Browser Api",
          "0202 Why Browser Sniffing Stinks",
          "0203 The Window Object",
          "0204 The Location Object"
        ],
        "The Document Object Model": [
          "0301 An Introduction To The Dom",
          "0302 Selecting Elements",
          "0303 Node Navigation",
          "0304 Dynamic Styling",
          "0305 Changing Element Content",
          "0306 Adding And Cloning Elements",
          "0307 Removing Elements"
        ],
        "Event Handling": [
          "0401 Introduction To Browser Events",
          "0402 Defining Events And Handlers",
          "0403 The Event Object",
          "0404 Event Propagation"
        ],
        "Form Handling": [
          "0501 Form Events",
          "0502 Client Side Validation",
          "0503 Custom Controls"
        ],
        "Timers And Animation": [
          "0601 How Animation Works",
          "0602 Timer Functions",
          "0603 HTML5 Requestanimationframe"
        ],
        "Ajax": [
          "0701 An Introduction To Ajax",
          "0702 Web Services And Data Formats",
          "0703 Using Xmlhttprequest",
          "0704 Script Insertion Techniques"
        ],
        "HTML5 APIs": [
          "0801 Audio And Video",
          "0802 Canvas",
          "0803 SVG",
          "0804 Geolocation",
          "0805 File Handling",
          "0806 Web Workers"
        ],
        "Advanced JavaScript Debugging": [
          "0901 Cookies",
          "0902 Local Storage",
          "0903 Working Offline",
          "0904 Managing Page History"
        ],
        "Further Resources": [
          "1001 Firebug",
          "1002 The Webkit Inspector",
          "1003 Opera Dragonfly",
          "1004 IE Developer Tools"
        ]
      },
      "requirements": [],
      "description": "In this training course, expert an expert author  teaches you how to take full advantage of the new HTML5 API's for JavaScript. The tutorial assumes that you already have a basic working knowledge of JavaScript programming, HTML, CSS and general web concepts.\nYou will start off with a general introduction to browser APIs, and what they are. You will explore the Document Object Module (DOM) and how to access it with JavaScript. Craig then teaches you how to handle browser events and about the event object, dealing with form events, working with timers and animation, and introduces you to Ajax. Once you have a firm grasp on those concepts, you cover HTML5 APIs for audio and video, canvas, SVG, geolocation, and file handling. You will finish off with lessons on persistance storage, and advanced debugging tools and techniques.\nBy the conclusion of this JavaScript HTML5 API programming tutorial, you will have an in-depth grasp of how to access and manipulate your web projects using JavaScript. Working files are included to allow you to work alongside the author using the same files that references throughout the training course.",
      "target_audience": [
        "Web Designers and Developers"
      ]
    },
    {
      "title": "Learn Microprocessor From Basic to Advanced",
      "url": "https://www.udemy.com/course/learn-js-easily/",
      "bio": "Learn all the hooks and crooks of MPMC at your pace.",
      "objectives": [
        "Learn microprocessor from basic to advanced",
        "Learn Microprocessor 8085",
        "Learn the various features of 8085",
        "Learn to implement 8085 in Programs",
        "Learn instruction set of 8085 microprocessor"
      ],
      "course_content": {
        "Introduction To Microprocessors": [
          "Introduction To Microprocessors"
        ],
        "Computer Architecture": [
          "Basics Of Computer Architecture Part 1",
          "Basics Of Computer Architecture Part 2",
          "The Processor",
          "Memory"
        ],
        "Introduction to Intel 8085 Microprocessor": [
          "8085 Microprocessor"
        ],
        "Block Diagram of 8085": [
          "Block Diagram of Intel 8085 Microprocessor",
          "Registers in 8085 Part 1",
          "Registers in 8085 Part 2"
        ],
        "Registers Explained": [
          "Program Counter and Stack Pointer",
          "Auxillary Carry flag",
          "Example on Flags"
        ],
        "Pin Diagram": [
          "Pin Diagram of 8085 Part 1",
          "Pin Diagram of 8085 Part 2",
          "Pin Configuration"
        ],
        "Instructions and Addressing Modes": [
          "Instruction Set",
          "Addressing Modes",
          "Data Transfer group",
          "Arithmetic Group Part 1",
          "Arithmetic Group Part 2"
        ],
        "Instruction cycle & Machine Cycle": [
          "Instruction Cycle Part 1",
          "Instruction Cycle Part 2",
          "Machine Cycle",
          "Instruction and Data flow"
        ],
        "Timing Diagrams": [
          "Timing Diagram Part 1",
          "Timing Diagram Part 2",
          "Timing Diagram Part 3",
          "Timing Diagram of Memory Read cycle",
          "Timing Diagram of MVI register,data",
          "Timing Diagram of I/O Read",
          "Timing Diagram of Memory Write and I/O Write"
        ],
        "Programming in 8085": [
          "Intel 8085 program Part 1",
          "Intel 8085 program Part 2",
          "Intel 8085 program Part 3",
          "Intel 8085 program Part 4",
          "Intel 8085 program Part 5",
          "Intel 8085 program Part 6",
          "Decimal Adjust for Addition (DAA)",
          "Continuing Programming Part 1",
          "Continuing Programming Part 2",
          "Continuing Programming Part 3",
          "Continuing Programming Part 4",
          "Continuing Programming Part 5"
        ]
      },
      "requirements": [
        "NO pre knowledge of the subject required",
        "Learn with focus and concentration"
      ],
      "description": "Wanting to learn MPMC from basic level? Then you have landed on the right tutorial.\nLearn all of MPMC from elementary level. This tutorial is especially designed for engineering students willing to learn this amazing subject in depth. All the lectures are explained well with examples. Every concept is given the required time and nothing is rushed through the entire course.\nBasically this course is based on 8085 Microprocessor. You will learn everything from:\nBasics of MPMC\nNeed for MPMC\nWorking of 8085\nFeatures of 8085\n8085 Architecture\n8085 Interrupts\n8085 Pin diagram to\n8085 Addressing Modes to\n8085 implementation in programs\nEnroll now and start learning with a blast.",
      "target_audience": [
        "Engineering students",
        "Microprocessor students",
        "Students willing to make a project in microprocessor or microcontrollers"
      ]
    },
    {
      "title": "Python 101: Complete Python Programming Step by Step Guide",
      "url": "https://www.udemy.com/course/python-101-complete-python-programming-step-by-step-guide/",
      "bio": "Start your coding journey with Python 101 — build confidence and skills through simple, structured learning.",
      "objectives": [
        "What is Python?",
        "Basic Syntax and Data Types",
        "Variables and Operators",
        "Input and Output Operations",
        "Control Flow",
        "Functions",
        "Classes and Objects",
        "Data Structures",
        "Object-Oriented Programming",
        "File Handling",
        "Modules and Packages",
        "Exception Handling",
        "Regular Expressions",
        "Advanced Topics",
        "Data Science",
        "Web Development"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience is required"
      ],
      "description": "Are you ready to dive into the exciting world of programming and unlock the power of Python? Look no further! This comprehensive Python 101: Complete Python Programming Step by Step Guide course is your ultimate starting point, designed for absolute beginners with no prior coding experience.\n\n\nPython is one of the most versatile and in-demand programming languages today, used for everything from web development and data science to artificial intelligence and automation. Whether you're looking to launch a new career, automate tedious tasks, or simply understand how software works, mastering Python is an invaluable skill.\n\n\nIn this course, we'll take you by the hand and guide you through the fundamentals of Python programming in a clear, concise, and easy-to-understand manner. We believe in learning by doing, so you'll be coding alongside us from the very first lesson, building practical projects that solidify your understanding.\n\n\nWhat you'll learn:\n\n\nUnderstand core concepts like variables, data types, operators, and basic input/output.\nMaster conditional statements (if/else) and loops (for/while) to create dynamic programs.\nLearn to write reusable blocks of code, making your programs organized and efficient.\nExplore essential Python data structures such as lists, tuples, dictionaries, and sets.\nRead from and write to files, allowing your programs to interact with external data.\nObject-Oriented Programming (OOP) Concepts: Get an introduction to classes and objects, a fundamental paradigm in modern programming.\nLearn to anticipate and gracefully handle errors in your code.\nApply your knowledge by building mini-projects that demonstrate real-world applications of Python.\n\n\nBy the end of this course, you'll have a strong foundation in Python programming, empowering you to write your own scripts, solve problems, and confidently move on to more advanced topics.\n\n\nEnroll today and start your exciting journey into the world of Python!",
      "target_audience": [
        "If you've never coded before, this course is designed specifically for you.",
        "Take your first step toward a career in software development, data science, or web development.",
        "Anyone curious about python programming"
      ]
    },
    {
      "title": "Introducing Ionic 2",
      "url": "https://www.udemy.com/course/introducing-ionic-2/",
      "bio": "Build a cool, pretty, and fully-featured mobile app in no time using the power of Ionic 2 and Angular 2",
      "objectives": [
        "Make API calls and circumvent cross-origin restrictions with JSONP",
        "Customize an Ionic 2 application using the power of SASS variables",
        "Keep your code structured and reusable by implementing separation of concerns",
        "Interact with users and gather relevant information using a form",
        "Keep the user experience as close to native applications as possible using visual aids such as modal and actionSheet",
        "Master the emulator and native loader options to see the final application while building it"
      ],
      "course_content": {},
      "requirements": [
        "It is the perfect framework for developers who are specialized in web development to enter the market of mobile app development."
      ],
      "description": "Hybrid apps are changing the way people build mobile applications. With Ionic 2, hybrid app developers are gifted with not only a fresh, well-built, and powerful platform, but also a tool to enjoy their development experience. Apps can be built in record time, yet remain visually attractive and contain advanced features.\nIntroducing Ionic 2, will help you discover all the building blocks of an Ionic 2 application. You will learn how to use built-in components, make API calls, and style your app to your liking, so prepare yourself for many hours of fun development with Ionic 2.\nWe’ll start by bootstrapping an application, enhancing one cool feature at a time. Each feature will cover one of the essential components of an app: user experience, logic and data, and the user interface. By the end of the course, we will have built an entire awesome iTunes Browser app.\nFirst, you’ll find out how to add pages and navigate between them, including going back and forth. Once new pages are in place, we’ll focus on grabbing real data from an API via AJAX with and without JSONP. With data and views in place, we’ll focus on improving the user experience and using modals, action sheet, alerts, loaders, and even a fully validated form. We also cover a range of various topics including styling, navigation with parameters, and Angular 2 pipes to filter and transform the way data is presented.\nIntroducing Ionic 2 will take you on the same journey as if you were building a real application, from scratch to a working product. You’ll soon see how this powerful mobile application framework can make your development fast, structured, and at the same time incredibly enjoyable.\nAbout The Author\nMathieu Chauvinc is a Managing Director at Red Ape Solutions and works on keeping the company at the bleeding edge of web technologies. On a daily basis, he leads the tech team of 15 and collaborates with them in building complex single page applications and neat hybrid mobile apps. He has been involved in web technologies for over a decade, from Django to Go, SQL to NoSQL, Mootools to Angular, continuously trying to keep the right balance between the excitement of new frameworks and the stability of proven ones. He always has a special place in his heart for Python and Django.\nHe holds a Master’s in Engineering from the German University Karlsruhe and a Master’s in Engineering from the French ENSAM (Paris). Despite having an engineering background, he has always had a passion for knowledge sharing, which follows him to this day, and he regularly conducts corporate or free training on various I.T. topics in his adoptive country of Malaysia. He is also the author of the Introducing AngularJS and Learning JavaScript Promises video courses, published by Packt Publishing.",
      "target_audience": [
        "If you have experience of using Ionic 1 and Angular 1, you will find this video course a useful bridge to the ground-breaking Ionic 2 / Angular 2 combo. Anyone with basic JavaScript experience will be able to make full use of the knowledge imparted in this course.",
        "For native app developers, it is the first framework that will both speed up their development cycles and yet keep an amazing native experience."
      ]
    },
    {
      "title": "Learn Basic HTML, CSS, Javascript/Typescript and React Fast",
      "url": "https://www.udemy.com/course/learn-basic-html-css-javascript-typescript-and-react-fast/",
      "bio": "Learn the basics of Web Development Fast and save time with HTML, CSS, Typescript and React.",
      "objectives": [
        "Web Development",
        "React",
        "HTML",
        "CSS",
        "Javascript",
        "Typescript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Expectations and Course Requirements",
          "Installing Node.js",
          "Command Line Tools",
          "Creating a React Project"
        ],
        "HTML Structure": [
          "Tags",
          "Paragraph Tag",
          "Header Tags",
          "Div tag",
          "Lists",
          "Links",
          "Components"
        ],
        "HTML Media and Tables": [
          "Images",
          "Video",
          "Table Tag"
        ],
        "CSS - Basics": [
          "CSS Selectors",
          "Class and ID Selectors",
          "Display",
          "Size Height and Width",
          "Padding and Margin",
          "Float and Alignment"
        ],
        "Typescript and JavaScript Basics with React Components": [
          "Variables",
          "Undefined and Null",
          "Math",
          "Arrays",
          "Loops",
          "Conditionals",
          "Objects and Classes",
          "React State",
          "Functions",
          "Props",
          "Fetch Requests",
          "Events",
          "Install Bootstrap"
        ],
        "Final Project": [
          "Header Component",
          "Userlist Component",
          "UserProfile Component",
          "Bonus!"
        ]
      },
      "requirements": [
        "There are no course requirements"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you.\n\n\nWe focus on teaching you only what you need to know and keeping the videos short. The main focus of this course is to teach the basics of HTML, CSS, Javascript, Typescript, and React. By the end of this course, you should be able to create a basic website, understand how styling a website works and how to get data from a server.\n\n\nIn this course, we start by learning what tools you need to create a website and then we move on to the basics of HTML. We do an overview of how HTML works and how to display information on the page. Once the student learned HTML, they will then move onto learning the basics of CSS. With the CSS section of the course, they will learn how to style their HTML and adjust the colors, shape, and position of the elements on their web page. This allows the student to learn how to make their website more appealing to their users.\n\n\nOnce students become familiar with HTML and CSS, they will dive into Javascript and Typescript. They will learn the basics of creating dynamic HTML components, using math in Javascript, and creating interactive events. Once the student gains a basic grasp of Typescript, then they learn how to apply this to React.JS by making interactive components and getting data into those components.\n\n\nFor the final project, the student will learn to create a list of users and their profile information. This list will come from a remote server and the use will learn all of the skills including HTML, CSS, Javascript, Typescript and Bootstrap to build a full webpage in React.",
      "target_audience": [
        "Beginning Web Developers interested in fast web development",
        "Beginning Web Developers interested in React",
        "Beginning Web Developer interested in learning basic Typescript"
      ]
    },
    {
      "title": "Build Real World ECommerce Website with .Net Core 7 2024",
      "url": "https://www.udemy.com/course/aspnet-core-fundamentals-build-an-e-commerce-site/",
      "bio": "Step-by-step guidance to building a real-world e-commerce application with .net core from start to finish",
      "objectives": [
        "How to create a .NET Core project and understand its project structure.",
        "Understand the Model-View-Controller (MVC) pattern and its implementation in .NET Core.",
        "Understand and implement the Repository pattern in .NET Core.",
        "Register services in the Inversion of Control (IOC) container and create controllers and views in .NET MVC.",
        "Hands-on approach to Entity Framework Core with real-world data",
        "Efficient .NET Core development techniques utilizing routing, navigations, layouts, and render body.",
        "How to integrate custom templates into a .NET Core project",
        "Building a shopping cart",
        "Securing an .NET Core application with identity, authentication, and authorization.",
        "Deploying an .NET Core web app on Azure"
      ],
      "course_content": {
        "Introduction": [
          "Demo App",
          "Introduction",
          "Prerequisites",
          "Install Visual Studio"
        ],
        "Getting Started with .NET Core": [
          "Create a .NET Core Project",
          "Understand Project Structure",
          "Understand MVC Pattern",
          "Create Model Classes",
          "Repository Pattern",
          "Implement Repository Pattern",
          "Register Services in IOC Container",
          "Create Controller in .NET MVC",
          "Create Views in .NET MVC",
          "Passing Data To View in .NET MVC"
        ],
        "Hands-on Approach to Entity Framework Core with Real-world Data": [
          "Install Entity Framework Core and MSSQL Packages",
          "DbContext and DbSet",
          "Create Database Connection String",
          "Modify the Repository Class",
          "Implement Migrations in .NET Core",
          "Seed Data"
        ],
        "Efficient ASP.NET Core Development: Routing, Navigations, Layouts & Render Body": [
          "Routing",
          "Product Detail",
          "Navigations with Tag Helpers",
          "Explore Render Body ,View Imports, View Start & _Layout File"
        ],
        "Template Integration in ASP.NET Core": [
          "How to get templates ?",
          "Explore the template",
          "Integrate template in .NET Core Project",
          "Populate Trending Products Data",
          "Integrate Shop Page",
          "Integrate Detail Page",
          "Partial View in .NET Core"
        ],
        "ASP.NET Core Shopping Cart": [
          "Create Shopping Cart Model Classes",
          "Working with Session Management and Shopping Cart Methods",
          "Shopping Cart Controller",
          "Add Shopping Cart View",
          "Display Data in Shopping Cart View",
          "Display Total Price in Shopping Cart",
          "Remove Shopping Cart Data",
          "Empty Shopping Cart View",
          "Cart Counter"
        ],
        "Creating Order Forms in ASP.NET Core:": [
          "Create Order Model Classes",
          "Create Order Repository",
          "Implement Migrations to add order table",
          "Create Orders Controller",
          "Add Order View",
          "Model Binding and Place Order"
        ],
        "Securing Your ASP.NET Core Application": [
          "Add Asp.NET Identity",
          "Add Authentication",
          "Modify Register & Login Pages",
          "Add Authorization"
        ],
        "Deploying Your ASP.NET Core Web App on Azure": [
          "Create Azure Web App",
          "Important Note Regarding Images",
          "Create Azure SQL DB",
          "Deploy Web App to Azure"
        ],
        "Source Code": [
          "Source Code",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "The student's must have a Windows machine.",
        "Knowledge of C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)",
        "Visual Studio 2022 with .Net Core version 7.0 is recommend but you can also use .Net Core 6",
        "Microsoft Azure Account if you want to publish your web application to Azure"
      ],
      "description": "Welcome to the Complete Real World Web Development course with .NET Core 7, where you will learn how to create a fully functional coffee shop e-commerce web application using Asp .NET Core and C#.\nThis comprehensive course covers everything you need to know to create a web application from scratch, including the latest version of .NET Core 7.0, as well as the previous version, .NET Core 6.\nIn this course, you'll\nDevelop a web app in .NET Core using Entity Framework Code First Approach\nUse advanced features such as Dependency Injection and Repository Pattern\nImplement Routing and Navigation Tag Helpers\nLearn how to use Render Body, View Imports, View Start & _Layout File\nAdd Migrations in Web Application\nIntegrate Custom Theme or Template in Asp .NET Core Web Application\nCreate a Shopping Cart for your application\nImplement Session Management\nLearn how to implement Authentication and Authorization with Identity\nCreate a Coffee Shop ECommerce Web App From Scratch\n\n\nBy the end of this course, you will have the skills and knowledge to create a web app in .NET Core, connect it to an MSSQL database, deploy a web API on Microsoft Azure, and create a real-world coffee shop e-commerce web app from scratch.\nWith carefully thought-out and edited content, you can rest assured that you're getting a high-quality course. The course is designed for both beginners and experienced developers who want to improve their skills in .NET Core web development.\nRemember, you will receive all the source code and links for the web application, as well as helpful material for the course. To launch your web application, you will need a personal Azure Portal.\nIf you're a busy developer who wants to quickly learn web development from scratch, this is the perfect course for you. Click the buy now button and join the world's First Complete Web Development Course with Asp .NET Core and C#.",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Web App from A to Z."
      ]
    },
    {
      "title": "Rapid PrimeFaces",
      "url": "https://www.udemy.com/course/rapid-primefaces/",
      "bio": "Develop JSF-rich internet applications through the exciting world of PrimeFaces",
      "objectives": [
        "Discover what PrimeFaces is and why is it useful to any JSF developer",
        "Develop a PrimeFaces-based application using NetBeans",
        "Configure PrimeFaces in an application based on local JARs as well as on Maven",
        "Configure a PrimeFaces theme to make the application more visually pleasing",
        "Work with the PageLayout and DataTable components to enhance the look of the application",
        "Integrate the FileUpload component and add the Galleria component for a cool slide show",
        "Monitor the application’s requests and status using AJAX"
      ],
      "course_content": {
        "Getting Started with PrimeFaces": [
          "Course Objectives",
          "Developing Your First PrimeFaces Application with and without Maven",
          "Selecting a Theme"
        ],
        "Developing a \"My Gallery\" Website – Client Side": [
          "What Will We Develop?",
          "Creating a Page Layout",
          "Adding the DataTable Component",
          "Adding the Gallery",
          "Adding the Upload"
        ],
        "Developing a \"My Gallery\" Website – Server Side": [
          "Creating the Application's Classes",
          "Creating the MyPhoto Class",
          "Linking the Data Table to the Server Side",
          "Linking Upload to the Server Side",
          "Testing the Application"
        ],
        "Treating Application Errors/Warnings/Info/Status": [
          "Adding PrimeFaces Growl to Keep the User Informed",
          "Adding PrimeFaces AjaxStatus",
          "The Final Test of the Application"
        ]
      },
      "requirements": [
        "This course assumes you have good grasp over Java and you want to enhance your applications using PrimeFaces."
      ],
      "description": "This video course teaches you how to develop a complete web application using the PrimeFaces framework. The application shapes a virtual photo gallery, which is designed to cover a wide range of PrimeFaces features.\nThis video course has a simple structure. We start with an overview of PrimeFaces and then continue with the development of a complete web application. The application development starts by setting up a PrimeFaces theme and adding a page layout. We continue by adding the necessary PrimeFaces components (DataTable, Upload, Galleria, and so on). Once the components are in place, we focus on the server-side where we \"give life\" to these components. At the end, we perform some application tests and pull some final conclusions.\nRapid PrimeFaces is ready to take you into the PrimeFaces world where, as a JSF developer, you will find the perfect development environment for JSF-based applications.\nAbout the Author\nAnghel Leonard is a senior Java developer with many years of experience in Java SE, Java EE, and related frameworks. He has written and published a significant number of articles about Java technologies as well as tips and tricks for many programming-dedicated websites. In addition, he has reviewed several books, JavaOne articles, and top-rated dissertations about Java. He has written two books about XML and Java (one for beginners and one for advanced developers) for Albastra, a Romanian publisher; four books for Packt Publishing, Jboss Tools 3 Developer Guide, JSF 2.0 Cookbook, JSF 2.0 Cookbook LITE, and Mastering JavaServer Faces 2.2; and two books for APress, Pro Java 7 NIO 2 and Pro Hibernate and MongoDB. Currently, he is developing web applications using the latest Java technologies on the market such as WebServices, JMS, EJB, CDI, Spring, JSF (PrimeFaces, OmniFaces and RichFaces frameworks), Struts, Vaadin, Hibernate, and so on.",
      "target_audience": [
        "If you are a JSF developer who wants to really boost your applications, then this course is for you."
      ]
    },
    {
      "title": "PHP Laravel: Build Travel Agency Management System",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-travel-agency-management-system/",
      "bio": "Build Complete Travel Agency Management System with PHP Laravel MySQL and Bootstrap and up your Web Development Game",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Integrate PayPal API for payment processing and online ordering",
        "Create a customer booking system",
        "Create a search system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start with the Course",
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Creating Authentication System and Getting Ready": [
          "Design and Code for the Project",
          "Creating New Laravel Project and Running Server",
          "Creating Authentication System",
          "Integrating our Theme pt.1",
          "Integrating our Theme pt.2"
        ],
        "Creating Main Features": [
          "Displaying Countries pt.1",
          "Displaying Countries pt.2",
          "Displaying Cities pt.1",
          "Displaying Cities pt.2",
          "Booking Tours"
        ],
        "Booking and Paying with PayPal and Searching for Deals": [
          "Paying with Paypal pt.1",
          "Paying with Paypal pt.2",
          "Validating Payment",
          "Searching for Deals pt.1",
          "Searching for Deals pt.2",
          "Displaying Bookings for every User",
          "Cleaning up and Validating"
        ],
        "Creating Authentication System with Laravel": [
          "Design and Code for Admin Panel",
          "Creating Authentication System with Laravel pt.1",
          "Creating Authentication System with Laravel pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying all Admins",
          "Creating New Admins"
        ],
        "Working with Countries Section": [
          "Displaying all Countries",
          "Creating New Countries",
          "Deleting Countries"
        ],
        "Working with Cities Section": [
          "Displaying all Cities",
          "Creating New Cities",
          "Deleting Cities with Images"
        ],
        "Working with Bookings Section": [
          "Changing Booking Status",
          "Deleting Bookings"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "The online course titled \"PHP Laravel 2024: Build Travel Agency Management System\" is designed to teach participants how to develop a fully functional travel agency management system using the PHP Laravel framework. This course will provide comprehensive instruction and hands-on experience in building a web application for booking vacation homes and managing travel-related operations.\n\nKey features of the course include:\n\n\nFramework: The course focuses on the PHP Laravel framework, which is widely used for web development due to its robust features and ease of use.\nProject-Based Learning: Participants will work on a real-world project throughout the course, building a tour and travel management system from scratch. This hands-on approach allows learners to apply their knowledge and gain practical experience.\nBooking System: The course covers the development of a booking system, enabling users to book vacation homes and manage their travel arrangements.\nProcessing Payment with PayPal: Participants will also learn how the logic works behind processing payments online. how to set up the sandbox emails, how to work with PayPal Rest API and so much more.\nComprehensive Instruction: The course provides step-by-step guidance, covering all the necessary concepts and techniques required to build a travel agency management system using Laravel and PHP.\nExperienced Instructor: The course is taught by an experienced web development instructor who specializes in Laravel and has a top-rated track record in teaching web development courses.\n\n\nBy the end of the course, participants will have the skills and knowledge to develop their own travel agency management system using Laravel and PHP. This course is suitable for individuals with some prior experience in web development and a basic understanding of PHP programming.",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "React and NestJS: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/react-nest-admin/",
      "bio": "NestJS APIs, React Hooks, Typescript, TypeORM, MySQL, Login with HttpOnly Cookies, Export CSV, Upload Images",
      "objectives": [
        "Use Docker",
        "Use TypeORM",
        "Generate Jwt Token",
        "Connect NestJS with MySQL",
        "React with Typescript",
        "Use Redux",
        "Login with HttpOnly Cookies",
        "Upload Images",
        "Export CSV files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "NestJS": [
          "Installation",
          "Docker",
          "Modules & Controllers",
          "Migrations",
          "Services",
          "Global Prefix",
          "Register",
          "Hashing Passwords",
          "Validations",
          "Login",
          "Jwt and HttpOnly Cookies",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Guards",
          "Creating Users",
          "Common Modules",
          "Updating Users",
          "Pagination",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Abstract Service",
          "Circular Dependencies",
          "Products",
          "Uploading Images",
          "Orders",
          "Expose Fields",
          "Export CSV",
          "Raw SQL",
          "Custom Decorators",
          "Access Guard"
        ],
        "React": [
          "Installation",
          "Template",
          "Components",
          "Routers",
          "Wrapper",
          "Register",
          "Http Requests",
          "State",
          "useState",
          "Login",
          "useEffect",
          "Axios Defaults",
          "Logout",
          "Models",
          "NavLink",
          "Users",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "useRef",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Redux",
          "Using Redux"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to create an Admin App using React and NestJS.\nIn NestJS you will learn:\nUse Docker\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Interceptors and Guards\nCreate custom Decorators\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV's\nIn React you will learn:\nCreate a React project with Typescript\nUse Redux\nCreate public and private routes\nReact Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "Introduction to SharePoint For beginners",
      "url": "https://www.udemy.com/course/introduction-to-sharepoint-for-beginners/",
      "bio": "Learn to solve business problems with sharepoint",
      "objectives": [
        "What is Sharepoint",
        "Create office 365 trial account",
        "Access Sharepoint online",
        "Create user accounts",
        "Create Sharepoint site collection",
        "Learn Share point Common Glossary",
        "Understand SharePoint versions"
      ],
      "course_content": {
        "Introduction and Getting Started": [
          "Introduction",
          "Overview",
          "What is sharepoint",
          "SharePoint Versions",
          "Sharepoint Browser Support",
          "Create Office 365 Free Trial Account",
          "Exploring SharePoint online",
          "Share point Glossary",
          "Illustrating Share point Colaboration",
          "Creating user accounts",
          "Create Your First Site Collection",
          "Creating a Subsite in Sharepoint",
          "SharePoint Navigation",
          "Customizing a sharepoint web page",
          "Basic SharePoint Permissions",
          "Create a Sharepoint web page",
          "Site Group"
        ],
        "Create and Manage SharePoint Blog": [
          "Introduction",
          "Create a blog",
          "Manage Categories",
          "Modify Post",
          "Set Permissions for a blog",
          "Set Permissions for a blog lists and Libraries"
        ],
        "Creating and Managing SharePoint Lists": [
          "Introduction and section overview",
          "What is a SharePoint List",
          "How to create a SharePoint List",
          "How to Add a column to a Sharepoint List",
          "How to create and edit public views of a SharePoint List",
          "How to share a SharePoint List with others",
          "How to Set Alerts on SharePoint List",
          "Exploring SharePoint List Settings"
        ],
        "Creating and Managing SharePoint Document Libraries": [
          "Introduction to SharePoint document libraries",
          "What is a document library",
          "How to create a document library",
          "How to add files into the document library",
          "How to rename files inside the document library",
          "How to view and edit files in a document library",
          "How to check version history of documents",
          "How to create an alert on files inside a document library",
          "How to delete and restore files inside a document library",
          "Checking documents out and in",
          "SharePoint Notebook"
        ],
        "Workflow": [
          "What is a workflow",
          "Types of workflow",
          "Three state workflow part 1",
          "Three state workflow part 2",
          "Running the three state workflow",
          "Thank You"
        ]
      },
      "requirements": [
        "Access to sharepoint : We'll cover this on the course",
        "Office 365 Free Trial"
      ],
      "description": "Share point is an amazing platform that is used by a lot of fortune 100 companies to create collaborative projects and develop\nsolutions to address various business issues.\nThere are two primary versions of SharePoint that practically do most things alike. There is the SharePoint server 2016 which is the latest stable version and Share point online which comes bundled with office 365 and accessed via a subscription based model. In this course we will be using the SharePoint online version for simplicity so we can be up  running quickly with the course.\nWe will create user accounts and also a site collection and lots more stuff.\nThere is a lot you can do with SharePoint . You can create multiple websites with SharePoint,collaborate and store various documents types in SharePoint.  Share-point can be used to develop applications that compliments Microsoft office products.\nSharePoint Server 2016, is normally installed on severs in your organization, but it could be installed on servers that your organization has in the cloud. This version of SharePoint, though, normally installed on physical servers that your organization owns, is also referred to as SharePoint on premises on prem. While share point online is mainly installed remotely or in the cloud on Microsoft data centers which have high bandwidth to improve performance.\nYou can use site groups in share point to assign permissions to various sites or portals.This makes administration easier\nWhat You will learn include:\nWhat is share point\nHow to create a trial office 365 account\nHow to create user accounts\nHow to create share point site collection\nHow differentiate between SharePoint versions\nSharepoint Glossary\nSharepoint Browser support\nSharepoint collaboration\nAdminister user accounts\nThis course is a practical video based course and i encourage you to follow along .\nThank you and welcome to the course",
      "target_audience": [
        "Aspiring developers",
        "Aspiring programmers",
        "Application developers"
      ]
    },
    {
      "title": "Drupal developer essentials",
      "url": "https://www.udemy.com/course/drupal-developer-essentials/",
      "bio": "Configuration management, Composer, Drush commands and Debugging in Drupal 8, 9 & 10 explained",
      "objectives": [
        "Learn Composer and its essential commands",
        "Understand and apply Git best practices for Drupal",
        "Utilize debugging and profiling tools:",
        "Implement effective configuration management"
      ],
      "course_content": {
        "Composer, GIT, CLI tools": [
          "Composer for Drupal development",
          "Applying patches with Composer",
          "Git and Drupal",
          "Drupal CLI tools: introduction to Drush"
        ],
        "Debugging setup and tools in Drupal": [
          "Debug setup",
          "Devel and webprofiler",
          "Using XDebug"
        ],
        "Configuration management": [
          "Introduction to Configuration management",
          "Creating a custom configuration settings form",
          "Configuration management scenarios: A",
          "Configuration management scenarios: B",
          "Configuration management scenarios: C",
          "Reading out configuration and use it on your website"
        ],
        "Bonus Lectures": [
          "Upgrading Drupal 9 to Drupal 10",
          "How to upgrade from PHP 7 to PHP 8 with Composer",
          "How to upgrade from Drupal 8 to Drupal 9 with Composer",
          "Drupal development with Github Copilot demo",
          "Move from jQuery to ES6 in Drupal with ChatGPT",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic PHP knowledge: Familiarity with PHP programming concepts and syntax",
        "Drupal fundamentals: A basic understanding of Drupal's architecture, concepts, and terminology, such as modules, themes, and nodes.",
        "While not strictly required, having prior experience with developing simple Drupal sites or working with other content management systems can be beneficial to get the most out of this course."
      ],
      "description": "[Please read the table of contents first! Also the prerequisites are important]\nA comprehensive video course designed to provide developers with essential skills and knowledge required to work effectively with Drupal.\nThis course covers a range of critical tools and best practices, with a focus on Composer, Git, CLI tools, and debugging techniques. By the end of this course, students will have a solid understanding of the Drupal developer ecosystem and will be well-equipped to build robust, maintainable, and efficient Drupal projects.\nCourse Outline:\nComposer: Learn the basics of Composer, the dependency manager for PHP, and its significance in the Drupal ecosystem. Discover how to use Composer to manage your Drupal project dependencies.\nBasic Composer Commands: Master essential Composer commands, such as installation, updating, and removing packages, to streamline your development workflow.\nPatching with Composer: Dive into the process of applying patches to Drupal projects using Composer, ensuring compatibility and stability across your project.\nGit Best Practices: Understand the best practices for using Git, the popular version control system, in the context of Drupal development, including branching, merging, and committing.\nCLI Tools: Get introduced to Drush, and learn how to automate tasks and improve your development experience.\nDevelopment & Debug: Learn about Drupal's development and debugging tools, such as Symfony VarDumper, Xdebug to identify and resolve issues in your code more efficiently.\nWebprofiler: Discover how to use Webprofiler, a Drupal module that provides performance insights and detailed information about your application's inner workings.\nConfiguration Management: Understand the basics of Drupal's configuration management system and how it helps to maintain consistency and manageability across your projects.\nCreating Custom Configuration Settings: Learn how to create and manage custom configuration settings for your Drupal modules, providing flexibility and customization to your projects.\nDifferent Configuration per Environment: Explore strategies to manage environment-specific configurations, ensuring a smooth deployment process across development, staging, and production environments.\nBy the end of this course, you will have a deep understanding of the essential developer tools and best practices required to excel as a Drupal developer. Enhance your skills and become a more efficient, confident, and capable developer in the Drupal ecosystem.",
      "target_audience": [
        "Aspiring Drupal developers: Individuals looking to enter the field of Drupal development and seeking to build a solid foundation in essential tools and best practices.",
        "Web developers transitioning to Drupal: Developers with experience in other content management systems or web development frameworks who want to expand their skillset and transition to Drupal development.",
        "Professionals already working with Drupal as site builders or administrators, who want to deepen their understanding of developer tools and techniques to enhance their capabilities and improve their projects.",
        "Members of web development teams who want to improve their knowledge of Drupal development tools and best practices, ensuring better collaboration and more efficient workflows within their teams."
      ]
    },
    {
      "title": "JavaScript Rockstar How to create Incredible Useful code",
      "url": "https://www.udemy.com/course/javascript-projects-from-scratch-step-by-step-guide-to-learn/",
      "bio": "JavaScript learning with real world examples learn to code optimize development using the JavaScript DOM",
      "objectives": [
        "create JavaScript interaction",
        "learn to create a basic JavaScript game",
        "learn about the DOM",
        "create dynamic JavaScript coding"
      ],
      "course_content": {
        "Course introduction": [
          "JavaScript Projects projects from scratch introduction",
          "JavaScript Projects how to use this course",
          "Web development Resources Guide Links"
        ],
        "Project Clickable buttons with Dynamic Output": [
          "JavaScript Snippets Button click and output to HTML",
          "JavaScript Snippets button eventlisteners",
          "JavaScript Snippets Button Click Code",
          "JavaScript Snippets Class Event listeners output",
          "JavaScript Snippets button click classes",
          "JavaScript Snippets Dynamic Content data attribute",
          "Get the attribute value",
          "JavaScript Snippets button Project Source Code"
        ],
        "Project Tooltip": [
          "JavaScript Snippets ToolTip Mouse Events",
          "JavaScript Snippets tooltip 1",
          "JavaScript Snippets Dynamic Tooltips",
          "JavaScript Snippets using built in DOM functions",
          "JavaScript Snippets DOM tooltip Hide show",
          "JavaScript Snippets tooltip source code",
          "JavaScript Snippets set interval Challenge",
          "JavaScript Challenge Set Interval",
          "Setup interval",
          "JavaScript Snippets interval answer code",
          "JavaScript ANSWER Set Interval"
        ],
        "Rock Paper scissors Game": [
          "Game setup",
          "JavaScript Snippets Game code traverse the DOM",
          "JavaScript Snippets random item return",
          "JavaScript Snippets game logic",
          "JavaScript Snippets pick a winner",
          "JavaScript Snippets game Project Source Code"
        ],
        "Course Bonus Resources and Extra Lectures": [
          "JavaScript Resources",
          "Additional Learning Materials: Access to Downloads, Practical Examples"
        ]
      },
      "requirements": [
        "desire to learn",
        "computer access"
      ],
      "description": "JavaScript Step by Step training, we show you how to build projects from Scratch. Learn at your own pace resources provided, source code included everything you need to practice and learn JavaScript.\nThis course is designed for beginners who are familiar with JavaScript and want to see it in action.  Learning how to build small mini apps.  By the end of this course you will be able to create projects like the ones outlined in the course.\nJavaScript is the foundation for so much online, including all the new JS libraries. Knowing how to apply JavaScript can help to learn further JS code.\n\nProject #1 - Create and apply JavaScript to buttons that can be used across multiple web pages.\nProject #2 - Tooltips applying DOM event tooltips, find positions of elements and attached floating tooltip box.\nProject #3 - Create a Rock Paper Scissors game from start to finish. Learn how to apply game logic and build simple JavaScript games. Use the DOM for events and more.\nKnowing how to apply JavaScript is an excellent skill to have. JavaScript is everywhere and by the end of this course you will have what you need to use it on your own webpages. Interact with your web users, dynamic web content using JavaScript.\n\nWe walk you through step by step with detailed explanations of code and more. We add and update a webpage from scratch adding JavaScript to bring it to life.\nno wasted time watching someone type\npractice with coding exercises\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resources to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions\nWe teach you the latest techniques and tools to use in order to create amazing web content.\nEverything you need to know is included in this course.\nLearn at your own pace, lifetime access to this course.\nWe show you how to write JavaScript code, easy to learn. Our tutorials are easy to follow and effective in teaching JavaScript.",
      "target_audience": [
        "web coders",
        "JavaScript developers",
        "web masters",
        "web designers",
        "desire to learn Javascript",
        "web content producers",
        "web managers"
      ]
    },
    {
      "title": "JavaScript & Angular with Hands-on Examples",
      "url": "https://www.udemy.com/course/javascript-angular-with-hands-on-examples/",
      "bio": "JavaScript (JS) libraries such as React, Angular, Node with my hands-on JavaScript (JS) and Angular course.",
      "objectives": [
        "What is conditional statements (if else, switch case, ternary operator), how to use",
        "What is loops (for loops, while loops, continue and break statements), how to use them",
        "How to create Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "What is DOM, how to manipulate DOM",
        "How to write Functions, what are the differences between Function Decleration and Function Expression",
        "What are variables, why are they used",
        "How to create Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "Fully understand the architecture behind an Angular application and how to use it",
        "Create single-page applications with one of the most modern JavaScript frameworks out there",
        "Write clean and elegant code like a professional developer",
        "Build real-world Angular applications on your own",
        "Become fluent in AngularJS terminology, such as dependency injection, services, directives, transclusion, and more.",
        "Design custom directives and save time and energy with easily reusable components.",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "JavaScript is a text-based computer programming language used to make dynamic web pages.",
        "A must-learn for aspiring web developers or programmers, JavaScript can be used for features like image carousels, displaying countdowns and timers, and playing",
        "What is JavaScript? JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting.",
        "React vs. Angular vs. Vue: what is the best JavaScript framework? Choosing the best JavaScript framework for your web project depends on what you are lookingfor",
        "Angular is a framework that makes data binding easy so that you can template an application faster.",
        "With all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences.",
        "Angular is an open-source, client-side framework for building single-page websites and desktop and mobile applications.",
        "It is a full-featured JavaScript application built on TypeScript, which operates across platforms and keeps code clean and consistent throughout the codebase.",
        "Full stack web development with javascript angular, typescript",
        "Front end web development with angular, javascript with angular"
      ],
      "course_content": {
        "Introduction to Javascript and Angular for Full stack Web development": [
          "Introduction to JavaScript",
          "Setup Visual Studio Code for Javascript Angular",
          "Adding JS File",
          "Project Files and Course Documents - Javascript and Angular",
          "FAQ about JavaScript, Angular, Nodejs, Mongodb, Full Stack Web Development",
          "quiz"
        ],
        "Javascript Language Basics": [
          "Variables and Data Types in JavaScript",
          "Type Coercion in JavaScript",
          "Variable Mutation in JavaScript",
          "Basic Operators in JavaScript",
          "Boolean Logic in JavaScript",
          "Logical Operators in JavaScript",
          "quiz"
        ],
        "Conditional Statements in JavaScript": [
          "Conditional Statements in JavaScript",
          "Code Quiz 1 Solution in JavaScript",
          "Ternary Operator in JavaScript",
          "Switch, case statements in JavaScript",
          "Code Quiz 2 in JavaScript",
          "Code Quiz 2 Solution in JavaScript",
          "quiz"
        ],
        "Loops in JavaScript": [
          "Introduction to Loops",
          "While loops in JavaScript",
          "While loops quiz",
          "While Loops Quiz Solution",
          "for Loops",
          "for Loops Quiz Solution",
          "Continue and Break Statements in JavaScript",
          "quiz"
        ],
        "Functions in JavaScript": [
          "Introduction to Functions",
          "Function Decleration in JavaScript",
          "Function with Arguments",
          "Function return",
          "Function Expression",
          "Function Quiz",
          "Function Quiz Solution",
          "Function Scope",
          "quiz"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "Array Features",
          "Array Methods",
          "Array Quiz",
          "Array Quiz Solution",
          "Array Iteration",
          "Array Iteration Quiz",
          "Array Iteration Quiz Solution",
          "quiz"
        ],
        "Objects": [
          "Introduction to Objects",
          "Object Update",
          "Complex Data Structures",
          "Object Quiz",
          "Object Quiz Solution",
          "Object Methods",
          "this Keyword",
          "quiz"
        ],
        "DOM": [
          "Introduction to DOM",
          "What is DOM",
          "Select and Change",
          "Select Methods",
          "Manipulation Methods",
          "innerHTML and textContext",
          "Attribute Manipulation",
          "quiz"
        ],
        "Event Handlers": [
          "Introduction to Event handlers",
          "Event Handler Codequiz-1",
          "Codequiz Solution",
          "callback Function",
          "Different Event Types",
          "Todolist Quiz Solutuion",
          "What We Learned",
          "quiz"
        ],
        "Angular Introduction": [
          "What is Angular ?",
          "Angular Versions",
          "Development Environment",
          "Notes for Lecture 65: First Application",
          "First Angular Application",
          "Angular App Structure",
          "First Project Edit",
          "Using Bootstrap for Styling",
          "Angular Quiz"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS",
        "No knowledge of Angular or JavaScript",
        "Willingness and Motivation to successfully complete the training",
        "Computer with access to the internet",
        "Desire to learn Angular, Javascript, typescript, nodejs, mongodb",
        "Desire to learn Javascript Angular, Nodejs and MongoDB for Full stack web development",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the \"JavaScript & Angular with Hands-on Examples\" course.\nJavaScript (JS) libraries such as React, Angular, Node with my hands-on JavaScript (JS) and Angular course.\nJavaScript is the number one programming language for internet applications.\nAngular is one of the most modern, performance-efficient, and powerful frontend frameworks you can learn as of today. It allows you to build great web apps that offer awesome user experiences! Learn all the fundamentals you need to know to get started developing Angular applications right away.\nAngular is the next big deal. Being the successor of the overwhelmingly successful Angular.js framework it’s bound to shape the future of frontend development in a similar way. The powerful features and capabilities of Angular allow you to create complex, customizable, modern, responsive, and user-friendly web applications.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nWe'll design custom services, build custom directives, understand two-way binding, design a weather forecast app as a single page application, and lots more. Both starter and finished source code is provided as we go.\nThis course is for beginners. Before taking this course, you only need to have a basic knowledge of HTML and CSS. In our course, the basics of JavaScript are dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nDuring our course, you will be informed about the basics of JavaScript in detail and how to solve problems.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nIn our course, you can test what you have learned on both MAC and Windows computers. You do not need to purchase any tools or applications as free tools and platforms are used.\nDuring the course, I made sure to explain all the topics that may seem complicated to you in as simple and detailed as possible. I have used some diagrams to help you understand better.\n\n\nWhen you complete the course, you will learn;\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nWhich architecture Angular uses\nHow to use TypeScript to write Angular applications\nAll about directives and components, including the creation of custom directives/ components\nHow databinding works\nAll about routing and handling navigation\nWhat Pipes are and how to use them\nHow to access the Web (e.g. RESTful servers)\nWhat dependency injection is and how to use it\nHow to use Modules in Angular\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nAngular\nJavascript framework Angular\nJavascript Angular\nAngular Javascript\nStep-by-Step Way, Simple and Easy With Exercises\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is Angular and what are its benefits?\nAngular is an open-source, client-side framework for building single-page websites and desktop and mobile applications. It is a full-featured JavaScript application built on TypeScript, which operates across platforms and keeps code clean and consistent throughout the codebase. Angular is an all-in-one rapid application development platform that allows web pages to render efficiently by minimizing communication with servers. The Angular framework offers end-to-end tooling or routing, state management, and form validation, as well as dependency injection and declarative templates. Angular offers out-of-the-box functionality and easy updating, along with an extensive collection of pre-made components. The TypeScript base includes high-quality code that reduces the burden of debugging and allows multiple developers to collaborate across platforms with minimal disruption and less coding.\nIs learning Angular hard?\nAngular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features. Angular’s learning curve depends partly on your previous knowledge of web development and your familiarity with the languages used in the Angular platform. If you’re new to Angular, it’s helpful to have some familiarity with the basics of web design and the essentials of HTML and CSS. It’s also useful to know about the other languages that make up the Angular framework. These include basic HTML and CSS, as well as ECMAScript6, or ES6, a general programming language designed to ensure interoperability of web pages across the Internet. It’s also helpful to understand TypeScript, a superset of JavaScript used to write Angular. Learning Angular is even easier if you’re familiar with JavaScript, which is an implementation of ES6 and Angular’s base language.\nWhat is Angular used for?\nDevelopers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop. SPAs are web pages based on a single HTML file that is completely controlled by JavaScript. When an action such as clicking a button happens on the page, the code renders it on the page instantly without sending a new request to the server. TypeScript and Angular’s other tools, including routing, state management, and ROM validation, make SPA creation easy and fast. Its open-source JavaScript framework allows developers to reuse code across multiple platforms. Angular’s component-based architecture simplifies the development workflow, making it possible to design apps for deployment in a wide range of environments and update them without extensive recoding.\nWhat is the difference between Angular and React?\nAngular and React are both rapid application development (RAD) platforms based on JavaScript. Angular is a multilayered framework that runs on Typescript and is compatible with many different code editors. It is a full-featured web development platform that requires no additional libraries. This means Angular can independently carry out a full range of development functions such as data binding, form validation, and dependency injection. First introduced in 2013, React is a JavaScript library managed by Facebook, and it works for both single- and multi-page web applications. React is a framework for UI development that’s smaller and faster than Angular. However, it requires other libraries or modules to provide the full range of Angular’s functions. React is easy to install and use for anyone who already knows JavaScript, and because it operates with a virtual DOM, the browser load reduces. Angular operates with a real DOM, which leads to longer runtimes and slower performance.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our JavaScript & Angular with Hands-on Examples course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Front-end developers who want to stay up-to-date with the latest technology",
        "Developers who want to upgrade their skills and get better job opportunities",
        "This course is for everyone interested in learning a state-of-the-art frontend JavaScript framework",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who want to learn javascript, angular, nodejs, mongodb",
        "People who want to learn full stack web development with angular"
      ]
    },
    {
      "title": "Build and Deploy Responsive Websites on AWS using HTML & CSS",
      "url": "https://www.udemy.com/course/build-and-deploy-responsive-websites-on-aws-using-html-css/",
      "bio": "AWS Foundations | IAM | Amazon Elastic Compute Cloud (EC2) | AWS Storage (EC2) | ELB | ASG | Route 53 | HTML | CSS",
      "objectives": [
        "Understanding of the AWS cloud computing platform, its core services, and deployment models.",
        "Familiarity with the AWS Management Console and the AWS command line interface.",
        "Ability to manage users, groups, roles, and policies in IAM to grant and restrict access to AWS resources.",
        "Knowledge of AWS security best practices, including multi-factor authentication, encryption, and audit logging.",
        "Capability to launch, configure, and manage EC2 instances, including creating custom AMIs and working with EBS volumes.",
        "Ability to use ELB to distribute incoming traffic across multiple EC2 instances and ASG to automatically adjust capacity based on demand.",
        "Knowledge of Route 53 to manage DNS and domain names.",
        "Familiarity with basic HTML and CSS for web development.",
        "Ability to create basic HTML pages and style and layout content with CSS.",
        "Understanding of responsive design principles to create web pages that adapt to different screen sizes and devices.",
        "Hands-on experience with labs and projects that reinforce concepts learned in class.",
        "Proficiency in using AWS services to build scalable and secure web applications.",
        "Preparedness to pursue further study in AWS and web development.",
        "Knowledge of best practices for building fault-tolerant and scalable applications.",
        "Ability to work collaboratively and effectively in a team-based environment."
      ],
      "course_content": {
        "Getting Started with AWS": [
          "Introduction",
          "AWS Pricing Foundations",
          "AWS Free Tier Overview",
          "AWS Acceptable Use Policy",
          "AWS Account Registration",
          "AWS Cloud Practitioner Exam - Key Topics",
          "AWS Global vs. Regional Services",
          "Global vs. Regional Services Example",
          "Creating Billing Alerts",
          "AWS Multi-Factor Authentication (MFA)",
          "Activate MFA for the Root User Account",
          "Creating IAM Users and Groups",
          "IAM User Custom Sign-In Link",
          "Configure a Custom Password Policy"
        ],
        "IAM: Identity and Access Management": [
          "Intro to IAM",
          "Introduction to IAM Mechanics",
          "IAM Mechanics (Theory)",
          "IAM Users",
          "Introduction to Managing IAM Users",
          "IAM Administration (Guide) (Listing, Deleting Users & Accounts)",
          "Managing Permissions for IAM Users",
          "Changing IAM User Permissions (Method 1)",
          "Changing IAM User Permissions (Method 2)",
          "Changing IAM User Permissions (Method 3)",
          "IAM Groups",
          "IAM Group Administration",
          "IAM Groups (LAB Exercise)",
          "IAM Policies",
          "IAM Inline Policies (Guide)",
          "IAM Custom Policies",
          "IAM Custom Policies (Guide)",
          "IAM Roles",
          "IAM Roles (Practical Guide)",
          "IAM Authentication and Security",
          "Rotating Access Keys",
          "IAM Multi-Factor Authentication (MFA)",
          "IAM Credentials Report (Guide)"
        ],
        "Amazon Elastic Compute Cloud (EC2)": [
          "Introduction to EC2",
          "EC2 Instance Core Features",
          "EC2 Instance Types",
          "Amazon Machine Images (AMI)",
          "Creating an IAM User for EC2",
          "The EC2 Dashboard",
          "Deploying an EC2 Instance",
          "Deploying an EC2 Instance (Continued)",
          "EC2 Instances Console",
          "Elastic IP (Theory)",
          "Elastic IP (Guide)",
          "EC2 Instance Administration (Guide)",
          "EC2 Instance Launch Templates",
          "Creating an Amazon Machine Image (AMI)",
          "IAM Roles for EC2 (Guide)",
          "Introduction to Security Groups",
          "Security Groups (Guide)",
          "Secure Socket Shell (SSH) Overview",
          "PuTTY (SSH) Client for Windows",
          "EC2 Instance Connect (Guide)"
        ],
        "AWS Storage (EC2)": [
          "Introduction",
          "Block vs. File. vs Object Storage",
          "Amazon Elastic Block Store (EBS) Overview",
          "Amazon EBS Guide [Part 1]",
          "Amazon EBS Guide [Part 2]",
          "EBS Snapshots Overview",
          "EBS Snapshots (Guide)",
          "Amazon Machine Image (AMI)",
          "Amazon AMI Guide [Part 1]",
          "Amazon AMI Guide [Part 2]",
          "Amazon EC2 Image Builder",
          "Amazon EC2 Image Builder Guide [Part 1]",
          "Amazon EC2 Image Builder Guide [Part 2]",
          "Amazon Elastic File System (EFS)",
          "Deploy an EC2 Instance with Ubuntu (Guide)",
          "Creating an EFS (Guide)",
          "Attach EFS to EC2 (Guide)",
          "Upload Files to EFS via FTP (Guide)",
          "Attach EFS to Second EC2 Instance (Guide)",
          "Account Cleanup"
        ],
        "ELB, ASG, Route 53": [
          "Introduction",
          "High Availability & Elasticity",
          "Elastic Load Balancer (ELB) Overview",
          "Auto Scaling Groups (ASG)",
          "ELB + ASG Prep: Setup AMI from EC2",
          "ELB Deployment (Guide)",
          "Creating a Launch Template (Guide)",
          "Auto Scaling Groups (Guide)",
          "Auto Scaling Strategies",
          "Dynamic Scaling (Guide)",
          "Step and Simple Scaling (Guide)",
          "Predictive Scaling (Guide)",
          "Creating a Launch Template (Guide)",
          "Virtual Private Cloud (VPC) Guide",
          "Amazon Route 53 & DNS Foundations (Guide)",
          "Route 53 Domain Registration & Routing (Guide)",
          "Route 53 Domain Settings and Hosted Zones",
          "Route 53 DNS Records in the Hosted Zone",
          "Account Clean-Up"
        ],
        "HTML Foundations": [
          "Introduction to HTML",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "HTML Body Tag",
          "HTML Paragraph Spacing",
          "HTML Line Breaks",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Iframes",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ],
        "CSS Foundations": [
          "Introduction to CSS",
          "Parts of a CSS Rule",
          "Types of CSS Rules",
          "CSS - Color Names and Codes",
          "CSS Classes and Spans",
          "CSS Divisions - DIVs",
          "CSS IDs",
          "CSS Margins",
          "CSS Padding",
          "CSS Text Properties",
          "CSS Font Properties",
          "CSS Borders",
          "CSS Backgrounds",
          "CSS Transparency",
          "CSS Text on Top of Images",
          "CSS Width and Height Properties",
          "CSS Display Properties",
          "CSS Static Positioning",
          "CSS Relative Positioning",
          "CSS Absolute Positioning",
          "CSS Fixed Positioning",
          "CSS Float Property",
          "CSS Clear Property",
          "CSS Z-Index",
          "CSS Styling Links",
          "CSS Tables",
          "CSS Project - Introduction",
          "CSS Project - CSS Rules",
          "CSS Project - Navigation Rules",
          "CSS Project - Responsive CSS",
          "CSS Project - Page Elements"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course provides a comprehensive introduction to Amazon Web Services (AWS) and web development fundamentals. The first part of the course covers AWS Foundations, which includes an overview of the AWS cloud computing platform, its core services, and the various deployment models. Students will learn how to navigate the AWS Management Console and use the AWS command line interface to manage and provision resources.\n\nThe course then dives into IAM: Identity and Access Management, a fundamental concept in AWS security. Students will learn how to manage users, groups, roles, and policies to grant and restrict access to AWS resources. They will also explore AWS security best practices, including multi-factor authentication, encryption, and audit logging.\n\nNext, the course covers Amazon Elastic Compute Cloud (EC2), a core AWS service that provides resizable compute capacity in the cloud. Students learn how to launch, configure, and manage EC2 instances, including choosing the right instance type, creating custom Amazon Machine Images (AMIs), and working with Elastic Block Store (EBS) volumes.\n\nThe course then moves on to AWS Storage (EC2), which covers the various storage options available in AWS. Students will learn about Amazon Simple Storage Service (S3), Elastic File System (EFS), and Amazon Glacier, and how to use them to store and retrieve data in the cloud.\n\nFrom there, we dive into ELB, ASG, and Route 53, which are essential AWS services for building scalable and fault-tolerant applications. Students learn how to use Elastic Load Balancing (ELB) to distribute incoming traffic across multiple EC2 instances, Auto Scaling Groups (ASG) to automatically adjust capacity based on demand, and Route 53 to manage DNS and domain names.\n\nFinally, the course introduces HTML and CSS Foundations, the building blocks of modern web development. Students will learn how to create basic HTML pages and use CSS to style and layout content. They will also explore responsive design principles and learn how to create web pages that adapt to different screen sizes and devices.\n\nThroughout the course, students will work on hands-on labs and projects that reinforce the concepts we explore. By the end of the course, students will have a solid understanding of AWS fundamentals, web development basics, and how to use AWS services to build scalable and secure web applications. They will also be well-prepared to pursue further study in AWS and web development.",
      "target_audience": [
        "Developers and software engineers who want to gain a solid understanding of AWS services and how to build scalable and secure web applications.",
        "IT professionals who are responsible for managing and provisioning AWS resources and need to develop proficiency in IAM, EC2, and other core AWS services.",
        "Business owners and entrepreneurs who are looking to leverage cloud computing for their web-based applications and need to understand the benefits and costs associated with AWS.",
        "Students and recent graduates who are pursuing careers in web development, cloud computing, or related fields and need to gain foundational knowledge in AWS and web development.",
        "Anyone interested in learning about cloud computing and web development and wants to develop new skills and knowledge in these areas."
      ]
    },
    {
      "title": "WP Fastest Cache to Optimize your Wordpress Website Speed",
      "url": "https://www.udemy.com/course/wp-fastest-cache-to-optimize-your-wordpress-website-speed-course/",
      "bio": "A - Z Wordpress Website Optimization Blueprint to Make Your WordPress Site One of the Fastest Sites on the internet",
      "objectives": [
        "Optimize your wordpress website speed using Free plugins only",
        "A comprehensive guide on website speed optimization to load your website faster",
        "Learn how to load your website faster for better overall customer experience",
        "Hands on website speed optimization practise",
        "Help other websites optimize their website speed as a freelancer"
      ],
      "course_content": {
        "Introduction": [
          "1Introduction to Wordpress Website Speed Optimization",
          "The Impotance of Website Speed - 2006 Amazon Study Results",
          "The Steps to Speed up a Wordpress Website",
          "Tiny PNG Tool to Optimize Images and Reduce Website Size",
          "Removing Un-used Plugins",
          "Quick Tip, Hosting Videos on Third Party Platforms",
          "WP Fastest Cache (FREE Plugin) to Speed up your Wordpress Website",
          "Imagify Plugin to Optimize Image Size and Speed up Wordpress Websites",
          "WP Rocket (Pro) to Optimize your Website Speed to the MAX",
          "The Importance of a CDN to Speed up Load Times Worldwide",
          "Top Websites to Test your Website Speed and Tips to Optimize Speed",
          "Connecting the website to Cloudlflare",
          "ChatGPT Tips to Speed up your Wordpress Website",
          "Wrapping up"
        ]
      },
      "requirements": [
        "Computer and Internet access",
        "Wordpress hosting and a domain"
      ],
      "description": "Welcome to \"WP Fastest Cache to Optimize your WordPress Website Speed,\" the ultimate course for anyone looking to boost their website's performance and delve into a potentially lucrative side hustle. Whether you're a beginner or have some experience, this course is designed to equip you with the skills and knowledge to significantly speed up WordPress websites.\n\n\nIntroduction to WordPress Website Speed Optimization: Dive into the essentials of website speed optimization, understanding its importance, and how it impacts user experience and SEO.\nThe Importance of Website Speed - 2006 Amazon Study Results: Learn from real-world data, exploring how Amazon's findings in 2006 revolutionized the perception of website speed.\nThe Steps to Speed up a WordPress Website: A comprehensive guide through practical steps to enhance your website's performance.\nTiny PNG Tool to Optimize Images and Reduce Website Size: Discover the power of image optimization with Tiny PNG, an effective tool in reducing website load time.\nRemoving Unused Plugins: Learn the art of decluttering your website by identifying and removing plugins that are slowing it down.\nQuick Tip, Hosting Videos on Third Party Platforms: Find out why hosting videos externally is a smart move for speed optimization.\nWP Fastest Cache (FREE Plugin) to Speed up your WordPress Website: Master the use of WP Fastest Cache, a free and powerful tool to rapidly enhance website speed.\nImagify Plugin to Optimize Image Size and Speed up WordPress Websites: Explore Imagify, a plugin dedicated to optimizing images without sacrificing quality.\nWP Rocket (Pro) to Optimize your Website Speed to the MAX: Unleash the full potential of website speed optimization with the premium features of WP Rocket.\nThe Importance of a CDN to Speed up Load Times Worldwide: Understand how a Content Delivery Network can drastically improve your website's global loading speed.\nTop Websites to Test your Website Speed and Tips to Optimize Speed: Learn how to measure your website's speed and employ practical tips for optimization.\nConnecting the website to Cloudflare: Discover the benefits of integrating your website with Cloudflare for enhanced performance and security.\n\n\nWrapping Up: Concluding the course with key takeaways, ensuring you're well-equipped to apply these skills in real-world scenarios.\n\n\nWhether you're aiming to enhance your own website or offer optimization services as a freelancer, this course is your stepping stone to becoming proficient in WordPress website speed optimization. Join us and transform your skills into a profitable and in-demand expertise!",
      "target_audience": [
        "Wordpress developers seeking to optimize website speed using free plugins",
        "Freelancers looking to acquire a new skill"
      ]
    },
    {
      "title": "Learn CSS and Create Websites using Bootstrap",
      "url": "https://www.udemy.com/course/learn-css-and-create-websites-using-bootstrap-4/",
      "bio": "Learn CSS Basics and Create Complete Static, Responsive Website from Scratch using Bootstrap and jQuery",
      "objectives": [
        "Learn CSS Basics",
        "Learn how to install Visual Studio Code",
        "Learn how to write HTML and CSS files using Visual Studio Code",
        "Learn how to download jQuery and Bootstrap 4.5",
        "Learn how to include jQuery and Bootstrap 4.5 in a Website Project",
        "Learn how to create complete website using Bootstrap 4.5 and jQuery",
        "Learn how to make a responsive website",
        "Learn how to migrate to Bootstrap 5"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Work Environment Setup"
        ],
        "CSS Introduction and Syntax": [
          "Introduction to CSS",
          "CSS Selectors",
          "Using CSS",
          "CSS Basics Practice Test"
        ],
        "Creating Website Template": [
          "Downloading Bootstrap and jQuery",
          "Setting up Project Files",
          "Navigation Menu",
          "Images Slider",
          "Home Section",
          "About Section",
          "Services Section",
          "Team Section",
          "Contact Section",
          "Footer Section",
          "Responsive Website"
        ],
        "Creating Gym Website": [
          "Setup Gym Website Project Files",
          "Gym Images Slider",
          "Gym Home Section And Navigation Menu",
          "Gym About Section",
          "Interests Section",
          "Trainers Section",
          "Gym Footer Section"
        ],
        "Migrating to Bootstrap 5": [
          "Migrating to Bootstrap 5"
        ],
        "Course Summary": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML",
        "Basic Computer Skills",
        "Internet Access"
      ],
      "description": "Learn CSS and Create Websites using Bootstrap\n\nCourse Overview\nLearn CSS Basics and Create a Complete Static Responsive Website from Scratch using Bootstrap and jQuery.\nThis course is only for a student at a beginner level who needs to learn the basics of creating static responsive websites. I will use a lower version of Bootstrap (Bootstrap 4.5) then by the end of this course, we will migrate to Bootstrap 5.\n\nCourse Language:\nEnglish\n\nCourse prerequisites:\nBasic Computer Skills\nBasic HTML Knowledge\nInternet Access\nWilling to learn\nIn this course you will:\nLearn Cascading Style Sheets (CSS) Basics.\nLearn the different types of CSS Selectors.\nLearn the different ways of adding CSS to HTML documents.\nWrite HTML and CSS Files using Visual Studio Code.\nUnderstand the Bootstrap Layout and Components.\nLearn how to use Bootstrap to create beautiful websites.\nLearn how to make a responsive static website.\nLearn how to migrate to a higher version of Bootstrap (Migrating to Bootstrap 5)\nResources\nEach practical video comes with a zip file that contains the source code so make sure you are doing things right and there are no differences between your source code and the source code among the resources.\nCommunication\nI am available for your questions - send me a direct message anytime.\n\nI hope you find this course valuable, interesting, and useful.\nI hope you enjoy the course and that it helps you in your professional development!\nBest Regards,\nAM Learning\nMake Learning Fun",
      "target_audience": [
        "Beginners",
        "Junior Frontend developers"
      ]
    },
    {
      "title": "NVDA all the way",
      "url": "https://www.udemy.com/course/nvda-all-the-way/",
      "bio": "An end to the end course to learn accessibility through NVDA screen reader",
      "objectives": [
        "Screen reader basics and introduction to NVDA. How to download and install NVDA. How to launch NVDA. Understand the NVDA modifier key. Customizing NVDA using Menu and Settings. Navigating your PC with system focus and system cursor. Browsing the internet using NVDA. Using NVDA Add-ons to make inaccessible apps accessible."
      ],
      "course_content": {},
      "requirements": [
        "The only requirement is basic knowledge of Windows operating system and web browsers like Firefox, Internet Explorer or Google Chrome. Keep in mind use of braille devices is not covered in this program."
      ],
      "description": "NVDA all the way is an extensive program about the screen reader Non Visual Desktop Access. This application will make any computer working on Windows operating system accessible for visually impaired and blind individuals.\nWhat will you be able to do after completing this course\nUse your Windows computer independently without assistance with the help of NVDA\nSurf the internet using web browsers\nAccess applications like Microsoft office and mail clients\nCustomize NVDA settings as per your choice\nMake inaccessible apps accessible using addons\nWho should take this course.\nIf you are finding it difficult to use your Windows PC due to loss of vision\nIf you want to switch from JAWS screen reader to NVDA\nIf you are a teacher or parent of a visually impaired or blind individual and want to help them learn an independent living skill\nIf you are a developer and want to understand accessibility and NVDA screen reader from end user viewpoint\nWhat is not covered:\nUse of braille devices\nCoding and debugging\nBasics of Windows operating system",
      "target_audience": [
        "If you are finding it difficult to use your Windows PC due to loss of vision If you want to switch from JAWS screen reader to NVDA If you are a teacher or parent of a visually impaired or blind individual and want to help them learn PC accessibility If you are a developer and want to understand accessibility and NVDA screen reader from end user view point"
      ]
    },
    {
      "title": "Building Applications with VueJs, Vuex, VueRouter, and Nuxt",
      "url": "https://www.udemy.com/course/building-applications-with-vuejs/",
      "bio": "Master the VueJs fundamentals by building single page and server rendered applications(Inc. Vuex, VueRouter, Nuxt)",
      "objectives": [
        "Understand how to create web apps Vue",
        "Manage state with Vuex",
        "Routing with VueRouter",
        "Consume Restful APIS with Vuejs and Vuex",
        "Build Server rendered Application with NuxtJs and Vuex",
        "Learn Forms in VueJs"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript Knowledge is Required",
        "ES6 Knowledge is a Plus but not a Must",
        "Basic HTML and CSS Knowledge is assumed throughout the Course"
      ],
      "description": "What is Vue.Js?\nVue.js (commonly referred to as Vue; pronounced /vjuː/, like view) is an open-source JavaScript framework for building user interfaces.\nVue.js is yet another JavaScript UI library that is making waves and has growing support from the community. If you have an upcoming project and are wondering which tool to choose, you can give Vue a try.\nVue is considerably easy to learn and you can get started with it in just 10 minutes (actually, that is what this article is going to help you do). But first, let’s have a quick look at why you should even give Vue a try.\nWhy Vue.js?\nWhen comparing it with its competitors, including Angular, React, Ember, Aurelia, etc., Vue boasts of beating some of them in certain aspects. These aspects include simple API, size, performance, learning curve, etc. You can have a look at these comparisons on the official documentation.\nWhat you will learn in this course ?\nSetting up a Development Environment and Workflow\nThe Basics (including the basic Syntax, Understanding Templates and much more!)\nInteracting with DOM (Rendering Lists, Conditionally attaching/ detaching Elements ...)\nUsing Components (and what Components are to begin with)\nBinding to Form Input\nState Management with VueJs\nHow to create an awesome Single-Page-Application (SPA) with Routing\nBuild Server Rendered App with NuxtJs\nIn this course you are going to build 6 small web applications with Vue.js, Vuex and Nuxt\nVote App - Learn the Vue basics by building vote application\nTodo App - In this module you will build a basic Todo App with VueJs\nKanban Board Application - In this module you will build a basic project management app using Vue components\nShopping Cart Server with Vuex - In this course, you will master the Vuex fundamentals by building shopping cart feature\nBuild a conference form - In this module you will master the forms fundamentals of VueJs\nBlog App - You will learn how to build server rendered application with Vuex and NuxtJs",
      "target_audience": [
        "Existing web developers looking to learn VueJs",
        "This Course is for Everyone interested in Frontend Development and Major JavaScript Frameworks",
        "Engineers looking to harness the power of Vue"
      ]
    },
    {
      "title": "Full-Stack app with Angular 12, Python Django & PostgreSQL",
      "url": "https://www.udemy.com/course/full-stack-app-with-angular-12-python-django-postgresql/",
      "bio": "learn to create a full stack web application from scratch using Angular 12, Python Django and PostgreSQL",
      "objectives": [
        "Full Stack Web Development",
        "Backend Development with Django and PostgreSQL",
        "Frontend Web Development with Angular 12",
        "Build RESTful APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Environment": [
          "Install Python",
          "Install Visual Studio Code",
          "Install Postman",
          "Install PG Admin",
          "Install Node JS"
        ],
        "Backend : Django and PostgreSQL": [
          "Create Django Project",
          "Models",
          "Serializers",
          "API Methods",
          "Upload File API"
        ],
        "Frontend : Angular 12": [
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering"
        ],
        "Bonus Lecture": [
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css, javascript and python programming"
      ],
      "description": "Hello Everyone, and welcome to this course on Angular 12, Python Django and PostgreSQL full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* PostgreSQL for the database.\n* Python Django for the back end web development.\n* And the latest Angular 12 for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using Django and Django REST Framework.\n-Finally we will be using Angular 12 to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our Angular App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "python developers, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Docker for Developers, Dockerize React, Node, Mongo and more",
      "url": "https://www.udemy.com/course/docker-for-react-developers/",
      "bio": "Master the art of Dockerize images and never install unnecessary software again. Use docker w/ React, Node, Mongo & more",
      "objectives": [
        "How to Dockerize apps",
        "How to use Docker Images and Containers",
        "How to mange multiple containers using Docker-Compose",
        "How to deploy a production grade application using Kubernetes (K8's)",
        "Optimize your Development and Production setup for Docker",
        "Resolve compatibility problems among different system and stages",
        "Learn how to Dockerize React, Node, Mongo, NIGNX apps and any other"
      ],
      "course_content": {
        "Course introduction": [
          "Why docker (if you still need some convincing)"
        ],
        "Docker Intro": [
          "Quick Run Through with a Docker Sample from Docker",
          "Docker settings lets get this right",
          "Running our first Docker Container using the Docker UI",
          "Understand the image we pull from Docker Hub"
        ],
        "Using the Docker Client Commands (CLI)": [
          "Testing the Docker Clients Commands we already master"
        ],
        "Creating Volumes in Docker to use our code or keeping our data safe": [
          "Pulling a MongoDB image from Docker Hub",
          "Persisting MongoDb data in a volume locally and keeping it safe",
          "Mapping our Node code to the container and running it from there"
        ],
        "Other important things to know": [
          "Mapping ports on the container, do they always have to be the same",
          "Working Directory, because even our files need a place to call home"
        ],
        "Making it easier with Dockerfiles": [
          "Creating our first Dockerfile"
        ],
        "Staying connected on a Private Network": [
          "Connecting to MongoDB in a container from our local Node app",
          ".dockerignore, you can't ignore it",
          "Legacy Link connecting our Dockerized Node Application to our MongoDB Container",
          "Network Bridge connecting our Dockerized Node app to MongoDB",
          "Fixing legacy erros on the MongoDB driver"
        ],
        "Docker Compose, managing multiples containers like a pro": [
          "Creating our docker compose file so we don't need more the command line",
          "Building and starting our containers using docker compose",
          "Docker Compose CLI up, down, start, stop, logs and so much more"
        ],
        "Docker compose, making it even better": [
          "Creating environment variables and reading it in Node",
          "Removing our network as Docker will set it up for us"
        ],
        "Final Project - Scaffolding our solution": [
          "Scaffolding the application",
          "Commiting our application in GitHub",
          "Changing from NPM to Yarn and installing express"
        ]
      },
      "requirements": [
        "A computer capable of running Docker",
        "Basic knowledge about React to follow the React practices (not mandatory)",
        "Basic knowledge about Node to follow the Node practices (not mandatory)",
        "Basic knowledge about Mongo to follow the Mongo practices (not mandatory)"
      ],
      "description": "Build apps are not as simples as it uses to be. Today, your apps have to run in multiple environments (Mac, Windows, Linux), using a lot of different technologies (Redis, Mongo, Node, and so many others.\n\n\nThat is not all. It is the norm to expend days just to set up an environment right, to install all the dependencies and set all the environment variables, configure the connection, etc. And more often than not, after days of hard work when it is time to test the app it does not work, and when we ask for help the creator of the document he will say probably say \"But it works on my machine!\"\n\n\nThis course put an end on this. I will teach you how to use Docker so you can efficiently build apps that run smoothly and consistently across any machine, that you will be able to run in any device with Docker from zero to no time down.\n\n\nWe will build together many images and containers, step by step, from scratch and by the end, we will have a fully functional application using not 1 or 2 containers but 4. And we will be able to start it all (a reverse proxy, a React application, a Node application and a MongoDB) using just one command.\n\n\nWe will create a NIGIX container as a reverse proxy that will forward a request to React application running in another Docker container and/our Node application running in yet another Docker container depending on the request URL. Also, your Node application will be able to request and save data on our fourth container running MongoDB.\n\n\nWe will focus on the development environment first, and by the end, we will learn how to step up our game for production, creating leaner and safer images.\n\n\nI'll be with you every step the way. We will code together line by line, and I'll even show how to set up your environment like mine. Hence, it is easier for you to follow and find any problem you may have, still, if you don't, that is fine too, I'm always available to answer any questions you have along the journey.\n\n\nWe will build a more advance app by each class, adding new container as need and learn new ways to make our job more comfortable as we go.\n\n\nWe will start learning about the Docker CLI and pushing images from Docker Hub and creating containers with those images.\nLater we will add ports and volumes to the images we used on the step before.\nThen we will learn how to create our images using Dockerfiles.\nThis is when things start to get more interesting, we will create networks between multiple containers, so for example, our Node container will be able to communicate with our MongoDB container.\nHowever, soon we will find out that manage a lot of containers using the CLI is not an easy job, that is when we will learn about Docker Compose.\nDocker Compose is fantastic, but why to stop there, Kubernetes of K8's is the next natural step to learn, it will make scaling and deploying a breeze, so it is a MUST for this course too.\n\n\nAfter you finish this course, you can be sure that you will increase your productivity, creating lightweight applications that run the same no matter the environment with setups that takes no time.\n\n\nSo no more \"Works at my machine\" or 14 pages documents to set up environments that never works, let Dockerize and be happy and productive,\n\n\nSee you in the course",
      "target_audience": [
        "React developers who want to use the best that containers has to offer",
        "Node developers who want to use the best that containers has to offer",
        "Developers in general who want to learn how to Dockerize new or existent applications or solutions",
        "Docker users who want to take they knowledge to the next level"
      ]
    },
    {
      "title": "Python flask framework",
      "url": "https://www.udemy.com/course/python-flask-framework-2023/",
      "bio": "Become expert in flask!",
      "objectives": [
        "Flask Framework URL Building,HTTP Methods",
        "Flask Framework Overview And Environment",
        "Go from Beginner to Advanced in Flask Framework, Flask Framework Basics To Advanced concepts",
        "Flask SQLite for database",
        "Flask Framework Routing,Variable Rules",
        "Flask Framework URL Building,HTTP Methods"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Lesson 1": [
          "What is flask?"
        ],
        "Lesson 2": [
          "Environment setup"
        ],
        "Lesson 3": [
          "Basic flask app"
        ],
        "Lecture 5": [
          "Flask routes"
        ],
        "Lecture 6": [
          "URL building"
        ],
        "Lecture 7": [
          "static files"
        ],
        "Lesson 8": [
          "Flask SQLite"
        ],
        "Lesson 9": [
          "Flask templates"
        ]
      },
      "requirements": [
        "Little understanding about python"
      ],
      "description": "Software is everywhere. We interact with it in our daily life activities knowingly or unknowingly. Each time when you use an app like Instagram, send an instant message, or check the stock prices on your phone, you're using an API. The world still needs more software to make our life easier. But creating great software is hard for everyone and yet developers need to master more than one skill.\nThis course will guide you in creating simple, intermediate, and advanced REST APIs including authentication, deployments, databases, and much more.\nWe'll start with a Python refresher that will take you from the very basics to some of the most advanced features of Python—that's all the Python you need to complete the course.\nUsing Flask and popular extensions Flask-Smorest, Flask-JWT-Extended, and Flask-SQLAlchemy we will dive right into developing complete, solid, production-ready REST APIs.\nWe will also look into essential technologies like Git and database migrations with Alembic.\n\n\nYou'll be able to...\nCreate resource-based, production-ready REST APIs using Python, Flask, and popular Flask extensions;\nHandle secure user registration and authentication with Flask.\nUsing SQLAlchemy and Flask-SQLAlchemy to easily and efficiently store resources to a database; and\nUnderstand the complex intricacies of deployments of Flask REST APIs.\nUse Docker to simplify running and deploying your REST APIs.\n\n\nBut what is a REST API anyway?\nA REST API is an application that accepts data from clients and returns data back. For example, a REST API could accept text data from the client, such as a username and password, and return whether that is a valid user in the database.\nWhen developing REST APIs, our clients are usually web apps or mobile apps. That's in contrast to when we make websites, where the clients are usually the users themselves.\nTogether we'll develop a REST API that not only allows clients to authenticate but also to store and retrieve any data you want from a database. Learning this will help you develop any REST API that you need for your own projects!\nAll the best. Keep Learning and keep moving ahead.\nWho this course is for:\nDevelopers curious about microservices and API\nDevelopers curious to learn developing web apps using Flask.\nFull stack developer, backend developer, frontend developer, data scientist, machine learning engineer\nIf you have any doubt your queries will be solved within 24 hours.",
      "target_audience": [
        "Beginners who are interested in python webapp developement.",
        "Beginners who are interested in learning flask framework"
      ]
    },
    {
      "title": "Fullstack Node.js and Express Bootcamp with Real Projects",
      "url": "https://www.udemy.com/course/fullstack-nodejs-and-express-bootcamp-with-real-projects/",
      "bio": "Learn How To Build an E-commerce app Using Node, Express, Sequelize, Nunjucks, HTML, CSS, Bootstrap, JavaScript",
      "objectives": [
        "Learn how web applications work",
        "Learn how NodeJS and Express Implements web applications",
        "Understand HTML and how to use it to create mark-ups for web pages",
        "Understand CSS and how to use it to style web pages",
        "Understand Sass and how to use it to write styles programmatically",
        "Understand JavaScript and how to use to add interactions to web applications",
        "Learn how to analyse a customer’s problem and generate the software requirements for the project",
        "Learn how to structure a large-scale project",
        "Learn how to implement the all the functionalities of a complete eCommerce application which include: Product catalogue, Shopping Cart, Order and Checkout, Customer Management"
      ],
      "course_content": {
        "Getting Set for The Course": [
          "Getting Set for The Section",
          "What You Will Learn After Completing the Course",
          "About Your Instructor",
          "Getting the Source Code",
          "About the Exercises",
          "Getting to Ask Questions",
          "Requirements for The Course",
          "Npm and Sequelize Commands",
          "Summary"
        ],
        "Web Application Basics": [
          "Getting Set for The Section",
          "Data Communication Pattern",
          "Data Storage Pattern",
          "Data Presentation Pattern",
          "Summary"
        ],
        "How NodeJS and ExpressJS Implements Web Applications": [
          "Getting Set for The Section",
          "Understanding the MVC Pattern",
          "Implementing The MVC Pattern In NodeJS and ExpressJS",
          "The Basic NodeJS App",
          "The Basic NodeJS and ExressJS App",
          "Working with Models in NodeJS and ExpressJS",
          "Working with Data Storage and ORMs In NodeJS and ExpressJS",
          "Working with Controllers In NodeJS and ExpressJS",
          "Working with URLs and Routers In NodeJS and ExpressJS",
          "Working with Views and Templating Engines In NodeJS and ExpressJS",
          "The Structure of a NodeJS and ExpressJS Project",
          "Summary"
        ],
        "Meet Notely App: Our First Fullstack NodeJS and ExpressJS Project": [
          "Getting Set for The Section",
          "Setting Up the Notely App Project",
          "Reviewing the Requirements for Notely App",
          "Creating the Note Model",
          "Creating Database Migrations",
          "Creating the Note Controller Part 1",
          "Creating the Note Controller Part 2",
          "Creating the App's Router and Url Patterns",
          "Creating the Note Views",
          "Implementing Validation",
          "Summary"
        ],
        "HTML Crash Course": [
          "Getting Set for The Section",
          "Basic Structure of HTML Document",
          "Understanding the HTML Elements",
          "Structure of an HTML Element",
          "Working with HTML Attributes",
          "Working with HTML Element Content",
          "Working with HTML Void Elements",
          "Getting to Know the Document Structure",
          "Making Sense of The Document Object Model (DOM)",
          "Summary"
        ],
        "CSS Crash Course": [
          "Getting Set for The Section",
          "CSS Basic Concepts",
          "Working with Inline Style",
          "Working with Embedded Style",
          "Working with External Style",
          "Working with CSS Selectors",
          "Understanding Cascading styling",
          "Working with CSS Units",
          "Working with Shorthand Properties and Custom Values",
          "Summary"
        ],
        "SASS Crash Course": [
          "Getting Set for The Section",
          "Sass Basic Concepts",
          "Basic Sass Syntax",
          "Working with Variables",
          "Working with Operators",
          "Working with Flow Controls",
          "Working with Functions",
          "Working with Partials",
          "Working with Mixins",
          "Working with Extend Directive",
          "Sass Output Style",
          "The Body Element Modifier (BEM) Methodology",
          "Summary"
        ],
        "JavaScript Crash Course": [
          "Getting Set for The Section",
          "Understanding and Working Statements and Expressions",
          "Understanding and Working Variables",
          "Understanding and Working with Data Types",
          "Working with Operators",
          "Working with Functions",
          "Working with Objects",
          "Working with Arrays",
          "Understanding and Working with Promises",
          "Understanding and Working with Modules",
          "Summary"
        ],
        "Building Materials E-Store (BMES): Our Real-Life Application": [
          "Getting Set for The Section",
          "Understanding the Building Material Business",
          "Defining the Problem",
          "Specifying the Design Criteria",
          "Creating the Solution",
          "Summary"
        ],
        "BMES: Requirements and Project Set-Up": [
          "Getting Set for The Section",
          "Product Catalogue Specifications",
          "Shopping Cart and Checkout Specifications",
          "Customer Registration Specifications",
          "Customer Authentication Specifications",
          "BMES Administration Specifications",
          "Setting Up the BMES Project",
          "Summary"
        ]
      },
      "requirements": [
        "A computer with internet connection",
        "Visual Studio Development Environment",
        "Visual Studio Code Development Environment"
      ],
      "description": "Description\nThis is a no holds barred, action packed, Full Stack Flask Web Development Course. To demonstrate My Confidence About This Course, I have created a CV that contains all the Concepts that I covered, and the Projects I have executed in this course. You can Take This Course and Start Looking for Job Immediately using the CV I have prepared.\nYour prospective employer wants you to come onboard and start building applications for them straight away. That is what I did in this course. To provide the knowledge that will allow you go straight into the industry and start working immediately. With over 140 Lectures that cover Four Crash Courses, and Two Solid Real-World Projects, I did not leave any stone unturned!!\nBasically, the whole course can be grouped into Three Main Themes:\nIntroduction to web Applications\nWhere I introduced how web applications work and how Node.js and Express implements web applications\nThe Crash Courses\nWhere I provided short but comprehensive mini courses on HTML, CSS, SASS, and JavaScript\nSince, the course is a Full Stack (Front End and Back End) development course, the crash courses on HTML, CSS, SASS and JavaScript provide you with the knowledge to work on the Front End, while the JavaScript crash course provides you with the knowledge of the Back End Language.\nThe Real World Projects\nWhere I built Two SOLID Real-World Projects. The type of Projects that you will be working on when you get into the industry.",
      "target_audience": [
        "Beginners who do not have a prior experience with programming",
        "Intermediate and Senior developers looking to start working with NodeJS and ExpressJS",
        "Developers looking to gain more knowledge within full stack development"
      ]
    },
    {
      "title": "Google Apps Script - Project Exercise Spreadsheet web app",
      "url": "https://www.udemy.com/course/google-script-apps/",
      "bio": "Learn the power of Google Script and see how you can connect Google Spreadsheet as a data source for a post board",
      "objectives": [
        "Create web apps with Google Script",
        "Build your own post application",
        "Add Google Scripts apps to Google Sites",
        "Update and use Spreadsheet data within Google Sites"
      ],
      "course_content": {
        "Introduction to building web apps with Google Script": [
          "Introduction to building web apps with Google Script",
          "Resource Google Script",
          "Google Apps Script Introduction",
          "Google Apps Script Create First Script",
          "Run your Script make things Happen",
          "Google Script Source Code 3",
          "Output HTML Create webapp",
          "Google Script Source Code 4",
          "Create Index page as HTML",
          "Google Script Source Code 5",
          "Get user Session Email",
          "Google Script Source Code 6",
          "Build Client Side Code JavaScript",
          "Get Spreadsheet content to client side",
          "Google Script Source Code 8",
          "JavaScript Build Post Output",
          "Build Output Items",
          "Google Script Source Code 10",
          "Bring web app into Google Sites.",
          "Submit a new post to Spreadsheet",
          "Send Data to Google Script",
          "Google Script Source Code 13",
          "Google Script Sort Column Data",
          "Google Script Source Code 14",
          "Detect URL parameter Page number",
          "Add Pagination Pages for posts",
          "Add Pagination Pages part 2.",
          "Add Pagination Pages part 3",
          "Google Script Source Code 18",
          "Application Tweaks",
          "Google Script Source Code 19",
          "Remove Record from Spreadsheet",
          "Update Spreadsheet data remove row",
          "Date Sort Bug Fixes",
          "Google Script Source Code 22",
          "Style and Updated View Content",
          "Google Script Source Code 23",
          "Final Tweaks",
          "Google Script Source Code 15",
          "Google Script Source Code Final"
        ],
        "Bonus Section": [
          "Google Apps Script Resource and code example Guide",
          "Course Materials Extension"
        ]
      },
      "requirements": [
        "Computer with internet access",
        "Google Account",
        "JavaScript Knowledge"
      ],
      "description": "Group site project with Google Script - Google Site and Web apps - Spreadsheet\nPerfect course to learn and practice Google Apps Script!!!\nDo you want to connect Google Apps Together and make some really amazing things happen?  Course will provide you the foundation to work with Google Script to build a Web App that can be embedded in Google Sites.   Within the course we show you how to use Google Spreadsheet as a source for retrieving and storing data.  Power up what you do online, bringing together built in functionality in your Google Suite.\nJavaScript developers extend your knowledge and learn how you can use your skills to develop apps script bringing together all the power of Google's Apps.\nCourse Covers\nBasics of Google Script - how to use the online editor and overview of functionality\nHow to create a bound script to your Google Sheet\nAdd new rows and get contents from Google Spreadsheet\nSort and update Google Sheet data\nHow to select sheet contents\nHow to use HTTP service to output and html file within Google Web apps\nUse web apps to create interactive content\nUse JavaScript within Google Apps and Google client side pages\nSetup a Google site and embed your Google script\nUse session values and other powerful built in script methods\nFine tune and tweak debug web apps\nAll this and more\nSource Code is included so you can build the same app we build in the course, but even better :)\nBuild a nice interactive project from scratch alongside the lessons within the course.\nPractice JavaScript and data handling, JSON, JavaScript objects, Array and more\nGoogle Apps Script : is based on JavaScript 1.6 with some portions of 1.7 and 1.8 and provides subset of ECMAScript 5 API however instead of running on the client, it gets executed in the Google Cloud. According to Google, Apps Script \"provides easy ways to automate tasks across Google products and third party services.\"Apps Script is also the tool that powers the add-ons for Google Docs, Sheets and Slides.\"\nIf you haven't tried it yet, I guarantee you will be BLOWN AWAY at how powerful Google Script can be, and at how easy it is to write.  With just a few lines of code you can DO A WHOLE LOT!!!\nDon't take my word for it try it and see.\nTaught by an instructor with over 20 years of web development experience, ready to help you learn and answer any questions you may have.\nWhat are you waiting for this course is perfect to start writing Google Script and to practice writing Google Script, you have nothing to lose.",
      "target_audience": [
        "Application developers",
        "Anyone who wants to learn about Google Apps Script",
        "Anyone who wants to create web apps with Google Apps Script",
        "JavaScript developers who want to extend their knowledge"
      ]
    },
    {
      "title": "Learn To Create Different Website Layouts & Media Queries",
      "url": "https://www.udemy.com/course/websitelayouts/",
      "bio": "In this complete course students will learn to create multiple website layouts and media queries for their websites",
      "objectives": [
        "Learn The Basics For Creating and Changing Website Layouts",
        "Learn To Create Different Website Layouts",
        "Learn How To Use and Apply Media Queries",
        "Learn Some Javascript",
        "Learn How To Create Backgrounds for Their Website"
      ],
      "course_content": {
        "Learn How This Course Will Help You Build Website Layouts & Media Queries": [
          "Course Introduction & Course Benefits - How We Will Help You Create Layouts",
          "How To Use This Course To Gain The Maximum Form Our Teachings",
          "Course Essentials - Before Moving Any Further Please Read and Use This Document"
        ],
        "Basics and The Fixed Layout": [
          "Creating an Html File",
          "Creating the CSS",
          "Creating Header and NAV",
          "Completing the Fixed Layout"
        ],
        "Liquid Layout": [
          "Creating Liquid or Fluid Layout",
          "Basic Log of Liquid Layout and It's Header",
          "Completing the Liquid or Fluid Layout"
        ],
        "Table Layout": [
          "creating table layout",
          "adding css to the table layout",
          "creating responsive table layout"
        ],
        "Media Queries": [
          "creating layout for media queries",
          "understanding media queries",
          "using max width",
          "using min width",
          "creating a header for media queries",
          "creating content area and footer",
          "creating a layout for smart devices using media queries"
        ],
        "Course Conclusion and Final Exam": [
          "Course Final Exam - You Have Now Built Your Very Own Layouts!",
          "Course Conclusion and Special Bonus and Offer Exclusive To My Udemy Students"
        ]
      },
      "requirements": [
        "A browser, We'll use chrome throughout in this course",
        "Any computer such as Mac, Windows, OSX or Linx",
        "A notepad, We'll use notepad++ and I'll teach you to download and install notepad++ as well",
        "An Open Mind To Learning New Things",
        "Desire to learn something new and interesting."
      ],
      "description": "⇉ Watch the promo video to see How You Can Start Becoming A Professional Web Developer Today!\n\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n\n\nIn this course you will learn fist hand by building your very own website layouts! We take a step by step approach to ensure each student receives a valuable learning experience.\nThis course will teach you everything you will need to know about Website Layouts, Queries and what it will take to start your own website development and responsive design. Our course teaches you how to code showing you multiple examples that you can easily create afterwords.\n__________________________________________________________________________\nHere is What You Will Learn Throughout Our Entire Course:\nBasics and The Fixed Layout\nLiquid Layout\nTable Layout\nMedia Queries\nSo Much More!!\nThis course is designed for everyone and anyone, especially aspiring web designers, bloggers, programmers to business owners can benefit from learning Website Layouts and Queries. This course is also for anyone who plans on becoming a web programmer or a web designer themselves.\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards becoming a professional web designer and developer.\nWhen I learn something new about Layouts and Queries, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys and Shahzaib Kamal",
      "target_audience": [
        "This Course is Designed For Web Developers Who Have Some Experience With HTML and CSS and Some of the Basics of Coding",
        "This course if for students who want to learn web design",
        "This course is for anyone looking to learn the basics of web design and beyond",
        "This course is for anyone looking to improve their web development skills",
        "This course is for anyone looking to add onto their existing web development skills",
        "This course is not for those looking for web development outside of Layouts and Media Queries"
      ]
    },
    {
      "title": "Create an Engaging Website with Twitter Bootstrap 2.x",
      "url": "https://www.udemy.com/course/create-an-engaging-website-with-twitter-bootstrap/",
      "bio": "Learn to create your website with this free and open-source web design framework.",
      "objectives": [
        "Chapter 1: Getting Started Introduction",
        "What is Twitter Bootstrap",
        "About the Project Files",
        "Download the Project Files",
        "Starting Your Project",
        "Chapter 2: Adding the Base Markup for the Page",
        "Page Container and Nested Rows",
        "Adding Containers for Content",
        "Adding Main Content",
        "Preparing Graphics with Photoshop",
        "Chapter 3: Adding your Own Style with CSS",
        "Styling the Blockquote",
        "Styling the Footer",
        "Add Content and Style the Promos",
        "Add Your Logo with a Link",
        "Adding the Navigation Menu",
        "Chapter 4: Create Your Own Icons",
        "Add a Custom Icon to Glyphicons",
        "Customize Styles for the Menus",
        "Page and Background Styles",
        "Chapter 5: Customize the Experience with Plug-ins",
        "HTML Markup for the Carousel Plug-in",
        "Responsive Download via CSS",
        "Set the Timing for the Carousel",
        "Remote Control the Carousel",
        "Adding Form Elements",
        "Creating an Auto Suggest",
        "Chapter 6: Where To Go From Here",
        "Where To Go From Here"
      ],
      "course_content": {
        "Chapter 1: Getting Started": [
          "Introduction",
          "What is Twitter Bootstrap",
          "About the Project Files",
          "Project Files",
          "Starting Your Project"
        ],
        "Chapter 2: Adding the Base Markup for the Page": [
          "Page Container and Nested Rows",
          "Adding Containers for Content",
          "Adding Main Content",
          "Preparing Graphics with Photoshop"
        ],
        "Chapter 3: Adding your Own Style with CSS": [
          "Styling the Blockquote",
          "Styling the Footer",
          "Add Content and Style the Promos",
          "Add Your Logo with a Link",
          "Adding the Navigation Menu"
        ],
        "Chapter 4: Create Your Own Icons": [
          "Add a Custom Icon to Glyphicons",
          "Customize Styles for the Menus",
          "Page and Background Styles"
        ],
        "Chapter 5: Customize the Experience with Plug-ins": [
          "HTML Markup for the Carousel Plug-in",
          "Responsive Download via CSS",
          "Set the Timing for the Carousel",
          "Remote Control the Carousel",
          "Adding Form Elements",
          "Creating an Auto Suggest"
        ],
        "Chapter 6: Where To Go From Here": [
          "Where To Go from Here"
        ]
      },
      "requirements": [
        "A text editor, Photoshop CS2 or later (optional)"
      ],
      "description": "A total of 23 lectures with a total running time of 74 minutes.\nThis step-by-step approach will show you how to build a responsive, interactive, and visually engaging web page with simple and flexible HTML, CSS and JavaScript -- all built on the free, open-source framework called Twitter Bootstrap. Learn to take advantage of the many aspects of Twitter Bootsrtap, including creating your own layouts, customizing components, device-sensitive elements, auto-suggest form fields, and extend the icon sprite sheet to incorporate your own icons! This course includes HTML, CSS, JavaScript, and Photoshop templates that you can customize for use in your own projects.",
      "target_audience": [
        "Graphic and PRint Designers, Web Designers, Front-end Developers, Tech-savvy Marketing Managers"
      ]
    },
    {
      "title": "HTML5, CSS3, and JavaScript The Right Way 2025",
      "url": "https://www.udemy.com/course/html5-css3-and-javascript-the-right-way/",
      "bio": "No basic theory—this is hands-on and project-focused course. let's build 2 beautiful landing pages.",
      "objectives": [
        "Build landing pages that look stunning and function seamlessly across all devices.",
        "Add smooth and engaging animations to enhance user experience.",
        "Style your designs efficiently using techniques inspired by frameworks like TailwindCSS.",
        "Integrate interactivity and dynamic features to create engaging web pages.",
        "Combine HTML5, CSS3, and JavaScript to create professional-grade projects for your portfolio."
      ],
      "course_content": {
        "Welcome": [
          "Course Intro",
          "Welcome",
          "Important"
        ],
        "PROJECT 1": [
          "Required Tools",
          "VS Code Extensions",
          "Project Assets",
          "Project Setup",
          "Fonts & Variables",
          "CSS Utilities Part 1",
          "CSS Utilities Part 2",
          "Header Part 1",
          "Header Part 2",
          "Hero Section Part 1",
          "CSS Utilities Part 3",
          "Hero Section Part 2",
          "Animations",
          "Tape Section",
          "Welcome Section Part 1",
          "Welcome Section Part 2",
          "Welcome Section Part 3",
          "Our Activities Section Part 1",
          "Our Activities Section Part 2",
          "Our Activities Section Part 3 (JavaScript)",
          "Testimonials Section Part 1",
          "Testimonials Section Part 2",
          "Testimonials Section Part 3 (JavaScript)",
          "FAQs Section Part 1",
          "FAQs Section Part 2",
          "FAQs Section Part 3",
          "CTA Section Part 1",
          "CTA Section Part 2",
          "Footer Part 1",
          "Footer Part 2",
          "Responsiveness Part 1",
          "Responsiveness Part 2",
          "Responsiveness Part 3",
          "Responsiveness Part 4 (JavaScript)",
          "Responsiveness Part 5"
        ],
        "PROJECT 2": [
          "Project Assets",
          "Project Setup",
          "Utility Classes Part 1",
          "Utility Classes Part 2",
          "Utility Classes Part 3",
          "Header",
          "Hero Section",
          "Our Vision Section Part 1",
          "Our Vision Section Part 2",
          "Properties Section Part 1",
          "Properties Section Part 2",
          "Properties Section Part 3",
          "Features Section",
          "Our Mission Section",
          "How It Works Section Part 1",
          "How It Works Section Part 2",
          "How It Works Section Part 3",
          "Why Choose Us Section",
          "Testimonials Section Part 1",
          "Testimonials Section Part 2",
          "Testimonials Section Part 3",
          "Blogs Section",
          "Contact Section",
          "Footer Section Part 1",
          "Footer Section Part 2",
          "Utility Classes for Hover Effects",
          "Responsiveness Part 1",
          "Responsiveness Part 2",
          "Responsiveness Part 3",
          "Responsiveness Part 4",
          "Responsiveness Part 5",
          "Responsiveness Part 6",
          "Animations"
        ]
      },
      "requirements": [
        "Basic HTML5 Knowledge: Understanding of elements, tags, and basic structure.",
        "Familiarity with CSS3: Knowledge of basic styling, selectors, and properties.",
        "Foundational JavaScript Skills: Awareness of variables, functions, and basic DOM manipulation.",
        "Motivation to Build Projects: A willingness to apply your skills to create real-world designs."
      ],
      "description": "HTML5, CSS3, and JavaScript the Right Way 2025\nMaster Modern Web Development with Real-World Projects\n\n\nAre you ready to take your HTML5, CSS3, and JavaScript skills to the next level? This course is designed for students who already know the basics and are eager to build modern, responsive, and animated web designs the right way.\n\n\nWhat You’ll Learn:\n• Advanced HTML5 Techniques: Create semantic and well-structured content.\n• CSS3 Magic: Design stunning, responsive layouts with animations using a utility-first CSS approach (like TailwindCSS).\n• JavaScript in Action: Add interactivity and logic to your designs with clean and efficient code.\n\n\nBuild Real Projects:\nYou’ll create two beautiful, fully responsive landing pages packed with:\n• Modern animations for a polished user experience.\n• Cutting-edge design trends with a focus on usability and aesthetics.\n• Mobile-first responsiveness to ensure your pages look amazing on any device.\n\n\nWhy This Course?\n• No basic theory—this is hands-on and project-focused.\n• Learn how to combine HTML5, CSS3, and JavaScript effectively to build professional-quality pages.\n• Perfect for developers looking to refine their skills and create impressive portfolio projects.\n\n\nWho Should Enrol?\nThis course is ideal for developers who:\n• Understand the fundamentals of HTML5, CSS3, and JavaScript.\n• Want to master advanced techniques for creating responsive, animated landing pages.\n• Are eager to implement a utility-first CSS approach for streamlined development.",
      "target_audience": [
        "Developers with basic HTML, CSS, and JavaScript knowledge who want to create professional landing pages.",
        "Developers eager to explore modern design trends, animations, and responsive layouts.",
        "Developers looking to enhance their portfolio with visually stunning and interactive projects.",
        "Anyone transitioning to web development and needing practical project experience.",
        "Students who prefer hands-on, project-focused learning over theoretical tutorials."
      ]
    },
    {
      "title": "D3.js - the art of data visualization",
      "url": "https://www.udemy.com/course/d3js-the-art-of-data-visualization/",
      "bio": "Mastering data visualization with the D3 library",
      "objectives": [
        "Developing appealing visualizations",
        "Effective coding with the D3 library",
        "Storytelling with data",
        "Coding patterns to understand the source code form the D3 community",
        "Practical examples you can reuse in your projects"
      ],
      "course_content": {
        "Development Environment": [
          "Simple Development Environment",
          "Development Environment (webpack)",
          "Development Environment - the quick way"
        ],
        "Basics": [
          "Selection",
          "Data Binding",
          "Functions enter() and exit()",
          "Adding SVG",
          "d3-selection-multi"
        ],
        "SVG": [
          "Basic Shapes",
          "Path Element",
          "Appearance Attributes",
          "Text Element",
          "Text on Path"
        ],
        "Data": [
          "Statistical Functions",
          "Histogram",
          "data vs. datum"
        ],
        "Interactions": [
          "Dragging",
          "Event handling",
          "Slider Project - Introduction",
          "Slider Project - Solution"
        ],
        "Scales": [
          "Continuous Scales (linear, power, logarithmic)",
          "Quantize Scales",
          "Ordinal Scales (scaleOrdinal)",
          "Ordinal Scales (scaleBand)",
          "Ordinal Scales (scalePoint)",
          "Diverging scales",
          "Time Scale"
        ],
        "Axes": [
          "Axis Generator",
          "Axes Styling",
          "Grid"
        ],
        "Animations": [
          "Transitions",
          "Easing"
        ],
        "Bubble Chart Challenge": [
          "Bubble Chart - Assignment",
          "Bubble Chart - Solution"
        ],
        "Forces": [
          "Force Simulation - Nodes and Links",
          "Force Simulation - Forces",
          "Force Simulation - Dragging",
          "Force Simulation Challenge - Introduction",
          "Force Simulation Challenge - Solution"
        ]
      },
      "requirements": [
        "At least a basic understanding of HTML, CSS, and JavaScript is needed."
      ],
      "description": "Welcome to the D3.js - the art of data visualization course!\nThe D3.js library is the industrial standard for data visualization. The reason for this is that this library offers everything you need to present the data based information in an attractive way to your audience. Only your imagination can create limits.\nThe D3 library has a massive community of developers and tones of examples available publicly. The problem is that these examples are usually complex, and you have to understand the basic concepts, based on which the visualizations are built.\nThis course will help you to build solid foundations, which you will need to create your own visually attractive infographics with the 'wow' effect. Using the right tools, for sure, you will increase the impact on your audience.",
      "target_audience": [
        "Web developers who want to present the data in an attractive way",
        "Data visualization architects",
        "Anyone who has a passion for the interactive data visualizations",
        "Power BI developers who want to learn D3 to build their custom visuals"
      ]
    },
    {
      "title": "How to manage your own VPS and create websites",
      "url": "https://www.udemy.com/course/manage-vps/",
      "bio": "A-Z to managing your very own VPS and creating and managing website in there for yourself or your clients.",
      "objectives": [
        "Manage your own VPS",
        "Use SSH",
        "Use FTP",
        "Install SSL certificates",
        "Use web control panel",
        "Use web file manager",
        "Upload and install WordPress",
        "Create websites in you own server"
      ],
      "course_content": {
        "First things first": [
          "Introduction",
          "Tools needed"
        ],
        "Getting the Virtual Private Server (VPS)": [
          "What is VPS?",
          "Buying a VPS"
        ],
        "Secure Shell (SSH)": [
          "What is SSH?",
          "How to Connect with your VPS via SSH?"
        ],
        "The Control Panel": [
          "What is a Control Panel?",
          "Choosing a Control Panel",
          "Installing a Control Panel",
          "Closer look at the newly installed Control Panel",
          "Adding a domain and sub domain in the control panel"
        ],
        "Inside the Control Panel": [
          "Adding new package and user",
          "Adding database and accessing phpMyAdmin",
          "Adding email for your domain and accessing webmail"
        ],
        "Setting Nameservers": [
          "What is DNS?",
          "Creating private nameservers",
          "Using External DNS"
        ],
        "Secure Sockets Layer (SSL)": [
          "What is SSL?",
          "Buying an SSL certificate",
          "Installing an SSL",
          "Forcing Your domain for SSL",
          "SSL Quizz"
        ],
        "File Transfer Protocol (FTP)": [
          "What is FTP?",
          "Connect with your server via FTP",
          "Understanding FTP"
        ],
        "Web based file manager": [
          "Installing a web based file manager",
          "Configuring the web based file manager"
        ],
        "Installing WordPress": [
          "Uploading WordPress Files",
          "Installing WordPress"
        ]
      },
      "requirements": [
        "You should be familiar browsing internet",
        "You should be familiar with websites, what a web server is and what it does"
      ],
      "description": "Learn to buy, configure or manage your own VPS: this course is for them who are paying much for managing their server.\nNo experience required : You will be able to manage your VPS yourself after watching this video course.\nThere are over 30 video lectures, each lectures covers an individual topic.\nReason to learn managing a VPS yourself: Web servers is a must essential for presenting yourself online. If you have large website, you will need a personal server for yourself but hire someone for managing your server can be so expensive.\nHow much you need to pay for the tools to manage your VPS: Well, Zero. I will show you the tools you can use for completely free. I am managing these open source tools for managing my or my client's servers for years.\nWhat you will be able to Do after watching this video course?\nYou will be able buy a cool VPS for yourself from some industry leading VPS providers, and configure your VPS with a control panel for hassle free server managing.\nYou will be able to setup and manage servers from scratch yourself.\nIntroduction to all needed server or web technologies\nThe tools you need to manage your own VPS.\nHow to setup and install Control Panel.\nHow to sell services from your VPS\nCreate your private nameservers and also use external DNS.\nHow to get and install SSL for your site.\nUse FTP for your server.\nHow to install WordPress in your server.\nHow to Create a very basic website for yourself.\nSome security Notes you need to know.",
      "target_audience": [
        "This course is for newbies who are not familiar with VPS or other web technologies.",
        "No pre programming knowledge is needed to take this course"
      ]
    },
    {
      "title": "Blazor Through the Ages - (Hands-On Interactive)",
      "url": "https://www.udemy.com/course/build-and-learn-aspnet-core-3_1-blazor-hands-on/",
      "bio": "Learn while you build rich interactive web applications programming in the Latest ASP.NET Blazor",
      "objectives": [
        "Install and Configure the Blazor Framework to make your workbench ready for coding in Visual Studio 2019",
        "Learn the basic concepts of Microsoft's Blazor Framework for Web Applications Development",
        "Learn the latest features incorporated in Blazor with ASPNet Core 3.1 for more flexibilty",
        "Learn more advanced concepts that builds on your knowledge of basic concepts: Routing, 2 way data-binding, Inheritance, Event Callback, Lifecycle methods",
        "Build Simple Razor Component based on knowledge acquired already",
        "Build an Advanced CRUD application for a movie database that has authentication, authorisation to view logged-in user data alonwith modal dialogs and JSInterop",
        "Learn Asynchronous Programming that's is an important part of Blazor applications.",
        "Build a Blazor Client to an Existing Customer Web API with the Client built with Full Pagination Features"
      ],
      "course_content": {},
      "requirements": [
        "Ability to understand any higher level programming language (C# or any other), Have a computer with high speed broadband internet connection, Prior Installation of Visual Studio 2019 Community version 16.3.2 (or later)",
        "Some C# or any other high level programming language skills are desirable as this course doesn't teach the basics of programming."
      ],
      "description": "Have you ever thought of being a front-end developer with Single Page Applications (SPA) in mind but hate using JavaScript to achieve your objectives?\nHave you ever thought of replacing React and/or Angular from your SPA by using a framework that uses your skills as a C# programmer?\nIf you have pondered on the above questions anytime in your career/curriculum, you have come to the right place. Yes, Blazor is a web framework offering from Micrsoft which allows you to leverage your C# language coding skills and allows you to achieve all that a more established React/Angular could offer without ever using JavaScript at all. At the same time get all that you could desire from a Single Page Application.\nThis is a basic course to start with and requires no prior knowledge of Blazor. As the course progresses the flow transfers to more advanced topics so by the end, students are expected to acquire an intermediate skill level.\nAs this course is completely built around Blazor, let's have a quick overview of what it is?\nBlazor is an open-source web framework offering from Microsoft\nIt uses just C# and razor(HTML/CSS) markup to create rich interactive user interfaces\nBlazor does not require JavaScript for its development\nIt has a complete client-side(browser) version using web assembly.\nNow a bit about the course:\nSection 1: Includes the features and highlights of the Blazor framework and the course. It guides through the necessary installation and configuration requirements and concludes with a demo of the finished application\nSection 2: This section deals in the Migration of the Completed Blazor MovieApp from ASP.NET Core 3.1 to ASP.NET 6.0\nSection 3: The section introduces learners to Blazor and its hosting models\nSection 4: Blazor has a component-based ecosystem, hence this section dives straight into building the first component\nSection 5: As the course uses the latest released version of ASP.NET Core 3.1 (at the time of writing), this section deals in the new features added since the last release (3.0)\nSection 6: Dedicated to a coding exercise as the first assignment\nSection 7: This section deals in advanced concepts with hands-on coding such as: Routing, Data Binding, Event Callback, Inheritance and Lifecycle methods\nSection 8: It is a short section dedicated to learning asynchronous programming fundamentals, the cornerstone for Blazor\nSection 9: This section is completely dedicated to building the CRUD movie application\nSection 10: Introduces authentication and authorization to the movie app to allow users to view only their user profile data (not all data)\nSection 11: Is a bonus section to show the usage of a third-party component (Spinkit with Spinloader) to show nice, animated loaders while the application is loading. This section ends with an end of the course assignment to build a component (based on a spec.)\nSection 12: A section dedicated to Pagination of the Movie App\nSection 13: Introduces Blazor as a Progressive Web Application\nSection 14: Testing Blazor Component using bUnit\nSection 15: New section added that shows the complete walk-through of Creation of a Blazor Server Application with Pagination that Consumes an Existing Customer Web API\nSection 16: Latest versions of Blazor apps in ASP.NET .7/8 that show two stand-alone apps in Blazor as part of the objective of evolving Blazor through the ages\nRecent Reviews: \"One of the best Blazor course\" by Mohammed Cisse",
      "target_audience": [
        "All web developers from Microsoft Stack of products, Students pursuing computer software engineering, Programmers from any web/application development platform willing to switch over.",
        "People self taught in C#/asp-net willing to learn a cutting edge technology",
        "Beginner to intermediate level C# and Microsoft web developers",
        "Learners who would love to make great user interfaces with CRUD functionalities without using Javascript at all.",
        "Angular/Reactjs developers wishing to explore into their Micrsoft equivalent for future."
      ]
    },
    {
      "title": "Alexa Skills - How to Create An Alexa Skill Flash Briefing!",
      "url": "https://www.udemy.com/course/alexa-skills-how-to-create-an-alexa-skill-flash-briefing/",
      "bio": "Learn how to create an Alexa Flash Briefing Skill, using Alexa Skills Kit, The power of Voice, Amazon Web Services",
      "objectives": [
        "You'll be able to create an Alexa Flash Briefing in no time!"
      ],
      "course_content": {},
      "requirements": [
        "You'll need a PC and an Internet Connection.. thats IT!",
        "No prior knowledge of Amazon Alexa",
        "You dont even need an Amazon Echo Device"
      ],
      "description": "Amazon Alexa Skills is the next big thing!\n***1-on-1 instructor support, LIFETIME access and a 100% money-back guarantee!**\n***YOU ALSO GET MY EMAIL IN CASE YOU NEED ANY HELP*** :)\nLearn how to create an Alexa Skill Flash Briefing - for your business, personal brand, hobby or for fun!\nThe Amazon Alexa Skills Store is an excellent land grab opportunity right now. Its a perfect time to create your Alexa Skill flash briefing before the world starts flocking. The amount of Amazon Echo devices that are in peoples homes is increasing at a massive rate. Amazon is ploughing huge amounts of capital into continual development of Alexa and I truly believe voice and Amazon Alexa is the internet 2.0... don't let this opportunity slip you by!\nI will walk you through the whole process and give you idea's for your Amazon Alexa Flash Briefing.\nI will guide you through the process of creating an Alexa Flash Briefing Skill, from idea concept through to publishing your Alexa Flash Briefing Skill. I believe in practical learning so I will take you through the whole process by DOING not by death by powerpoint!\nCourse Structure\nWhat is a flash briefing and why it matters\nIdea's for your flash briefing\n\nPower of Voice - Amazon Alexa is in millions of homes and will soon be in vehicles, in your fridge, on your washing machine.. everywhere! With Amazon Alexa you can get in front of millions of people\nCreate your flash briefing using your own voice - providing a personalilty to your flash briefing\nUsing Audacity to record your flash briefing\nUploading your flash briefing to Amazon Developer Account\nUsing AWS to upload a text briefing to the skills store\nWhat are you waiting for? I'm looking forward to guiding through the process to creating your Amazon Skill Alexa Flash briefing! :)",
      "target_audience": [
        "Alexa Skills is the next internet 2.0. We should all be creating flash briefings to create content, help our blog, aid our business or personal brand.",
        "Anyone with an interest in Amazon Alexa",
        "Anyone with an interest in Voice First and where the industry is going"
      ]
    },
    {
      "title": "A complete guide to Domain and Web Hosting development",
      "url": "https://www.udemy.com/course/a-complete-guide-to-domain-and-web-hosting-development/",
      "bio": "Complete Domain and Hosting Masterclass for anybody who wants to completely understand what domain web hosting is.",
      "objectives": [
        "Introduction to domain",
        "Introduction to web hosting",
        "How Domain Names Actually Work?",
        "Register the Perfect Domain Name for Yourself or Your Business",
        "Be Able to Explain Web Hosting to Anyone with No Internet Knowledge or Experience",
        "Complete understanding of Cpanel, WHM and WHMCS",
        "Tips and Tricks of Web Hosting and Domains",
        "Understand the Steps Involved in Purchasing a Web Hosting Plan",
        "Identify Major Types of Web Hosting, Plans and providers"
      ],
      "course_content": {},
      "requirements": [
        "You will need a computer or mobile phone and internet browser"
      ],
      "description": "After 10 years of experience in web hosting and the world of online in general, I’ve decided to create this course guide with goal to help people with their journey online and encountering web hosting world. This guide was written to explain web hosting in detail using simple language. Regardless of whom your host is  and what your desires are, this course will show you how to get the most of the hosting account.\n\n\nThis course is for anybody who wants to understand what domains, web hosting and web development is. The course covers a vast area which starts from domains to designing a website, starting your own domain and web hosting reseller business and so on. After doing this course you will have a clear idea about all aspects of web hosting and web development. You will easily be able to design any website and also start your own hosting business. If you are a business owner, you can take this course and you will have an idea about all these web-related services.\n\n\nHow much of this guide should you watch?\nWatch what you want, but to get the most value I recommend watching the whole thing! While you may not watch to apply every section while getting familiar with your hosting provider today, you will get an understanding of how different technologies work.\n\nWeb Hosting Section:\n\nWe conduct an in-depth case analysis of web hosting solutions including: Shared, Virtual Private, Dedicated and Cloud Hosting.\nWe provide an overview of various packages offered by different web hosting companies and weigh the pros and cons of each one.\nStudents are also introduced to the importance of web server scalability and the advantages of cloud hosting over traditional hosting services. We also examine the infrastructure requirements of popular, resource intensive applications such as Netflix and Facebook to emphasize the importance of avoiding costly mistakes in the initial stages of development.\nStudents will gain hands-on experience with the registration process using popular domain registrars. We will provide a comparison of different registrars and register a sample domain name using GoDaddy. Other topics of discussion will include: domain name privacy and administration, auto-renewal, domain forwarding, and name server assignment.",
      "target_audience": [
        "Anybody who wants to design a website or understand the world of web development",
        "Anybody who want to know what domain and hosting are in full details",
        "Your are planning to make (or already have) a website or start a blog",
        "You have access to a computer and have a connection to the internet",
        "You are not a super techy person, but you want to understand the technology",
        "You know the basics of the Internet, Google, websites, and what a web address is"
      ]
    },
    {
      "title": "React and Django: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/react-django-admin/",
      "bio": "Django 3.1, React Typescript, Redux, Docker, Authentication and Authorisation, Upload Images, Export CSV Files, c3.js",
      "objectives": [
        "How to create APIs with Django Rest Framework",
        "Use Docker",
        "Create protected routes",
        "Login with HttpOnly Cookies",
        "Use APIViews, ViewSets, Generic API Views",
        "Authorize users for different routes",
        "Upload Images",
        "Export CSV files",
        "Use React with Typescript",
        "Use Redux"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django": [
          "Installation",
          "Docker",
          "Migrations",
          "Rest API",
          "Models",
          "Serializers",
          "Write Only Fields",
          "Hashing Passwords",
          "Login",
          "Generate JWT Token",
          "Getting the Authenticated User",
          "Logout",
          "Foreign Keys",
          "Fixtures",
          "Getting Permissions",
          "ViewSets",
          "Roles",
          "Related Fields",
          "Completing Roles",
          "Generic Views",
          "Pagination",
          "Update Request Data",
          "Profile",
          "User Permissions",
          "Products",
          "Product Routes",
          "Uploading Images",
          "Orders",
          "Serializer Method Fields",
          "Export CSV",
          "Raw SQL Queries",
          "View Permissions",
          "CORS"
        ],
        "React": [
          "Installation",
          "Template",
          "Components",
          "Router",
          "Child Props",
          "Register Form",
          "Async Await Calls",
          "Redirecting",
          "Login",
          "Logout",
          "Users",
          "Role",
          "Link and NavLink",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Prefilling User Data",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Components",
          "Deleter Component",
          "Creating Products",
          "Uploading Images",
          "Image Component",
          "Updating Products",
          "Orders",
          "Order Items",
          "Export CSV",
          "Chart",
          "Profile",
          "Uploading Profile",
          "Redux",
          "Connect Redux with Components",
          "Typescript Getters",
          "Permissions",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic Python knowledge"
      ],
      "description": "Learn how to create an Admin App using React and Django Rest Framework.\nIn Django you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nUse APIViews, ViewSets, Generic API Views\nAuthorize users for different routes\nUpload Images\nExport CSV files\nIn React you will learn:\nCreate a React project with Typescript\nUse Docker\nUse Redux\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Javascript Developers",
        "Beginner Python Developers"
      ]
    },
    {
      "title": "The Complete Web Development Bootcamp with Go and Gin",
      "url": "https://www.udemy.com/course/go-and-gin/",
      "bio": "Learn to develop web application and web services using Golang",
      "objectives": [
        "Build Web applications and web services using Go and Gin",
        "Interact with database using GORM - A very powerful and popular ORM",
        "Build applications from scratch",
        "Learn various features of the framework like middleware, data binding while building a real application",
        "Learn User authentication",
        "Bootstrap Integration - build responsive pages",
        "Signing using Facebook (Oauth2)",
        "Build custom Middlewares"
      ],
      "course_content": {},
      "requirements": [
        "Programming experience in Golang",
        "A little experience with building web app in any language",
        "Knowledge of MVC is a plus."
      ],
      "description": "The Complete Web Development Bootcamp with Go and Gin is a course for (naive) Go developers to take their first step toward web development. The course starts with a simple web application, then developing CRUD APIs, and then full-fledged applications.\n\n\nThis Bootcamp is the outcome of developing mission-critical web applications and services in Golang (and Gin Gonic). The performance of Go and Gin combo is exceptional. Gin has become one of my favorite frameworks to develop web applications.\n\n\nWhat you’ll learn\nBuild Gin applications\nGORM - ORM package for Golang\nStore data in MySQL.\nBootstrap Integration\nCreate HTML views.\nUse Middlewares\nBuild custom middleware for Authentication\nHow to structure your project\n\n\nHow does this course work?\nI will be developing projects with my screen shared from the very beginning. I recommend you develop these applications with me. This will help you learn and give you a kind of hands-on experience.\nWe will build 3 applications (excluding the 'Hello World' application):\n- A note-taking application with user accounts and authentication.\n- Oauth2 Login using Facebook\n- TODO list manager application with Facebook login.\n\n\nPrerequisites\nA Windows, Linux, or Mac machine. I prefer Linux, this Bootcamp is wholly done on a Linux machine.\nA basic understanding of Golang, and Web development with any language.",
      "target_audience": [
        "Beginner Golang programmer who wants to learn web development using Go."
      ]
    },
    {
      "title": "Deep Dive into Azure Active Directory (Azure AD)",
      "url": "https://www.udemy.com/course/azure-active-directory-in-depth/",
      "bio": "Learn Microsoft Azure Active Directory from Basic to Advanced concepts with real time walkthroughs",
      "objectives": [
        "Learn everything about Azure Active Directory",
        "Learn to create Custom Domain and Managing AD Users",
        "Synchronization of Windows AD with Azure AD",
        "Intrgrating SaaS Gallary applications with Azure AD",
        "Integrating On-Premise Applications with Azure AD",
        "Integrating Azure AD B2B and B2C Collaboration",
        "Working with Graph API"
      ],
      "course_content": {
        "Introduciton and Working with Multiple Directories": [
          "Introduciton and Working with Multiple Directories"
        ],
        "Custom Domain and User Management and RBAC": [
          "Custom Domain and User Management and RBAC"
        ],
        "Domain Controller VM in Azure and Sync with Azure ADP Connect": [
          "Domain Controller VM in Azure and Sync with Azure ADP Connect"
        ],
        "SSO and Integrating SaaS Applications with Azure AD": [
          "SSO and Integrating SaaS Applications with Azure AD"
        ],
        "Integrating Line of Business Applications with Azure AD": [
          "Integrating Line of Business Applications with Azure AD"
        ],
        "Implementing Azure AD B2C Collaboration": [
          "Implementing Azure AD B2C Collaboration"
        ],
        "Azure AD Social Identity Provider Authentication": [
          "Azure AD Social Identity Provider Authentication"
        ],
        "Working with Graph API": [
          "Working with Graph API"
        ]
      },
      "requirements": [
        "Basic knowledge on Cloud Computing and Microsoft Azure",
        "Trial subscription to Azure Portal will help you to learn better (Optional)",
        "Visual Studio 2017 (Optional)"
      ],
      "description": "This will cover the basics and the advanced concepts like\nIntroduction and Working with Multiple Directories\nCustom Domain and Managing AD Users\nAzure Role-based access control\nSynchronizing on-premise AD Identities with Azure AD using ADConnect\nIntegrating Gallery Applications with Azure AD for SSO\nIntegrating On-Premise Applications with Azure AD\nIntegrating Azure AD B2B Collaboration\nIntegrating Azure AD B2C Collaboration\nWorking with Azure Graph API\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer and Certified Azure Trainer having experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry",
      "target_audience": [
        "Windows Administrators working with on-premise Widows Active Directory",
        "Those who wants to move from on-premise AD to Azure AD"
      ]
    },
    {
      "title": "PHP Web Application Development with CakePHP 2",
      "url": "https://www.udemy.com/course/php-web-apps-with-cakephp/",
      "bio": "This course is an introduction to web development with CakePHP 2, the most amazing PHP framework.",
      "objectives": [
        "Understand CakePHP",
        "Understand MVC",
        "Setup an entire Application",
        "JQuery AJAX",
        "Over 20 lectures about the most amazing PHP framework!"
      ],
      "course_content": {
        "Introduction": [
          "Course intro",
          "Introduction to CakePHP",
          "Overview of MVC"
        ],
        "Installation": [
          "CakePHP structure",
          "Setup your own web server",
          "Install CakePHP",
          "CakePHP naming conventions"
        ],
        "Getting started": [
          "Create custom layout",
          "Create Controller"
        ],
        "Models": [
          "Your first model",
          "Get data from Database",
          "Insert data",
          "Data validation",
          "Delete data",
          "Linking models together"
        ],
        "CakePHP Authentication": [
          "Authentication in action"
        ],
        "Explore CakePHP": [
          "Elements in CakePHP",
          "CakePHP Helpers",
          "CakePHP Components",
          "Pagination",
          "Ajax in CakePHP"
        ],
        "Final": [
          "Last word"
        ]
      },
      "requirements": [
        "PHP (basic knowledge)",
        "HTML (basic knowledge)"
      ],
      "description": "This course is an introduction to web development with CakePHP, the most amazing PHP framework. This course will get you up and running with the CakePHP framework in no time, with everything from an introduction to MVC to building a fully-functional application.\nStarting with the basics of installing and configuring CakePHP, you will learn everything from creating a custom theme to custom components developing. We will be diving deep into JavaScript using jQuery to implement AJAX in CakePHP application.\nTime is more valuable than money. I prepared this CakePHP tutorial course to be very effective, so you can learn everything you need to know about CakePHP in less time.\nThis course is for CakePHP version 2.X",
      "target_audience": [
        "People that want to Build as they Learn",
        "Desire to Build Robust and Re-Usable Application Code"
      ]
    },
    {
      "title": "2D Animation with CSS Animations - Complete course, project",
      "url": "https://www.udemy.com/course/2d-animation-with-css-animations-complete-course-project/",
      "bio": "Create 2D Animation with CSS animations (CSS3 methods), interactive examples & projects - hands-on beginner training",
      "objectives": [
        "Create 2D web animations of any kind",
        "Create animations for your and your clients' websites and web apps",
        "Create keyframe animations that can be used in web animation films and videos",
        "Create animation effects that can be used in your web games",
        "Create cool website effects like rotating buttons, multi-color changing elements, moving element animations, etc."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Transforming your website's elements using CSS": [
          "Transformations introduction",
          "Translating elements using CSS3",
          "Translating elements using CSS3 - part2",
          "Translating elements using CSS3 - part 3",
          "Rotating elements using CSS3",
          "Rotating elements using CSS3 - part 2",
          "Scaling elements using CSS3",
          "Skewing elements using CSS3",
          "Matrix property",
          "Adding multiple transformations effects to a single element",
          "Transformation demo files"
        ],
        "Transition Animations in CSS3": [
          "Transition animations introduction",
          "Creating basic transitions",
          "Change more than one property or style during a transition",
          "Using transformations with transitions",
          "Transition example #1 - button",
          "Delaying a transition",
          "Apply speed curves to your transition",
          "Transition example #2 - speed curve",
          "Transition shorthand"
        ],
        "Keyframe animations in CSS3 + 1 mini project": [
          "Keyframe animations introduction",
          "Creating a keyframe",
          "Keyframes with percentages - multiple intermediate states",
          "Multiple animation/style changes with one keyframe",
          "Delaying the keyframe animation",
          "Specifying the number of times the animation should repeat",
          "Speed curve of the keyframe animation",
          "Speed curve - Cubic Bezier funtion",
          "Mini project - Moving ball animation - part 1",
          "Mini project - Moving ball animation - part 2",
          "Direction of the animation",
          "Pausing or running the animation",
          "Animation fill mode property",
          "Animation shorthand property",
          "Applying multiple animations/keyframes on one element",
          "Keyframes example #1 - box animation code",
          "Mini project code files"
        ],
        "Projects - Fish Tank Animation, Card flipping & more": [
          "HTML5 building blocks of the fish tank animation",
          "Finish designing the fish tank animation web page",
          "Animate the fishes using keyframes",
          "Animate the bubbles using keyframes",
          "Project #2 - Card Flipping Project"
        ],
        "Conclusion": [
          "Projects and examples you could try out",
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "A very basic understanding of HTML and CSS"
      ],
      "description": "When you hear the term 2D Animation, especially web animations, you probably imagine complicated Javascript codes, Flash or other hard-to-learn proprietary software programs.\nThat's how it was until a few years ago. You had to spend days, or months mastering complicated software or learning a lot of syntax until you could create decent web animations.\nBut no more!\nCSS3, and along with it, CSS Animations were released a few years ago, and they've have made your learning process MUCH easier.\nIf you know the very basics of HTML and CSS, which anyone who has anything to do with coding/web design does, you're all set.\nSpend a few hours learning a bunch of CSS3 Animation syntaxes, and you'll be creating awesome web effects and keyframe animations in no time at all!\nAnyone can become a web animator now.\n\n\nWhat will you learn in our course?\n1. How to manipulate every single web element of your website - change it's shape, size, position, angle and so much more.\n2. How to create slick animations and transition effects for your web pages - rotating buttons, boxes that automatically change color and size, web elements that move around the web page based on the conditions you give, etc etc.\n3. How to create frame by frame of every single animation effect you want - a ball that moves around your given path, multiple color changes within a specific moving cars,\n4. How to time your animations, delay them, repeat them a certain number of times (even infinite), give multiple states to them, give them custom speeds, etc.\nand so much more!\n\n\nWhere can you apply what you learn from our course?\n1. If you're a freelance web developer/designer, dazzle your clients with animated poups, animated buttons, color changing text and a lot more cool effects like these on your web apps and web pages.\n2. Do you want to create animated scenes? Moving balls, bouncing balls, a scene that depicts a trafficked road...you can do all of that and more by learning how to work with keyframe animations in CSS.\n3. Make your web games more interactive and fun to play by creating awesome transitions and keyframe animations on your characters and game environment.\nAs I said, sky is the limit! You can apply what you learn here anywhere in the web space, in any sphere.\nYour imagination is your only obstacle to how you can animate your web elements with what you learn here.\nHow is this course designed?\nOur course has 3 modules, where each module will thoroughly explain the intricacies of one of the concepts in CSS Animations with a wealth of over-the-shoulder examples.\nHere are the modules:\nModule 1 - Transformations - This is the foundations module. You'll learn how to manipulate your web elements in this module. You'll learn how to move the elements around the web page, rotate them to any angle you want, resize them, skew them and so much more.\nModule 2 - Transition animations - You'll learn how to smoothly transition an element from one state to another in here, so it looks like an animation. Change it's colors, size, position, stylings and so much more based on the conditions you give. You'll also learn to customize the transition animations by delaying them, changing the speed of the animation, changing the duration of the animation and so much more.\nModule 3 - Keyframe animations - A bigger and more important concept. In here, you'll learn how to create frames that depict every single animation you want applied to your web elements. In the duration of the animation, you'll be able to perform multiple changes to your element (multiple style changes, position changes etc). Learn how to give the illusion of movement to create high class animated scenes. Learn how to create real world 2D animation effects by using the various properties and features available in keyframe animations.\n\n\nWe also cover a lot of examples and projects, like:\n1. Animated button that rotates, changes between 2 colors and increases or decreases when hovered on (Transition module).\n2. Animated colored box that alternates between different widths and heights and changes between 4-5 colors in the duration of the animation (Keyframe module).\n3. Moving ball animation mini project - A ball that moves along the inner edges of the ball repeatedly while changing colors, and stops when hovered or clicked on (keyframe module).\n\n\nWhy should you choose our course?\n1. We like to be thorough in our teaching. You'll find everything you need to start creating awesome 2D animations in this course. You won't have to look anywhere else.\n2. We strongly advocate learning by doing, rather than just listening or reading. Our lectures are filled with a wealth of examples that explain every concept clearly.\n3. If you follow along with our examples in our over-the-shoulder trainings, and create the effects along with us, you'll be confident in embarking on the world of 2D web animations by the time you finish our course. You'll be able to confidently add this as a skill in your resume.\n4. We prefer creating fun projects to explain the concepts and to keep things interesting as well. You'll learn how to apply the concepts you learn in the course in these mini projects and examples.\n\n\nSo, what are you waiting for? Enroll now and embark into the wonderful world of CSS aimations.",
      "target_audience": [
        "If you want to learn how to create web animations",
        "If you want to learn an easy shortcut to creating awesome website and web game animations",
        "If you want to learn how to create transforms, transitions and keyframes like the pros do"
      ]
    },
    {
      "title": "MERN Stack ECommerce App - React,Redux,Node,Express,Mongo DB",
      "url": "https://www.udemy.com/course/mern-stack-ecommerce-app-reactreduxnodeexpressmongo-db/",
      "bio": "Build a Complete MERN Stack Ecommerce application from scratch and deploy to Heroku",
      "objectives": [
        "How To Create a New React App",
        "Working with Static JSON Data",
        "Creating Node and Express Server",
        "Mongo DB Atlas and Mongo DB Compass connection",
        "Connecting Node JS and Mongo DB",
        "Working with API End Points",
        "Working with State Management",
        "Working with Redux stores , reducers,actions",
        "Working with Redux Thunk",
        "Add to cart functionality",
        "Updating and deleting items from cart",
        "Checkout Functionality",
        "Stripe payment gateway integration",
        "Connecting stripe to react and node",
        "Working with react-stripe-checkout module",
        "Placing orders",
        "Store orders in database",
        "User Authentication",
        "Working on User profile",
        "Filtering Products by price , category",
        "Products search functionality",
        "Adding reviews to the products",
        "Displaying reviews for the products",
        "Admin panel implementation",
        "Mange users , orders , products with admin panel",
        "Deployment to HEROKU"
      ],
      "course_content": {
        "Introduction": [
          "Promo / Github",
          "User Panel - DEMO",
          "Admin Pane - Demo"
        ],
        "Front End Setup": [
          "Setup React Application",
          "Creating Navbar",
          "Display static data in home page",
          "Adding routes",
          "Product description page",
          "Adding Rating bar"
        ],
        "Backend Setup": [
          "Node JS Setup",
          "Mongo DB Atlas setup",
          "Node JS and Mongo DB Connection",
          "Adding static JSON data in Mongo DB"
        ],
        "Working with Dynamic data": [
          "Creating Product Model",
          "Get all products - POSTMAN",
          "Get all products to Homescreen"
        ],
        "Redux , Actions and Reducers": [
          "Redux state implementation",
          "Bring State to Homepage",
          "Bring state to Product Description page",
          "Bring state to Product Description page - part2"
        ],
        "Add To Cart": [
          "Add to cart Button , Quantity Functionality",
          "Add to cart - Navbar Update",
          "Add to cart - Quantity Update",
          "Add to cart with Local storage",
          "Cart screen design",
          "Update quantity from cart screen",
          "Calcalating cart sub total"
        ],
        "Authentication": [
          "User Registration Design",
          "User Registration Actions and Reducers",
          "User Registration Backend",
          "User Login",
          "Adding current user to state",
          "Updating navbar with after login",
          "User logout",
          "Success , Error , Loading components"
        ],
        "Filtering Products": [
          "Filter Component Design",
          "Filter Component Logic"
        ],
        "Payment Gateway - Stripe": [
          "Stripe Payment Demo",
          "Payment Screen design",
          "Payment actions and reducers",
          "Payment - Backend"
        ],
        "Placing Orders": [
          "Order Model",
          "Placing Order",
          "Loading and Errors in while placing order",
          "Orders Screen Design",
          "Orders Screen Actions and Reducers",
          "Orders Screen update table",
          "Order Info Actions and Reducer",
          "Order Info Design"
        ]
      },
      "requirements": [
        "Javascript Basics",
        "React Basics",
        "Redux and Redux Thunk",
        "Node and Express"
      ],
      "description": "Build a Complete MERN Stack Ecommerce App From Scratch\nThis course is not for any React beginners or Node Beginners. You must have some basic knowledge in React , Redux , Redux Thunk and Node JS.\nIn this course we will implement the following features in the Ecommerce Application.\nCreating React App\nWorking with the static data\nWorking with API End Points\nMongo DB atlas and Compass\nRedux States and Reducers\nRedux Thunk as MiddelWare\nWorking with local storage and Redux store\nAdd to cart Feature\nUpdate Quantity in cart\nDelete Products from cart\\\nUser Authentication\nStripe Payment Gateway\nPlacing orders with stripe\nPlacing Orders\nStore orders in database\nRetrieve Orders to user profile\nUser Dashboard\nAdmin Dashboard\nManage Users , Products , Orders in Admin Panel\nProtected routes for admin panel\nDeployment to Heroku.\nBy the end of the courses you will know how to work with redux states ,reducers, Middelwares including the payment gateway.\n24/7 Q/A Support.\nMERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js frontend framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and really any frontend JavaScript framework can work.\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework, and Node.js the popular and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.",
      "target_audience": [
        "React Developers",
        "Node Developers",
        "MERN Developers",
        "Any one interested in building complex MERN apps from Scratch",
        "Any one interested in building complex Ecommerce Application",
        "Any one interested in building and learning new things :)"
      ]
    },
    {
      "title": "NEW:Angular Material: The full guide using a Spring boot API",
      "url": "https://www.udemy.com/course/master-spring-angular-material-with-a-full-web-application/",
      "bio": "Develop a full stack web application using Spring boot and Angular Material Design",
      "objectives": [
        "Build amazing responsive Angular apps with modern tools like Material and Spring boot",
        "REST API Develpment",
        "Database model design",
        "Angular material web application",
        "Spring framework",
        "Angular framework",
        "Swagger for API documentation",
        "Swagger for Frontend API generation"
      ],
      "course_content": {
        "Before starting": [
          "Follow me to get all the courses and updates!"
        ],
        "Introduction": [
          "Why this course?",
          "What will you learn in the course?",
          "Application demo"
        ],
        "Application resources": [
          "How to setup and run the application",
          "Backend resources",
          "Frontend resources"
        ],
        "The application": [
          "About the course application",
          "Used Technologies",
          "Modeling the application (UML)",
          "The backend architecture",
          "The frontend architecture"
        ],
        "The backend :: REST API": [
          "Create a new Spring boot project",
          "Configure the project",
          "Coding the REST API",
          "Adding the Swagger configuration",
          "Generating the API documentation"
        ],
        "The frontend :: Angular material design": [
          "Create a new angular project",
          "Configure the project",
          "Generate the API services using the Swagger API Doc",
          "Create the components",
          "Create Login / Signup components",
          "Create the TODO-LIST component",
          "Create the services",
          "What is and Why a Guard?",
          "Add and Configure the Routing"
        ],
        "General conclusion": [
          "What comes next?",
          "Bonus!"
        ]
      },
      "requirements": [
        "All you need is your laptop and an internet connection",
        "NO Material Design knowledge is required",
        "Basic knowledge of Java programming language"
      ],
      "description": "Angular is an amazing frontend JavaScript & TypeScript framework with which you can build powerful web applications.\nThere are a lot of courses that dive deeply into Angular but sometimes you just want to build an entire app and see how it all works in practice. And you want to use all these great third-party packages that can add a lot of awesome functionalities to your Angular app!\nThis course covers exactly that!\nWe'll build an entire, realistic app which looks absolutely beautiful, uses Google's Material Design and is extremely fast! Thanks to Spring framework, we'll add real-time database functionalities and see our updates almost before we make them!\n\n\nWhat are you waiting for, this is what you'll get in detail:\nA realistic full app that uses many Angular Material components\nExamples for components like Sidenavs, Cards, Forms, ...\nA real-time database connection powered by Spring boot\nGenerating the API documentations, so no need to write it your self on the frontend side\nAnd so much more!\nThis course will allow you learn and have your first hands-on Spring boot framework and implement a full RESTFUL API\nThis course is for you if you want to practice Angular, want to see it in action or want to learn it with the help of a 100% practical project!",
      "target_audience": [
        "You want to learn how to develop a full stack application -> Here is the place"
      ]
    },
    {
      "title": "Hands-On Django 2",
      "url": "https://www.udemy.com/course/hands-on-django-2/",
      "bio": "Create Secure Modern Websites with Django 2, Python 3, and Anaconda",
      "objectives": [
        "Learn to use Django 2 with Anaconda, VS Code, and Python 3.7.",
        "Build a Django 2 Starter kit that you can use to streamline all future Django development."
      ],
      "course_content": {},
      "requirements": [
        "Students should be at least somewhat familiar with HTML, CSS, Python, Databases, and writing code in general."
      ],
      "description": "Django is a wildly popular framework for building modern, secure websites and web applications with the Python programming language. In this course you'll learn to use Django as an absolute beginner, using Anaconda as your work environment, and VS Code as your code editor. The site you create includes a database. You'll learn to create pages to allow users to add, view, edit, and delete database data using just a few lines of code. You will end up with a generic Django application that you can use for all future Django development, where much of the work is already done for you.",
      "target_audience": [
        "Web developers who are looking for modern secure web development tools and frameworks."
      ]
    },
    {
      "title": "Build Professional Websites with Joomla Gantry",
      "url": "https://www.udemy.com/course/build-professional-websites-with-joomla-gantry/",
      "bio": "Earn Thousands each Month Building Websites with all Free Tools",
      "objectives": [
        "Build professional website using all of the tools available in Joomla. We start with nothing, add Joomla, Gantry, and finish with a completed website."
      ],
      "course_content": {
        "New Added Videos": [
          "Adding A Contact Module Page With Links"
        ],
        "Introduction": [
          "Installing Joomla Gantry",
          "Introduction to the Layout Manager",
          "Deleting items form the Layout",
          "Understanding the Base Outline",
          "What are particles?",
          "Adding a Great Editor to make creation even easier",
          "Using JCE Editor",
          "Resizing an image using PIXLR",
          "Beginning a New Website",
          "Adding Tools to Your Joomla Installation",
          "Adding an Unrelated but important tool to your arsenal",
          "Creating Google Docs and Forms to add to your website",
          "Embedding Google Docs in your website",
          "Cleaning up the Menu",
          "Adding Articles to the Menu",
          "Adding a Static Calendar",
          "Arranging Menu items",
          "Adding an Mp4 Video",
          "Adding Contacts",
          "Creating Buttons with Gimp",
          "Adding Buttons to the Menus Area",
          "Changng the Logo",
          "Add a Logo using a Custom Module",
          "Creating Photos for the Slider",
          "Completing the Image Slider",
          "Creating a Video for the Background",
          "Creating a slideshow using PRI Background Module",
          "Creating a Video using the Free Open Shot Editor",
          "Adding the Newly Created Video",
          "Cleaning Up Unused Modules",
          "Changing the Copyright Area",
          "Finishing Touches",
          "Backing Up Joomla"
        ]
      },
      "requirements": [
        "Must have an internet connection"
      ],
      "description": "Description\nThis course will take you from absolutely no knowledge of web development to creating a professional website. Amazingly, this course uses all free tools with the exception of a web hosting account should you choose that method rather than a free WAMP install. You will learn which tools to install and how to use them. Take this class to learn step by step from a seasoned professional.\nWhat will I learn?\nLearn to Build professional Websites with Joomla Gantry from the comfort of your home or office\nThis course is designed for a total novice, but also explains information every professional needs\nAt the end of this course You will be ready to build websites for yourself and even other clients!",
      "target_audience": [
        "Anyone who wants to learn How to Build a Professional Website"
      ]
    },
    {
      "title": "JavaScript ES6 : The Next Level",
      "url": "https://www.udemy.com/course/javascript-es6/",
      "bio": "Learn the all new cool features of ES6 - EcmaScript version 6 and see how it enhances JavaScript furthermore.",
      "objectives": [
        "Learn the new features introduced in ES6",
        "Understand the difference between ES6 features and ES5",
        "Learn how to setup and run ES6 using tools like Babel & Traceur",
        "Learn a bit about GRUNT,Browserify as well",
        "Be ahead of your peers by learning the new technology"
      ],
      "course_content": {
        "Introduction and Basic Setup": [
          "Introduction",
          "Setting up ES6",
          "Setting up ES6 - Transpiler [TraceUR]"
        ],
        "Block Bindings": [
          "The let keyword",
          "Variable Hoisting"
        ],
        "Arrow Functions": [
          "Arrow functions",
          "Destructured Assignment"
        ],
        "Parameters": [
          "Default Parameters",
          "Rest Parameters",
          "Spread Operator",
          "Proper Tail Calls"
        ],
        "Destructuring Parameters,Arrays and Objects": [
          "Destructured Parameters",
          "Destructuring Arrays",
          "Destructuring Objects"
        ],
        "iterators": [
          "for..as"
        ],
        "Generators": [
          "Generators"
        ],
        "Collections": [
          "Sets",
          "Maps",
          "Symbols",
          "WeakMaps"
        ],
        "Template Strings": [
          "Template Strings"
        ],
        "Promises": [
          "Introduction",
          "More on Promises"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is required"
      ],
      "description": "This course is all about exploring the cool and new features of ES6 - EcmaScript version 6.\nThe course is specially designed for front end developers and designers who have interest in javascript and who want to be ahead of their peers by learning the new features of this amazing language.\nThe course covers all the new features/topics in a practical manner with each topic being demonstrated by code samples which you can see in action by easily running them via popular browsers like firefox and chrome.\nThe course covers following topics\n1. Introduction and Basic Setup of ES6\n2. Block Bindings which covers Let and Variable Hoisting\n3. Arrow Functions\n4. Parameters & Their Types\n5. Destructuring Parameters\n6. Iterators\n7. Generators\n8. Collections\n9. Template Strings\n10. Promises\n11. Classes\n12. Modules\nAt the end of the course you will be well versed with all the concepts/features of ES6\nSo let's get started with ES6",
      "target_audience": [
        "Aspiring Web Developers",
        "Web Developers",
        "Web Designers",
        "Web Architects"
      ]
    },
    {
      "title": "Master Javascript & jQuery",
      "url": "https://www.udemy.com/course/master-javascript-jquery/",
      "bio": "Learn everything about JavaScript and jQuery",
      "objectives": [
        "Become a master in javascript and jQuery"
      ],
      "course_content": {},
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "This course covers basic to advance topics in javascript and jQuery\nAll the chapters are delivered via High resolution videos in an easy to understand way\nCode for each excercise demonstrated is also included for easy reference\n\nThe course starts from introduction of javascript and covers all the topics which are relevant in todays programming scenario\nThe course is structured in such a way that its very easy to follow for students of all levels\n\nAt the end of this course you will know everything about javascript and jQuery that matters the most\n\nSo hurry up start learning today.",
      "target_audience": [
        "Web Developers",
        "Web Designers",
        "Aspiring Web Developers"
      ]
    },
    {
      "title": "Cucumber Selenium WebDriver TypeScript Automation Framework",
      "url": "https://www.udemy.com/course/build-a-cucumber-selenium-typescript-automation-framework/",
      "bio": "Learn how to develop a world class Cucumber, Selenium Webdriver & TypeScript automation framework from the ground up.",
      "objectives": [
        "Setting up your local development environment.",
        "Build and run our own locally running react application.",
        "Creating our first automation test with Cucumber, Selenium & TypeScript.",
        "Executing your automation test on your locally running application.",
        "Deep dive into our first test and understand tagging, regex, step linking, cucumber params, element locators, developer tools and hooks.",
        "Adding your own unique element identifiers to the application code to enable more automation scenarios.",
        "Setting up our automation framework to produce screenshots on test failure.",
        "Implement Cucumber World to enable us to pass global variable and configuration within each scenarios separated context.",
        "Leverage ENV files for better environment variable management.",
        "Implement dynamic test configuration to provide more flexibility when running our cucumber scenarios.",
        "Defining our element, page and host mappings in page specific .json files.",
        "Introduce our own custom waitFor() function to add stability to our automation framework.",
        "Adding a common ENV file to house all our common configuration across our automation framework.",
        "Setup cucumber html reporter to report on our test suite results.",
        "Reuse our waitFor to help stabilise and validate page has loaded before moving onto the next step.",
        "Advanced debugging techniques leveraging chrome developer tools, console logs and break points.",
        "Automating Links, Buttons and Elements at specific index.",
        "Automating Tables and asserting on an exact match between our Cucumber DataTable and the UI.",
        "Automating Switches, Cards & Avatars.",
        "Automating Drop Down Menus and Select Boxes.",
        "Adding the ability to refresh our page during an automation test.",
        "Automating Browser Alerts, Page Alerts and Tooltips.",
        "Automating Text Areas and Hidden & Visible Text.",
        "Automating stored values and expected values.",
        "Preparing our automation suite for production Automation Suite Runs.",
        "Running our automation on a production environment.",
        "Storing login details in environment specific ENV files.",
        "Leverage Example Tables from Cucumber to run scenarios on specific environments.",
        "Emulate devices resolution during automation text execution.",
        "Introduce the ability to customise our console logs for errors, logs and debug and off.",
        "Adding the ability to customise our automation failure errors.",
        "Leverage random data in our automation suite form steps.",
        "Demonstrate how quickly automation can be added with our world class automation framework.",
        "Tagging our suite for @smoke and @regression in preparation for CI.",
        "Implement an accessibility automation testing suite across our react application.",
        "Produce detailed accessibility improvement reports as well as fix some issues ourselves.",
        "Pushing our project containing our automation framework to GitHub.",
        "Implementing Selenium Hub (Grid) to orchestrate our automation test execution in parallel.",
        "Get our automation tests running on pull request and in CI (Continuous Integration)",
        "Develop and grow your understanding of TypeScript across the entirety of the course.",
        "Implement Advanced Object Orientated Design Patterns and Separation of Concerns."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why does building a robust automation framework matter"
        ],
        "Your first automation test": [
          "Getting started with Node.js",
          "Setting up your development environment",
          "Setting up your development environment - VSCode",
          "How to clone repositories in GitHub",
          "Setting up your automation framework - part 1",
          "Setting up your automation framework - part 2",
          "Setting up your automation framework - part 3",
          "Setting up your automation framework - part 4",
          "Key Learnings",
          "Module 2 Quiz"
        ],
        "Deep diving into our first automation test": [
          "Running your automation test in IntelliJ using an NPM configuration",
          "Cucumber Scenario @tags - @dev, @smoke & @regression",
          "Understanding regex, step linking and passing parameters via Cucumber steps",
          "Working with element locators - part 1",
          "Working with element locators - part 2",
          "Understanding hooks and browser capabilities",
          "Key Learnings",
          "Module 3 Quiz"
        ],
        "Screenshots on failure, Cucumber World, ENV variable management and test reports": [
          "Adding screenshots on failure to our hooks",
          "Introducing Cucumber World – Separate Context Scenarios - part 1",
          "Introducing Cucumber World – Separate Context Scenarios - part 2",
          "Introducing Cucumber World – Separate Context Scenarios - part 3",
          "Introducing Cucumber World – Separate Context Scenarios - part 4",
          "Introducing Cucumber World – Separate Context Scenarios - part 5",
          "Dynamic test configuration – A more flexible cucumber.js",
          "Updating our npm configuration in Intellij",
          "ENV files for better environment variables management",
          "Cucumber Reporter and our first Dynamic Test Runner script - part 1",
          "Cucumber Reporter and our first Dynamic Test Runner script - part 2",
          "Windows users (REQUIRED) - Adding your run_tests.bat to run your automation",
          "Running your automation suite with npm instead of yarn",
          "Key Learnings",
          "Module 4 Quiz"
        ],
        "Host URLS and Page ROUTE mappings, Our WaitFor function & first End to End test": [
          "Creating Mappings (Host and Pages) - part 1",
          "Creating Mappings (Host and Pages) - part 2",
          "Creating Mappings (Host and Pages) - part 3",
          "Creating Element Mappings and using Global Variables to pass page - part 1",
          "Creating Element Mappings and using Global Variables to pass page - part 2",
          "Creating Element Mappings and using Global Variables to pass page - part 3",
          "Introducing custom WaitFor() – Removing chai - part 1",
          "Introducing custom WaitFor() – Removing chai - part 2",
          "Introducing custom WaitFor() – Removing chai - part 3",
          "Key Learnings",
          "Module 5 Quiz"
        ],
        "WaitFor our Page to be loaded - Simple Form Interactions": [
          "Matching our page URL to our expected route REGEX",
          "Determining our page by matching regex - part 1",
          "Determining our page by matching regex - part 2",
          "Determining our page by matching regex - part 3",
          "Determining our page by matching regex - part 4",
          "Introducing Form Steps - Our first end to end test - part 1",
          "Introducing Form Steps - Our first end to end test - part 2",
          "Introducing Form Steps - Our first end to end test - part 3",
          "Introducing Form Steps - Our first end to end test - part 4",
          "Key Learnings",
          "Module 6 Quiz"
        ],
        "Taking a pause - Lintrc & Debugging Tools": [
          "Introducing lintrc to our automation framework",
          "Unlocking the benefits of chrome developer tools - part 1",
          "Unlocking the benefits of chrome developer tools - part 2",
          "Unlocking the benefits of chrome developer tools - part 3",
          "Console logs, Breakpoints and Test reports",
          "Key Learnings",
          "Module 7 Quiz"
        ],
        "The Playground - Automating all the things - Part 1": [
          "Automation Test Radio Buttons - Check and Uncheck - part 1",
          "Automation Test Radio Buttons - Check and Uncheck - part 2",
          "Introducing Negate to reduce duplication of step definitions - part 1",
          "Introducing Negate to reduce duplication of step definitions - part 2",
          "Automation test AutoComplete inputs, Input values and form validation - part 1",
          "Automation test AutoComplete inputs, Input values and form validation - part 2",
          "Automation test AutoComplete inputs, Input values and form validation - part 3",
          "Automation test AutoComplete inputs, Input values and form validation - part 4",
          "Running our automation suite in parallel & Introducing test retry",
          "Key Learnings",
          "Module 8 Quiz"
        ],
        "The Playground - Automating all the things - Part 2": [
          "Automation test Checkboxes (Check and Uncheck)",
          "Automating IFrames - Switching Frames mid test - part 1",
          "Automating IFrames - Switching Frames mid test - part 2",
          "Automating IFrames - Switching Frames mid test - part 3",
          "Automating IFrames - Switching Frames mid test - part 4",
          "Refactoring our existing assertion step definitions for element stable",
          "Automating New Tabs and Windows - part 1",
          "Automating New Tabs and Windows - part 2",
          "Automating New Tabs and Windows - part 3",
          "Automating New Tabs and Windows - part 4",
          "Automating New Tabs and Windows - part 5",
          "Key Learnings",
          "Module 9 Quiz"
        ],
        "The Playground - Automating all the things - Part 3": [
          "Automating Links, Buttons and Clicking element at Index - part 1",
          "Automating Links, Buttons and Clicking element at Index - part 2",
          "Automating Links, Buttons and Clicking element at Index - part 3",
          "Automating Links, Buttons and Clicking element at Index - part 4",
          "Automating Tables - Matching our HTML table to Cucumber Data Table - part 1",
          "Automating Tables - Matching our HTML table to Cucumber Data Table - part 2",
          "Automating Switches - low code / no code",
          "Key Learnings",
          "Module 10 Quiz"
        ]
      },
      "requirements": [
        "The course has been designed to take you from beginner to expert in building a world class automation framework.",
        "You can complete this entire course on MAC, Windows on Linux."
      ],
      "description": "This course has been designed to simulate a real-world experience in building a Cucumber, Selenium Webdriver (Version 4.1+ Latest) & TypeScript automation framework from the ground up for a fully-featured application.\nUpon completion, you will be able to apply your learnings and the automation framework you have built into your respective companies and projects. We are confident you will become an expert in building a world-class automation framework.\nOur course and the automation framework we will build together has been developed with guidance from some of the globes leading testing and software engineering professionals and because of that we believe we can offer an incredible course where we will:\n- Develop your automation framework against a real react application running on your local machine.\n- Build an end-to-end automation framework from the ground up for a full-featured end-to-end react application.\n- Evolve your skills and continuously improve your automation framework as we progress through the course\n- Learn how to build an object-orientated – engineer reviewed and approved automation framework.\nWe want this course to be the best decision you have ever made for your personal growth when it comes to improving your knowledge and skills in test automation framework architecture.\nAcross 170 lectures, 19 Quizzes and 22+ hours of exciting content I will be at the bottom right of your screen instructing and cheering you along throughout the course. You will have everything you need to learn how to build a world-class automation framework.",
      "target_audience": [
        "Automation Engineers",
        "Software Testers",
        "Software Engineers",
        "IT Professionals"
      ]
    },
    {
      "title": "React Beginner Challenges - 25 Debugging Exercises",
      "url": "https://www.udemy.com/course/react-beginner-challenges/",
      "bio": "Never get stuck on bugs again! Master debugging and 25 scenarios with React, Redux, Material-UI, React-Select and more!",
      "objectives": [
        "Solve any React bug with 5 simple steps",
        "Understand how code works without being an expert",
        "Master must-know tools for JavaScript developers",
        "Dive into open-source libraries like Redux and Material UI",
        "Practice with 25 Beginner to Advanced React Debugging Exercises",
        "Go-at-your-own pace with coding exercises that require no installation",
        "Find and fix source code with Chrome DevTools",
        "Troubleshoot network requests",
        "Fix weird or unfamiliar bugs quickly and painlessly"
      ],
      "course_content": {},
      "requirements": [
        "IMPORTANT: This is a course to practice and master debugging React apps, NOT a complete overview of getting started with React apps. You should ideally take a course to learn the basics of React and JavaScript prior to taking this course."
      ],
      "description": "Instantly Understand How Your React Application Really Works!\nA Complete Guide to Debugging JavaScript and React\nDear student,\nWeb Development is hard.\nReally hard.\nLike, pulling your hair out, getting stuck for days or just giving up and finding another career hard.\nAnd, there's really only one reason for that:\nThe exact set of skills to be successful in the real world isn’t documented anywhere.\nThere is one skill that developers almost never share:\nWhat to do when you get stuck on an error message or bug?\nAfter collecting data on 2 years of course enrollments, we found that over 90% of our questions could have been resolved if the student had learned basic JavaScript and React debugging.\nMany students want to dive head first into React development. They follow a code-along tutorial but then inevitably are stuck forever and give up when the instructor doesn’t answer their question.\nIf you ever ran into a broken application and no idea what to do, and struggled to find help.. This course is for you!\nIntroducing our new course:\nReact Beginner Challenges - 25 Debugging Exercises\nUnlike our other courses, here we do not rush into building an application. Instead, we first review a complete guide to debugging React and JavaScript applications.\nBy “complete\" debugging strategy, we mean that seriously. Every tool or skill that you need to debug frontend applications is found in this course:\nFind and fix source code with a full overview of Chrome DevTools\nUnderstand how to track down where error messages come from and what they mean\nHow to examine the state of your React app from any point in your app\nEasily find and research any JavaScript or React library\nHow to debug Material UI, Redux, charting libraries, and more\nBest of all, in this course, we created 25 debugging exercises to test your skills. Each exercise comes with its own CodeSandbox link so you can jump into debugging for yourself. So you don’t need to install anything to run the exercises in this course.\nI’m confident that if you take even half of this course, you will stop struggling with bugs and focus on actually building applications!\nNote: This course assumes you already know some very basic information about React. It shouldn't be your very first React tutorial. It's ideal for beginners who have just started out and are either stuck or struggling with a project.\nAccess 25 Debugging Challenges with complete video solution tutorials\nWith these 25 bugs, you'll get more than enough practice solving real-world issues.\nEliminate your fear of React errors and bugs!",
      "target_audience": [
        "Beginner level React or JavaScript developers who feel stuck",
        "Frontend web developers looking to understand JavaScript debugging"
      ]
    },
    {
      "title": "Learn Full Stack Rust Programming using AXUM, Yew, and SQLx",
      "url": "https://www.udemy.com/course/learn-full-stack-rust-programming-using-axum-yew-and-sqlx/",
      "bio": "Frontend and Backend Rust programming: We will build a Rust Web API using AXUM and Postgres and frontend using Yew",
      "objectives": [
        "Why use Rust programming language for full stack web app development in 2023 and beyond?",
        "Rust language basics like variables, functions, data types, control flow, structs, enums, using json, hashmaps, modules, ownership and borrowing in rust",
        "Build a fully functional CRUD API using AXUM, SQLx and Postgress",
        "Build a fully functional Frontend in rust using the Yew framework (Yew looks like ReactJS, but in Rust)",
        "Following popular demand: link to source code provided at the end of the course."
      ],
      "course_content": {},
      "requirements": [
        "Basic software programming skills in any programming language",
        "Familiarity with Javascript, Typescript or Python is helpful, but not a requirement"
      ],
      "description": "You will build a full-stack web app using the rust programming language. We will be building a fully functional CRUD Server API using AXUM, SQLx, and Postgres. Then we will build a fully functional frontend in rust using the Yew framework (Yew looks like ReactJS but in Rust). We will then connect the front end and the back end to run from the same port/URL. You will learn how to create Yew components, routing, create forms and handle GET and POST requests using the rust reqwest crate in the front end. This course is good for developers who already know at least one programming language and have some web development experience. It is not a course for folks who are completely new to programming.\nRust is the most loved programming language for the past several years according to StackOverflow. All the big tech companies are now using rust and a lot of startups are using rust. More so, a lot of the newer blockchain projects are building with rust. The rust programming language is growing very rapidly.\nThis course will help you start developing in rust very fast, as you will build a real full-stack app. You can use the concepts to expand your rust dev options.\nThe course is divided into 3 main sections. Section 1 is an intro to rust. You can skip this section if you are already familiar with the material. Section 2 will cover the Server API dev using AXUM and section 3 covers developing frontend apps using the popular Yew framework.\nFull source code provided at the end of the course.",
      "target_audience": [
        "This course is for software engineers who would like to learn the rust programming language, by building a real world project"
      ]
    },
    {
      "title": "Web Development with BootStrap - 16 Instant Themes Included!",
      "url": "https://www.udemy.com/course/bootstrap-course/",
      "bio": "Learn BootStrap 3 by using, editing and reverse engineering our awesome BootStrap templates. Over 15 themes included!",
      "objectives": [
        "Understand the main components of Twitter Bootstrap 3, and how to use them like a ninja",
        "Use our customizable templates to quickly launch your own awesome, mobile-responsive website with very little effort",
        "Get a complete, meaningful overview of CSS frameworks and how to use them effectively"
      ],
      "course_content": {
        "Intro: 5 Awesome Ways This Course is Different!": [
          "Intro: 5 Awesome Ways This Course is Different!",
          "Preview: Main Course Template + 15 \"Snap On\" Themes",
          "Bonus Worth $259 - Complete This Course and Get It!"
        ],
        "Course Materials & Setup Instructions": [
          "Download The Coplete Course Materials Here",
          "Recommended HTML Editor for This Course",
          "Setup & Configure Coda for Mac",
          "How to Use Your Awesome Course Materials",
          "Course Materials CSS - How to Modify The Styles",
          "Bootstrap 2 vs Bootstrap 3 - Key Differences"
        ],
        "Mastering Basic Components in Bootstrap": [
          "Create a Basic Grid - Container, Rows and Columns",
          "Create Nested Grids for Advanced Layouts",
          "Create Offset Grids to Align Content",
          "Create Headlines That Pop with Jumbotrons",
          "Working with Heading Tags (H1 - H6)",
          "Font Awesome - 560+ Icons to Make Your Site Pop",
          "Creating an Attractive List with Font Awesome",
          "Styling Responsive Images with CSS in Bootstrap",
          "Create a Simple Button With Size & Color Options",
          "Multiple Buttons: Create Button Groups & Toolbars",
          "Creating Breadcrumbs, Pagination & List Item",
          "Adding Labels, Badges, Wells & Alerts to Your Content",
          "Wrapping & Styling Code Snippets",
          "Creating & Styling Responsive Tables for Data",
          "Creating Panels & Styling for Multiple Uses",
          "Embedding Responsive YouTube Videos & Google Maps",
          "Creating a Basic Tab / Pill Navigation",
          "Adding Content to Tabs & Making Them Work",
          "Final Exam - Get Your Scores!"
        ]
      },
      "requirements": [
        "You will need basic knowledge of HTML and CSS before taking this course",
        "This course is paced at \"medium to slow\" and intended for absolute beginners - if you're an advanced developer, feel free to modify the speed of the video or skip over stuff"
      ],
      "description": "Learn how to create beautiful mobile-first websites with Bootstrap 3. Built for beginners, and easy to follow!\nThe main component of this course is our collection of 16 reusable basic BootStrap templates that you can quickly copy and paste into your own projects to create amazing mobile-first websites - even if you have very little knowledge in working with CSS frameworks!\nOf course, I also explain the basic elements of Twitter BootStrap 3, so you can experiment and hack the provided code to bits if you so wish to! I developed this as a fun, digestable course for beginners, but I believe intermediate students can still find amazing value.",
      "target_audience": [
        "Anyone who wants to build mobile-responsive websites easily",
        "Non-geek entrepreneurs who want an easy way to prototype their ideas for a website or application"
      ]
    },
    {
      "title": "React for Beginners: Build an App, & Learn the Fundamentals",
      "url": "https://www.udemy.com/course/react-for-beginners-build-an-app-and-learn-the-fundamental/",
      "bio": "All React, No Distractions. This course will stick to the fundamentals, and guide you through creating your first app",
      "objectives": [
        "A solid foundation of React fundamentals that will prepare you for more advanced topics",
        "How Component state, props, and lifecycle methods work",
        "How React renders to the DOM and manages updates",
        "How to work with forms in React",
        "How to create your first fully functioning React application",
        "Plus more..."
      ],
      "course_content": {},
      "requirements": [
        "JavaScript, HTML, and CSS fundamentals are required",
        "Not required, but experience with JavaScript ES6+ is beneficial",
        "No prior experience with React is required"
      ],
      "description": "A lot of React newcomers tend to get hung up on external dependencies like webpack, and redux. While tools like this are great they tend to add additional complexity when starting out.\nIn these lessons I will be avoiding all these distractions, and sticking to React fundamentals, and guiding you through the creation of your first app.\nSome of the topics covered include:\nElements and Components\nWorking with JSX\nState and Lifecycle\nWorking with Forms\nCreating Dumb/Stateless Components\nBuilding your first App\nIn addition to the above I’ve also included two bonus videos on React rendering, and updates. If you have ever wanted to learn a bit about how React works under the hood these are for you.\nAfter taking this course, you’ll have a solid foundation in the fundamentals of React, and will be confident enough to move onto more advanced topics, which I hope to cover in future courses.",
      "target_audience": [
        "Students with little to no experience with React",
        "Students who want to learn how React works under the hood",
        "Students who want to build their first React app",
        "Students who want to build single page applications"
      ]
    },
    {
      "title": "Web Projects: 40 Projects to Build Your CV",
      "url": "https://www.udemy.com/course/web-projects-40-projects-to-build-your-cv/",
      "bio": "Build web projects with modern HTML, CSS, and JavaScript for your dream portfolio.",
      "objectives": [
        "You will master languages with 40 web projects.",
        "Get prominent in job postings thanks to your projects.",
        "Design stunning projects for your portfolio",
        "Become an advanced HTML , CSS and JAVASCRİPT developer"
      ],
      "course_content": {
        "Html - Css": [
          "Important Note",
          "Intro",
          "Subscription-Form",
          "Tabs",
          "ScrollBar",
          "Accordion Pages",
          "Menu",
          "Kinetic Loading",
          "Card",
          "Rotating Text",
          "Pricing Cards",
          "Profile Card"
        ],
        "Html - Css - Javascript": [
          "Dark Mode",
          "Random Quote Generator",
          "Todo App",
          "Clock",
          "Button",
          "Animated Circles",
          "Color Board",
          "Gradient Color Generator",
          "Stopwatch",
          "Captcha Generator",
          "Auto Text",
          "Booklist",
          "Copy And Move",
          "Emoji Generator",
          "Popup Form",
          "Progress Steps",
          "Dictionary App",
          "Calculator",
          "Rounded Navbar",
          "Weather Forecast",
          "Calculator-2",
          "QR Code Generator",
          "Calendar",
          "3D Navbar",
          "Google Dinosaur Game",
          "Tic Tac Toe",
          "Pomodoro",
          "Password Generator",
          "Loan Generator",
          "Real-Time Character Counter"
        ]
      },
      "requirements": [
        "You need to know html css and javascript languages",
        "You don’t need to buy any software",
        "One computer"
      ],
      "description": "Ladies and gentlemen, welcome to the new course. In this course, we are developing 40 wonderful projects using HTML, CSS, and JavaScript languages for you. We have a total of 40 projects, and all lessons are taught in English. If you have any questions, you can message me privately at the end of the video. After completing this course, you will have mastered HTML, CSS, and JavaScript languages. You will also have finished 40 projects for your portfolio and will always stand out in job listings. If you wish, you can share your projects on GitHub. So why are we learning HTML, CSS, and JavaScript? Because HTML, CSS, and JavaScript are currently some of the most important web development languages in the world. Additionally, learning JavaScript thoroughly will be very useful in the future for learning frameworks like React and Angular.\n\n\nWhat is HTML?\nHypertext Markup Language is the standard markup language used to create web pages. This language, which is indispensable for websites, serves as a framework.\nWhat is CSS?\nCSS is used for styling the HTML structure, making it visually appealing.\nWhat is JavaScript (JS)?\nJavaScript is a programming language used in conjunction with HTML and CSS. More than 97% of websites use JavaScript on the client side for web page interactivity. It enables websites to become dynamic and interactive.",
      "target_audience": [
        "Students who want to enter the world of web development",
        "Students who want to consolidate the software languages they learn"
      ]
    },
    {
      "title": "Cognitive App Development with IBM Watson",
      "url": "https://www.udemy.com/course/ibm_watson/",
      "bio": "ChatBot,Text to Speech,Speech to Text,Visual Recognition,Tone Analyzer,Personality Insights ,Language Translator,NLU/C",
      "objectives": [
        "Cognitive Computing and how Watson changes the game",
        "Using Watson Visual Recognition to tag and classify visual content using machine learning",
        "Capabilities of the Watson API and how to choose the best features for your task",
        "Using Watson Assistant to build an AI assistant(ChatBot)",
        "Using Watson Watson Discovery to unlock hidden values to find answers , monitor trends and surface patterns",
        "Using Watson Natural Language Understanding for advanced text analysis",
        "Using Watson Knowledge Studio to discover meaningful insights in unstructured text.",
        "Using Watson Speech to Text to easily convert audio and voice into written text",
        "Using Watson Text to Speech to convert text into natural-surrounding audio",
        "Using Watson Language Translator to translate from one language to another",
        "Using Watson Natural Language Classifier to interpret and classify natural language with confidence",
        "Using Watson Personality Insights to predict personality characteristics through text",
        "Using Watson Tone Analyzer to understand emotions and communications style in text"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How IBM Watson Works",
          "IBM Bluemix Dashboard"
        ],
        "IBM Watson Assistant": [
          "IBM Watson Assistant Overview",
          "IBM Watson Assistant Practical"
        ],
        "IBM Watson Discovery": [
          "IBM Watson Discovery Overview",
          "IBM Watson Discovery Practical"
        ],
        "IBM Watson Knowledge Studio": [
          "IBM Watson Knowledge Studio Overview",
          "Knowledge Studio (Custom model for NLU)"
        ],
        "IBM Watson Language Translator": [
          "IBM Watson Language Translator Overview"
        ],
        "IBM Watson Natural Language Classifier": [
          "IBM Watson Natural Language Classifier Overview",
          "IBM Watson Natural Language Classifier Practical"
        ],
        "IBM Watson Natural Language Understanding": [
          "IBM Watson Natural Language Understanding Overview",
          "IBM Watson Natural Language Understanding Practical"
        ],
        "IBM Watson Personality Insights": [
          "IBM Watson Personality Insights Overviews",
          "IBM Watson Personality Insights Practical"
        ],
        "IBM Watson Speech to Text": [
          "IBM Watson Speech to Text Overview",
          "IBM Watson Speech to Text Practical 1",
          "IBM Watson Speech to Text Practical 2"
        ],
        "IBM Watson Text to Speech": [
          "IBM Watson Text to Speech Overview",
          "IBM Watson Text to Speech Practical 1",
          "IBM Watson Text to Speech Practical 2"
        ]
      },
      "requirements": [
        "Nothing required at all! but if you have a background in computer science or development, it would be beneficial, but not required at all."
      ],
      "description": "In year 2011, a news went viral and still it is used to create a picture of cognitive world. That news in which Brad Rutter and Ken Jennings, two of the sharpest and fastest thinking human beings at that time, were defeated by IBM Watson in the game of Jeopardy!\nIf you are a Marvel fan, you are likely familiar with Iron man a.k.a Tony Stark's J.A.R.V.I.S to gather all the information and helping him with all diagnostic and operation works. Yes, IBM Watson is real world J.A.R.V.I.S.\nAfter reading all these things, you might not believe that it is possible or it's just a vague. But you'll be shocked to know that IBM Watson defeat the human counterpart not by its impressive speed, but also improving confidence score after every answer and then the time comes when Watson had the right answer on the board, with a high confidence score, so it rings the buzzer and wins.\nWelcome to the world of cognitive world. The day is not so far when the terminator movie we'll watch altogether in the real world.\nNow you might have the curiosity to know about cognitive computing? How it works ? And many more such interesting questions.\nIn this course, you will not learn about cognitive computing with IBM Watson but also use IBM Watson to create your own cognitive service just like JARVIS\nRequirement : A IBM Bluemix cloud account\nWatson Cognitive Services like\nWatson Assistant  -> Build and deploy chatbots and virtual assistants.\nWatson Discovery  -> Uncover connections in data by combining automated ingestion with advanced AI functions.\nWatson Speech to Text  (STT) ->Easily convert audio and voice into written text.\nWatson Text to Speech (TTS)  ->Convert written text into natural-sounding audio in a variety of languages and voices.\nWatson Language Translator  ->Dynamically translate news, patents or conversational documents.\nWatson Natural Language Classifier  ->Interpret and classify natural language with confidence.\nWatson Natural Language Understanding -> Analyze text to extract metadata from content such as concepts, entities and sentiment.\nWatson Visual Recognition  ->Tag, classify and search visual content using machine learning.\nWatson Tone Analyzer  ->Analyze emotions and tones in written content.\nWatson Personality Insights -> Predict personality characteristics, needs and values through written text and many more.\nIntegrate it with your Web, Android, IoT, Desktop Applications like Face Detection, ChatBot, Voice Detection, Text to custom Speech (with pitch, emotions, etc), Speech to text, Sentimental Analysis on Social media or any textual data and many more.\n\n\nAfter building up your cognitive skills with IBM Watson and you can also apply for Watson certifications to validate your skills in the market to get job.",
      "target_audience": [
        "Anyone who is curious to experiment with Artificial Intelligence and develop applications or simply interested in exploring IBM Watson and its powerful services available on IBM Cloud.",
        "If you want to learn fundamentals of chat bot development like Intent, Entities, Dialog, etc and Build a powerful Chatbot application with IBM Watson!"
      ]
    },
    {
      "title": "Node JS Create a Restful API for beginners JavaScript jQuery",
      "url": "https://www.udemy.com/course/restful-setup-node-api/",
      "bio": "For beginners learn to setup a Restful API that can send AJAX requests to the node server backend from jQuery frontend",
      "objectives": [
        "Setup and use NodeJS localhost",
        "Add a SQLite database to a local project",
        "Setup a simple Restful API"
      ],
      "course_content": {},
      "requirements": [
        "Beginner knowledge fundamentals of JavaScript jQuery HTML and CSS",
        "Computer and terminal access"
      ],
      "description": "Perfect course for beginners to explore how to setup a Restful API!  GET, POST, PUT, DELETE\nThis starter course demonstrates how to setup a Restful API from scratch.   Using just your local computer you can follow the step by step lessons to setup your own local server and run JavaScript code.\nJavaScript experience is required - This course is designed for students who want to learn about node.js and how to create projects with Node.  Its perfect for anyone who wants to practice coding by building out a simple web application.  Learn everything you need to setup a localhost, resources to work with node, setup a SQLite database, setup routes for CRUD and a whole lot more.\n\nAll the resources are provided along with source code to get you started quickly\nTechnology used within the course:\nFront end AJAX requests will be using jQuery AJAX\nFront end web page dynamic elements from JSON data using jQuery\nHTML and CSS for presentation of front end application\nNodeJS will be used for back end server\nNPM packages include nodemon, express, bodyParser, sqlite3\nDatabase is at the end using SQLite - SQLite setup files are included*\nEditor Brackets Browser Chrome DevTools\nJavaScript for everything else......\nLessons cover the following:\nExplore how the terminal can be used to setup a backend server using Node.js.  Command line interface simple commands will be used to navigate and seutp folders.\nIntroduction to the Node Package Manager and how you can use it to get pre built code and bring it easily into your projects.\nCreate your start files and learn how you can run node.js files\nexplore Node modules and how they work into your main app file\nLearn how to setup an http server using node ready for localhost\nExplore getting file content and reading it as data\nPower Up your node application with Express and Nodemon\nAPI web resources Postman CRUD\nUse Body Parser to get post data\nFind out how Middleware app use works\nApply logic with conditional statement to create a login check\nSetup your application for static frontend files index.html\nGet back to the frontend with JavaScript and html.  bringing both together\nRequests and responses to the server and webpage\nSetup your routes for a  Restful API GET POST PUT DELETE\nUse data to output to page\nCode refactoring with a helper file\nUpdating with adding a SQLite Database to hold data\nSource code is included to get you started quickly\nStep by step instruction, with friendly help always available in the Q&A section\nTaught by an instructor with many years of web development experience, ready to help you learn\nWhat are you waiting for join now and learn to setup your own RestFul API.\nRESTful : Representational State Transfer (REST)  When HTTP is used, as is most common, the operations available are GET, POST, PUT, DELETE, and other predefined CRUD HTTP methods.",
      "target_audience": [
        "Anyone who wants to learn nodeJS",
        "Anyone who wants to setup a local RestFul API",
        "Anyone who wants to practice AJAX and APIs",
        "Web developers",
        "Junior programmers",
        "Beginners to Node",
        "JavaScript programmers who want to learn NodeJS"
      ]
    },
    {
      "title": "Learn to Program in BackboneJs : Code like a Pro",
      "url": "https://www.udemy.com/course/learn-to-program-in-backbonejs-code-like-a-pro/",
      "bio": "A Quick and Easy Guide to Master Backbone for Building Web Apps",
      "objectives": [
        "Master Concepts of Backbonejs",
        "Understand MVP design paradigm",
        "Quickly develop single page web applications",
        "Be a better JavaScript Programmmer",
        "Understand use of RESTful JSON"
      ],
      "course_content": {
        "Introduction to Backbone": [
          "Introduction",
          "Installation and Configuration"
        ],
        "Basic Backbone Concepts": [
          "Introduction to Models",
          "Nodejs and RESTful APIs",
          "Validation",
          "Creation and Update",
          "Retreival and Deleletion",
          "Saving Models"
        ],
        "Introduction to Collections": [
          "Collections - Concepts",
          "Collections- Basics",
          "Collections- Usage",
          "Collections- Usage - Wrap Up"
        ],
        "Views": [
          "Views in backbone",
          "Views in Action",
          "Views - Implementation"
        ],
        "Routers": [
          "Routers",
          "Routers in Backbone",
          "Routers Implementation",
          "Routers Implementation Wrap Up"
        ],
        "Events in Backbone": [
          "Events",
          "Events Basics",
          "Events Implementation"
        ],
        "Backbone Project": [
          "Project Description",
          "Project Design",
          "Project Design Wrap Up",
          "Code Implementation",
          "Feature Check",
          "Project Checkup",
          "Project Checkup Wrap Up"
        ],
        "summary": [
          "summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Knowledge of JavaScript is essential for this course"
      ],
      "description": "Backbone is the powerful JavaScript library well suited for quickly building powerful single page web applications. Created by Jeremy Ashkenas this lightweight JS library is based on MVP( Model-View-Presenter) concept. Our course will focus on the core concepts of the technology and will provide you practical tips and suggestions to create professional web apps.\nThe course will provide you necessary skill to effectively use Backbone along with JavaScript, JQuery and UnderscoreJS. You will start with basic introduction to backbone and will wrap up with a complete web app built using backbone. The course cover the following\nBackbone Concepts\nIntroduction to RESTful APIs\nModels and their use in Backbone\nCollections and their use in Backnone\nViews in Backbone\nRouters and Web Apps\nEvents and Event Hnadling\nBuilding Web Apps using Backbone - Best strategies\nLearn all this and much more in this course and start building your web apps using backbone today.",
      "target_audience": [
        "Students who want to learn backbone js to build web applications will find the course extremly useful"
      ]
    },
    {
      "title": "The Complete Course of R Shiny 2025",
      "url": "https://www.udemy.com/course/shiny-course/",
      "bio": "Learn how to build Web Applications in a Professional way from Scratch. Become an expert in R Shiny, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master R Shiny, to be able to develop your own Web Applications from scratch",
        "You will be able to build step by step Web Apps, understanding all the logic and ending with advanced practical examples and a complete project",
        "You will become familiar with the Rstudio interface, toolbars and basic commands, and you will master all the phases of the configuration process",
        "You will learn in a professional way how to create server-side logic - use reactive expressions and functions to dynamically update your UI based on user input",
        "You will understand the fundamental connection to data sources to be able to Retrieving data from CSV, JSON, or SQL databases to display in your app",
        "You will learn the design and generation of interactive plots with ggplot2 and making leaflet Map in Shiny, understanding their interpretation",
        "You will master all the UI configuration, using Shinydashboard, ShinydashboardPlus HTML tags, CSS and Bootstrap",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the final project (your own app)",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to R Shiny": [
          "What is R Shiny?",
          "Examples of R Shiny Applications",
          "Quiz"
        ],
        "Setting up your R Shiny environment and creating the first project": [
          "Installation and Configuration",
          "Single page Layout",
          "Multi-page Layout"
        ],
        "Building a basic UI: Adding UI elements such as buttons, sliders, & text inputs": [
          "Basic elements of UI",
          "Slider input",
          "Numeric input",
          "Text input",
          "Data input",
          "Select input",
          "Text output",
          "Customizing output area",
          "Data Table output",
          "Plot output"
        ],
        "Creating server-side logic: Implementing reactive expressions and functions": [
          "Basic reactivity",
          "Reactive functions",
          "Controlling reactivity",
          "Dynamic UI"
        ],
        "Connecting to data source: Retrieving data from CSV, JSON, or SQL databases": [
          "Upload and download data",
          "Connecting to SQL",
          "JSON file from web"
        ],
        "Designing interactive plots": [
          "Using ggplot2 in Shiny part-1",
          "Using ggplot2 in Shiny part-2",
          "Making ggplot 2 Interactive",
          "Making Leaflet Map in Shiny"
        ],
        "How to Customize the UI": [
          "Advanced layout using Shinydashboard & ShinydashboardPlus",
          "HTML tags in Shiny",
          "CSS in Shiny",
          "Bootstrap in Shiny"
        ],
        "Developing yourm own Shiny App": [
          "Shiny Project Part-1",
          "Shiny Project Part-2"
        ]
      },
      "requirements": [
        "Having basic notions of R programming can help, but the course starts from scratch",
        "Download and install RStudio (if you don't know how, don't worry, it's very easy, free and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a R Shiny professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that students, data analysts, data scientist, engineers... can learn Shiny package in R from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as an Engineer, I have realized that nowadays mastering R Shiny for the Web Apps Development is very necessary in Data science, analysis or other programming applications. Knowing how to use this package can give you many job opportunities and many economic benefits, especially in the world of the web development.\nThe big problem has always been the complexity to perfectly understand Shiny it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 8 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Shiny in R programming. The course will teach you web applications development in a practical way, from scratch, and step by step.\nWe will start with the installation of Rstudio software on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to R Shiny and course dynamics\nDownload and Install RStudio latest version, packages and configuring it\nGeneral familiarization with the user interface and elements\nCreating server-side logic: implementing reactive expressions and funcitions to dynamically updated your UI based on user input\nRetrieving data from CSV, JSON, or SQL databases to display in your app\nDesigning interactive plots with ggplot 2\nCustomizing the User Interface using Shinydashboard, ShinydashboardPlus HTML tags, CSS and Bootstrap\nBuilding from scratch your shiny App and deploying it\nMastery and application of absolutely ALL the functionalities of R Shiny\nPractical exercises, complete project and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to build a wide variety of web apps quickly and make versatile and complete use of Shiny. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning R Shiny has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used R Shiny before",
        "Data scientists, analyists, students... who want to learn a new way to develop Web Applications",
        "Intermediate or advanced Shiny and R students who want to improve their skills even more!"
      ]
    },
    {
      "title": "EXPRESS.JS: Learn Node! Node js & Express js - Master Nodejs",
      "url": "https://www.udemy.com/course/expressjs-learn-node-node-js-express-js-master-nodejs/",
      "bio": "Master Nodejs with Node + Express.js: Become a Node js Expert using Express js + Node. Develop with Nodejs + Express js!",
      "objectives": [
        "Create web applications with Node js",
        "Master Node Module System and NPM",
        "Build RESTful APIs with Express",
        "Design and manage databases for apps",
        "Perform CRUD operations with Mongoose",
        "Model data relationships using Mongoose",
        "Implement authentication and authorization",
        "Handle and log errors effectively",
        "And SO much more!"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript"
      ],
      "description": "If you don't master Node, you're shooting yourself in the foot. Seriously,\"96% of professional developers rely on it for web application development.\"\nSo, if you want to compete as a professional developer, you need to have this tool in your arsenal.\nWelcome to the Complete Node.js & Express.js Developer Course, your thorough pathway to mastering the dynamic field of backend web development.\nThis course equips you with the tools and expertise to flourish in a domain where Node.js and Express.js are shaping the future of web applications, projected to expand significantly in the coming years.\nWith over 6 hours of content, first-rate lectures, and extensive resources, this curriculum stands out as the most exhaustive Node.js and Express.js guide available.\nEven with no prior programming background, you will progress from novice to expert status. Here’s what sets this course apart:\nThe instruction is led by a seasoned software engineer with a track record of success, who has shared his expertise at prestigious institutions worldwide for over a decade.\nDesigned to be fully up-to-date, you will learn the very latest in Node.js and Express.js, the same cutting-edge technologies utilized at innovative tech giants.\nWe leave no stone unturned. Expect professional presentations, challenging assignments, practical projects, downloadable aids, insightful articles, and a wealth of additional content.\nThe syllabus has been meticulously refined over several years of university teaching, augmented by thorough student engagement and feedback.\nOur teaching has transformed the lives of thousands, with many alumni advancing to become professional developers or launching their own tech ventures.\nContinual course updates mean fresh material, new projects, and learning modules guided by you – our student community.\nWithin this comprehensive Node.js and Express.js course, you’ll delve into a spectrum of topics, including:\nThe core principles of Node.js runtime and how it revolutionizes server-side development\nExpress.js for building efficient, scalable web applications and APIs\nPackage management mastery using npm to handle complex projects\nDatabase operations with Mongoose for robust back-end data management\nAdvanced concepts in authentication, middleware, and RESTful API design\n...and so much more!\nBy the course's end, you will be proficient in leveraging Node.js and Express.js to create advanced, real-time web solutions for any demand.\nWhen you sign up, get ready for:\nEngaging Animated Video Tutorials\nComprehensive Instruction from a Veteran Developer\nReal-world Node.js & Express.js Assignments and Projects\nInteractive Quizzes for Solidifying Knowledge\nDownloads: Code Snippets, Tools, and Cheatsheets\nExclusive Articles Tailored to Node.js & Express.js\nA curriculum's worth over $1000 in Node.js & Express.js course materials\nJoin us at Evergreen Programming and embark on your journey to becoming a Node.js & Express.js developer.\nWhy wait?\nHit the buy now button and enroll in this course right now!\nSee you on the inside!",
      "target_audience": [
        "Frontend developers who wish to expand their horizon in backend development",
        "Beginners who wish to develop scalable applications"
      ]
    },
    {
      "title": "Web Development with New Framework",
      "url": "https://www.udemy.com/course/web-development-with-new-framework/",
      "bio": "Aurelia is a JavaScript client framework for web, mobile and desktop.",
      "objectives": [
        "Learn about Application Structure, ES6 and ES7, Components of Aurelia Application, Component Life Cycle, Data Binding, Custom Elements, Dependency Injections",
        "Learn about web and mobile app development using open source UI framework Aurelia JS."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript",
        "Performing web application development",
        "working knowledge with HTML"
      ],
      "description": "Aurelia is a JavaScript client framework for web, mobile and desktop. It allows you to write clean, modular JavaScript. The framework follows simple conventions and is focused on web standards. Through these tutorials we shall learn about web and mobile app development using open source UI framework Aurelia JS.\nThe training will include the following;\nIntroduction and Overview of AureliaJS\nEnvironmental SetUp\nApplication Structure\nES6 and ES7\nComponents of Aurelia Application\nComponent Life Cycle\nData Binding\nCustom Elements\nDependency Injections\nBasic Configuration\nBinding Behavior\nPlugins\nConverters\nEvents\nEvent Aggregator\nForms\nHTTP\nRefs\nRouting Life Cycle\nRouting Implementation\nHistory\nAnimations\nDialog\nLocalization\nTools\nBundling\nDebugging\nCommunity\nBest Practices\nSample Project description – An Aurelia sample app that lets you browse and edit contacts.",
      "target_audience": [
        "Web developers",
        "Students",
        "Someone who wants to learn about Aurelia framework"
      ]
    },
    {
      "title": "cPanel Crash Course",
      "url": "https://www.udemy.com/course/cpanel-crash-course/",
      "bio": "Manage your website easier with cPanel.",
      "objectives": [
        "Understand what is a website",
        "Understand what is webhosting, domain name, mail server, FTP, MX",
        "Understand web hosting terms",
        "Understand how to use FTP client to manage files",
        "Understand how to do remote login with SSH",
        "Understand how to install, update, uninstall application with Fantastico",
        "Understand how to install, update, uninstall application with Softaculous"
      ],
      "course_content": {
        "Introduction to Webhosting": [
          "About This Course"
        ],
        "First Time to cPanel": [
          "Using Getting Started Wizard",
          "Accessing Video Tutorials",
          "How-to Change cPanel Password",
          "How-to Update Contact Info",
          "How-to Change cPanel Style",
          "How-to Change Language",
          "How-to Manage Shortcuts"
        ],
        "Managing E-Mail": [
          "How-to Create Email Address",
          "How-to Manage Email Account",
          "How-to Access Email via Webmail",
          "How-to Stop Spam Using SpamAssassin",
          "How-to Setup Email Forwarders",
          "How-to Setup Auto Responders",
          "How-to Setup Default Address",
          "How-to Create Mailing Lists",
          "How-to Setup Filtering on Account Level",
          "How-to Setup Filtering on User Level",
          "How-to Trace Email",
          "How-to Import Addresses / Forwarders",
          "How-to Setup Email Authentication",
          "How-to Setup MX Records Entry",
          "How-to Change MX Entry for Google Apps"
        ],
        "Managing Files in cPanel": [
          "File Permission Basics",
          "How-to Use Legacy File Manager",
          "How-to Check Disk Space Usage",
          "How-to Manage FTP Account",
          "FTP Session Control",
          "Anonymous FTP"
        ],
        "Managing Files With Software": [
          "How-to configure your site in FileZilla",
          "How-to manage your site in FileZilla",
          "How-to transfer files in FileZilla"
        ],
        "Backup your cPanel": [
          "How-to Setup Backup",
          "How-to Use Backup Wizard"
        ],
        "Maintaining Log Files": [
          "How-to Check Your Website Latest Visitors",
          "How-to Check Your Website Bandwidth Usage",
          "How-to use Webalizer",
          "How-to use Webalizer FTP",
          "How-to Get Raw Access Logs",
          "How-to Check Error Log",
          "How-to Choose Log Program",
          "How-to Use Awstats"
        ],
        "Secure Your Websites": [
          "How-to Create Password Protected Directories",
          "How-to Deny Access Based on IP Address",
          "How-to Protect Against HotLink",
          "How-to use GNUPG Keys"
        ],
        "Manage Your Domains From cPanel": [
          "How-to Create Subdomains",
          "How-to Add Addon Domains",
          "How-to Set Parked Domains",
          "How-to Set Redirect",
          "Managing DNS with Simple DNS Zone Editor",
          "Managing DNS with Advanced DNS Zone Editor"
        ],
        "Manage Your Databases From cPanel": [
          "MySQL Databases",
          "MySQL Database Wizard",
          "phpMyAdmin",
          "Remote MySQL"
        ]
      },
      "requirements": [
        "Windows PC / Mac / Linux Desktop",
        "Web Browser (Firefox and/or Chrome recommended)",
        "Basic computer knowlegde"
      ],
      "description": "In this course, we'll learn how to manage your online presence with cPanel. cPanel is one of the most used web hosting control panel software. It will make your day-to-day tasks managing your online presence easier.\nBefore we learn about how to use cPanel, I'll explain the stuff related to website. What is web hosting, domain name, terms that web hosting use on their product page, etc.\nRegarding the cPanel itself I'll cover from how to login to cPanel, Managing files and emails, creating subdomain, adding add-on doman to installing every application in Fantastico De Luxe and Softaculous Installer.",
      "target_audience": [
        "webmaster",
        "IT Support",
        "Web Developer",
        "Web Hosting Provider"
      ]
    },
    {
      "title": "Angular and NestJS: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/nest-admin/",
      "bio": "NestJS APIs, Angular 10, Typescript, TypeORM, MySQL, Login with HttpOnly Cookies, Export CSV, Upload Images",
      "objectives": [
        "Use Docker",
        "Use TypeORM",
        "Generate Jwt Token",
        "Connect NestJS with MySQL",
        "Login with HttpOnly Cookies",
        "Upload Images",
        "Export CSV files",
        "Angular CLI",
        "Angular Animations",
        "Create charts with c3js"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "NestJS": [
          "Installation",
          "Docker",
          "Modules & Controllers",
          "Migrations",
          "Services",
          "Global Prefix",
          "Register",
          "Hashing Passwords",
          "Validations",
          "Login",
          "Jwt and HttpOnly Cookies",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Guards",
          "Creating Users",
          "Common Module",
          "Updating Users",
          "Pagination",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Abstract Service",
          "Circular Dependencires",
          "Products",
          "Uploading Images",
          "Orders",
          "Expose Fields",
          "Export CSV",
          "Raw SQL",
          "Custom Decorators",
          "Access Guard"
        ],
        "Angular": [
          "Installation",
          "Template",
          "Modules",
          "Routes",
          "Register Form",
          "HttpClient",
          "Login",
          "Services",
          "Authenticated User",
          "Interfaces",
          "Logout",
          "Inputs",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Redirecting",
          "Users",
          "Pagination",
          "Deleting Users",
          "Users Create Form",
          "Creating Users",
          "Updating Users",
          "Abstract Classes",
          "Roles",
          "Roles Create Form",
          "Form Arrays",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Nested Tables",
          "Animations",
          "Export CSV",
          "Chart"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to create an Admin App using Angular and NestJS.\nIn NestJS you will learn:\nUse Docker\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Interceptors and Guards\nCreate custom Decorators\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV's\nIn Angular you will learn:\nHow to use Angular CLI\nCreate classes, interfaces, abstract classes\nUse interceptors\nCreate public and private routes\nAngular Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nUse Reactive Forms\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "CSS 3D",
      "url": "https://www.udemy.com/course/cartoonsmart-css-3d/",
      "bio": "Create amazing 3D environments with nothing more than CSS! In the process learning how to safely implement CSS 3D.",
      "objectives": [
        "To understand the 3D environment",
        "Create a CSS 3D environment with viewports, faces & objects",
        "Have an understanding of both fallback support & progressive enhancement"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Quick overview of Blender",
          "3D terminology",
          "From Blender to the Browser",
          "Setting up the Development Environment"
        ],
        "Faces": [
          "Viewport & Creating Faces",
          "Faces Part Two"
        ],
        "Cube Example": [
          "Creating a Cube",
          "Completing Faces of the Cube",
          "Extending & Animating the Cube",
          "Completing 3D Cube Animation",
          "Cube Fallback Support"
        ],
        "Gallery Example": [
          "Object Hierarchy Progressive Enhancement",
          "Object Hierarchy Creating Objects",
          "Object Hierarchy Animation",
          "Finish Object Hierarchy Animation"
        ],
        "Experimenting & Conclusion": [
          "Cool CSS 3D Projects",
          "Overview & Conclusion"
        ]
      },
      "requirements": [
        "HTML",
        "CSS 2 & 3",
        "Jquery",
        "SCSS"
      ],
      "description": "This course will be sure to excite the web developers of tomorrow and extend their knowledge of transforming into the 3D space! You can create some of the most engaging experiences by using 3D in the latest browsers. This course will also demonstrate implementing CSS 3D safely for older browsers.\nAnother advantage is hybrid apps for desktop and mobile devices, which means you can use CSS 3D in certain apps!",
      "target_audience": [
        "Web Developers/Designers that want to further their skills in CSS"
      ]
    },
    {
      "title": "Learn Advanced C Programming",
      "url": "https://www.udemy.com/course/up-and-running-with-phalcon-php/",
      "bio": "Advanced C Programming: Techniques for Efficient and Functional Code",
      "objectives": [
        "Optimize their C code to improve performance, readability, and maintainability.",
        "Use advanced techniques for manipulating main function arguments, variables, and arrays and structures.",
        "Gain an in-depth understanding of pointers and how to use them to create more efficient and flexible code.",
        "Write reusable code, reduce the likelihood of errors, and improve the overall quality of their programs.",
        "Apply their knowledge to real-world programming scenarios."
      ],
      "course_content": {
        "Advanced C Programming": [
          "Intro",
          "Getting Started"
        ],
        "Programming": [
          "Assignment operators",
          "Assignment",
          "Solution: Use an assignment operator",
          "Understand the ternary operator",
          "Assignment: A ternary-operator decision",
          "Solution: A ternary-operator decision"
        ],
        "Main Function Arguments": [
          "Work with arguments in the main() function",
          "Assignment: Reading command-line arguments",
          "Solution: Reading the command line"
        ],
        "Beyond Basic Variables": [
          "Set up an external variable",
          "Typecast variables",
          "Assignment: Specifying a cast",
          "Solution: Specifying a cast",
          "Take advantage of static variables",
          "Assignment: Setting up a static variables",
          "Solution: Setting up a static variable"
        ],
        "Array and Structures": [
          "Sort an array",
          "Work with arrays and functions",
          "Send a structure to a function",
          "Build an array of structures"
        ],
        "Pointer Tips": [
          "When to use the ampersand operator",
          "How to bind the asterisk operator",
          "Understanding arrays and pointers",
          "Obeying the order of precedence"
        ]
      },
      "requirements": [
        "Participants must have a foundational understanding of C programming and experience writing simple programs."
      ],
      "description": "This course is designed for individuals who have a foundational understanding of C programming and are looking to further enhance their skills. It focuses on advanced techniques and best practices for writing efficient and functional code. Participants will learn how to optimize their C code to improve performance, readability, and maintainability.\nThe course covers a wide range of advanced topics, including how to manipulate main function arguments, build more useful variables, and work with arrays and structures effectively. Participants will also gain an in-depth understanding of pointers and learn how to use them to create more efficient and flexible code.\nIn addition to the technical skills, the course emphasizes best practices and programming paradigms such as modularity, abstraction, and encapsulation. Participants will learn how to write reusable code, reduce the likelihood of errors, and improve the overall quality of their programs.\nThroughout the course, participants will be challenged with practical exercises and projects that will test their understanding of the concepts covered. The course also includes access to a community of learners, allowing participants to connect with peers and instructors for additional support and feedback.\nUpon completion of this course, participants will have a deep understanding of advanced C programming techniques and will be able to apply them to real-world programming scenarios.",
      "target_audience": [
        "This course is ideal for individuals who have a foundational understanding of C programming and are looking to further advance their skills. It is particularly suitable for software developers, computer science students, and IT professionals who want to optimize their C code and write more efficient and functional programs"
      ]
    },
    {
      "title": "Learning Path: Yii 2: Design Applications with PHP",
      "url": "https://www.udemy.com/course/learning-path-yii-2-design-applications-with-php/",
      "bio": "Learn to develop Real-world web applications and web services with the new features of Yii 2",
      "objectives": [
        "Explore Yii 2 framework and application development using it.",
        "Write your applications more efficiently using shortcuts, Yii’s core functionality, and the best practices in Web 2.0.",
        "Learn to use Yii 2 with different JavaScript Frameworks and libraries such as WebSockets, Angular, Ember, Backbone, React.",
        "Develop a deep understanding of writing RESTful Web Services using Yii 2 and its built-in features.",
        "Get data from database, and deal with Active Record, migrations, widgets, and core features.",
        "Implement your own Yii extension and make your extension reusable and useful for the community.",
        "Gain knowledge on the best technologies, such as Codeception, PHPUnit, Atoum, and Behat.",
        "Build attractive user interface for your application with Twitter Bootstrap framework."
      ],
      "course_content": {
        "Yii2 Application Development Solutions – Volume 1": [
          "The Course Overview",
          "Installing the Framework",
          "Dependency Injection Container",
          "Service Locator",
          "Code Generation",
          "Configuring Components",
          "Working with Events",
          "Using External Code",
          "Configuring URL Rules",
          "Generating URLs",
          "Using Regular Expressions in URL Rules",
          "Using a base controller",
          "Using Standalone Actions",
          "Creating a Custom Filter",
          "Displaying Static Pages",
          "Using Flash Messages",
          "Using the Controller Context in a View",
          "Reusing Views with Partials",
          "Using Blocks",
          "Using Decorators",
          "Defining Multiple Layouts",
          "Pagination and Sorting Data",
          "Getting Data from a Database",
          "Defining and Using Multiple DB Connections",
          "Customizing the ActiveQuery Class",
          "Processing Model Fields with AR Event-like Methods",
          "Automating Timestamps",
          "Setting Up an Author Automatically",
          "Setting Up a Slug Automatically",
          "Transactions",
          "Replication and Read-write Splitting",
          "Implementing Single-table Inheritance",
          "Writing your Own Validators",
          "Uploading Files",
          "Adding and Customizing CaptchaWidget",
          "Customizing Captcha",
          "Creating a Custom Input Widget",
          "Tabular Input",
          "Complex Forms with Multiple Models",
          "AJAX Validation",
          "Authentication",
          "Using Controller Filters",
          "Preventing XSS",
          "Preventing SQL injections",
          "Preventing CSRF",
          "Using RBAC",
          "Encrypting/Decrypting Data",
          "Creating a REST Server",
          "Authenticating REST APIs",
          "Rate Limiting",
          "Versioning",
          "Error Handling",
          "Authentication Client",
          "SwiftMailer E-mail Library",
          "Faker Fixture Data Generator",
          "Imagine Library",
          "MongoDB Driver"
        ],
        "Yii2 Application Development Solutions – Volume 2": [
          "The Course Overview",
          "ElasticSearch Engine Adapter",
          "Gii Code Generator",
          "PJax jQuery Plugin",
          "Redis Database Driver",
          "Creating Helpers",
          "Creating Model Behaviors",
          "Creating Components",
          "Creating Reusable Controller Actions",
          "Creating Reusable Controllers",
          "Creating a Widget",
          "Creating CLI Commands",
          "Creating Filters",
          "Creating Modules",
          "Creating a Custom View Renderer",
          "Creating a Multilanguage Application",
          "Making Extensions Distribution-Ready",
          "Following Best Practices",
          "Speeding Up Session Handling",
          "Using Cache Dependencies and Chains",
          "Profiling an Application with Yii",
          "Leveraging HTTP Caching",
          "Combining and Minimizing Assets",
          "Running Yii2 on HHVM",
          "Changing the Yii Directory Layout",
          "Moving an Application Webroot",
          "Changing an Advanced Application Template",
          "Moving Configuration Parts into Separate",
          "Using Multiple Configurations to Simplify the Deployment",
          "Implementing and Executing Cron Jobs",
          "Maintenance Mode",
          "Deployment Tools",
          "Testing Application with Codeception",
          "Unit Testing with PHPUnit",
          "Unit Testing with Atoum",
          "Unit Testing with Behat",
          "Using Different Log Routes",
          "Analyzing the Yii Error Stack Trace",
          "Logging and Using the Context Information",
          "Displaying Custom Errors",
          "Custom Panel for Debug Extension"
        ],
        "Mastering Yii 2": [
          "The Course Overview",
          "Introduction to Git",
          "Learning the Most Used Commands in Git",
          "Auto-deploying with Bitbucket Hooks to Your VPS",
          "Combining Highload with Twitter Bootstrap Framework",
          "Adding Bootstrap Components to Highload",
          "Using Bootstrap JavaScript Features in Highload",
          "Implementing RBAC in Highload",
          "Adding Security on Form Submission in Highload",
          "Working with Passwords Correctly in Highload",
          "Improving Performance in Highload",
          "Fragmenting, Page Caching, and HTTP Caching",
          "Combining and Compressing JavaScript and CSS Files",
          "Changing Highload Session Storage to the Database",
          "Using Memcached for Session Storage",
          "Learning to Use Redis for Session Storage in Highload",
          "Using Sphinx with Yii 2",
          "Understanding Elasticsearch for Yii 2",
          "Learning to Use MongoDB with Yii 2",
          "Installing and Configuring the Test Components",
          "Discussing Unit Testing",
          "Learning Functional Testing"
        ]
      },
      "requirements": [
        "Basic knowledge of PHP 5.0 and Yii Framework."
      ],
      "description": "Are you a PHP developer working on Yii framework? Do you want explore the new features of Yii 2 for creating fast-paced, secured web 2.0 based applications? If yes, this Learning Path is for you.\nYii is a high-performance, component-based PHP framework for rapidly developing modern web applications. The name Yii can be considered as the acronym for Yes It Is!. Yii 2 inherits the main spirit behind Yii for being a simple, fast, highly-extensible PHP framework.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that video builds on the skills learned in the video before it.\nThis Learning Path begins with installing Yii 2 framework, learning about application templates, dependency injection container, and model events. Then, you’ll learn to use your external code along with updating your existing Yii 1 applications to Yii 2. Also, you’ll be familiar with some main methods for working with databases in Yii 2, such as Active Record, Query Builder, and direct SQL queries through DAO. Next, you’ll learn to write RESTful Web Services using Yii 2. Further, you’ll learn to deploy and test your applications securely with introduction to some best technologies, such as Codeception, PHPUnit, Atoum, and Behat. As the Learning Path progresses, you’ll be introduced to Git and its most used commands to work smoothly in a distributed team. You’ll also learn to develop customized and reliable web applications along with making these applications responsive using Twitter Bootstrap framework. Finally, you’ll learn to secure your applications by encrypting and decrypting data using Yii 2 components.\nBy the end of this Learning Path, you will have a deep understanding of the new and advanced features and concepts introduced in Yii 2 framework and application development practices using it.\nAbout the Authors:\nFor this course, we have combined the best works of these esteemed authors:\nAlexander Makarov is an experienced engineer from Russia and has been an Yii framework core team member since 2010. Before joining the Yii core team, he participated in the growth of the CodeIgniter community in Russia. . He has been a technical reviewer for books on Yii as well.\nDmitry Eliseev has been a web developer since 2008 and specializes in server-side programming on the PHP and PHP frameworks. Since 2012, he has authorized his personal blog, about web development in general and about the Yii framework in particular. His blog has become a well-known resource in the Russian Yii community.\nAndrew Bogdanov is a seasoned web developer from Yekaterinburg, Russia with more than six years of experience in industrial development. Since 2010 he has been interested in the Yii and MVC frameworks. He has worked on various CMS and frameworks using PHP and MySQL, including Yii, Kohana, Symphony, Joomla, WordPress, CakePHP, and so on. He is very good in slicing and frontend, so he can provide full information about the Yii framework.\nVitalii Tron has about 7 years of experience in programming and he has been developing Yii-based applications for 4 years. He graduated from the Sumy State University in the Mechanical-Mathematics School of Computer Science department. He also successfully finished post-graduate courses at the same department. Vitalii has amazing job history at Elance, where his clients have left delighted feedback about his work.",
      "target_audience": [
        "This Learning Path is for PHP developers who want to use the new features of Yii 2 to develop modern web applications. Also, people who have already worked on the Yii 1 version framework and want to migrate to Yii 2 will find this Learning Path useful."
      ]
    },
    {
      "title": "FULLSTACK Web Development- HTML CSS, JavaScript, PHP, ELIXIR",
      "url": "https://www.udemy.com/course/fullstack-web-development-htmlcss-javascript-php-elixir/",
      "bio": "Learn to Master Frontend and Backend languages and frameworks to develop a Web Application or Website",
      "objectives": [
        "On completiong of this course you would have a better grip over FRONT-END web development with HTML5, CSS3 and JavaScript.",
        "And you would have a better grip over BACK-END web development with Php, SQL, MySQL database.",
        "You would be able to develop a beautiful and powerful website. Beautiful with CSS, powerful with JavaScript, and contentful with HTML.",
        "You could write elixir programs, and implement elixir applications integrating with or without other web technologies."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "HTML": [
          "intro, tags, char formatting, etc",
          "List, Table, Hyperlink, etc",
          "Frame, frameset, etc",
          "Part-4 HTML"
        ],
        "CSS (Cascading Style Sheet)": [
          "CSS (Cascading Style Sheet)"
        ],
        "JavaScript": [
          "JavaScript PART-1 {Intro, boxes, etc}",
          "JavaScript PART-2 {Operators, Conditional}",
          "JavaScript PART-3 {Event Handling}",
          "JavaScript PART-4 {Form Validation}"
        ],
        "PHP (Hypertext Preprocessor)": [
          "Part-1: Introduction to PHP",
          "Part-2: Operators and Variables",
          "Part-3: Conditional if-else",
          "Part-4: Array and Loop",
          "Part-5: method- GET and POST",
          "PHP Recap Quiz"
        ],
        "SQL (Structured Query Language)": [
          "SQL 1",
          "SQL 2",
          "WAMP Installation",
          "Project:1 PHP Login",
          "Project:2 PHP fetch data from MySQL database"
        ],
        "Welcome to Elixir": [
          "Overview",
          "installation"
        ],
        "Basic Syntax , Variables and Operators": [
          "Basic Synatx",
          "DataTypes",
          "Variable",
          "Operators"
        ],
        "Decision Making Statement": [
          "Decision Making Statement",
          "If statement",
          "If else Statement",
          "Unless Statement",
          "Unless else Statement",
          "Conditionals"
        ],
        "String": [
          "String Basic",
          "String Function"
        ]
      },
      "requirements": [
        "For writing scripts and web pages, you would need a text editor like notepad++.",
        "To view webpages and access internet you would need a web browser like Google Chrome, Edge, Firefox, etc"
      ],
      "description": "Are you passionate about developing a complete website from scratch? Where you can develop your frontend web pages powered by HTML5, CSS3 and JavaScript, and implement Backend functionalities with PHP, that works in sync with a powerful Relational Database- MySQL. You could be an aspiring professional or a student, you can create a great website with good visuals, cool functionalities, and better performance if you put some real efforts. Although creating a website can look very complex at the beginning, but if you constantly practice what you will learn in this course, you could definitely curate a website people will love to visit.\n\n\nWhat not to expect from this course:\nThis course is not about creating a website with Drag and Drop options, or copying templates or using any custom plugin.\n\n\nWhat you can expect from this course:\nYou will be learning some of the web development technologies right from the beginning, so that you can build up your web development skills right from the fundamentals understanding the flow of a website from Front-end to back-end technologies.\nYou will learn creating HTML5 pages with CSS\nYou will learn creating HTML tags, list, table, hyperlinks, frame, frameset, html form, etc\nYou will learn how to implement front-end logic and functionalities with JavaScript\nYou will learn how to create Form validation, Event Handling, Operator and Conditionals in JavaScript\nYou will learn backend programming with PHP, implementing various server side logic\nYou will learn SQL (Structured Query Language) and MySQL Relational Database\nYou will learn how to create a Login page with php and database\nYou will also learn how to fetch some information from the MySQL database by writing php code\nIn the later sections, you will learn functional programming in ELIXIR programming language\nYou will learn how to write decision making statements, string, list, tuple, map, modules, recursion, loop, structure, macros, and much more with Elixir programming language.",
      "target_audience": [
        "Anyone from Students to Web Development Passionate who have desire to learn web development both FRONT-END & BACK-END.",
        "Anyone who have a desire to be ahead of others by mastering new technologies like ELIXIR."
      ]
    },
    {
      "title": "React Marathon: 70 Hands-On React Web Development Projects",
      "url": "https://www.udemy.com/course/build-react-development-projects-from-scrath/",
      "bio": "Learn React Programming: Develop Web Applications Using Socket, REST APIs, Firebase, React Hooks, Bootstrap, React.js",
      "objectives": [
        "Build web apps that are powerful, fast, user-friendly, and reactive.",
        "Gain deep insights into the inner workings of the React library.",
        "Create a stunning portfolio featuring real-world React projects.",
        "See the step-by-step process of designing and assembling an advanced project",
        "Master the foundational principles of React for efficient web development.",
        "Understand lifecycle methods to control component behavior.",
        "Learn to implement serverless functions in a React application.",
        "Earn a course completion certificate to validate your React expertise."
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction To The Course",
          "Outline of the course"
        ],
        "Download all 70 project code files.": [
          "Part 1: Project Code Files",
          "Part 2: Project Code Files"
        ],
        "Project-1: React Photo Editor with CSS & React Filters": [
          "Introduction - React Photo Editor with CSS & React Filters",
          "Introduction1.2",
          "CSS Filters",
          "Using CSS Filters",
          "Adding All CSS Filters",
          "Updating Filter style of image",
          "Adding Announcement",
          "Adding onChange event to input",
          "Adding CSS to navbar",
          "Adding CSS to image",
          "Adding CSS to our Filters"
        ],
        "Project-2: CodePen Code Editor Clone Using React.js": [
          "Introduction",
          "Introduction Demo",
          "Creating a react app",
          "Creating textarea and adding useState hook",
          "Adding useEffect Hook",
          "What is an IFrame",
          "Adding IFrame to show output",
          "Adding CSS to Header",
          "Adding CSS to Header Part 2",
          "Adding CSS to textarea and output section",
          "Adding LocalStorage Object"
        ],
        "Project-3: Game Of Thrones App using React.js": [
          "Introduction",
          "Introduction to Game of Thrones App",
          "Header(Home) Page",
          "CSS to Header",
          "Adding Background Image to our Header Page",
          "Adding Navbar to our App",
          "Making Api request using fetch method",
          "Using Map function to render our Api data list",
          "Giving proper layout to map items",
          "Adding styles to our map items",
          "Adding bootstrap row",
          "React-Router Dom Part-1",
          "React-Router Dom Part-2",
          "useParams Hook",
          "Displaying the data of searched characters",
          "Quotes Api",
          "Using Map function to display the Quotes",
          "Adding Layout _ CSS in a Search File",
          "Adding material-icons in our code"
        ],
        "Project-4: React Birthday Reminder App Using React Js": [
          "Introduction - Birthday Reminder App Using React Js",
          "Introduction to our Birthday Reminder App",
          "Creating React Birthday Reminder App",
          "Adding data array and additional file to our app",
          "Code to display the today_s birthday",
          "Code to display the upcoming birthday of a person",
          "Adding a Layout to our Card",
          "Adding Styles to our Card",
          "Adding Styles to our Image",
          "Adding Styles to click div and making our app responsive",
          "Adding layout to upcoming birthday file",
          "Adding styles to upcoming birthday file",
          "Download the project files"
        ],
        "Project-5: Search Book (Multipage Library app to search any book ) using react": [
          "Introduction - Search Book (Multipage Library app to search any book )",
          "Introduction to bookstore",
          "Creating our react app",
          "Navbar",
          "Adding CSS to our Navbar",
          "Hero Section",
          "Adding CSS to our Hero section",
          "React-Router-Dom Part 1",
          "React-Router-Dom Part 2",
          "How to get your Google API Key",
          "Google Books API",
          "How to use Google Books API in our app",
          "What is useNavigate Hook",
          "Adding useNavigate Hook to our project",
          "useParams Hook",
          "Adding useParams Hook to our main file",
          "Adding styles to our main file",
          "Genre Page",
          "What is our Search Page",
          "Displaying different genres",
          "CSS to genre page"
        ],
        "Project-6: Tours & Travel Multi Page Website using react.js,CSS,react-router-dom": [
          "Introduction",
          "Introduction to our Travel_ Tour App",
          "Creating Our React App",
          "Creating Navbar for our App",
          "Creating Hero section for our App",
          "Adding CSS to our Hero section",
          "Adding Main section to our App",
          "Adding CSS to Main section",
          "Making our Main section responsive",
          "Adding video in our Video section",
          "Adding CSS to Video section",
          "Adding Footer",
          "Code for our Travel Page",
          "React-Router-Dom",
          "Pricing Section in our app",
          "Code for our Pricing Section",
          "CSS to our Pricing Section"
        ],
        "Project-7:React Admin Dashboard Using React.js Material-Ui, ReactHooks, React...": [
          "Introduction",
          "Introduction to Admin Dashboard",
          "Creating a react App",
          "Theme",
          "Navbar",
          "Adding style to navbar",
          "Stack",
          "FlexBox",
          "Rightbar",
          "Sidebar",
          "Nightmode",
          "ProfileCard1",
          "ProfileCard2",
          "ProfileCard3",
          "Card1",
          "rc-progress",
          "Chartjs",
          "Adding Charts in our app",
          "Circular Progress",
          "Adding more style to our App"
        ],
        "Project-8: Google Map Travel Advisor app using React.js, Geolocation, Google Map": [
          "Introduction",
          "Introduction to our Travel Advisor App",
          "Creating React App",
          "Home Page",
          "Adding CSS to our Home Page",
          "React-Router-Dom Part 1",
          "React-Router-Dom Part 2",
          "Open Trip Map API",
          "Adding Code to the Main file",
          "Adding Code to the Detail file",
          "Adding Layout to our Main page using MUI",
          "Rendering our Places List using Map",
          "Adding Map to our App"
        ]
      },
      "requirements": [
        "Basic knowledge of React"
      ],
      "description": "Step into the future of web development by mastering React, the JavaScript library that has revolutionized how we think about building web applications . React's component-based architecture simplifies UI development, making it easier to manage states and build dynamic, interactive user interfaces . Its virtual DOM ensures optimal rendering performance, making your applications not just functional but incredibly fast .\nBut that's not all—React's robust ecosystem, featuring tools like Redux for state management and React Router for navigation, offers a comprehensive suite of technologies that work seamlessly together . This makes it a one-stop-shop for all your front-end development needs .\nLearning React also puts you in high demand in the job market . With companies like Facebook, Airbnb, and Netflix utilizing React, the library has proven its worth in solving real-world challenges in web development . Whether you're a complete beginner aiming to land your first tech job, or an experienced developer looking to stay ahead of the curve, mastering React is a surefire way to elevate your coding skills and career prospects .\nMoreover, React's strong community support means you'll never be coding alone . From extensive documentation to a plethora of tutorials and third-party libraries, you'll have all the resources you need to tackle any project—big or small .\nDon't miss out on the opportunity to become proficient in one of the most popular and versatile JavaScript libraries out there . Learn React and open doors to exciting projects, career growth, and a world of possibilities in web development .\n\n\nIn This Course, We Are Going To Work On 70 Real World React Development Projects Listed Below, Develop Real World Web Applications Using Socket, REST APIs, Firebase, React Hooks, Bootstrap, React . js, Webpack , HTML5 , CSS3 , React- Router .\n\n\nProject-1: React Photo Editor with CSS & React Filters\nProject-2: CodePen Code Editor Clone Using React . js\nProject-3: Game Of Thrones App using React . js\nProject-4: React Birthday Reminder App Using React Js\nProject-5: Search Book (Multipage Library app to search any book ) using react . js, React-Router-Dom, Bootstrap, CSS, Google Books API\nProject-6: Tours & Travel Multi Page Website using react . js, CSS, react-router-dom, React Hook\nProject-7: React Admin Dashboard Using React . js, Material-Ui, react hooks, React Charts, rc progress\nProject-8: Google Map Travel Advisor app using React . js, Geolocation, Google Maps API & Google Places API\nProject-9: Interactive Timeline using React, React Hooks, CSS\nProject-10: Using Charts in react and creating Different Clickable Links on Charts in React, using React, CSS, Chartjs, Bootstrap\n\n\nProject-11: Meal Planner App using Spooncular API, React Hooks, CSS, Bootstrap\nProject-12: Radio Player App in React using Radio-Browser API CSS, React Hooks\nProject-13: Drum Kit using React, React Hooks, CSS, JavaScript, Material-UI\nProject-14: Build Dice Game using React, React Hooks, CSS, Javascript\nProject-15: Pokemon App using React, React Hooks, CSS, Api, Bootstrap\nProject-16: Slot Matching Game using React, React Hooks, CSS, Javascript, Material UI\nProject-17: Marvel Charcter App using React, React Hooks, Marvel Api, CSS, Bootstrap\nProject-18: Meme Generator App using React, React Hooks, CSS, Bootstrap\nProject-19: Photo Collage Maker using React, React Hooks, Bootstrap, CSS, Material-Ui\nProject-20: News App using React, React Hooks, CSS, Bootstrap, Api\n\n\nProject-21: E-Commerce Platform (Amazon Clone) with React & Firebase\nProject-22: Real-time Chat Application with React ChatEngine & Socket\nProject-23: Movies Streaming App (OTT) with React, Omdb API, and Bootstrap\nProject-24: Video Sharing Website with React, YouTube API, and Material-UI\nProject-25: To-Do List Web App with React, Material-UI, and State Management\nProject-26: Blogging Platform with React, Material-UI, and GNews API\nProject-27: Social Networking Site with Material-UI, React Hooks, and Google OAuth\nProject-28: Portfolio Resume Website with React, Material-UI, and State Management\nProject-29: Emoji Search App with React, React DOM, HTML5, and CSS3\nProject-30: Breaking Bad Character Finder with React, React DOM, and React Context\n\n\nProject-31: Random Quote Generator with React and Heroku Deployment\nProject-32: Password Generator App with React, React DOM, HTML5, and CSS\nProject-33: Quiz App with React, React DOM, HTML5, and SCSS\nProject-34: UnSplash Image Gallery with React and ReactDOM\nProject-35: React Router Demo Application with ReactJs, React Router Dom, and Context\nProject-36: Book Shelf App with ReactJs, NPM, CSS, and State Management\nProject-37: Note Taking App with React and Redux for State Management\nProject-38: Contact Register App with React, NPM, and React Context\nProject-39: Expense Tracking App with React and State Management\nProject-40: Money Management App with React, NPM, and React Context\n\n\nProject-41: Resort Booking App with React, NPM, and Hooks\nProject-42: BMI Calculator with React, NPM, and React Context\nProject-43: Furniture Store with React and Redux for State Management\nProject-44: Scoreboard App with ReactJs, NPM, and React Context\nProject-45: Food Ordering Web App with React, Material-UI, and React Router\nProject-46: Weather Web App with React, Open Weather API, and CSS\nProject-47: Food Recipe App with React, Edamam API, and Firebase Hosting\nProject-48: Shopping Cart App with React, React Hooks, and External API\nProject-49: Cafe Menu App with React, React Hooks, and Firebase\nProject-50: Cocktail Hub Web App with React, React Hooks, and Context API\n\n\nProject-51: Review Posting App with React, Material-UI, and CSS\nProject-52: Pomodoro Timer App with React, Countdown Timer, and CSS\nProject-53: Google Search App with React, Tailwind CSS, Google Search API\nProject-54: Tic-Tac-Toe Game with React\nProject-55: Word and Letter Counter with React, useState, and JavaScript\nProject-56: Currency Converter with React\nProject-57: Speech Recognition and Voice Assistant App with React\nProject-58: Calculator App with React and Hooks\nProject-59: Budget Tracking App with React, Custom Hooks, and Context\nProject-60: Music Player (Spotify Clone) with React and Spotify API\n\n\nProject-61: Calendar App with Scheduling Functionality\nProject-62: Dictionary App with React\nProject-63: YouTube Clone with React\nProject-64: Candy Crush Game with React\nProject-65: Astronomy Insights with React, CSS, and NASA APOD API\nProject-66: Rock, Paper, Scissors Game with React, CSS, and Hooks\nProject-67: Real-time Notification App with React, CSS, Hooks, and Socket\nProject-68: COVID-19 Tracker App with React, CSS, and Hooks\nProject-69: Random GIF Generator App with React, Hooks, CSS, API\nProject-70: Wildfire Tracker App with React, CSS, Asynchronous JS, NASA Open API\n\n\nNote (Read This): This Course Is Worth Of Your Time And Money, Enroll Now",
      "target_audience": [
        "Beginners in React"
      ]
    },
    {
      "title": "Angular and Laravel: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/angular-laravel-admin/",
      "bio": "Laravel 8, Angular 10, Docker, Laravel Sanctum, Login with HttpOnly Cookies, Upload Images, Export CSV,Open API(Swagger)",
      "objectives": [
        "Use Docker",
        "Laravel Sanctum",
        "Login with HttpOnly Cookies",
        "Authentication and Authorization",
        "Upload Images",
        "Export CSV files",
        "Angular CLI",
        "Angular Animations",
        "Create charts with c3js",
        "Open Api (Swagger) Documentation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel": [
          "Installation",
          "Docker",
          "Migrations",
          "Routes",
          "Register",
          "Custom Requests",
          "Laravel Sanctum",
          "Login",
          "Authenticated User",
          "HttpOnly Cookies",
          "Logout",
          "Ide Helper",
          "Api Resources",
          "Users",
          "Pagination and Seeders",
          "Profile",
          "Roles and Permissions",
          "Foreign Keys",
          "One To Many Relationships",
          "Json Resources",
          "whenLoaded",
          "Many To Many Relationships",
          "Attach, Detach and Sync Collections",
          "Products",
          "Uploading Images",
          "Orders",
          "Nested Factories",
          "Attributes",
          "Export CSV",
          "Chart",
          "Gates"
        ],
        "Angular": [
          "Installation",
          "Template",
          "Modules",
          "Routes",
          "Register Form",
          "HttpClient",
          "Login",
          "Services",
          "Authenticated User",
          "Interfaces",
          "Logout",
          "Inputs",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Redirecting",
          "Users",
          "Pagination",
          "Deleting Users",
          "Users Create Form",
          "Creating Users",
          "Updating Users",
          "Abstract Classes",
          "Roles",
          "Roles Create Form",
          "Form Arrays",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Nested Tables",
          "Animations",
          "Export CSV",
          "Chart"
        ],
        "Swagger (Legacy)": [
          "Swagger Setup",
          "Swagger Authorization",
          "Swagger Parameters",
          "Swagger Requests",
          "Swagger Tags"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic PHP knowledge"
      ],
      "description": "Learn how to create an Admin App using Angular and Laravel.\nIn Laravel you will learn:\nHow to create Rest APIs with Laravel\nAuthenticate using Laravel Sanctum\nAuthorization using Laravel Gates\nLogin with HttpOnly Cookies\nLaravel JSON Resources\nInstall and use Docker\nUpload Images\nExport CSV's\nUse Open API(Swagger) Documentation\nIn Angular you will learn:\nHow to use Angular CLI\nCreate classes, interfaces, abstract classes\nUse interceptors\nCreate public and private routes\nAngular Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nUse Reactive Forms\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner PHP Developers",
        "Beginner Javascript Developers"
      ]
    },
    {
      "title": "WordPress Gutenberg Editor - Master The Basics & Beyond",
      "url": "https://www.udemy.com/course/wordpress-gutenberg-editor-training/",
      "bio": "Zero Geek-Speak Training For The WordPress Gutenberg (Block) Editor.",
      "objectives": [
        "Why WordPress went to the Gutenberg (Block) Editor from the Classic Editor",
        "3 Different methods of using the Additional CSS Class 'Box' in the Block Settings Sidebar",
        "The settings & options in the editor (right) sidebar and the similarities with the previous Classic Editors right-sidebar",
        "The View feature within the More Tools & Options Section",
        "The Editor feature within the More Tools & Options Section",
        "The Plugins feature within the More Tools & Options Section",
        "The Tools feature within the More Tools & Options Section",
        "The Options feature within the More Tools & Options Section",
        "How to create a basic post and how to use the tools involved",
        "How to create a basic page and how to use the tools involved",
        "Lots of time-saving shortcuts.",
        "How to create jump-links & what are jump-links",
        "Some cool design tricks using combinations of different default blocks",
        "Creating, using & managing Reusable Blocks and Templates. Even how to profit with them."
      ],
      "course_content": {},
      "requirements": [
        "Zero prior knowledge of the WordPress Gutenberg Editor since we cover all the details in the course",
        "Should already have a WordPress site installed.",
        "Kinda familiar with WordPress already but not mandatory - I show, not just tell."
      ],
      "description": "WordPress is constantly evolving and most would say that means it is getting better. Clear evidence of this is that 1 out of 3 websites (roughly 30%) on the internet is a WordPress site.\nSo you’d think they are doing something right!\nLate in 2018, this “evolution” became MAJOR! The comfortable yet sometimes glitchy Classic editor was replaced with the “New & Improved” editor titled Gutenberg.\nIt is now pretty much just the Block editor but Gutenberg or ‘Gute’ for short, still sounds cooler - to me anyway.\nThe Gutenberg editor is such a drastic change from the Classic editor that many WordPress users simply refused to even learn how to use it, especially when it was announced that the Classic Editor will continue to be supported, for a while anyway.\nAfter using the Gutenberg Editor myself for about a year now, I’ve moved out of the “Hate Gutenberg” camp and into the “Love Gutenberg” camp. A huge time saver and so much more design options are built-in. This means you do not need a degree in coding to make this happen.\nThe Gutenberg Editor – Love It or Loathe It!\nThe fine folks that loathed the automobile when it first came out still loved the horse and buggy.\nMostly they loathed the automobile (I’m assuming this because it was a bit before my time) because they did not understand what it meant for the future of transportation.\nThe same holds true for those that still loathe the Gutenberg (Block) Editor – they just do not fully understand how it works or what it represents for the future of content creation.\nThis course is built for both the seasoned WordPress veteran that might still be in that “loathe” or heavily dislike category, & for the very new WordPress user that just wants to master the tools available within the Block aka Gutenberg Editor.\nIt doesn’t matter if you are ‘technically challenged’. With these step-by-step lectures, simply watch over my shoulder as I show you...\nTwo Different Methods Of Creating ‘Jump Links’ (& what the heck Jump Links are)\nWays To Profit From The Gutenberg Editor That No One Is Telling You About\nHow To Remove The Stress Of Converting Your Old Content Into Gute.\nThe Many Time-Saving Shortcuts\nThe Awesome Design Features You Can Create When You Combine These 2 Blocks\n3 Different Methods Of Using The Additional CSS Class 'Box' In The Block Settings Sidebar\nAnd So Much More!\nThe Gutenberg Editor is the future of content management using WordPress, and that future is NOW!\nThis course is made up of short & to the point, actionable Lectures that contain zero geek-speak!\nSince Gutenberg is constantly changing and updating, so will this course.\nOne of the beauties of learning with Udemy, is you gain Lifetime access to every course you purchase.\nAs you can see from checking out the Course Content below, these Lectures are not just a bland description of each block, these are detailed ‘How-To’ lectures so you will be up to speed on using these blocks - NOT just the definition of them.\nUpon completion of this course, you'll be comfortable using the Gutenberg (Block) Editor & wonder what all the fuss was about.\nThis course is a series of over-the-shoulder style screen capture videos. It is like you hired a personal trainer that is showing all the how-to's but without the personal training cost.",
      "target_audience": [
        "WordPress users that want to better understand the Gutenberg Editor",
        "Advanced WordPress users wanting to move off the Classic Editor",
        "Begining WordPress users that want a fun & easy way to learn how to use the WordPress Editor to create and manage content"
      ]
    },
    {
      "title": "Create Online Course Website with WordPress Using Tutor LMS",
      "url": "https://www.udemy.com/course/create-online-course-website-with-wordpress-using-tutor-lms/",
      "bio": "How to create online course Professional website with Wordpress & Elementor for FREE - No Coding, Just Drag & Drop",
      "objectives": [
        "Create a Professional online course website like Udemy",
        "How to create course lesson for videos & Articles",
        "You will learn how to add payment gateways (Like PayPal, Stripe & Instamojo)",
        "Other Instructors can make course on Your Website",
        "How to add quizzes inside your course",
        "How to design website like professional without coding (Just drag & drop)",
        "How you can earn commission on other's Instructor course"
      ],
      "course_content": {
        "Introduction": [
          "Create Online Course Website with WordPress & Elementor (Promo)",
          "Download The Resources"
        ],
        "WordPress Website Setup": [
          "Requirements for creating wordpress website?",
          "What is Web Hosting?",
          "What is Domain?",
          "Hosting Setup",
          "Domain Setup (if u don't have)",
          "Installing SSL",
          "Wordpress Installation 2 Cases",
          "Wordpress Installation Case 1",
          "Wordpress Installation Case 2",
          "Basic WP Settings"
        ],
        "Basic Website Structure": [
          "Installing Theme",
          "Plugins Installation",
          "Elementor Settings (Important)"
        ],
        "Build Your 1st Course": [
          "Course Creation"
        ],
        "Video Hosting Solution": [
          "Video Hosting 1 Revealed",
          "Video Hosting 2 Revealed",
          "Video Hosting 3 Revealed",
          "Adding Quiz"
        ],
        "Consider Important Settings": [
          "WooCommerce Payments",
          "Tutor Lms Settings"
        ],
        "Creating Necessary Pages": [
          "Creating Pages",
          "Connecting Pages"
        ],
        "Home Page Customization": [
          "Home Design 1",
          "Home Design 2",
          "Home Design 3"
        ],
        "Other Pages Design": [
          "Instructor Page",
          "About Contact Page"
        ],
        "Writing Blogs For Website": [
          "Creating Blog"
        ]
      },
      "requirements": [
        "You should have basic computer knowledge",
        "Access to Internet Connection",
        "Eagerness to learn"
      ],
      "description": "In this course how to create online course websites like Coursera & Skillshare or any other online course website with tutor lms plugin. You will learn how you can create an online course website for FREE. You do not require any coding to build a website. You just need to do Drag & Drop.\nAll plugins & theme used for making this website is completely Free. We will use page builders to design and customize our website to make it look more professional.\nYou can create unlimited courses. Inside the course, you can add lessons (both video & article) and quizzes. Other instructors can also join your website and make courses in return you can take a commission from them like Udemy.\nThis website will be completely user-friendly on both mobile and desktop this will conform to your visitors. The interface of this website will be very smooth and lead to more easily sales of any paid course.\nWe will add different payment gateway where people can pay you (like PayPal, Stripe & Instamojo). Also, we will tell you the best ways to host your website. We will tell you about the best video hosting platform for your online video hosting. Plus we will tell you about a self-hosted plugin that will help you to host a website inside your hosting even if you will have less web space.\nAlso, don't worry I am here to help you if you will have any doubts. So just chill I will see you inside this course :)",
      "target_audience": [
        "This course is for beginners who would like to learn Wordpress and make website",
        "Course Instructors who need a professional beautiful website and wants to grow business faster",
        "WordPress Beginners for making best website fast and easy way",
        "Anyone who wants to learn more about wordpress and other business plugins for growing business faster"
      ]
    },
    {
      "title": "Cloud Migration on AWS and Microsoft Azure",
      "url": "https://www.udemy.com/course/cloud-migration-on-aws-and-microsoft-azure/",
      "bio": "Learn Cloud migration services on Azure and AWS",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Amazon Cloud- Amazon Web Services.",
        "Having command over all the Cloud Migration options, services and tools available with all Migration and Management tools available on AWS.",
        "On completion of this course you would be able to develop and deploy your applications over Microsoft Azure.",
        "You would be able to migrate data between On premise store to Cloud Platforms and vice versa",
        "You would also be able to perform Inter-cloud migration"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites at all. But if u are aware of some cloud based or web development tools and technologies, it is helpful.",
        "Beginer level information on Cloud computing would be sufficient before taking this course."
      ],
      "description": "Are you an IT professional looking a quick tutorial on Cloud Migration? You may have an already existing on-premise data store or data center, and its getting more and more difficult to manage, scale and update it very frequently with the continues rise of traffic and functionality. Now, it could be the right time to put your data center on the cloud. You can migrate a subset or the entire data center to the cloud, also you can perform the reversal (cloud to on-premise) but this is not a common trend. You can also migrate your assets within two Cloud platforms- AWS (Amazon Web Services) and Microsoft Azure. Here in this course, you will be learning all of these Cloud Migration strategies and how you can implement them easily and effectively on time.\nYou can migrate a database, a data warehouse, some storage vault or disks, or can migrate a subset of data to cloud and within two cloud hosts. When you migrate your data center to the cloud, you no longer need to worry about the Network issues, Software update patches, Downtime, Scalability and Elasticity. You can also integrate a lot of services available on cloud.\nIn this course, you will learn Migration services on AWS in first few sections, followed by Migration services on Microsoft Azure in the later sections. Below is the list of services you will learn under each category:\nCloud Migration on AWS:\nAWS CLI (Command Line Interface)\nMigration Hub\nAmazon Snowball\nCloud Migration on Microsoft Azure:\nSite Recovery\nDatabase Migration\nAzure Migrate\nData Box\nDatabox Edge and Data Gateway",
      "target_audience": [
        "Anyone who just wants to learn and test Amazon Web Services Platform or any developer willing to develop his/her application over Amazon Cloud- Amazon Web Services.",
        "Professionals who have to perform cloud operations or migration at any point of time.",
        "Anyone who would be interested in learning Cloud Migration options available on AWS and PMicrosoft Azure."
      ]
    },
    {
      "title": "Sequelize ORM with NodeJS",
      "url": "https://www.udemy.com/course/sequelize-orm-with-nodejs/",
      "bio": "Master the use of SQL Databases using simple Object-oriented approach with Sequelize in your NodeJS projects",
      "objectives": [
        "Understand how ORMs work",
        "Use SequelizeJS with NodeJS",
        "Create complex relationships in their databases in form of objects"
      ],
      "course_content": {
        "Sequelize Basics": [
          "Creating Connection",
          "Creating Model",
          "Insert Entities",
          "Querying"
        ],
        "Advanced Operations": [
          "Associations and Relationships",
          "Seeding Database with initial values",
          "Using with ExpressJS",
          "Submit a Form with data to Sequelize",
          "Queries with JOIN"
        ]
      },
      "requirements": [
        "Have a basic understanding of Javascript and NodeJS",
        "Have an idea of SQL based Databases",
        "Understand SQL syntax of basic operations SELECT, INSERT, UPDATE, DELETE"
      ],
      "description": "Sequelize is a promise-based ORM for node.js, It’s easy to learn and use.  Sequelize has lots of features like Associations,Transaction,Hooks,  Migrations, etc. It also support for MySql, Sqlite, Postgress, MsSql.\nSequelize is feature rich. It has extensive documentation, and makes possible all kinds of needs from the database, very very easy to implement.",
      "target_audience": [
        "Beginner to Intermediate NodeJS Developers wanting to upgrade their Skills",
        "NodeJS Developers trying to understand how to use RDBMS systems like MySQL, PostgreSQL, MSSQL"
      ]
    },
    {
      "title": "2D Game Development W/ Javascript & CSS3- Create Memory Game",
      "url": "https://www.udemy.com/course/2d-game-development-javascript-css3-create-memory-game/",
      "bio": "Build a Randomized Memory Game with Timer - 2D Game Development - HTML5 & 2D CSS Animation (Transitions) - Javascript",
      "objectives": [
        "Build a completely randomized, intelligent 2D memory game with stellar design with Javascript, HTML5 & CSS3",
        "Learn how to design the game logic for the game and implement it as code",
        "Learn how to make the game intelligent and interesting by introducing a randomization element into it. Make it unpredictable for the programmer too!",
        "Learn how to set up the skeleton of a web app or web game using HTML5",
        "Learn how to design a sophisticated 2D game using advanced CSS and CSS3 concepts",
        "Learn how to make a 2D game playable using Javascript concepts",
        "Build a fully featured timer for your game",
        "Learn how to make CSS3 card flipping work",
        "Learn how to create completely customized popup boxes - you can use this knowledge in a number of other projects as well",
        "Build a score display for your game",
        "Learn how to make completely customized alert boxes (or popup boxes) - the game's final display",
        "Understand how 2D game development works in the web (with Javascript and HTML5)",
        "Understand the basics of HTML5 & CSS3 (I'll explain the concepts as we code the project)",
        "Understand the basics of Javascript (we have separate modules for this topics)",
        "Improve your web app development, 2D game development & javascript skills",
        "Improve your logical problem solving skills",
        "Improve your front end design and development skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML5 Building Blocks of the Game": [
          "Setting up the HTML skeleton, title and meta information",
          "Create the app's header and updates sections",
          "Create the game area with all the cards, both front and back",
          "Create the skeleton of both the opacity screen and result popup",
          "HTML5 code & images zip file for the game"
        ],
        "Styling the Quiz app - CSS & CSS3 transformations & Transitions - Final look": [
          "Linking the stylesheet & basics of CSS",
          "Set up the default stylings",
          "Design the header",
          "Design the updates section",
          "Design the timer and scroll areas",
          "Design the new game button",
          "Design the game area",
          "Design the cards",
          "Design the front and back parts of the card",
          "Include CSS3 transformation and transitions in the cards",
          "Design the opacity screen",
          "Design the result popup part 1",
          "Design the result popup part 2",
          "CSS3 code for the game"
        ],
        "[OPTIONAL] Javascript Basic Concepts (related to this project)": [
          "Connecting HTML and script/JS files",
          "An introduction to variables and assigning values",
          "Mathematical operators and alerts",
          "Conditional statements - if else statement",
          "Conditional statements - Switch case",
          "Loops - For loop",
          "Arrays - 1 dimensional arrays",
          "Arrays - 2 dimensional arrays",
          "An introduction to functions (function definition and calls)",
          "Intro to DOM - getElementById and InnerText",
          "Intro to DOM - adding click events to buttons",
          "More Event listeners Part 1",
          "More Event listeners Part 2"
        ],
        "Javascript code for the game - Making the game playable": [
          "Step by step algorithm for the Javascript code of the game",
          "Creating and assigning the global variables required for the code",
          "Retrieving the necessary HTML elements & more global variables",
          "Create the click event listener for the game area, retrieve & send card id",
          "Make the flipping work on card click",
          "Create a basic game with no randomization, timer etc.",
          "Create a basic game with no randomization, timer etc. part 2",
          "Create a basic result display",
          "Create function that flips the cards back when they don't match",
          "Make the new game button work",
          "Randomize the cards on loading part 1",
          "Randomize the game boxes on loading part 2",
          "Randomize the game boxes on loading part 3",
          "Make the timer work",
          "Create a customized result display",
          "Create a customized result display part 2",
          "Javascript code for the game",
          "Zip file of the entire game - code files"
        ],
        "Conclusion & Feature ideas": [
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "You can come to this course with absolutely no coding knowledge. I explain everything you need to create your very first 2D web game.",
        "A PC or laptop to practice what I teach"
      ],
      "description": "Practice makes perfect.\nStart your journey into becoming a professional 2D Game Developer for the Web and a front end web developer here!\nLearn how to create a real world Dynamic, intelligent Memory Game with Timer & Score cards with Web 2D Game development concepts!\nAt DigiFisk, we like making learning fun. Our courses are interactive and fun with a ton of practical elements to it. We've decided to take it a step further with our Front end Web app development practice series.\nOnce you learn the syntax of a programming language, the next logical step is to start creating software and apps. But that's where most students get stuck. Problem solving isn't as easy as learning a bunch of syntaxes.\nBut we aim to make it easy for you. We also aim to teach you intermediate programming topics like object oriented programming while at it.\n\n\nWhat will you learn in this course?\nIn this course, you'll learn how to build your Randomized Dynamic 2D Memory Game with Timer, Score card & Customized result display from the ground up with just HTML5, Javascript and CSSS and 2D Game Development concepts  in just a couple of hours.\nYou'll learn:\n1. How to build a completely randomized, intelligent 2D memory game with stellar design with Javascript, HTML5 & CSS3\n2. How to design the game logic for the game and implement it as code\n3. How to make the game intelligent and interesting by introducing a randomization element into it. Make it unpredictable for even the programmer of the game.\n4. How to set up the skeleton of a web app or web game using HTML5\n5. How to design a sophisticated 2D game using advanced CSS and CSS3 concepts\n6. How to make a 2D game playable using Javascript concepts\n7. How to build a fully featured timer for your game\n8. How to make CSS3 card flipping work using CSS3 transitions and css3 transformations.\n9. Logical problem solving\n10. How to create completely customized popup boxes - you can use this knowledge in a number of other projects as well\n11. How to build a score display for your game that dynamically updates itself.\n12. How 2D game development works in the web (with Javascript and HTML5)\n13. The basics of HTML5 & CSS3 (I'll explain the concepts as we code the project)\n14. The basics of Javascript (we have separate modules for this topics)\n15. Front end design and development\nBy the end of the course, you'll be one step closer to creating web based 2D games and front end web apps like a pro. You could even try creating other web apps and games from the concepts you learn in this course.\n\n\nHow is this course designed?\nI've made this course as easy to understand as possible. I've structured it in such a way that each section will handle one of the 3 languages covered here.\nIntroduction: This is where I'll explain how the game works, it's various features and what we'll be using to achieve the same results.\nModule 1: We'll be teaching you how to create the bare bones of the game with HTML5. The result will be a page with all the elements we need in our game, devoid any colors or design elements.\nModule 2: Here, we'll \"beautify\" our game. We'll be using both basic and Advanced CSS & CSS3 elements, including CSS3 Transformation & CSS3 Transitions, to give our app colors and styles (including 3D styles), and make the card flip happen. At the end of this module, we'll have a Memory game that'll look like the final result, albeit one that is not playable yet yet. We'll cover that in the Javascript module.\nModule 3: We'll be covering some basic concepts of Javascript in this module. We'll only cover concepts that we'll need for our app's Javascript code though. If you already know the basics, you can skip this module.\nModule 4: This would be the meat of the course. We'll be delving into Javascript & Web 2D Game development of our game in this module, and We'll teach you how to make the game playable (make the card flip, the timer, the randomized card load feature and the customized result display work) in here.\nFinal section: Finally, We'll give you some ideas on how to improve/enhance the app further and make it your own in terms of design and functionalities.\n\n\nThis course is for you if:\n1. If you're completely new to web 2D game development & Web development and you want to learn by creating a real world 2D game.\n2. If you're a complete newbie to the world of web development or 2D game development, or just programming in general, and would like to start creating games and web apps with the help of a beginner-friendly course. You'll learn the basics of everything used in this project (HTM5, CSS3, Javascript, CSS transitions & transformations). I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.\n3. If you have the passion for programming, and if you know the basics of HTML5 and CSS3, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course.\n4. If you want to learn web game development the fun way - by doing, rather than just listening and taking notes.\n5. If you want to delve into the exciting world of 2D game development for the web, this course will take you a couple steps further in the right direction.\n6. If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros.\n7. If you know the theoretical concepts of Javascript but would like to learn how to apply your knowledge in the real world.\n8. If you want to add a real-world project/game to your resume - to get a promotion or find a new job.\n9. If you want to pad your portfolio with a cool project to bag more freelance web development and 2D game development projects.\n10. If you'd like to go from a complete beginner to an intermediate web programmer and 2D web game developer.\n11. If you'd like to learn something that can be used in your university coursework (project).\n\n\nSo, what are you waiting for? Get this course today, and begin your journey into the wonderful world where 2D game development meets front end web development with the help of CSS3 transitions & transformations!",
      "target_audience": [
        "If you're completely new to web 2D game development & Web development and you want to learn by creating a real world 2D game",
        "If you want to learn web development the fun way - by doing, rather than just listening and taking notes. If you love learning by creating, and don't like to listen to hours of theory, this course is for you",
        "If you'd like to pad your resume or portfolio with an impressive project",
        "If you'd like to learn something that can be used in your university coursework (project)",
        "If you'd like to go from a complete beginner to an intermediate web programmer and 2D web game developer",
        "If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros.",
        "If you have the passion for programming, and know the basics of HTML5 and CSS, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course."
      ]
    },
    {
      "title": "PHP For Everybody — The Perfect PHP Beginners Course (2020)",
      "url": "https://www.udemy.com/course/php-for-everybody/",
      "bio": "PHP For Everybody: learn everything you need to become a professional PHP developer. PHP Homework and Project included.",
      "objectives": [
        "How to install PHP",
        "How to write PHP from scratch (no experience required!)",
        "Different PHP data types (ints, strings, floats, null, arrays, etc.)",
        "PHP Comparison operators",
        "Conditional logic",
        "How to write PHP for the web",
        "How to validate PHP form fields"
      ],
      "course_content": {
        "PHP For Everybody — Learn PHP": [
          "How PHP Works",
          "What You Should Already Know",
          "Installing PHP",
          "(Optional) Installing XAMPP",
          "Downloading The Code In This Course",
          "What Is A PHP File?",
          "Who Uses PHP?",
          "What's The Difference Between Frontend and Backend Coding?",
          "Tools You'll Need",
          "Documentation",
          "PHP Syntax",
          "Echo/Print",
          "Code Commenting",
          "Variables",
          "Data Types",
          "Mixing PHP and HTML",
          "Unsetting Variables",
          "Debugging Variables",
          "Better Debugging",
          "Type Casting",
          "Arithmetic (Math)",
          "Constants",
          "Concatenation",
          "Quotes vs. Apostrophes",
          "String Replacement",
          "Arrays",
          "Sorting Arrays",
          "Conditional Statements",
          "Else Statements",
          "Else If Statements",
          "Comparison Operators",
          "Incremental and Decremental Operators",
          "Not True",
          "Ternary Logic",
          "Implode / Explode",
          "Switch Statements",
          "While Loops",
          "For Loops",
          "Foreach Loops",
          "Check If Variable Is Set",
          "Is_* Functions",
          "Checking If Variable Is Empty",
          "Starting With Web Form Data",
          "GET Requests",
          "POST Requests",
          "Required Form Fields"
        ],
        "Final Project": [
          "Final Project"
        ],
        "Summary": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Must be able to download and install a text editor program (free) and a PHP program (also free)"
      ],
      "description": "Course created for 2019-2020\nTaught by a top premium Udemy Instructor...\nI've taught over 130,000 students on Udemy....\n-------------------------------------------------------------------------------------------------------\nAre you new to web development (or PHP) or interested in freelancing? Then course is the perfect match for you. You will learn all the core PHP fundamentals you need to get started as a beginner PHP developer.\nI've started several startups using PHP and it's allowed me to:\nBuild my dream applications from scratch\nTravel the world\nWork from home (and work remotely around the world)\nFind freelance work anywhere I go\nAlways have clients to work with\nAlways have money in the bank\nPHP is one of the worlds most in-demand web languages. WordPress is a content management system that runs over 32% of ALL websites in the world, and it's built using PHP as its coding language. If you decided to learn just one coding language in your entire life, I would suggest PHP because of the high demand for WordPress websites. It's the money-making programming language.\nIf you know PHP, you can create: websites, content management systems, web applications and it will allow you to create startups like Facebook (Facebook actually used PHP!)\nEverybody is excited to learn brand new languages, but the truth is: PHP runs so many websites it would be crazy NOT to learn PHP. Knowing PHP allowed me to travel the world and start a startup in Ireland — and it allows me to code from a beach! If you put economics, market demand and coding languages aside, this is the one language that's enabled me to have a better life.\nWhy?\nOver 1 in 3 websites use PHP. 32% of websites use WordPress which is built using PHP, plus there are tonnes of sites that use other content management systems, or use frameworks like Laravel (also built using PHP).\nYou can literally find a job anywhere in the world if you know PHP. You can easily supplement your income, or change careers, if you know PHP.\nHere are some of my students reviews (these are REAL 5 star reviews from my other PHP course)\nIncredible PHP course*********\nso far - this course is simple and easy to understand with clear direction and to the point info on exactly what you want to know\nNo fluff or nonsense*********\nHe is great! I love that he doesn't talk too much nonsense.\nIt doesn't take 37 hours*************\nThe instructor covered a lot of content in a fast but still understandable manner. Having the basics of PHP I can start making dynamic web pages. Thanks.\n*********************End of Reviews *********************\nMy guarantee:\nBy the end of this course you will be a Junior PHP Developer. If you need help or get stuck, or just need further explanation... I am here for you (I don't have teach assistants to outsource questions to; you will get an answer directly from ME). I've created a free developer support group with over 13,000 web developer from around the world — that means 13,000 more chances for help, answers, clarity and support. But let's be honest: I'm a teacher, my success depends on your success... so I will make sure you succeed!\nNo nonsense or fluff:\nMany other instructors like to talk your ear off, or tell unrelated stories, and say the same thing over and over again. Personally, I find that extremely boring and I won't subject you to that kind of nonsense. You're paying to learn a new skill, you're NOT paying to hear my life story. There's even a review from a student saying exactly this (above).\nHow I teach:\nEvery lesson is designed with a specific pattern to help maximize your learning time. It goes like this:\nLearn the theory\nLearn the code\nPractice the code\nI will teach you about a new subject, we will then dive directly into some code so you can see how it works in real life, and there is a task at the end of every lesson for immediate practice. You can watch some free previews if don't believe me.\nOther courses have a practice lesson at the end of a section — but I know you want (and need) practice right away, so every lesson has a practice task and it's up to you to decide if you want to do them or not.\nYour investment:\nYou will be learning a skill that can set you free from a boring 9-5 job, help you change careers and help you make more money. If this course helped you earn an extra $1,000 this year, that'd be a great investment, right? Well... when you learn PHP, you can earn A LOT more than that. $1,000 is pennies compared to how much you could make. Or maybe money isn't your #1 motive... you can start a new company and make hobby websites and apps using PHP as your backend programming language.\nYour risk:\nUdemy has a 30 day money back guarantee. Don't like this course? Didn't have time to take the course? It doesn't matter what the reason is, you can request a refund. And I completely support this! I don't want your money if you are not going to learn from this course, that's an unfair trade in my opinion. You have NOTHING to lose by learning PHP with this course.\nCommonly Asked Questions:\nQ: Should I learn PHP?\nA: ABSOLUTELY!\nWith over 1 in 3 websites using PHP and over 1,800,000,000 websites (1.8 billion websites as of 2018), it's the smart language to learn. That's over 600,000,000 websites using PHP. That's right. Six hundred MILLION websites.\nQ: Can you make money?\nA: YES!\nWhen you know PHP, contracts literally fall into your lap. To be honest, I turn down a lot of freelance work because I don't have time for it! Go to indeed dot com and search for PHP: you will see tens of thousands of jobs in the US! These are actual jobs, not just contracts (remote jobs included!)\nQ: Will PHP be around in the future?\nA: YES!\nAccording to the TIOBE Programming Index, it's the 8th most popular language in the world. And statistically speaking, it's the most popular backend programming language for websites. Remember, over 600,000,000 websites are using PHP (as of 2018).\nIn this PHP course you will learn how to write raw PHP, what PHP is, and how it works behind the scenes... here are just 22 of the topics you will learn (or check out the curriculum for a full list)\nWhat is PHP\nWhere is PHP used\nHow to install PHP\nWhat a backend developer is\nPHP syntax\nHow to make a web page using PHP\nCoding comments\nPHP variables\nPHP super global variables\nPHP data types\nPHP data structures\nHow to mix HTML and PHP together\nType casting\nConditional statements (if/elseif/else statements)\nTernary logic\nPHP loops (while, for and foreach loops)\nPHP debugging\nPHP security\nHow to make websites dynamic without needing a database\nHow to accept custom user input\nHow to validate a form (custom user input) to make sure it's usable\nHow to read and understand PHP documentation\nAnd much more...\nAt the end of this course is a project you'll be able to finish.\nPlease look at the list of lessons in this course. And definitely watch some free preview lessons to get an idea of how I teach! I think you'll like it :)\nThanks for reading all of this!",
      "target_audience": [
        "New web developers",
        "People interested in learning PHP (this is the entry into WordPress, Laravel, Symfony and freelancing)",
        "People switching careers into web development",
        "If you are an intermediate or expert PHP developer, this course is NOT for you"
      ]
    },
    {
      "title": "CodeIgniter 4 HMVC Beginners To Advance Tutorial",
      "url": "https://www.udemy.com/course/codeigniter-4-hmvc-beginners-to-advance-tutorial/",
      "bio": "Complete Guide for Modular Based Programming (HMVC) Using Spark & CodeIgniter 4",
      "objectives": [
        "CodeIgniter 4 Advance Modules",
        "Working with Spark Commands in CodeIgniter 4",
        "Complete Guide to Work with HMVC Structure Module",
        "Video by Video Live Coding of CodeIgniter 4 Advance Topics",
        "HMVC RESTFul Web Services Development"
      ],
      "course_content": {},
      "requirements": [
        "Beginners knowledge of CodeIgniter framework & its about MVC pattern",
        "Beginners knowledge of Databases"
      ],
      "description": "Inside this course students / developers are going to learn about complete guide -\nWork with HMVC Modular Based Programming\nGet Understanding over Spark Commands\nApplication Development HMVC based structure\nStep by Step Application Development using CodeIgniter 4\nWorking Flow with CodeIgniter 4 PHP Framework\nCodeIgniter 4 Advance level Modules\nEasy & Simple code standards Integrations\nStep by step learning for each about layout, function & code\nModular Based Programming (HMVC) Using Spark & CodeIgniter 4\nRESTful Web Services development Using HMVC Module\nConcept of Namespace - Autoload\nCodeIgniter 4 RESTful APIs development Using Spark & HMVC Module\nCodeIgniter 4 Advance Topics Covered - Migrations, Data Seeders, Scaffolding, RESTful resource.\nHMVC Module with Sample CRUD Application\nMethod Spoofing Concept in CodeIgniter 4\nHMVC Form Validations\nConcept of HMVC Module Routes - Namespace & Route Groups\nHMVC Module Development Concept from Beginners To Advance\nEasy Steps to Develop a HMVC Module in CodeIgniter 4\nCodeIgniter 4 Beginners To Advance Level Understanding\nStandard Code Structure For HMVC Module development\nConcept of Custom Library & Helpers in detail\nCRUD Operation of HMVC with Bootstrap Library & jQuery Validation\nInside this course of CodeIgniter 4.x, you will get the good and informative knowledge including HMVC Module development. All these topics we'll cover in detail with live coding standards of CodeIgniter 4.x Framework.\nFor this course, student/developer needs only a bit knowledge of MVC pattern of CodeIgniter & little bit of Database. That's it. Rest all things will be cleared during each detailed session.",
      "target_audience": [
        "Beginner/Intermediate/Expert CodeIgniter PHP Framework Learners",
        "PHP framework lover"
      ]
    },
    {
      "title": "WordPress Plugin Development -> Deep dive discovery!",
      "url": "https://www.udemy.com/course/wordpress-plugin/",
      "bio": "Develop your profitable WordPress Plugins! Discover the easy to follow 5P step-by-step method for WP plugin creation!",
      "objectives": [
        "Create your own WordPress Plugin from scratch.",
        "Make money selling plugins to paying customers.",
        "Make back the investment by the first plugin you build instead of buy",
        "Use WordPress Hooks to create real WP plugins"
      ],
      "course_content": {
        "Introduction to the course": [
          "Why WordPress Plugin development gives you power?"
        ],
        "PREPARE - STEP 1 - Plugin 101": [
          "WordPress Plugin Technology - Introduction",
          "WordPress: Plugin Structure",
          "WordPress: The LOOP and Hooks",
          "WordPress: Plugin Shortcodes",
          "WordPress: Admin Access, Metadata and Widgets",
          "WordPress: Custom Tables - Taxonomies - Post Types",
          "WordPress Plugin Questions"
        ],
        "PLAN - STEP 2 - Data Storage": [
          "MySQL Overview",
          "What is the name of the WordPress MySQL database?",
          "Opening phpMyAdmin and creating a simple database",
          "Physical Deliverable: SQL Script",
          "Action Step: Create the table"
        ],
        "PROTOTYPE - STEP 3 - Bootstrap Prototyping": [
          "Setting up the Bootstrap prototype template",
          "Shortcode prototype",
          "Admin prototype",
          "Memberlist detail prototype",
          "Physical Deliverable: Prototype",
          "Action Step: Get the prototype up and running!"
        ],
        "PRODUCE - STEP 4 - Plugin Development": [
          "Plugin Skeleton: Starting from Scratch!",
          "WordPress Plugin shortcode: Defining constants and creating the file structure",
          "WordPress Plugin shortcode: Creating the form handling",
          "WordPress Plugin shortcode: Quick test and some bug fixing",
          "WordPress Plugin Admin: Adding a new menu",
          "WordPress Plugin Admin: Key insight!",
          "WordPress Plugin Admin: Listing the members for edit and insert",
          "WordPress Plugin Admin: Display the actionable list of members",
          "WordPress Plugin Admin: Hooking up the Bootstrap CSS",
          "WordPress Plugin Admin: The important SWITCH function to handle form actions",
          "WordPress Plugin Admin: Displaying the EDIT form for a single member",
          "EDIT form: Handle the Cancel button - (and fixing some post errors)",
          "EDIT form: Handle the Delete button",
          "EDIT form: Handle the Update button",
          "WordPress Plugin Admin: Connecting ADD NEW menu item",
          "ADD NEW MEMBER: Creating the display form for a new member",
          "ADD NEW MEMBER: Handling the insertion of the new member",
          "Action Step: Finish developing your own plugin!"
        ],
        "Conclusion": [
          "Congratulations on finishing the Develop a WordPress Plugin course and a BONUS",
          "Physical Deliverable: Working WP Plugin",
          "BONUS! Special thanks"
        ]
      },
      "requirements": [
        "Some basic web development knowledge",
        "PHP and SQL knowledge is helpful",
        "Having done some WordPress experiments :)",
        "Willingness to dive deeper !"
      ],
      "description": "Developing WordPress plugins is hard and you’ll get CONFUSED and LOST\nYou may THINK that is true - and this is exactly what I thought\nBut - you know what I found?\nDeveloping your own WordPress Plugins is EMPOWERING. Using plugins you can now bend the WordPress platform completely under YOUR command!\nWhen I first started looking into what plugins are available I was disappointed\nI STRUGGLED with finding usable plugins.\nMany of them don’t work and those that DO work often don’t deliver to the exact demands me or my CUSTOMERS have\nThen it got worse…\nI spent a LOT of time and effort trying to hack my way through the WordPress codex\nWAY too much time!\nFinally I have discovered simple STEP by STEP methods to create a highly USABLE plugin - methods that you can use in YOUR OWN projects or even put on the market!\nI’ll be your tour-guide throughout this FUN adventure - I will WALK with you through the methods that I use to build fully integrated WordPress Plugins!\n\nI am EXCITED to see that you have started your own journey into the world of ADVANCED web site development!\nIn this course I’ll lead you - step by step - focusing on the most IMPORTANT and difficult tasks you need to complete!\nMy promise to you is this:\nDiscover the 5P step-by-step method to PREPARE - PLAN - PROTOTYPE - PRODUCE - and finally PROFIT from a solid plugin\nCreate a fully working WordPress Plugin using PHP and MySQL.\nTake the ready made plugin and CUSTOMIZE as you like. Use for your own website or sell as part of a BIGGER solution to local clients where you can charge hundreds or even THOUSANDS of dollars!\n\n\nThis How-to course is fast-paced - so hold on as we SPEED ahead. If you feel I am going too fast - just rewind the video and watch it again :)\nBy following the lectures carefully, you can get a job as a web developer or even sell full featured websites to high-paying customers.\nDoes this sound exciting?\n...\nSo - Let’s get started\n\nEnroll now!\nThere is absolutely no risk when purchasing with the full 30 day money back guarantee.\nAnd - I’ll throw in these bonuses:\nDownload the full code for the working plugin we develop\n\nGet the WordPress plugin Cheat Sheet - with tips and tricks for the most used functions\n\nInvitation to a live Q&A where you can dive even DEEPER\nJust hit the BIG BLUE take this course button and get started!\nI can’t wait to see those AMAZING WordPress plugins that you’ll create using these methods!\nIMAGINE having your own Plugin up and running TODAY, right after going through this course - and be EARNING big - soon after that!\nDon’t get left behind - ENROLL NOW and invest in your future\nFeel the power this NEW skill set will give you.\nTake this course now!",
      "target_audience": [
        "Web Developers",
        "PHP Developers",
        "WordPress Developers"
      ]
    },
    {
      "title": "Vue.js 2: Zero to Hero, Vuex Store, Vue CLI 3-Complete Guide",
      "url": "https://www.udemy.com/course/vuejs-vuex-complete-guide/",
      "bio": "Learn Vue.js 2 from scratch with Vuex State management and Build Awesome, Fast, Real World Application with Vue.js",
      "objectives": [
        "Learn how to communicate between parent-child components using Props and Events",
        "Vue JS Concepts directives, methods, computed properties, two way data binding, conditional rendering, dynamic classes, props, events, filters, life cycle hooks",
        "Vuex State management library concepts such as Actions, Mutations, Getters, State",
        "Build Real World App with Vue JS",
        "Vue Js Framework from scratch",
        "Build Vue Js in Production mode",
        "Learn mapAction, mapState and mapGetters in Vuex",
        "Form Validation in Vue JS",
        "Create awesome UI with bootstrap-vue library",
        "Learn how to solve complex Props and Events flow between components with the help of Vuex library",
        "Master every concepts of Vue JS Framework",
        "Build scalable apps with state management"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation & Tools Used": [
          "Tools used in this course",
          "Install nodejs and npm"
        ],
        "Modern Javascript Basics": [
          "Section Intro",
          "Object and Array destructuring",
          "Spread Operator",
          "'this' keyword in Regular vs Arrow Function",
          "Async Await Vs Promise"
        ],
        "Vue Js Basics": [
          "Where to find source code ?",
          "Getting started with Vue JS: Creating Vue App",
          "Two way data binding using v-model",
          "Conditional Rendering",
          "v-bind directive",
          "Event handling and Methods",
          "List Rendering",
          "Dynamic Class Styling",
          "Computed Properties",
          "Filters",
          "Components",
          "Lifecycle Hooks",
          "'this' keyword in Vue Instance"
        ],
        "Creating Real World App With Vue CLI 3": [
          "Project Overview",
          "Installing Vue CLI",
          "Creating/Setting up App with Vue CLI",
          "Project Structure",
          "Integrating Bootstrap Vue",
          "App Header Component",
          "Setting up App Layout",
          "Add Product Form UI",
          "Handling ESLint warnings",
          "Add Product Form Validation",
          "Setup JSON Server - REST Endpoints",
          "Fetch product list from REST Endpoint",
          "Parent Child Component",
          "Passing Props to list product component",
          "Add product functionality",
          "Delete Product functionality",
          "Update Product Part-1",
          "Update Product Part-2",
          "Update Product Part-3"
        ],
        "Vuex State Management and Vue Router": [
          "Project Overview: Vuex + Vue Routing",
          "What is Vuex and What problem does it solve",
          "Vue Devtools",
          "Setting up project with Vuex and Vue Router",
          "Setting up Product Manager App with Vue Router and UI",
          "ESLint Config Update",
          "Creating State in Vuex Store",
          "Implementing mapState",
          "Implementing Getters and mapGetters",
          "Set Products Action and Mutation",
          "Add Product Action and Mutation",
          "Delete Product Actions and Mutation",
          "Update Product Actions and Mutations",
          "Implementing mapActions",
          "Vuex Strict Mode",
          "Managing Spinners and Loader",
          "Implementing Mixins and Toast UI",
          "Environment Variables",
          "Fixing ESLint errors",
          "Building Vue JS App in Production Mode"
        ],
        "SOURCE CODE": [
          "SOURCE CODE",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Very basic understanding of HTML, CSS, and JavaScript"
      ],
      "description": "Learn Vue.js 2 from scratch with Vuex State management library and Build Awesome Real World Application with Vue JS\n\nWhat is Vue.js?\n\nVue.js is an open-source JavaScript framework for building user interfaces and single-page applications\n\n\nWhat is Vuex?\n\nVuex is a state management pattern + library for Vue.js applications. It serves as a centralized store for all the components in an application, with rules ensuring that the state can only be mutated in a predictable fashion. It also integrates with Vue's official dev tools extension to provide advanced features such as zero-config time-travel debugging and state snapshot export/import.\n\nThe state, the source of truth that drives our app.\nThe view, a declarative mapping of the state.\nThe actions, the possible ways the state could change in reaction to user inputs from the view.\n\n\nAdvantages of Vue Js Framework:\n♦ Approachable\nAlready know HTML, CSS and JavaScript? Read the guide and start building things in no time!\n\n♦ Versatile\nAn incrementally adoptable ecosystem that scales between a library and a full-featured framework.\n\n♦ Performant\n20KB min+gzip Runtime, Blazing Fast Virtual DOM, Minimal Optimization Efforts\n\n\nYou will learn the following things in the course:\n\n♦ Build a Real-World Application with Vue jS and Vuex state management library.\n♦ Learn Vue JS concepts such as directives, methods, computed properties, two-way data binding, conditional rendering, dynamic classes, props, events, filters, life cycle hooks, and much more.\n\n♦ Learn to create Single-Page-Application (SPA) with Vue Routing\n\n♦ Learn how to communicate between parent-child components using Props and Events.\n\n♦ Understand Vuex State management library concepts such as Actions, Mutations, Getters, State.\n\n♦ Learn how to architect user interface into re-usable components.\n\n♦ Understand all lifecycle hooks provided by the Vue Js.\n\n♦ Learn mapAction, mapState and mapGetters in Vuex.\n\n♦ Learn to manage Environment variables in various modes such as development and production.\n\n♦ Form validation in Vue JS\n\n♦ Learn about Mixins in Vue JS.\n\n♦ Integrate bootstrap-vue library to create awesome UI in Vue JS.\n\n♦ and more",
      "target_audience": [
        "Javascript lovers who want to learn Vue JS from scratch"
      ]
    },
    {
      "title": "RxJS Crash Course - Reactivex From Zero to Hero",
      "url": "https://www.udemy.com/course/rxjs-crash-course-reactivex-from-zero-to-hero/",
      "bio": "Prepare for RxJS with and without Angular. Learn RxJS skills and concepts.",
      "objectives": [
        "Be very well prepared for any RxJS usages you will have",
        "Excel in a wide variety of RxJS possibilities",
        "Strengthen you RxJS skills and your knowledge of important concepts",
        "Learn the skills, concepts, and techniques of RxJS",
        "Feel very confident in RxJS projects"
      ],
      "course_content": {},
      "requirements": [
        "Javascript knowledge"
      ],
      "description": "This course is great preparation for any RxJS that you may have coming up. Reactive programming needs a lot amount of knowledge, but the best way to prepare for it is a lot of practice! In this course you will learn everything that come from real RxJS projects and reactive programming. There are no excersises that nobody asks here. In every video you will learn something useful that you will write every day. We will take a deep dive into the skills, concepts, and techniques that are required to solve each problem.\nWhen you have completed this course you will have mastered RxJS on a high level and you will also have learned the concepts, skills, and techniques, like creating custom Observables and using things like caching or combining streams that are necessary for you to excel in any reactive programming. You will feel very confident working with RxJS in any project you will have. On top of all this, you will strengthen your reactive programming skills and RxJS fundamentals in overall.\nCore topics of the course:\nObservables and Observers\nConverting JS data to observables\nMapping and filtering streams\nWorking with API\nCombining streams\nWorking with RxJS subjects\nCaching streams\nSolving callback hell with observables",
      "target_audience": [
        "Anyone who wants to learn RxJS",
        "Anyone who wants to make RxJS code safe",
        "Anyone who wants to strengthen their RxJS skills and knowledge",
        "Anyone who wants to improve their code"
      ]
    },
    {
      "title": "HTML5 & CSS3 Site Design",
      "url": "https://www.udemy.com/course/html5-css3-site-design/",
      "bio": "Take the confusion and murkiness out of the fundamentals!",
      "objectives": [
        "Gain valuable skills, develop web projects, and push your career forward!"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to HTML5 & CSS3!",
          "A Look At What We'll Build"
        ],
        "Let's Get Started!": [
          "Programs I'll Be Using",
          "In The Beginning…HTML Fundamentals",
          "Understanding What CSS is All About",
          "Viewing A Page's Background Code"
        ],
        "Gettin' Your Files Organized!": [
          "Organizing Site Files",
          "Creating A Page and Understanding Index Files",
          "Setting Up An External Style Sheet"
        ],
        "Doin' Nuthin'? Let's Build A Web Layout From Scratch!": [
          "Setting Up The Page Structure",
          "Connecting the External Style Sheet and Testing",
          "Inserting and Formatting the Site Header",
          "Finishing Up The Basic Layout",
          "Debugging for Internet Explorer",
          "Understanding How the Layout Works",
          "Using Divs for Page Layout",
          "A More Economical Approach to Layout and CSS",
          "Using Float And Clear",
          "Centering the Layout",
          "Nesting Layout Objects",
          "Spacing Apart the Layout",
          "Final Touches"
        ],
        "Insertin' And Formattin' Text!": [
          "Inserting Text Into the Layout",
          "Setting Up Paragraphs and Headings",
          "Adjusting the Layout For Text, Part 1",
          "Adjusting the Layout For Text, Part 2",
          "Formatting HTML Headings with CSS",
          "Formatting Paragraphs",
          "Using Class Rules to Format Text",
          "More Formatting with Class Rules",
          "Working More Efficiently with CSS",
          "Inserting and Formatting Lists",
          "Using A List to Build The Main Navigation Menu",
          "Setting Up the Footer Navigation"
        ],
        "Now It's Time For Some Graphics!": [
          "Inserting an Image",
          "Resizing Images with your Graphics Editor",
          "Controlling Graphics with CSS",
          "Inserting the FeatureBox Images",
          "Adjusting the FeatureBox Layout",
          "Setting Up the FeatureBox Titles",
          "Illustrator, Photoshop, HTML, and CSS Workflow"
        ],
        "Site Rollout: From A Single Page To A Multi-Page Site!": [
          "Getting Ready for Site Rollout",
          "How to Not Roll Out A Website",
          "Rollout Part 1: Setting Internal Hyperlinks",
          "Rollout Part 2: Creating The Site's Pages",
          "Previewing And Testing The Site",
          "A Final Thought on Site Rollout"
        ],
        "Inserting Additional Page Elements!": [
          "Adjusting the Site's Hyperlink Formatting",
          "Inserting A Simple Slideshow",
          "Inserting and Formatting Tables",
          "Inserting A Google Map",
          "Formatting A Customer Testimonial Page",
          "Setting Up A Contact Us Page",
          "Finalizing the Site",
          "Organizing the CSS File"
        ],
        "Going Live: Uploading the Completed Site!": [
          "Setting the Remote Site Info",
          "Uploading the Local Site to the Remote Server",
          "Testing the Live Site",
          "Making Edits and Updating the Live Site",
          "Testing And Debugging For Other Browsers"
        ],
        "Wrapping Up HTML5 & CSS3": [
          "Where to Go from Here"
        ]
      },
      "requirements": [
        "Basic computer skills"
      ],
      "description": "Need to learn how to build a website, or brush up on your coding skills to enhance an existing site? This course will show you, step-by-step, how to set up a web site from scratch and tips and tricks of the trade to make your site more attractive and user-friendly. From what tools you need to build your site and creating and formatting pages, to what to test and look for before your site goes live, award-winning trainer Geoff Blake gives detailed and valuable information that will help you to master HTML coding skills. Geoff’s casual tone, real world examples, and the follow-along video make this course as entertaining as it is informative.",
      "target_audience": [
        "Those looking to build a strong foundation in web design, HTML, and CSS"
      ]
    },
    {
      "title": "WordPress Page Speed Optimization (improve SEO)",
      "url": "https://www.udemy.com/course/wordpress-optimization-speed-up-your-wordpress-site/",
      "bio": "The fastest way to optimize your WordPress website to load super fast and up the visitor retention and conversions",
      "objectives": [
        "You will be able to optimize any WordPress website to load in less than 3 seconds (in most cases less than 3 seconds).",
        "You will learn how to configure server-side cache for faster website loading and optimized use of server resources.",
        "You will learn how to optimize images in bulk by using free software.",
        "How to optimize JS and CSS for faster loading and better cache usage"
      ],
      "course_content": {
        "Intro": [
          "Introduction - about the author and the course.",
          "The tool we are going to use for testing and tracking the optimization progress.",
          "Why WordPress sites are so slow. Real website example.",
          "How to use this course (2022 update)"
        ],
        "Improve your website speed using just 2 plugins (2022 update)": [
          "Page Speed Optimization - Step By Step",
          "How themes and builders affect the website speed",
          "Sliders - how they impact the speed and do you really need them",
          "Fastest way to make a test/dev copy of your website",
          "Copy the changes from the test to the live website. Hide/remove the test site."
        ],
        "First Byte Time and Keep Alive": [
          "Example WordPress-based websites that need speed optimization.",
          "What is \"First Byte Time\" and how we optimize it.",
          "More about \"First Byte Time\" and what else we can do to improve it.",
          "\"Keep Alive\" explained - what is it and how to configure it."
        ],
        "How To \"Compress Transfer\"": [
          "What is \"Compress Transfer\". Optimization method, using CPanel.",
          "Optimizing \"Compress Transfer\", using .htaccess directives.",
          "Another way to edit the .htaccess file, using FTP client software."
        ],
        "How To Optimize Images": [
          "Bulk optimize all the images, uploaded to a WordPress site.",
          "Image optimization on the fly (optimization at the time of uploading)."
        ],
        "Cache Static Content": [
          "Why caching the static content is important?",
          "How to enable the static content cache."
        ],
        "Additional optimizations": [
          "Merging and minifying of CSS and JS files.",
          "How to test the website speed in the Chrome browser.",
          "What is CDN and how to use it."
        ],
        "Conclusion": [
          "Conclusion."
        ]
      },
      "requirements": [
        "A WordPress website to apply all the optimizations discussed in the course. This course is not suitable for optimization of website, which are not based on WordPress.",
        "You need to have some basic experience using WordPress - how to manage blog posts and pages and how to install themes and plugins."
      ],
      "description": "In this course you will learn how to optimize your WordPress site for maximum speed and fast loading. You can start with a website that loads for 15 or 20 seconds, but after you go through all the optimizations steps explained in the videos you will have a website that loads in less than 5 seconds (sometimes less than 3 seconds).\nA faster websites leads to better user experience, higher visitor retentions, better conversions and higher ranking in the Google search results. Here are some real life examples and stats that support that thesis:\nKissMetrics found that:\n\n- 47% of consumers expect a website to load in 2 seconds or less;\n- A 1 second delay in loading decreases customer satisfaction by 16%;\n- A 1 second delay in page response can result in a 7% reduction in conversions;\nCDNetworks give us other stats:\n- 39% of e-retailers claimed they lost money last year due to performance or stability problems;\n- Cutting just 3 seconds off load time generates a revenue increase of 7-12%;\n- Amazon’s calculated that page load slowdown of just one second could cost it $1.6 billion in sales each year;\n- 21% of online shoppers abandoned shopping carts because the process was taking too long;\n- Four in 10 Americans give up accessing a mobile shopping site that won’t load in just three seconds;\n\nEven if the speed is so crucial you will still find a lot of web sites which are not optimized. A random tests shows that 90% of the WordPress websites are not optimized and the loading time of each of these sites can be reduced in half.\nIn the first section of the course you can see how you can test your website and to find if it is optimized and what kind of improvements it needs. Every component that affects the web site speed is explained and optimizations methods are then suggested. You will learn how to optimize the following:\n- First byte time;\n- Keep-alive enabled;\n- Compress transfer;\n- Compress images;\n- Cache static content;\n- Effective use of CDN;\nIn the course you will see a real life example. All the resources used to optimize the WordPress website are free.\n\n\nAbout the author\nMy name is Stanil Dobrev and I'm a full stack web developer with 25+ years experience. I'm a WordPress developer for more than 15 years and I have created hundreds of Wordpress websites and lot of custom themes and plugins. My most popular plugins are \"Fast Member\", \"Social Time Master\" and \"Interactive Video Player\". I always strive to provide the best possible quality with my products and services and I have thousand of happy customers.\nImportant part of the WordPress development is the performance optimizations and this is something that I focused on for the last 8 years. I tested hundreds of methods for WordPress speed optimization and I have compiled the most easy and most effective of them all. In this video course I share my experience as a WordPress developer and explain the optimization process I go through for every website I build for clients. I hope you will find it useful! :-)",
      "target_audience": [
        "This course is good for WordPress users. If you're running a WordPress-based website then this course is for you.",
        "If you're a blogger and you're using WordPress to publish your content this course will help you optimize the Website for speed and fast loading.",
        "The course will help you optimize the performance of any WordPress site, which leads to increased conversions and user retention."
      ]
    },
    {
      "title": "Angular & NestJS - The Modern MEAN Stack Guide",
      "url": "https://www.udemy.com/course/angular-nestjs-the-modern-mean-stack-guide/",
      "bio": "Learn how to connect your Angular Frontend to a Node NestJS & MongoDB Backend by building a real Application",
      "objectives": [
        "API development using NestJS",
        "Connecting Angular App to Node NestJS Backend",
        "Building a full stack Angular and NestJS application",
        "Using MongoDB with Mongoose for data persistence",
        "Use NestJS as a NodeJS Framework",
        "Building a complete CRUD (Create, Read, Update, Delete) Application",
        "Using Swagger for API Documentation"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML, CSS and basic JavaScript knowledge",
        "Basics of Angular"
      ],
      "description": "We can use Angular to create powerful frontend web applications powered by TypeScript / JavaScript. What if we can use the Angular knowledge to build backend applications also, here comes NestJS to the rescue. NestJS is heavily inspired by Angular.\nEven If you don't know Angular, You should give NestJS a try. NestJS is the most popular NodeJS by github stars this year.\nThis course takes you from zero to published app, taking a very practice-orientated route. We'll build a quotes app throughout this course, we'll see how we can use Angular Material library, how to fetch and handle user input, how to store data and much more!\nWe will also see, how we can document our api with the help of Swagger.\nWe will touch on various topics like Architecture, Components, Navigation, User Input, CRUD, Http, CLI etc...\nAnd since building apps is only part of the fun, you'll also learn how we can deploy the application we build from Development to Production Envrionment using Heroku, Netlify, Cloud MongoDB Atlas.\nWhat exactly are you going to learn then?\nNestJS Fundamentals\nNestJS Controllers, Services\nUsing Swagger\nUsing MongoDB Compass\nDebugging NestJS\nCORS\nWorking with MongoDB, Mongoose\nCreate, Read, Update, Delete with MongoDB\nBackend Validation, Logging\nAngular Fundamentals\nAngular CLI\nUsing Angular Schematics\nUsing Angular Material For UI\nResponsive Layouts using Flexbox and Media Queries\nLazy Loading\nAsync Data\nObservables\nSetup Development and Production Envrionments in Angular\nDeloy Backend app to Heroku\nDeploy Database on Cloud MongoDB Atlas\nDeploy FrontEnd app to Netlify\nand much more ...\nSo Let's Get Started.",
      "target_audience": [
        "Angular developers who want to dive into backend"
      ]
    },
    {
      "title": "Laravel 11: Build a Multi-Vendor Digital Marketplace (2025)",
      "url": "https://www.udemy.com/course/build-laravel-multi-vendor-digital-marketplace/",
      "bio": "Develop a Robust Multi-Vendor Digital Marketplace Platform Using Laravel From Setup to Deployment Step-by-step",
      "objectives": [
        "Complete Laravel Basic to Advanced",
        "Multi Level Category Management",
        "Order Management",
        "Dynamic Role Permission Management",
        "Payment Gateway Implementation (PayPal, Stripe, Razorpay)",
        "Dynamic SMTP Configuration",
        "KYC Verification Module",
        "Multi File Uploads",
        "Multi Authentication (Admin, User, Author, Product Reviewer)",
        "Rating System",
        "Cart and Ecommerce Features",
        "Advance Admin Dashboard",
        "User Dashboard",
        "Author Dashboard",
        "Withdraw System",
        "Dynamic Page Builder",
        "Dynamic Site Settings",
        "Dynamic Newsletter",
        "Mail Sending",
        "Database Clear Module",
        "Query Optimization",
        "Best Practices",
        "Full Source Code",
        "Lecture-wise GitHub Commits",
        "Lecture-wise GitHub Commits",
        "And More"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel Fundamental": [
          "Local Environment Setup",
          "VS Code Plugins Setup",
          "VS Code Path Configuration",
          "Let’s Install Our Very First Project",
          "Laravel File and Folder Structure",
          "Knowing MVC Architecture",
          "Laravel Artisan",
          "Laravel Artisan Tinker",
          "Basic Routing",
          "Route Parameters",
          "Named Routes",
          "Route Groups",
          "Route Methods",
          "Fallback Routes",
          "Introduction to Laravel Blade Views",
          "Create Views via CLI",
          "Blade Directives",
          "Passing Data to Blade",
          "Extending Blade",
          "Including Sub-views",
          "Conditional Rendering in Blade",
          "Stacks",
          "More Useful Blade Directives",
          "Introduction to Laravel Controllers",
          "Basic Controllers",
          "Single Action Controller",
          "Resource Controllers",
          "Setting up Laravel Database Connection",
          "Migrations",
          "Table Data Types",
          "Important Migration Commands",
          "5_Model",
          "Model with Custom Table Name",
          "Seeder",
          "Factories",
          "Adding New Columns to Existing Tables",
          "Introduction to Query Builder",
          "Creating New Data",
          "Retrieving Data From DB",
          "Updating Data",
          "Deleting Data",
          "Retrieving a List of Column Values",
          "Aggregates",
          "Introduction to Eloquent ORM",
          "Eloquent - Creating New Data",
          "Eloquent - Retrieving Data",
          "Eloquent - Updating Data",
          "Eloquent - Deleting Data",
          "Eloquent - Fillable and Mass Assignment",
          "7_Eloquent - Conditional Clause",
          "Eloquent - Query Scopes",
          "Eloquent - Soft Deleting",
          "Eloquent - Restore Trashed Data or Delete it",
          "Form Markup",
          "Form Submitting and CSRF",
          "Accessing Form Contents from Method",
          "Input Field Validation",
          "Custom Validation Message",
          "Custom Request Classes",
          "More Validation Rules",
          "Populating Form Data",
          "Saving Form Data",
          "Introduction to File Storage",
          "File Upload Form Markup",
          "Uploading File in Storage",
          "Storage Link",
          "Custom Storage Disk",
          "Change File Name Before Save",
          "Remove File From Storage",
          "File Validation",
          "HTTP Redirects",
          "CRUD - Template Overview",
          "CRUD - Template Mastering",
          "CRUD - Working with Create Feature",
          "CRUD - Submit Form and Validation",
          "CRUD - Store Submitted data",
          "CRUD - Handle File Submitting",
          "CRUD - Showing Created Data",
          "CRUD - Working with Update Feature (Part -1)",
          "CRUD - Working with Update Feature (Part -2)",
          "CRUD - Working with Show Feature",
          "CRUD - Working with Delete Feature",
          "CRUD - Working with Search Feature",
          "CRUD - Working with Order Feature",
          "CRUD - Soft Delete Feature (Part - 1)",
          "CRUD - Soft Delete Feature (Part - 2)",
          "Joins - Introduction",
          "Joins - Making Database Ready",
          "Joins - Inner Join",
          "Joins - Left Join",
          "Joins - Right Join",
          "Joins - Full Join",
          "Eloquent Relations - Introduction",
          "Eloquent Relations - One to One hasOne()",
          "Eloquent Relations - One to One belongsTo()",
          "Eloquent Relations - One to Many hasMany()",
          "Eloquent Relations - Many to Many belongsToMany()",
          "Eloquent Relations - hasMany Through",
          "Eloquent Relations -Polymorphic Relationships",
          "Middleware - Introduction Of Middleware",
          "Middleware - Let’s Create a Scenario Where We Ca",
          "Middleware - Create Middleware",
          "Middleware - Assigning Middleware to Route",
          "Middleware - Assigning Middleware to Route Group",
          "Middleware - Controller Middleware",
          "Middleware - Global Middleware",
          "Middleware - Middleware Groups",
          "Middleware - Middleware Alias",
          "Middleware - Middleware Parameters",
          "Authentication - Introduction",
          "Authentication - Install Breeze Starter Kit",
          "Authentication - Redirect User To Specific Page",
          "Authentication - Retrieving The Authenticated Us",
          "Authentication - Recreating Logout Feature",
          "Authentication - Protecting Routes",
          "Authentication - Verify Email",
          "Authorization - introduction",
          "Authorization - Gates",
          "Authorization - Policy",
          "Authorization - Verifying Authorization in Blade",
          "Responses - Redirect Responses",
          "Responses - Other Response Types",
          "Setup mail trap configuration",
          "Mail - Send a simple email with laravel",
          "Send Html View as Mail Body",
          "Mail - Attaching files to email",
          "Mail - Queue Mail",
          "Blade Components - Introduction to Blade Components",
          "Blade Components - Creating Blade Components",
          "Blade Components - Passing Data To Components (Part -1)",
          "Blade Components - Passing Data To Components (Part -2)",
          "Blade Components - Attributes",
          "Blade Components - Component Slots",
          "Session - Introduction of http session",
          "Session - Storing data at session",
          "Session - Retrieving data from session",
          "Session - Deleting data from session",
          "Caching Introduction",
          "Difference Between Session And Cache",
          "Storing Data In Cache",
          "Storing Data in Cache From Database and Retrieve",
          "Caching - Removing Data from Cache",
          "Queues Introduction",
          "Creating The First Job And Configuring Queues",
          "Job -Queueing an email"
        ],
        "Envionment Setup": [
          "1_Environment Setup with Laravel herd",
          "2_Setup Code Editor"
        ],
        "Project Road Map and Plannings": [
          "1_Road Map - Project Plannings"
        ],
        "Project Install and Multi Auth Setup": [
          "1_Project Install - Installing a Fresh Laravel Project",
          "2_Multi Auth - Plan discussion",
          "3_Multi Auth - Working with Admin Authentication System (Part -1)",
          "4_Multi Auth - Working with Admin Authentication System (Part -2)",
          "5_Multi Auth - Working with Admin Authentication System (Part -3)",
          "6_Multi Auth - Working with Admin Authentication System (Part -4)",
          "7_Multi Auth - Working with Admin Authentication System (Part -5)",
          "8_Multi Auth - Working with Admin Authentication System (Part -6)",
          "9_Multi Auth - Working with Admin Authentication System (Part -7)"
        ],
        "Admin Panel Setup and Mastering": [
          "1_Admin Mastering - Template Overview",
          "2_Admin Mastering - Mastering Admin Login Template (Part -1)",
          "3_Admin Mastering - Mastering Admin Login Template (Part -2)",
          "4_Admin Mastering - Mastering Dashboard (Part -1)",
          "5_Admin Mastering - Mastering Dashboard (Part -2)",
          "6_Admin Mastering - Handling Logout"
        ],
        "Frontend Setup and Mastering": [
          "1_Frontend Mastering - Template Overview",
          "2_Frontend Mastering - Home Template Mastering (Part -1)",
          "3_Frontend Mastering - Home Template Mastering (Part -2)",
          "4_Frontend Mastering - Login Page Mastering",
          "5_Frontend Mastering - Dashboard Page Mastering",
          "6_Frontend Mastering - Register Page Mastering",
          "7_Frontend Mastering - Reset Page Mastering",
          "8_Admin Mastering - Admin Reset Page Mastering",
          "9_Clear Resources - Delete Unused Files"
        ],
        "ER Diagram": [
          "1_ER Diagram - Discussion About Product Diagram"
        ],
        "Profile Update Module": [
          "1_Profile Update - Update Default User Table Columns",
          "2_Profile Update - Working With Profile Update (Part -1)",
          "3_Profile Update - Working With Profile Update (Part -2)",
          "4_Profile Update - Working With Profile Update (Part -3)",
          "5_Profile Update - Working With Profile Update (Part -4)",
          "6_Profile Update - Working With Profile Update (Part -5)",
          "7_Profile Update - Showing Notification",
          "8_Password Update - Working With Password Update",
          "9_Enhancements - Creating Input Components (Part -1)",
          "10_Enhancements - Creating Input Components (Part -2)",
          "11_Enhancements - Wrapping Static Texts With Localization Syntax",
          "12_Admin Profile Update - Working With Admin Profile Update (Part -1)",
          "13_Admin Profile Update - Working With Admin Profile Update (Part -2)",
          "14_Admin Profile Update - Working With Admin Profile Update (Part -3)",
          "15_Delete File - Delete Old Image on Update",
          "16_Admin Password Update - Working With Admin Password Update"
        ],
        "Role and Permission Module": [
          "1_Role and Permission - Discussion About What We Will Do Next",
          "2_Role and Permission - Working With Role Permission (Part -1)",
          "3_Role and Permission - Working With Role Permission (Part -2)",
          "4_Role and Permission - Working With Role Permission (Part -3)",
          "5_Role and Permission - Working With Role Permission (Part -4)",
          "6_Role and Permission - Working With Role Permission (Part -5)",
          "7_Role and Permission - Working With Role Permission (Part -6)",
          "8_Role and Permission - Working With Role Permission (Part -7)",
          "9_Role and Permission - Working With Role Permission (Part -8)",
          "10_Role and Permission - Working With Role Permission (Part -9)",
          "11_Role and Permission - Finishing up",
          "12_Assign Role - Working With Role Assign Module (Part -1)",
          "13_Assign Role - Working With Role Assign Module (Part -2)",
          "14_Assign Role - Working With Role Assign Module (Part -3)",
          "15_Assign Role - Working With Role Assign Module (Part -4)",
          "16_Assign Role - Working With Role Assign Module (Part -5)",
          "17_Assign Role - Working With Role Assign Module (Part -6)",
          "18_Assign Role - Working With Role Assign Module (Part -7)"
        ]
      },
      "requirements": [
        "You have to know basic PHP and OOP",
        "Basic HTML, CSS, Bootstrap, jQuery",
        "Local Server : XAMPP/WAMP/MAMP/Laragon",
        "Text Editor/IDE: Notepad++ / Sublime Text / Visual Studio Code / PhpStrom"
      ],
      "description": "Are you ready to master Laravel 11 and build a multi-vendor digital marketplace from scratch? This course is designed to take you from Laravel basics to advanced concepts, helping you create a powerful, real-world Laravel marketplace platform where multiple vendors can sell digital products like code scripts, videos, audio files, plugins, and more.\nWhy Learn Laravel 11?\nLaravel is one of the most popular PHP frameworks, known for its scalability, security, and ease of use. With Laravel 11, you get the latest enhancements, improved performance, and powerful new features that make building marketplace applications more efficient than ever. This course will help you harness the full potential of Laravel to develop a feature-rich digital marketplace with best coding practices.\nWhat Will You Learn?\nThis Laravel 11 course is a hands-on, project-based learning experience where you'll build a fully functional multi-vendor marketplace step by step. Here’s what you’ll learn:\nMaster Laravel 11 from Basics to Advanced – Perfect for beginners and experienced developers\nMulti-Vendor System – Vendors can register, upload digital products & manage sales\nDynamic Role & Permission Management – Secure user roles for Admin, Vendors, Authors & Reviewers\nAdvanced Product Management – Multi-category support, file uploads & digital product delivery\nPayment Gateway Integration – Implement PayPal, Stripe, Razor pay & more with Laravel\nKYC Verification Module – Secure user verification for marketplace credibility\nOrder & Withdrawal Management – Manage purchases, vendor payouts\nRating & Review System – Customers can leave feedback on digital products\nCart & Checkout System – Fully functional e-commerce features built with Laravel\nDynamic Page Builder – Customize marketplace pages with an easy-to-use page builder\nPowerful Admin Dashboard – Control users, products, transactions & settings\nUser & Vendor Dashboards – Track earnings, manage products & monitor performance\nSMTP Configuration & Newsletter System – Manage email marketing within Laravel\nDatabase Optimization & Best Practices – Improve Laravel performance & security\nFull Laravel Source Code & GitHub Commits – Get complete project files for reference\nWhy Take This Laravel Course?\nUnlike other courses that only scratch the surface, this course dives deep into Laravel 11 development with a real-world multi-vendor marketplace project. You'll learn how to write clean, scalable Laravel code and apply best practices that are used by professional developers.\nBy the end of this course, you’ll have a ready-to-deploy Laravel marketplace that you can customize, launch, and even monetize for your next big idea. Plus, this course gives you lifetime access to course materials and full source code, so you can revisit the concepts anytime.\nEnroll now and start building your Laravel 11 Multi-Vendor Digital Marketplace today!",
      "target_audience": [
        "Beginners in Web Development: Anyone new to web development who wants to start with a powerful and popular PHP framework.",
        "Aspiring Laravel Developers: Individuals looking to specialize in Laravel and enhance their web development skills.",
        "Junior Developers: Developers with some experience who want to deepen their understanding of Laravel and take their skills to the next level.",
        "PHP Developers: Those familiar with PHP who want to transition into using Laravel for more efficient and elegant web application development.",
        "Freelancers & Entrepreneurs: Independent developers and business owners who want to build scalable and maintainable web applications using Laravel.",
        "Students & Educators: Those studying web development or teaching Laravel, looking for a structured and comprehensive resource.",
        "Professionals Seeking Career Growth: Developers aiming to upgrade their skills and increase their job prospects by mastering a widely-used framework."
      ]
    },
    {
      "title": "PUG Template Engine Master Course",
      "url": "https://www.udemy.com/course/pug-template-engine/",
      "bio": "Make HTML Fun Again! Node JS Template Engine",
      "objectives": [
        "You will learn everything about PUG",
        "How to compile PUG to html",
        "How to use PUG for your Node JS project"
      ],
      "course_content": {},
      "requirements": [
        "Some experience with HTML",
        "You should be comfortable with using a computer"
      ],
      "description": "Learn how to write html with the pug template engine and make your work flow faster. Also when you learn pug you can use it for node js as your main template engine. Pug used to be known as jade but for legal reasons they decide it to rename it pug. Learn how to write loops, render template on node js, and export it to html.",
      "target_audience": [
        "All levels of developers from beginner to experts",
        "Anyone who is bored with html and want to make it fun again!"
      ]
    },
    {
      "title": "Website Security Foundations",
      "url": "https://www.udemy.com/course/website-security-foundations/",
      "bio": "Sleep well (and keep your users happy) by protecting your site from all typical attacks on web sites and web apps",
      "objectives": [
        "Website security basics - concepts and types of attacks",
        "How to protect files on the server",
        "Securing front-end and back-end code",
        "Validating incoming data",
        "Dealing with passwords",
        "Mitigating SQL Injection",
        "Mitigating Cross-Site Scripting",
        "Mitigating Cross-Site Request Forgery",
        "Mitigating Brute Force",
        "Mitigating Path Traversal",
        "Dealing with file uploads",
        "Securing WordPress-powered sites"
      ],
      "course_content": {},
      "requirements": [
        "At least basic knowledge of HTML, JavaScript and PHP",
        "Some experience with web development will help you better understand the course objective",
        "Web browser, your favourite code editor and FTP client are all the tools you will need"
      ],
      "description": "There's no single day recently, without reports of a data leakage, a new software vulnerability or a new phishing campaign.\nIt's enormously worrying, given the fact that increasingly large part of our lives are now lived digitally and online. We use computers and smartphones every day, we totally rely on online services and in effect we store much of our privacy in a digital form. Which is often not even on our devices. That's why security has already become a huge and superimportant branch of IT industry. And it will only become more and more important.\nThere are hundreds, if not thousands of types of online attacks, aimed to:\nsteal money or data\nsupport spam\nblackmail or damage reputation of people or organizations\nor simply to annoy people.\nEven seemingly simple site can become an attack target, that's why I believe that every web developer must know at least basics of web security, and of course use all security measures they know in their everyday work.\nSo this course is for all web developers: beginners, intermediates and self-taught amateurs, who want to build much more secure websites and become better web developers. I assume you have at least basic knowledge of HTML, CSS, JavaScript and PHP, and already some experience in web development.\nFor the back-end code examples I will use PHP just because it's a starting point for many web developers, but I will explain how its native functions work, and you will be able to easily translate most of the code snippets to other languages.\nMany of you will probably work on more advanced projects than static or WordPress-based websites: interactive sites, web or intranet applications, ecommerce platforms etc. The more complex and more popular software you're going to work on, the more potential vulnerabilities and attack vectors, and the more reputational risk is at stake.\nThat's why there will be quite a lot of information in this course: some that seem very basic, and some that may seem as a complicated and pretty advanced stuff. But I still consider all of this as absolutely necessary.\nSo, what's in this course?\nAnalysis and mitigation methods for common attacks: SQL Injection, Cross-Site Scripting, Cross-Site Request Forgery, Clickjacking, Brute Force, Path Traversal, Local File Inclusion, Remote File Inclusion\nProtecting files and folders on the server\nServer configuration and HTTP Headers improving security\nWriting secure front-end and back-end code\nDealing with users' passwords and sessions\nEncryption and hashing\nValidation and sanitization of incoming data\nWordPress security\nWe will really talk about fundamental stuff. And I hope this course will encourage you to discover more about the IT security, as preparing it encouraged me to dig deeper in certain areas.",
      "target_audience": [
        "Web developers who want to improve their skills and build more secure sites",
        "Amateur web developers who are concerned about their sites' security"
      ]
    },
    {
      "title": "Complete Beginner to JavaScript Developer",
      "url": "https://www.udemy.com/course/complete-beginner-to-javascript-developer/",
      "bio": "Compiling all the web development essentials this course transforms the new kid on the block to a JavaScript heavyweight",
      "objectives": [
        "Learn what happens when you click a link in a browser",
        "Finally find out what's going on behind the peeving 404 page error",
        "Learn JavaScript fundamentals",
        "Understand the difference between Java and JavaScript",
        "Learn the skills to be able to create apps and full-fledged games",
        "Have the know-how to get an entry-level position as a JavaScript developer",
        "Start styling websites using CSS",
        "Learn the best practices and standardized ways of writing and organizing code understood and appreciated by web developers the world over",
        "Open up new doors in your career",
        "Add more value to the marketplace with a new skill that will GET YOU PAID",
        "Add a refreshing skill to your repertoire that instantly hooks interviewers",
        "Students will learn not one programming language but HTML, CSS and JavaScript to build a solid foundation for web development knowledge",
        "What it takes to become a web developer who can bring value to the marketplace and get paid",
        "Become more attractive to the marketplace with this constantly in-demand skill",
        "Gain some basic web development experience",
        "Avoid the common dangers and pitfalls of web development and maximize the opportunities",
        "How to plan your web development future and set goals"
      ],
      "course_content": {},
      "requirements": [
        "This course requires no background info and was designed and organized for someone who has never done it before"
      ],
      "description": "This course has been designed as a step by step guide for the complete beginner to web development that has never done it before.\nIn this course we will start with some of the most basic elements of what happens when you click a link in a browser. From there we will continue through HTML building the foundation that will serve us throughout our journey into JavaScript and beyond.\nIn CSS, we learn the importance of taking ownership of a project and the powerful feeling that comes from being able to make changes to a website based on your knowledge and taste. This is the section of the course where we redefine what a successful web development career looks like and the importance of involvement and commitment.\nJavaScript is where we let our foot off the gas and turn everything up a notch. With the core skills we have learned from HTML and CSS we can start to build dynamic and interactive websites that allow us to show more- or less of our personality or make a statement about what we do. So if you're ready to step up to the higher opportunity and better challenge, join me on this journey into JavaScript.\n\nLet's get coding and have some fun!",
      "target_audience": [
        "Anyone interested in securing their place in a job or organization with a skill that leverages their power",
        "Unprecedented opportunity awaits those eager to take advantage of a marketplace hungry for JavaScript developers",
        "This course gives a crucial head start for those who want a leg up in the competitive global race for JavaScript developers",
        "This course is for anyone who wants to style dynamic and interactive websites",
        "Those who are ready to cash in on this tremendous opportunity and are ready to get a running start on world-wide competition",
        "Anyone stuck in a job that is holding back their natural ingenuity and creativity",
        "Those interested in a skill that will give them economic safety for the future",
        "Anyone in economic distress who wants to add an ageless extra skill to ensure economic safety for the future",
        "Anyone interested in learning a key entrepreneurial skill",
        "Students eager to step up to the higher opportunity and better challenge",
        "Those prepared to be inspired by their newfound talents, creativity and opportunity",
        "Students interested in multiplying their income and their future"
      ]
    },
    {
      "title": "Master NodeJs : A Practical Approach To Node JS",
      "url": "https://www.udemy.com/course/master-node-js/",
      "bio": "From No Node to Know Node",
      "objectives": [
        "Know a lot about Node,Express,Socket.IO",
        "Build cool new web applications like Dynamic Websites, Chat applications and many more",
        "How to use Node,Express and MySQL together",
        "How to working with MongoDB with Node",
        "How to Deploy web applications on Heroku,Azure and Amazon EC2",
        "How to Install Node on Windows,Mac and Linux",
        "Understand MEAN Stack",
        "How to implement Authentication using Mongoose,Express and Passport"
      ],
      "course_content": {
        "Node.JS - Introduction": [
          "Introduction",
          "Who this course is for",
          "How Node.JS Works",
          "Node V8 Engine"
        ],
        "Introduction to Frameworks": [
          "Node.JS Frameworks"
        ],
        "Installing Node.JS": [
          "Installing on Windows",
          "Installing on MAC",
          "Installing on LInux - AWS EC2 Instance"
        ],
        "Editors": [
          "WebMatrix and Visual Studio Code"
        ],
        "Javascript Basics": [
          "Introduction",
          "Javascript Variables & Data Types",
          "Operators in JavaScript",
          "Conditional Statements in JavaScript",
          "Loops in JavaScript",
          "Functions & Scope of Variables in JavaScrript",
          "Closures in JavaScript",
          "Understanding Objects in JavaScript",
          "Object.Prototype",
          "Code Download"
        ],
        "HTML 5 - Introduction to Communication APIs": [
          "HTML 5 - Web Storage API - Local and Session Storage",
          "HTML 5 - Web Sockets",
          "Code Download"
        ],
        "Fundamentals of Node.JS": [
          "What is REPL - Read Evaluate Print Line",
          "Loading Files - Using REPL",
          "Process Object",
          "Global Namespace",
          "Buffers",
          "Understanding Callbacks",
          "Code Download"
        ],
        "Modules & Node Package Manager": [
          "Introduction",
          "Making use of NPM - Node Package Manager",
          "Publishing node modules",
          "Module Caching",
          "Module Caching - Overcoming the limitations",
          "Module Patterns",
          "Code Download"
        ],
        "Events": [
          "Events and EventEmitter",
          "EventEmitter and Inheritance",
          "Creating your own EventEmitter",
          "Creating Classes in ES6",
          "ES6 Classes and EventEmitter",
          "Code Download"
        ],
        "Streams": [
          "Introduction to Streams",
          "Readable Streams",
          "Writeable Streams",
          "Piping",
          "Chaining",
          "Set Encoding",
          "Additional Methods of Readable Streams",
          "Duplex Streams",
          "Code Download"
        ]
      },
      "requirements": [
        "You should be aware of basic programming concepts",
        "You should know basics of HTML and CSS",
        "A bit of javascript experience will do no harm in understanding the course"
      ],
      "description": "This course provides you with a practical approach to Node.js. The main focus of this course is to get you familiar with Node and ensure that you are ready to build cool new web applications using Node in no time.\n\nIn this course we will be covering fundamentals of JavaScript first so that it becomes easier to understand the different concepts and syntax that one uses in Node.JS\n\nIn this course we will covering following topics\nFundamentals of JavaScript and HTML 5 Communication API\nFundamentals of Node.js\nCreating and Publishing Modules\nUsing Node Package Manager\nCreating a Webserver using Node\nLearning how to use Express\nUnderstanding how to work with Databases like MySQL and MongoDB\nDeploying our Web application on Heroku, Azure and Amazon EC2\nLearning how to make use of Socket.IO\nCreating a cool chat application\nLearn how to implement authentication using Express,Mongoose and Passport\nA brief introduction to MEAN Stack and creating a hello world MEAN application\n\nSo what are you waiting for let's get started with Node",
      "target_audience": [
        "Those who have experience in programming",
        "Those who want to learn Node.JS",
        "Those who are into web development",
        "Those who would love to learn programming"
      ]
    },
    {
      "title": "Full Stack CRUD application with Spring Boot and React Hooks",
      "url": "https://www.udemy.com/course/full-stack-crud-application-with-spring-boot-and-react-hooks/",
      "bio": "Full Stack CRUD Application with Spring Boot, MySQL & React ( Functional Component and Hooks)",
      "objectives": [
        "You will create your first Full Stack application using Spring Boot and React",
        "You will build RESTful APIs with Spring Boot and MySQL",
        "You will Learn about Functional Component in React",
        "You will Learn how to use React Hooks and Axios to Consume API",
        "You will learn to Solve the Challenges of Connecting a React Frontend to a RESTful API",
        "You will learn to connect REST API to JPA/Hibernate with Spring Boot",
        "You will learn the Basics of building Frontend Applications with React and Bootstrap",
        "You will develop and Basic CRUD application with all Create, Read, Update and Delete Functionality",
        "Latest Edition of Coding Exercise"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Prerequisites": [
          "Prerequisites",
          "Checking if You know Basic Java or Not ?"
        ],
        "BackEnd With Spring Boot ( FOR CREATE AND READ)": [
          "Package",
          "Create Spring Boot app and packages",
          "Model Class and Connection with MySQL Database",
          "@PostMapping to Send data into Database and check using PostMan",
          "Which annotation is used for Posting the data into database ?",
          "@GetMapping to Get data from Database",
          "Which annotation is used to get data from database ?"
        ],
        "FrontEnd With React ( FOR CREATE AND READ)": [
          "Checking Basic Javascript Knowledge",
          "Create you first react app using create-react-app",
          "create-react-app",
          "Folder Structure for frontend using React",
          "Folder Structure in React",
          "Navbar using React",
          "Bootstrap in React",
          "Home Page using Bootstrap Table",
          "Display User in frontend using AXIOS",
          "AXIOS",
          "Configure Routing using REACT-ROUTER-DOM",
          "Routing",
          "Create Register User Form using REACT",
          "Store the Information in State",
          "POST data into database using AXIOS - POST"
        ],
        "Backend with Spring Boot (For EDIT and DELETE)": [
          "Checking Your knowledge of Basic Exception Handling with Java",
          "Custom Exception Handling",
          "Exception Handling in Spring Boot",
          "Edit User using @PUTMapping Annotation Spring Boot",
          "EDIT User",
          "Delete User from database using @DeleteMapping annotation.",
          "DELETE User"
        ],
        "Frontend with REACT ( FOR EDIT, DELETE and VIEW)": [
          "Edit User using AXIOS PUT",
          "Delete User using AXIOS DELETE",
          "Alert if you get error in Next Lecture :",
          "View User Details REACT"
        ]
      },
      "requirements": [
        "You must have a learning attitude.",
        "Basic knowledge of Java and Javascript will be enough."
      ],
      "description": "Welcome to the course on Building Full-Stack Application using Spring Boot and React.\n\n\nWe will build a RESTful web service using Spring Boot and MySQL and consume the same API using React. While Building the application you will learn how to build REST API using Spring Boot and use Axios to consume the same API. We will use the functional component in React. For design, we will use Bootstrap. For testing API we will use postman.\n\n\nWe will create a CRUD application that contains the CREATE, READ, UPDATE, and DELETE operations.\n\n\nMajor Learning from this course :\nYou will create your first Full Stack application using Spring Boot and React\nYou will build RESTful APIs with Spring Boot and MySQL\nYou will Learn about Functional Component in React\nYou will learn how to use React Hooks and Axios to Consume API\nYou will learn to Solve the Challenges of Connecting a React Frontend to a RESTful API\nYou will learn to connect REST API to JPA/Hibernate with Spring Boot\nYou will learn the Basics of building Frontend Applications with React and Bootstrap\nYou will develop and Basic CRUD application with all Create, Read, Update and Delete Functionality\nYou will learn how to use bootstrap in react application\nSo, Let's learn together with fun.",
      "target_audience": [
        "Beginner Full Stack app developer with Spring Boot and React",
        "For Backend Developer Who wants his application to integrate with frontend."
      ]
    },
    {
      "title": "React JS & TypeScript: Build Real Projects + Redux Toolkit",
      "url": "https://www.udemy.com/course/react-mastery-zero-to-pro/",
      "bio": "Build Real Apps with React Hooks, Redux Toolkit, React Query, Zustand & TypeScript - Hands-On Projects Included",
      "objectives": [
        "Master React fundamentals including Hooks, the Context API, and component-based architecture",
        "Implement advanced state management with Redux Toolkit, Zustand, and RTK Query or React Query.",
        "Build and style modern interfaces using Mantine UI and Tailwind CSS.",
        "Integrate Firebase for authentication and database, and learn robust testing with Vitest"
      ],
      "course_content": {
        "Setup development environment": [
          "Install apps and extensions",
          "Join Our Class Discord Community"
        ],
        "JavaScript refresher (OPTIONAL)": [
          "Section Intro",
          "Working with variables",
          "Understanding scopes",
          "Understanding the hoisting and TDZ",
          "Arrow function vs Traditional function",
          "Array Methods: Map",
          "Array Methods: Reduce",
          "Object Methods",
          "Destructuring",
          "Spread Operator",
          "Optional Chaining",
          "TASK"
        ],
        "React.js Basics ( theory )": [
          "Introduction to React.js",
          "Why Traditional way is not best option",
          "React Elements",
          "Understanding the Virtual-DOM",
          "JSX Syntax"
        ],
        "React.js Basics": [
          "Introduction to React.js project files and folders structures",
          "JSX Syntax in practice",
          "Props and PropTypes",
          "PROJECT: Neon Counter App",
          "PROJECT: Space Tourism Form",
          "PROJECT: Travel To-do app",
          "React Basics Homework: Fun & Confidence-Boosting Challenges!",
          "Cheatsheet"
        ],
        "Tailwind CSS": [
          "Introduction to Tailwind CSS & installing Tailwind CSS",
          "How to work with text styles",
          "Practical ( Building Customizable Button )",
          "Flex",
          "Grid",
          "PROJECT: QUOTES",
          "The Ultimate Tailwind CSS Cheat Sheet"
        ],
        "TypeScript": [
          "Getting Started with TypeScript: A Beginner's Guide Why Learn TypeScript?",
          "Introduction to TypeScript",
          "First TypeScript project",
          "How to create React.js application with TypeScript",
          "TS Cheatsheet"
        ],
        "PROJECT - Expense Tracker ( Advanced Hooks )": [
          "Project Demo",
          "Task",
          "Bulding Balance Component",
          "Transactions List",
          "Building Modal",
          "Create Transaction Form - 1",
          "Lifting state up",
          "Finish",
          "useReducer and useContext and custom hook",
          "Using Global state management",
          "Closing modal by escape key",
          "Filter form",
          "Finishing Filter feature"
        ],
        "PROJECT: Quizify-pro": [
          "Demo of the project",
          "Introduction to Mantine UI and Setting up",
          "Building layout and reusable container",
          "Building category page and category item",
          "Quiz start page",
          "Quiz Page and its components",
          "Routing with react router",
          "Introduction to Zustand - global state management",
          "Create quiz store and store username",
          "Select category item",
          "Select quiz category part-2",
          "Select Category part-3",
          "Storing user answers",
          "Storing user answers part - 2",
          "Storing user answers part - 3",
          "Finish storing user answers",
          "Deploying to Vercel",
          "Ultimate Zustand Cheat Sheet"
        ],
        "Hooks": [
          "Course Resource",
          "useRef hook",
          "useOnlineStatus custom hook",
          "useLocalStorage custom hook",
          "useId hook",
          "useCopyToClipboard custom hook"
        ],
        "Firebase": [
          "Task",
          "Firebase auth part-1",
          "Firebase auth part-2",
          "Firebase auth part-3",
          "Implement Mantine UI",
          "Refactoring and Adjusting folder and file structures",
          "Enhance UI & UX",
          "Add alert to error message",
          "Design database and store blogs and set up rich text editor",
          "Styling",
          "Blog details page",
          "Delete Post",
          "Implement Edit Post",
          "Ultimate Cheatsheet for Firebase with React & TypeScript"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript (ES6+ syntax) is recommended",
        "A computer with Node.js installed and a code editor (e.g., VS Code) is needed.",
        "Familiarity with HTML and CSS will help, but it’s not strictly required."
      ],
      "description": "Want to become a highly paid React JS developer? This course guides you from absolute beginner to building professional applications with modern React, Redux, TypeScript, and more. This comprehensive curriculum provides structured, step-by-step training with practical projects throughout, helping you build the exact skills employers are looking for in 2025.\nWe start with React JS fundamentals, teaching you functional components, hooks, and state management patterns used in real companies. You'll then master multiple state management approaches including Redux Toolkit, Zustand, and React Query (TanStack), giving you flexibility to handle any project requirements.\nFor writing cleaner, more maintainable code, you'll learn TypeScript from the ground up, applied specifically to React development. We integrate Firebase for authentication and real-time databases, teaching you industry-standard backend integration.\nYou'll create professional user interfaces using Tailwind CSS and Mantine UI, learning responsive design principles along the way. Every concept is reinforced through practical projects - building an expense tracker and quiz application that you can add to your portfolio.\nThe course includes essential professional skills like automated testing with Vitest and React Testing Library, plus performance optimization techniques used by senior developers.\nBy completion, you'll have built several production-quality React applications and gained the confidence to develop complex projects independently. This course serves both complete beginners and developers wanting to upgrade their React skills with modern tools and practices.\nJoin thousands of successful students who have transformed their careers with these in-demand React JS skills.",
      "target_audience": [
        "Aspiring front-end developers looking for a hands-on, project-based introduction to React.",
        "Intermediate JavaScript/TypeScript developers wanting to master state management tools (Zustand, Redux, RTK Query, React Query) and advanced React patterns.",
        "Anyone interested in building scalable, real-world applications with modern tooling, including Firebase, Mantine UI, and Tailwind CSS.",
        "Developers seeking best practices for testing, performance optimization, and code splitting in React."
      ]
    },
    {
      "title": "JavaScript & React JS Codecamp: Build & Deploy Real Projects",
      "url": "https://www.udemy.com/course/modern-javascript-react-js-masterclass-build-25-projects/",
      "bio": "Master JavaScript and React JS by Building Hot Games and 15+ Web Apps | Hands-on Projects | No Prior Experience Needed",
      "objectives": [
        "Build Snake Game from Scratch to Finish",
        "Build Game of Pong from Scratch to Finish",
        "Build Tic Tac Toe Game from Scratch to Finish",
        "Build Rock Paper Scissor Game from Scratch to Finish",
        "Build Temperature Converter from Scratch to Finish",
        "Build Weather Application with API from Scratch to Finish",
        "Build Image Slider from Scratch to Finish",
        "Build Advance Calculator from Scratch to Finish",
        "Build Digital Clock from Scratch to Finish",
        "Build Stopwatch from Scratch to Finish",
        "Build Simple Interest Calculator from Scratch to Finish",
        "Build Password Generator System from Scratch to Finish",
        "Build Dice Roller App from Scratch to Finish",
        "Build Number Guessing System from Scratch to Finish",
        "Build Color Picker App from Scratch to Finish",
        "Build Digit Counter from Scratch to Finish",
        "Build Random Number Generator from Scratch to Finish",
        "Work on hands-on projects like a To-Do List, Movie Search App, E-Commerce Website, and more!",
        "Create Check Boxes and Radio Button Apps",
        "JavaScript Fundamentals – Understand variables, data types, operators, control flow, and loops.",
        "Functions & Objects – Learn function declarations, arrow functions, object-oriented programming, and ES6 classes.",
        "Working with the DOM – Select, manipulate, and update HTML elements dynamically with JavaScript.",
        "Event Handling – Handle user interactions like clicks, keyboard inputs, and form submissions.",
        "Asynchronous JavaScript – Master callbacks, promises, async/await, and API data fetching.",
        "JavaScript in Action – Build real-world projects like a to-do list, weather app, calculator, snake game, pong game and many more projects",
        "Debugging & Best Practices – Learn common JavaScript errors, debugging techniques, and performance optimization.",
        "Understand the fundamentals of React JS and why it’s the most popular JavaScript library for building user interfaces.",
        "Learn JSX, Components, Props, and State Management to create dynamic web applications.",
        "Master React Hooks (useState, useEffect, useContext, and more) to manage application logic.",
        "Implement React Router for seamless navigation between pages.",
        "Handle forms, user input, and event handling with real-world examples.",
        "Fetch data from APIs using Fetch and Axios to build interactive applications.",
        "Learn global state management with Context API and Redux.",
        "Style React applications using CSS Modules, Tailwind CSS, and Bootstrap.",
        "Plan, structure, and build large-scale React applications.",
        "Deploy your React projects on Netlify and Vercel for real-world use."
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Welcome to JavaScript and React JS Mastery - Projects You will Build",
          "Setup of Development Environment | Visual Code Studio",
          "Project Setup and Live Server Installation",
          "Setup of Development Environment | Atom Code Editor",
          "Your first JavaScript Code",
          "JavaScript Code Structure",
          "Introduction to Console and getElementById"
        ],
        "JavaScript Fundamentals and Syntax": [
          "Comments in JavaScript",
          "Variables in JavaScript",
          "Arithmetic Operators",
          "How to Accept User Input in JavaScript",
          "Type Conversion in JavaScript",
          "Constants in JavaScript",
          "Implement JavaScript Constants in HTML Documents",
          "Building a Temperature Converter in JavaScript - Description",
          "Build a Temperature Converter in JavaScript - Practical",
          "Building a Digit Counter in JavaScript - Description",
          "Build a Digit Counter in JavaScript - Practical",
          "Math Objects in JavaScript",
          "Building a Random Number Roller in JavaScript - Description",
          "How to create a Random Number Generator in JavaScript - Practical"
        ],
        "Decision Making Statements in JavaScript": [
          "If Statement in JavaScript",
          "Else is Statement in JavaScript",
          "Implement Decision Making Statements on HTML Document",
          "Checkbox and Radio Buttons in JavaScript - Description",
          "Checkbox and Radio Buttons in JavaScript - Practical",
          "Ternary Operator in JavaScript",
          "Switch Statement"
        ],
        "String Methods and Operators in JavaScript": [
          "String Methods in JavaScript",
          "String Slicing in JavaScript",
          "Method Chaining in JavaScript",
          "Logical Operators in JavaScript"
        ],
        "Loop Systems in JavaScript": [
          "While Loop in JavaScript",
          "do-while Loop in JavaScript",
          "For Loop in JavaScript",
          "Random Number Guessing in JavaScript"
        ],
        "Functions and Methods in JavaScript": [
          "Functions in JavaScript",
          "Check even numbers and validate email address in JavaScript",
          "Arrays in JavaScript",
          "Spread Operator in JavaScript",
          "Rest Parameter in JavaScript",
          "Building a Dice Roller in JavaScript - Description",
          "How to Build a Dice Roller in JavaScript - Practical",
          "Random Password Generator in JavaScript",
          "Callback Function in JavaScript",
          "forEach Method in JavaScript",
          "Map Method in JavaScript",
          "Filter Method in JavaScript",
          "Reduce Method in JavaScript",
          "Function Expression in JavaScript",
          "Arrow function in JavaScript"
        ],
        "Objects and Classes in JavaScript": [
          "Objects in JavaScript",
          "This in JavaScript",
          "Constructors in JavaScript",
          "Class in JavaScript",
          "Static Keyword in JavaScript",
          "Inheritance in JavaScript",
          "Super Keyword in JavaScript"
        ],
        "Getters and Setters in JavaScript": [
          "Getters and Setters In JavaScript",
          "Example of Getters and Setters"
        ],
        "Arrays and Destructing in JavaScript": [
          "Destructuring in JavaScript",
          "Nested Objects in JavaScript",
          "Arrays of Objects in JavaScript",
          "Array Sorting in JavaScript"
        ],
        "Advanced working with functions": [
          "Date Objects in JavaScript",
          "Closure in JavaScript",
          "setTimeout Function in JavaScript",
          "Console.time function in JavaScript",
          "Format Currency in JavaScript",
          "Building a Compound Interest Calculator in JavaScript - Description",
          "Build a Compound Interest Calculator - Practical",
          "Building a Digital Clock in JavaScript - Description",
          "Build a Digital Clock in JavaScript - Practical",
          "Building a Stopwatch in JavaScript - Description",
          "Build a Stopwatch in JavaScript - Practical"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS (No prior JavaScript and React experience needed).",
        "A computer (Windows, macOS, or Linux) with an internet connection.",
        "A modern web browser (Google Chrome recommended).",
        "A code editor (VS Code preferred, setup instructions included).",
        "Willingness to learn and practice through hands-on coding exercises.",
        "Enthusiasm for building modern web applications using React JS!",
        "A willingness to learn by doing with real-world coding exercises."
      ],
      "description": "Master JavaScript and React JS by Building 15+ Real-World Projects from Scratch to finish!\nStep-by-Step Learning | Hands-on Projects | No Prior Experience Needed\nAre you ready to become a JavaScript and React JS expert? This comprehensive course takes you from absolute beginner to professional developer by teaching you how to build real-world applications using JavaScript and React JS.\nWhether you’re a self-taught programmer, an aspiring web developer, or someone looking to level up their JavaScript and React skills, this course is designed to give you hands-on experience with practical projects that will boost your portfolio and make you job-ready.\nWith step-by-step explanations and real-world coding challenges, you’ll master JavaScript from the ground up and dive deep into React JS, one of the most in-demand JavaScript frameworks used by companies like Facebook, Netflix, and Airbnb.\nWhat You’ll Learn in This Course\nJavaScript: The Foundation of Web Development\nSetting Up Your Development Environment (VS Code, Atom Editor, Node.js)\nWriting Your First JavaScript Code\nJavaScript Code Structure and Best Practices\nUsing the Console and getElementById for Debugging\nVariables, Constants, and Operators\nAccepting User Input and Type Conversion\nMath Objects & Random Number Generators\nDecision-Making in JavaScript: if, else, switch, and ternary operators\nLoops and Iterations: for, while, and do-while loops\nFunctions and Arrow Functions\nArrays, Objects, and ES6+ Features (spread operator, destructuring, map(), filter(), reduce())\nDOM Manipulation: Selecting and Modifying HTML & CSS with JavaScript\nEvent Handling: Mouse, Keyboard, and Form Events\nJavaScript ES6 Modules\nAsynchronous JavaScript: Callbacks, Promises, and async/await\nFetching Data from APIs & Working with JSON\nError Handling in JavaScript\nStorage & Cookies: Local Storage, Session Storage, and Cookies\nReal-World JavaScript Projects You’ll Build\nDigit Counter – Master JavaScript arithmetic operations\nRandom Number Generator – Learn how to generate dynamic random numbers\nWeather App (Using API) – Fetch and display real-time weather data\nTic-Tac-Toe Game – Master game logic using JavaScript\nRock-Paper-Scissors Game – Understand JavaScript event handling\nExpense Tracker – Manage financial data with JavaScript arrays\nE-commerce Shopping Cart – Simulate a functional online shopping system\nReal-Time Chat App – Learn how to build an interactive chat interface\n\n\nIntroduction to React JS: The Future of Frontend Development\nSetting Up a React App (Using Vite for fast development)\nWriting Your First JSX Code\nUnderstanding React Fragments\nProps & PropTypes: Passing data between components\nConditional Rendering in React\nList Rendering and Filtering Data\nEvent Handling in React: Click, Form, and Input Events\nuseState Hook: Managing Component State\nBuilding Interactive UI Elements\nStyling React Components: CSS Modules, Styled Components\nFetching API Data with React\nReal-World React Projects You’ll Build\nTo-Do App – Master React state management\nColor Picker App – Build an interactive UI component\nE-commerce Product Page – Display and manage product lists dynamically\nDigital Clock & Stopwatch – Work with time and event listeners\nWeather Dashboard – Fetch real-time weather data with React and APIs\nWho Is This Course For?\nComplete Beginners – No prior coding experience required\nSelf-Taught Developers – Fill in gaps and strengthen JavaScript fundamentals\nFrontend Developers – Learn React and improve UI development skills\nAspiring Web Developers – Build real-world projects for a strong portfolio\nAnyone Who Loves Practical Learning – Hands-on coding, not just theory!\nCourse Requirements\nA computer (Windows, macOS, or Linux)\nNo prior programming knowledge required – This course starts from scratch!\nA willingness to learn and build real projects\nWhy Choose This Course?\nStep-by-Step Instructions – Learn in a structured and easy-to-follow format\nHands-On Learning – Over 25+ real-world projects for practical experience\nMaster JavaScript & React – From basics to advanced concepts\nBuild Your Portfolio – Gain skills to land high-paying jobs in web development\nUpdated Modern Course – Stay ahead with the latest JavaScript and React JS trends\nBy the end of this course, you’ll be able to confidently build JavaScript applications and React web apps like a pro!\nAre you ready to start your journey? Enroll today and take your JavaScript and React JS skills to the next level!",
      "target_audience": [
        "Absolute Beginners & Dummies – If you're new to JavaScript and React, this course will guide you step by step.",
        "Self-Taught Programmers – Learn structured and professional JavaScript and React development practices.",
        "JavaScript Developers – Upgrade your skills by learning the most in-demand frontend library.",
        "Web Developers & UI Designers – Create dynamic, interactive web applications.",
        "Anyone Who Wants to Build Modern Web Apps – React JS is a must-have skill for web development!",
        "Self-Taught Programmers – Fill in the gaps and strengthen your JavaScript knowledge with structured lessons and projects.",
        "Aspiring Web Developers – Master JavaScript to build dynamic and interactive web applications.",
        "Computer Science Students – Enhance your understanding of JavaScript programming with hands-on exercises.",
        "Freelancers & Entrepreneurs – Learn how to build functional websites and web apps for clients or your own business."
      ]
    },
    {
      "title": "Web Development Bundle: Html, CSS and JavaScript",
      "url": "https://www.udemy.com/course/beginners-web-development-bundle-html-css-and-javascript/",
      "bio": "Start your web development journey here",
      "objectives": [
        "Gain confidence in writing html, CSS and JavaScript",
        "Design good looking and useful websites",
        "Complete a JavaScript project",
        "Start from scratch and become a web developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Html": [
          "html basics",
          "Text in html",
          "Colors in html",
          "Images in html",
          "Links in html",
          "Videos in html",
          "Formatting a web page",
          "Build a website"
        ],
        "CSS": [
          "Creating basic html page for css",
          "Methods for styling",
          "styling using tags , ids and classes",
          "Margins, paddings and borders",
          "Float and position",
          "Transform and Animations"
        ],
        "JavaScript": [
          "Variables in JavaScript",
          "Datatypes",
          "Reference datatypes and if condition",
          "Loops in JavaScript",
          "DOM-Document Object Model",
          "Project Part 1",
          "Project Part 2"
        ],
        "Next Steps": [
          "Next Steps"
        ]
      },
      "requirements": [
        "No programming experience needed , you will learn everything in the course"
      ],
      "description": "Instead of going through hours and hours of classes that you will eventually forget , you can learn the basics and start learning more by building websites and adding them to your project portfolio , this way you will remember better because you have built the projects yourself. This way you will end up more confident and more experienced as a web developer.\n\n\nIn this Course you will learn all about html, CSS and JavaScript.\n\n\nI will take you step by step through the basics html, CSS and JavaScript with examples.\n\n\nBy the end of this course you will be able to understand and write html ,CSS and JavaScript and be ready for your future web dev adventures.\n\n\nStart your web development journey with this course\nthis course is designed for absolute beginners who would like to start their career in web development.\nIn this Course you will learn about:\nHow to install a code editor for html\n\n\nText formatting in html\nAdding images to webpage\nAdding videos to webpage\nCreating links\nhtml page Structure\nbuilding a portfolio website\nMethods for adding styling\nstyling using tags, ids and classes\nchanging background color\nStyling Text- Color,FontSize and Font family\nStyling Images\nMargins, Paddings and Borders\nAdding color using color codes\nAdding icons\nFloat and positions\nTransform\nAdding Animations\nAdding Hover options\nDefine and use variables and constants\nWrite comments in JavaScript\nPerform operations on numbers , strings\nUse objects ,arrays and functions\nTake inputs in a website\nuse if statement\nuse switch statements\nuse loops in JavaScript\nuse DOM- document object model\nComplete a java script project",
      "target_audience": [
        "anyone who wants to start their career in web development"
      ]
    },
    {
      "title": "Front End Developer - HTML CSS Bootstrap JavaScript React",
      "url": "https://www.udemy.com/course/front-end-developer-html-css-bootstrap-javascript-react/",
      "bio": "Learn Front End Web Development Skills from scratch",
      "objectives": [
        "Gain experience using Front End Web Development Tools",
        "Create Content with HTML",
        "Create Links with HTML",
        "Style Content with CSS",
        "Create web page interaction with JavaScript",
        "Create responsive we content with Bootstrap",
        "Create components using ReactJS",
        "Create various projects to acquire useful front end development skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Is a Front-End Developer?",
          "Core Web Languages",
          "Text Editors",
          "Install Visual Studio Code",
          "Install SublimeText",
          "Install Atom",
          "What is Emmet",
          "What is CSS Peek",
          "Installing themes",
          "Installing live servers",
          "Web Browser",
          "Chrome Developer Tools Console",
          "Planning a web project",
          "Sketching your design",
          "Create files and folders"
        ],
        "Coding with HTML": [
          "What is HTML",
          "Anatomy of an HTML Element",
          "HTML Document Structure",
          "Create a basic HTML Document Structure - Part 1",
          "Create a basic HTML Document Structure - Part 2",
          "Create a basic HTML Document Structure - Part 3",
          "HTML Attributes",
          "Marking Up Text",
          "Creating Links",
          "Adding Code Comments",
          "What is source code"
        ],
        "Coding with CSS": [
          "What is CSS",
          "Ways to apply CSS",
          "Styling Multiple Properties",
          "Styling multiple elements",
          "Modifying CSS",
          "Basic CSS Selectors",
          "CSS BOX Model",
          "CSS Padding and Margin Property",
          "CSS Background Property",
          "Styling web page title",
          "CSS Font Property",
          "CSS Display Property",
          "Using Google Fonts",
          "CSS Code Comments"
        ],
        "Introduction to Bootstrap": [
          "What is Bootstrap",
          "Installing Bootstrap",
          "Download jQuery",
          "Download PopperJS",
          "Bootstrap Setup",
          "Bootstrap Breakpoints",
          "Bootstrap Containers",
          "Creating default containers",
          "Creating responsive containers",
          "Creating fluid containers",
          "Bootstrap Flexbox",
          "Flex direction property",
          "Flex wrap property",
          "Flex Flow property",
          "Flex justify content property",
          "Align items property",
          "Align content property"
        ],
        "Coding with JavaScript": [
          "What is JavaScript",
          "The Chrome Developer Console",
          "Where to Place JavaScript",
          "JavaScript Syntax",
          "What are statements",
          "What are expressions",
          "What are Variables",
          "Variable Naming Convention",
          "What are Arrays",
          "Data Types",
          "Mixing Data Types",
          "Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Operator Precedence",
          "Comparison Operators",
          "Logical Operators",
          "Conditional Statements",
          "Functions",
          "Linting Tools",
          "Events",
          "Adding an image changer",
          "Fixing listing issues- Part 1",
          "Fixing listing issues- Part 2",
          "Adding welcome message to web page",
          "Adding JavaScript Code Comments"
        ],
        "Analogue Clock Project": [
          "What we will create",
          "Creating project folder",
          "Creating Canvas Object",
          "Creating the clock face",
          "Drawing the clock numbers",
          "Drawing the time and hand"
        ],
        "BMI Calculator Project": [
          "What we will create",
          "Create project directory",
          "Add CSS",
          "Add JavaScript"
        ],
        "Calculator Project": [
          "What we will create",
          "Create project directory",
          "Create the structure",
          "Add Styling",
          "Add Functionality with JavaScript"
        ],
        "Event Countdown Timer Project": [
          "What we will create",
          "Create project directory",
          "Adding logic",
          "Adding Styling"
        ],
        "Word Count App Project": [
          "What we will create",
          "Overview",
          "Creating project directory",
          "Creating app structure",
          "Adding Styling",
          "Adding Logic"
        ]
      },
      "requirements": [
        "Computer and internet access required"
      ],
      "description": "Front-end web development, also known as client-side development is the practice of producing HTML, CSS and JavaScript for a website or Web Application so that a user can see and interact with them directly. The challenge associated with front end development is that the tools and techniques used to create the front end of a website change constantly and so the developer needs to constantly be aware of how the field is developing.\nThe objective of designing a site is to ensure that when the users open up the site they see the information in a format that is easy to read and relevant. This is further complicated by the fact that users now use a large variety of devices with varying screen sizes and resolutions thus forcing the designer to take into consideration these aspects when designing the site. They need to ensure that their site comes up correctly in different browsers (cross-browser), different operating systems (cross-platform) and different devices (cross-device), which requires careful planning on the side of the developer.\nA front-end developer architects and develops websites and applications using web technologies (i.e., HTML, CSS, DOM, and JavaScript), which run on the Open Web Platform\nTypically, a person enters into the field of front-end development by learning to develop HTML, CSS, and JavaScript which commonly runs in a web browser .\n\n\nHTML is the markup language that we use to structure and give meaning to our web content, for example defining paragraphs, headings, and data tables, or embedding images and videos in the page.\nCSS is a language of style rules that we use to apply styling to our HTML content, for example setting background colors and fonts, and laying out our content in multiple columns.\nJavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else. (Okay, not everything, but it is amazing what you can achieve with a few lines of JavaScript code.)\n\n\nBootstrap is a front-end framework used to create modern websites and web apps. It's open-source and free to use, yet features numerous HTML and CSS templates for UI interface elements such as buttons and forms. Bootstrap also supports JavaScript extensions.",
      "target_audience": [
        "Beginner programmers",
        "Beginner web developers"
      ]
    },
    {
      "title": "Build Projects In HTML And CSS",
      "url": "https://www.udemy.com/course/build-projects-in-html-and-css/",
      "bio": "Sharpen Your HTML & CSS Knowledge By Building 7 Cool Projects.",
      "objectives": [
        "Enhance your knowledge in HTML and CSS.",
        "Aimed at beginners and intermediates looking to build projects which can also be used in websites.",
        "Uses modern styling including grid, flexbox, CSS animations, pseudo selectors etc",
        "Responsive design to make websites work on every possible device."
      ],
      "course_content": {
        "Requirements": [
          "Requirements"
        ],
        "Glass Debit Card": [
          "Intro",
          "Creating the Card",
          "Creating the Card 2",
          "Compatability"
        ],
        "Price Card Project": [
          "Creating the Card",
          "Designing the Card",
          "Gradient Background",
          "Middle Card Design",
          "Making It Responsive"
        ],
        "Product Item": [
          "Introduction",
          "Creating The Product Item",
          "Extra Effects",
          "Finishing the Animation",
          "Making It Responsive"
        ],
        "Login Page Project": [
          "Intro",
          "Creating The Form Elements",
          "Styling The Form",
          "Final Changes"
        ],
        "Green Website Project": [
          "Intro",
          "Creating The Collapsible Navbar",
          "Main Content",
          "Footer Section",
          "Making It Responsive"
        ],
        "Gym Website": [
          "Header Section",
          "Nav Links",
          "Hero",
          "About Section",
          "Services Section - Card",
          "Services Section 2",
          "Contact Section",
          "Footer Section",
          "500px & Up",
          "576 Screens & Up",
          "768 Screens & Up",
          "992 Screens & Up",
          "1200 Screen and Up",
          "Testing"
        ],
        "Contact Form": [
          "The HTML",
          "The Left Side",
          "The Right Side",
          "Submit Button",
          "Making It Responsive"
        ]
      },
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "Hello, welcome to this course, where you will create modern and beautiful projects with just HTML and CSS. This course is aimed at people with basic knowledge of HTML and CSS, and are looking to build projects in order to have more experience and sharpen their design skills.\n\n\nWe will build together 7 creative projects which are full of modern, nice, and beautiful animations and other effects.\n\n\nAll of the projects are created from scratch. There will be no already made codes. We will write out all of the HTML & CSS completely from start to finish and I will explain each step I take as we move forward.\n\n\nAfter this course, you will have enough knowledge and experience to move on to other technologies like front-end frameworks and libraries like bootstrap and other highly demanded stacks.\n\n\nListed below are the projects we will be building:\n\n\n-Glassmorphism Credit Card\n\n\n-A Price Card\n\n\n-A Login Page\n\n\n-A Shopping Item Product With Beautiful Animation\n\n\n-A Landing Page Website With Collapsible Navbar\n\n\n-A Gym Website\n\n\n-A Modern Looking Contact Form\n\n\nDuring this, some of what we learn about and use are font-awesome icons, google fonts, pseudo selectors, gradients and more.\n\n\nAll the projects are fully responsive and also, most importantly, the projects we will build are useful and can be integrated or used on any website.\n\n\nEnroll now and join the fun ride!",
      "target_audience": [
        "Beginners",
        "Intermediates"
      ]
    },
    {
      "title": "Async API with Asp.Net Core & EF Core (step by step project)",
      "url": "https://www.udemy.com/course/api-with-asp-net-core-mvc/",
      "bio": "Build complete async API from start to finish with .Net Core Services, AutoMapping, Interfaces, DTO objects and more",
      "objectives": [
        "How to build API from start to finish",
        "Explore ASP .Net Core MVC",
        "Apply REST to .Net Core API",
        "Implement Data Transfer Objects",
        "Configure .Net Core Services",
        "Map Entitities with AutoMapper",
        "Implement Relationships between classes",
        "Work with Keys and Foreign Keys"
      ],
      "course_content": {},
      "requirements": [
        "3-6 months of C# programming",
        "Visual Studio 2017",
        "Course uses .Net Core 2.2 (it is recommended you use the same version!)"
      ],
      "description": "Welcome to Crash Course on Creating API with ASP .Net Core\nThis course is all about creating a functional Async API using .Net Core and Entity Framework.  Step by step, we will set up a complete API to handle each of the operations in a multi-table database. We'll develop all necessary entities, Data Transfer Objects, Interfaces, use dependency injection to inject services for our app, design fully MVC structure, map entities to DTO object with automapper, turn our Controllers into fully functional API controllers, handle relationships, keys and foreign keys in our database tables and Models, use Entity Framework as a back end utilizing Code-First integration, seed the database with dummy data... you get the picture!\nSo in the next several hours, you will go from an API novice to a developer capable of developing - and understanding - basic API structure,\nGet excited to learn a ton of new material and dive into the new world of .net core. This is a relatively fast-paced course, designed with a busy self-learner in mind. If you like to be shown a concept and then move on to another concept to learn more, then this course is for you. No time is wasted.\nEverything is coded on camera, including some mistakes, both intentional and unintentional. This allows us to go over some concepts that would be hard to explain and understand, such as Reference Loop Handling, AutoMapping set up, possible problems with DTO objects and others.\nSo buckle up, get a big cup of coffee, and get ready to finally understand what all this fuss about API's and REST is about.\nLet's code",
      "target_audience": [
        "Self learner who prefers faster paced course",
        "C# programmer who wants to dive into creating API's",
        "ASP .Net developer who wants to build web-facing API"
      ]
    },
    {
      "title": "Full-Stack Web Development using Angular 10, Web API & SQL",
      "url": "https://www.udemy.com/course/full-stack-development-using-angular-10-web-api-sql/",
      "bio": "Learn to create a Web Application from scratch using Angular 10, ASP .NET Web API and Microsoft SQL Server.",
      "objectives": [
        "Learn to create a Web Application from scratch using Angular 10, ASP .NET Web API and Microsoft SQL Server."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Install and set up environment": [
          "Install SQL server and Management studio",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install Node JS",
          "Install Angular 10"
        ],
        "Database": [
          "Create Database and tables"
        ],
        "Back End - ASP .NET Web API": [
          "Create API Project",
          "Force API to return JSON response",
          "Enable CORS",
          "Create Models",
          "API for Department screen - GET",
          "API for Department screen - POST,PUT and DELETE",
          "API For Employee screen",
          "API to save profile picture"
        ],
        "Front End - Angular 10": [
          "Introduction to Angular project",
          "Create Angular 10 Project",
          "Generate Components and Services",
          "Add Service methods",
          "Routing",
          "Add Bootstrap for styling",
          "Navigation Menu",
          "Show Departments Screen",
          "Modal Pop-Up for Department Screen",
          "Add and Edit Department screen",
          "Delete Department method",
          "Show Employee Screen",
          "Upload Photo, Add and Edit Employee details",
          "Sorting and Filtering"
        ],
        "Deploy Files, Project files": [
          "How to get publishable files",
          "Source Code"
        ]
      },
      "requirements": [
        "Basics of Programming (C# would be helpful)",
        "Basic HTML, CSS and Javascript"
      ],
      "description": "The demand for full stack developers is growing exponentially.\n\n\nSo who is a full stack developer?\nA full stack developer is someone who is proficient in working with databases for example Microsoft sql server, my sql, postgre sql or mongo db etc.\nHe should also be proficient in backend web development using technologies such as java, c sharp dot net, python or node js.\nAlso he must be an expert in front end web development using technologies such as html, css, javascript, angular or react.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\nSQL server for database.\nDot net Web API for backend development.\nAnd the latest Angular 10 for frontend web development.\nWe will first start with installing and setting up the environment needed for development, then start creating databases and objects needed for our app, then develop API end points using A S P dot net Web API. Finally we will be using Angular 10 to design the front end part of our App.\nYou will learn how to create the navigation menu and tables using bootstrap, add routing to our Angular App, add modal pop up windows with dropdowns and date pickers, and also add upload profile picture functionality and store it in our app. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course and happy learning.",
      "target_audience": [
        ".NET developers",
        "Back-End Developers",
        "Front-End Developers"
      ]
    },
    {
      "title": "Developing Single Page Applications",
      "url": "https://www.udemy.com/course/developing-single-page-applications/",
      "bio": "From HTML To Ruby On Rails To React.js",
      "objectives": [
        "Ruby on Rails 6 and React 16.8 web application development"
      ],
      "course_content": {
        "Installing required software for Rails 6 application development": [
          "Demonstration of The Application To Be Built",
          "Installing of Ruby Version Manager",
          "Installing Ruby",
          "Creating a Gemset",
          "Installing Node.js and Yarn",
          "Installing Ruby on Rails 6"
        ],
        "Creating a Rails 6 Project and Discussing Rails Fundamental Concepts": [
          "Creating Rails 6.0 Project",
          "Copying Static Files To Public Folder",
          "Rails Application Structure",
          "Rails Model-View-Controller Pattern",
          "The Rails Views Folder Structure",
          "Introduction to Rails Routing",
          "Rails Action Controller"
        ],
        "Getting Rails To Serve Up The Static Files Using Controllers and Views": [
          "Moving the Body of Index File to the Layout File",
          "Creating Products Controller",
          "Rails View Rendering",
          "Installing Bootstrap 4"
        ],
        "Using Embedded Ruby and Rails Partials in View Templates": [
          "Introduction to Embedded Ruby (ERB)",
          "Creating and Using Rails View Partials",
          "Creating the Footer Partial",
          "Moving the Rest of Layout File Content Into Index View Template",
          "Factoring Out Product Data Into A Variable",
          "Replacing Hardcoded Data With Variables In Product View Template",
          "Fixing Product Definition Error",
          "Eliminating Code Duplication Using Loops",
          "Passing Variables To Partials",
          "Simplifying View Templates By Using Action View Helper Methods",
          "Replacing Anchor Tags With Link_to Method Challenge"
        ],
        "Creating The Model, Migration and Seeding Data": [
          "Moving Data From The View To The Controller",
          "Creating The Product Model",
          "ActiveRecord Migration",
          "Preparing To Populate The Database Tables With Data",
          "Seeding Database Tables With Data"
        ],
        "Reading Product Data": [
          "Creating Products Controller's Show Action",
          "Replacing Product Show Data In View Template",
          "Adding Product Show Route",
          "Passing Product ID From The View To The Controller",
          "Creating The Routes For Listing Products"
        ],
        "Creating And Editing Products": [
          "Creating New Product Route",
          "Using Form Helper Methods To Create The New Product Form",
          "Saving New Product Form Data",
          "Editing A Product",
          "Factoring Out Product Form As A Partial",
          "Posting The Edited Product Data To The Controller"
        ],
        "Deleting Products, Using Filters, Handling RecordNotFound Errors And Validation": [
          "Deleting A Product",
          "Creating Filters In Controllers",
          "Handling ActiveRecord RecordNotFound Errors",
          "Adding ActiveRecord Validations",
          "Testing The Validation On The Rails Console"
        ],
        "Using Conditionals In Controllers, Flash Messages And Using Resourceful Routing": [
          "Using Conditionals In Controllers To Determine The Course Of Action To Take",
          "Adding Flash Messages",
          "Using Flash.now Upon Failure To Save",
          "Replacing The Current Routes With Resourceful Routing"
        ],
        "User Registration": [
          "Introduction To User Model",
          "Creating The User Model",
          "Adding The Bcrypt Gem",
          "Validating The User Model",
          "Introducing Regular Expression (REGEX)",
          "Writing Email REGEX",
          "Downcasing Email Addresses Automatically",
          "Verifying Downcasing Email Address And Its Uniqueness",
          "Creating The User Controller",
          "Creating The New User Form",
          "Signing A User Up"
        ]
      },
      "requirements": [
        "Knowledge of Ruby language, HTML, CSS and javaScript ES6+ and experience developing web applications are required though those concepts will be explained in the course.."
      ],
      "description": "React.js is the web development library of choice by many web developer and there is still a huge demand for React developers. Also, Ruby on Rails is now a mature web development framework still favoured by start-ups. With the Rails 6, it is very easy to develop front-end applications in JavaScript. Combining these two technologies gives developers powerful tools to develop full-stack web applications.\n\n\nI’m Emmanuel Asante, a freelance developer and the creator of comprehensive Rails testing courses using Rails, RSpec and Capybara, and this course is no different.\n\n\nThis course will show you, step-by-step, how to take static html pages and turn them into a dynamic application using the awesome Ruby on Rail 6 framework. You will learn to build a fully functional application with authentication and authorization and deployed to Heroku.\n\n\nWith the Rails application deployed, we switch gears and learn step-by-step how to turn the Rails application into a single-page application using React.js. This second part will give you an awesome experience with the great React library. You will go from an absolute beginner to a pro by the time you are done with the course. You will learn how to create components, manage state, use advanced features of react-router-dom to switch views. Authentication and authorization will be covered. Also, you will learn about and use React hooks and advanced concepts such as higher-order components to simplify our code.\n\n\nWhat is so cool about this course is the fact that you can just start with the React development part if you so desire and you won’t be lost in it. The course is loaded with many hands-on coding challenges. By the time you are done with the course, you will be a Rails and React pro. Guaranteed! Come along with me on this amazing journey and you will be glad you did.",
      "target_audience": [
        "Developers and designers who want to take static HTML pages and learn how to convert that to a Ruby on Rails 6 application and eventually change the front-end to a React application."
      ]
    },
    {
      "title": "Deploy Django on VPS Ubuntu Apache Nginx uWSGI systemctl AWS",
      "url": "https://www.udemy.com/course/deploy-django-on-vps-ubuntu-apache-nginx-uwsgi-systemctl-aws/",
      "bio": "Learn how you can setup a VPS that can host multiple Django applications as well as applications from other technologies",
      "objectives": [
        "By the end of this course you will have learned how to deploy a VPS with hosts multiple Django websites together with multiple websites from different technologies"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge about Django and Linux command line"
      ],
      "description": "In this comprehensive course, we will embark on a journey to set up a Linux Virtual Private Server (VPS) utilizing cutting-edge technologies such as Apache2, Nginx, uwsgi, and systemctl. This setup is specially designed for hosting Django applications, yet it maintains the flexibility to support a variety of other technologies.\n\n\nOur primary platform for this course will be an Amazon EC2 VPS. However, the skills and knowledge you acquire here are universally applicable and can be seamlessly transferred to work with Linux VPS (specifically Ubuntu 18.04) from any other providers like Linode or Digital Ocean.\n\n\nA unique aspect of this course is the detailed walkthrough on configuring Apache2 as the primary web server. This server will interact with Nginx through a reverse proxy setup. Nginx serves a dual role – it acts as a server for media and static files and communicates with uWSGI, also via reverse proxy, for handling non-static file requests. uWSGI, being a versatile application server, will efficiently serve your Django applications.\n\n\nOne of the key learning outcomes of this course is mastering the automation of routine and critical tasks using systemctl. This includes automating the rebooting of applications in the event of a crash or during a VPS reboot, ensuring high availability and resilience of your applications.\n\n\nAn essential part of managing a VPS is ensuring its security. To address this, we will delve into using Amazon AWS security groups. These groups act as robust firewalls, safeguarding your VPS against unauthorized access and potential threats. By the end of this course, you will have a well-rounded understanding of setting up and managing a Linux VPS for hosting Django applications, ensuring they are both high-performing and secure.\n\n\nThis course is perfect for those who are looking to deepen their understanding of VPS management and application hosting using Linux, Apache2, Nginx, uwsgi, and systemctl. Whether you are a developer, system administrator, or an IT enthusiast, this course will equip you with the practical skills and theoretical knowledge to excel in this domain. Join us to embark on this exciting journey towards becoming proficient in managing and hosting applications on a Linux VPS.",
      "target_audience": [
        "Developers, sysadmins and DevOps guys that want to learn how to deploy a Django application on a VPS in a professional way"
      ]
    },
    {
      "title": "ASP.NET Web API from Basic to Advanced",
      "url": "https://www.udemy.com/course/aspnet-web-api-v/",
      "bio": "Build RESTful Web Service with ASP.NET Web API from the ground up",
      "objectives": [
        "Discuss the differences between Models, Views, and Controllers",
        "Have the tools to setup and host a basic CRUD Web Application online"
      ],
      "course_content": {
        "Prerequisite-Introduction to Web Programming": [
          "Web Programming Introduction"
        ],
        "Introduction to MVC": [
          "Introduction to ASP.NET MVC"
        ],
        "First MVC Application": [
          "First MVC Application"
        ],
        "Adding Model in MVC Application": [
          "Adding Model in MVC Application"
        ],
        "Simple Web API Example with jQuery Client": [
          "Web API Introduction",
          "Simple Web API Example with jQuery Client"
        ],
        "CRUD Operations using WebAPI": [
          "CRUD Operations using WebAPI"
        ],
        "CRUD Operations with Angular 4": [
          "CRUD Operations with Angular 4"
        ],
        "BONUS LECTURE : What's Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "Prior knowledge of HTML and C# is mandatory.",
        "LINQ, Entity Framework and SQL Server for database related operations."
      ],
      "description": "The course enables you to master RESTful Servides with Web API . It helps you gain in-depth knowledge of concepts.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nBy the end of this course you should able to\nUnderstand importance of RESTful services and its key features.\nIntroductory Concepts of HTML and Javascript\nWeb API Introduction\nWeb API with JQuery",
      "target_audience": [
        "New Web Developers",
        "Developers making the switch from .Net Web Forms to MVC"
      ]
    },
    {
      "title": "Complete Web Developer Course to Build Premium Web Templates",
      "url": "https://www.udemy.com/course/complete-web-developer-course-to-build-premium-web-templates/",
      "bio": "You will able to develop your own responsive website or premium web templates which you can able to sell on ThemeForest",
      "objectives": [
        "Develop premium web templates or your own responsive website with HTML5 and CSS3 and BootStrap3",
        "Sell premium web templates at ThemeForest marketplace",
        "Create your own blog or affiliate site with Wordpress",
        "Start earning money from freelance web development work",
        "Become a top professional web developer!"
      ],
      "course_content": {
        "Setup Working Environment": [
          "Welcome to the Course!",
          "Setup all necessary IDE and Tools",
          "Introduction with Sublime Text3 , Settings and Package Control",
          "Introduction with PhpStrom",
          "Introduction with GitHub and Trello",
          "[Activity] Write some basic code testing on IDE"
        ],
        "HTML ( part1 )": [
          "Introduction to HTML",
          "HTML web layout and code pattern",
          "Head Part <head> tag",
          "Div Tags",
          "Heading and Paragraph Tags",
          "Block Level and Text Level Element",
          "[Exercise] Create the attach web layout"
        ],
        "HTML ( part2 )": [
          "Essential Tags",
          "Use of Lists",
          "Create an un ordered list",
          "Hyperlinks",
          "Images",
          "Tables",
          "Horizontal Line, Blockquote, and Cite",
          "Form and Form Elements",
          "Various Forms",
          "[Exercise] Make the following list and Table"
        ],
        "HTML ( part3 )": [
          "Standard HTML writing",
          "The W3C's HTML Validator",
          "[Activity] Validate a html code",
          "Conclusion of HTML"
        ],
        "HTML5 ( part1 )": [
          "Introduction to HTML5",
          "HTML5 Code Pattern overview",
          "The Doctype",
          "The Simplest HTML Document Possible",
          "HTML Block and Inline Elements",
          "Header, Footer, and Navigation",
          "Articles and Section",
          "Asides",
          "Details",
          "The HTML5 Shiv",
          "Figures",
          "[Activity] Complete the basic web layout with HTML5"
        ],
        "Forms - HTML5 ( part2 )": [
          "Email Inputs",
          "Url and Tel Inputs",
          "Search, Color, and Number Inputs",
          "New Form Attributes",
          "Progress and Meter",
          "[Activity] Make a form to collect data from job applicants with validator"
        ],
        "Feature Detection - HTML5 ( part3)": [
          "Introduction to Feature Detection",
          "Modernizr",
          "Polyfills",
          "[Activity] Include modernizer in your project"
        ],
        "Browser History - HTML5 ( part4 )": [
          "Browser History: pushState",
          "Browser History: popState",
          "[Exercise] Show a real example for browser history PushState and PopState",
          "Conclusion of HTML5"
        ],
        "CSS Basic ( part 1 )": [
          "What is CSS?",
          "CSS in Action",
          "CSS Selectors",
          "Ways to Deploy CSS",
          "[Activity] Deploy css into your project"
        ],
        "Styling Specific Elements - CSS ( part 2)": [
          "Styling Text Elements",
          "Styling Tables and Lists",
          "Styling Backgrounds",
          "Making a CSS Button",
          "Basic Difference in Padding and Margin",
          "Creating a Drop-Down Menu with CSS",
          "Understanding DIV ID and DIV CLASS",
          "Calling Nested Elements",
          "[Activity] Create a Drop Down menu"
        ]
      },
      "requirements": [
        "Internet Browsing"
      ],
      "description": "Hello and welcome to the Complete Web developer course to build premium web template. I am so happy you are here. My name is Niamul and I am the Instructor for this course. You might be wondering \"is this right course for me\". Wel let me see If I can help you , I designed this course for anyone who want to learn web development Eigther a true beginer who don't know about web programming language or a advance developer who want to learn Premium web template development. I don't assume you have any prior programming knowledge all is needed is the drive to learn.\nSo what is the course goal ?\nDevelop premium web templates or your own responsive website with HTML5 and CSS3 and BootStrap3\nSell premium web templates at ThemeForest marketplace\nCreate your own blog or affiliate site with Wordpress\nStart earning money from freelance web development work\nBecome a top professional web developer!\nWho should take this course?\nThis course is for beginners interested in learning about web development , Students, Freelancers who Want to Learn Web Development from very Beginning to Advance Level, Those who Want to develop premium web templates and sell on ThemeForest.\nWhat you will Learn ?\nYou will learn HTML ,CSS , HTML5 , CSS3 , LESS , PHP , MYSQL , BootStrap3 , PSD to HTML5 Template Development and WordPress CMS.\nWhat actually I am going to focus ?\nI will start from very beginning to professional level. I will show you to prepare workstation like to setup IDE and Development Tools. I will show you how to convert a PSD to html5 Template and have Practical session about to develop your own blog or affiliate site with WordPress.\nAnd obviously how to prepare file and upload premium template on envato marketplace and start selling premium templates.\nWhy learn from me ?\nWell I am a Computer Science Graduate and Working as a Web Developer since 7 years. I am an Elite author at envato marketplace and selling premium templates there.\nAnything bonus?\nYes obviously. I will include my 5 Premium Template for your practice with Extended license which is value of $8840 at Envato market.\nSo why late ? Go and Enroll with this course , Upload your premium template at envato marketplace and Make a Lot of money.\nI will like to see you in my next lecture. Have a good day.",
      "target_audience": [
        "Who should take this course : This course is for beginners interested in learning about web development , Students, Freelancers, Teachers, Want to Learn Web Development from very Beginning to Advance Level, Those who Want to develop premium web templates and sell on ThemeForest.",
        "Who should not take this course : This course is not intended for those who want to learn individual topics in very deep level. I had focused on the topics you need to know to develop Premium Web Template , your own responsive website , blog site or your own affiliate site. So all are very focused to related topics"
      ]
    },
    {
      "title": "10 DevOps Projects: Automate, Deploy & Scale with Kubernetes",
      "url": "https://www.udemy.com/course/devops-deployment-projects-with-docker-kubernetes-aws/",
      "bio": "Master app deployment, continuous integration, and Kubernetes orchestration with Docker, AWS, Jenkins, Teraform & more.",
      "objectives": [
        "Software Developers aiming to improve their deployment processes",
        "DevOps Engineers seeking to automate workflows and manage applications at scale",
        "System Administrators responsible for deploying and maintaining applications",
        "IT Professionals interested in modern deployment technologies"
      ],
      "course_content": {
        "Introduction To The Course": [
          "Introduction To The Course"
        ],
        "Project 1: Streamlined Web Application Deployment using Docker, AWS, Nginx, and": [
          "Introduction to tools and technology - Streamlined Web Application Deployment",
          "Docker setup and server",
          "Run manage and deploy containers",
          "Download The Project Files"
        ],
        "Project 2: Continuous Integration Implementation with Jenkins, SonarQube, Git": [
          "Introduction - Continuous Integration Implementation with Jenkins, SonarQube,Git",
          "Installing tools",
          "Plugin installation",
          "Tools identification",
          "Pipeline demonstration",
          "Git and jenkins connection",
          "Download The Project Files"
        ],
        "Project 3: Application Deployment on Kubernetes Cluster utilizing EKS, AWS": [
          "Introduction - : Application Deployment on Kubernetes Cluster utilizing EKS, AWS",
          "Containerization",
          "Docker hub",
          "K8s arch and EKS",
          "Tools installation",
          "Deployments",
          "SVC and accessing the application",
          "Download The Project Files"
        ],
        "Project-4 Kubernetes monitoring using prometheus and grafana": [
          "Introduction - Kubernetes monitoring using prometheus and grafana",
          "Infra-setup.",
          "installing and Configure tools",
          "deploying helm chart",
          "accessing and exploring grafana",
          "Download The Project Files"
        ],
        "Project 5 - Automated Infrastructure Provisioning with Terraform": [
          "Introduction - Automated Infrastructure Provisioning with Terraform",
          "Terraform Working",
          "Tools installation",
          "vpc",
          "Instance",
          "LB.",
          "Verify and test",
          "Download The Project Files"
        ],
        "Project- 6 Deploying a Scalable CRUD App Using AWS Elastic Beanstalk": [
          "Introduction",
          "App overview",
          "database overview",
          "ENV setup",
          "validate and test",
          "Download The Project Files"
        ],
        "Project-7 Elevating Kubernetes micro-services with istio": [
          "Introduction",
          "Application overview",
          "Tools installation",
          "Istio-Setup",
          "Application Proxies Injection",
          "Kiali Dashboard",
          "Prometheus an grafana",
          "Download The Project Files"
        ],
        "Project-8 Designing Adaptive Auto-Scaling Architecture for HA and cost optimisat": [
          "Introduction",
          "App explanation",
          "Ec2 & app setup",
          "AMI and ELB setup",
          "ASG Setup",
          "Disaster Simulation",
          "Download The Project Files"
        ],
        "Project-9 Implementing a Static Website Hosting Solution on Amazon S3": [
          "Introduction",
          "understanding manual approach toil",
          "Bucket Creation",
          "Enabling static-website hosting",
          "Bucket policy and verify",
          "Download The Project Files"
        ]
      },
      "requirements": [
        "Beginners in DevOps"
      ],
      "description": "Unlock the full potential of DevOps by building 10 hands-on projects designed to teach you efficient web application deployment and infrastructure automation. In this course, you'll master essential tools like Docker, Kubernetes, Jenkins, AWS, and Terraform to ensure your web applications are scalable, reliable, and easily manageable.\nLearn how to containerize applications for consistency with Docker, automate CI/CD pipelines using Jenkins and GitHub Actions, and deploy scalable workloads on Kubernetes clusters. You'll also dive into monitoring using Prometheus and Grafana, infrastructure provisioning with Terraform, and much more. Whether you're deploying microservices with Istio or hosting a cost-effective static website on AWS S3, this course covers it all.\nKey Projects You'll Build:\nEfficient Web App Deployment with Docker: Containerize your apps to achieve consistency and efficiency.\nContinuous Integration with Jenkins: Automate the SDLC stages like build, test, and deploy.\nApp Deployment on Kubernetes Cluster: Deploy containerized apps on Kubernetes for scalability and reliability.\nKubernetes Monitoring with Prometheus and Grafana: Set up complete monitoring solutions in an EKS cluster.\nAutomated Infrastructure Provisioning with Terraform: Use IaC to deploy scalable infrastructure on AWS.\nDeploying a Scalable CRUD App on AWS Elastic Beanstalk: Simplify app deployment and management using PaaS.\nMicroservices Enhancement with Istio: Improve observability and reliability of Kubernetes microservices.\nDesigning Auto-Scaling Architecture: Create adaptive architectures for high availability and cost optimization.\nCost-Effective Static Website Hosting on AWS S3: Host static websites using S3 for a cost-efficient solution.\nGitOps CI/CD with GitHub Actions & ArgoCD: Automate Kubernetes deployments with GitOps.\nGain the practical skills needed to automate, deploy, and monitor cloud-native applications using industry-leading DevOps tools. Perfect for developers, sysadmins, or cloud engineers looking to elevate their expertise in DevOps deployment strategies.\nEnroll now and master the art of scalable, automated deployments!",
      "target_audience": [
        "Beginners in DevOps"
      ]
    },
    {
      "title": "Learn SQL, PHP-PDO, JavaScript and Bootstrap for web apps",
      "url": "https://www.udemy.com/course/learn-sql-and-php-to-build-powerful-and-secure-web-apps/",
      "bio": "Course to master SQL, JavaScript, twitter bootstrap and PHP to create powerful web applications. Better than on youtube",
      "objectives": [
        "Design advanced and complicated databases",
        "Create advanced SQL queries and Views",
        "Create advanced SQL Procedures and Functions",
        "Create and design powerful and secure Web applications using PHP and SQL",
        "Create PHP Data Object (PDO) codes to make web apps more secure",
        "Master SQL Language"
      ],
      "course_content": {
        "Software Installations": [
          "Introductory Lecture",
          "Installing MySQL server And Workbench",
          "Installing local server",
          "Links"
        ],
        "SQL Basics": [
          "What are databases?",
          "Tables and Relationships",
          "Creating databases and tables by queries",
          "Create databases and tables graphically",
          "Insert query",
          "Select query",
          "Update query",
          "Delete query",
          "Alter Table",
          "Joins - Part 1",
          "Joins - Part 2",
          "Multiple Joins",
          "Cross Joins",
          "Why we use cross joins",
          "Averages, Sums, and Counting",
          "SQL Union All",
          "SQL Subqueries",
          "SQL Like",
          "SQL Between",
          "Resume"
        ],
        "SQL Views": [
          "What are views",
          "Views Syntax",
          "Views with subquery"
        ],
        "SQL Procedures and Cursors": [
          "Procedures",
          "Procedure with no parameters",
          "Procedure with parameters",
          "SQL Cursors slides",
          "SQL Cursors",
          "Cursor example",
          "Cases"
        ],
        "Functions": [
          "Functions",
          "Functions with no parameters",
          "Functions with parameters",
          "Date and Time functions",
          "Triggers"
        ],
        "MySQL Project Exercises": [
          "Users and Privileges",
          "Export and Import Databases",
          "Introduction to our exercise database",
          "Exercises",
          "Exrercise 1 - Additional Time Goals",
          "Exercise 2 - Fields",
          "Solutions of View questions",
          "Exercise 8 - Goals in each half",
          "Exercise 9 - Goals at a given time",
          "Exercise about functions",
          "Solution of Procedures and Functions"
        ],
        "PHP - No programming skills required": [
          "PHP Editors",
          "Web applications working folder",
          "Variables and Echo",
          "Web Forms",
          "POST",
          "AND, OR and empty",
          "Sessions",
          "SQL Injections Example",
          "Connection",
          "Login",
          "Require once function",
          "Logout",
          "HTML Tables",
          "Select data from database into html tables",
          "Request Variables from URL",
          "Hidden input and Form managing",
          "Insert using web page table",
          "Update a row of a table",
          "Delete a row of a table"
        ],
        "JavaScript and jQuery": [
          "What is JavaScript ?",
          "What is JavaScript ?",
          "Script and Variables",
          "Input Validation",
          "Colors And Characters",
          "OnMouseOver and OnMouseOut",
          "Increment and decrement",
          "Accesing a div element using innerHTML",
          "Arrays",
          "Loops",
          "OnClick and changing location",
          "date and Time methods",
          "String Method",
          "Math and Numbers",
          "Include JavaScript files",
          "Append ELements",
          "jQuery - Introduction",
          "jQuery - Events",
          "jQuery - Other events",
          "jQuery - show()",
          "jQuery - fadeIn()",
          "jQuery set and get contents",
          "jQuery Add (append, prepend, after, before)",
          "jQuery remove and empty",
          "jQuery Animation",
          "jQuery exercise - Print an element"
        ],
        "Bonus: Introduction to Bootstrap": [
          "More lectures to come in couple of days"
        ]
      },
      "requirements": [
        "You will need to download MySQL server and MySQL workbench (links available in course)",
        "You will need to download wamp server (Link available in course)"
      ],
      "description": "This course can be taken by students who are interested in learning advanced SQL scripting, and learn basics of PHP to create a secure, anti-injections and powerful web applications.\nAt the end of this course, you will be able to create strong databases with foreign keys implemented, then writing SQL queries, Views, Procedures and Functions to facilitate your work, managing and contacting your main database server.\nBy subscribing to this course, you will be able to create advanced PHP web applications using PHP data object (PDO), to create a secure, non-vulnerable codes, and powerful PHP based web applications, where SQL Injections are 99% eliminated.",
      "target_audience": [
        "No programming skills required",
        "This course is meant for newbies in SQL",
        "This course is for beginners who wants to create powerful web applications",
        "This course is for newbies in PHP programming"
      ]
    },
    {
      "title": "Advanced .NET FullStack: Multi-Tenant Applications (NEW)",
      "url": "https://www.udemy.com/course/advanced-net-web-api-multi-tenant-applications-new/",
      "bio": "Developing FullStack MultiTenant .NET Web APIs with Blazor Webassembly",
      "objectives": [
        ".NET 8: Learn about the latest features and enhancements introduced in .NET 8, including primary constructors, language enhancements, and new APIs.",
        "Understand principles and best practices of designing clean architecture solutions, including separation of concerns, dependency inversion, and layering.",
        "Learn how to implement multi-tenancy support using Finbuckle's libraries, enabling them to build applications that serve multiple tenants with isolation of data",
        "Learn different strategies for managing tenants, including multi-database and shared database approaches",
        "Activate / Deactivate Tenants on Demand: Students will learn how to dynamically activate or deactivate tenants based on demand",
        "Upgrade Subscription of Tenants - Add More Validity Years/Months to each tenant: Students will learn how to implement subscription management for tenants",
        "AspNetIdentity for user management: Students will learn how to integrate and utilize ASPNET Core Identity for managing user authentication, authorization",
        "Jason Web Token (JWT): Students will learn about JSON Web Tokens (JWT) and how to implement secure authentication and authorization mechanisms using JWT.",
        "Permission-based authorization: Learn how to implement fine-grained, permission-based authorization in their applications, controlling access to resources based",
        "Global response wrapper: Learn how to implement a global response wrapper to standardize and customize API responses across their application",
        "CQRS Patterns with MediatR: Students will understand the Command Query Responsibility Segregation (CQRS) pattern and learn how to implement it using MediatR",
        "Learn how to perform data validation using Fluent Validation, including validation rules, custom validators, and integration with ASPNET Core",
        "Learn about the primary constructor syntax introduced in C# 9, enabling them to write cleaner and more concise code for initializing object properties.",
        "Learn advanced techniques for customizing and extending Swagger UI to generate comprehensive and user-friendly API documentation for their .NET Core apps",
        "And much more..."
      ],
      "course_content": {},
      "requirements": [
        "Basic .NET Web Apis Development Knowledge",
        "C# Programming Language",
        "Visual Studio 2022",
        "Visual Studio Code",
        "Microsoft SQL Server"
      ],
      "description": "Dive deep into .NET 8 with our advanced online course, focusing on multi-tenancy solutions and cutting-edge techniques. Learn to architect clean and scalable solutions while mastering multi-tenancy support using Finbuckle libraries. Explore subscription management for tenants, ASP.NET Core Identity for user management, and JWT authentication for secure access control.\n\n\nUnlock the power of permission-based authorization and seamlessly implement global response wrappers for standardized API responses. Delve into advanced patterns such as CQRS with MediatR, Pipeline behaviours and leverage FluentValidation for robust data validation. Discover the elegance of C# 9's primary constructor syntax and elevate your API documentation with advanced Swagger UI implementations.\n\n\nIdeal for developers seeking to enhance their ASP.NET Core skills, this course offers practical insights and hands-on experience to excel in building sophisticated, multi-tenant applications.\n\n\nKey Topics Covered:\n\n\nMulti-Tenancy Support with Finbuckle\nSubscription Management for Tenants\nASP.NET Core Identity and JWT Authentication\nPermission-Based Authorization\nGlobal Response Wrapper Implementation\nCQRS Patterns with MediatR\nData Validation using FluentValidation\nPrimary Constructor Syntax in C# 9\nAdvanced Swagger UI Implementations\nBlazor Webassembly\nMudBlazor UI Library\nAnd much more...\n\n\nPrerequisites: Basic understanding of ASP.NET Core development and C# programming language recommended.\n\n\nEnroll now and unlock the full potential of ASP.NET Core for multi-tenant applications!",
      "target_audience": [
        "Beginners who would like to know how to implement multi-tenant web applications",
        "Juniors who would to add know how to best implement multi-tenant apps within .NET web applications",
        "Seniors who would like to implement multi-tenant apps and take full control of application security with confident that their solutions are secured.",
        "Architects who would like to explore different way of implementing secure multi-tenant applications"
      ]
    },
    {
      "title": "Projects in jQuery Mobile: Learn by building Real World Apps",
      "url": "https://www.udemy.com/course/projects-in-jquery-mobile-learn-by-building-real-world-apps/",
      "bio": "Learn to build mobile apps using jQuery Mobile",
      "objectives": [
        "Student will be able to learn the core concepts of Mobile jQuery",
        "Learn to build responsive mobile apps using jQuery",
        "Learn by building real world projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript and HTML is required to complete this course",
        "Basic knowledge of jQuery will help but not necessary to complete this course"
      ],
      "description": "Learn how to build native apps from scratch in JavaScript with our jQuery Mobile Comprehensive course!\nBuilding native apps from scratch requires learning and mastering multiple languages such as Java, Swift, XCode, etc. Once, you complete learning these languages, you then have to understand how you can integrate other functions and features to build actual web apps from scratch.\nWell, what if I told you that you can build native apps from scratch without learning any of these languages, but just using your knowledge of JavaScript and jQuery? Well, now you can with the help of jQuery Mobile and this course.\njQuery is a subset of jQuery, a JavaScript library that is designed to simplify the process of writing codes for websites. JQuery Mobile allows developers to perform the same functionalities for mobile apps. JQuery Mobile allows developers to write cross-platform apps using JavaScript.\nApps built on jQuery Mobile can be deployed and published on multiple OSes and are compatible with numerous platforms. Now, you can get on board with one of the hottest app development platform with the help of this course!\nOur course has been created to give you the right balance of theory and practical, by dividing the course into theory as well as hands-on projects. The course is packed with a lot of examples and also includes 5 different projects to help you get down and dirty with this brilliant framework.\nThe course will help you breakdown the fundamentals of installing and actually coding in jQuery Mobile, before moving on to helping you understand important syntax and functions using the 5 different projects.\nThe course will cover important concepts such as creating simple websites, add multiple pages, integrating APIs, adding themes and also incorporating CRUD applications.\n5 Apps that we will cover in this course:\nSimple Mobile Website – a basic website to familiarize you with the syntax\nMobile Movies App – this will help you become familiar with adding features such as fetching, and creating databases.\nEvent Manager – In this project, you will learn how to incorporate CRUD applications using MongoDB.\nWeatherReporter – Here you will build a weather report app from scratch and learn how to integrate APIs\nMealTracker – Learn in detail about themes and adding data to local storage with this application.\nSo, what are you waiting for? Let’s get jiggy with jQuery Mobile and start building your first app!",
      "target_audience": [
        "Any one who wants to learn Mobile jQuery will find this course very useful"
      ]
    },
    {
      "title": "FULL Authentication WITH REACT JS NEXT JS TYPESCRIPT 2023",
      "url": "https://www.udemy.com/course/full-authentification-with-react-js-next-js-typescript-2023/",
      "bio": "Register, Login,6 Social logins, Forgot,Reset password, Send emails, form validation, protected routes w Deployment",
      "objectives": [
        "Create the perfect authentication system 2023",
        "Learn React js next js best practices.",
        "Learn next auth and it's advanced methods.",
        "Manage login, register, forgot and reset password, sending emails,form validation, protected routes",
        "Learn how to send emails using smtp services and nodemailer",
        "Create modern email templates",
        "Validating forms using react hook form and zod",
        "Learn how to wrote strong typed code using Typescript",
        "Learn how to use next js middleware"
      ],
      "course_content": {
        "Showcase": [
          "Full Showcase"
        ],
        "Setup": [
          "Create next app",
          "Setup tailwind css",
          "Setup Mongodb Atlas Cluster",
          "Connect to the database from our application using typescript",
          "Setup next auth and testing login process with github"
        ],
        "Next auth providers": [
          "Setup Google Provider",
          "Setup Discord Provider",
          "Setup Twitter Provider",
          "Deploy our application and test providers on production mode",
          "Setup Facebook Provider",
          "Setup Auth0 provider",
          "Add user to database when sign in with a provider",
          "Session strategy: database vs jwt",
          "Explaining callbacks and getting the provider name when sign in"
        ],
        "Home page": [
          "Styling the home page part 1",
          "Styling the home page part 2"
        ],
        "Protected routes": [
          "Protected routes with Next js middlware"
        ],
        "Authentification page": [
          "Auth page setup and custom input",
          "Finishing custom input styles",
          "React Hook Form setup",
          "Adding zod for validation",
          "Email and phone number inputs and validation",
          "Password and confirm password inputs and validation",
          "Password strength validation",
          "Accept terms and conditions validation",
          "Side submit button",
          "Show and hide password",
          "Adding the background and setup toastify and fixing some issues",
          "Register a user to the database",
          "After submit reset and loader"
        ],
        "Send emails, Activate account": [
          "Setup the template",
          "Setup smtp accounts",
          "SendMail function with nodemailer and handlebars",
          "Sending email test with registeration",
          "Activate account"
        ],
        "Sign in, CrsfTokens, adding providers": [
          "Sign in provider and switch between forms and backgrounds",
          "Sign in, csrfToken...",
          "Adding our custom providers"
        ],
        "Forgot, reset password": [
          "Forgot password page and form",
          "Forgot password backend api",
          "Reset password - frontend",
          "Reset password api"
        ],
        "Deployment": [
          "Deploy to vercel"
        ]
      },
      "requirements": [
        "Basic react js knowledge",
        "Very Basic next js knowledge"
      ],
      "description": "This is simply the best course on the internet if you want to build and deploy the best authentication system that you can take and use in all of your projects , and i am talking from login, register, forgot and reset password, send emails, from validation, protected routes and more.\nWe will use Next auth mixed with typescript to provide strong typed code while benefiting from Next js server side capabilities which makes this build really hard to compete with from :\n-we will use tailwind css for styling our application.\n- Strong form validation with react-hook-form and zod.\n-Strong login system using next auth secure sessions.\n-Login with credentials, google, facebook, twitter, github, discord, auth0...\n-Strong register system with validation in frontend and backend.\n-Manipulating next auth callbacks for our advantage.\n-Sending emails using nodemailer and smtp services including gmail.\n-Handling tokens secretly with emails.\n-Writing high quality production ready code.\n-Learn how work with typescript even as a beginner or someone who never used it.\n-Setup Mongodb cluster and Mongodb  connection from our application with typescript.\n-Add the users to our database where we handle the accounts while we handle the tokens in cookies using json web tokens.\n-working with next js api.\n-learning about handlebars and use it to replace in our html files.\n-Deployment to vercel.",
      "target_audience": [
        "All level developers that use react js",
        "Developers who want to create strong authentication system"
      ]
    },
    {
      "title": "Build a REST API with MariaDB ,Python, Django",
      "url": "https://www.udemy.com/course/build-a-rest-api-with-mariadb-python-django/",
      "bio": "Create an API step by step using MariaDB ,Python,Django and REST Framework",
      "objectives": [
        "Create and activate a virtual environment",
        "Install Django in a virtual environment",
        "Install REST Framework",
        "Create Django Project",
        "Create Django App",
        "Setup MariaDB with Django",
        "Create Database Model",
        "Create Model Objects",
        "Create and run migrations",
        "Create Serializer Class",
        "Create Views",
        "Map Views to URLS",
        "Test API with Postman"
      ],
      "course_content": {
        "Installations": [
          "Introduction",
          "Install Python",
          "Create a virtual environment",
          "Install Django",
          "Install REST framework"
        ],
        "MariaDB Database Django Setup": [
          "Create Django Project",
          "Create a Django App",
          "Install MariaDB",
          "Register Applications",
          "MariaDB Database Django Setup",
          "Apply Django Migrations"
        ],
        "Model and Serializer": [
          "Create a model",
          "Create and apply migration",
          "Create serializer class"
        ],
        "Views and URLS": [
          "Development Server",
          "Create a superuser account",
          "Create views -Part 1",
          "Create views -Part 2",
          "Map views to URLS",
          "Register Model",
          "Create Model Objects",
          "Install Postman",
          "Test API with CRUD Operations",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of Python",
        "Basic knowledge of Django",
        "Basic knowledge of Databases"
      ],
      "description": "API stands for Application Programming Interface.\nAn API is a software intermediary that allows two applications to talk to each other. In other words, an API is the messenger that delivers your request to the provider that you're requesting it from and then delivers the response back to you.\nWhen we are building APIs, we want our models to provide four basic types of functionality. The model must be able to Create, Read, Update,and Delete resources.\n\n\nIn this course, we are going to build an API using the following technology:\nPython\nDjango\nDjango Rest Framework\nMariaDB\nmysqlclient adapter\ndjango-cors-headers\n\n\nWhat You Will Learn :\nHow to Create and activate a virtual environment\nHow to install Django\nHow to install Django REST Framework\nHow to Create a new Django Project\nHow to Create a new Django App\nHow to register applications with Django\nHow to setup  MySQL Database with Django\nHow to create and run Migrations\nHow to Create a Django Model\nHow to define Data Models and migrate it to MySQL\nHow to Create and apply a new migration\nHow to Create a serializer class\nHow to Create views\nHow to Map views to URLs\nHow to Create Model Objects\nHow to test API with CRUD Operations\nHow to use Django Rest Framework to process HTTP requests\nHow to create CRUD operations interacting with API using Postman",
      "target_audience": [
        "Beginner Developers",
        "Beginner API Developers"
      ]
    },
    {
      "title": "Vue JS and Python Django Full Stack Web Development Course",
      "url": "https://www.udemy.com/course/vue-js-and-python-django-full-stack-web-development-course/",
      "bio": "learn to create a full stack web application from scratch using Python Django and Vue JS.",
      "objectives": [
        "Full Stack Web Development",
        "Vue JS Front End Development",
        "Python Django Backend Development with Mongo DB, SQL Server, MySQL, PostgreSQL and SQLite Databases.",
        "Build REST APIs"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Vue JS, Django & Mongo DB": [
          "Introduction",
          "Setup Environment",
          "Backend : Django and Mongo DB",
          "Frontend : Vue JS",
          "Source Code"
        ],
        "Vue JS, Django & Microsoft SQL Server": [
          "Introduction",
          "Setup Environment",
          "Backend : Django and Microsoft SQL Server",
          "Frontend : Vue JS",
          "Source Code"
        ],
        "Vue JS, Django & MySQL": [
          "Introduction",
          "Setup Environment",
          "Backend : Django and MySQL",
          "Frontend : Vue JS",
          "Source Code"
        ],
        "Vue JS, Django & PostgreSQL": [
          "Introduction",
          "Setup Environment",
          "Backend : Django and PostgreSQL",
          "Frontend : Vue JS",
          "Source Code"
        ],
        "Vue JS, Django & SQLite": [
          "Introduction",
          "Setup Environment",
          "Backend : Django and SQLite DB",
          "Frontend : Vue JS",
          "Source Code"
        ]
      },
      "requirements": [
        "basic html, css, javascript and python programming"
      ],
      "description": "The demand for a Full-Stack Web Developer is the highest compared to any technology professional. They are paid exceptionally well both in the companies and also as freelancers.\nThis is due to the fact that full-stack web developers have diverse set of skills.\nThey are good at Database Development.\nBackend Development.\nAnd also in Front End Development.\nIn this course, you will learn full stack web development with Vue JS for the frontend and Python Django for the backend.\nWe will build the same backend project with different databases such as Microsoft SQL Server, My SQL, Mongo DB, PostgreSQL and SQLite.\nSections in this Master Course:\n1) Vue JS, Python Django and Mongo DB.\n2) Vue JS, Python Django and My SQL.\n3) Vue JS, Python Django and PostgreSQL.\n4) Vue JS, Python Django and Microsoft SQL Server.\n5) Vue JS, Python Django and SQLite.\nWith Vue JS, you will learn to\n* Add routing to our app.\n* Add bootstrap table with custom sorting and filtering features.\n* Add modal pop up window with drop down and date picker.\n* We will also learn how to upload an image and save it in the backend sever.\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "python developers, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Joomla for Beginners - Learn how to build a website with CMS",
      "url": "https://www.udemy.com/course/joomla-for-beginners-build-a-website-with-joomla-cms/",
      "bio": "Learn how to build websites using Joomla CMS. Run your own blog or corporate website. No coding experience needed!",
      "objectives": [
        "Simplify the process of building a website",
        "Understand basic terms and definitions in Joomla",
        "Familiarization with Joomla environment both front-end and back-end",
        "Learn certain features and configure core settings of Joomla",
        "Imrove performance and take security precautions of a Joomla based website",
        "The know-how of building your own website with Joomla"
      ],
      "course_content": {
        "Welcome and introduction": [
          "Introduction",
          "Becoming an Online Instructor"
        ],
        "Joomla Installation": [
          "Joomla - Installation",
          "Joomla - Installation (contd.)"
        ],
        "Joomla - Front-end and Back-end areas": [
          "Joomla - front-end and back-end areas",
          "Module 3 - Quiz"
        ],
        "Joomla - Configuration": [
          "Joomla - configuration",
          "Joomla - global configuration",
          "Joomla - global configuration settings",
          "Joomla - article settings",
          "Joomla - global configuration (contd.)",
          "Module 4 - Quiz"
        ],
        "Joomla - Article Management": [
          "Joomla - introduction to article management",
          "Joomla media manager",
          "Joomla article setup",
          "Joomla - setup new articles",
          "Joomla - create articles",
          "Joomla - edit articles",
          "Module 5 - Quiz"
        ],
        "Joomla - User Management": [
          "Joomla - user management",
          "Joomla - user management (contd.)",
          "Joomla - user groups and user notes",
          "Module 6 - Quiz"
        ],
        "Joomla - Menu Management": [
          "Joomla - menu management",
          "Joomla - menu management (contd.)",
          "Create Joomla menus",
          "Joomla - configure menus",
          "Module 7 - Quiz"
        ],
        "Joomla - Templates": [
          "Joomla - introduction to templates",
          "Manage Joomla templates",
          "Module 8 - Quiz"
        ],
        "Joomla - Extensions": [
          "Joomla - introduction to extensions",
          "Joomla - manage extensions",
          "Module 9 - Quiz"
        ],
        "Joomla - Security Management": [
          "Joomla - security management",
          "Joomla - backups and password protect directories",
          "Joomla - security considerations",
          "Module 10 - Quiz"
        ]
      },
      "requirements": [
        "Desire to learn something new and continuous improvement",
        "Basic knowledge about computers and internet"
      ],
      "description": "In the last few decades, the web revolution has been taking over every aspect of our life. From ordering groceries to everyday banking to getting our daily news – there is hardly anything which is untouched by the latest web technologies.\nIn this day and age – every business large or small needs to have a web presence and tell the world about themselves. Even individuals want to express themselves by using an online medium like blogs or personal websites.\nAbility to build and run these sites has become an essential skill. Of course, we can hire a designer and web developer and pay them top dollar to build our site? Even if can afford them – what happens if we need to make inevitable changes to it or refresh the look? Does this necessarily need to become a lifelong expense?\nNO! modern content management systems make it very easy for anyone with little to no knowledge about technology to build, run and maintain a very attractive and functional website. One such CMS is Joomla – it is open source and completely free. And what is more – it is very mature and widely used to build thousands of web properties on the internet.\nAs such learning Joomla CMS will also give you added skills which are very valuable in the job market. The median income of a web developer in the US is around $73000 per year.\n\nThose are only a few of the reasons why you must enroll in this course and take your career to the next level.\n\nBy the end of this course you will:\nGet familiar with the process of building a website based on Joomla\nUnderstand  core terms and definitions on the components and functionality provided by Joomla CMS\nBe familiar with the Joomla administration control panel which helps you control every aspect f your site\nLearn how to use the features and configure core settings of Joomla\nImprove performance and take security precautions while building a Joomla website",
      "target_audience": [
        "Marketing personnel",
        "Business owners",
        "Web enthusiasts",
        "Anyone interested in building websites"
      ]
    },
    {
      "title": "Learn Laravel 8 API Development Tutorial Step by Step",
      "url": "https://www.udemy.com/course/learn-laravel-8-api-development-tutorial-step-by-step/",
      "bio": "Complete API Development Guide Using Sanctum, JWT & Passport Authentication",
      "objectives": [
        "Laravel 8 API Development Steps",
        "Working with Sanctum Authentication in Laravel 8",
        "JWT Authentication Implementation in API Development",
        "APIs Development Using Passport authentication",
        "Complete Guide for API Handling in Laravel 8"
      ],
      "course_content": {},
      "requirements": [
        "Beginners knowledge of Laravel framework & its about MVC pattern",
        "Beginners knowledge of Databases"
      ],
      "description": "We will learn the complete idea to develop a Laravel RESTful APIs Development Using JWT, Passport, Sanctum Authentication. Basic Experience in Laravel programming required like working of MVC. Learn practical skills of APIs Development in Laravel with mysql database driver.\nThis course is a step by step guide through the Laravel development with MySQL programming language. You will go from a beginner level to creating your own web services.\n\n\nBasics of laravel.\nConcept of Route, Controller, Migration, Seeders, Middlewares, Route Group & Prefix.\nComplete concept of authentication types in laravel.\nAPI Development without using authentication.\nLaravel Sanctum authentication.\nAPI development guide with live code session with sanctum.\nAPI development plans while creating application structure.\nAbout JWT basics and its structure.\nJWT API development tutorials.\nAPI Error handling by using middlewares.\nAbout Response & HTTP Code\nRelationship in API development with JWT\nDifference between Sanctum, JWT & Passport tokens.\nAPI Development Configurations.\nPassport package Installation with Complete detail.\nInstallation & Configuration of JWT in laravel application.\nAbout Middleware types and their use.\nProcess of API and their strategy to development.\nInside this whole tutorial you will cover too many things. After completing this whole course you will surely can handle api development in laravel framework. This course and it's video by video plans will help you to build a confidence in yourself to move with api development in php framework.\nThis course is for every level. For beginners, it will be very perfect to enrol and learn development in very easy steps with detailed concept.\nFew things you should keep in mind that is you should have some basics of laravel, mysql database and bit about MVC pattern. Rest all the things you will very clear during each sessions.",
      "target_audience": [
        "Beginner/Intermediate/Expert Laravel PHP Framework Learners",
        "PHP framework lover"
      ]
    },
    {
      "title": "CakePHP 3 for Beginners",
      "url": "https://www.udemy.com/course/cakephp-version-3-for-beginners/",
      "bio": "This course is an introduction to CakePHP 3.0, the most amazing PHP framework.",
      "objectives": [
        "Understand CakePHP 3.X",
        "Understand MVC",
        "Setup an entire Application",
        "Build any kind of application using CakePHP 3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to CakePHP 3.0"
        ],
        "Configuration": [
          "CakePHP 3.0 Configuration",
          "Routing in CakePHP"
        ],
        "CakePHP in Action!": [
          "Request & Response Objects",
          "Controllers",
          "Components"
        ],
        "Authentication": [
          "Implement authentication in your application"
        ],
        "Work with Database": [
          "Database basics",
          "Query builder",
          "Virtual property"
        ],
        "Final": [
          "Last word"
        ]
      },
      "requirements": [
        "PHP (basic knowledge)",
        "HTML (basic knowledge)"
      ],
      "description": "This course is an introduction to web development with CakePHP 3.0, the most amazing PHP framework. This course will get you up and running with the CakePHP 3.0 framework in no time, with everything from an introduction to MVC to building a fully-functional application.\nStarting with the basics of installing and configuring CakePHP 3.0, you will learn everything from creating a custom theme to custom components developing. We will be diving deep into JavaScript using jQuery to implement AJAX in CakePHP 3.0 application.\nTime is more valuable than money. I prepared this CakePHP 3.0 tutorial course to be very effective, so you can learn everything you need to know about CakePHP in less time.\nThis course is for CakePHP version 3.X",
      "target_audience": [
        "People that want to Build as they Learn",
        "Desire to Build Robust and Re-Usable Application Code",
        "Desire to learn CakePHP 3.X"
      ]
    },
    {
      "title": "ASP.NET Core Web API and Minimal API Development with .NET 6",
      "url": "https://www.udemy.com/course/aspnet-core-web-api-and-minimal-api-development-with-net-6/",
      "bio": "Learn ASP.NET Core Web API Development using .NET 6 with Authentication, Authorization, JWT, DTO, AutoMapper and Auth0",
      "objectives": [
        "Web API Development using Controllers with .NET 6",
        "Developing model class with validations",
        "Implementing Data Access Layer/Logic using Entity Framework Core",
        "Developing Generic Synchronous Repository Pattern to implement CRUD operations",
        "Authentication using Custom Credentials",
        "JWT Authentication and Authorization",
        "Role Based Authorization - Grant and Revoke permissions",
        "Working with DTO [Data Transfer Object] and AutoMapper [What, Why and How]",
        "Testing Web API using Postman",
        "Testing Web API using Angular application",
        "Testing Web API using React JS application",
        "Developing Generic Asynchronous Repository Pattern to implement CRUD operations",
        "Understanding Minimal API in .NET 6",
        "Performing CURD operations in Minimal API using Asynchronous Repository Pattern along with D.I.",
        "Introduction to Auth0 Security",
        "Working with Auth0 Dashboard - Generate Access Token",
        "Securing Minimal API Endpoints using Auth0",
        "Extra Material access information"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Software Requirements",
          "Who can take this course?",
          "Introduction to ASP.NET Core Web API Project",
          "Project Development - ASP.NET Core Web API and Minimal API"
        ],
        "Introduction to Models": [
          "Working with Model Classes - Theory",
          "Working with Model Classes - Hands On"
        ],
        "Introduction to DAL": [
          "Working with DAL - Theory",
          "Working with DAL - Hands On",
          "Introduction to Generic Repository Pattern",
          "Implementing Generic Repository Pattern in DAL - Hands On"
        ],
        "Developing First ASP.NET Core Web API using Controller Based Approach": [
          "Introduction to First ASP.NET Core Web API - Theory",
          "Developing First ASP.NET Core Web API - Hands On",
          "Adding New Controller with D.I. in ASP.NET Core Web API Project - Theory",
          "Adding New Controller with D.I. in ASP.NET Core Web API Project - Hands On",
          "Introduction to different Return Types of an Action Method - Theory",
          "Implementing Different Return Types for an Action Method- Hands On",
          "CUD Operations in ASP.NET Core Web API Project - Theory",
          "CUD Operations in ASP.NET Core Web API Project - Hands On",
          "Example of Model Validations"
        ],
        "Assignment": [
          "Assignment"
        ],
        "ASP.NET Core Web API Security": [
          "Introduction to Authentication in ASP.NET Core Web API - Theory",
          "Authentication in ASP.NET Core Web API - Hands On",
          "Authentication with Authorization using JWT in ASP.NET Core Web API - Theory",
          "Authentication with Authorization using JWT in ASP.NET Core Web API - Hands On",
          "Understanding Role Based Authorization - Theory",
          "Implementing Role Based Authorization - Hands On"
        ],
        "Role of DTOs and AutoMapper in ASP.NET Core Web API": [
          "Introduction to DTO and AutoMapper in ASP.NET Core Web API [What/Why] - Theory",
          "Implementing DTOs and AutoMapper in ASP.NET Core Web API Project - Hands On"
        ],
        "Testing ASP.NET Core Web API with Client Applications": [
          "Testing ASP.NET Core Web API using different client applications - Theory",
          "Testing ASP.NET Core Web API endpoints using Postman - Hands On",
          "Testing ASP.NET Core Web API endpoints using Angular Application - Part - I",
          "Testing ASP.NET Core Web API endpoints using Angular Application - Part - II",
          "Introduction to CORS - What, Why and How",
          "Testing ASP.NET Core Web API endpoints using React JS Application - Part - I",
          "Testing ASP.NET Core Web API endpoints using React JS Application - Part - II"
        ],
        "Introduction to Asynchronous Repository Pattern": [
          "Asynchronous Generic Repository with asynchronous action methods - Theory",
          "Asynchronous Generic Repository with asynchronous action methods - Hands On"
        ],
        "Minimal APIs in .NET 6": [
          "Introduction to Minimal API in .NET 6 - Theory",
          "Developing First Minimal API using .NET 6 - Hands On",
          "Minimal API with D.I. to Perform CRUD Operations - Theory",
          "Minimal API with D.I., Results Static Methods and Async Repository - Hands On"
        ]
      },
      "requirements": [
        "Basics of C# Language. For example - OOP Concepts, Class Development, Generics in .NET, Developing Class Library Etc.",
        "Basic knowledge of Entity Framework or Entity Framework Core along with Code First Modeling",
        "Fair idea about MVC architectural pattern [For Example - Controller and Model]",
        "Introductory knowledge of Security concepts like What is Authentication and Authorization"
      ],
      "description": "Sharing data with authentication and authorization across number of platforms and devices is a challenging job. Being a developer, in an organization, we build solutions using different technologies, libraries, frameworks etc. To share the data with all these platforms and devices, we can think of ASP.NET Core Web API  along with authentication, authorization and many more features which we can use during the development of our applications.\nIn this course, we will learn ASP.NET Core Web API development by building a project with controller based API and Minimal API which is introduced in .NET 6. We will also see how to secure Minimal API using Auth0 security with Access Token. Also, let's see how to use DTOs [Data Transfer Object] and Auto Mapper in our application. This will be a complete hands-on course where we will develop our API with different examples. During the ASP.NET Core Web API development, we will use -\nModel Classes\nEntity Framework Core - Code First Approach\nData Access Layer/Logic\nASP.NET Web API [Controller and Minimal API]\nDependency Injection\nJsonWebToken [JWT]\nAuth0\nEtc.\nWe will use Microsoft Visual Studio 2022 and Microsoft SQL Server. Along with that we will test our Web API endpoints using -\nSwagger UI\nPostman\nAngular Application\nReact JS application",
      "target_audience": [
        ".NET Developers who have knowledge of ASP .NET MVC architecture pattern",
        "Developers who want to learn Web API development",
        "Developers who want to share the data across multiple platforms with security like authentication and authorization [JWT/Auth0/Role Based Authorization]",
        "Developers who want to understand Minimal API in .NET 6",
        "Developers who want to implement CRUD operations using controller based and/or microservices along with authentication and authorization"
      ]
    },
    {
      "title": "Practical SpringBoot Microservices Implementation Mastery",
      "url": "https://www.udemy.com/course/practical-springboot-microservices-implementation-mastery/",
      "bio": "Learn to implement SpringBoot based Microservices and RESTful API's architecture",
      "objectives": [
        "You will learn to create springboot based microservices",
        "You will learn microservice concept of discovery service and registry",
        "You will learn microservice concept of config server",
        "You will learn microservice concept of API gateway",
        "You will learn microservice concept of circuit breaker",
        "You will learn microservice concept of API authentication with keyclock and Oauth2"
      ],
      "course_content": {
        "Implementing Product and Booking Microservice": [
          "Course Overview",
          "Know Your Instructor & Get Help/Support",
          "Generating and Setting up of product service",
          "Create product entity class with annotation",
          "Create product repository",
          "Creating controller and GET and POST endpoints",
          "Test GET and POST endpoint with Postman",
          "Generating and Setting up of booking service"
        ],
        "Discovery service and Service registry": [
          "Understanding Discovery service and Service registry",
          "Generating and Setting up Discovery Service",
          "Registering Product service as client to Discovery service",
          "Registering Booking service as client to Discovery service"
        ],
        "config server and centralized configuration": [
          "Understanding config server and centralized configuration",
          "Create git repo and add properties files",
          "Generate github token and use in Intellij to push code",
          "Generating and Setting up of Configuration service",
          "Configuring config server fetch different profile based properties from github",
          "Connecting booking service to config server on dev profile",
          "Connecting product service to config server on dev profile"
        ],
        "RefreshScope and HarshiCorp vault": [
          "RefreshScope introduction",
          "Implementing RefreshScope Part-1",
          "Implementing RefreshScope Part-2",
          "HarshiCorp vault setup part-1",
          "HarshiCorp vault setup part-2",
          "Storing booking service secrets in Vault",
          "getting vault data in microservice"
        ],
        "message broker": [
          "Implementing message broker",
          "Installing RabbiMQ",
          "Using RabbitMQ in microservice",
          "Fixing the vault secret fetching issue"
        ],
        "API Gateway, Keycloak and Oauth2 server": [
          "What is API Gateway",
          "Setup and Configuration of API gateway",
          "Testing the API's with API Gateway Part-1",
          "Testing the API's with API Gateway Part-2",
          "Installing and setting up Keycloak server",
          "Configuring keycloak client and user",
          "Configuring spring security filter in API Gateway to intercept request",
          "Configure Product Service as Resource Server",
          "Testing API Gateway and Keycloak security"
        ],
        "Circuit Breaker": [
          "Overview of Circuit Breaker Pattern",
          "Generating the stock project from springboot starter",
          "Implementing entity repository and controller",
          "Configuring properties for stock service",
          "Implementing entity controller repository for booking service",
          "Implementing Feign client call from booking to stock service",
          "Adding circuit breaker to booking service"
        ],
        "Source code": [
          "Complete source code for all microservice"
        ]
      },
      "requirements": [
        "Basics of Java Programming language",
        "Basics of SpringBoot"
      ],
      "description": "Learn to implement SpringBoot based Microservices and RESTful API's architecture from scratch in a practical step by step approach.\nMicroservices architecture has many advantages like:\nImproved productivity\nBetter resiliency\nIncreased scalability\nContinuous integration/continuous delivery (CI/CD)\nOptimize business functionality\nand many more\n\n\nWe will be implementing many important concepts of microservices architecture like\nSpring Cloud Config Server\nSpring Cloud Bus\nSpring Cloud Netflix Eureka\nSpring Cloud Circuit Breaker\nSpring Cloud Sleuth\nSpring Cloud Gateway\nSpring Cloud Stream\n\n\nWe will be creating many springboot projects from scratch  from spring initializer, some of the microservice will be based on mongodb and some will work with mysql database.\nFollowing are the steps we will cover:\n1.1-Generating and Setting up of product service\n1.2-Create product entity class with annotation\n1.3-Create product repository\n1.4-Creating controller and GET and POST endpoints\n1.5-Test GET and POST endpoint with Postman\n2.1-Generating and Setting up of booking service\n2.2-Understanding Discovery service and Service registry\n2.3-Generating and Setting up Discovery Service\n2.4-Registering Product service as client to Discovery service\n2.5-Registering Booking service as client to Discovery service\n2.6-Understanding config server and centralized configuration\n2.7-Create git repo and add properties files\n2.8-Generate github token and use in Intellij to push code\n2.9-Generating and Setting up of Configuration service\n2.10-Configuring config server to fetch different profile based properties from github\n2.11-Connecting booking service to config server on dev profile\n2.12-Connecting product service to config server on dev profile\n2.13-RefreshScope introduction\n2.14-Implementing RefreshScope Part-1\n2.15-Implementing RefreshScope Part-2\n2.16-HarshiCorp vault setup part-1\n2.17-HarshiCorp vault setup part-2\n2.18-Storing booking service secrets in Vault\n2.19-getting vault data in microservice\n3.1-Implementing message broker\n3.2-Installing RabbiMQ\n3.3.0-Using RabbitMQ in microservice\n3.3.1-Fixing the vault secret fetching issue\n3.4-What is API Gateway\n3.5-Setup and Configuration of API gateway\n3.6-Testing the API's with API Gateway Part-1\n3.7-Testing the API's with API Gateway Part-2\n3.8-Installing and setting up Keycloak server\n3.9-Configuring keycloak client and user\n3.10-Configuring spring security filter in API Gateway to intercept request\n3.11-Configure Product Service as Resource Server\n3.12-Testing API Gateway and Keycloak security\n4.1-Overview of Circuit Breaker Pattern\n4.2-Generating the stock project from springboot starter\n4.3-Implementing entity repository and controller\n4.4-Configuring properties for stock service\n4.5-Implementing entity controller repository for booking service\n4.6-Implementing Feign client call from booking to stock service",
      "target_audience": [
        "Anyone who wants to learn and implement the microservices architecture using java and springboot"
      ]
    },
    {
      "title": "Web Design FORMS Layouts A Must to Learn For All Levels",
      "url": "https://www.udemy.com/course/web-design-layouts-a-must-to-learn-for-all-levels/",
      "bio": "A Complete Bundle of Web Designs For Front End Web Developers [ Essential Course ]",
      "objectives": [
        "Tons of modern CSS techniques to create stunning designs and effects",
        "Advanced CSS animations with @keyframes, animation and transition",
        "Source Code For Download is Attached",
        "Best way to learn CSS with really real world examples",
        "How CSS works behind the scenes: the cascade, specificity, inheritance, etc.",
        "Control and manipulate transformations of elements from 2D to 3D using scale, rotate, and the translate methods",
        "Latest And Real time Examples with 7X Fast to Write",
        "Using EMMET Short Methods to Write Coding to deliver Fast"
      ],
      "course_content": {
        "Creating a Responsive Contact Form": [
          "Intro to Contact Form Layout",
          "Creating the HTML Layout of Contact Form",
          "Adding CSS For the Contact Form",
          "Creating the Left Side Layout Dimensions For Contact Form",
          "Designing Contact Form Layout",
          "Designing Social Icons For Form Layout",
          "Designing Form Layout to Right Side",
          "Designing INPUT , TEXTAREA with in the Form Layout",
          "Final touch to the Form Layout Design",
          "Download the Source Code For the Contact Form Layout"
        ],
        "Image Sliders - Simple and Easy": [
          "Intro of Image Slider",
          "Creating Slider Layout Using HTML",
          "Adding Full Width of the Slider",
          "Adding Small Photos Using HTML",
          "Adding Styles to thumbnail Pictures",
          "Adding JavaScript to Sliders",
          "Download the Source Code For the Sliders Layout"
        ],
        "Contact Form With Background Image Responsive": [
          "Intro to Contact Form",
          "Creating the Contact Header Section",
          "Creating Left Side Layout For Address",
          "Creating Contact Form with INPUT Elements",
          "Making Contact Form Responsive",
          "Download the Source Code For the CONTACT Form Layout"
        ]
      },
      "requirements": [
        "You should have some familiarity with HTML5 , CSS3 and a Bit JavaScript .",
        "All you need is a computer (Windows, macOS, or Linux) with an internet connection (Windows, macOS, or Linux)"
      ],
      "description": "What Are Responsive Forms?\nYour forms should work on all mobile devices to create a seamless experience for all employees. This means optimizing for Apple, Android and all sized devices, from tablets to smartphones.\nResponsive forms get the job done because they automatically adjust for all devices, screen sizes and orientations.\nFilling this form out on mobile would then require users to scroll and pinch to view all of the information. In fact, had the form not been optimized, it may not have been visible without scrolling since the large image would have crowded it out.\nIf you’ve ever tried to fill out a form on a mobile device that isn’t optimized for the mobile experience, you will know how frustrating the process can be. After pinching and scrolling for a while, you may have abandoned the task completely and put it off until you can access a desktop computer.\nYour customers and employees feel the same. Without optimization, they’ll abandon the experience and put it off until they can access their desktops. The greater the user effort and/or confusion, the worse the user experience, which wastes time and lowers productivity.\nWhy is Mobile Design so Important for the Modern Workforce?\nMobile applications and forms have become an important component of the modern workforce.\nCreate forms that work perfectly for mobile devices with this expert advice.\nWhether it is a signup flow or a multi-view stepper, forms are one of the most important components of digital product design – so you need to design them so they work effectively on mobile devices.\nRegardless of the device size, the easiest way to complete a form is in a linear fashion. Multiple columns disrupt a user's momentum (the users are likely to interpret the fields inconsistently, which is a negative factor in terms of usability) and can result in users having to resort to horizontal scrolling.\nWhen it comes to laying out forms, you should design the entries in one column: if a form is in a single column, the path to completion is a straight line down the page.\nThe form field won't be wide enough to display the user's entire input, making them more likely to mistype their responses and leading to more erroneous forms being submitted\nWhen a user is notified that they have entered erroneous information, they may have a hard time spotting and fixing the problem as they won't be able to see the entire invalid input\n\n\nPlacing the label above the form field when a user is browsing from a mobile device will ensure users can see the maximum width to input their details, since you don't need to use up any for the label. Writing your labels above the input fields also makes it much easier for you to write clear and meaningful field labels, as you won't be limited to one or two words.\nHelp and inspiration ?\nNot only do you get a load of practical, useful starting projects in this course, you can also head over to CSS Animation.rocks for more, and even sign up to a weekly newsletter packed full of tutorials, inspiration and tips for animating on the web.\nThere’s no better time to learn Animations : You’ve made a smart choice, because CSS 3 Animations is the most popular language out there. This is no exaggeration. This popularity and growth means more jobs and opportunities than ever before.\nGet access to fast support if you get stuck : There’s nothing worse than getting stuck ten hours into a course and not getting the help you need to continue. Getting stuck is part of the learning process. That’s why I’m here to answer every single question that comes my way.\nI guarantee that this is the most up-to-date and engaging course available, and it comes with a Udemy 30-day money-back guarantee.\nI can’t wait to see you on the inside !\n- B. Praveen Kumar ( PHP Developer & Web Designer - FULL Stack Developer ).",
      "target_audience": [
        "All Levels From beginner to Advance"
      ]
    },
    {
      "title": "Strategic Website Design Bootcamp™ - Complete Webflow Course",
      "url": "https://www.udemy.com/course/strategic-website-design-webflow/",
      "bio": "**FREE WEBSITE TEMPLATES INCLUDED** Build strategic & stunning websites easily in no time.",
      "objectives": [
        "The rules of strategic & beautiful website design",
        "The difference between a $500 vs $10,000 website",
        "Strategic website design",
        "Webflow Essentials Crash Course",
        "Examples of world-class website design",
        "How to improve your website overtime"
      ],
      "course_content": {
        "An Introduction to Strategic Branded Website Design": [
          "How to get Free Website Templates & Webflow Support",
          "The difference between a $500 vs $10,000 Website",
          "Creating a Seamless Website User Experience",
          "Building a Website that can Promote Brand Growth",
          "The 5-Second Rule *Do not miss lesson*"
        ],
        "Examples of World-class Branded Website Design": [
          "Examples of World-class Personal Brand Websites",
          "Examples of World-class E-Commerce Brand Websites",
          "Examples of World-class Service Related Branded Websites"
        ],
        "Strategic Website Design Mini-Bootcamp": [
          "Alignment & Grids",
          "Visual Hierarchy",
          "Fonts & Typography",
          "Creating Website Colour Palettes",
          "Using Your Website Colours Properly",
          "Button Hierarchy Design",
          "The Importance of Great Imagery",
          "Where to find Great Stock Imagery (Free & Paid)",
          "Cropping & Framing Images (The Rule of Thirds)",
          "Contrast Rules (Including USA Legal Requirements)",
          "Overlapping",
          "Repetition & Consistency",
          "White Space"
        ],
        "Results-Driven Strategic Website Design": [
          "Defining your Websites Strategic Objectives",
          "Deciding what pages you need to meet objectives",
          "Creating the Structure of each Website Page Strategically",
          "Why use a Website Template & Where Can You Find Them?"
        ],
        "More Amazing Websites for Inspiration": [
          "Where you can get Website Design Inspiration",
          "E-Commerce Best Websites Inspiration",
          "Personal Brand Best Websites Inspiration",
          "Service-Focused Best Websites Inspiration"
        ],
        "Website Structure Inspiration": [
          "Personal Brand Website Page Structure Inspiration",
          "E-Commerce Brand Website Page Structure Inspiration",
          "Service-Focused Brand Website Page Structure Inspiration"
        ],
        "Webflow Essentials Crash Course": [
          "What is Webflow?",
          "Webflow Packages",
          "Webflow vs Other Website Building Platforms",
          "Breakpoints in Webflow",
          "Introduction to Box Model",
          "Sections",
          "Containers",
          "Div Blocks",
          "Grids",
          "Link Blocks",
          "Buttons",
          "Typography",
          "Images",
          "Videos",
          "Lottie Animations",
          "Forms",
          "Navigation Bars",
          "Symbols",
          "Lightboxes",
          "Sliders",
          "Tabs",
          "Adding Social Media Buttons",
          "Classes",
          "Backgrounds",
          "Display Settings & Responsiveness",
          "Image Optimisation & Lazy load",
          "Positioning",
          "Hero Sections",
          "CMS & Dynamic Content"
        ],
        "Building Your Website": [
          "Personal Brand Website Build - (PART ONE) - Website Structure Development",
          "Personal Brand Website Build - (PART TWO) - Finishing Touches & Settings",
          "Service-Focused Brand Website Build - (PART ONE) - Website Structure Development",
          "Service-Focused Brand Website Build - (PART TWO) - Finishing Touches & Settings",
          "Service-Focused Brand Website Build - (PART THREE) - CMS Set up & Settings",
          "E-Commerce Brand Website Build - (PART ONE) - Website Structure Development",
          "E-Commerce Brand Website Build - (PART TWO) - Finishing Touches & Settings"
        ],
        "Launching your Website": [
          "How to make sure your Website Reaches Google's Page #1",
          "How to Secure a Great Domain for your Website",
          "Adding a Custom Domain to your Website"
        ],
        "After Website Launch": [
          "Installing Hotjar to Gather Valuable Data to Improve your Website",
          "Creating a Marketing Strategy to Drive Website Traffic",
          "Refining your Website to Optimise for Conversion",
          "How to know when your Website is Perfect?"
        ]
      },
      "requirements": [
        "Internet connection",
        "A hunger to learn world-class website design"
      ],
      "description": "What's the difference between a website that just looks good and a website that looks great and actually gets results.\n\n\nAnd better, what if you could build these websites in just a few hours?\n\n\nWell this is exactly what this course has been designed to do.\nAnd we want to help as many people learn how to design, build & develop amazing websites that actually get results.\n\n\nIn this course, we teach you how to build websites for the main three types of businesses in the world:\nE-Commerce Brands\nService-Focused Brands\nPersonal Brands\n\n\nAnd that's not all...\n\n\nWe'll cover everything you need to know in order to become a master the art of building world-class websites with Webflow.\n\n\nIn this course, you'll learn:\n\n\nWebflow Essentials Crash Course\nBuilding a results driven website\nThe rules of strategic & beautiful website design\nStrategic website design\nExamples of world-class website design\nThe difference between a $500 vs $10,000 website\nHow to improve your website overtime\nAnd so much more...\n\n\nThis course also includes *Free Beautiful Website Templates* you can use within Webflow.\n*We will show you how to secure them inside the course.\n\n\nSo simply follow the steps and by the end of this course, you'll understand the key to strategic website design and will understand how to create strategic websites easily and quickly.\n\n\nI'll see inside the course :)\n\n\nScott",
      "target_audience": [
        "A freelancer wanting to learn world class website design",
        "A website designer who wants to level up their website development skills",
        "Someone who wants to learn how to design beautiful websites easily on Webflow"
      ]
    },
    {
      "title": "CSS Master Course: For Beginners",
      "url": "https://www.udemy.com/course/css-master-course/",
      "bio": "Create stunning layouts using CSS3",
      "objectives": [
        "Learn how to use CSS to create beautiful websites"
      ],
      "course_content": {
        "Introduction": [
          "What You'll Need to Follow",
          "Navigating Atom",
          "Atom Shortcuts",
          "Previewing The Four Projects"
        ],
        "Basic CSS": [
          "What is CSS?",
          "What is a CSS Rule?",
          "Basic Selectors",
          "Web Resources",
          "The Cascade & Specificity",
          "Web Resources",
          "Typography",
          "Backgrounds",
          "Shorthands",
          "Wrapping Up"
        ],
        "The Box Model": [
          "What is the Box Model?",
          "Padding",
          "Borders",
          "Height & Width",
          "Display",
          "Margin",
          "Outline",
          "Box-Sizing"
        ],
        "CSS Units": [
          "Fluid Vs. Fixed Layouts",
          "Percentage Unit",
          "Relative Font Sizes",
          "Viewport Units",
          "Em Unit",
          "Rem Unit",
          "The Calc() Function"
        ],
        "Positioning": [
          "Vertical Align",
          "Floats",
          "Overflow",
          "Relative Positioning",
          "Absolute Positioning",
          "Fixed Positioning",
          "Sticky Positioning",
          "Z-Index"
        ],
        "Project 1": [
          "Preview Of The Final Version",
          "Setup",
          "Landing Section",
          "Info Section",
          "Blog Preview Section",
          "Pricing Section",
          "Testimonial Section",
          "Newsletter Section",
          "Footer Section"
        ],
        "Advanced Selectors": [
          "Hierarchy Terms",
          "Selecting Via Hierarchy",
          "Attribute Selector",
          "Pseudo Classes Pt. 1 Child Classes",
          "Pseudo Classes Pt. 2 Type Classes",
          "Pseudo Classes Pt. 3 Periodic Selectors",
          "Pseudo Classes Pt. 4 Highlighting & inputs",
          "Pseudo Classes Pt. 5 Not",
          "Pseudo Elements",
          "Combining Selectors Pt. 1",
          "Combining Selectors Pt. 2"
        ],
        "Project 2": [
          "Landing",
          "Navbar",
          "Action Section",
          "Info Section",
          "Featured Section",
          "Register Section",
          "Newsletter Section",
          "Footer Section"
        ],
        "Responsive Design": [
          "What Are Media Queries?",
          "Web Resources",
          "Media Objects",
          "Types & Features",
          "Logic"
        ],
        "Project 3": [
          "Preparing The Files",
          "Navigation & Header",
          "Articles",
          "Sidebar",
          "Footer",
          "Adding Media Queries"
        ]
      },
      "requirements": [
        "Basic HTML."
      ],
      "description": "This course will take your CSS skills from the absolute basic to advanced.  You'll learn everything you need to know to create complex layouts and elegant designs. During the course, we'll create 4 unique CSS projects, those projects will be covered in sections 6, 8, 10 and 12.\n\n\nCourse Map\nSection 2) Basic CSS - This is the first real section of the course.  This section starts off by assuming 0 knowledge of CSS.  As so, I will start off by breaking down in detail the concept of a CSS rule and then move on to basic selectors.  Before the end of this section you'll have all the skills necessary to alter and typographic and backgrounds elements of your web pages.\n\n\nSection 3) The Box Model - This section will breakdown the CSS box model.  The box model is perhaps the most important concept that a web developer must understand before they can start creating any sort of layouts.  I'll also cover in this section how to set the height and width of HTML elements.\n\n\nSection 4) CSS Units - Up until this section we'll have only used pixels for unit sizes.  Pixels are great for some things, but not optimal for everything.  This section will show you how you can use relative units to make your projects easier to maintain.\n\n\nSection 5) Positioning - CSS positioning can be a pretty complex thing, but it doesn't have to be.  This section will simplify many of the more complicated CSS properties.  Most notably things like floats, absolute positioning, vertical align, etc.  After this section, you'll have the tools to create nearly and layout you'll ever need to create.\n\n\nSection 7) Advanced Selectors - CSS offers many different types of selectors and also allows combining those selectors to create an even more specific selection.  This section will also introduce you to pseudo classes & pseudo elements.\n\n\nSection 9) Responsive Design - This section is short, but super important for modern web design.  After this section you'll be able to use CSS3 media queries to drastically alter the layout of your pages based off the size of the screen currently viewing it.\n\n\nSection 11) Animations & Transitions - This section will breakdown CSS transitions and CSS key-frame animations.  CSS transitions will give how hover effects a much smoother transition and can be a great way to add some life into your web pages.  Key-frame animations are more about creating animations that play when the page loads.  This section will also show you how to use the transform property.\n\n\nSection 13) Bonus - The final section of the course will go over many of the more \"fun\" CSS concepts that didn't fit anywhere else in the course.  Including CSS variables, Gradients, Shadows, Filter, and much more.\n\n\nIf you have any questions about the course, feel free to message me.  I usually reply very quickly, if anything I'll get back to you as fast as possible.\n\n\nI hope to see you in the course!",
      "target_audience": [
        "Novice Web Developers looking to up their CSS skills."
      ]
    },
    {
      "title": "Java EE 8 RESTful Web Services Cookbook",
      "url": "https://www.udemy.com/course/java-ee-8-cookbook-mastering-rest-web-services-with-jax-rs/",
      "bio": "A solution driven approach to REST web services with Java EE 8 using JAX-RS, JPA, CDI and Payara Micro app server",
      "objectives": [
        "Be able to use JAX-RS to create modern RESTful web services on Java EE 8",
        "Be able to protect your REST resources with JSON Web Token (JWT)",
        "Be able to integrate dependency injection into your RESTful web services",
        "Be able to use JAX-RS filters",
        "Be able to host Java methods as REST resources",
        "Be able to integrate Java Persistence API into your REST resources",
        "Be able to implement caching in your REST resources",
        "Be able to host Java classes as REST resources",
        "Be able to use return JSON data in response to client requests",
        "Be able to validate client requests to your RESTful web services",
        "Be able to create asynchronous REST services",
        "Be able to consume file objects in your REST services",
        "Be able to return file objects from your REST resources",
        "Be able to send cookies to clients from your REST resources"
      ],
      "course_content": {
        "Intro": [
          "Welcome",
          "A note on reviews"
        ],
        "Solutions": [
          "[Java EE Cookbook] What is JAX-RS?",
          "What are RESTful web services?",
          "[Java EE Cookbook] How do I configure JAX-RS in my application?",
          "[Java EE Cookbook] How do I register a class as a rest resource?",
          "[Java EE 8 Cookbook] How do I register a method as a resource method?",
          "[Java EE 8 Cookbook] How do I register a method as a resource method?",
          "[Java EE 8 Cookbook] How do I host a method at a specific resource path?",
          "[Java EE 8 Cookbook] How do I set the content return type of a resource?",
          "[Java EE 8 Cookbook] How do I set the content return type of a resource?",
          "[Java EE 8 Cookbook] How do I set the content type a resource consumes?",
          "[Java EE 8 Cookbook] How do I set the content type a resource consumes?",
          "[Java EE 8 Cookbook] How do I map HTTP methods to my resource methods?",
          "[Java EE 8 Cookbook] How do I set path parameters/variables in my resource URIs?",
          "[Java EE 8 Cookbook] How do I get the value of the path parameter/variable?",
          "@PathParam",
          "[Java EE 8 Cookbook] How do I restrict the pattern of the path parameter?",
          "[Java EE 8 Cookbook] Can I set a default value for path parameters/variables?",
          "@DefaultValue",
          "[Java EE 8 Cookbook] How do I grab query parameters from a request URIs?",
          "[Java EE 8 Cookbook] How do I set default value for query parameters/variables?",
          "[Java EE 8 Cookbook] How do I grab the value of cookie parameters?",
          "@CookieParam",
          "[Java EE 8 Cookbook] How do I grab a value from the headers of a request?",
          "@HeaderParam",
          "[Java EE 8 Cookbook] How do I get the values of a POSTed form? (1)",
          "@FormParam",
          "[Java EE 8 Cookbook] How do I get the values of a POSTed form? (2)",
          "[Java EE 8 Cookbook] How do I get the values of a POSTed form? (3)",
          "[Java EE 8 Cookbook] How do I integrate JPA into my JAX-RS application?",
          "[Java EE 8 Cookbook] How do I integrate JPA into my JAX-RS application?",
          "[Java EE 8 Cookbook] How do I integrate JPA into my JAX-RS application?",
          "[Java EE 8 Cookbook] How do I integrate dependency injection in my web service?",
          "[Java EE 8 Cookbook] How do I integrate dependency injection in my web service?",
          "[Java EE 8 Cookbook] How do I integrate dependency injection in my web service?",
          "[Java EE 8 Cookbook] How do I return a list of entities to the client?",
          "[Java EE 8 Cookbook] How do I return a list of entities to the client?",
          "[Java EE 8 Cookbook] How do I return a list of entities to the client?",
          "[Java EE 8 Cookbook] How do I validate JPA entities POSTed to my resources?",
          "[Java EE 8 Cookbook] How do I validate JPA entities POSTed to my resources?",
          "[Java EE 8 Cookbook] How do I customize validation error messages?",
          "[Java EE 8 Cookbook] How do I customize validation error messages?",
          "[Java EE 8 Cookbook] How do I integrate logging into my JAX-RS resources?",
          "[Java EE 8 Cookbook] How do I set cookies for the client?",
          "[Java EE 8 Cookbook] How do I customize the response I send to the client?",
          "[JAVA EE 8 COOKBOOK] How do I accept and consume file objects in my resources?",
          "[JAVA EE 8 COOKBOOK] How do I accept and consume file objects in my resources?",
          "[JAVA EE 8 COOKBOOK] How do I accept and consume file objects in my resources?",
          "[JAVA EE 8 COOKBOOK] How do I return file objects from my resources?",
          "[JAVA EE 8 COOKBOOK] How do I return file objects from my resources?",
          "[JAVA EE 8 COOKBOOK] What are JAX-RS filters?",
          "[JAVA EE 8 COOKBOOK] How do I ask the client to cache a resource?",
          "[JAVA EE 8 COOKBOOK] How do I ask the client to cache a resource?",
          "[JAVA EE 8 COOKBOOK] How do I change an HTTP method in client requests?",
          "[JAVA EE 8 COOKBOOK] How do I change an HTTP method in client requests?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I protect my resources with Json Web Token (JWT)?",
          "[JAVA EE 8 COOKBOOK] How do I implement async processing in my Jax-RS Resources?",
          "[JAVA EE 8 COOKBOOK] How do I impelement async processing in my Jax-RS Resources",
          "[JAVA EE 8 COOKBOOK] How do I get hold of JAX-RS context objects?",
          "What is Jakarta EE?"
        ],
        "Setup": [
          "Installing Java 8",
          "Installing NetBeans",
          "Use of other IDEs",
          "Insomnia REST client",
          "Maven",
          "GIT",
          "Code sample"
        ],
        "Application Servers and Java EE App Deployments": [
          "What is an Application Server?",
          "What is an Application Server?",
          "What is Payara Server?",
          "What is Payara Micro?",
          "How do I deploy a Java EE app with Payara Micro?",
          "How do I deploy a Java EE app with Payara Micro?"
        ]
      },
      "requirements": [
        "Basic knowledge of Java programming language. This course WON'T cover that",
        "Basic knowledge of how to use Apache Maven",
        "Basic knowlege of how to use GIT SCM",
        "Computer with internet connection",
        "Java 8 installed",
        "Apache Maven installed",
        "GIT SCM installed",
        "Be ready to master rest web services development with Java EE"
      ],
      "description": "JAX-RS is the industry standard in developing REST web services on the Java EE platform. This course will help you develop your own REST web services using Java EE in a solution based approach.\nThis course is a cookbook style, solutions based approach to developing REST web services with Java EE that will help you be able to\nuse JAX-RS to create modern RESTful web services on Java EE 8\n\nprotect your REST resources with JSON Web Token (JWT)\n\nintegrate dependency injection (CDI) into your RESTful web services\n\nuse JAX-RS filters\n\nhost Java methods as REST resources\n\nintegrate Java Persistence API (JPA) into your REST resources\n\nimplement caching in your REST resources\n\nhost Java classes as REST resources\n\ncreate asynchronous REST services\n\nconsume file objects in your REST services\n\nreturn file objects from your REST resources\nsend cookies to clients from your REST resources and much more\nThis course will teach you how to use the standards based Java EE API to solve common challenges.\nSo sign up now and be on your way to developing modern REST web services with Java API for RESTful web services on the Java EE platform.\nSign up now and I'll see you in the course.",
      "target_audience": [
        "Anyone who wants to master rest web service development with Java EE 8",
        "Anyone who wants quick answers to web service questions on Java EE 8",
        "Anyone who desires to learn how to use JAX-RS API on Java EE 8",
        "Anyone who wants to develop Java web services in a standardized way",
        "Anyone who wants to take their Java web services to the next level"
      ]
    },
    {
      "title": "Java Script for Beginners",
      "url": "https://www.udemy.com/course/javascript-for-absolute-beginners2/",
      "bio": "This course will teach students the fundamentals of JavaScript (JS). Learn to write powerful web programs using JS.",
      "objectives": [
        "You will be ble to use Advanced APIs to write web applications.",
        "You will learn the fundamentals of JS.",
        "You will be able to write Object-Oriented JS programs.",
        "You will be able to write web programs using JavaScript (JS)."
      ],
      "course_content": {
        "Introduction + Variables + Assignments + Arithmetic Operators": [
          "Introduction",
          "Control Structures: For Loops, While Loops, For Loops",
          "Do..While Loop",
          "Switch-Case Statements",
          "Logical Operators"
        ],
        "Functions": [
          "Functions"
        ],
        "Arrays and Mixed Arrays": [
          "Arrays"
        ],
        "Object-Oriented Programming": [
          "Object-Oriented Programming",
          "Objects - Classes, Objects, Constructors"
        ],
        "Real-Life Example with Google APIs": [
          "Google Maps API call with JavaScript Example"
        ],
        "XMLHttpRequest()": [
          "XMLHttpRequest() Object"
        ]
      },
      "requirements": [
        "No prior programming experience is necessary.",
        "You will need to have access to a computer with a web browser.",
        "You will learn most with this course if you have a great attitude towards learning web programming."
      ],
      "description": "This course will teach you the fundamentals of Web Programming using the most powerful web programming language in use today: JavaScript (JS). This course will help you gain the confidence and the technical know-how of being able to write JavaScript programs. In addition, you will become a proficient JS programmer in no time.\nThis course will cover topics in real-time by providing walking you through code line-by-line.\n\nIn this course we will cover the following topic:\nIntro. to JS Programming\nVariables\nArrays\nConstants\nArithmetic Operators\nValue Assignments\nControl Structures\nfor loops,\nwhile loops\ndo…while loops,\nswitch & break statements.\nFunctions\nObject-Oriented Programming with JS\nClasses & Objects\nClient/Server Communication with JS\nXMLHttpRequest",
      "target_audience": [
        "Students new to JavaScript/Web Programming should take this course. And new/expereinced students moving from a different language to JavaScript should take this course."
      ]
    },
    {
      "title": "Full Stack Isomorphic JavaScript with Vue.js & Node.js",
      "url": "https://www.udemy.com/course/full-stack-isomorphic-javascript-with-vuejs-nodejs/",
      "bio": "Learn to build isomorphic JavaScript web applications using MEVN Stack - MongoDB, Express, Vue.js, and Node.js",
      "objectives": [
        "Build, test, and deploy web applications with Node .js, Express, Vue .js, and MongoDB",
        "Create Single Page Applications using the Vue .JS command-line interface tool",
        "Learn to manage application state with Vuex Library",
        "Implement application routing with Vue .js Router",
        "Create a songs playlist application using MEVN stack",
        "Build a secure RESTful API with Express, including user authentication",
        "Learn about the HTTP client Axios to consume REST APIs to get data",
        "Deploy production-ready applications to the cloud"
      ],
      "course_content": {
        "Isomorphic JavaScript with MEVN Stack": [
          "The Course Overview",
          "What You Should Know First",
          "Single-Page Applications and Vue.js",
          "NoSQL and MongoDB",
          "Node.js and Express.js",
          "Installing Node.js and Node Package Manager (NPM)",
          "Installing Vue.js Command Line Interface (CLI) Project Generator",
          "Installing MongoDB",
          "Installing Integrated Development Environment (IDE)",
          "Create Vue.js Application",
          "Project Directory and Structure",
          "Vue.js Components",
          "Vue.js Router",
          "Vue.js Navigation Guards",
          "Vuex State Management",
          "Create Server with Express.js",
          "Learn to Use Express.js Router",
          "Use Express.js Middleware and CORS Configuration",
          "RESTful Endpoints with HTTP Controllers",
          "Check HTTP Status Codes",
          "Connect to MongoDB and Use MongoDB Compass GUI",
          "Working with Entity Models",
          "Create, Read, Update, and Delete (CRUD)",
          "Encrypt Passwords with Node.js and BCrypt",
          "Validate Passwords",
          "JSON Web Tokens",
          "Vue.js and JSON Web Tokens",
          "User Authentication",
          "Validating a User’s Session",
          "Managing User's Session",
          "Connecting Vue.js to Backend Server",
          "Getting Ready for Production",
          "Amazon Web Services and Amazon Elastic Compute Cloud",
          "Deploying App to the Web",
          "Final Thoughts",
          "Test Your Knowledge"
        ],
        "Full Stack Web Development with Vue.js and Node.js": [
          "The Course Overview",
          "First Step Towards Vue",
          "Setting Up Vue Using Node.js",
          "Basics, Directives, and Reactivity",
          "Vue DevTools",
          "Installing Vue-CLI and Creating a New Project",
          "Tour of Project Files and What Are Single-File Components?",
          "Using Axios to Consume a Third-Party API",
          "Creating Custom Components and Importing Them",
          "Installing Vuex and vue-router and Adding Them to the Vue Instance",
          "Vue Core Concepts and How to Implement – Part 1",
          "Vue Core Concepts and How to Implement – Part 2",
          "How to Use vue-router and Router Links",
          "Application Structure – Part 1",
          "Application Structure – Part 2",
          "Putting Together the Sample API Code and Adding to the Frontend Application",
          "How to Set Up the Database",
          "Demonstration of API in REST Client",
          "Creating an Account and Then Authenticating /Getting a Token – Part 1",
          "Creating an Account and Then Authenticating /Getting a Token – Part 2",
          "Setup Login Page, Functionality and Adding the User – Part 1",
          "Setup Login Page, Functionality and Adding the User – Part 1",
          "Using the API to Create, Read, Update, and Delete Items – Part 1",
          "Using the API to Create, Read, Update, and Delete Items – Part 2",
          "Using the API to Create, Read, Update, and Delete Items – Part 3",
          "Using the API to Create, Read, Update, and Delete Items – Part 4",
          "Using the Vuex Store as a Single Point of Contact to the API",
          "Testing",
          "Security",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Familiarity with JavaScript programming is assumed."
      ],
      "description": "Learn to build full-stack isomorphic JavaScript web applications with Vue and Node.js along with the MEVN stack. The MEVN stack is a collection of great tools—MongoDB, Express.js, Vue.js, and Node.js—that provide a strong base for a developer to build easily maintainable web applications. With each of them a JavaScript or JavaScript-based technology, having a shared programming language means it takes less time to develop applications.\nThis course enables you to build, test, and deploy full stack isomorphic applications with Node.js, Express, Vue.js, and MongoDB. You will start by setting up the development environment and grasping some of the essential concepts for building applications. You will then build a single page application using MEVN stack. You will also develop a songs playlist application wherein you will create a new playlist and search through YouTube videos. Next, you will learn to consume data from third-party APIs within your application as well as perform CRUD operations against a locally hosted API using the HTTP client Axios. Finally, you will learn to deploy the applications on the cloud.\nBy the end of this course, you will be able to build your own web and isomorphic applications using MEVN stack.\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nDavid Acosta is a professional Software Developer with a Bachelor of Science degree in Information Technology Management and more than three years' experience in web development. As a developer for CollaborateMD Inc., David develops web-based medical billing and practice management software services for independent practices and hospitals. His work mainly focuses on JavaScript, TypeScript, and Java-based technologies such as Angular 2, Spring, Swing, and JQuery. He also has extensive knowledge of many other libraries and frameworks such as Laravel, React.JS, Vue.js, Ruby on Rails, Bootstrap, and more.\nHaider Rehman works as a DevOps and a Software Engineer for a well-known software company and has over 8 years of experience as a developer. He has a Master's degree in Telecom Systems and a Bachelor's degree in Telecommunication; after obtaining these, he switched to programming in IT and telecommunications to get a feel for the industry. Haider enjoys hanging out with friends, music, and coding.",
      "target_audience": [
        "This course is for web developers who want to create amazing real-world applications using MEVN Stack."
      ]
    },
    {
      "title": "Build a WordPress Powered Amazon Affiliate Site on NGINX",
      "url": "https://www.udemy.com/course/build-a-wordpress-powered-amazon-affiliate-site-on-nginx/",
      "bio": "Domains | WordPress | Amazon Affiliate | WooCommerce | Elementor | NGINX | VPS | LEMP Stack | SSL | E-Commerce",
      "objectives": [
        "An understanding of the foundational aspects of the Amazon Associates Affiliate Program.",
        "Knowledge of how to sign up for the Amazon Associates Affiliate Program and generate affiliate links.",
        "Understanding of domain registration and how to choose a domain name.",
        "Ability to install and configure WordPress on a shared or cloud hosting server.",
        "Knowledge of how to set up a WooCommerce store and customize it using Elementor.",
        "Understanding of how to add Amazon Affiliate products to the store and optimize it for search engines.",
        "Ability to deploy and configure a virtual server on Digital Ocean.",
        "Knowledge of how to install NGINX and configure it with PHP, MySQL, and PhpMyAdmin.",
        "Understanding of nameservers and DNS zone files.",
        "Ability to troubleshoot DNS issues and ensure website availability to users.",
        "Knowledge of SSL and the ability to generate SSL certificates.",
        "Understanding of how to install and configure Let's Encrypt SSL on NGINX.",
        "Ability to troubleshoot SSL issues and ensure website security.",
        "Knowledge of how to install and configure WordPress on NGINX.",
        "Ability to optimize WordPress for performance and ensure website efficiency."
      ],
      "course_content": {
        "Amazon Affiliate Course Introduction": [
          "Course Intro",
          "The Amazon Affiliate Program - Introduction"
        ],
        "Domain Registration and Hosting": [
          "Tips on Domain Registration",
          "Domain Registration & Hosting"
        ],
        "Installing and Configuring WordPress": [
          "Installing WordPress CMS",
          "The WordPress Interface",
          "Installing Free SSL",
          "Advantages of WordPress",
          "Installing Required Themes & Plugins"
        ],
        "Building an Amazon Affiliate Store using WooCommerce and Elementor": [
          "Creating an Amazon Affiliate Account",
          "Importing Products from Amazon",
          "Customizing the Layout with Elementor",
          "Creating Headings & Descriptions",
          "Adding & Customizing Buttons",
          "Adding Category Widgets",
          "Adding Category Images",
          "Populating the Recent & Best Seller Categories",
          "Adding Icon Boxes",
          "Installing & Configuring Rank Math for SEO",
          "Rank Match SEO Configuration Continued",
          "Adding a Blog Page",
          "Blog, About Page, & Contact Us",
          "Customizing Menus",
          "Creating a Logo & Customized Header",
          "Adding & Styling a Footer",
          "Customizing Product Pages & Final Changes",
          "Customizing the Sidebar Menu",
          "Promote your Amazon Affiliate Store & Products"
        ],
        "Introduction to NGINX": [
          "Apache vs. NGINX",
          "History of Apache",
          "Advantages of NGINX"
        ],
        "Virtual Server Basics": [
          "Deploying a Droplet on Digital Ocean",
          "Attaching a Floating IP",
          "Connecting to your Virtual Server"
        ],
        "Install and Configure LEMP Stack": [
          "Install & Configure NGINX",
          "Install & Configure MySQL on NGINX",
          "Install & Configure PHP on NGINX",
          "Creating a PHP Test File"
        ],
        "Domain Names & SSL": [
          "Modifying Domain Name Servers",
          "Configuring DNS Zone Files",
          "Updating the NGINX Block File Configuration File",
          "Installing Let's Encrypt SSL on NGINX"
        ],
        "PhpMyAdmin on NGINX": [
          "Installing PhpMyAdmin",
          "Securing PhpMyAdmin with Symbolic Links",
          "Securing PhpMyAdmin with Authentication Gateways",
          "Enabling Authentication Gateways on NGINX"
        ],
        "WordPress on NGINX": [
          "Introduction to WordPress",
          "Creating a Database for WordPress",
          "Installing PHP Extensions for WordPress",
          "NGINX Block File Configuration for WordPress",
          "Downloading WordPress",
          "Wordpress Configuration",
          "WordPress Setup"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course is designed to provide students with a comprehensive understanding of the Amazon Associates Affiliate Program and the technical skills required to build an Amazon Affiliate store using WooCommerce and Elementor. The course covers the foundational aspects of the Amazon Associates Affiliate Program, including how to sign up, how to choose the right products to promote, and how to generate affiliate links.\n\nTo begin building an Amazon Affiliate store, students learn the fundamentals of domain registration and the process of installing and configuring WordPress. This section of the course covers how to choose a domain name, how to register it, and how to install WordPress on a shared-hosting server. Students will also learn how to configure the basic settings of WordPress to optimize their website's performance.\n\nWith WordPress installed and configured, students move on to building an Amazon Affiliate store using WooCommerce and Elementor. This section of the course covers how to set up a WooCommerce store, how to customize the store using Elementor, and how to add Amazon Affiliate products to the store. Students will learn how to optimize their store for search engines and how to create an engaging shopping experience for customers.\n\nIn addition to building an Amazon Affiliate store, this course also covers the technical aspects of web hosting, including the foundations of NGINX and how to deploy and configure a virtual server on Digital Ocean. Students will learn how to set up a virtual server, how to install NGINX, and how to configure NGINX with PHP, MySQL, and PhpMyAdmin.\n\nTo manage the technical aspects of cloud hosting, students also learn about nameservers and DNS zone files. This section of the course covers how to set up nameservers, how to configure DNS zone files, and how to troubleshoot DNS issues. Students learn how to ensure that their website is always available to users by properly configuring their DNS settings.\n\nTo secure their website, we explore Let's Encrypt SSL on NGINX. This section of the course covers the basics of SSL, how to generate SSL certificates, and how to install and configure Let's Encrypt SSL on NGINX. Students will learn how to ensure that their website is secure and how to troubleshoot SSL issues.\n\nFinally, the course covers the process of installing and configuring WordPress on NGINX. This section of the course covers how to install WordPress on NGINX, how to configure WordPress to work with NGINX, and how to optimize WordPress for performance. Students will learn how to ensure that their WordPress website is running smoothly and efficiently.\n\nBy the end of the course, students will have a solid understanding of the Amazon Associates Affiliate Program, domain registration, WordPress installation and configuration, NGINX, virtual server deployment and configuration, DNS configuration, SSL installation and configuration, and WordPress optimization for NGINX.",
      "target_audience": [
        "Affiliate marketers who want to build an Amazon Affiliate store to generate revenue.",
        "Web developers who want to learn about NGINX and how to deploy and configure a virtual server on Digital Ocean.",
        "Small business owners who want to create an online store to sell products and promote Amazon Affiliate products.",
        "Individuals who want to learn about web hosting and domain registration.",
        "Bloggers who want to optimize their WordPress website for performance and security."
      ]
    },
    {
      "title": "Convert HTML Websites into PHP Websites in 45 Minutes",
      "url": "https://www.udemy.com/course/convert-static-websites-from-html-to-php-for-web-designers/",
      "bio": "Convert Your Static HTML Websites into Dynamic PHP Websites Using Quick Practical Techniques Easy Way!",
      "objectives": [
        "Install and Setup XAMPP (web server)",
        "Convert Single Page .html Website into .php",
        "Convert Multi Page .html Website into .php",
        "Setup Automatically Changeable Year with PHP",
        "Display IP Address of User",
        "Create Standard PHP Template",
        "Create Reusable PHP Files",
        "Dynamically Highlight Menu on Active Page",
        "Practically Use Basic PHP"
      ],
      "course_content": {
        "HTML to PHP: Preparation and Setup": [
          "Introduction, Preview and Benefit of Course",
          "Why Should You Use PHP instead of HTML",
          "PHP Local Web Server Setup and Explanation"
        ],
        "HTML to PHP: Single Page Static Website": [
          "Setup One Page Website",
          "Change Page from HTML to PHP",
          "Automatic Changeable Year",
          "PHP Page Delivery to the Browser",
          "Display IP Address of Visitor"
        ],
        "HTML to PHP: Multiple Pages Static Website": [
          "Setup Multi Page Website",
          "Introduction",
          "PHP Template and Include Files",
          "PHP Files Preparation with Contents Pages",
          "Links Correction",
          "Dynamically Highlight Navigation",
          "Suggestions and Comments"
        ],
        "HTML to PHP: Contact Form and Email with PHP": [
          "Send Email with Contact Form using Single Page Technique",
          "Send Email with Contact Form using Dedicated Contact Page",
          "Practical Improvement in Email Script",
          "Final Action"
        ],
        "HTML to PHP: Congratulation!": [
          "Download Source Files",
          "How to Get Your Certificate",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You need to have a local web server (or a web hosting with PHP support)",
        "You will also learn to install xampp in my course"
      ],
      "description": "Do you know how to design websites using HTML and CSS, but want to take your skills to the next level? In this high-speed crash course, you'll transform static HTML websites into dynamic PHP sites in just 40 minutes. If you're looking to streamline your web development process and make future updates to multiple pages with ease, this course is perfect for you.\nWhy Choose This Course?\nThis course is designed for web designers who are familiar with HTML and CSS and want to master PHP for website conversion. By following along with easy, step-by-step guidance, you’ll gain the ability to convert both single-page and multi-page websites into dynamic PHP websites. You’ll learn how to easily update headers, footers, navigation menus, and content across multiple pages using PHP.\nHere’s what makes this crash course stand out:\nQuick and Efficient Learning: You’ll learn practical PHP conversion techniques in just 40 minutes—no lengthy theory, just results-driven, hands-on learning.\nMaster the Basics of PHP: Learn essential PHP concepts, such as PHP includes, to reduce your workload when making global changes across your website.\nReal-World Applications: You’ll see the real-world benefits of using PHP to simplify updates across your website, whether it’s one page or many pages.\nConfidence to Apply PHP: I’ll guide you through every step so you can confidently apply PHP to your own websites, no fear of complex coding required!\nGreat for Freelancers & Small Projects: If you’re a freelancer or work on small websites, this course teaches you how to save time and make future updates easier—ideal for improving your client projects.\nNo Need for Advanced Knowledge: Unlike other PHP courses that dive into complicated topics, this course focuses only on what you need to convert static HTML sites to dynamic PHP quickly and efficiently.\nWhat You’ll Learn:\nConverting Single-Page Websites to PHP: Learn how to convert a simple HTML page into a dynamic PHP site that can be easily updated.\nConverting Multi-Page Websites to PHP: Understand how to apply PHP across multiple pages, such as updating the header, footer, and navigation menu all at once.\nPHP Techniques: Gain essential knowledge in PHP includes, file management, and working with global elements.\nPractical Demonstrations: Watch as I show you exactly how to convert websites step-by-step, and learn by doing the same yourself.\nBuilding Confidence with PHP: After completing this course, you’ll feel comfortable using PHP to build and maintain dynamic websites.\nWhat Makes This Course Unique:\nFast Learning with Immediate Results: Unlike traditional PHP courses, this crash course focuses on practical applications, teaching you how to convert HTML websites to PHP in a matter of minutes, not hours or days.\nNo Advanced Knowledge Needed: You don’t need to be a PHP expert to succeed in this course. The course covers essential PHP techniques that make website conversion a breeze, focusing on what matters most.\nFreelancer-Friendly: By mastering PHP for website conversion, you’ll be able to take on more projects and deliver quicker results to clients—especially when working with small to medium-sized websites.\nBonus Tips:\nEssential PHP Techniques: Learn to use PHP includes to update the header, footer, and navigation across multiple pages, saving you tons of time.\nQuick Troubleshooting: Understand common mistakes and learn how to solve them quickly.\nWhat Students Are Saying:\n\"I am a 11 years old kid learning to code and this course is great. I came to know how to convert HTML web pages to PHP. I learnt a lot.\" — Swarnodip Sinha\n\"Zeeshan presented exactly the information that I required in the most efficient, well communicated manner. One of the best and most concise courses that I have taken. I highly recommend it to all who want to quickly grasp the adoption of php in an html environment.\" — Ellen McDonough\n\"At first, it was difficult, as South African, to follow the instructor's English pronunciation, but I've got used to it with the second lesson. This course included all the information I was looking for to get the know-how, without hours and hours of videos with multiple examples of the same thing to struggle through.\" — Naomi Bruwer\nWho Should Enroll:\nWeb Designers with HTML & CSS Knowledge: If you're already skilled in HTML and CSS, but want to learn how to work with PHP to make your websites dynamic.\nFreelancers & Small Business Owners: Perfect for freelancers looking to expand their services, or anyone managing small websites that need frequent updates.\nAnyone Interested in Web Development: If you’re looking to get started with PHP or simply want to make your website management more efficient, this course is for you.\nReady to Learn How to Convert Static HTML to Dynamic PHP Websites in Just 40 Minutes?\nEnroll now and start applying dynamic PHP techniques to your own websites today. After completing this course, you’ll be able to transform static websites into dynamic sites confidently, efficiently, and with ease.\nJoin today and take the first step toward becoming a PHP pro!",
      "target_audience": [
        "HTML/CSS website designers who want to get rid of doing manual changes in repeated areas of whole website",
        "Web designers who want to speed up updating process of their website",
        "Front-end developers who want to take advantage of PHP",
        "PHP Beginners who want to learn some techniques of practical PHP",
        "This course is NOT for experienced PHP developers"
      ]
    },
    {
      "title": "Get Started With Google Maps Javascript API v3. New UI!",
      "url": "https://www.udemy.com/course/get-started-with-google-maps-javascript-api-v3/",
      "bio": "Learn the basics of the Google Maps Javascript API!",
      "objectives": [
        "Learn, how to embed a Google map to a website using Google Maps API.",
        "Customize basic elements on the map, such as styles, markers, shapes and so on.",
        "Get familiar with the new UI. (v3.22)"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript programming and HTML codes.",
        "Google (GMail) account.",
        "Should be familiar with the Google Maps as a user.",
        "Internet connection.",
        "Simple text editor (eg. Notepad++)"
      ],
      "description": "Learn how to embed a Google Map to your homepage and how to customize it with step-by-step instructions and examples.\nCreate Google Maps to your homepage that fits to its design and content. A customized map is always more engaging.\nIf you use personalized map, it can contain more relevant information. In this course you can learn how to embed a map and how to customize it.\nI will show you, how easy is to create a map.\nThis course takes a step-by-step approach to prepare a useful, interactive map, which hopefully gives more benefit to your homepage.\nThe course includes, how to:\nObtain an API key,\nSet up your very first map,\nPut markers on it,\nSet its appearance with setting styles,\nUse the controls with the new UI (v3.22)\nHandling events,\nDisplaying info-window,\nDraw lines and shapes,\netc.\nThe course also contains downloadable working samples.\nJoin my course today and get the knowledge of Google Maps API!",
      "target_audience": [
        "Web developers",
        "Web designers",
        "Beginners",
        "Students"
      ]
    },
    {
      "title": "React, Next.js and Laravel: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/react-laravel-influencer/",
      "bio": "React with Typescript, Next.js, Redux, Material UI, Laravel 8, Laravel Sanctum, Docker, Redis, Stripe",
      "objectives": [
        "Use Docker",
        "Authenticate using Laravel Sanctum",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "React Hooks with Typescript",
        "React Material UI",
        "NextJS with Typescript",
        "Use Redux"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of Laravel",
        "Good understanding of React"
      ],
      "description": "Learn how to create an Ambassador App using React, Next.js and Laravel. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Laravel API.\nIn Laravel you will learn:\nHow to create API's with Laravel\nAuthenticate using Laravel Sanctum\nLaravel Json Resources\nInstall and use Docker\nUse Redis\nUse Stripe\nLaravel Events & Listeners\nSending Emails\nIn React you will learn:\nCreate a React project with Typescript\nCreate a Next.js project with Typescript\nReact Material UI\nUse Redux\nUse React Hooks\nCreate public and private routes\nRestrict routes for unauthorized users\nUse Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Serving Static Angular 5 Apps using AWS S3 & Cloudfront",
      "url": "https://www.udemy.com/course/serving-static-angular-5-apps-using-aws-s3-cloudfront/",
      "bio": "A complete hands on course to create, manage and host Angular5/Static website using AWS S3 & Cloudfront under 1 hour",
      "objectives": [
        "Create Sample Angular 5 Application",
        "Understand Static Website Hosting using AWS S3",
        "Understand the concepts of CDN using AWS CloudFront",
        "Understand the concepts of Route53 and manage DNS"
      ],
      "course_content": {},
      "requirements": [
        "AWS Account",
        "Windows/Linux/Mac"
      ],
      "description": "Are you passionate to learn & explore AWS Concepts ?\nAre you that person who gets overwhelmed when you hear about servers & configurations ?\nAre you that developer who writes Apps but doesn't know how to go LIVE with it ?\nAre you that person who wants to go LIVE with a scalable solution and maintain low cost ?\nIf you are one of these persons, then you are in the right place, because I have created this course by keeping the following things in my mind.\n1. Easy to manage\n2. Scales to handle any amount of traffic\n3. Reliable\n4. Cost Effective.\n\n\nIn this course you will learn the following concepts.\n1. Install Angular Framework & Build a sample application.\n2. Learn about AWS S3 & Hosting static websites on S3\n3. Learn about Cloudfront & configure cloudfront to work with s3 buckets\n4. Learn to configure DNS using Godaddy and Route53.\n\n\nBy the end of this course, with in an hour you can host your Angular 5 or any single page application on S3 and serve it via Cloudfront which will be able to scale to any number of users in a simple and cost effective way.\nI really hope that you take this course and learn something new about AWS Concepts. I will see you in the course.",
      "target_audience": [
        "Developers who like to host their Angular/Static applications",
        "Who wants to learn to host applications with out overhead of managing servers",
        "Who wants to learn cost effective ways to host a website which can scale"
      ]
    },
    {
      "title": "WordPress No-Code Mastery: Website Design & Advanced SEO",
      "url": "https://www.udemy.com/course/worrdpress-no-code-mastery-course-with-advance-seo/",
      "bio": "Create and rank professional WordPress websites without coding. Learn SEO optimization, content strategy, link building,",
      "objectives": [
        "Understand the fundamentals of WordPress and how it works",
        "Set up a WordPress website without any coding knowledge",
        "Choose the right domain and hosting for their website",
        "Install and customize themes to create a professional website",
        "Create and manage pages, posts, and media using the WordPress Block Editor",
        "Install and configure essential plugins for security, SEO, and performance",
        "Understand the basics of monetization through eCommerce and ad networks",
        "Learn wordpress seo",
        "Launch a fully functional business website, portfolio, or blog",
        "Optimize website speed and mobile responsiveness",
        "Intregration and addons"
      ],
      "course_content": {},
      "requirements": [
        "No prior coding or web development experience is required",
        "Basic computer literacy and internet browsing skills",
        "Access to a computer or laptop with an internet connection",
        "A willingness to learn and implement practical steps"
      ],
      "description": "WordPress No-Code Mastery Course with Advanced SEO\nWant to create professional WordPress websites without coding and get them ranked on Google’s first page?\nThis WordPress No‑Code Mastery Course with Advanced SEO is your step-by-step guide to building high‑converting, fully optimized websites using Elementor, powerful plugins, and proven SEO strategies — no coding skills required.\nIn this course, you'll learn how to set up a WordPress website, customize themes, use Elementor for drag-and-drop design, and optimize your site with Yoast SEO. Whether you're a beginner, freelancer, or entrepreneur, this course will equip you with the skills to build, optimize, and scale websites effortlessly.\nYou’ll discover how to set up and customize your site from scratch, use Elementor for stunning drag‑and‑drop designs, and implement Yoast SEO to improve search rankings. Whether you’re a beginner, freelancer, or entrepreneur, this course gives you the tools to build, optimize, and scale WordPress websites effortlessly.\n\n\nWhat You’ll Learn\nGoogle Analytics & Ad Reporting – Connect your site to Google Analytics, interpret traffic reports, track user behavior, and measure ROI from SEO and paid campaigns for continuous growth.\nWordpress Ecommerce\nAI Website Creation and Optimzation\nBuild your own professional website using WordPress — without coding.\nDesign your WordPress site exactly how you imagine, using drag‑and‑drop tools like Elementor.\nHost and publish your website in a cost‑effective and secure way.\nCustomize your site for any purpose — whether it’s a blog, portfolio, online course platform, or a full e‑commerce store.\nCreate and design pages, menus, sidebars, and footers to give your site a modern, user‑friendly look.\nFind, install, and customize WordPress themes that are mobile‑friendly and SEO‑ready.\nInstall and configure the best plugins to add functionality and improve performance.\nSet up an online course platform using LearnPress.\nIntegrate WooCommerce to sell products or services directly from your site.\nMaster advanced SEO with Yoast SEO — including keyword optimization, meta tags, sitemaps, and schema markup.\nTrack website traffic and performance using Google Analytics & ad reporting tools.\nOptimize site speed using caching and image compression plugins.\nSecure your site from hackers with proven WordPress security tools.\nIncrease engagement and conversions with email opt‑in forms, social sharing, and interactive feature\nYou’re here to create your own website — a professional, high-converting, and search-optimized site — without writing any code.\n\n\nThis course serves as your comprehensive, beginner-friendly resource for building, customizing, and ranking WordPress websites using Elementor, top plugins, and effective SEO techniques that yield results.\n\n\nWhether you aim to start a blog, set up an online store, develop a portfolio, or kickstart an online course platform, you’ll discover exactly how to:\n\n\nSecurely and affordably set up WordPress and hosting.\n\n\nDesign your website to match your vision using intuitive drag-and-drop tools.\n\n\nCustomize themes, add powerful plugins, and enhance your site’s functionalities.\n\n\nIntegrate WooCommerce for e-commerce or LearnPress for educational platforms.\n\n\nApply Advanced SEO techniques with Yoast SEO for better visibility on Google.\n\n\nMonitor your website’s performance with Google Analytics and Ad Reporting.\n\n\nEnhance speed, security, and user experience to improve conversions.\n\n\nYou’ll engage in step-by-step lessons with practical projects, so by the time you finish, you’ll have a fully operational, SEO-optimized WordPress website and the expertise to create more for clients or your own ventures.\nNo coding required. No confusion. Just complete WordPress expertise + effective SEO results.\nBy the end, you’ll have the confidence and expertise to build, rank, and scale WordPress websites without coding, making you ready for freelance projects, your own business, or high‑demand job roles.\nEnroll today and become a WordPress professional with powerful SEO skills — able to create, optimize, and grow websites that get results.\nThis course covers WordPress no-code website building, Elementor design, and SEO optimization to help you create professional websites with ease. You will learn how to implement Yoast SEO, Google Analytics, and WooCommerce for better search rankings and online business growth. By the end of this course, you will have the expertise to build, optimize, and scale WordPress websites without coding.\nJoin now and become a WordPress expert with SEO skills to build and rank websites effortlessly.",
      "target_audience": [
        "Beginners who want to build a website without coding",
        "Business owners looking to create a professional website for their company",
        "Bloggers who want to start their own blog and manage content easily",
        "Freelancers who want to offer WordPress website-building services",
        "Marketers who want to learn how to build landing pages and optimize websites",
        "Entrepreneurs looking to start an eCommerce store using WordPress",
        "Anyone interested in website creation without technical skills"
      ]
    },
    {
      "title": "Ultra-Fast WordPress Speed With 10Web WordPress Web Hosting",
      "url": "https://www.udemy.com/course/ultra-fast-wordpress-speed/",
      "bio": "Boost WordPress SEO with ultra-fast WordPress speed by using 10Web WordPress web hosting and WordPress SEO plugin.",
      "objectives": [
        "Create an ultra-fast WordPress website",
        "Learn about different kinds of website hosting, which are cheap and which are fast",
        "Learn how to optimize the front-end of any website",
        "Get a 90+ website speed score in minutes",
        "Get s 99 website speed score when using Web10 hosting"
      ],
      "course_content": {},
      "requirements": [
        "There is a small cost for the hosting (just like with any other hosting if you have a website)"
      ],
      "description": "This course will show you these things:\nHow to speed up your website to a 90+ website speed score on any WordPress hosting\nHow to use 10Web hosting to get a 99+ score on your website speed\nHow to set up a new WordPress website on ultra-fast and affordable hosting\nCase studies of SEO traffic rising after boosting the website speed\nIntroductory tutorials for how to create your website from scratch using Elementor (Note: this is only an Elementor introduction, but not a full Elementor course)\nHow to manually optimize any website whether it's WordPress or an HTML website written by hand\nWEBSITE SPEED GIVES: BETTER GOOGLE RANKINGS, HIGHER SALES\nIf your website is faster, Google will rank it higher, and you will get more traffic. Plus, the traffic that does come to your website will engage more and buy more because people engage more with faster websites.\nSUCCESS CASE STUDIES IN THIS COURSE OF GETTING MORE TRAFFIC\nIn the course you'll see the before and after of my own website which had a mediocre site speed score prior to using the 10Web WordPress plugin, and after the 10Web WordPress plugin was installed.\nAfter the WordPress plugin was installed, without any extra work, my website got a 90+ website speed score. Just a couple of weeks later, traffic began spiking up. I walk you through all that with screen sharing in the course so you see how to do the same thing for your website.\nDON'T GET HELD BACK BY YOUR HOSTING PROVIDER\nMany online entrepreneurs just get the cheapest hosting. That's shared hosting, and shared hosting is typically slow because it is shared with other websites on the same server. In this course, I show you how to get managed cloud hosting that's super fast. So for just a few extra dollars, you will set yourself up for success.\nDISCLAIMER:\nIn this course I show a hosting provider called 10Web. Like any hosting plan, it's paid. While you are free to use any hosting you prefer, the 10Web hosting is the one I use. The reason I show it in the course is that it's the one I know how to use and the one that got me great results.\nInvest in your future! Enroll today!",
      "target_audience": [
        "Online entrepreneurs",
        "Freelencers",
        "Agencies"
      ]
    },
    {
      "title": "Fullstack Flask and Python Bootcamp With Real Life Projects",
      "url": "https://www.udemy.com/course/fullstack-flask-and-python-bootcamp-with-real-life-projects/",
      "bio": "Learn How To Build an E-commerce app Using Flask, Python, HTML, CSS, SASS, Bootstrap, And JavaScript",
      "objectives": [
        "Learn how web applications work",
        "Learn how Flask Implements web applications",
        "Understand HTML and how to use it to create mark-ups for web pages",
        "Understand CSS and how to use it to style web pages",
        "Understand Sass and how to use it to write styles programmatically",
        "Understand JavaScript and how to use to add interactions to web applications",
        "Understand Python and how to use to build web applications on to of Flask Framework",
        "Learn how to analyse a customer’s problem and generate the software requirements for the project",
        "Learn how to structure a large-scale project",
        "Learn how to implement the all the functionalities of a complete eCommerce application which include: Product catalogue, Shopping Cart, Order and Checkout, Customer Management"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet connection",
        "Visual Studio Development Environment",
        "Visual Studio Code Development Environment"
      ],
      "description": "This is a no holds barred, action packed, Full Stack Flask Web Development Course. To demonstrate My Confidence About This Course, I have created a CV that contains all the Concepts that I covered, and the Projects I have executed in this course. You can Take This Course and Start Looking for Job Immediately using the CV I have prepared.\nYour prospective employer wants you to come onboard and start building applications for them straight away. That is what I did in this course. To provide the knowledge that will allow you go straight into the industry and start working immediately. With over 160 Lectures that covers Five Crash Courses, and Two Solid Real-World Projects, I did not leave any stone unturned!!\nBasically, the whole course can be grouped into Three Main Themes:\nIntroduction to web Applications\nWhere I introduced how web applications work and how Flask implements web applications\nThe Crash Courses\nWhere I provided short but comprehensive mini courses on HTML, CSS, SASS, JavaScript and Python\nSince, the course is a Full Stack (Front End and Back End) development course, the crash courses on HTML, CSS, SASS and JavaScript provide you with the knowledge to work on the Front End, while the Python Crash Course provides you with the knowledge Back End Language\nThe Real World Projects\nWhere I built Two SOLID Real-World Projects. The type of Projects that you will be working on when you get into the industry.",
      "target_audience": [
        "Beginners who do not have a prior experience with programming",
        "Intermediate and Senior developers looking to start working with Python",
        "Developers looking to gain more knowledge within full stack development"
      ]
    },
    {
      "title": "WordPress Forms Development: Formidable Forms Masterclass",
      "url": "https://www.udemy.com/course/wordpress-forms-development-formidable-forms-masterclass/",
      "bio": "Learn all you need to know to create awesome and interactive WordPress applications",
      "objectives": [
        "How to use Formidable Forms Pro in WordPress",
        "How to build web forms in WordPress",
        "How to Create Views in WordPress",
        "How to integrate with third party systems using Formidable Pro",
        "How to create snippets and integrate them with Formidable Forms Pro",
        "How to create and call API's"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Quick Overview and Installation of Addons": [
          "Overview and Installation of Addons"
        ],
        "Forms": [
          "Forms Overview"
        ],
        "Form Fields": [
          "Text Field",
          "Checkboxes Field",
          "Dropdown Field",
          "Website / URL Field",
          "Phone Field",
          "Hidden Field",
          "reCaptcha Field",
          "Paragraph Field",
          "Radio Button Field",
          "Email Field",
          "Number Field",
          "HTML Field",
          "User ID Field",
          "File Upload Field",
          "Date Field",
          "Scale Field",
          "Slider Field",
          "Dynamic Field",
          "Repeater Field",
          "Password Field",
          "Credit Card Field",
          "Signature Field",
          "Rich Text Field",
          "Time Field",
          "Star Rating Field",
          "Toggle Field",
          "Lookup Field",
          "Section Field",
          "Embed Form Field",
          "Address Field",
          "Field Functionality Quiz",
          "Add each field type to a form and try the functionality."
        ],
        "Form Field Defaults": [
          "Overview of Form Field Defaults",
          "Which form field default allows you to retrieve the Users Display Name"
        ],
        "Form Settings": [
          "Form Settings Overview",
          "Form Settings: General Settings",
          "Form Settings: Form Actions Overview",
          "Form Settings: The Email Notification Form Action",
          "Form Settings: The WordPress Post Creation Action",
          "Form Settings: Register User Action",
          "Form Settings: Paypal Action",
          "Form Settings: MailChimp Action",
          "Form Settings: Twilio Action",
          "Form Settings: Collect a Payment Action",
          "Form Setting - Send API Data Action",
          "Form Settings - ActiveCampaign Action",
          "Form Settings - AWeber Action",
          "Form Settings - Constant Contact Action",
          "Form Settings - GetResponse Action",
          "Form Settings - Highrise Action",
          "Form Settings - MailPoet Action",
          "Actions that cannot be demonstrated",
          "Form Settings Quiz",
          "Use three different actions"
        ],
        "Form Entries": [
          "Entries Screen and Overview"
        ],
        "Views": [
          "Views Overview"
        ],
        "Reports": [
          "Reports Overview"
        ],
        "Styles": [
          "Styles Overview"
        ]
      },
      "requirements": [
        "Basic WordPress Knowledge",
        "Knowledge of PHP is helpful but not necessary",
        "Basic Web Development"
      ],
      "description": "This course is for beginners and experts alike.  It is designed in such a way that you can skip to any part at anytime.  We cover the basics of setting up Formidable Forms, the installing of addons, creation of forms, creation of views, third party integrations, and complete web application development using Formidable Forms.\nSome of the topics we cover are as follows:\nHow to use Formidable Forms Pro in WordPress\nHow to build forms in WordPress\nHow to Create Views in WordPress\nHow to integrate with third party systems using Formidable Pro\nHow to create snippets and integrate them with Formidable Forms Pro\nPutting it altogether to create real world applications\nThis course will also contain real world examples as well as tutorial examples that you can use in your own applications.\nI will continue to add to this course as new things emerge and I have more real world examples to share, for as long as Formidable Forms exists and long afterwards.",
      "target_audience": [
        "Beginner to Advanced WordPress and Web Designers / Developers"
      ]
    },
    {
      "title": "Django Project: djBlogger",
      "url": "https://www.udemy.com/course/django-project-djblogger/",
      "bio": "A Django Framework HTMX Project Build",
      "objectives": [
        "@ Phase 1 - Setup and initiate new Django applications",
        "@ Phase 1 - Create dynamic webpages to include HTML, CSS and HTMX interactions",
        "@ Phase 1 - Implement a testing environment within a Django project",
        "@ Phase 1 - Create unit tests to test vital features of a Django application"
      ],
      "course_content": {},
      "requirements": [
        "No Prior experience needed but would be advantageous",
        "Knowledge of relational database principles would be advantageous",
        "Having a computer would definitely be advantageous"
      ],
      "description": "Developing applications can be a fun and effective way of learning a language and framework. In this course we build a blog application Introducing you to Python Django Framework, Django Templating, the Bootstrap framework, HTMX, CSS, and HTML.\nThis course is primarily designed for anyone looking for a journey learning the Django Framework or developing web applications with Python. This course is a great starting point or a good first step after first learning about any of the technologies that this course features.\nCurrently, this course presents phase 1 of the development process. In phase 1 we initiate the project and get started building and testing the core functionality of the application. In Phase 1 we learn the fundamentals of the Python Django Framework, implement templates with Django, HTML, and CSS and create dynamic content using HTMX. By the end of phase 1, you will have a working, tested application ready for deployment. The intention for this course is to further extend the content and learning experience to eventually include deeper relevant content to further aid your understanding of the development process and techniques, deployment, and other associated technologies.\nI hope you enjoy the course. Don’t forget to visit us on our YouTube Channel, Very Academy, where you can further interact with the community and explore other free supplementary content.",
      "target_audience": [
        "Beginners, Developers, Students, and Enthusiasts new to the Django Framework",
        "Developers, Students, and Enthusiasts looking to refresh their knowledge of the Django ORM"
      ]
    },
    {
      "title": "MERN Stack Real Time Chat App - React , Node , Socket IO",
      "url": "https://www.udemy.com/course/mern-stack-real-time-chat-app-react-node-socket-io/",
      "bio": "Build a Real Time Chat Application With React , Node , Socket IO",
      "objectives": [
        "In this course, we will cover a range of topics, including building full-stack real-world applications from scratch, working with complex MongoDB queries, schem",
        "We will cover how to build a one-to-one conversation feature and real-time messaging with socket rooms. You will learn how to get the user's online status and a",
        "We will even cover how to implement a typing animation on the receiver side when the sender starts typing a message. All messages and chats data will be stored",
        "We will also cover how to push your code to GitHub and host your application on Heroku. Throughout the course, we will provide 24/7 QA support to help you along",
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a real-time chat application with Soc"
      ],
      "course_content": {
        "Introduction": [
          "What we are developing ?"
        ],
        "Front End Setup": [
          "React App Setup / Github Link",
          "Tailwind CSS Setup",
          "Folder Structure"
        ],
        "Register and Login UI": [
          "Registration Screen",
          "Login Screen"
        ],
        "Backend Setup": [
          "Node JS Setup",
          "Node Mongo Connection"
        ],
        "Register and Login Backend": [
          "User Model and API's",
          "Login , Register API's integration"
        ],
        "Authorization": [
          "Authorization Part - 1",
          "Authorization Part - 2"
        ],
        "Redux Setup": [
          "Redux Setup",
          "Showing Loaders using States"
        ],
        "Home Screen": [
          "Layout",
          "Users Search",
          "Users List"
        ],
        "Chats": [
          "Chat API's",
          "Create Chat",
          "Chat Area",
          "Chat Input"
        ],
        "Messages": [
          "Send Message",
          "Get Messges",
          "Last Message in Selected Chat"
        ]
      },
      "requirements": [
        "Javascript Basic"
      ],
      "description": "Hello and welcome to the course on building a real-time chat application using the MERN stack!\n\n\nIn this course, we will cover a range of topics, including building full-stack real-world applications from scratch, working with complex MongoDB queries, schemas, and models, and working with Socket IO. We will provide a detailed explanation of Socket IO and how it works.\n\n\nWe will cover how to build a one-to-one conversation feature and real-time messaging with socket rooms. You will learn how to get the user's online status and activity, and how to get real-time notifications for messages. We will also cover how to implement read receipts and clear unread messages after reading.\n\n\nWe will even cover how to implement a typing animation on the receiver side when the sender starts typing a message. All messages and chats data will be stored in MongoDB.\n\n\nWe will also cover how to push your code to GitHub and host your application on Heroku. Throughout the course, we will provide 24/7 QA support to help you along the way.\n\n\nThis course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a real-time chat application with Socket IO and MongoDB. By the end of this course, you will have the skills and knowledge needed to create a fully functional real-time chat application with typing animation, read receipts, and real-time notifications.\nMERN stands for MongoDB, Express, React, and Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is the famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a real-time chat application with Socket IO and MongoDB. By the end of this course, you will have the skills and knowledge needed to create a fully functional real-time chat application with typing animation, read receipts, and real-time notifications."
      ]
    },
    {
      "title": "How to Utilize Everything that cPanel has to Offer (2018)",
      "url": "https://www.udemy.com/course/utilize-cpanel-to-maximize-your-websites-potential/",
      "bio": "Manage your website with this comprehensive cPanel tutorial!",
      "objectives": [
        "Be able to maximize their website's potential by better utilizing cPanel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to cPanel",
          "How to Use the Video Tutorials Feature",
          "How to Create and Insert Data into My SQL Database",
          "How to use AWstats and Apply it to Your Business",
          "What is Softaculous and How to Use it",
          "How to Set Up an Error and Redirect Page",
          "How to Use File Manager Effectively",
          "Email Authentication",
          "How to Back up and Restore Your Websites"
        ]
      },
      "requirements": [
        "You should be able to use your PC at an intermediate level and have access to the internet."
      ],
      "description": "The majority of your websites are controlled via a web hosting panel called cPanel. Perhaps you use parts of it or maybe you don’t.\nThe point is that this panel can help your operationsand protect your website more efficiently, but oftentimes it goes unnoticed. It becomes underutilized, or not even used.\nThis video series will show you a more in-depth view of the features that cPanel provides and how you can take your website to the next level, as well as protect your website business.\nYou will learn:\nIntroduction to cPanel\nHow to use the Video Tutorials feature\nHow to create MySQL database & how to insert data into the MySQL database\nHow to use Awstats and apply it to your business\nWhat Softaculous is and how to use it\nHow to set up an error page and a redirect\nHow to use File Manager effectively\nEmail Authentication\nHow to back up your websites and how to restore them\nAnd much more!",
      "target_audience": [
        "Anyone who wants to learn how to utilize everything cPanel has to offer"
      ]
    },
    {
      "title": "AWS CodePipeline: DevOps CI/CD Masterclass",
      "url": "https://www.udemy.com/course/aws-codepipeline-devops/",
      "bio": "Build a complete DevOps CI/CD pipeline with AWS CodePipeline by deploying several web applications using AWS CodeStar",
      "objectives": [
        "Build complete DevOps Pipeline with AWS CodePipeline",
        "Master AWS Codestar and learn to use Powershell with AWS",
        "Deploy PHP, JAVA, and Python Web Applications using AWS Cloudformation and Elastic Beanstalk",
        "Learn DevOps fundamentals, principles, and best practices",
        "Be able to work with Ecplise IDE (Integrated Development Environment)",
        "Create branches within IDE and commit changes",
        "Learn AWS CLI and commands using command prompt",
        "Learn AWS Code Commit, AWS Codedeploy, and work with repositories"
      ],
      "course_content": {},
      "requirements": [
        "AWS account is required - You would need a credit card to use the FREE Tier account",
        "Have some knowledge of DevOps",
        "Basic knowledge of AWS services is desireable",
        "Knowledge of Software Development Life Cycle (SDLC) is desireable"
      ],
      "description": "Course Updated. In the world of DevOps automation and Auto DevOps, Big Data Analytics, and Enterprise Cloud Applications, developing and managing enterprise grade applications has become a challenge\nAWS code pipeline along with CI/CD forms a robust solution and serves as a powerful combination, and provides a seamless solution to implementing a DevOps lifecycle.\nDo if you or your company are facing challenges with enterprise app deployment or would like to learn how to automate software delivery using DevOps best practices with AWS CodeStar, AWS Codepipeline, AWS Codecommit, AWS CodeBuild, AWS Codedeploy, and AWS Beanstalk? Look no further - AWS CodePipeline: DevOps CI/CD Masterclass  course will help you gain solid understanding of all these concepts along with hand-on application.\nCourse Description\nWelcome to AWS CodePipeline: DevOps CI/CD Masterclass  course - A specialized course\nIt is not only a comprehensive hands-on course with detailed concepts and their application, you are will not find a course similar to this. The flipped classroom model with hand-on learning will help you experience direct  into the course as your begin your learning journey.\nIn this course, you'll learn and practice:\nCreate billing alerts\nAWS automation, developer tools, and AWS SDK toolkit\nBe able to deploy PHP, JAVA, WP Blog, and other Web applications using Eclipse IDE and AWS Cloud9\nCreate AWS CloudFormation template, and work with EBS, and CLI\nGain solid understanding of DevOps concepts relating to CI/CD pipeline\nKnow AWS CodeStar, AWS CodeCommit, AWS CodeBuild AWS CodeDeploy, AWS CodePipeline, repositories, and much more\nYou will also get valuable resources and several quiz questions with this course.\nSo, if you would like to:\ngain solid understanding of Amazon AWS Codepipeline complete DevOps CI/CD pipeline, this course is for you\ngain marketable skills as an IT expert and professional, this course is for you\nThis course is not designed for advanced level students\nThis AWS CodePipeline: DevOps CI/CD Masterclass course is exactly what you need, and more. You’ll even get a certification of completion\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all important concepts and hand-on application with this AWS CodePipeline: DevOps CI/CD Masterclass course, and I would without a doubt recommend it to everyone.”  Mariana Jones\n“This is such an awesome course. Clear instruction, and I loved every bit of it – Wonderful learning experience!”  Carlos Nvara.\nJoin thousands of other students and share valuable experience\nWhy take this course?\nAs a senior Enterprise Architect & Project Manager managing and deploying enterprise level IT projects, along with AWS, Microsoft, and CISCO certifications, my experience with AWS has been phenomenally great! I am excited to share my knowledge and transfer skills to my students.\nEnroll now in AWS CodePipeline DevOps CI/CD Masterclass course today and revolutionize your learning. Stay at the cutting edge of DevOps and enjoy bigger, brighter opportunities.\nSee you in class\nSyed and Team ClayDesk",
      "target_audience": [
        "Beginner DevOps professionals and solution architects",
        "Intermediate and advanced users will learn tips and techniques in building a CI/CD pipeline with AWS Codepipline",
        "Project managers will learn how to manage the DevOps AWS Codepipeline"
      ]
    },
    {
      "title": "SignalR on .NET 5: everything you need to know",
      "url": "https://www.udemy.com/course/signalr-on-net-5-everything-you-need-to-know/",
      "bio": "Enabling two-way real-time communication between the client and the server on ASP.NET Core 5",
      "objectives": [
        "SignalR on .NET 5 - a library that provides a convenient wrapper for WebSocket protocol"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Transport mechanisms",
          "Setting up your environment",
          "Setting up your solution",
          "Test yourself"
        ],
        "Setting up SignalR Hub": [
          "Introduction to SignalR Hub",
          "Example of SignalR Hub",
          "SignalR Hub explained",
          "An example of a strongly typed Hub",
          "Strongly typed Hub explained",
          "SignalR Hub documentation",
          "Test yourself"
        ],
        "Setting up SignalR clients": [
          "Introduction to SignalR clients",
          "Setting up JavaScript client",
          "Example of JavaScript client",
          "JavaScript client explained",
          "Setting up .NET Client",
          "Example of .NET client",
          ".NET client explained",
          "Preparing Blazor WebAssembly client",
          "Example of Blazor WebAssembly client",
          "Blazor WebAssembly client explained",
          "Additional resources",
          "Test yourself"
        ],
        "Connecting a standard WebSocket client": [
          "Why WebSockets client",
          "Example of .NET WebSockets client",
          ".NET WebSockets client explained",
          "Other types of WebSockets clients"
        ],
        "SignalR security": [
          "Introduction",
          "Example of CORS configuration",
          "CORS configuration explained",
          "Setting up authentication",
          "Example of Identity authentication",
          "Identity authentication explained",
          "User authentication example",
          "User authentication explained",
          "Enabling messaging individual users",
          "Messaging individual users",
          "Further reading on web application security",
          "Test yourself"
        ],
        "Scaling out SignalR hub": [
          "Why would you need to scale out",
          "Introducing Redis cache",
          "Setting up Redis",
          "Connecting SignalR Hub to Redis",
          "Multiple Hub instances",
          "Example of Hub Context",
          "Hub Context explained",
          "Setting up Azure SignalR Service",
          "Azure SignalR dependencies",
          "Connecting application to the SignalR Service",
          "Azure SignalR code explained",
          "More on scaling-out SignalR",
          "Test yourself"
        ],
        "Wrapping up": [
          "You did it!",
          "Where to go from here"
        ]
      },
      "requirements": [
        "Be able to build basic web applications on ASP .NET Core"
      ],
      "description": "Are you a web developer or do you write IoT software? If so, you would know that many web and IoT development projects these days require the ability to establish a persistent connection between a client and a server without having to keep sending repeated requests from the client. As you may also know, such functionality may be hard to implement.\nHowever, if you can build your server-side application on ASP.NET Core, there is a way to make this whole process easy. There is a library called SignalR. This is what I'm going to talk about in this course. As well as doing all the heavy lifting for you, the library abstracts away all complex implementation details, so your code can be made extremely simple.\nHowever, as you would already know, nothing in programming is simple in absolute terms. Programming is a complex activity, so even those concepts that are relatively simple require some practice and studying.\nThis is why I've created this course. By the end of it, you should be able to build a web application that clients will be able to establish a persistent connection with and exchange the data with in real time.\nThis is the second SignalR course that I have published. The previous one was about using SignalR on .NET Core 2.2. However, quite a lot has changes since then. .NET 5 has since been released and SignalR has also received several updates. So, this is an updated version of the course. The second edition.",
      "target_audience": [
        "Web developers who want to enable a persistent real-time communication between the client and the server",
        "IoT developers who want to be able to easily coordinate their devices",
        "Any other web developers using Microsoft programming stack"
      ]
    },
    {
      "title": "Node.js and Express REST API with Real World Projects",
      "url": "https://www.udemy.com/course/nodejs-and-express-rest-api-with-real-world-projects/",
      "bio": "Learn How To Build Real World, Production Ready REST APIs Using Node. Js, Express, Sequelize, and JavaScript",
      "objectives": [
        "Learn how Web APIs work",
        "Learn how to implement REST API in Node and Express",
        "Understand how to build production ready Web API using Node and Express",
        "Learn how to analyse a customer’s problem and generate the software requirements for the project",
        "Learn how to structure a large-scale project",
        "Learn how to implement all the functionalities of a complete ecommerce Web API which include: Product catalogue, Shopping Cart, Order and Checkout, Customer Management"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet connection",
        "A computer with Node and NPM Installed",
        "Visual Studio Development Environment",
        "Visual Studio Code Development Environment"
      ],
      "description": "This is a no holds barred, action packed course, titled Node.js and Express REST API with Real World Projects. The course takes you through all you need to start building industry standard REST APIs using Node and Express. To demonstrate My Confidence About This Course, I have created a CV that contains all the Concepts that I covered, and the Projects I have executed in this course. You can Take This Course and Start Looking for Job Immediately using the CV I have prepared.\nYour prospective employer wants you to come onboard and start building applications for them straight away. That is what I did in this course. To provide the knowledge that will allow you go straight into the industry and start working immediately. With over 100 Lectures, I did not leave any stone unturned!!\nBasically, the whole course can be grouped into Three Main Themes:\nIntroduction to Web API\nWhere I introduced how Web APIs work and how Asp.Net Core implements Web APIs\nCrash Course\nWhere I provided a short but comprehensive tutorial on JavaScript- the primary programming language for the course\nThe Real World Projects\nWhere I built Two SOLID Real-World REST API Projects. The type of Projects that you will be working on when you get into the industry.",
      "target_audience": [
        "Beginners who do not have a prior experience with programming",
        "Intermediate and Senior developers looking to start working with NodeJS and Express",
        "Developers looking to gain more knowledge within Rest API development"
      ]
    },
    {
      "title": "Squarespace Success Blueprint: Attract, Engage and Convert",
      "url": "https://www.udemy.com/course/squarespace-websites/",
      "bio": "Expert tips to grow your Squarespace website and business fast",
      "objectives": [
        "How to build a stunning, strategic Squarespace website from scratch—even with zero design experience",
        "Design high-converting pages and optimize your site to drive more actions",
        "Confidently navigate Squarespace’s intuitive tools to create a website that reflects your unique brand",
        "Master layout and design fundamentals to create clean, user-friendly, and visually appealing pages",
        "Use Fluid Engine, AI prompts, and advanced e-commerce tools to elevate your site and sell products or services",
        "Implement SEO best practices to boost visibility and attract more organic traffic",
        "Follow a proven, step-by-step website launch plan for a smooth and confident launch"
      ],
      "course_content": {},
      "requirements": [
        "No prior Squarespace experience needed",
        "No web design experience required",
        "No programming knowledge needed",
        "No coding required!",
        "A willingness to learn and experiment",
        "Basic computer skills"
      ],
      "description": "Create a Beautiful, Business-Boosting Squarespace Website\n*Taught by a Certified Squarespace Expert and Platinum Partner*\n\n\nDon't just build a website—build a thriving, high-converting digital asset. This is the complete masterclass that guides you through my signature blueprint to attract, engage, and convert your ideal audience\n\n\nHi, I'm Lesia Payne—a Certified Squarespace Marketplace Expert and Platinum Partner with over 25 years of web experience and more than 200 Squarespace websites successfully launched. I specialize in intuitive, high-converting web design that blends aesthetics with strategy—and I’m here to walk you through my signature blueprint to build a stunning site that supports your business 24/7.\n\n\nIn this course, you'll learn how to:\nMaster the Foundations\nUnderstand Squarespace’s tools, features, and the powerful Fluid Engine layout to build a clean and functional site from scratch.\nAttract Your Ideal Audience\nGet clear on your brand messaging, voice, and visuals that resonate with your dream clients and set you apart.\nOptimize for SEO\nImplement search engine best practices to improve visibility and guide users intuitively through your site—from homepage to checkout.\nDesign for Conversion\nApply insider tips on layout, flow, and user experience to turn site visitors into paying customers—not just lookers.\nUse the Latest Features\nWork with Squarespace’s newest tools—like Fluid Engine and design enhancements.\nSell Products or Services\nSet up your e-commerce store or service-based offerings with ease.\nLaunch with Confidence\nFollow my proven 10-step Pre-Launch Checklist to ensure your site launch goes off without a hitch.\n\n\nThis course includes:\nOn-demand video lessons for flexible learning\nA business-focused workbook full of expert strategies, actionable exercises, and marketing insights to guide your website—and your brand—to success\nLifetime access to the course content\nExpert support from a seasoned Squarespace pro\nDownloadable Certificate of Completion\n30-Day Money-Back Guarantee\n\n\nBy the end of this course, you’ll have a professionally built Squarespace site that not only looks amazing but also works strategically to grow your business.\n\n\nWhether you're starting fresh or want to improve an existing site, this step-by-step, expert-led course will give you the tools and confidence to build your own online success story—without hiring a developer.\n\n\nLet’s get started on building your beautiful, business-boosting Squarespace website—together.",
      "target_audience": [
        "Entrepreneurs and small business owners",
        "Non-profits and charities",
        "Anyone looking to create a professional website without coding",
        "Artists, designers and other creative professionals",
        "Businesses looking to attract more traffic, generate leads and make sales"
      ]
    },
    {
      "title": "Laravel 9 advanced tips and tricks beginner and intermediate",
      "url": "https://www.udemy.com/course/laravel-tips-and-tricks/",
      "bio": "Advanced Laravel 8&9 tips and tricks that are NOT mentioned in official documentation and help you to learn more skills",
      "objectives": [
        "Advanced Eloquent properties and methods",
        "Advanced Request authorization , validation and attributes",
        "Advanced Database migrations and quries",
        "More advice from real world projects that I developed",
        "Important tools that will help you while coding"
      ],
      "course_content": {
        "Introduction": [
          "The motivation behind the course",
          "How to get the out of most of the course",
          "Let's start !"
        ],
        "Eloquent Tips and Tricks": [
          "Remove or renaming timestamps columns",
          "Remove or rename primary keys",
          "Find multiple",
          "Get only what you want",
          "Let's stop using find($id)",
          "Accessors and mutators",
          "Appending data",
          "Casting attributes",
          "Set Pagination per page items",
          "Pivot model",
          "Observe changes",
          "Get changes",
          "Optional helper",
          "Null safe operator",
          "Let's stop using where where where",
          "Replicate data",
          "Need more ?!"
        ],
        "Database tips and tricks": [
          "Up and down methods",
          "Renaming table",
          "Adding and dropping columns",
          "Modifying columns",
          "Modifying enum columns",
          "Modifying tables via tinker",
          "Seeding a specific class",
          "Get what you want from pagination",
          "Prepare a new project",
          "Exist tricks",
          "First tricks",
          "With tricks",
          "Order methods parameters",
          "Need more ?"
        ],
        "Requests tips and tricks": [
          "Authorization",
          "show filed not field_id",
          "Exists rule",
          "Custom rule",
          "Some helper methods",
          "Need more ?!"
        ],
        "Next steps": [
          "Next stpes",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic knowledge of PHP OOP",
        "Basic knowledge of Laravel",
        "Composer installed on your machine"
      ],
      "description": "It's time to skip the basic level and move to intermediate or advanced level\n\n\n====================================================================\nThis course is valid for all latest Laravel versions 5.8, 6.X , 7.X, 8.X and 9.X , AND WILL BE VALID AND UPDATED FOR NEXT VERSIONS  :)\n====================================================================\nThe latest version of laravel is 8 so during this course you will learn the newest and the short ways to write a Laravel project or app .\nLaravel until now have more than 60 Million downloads from its github repo and it's the most required framework on the market right now.\nBy the way , the course will keep updating if there is any changes so keep learning without any fearing of 'out of date obsolete' .\nDuring this course we will learn :\nEloquent ORM in depth .\nAppending data .\nAccessors and mutators .\nEvent Observer (creating , created, updating, updated, deleting , deleted )\nCasting data .\nPlaying around primary and foreign keys .\nPlaying around timestamps fields .\nUsing route binding .\nthe amazing optional helper .\nPivot models\ncheck changed attributes and more .... :D\nAdvanced database and migrations .\nRenaming table .\nRenaming column .\nChanging column data type .\nRenaming column .\nSeeding a single class .\nDropping table using tinker .\nPerform some tricks operation (increasing, decreasing, sub queries, .... etc) .\nRequest validation in depth and how to write a smart and advance validation .\nMore advanced validation rules\nManipulating error messages\nAuthorization\nValidate value depending on other value\nAnd more\nWhile telling lessons I will give you some advises that I learned from my work experience .\nHappy coding !",
      "target_audience": [
        "Beginners or Intermediate Laravel developer curious about best practicing",
        "Beginners or intermediate Laravel developer who seeks to improve their Laravel skills"
      ]
    },
    {
      "title": "Credit Risk Modeling using R Programming",
      "url": "https://www.udemy.com/course/credit-risk-modeling-using-r-programming/",
      "bio": "Learn end to end credit risk scorecard and probability of default (PD) modeling using R Programming with real-life data",
      "objectives": [
        "Learn Model Development from scratch",
        "Understand step by step application of R codes",
        "Understand output interpretation and it's business logic",
        "Aligning Analytics with Business Requirements",
        "Impress interviewers by showing practical knowledge of credit risk model development",
        "Learn the most in demand skill"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Credit Risk Scorecard Development": [
          "Dataset Variables",
          "Data for Building Model",
          "Steps in Model Building",
          "Data Preprocessing 1",
          "Data Preprocessing 2",
          "Logistic Regression Model 1",
          "Logistic Regression Model 2",
          "Fitting the Model",
          "Model Performance 1",
          "Model Performance 2",
          "Model Performance 3",
          "Model Performance 4",
          "Model Performance 5"
        ],
        "Probability of Default Model": [
          "Expected Loss",
          "Data Exploration 1",
          "Data Exploration 2",
          "Creating Default and No Default categories",
          "Default Rate Calculation",
          "Default Rate for each Loan Grade",
          "R Packages",
          "Training and Test Datasets",
          "Discarding Attributes",
          "Converting Data Types",
          "Attributes with Zero Variance",
          "Default By States",
          "Finding Correlation",
          "Variable Transformation",
          "Model Development"
        ]
      },
      "requirements": [
        "A computer (Windows/Mac/Linux). That's it!",
        "No prior experience is required. This course is meant for beginners and the explanation is from scratch",
        "Zeal and enthusiasm to learn a new skill"
      ],
      "description": "Every time an institution extends a loan, it faces credit risk. It is the risk of economic loss that every financial institution faces when an obligor does not fulfill the terms and conditions of his contracts. Measuring and managing the credit risk and developing, implementing strategies to help lowering the risk of defaults by borrowers becomes the core of any risk management activities.\nFinancial institutions make use of vast amounts of data on borrowers and loans and apply these predictive and statistical models to aid banks in quantifying, aggregating and managing credit risk across geographies and product lines.\nIn this course, our objective is to learn how to build these credit risk models step by step from scratch using a real life dataset.\nThe course comprises of two sections: 1) Developing a credit risk scorecard and 2) Developing a Probability of Default (PD) model. We will build a predictive model that takes as input the various aspects of the loan applicant and outputs the probability of default of the loan applicant. PD is also the primary parameter used in calculating credit risk as per the internal ratings-based approach (under Basel guidelines) used by banks.\nIn this course, we will perform all the steps involved in model building and along the way, we will also understand the entire spectrum of the predictive modeling landscape.",
      "target_audience": [
        "Beginners/students",
        "Experienced analytics professional",
        "working professionals who want to shift towards risk modeling",
        "Data science/machine learning enthusiasts who want to learn a new skill"
      ]
    },
    {
      "title": "Angular Mastery: Build Modern Web Applications from Scratch",
      "url": "https://www.udemy.com/course/build-angular-projects/",
      "bio": "Dive deep into Angular's powerful features by crafting real-world projects, add projects portfolio in resume.",
      "objectives": [
        "Build real-time apps that not only work great but also look awesome!",
        "Understand how Angular works and how it interacts with Backends",
        "Use the deep understanding of the Angular fundamentals to quickly establish yourself as a frontend developer",
        "See the step-by-step process of designing and assembling an advanced project",
        "Master Angular for creating modern, complex, and scalable web applications.",
        "Get hands-on experience by building real-world Angular applications."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Angular"
      ],
      "description": "In the fast-paced world of web development, staying relevant and mastering modern technologies is essential . Angular, a popular JavaScript framework maintained by Google, has emerged as a powerful tool for building dynamic and responsive web applications . The \"Angular Development Projects\" course is designed to equip students with the skills and knowledge needed to excel in this exciting field . This course goes beyond basic Angular concepts and delves into real-world project development, offering a comprehensive learning experience .\nWhy You Should Learn Angular:\nHigh Demand: Angular is in high demand in the job market, and companies are actively seeking Angular developers . Learning Angular opens up a wide range of career opportunities .\nScalability: Angular's component-based architecture and powerful tools make it an excellent choice for building scalable and maintainable applications .\nCommunity and Support: Angular has a vibrant and active developer community, providing ample resources and support for learners . It's backed by Google, ensuring it remains a relevant and well-supported technology .\nCross-Platform Development: With Angular, students can also build cross-platform mobile and desktop applications using technologies like Angular Ionic and Angular Electron .\nFuture-Proof: Learning Angular equips students with skills that are likely to remain relevant for years to come, as it continues to evolve and adapt to industry needs .",
      "target_audience": [
        "Beginners in Angular"
      ]
    },
    {
      "title": "Learn Rest Api's with .NET Core 8.0 2025",
      "url": "https://www.udemy.com/course/learn-rest-apis-with-net-core/",
      "bio": "Learn to build RESTful Api's with .Net Core, Entity Framework and C# with .NET 8 2025",
      "objectives": [
        "Create Rest Api's with .NET 8",
        "Build the backend for your web and mobile apps",
        "Build Web Api's with Entity Framework Code First Approach",
        "Use Entity Framework to query data",
        "Implement Authentication & Authorization in Web Api's with Microsoft Identity",
        "Develop ECommerce Rest Api From Scratch"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a Windows machine. If you're using MAC then you'll need a windows virtual machine Or Visual Studio Code For MAC with MySQL Server",
        "Knowledge of Asp .Net , C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)"
      ],
      "description": "Welcome to the most latest and complete course on Rest Api's with .Net 8 2025.\nAre you tired of boring outdated and incomplete courses , then let's dive in to this course. Well I'm Asfend Microsoft Most Valuable Professional (MVP) and in this course I'll explain you every single aspect of restful web api's with .net core and c#. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a complete web api's in .net core. And the purpose of this course is to train you to build your own Restful web api's in .net core.\n\nThe main focus of this course is on the Restful Web Api via Asp .NET Core and C#. So if you're familiar with C# , .Net and Entity Framework Or if you want to create the Restful web api's in Asp .Net then this is the right course for you.\nIf you don't have any idea about Rest Api then don't worry because in this course we'll cover all the Rest Api concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions.\nImplement Status Codes\nAdding Migrations in Web Api's\nHow to add the Routing and Custom Methods\nImplement Authentication and Authorization and secure your Api with JWT\nCreate Real World ECommerce Rest Api From Start to Finish\nDeploy Rest Api's to Microsoft Azure\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a C# developer  then you should go ahead with this course.\nAfter this course you'll be very much familiar with .Net Core Web Api's and you'll be able to create any kind of real world web api's in .net quite easily as well as efficiently.\n\n\nSign up today, and look forward to:\nOver 5 hours of HD 1080p video content\nBuilding a Real World fully-fledged Web Api's including ones that use Rest Api Architecture , Access Token , Authentication , Authorization and much more.\nAll the knowledge you need to start building any api you want.\n\n\nSo what are you waiting for? Take this course and let's start learning",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Restful Web Api from A to Z.",
        "Developers with no knowledge of Asp .Net Core Web Api's who want to build Restful Web Api's with this framework."
      ]
    },
    {
      "title": "The MERN Stack Blogify Project: Web Development",
      "url": "https://www.udemy.com/course/mern-stack-blogify-project-based-course/",
      "bio": "Harnessing MongoDB, Express.js, React.js, and Node.js for Powerful Web Applications",
      "objectives": [
        "User Authentication: Learn how to implement secure user registration and login processes using strategies like password hashing and JSON Web Tokens.",
        "File Upload: Understand how to allow users to upload files like profile pictures or post attachments securely and efficiently.",
        "User Relationships: Learn to implement social features such as following and unfollowing other users",
        "User Blocking: Implement a blocking and unblocking system, allowing users to manage who can interact with them or see their content.",
        "Post Scheduling: Gain knowledge on how to implement post scheduling, enabling users to create content that will be automatically published at a specified future",
        "User Profile: Learn to create a user profile system where users can view and manage their personal information, posts, and social interactions.",
        "Password Reset: Understand the process of securely implementing password reset functionality, allowing users to recover their accounts when they forget",
        "Forgot Password: Implement a secure system to recover forgotten passwords, which involves sending recovery emails to users' registered email addresses.",
        "Account Verification: Learn how to implement a user verification system using technologies like email verification to ensure that users have valid email address",
        "Profile Update: Enable users to update their profile information such as username, email, profile picture, and password.",
        "Hide Posts from Blocked Users: Learn how to modify your application's visibility rules to hide a user's posts from those they have blocked.",
        "Hide Scheduled Posts: Understand how to effectively hide scheduled posts from your application's feed until their scheduled publishing time arrives.",
        "Pagination: Gain a practical understanding of how to implement pagination in a web application. Learn how to break down your data into manageable pieces",
        "Filtering: Understand the essential techniques of implementing data filtering.",
        "Searching: Master the process of integrating a robust search functionality into your web application."
      ],
      "course_content": {
        "LIVE DEMO": [
          "Project Features",
          "Project Live Demo",
          "Live Link Preview"
        ],
        "DISCLAIMER || MUST READ !!!": [
          "Disclaimer"
        ],
        "HELP US IMPROVE || IMPORTANT !!!": [
          "Help Us Improve This Course"
        ],
        "HOW TO TAKE THIS COURSE & RESOURCES || IMPORTANT !!": [
          "How to take this course"
        ],
        "GETTING STARTED || BACKEND": [
          "Setting Up The Environment",
          "VSCODE Customisation",
          "Folder Structure",
          "MVC Explained",
          "Create Express Server",
          "Final Source Codes"
        ],
        "DATA MODELLING-BACKEND": [
          "Data Structure",
          "Creating Github Branch for data modelling",
          "User Data Modelling",
          "Post Data Modelling",
          "Category And Comment Modelling"
        ],
        "AUTHENTICATION & AUTHORISATION-BACKEND": [
          "Authentication & Authorisation Overview",
          "How JSON WEB TOKEN (JWT) Works",
          "Exploring More About JWT",
          "Dummy User Registration Controller",
          "Installing Postman",
          "Connect to MongoDB Database",
          "Create MongoDB Connection String",
          "Installing Nodemon and VSCODE MongoDB Extension",
          "User Registration",
          "Hash User Password",
          "Login User",
          "Generate Token",
          "Dummy Profile Controller",
          "Is Login Middleware Logic Implementation",
          "Get Token From Request Header",
          "Verify Token",
          "Save User into Request Object",
          "Get User Profile Controller Improved"
        ],
        "ERROR HANDLING-BACKEND": [
          "Global Error Handler Middleware",
          "Catch Async Errors",
          "NotFound Handler",
          "Refactored Error Handlers"
        ],
        "POST CATEGORIES API-BACKEND": [
          "Create Category and Modified isLogin Middleware",
          "Fetch All Categories",
          "Delete and Update Category"
        ],
        "POSTMAN CONFIGURATIONS-BACKEND": [
          "Environment In Postman",
          "Environment Variables in NodeJS(dotenv)"
        ]
      },
      "requirements": [
        "Familiarity with Reactjs: Students should have a good understanding of Reactjs and its core principles such as components, state, props, lifecycle methods, and hooks.",
        "Understanding of Redux: A solid grasp of state management using Redux, including actions, reducers, and the Redux store, is necessary as this course will build upon these concepts.",
        "Familiarity with Nodejs: You should be comfortable with Nodejs, asynchronous programming, and understand concepts such as callbacks, promises, and async/await.",
        "Familiarity with Expressjs: Experience with Expressjs is a must, including routing, middleware, handling requests and responses.",
        "Familiarity with MongoDB: Familiarity with MongoDB, including how to structure data, perform CRUD operations, and use the MongoDB driver or Mongoose, is necessary.",
        "Basic Understanding of RESTful APIs: Knowledge of creating and interacting with RESTful APIs will be beneficial as we'll be building and consuming APIs throughout the course.",
        "Comfortable with JavaScript and ES6 Features: As MERN Stack is based on JavaScript, having a strong grasp of JavaScript, including ES6 features like arrow functions, destructuring, spread operator, and template literals, is critical."
      ],
      "description": "Course Title: The MERN Stack Blogify Project: Full Web Development Unleashed\nEmbark on a journey to become a proficient full-stack developer with our comprehensive MERN Blogify Project Course. This course leverages the power of MongoDB, Express.js, React.js, and Node.js (MERN) to guide you in creating a fully-featured blogging platform from scratch.\n\n\nThroughout this immersive learning experience, you'll gain hands-on expertise in developing and integrating essential web application features using cutting-edge technologies. These include user authentication, file uploading, social features such as following and unfollowing users, a user blocking system, and post scheduling capabilities.\n\n\nYou'll learn how to build robust user profiles, complete with the ability to update profile information and manage user-to-user relationships. Dive deep into user experience considerations and data security as you implement password reset and account verification functionalities.\n\n\nIn line with the ever-evolving digital world, the course also covers more nuanced features like hiding posts from blocked users and concealing scheduled posts until the predetermined publishing time arrives.\n\n\nThis course not only equips you with the necessary coding skills but also trains you in best practices for development, teaching you to write efficient, maintainable code. You'll learn to troubleshoot and debug your application effectively, handle errors, and understand the intricacies of deploying a MERN stack application to the cloud.\n\n\nBy the end of this course, you will have built a fully-functional, real-world blogging platform and be armed with the skills to create and deploy your own web applications using the MERN stack. Whether you're an aspiring web developer or looking to enhance your full-stack skills, this course is designed to propel you toward your career goals.\n\n\nJoin us in the MERN Blogify Project Course and harness the power of full-stack development to bring your innovative ideas to life!",
      "target_audience": [
        "Frontend and Backend Developers: Developers who are familiar with either the frontend or backend and wish to expand their skillset to become full-stack developers will benefit greatly from this course",
        "Current MERN Stack Developers: Developers already familiar with MERN but looking to expand their practical experience through a comprehensive project should consider this course.",
        "Web Development Students: This course is an excellent fit for students pursuing a degree or certification in web development or a related field, offering hands-on experience with building a real-world application.",
        "Career Switchers: Individuals considering a career transition into tech, specifically web development, will find the step-by-step, comprehensive nature of this course an excellent entry point.",
        "Entrepreneurs and Business Owners: Those who wish to build their own blogging platform or understand the mechanics behind such a system for their business may also find this course beneficial.",
        "Coding Bootcamp Students or Graduates: Perfect for reinforcing and applying the skills learned in intensive programs, this course provides a practical and in-depth project experience.",
        "Aspiring Full-Stack Developers: If you're interested in learning full-stack development, particularly using MongoDB, Expressjs, Reactjs, and Node.s (MERN), you'll find this course incredibly useful."
      ]
    },
    {
      "title": "JQuery Essentials core training for Dynamic Interactive web",
      "url": "https://www.udemy.com/course/jquery-essentials-core-training-for-dynamic-interactive-web/",
      "bio": "Optimize Your web applications by Understanding how to apply jQuery. More effective and powerful code with jQuery",
      "objectives": [
        "learn to use jquery",
        "add jquery to website",
        "create code using jquery",
        "better javascript with jquery",
        "amazing effects to websites with jquery"
      ],
      "course_content": {
        "Fundamentals of jquery how to start using jquery": [
          "What to expect from this course",
          "jQuery Course introduction",
          "jquery Cheatsheet",
          "jquery and the DOM",
          "What is jQuery",
          "setup jquery on your web page",
          "Setup jQuery"
        ],
        "Coding jQuery": [
          "Javascript vs Jquery",
          "jQuery source setup"
        ],
        "jQuery Selectors": [
          "jQuery Selectors",
          "jQuery CSS selectors to help identify HTML elements",
          "jQuery source selectors",
          "jQuery loop all items",
          "jQuery source multiple selections",
          "jQuery selector alternating row colors"
        ],
        "jQuery Events": [
          "jQuery events",
          "jQuery source Events",
          "jQuery mulitple event handling",
          "jQuery multiple event handling"
        ],
        "jQuery Attributes and CSS": [
          "jQuery navigation menu update class on change",
          "jQuery updated css for nav menu",
          "jQuery Navigation Menu CSS",
          "jQuery Manipulating CSS",
          "jquery css code 1",
          "jQuery CSS changes",
          "jquery css code 2",
          "jQuery attributes",
          "jQuery checkboxes and fields",
          "jquery attr and prop val"
        ],
        "jQuery Manipulation": [
          "jQuery html and text",
          "jQuery DOM Manipulation Methods",
          "jquery before after source"
        ],
        "jQuery Traversing": [
          "jQuery Traversing the DOM last and first elements",
          "jquery Traversing resource",
          "jQuery using find",
          "jquery find content from iframe update elements",
          "jQuery tree traversal",
          "Traversing source code"
        ],
        "jQuery Effects": [
          "jQuery effects Hide Show",
          "jQuery animation effects",
          "jQuery animation options",
          "jQuery sliding effects",
          "jQuery fading effects",
          "JS source Effects",
          "HTML source Effects"
        ],
        "jQuery AJAX": [
          "jQuery AJAX load",
          "jQuery AJAX getJSON",
          "jQuery AJAX POST data return server output",
          "jQuery AJAX parseJSON",
          "AJAX jquery source"
        ],
        "Jquery Projects Challenge Apply your skills": [
          "jQuery Challenge",
          "Challenge Solution",
          "Additional Learning Materials: Access to Downloads, Practical Examples"
        ]
      },
      "requirements": [
        "basic HTML CSS and JavaScript",
        "browser",
        "Computer",
        "Desire to Learn"
      ],
      "description": "NEW course Nov. 2015!\njQuery is an incredibly powerful JavaScript Library that is used on MILLIONS of website. It makes DOM access, EVENTS and AJAX easier to access. With just a few lines of code JQuery can transform your website added amazing dynamic effects and interactive content.\n\nWrite less, do more. This step by step course shows you the code you need to know to accomplish rapid web development with jQuery.\n\nLearn Step by Step how to code using jquery. We cover all the core fundamental concepts of jquery that you need to know in order to effectively use jquery on your websites.\nLearn about these JQuery code concepts and much more.....\n\nSetup jquery\nCoding jQuery\njQuery Selectors\njQuery Events\njQuery Attributes and CSS\njQuery Manipulation\njQuery Traversing\njQuery Effects\njQuery AJAX\nLearn jQuery with our Step by Step training, we show you how to create dynamic interaction on your web pages. Learn to use jQuery to create better user interaction experiences on web pages. Understand the structure of jQuery code and how to apply it. Learn at your own pace resources are included, source code and everything you need to practice and learn jQuery. We show you useful examples of jQuery Code snippets and explain the development process.\nDOM manipulation\nEvent handling\nAnimations\nAJAX technology\nKnowing how to apply jQuery is an excellent skill to have. jQuery is everywhere and by the end of this course you will have what you need to use it on your own webpages.\n\nWe walk you through step by step with detailed explanations of code and more. We add and update a webpage from scratch adding jQuery to bring it to life.\npractice with coding exercises\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resources to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions\nWe teach you the latest techniques and tools to use in order to create amazing web content. Everything you need to know is included in this course. Learn at your own pace, lifetime access to this course.\nWe show you how to write jQuery code, easy to learn. Our tutorials are easy to follow and effective in teaching jQuery.",
      "target_audience": [
        "beginners to jquery",
        "anyone who wants to learn more about web development",
        "web designers, web developers, web content creators",
        "refresh their knowledge about jquery"
      ]
    },
    {
      "title": "Building User Interfaces with React.js",
      "url": "https://www.udemy.com/course/learn-react-js-ui/",
      "bio": "Learn how to build Awesome UI's",
      "objectives": [
        "Build user interfaces using React js",
        "Understand React js core concepts",
        "Write React apps using ES6",
        "Create multiple React components and share data between them"
      ],
      "course_content": {
        "Introduction": [
          "Hi",
          "The app we will develop together"
        ],
        "Getting started": [
          "Enviroment setup node and yarn",
          "Downloading Source Code",
          "Running final project",
          "Running base project (The starting point of our development)",
          "Source Code and Project walkthrough"
        ],
        "Understanding React": [
          "What is react",
          "The Virtual DOM",
          "React Developer Tools"
        ],
        "Components": [
          "What is a component",
          "Our first React Component",
          "The Relationship between State and Render method",
          "Setting application state",
          "Understanding Component Life Cycle",
          "Hooks Methods & Setting State",
          "Array.map function and bootstrap 4 cards"
        ],
        "Sub (Dumb/Presentational) Components": [
          "Sub (Dumb/Presentational) Components & Props",
          "Lets walkthrough the exercise solution together",
          "Understanding how to update state via props (KEYNOTE) u",
          "Updating State from Subcomponents & Click events"
        ],
        "Using Forms and Refs": [
          "Adding forms",
          "Hiding and Showing forms",
          "Dropdowns with react-select",
          "Country Dropdown Sol Walkthrough",
          "Refs, Ref and Form Submission",
          "Adding new User Cards",
          "Reseting form fields Exercise solution walktrhough"
        ],
        "Filtering content": [
          "Creating Dropdown Button with Bootstrap 4",
          "Dowpdown menu item Click events",
          "Filtering cards by gender with lodash"
        ],
        "Dynamic Searching": [
          "Creating input field component",
          "On change events",
          "Searching Cards Dynamically",
          "Emoji exercise solution walkthrough"
        ],
        "Conclusion": [
          "Review of our web app",
          "React Documentation",
          "What next ?",
          "Final words"
        ]
      },
      "requirements": [
        "Javascript",
        "Basics of HTML",
        "Basics of CSS",
        "Basic understanding of Git helps, but isn't necessary"
      ],
      "description": "React is an open-source JavaScript library for building user interfaces. It is maintained by Facebook, Instagram and a community of individual developers and corporations.\n\nCompanies are searching for React js developers as it is a very scalable and reliable framework for building front end and mobile apps. Bearing this in mind, taking this course you allow you to add a new skill to your CV.\nIn this you will fully understand what React js is and how it works. You will build a web app which will be composed of multiple components styled with Bootstrap 4. You will learn the key differences between smart and dumb components, click events, on change events, using forms, dynamic searching with React and much more.\nThis course is well structured with exercises and whenever you need help just yell for help.\nSee you inside.",
      "target_audience": [
        "Anyone who wants to learn React JS",
        "Anyone who wants learn how to create web user interfaces"
      ]
    },
    {
      "title": "JavaScript and TypeScript: The Complete Guide (Vite & Node)",
      "url": "https://www.udemy.com/course/javascript-and-typescript/",
      "bio": "Fundamentals of Web Development with JavaScript and TypeScript",
      "objectives": [
        "Learn TypeScript without knowing TypeScript",
        "Learn how to use JavaScript and TypeScript to create front-end and back-end applications with Node and Vite.",
        "Become an expert in writing clean, maintainable and efficient code with JavaScript and TypeScript.",
        "Gain hands-on experience in creating web applications through projects and practical exercises.",
        "Learn Node js.",
        "Learn TypeScript.",
        "Learn JavaScript.",
        "Learn Zod.",
        "Learn Express js.",
        "Learn Asynchronous Programming (Promises & Async/Await).",
        "Learn about the Event Loop."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What does this course include?",
          "What is JavaScript?",
          "What is TypeScript?",
          "Installing Node.js",
          "Installing Visual Studio Code (VSCode) & Setting up the Dev Evnironment"
        ],
        "Lexical Structure": [
          "What is the lexical structure?",
          "Defining Variables",
          "Naming Conventions & Best Practices",
          "Primitive Types and Unions in TypeScript",
          "Challenge: Primitive Types and Unions",
          "Arithmetic Operators, Unary Operators, and NaN",
          "Coercing to a Number",
          "Infinity",
          "Compound Assignment Operators",
          "Wrap-up Challenge"
        ],
        "Control Statements": [
          "If Statements and Conditional Operators",
          "Challenge: If Statements and Conditional Operators",
          "Truthy and Falsy Values",
          "Logical Operators && (AND) and || (OR)",
          "Challenge: Logical Operators",
          "Compiling TypeScript to JavaScript",
          "While Loop",
          "Do While Loop",
          "Challenge: While Loop",
          "Switch Statement",
          "Challenge: Switch Statement",
          "For Loop",
          "Challenge: For Loop",
          "Ternary Operator",
          "Challenge: Fizz Buzz",
          "Block Scoping and Hoisting"
        ],
        "Functions and Types": [
          "Introduction to Functions",
          "Guard Clauses",
          "Challenge: Functions",
          "Parameters Passed by Value",
          "Anonymous Functions",
          "Arrow Functions",
          "Typing Functions in Variables",
          "Challenge: Types of Functions",
          "Functions Returning Functions & Type Aliases",
          "Challenge: Functions Returning Functions & Type Aliases",
          "Immediately Invoked Function Expression (IIFE)",
          "Functions as Function Arguments (Callbacks)"
        ],
        "Objects": [
          "Introduction to Objects",
          "Adding, Removing, and Modifying Properties",
          "Objects Challenge & Passing By Reference",
          "Destructuring Assignment of Objects",
          "Optional Chaining (?.) & Nullish Coalescing Operator (??)",
          "Non-Null Assertion Operator",
          "Readonly Objects"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "Basic Properties and Methods of Arrays",
          "Challenge: Shopping Cart",
          "Nesting Arrays",
          "Tuples with TypeScript & Destructuring Assignment",
          "Rest and Spread Operators",
          "Iterating over Arrays Imperatively w/ for...of",
          "Challenge: Removing Items from Shopping Cart",
          ".forEach() Method with Challenge",
          ".map() Method with Challenge",
          ".find() Method with Challenge",
          ".filter() Method with Challenge",
          ".every() & .some() Methods with Challenge",
          ".reduce() Method with Challenge",
          "Guide: When to Use Each Method",
          "Making Objects Iterable"
        ],
        "Collections (Maps & Sets) and OOP (Object-Oriented Programming)": [
          "Introduction to OOP",
          "Inheritance",
          "Challenge: Classes",
          "Polymorphism",
          "Interface (TypeScript)",
          "Access Modifiers (public, protected & private)",
          "Encapsulation",
          "Introduction to Generics",
          "Type Assertion (as type)",
          "Challenge: Trim Strings",
          "Generics with Classes, Optional Function Arguments, and Setters & Getters",
          "Sets + Challenge",
          "Maps + Challenge"
        ],
        "Advanced Techniques in TypeScript": [
          "Generic Constraints with extends",
          "Indexed Access",
          "Keyof Operator",
          "Challenge: Keyof Operator",
          "Intersections (&)",
          "Challenge: Intersections",
          "Utility Types",
          "Mapped Types & Modifiers",
          "Challenge: Recreate the Utility Types",
          "Const Assertion & Satisfies Operator"
        ],
        "DOM Manipulation: Mini Project & Introduction to Vite": [
          "Initializing the Project",
          "Fundamentals of the DOM",
          "Querying DOM Elements",
          "Get List of Elements using querySelectorAll",
          "Event Listeners and onEvent",
          "Challenge: Implement the Logic",
          "Manipulating DOM Elements",
          "Import JavaScript Files",
          "Introduction to Vite.js",
          "Migrating the Project from JavaScript to TypeScript",
          "Client-Side Rendering (CSR)",
          "Import & Export (ES Modules)"
        ],
        "Project: Todo List": [
          "General View of the Project & Challenge",
          "Scaffolding the Project",
          "Create Todo Form",
          "Rendering the Todos",
          "Marking Todos as Complete & Deleting Todos",
          "Project Repository"
        ]
      },
      "requirements": [
        "To get the most out of this course, it is recommended that you have a basic understanding of pseudocode and algorithms, as well as some familiarity with HTML and CSS. This will help you understand the concepts and techniques taught in the course and apply them to real-world web development projects."
      ],
      "description": "Welcome to JavaScript and TypeScript: The Complete Guide (Vite & Node.js)! In this course, you will learn the fundamental concepts of both JavaScript and TypeScript, two of the most popular programming languages for web development. You will start from the beginning and progress to build interactive and responsive web applications.\n\n\nTypeScript is a powerful superset of JavaScript that adds strong typing and object-oriented features to the language. It allows you to write cleaner, more maintainable, and more efficient code and is quickly becoming the preferred choice for professional developers. In this course, you will learn how to leverage these features to write better code and build more robust web applications.\n\n\nThroughout the course, you will learn how to use JavaScript and TypeScript to create modern web applications (both front-end and back-end) and gain practical experience through exercises and projects. You will also learn how to debug and troubleshoot code and master best practices and design patterns for web development.\n\n\nWhether you are new to programming or an experienced developer looking to enhance your skills, this course is designed to help you master JavaScript and TypeScript and build web applications like a professional. By the end of the course, you will have a solid foundation in these languages, front-end (Vite.js), and back-end (Node.js), and be well on your way to becoming a competent web developer.",
      "target_audience": [
        "This course is designed for aspiring web developers or anyone who wants to learn the fundamentals of JavaScript and TypeScript. It is suitable for beginners with little or no programming experience, as well as experienced developers who want to learn these popular programming languages. Whether you are new to web development or looking to improve your skills and knowledge, this course will provide you with the tools and techniques you need to create modern web applications. If you are passionate about programming and want to learn how to create interactive and responsive web applications, this course is for you."
      ]
    },
    {
      "title": "Learn CodeIgniter 4 API Development Using JWT Authentication",
      "url": "https://www.udemy.com/course/learn-codeigniter-4-api-development-tutorial-step-by-step/",
      "bio": "Complete API Development Guide Using Basic, JWT Authentication Tutorials",
      "objectives": [
        "CodeIgniter 4 API Development Steps",
        "Working with Basic Authentication in CodeIgniter 4",
        "JWT Authentication Implementation in API Development",
        "APIs Development without any authentication",
        "Complete Guide for API Handling in CodeIgniter 4"
      ],
      "course_content": {
        "Course Introduction & Basics": [
          "What we will learn?",
          "CodeIgniter 4 Setup Installation",
          "Understand Application Default Landing Page",
          "About PHP Spark CLI",
          "Create First Program",
          "Database Connectivity with Application",
          "What is Migration & How to Use it ?",
          "How To Use Query Builder?",
          "How to Work with Models?",
          "What is Seeder & How to use it?",
          "What are Route Methods?",
          "What is a Route Group?",
          "About Route Namespace & Usage",
          "Complete basics of Filters & Why we use it?"
        ],
        "Phase #1 - API Development Without Authentication": [
          "Introduction about API Development",
          "Create Migration",
          "Configure Controllers & Models",
          "Create API Routes",
          "Create & Save Data API",
          "Create Data API - Testing",
          "List Data API",
          "Single Data API",
          "Update Data API",
          "Delete Data API"
        ],
        "Phase #2 - API Development Using Basic Authentication": [
          "Discussion About Development",
          "Project Setup Installation",
          "Create Migrations",
          "Create Controller & It's Methods",
          "Create Model & Filter",
          "Create API Routes",
          "Create Category API",
          "Validate HTTP Request using Basic Authentication",
          "List Category API",
          "Create Blog API",
          "List Blog API - Join with Query Builer",
          "Single Blog Detail API",
          "Update Blog API",
          "Delete Blog API"
        ],
        "Phase #3 - API Development Using JWT Authentication": [
          "Introduction about API Development",
          "Project Setup & JWT Composer Package Installation",
          "Create Migrations",
          "Create Controller & Models",
          "Create API Routes",
          "Register User API",
          "User Login API",
          "User Profile API",
          "Create Book API",
          "List Book API",
          "Delete Book API",
          "Concept of Logout"
        ]
      },
      "requirements": [
        "Beginners knowledge of CodeIgniter framework & its about MVC pattern",
        "Beginners knowledge of Databases"
      ],
      "description": "We will learn the complete idea to develop a CodeIgniter 4 RESTful APIs Development Using JWT Authentication. Basic Experience in CodeIgniter programming required like working of MVC. Learn practical skills of APIs Development in CodeIgniter 4 with mysql database driver.\nThis course is a step by step guide through the CodeIgniter 4 development with MySQL programming language. You will go from a beginner level to creating your own web services.\n\n\nBasics of CodeIgniter 4.\nConcept of Route, Controller, Migration, Seeders, Filters, Route Group & Namespace.\nComplete concept of authentication types in CodeIgniter 4.\nAPI Development without using authentication.\nCodeIgniter 4 Basic authentication.\nAPI development guide with live code session with jwt.\nAPI development plans while creating application structure.\nAbout JWT basics and its structure.\nJWT API development tutorials.\nAPI Error handling by using filters.\nAbout Response & HTTP Code\nRelationship in API development with JWT\nDifference between API Development in Basic auth & JWT auth\nAPI Development Configuration.\nJWT package Installation with Complete detail.\nInstallation & Configuration of JWT in CodeIgniter 4 application.\nAbout Filter and their use.\nProcess of API and their strategy to development.\nInside this whole tutorial you will cover too many things. After completing this whole course you will surely can handle api development in CodeIgniter 4 framework. This course and it's video by video plans will help you to build a confidence in yourself to move with api development in php framework.\nThis course is for every level. For beginners, it will be very perfect to enrol and learn development in very easy steps with detailed concept.\nFew things you should keep in mind that is you should have some basics of CodeIgniter 4, mysql database and bit about MVC pattern. Rest all the things you will very clear during each sessions.",
      "target_audience": [
        "Beginner/Intermediate/Expert CodeIgniter PHP Framework Learners",
        "PHP framework lover"
      ]
    },
    {
      "title": "Knockout JS from Basic to Advanced",
      "url": "https://www.udemy.com/course/knockout-js-basic-to-advanced/",
      "bio": "Learn Knockout JS - Every module feature demonstrated with real-time examples",
      "objectives": [
        "Help users incorporate powerful and flexible functionality in their web sites with minimal lines of code.",
        "Illustrate, using examples, the power and ease-of-use of declarative binding and dependency tracking."
      ],
      "course_content": {
        "Introduction and First Example": [
          "Introduction",
          "First Example"
        ],
        "Bindings and Observables": [
          "Understanding Observable Property",
          "Observable Arrays",
          "Computer Observable"
        ],
        "Binding Text and Appearance": [
          "Text and Appearance Binding."
        ],
        "Control Flow and Containerless Bindings": [
          "Control Flow Binding"
        ],
        "Binding Form Elements": [
          "Form Fields Click Event Binding",
          "Unobstrusive Event Handling"
        ],
        "Template Bindings": [
          "Template Binding"
        ],
        "Component Bindings": [
          "Component Binding"
        ],
        "Custom Binding": [
          "Custom Binding"
        ],
        "Handling JSON objects": [
          "JSON ViewModel Interoperability"
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "Basic knowlege of JavaScript and HTML"
      ],
      "description": "Knockout.js is a JavaScript MVVM(Model View View Model) library with increasing popularity. This library helps to create rich, responsive display and user editor interface which works directly with the web application's underlying data model. Elegant dependency tracking, Declarative bindings, Trivial extendability are some of the important features of KO. Using KO with any web application is very simple, straightforward and clean. It is very powerful in the context of dynamic UI creation\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 23 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\nUnderstanding Model-View-ViewModel pattern using Knockout.js\nUnderstanding Data Binding Techniques.\nCreating Custom Bindings.\nDebugging Techniques.\nWorking with Forms.",
      "target_audience": [
        "Developers who want to apply the Model-View-ViewModel pattern",
        "Developers wishing to benefit from declarative binding, automatic UI refresh, dependency tracking, and templating in their web applications"
      ]
    },
    {
      "title": "The Art of Doing: Web Development for Beginners",
      "url": "https://www.udemy.com/course/the-art-of-doing-web-development-for-beginners/",
      "bio": "HTML, CSS, and JavaScript ~ Start building today!",
      "objectives": [
        "The absolute fundamentals of web development: HTML (the content of a page), CSS (the styling of a page), and JavaScript (the functionality of a page).",
        "Fundamental HTML tags such as headings, paragraphs, lists, tables, images, anchors, divs, spans, inputs, and forms.",
        "Essential CSS topics such as selector methods, defining size and color, the box model, and various display options such as block, inline, and inline-block.",
        "CSS layouts in one dimension using flexbox and in two dimensions using the grid system.",
        "Using CSS pseudo classes to perform translations, transitions, and animations.",
        "Beginner JavaScript concepts such as defining variables, basic data types, looping, conditional logic, and writing functions.",
        "Using the DOM (document object model) to access HTML elements within a JavaScript file to make web based applications.",
        "We will work together to build 10 different website projects. I will give you all assets and the layout and ask you to create!",
        "Not only will you learn the concepts but also the thought process of how to go through and design/build your own sites."
      ],
      "course_content": {},
      "requirements": [
        "A computer and internet access.",
        "Access to a text/code editor of your choice. I will be using Visual Studio Code.",
        "A creative mindset.",
        "Everyone and all abilities are welcome!",
        "Previous programming knowledge, while helpful is not crucial. I will walk through all needed programing concepts when we discuss JavaScript."
      ],
      "description": "I always wanted to learn the fundamentals of web development.  I’m drawn to how easy and quickly one can create visuals to be displayed within a web browser.  Coming from a background in Python where the vast majority of my learning took place in a terminal, web development seemed so enticing!\nHowever, there was one glaring problem in my web development journey.  I began learning these basic concepts: what is an HTML tag, what is the CSS box model, how do I access HTML elements in JavaScript; all isolated, on an island, with absolutely zero idea how to wade through the thought process of actually putting them all together, designing, and building a website.\nI felt overwhelmed and lost.  Sure, I thought I had the technical know-how and ability to make a website thanks to all of the tutorials that are out there.   However, these other tutorials are lacking in one key area: How to tie the concepts together.  What I craved after learning a collection of new concepts was an example website to try and build.  I wanted a template, a challenge…”here is this site, now go see if you can build it.”  I wanted support so that if I struggled, I could see only what I needed to see and then be back on my way.  Lastly, I wanted an explanation of how all these seemingly isolated concepts came together and worked together to create the final product of the website.  I’ve worked really hard to try to give you that experience that I wanted so badly, here in this course.\nOver these 10 sections I spend time first introducing various concepts.  We discuss key ideas, syntax, and how to implement various HTML, CSS, and JavaScript concepts.  Then, at the end of each section I challenge you to recreate a website I have built using your knowledge up to that point in the course.  I give you all the assets, the color schemes, and walk through the thought process of what the website should look like and do.  Then, I leave it up to you to recreate it….or I challenge you to make something all on your own.  Lastly, I go through step by step how I built my sites, what design choices I made, and how and why I made them.\nWe will cover the following HTML topics:\nHeading and paragraph tags\nFormatting text with various styling tags\nList and Table tags\nTag Attributes\nAnchor Tags\nImage Tags\nVarious Input Tags\nForm Tags\nProper HTML structure\nBlock Level and Inline Elements\nDivs and Spans\nSemantic HTML Elements\nWe will cover the following CSS topics:\nCSS Styling Rules\nCSS Selector Methods\nElement Width and Size\nDefining Color\nThe Box Model\nStyling Text\nStyling Lists and Tables\nVarious Display Values (block, inline, inline-block)\nFlexbox\nGrid\nPseudo Classes\nTransforms\nTransitions\nAnimations\nWe will cover the following JavaScript topics:\nDeclaring Variables\nVarious Data Types\nWorking With Arrays\nFor Loops and While Loops\nConditional Statements and Switch Cases\nWriting Functions\nDocument Object Model\ngetElementById()\nquerySelector()\nJavaScript Events\nGetting values from Input Fields\nGetting Values From HTML Forms\nEach unit is sequential so the content we cover in unit 1 is still used in unit 10.  This provides great scaffolding allowing you to really hone your skills and understanding of the material.  I hope that by the end of this course you feel that each unit, each video, and each final project are of value and that you are well equipped to come up with a design idea and implement it using HTML, CSS, and JavaScript alone!",
      "target_audience": [
        "Beginners in web development.",
        "Anyone who wants to learn the fundamentals of web development and not be thrown into a web framework.",
        "Anyone making the jump from Python fundamentals to web development."
      ]
    },
    {
      "title": "Ruby on Rails: The Complete Full Stack",
      "url": "https://www.udemy.com/course/full-stack-ruby-on-rails/",
      "bio": "The First Ruby on Rails Course to provide the Full Stack",
      "objectives": [
        "Build and Deploy at least one Ruby on Rails Application",
        "Students will have a deep understanding about the tools they are using."
      ],
      "course_content": {},
      "requirements": [
        "You don't need to know a thing to start this course.",
        "You will need to have either Sublime Text 2 IDE, Atom IDE, or Brackets IDE."
      ],
      "description": "Welcome to one of the very first courses to teach Full Stack Development. This course is designed to take you from knowing nothing to being a Junior Full Stack Developer. In this course, you will learn how to develop, deploy, and handle a web application. HTML-HTML5, CSS3, understanding JavaScript, BootStrap, jQuery, Basics of SQL, Ruby 1.9-2.2.3, SASS, Ruby on Rails 4, Git, GitHub, Heroku, and other sectioned courses. I'll go over 70-90% of the syntax of each language, explain what each one does with more Simplified Sense than Technical Jargon, gradually go from simple to hard and then back to simple, and there will be a continual addition of projects where we'll go from designing the website to deploying it to GitHub and Heroku. THIS IS AN UPDATING COURSE WITH NEW SECTIONS THAT WILL BE ADDED LATER ON(COFFEESCRIPT AND HAML)\nInside of this course you will find\nQuizzes\nPractice Code Quizzes\nSelf-made Games\nDo it yourself projects that are small and easily manageable.\nAn Introduction to Computer Science that covers Memory Allocation to Encryption to Web Security\nA mind boggling amount of knowledge\nEach video is encapsulated, which means you can watch a video and not worry about losing your place in the next video.\nThe course is structured to teach you the syntax, test your knowledge of the syntax, and then practice the syntax.\nWhat this course won't teach you\nHow to run and maintain a server or Operating System since there are too many, and I can't predict which one your job will require.\nHow to solve networking problems.\nHow to make Desktop Software or engage in Software Development.\nHow to deal with people.\nWhat 42 is.\nThis course is designed to provide a rookie level of Full Stack Development. This course is designed to give you 70%-90% of what a Full Stack Developer should know.\nIf you are new to the web development world, this course is likely for you. If you just went through a couple of HTML and CSS courses, this course is likely for you. If you're looking to learn just Ruby and onwards, this course is likely for you. If you're a Senior Full Stack Developer for Ruby on Rails looking to reaffirm your knowledge, this course will most likely not be for you.",
      "target_audience": [
        "Senior Developers should not take this course",
        "Non-Developers, Beginning Developers, and Intermediate Developers will find this course to be extremely resourceful"
      ]
    },
    {
      "title": "NostrDevs: Build a Social Network from Scratch",
      "url": "https://www.udemy.com/course/nostrdevs/",
      "bio": "Master the Nostr Protocol! Construct resilient social networks using cryptographic keys, signatures, clients, relays",
      "objectives": [
        "Intro to Nostr Development - Discover the unique Nostr protocol for censorship-resistant decentralized social networking.",
        "Understanding Nostr's Core Concepts - Dive deep into cryptographic keys, signature verification, and the vital roles within the Nostr system.",
        "Problems with Existing Platforms - Thoroughly explore issues with Twitter, Mastodon, and SSB. Learn why Nostr is the go-to solution.",
        "Mastering JavaScript for Nostr Development - Harness the power of JavaScript for implementing vital Nostr functionalities in your application.",
        "Setup Your Nostr Development Environment - Detailed guide to establish your own Nostr development environment. Get ready to create!",
        "Deep Exploration of Nostr Clients - Learn about client roles, interactions, and how to handle updates efficiently in the Nostr environment.",
        "Comprehensive Dive into Nostr Relays - Understand the integral role of relays, their setup, and how they interact with clients in Nostr.",
        "Efficient Handling & Management of Data in Nostr - Delve into data publishing, fetching, structuring, and post events within Nostr.",
        "Addressing Network Challenges in Nostr - Learn how Nostr tackles user bans, spam, data storage for a robust, healthy network.",
        "Hands-On: Build Your First Nostr App - A comprehensive step-by-step guide to creating your first application using the Nostr protocol."
      ],
      "course_content": {
        "NostrDevs Promotional video": [
          "NostrDevs Promotional video"
        ],
        "Introduction to Nostr Course": [
          "Introduction to Nostr Course with Super Testnet"
        ],
        "Intro to Developing on Nostr": [
          "Intro to Developing on Nostr with Topher Scott"
        ],
        "Build a Basic Nostr Application": [
          "Build a Basic Nostr Application with Super Testnet"
        ],
        "Nostr Tools": [
          "Nostr Tools with Captain Stacks"
        ],
        "Discussion on Nostr Relays with Captain Stacks & Super Testnet": [
          "Discussion on Nostr Relays with Captain Stacks & Super Testnet"
        ],
        "Machine to Machine": [
          "Machine to Machine I with Topher Scott",
          "Machine to Machine II with Topher Scott",
          "Machine to Machine III with Topher Scott",
          "Machine to Machine IV with Topher Scott"
        ],
        "Build a Reddit Clone on Nostr I": [
          "Build a Reddit Clone on Nostr I with Super Testnet",
          "Build a Reddit Clone on Nostr II with Super Testnet"
        ]
      },
      "requirements": [
        "No pre-knowledge is required - enthusiasm and a love for Nostr is all you need!",
        "A Linux machine or Mac or Windows is required",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Welcome to the Ultimate Nostr Development Course! This is your comprehensive guide to mastering the Nostr protocol, providing an end-to-end understanding, design principles, and hands-on building experience on this revolutionary protocol.\n\n\nIn just under 8 hours, we'll guide you from being a novice to becoming a proficient Nostr developer, enabling you to create resilient, censorship-resistant decentralized networks.\n\n\nWHO SHOULD TAKE THIS COURSE?\nIndividuals captivated by the potential of decentralized systems and eager to learn\nAspiring digital privacy enthusiasts looking to expand their knowledge\nTech hobbyists interested in exploring cutting-edge protocols\n\n\nWHAT YOU WILL LEARN\nThe solid foundations of the Nostr protocol, its purpose, and potential applications\nCreating and understanding Nostr clients, relays, and their intricate interactions\nThe application and management of keys and signatures within the Nostr ecosystem\nBuilding robust censorship-resistant networks that uphold the principles of a free and open internet\nA deep dive into various tools designed explicitly for Nostr development\nUnderstanding and implementing Machine-to-Machine interactions on Nostr\nCreating a Nostr-based Reddit clone, taking you from concept ideation to execution\nOur instructors, Super Testnet, Topher Scott, and Captain Stacks, employ an engaging, hands-on teaching approach. So you're not just assured to master the principles but will also find the learning process enjoyable!\n\n\nEmbark on this exciting journey with us today!\n- PlebLab",
      "target_audience": [
        "Anyone who wants to understand and build censorship-resistant social networks.",
        "Individuals keen to grasp cryptographic keys and signatures within decentralized platforms.",
        "Anyone aiming to contribute to the development and resilience of open protocols.",
        "Developers eager to delve into decentralized social networking platforms.",
        "Participants in hackathons seeking a unique edge with Nostr protocol knowledge.",
        "Individuals believing in a future dominated by decentralized systems and technologies.",
        "Aspiring Developers: Individuals with a foundational understanding of JavaScript.",
        "Startups and Innovation Teams: Organizations looking to understand and leverage decentralized systems for their products or services, especially those focused on communication or social networking.",
        "Web Developers: Existing developers who want to broaden their horizons by delving into the world of decentralized social networking platforms, a niche but rapidly expanding area of web development."
      ]
    },
    {
      "title": "The Complete Web Development Tutorial Using React and Redux",
      "url": "https://www.udemy.com/course/the-complete-web-development-tutorial-using-react-and-redux/",
      "bio": "Master the professional web development techniques using React and Redux",
      "objectives": [
        "Master concepts behind Redux, Reactq and JSX",
        "Learn to build apps using React and redux",
        "Understand the concepts behind state containers",
        "Create full fledged project along with the course"
      ],
      "course_content": {},
      "requirements": [
        "Students should have good understanding of JavaScript before starting the course"
      ],
      "description": "Faster and Better are two words that are constantly heard in the development world. Apps need to be built quicker, perform better and be scalable. This has resulted in technologies such as React and Redux to be created.\nSo, what are React and Redux?\nReact JS is an open-source JavaScript library that works as the V in the Model-View-Controller, allowing the system to render components that has additional components written as custom HTML tags. It allows incorporating HTML tags to make the developer’s coding more flexible. Using a JavaScript syntax extension, known as JSX, the coding is more readable and easier to write.\nRedux is slightly different. Although, inspired from Facebook’s Flux technology, it is not at all the same. Instead, Redux is a predictable state container for JavaScript apps. It allows the developer to write apps regardless of the environment, resulting in more consistently running apps. It works by storing the whole app in an object tree inside a single store. In order for a change to be made, an action is emitted, which does not result in the state of the app to be changed but rather a new object to be returned. The developer writes a reducer, a special function, which determines how an action will modify the state of the entire application. This made the app easier to run and even test.\nDo you want to learn how you can create apps that are fast and furious? Well, then here’s your chance. This amazing complete course is the perfect place for you to not only become acquainted with these brilliant technologies, but also master them.\nBreakdown React and Redux and learn them from scratch. This course includes everything you need to know about React and Redux. The course answers questions such as what is React and its basic features such as components, state, properties and lifecycle; what is Redux and its basic features such as state, store and reducers; and even how to combine them together to create a brilliant app.\nIn addition to theory, this React and Redux tutorial also includes building a complete hands-on WeatherCheck Application to get you acquainted with using both technologies in real world applications.\nWith so much packed in this course, let’s get started and learn how to build faster and better apps with React and Redux.",
      "target_audience": [
        "Students who want to master Redux and learn how to use it with react will find this course extremely useful"
      ]
    },
    {
      "title": "CSS For Beginners",
      "url": "https://www.udemy.com/course/css-for-beginners-introduction/",
      "bio": "Understand CSS from the ground up — learn core concepts, properties and how styles are applied in modern web design.",
      "objectives": [
        "Understand the role of CSS in styling web pages",
        "Apply different types of CSS: inline, internal, and external",
        "Use selectors to target specific HTML elements",
        "Work with the box model and see how box-sizing affects layout",
        "Style elements using the float, display, and position properties",
        "Use relative and absolute units like px, %, em, and rem",
        "Get introduced to media queries for responsive design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To CSS",
          "What to Expect in This Course (And Why That Matters)",
          "Setup",
          "Types Of CSS",
          "Types Of CSS Quiz"
        ],
        "Selector Types In CSS": [
          "Introduction To CSS Selector Types",
          "Demonstration Of CSS Selector Types",
          "CSS Selector Types Quiz"
        ],
        "Specificity In CSS": [
          "Introduction To Specificity In CSS",
          "Demonstration Of Specificity In CSS",
          "CSS Specificity Quiz"
        ],
        "Fonts In CSS": [
          "Introduction To Fonts In CSS",
          "Demonstration Of Fonts In CSS",
          "CSS Fonts Quiz"
        ],
        "Box Model In CSS": [
          "Introduction To The Box Model And Box Sizing In CSS",
          "Demonstration Of The Box Model And Box Sizing In CSS",
          "CSS Box Model And Box Sizing Quiz"
        ],
        "Colors In CSS": [
          "Introduction To Colors In CSS",
          "Demonstration Of Colors In CSS",
          "CSS Colors Quiz"
        ],
        "Positioning In CSS": [
          "Introduction To Positioning In CSS",
          "Demonstration Of Positioning In CSS",
          "CSS Positioning Quiz"
        ],
        "Floats In CSS": [
          "Introduction To Floats In CSS",
          "Demonstration Of Floats In CSS",
          "Additional Information On Floats In CSS",
          "CSS Floats Quiz"
        ],
        "Display In CSS": [
          "Introduction To Display In CSS",
          "Demonstration Of Display In CSS",
          "CSS Display Quiz"
        ],
        "Units In CSS": [
          "Introduction To Units In CSS",
          "Demonstration Of Units In CSS",
          "CSS Units Quiz"
        ]
      },
      "requirements": [
        "Basic understanding of HTML.",
        "No prior knowledge of CSS required. This course will teach everything you need to apply styling to your HTML web pages."
      ],
      "description": "This course is designed for complete beginners who want to learn how to style their web pages using CSS the language that controls the look and feel of websites.\n\n\nYou’ll get a clear, beginner-friendly introduction to how CSS works, how styles are applied, and how to control the layout, color, and appearance of your HTML elements.\n\n\nThis course is focused on helping you build a solid foundation in CSS fundamentals. Each concept is paired with a simple, focused example to show you exactly how it works in practice.\n\n\nIf you're looking to build full web pages or layouts, this course gives you the essential knowledge you'll need and prepares you to move on to more advanced layout techniques.\n\n\nHere’s what you’ll learn:\n\n\nTypes of CSS – Learn the differences between inline, internal, and external CSS and when to use each.\nCSS selectors – Discover how to target HTML elements using element, class, ID, and attribute selectors\nCSS specificity – Understand how CSS rules are prioritized and what happens when styles conflict\nFonts and colors – Learn how to define fonts, text styles, and apply color in multiple formats\nThe CSS box model – Understand how margin, border, padding, and content work together\nBox sizing – See how the box-sizing property affects layout\nPositioning – Get familiar with static, relative, absolute, fixed, and sticky positioning\nFloats – Understand how floating elements behave and how to manage them\nDisplay property – Learn how to control element behavior with values like block, inline, and inline-block\nCSS units – Explore px, em, rem, % more effectively\nMedia queries – Introduction to responsive design by applying styles for different screen sizes\n\n\nBy the end of this course, you’ll have a strong, practical understanding of core CSS concepts. You’ll be ready to style your own HTML pages and better equipped to take on projects that involve more advanced layout techniques.\nStart learning today and build the CSS foundation that will support all your future web development skills without feeling overwhelmed.",
      "target_audience": [
        "Beginners curious to learn how to style HTML web pages with CSS"
      ]
    },
    {
      "title": "WordPress Plugin Masterclass With Ajax and Shortcode",
      "url": "https://www.udemy.com/course/wordpress-plugin-development-with-custom-form-and-ajax/",
      "bio": "All you need to become a PRO in WordPress Plugins Development Building Custom Plugins with Ajax, JSON, Shortcode & Theme",
      "objectives": [
        "How to build WordPress Customized Plugins",
        "How to use Ajax with WordPress Forms and Get JSON response at real-time",
        "How to Create Short Code in WordPress With Parameters",
        "How to integrate Progress Bar with WordPress",
        "How to perform and design CRUD (Create, Read, Update and Delete ) in WordPress",
        "Also To learn About WordPress Theme Customization",
        "Adding Conditional Statements, Hooks in WordPress and Creating Database Tables From Plugins"
      ],
      "course_content": {
        "INTRODUCTION": [
          "INTRODUCTION",
          "Introduction",
          "Installing WordPress with Laragon and Database Structure - WordPress Plugins Dev",
          "Have you installed WordPress on your localhost before now? WordPress Plugins",
          "How do you change the extension on laragon from .test to .me"
        ],
        "PLUGIN COMPLETE DEVELOPMENT - BACKEND/ADMINISTRATOR VIEW": [
          "Creating Plugin Meta Tags and Description - WordPress Plugins Development",
          "Creating Tables in the Database And Activate With dbDelta",
          "Creating the Setup Table and Admin Menu to the Plugin Page",
          "Creating The Registration Setup Form In Admin Page - WordPress Plugins Developer",
          "Creating New Records In the Database with WPDB",
          "Displaying Records On Wordpress Admin Plugin",
          "Setting Up The View , Edit and Delete Mechanism",
          "Creating Editing Form In Admin - WordPress Plugins Development",
          "Updating and Deleting of Records In Admin Setup"
        ],
        "FRONTEND DEVELOPMENT AND SHORTCODE": [
          "THEME INSTALLATION AND CUSTOMIZATION",
          "Theme Menu and Logo Setup - Frontend WordPress Plugins Development",
          "Creation of Shortcode with Parameters - WordPress Plugins Development",
          "Shortcode Form Callback Functionalities",
          "Ajax Submission with JSON Response From the Backend",
          "Submitting To Database Table Using Ajax and Processing Request",
          "Setting the Classification of Queries and Application - WordPress Plugins Dev",
          "Progress Bar Setup and Implementation"
        ],
        "FINAL DEVELOPMENT AND RESOURCES": [
          "Verification of Number of Users Mechanism - WordPress Plugins Development",
          "Email Sending and Validation of Users Based on Email Address",
          "Event Registrations Spool - Display All Records based on ID",
          "Backups and Zip Files Of the Project - Completed WordPress Plugins Development",
          "CODE BASE 2022"
        ]
      },
      "requirements": [
        "Basic PHP - Know little about PHP",
        "Basic HTML - Know how to build a simple HTML page and work with HTML forms.",
        "Basic CSS - Know how to responsively style HTML pages with CSS."
      ],
      "description": "WordPress Plugin Development with Custom Forms & Ajax - 2024\nWordPress Plugin Development With Ajax and  Shortcode - 2024\nRealtime JSON response to users - highly user-friendly notification\nGet Customized Shortcode for Each Post or Page\nPHP for WordPress Plugin - The Loop, Conditionals\nCreate Shortcode for the individual event created.\nBecoming a professional with wp_query\nHow to create CRUD (create, read, update and delete) in WordPress Plugin  and Theme development\nBecome a pro with WordPress form with ajax\nCreating Custom Tables in your WordPress database with the prefix\nUnderstand Progress Bar with WordPress\nLearn how to create a WordPress shortcode to add to any page\nYou will learn how to customize a WordPress theme\nYou will learn how to use Laragon and WPDB functions with SQL\nYou will learn conditional statements usage and implementations\nAbility to create databases, tables and update the records in the database\nYou will learn more about MySQL\nHow to use a user-friendly notifications system for your application to development\nWordPress is the leading Content Management System on the market, powering a large percentage of the Web. The need for WordPress Developers who can build and customize themes and plugins is ever-growing. Learn from one of the most recognized educators in the WordPress world, I have developed a lot of WordPress applications and plugins including for WooCommerce payment gateway plugins.\n\nIf you want to learn everything from customizing existing themes or starting to build or develop WordPress Plugins with Shortcode, this course is for you. You will learn in-depth how WordPress works under the hood. If you are looking to build bigger and more custom plugin projects with WordPress or just get a good job with a great company building WordPress plugin projects, then this course is for you. Make sure though you can already build and style a basic web page with HTML and CSS as we assume you already know this and focus more on learning PHP.\nWhen you learn the skills this course contains you will feel incredibly empowered to build almost anything you can imagine with WordPress. You should also feel confident working professionally in the field as a WordPress Developer. You will have built a powerful website and plugin along with the course as well as customize theme and plugin of your own.",
      "target_audience": [
        "Everyone that wants to learn about WordPress Plugin Development",
        "Also To learn About WordPress Theme Customization",
        "Learn How to Register a Shortcode with Parameters"
      ]
    },
    {
      "title": "Ajax for Beginners: A Very Basic Introduction",
      "url": "https://www.udemy.com/course/ajax-for-beginners-a-very-basic-introduction/",
      "bio": "Learn the very basics of Ajax from writing syntax to how ajax works",
      "objectives": [
        "Know about Ajax",
        "How Ajax works",
        "Understand HttpRequest Object",
        "Understand API",
        "Know difference between HTTP AND HTTPS",
        "Write Ajax Syntax",
        "Understand Variables",
        "Understand Functions",
        "Understand Data Types"
      ],
      "course_content": {
        "What is Ajax all about": [
          "Introduction",
          "Overview of Ajax",
          "What is Ajax",
          "What Does AJAX Use",
          "How Ajax Works",
          "What is an API",
          "Ajax Syntax",
          "Http Vs Https",
          "How to create XMLHttpRequest Object",
          "Ajax Request",
          "Ajax Server Response",
          "Ajax Events",
          "Installing Brackets",
          "Ajax Example",
          "Ajax Basics For Beginners"
        ],
        "JavaScript and JQuery refreshers": [
          "Variables",
          "Operators",
          "JQuery Events",
          "jQuery Events Handlers",
          "Data Types",
          "Functions",
          "Thank You"
        ]
      },
      "requirements": [
        "Brackets Text Editor (Has built-in web server and is cross platform and also free.",
        "Modern web browser"
      ],
      "description": "Ajax, shorthand for Asynchronous JavaScript and XML, is a set of technologies that allows you to create Web applications that don't need to refresh Web pages in the browser.\nWho is it for?\nThis course is for you if you are interested in using Ajax on your web pages to create advanced, dynamic, feature-rich web pages.\nAJAX is an important front-end web technology that lets JavaScript communicate with a web server. It lets you load new content without leaving the current page, creating a better, faster experience for your web site's visitors. In this course, you'll learn how AJAX works .As Ajax works with JavaScript you learn about JavaScript variables.functions,operators and data types to help you understand Ajax better. This short AJAX course is hands-on and easy to follow along. The course is video based and will take you from knowing nothing about ajax to understanding Ajax and how it works. You will also at the end of the course understand what API and XMLHttpRequest object do. You may have come across http and https before and if not at the end of this course you will know the differences between them.I have added some JavaScript and jQuery refresher lectures .\nWhat you'll learn\nKnow about Ajax\nHow Ajax works\nUnderstand HttpRequest Object\nUnderstand API\nKnow difference between HTTP AND HTTPS\nWrite Ajax Syntax\nUnderstand Variables\nUnderstand Functions\nUnderstand Data Types\nThis course should be fun and I look forward to welcoming you .",
      "target_audience": [
        "This Ajax course is suitable for those with basic knowledge of Javascript and XML but also simple enough for anyone with basic computer knowledge"
      ]
    },
    {
      "title": "Learn USSD application development using PHP and MySQL",
      "url": "https://www.udemy.com/course/learn-ussd-application-development-in-php-and-mysql/",
      "bio": "Gain more knowledge in USSD application development from scratch in PHP and MySQL! The complete guide!",
      "objectives": [
        "Creating a USSD application in PHP and MySQL",
        "Creating interactive USSD menu",
        "Testing USSD application on the web browser",
        "Collecting and inserting user input on the USSD and saving the data into the database",
        "Creating a customer loyalty USSD application",
        "Deploying USSD application on a live server",
        "Testing USSD application on a live simulator",
        "Learn Uses of USSD application",
        "Learn how USSD application works on the backend",
        "Creating a fully working customer loyalty points wallet USSD application",
        "Authenticatication in USSD application"
      ],
      "course_content": {
        "Introduction to USSD application(THEORY)": [
          "Introduction"
        ],
        "Creating our USSD application": [
          "1: Demo of the application we are going to build.",
          "2: What we will build.",
          "3: Setting up our USSD main application script.",
          "4: Create our first USSD menu.",
          "5: Interacting with our USSD menu.",
          "6: Collect customer input(data) during registration.",
          "7: Create the database and customer registration table.",
          "8: Inserting USSD input into the database table.",
          "9: Check if a customer already exist on the customer table.",
          "10: Check a single customer password.",
          "11: Create other required database tables.",
          "12: Check a single customer points balance.",
          "13: Functions to check if customer exist and generate unique alphanumeric.",
          "14: Transfer of points from one customer to the other.",
          "15: Customer purchase items with points.",
          "16: Customer update his or her password.",
          "17: Push our USSD application to a live server and testing on a simulator."
        ]
      },
      "requirements": [
        "Should have knowledge in PHP and MYSQL",
        "Should have installed XAMPP or WAMP servers on their laptops",
        "Willing to learn"
      ],
      "description": "Would you like to create a USSD application using PHP and MySQL? In this course, I will teach you how to create a complete USSD application in PHP and MySQL. I will help you make good use of your PHP and MySQL skills. We will use PHP as our scripting language and MySQL as our database management system.  We will create a complete customer loyalty points wallet, whereby a customer will be able to register, check points balance, transfer points to other registered customers, log in to the USSD application, purchase items with points, and reset the password. I will also teach you how we will test the application on a web browser and then later on a live simulator on the internet\nConfigure USSD application on our localhost\nCreate an interactive USSD menu\nCollect user input and insert it into the database\nFetch user input and display the request details\nAuthenticatication in USSD application\nAt the end of the course, we will have created a fully working customer loyalty points wallet USSD application.\nTools required for this course\nWeb browser\nXampp comes with PHP and Mysql\nSelf-discipline\nAfricanstalking account(optional)\nWho is this course meant for\nThis course is for all students who want to create offline(no internet connection) applications that can be accessed by any type of phone.\nThis course is for beginner and intermediate learners in PHP and MySQL who want to make an exercise their backend development skills.",
      "target_audience": [
        "Beginner PHP and MySQL students",
        "Tech savy individual"
      ]
    },
    {
      "title": "Complete Microservices with Go",
      "url": "https://www.udemy.com/course/complete-microservices-with-go/",
      "bio": "Building, scaling and deploying distributed systems in Golang and Kubernetes",
      "objectives": [
        "Learn advanced Golang patterns",
        "Learn the Fundamentals of building with Microservices in Go",
        "Build and Deploy production grade Distributed Systems",
        "Learn how to design a complex system from scratch",
        "Learn to Weight and Think about Software Design Decisions",
        "Learn How to Scale and manage Traffic"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Overview",
          "Tech Stack Overview",
          "Course Requirements",
          "How to consume the course?",
          "Resources"
        ],
        "Microservices Architecture Design": [
          "Coming from a Monolith",
          "Microservices Guiding Design Principles",
          "Communication Styles",
          "Architecture Definition Process"
        ],
        "Advanced Go - Crash course": [
          "Effective Error Handling",
          "Interfaces",
          "Testing",
          "Pointers",
          "Goroutines",
          "Context and Timeouts",
          "Concurrency with Channels",
          "Maps",
          "Capstone Project",
          "Map Concurrency & Mutexes"
        ],
        "Development Environment Setup": [
          "Welcome to the Course Project",
          "Windows Users Setup",
          "Mac/Linux Setup",
          "Structuring a Microservice project",
          "Theory: Clean Architecture & Repository Pattern",
          "Part 1: Layered Architecture",
          "Part 2: Repository Pattern",
          "Why Kubernetes and Tilt",
          "More on Kubernetes"
        ],
        "API Gateway and HTTP Servers": [
          "Role of the API Gateway",
          "Implementing an HTTP Server",
          "Create a simple HTTP handler",
          "External API communication (OSRM)",
          "Preparing for External API Failures",
          "Gracefull shutdown"
        ],
        "WebSockets": [
          "Understanding WebSockets",
          "Implementing WebSocket connections",
          "Handling CORS"
        ],
        "Service Communication with gRPC": [
          "gRPC Introduction",
          "Protocol Buffer file generation process",
          "Defining the Trip Proto",
          "Implementing the Gateway Trip gRPC Client",
          "gRPC Server implementation on Trip Service",
          "Preview Trip Handler - Part #1",
          "Preview Trip Handler - Part #2",
          "Create the Trip Start boilerplate",
          "Why & What are Ride Fares",
          "Ride Pricing Estimation",
          "Implementing the TripStart gRPC handler"
        ],
        "Kubernetes Essentials": [
          "Introduction to Kubernetes",
          "Kubernetes Under the Hood",
          "Kubernetes Components",
          "Creating Deployment Files",
          "Doing our first production deployment"
        ],
        "Drivers Service": [
          "Bootstrapping the Service",
          "Small Tiltfile Compilation Fix",
          "Driver Registration",
          "Final Adjustments to the Route"
        ],
        "Asynchronous Communication": [
          "Introduction to Async communication",
          "Setting up RabbitMQ",
          "Connecting to RabbitMQ",
          "RabbitMQ Services Dependency",
          "Publishing the First Message",
          "Message Durability",
          "Consuming Messages",
          "Message Distribution & Acknowledgment",
          "Fair Dispatch",
          "The Pub/Sub Pattern",
          "Implementing the Exchange & Topics flow",
          "JSON Message Sending & Consuming",
          "Finding a Suitable Driver"
        ]
      },
      "requirements": [
        "Basic Go (Golang) Knowledge"
      ],
      "description": "In this project‑driven course, you’ll build the backend microservices system for a Uber‑style ride‑sharing app from the ground up—using Go, Docker, and Kubernetes.\n\nThe course includes an introduction to Advanced Go mini-course, so you can expect the full package if you are new to Go.\n\n\nBy the end, you’ll have a fully deployed, horizontally scalable ride‑sharing system that’s ready for real traffic. Plus, you’ll walk away with reusable template for building future distributed projects—accelerating your path to become a lead engineer.\n\n\nThe project we'll build is composed of multiple services that are orchestrated with Kubernetes, you have this beautiful UI, where if you click on the map you’ll be able to preview a route to your destination and then by selecting the desired package, request a ride from a pool of available drivers.\n\n\nThis course aims to provide you with the foundational knowledge required to build and understand distributed backend systems, implement industry best practices, and create production-ready microservices architecture that are scalable and maintainable. It is not just a step-by-step tutorial, but a comprehensive learning experience that prepares you for real-world scenarios.\n\n\nLegal Notice:\nAll product and company names, logos, and trademarks featured on this thumbnail are the property of their respective owners. Their use in this course does not imply any affiliation, sponsorship, or endorsement by these companies.",
      "target_audience": [
        "Beginners and Intermediate Developers",
        "Already Experienced software engineers from another language"
      ]
    },
    {
      "title": "The Complete Guide to NodeJS",
      "url": "https://www.udemy.com/course/the-complete-guide-to-nodejs/",
      "bio": "Learn everything you need to know about Node JS from installation to application with Express, Redis and Socket io",
      "objectives": [
        "Install and set up NodeJS",
        "Work with modules, packages and paradigms",
        "Build custom middleware for Express",
        "Integrate Socket.IO with Express and use the same authentication",
        "Create a secure local store for passwords",
        "Leverage the power of Redis for messaging"
      ],
      "course_content": {
        "Using Node.js and npm": [
          "The Course Overview",
          "Installing Node.js",
          "Node.js REPL",
          "Node.js is JavaScript",
          "Installing a Package with npm"
        ],
        "Using the Node.js Module System": [
          "require()",
          "Module Exports",
          "Package.json Walkthrough",
          "Using package.json to Manage Dependencies",
          "Using npm run",
          "Creating Our Own Package"
        ],
        "Useful Node.js Paradigms": [
          "Node.js is Asynchronous",
          "The Event Loop",
          "Callback Pattern",
          "Promises Instead of Callbacks",
          "Error Handling"
        ],
        "Node.js Events": [
          "Event Emitters",
          "Adding and Removing Events",
          "Creating Our Own Event Emitter"
        ],
        "Node.js Streams": [
          "Everything is a Stream",
          "Readable Streams",
          "Writable Streams",
          "Network Streams",
          "Piping Streams"
        ],
        "Node.js HTTP Server": [
          "The Node.js HTTP Server",
          "Making Client Requests",
          "Handling Requests",
          "Handling Responses"
        ],
        "Node.js and Express": [
          "Installing Express",
          "Routing Basics",
          "Middleware Basics",
          "Handling Errors",
          "Debugging in Express",
          "Templating in Express"
        ],
        "Passport in Express": [
          "Creating a Protected Page",
          "Creating a Login Page",
          "Passport and Authentication",
          "Where to Go from Here"
        ]
      },
      "requirements": [
        "Basic knowledge of javascript"
      ],
      "description": "This course is jam packed with high quality screencast tutorials, featuring step-by-step instructions, interesting examples and clear explanations on everything you need to get started as a Node developer.\nWalk though the installation of modules, package creation and useful paradigms to level up your programming skills and gain confidence in the most important Javascript runtime around today.\nLearn about event handling, find out what to do with streams and finally create a standalone Javascript program.\nInstall, handle routing, errors, debugging and create templates in Express, before putting your knowledge into action building a log in page with authentication.\nAbout the Author\n\nJoshua Johanan is the author of two books, \"Building Scalable Apps with Redis and NodeJS\" and \"Web Developer’s Reference Guide\". Both books deal with some of the details that will be used in this course.\nHe is currently a web developer with over 7 years of experience writing sites and applications in many different languages. These languages include PHP, Python, JavaScript, and C#. Using many languages also means using many frameworks, including Zend Framework, Django, and .Net MVC.",
      "target_audience": [
        "Anyone who wants a complete and thorough introduction to Node, from beginner to advanced in one course!"
      ]
    },
    {
      "title": "Create Music Website for Music Artists & Bands in WordPress",
      "url": "https://www.udemy.com/course/professional-music-website-creation-for-artists-bands-in-wp/",
      "bio": "Learn how to create your band website with events, multiple artists and live music and podcasts, sell merchandise & more",
      "objectives": [
        "Design a professional music streaming website with free professional theme from me ( 60$ )",
        "By the end of this course, you will have a working, gorgeous website to show off your material",
        "In this course you will learn how to create stunning websites without learning any code.",
        "Students will learn how to setup a hosting account, domain name, and Wordpress website.",
        "Create Pages like Release, Events and multiple artists showcasing",
        "create article pages with bio, social media, their music and events",
        "create music streaming website with best theme for wordpress",
        "sell your merchandise or music in the website"
      ],
      "course_content": {
        "Introduction": [
          "Introduction !",
          "Before we begin! Download Theme and Plugins"
        ],
        "WordPress": [
          "Domain, Hosting and installing wordpress",
          "Best Hostings for WordPress",
          "Updating & Installing Necessary Plugins"
        ],
        "Music Wordpress Website": [
          "Before we start : Download theme from below",
          "Installing theme",
          "Before we start : Download All Plugins from below",
          "Installing Plugins",
          "Importing Demo Data",
          "Adding logo to Website",
          "Customizing Social Media icons",
          "Customizing home Page",
          "Customizing Booking / Contact Page",
          "Customizing Multiple Artists Page",
          "Customizing Multiple Release / Song Page",
          "Customizing Menus"
        ],
        "Ecommerce Store": [
          "Adding Woocommerce and Setup",
          "Configuring Payment Gateway",
          "Adding Single Product"
        ],
        "Artists and Music": [
          "Creating Single Artist Profile",
          "Creating Single Music / Album",
          "Creating Events",
          "Linking Music with Product"
        ],
        "For Advance Customization": [
          "Configuring Autoplay of Music after website opening",
          "Choosing best Theme colour from color palette",
          "Jetpack for Stats and Speed"
        ],
        "NEW UPDATES! and APP": [
          "Adding video page in website and adding videos",
          "Creating podcast page and embedding your podcast",
          "Adding Yoast SEO for website ranking",
          "Creating Android app of your website",
          "Creating IOS app of your website"
        ],
        "Blogging and SEO": [
          "Keyword Tools ( BEST FREE TOOLS )",
          "Integrate Google Analytics with WordPress",
          "Yoast and Rankmath SEO Plugins"
        ],
        "Make WordPress Load Faster without any Technical skills": [
          "Tools for Pagespeed and Performance ( BEST FREE TOOLS )",
          "WP-Rocket WordPress Plugin and Comparison ( PLUGIN PROVIDED FREE )",
          "Configuring WP-Rocket Plugin",
          "Imagify Image Compression"
        ],
        "Bonus": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge"
      ],
      "description": "Are a music producer or beat maker looking to sell your music / merch online?\nWould you like to save money and learn how to build your own professional music website?\nMy goal with this class is simple: I want all musicians and singers to have a website, be able to manage their website, sell products and much more\nThis is a hands-on class: I am going to make a website for myself during this class, and walk you through every step. Nearly every video is a \"walk through\" on how to do something. Lets dive in!\n\n\nMusic Theme & plugins for Creating Music website have been provided for FREE !\nSupport from me & 30 days money back guarantee\nImprove your brand & Attract serious music artists\nAnd much more!!!!\n\n\nYour music website will be created and you will then be able to start selling music, songs, merch, add events and sell tickets and much more!\ncreate your artist profile / add multiple artists in website\nThe music theme have world's first ever and unique music visualizer, you will also learn how to add your songs, events, merchandise &  podcasts and go live\nAnd the best part is you don't need to have any coding knowledge\n\n\nENROLL NOW!\nYou Have Nothing To Lose But Everything To Gain!\n30-Day Money-Back Guarantee!",
      "target_audience": [
        "Anyone who is looking to become a web developer",
        "Freelancers in Web Development",
        "Music Artists and bands",
        "Wordpress Beginner"
      ]
    },
    {
      "title": "Full Mern Stack Project with MongoDB, Express, React, NodeJS",
      "url": "https://www.udemy.com/course/full-mern-stack-project-with-mongodb-express-react-nodejs/",
      "bio": "Mern Full Stack Web Development with hands-on Mern Stack Project | Mongo DB, Express, React Js, Node js. Full Stack Mern",
      "objectives": [
        "Full Stack Web Development using MERN",
        "Learn how to build backend API using node and express",
        "Learn how to build powerful and fully functional social media website using MERN",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Full stack mern stack mern projects with react js, nodejs, express js, mongodb",
        "The good news is that web development generally uses light-weight code that is easier to learn than many other languages.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstra",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, Mongodb",
        "What is React used for? React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard",
        "React Hooks, Async/Await & modern practices",
        "Learn how to handling forms in React, Nodejs, Express JS",
        "Learn about Redux (Best state management tool)",
        "Learn styling with Material-ui",
        "Deployment",
        "Mern Full stack",
        "Full stack web development with mern stack project",
        "What is React? React is a front-end library in Javascript that was developed by Facebook",
        "The simplest definition of React is that it is a user interface library used for building UI components for the web.",
        "The most common use of React is to build dynamic user interfaces for single-page web applications.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice.",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy management of asynchronous functions.",
        "NodeJs is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers.",
        "A runtime system is a platform where a software program runs",
        "Mern full stack with react js, express js, mongodb, nodejs"
      ],
      "course_content": {
        "Introduction to Full Mern Stack Project with MongoDB, Express, React, NodeJS": [
          "What is MERN and How to Get Help?",
          "Project Files - mern stack projects",
          "FAQ about Mern Full Stack Projects with react, express, nodejs, mongodb",
          "Quiz Mern Stack Project"
        ],
        "Let’s Start to Mern Full Stack Project with React, Express js, Nodejs, Mongodb": [
          "App Preview",
          "Installation React, nodejs, express, mongodb"
        ],
        "Initial Setups for React, nodejs, express js, mongodb": [
          "Backend Setup",
          "Frontend Setup",
          "General Setup (body parser & cors)",
          "Database Setup (MongoDB)",
          "How to Connect to Database",
          "quiz"
        ],
        "Creating Routes and Controllers": [
          "Creating Routes for Backend",
          "Setup Server Folder Structure",
          "Set Up Schema",
          "Adding More Controllers",
          "quiz"
        ],
        "Setup Client Side and Redux in React, Express js, Mongodb": [
          "Creating Front-end Structure in Mern Full Stack",
          "Implementing Styles",
          "Styling Component",
          "Implementing API Request in Mern Full Stack",
          "Initializing Redux in React JS, Express JS, Mongodb",
          "Building Reducers in React JS, Express JS, Mongodb",
          "Creating Action Creators",
          "Fetching Data with Redux-thunk in React JS, Express JS, Mongodb",
          "Fetching Data from Global State (useSelector)",
          "quiz"
        ],
        "Handling Forms in React js, Express, Mongodb, Nodejs": [
          "Building Form Component",
          "Adding Some More Form Items",
          "File Input",
          "Handling Form Submit",
          "Quiz React Application, Mern Stack"
        ],
        "Building Story and Story Components in Mern Full Stack Projects": [
          "Creating Story List Component",
          "Creating Story Component",
          "Creating Update Route"
        ],
        "Handling Functionalities (Edit, Delete, Like)": [
          "Creating Update Functionality",
          "Creating Update Action",
          "Updating and Reseting Form Values",
          "Adding Route for Delete Action to Backend",
          "Delete Story Action for Frontend",
          "Implementing Update Action in Backend",
          "Like Story Action",
          "quiz"
        ],
        "Some Enhancements in Mern Stack Project with React js, express js": [
          "Creating Constants for Action Types",
          "Environmental Variables"
        ],
        "Extra": [
          "Full Mern Stack Project with MongoDB, Express, React, NodeJS"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Ability to install software on your computer",
        "Must understand and write JavaScript code",
        "Must be familiar with main technologies like Node, React, MongoDB",
        "Desire to learn Mern full stack projects with react, nodejs, express, mongodb",
        "Desire to learn with react, nodejs, express, mongodb",
        "Desire to learn mern stack full stack react js, nodejs, express, mongodb",
        "Desire to create real world mern stack projects with react, redux, hooks and context, nodejs, mongodb, express",
        "Desire to learn react project with node js, express js, mongodb",
        "Desire to learn web development with mern full stack (mongodb, express js, react js, nodejs)",
        "Desire to create real world react projects",
        "Nothing else is required about Mern stack projects"
      ],
      "description": "mern, mern stack, mern full stack, react, nodejs, mern stack project, node js, fullstack\nHello there,\nWelcome to the \" Full Mern Stack Project with MongoDB, Express, React, NodeJS \" course\nDevelop Your Mern Full Stack Web Development with Hands-on Mern Project | Mongo DB, Express, React Js, Node js\nIn this course, we will be building a full-stack Social Media project application using Node js, Express, React, and MongoDB This is not an \"Intro to React\" or \"Intro to Node\" course It is a practical hands-on course for building an app using the incredible MERN Stack\nMERN Stack is an open-source JavaScript stack used for ease in the development and deployment of applications\n'MERN' stands for the four technologies that make up the stack: MongoDB, Express js, React, and Node js MongoDB is a cross-platform document-oriented database used for JSON-like storage, including ad-hoc queries, indexing, replication, and load balancing Express is a Node js back-end web application framework utilized for building web applications and APIs React is a front-end library used for making user interfaces And lastly, Node js is a back-end JavaScript runtime environment, which allows programmers to run code outside of a web browser MERN stack is not to be confused with MEAN web dev stack, which uses Angular js instead of React js as the JavaScript library\nThis is a practical hands-on course for building an app using the incredible MERN Stack\nThis course project is probably the biggest and most exciting project you have built so far It is packed with hundreds of tips and tricks that can help you build almost any type of full-stack app (not limited to this project)\nYou can build the biggest and most complex apps of your dream or as required at your job Master the stack of all stacks and become the most productive and innovative developer on your team I welcome you to be a part of this incredible journey\nIn this course, you will learn to develop a web application with Full stack Projects with React JS, NodeJS, MongoDB, Express from scratch\nIf you are thinking to start to learn ReactJS, this course is the best match for you\nWe have explained React from beginner to all levels We have explained all the topics as simple as possible with examples, slides, and diagrams\nWe have created a lot of projects while explaining the subjects Because we believe that applied educations are much more useful than other teaching methods\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels\nWe paid attention to explain all the topics in order Because we think that the order of presentation of the subject is as important as the content of education We have seen this shortcoming in many pieces of training we have examined and tried to explain these issues to you in the best way\nReact is an essential Javascript framework for web development It is the most popular framework for developing web, mobile, and desktop app user interfaces\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nNode js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser\nNodeJS and Express is a growing web server technology By learning Node with Express, you can improve your skills, get a new job and you can build a powerful, robust backend\nLearning Node js is a great way to get into backend web development, or expand your fullstack development practice With Udemy’s hands-on Node js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime\nNode js is essential to developing real-time applications in JavaScript and has been instrumental in the development of websites like eBay and PayPal Node is designed around an event loop, which allows for easy management of asynchronous functions This makes it a popular environment for modern developers working on chat and gaming apps\nMongoDB is a cross-platform document-oriented NoSQL database program By using MongoDB, you can build a modern application database for your projects\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows Its schemaless nature allows greater flexibility or changing application requirements It’s one of the best databases in terms of developer productivity\nMongoDB is a document-oriented database designed to allow developers to scale their applications to meet scalability demands MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React This course will take you from a beginner to a more advanced level with hands-on examples\nYou will be confident in using React JS, and if you ever get stuck, we will be there to help\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS In this course, we will be teaching React by creating various projects\n\nIn this Full stack Mern Projects with React Js course, you will learn\nBuilding an extensive backend API with Node js & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nHandling Forms\nReact js, and react projects, mern stack projects\nExpress\nExpress js\nReact\nReactjs nodejs\nNodejs\nNode js\nReact js\nExpressjs\nFull stack\nFull stack javascript\nFull stack react\nJavascript\nReact js node js\nNodejs reactjs\nReact js and node js\nNode\nMern stack\nNode js react\nMern full stack\nMongodb\nFull stack react js with redux node js, express js, mongodb\nExpress\nReact node\nReact nodejs\nNodejs express js mongodb\nReactjs and nodejs\nMern\nNode react\nWeb development with react js, mern stack\nReact js full stack\nMern full stack projects with express js, mongodb, nodejs\nFull stack react projects with redux, hooks and context\nFront end web development\nBackend web development\nAt the end of the course\nBy the end of the course, you will be able to build amazing React single-page web applications\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest\nWhat is MERN Stack?\nMERN Stack is an open-source JavaScript stack used for ease in the development and deployment of applications 'MERN' stands for the four technologies that make up the stack: MongoDB, Express js, React, and Node js MongoDB is a cross-platform document-oriented database used for JSON-like storage, including ad-hoc queries, indexing, replication, and load balancing Express is a Node js back-end web application framework utilized for building web applications and APIs React is a front-end library used for making user interfaces And lastly, Node js is a back-end JavaScript runtime environment, which allows programmers to run code outside of a web browser MERN stack is not to be confused with MEAN web dev stack, which uses Angular js instead of React js as the JavaScript library\nWhat skills should I have before learning MERN Stack?\nIt is crucial to have a foundational understanding of web development before learning the MERN stack So, HTML5, CSS3, and JavaScript skills are all required before you take on learning MERN Stack In addition, it is good to have a working knowledge of Git and GitHub, the essentials of HTTP, and some understanding of JavaScript frameworks Furthermore, it is also beneficial to be familiar with back-end language, database/web storage, and web application architecture These skillsets will make for a smoother learning process as you navigate the intricacies of MERN Stack\nWhy should I use MERN Stack?\nMERN Stack remains completely open-source, uses only one programming language (JavaScript), and has superior UI rendering and performance compared to competing Stacks The only difference between MERN Stack and MEAN Stack is that the former uses React js (instead of Angular js) for the JavaScript library/framework Thus, the framework and library are where the differences for UI rendering and performance come into play React js library is newer than the Angular js framework, but beware when comparing the two because both have pros and cons Also, some programmers have noted Angular js's steep learning curve when compared to React js\nWhat is full stack web development?\nFull stack web development refers to the process of developing both client- and server-side software That means you can expect anyone with \"full stack\" included in their job title to have expertise in several front- and backend languages and frameworks On the frontend, mastery in HTML and CSS is a common requirement for the field Developers also tend to use JavaScript, jQuery, or Angular when developing a browser platform Concerning the backend, full stack development consists of programming servers and databases A server might call for code in PHP, ASP, Python, or Node, while a database can accept languages like SQL, SQLite, or MongoDB\nWhat are some common frameworks for full stack web development?\nBecause full stack web development includes both front- and backend frameworks, you should be familiar with some of the common frameworks for both If you work in a Python-based environment, for example, Django will be of interest to you For the frontend, both React and React JS are currently growing as the most widely used frameworks However, companies that are using more legacy frontend frameworks may use Angular Spring Boot is a Java-based backend framework Rails, known as Ruby on Rails, is a backend web app framework based on Ruby Development environments that use JavaScript on the backend are likely to use Node js with Express js or MetorJS You can also use Symfony as your web development framework, which stems from PHP\nWhat is the difference between full stack, backend, and frontend web development?\nFrontend web developers write client-side code This is all the code that runs on the user's computer when they visit a website Generally, this includes everything that the user can see To write frontend code, you need to know HTML, CSS, and JavaScript Backend web developers write server-side code This is all the code that runs on the website's server Backend code controls the logic of the website For example, a frontend developer may code where a username will appear on a website and its style, but the backend developer will write the code that retrieves the username from the database Backend developers need to know a server-side programming language in addition to HTML and JavaScript Not all projects have a front and backend web developer Some projects only have full-stack web developers, which do both front and backend coding The team composition depends on the needs of the project Full-stack web developers need to be strong front and backend coders\nAre full stack web developers in demand?\nFull stack developers are in high demand across multiple industries, making it a great career path to follow You'll find this to be especially true in the computer software, IT, internet, financial services, and higher education fields Even better news is that you can expect full stack developers to be a popular job title for a while This is due to the fact that many companies are in a constant state of evolving their software to meet the ever-changing needs of the users they service and the servers they host on If you're interested in helping businesses advance their software, now is the perfect time to become a full stack developer\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook The simplest definition of React is that it is a user interface library used for building UI components for the web But if that was all React did, it would be little more than a template library Developers define components in React by using an HTML-like syntax called JSX These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM) These features give React components the ability to react dynamically and efficiently to changes in their state A set of simple components in React can be composed into either simple single-page applications or large, complex web applications\nWhat is React used for?\nReact is an open-source JavaScript frontend library Some developers consider it a frontend framework because it does more than standard libraries usually do The most common use of React is to build dynamic user interfaces for single-page web applications But the structure of React makes it useful for more than just creating websites JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element But JSX can be used as an interface for things other than HTML React Native uses React to build mobile applications Here, JSX becomes an interface for mobile UIs instead of HTML There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach Engineers create components, which are normal Javascript functions These functions return information to tell React what content should be displayed on the screen The real power of React comes from the ability to nest or compose these functions inside of one another This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application Libraries, on the other hand, assist in building a single aspect of an application With this in mind, React is a library It assists engineers in presenting HTML in the browser React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built\nIs React worth learning?\nYes, React is worth learning There are a couple of reasons The first one is that React is in high demand in the software development job market and has been for a few years If you learn to code in React and can do it well, you will increase your chances of finding a job This alone is another reason it is worth learning Website users no longer will settle for old-fashioned sites that won't update without a page reload React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience React has also been around a few years and has stood the test of time A large portion of websites, both small and large, use React as a frontend framework\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different But it is easy to learn if you are dedicated and determined to create frontend web applications To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning Since React is a Javascript framework, a solid grounding in Javascript will give you a head start With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different In React, web components are generated In React Native, the generated components interact with a phone's native APIs If your focus is web development, then you should learn React If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native\nWhy is React so popular?\nThere are many reasons why React is popular One reason is that Facebook developed it The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications React also solved many of the past issues that developers had with developing single-page applications (SPAs) React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs One feature that makes it better than past libraries is that React is relatively easy to use Its components are reusable, plus React's use of the virtual DOM makes it very performant React should remain popular in the future as each new release brings new features and performance improvements\nWhat is Node Js and what is it used for?\nNode Js is a server environment built for fast and easily scalable network applications It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time By using JavaScript, node Js can be put to work by many software developers familiar with JavaScript Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux) Node js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast Examples of applications that use node Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming\nWhat are the advantages of Node Js?\nNode Js is open-source, meaning it’s free code for all developers On top of that, it also means that there is a thriving community of Node Js users and programmers that all add to the knowledge base Many are happy to share their flavor of the code with other developers, and collectively, the Node Js environment continues to be enhanced Because Node Js uses JavaScript, there is a large pool of developers that understand and can code in the environment It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training Node Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable\nWhat does it mean that Node Js is a runtime system?\nA runtime system is a platform where a software program runs It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run) Node Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required Because Node Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time It’s an efficient system, making it the preferred choice for many software and tech companies\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer You will always have up-to-date content for this course at no extra charge\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nAfter taking this course, I decided to adopt Node js as my specialized language/technology Thank you\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nMern Full Stack Project with React, NodeJS, MongoDB, Express course\nWe offer full support, answering any questions\nSee you in the class!",
      "target_audience": [
        "React / Node / JavaScript developers of all skill levels",
        "Anyone who want to learn about Full Stack Web Development",
        "Anyone who want to learn MERN stack",
        "Node developers looking to learn more about front-end technologies (React)",
        "This course is for anyone who is in the software industry.",
        "People who want to become mern stack developer",
        "People who want to create real world mern stack project with react js, mongodb, express js, nodejs",
        "People who want to create real world react projects with express js, node js, mongodb",
        "People who want to create react project with redux, hooks and context",
        "People who want to learn creating mern stack projects with react, express js, mongodb"
      ]
    },
    {
      "title": "Step by Step Admin Panel Development in CakePHP 4 Framework",
      "url": "https://www.udemy.com/course/step-by-step-admin-panel-development-cakephp-4x-framework/",
      "bio": "Beginners Admin Level Project Academics Management System in CakePHP Framework with MySQL database",
      "objectives": [
        "Admin Panel Development from scratch in CakePHP 4 with framework standards",
        "Complete guide for handling CakePHP framework application development",
        "Easy and simple development Procedures for Admin Development Project",
        "Create CakePHP 4 project with MySQL database",
        "Step by Step to learn application workflow development",
        "Easy Handling concept for Auth, Migrations & Routes and all."
      ],
      "course_content": {},
      "requirements": [
        "Beginners knowledge of CakePHP framework of any version & its about MVC pattern",
        "Beginners knowledge of jQuery & Database"
      ],
      "description": "We will learn the complete idea to develop a Step by Step Admin Panel Development in CakePHP 4 Framework. Basic Experience in CakePHP programming required, like about a bit knowledge of MVC. Learn practical skills of Development in CakePHP 4 with mysql database driver.\nBegin your journey of CakePHP 4 Development with MySQL database driver here and create a CRUD based Admin Panel from it.\nIf you have just decided to learn Complete CakePHP 4 then you have made the right choice, so take a breath. Development in CakePHP is very easy to learn which means that you will be through the basics and on to writing standard code in a very short time.\nThis course is a step by step guide through the CakePHP 4 development with MySQL programming language.\n\n\nUnderstanding complete architecture to handle CakePHP framework application with MySQL database\nProject workflow preparation\nDatabase Management learning for an application\nWorking with Auth, Migrations & Seeders\nProject development with quality & standards\nEasy & Simple code standards Integrations\nStep by step learning for each about layout, function & code\nHandling every aspect of a project to a deep level in a very simple concept\nCourse provides the best skill to make standalone project developer\n\n\nAll these topics we'll cover in detail with live coding standards of CakePHP Framework.\nThis course is for every level. For beginners, it will be very perfect to enroll and learn development in very easy steps with detailed concept.",
      "target_audience": [
        "Beginner/Intermediate/Expert CakePHP Framework Learners",
        "PHP Developers"
      ]
    },
    {
      "title": "Better way towards CSS using Less and Sass",
      "url": "https://www.udemy.com/course/better-way-towards-css-using-less-and-sass/",
      "bio": "Learn the CSS pre-processor extension that will make your life a little easier.",
      "objectives": [
        "You will love CSS after taking this course",
        "You will be able to write great CSS in future projects with less efforts"
      ],
      "course_content": {
        "Why CSS is painful": [
          "CSS pain points",
          "COLOR problem in practice",
          "Duplication of values",
          "Nested problems with CSS",
          "No way to calculate",
          "Linking problem",
          "Summary"
        ],
        "LESS": [
          "Introduction",
          "Less on server",
          "Variables",
          "Mixins",
          "Imports",
          "Functions",
          "Namespaces",
          "Nested Rules",
          "Summary"
        ],
        "SASS": [
          "SASS Introduction",
          "Sass on server",
          "Variables",
          "Rule",
          "Imports",
          "Mixins",
          "Extends",
          "Functions",
          "Directives",
          "Summary"
        ]
      },
      "requirements": [
        "You should be familiar with HTML and CSS"
      ],
      "description": "Hello all !\nWelcome to our course this course will develop your skills in maintaining structured stylesheets\nLESS and SASS are the CSS preprocessors which allows web designers for more functional approach towards styling these preprocessors have some great features like variables, mixins, if statements, loops, maths, inheritance and more.\n\n\nYou don't need to understand every concept of LESS and Sass to use it—once you get past the installation and set up, you can start using it right away.\nCoding your CSS with LESS and Sass saves you time—and allows you to write neater, more consistent code. The time you'll spend completing this course will be easily made up on your next web project!\n\nnow a days projects are getting bigger and bigger and more detailed so we need to have some methods to maintain and manage our CSS these preprocessors are very handful in making css more manageable",
      "target_audience": [
        "This course is for front end developers to increase thier performnace and maintainablity of CSS",
        "Also for those who are new in CSS so they can learn new trends of CSS"
      ]
    },
    {
      "title": "MERN Stack Bootcamp 2025: Build 2 Real Projects-Clean Code",
      "url": "https://www.udemy.com/course/mern-stack-authentication-with-oauthjwt-email-verification/",
      "bio": "Mastering Authentication: A Guide to OAuth, JWT, Email Verification, OTP System, Google, Facebook Login with MERN Stack",
      "objectives": [
        "MERN Stack Secure Authentication System",
        "How to Implement Google Authentication",
        "How to Implement Facebook Authentication",
        "How to Activate Your Account After Signing Up Using Email Verification",
        "Secure OTP and Token-Based Authentication System",
        "How to Send Emails Using SendGrid and Nodemailer",
        "How to Write API Endpoints Using Node JS and Express JS",
        "How to Update User Information and Receive Email Notifications for Changes",
        "Resetting Passwords Using an OTP System and Email"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview Project Demo"
        ],
        "Download Resources: Project Source Code": [
          "Authentication Project Source Code",
          "Photo Sharing App Project Source Code"
        ],
        "Photo Sharing App: Project - 1": [
          "Project Overview Demo",
          "Project Setup Part-1",
          "Basic Routes Part-2",
          "DB Connection Part-3",
          "DB Model Part-4",
          "Cloudinary Setup Part-5",
          "Upload Image Part-6",
          "Get All Images Part-7",
          "Update Image Part-8",
          "Delete Image Part-9",
          "Swagger Setup Part-10",
          "Swagger API Documentation Part-11",
          "Swagger Documentation (PUT) Part-12",
          "Swagger Documentation (DELETE) Part-13",
          "Deployment To Vercel Part-14",
          "React Project Initialize Part-15",
          "React Project Tailwind Part-16",
          "Routes Part-17",
          "Application Layout Part-18",
          "React Context Type-safe Part-19",
          "Image Card Part-20",
          "Image Card Options Part-21",
          "Image Up-loader Component Part-22",
          "Image Upload API Integration Part-23",
          "Loader Component Part-24",
          "Fetch Show Images Part-25",
          "Image Modal Part-26",
          "Image Modal Buttons Part-27",
          "Image Title Update Part-28",
          "Image Delete Part-29",
          "Image Gallery Modal Part-30",
          "Image Gallery Modal Functionality Part-31",
          "Skeleton Loader Type-safe Code Part-32",
          "Vercel Deployment Part-33",
          "Push To Git and to Vercel Part-34"
        ],
        "Authentication App-Google,Facebook and JWT: Project - 2": [
          "Project Setup React Part-1",
          "Creating Components Part-2",
          "Setting Up Routes Part-3",
          "Protected Wild Routes Part-4",
          "Designing Signup Component-I Part-5",
          "Designing Signup Component - II Part-6",
          "Form Validation Using Regex - I Part-7",
          "Form Validation Using Regex - II Part-8",
          "Password Show Hide Button Part-9",
          "Designing Login Component Part-10",
          "Project Setup Backend Node JS Part-11",
          "Backend Basic Test Route Part-12",
          "Connecting to The Database Part-13",
          "Creating User Model Part-14",
          "Designing Router Controller - I Part-15",
          "Designing Router Controller - II Part-16",
          "Designing Router Controller - III Part-17",
          "Sending Email Using Node Mailer Part-18",
          "Account Verification - I Part-19",
          "Account Verification - II Part-20",
          "Login Route - I Part-21",
          "Login Route with JWT - II Part-22",
          "Using JWT in React Part-23",
          "JWT MiddleWare In Node JS Part-24",
          "Google Login - I Part-25",
          "Google Login - II Part-26",
          "Facebook Login Part-27",
          "Forgot Password UI Part-28",
          "Forgot Password Send OTP Part-29",
          "Forgot Password OTP Verify Part-30",
          "Forgot Password Set New Password Part-31",
          "Resend Password Reset OTP Part-32",
          "Home Component UI - I Part-33",
          "Home Component UI - II Part-34",
          "Home Component Show User Data Part-35",
          "Home Component Update User Part-36",
          "Home Component Update User Form Completion Part-37",
          "Home Component User Update API Part-38",
          "Home Component Backend Logic Part-39",
          "Loaders Part-40",
          "Basic Fixes and Animations Part-41",
          "Push Code to Github Part-42",
          "Deploy Project Part-43",
          "Deploy Project Testing Part-44",
          "Project Wrap Up"
        ]
      },
      "requirements": [
        "Students Don't Need Prior Coding Skills to Enroll in This Course. Anyone Can Take This Course.",
        "Students Require a Computer or Laptop to Write Code."
      ],
      "description": "Welcome to this in-depth MERN Stack Authentication course, where you will go deeply into the details of security and user authentication with OAuth, JWT, and email verification. This course is intended for developers, regardless of expertise level, who wish to include strong authentication mechanisms into their MERN Stack applications.\n\n\nWhat You'll Learn:\n\n\nGoogle and Facebook Authentication Systems: Learn how to combine OAuth authentication with Google and Facebook to enable users to safely log in with their social network credentials.\nEmail Verification: Discover how to add email verification to your application so that legitimate users are the only ones who can access it.\nOTP System: Learn about One-Time Password (OTP) systems and how to use them to verify and authenticate users securely.\nUpdate User Information: Find out how you protect user privacy and data integrity while enabling users to safely update their profile information.\nSecure API Endpoint Writing: Learn the craft of creating safe Node.js and Express.js API endpoints by applying best practices for permission and authentication.\nYou will have the abilities and know-how to create reliable authentication systems in your MERN Stack applications at the end of the course, guaranteeing the security and accuracy of user data. You'll also learn about sophisticated authentication methods and approaches, which will enable you to keep up with developments in the field.",
      "target_audience": [
        "MERN Stack Developers Interested in Learning Secure Authentication Systems",
        "Developers Wanting to Learn Google and Facebook Authentication Systems",
        "If You Want to Learn Secure OTP and Token-Based Login and Password Reset Systems",
        "Developers Wanting to Learn Secure API Endpoint Development",
        "How to Send Emails After Sign-Up and Sign-In Using SendGrid",
        "How to Deploy a Project to a Cloud Serve"
      ]
    },
    {
      "title": "React Responsive Portfolio Website - Complete React Project",
      "url": "https://www.udemy.com/course/react-responsive-portfolio-website-complete-react-project/",
      "bio": "Build React Portfolio Website, React Context API, Send E-mail from React App, React Hooks, React Packages, React theme",
      "objectives": [
        "You will build a complete responsive portfolio website",
        "You will learn how to send email from react js app using node js, express js , nodemailer and sendgrid",
        "You will learn different kinds of react js hooks",
        "You will learn how to add dark and light theme",
        "React js Context API",
        "How to build responsive website using bootstrap",
        "How to deploy react js project to netlify",
        "How to download cv from your portfolio website"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Demo - Details Explanation of The Project That You Will Build"
        ],
        "Create Project and Design Sidebar": [
          "Part-1 Create Project and Install Bootstrap",
          "Part-2 Sidebar Section File Created",
          "Part-3 Sidebar Expand and Collapse Features",
          "Part-4 Sidebar Expand Profile Picture and Navbar Items",
          "Part-5 Sidebar Navbar Item List Design"
        ],
        "Home Section": [
          "Part-6 Home Section Component",
          "Part-7 Home Section Typewriting Effect",
          "Part-8 Download CV Features"
        ],
        "About Section": [
          "Part-9 About Section Design"
        ],
        "Tech Stack Section": [
          "Part-10 Tech Stack Section API Design and Show Data",
          "Part-11 Random Color Generate for Tech Stack Item",
          "Part-12 Load More Pagination Features",
          "Part-13 Marked Tech Stack Item Based on the Index Position"
        ],
        "Project Section": [
          "Part-14 Project Section API Design",
          "Part-15 Project Section Component and Show All the Data",
          "Part-16 Project Section Accordion Features(Collapse and Show)",
          "Part-17 React onMouseHoverEffect for Project Lists"
        ],
        "Work experience Section": [
          "Part-18 Work Experience Section API Design & Install Vertical Timeline Component",
          "Part-19 Show Work Experience Data Into Vertical Timeline Component"
        ],
        "Education Section": [
          "Part-20 Education Section Show Data in Vertical Timeline Component"
        ],
        "Testimonial Section": [
          "Part-21 Testimonial Section API Design and Installed Slick Slider",
          "Part-22 Implement Slick Slider to Show Testimonial Data",
          "Part-23 Slick Slider Custom Design for Testimonial Section"
        ],
        "Contact From Section": [
          "Part-24 Create Contact Form Section and Design Input Fields",
          "Part-25 Contact Form Design"
        ]
      },
      "requirements": [
        "Students dont need to have any prior knowledge of react js for this course"
      ],
      "description": "Welcome to this react js course. In this course, you will learn how to build a complete responsive portfolio website. After finishing this course you will have a real-world portfolio website and you will learn how to deploy your website to Netlify cloud server so that anyone can from around the world.\n\n\nHere are the lists that you are gonna learn from this  course:\nReact portfolio website.\nContext API to add Dark and Light theme.\nBootstrap to make our website responsive for any device.\nTypewriting effect.\nReact JS Vertical timeline component to show work experience and education section.\nReact js loads more pagination features.\nReact js sidebar with collapse features\nReact js slick slider. You will learn how to show a responsive slider to show testimonials.\nReact js post request to send email from contact form.\nReact js conditional rendering to generate different colors for different items.\nNode js and express js for sending emails from the backend.\nHow to test API endpoint in postman for sending an email.\nReact js animation for different items of our app while loading the first time and scrolling.\nHow to add back-to-top scroll features in react js front end app.\nTheme Features -  Dark theme and light theme for our react js app.\nHow to send email from react js using node js, express js, and send grid.\nReact on mouse Hover effect\nReact js Hooks\nBootstrap to make react js app responsively\nHow to deploy react js app to Netlify.\n\n\nDark and Light theme Features: You will learn how to dynamically change react app theme color. We will use react Context API to add dark and light theme features.\n\n\nReact Accordion Features: You will build react accordion system in the project section.  You will also learn how to mark a single item if the accordion is open and onMouseHover Effect.\n\n\nReact Context API:  We will use react context API to add dark and light theme features.\n\n\n\n\nReact Hooks that you will use to build the complete react js app:\n\n\nuseState\ncreateContext\n\n\nDifferent packages that you will use in this course:\n\n\nReact smooth scrolling -  We will use This package to scroll from one section to another section when user clicks on the navbar.\nTypewriting effect - We will use this package to add different types of writing effects to our app.\nReact slick slider -  We will use this package for our testimonial section where we will show a list of testimonials in the slider. We will also make sure that our slider is responsive to any device.\nReact toastify - To show toast messages to our users when they send emails from the contact form.\nBack-to-top scroll - This package will be used for scroll-to-top features. In a single-page web app, we have many sections on one page. Therefore when our user scrolls to the last section of the page the user again needs to scroll to reach the top section. To solve this problem we will use back-to-scroll features so that they can just click on the button and then it automatically goes to the top section.\nReact reveal - This package will help us to show animation for each item. You will learn how to add animation for any fields in your react js app.\nReact Vertical Timeline Component - To show work experience and education we will use a vertical timeline component with animation and custom design.\nNodeMailer -   To send e-maill we will use nodemailer with node js, express js and sendgrid.",
      "target_audience": [
        "If you want to build a complete portfolio website using react js",
        "If you are learning react js and want to build a complete project",
        "If you want to improve your react js skills",
        "If you want to learn how to build responsive website using react js that will support in any kind of device"
      ]
    },
    {
      "title": "Fullstack GoLang React Insanity Volume 1",
      "url": "https://www.udemy.com/course/golang-react-w-node-mongo-redis-mysql-nginx/",
      "bio": "Ubuntu 19.x Servers React Hooks frontend & GoLang REST / WebSockets Backend with new mongo-go-driver",
      "objectives": [
        "React Golang Redis Nginx Mysql Mongo Node"
      ],
      "course_content": {
        "My Other Courses: What Were Building Vids": [
          "Volume Two Promo Vid 1",
          "Volume Two Promo Vid 2",
          "Design to Reality Vol 1 Promo Vid",
          "Mini Redux Course in Vol 2 Insanity",
          "Insanity Volume 3 Promo"
        ],
        "Introduction": [
          "Introduction",
          "What we are building.",
          "COURSE UPDATE PLEASE WATCH",
          "DOCKER IMAGE DONE!!!!",
          "PLEASE READ",
          "GitHub Resources",
          "USING THE DOCKER IMAGE!!!",
          "DOCKER NOTES",
          "Acquiring a Domain and Remote server",
          "System Setup Basic Ubuntu and Nginx",
          "Finish Nginx Setup Download Node",
          "Plese Read before Node Parcel",
          "Finish Node Parcel and Babel React setup",
          "Starting The NavBar",
          "NavBar Part 2",
          "NavBar + DropMenu",
          "NavBar + Modal Setup"
        ],
        "Mongo / Golang Setup & Finish Drop + Modal": [
          "Install MongoDB, Secure It, Test with Robo3t",
          "Install Go, Write Compile Test First Go Program",
          "Code Compile Go Websocket Server",
          "Code useWs Hook Websocket Client",
          "Implement useWs Hook Send Data(base64) w/ go ( base64 ) decoding",
          "Create API Mongo DB / Code Mongo Connect / Code User / Pass Test",
          "Code Pem Generation / Test Real Websocket JWT Trial Message",
          "Code JWT Generation / Send Real JWT over Websocket"
        ],
        "Modal Alerts / Dynamic Drop Menu / ASYNCQ Package / Signup Validation": [
          "Modal Alerts Part I",
          "Modal Alerts Part II",
          "Modal Alerts Part III",
          "Store JWT to Local Storage Add Navigation Logic Part I",
          "Finish Off Local JWT Storage Profile Icon",
          "Dynamic Menu Items Part I",
          "Dynamic Menu Items Part II",
          "Dynamic Menu Items Part III",
          "Dynamic Menu Items Part IV",
          "Finish Dynamic Menu Items / Add Logout Functionality",
          "Alerts / Email Validation Part I",
          "Alerts / Email Validation Part II",
          "Alerts /Password Validation",
          "Add Create User Functionality",
          "Finish User Creation"
        ],
        "Main Content Section": [
          "Setup Content Area / Hide Drop Menu's",
          "Add Loader Bars",
          "Add Toast Messages",
          "Pty Term Part I",
          "Pty Term Part II",
          "Install Pm2 / Compile gws to full Executable / Finish Pty",
          "Explanation of Pty Code (client/server)",
          "Add Prism Module"
        ],
        "Side Bars": [
          "Side Bars Part I",
          "Side Bars Part II",
          "Side Bars Part III",
          "Side Bars Part IV",
          "Finish The Sidebars",
          "Explanation of Vertical Menu / Filesystem Code"
        ],
        "Admin Sidebar / Redis / SSE / Operations Panel": [
          "Administration Menu",
          "Redis Install / Config",
          "MySql Install Config / PHPMyAdmin install config",
          "Go SSE and Mysql Modules",
          "Start ClientSide Operations Modules / Finish Backend SSE MySql Code Test Run",
          "Final Operations Setup and Test",
          "Final Operations SSE Code Breakdown"
        ],
        "Close Ups Full Project": [
          "GitHub Resources For this Path",
          "Install Nginx and Lets Encrypt",
          "Install Mysql Mongo PHPMyAdmin",
          "Install Node and Go",
          "Install Redis Server",
          "First React App & Nodejs Fun Stuff",
          "Recap Full Server Provision Part I",
          "Recap Full Server Provision Part II",
          "Wire Up Hook Context System",
          "Start NavBar Component",
          "Continue With NavBar Part I",
          "Continue With NavBar Part II",
          "Polish Off NavBar",
          "Quick App Fixes ( Context Brain, DashBoard, Icon Button )",
          "Go Websocket Server",
          "React Context Hook Web Socket Client",
          "Polish Off React Websocket Client And Go Websocket Server",
          "Code The GoLang Create Read Write Delete Files Package",
          "Go Lang Public Key Private Key Genereation",
          "Add UUID to Websocket Clients, Store in Client Context System",
          "Test Jwt Generation & Validation Over Websocket",
          "Login Form Part I",
          "Polish Off Login Form (Part II)",
          "Build Sign Up Form",
          "SignUp Functionality Part I",
          "SignUp Functionality Part II",
          "SignUp Validation Part I (client side)",
          "Polish Off Sign Up Form Validation Send to Server",
          "Challenge One! 4 years later. my bad",
          "Signup Form Serverside Utils Package Base64 Decode Prep",
          "Mongo Package Setup Connect Test",
          "Quick Mongo Fix",
          "Mongo Create User Functionality",
          "Modal Close Show Functionality Part I",
          "Modal Close Show Functionality Part II",
          "Patch Up Sign Up",
          "Start Login Form Functionality",
          "Login Form Validate Credentials Prep User Payload",
          "Refactor Login Process With Jwt and User",
          "Polish Off Login Form / Error Handling and Signup Form",
          "Store Jwt / User Local Stroage after verified",
          "Add Loading Widget",
          "Add Use Stored JWT Code Setup Stored Verification Server Logic",
          "Add Corrupted JWT Logic",
          "Drop Menu's Part One",
          "Setup Content Display Area",
          "Add Show Hide Drop Menu Functionality",
          "Configure UI DB Collection Add Rest Route Wireup Context Axios Call",
          "Finish Rest Route and Mongo Db Component Data Calls",
          "Displaying Drop Menu Elements Part I",
          "Polish Off Drop Menu's ( Styling and Actions )",
          "Pty Term Front End / Back End Part I",
          "Polish Off Pty Term Build Our Full Binary Program Pipe it out",
          "Setup Prism Code Display Component",
          "Prep Backend For FileSytem Frontend Side Components",
          "Documentation Frontend Backend Components Part II",
          "Documentation Frontend Backend Components Part III",
          "Documentation Fronend Backend Components Part IV",
          "Polish Off Documentation Filesystem Component",
          "Polish Off Filesystem Component",
          "Finish Documentation Filesystem Data Pulls & Display",
          "Wireup Admin Sidebar (Component Data Call)",
          "Admin Sidebar Styling and Functionality Part II",
          "Add Database Operations Grid Display",
          "Polish Of Show Hide Database Operations Grid Logic",
          "Add Mysql Go Package Part I",
          "Polish Off MySql Db Functionality, LIst",
          "Websocket Client Connections List Part I",
          "Last Video Of This Course Bye Guys ( Finish Websocket Client List )",
          "The Secret Recipe ;)",
          "About:"
        ],
        "Mini Docker Course :: Creating the pr0con Image": [
          "About:",
          "First Steps",
          "Polish off all docker tools install",
          "Pull Start Build Process",
          "Moving forward installing Services to Image",
          "Polish Image off with Nginx",
          "Commit and Test our Image",
          "Install MySql Prep PhpMyAdmin",
          "Apply Elusive Trick and Watch phpmyadmin light up",
          "Configure Test SFTP and SSH to Container",
          "Install Mongo to Docker Image Part I",
          "Finish Mongo install / Secure It / and Test Connection to image",
          "Configure Redis Server & Test",
          "Setup Final Build Environment Node & Go Push to Docker Hub",
          "NOTE THE LAST Video IS @ THE TOP VERY FIRST SECTION & VID"
        ],
        "Local Slim Build ( no https, domain, or major setup )": [
          "In Development."
        ]
      },
      "requirements": [
        "Internet Access"
      ],
      "description": "This Course is aimed at Ubuntu Servers, Running Go-Lang REST & Websocket services as a back-end platform and React for front-end development. Various technologies will be introduced for data storage and manipulation, including Mongo, MySql and Redis. Nginx will also be introduced and used to give a complete full circle adventure. We will also  build our own Pub Private keys to secure our proof of concept applications. Think of these modules(course curriculum ) as building blocks and proof of concept exercises to fit the pieces together.\nI will be adding a section with zoomed in videos that rebuilds the whole project again in the case depending on your setup the course videos are hard to see.\nI know that this information for a beginner can be tough so I have a You-tube channel setup that will break down each concept into smaller beginner to insane examples. The concepts broken down on the channel being (react, golang, node, ubuntu, nginx, mysql, mongo, etc... etc...) . There will be a lot on other languages as well there.\nhere is the channel: /channel/UCUbgK5E3s4-R57dOpGW1DNA\nits a work in progress so be sure to check back.\nfacebook group: /groups/2465484987043796/\nPlease friend me on Facebook if you would like and i can answer any questions my user name is Zach Isaiah LaCourse.",
      "target_audience": [
        "react and golang hackers or just awsome coders...."
      ]
    },
    {
      "title": "Learn Basics of Python like a Baby",
      "url": "https://www.udemy.com/course/learn-basics-of-python-like-a-babydesigned-by-a-student/",
      "bio": "The only Python 3.0 course you need to learn the basics for a solid foundation",
      "objectives": [
        "Write Python Programs"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction to Python",
          "Course Curriculum",
          "Objective of the course"
        ],
        "Installing python in your Computers": [
          "installing python"
        ],
        "Variables in Python": [
          "Writing Your First Program in Python",
          "Introduction to Python Variables",
          "DataType - String",
          "DataType - Numbers",
          "DataType - Boolean",
          "Variables in Python"
        ],
        "Collections in Python": [
          "Introduction to Collections in Python",
          "Introduction to List",
          "How to Create a List",
          "How to access items in a List",
          "Introduction to List Manipulation",
          "Replacing Elements in a List",
          "Adding elements to a List",
          "Removing Elements from a List",
          "Organizing a List",
          "Introduction to Tuple",
          "Introduction to slicing",
          "slicing a List",
          "Slicing a Tuple",
          "Introduction to Sets",
          "Creating a set in Python",
          "Changing a set",
          "Set Operations",
          "Introduction to Dictionary",
          "Create a Dictionary in Python",
          "How to access dictionary elements",
          "Change or Add elements in a Dictionary",
          "Delete or Remove elements from Dictionary",
          "Python Dictionary Methods",
          "Quiz on collections in Python"
        ],
        "Flow Control in Python": [
          "Introduction to Flow Control",
          "Code Blocks and Indentation",
          "Repititive Execution => If statement",
          "Repititive Execution => If - Else Statement",
          "Repititive Execution => If - Elif - Else statement",
          "Checking for Equality",
          "Checking for InEquality",
          "Checking for Multiple Conditions",
          "Loops => FOR Loop",
          "Loops = > While Loop",
          "Else Statement with For Loop",
          "Else Statement with While Loop",
          "Range Function",
          "Break Statement",
          "Continue Statement",
          "Pass Statement",
          "Quiz on Flow Control"
        ],
        "Program Structure in Python": [
          "Introduction to Program Structure",
          "Functions in Python",
          "Lambda Functions",
          "Quiz on Program Structure"
        ],
        "Modules in Python": [
          "Introduction to Python Module",
          "Storing and Retrieving Functions",
          "Python Modules",
          "Creating a module",
          "Importing Module",
          "Quiz on Python module"
        ],
        "File Handling": [
          "Introduction to File Handling in Python",
          "File Open function",
          "File Object Attributes",
          "Close Method",
          "Reading and Writing Files",
          "File Position",
          "Quiz on file handling"
        ],
        "Exception Handling in Python": [
          "Introduction to Exception Handling in Python",
          "What is an Exception ?",
          "Try and Except block",
          "Except with no Exception",
          "Try finally statement",
          "Quiz on Exception handling"
        ]
      },
      "requirements": [
        "Anyone interested to learn Python can be a student of this course"
      ],
      "description": "Python is a very simple yet extremely powerful programming language. It is a scripting language that is widely used for prototyping to get work up and running in a short amount of time.\nThis course assumes no programming experience and slowly builds the skills you need to take on larger challenges.\nThis course is divided into below chapters\nBasics of Python Programming Variables (Numerical/Boolean/String) Collections (Lists/Tuples/Sets/Dictionaries) Flow Control (For Loops/While Loops / Repetitive Execution/Conditional Execution/Iterative Execution) Program Structures(Named Functions/Anonymous(Lambda Functions)/Generator Functions Libraries\nEvery lecture will explain the fundamentals in detail before taking you to actual code execution.\nBy the end of this course, you will be a mature Python programmer. Make use of the expertise to design programs of your choice and be ready to take your Python skills in any direction that you need.",
      "target_audience": [
        "Beginners who have never programmed before"
      ]
    },
    {
      "title": "Beginners Guide to Codeigniter",
      "url": "https://www.udemy.com/course/codeigniter-learn-it-correct/",
      "bio": "Learn Codeigniter starting from the basics correctly with this Codeigniter tutorial for beginners.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Codeigniter",
          "Refer the Codeigniter User Guide"
        ],
        "Basic Concepts": [
          "Theory behind Codeigniter - MVC",
          "Routing Basics"
        ],
        "Codeigniter Basics": [
          "Controllers",
          "Views",
          "Models",
          "Helpers",
          "Libraries",
          "Using Static Files"
        ],
        "Using the Database": [
          "Introduction to Databases",
          "Connecting",
          "With SQL",
          "With Active Records"
        ],
        "Mini Project": [
          "Introduction",
          "Creating the Database",
          "Creating the base template",
          "Adding a Blog Post - Part 1",
          "Adding a Blog Post - Part 2",
          "Loading all the posts",
          "Loading a Single Post",
          "Delete Post Functionality",
          "Recap + Exercise",
          "Source Code with Database SQL"
        ],
        "Security": [
          "XSS Prevention",
          "SQL Injection Prevention",
          "Hiding PHP Errors",
          "Form Validation",
          "CSRF Prevention"
        ],
        "Configuration": [
          "Config Files",
          "Autoloading",
          "Remove index.php",
          "Change Application Folder",
          "Advanced URL Routing"
        ],
        "Extend Codeigniter": [
          "Creating a library",
          "Extend a library",
          "Adding a helper",
          "Extend a helper",
          "Extending Core Classes"
        ]
      },
      "requirements": [],
      "description": "Codeigniter is one of the most popular and mature PHP frameworks.\nWith this Codeigniter tutorial for beginners, you'll be learning codeigniter from the basics, correctly. After following this Codeigniter tutorial, you will be able to customize codeigniter to suit your needs and build your project with codeigniter like a pro.\nThroughout this project we are working with a Mini Project. It is help us to apply things we've learned. So you can not only gain knowledge but you can see how  they can be applied in real life too.\nTime is more valuable than money. I prepared this Codeigniter tutorial course to be very effective, so you can learn everything you need to know about codeigniter in less time.\nCourse will be mostly on videos, and you can download related materials too.\nRequirements\nBasic knowledge in PHP (try this course for learning PHP)\n\nBasic knowledge in WAMP/LAMP/MAMP and MySQL will be helpful\n\nLearn Codeigniter correctly and get most out of it with this Codeigniter tutorial.\n( I'm not a native English Speaker - But I try to make it clear as possible as I can )",
      "target_audience": []
    },
    {
      "title": "#1 Complete ASP.NET Core MVC Single-Page App[The Future]",
      "url": "https://www.udemy.com/course/toufiqelahy/",
      "bio": "Turn Any ASP.NET MVC Or ASP.NET Core App Into Single Page Application [WITHIN 2 MINUTES] with toufiqElahySPA.js Plugin",
      "objectives": [
        "Building a Powerful and most Complex Single-Page application Within 1 hour",
        "Creative way to make single-page application(less code, do more)",
        "Making Cross-Platform Single Page Application with .NET Core",
        "How toufiqElahySPA .js plugin can turn any Web application into Single-Page Application within 2 minutes",
        "How this Course will minimize development time and cost a lot",
        "How to run .Net Core Single-Page application in Linux",
        "How Single-page technique will improve the Software performance",
        "How toufiqElahySPA .js plugin will make developer's life lot simple"
      ],
      "course_content": {
        "Introduction": [
          "Running Final Project + Why you Should take this Course"
        ],
        "Single Page Application Within 2 Minutes": [
          "Initial Setup"
        ],
        "Learn toufiqElahySPA.js Plugin Within 10 Minutes": [
          "1st rule to display Ajax Response anywhere",
          "2nd rule to play with Ajax Response",
          "3rd rule to do anything before calling Ajax method",
          "4th rule to work with bootstrap modal",
          "5th rule to stop calling Ajax method"
        ],
        "Developing Instructor Page": [
          "Improving Performance both on Server and Client side",
          "solve complex scenario using the plugin"
        ],
        "Developing Student Page": [
          "partial content can be displayed anywhere easily",
          "updating single row is better than multiple rows",
          "updating single record is better for performance",
          "deleting single row",
          "adding courses to specific student",
          "delete associated course of the student"
        ],
        "Developing Course Page": [
          "appending multiple Forms dynamically",
          "adding multiple records",
          "updating multiple records",
          "deleting row dynamically"
        ],
        "Developing Department Page": [
          "partial content in modal window",
          "adding department record from modal window",
          "editing department record",
          "deleting department record"
        ],
        "Let's see everything in 1 Page": [
          "End of the Project"
        ],
        "Final Demo Project": [
          "Demo Project running in Windows 10",
          "Demo Project running in Linux(Ubuntu 16.04)"
        ],
        "Evidence: Single Page Application Within 2 minutes": [
          "ASP.NET MVC 5(real world) Single Page Application Within 2 Minutes",
          "toufiqElahySPA.js plugin applied in Real World ASP.NET-MVC 5 Application"
        ]
      },
      "requirements": [
        "Developer must have experience with Building ASP .NET Core or ASP. NET-MVC application",
        "Developer Must go through Microsoft documentation: \"Getting started with ASP .NET Core MVC and Entity Framework Core using Visual Studio\"",
        "Developer should have basic knowledge: How ASP. NET-MVC application works",
        "Developer should have little experience in C#, Linq",
        "Visual Studio 2015 or Visual Studio 2017 is highly preferable",
        "Good Experience with jQuery is Mandatory"
      ],
      "description": "Caution: Each Student will need to purchase The Plugin which is not belongs to this Course. I have used paid Plugin on this Course.\nI HELP ALL STUDENTS VIA TeamViewer USING Skype CALL TO FIX ALL INITIAL ISSUES.\nI’m always updating this course with fresh content, too..\nIt’s no secret how technology is advancing at a rapid rate. New, more powerful hardware and software are being released every day, meaning it’s crucial to stay on top with the latest knowledge.\nThat’s why I’m always adding new, up-to-date content to this course at no extra charge. Buy this course once, and you’ll have lifetime access to it and any future updates (which are on the way as we speak).\n\n\nCreative way to turn any version of ASP.NET-MVC or ASP.NET Core Application Into Single-Page Application Within 2 minutes after using my (toufiqElahySPA.js)Jquery Plugin. Here, toufiqElahySPA.js is a Jquery Plugin which is responsible to turn any web application into single page application. I developed this Plugin to minimize developer's effort while working on Creating Single Page Application. Let's see, how my Plugin can make developers life better.\nSingle page applications are more capable of decreasing load time of pages and the amount of data transfer from server to client.\nWhy This Course?\nThere are several pain points while working with Javascript framework like AngularJs, React, VueJs, Knockout, meteor e.t.c. in a ASP.NET MVC application in order to create Single-Page Application. Few Pain Points Are:\nNeed to specify routing for each request\nNeed to modify Server side technology according to Javascript framework\nOnly possible to debug on run time\nHard-coded data-binding caused too many error\nIncrease the complexity a lot\ndeveloper no need to learn any javascript framework and also no need to write much Jquery code to make Single Page Application after using my Jquery Plugin(toufiqElahySPA.js).\nNote: developer can also use other JavaScript framework(angularjs, knockout, react e.t.c.) side by side with my Jquery Plugin. But no need, i will prove.\nI applied the Plugin in a .NET Web application. This plugin will also work for Other Web Technologies too. I will show in my future course.\n90% of time Developer no need to Create View-model Classes.\nThis course is so important to Developer who loves:\nStrongly Typed data-binding(Razor code)\nCompile time error checking,\nauto code completion(IntelliSense),\nRe-usability ,\nnot to get Run-time error unexpectedly\nto get rid from complexity should definitely take this course.\nWhy (toufiqElahySPA.js)Jquery plugin is better than any JavaScript framework:\n(1) Developer won't need to write too much Javascript code after using my plugin wheres developer usually writes too many javascript code while working with AngularJs(javascript framework)\n(2) Developer won't need to write Jquery ajax code because the plugin has ajax function specified which will be called automatically as a common function\n(3) Developer won't need to specify routing as like AngularJs because My plugin will follow ASP.NET MVC routing by default.\n(4) Developer can learn using my plugin easily and quickly. just need to follow only 5 rules of my plugin and any complex scenario can be achieved through this plugin like AngularJs [i will prove]\n(5) Developer can also make Single-Page app even not following those 5 rules of the plugin. Those rules are for critical situation. First 2 rules is enough to solve any heavy lifting work.\n\nWhat technology is used in front-end?\n\nMainly Jquery\nHTML & Razor Code\nWhat technology is used in back-end?\n\nc#, Linq\nASP .NET-MVC Core\nEntity Framework Core\nWhat tools you will need?\nAny Version of Visual Studio will Work but try to get Latest Updated Version\nASP.NET Core 2.0 will need to be installed in your Machine\nAny browser Whatever you like most\nWhy I applied My Plugin to Asp .NET Core application:\nCross-platform needs.\nHigh-performance and scalable systems.\nAll coding best practices (asynchronous programming, dependency injection)\nWithin this course I will Show:\nHow powerful and complex cross-platform single page application we can build with my Plugin  And how my SPA technique can improve the Software performance both on server and client side.\n\nHow toufiqElahySPA.js(jquery plugin) works:\nIf End user click any Link or submit any Form or click Backward or Forward button on browser, the common ajax function of the Plugin will be invoked automatically.\n5 rules of the plugin to handle critical situation:\nI will explain all these 5 rules in 10 minutes within this course. True fact is: learning these 5 rules are enough to learn this entire Course. Learn By Doing.\nMoney-Back Guarantee:\nAfter taking this course, if any student fail to achieve his goal, i will refund. Make sure you followed my video's and source code and specially my 5 rules. If something is still unclear, you can ask question in the forums, i will reply. Happy Coding!\n\nI hope! You will Enjoy this magic Course.\nImportant Notice:\ni want to ensure all the Student that my Plugin(toufiqElahySPA.js) will not be responsible for any server related error while applying the Plugin(toufiqElahySPA.js)  in your own Project. you may just need to modify toufiqElahySPA.css according to your application need. If you get a server related exception that means your implementation has problem which need to be fixed. Don't ever think that the Plugin maybe the reason for this exception.\nplease, give good ratings and comments if you want to get this type of creative and unique course in future. Good feedback will definitely encourage me to make more course on Udemy. Thank you!\nNotice(to all):\nIf i don't get good ratings and comments, i will not able to get inspired to share more content. if u really want to get Advanced Topics . please give me true ratings and comments.",
      "target_audience": [
        "Students who loves Strongly Typed, Compile time error checking, auto code completion(IntelliSense)",
        "Students who are tired of working with AngularJs,React,VueJs,Knockout in .NET MVC application",
        "Students who want to turn any Web application Into single-page application Within 2 Minutes",
        "Students who don't want to waste their time in learning any Javascript Framework like angular 2/4, react, knockout e.t.c.",
        "Students who want to learn building single-page application only with jQuery",
        "Students who don't want to learn much Front-end Stuff in building Single-Page Application",
        "Students who want to create cross-platform single page application with .NET Core",
        "Students who is looking for creative way to solve his daily life problems easily"
      ]
    },
    {
      "title": "CSS3 Masterclass: Your Complete Beginner to Advanced Class",
      "url": "https://www.udemy.com/course/the-ultimate-css-3-bootcamp/",
      "bio": "The easiest way to learn CSS3 step-by-step from scratch. You will be developing 50+ simple projects during this course.",
      "objectives": [
        "Styling Module",
        "Color Module",
        "Text Module",
        "Fonts Module",
        "Selectors",
        "Pseudo Classes",
        "Generated Contents",
        "Specificity",
        "Values & Units",
        "List Styles",
        "Box Model",
        "Background Module",
        "Gradients",
        "Display Module",
        "Positioning Module",
        "Filters Module",
        "Clipping & Masking",
        "Blending Modes",
        "Shapes Module",
        "Table Layout",
        "Transformation",
        "Transition & Animations (Keyframes)",
        "Media Queries",
        "Newly Introduced CSS 3 concepts",
        "You will be getting lots of resources during the course",
        "You will be developing 50+ simple projects",
        "You will get a free ebook for CSS 3 references and tools",
        "Get helpful support in the course Q & A"
      ],
      "course_content": {
        "00. First thing first :)": [
          "Course Introduction",
          "Project Showcase 0",
          "Project Showcase 1",
          "Project Showcase 2",
          "Project Showcase 3",
          "Project Showcase 4",
          "Project Showcase 5",
          "Project Showcase 6",
          "First Thing First"
        ],
        "01. Styling Module": [
          "Introduction to CSS 3",
          "Environment Setup",
          "Inline Styling",
          "Internal or Embedded Styling",
          "External Styling",
          "Recap"
        ],
        "02. Color Module": [
          "Color Format",
          "Opacity and Transparency",
          "Recap"
        ],
        "03. Text Module": [
          "Text Module 1",
          "Text Module 2",
          "Text Module 3",
          "Text Module 4",
          "Text Module 5",
          "Text Module 6",
          "Text Module 7",
          "Text Module 8",
          "Recap"
        ],
        "04. Fonts Module": [
          "Fonts Module 1",
          "Fonts Module 2",
          "Fonts Module 3",
          "Recap"
        ],
        "05. Selectors": [
          "Selector Module 1",
          "Selector Module 2",
          "Selector Module 3",
          "Selector Module 4",
          "Recap"
        ],
        "06. Pseudo Classes": [
          "Pseudo class 1",
          "Pseudo class 2",
          "Pseudo class 3",
          "Pseudo class 4",
          "Pseudo class 5",
          "Pseudo class 6",
          "Pseudo class 7",
          "Pseudo class 8",
          "Pseudo class 9",
          "Pseudo class 10",
          "Pseudo class 11",
          "Pseudo class 12",
          "Pseudo class 13",
          "Pseudo class 14",
          "Recap"
        ],
        "07. Generated Contents": [
          "Generated Content 1",
          "Generated Content 2",
          "Generated Content 3",
          "Recap"
        ],
        "08. Specificity": [
          "Specificity 1",
          "Specificity 2",
          "Specificity 3",
          "Specificity 4",
          "Specificity 5",
          "Specificity 6",
          "Specificity 7",
          "Recap"
        ],
        "09. Values & Units": [
          "Values and Units 1",
          "Values and Units 2",
          "Values and Units 3",
          "Values and Units 4",
          "Values and Units 5",
          "Values and Units 6",
          "Values and Units 7",
          "Values and Units 8",
          "Recap"
        ]
      },
      "requirements": [
        "This is a beginner to advance course — You do not have to worry about anything , this is from scratch",
        "Any computer and OS will work — Windows, macOS or Linux",
        "There is no need for any paid software — The text editor you already have works just fine",
        "During this course we are going to use free tools, so you do not have to buy anything. :)",
        "No CSS 3 knowledge is required at all for this course! You will learn it all in this course!"
      ],
      "description": "Are you looking to enhance your skills by trying out new Typeface, Colors, Effects, animations and lot more or you want to crack your UI interviews?\n\nHave an idea about colors, effects, animations but don’t know how to implement it.\n\nDon’t worry here is one stop solution to all your queries.\n\nThe very first thing you need to know is, a website without CSS3 is just like a skeleton without body. This course will first give basic understanding of designing your website with the greater effects to grab the end users concentration.\n\nCurious to know in detail about your course? Please check out the detailed description of the topics that are covered in course.\n\nFirst things First\nI will take you through a quick tour to let you know what are the topics covered. Apart from this you can find multiple projects which you will be able to do after your end of course. I have even provided a file for answers to the exercises that are asked to be solved in between the course.\n\nThe main beauty of this section is, you can find many references which makes your way of learning easier. I believe “Learning is always fun “, thus I have included many Brain Hunt’s as well, trust me! It’s quite interesting and fun to resolve them.\n\nStyling Module\nIn this part, you're going to explore options for styling guide, you’ll create a new page component and style that page component using a CSS styles. You will learn to use when, where and how to use these styles.\n\nColor Module\nThis part contains color format, opacity and transparency.\n\nText Module\nIn this section you will get to know more about writing mode , directions , orientation, shadows, letter spacing , word spacing and many more.\n\nFonts Module\nThis includes how to import google forms. Along with this you will learn about font family, size, weight , custom font loading.\n\nSelectors\nSelectors makes work much easier! Types of selectors and how to use them is explained in this section with the concepts universal, type, class, ID, Attribute Selectors. Along with child, next sibling combinatory.\n\nPseudo Class & Element Selector\nThis section contains location pseudo class, user action, input, Lang pseudo class.\n\nGenerated Contents\nThis section involves topics like string, image, counter, attribute, Unicode character entities.\n\nSpecificity\nIn this section you will get to know more about naming convention and case sensitivity, selector’s specificity, BEM Design pattern, specificity hack.\n\nValues & Units\nThis section covers distance units, quantities, functional notations.\n\nList Styles\nIn detail explains you about how to style a list using style position, style image, style type.\n\nBox Model\nExplains about width & height, min & max width, border, padding, rounded corners, overflows, Box-Shadow and many more.\n\nBackground Module\nDiscusses about Background color, image, repeat, position, attachment, clip, size, origin.\n\nGradients\nHow to apply gradients? And the types are gradients available.\n\nDisplay Module\nHow to display block, inline block, none and visibility.\n\nPositioning\nHow to position an element by using floats, clear, all positioning, and box offset functionality.\n\nFilter Modules\nHow to apply filters using filter property and filter functions.\n\nClipping and Masking Module\nIn detail about clipping and masking functionality.\n\nBlend Mode Module\nHow to blend things using mix blend mode, background blend mode and much more about lighten group, contrast group, darken group, inversion group & component group.\n\nShapes Module\nIncludes all shape methods.\n\nTables Module\nExplains in detail about how to border collapse/separate, border spacing, caption side, empty cells, table layout.\n\nTransformation\nIncludes transform origin, 2D-transformation, 3D-transformation.\n\nTransition & Animations\nIncludes Transition property, transition duration, transition timing function, transition delay animation name, animation duration, animation timing function and many...\n\nMedia queries\nViewport / page dimension features.\n\nAdditional topics\nBox reflect, text stroke, backdrop filter, variable fonts, background-clip: text, cursor, pointer events, user select.\n\nAnd you have awesome tools for CSS, resources and a project to start after the finish of the course.\n\nHappy Learning!\nAll the Best",
      "target_audience": [
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website",
        "Designers who want to expand their skill set into CSS 3",
        "Web developers who want to update their CSS skills to the most modern and advance level",
        "Developers who want to finally understand how CSS works under the hood",
        "In general: anyone who wants to learn CSS 3",
        "People who are interested in publishing their own websites and mobile apps",
        "This course is best suited for beginner-level students interested in the latest developments in CSS 3",
        "Anyone who wants to learn CSS 3 for the first time or wants to enhance their CSS skills",
        "Anyone who is excited to learn about the latest CSS 3 features",
        "Anyone who knows CSS but wants to dive deeper and learn more about CSS 3"
      ]
    },
    {
      "title": "React + TypeScript: Essential Training",
      "url": "https://www.udemy.com/course/react-typescript-essential-training/",
      "bio": "Modern Web Development: Mastering Components, Forms, Routing, and API Integration using React with TypeScript",
      "objectives": [
        "Fundamentals of React with TypeScript",
        "Create modern, responsive web user-interfaces and web apps using React",
        "Managing states in React",
        "Respond or request to a back-end API in React",
        "Respond to DOM events in React",
        "Learn to use TypeScript along with a React project.",
        "Creating and managing React components",
        "Use TailwindCSS For Styling",
        "Creating real-world production ready web apps",
        "Defining data types with TypeScript",
        "Creating and interacting with forms in React",
        "Form validations in React",
        "Error handling and debugging",
        "Using third-party NPM libraries to extend the functionality of your app",
        "Persist data in browser's local storage",
        "Deploy a React app into production (Vercel)",
        "Deploy a React app into production (Self-Manged VPS server)",
        "Create Single Page Applications (SPA) in React",
        "Create App Routes Using React Router"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Prerequisites"
        ],
        "Getting Started": [
          "What is React?",
          "Setting Up the Development Environment",
          "Creating Your First React App",
          "Overview of Project Structure",
          "React Under The Hood"
        ],
        "React Components: Essential Lessons": [
          "Introduction",
          "Create A React Component",
          "React Fragments",
          "Displaying List of Data",
          "Conditional Rendering",
          "Handling DOM Events",
          "Working On Component State",
          "Passing Data Via Props",
          "Passing Functions Via Props",
          "The Difference Between Props and State",
          "Passing Children To A Component",
          "Introducing the React Dev Tools",
          "Optional Props and Setting Default Prop Values",
          "Exercise: Build an Alert Banner - Starting Project",
          "Exercise: Build an Alert Banner - Solution!",
          "React Components: Quiz"
        ],
        "Adding Styles To Components": [
          "Introduction",
          "Styling with Vanilla CSS and Organizing Stylesheets",
          "Fixing Style Conflicts with CSS Modules",
          "Applying Inline CSS",
          "Styled Components in React",
          "Using CSS Frameworks",
          "React Icons and Other Assets",
          "Exercise - Styling Cards",
          "Styling",
          "Assets"
        ],
        "State Management": [
          "Introduction",
          "Understanding the State Hook",
          "State Structures",
          "Pure Components",
          "React Strict Mode",
          "Working with State - Updating Objects",
          "Article: Spread Operator in JavaScript",
          "Working with State - Updating Nested Objects",
          "Working with State - Updating Arrays",
          "Working with State - Updating Array of Objects",
          "Sharing States with Other Components",
          "Extracting Interface Props",
          "Using Immer To Simplify State Updates",
          "Exercise - Updating Object, Nested Object, Array"
        ],
        "Working with Forms in React": [
          "Introduction",
          "Building Forms and Handling Form Submissions",
          "Accessing Form Input Fields",
          "Using the State Hook to Handle Input Fields",
          "Quickly Build Forms Using React Hook Form",
          "Validating Form Inputs",
          "Schema-Based Validation Using Zod",
          "Enabling Form Controls When Validated",
          "Exercise - Login Form Validation"
        ],
        "Project - Building A Journaling App": [
          "Preview - Journaling App",
          "Scaffolding the App, Setting Up TailwindCSS Auto-Class Sorting",
          "Building the Tab Component (DaisyUI Tab Component)",
          "Building the Add Journal Entry Form Using DaisyUI Components",
          "Adding Input Validations to the Journal Entry Form",
          "Store the Journal Entry to the LocalStorage",
          "Show A Success Dialog After Publish",
          "Displaying Journal Entries in a Grid Format",
          "Improve Journal List User-Experience and Use Custom Font",
          "View the Journal Entry - Part 1",
          "View the Journal Entry - Part 2",
          "Delete the Journal Entry"
        ],
        "React Router - Building A Single Page Application (SPA)": [
          "Introduction",
          "Installing and Setting Up React Router",
          "Building Router Navigation",
          "Route Parameters",
          "Managing Document Head, Title and Meta Tags",
          "Using React Helmet For Document Head"
        ],
        "Connecting to a Back-End API": [
          "Introduction",
          "Understanding the Effect Hook",
          "The useEffect Dependencies",
          "useEffect Clean Up",
          "Fetching Data From Remote API",
          "Understanding the HTTP Requests",
          "Error Handling",
          "Async and Await",
          "Cancelling An HTTP Request",
          "Show A Page Loader",
          "Delete Data with HTTP DELETE Request",
          "Creating Data with POST Request",
          "Updating Data with PATCH Request",
          "Creating A Reusable API Client",
          "Creating A User Service",
          "Creating A Global HTTP Service",
          "Creating A Custom Hook For Data Fetching"
        ],
        "Deploying To Production": [
          "Introduction",
          "Deploying To Vercel",
          "Deploying To VPS Server With Automatic Deployments via Github Actions"
        ]
      },
      "requirements": [
        "This course requires students to have a basic knowledge of HTML, CSS, and JavaScript.",
        "Familiarity with TypeScript is nice to have, but NOT required.",
        "A stable internet connection to create a fresh React project and install third-party packages.",
        "A Mac or Windows Computer (Laptop or Desktop)"
      ],
      "description": "ReactJS + TypeScript: Essential Training is your beginner-friendly entrance into the exciting world of web development, specifically tailored to make learning React with TypeScript approachable and fun. This course is crafted to guide beginners through the essentials of building dynamic web applications, ensuring a gentle learning curve without overwhelming technical jargon.\nStarting with React, the heart of this course, you'll dive into creating components—the fundamental elements that bring your web applications to life. We place a strong emphasis on practical skills, such as managing component states, which is crucial for creating responsive and interactive user experiences. You'll also master the art of building forms in React, a vital skill for gathering user input and feedback.\nNavigation within your application won't be a mystery for long; with React Router, you'll effortlessly add navigation and routing capabilities, significantly enhancing the user experience. Connecting your application to backend APIs will open up a new world of possibilities, allowing your applications to interact with external data and services.\nDeploying your application might seem daunting, but we'll walk you through the process step-by-step, ensuring you're ready to launch your project with confidence. When it comes to TypeScript, we introduce its fundamentals in a straightforward, easy-to-understand manner, highlighting how it can make your development process more efficient and your applications more reliable.\nBy the end of this course, you'll have a solid foundation in React with TypeScript, equipped with the skills to embark on your development projects. ReactJS + TypeScript: Essential Training is not just a course; it's your first step into a broader world of web development, ready to open doors to endless possibilities.",
      "target_audience": [
        "This course is for beginners in front-end development who are eager to learn React as their preferred JavaScript library/framework..",
        "Students who wants to learn how to leverage TypeScript in their React apps.",
        "For learners eager to quickly master the core principles of React, aiming to begin developing React applications within just a few hours of instruction.",
        "A beginning ReactJS developer who want to utilize TypeScript to make their codebase less error prone."
      ]
    },
    {
      "title": "Hands-On Application Development with React and Bootstrap",
      "url": "https://www.udemy.com/course/hands-on-application-development-with-react-and-bootstrap/",
      "bio": "Fast frontend development with React and Bootstrap; build fluid reactive and responsive websites",
      "objectives": [
        "Install the required dependencies for a React App that uses Bootstrap 4",
        "Use JSX to code your markup in a very natural way (as opposed to the usual approach)",
        "Create your own React user login and registration component containing elements from the Bootstrap 4 library",
        "Build a user interface out of components instead of the traditional jQuery and Document Object Model",
        "Work with an integrated testing server running on Node .js to create a production build",
        "Publish your web application using a production build script"
      ],
      "course_content": {
        "Getting Started With Create-React-App": [
          "Course Overview",
          "Prerequisites and Software",
          "Exercise Files",
          "Previewing the Finished App"
        ],
        "Laying the Foundation: Building Out the Navigation": [
          "Install and Run Create-React-App",
          "Introduction to JSON Server",
          "Using Faker to Generate Random Test Data",
          "React Component State",
          "React’s Component Life Cycle",
          "Creating a React Component with ES6",
          "Fetching Data with Axios",
          "Testing Our Code",
          "Reviewing the Site’s Structure",
          "Adding the Navbar Placeholder",
          "Stubbing the Home Component",
          "Stubbing the Image Carousel",
          "Stubbing the Vehicle Browser",
          "Creating the Footer",
          "Introduction to React Router",
          "Working with React Router"
        ],
        "Creating Your Own React ES6 Components": [
          "Reactstrap Overview",
          "Adding a ReactstrapNavbar",
          "Changing the Navbar Sample Code",
          "Adding Font Awesome",
          "Introduction to React Properties",
          "Making the Navbar Data-Driven",
          "Adding an Image Carousel",
          "Copying the Asset Files",
          "Using React Router with Properties",
          "Data-Driven Site Carousel",
          "Using Layout Components to Build the Vehicle Browser",
          "Making the Vehicle Browser Data-Driven"
        ],
        "UX Made Easy with Nested Components": [
          "Forms versus Input Groups",
          "Stubbing the Dealer Locator Component",
          "Working with Input Groups",
          "Input Group Events Handlers",
          "The Table Component",
          "Working with Lists",
          "List Items with Badges",
          "Adding an Inquiry Form - Part 1",
          "Adding an Inquiry Form - Part 2",
          "Posting with Axios -Part 1",
          "Posting with Axios -Part 2"
        ],
        "Building and Publishing Your ES6 React App with Babel": [
          "Create the Vehicle Detail Component - Part 1",
          "Create the Vehicle Detail Component - Part 2",
          "The Build and Price Component (Tabs) - Part 1",
          "The Build and Price Component (Tabs) - Part 2",
          "Collapsing Media Container - Part 1",
          "Collapsing Media Container - Part 2",
          "Pick a Model - Part 1",
          "Pick a Model - Part 2",
          "Color Picker",
          "Engine Picker Dropdown - Part 1",
          "Engine Picker Dropdown -Part 2",
          "Modals",
          "Cleaning Up Warnings",
          "Production Build and Conclusion"
        ]
      },
      "requirements": [
        "No prior knowledge of React and Bootstrap is assumed."
      ],
      "description": "React is one of the most popular front-end JavaScript library for interactive web applications. Bootstrap 4 is a free HTML, CSS, and JavaScript framework that allows developers to build responsive, mobile-first websites. Integrating Bootstrap with React allows web developers to write much cleaner code, thus reducing the time spent on the frontend. In this course, the author, Bruce Van Horn, will help you gain a thorough understanding of the Bootstrap framework and will show you how to build impressive web apps. You will build a website with UI elements such as image galleries and custom pricing/shopping tools along with Bruce. He will show you how to use HTML, ES6, CSS, React, and Bootstrap 4 to build your own dynamic website.\nBy the end of the course, you will be able to build real-time responsive web apps using React and Bootstrap and will have learned to use the ES6 Syntax.\nAbout the Author\nBruce M. Van Horn II is a professional software engineer with over 30 years of programming experience developing large scale commercial applications used by millions of unique users every day. He works as the lead developer for Clear Technologies, in Dallas, Texas, as the engineering lead for Clear Technologies’ Visual Storage Intelligence product. For 25 years, he has also taught evening classes at the collegiate and university level in various programming, animation, and multimedia disciplines. He currently teaches Full Stack Web Development at Southern Methodist University.\nWhen not writing code or wrangling his two young daughters, he enjoys working on video game designs and creating CGI based art and animation.",
      "target_audience": [
        "This course is for front-end developers with a working knowledge of HTML / CSS and JavaScript"
      ]
    },
    {
      "title": "GO (golang): Develop Modern, Fast & Secure Web Applications",
      "url": "https://www.udemy.com/course/go-golang-develop-modern-fast-secure-web-applications/",
      "bio": "A comprehensive introduction to developing fast & secure web applications in GO (beginners & fairly advanced developers)",
      "objectives": [
        "How to build modern, fast, and secure web applications in Google's GO programming language",
        "How to code your programs in the GO (golang) programming language",
        "How to organize your application in GO while developing correctly",
        "Integrate 3rd party packages with GO Modules",
        "Write plain JavaScript without depending on something like jQuery",
        "Creating HTML pages using HTML5",
        "Creation and usage of Cascading Style Sheets (CSS)",
        "How to write tests in GO",
        "Brief insight in creating Entity Relationship Diagrams",
        "Using \"migrations\" (and FIZZ) to build a develpoing environment for a PostgreSQL database",
        "How to setup and connect to a PostgreSQL database (server) in GO",
        "Managing sessions in GO",
        "Learn best practices for security in web applications",
        "Create and use of middleware in GO",
        "Implementation of secure user authentication in GO",
        "Deployment of a GO web application to a real server",
        "Setup of Caddy 2 as Reverse Proxy with HTTPS",
        "Many other competencies a full-stack developer should have"
      ],
      "course_content": {
        "Introduction": [
          "Allow Me To Introduce Myself - The “whoami” For Udemy Courses",
          "Why GO Of All Things? Why Not Node.js Or Another Programming Language?",
          "Installation Of GO And Setup Of A Free Integrated Development Environment (IDE)",
          "Learning Notes On This Course",
          "Accompanying Course Outline As PDF (Also Available On Github)",
          "Brief Section And Content Overview",
          "Basic Sources Of Information On The Web About GO And Used Software"
        ],
        "Brief Dive Into Go As A Crash Course": [
          "Take This Hint And This One, And This One Too!",
          "Hello, World",
          "Variables - First Things First",
          "All Functional?",
          "Pointer – Pointing The Finger At Others",
          "The Shadow World - It's Always About Types And Structs",
          "Receiver - The Madness Gets Method",
          "Maps And Slices",
          "Decisions & Conditionals – If, Else, Else If, Switch",
          "In Da Loop: \"For\" And \"Range\" As A Team",
          "Polymorphism: Interfaces - The Name Says It All",
          "Go Modules",
          "Channels Are The Key To Concurrent Communication In Go!",
          "Import And Export Of Data In Json Format",
          "Unit Tests"
        ],
        "Basic Web Application - The Beginning": [
          "The HTTP Request/Response Cycle",
          "The First Web Application: \"It's Alive! It's Alive!\"",
          "Unleash The Full Potential Of Handlers With The Magic Of Functions!",
          "Errors Have Value And Are A Value",
          "HTML Templates: Because Ain't Nobody Got Time To Code That From Scratch!",
          "Organize And Conquer: Let's Tidy Up And Optimize Our Space!",
          "Restructuring – A Structure Like From The Textbook",
          "Layouts Like A Boss",
          "A Dynamic Cache For Effective Template Processing",
          "Creating A Static Cache #1: Efficient Template Processing",
          "Creating A Static Cache #2: Introducing Configuration File For Global Variables",
          "Creating A Static Cache #3: Final Step Of Implementation Using Global Variables",
          "What Else You Can Do With A Configuration File",
          "Sharing Is Caring: Sharing Data With Templates"
        ],
        "GO With The Flow: An Introduction To Middlewares In GO!": [
          "Introduction Of Middleware And Routing In GO",
          "Implementation Of A Simple Routing Package (bmizerany/pat)",
          "Developer's Favorite: go-hhi/chi As New External Routing Package",
          "Middleware: DIY Your Own Middleware Today And Be The Coolest Coder In Town",
          "State Management With Session(s)",
          "Brief Function Test For Session Data"
        ],
        "Project Picking And Working With Forms: A Paperless Dream!": [
          "Thoughts On Project Selection",
          "Brief Note On Github",
          "Static Files: Hold Still And Get Integrated!",
          "HTML - A Trip To The 1990th",
          "Spot Landing! We Create A Landing Page",
          "Preparing The HTML Of The Bungalow Pages",
          "Create And Pimp An Availability Check HTML Page",
          "make-reservation.html Is Our Answer To: \"Do You Have A Reservation?\""
        ],
        "Code-Kaboom! JavaScript And CSS Come Into Play": [
          "JavaScript: Friend Or Foe?",
          "Effortlessly Pick Dates: Grabbing A Vanilla JS Datepicker Package Now!",
          "Notie By Nature: Show Simple Messages",
          "Sweetalert: Candy Time!",
          "Sweetalert Is A Candy Store - Our Own JavaScript Module",
          "From Boring Button To Superstar: A New Functionality In Our JS Mod",
          "CSS: Making Websites Less Ugly Since 1996"
        ],
        "Turn HTML Into GO Templates, Server-Side Validation And Even More Handlers": [
          "Brief Overview What's Going On In This Section",
          "From HTML To \"Happily Ever After\": Conversion Into GO Templates",
          "CSRF-Token – Implementation",
          "Unlocking The Power Of JSON In Golang: A Handler That Returns Data In JSON",
          "Preparations For Submitting And Processing AJAX Requests",
          "From GET To POST: Let'S Teach The AJAX Requests Some Manners!",
          "Pimp Your Code: Refactoring Made Easy!",
          "Server-Sided Validation - The What, The How And The Why Of It All!",
          "Implementation Server-Side Form Validation I - Form Field Data & Errors",
          "Implementation Server-Side Form Validation II - Forms Model & Error Displaying",
          "Implementation Server-Side Form Validation III - More Fields & A Required Func",
          "Implementation Server-Side Form Validation IV - More Validators & govalidator",
          "Display Of An Overview Of The Reservation Data (By Using Sessions)",
          "Fast Feedback: Output Alerts As Feedback To The User Via notie",
          "Alternative Template Engine: Use The Power Of A Jet Engine"
        ],
        "Putting Your Code To The Test: How Writing Tests Can Save The Day (Or Days!)": [
          "Testing In GO: The Why And Wherefore",
          "Testing Success: Mastering Tests For Package Main Of Our Web Application",
          "Handlers Tests I - The Beginning: Initial Setup/Handling GET-Request Handlers",
          "Handlers Tests II - Continued: Handling Post Request Handlers",
          "Render Tests I - Creating A Test Environment And Function Testadddefaultdata()",
          "Render Tests II - Creating Tests For Function Testrendertemplate() And The Rest",
          "Coverage Of Package Handlers And Package Render Tests",
          "Hands-On Exercise: Write A Basic Test For Package \"forms\"",
          "A Solution: [Solved] Testing For Package \"forms\"",
          "Final Notes And Tips For Starting Our Web Application"
        ],
        "Striving for Improvement: ErrorHandling": [
          "Consolidation Of Error Handling In A Package \"helpers\"",
          "Use Of ClientError And ServerError And Updates Of The Relevant Tests"
        ],
        "Database I - Introduction To Database Usage And SQL With PostgreSQL And DBeaver": [
          "Brief Section Overview And Download/Installation Of PostgreSQL And DBeaver",
          "Linux: Installing PostgreSQL And DBeaver And Making A Connection",
          "macOS: Installing PostgreSQL And DBeaver And Making A Connection",
          "Windows: Installing PostgreSQL And DBeaver And Making A Connection",
          "CRUD - Now It's Getting Dirty! SQL-Statements In Action",
          "SQL Queries For Advanced Users - Not Necessarily Complicated, But Complex"
        ]
      },
      "requirements": [
        "No previous programming experience is required to participate in this course (but highly recommended!). This course starts by teaching very basic skills and guides you step by step to create modern web applications in Go.",
        "Basic experience of coding GO and a working GO IDE (Integrated Developing Environment) is helpful but not mandatory.",
        "Knowledge of HTML5, JavaScript, CSS, SQL, Linux, general understanding of processes in computers help and will also be covered in the course.",
        "Willingness to learn and a fair amount of curiosity to figure out how things work!"
      ],
      "description": "You are invited on an exciting journey where you will learn, with guidance, to use Google's GO programming language to develop modern web applications that are highly scalable in both depth and scope. You'll take advantage of the extraordinary capabilities GO holds for full-stack developers to build all sorts of server/client-based applications.\nThis course is intended as a rich resource for learning programming basics as well as concepts in general and developing modern and fast web application with Google's GO (golang) programming language in particular - a comprehensive learning experience.\nThe easiest way to learn new programming techniques and modern concepts in software design is to apply them using real-life examples. In this course you will learn how to plan, implement, test, debug and finally install a modern web application - a homepage for renting out bungalows as vacation homes - on a web server.\nYou will learn about the advantages of the GO programming language and, on the way to a working application, how to integrate other elements such as SQL/PostgreSQL databases, JavaScript (client-side and server-side), AJAX techniques, HTML, CSS and how to use essential tools for full-stack developers.\nBesides programming in GO, this course also deals with\nHTML5 / CSS / DOM\nJavaScript (Vanilla, without jQuery dependence)\nSQL / PostgreSQL\nMigrations / FIZZ\nJSON\nRoutes, Handlers, Models\nTests, Error Handling\nLinux (bash), Windows (Command Line), macOS (bash)\ngit / github\nInstallation on a webserver\nand much more\nWhile suitable for beginners with basic programming experience, it is designed to be a resource for fairly advanced developers. It's filled with examples, explanations, and clarifications of concepts needed to develop modern, fast and secure web applications, and comes with a code repository on Github and a detailed course outline as PDF, which serves as part of the course.\nIncluded external packages an dependencies:\ngo-chi | Router\nscs | Sessions\nnosurf | CSRF-Token\ngovalidator | Validator (server-sided)\npgx/v5 | PostgreSQL Driver & Toolkit\ngo-simple-mail | Golang package for sending e-mail\nCaddy 2 | a powerful, enterprise-ready, open source web server with automatic HTTPS written in GO\nAlso playing a part:\nbootstrap | Bootstrap - HTML, CSS, and JavaScript framework (no jQuery)\nRoyalUI-Free-Bootstrap-Admin-Template | Free Bootstrap 4 Admin Template\nSimple-DataTables | DataTables but in TypeScript transpiled to Vanilla JS\npostgres | PostgreSQL Server (mirror only)\npop | Soda/Migrations - standardization of database tasks\ndbeaver | Dbeaver - free multi-platform database tool\nvanillajs-datepicker | Vanilla JavaScript datepicker\nnotie | unobtrusive notifications - clean and simple JavaScript\nSweetAlert2 | so many options for JavaScript popups\nMailHog | Web and API based SMTP testing\nFoundation for Emails 2 | Quickly create responsive HTML e-mails that work\nCobra | A Framework for Modern CLI Apps in GO\nGoDotEnv | A GO port of Ruby's dotenv library\nWhen you sign up for this course, you have lifetime access to the course. You can learn at your own pace and return to content at any time for deeper insights or to learn additional concepts when you are ready.\nThis course also comes with a 100% money back guarantee.\nI think this is one of the most comprehensive courses in English for developing modern, fast, and secure web applications from scratch.\nAnd if for some reason the course doesn't work for you, you can get a full refund within the first 14 days*.\nEnroll now!\n\n\nYou can get great value from this course and, more importantly, you'll have a great time learning one of the best programming languages ever - the GO programming language, the fastest growing programming language with the highest paid programmers in the US within the last years.\nGO is an open-source programming language that makes it easy to develop simple, reliable, and efficient software.\nGO was developed by computer science luminaries at one of the best, if not the best, software development companies ever - Google. The design and implementations are by Robert Griesemer, Rob Pike and Ken Thompson.\nGO is a very good choice for learning a programming language because it was developed by some of the same people who created the C programming language, Unix, and UTF-8 - some of the most influential contributions to computer science. With GO Robert Griesemer, Rob Pike, and Ken Thompson created a modern programming language that can easily run on multiple processors in parallel, works smoothly in different environments, and makes it easy for programmers to write programs with a very streamlined and user-friendly syntax.\nWhy did Google develop a new programming language?\nIn Google's words, \"GO was born out of frustration with existing languages and environments for systems programming. Programming had become too difficult and the choice of languages was partly to blame. One had to choose either\nefficient compilation,\nefficient execution, or\nease of programming;\nall three were not available in the same mainstream language. Programmers who could were choosing ease over safety and efficiency by moving to dynamically typed languages such as Python and JavaScript rather than C++ or, to a lesser extent, Java. GO is an attempt to combine the ease of programming of an interpreted, dynamically typed language with the efficiency and safety of a statically typed, compiled language. It also aims to be modern, with support for networked and multicore computing.\nFinally, working with GO is intended to be fast: it should take at most a few seconds to build a large executable on a single computer. To meet these goals required addressing a number of linguistic issues: an expressive but lightweight type system; concurrency and garbage collection; rigid dependency specification; and so on. These cannot be addressed well by libraries or tools; a new language was called for.\"\nLearn with me the advantages in web programming of one of the best programming languages ever developed. You will get knowledge, ideas, concepts, inspiration and code examples to design software and applications yourself according to your wishes.\n\n* Check Udemy's Terms and Conditions for details.",
      "target_audience": [
        "Advanced developers as well as beginners who want to learn to write programs (especially web applications) professionally",
        "Experienced full-stack web developers who are interested in learning the GO programming language",
        "People with an attitude like Colonel John 'Hannibal' Smith from the A-Team who \"love it when a plan comes together!\""
      ]
    },
    {
      "title": "Getting Started With Splunk",
      "url": "https://www.udemy.com/course/getting-started-with-splunk/",
      "bio": "Splunk tool for data analysis",
      "objectives": [
        "Search from XML",
        "Search from CSV File",
        "Extract data from Application",
        "Add data to Splunk"
      ],
      "course_content": {
        "Module 1: Introduction to the course": [
          "1.1 Splunk Introduction",
          "1.2 Applications of splunk",
          "1.3 what you will learn",
          "1.4 Splunk user interface"
        ],
        "Module 2: Introduction to Splunk": [
          "2.1 Big Data Introduction",
          "2.2 How splunk is different",
          "2.3 Splunk add data",
          "2.4 Install splunk"
        ],
        "Module 3: Searching": [
          "3.1 Splunk search",
          "3.2 Searching in XML Data",
          "3.3 Splunk Json Advance searching",
          "3.4 Splunk searching CSV"
        ],
        "Module 4: Pivot": [
          "4.1 Splunk pivot reports_1"
        ],
        "Module 5: Using fields": [
          "5.1 Using fields",
          "5.2 Splunk extract fields"
        ],
        "Module 6: Reports": [
          "6.1 Creating Reports"
        ],
        "Module 7: Dashboard": [
          "7.1 Splunk_dashboards"
        ],
        "Module 8 : Apps": [
          "8.1 install twitter App"
        ]
      },
      "requirements": [
        "Basics of Computer Knowledge",
        "Basics of Tools"
      ],
      "description": "Splunk is computer tool or software that is used to index IT knowledge as well as IT data from various sources like:\nThe source may be Any application, Any server or network device that produces up your IT infrastructure.\nThe Splunk is a powerful and versatile search and analysis engine that helps you to investigate, troubleshoot, monitor, alert, and report on everything that is happening in your whole IT infrastructure from one location in real time.\nSplunk has a variety of users with different usecases beacause of its versatility. The various users of Splunk are as given:\n\n1. System administrators\n2. Network Engineers\n3. Security Analysts\n4. Developers\nThese are the Splunk users who uses Splunk for their jobs better and faster.\nSplunk is used by Top companies like Cisco, Bosch, IBM, Motorola, Intuit, Facebook, Salesforce. Splunk is used by top fortune companies. So in every company there is need of Splunk Skilled Employees. Our Course on Splunk is more than 2 hours.\n\n\nThe course is top rated and in-depth.\n--Terence Edwards\n\n\nNice Content. I will look for future courses to jump-start my learning!\n--Saawan Razaa",
      "target_audience": [
        "System administrators",
        "Network Engineers",
        "Security Analysts"
      ]
    },
    {
      "title": "Laravel 9 From Beginner To Freelancer",
      "url": "https://www.udemy.com/course/laravel-9-from-beginner-to-freelancer/",
      "bio": "explain the Last version of Laravel from Zero to advance which enable students develop any project in the market",
      "objectives": [
        "understand the MVC and Laravel Architecture",
        "develop any system or software project from both backend and frontend.",
        "design and implement relational database system",
        "be able to work as a freelancer full stack developer.",
        "create an API for Mobile Development",
        "create an API to connect backend with Web or Mobile application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel 9 Basics": [
          "Prepare the work environment and install the required software",
          "Laravel Structure and MVC",
          "Routing and Controllers",
          "Views and Blade Template with Layout",
          "Integrate Bootstrap Ui with Laravel",
          "Models and Migrations",
          "Models and Eloquent",
          "Eloquent and Query Builder",
          "Relationships - One to One",
          "Relationships - One To Many",
          "Querying Relations",
          "Querying Relations and Route Parameters",
          "Form, Request, Response and Validation"
        ],
        "Blog Project - Beyond The Basics": [
          "Get Started and Authentication",
          "Clean the Project and prepare it for CRUD",
          "CRUD - Create and Store Posts",
          "CRUD - Display a Posts with Pagination",
          "CRUD - Show Post by id",
          "CRUD - Create a Simple Dashboard",
          "CRUD - Edit and Update posts",
          "CRUD - Delete the Post by the Owner",
          "Fix pagination problem and clean up the project",
          "Create a Comments System",
          "Insert and Display Comments",
          "the project source code"
        ],
        "Laravel 9 - Intermediate": [
          "Factory, Faker and Seeder",
          "Add, Edit and Rollback for Migration",
          "Cache in Laravel 9",
          "File Storage - Upload and Store File",
          "File Storage - Display Images",
          "File Storage - Update Images and Delete the Old One",
          "File Storage - Delete Images",
          "File Storage - Validate the File",
          "Post Project Improved",
          "Authentication System (Manually)",
          "Signup (User Registration)",
          "Login and Logout",
          "Clean the UI and start with the Dashboard",
          "Custom CSS File, and Dashboard Design"
        ],
        "Laravel 9 - Advanced": [
          "Many To Many Relationship -part1",
          "Many To Many Relationship - Part2",
          "Many To Many Relationship - Part3",
          "Many To Many Relationship - Part4",
          "Authorization System - Part1",
          "Authorization System - The Gates",
          "Authorization System - The Policies",
          "Send an Email",
          "The Queue and Background Jobs (For Send an Email)",
          "Create a Custom Job to send multiple emails",
          "Send an Notifications",
          "Events and Listeners",
          "Model Observer",
          "Localization in Laravel -Part 1",
          "Localization - Parameters and Url",
          "Localization - Store the language in the Session",
          "Session - Forget and Flush",
          "The Middleware",
          "Routes Group",
          "Services and Service Providers"
        ],
        "Bootstrap 5": [
          "Grid System",
          "The Utilities in Bootstrap 5",
          "Flex and Float",
          "Other Utilities",
          "Position in Bootstrap 5",
          "Contents, Helpers and Components",
          "Collapse",
          "The Forms"
        ],
        "The Final Project (Dashboard System)": [
          "Project Structure and UI",
          "Authentication System (Register and Login Manually)",
          "Reset Password (Manually)",
          "Email Verification (Manually)",
          "Products (CRUD)",
          "Improve the Project with Pagination, Policy and Caching",
          "Delete Data from the Cache and Cache Timing",
          "When do we use Caching and when not?",
          "Users Management with Permission System using Spatie",
          "Authorization System With Spatie",
          "Import Data from Excel to MySQL and Export it to Excel with Laravel"
        ],
        "Application Programming Interface (API) with Sanctum": [
          "API (Authentication API with Products API)"
        ],
        "Final Project Source Code": [
          "Final Project Source Code"
        ]
      },
      "requirements": [
        "Basics of any programming language, PHP is preferred"
      ],
      "description": "using Laravel is a great way to start your own work as a freelancer since it is an amazing and simplest way to create any software project like an E-commerce application, Learning Management system, Restaurant Management, school management, Dashboard, as well as creating an API to create a powerful mobile application.\nthis course is divided into Four Sections:\n- The Basics.\n-Blog Project - Beyond the Basics.\n-Intermediate.\n-Advanced.\n-Create a Real-World Project\n-API\nthis course will start with you from the basics of Laravel such as MVC, Database, Layout, Migrations ...etc, after that, you will create a real project based only on your basic knowledge, after that will start with intermediate topics like Cache, file storage, along with continues improve the project and start with a new project. then more advanced topics will be explained like Many to many relationship notifications, observers, events, and services along with creating a Dashboard project.\nfinally, we will create an API in order to communicate with the frontend, like mobile apps or web apps.\nwith this course.\nin this course, we have explained the last version of Laravel from A to Z, in the simplest way and explained the best ways to do things instead of explaining every way and then selecting the best.",
      "target_audience": [
        "Beginners who want to start working as a freelancer full stack web and mobile developer"
      ]
    },
    {
      "title": "Big Data Analytics on Microsoft AZURE",
      "url": "https://www.udemy.com/course/big-data-analytics-on-microsoft-azure/",
      "bio": "HDInsight | Spark | Jupyter | Zappelin | Stream Analytics | Lake Analytics | Data Bricks",
      "objectives": [
        "In this course we would explore various Big Data Analytics services available on Microsoft Azure cloud.",
        "You would learn HDInsight, Apache Spark, Jupyter",
        "You would also learn about Zappelin, Stream Analytics",
        "And Lake Analytics, Data Bricks."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Data Analytics on Azure": [
          "Stream Analytics",
          "HDInsight",
          "Lake Analytics",
          "Data Explorer",
          "Databricks"
        ],
        "HDInsight": [
          "Creating Data Analytics instance",
          "Creating HDIsight cluster",
          "Exploring HDInsight Dashboard",
          "Creating Spark cluster using HDInsight",
          "Using Jupyter in HDInsight",
          "Using Zappelin in HDInsight"
        ],
        "Streaming Analysis": [
          "Creating a Stream Analytics job",
          "Connecting input with Stream Analytics job",
          "Connecting output with Stream Analytics job",
          "Let's write a transformation query",
          "Results",
          "Conclusion"
        ],
        "Azure Data Lake Storage": [
          "Data Lake Storage"
        ],
        "Practice Test": [
          "Practice Test"
        ]
      },
      "requirements": [
        "A basic understanding of Data Analytics concepts would be more than sufficient, however it is not required to begin with this course."
      ],
      "description": "In this course you will be learning various cloud Analytics options available on Microsoft Azure cloud platform. When you are building your career around Cloud computing, with a developer profile, you may be expected to handle big data in this ever-growing world of data. When big data and analytics is your prime domain, you can empower yourself with Data analytics services and tools provided on the cloud platforms, specifically Microsoft Azure. You will be learning following Data Analytics services with few hands-on practical examples.\nWe would be creating resources for Stream Analytics, Spark, HDInsight exploring options. Below is a list of Big data analytics services on Azure:\nWhat is HDInsight?\nIt is a cloud distribution of Hadoop components. Azure HDInsight makes it easy, fast, and cost-effective to process massive amounts of data. You can use the most popular open-source frameworks such as Hadoop, Spark, Hive, LLAP, Kafka, Storm, R, and more.\nWhat is Stream Analytics?\nIt is a real-time analytics service that is designed for mission-critical workloads. You can build an end-to-end serverless streaming pipeline with this service on Azure.\nWhat is Lake Analytics?\nIt is an on-demand analytics job service that simplifies big data. Easily develop and run massively parallel data transformation and processing programs in U-SQL, R, Python, etc.\nWhat is Data Bricks?\nIt provides data science and data engineering teams with a fast, easy and collaborative Spark-based platform on Azure. You can use data bricks for Big Data processing and Machine Learning.",
      "target_audience": [
        "Anyone who would be interested to learn Cloud Computing with Microsoft Azure.",
        "Would be interested in learning various Big Data Analytics services and options available on Microsoft Azure.",
        "Want to make a career in Cloud Computing and Data Analytics."
      ]
    },
    {
      "title": "A Gentle Introduction To JavaScript For Absolute Beginners",
      "url": "https://www.udemy.com/course/a-gentle-introduction-to-javascript-for-beginners/",
      "bio": "Learn Vanilla JavaScript Without Frameworks...A First Step",
      "objectives": [
        "The basic building blocks of Javascript as well as some helpful tips on computer programming in general",
        "How to add a script to a Web page, store and manipulate information and add smarts to a program so it can respond to different situations.",
        "Create real world examples of JavaScript in action including making your own web form more usuable by adding validations",
        "Create rollover effects and simple animations",
        "Work with Selection and Repetition structures (if statements and loops)",
        "Work with the concept of Arrays (one and two dimensional)",
        "Learn to manipulate Strings",
        "Work with dates"
      ],
      "course_content": {
        "Course Information": [
          "Welcome",
          "Why JavaScript",
          "What You Need ... Course Specifics",
          "What You Are Going To Learn"
        ],
        "Getting Started ... The Basics": [
          "HTML ... The Structural Layer",
          "CSS ... The Presentation Layer",
          "JavaScript ... The Behavioral Layer",
          "Writing Your First Javascript Program",
          "Simple Output Techniques",
          "Variables and Assignment Statements",
          "Simple User Input Techniques",
          "The Basics Quiz"
        ],
        "The Next Step ... Core Concepts (Events , Functions, Document Object Model)": [
          "Events",
          "Functions Part 1 ... The Basics",
          "Functions Part 2 ... The Document Object Model ( DOM)",
          "Functions ... Challenge Problem Set 1",
          "Functions Part 3 ... Working with Forms",
          "Challenge Problem Set 2",
          "Event Listeners",
          "Scope of Variables ... Local vs Global",
          "The Next Step Quiz"
        ],
        "Intermediate Concepts ... Selection, Checkboxes, Rollovers and Animation": [
          "Conditional Statements Part 1",
          "Conditional Statements Part 2",
          "Conditional Statements Part 3 ... Checkboxes and RadioButtons",
          "Image Swapping ... Rollovers Part 1",
          "Rollover Part 2",
          "Animation",
          "Intermediate Concepts Quiz"
        ],
        "Advanced Concepts ... Repetition, Arrays, String Functions": [
          "Using Javascript Arrays",
          "Repetition ... The While Loop and For Loop",
          "Arrays Revisited Part 1",
          "Arrays Revisited Part 2",
          "Working with Two Dimensional Arrays",
          "Manipulating Strings",
          "Working with Drop Down Lists",
          "Challenge Problem",
          "The Window Object",
          "Working with Dates",
          "The Wrap Up ... Where Do You Go From Here",
          "Advanced Concepts Quiz"
        ]
      },
      "requirements": [
        "You should have a basic understanding of how to create simple web pages using HTML",
        "Having some knowledge of CSS will help but it's not required",
        "Programming is serious business. You’re going to have to work, sometimes hard. If you’ve already had some programming experience, then you know what we’re talking about. If you’re coming straight from HTML and CSS, then you’re going to find writing code is a little, well, different. Programming requires a different way of thinking. Programming is logical, at times very abstract, and requires you to think in an algorithmic way. But no worries; we’re going to do all that in a friendly way. Just take it a bit at a time. That way, these new programming concepts will really sink in."
      ],
      "description": "JavaScript has become an essential web technology along with HTML and CSS, as most browsers implement JavaScript. Thus, You must learn JavaScript if you want to get into web development, and you must learn it well if you're planning on being a front-end developer or on using JavaScript for backend development.\nJavaScript is a good choice for your first programming language.  JavaScript is nearly ubiquitous. And you can use to develop all sorts of applications. Many websites you probably use every day rely on JavaScript, including Gmail, Facebook, Twitter, Instagram, and Spotify.\nJavaScript is easy. I’m not the first one or last one to point out this, because this fact is very well known across the industry. This is why it is a very good starting point for those interested in learning to code.\nJavaScript is a real programming language: It doesn't work like HTML or CSS and it has its own set of  rules... and although it's not always easy for Web Designers to switch gears and start thinking like computer programmers, my hope is that my gentle introduction will make your transition easier.\nThe goal of this course isn't to turn you into the next great programmer. This course is meant to familiarize Web Designers and Newbie Programmers  with the ins and outs of JavaScript and then move on to more advanced concepts and tools for adding really useful interactivity to a Web site as quickly and easily as possible. Perhaps best of all, JavaScript is actually built into your browser, so you don’t have to install anything to start programming in it. That makes it incredibly accessible. There’s a good chance you’ll find the basics easy to learn, but don’t worry because there are plenty of advanced concepts to keep you busy learning for a very long time.\nIn the past several years, JavaScript has undergone a rebirth, fueled by high-profile websites like Google, Uber, Nexflix which use JavaScript extensively to create interactive web applications. There’s never been a better time to learn JavaScript. With the wealth of knowledge and the quality of scripts being written, you can add sophisticated interaction to your website—even if you’re a beginner.\n\n\nAnd finally please do not judge a book by it's cover  don't judge the course by the title or this small description section, if you want to know exactly all the topics covered please go to:\nCOURSE CONTENT\nSections\nLectures  (press the down arrow)  This will open up literally thousands of lines of very detailed lecture descriptions leaving no doubt what is and  what is not covered.",
      "target_audience": [
        "Beginner web developers/programmers who want to learn how to implement JavaScript to create interactive Web Applications",
        "This course can act as a stepping stone to learning more advanced JavaScript implementations that incorporate modern frameworks like React and Angular",
        "This course is not for experienced web developers"
      ]
    },
    {
      "title": "Socket.IO Project - Build a Chat App",
      "url": "https://www.udemy.com/course/socket-io-project-build-a-chat-app/",
      "bio": "Learn socket.IO in 2 hours by building a powerful chat app using node js, mongodb and socket io",
      "objectives": [
        "Create custom real-time apps",
        "Understand how Socket IO works",
        "Use ES6",
        "Use Bootstrap 4"
      ],
      "course_content": {
        "Introduction and project overview": [
          "Introduction",
          "02 project overview"
        ],
        "The Project": [
          "03 setting up",
          "04 mongo database and connection",
          "05 socket io connection",
          "06 chat html 1",
          "07 chat html 2",
          "08 html styling",
          "09 user enter chat 1",
          "10 user log on",
          "11 user log off",
          "12 get online users",
          "13 public chat 1",
          "14 public chat 2",
          "15 public chat 3",
          "16 private chat 1",
          "17 private chat 2",
          "18 private chat 3",
          "19 private chat 4",
          "20 choose room",
          "21 new notification",
          "22 close chat",
          "23 second user restarts private chat 1",
          "24 second user restarts private chat 2",
          "25 second user restarts private chat 3",
          "26 new notifaction and refactor",
          "27 duplicate private chat windows fix"
        ],
        "Bonus Material": [
          "Bonus Material"
        ]
      },
      "requirements": [
        "Some JavaScript / Node knowledge is assumed"
      ],
      "description": "Learn socket io in 2 hours!\nReal-time development is a must nowadays and socket io is the way to go!\nThis is a practical course that teaches you how to use socket io to build real-time apps in just 2 hours by building a powerful chat app.\nI value your time and that is why I've created this course. Why go here and there and struggle when you can learn real-time app development with socket io in just 2 hours.\nNOTE: If the current asking price is too much for you feel free to message me for a discount!",
      "target_audience": [
        "Anyone interested in doing real-time web development with socket io"
      ]
    },
    {
      "title": "Introduction to Web Development",
      "url": "https://www.udemy.com/course/introduction-to-web-development-t/",
      "bio": "Is web development for you? Try this free course to find out.",
      "objectives": [
        "Learn the basics of web development",
        "Find out if web development is for you"
      ],
      "course_content": {
        "HTML and HTML5": [
          "What Is HTML?",
          "What Is HTML5?",
          "Getting the Browser",
          "Getting the Editor",
          "Setting Up the Editor",
          "Structure | Hello World",
          "The DOM",
          "Customizing the Editor",
          "Self Closing Tags",
          "Validation",
          "Comments"
        ],
        "CSS and CSS3": [
          "Introduction",
          "Links",
          "Widths and Heights",
          "Positioning",
          "Centering a Container",
          "Display Property"
        ],
        "JavaScript": [
          "Introduction",
          "Script Tags",
          "Boxes",
          "Console",
          "Variables"
        ],
        "Ajax and jQuery": [
          "Introduction",
          "Getting jQuery",
          "Basic Fuctionality",
          "User Interaction"
        ],
        "PHP": [
          "What Is PHP?",
          "Setting Up a Web Server",
          "Echo and Print",
          "Functions",
          "Variables",
          "For Loops",
          "Foreach",
          "If Statements"
        ],
        "My SQL": [
          "Introduction",
          "Creating a Database",
          "Inserting Data",
          "SQL Injection"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer and a dream"
      ],
      "description": "Introduction to Web Development: Your First Step Toward Becoming a Web Developer\nThis Introduction to Web Development course is designed to provide a solid foundation in the basics of web development. Whether you're considering a career in web development or just curious about how websites are built, this course will introduce you to key concepts and technologies that every professional web developer should know.\nThroughout the course, you'll learn about HTML and HTML5, the backbone of web content. You'll dive into CSS and CSS3, the styling languages that make websites visually appealing. You’ll also explore JavaScript, the programming language that adds interactivity to websites, along with tools like Ajax and jQuery that enhance functionality and user experience.\nIn addition, you'll be introduced to PHP and MySQL, which are essential for creating dynamic websites and working with databases. By the end of the course, you'll have a basic understanding of how web development works and how to use these technologies to build simple websites.\nThis course is perfect for beginners who want to get a taste of web development before diving deeper into more advanced topics. It’s a great starting point for anyone interested in exploring web development as a potential career path. Plus, it’s free and easy to follow, so you can take the first steps toward becoming a web developer without any commitment. Take the course and see if web development is the right fit for you!",
      "target_audience": [
        "Beginning developers"
      ]
    },
    {
      "title": "Build Facebook Clone with Django - Social Media Website",
      "url": "https://www.udemy.com/course/build-facebook-messenger-clone-with-django/",
      "bio": "Create a highly sophisticated Facebook and Messenger clone application while learning Django from scratch",
      "objectives": [
        "Build a fully functional Advanced Social Media Facebook and Messenger clone application version 2023",
        "Build a mailing system from scratch to send emails to the user for email verification links and reset code password and notification emails",
        "Learn how to use AWS S3 to store your images in a new brilliant way and how to upload, search, filter and open a new perspective on working with AWS S3.",
        "Build a scalable strong backend using Python and Django",
        "Learn how to work with Sqlite and Postgresql Database with Django ORM",
        "Build a strong authentication system where you can register, login ,reset password",
        "Live data validation from the database to make sure your data (like username) is unique and create a looping function to update it every time",
        "A fully responsive application in all different devices, and learn advanced tricks or responsiveness.",
        "Every user will have a profile page just exactly like facebook cover, profile picture, details, photos, friends, posts",
        "You can add and edit your details like othername, bio, job, workplace, relationship etc... and they will be visible on your profile and others can see it.",
        "We also add a live search functionality where you can search for other users and they will get stored in your search history and you always can remove them.",
        "And many many more features..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Welcome to the Facebook and Messenger Clone Course",
          "Facebook Clone LIVE DEMO",
          "Messenger Clone LIVE DEMO",
          "Meet your instructor",
          "Tools and Requirements Needed",
          "Goal Of Course"
        ],
        "Setup Django Project - FACEBOOK CLONE - COURSE 1": [
          "Project Setup",
          "Customize Django Admin - Modern Interface",
          "Configure and Setup Frontend Templates"
        ],
        "Creating User and Profile Model, Slugs, Django Signals and Admin": [
          "Creating a custom user model",
          "Creating a profile model",
          "Slug & Slugify using Django",
          "Creating Signals in Django",
          "Register Model In Django Admin with Advanced Features"
        ],
        "User Authentication System": [
          "Register or Signup Functionality (Part 1)",
          "Register or Signup Functionality (Part 2)",
          "Register or Signup Functionality (Part 3)",
          "Login or Signin Functionality",
          "Logout or Signout Functionality"
        ],
        "Template Inheritance In Django": [
          "Template inheritance in Django"
        ],
        "Application Models and Database Schema In Django": [
          "Post Model",
          "Gallery Model",
          "Friend Request & Friend Model",
          "Notification Model",
          "Group and Page Model"
        ],
        "List All Posts - List View": [
          "Post List View - List all the active post from the database to the frontend."
        ],
        "Create New Post - Create View": [
          "Create new post - create a view to handle creation of new post",
          "Configure HTML Form to create new post",
          "Create and Append Post Dynamically using Javascript",
          "Create and Append Post Dynamically using Javascript (Part 2)"
        ],
        "Like Post Feature": [
          "Like Post - Create view to handle liking of post",
          "Setup HTML and JS to like post",
          "Like post in real time using django and js",
          "Like post in real time using django and js"
        ],
        "Comment Feature": [
          "Comment Feature - Setup Django View to Process Comments",
          "Configure Comment HTML Section.",
          "Configure Comment HTML Section (Part 2)"
        ]
      },
      "requirements": [
        "A basic knowledge in working with Django and HTML",
        "A reasonable knowledge in web development is always welcomed",
        "A Pen and Book",
        "30Min - 1 Hour Daily"
      ],
      "description": "In this course, you will learn how to build an advanced social media Facebook clone application (version 2023) and master working with Django and Javascript, among many other tools we will use throughout the course.\n\nSo as a start, we will build a strong authentication system so you can register, login, and reset your password. We will also have a validation system for registration, email verification, and many more authentication features.\nWe are also creating a mailing system where we will send verification links and reset password codes to the user, and directly after registering, the user gets a verification OTP to activate their account, so we are also learning how to create HTML emails.\nWe have a home page where all posts for the people you follow or are friends with will be displayed mixed with your posts and ordered from newest to oldest.\nYou can create a post using text and images, set post visibility, and do it beautifully, just like on Facebook.\nYou can like a post and change like to unlike, count likes, show users who like posts, and many more post reaction features with in-depth explanations.\n\n1. You can comment using text. Comments will be ordered and always updated directly after submission; comments can be liked and disliked.\n2. You can save or unsave posts, download post images, delete posts, etc.\n3. We will have all sorts of validation for file uploads for size and type.\n4. You can update your cover picture using old cover pictures or a new image.\n5. You can update your profile or cover picture.\n6. Every user has its own profile, where all details are displayed, including the cover, profile picture, details (othername, bio, job, workplace, relationship, etc.), photos, friends, and posts.\n7. You can update all your details and see the changes live.\n8. We will use AWS S3 to upload our images in a new, creative way; you will be impressed.\n9. We have a full friendship system where you can add friends, cancel requests, accept requests, delete requests, unfriend, follow, and unfollow.\n10. Also, we have a friends page where you can manage all your requests and friends.\n11. We have live search functionality; as you type, new results appear; any user you click will be added to your search history; and it will also be displayed in order by the last clicked on.\n12. We will use dynamic pagination and loaders.\n13. We will have protected routes.\n14. We will use Django Sqlite in development and Postgresql in the product to store and manage website data.\n15. We will work with cookies and Sessions to temporarily store data.\n16. We will use many Javascript events like listeners, on-click, on-ready, on-mouse-over, and many more",
      "target_audience": [
        "Beginner web developer",
        "Junior web developer",
        "Django Developers",
        "Those looking to create a social networking startup"
      ]
    },
    {
      "title": "Website Speed Optimization - Front-end + WordPress",
      "url": "https://www.udemy.com/course/front-end-optimization-basic-and-intermediate-methods/",
      "bio": "Keep your users happy (and support marketing efforts) by optimizing your site and cutting down the page load time!",
      "objectives": [
        "Optimization basics - what it is and how to do it",
        "CSS optimization",
        "JavaScript optimization",
        "Image optimization by choosing proper file formats and placing images on page the most efficient way",
        "Optimization of page load time by reducing the number of HTTP requests and manipulating their order",
        "Basic server configuration for optimizing page load time"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Optimization basics": [
          "What is Optimization and How Browsers Load Pages",
          "Measuring Performance - Tools",
          "Test your knowledge"
        ],
        "Reducing Number of HTTP Requests": [
          "HTTP: HTTP/1.1 vs HTTP/2",
          "Combining Styles and Scripts (CSS and JavaScript)",
          "Using Gulp",
          "Combining Images",
          "Saving More HTTP Requests",
          "Test your knowledge"
        ],
        "Reducing DOM Complexity and CSS Complexity": [
          "Reducing DOM Complexity and CSS Complexity"
        ],
        "Image optimization": [
          "Introduction",
          "Image File Formats for Web",
          "Image File Formats - Examples",
          "Template Images vs Content Images",
          "Optimizing Template Images",
          "Optimizing Content Images",
          "Summary",
          "Test your knowledge"
        ],
        "CSS Optimization": [
          "Bundling and Minification",
          "Putting CSS on the Page",
          "Reducing Amount of Styles",
          "Optimizing Web Fonts' Definitions",
          "Test your knowledge"
        ],
        "JavaScript Optimization": [
          "Bundling and Minification",
          "Minimizing Number of Third-Party Scripts",
          "Putting JavaScript on the Page",
          "Optimizing DOM Operations: Querying Elements and Manipulating DOM",
          "Optimizing Events: Attaching and Handling",
          "Find and Removing Unnecessary Code",
          "Best Practices for Performance",
          "Summary",
          "Test your knowledge"
        ],
        "Manipulating Order of Loading Resources": [
          "Manipulating Order of Loading Resources"
        ],
        "Server Configuration": [
          "Server Configuration - Basics",
          "Server Configuration - GZIP Compression, Expires Header, Image Hotlinking",
          "Configuring Server Environment",
          "Test your knowledge"
        ],
        "WordPress optimization": [
          "WordPress Optimization"
        ]
      },
      "requirements": [
        "At least basic knowledge of HTML, CSS and JavaScript",
        "Some experience with web development will help you better understand the course objective",
        "Internet connection, web browser and text editor are all the tools you will need",
        "Graphics editor will be needed to optimize image files"
      ],
      "description": "We all know how terrible experience is a slow service. Who likes to wait more than needed at the bar, in the shop queue, or in traffic? No one, of course. And it's no different with websites and any other web-based services: slow service is irritating. Even more, given that in today's world we want everything instantly.\nUsers will be unhappy, if your site will work slow - or at least slower than they expected. They will more likely go away and find better, lighter, quicker alternative to stop being frustrated and enjoy the service they need. But did you know, that slow sites will also rank lower in search engines?\nThe solution is not easy, as there are many areas on which the site's performance can gain or lose. However, there are tens of things you can do, and some of them are pretty easy.\nWhether you recently finished the web developer course, or you're already developing for some time, this is the place where you will learn all the basic and intermediate methods to speed up the sites you create. Upon implementing the techniques presented in this course, you will be able to visibly boost your site's load time, and also - if your site is more complex - you will be able to make it work much faster within the browser.\nI will show you how to boost your site's performance by:\nreducing number of resources, their sizes, and complexity of your code\nchoosing proper image file formats and tuning their settings\noptimizing placement of images on the page\noptimizing your styles and scripts by doing the same things more efficiently\nmanipulating the order in which browsers download resources\nconfiguring your server\nAlso, as a bonus, I prepared a couple of hints how to speed up your WordPress installation. And whenever the techniques mentioned in the course need CMS support, I show you how to implement them on a site powered by WordPress.\nWell-optimized site will bring a number of gains. I mentioned happier users, more likely to stay on the site, and the boost in search engines, which will support SEO efforts.\nBut optimization will also bring savings in storage and bandwidth usage over the time. It will also save energy: well-optimized resources will need less energy to be sent between browser and server, and they will use less battery on the end user's devices. So it's more eco too, if you like to think this way.\nBut if you're rather selfish, there are benefits for you - personally:\nyour clients will be happier when you create for them fast websites,\nyour value as a web developer, capable of building efficient sites, will grow,\nyour salary or prices will likely grow.",
      "target_audience": [
        "Web developers who want to improve their skills",
        "Amateur web developers who struggle to make their websites run fast enough"
      ]
    },
    {
      "title": "Vite js bundler : Build fast modern Webapp ( 2023 )",
      "url": "https://www.udemy.com/course/build-fast-modern-webapp-with-vite-js-bundler/",
      "bio": "Build modern and fast webapps using Vite. Learn advanced concepts of tree-shaking, bundle visualizer , plugins and more.",
      "objectives": [
        "Build Modern applications with Vite",
        "Setting up configurations for React and VueJS apps",
        "Deploying applications build with Vite",
        "Configuring Vite for creating UI Library"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to follow the course",
          "Installing software and download source code IMPORTANT",
          "Building our first Vite application",
          "ESM and CommonJS modules",
          "ESM modules in Browser",
          "Explore the Vite build",
          "How is Vite fast and different from others ?",
          "2 Quick Refresher Questions ?"
        ],
        "Vite Basics with HTML CSS JS": [
          "Section Introduction ( Building with Vite )",
          "Repo to download IMPORTANT",
          "Netflix base project",
          "Adding Vite to Netflix project",
          "Fixing our dashboard page",
          "Fixing image loading issue",
          "Importing scripts and CSS",
          "CSS modules",
          "SASS with Vite",
          "Adding public assets",
          "2 Rapid fire questions !!"
        ],
        "Vite build for Single page app and Build UI Library": [
          "Section introduction ( SPA and UI Library )",
          "Starting React app with Vite template",
          "Setting up React app from scratch",
          "Adding Vite builder",
          "Using SVG as React component",
          "UI library introduction setup",
          "Importing UI library into React app",
          "Inject CSS into JS build",
          "Images inside JS build",
          "Vite bundle visualizer , Treeshaking",
          "Creating Treeshakable library",
          "Tailwind CSS config for Vite",
          "Eslint with Vite and React",
          "Vite alias path"
        ],
        "Production Optimizations and Deployment": [
          "Production & Deployment Section Introduction",
          "PostCSS Autoprefixer",
          "Vite base path config",
          "Cache control in Vite",
          "Manual Chunks",
          "Migrating Create React App to Vite",
          "Deploying to Netlify"
        ]
      },
      "requirements": [
        "Follow along on your computer with the instructions mentioned in the videos"
      ],
      "description": "Build Modern WebApps using Vite JS Bundler, from scratch to production.\n\nAs the web applications get more complex over time, we also need to review and optimize the tools we use for bundling and deploying these applications. Vite, developed by the developers of VueJS is a bundler for modern applications.\n\n\nIn this course, we not only cover the theoretical concepts but also get very hands-on experience on how to integrate Vite into our software development pipeline. We will start right from the basics such as ES Modules and CommonJS modules and slowly progress to more advanced concepts such as Treeshaking to truly optimize our application for production use.\n\n\nWe will also see how to take a React application that was created using the traditional approach of Create React App and migrate it to a modern approach using Vite. This will save time for all the developers are it exponentially increases the build time and reduces the complexity.\n\n\nI have tried my best to structure this course in the easiest way to follow and will have all the resources available to download on GitHub and attached to this course.\nYou can always ask me questions in the Q&A sections in case you face problems, I shall be happy to answer.\nThis course does not require any knowledge of Bundlers and will be beneficial to all developers making any type of website whether it's using core HTML CSS or using frameworks and libraries such as React and Vue.\n\nGood luck and happy learning!",
      "target_audience": [
        "Software Developers",
        "Frontend developers",
        "Fullstack developers",
        "Devops engineers"
      ]
    },
    {
      "title": "HTML5 CSS3 JQUERY Single Page Website Project from Scratch",
      "url": "https://www.udemy.com/course/html5-css3-jquery-single-page-website-project-from-scratch/",
      "bio": "Build your own website from scratch Step by Step easy to follow guide web development. Learn to use HTML5 CSS3 JQUERY",
      "objectives": [
        "create a scrolling single page website",
        "add jquery to create amazing effects to web pages",
        "use HTML5 and CSS3 to create a website",
        "build a website from scratch",
        "create nav bar menus",
        "create responsive websites",
        "grow your portfolio",
        "use JQUERY within webpages"
      ],
      "course_content": {
        "How to Build a one page scrolling website from scratch": [
          "HTML5 CSS3 Course introduction",
          "HTML5 Single Page Website Resources",
          "Course Resources",
          "HTML5 webpage setup code",
          "HTML5 add HTML coding",
          "HTML add dummy text and images",
          "HTML5 website anchor links",
          "HTML5 setup CSS",
          "HTML5 sticky navigation menu",
          "HTML5 add navigation menu",
          "JavaScript setup HTML5 website",
          "JQUERY selector click menu setup",
          "JQUERY add remove classes",
          "How to Use Jquery to Scroll your webpage",
          "Jquery Scrolling options",
          "Jquery scroll position conditions and calculations",
          "Completed Navigation One page website scroll automation",
          "Source Code for One Page Website Basic Template"
        ],
        "One Page Website Bonus Code Customization and Tweaks": [
          "CSS Create Sticky Top Nav Menu",
          "Position add spacing for navigation menu",
          "Navigation Styling Nav Bar",
          "Style nav menu CSS",
          "Add images and Colors to sections",
          "HTML5 website creation",
          "CSS3 styling of content",
          "Create a contact Form for the website",
          "Make it Responsive",
          "Completed Project 1 page responsive website template",
          "Source code HTML5 index file",
          "Source code CSS3 style file",
          "Source code JavaScript Jquery Script file"
        ],
        "Updates for website code": [
          "Source Code updated using window scroll"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "desire to learn",
        "basic HTML and CSS",
        "computer and internet access"
      ],
      "description": "Create your own Single Page Scrolling Website from Scratch. Single page websites are extremely popular, in this course we show you how to build one from Scratch. All the source files and resource links are included, so you too can build your own website by the end of this course.\nWith over 14 years experience in web development I'll introduce you to website design, explained step by step.\nStarting with a setup of a basic HTML5 web template. Next we add in some content and create a shell to build the one page website on.\nNext we bring the content to life using CSS3. Styling turns the HTML code into a styled webpage.\nJavaScript and Jquery are then used to create amazing scrolling effects. Using data from the DOM, and properly calculating the section sizes we show you how to create page scrolling with Jquery.\nAll the source files and resources are included so you can get started quickly. Build an amazing website in less than an hour.\nBonus content - update the code to create a fully functional website. Expand your portfolio and practice website design. We turn the previous menu into a fully functional sticky header menu. Add images and colors to create the sample website, ready for the real world. Make it responsive and have it re-size and expand to fit any screen.\nLots of bonus content, an instructor who helps and responds to questions quickly.\nLearn to create a contact form\nlearn how to apply JQUERY with HTML and CSS\nAccess and interact with the Document Object Model DOM\nadd Bootstrap for styling\nuse Awesome fonts for cool fonts\nLearn to Create your own website in easy to follow steps. Let's get started creating amazing websites.",
      "target_audience": [
        "anyone who wants to learn to create websites",
        "learn HTML5 and CSS3",
        "learn JQUERY",
        "learn about the DOM and how to use the data"
      ]
    },
    {
      "title": "AI for Coding: Master Cursor AI for 20X Faster Fullstack App",
      "url": "https://www.udemy.com/course/ai-for-coding/",
      "bio": "Master AI for coding with Cursor AI to build fullstack, MERN stack web apps faster,",
      "objectives": [
        "How to use Cursor AI to build a fullstack application from scratch",
        "Learn to build Full stack Ebook Store with Payment Integration",
        "Integrating frontend and backend components seamlessly with minimal manual effort.",
        "Master Cursor AI for coding 100X Faster",
        "Master how to use Cursor AI Effectively",
        "Master the technique on how to build Complex Project using Cursor A1"
      ],
      "course_content": {
        "CURSOR UPDATE-MUST READ !!!": [
          "Cursor Configuration Settings",
          "Differentiate Between Cursor Agent, Edit & Ask"
        ],
        "MASTERING CURSOR AI FOR CODING": [
          "Projects Demo",
          "What is Cursor AI",
          "Installing Cursor AI",
          "Cursor AI In The Terminal",
          "Cursor Inline Editing",
          "MCP Explained",
          "Cursor Chat Feature",
          "Web, Files, Folder mentions",
          "Understanding Codebase feature",
          "The Doc mention",
          "Image to Code",
          "Introducing Cursor NotePad"
        ],
        "PROJECT: BUILD AI CONTENT GENERATOR WITH GEMINI AI": [
          "Build AI Content Generator with Cursor"
        ],
        "PROJECT: BUILD MERN AUTHENTICATION PROJECT UNDER 20 MINUTES": [
          "MERN Auth Project Using Cursor AI"
        ],
        "PROJECT: BUILD AI CONTENT DETECTOR PROJECT USING RAPID API": [
          "AI Content Detector"
        ],
        "PROJECT: FULLS TACK EBOOK STORE PROJECT": [
          "Project Planing",
          "Creating Folders With One Command",
          "User Model",
          "Implementing Users Controllers",
          "Auth Routes and Server setup",
          "Testing Endpoints and Fixed Auth Middleware",
          "Change Password Endpoint",
          "Admin Controllers, Book and Transaction Models",
          "Book Controllers",
          "PdF and image Upload For Book creation",
          "Fetch All & Update Book",
          "Payment Integration",
          "Forntend Authentication",
          "Change Password",
          "Fetch All and Book Details"
        ]
      },
      "requirements": [
        "No prior knowledge needed"
      ],
      "description": "In this course, you'll master the power of AI for coding using Cursor AI and GenAI, enabling you to build fullstack MERN stack web applications faster and more efficiently than ever before. As AI becomes an integral part of development, this course will guide you through the practical application of AI in coding, helping you automate repetitive tasks, optimize code, and focus more on high-level logic and design.\nThroughout the course, you'll dive deep into the fullstack development process, utilizing Cursor AI to generate frontend and backend code, integrate databases, and build responsive web applications. We’ll explore how AI-driven tools can assist in generating, debugging, and optimizing code to drastically reduce development time. With a focus on the MERN stack (MongoDB, Express, React, and Node.js), you'll learn how to leverage AI to streamline the development process across both the frontend and backend.\nKey areas covered include AI-powered coding, fullstack application development, and automating complex tasks such as API integration and database management. By the end of the course, you will have the skills to build fullstack web apps faster, with enhanced productivity, all while gaining a deeper understanding of how AI can revolutionize the way we approach coding and development in the modern web landscape. This course is ideal for developers at all levels who are ready to embrace the future of coding with AI!",
      "target_audience": [
        "Beginner developers with basic coding skills looking to build fullstack apps using AI.",
        "Intermediate developers wanting to automate coding tasks with Cursor AI.",
        "Advanced developers seeking to streamline their workflow with AI-driven tools.",
        "Tech enthusiasts eager to explore AI-assisted development and its potential in web apps."
      ]
    },
    {
      "title": "Real time web applications in Rust",
      "url": "https://www.udemy.com/course/real-time-web-applications-in-rust/",
      "bio": "Full-stack web development with Rust and websockets",
      "objectives": [
        "Creating websocket clients with yew",
        "Creating websocket servers with rocket",
        "Sharing Rust code between server and client",
        "Building a chat frontend with yew"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Local setup",
          "Gitlab repository"
        ],
        "Websocket Server (Backend)": [
          "Rocket setup",
          "Stream split",
          "Atomic user ID and rocket state",
          "Mutex and locks",
          "ChatRoom implementations"
        ],
        "Websocket Client (Frontend)": [
          "Yew setup",
          "Hooks and websocket connection",
          "Message sending",
          "Bootstrap styling"
        ],
        "JSON messages": [
          "ChatMessage contract",
          "Backend and JSON",
          "Frontend and JSON"
        ],
        "Chatroom users list": [
          "Websocket message types",
          "Broadcasting user list",
          "User list component"
        ],
        "Changing usernames": [
          "Username change message type",
          "Storing the username",
          "Username change FE logic",
          "Username change BE logic"
        ],
        "System messages": [
          "Username changed system message",
          "User joined/left system message",
          "System messages styling"
        ]
      },
      "requirements": [
        "Good knowledge of Rust",
        "Web development essentials (HTML, JSON)",
        "Some experience with DOM handling and browser events"
      ],
      "description": "WebSocket is a computer communications protocol, providing full-duplex communication channels over a single TCP connection. The WebSocket protocol enables interaction between a web browser (or other client application) and a web server with lower overhead than half-duplex alternatives such as HTTP polling, facilitating real-time data transfer from and to the server.\nRust is a systems programming language which you can use to write applications with high performance. It is amazingly refreshing with a very helpful compiler who is your mentor since the very beginning.\n\n\nGiven that the WebSocket protocol is key for real-time applications, where reliability and speed matter, it is no wonder that Rust is the best option for implementing WebSocket servers.\nAlso given that Rust can now run in the browser, thanks to WebAssembly, we can also use Rust on the client.\nWhich means that one can code a real-time, chat-like application 100% in just Rust!\n\n\nThis is what we will do in this course! We will leverage Tokio and Rocket in the back-end, yew webassembly and trunk in the front-end and we will end up with a full-stack Rust, real-time chat app. While doing that we will learn how to set-up a WebSocket connection, send/receive messages and update out application state.",
      "target_audience": [
        "Web developers evaluating Rust for their next websockets project",
        "Web developers evaluating Rust for their next full-stack project",
        "Rust developers looking to leverage the browser as a UI via websockets"
      ]
    },
    {
      "title": "Jitsi Meet API - Integrate with PHP CodeIgniter Quickly 2022",
      "url": "https://www.udemy.com/course/integrate-free-jitsi-video-conference-api-in-php-codeigniter/",
      "bio": "This is the only course on this platform where jitsi video conference API is fully integrated to the school management",
      "objectives": [
        "Be able to build any web app you want using codeigniter",
        "Build fully-fledged web apps for your startup or business",
        "Build complete school management in codeigniter",
        "Work as a freelance PHP developer",
        "Craft a portfolio of web apps to apply for seniour developer jobs",
        "Learn to use CodeIgniter",
        "Have a new PHP Skill that would increase income",
        "Able to Integrate Jitsi Video Conference to the CodeIgniter Project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "1.2 More Infomation About Jitsi Integration",
          "1.3 My promise and what you are going to learn"
        ],
        "2. Introduction and Understanding CodeIgniter Framework": [
          "2.1 Introducing php codeigniter framework",
          "2.2 Installation and setup of codeigniter",
          "2.3 Quick Explanation on How Codeigniter Works",
          "2.4. Basic Codeigniter Config Explainning Files Autoload",
          "2.5 Integrating html template to the codeigniter",
          "2.6 How to Link our CSS files with PHP base_url function"
        ],
        "3. Working with Jitsi Live Streaming": [
          "3.1 Introduction to code structures",
          "3.2 Creatiing Jitsi Method in Admin Controller",
          "3.3 Creating Jitsi Table Structure",
          "3.4 Preparing Jitsi Html Form - Part One",
          "3.5 Preparing Jitsi Html Form - Part Two",
          "3.6 Working with the SMS Sending Option",
          "3.7 Sending Jitsi to Live Class Model",
          "3.8 Working with the Live Class Model Part One",
          "3.9 Working with the Update and Delete Code",
          "3.10 Testing our Insert Codes",
          "3.11 Preparing HTML Table to Select Jitsi Information",
          "3.12 Select From Jitsi by Student and Staff"
        ],
        "4. Working with the Edit Jitsi Information": [
          "4.1 Preparing the Edit Jitsi Page",
          "4.2 Select From Jitsi Table With Id",
          "4.3 Showing Jitsi Details in Form",
          "4.4 Round up Edit Jitsi and Test",
          "4.5 Loading the Jitsi Host File",
          "4.6 Loading Jitsi Api Template",
          "4.7 Loading Jitsi Video Portal"
        ],
        "5. Working with the Teacher Profile for Jitsi Integration": [
          "5.1 Creating the Link to Jitsi in Teacher Profile",
          "5.2 Prepare the Method for Jitsi in Teacher Controller",
          "5.3 Working with the HTML for Edit and Create Jitsi Page",
          "5.4 Round up Teacher Jitsi Integration Portal"
        ],
        "6. Working with the Student Profile for Jitsi Integration": [
          "6.1 Creating the Link to Jitsi in Student Profile",
          "6.2 Working with the HTML in Student Portal",
          "6.3 Test Join Class in Student Portal",
          "6.4 How to Download Complete Source Codes",
          "6.4.1 Dowload Resources Link"
        ],
        "7 Other interesting courses": [
          "7.1 Other courses you might be interested"
        ]
      },
      "requirements": [
        "PHP version 7+",
        "School Course Part One is a must",
        "School Course Part Two is a must",
        "Little knowledge of PHP, though not neccessary becase I'll teach you everything you need to know",
        "Little knowledge of CSS will be an advantage",
        "Zeal to learn codeigniter framework",
        "Computer I'll walk you through, step-by-step how to setup codeignitersystem - windows/mac"
      ],
      "description": "The world’s best video conferences are built on Jitsi.\nJitsi is a set of open-source projects that allows you to easily build and deploy secure video conferencing solutions. At the heart of Jitsi are Jitsi Videobridge and Jitsi Meet, which let you have conferences on the internet, while other projects in the community enable other features such as audio, dial-in, recording, and simulcasting.\nLive streamed video means viewers can participate and watch in real-time. Live stream is the future of video and presents a world of opportunity for school communications and distance learning. It is not only a great way to capture and share events when they occur, but a way to automatically build a video library of all your important school communications and engaging school stories.\nOnce these live stream videos are created, they can be stored and repurposed for your future content needs. With a little planning and research, live streaming can become a core element in your district communications content strategy.\nLive streaming is coming to a school near you soon.\nWith school closures come a huge need for school districts to get up to speed fast on using live streaming for school communications and remote learning. Whether it's urgent news about a pandemic, ongoing, regular opportunities to reach your school community, or a foundational element to your distance learning, live streaming video needs to be part of your communications strategy.\nWhat makes a good school live video?\nThere are endless sources of raw material for live streaming content:\nOnline classrooms\nSchool board and PTA meetings\nSuperintendents/principal messages\nIn-service and other meetings\nSporting and special events\nPep rallies/assemblies\nGraduation and other ceremonies\nPlays and concerts\nand many others...\nWhy Jitsi (Features)\nJitsi Videobridge passes everyone’s video and audio to all participants, rather than mixing them first.\nBetter quality, lower latency and if you are running your own service, a much more scalable and inexpensive solution.\nJitsi is compatible with WebRTC, the open standard for Web communication.\nAdvanced video routing support for simulcast, bandwidth estimations, scalable video coding and many others.\nUbuntu and Debian packages for easy installation.\nJitsi is the best, most secure video conferencing solution available for FREE to anyone.\nJitsi surpasses 10 million monthly average users!\n\n\nFrom Beginner to Expert CodeIgniter Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on elsewhere.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. The course is practical oriented and it is a not waste time course as we learn by practical.\nDon’t waste your time\nDon’t waste another minute of your precious life on poor quality videos. Or instructors who you can’t understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it.\nSign up today, and look forwards to:\nBuilding complete and standard school management system.\nAll the knowledge you need to start building any web app you want\nChallenges and Solutions\nFast and helpful support if you need anything or have questions\nMy great sense of humor.\nBe ready to build meaningful software quickly\nJoin us NOW as we successfully integrate jitsi video conference api to our existing codeigniter projects !",
      "target_audience": [
        "Beginner and professional developers who want to learn more about codeigniter",
        "Beginner and professional developers who want to learn how to integrate Jitsi Video Conference with CI",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build complete school system",
        "Developers who want to be codeigniter expert.",
        "Beginner Codeigniter developers curious about how to build school system"
      ]
    },
    {
      "title": "Next.js 13 and React Crash Course 2023",
      "url": "https://www.udemy.com/course/nextjs13/",
      "bio": "Build a Full Stack NextJS 13 App with React, Tailwind and Prisma backend",
      "objectives": [
        "Learn key NextJS 13 features like App Directory Structure, Routing, React Server Components vs Client components, Layouts and more.",
        "Learn how to build client-side, server-side, fullstack ReactJS apps with NextJS.",
        "Build a practical hands-on project without all the fluff.",
        "Learn NextJS even if you are a beginner in a weekend."
      ],
      "course_content": {},
      "requirements": [
        "React knowledge is recommended. But the course includes a React starter book.",
        "No previous NextJS knowledge is required"
      ],
      "description": "In this course, we take you on a fun, hands-on and pragmatic journey to learning Next.js 13 development. You'll start building your first Next.js app within minutes. Every section is recorded in a bite-sized manner and straight to the point as I don’t want to waste your time (and most certainly mine) on the content you don't need.\nIn this course, we will cover:\n1. Introduction and Setup\n2. File Structure, HomePage and Using Daisy UI\n3. Routing System and Nested Routes\n4. Layouts\n5. Metadata API\n6. Navigation Bar\n7. React Server Components vs Client Components\n8. Data Fetching\n9. Rendering GitHub Users\n10. Dynamic Routes and Params Prop\n11 Repos Component\n12. Loading Page\n13. Caching and Revalidating\n14. API Route Handlers\n15. Serving Books Data\n16. Fetching Books Data\n17. Slight Adjustment\n18. Getting Search Params\n19. Adding a New Book\n20. Refactor Server to Client Component\n21. Search Component\n22. AddBook Component\n23. Calling the Add Book End Point\n24. Refreshing Books After Adding\n25. Deleting a Book\n26. Setting up Prisma Database\n27. Getting Books from Prisma\n28. Adding a book into Prisma DB\n29. Deleting from Prisma Database\n30. Searching from Prisma Database\nThe goal of this course is to teach you Next.js full stack development in a manageable way without overwhelming you. We focus only on the essentials and cover the material in a hands-on practice manner for you to code along.\n\nWorking Through This Course\nThis course is purposely broken down into short sections where the development process of each section will center on different essential topics. The course a practical hands on approach to learning through practice. You learn best when you code along with the examples.",
      "target_audience": [
        "React and web developers in general who want to build fullstack React apps"
      ]
    },
    {
      "title": "Understanding Advance PHP Techniques with OOP | AJAX | MySQL",
      "url": "https://www.udemy.com/course/understanding-advance-php-techniques-with-oop-ajax-mysql/",
      "bio": "A practical guide to becoming a successful Professional Freelance PHP Web App Developer",
      "objectives": [
        "Understand to use PHP Advance Techniques",
        "Learn to implement API and Classes written in OOP",
        "Learn to use PDO for Online Database Manipulation",
        "Learn to use JQUERY AJAX for Asynchronous Tasks",
        "Build a Web Application by yourself",
        "Understand Bootstrap",
        "Understand how to use PHP Codes with HTML to display dynamic contents from your database"
      ],
      "course_content": {
        "Planning & Setting up Environment": [
          "Introduction",
          "Overview of Freelance PHP Development",
          "Planning our Project with Project Management Methodology",
          "Building a Gantt Chart for Task Tracking",
          "Setting up and Testing Environment"
        ],
        "Excel to Database and Creating Additional Databases": [
          "Exporting Excel File for MySQL Database",
          "Creating our Databases"
        ],
        "Creating our Functions and Classes": [
          "Creating our Helper Functions",
          "Database class using PDO Part 1",
          "PDO Class Part 2",
          "PDO Class Part 3",
          "Creating our PHPMailer Class",
          "Setting up the project and Files"
        ],
        "Implementing our Login / Registration": [
          "Creating Functions to Process Form Data",
          "Processing Form Data to Database",
          "Testing Registration and Debugging",
          "Function to Login User",
          "Processing User Sessions",
          "Page Security and Logout"
        ],
        "Updating User and User Page Customization": [
          "Processing User Update Form",
          "Passing Data Values to Database",
          "Update Progress Bar and Customizing Dynamic Page"
        ],
        "Implementing Messaging Functionality": [
          "Processing Messaging",
          "Processing Emailing Admin with File Attachement",
          "Passing Sent Messages to Database",
          "Creating Inbox and Reply Page",
          "Fetching Data from Database to Inbox",
          "Working on Replying Message",
          "Posting Reply Messages",
          "Deleting Messages and Reply Messages"
        ],
        "Membership Validation and Package Purchase": [
          "Building functions to check membership status",
          "Processing Package Purchase | Package Selection Form 1 | Sample Page",
          "Processing Package Purchase | Package Details Form 2 | Sample Page",
          "Processing Package Purchase | Order Summary / Saving Order Form 3 | Sample Page",
          "Processing Save Order for Future Purchase",
          "Getting and Displaying Saved Orders on From 4 | Same Page",
          "PayPal Checkout Form Integration with Dynamic Values"
        ],
        "Implementing Admin Panel Management System": [
          "Admin Employers and Admin Users",
          "Processing Employer and Admin Login",
          "Adding Product to Database From Dashboard",
          "Displaying Totals and Summary in Dashboard",
          "Reading Database Tables Data in Dashboard"
        ],
        "Managing Clients from Admin Panel": [
          "User Account Dynamic Page Deletion",
          "Messaging Client",
          "Replying Client",
          "Debugging Client Messaging & Replying Issues"
        ],
        "AJAX Dynamic Search": [
          "Creating the Dynamic Search Criteria",
          "Creating AJAX Functions using the POST Method",
          "Fetching Data Dynamically as User Types in Search Box with AJAX"
        ]
      },
      "requirements": [
        "Basic PHP",
        "Basic OOP",
        "Fast Learners May Still Enroll"
      ],
      "description": "Do you want to follow someone to make a project or you want to learn,  understand and create your own projects?  Do you want to be taught how to program web applications in PHP from concept to finishing? Do you want explanations to why, how and when to get things done? I believe your answers are; You want to learn,  understand and create your own projects, you want to know \"HOW TO\" and YES, you want to be taught with explanations.\nThis course is structured to help you take up projects from its inception to finishing with respect to PHP Web Application Development. We are going to take up this course with all seriousness and we are going to use project management methodology to tackle it.\nYou will learn to take up projects from inception to finishing\nYou will learn PHP | PDO | AJAX | MySQL | OOP\nYou will learn how to use API such as PayPal to process and Verify Payments with PDT\nYou will learn how to make dynamic search such has google search with additional criteria\nYou will learn how to use Open Source Classes such as PHPMailer to send HTLM Messages with File Attachments\nYou will learn Pagination and how to process multiple forms on a single page\nYou will learn to convert Excel work sheet to a usable SQL file for Online Databases\nYou will learn and build Admin Dashboard, Client Memberships and Privileges\nThe concepts you will learn from this course will enable you build and work with CMS projects, eCommerce Apps, Directory Apps and any PHP build system out there so that you can start making money as a freelancer or a full time employer.\nWe shall learn how to successfully manage projects using Project Management methodology with Project Planning Concepts and Gannt Chart.\nYou need basic PHP for this course. I have both free and professional course where I explained the basics of PHP | OOP | AJAX | PDO and MySQL. Kindly take that course or any Basic PHP course out there before you take this course.\n\nThank You.",
      "target_audience": [
        "PHP Learners",
        "Database Web App Developers",
        "Advance PHP Learners",
        "Freelance Web Developers",
        "Web Developers looking forward to becoming Professionals",
        "Individuals looking forward to becoming Professional Web App Developers"
      ]
    },
    {
      "title": "Typescript Async/Await in Node JS with testing",
      "url": "https://www.udemy.com/course/typescript-asyncawait-in-node-js-with-testing/",
      "bio": "Learn new async programming with Typescript and easy integration testing with mocha and Express Integration",
      "objectives": [
        "setup nodejs with typescript",
        "use typescript async await features to do async programing",
        "reduce callback hell",
        "understand how async await uses promises",
        "write simple integration test with mocha"
      ],
      "course_content": {
        "Intro and installations": [
          "Intro and what to Expect",
          "Basic installations",
          "installing tsd and typings",
          "Typescript compilation and tsconfig setup",
          "Simple Node.js Express server with typescript"
        ],
        "Express js and Models": [
          "setting up express app and basic routing",
          "setting up Mongoose and bodyParser",
          "User Mongoose Model and Signup Route"
        ],
        "Authentication and AuthMiddleware": [
          "Signing in and session creation",
          "Authentication Middleware",
          "Getting current Authenticated User"
        ],
        "Testing": [
          "Integration test with Mocha and supertest",
          "setting up npm script and using should.js assertion",
          "testing signin route",
          "testing signin with wrong password",
          "testing me and setting headers in supertest"
        ],
        "Promise and Async/await basics": [
          "Basics of Promises",
          "Mongoose and Promises",
          "basic async/await"
        ],
        "Async/Await": [
          "more async/await and refactoring signin",
          "me route refactored to async/await"
        ]
      },
      "requirements": [
        "students need to have Node.js installed and know a little about Node.js"
      ],
      "description": "This course would teach you how to have a good mental model doing async programing in node.js leveraging typescript async await EcmaScript 7 (ES7) feauture.\nyou would also learn the build blocks of async/await which is Promise\nUnit testing with mocha would be setup.\nThis course would teach you how to test rest api. with postman and later automate it with mocha unit test using supertest and an assetion library such as Should.js\n\nMongoose and mongodb would used and also setup interface for mongoose models in Typescript\ngetting acquinted with typescript\nThis course is structured in a way that it can get you up to speed with applying Typescript to Node.js.\nyou would also learn some Express.js basics and middlewares\nyou should take this course if you have started learning node.js or want to bring type safety to your Node.js app with Typescript or you want to learn how to use the beautiful async/await syntax to write more maintable code. this course also makes use of mongoose mongodb. so you would also learn how to use mongoose with typescript",
      "target_audience": [
        "this course is meant for people who have started learning Nodejs or Typescript or want to improve there async programming skills in Nodejs"
      ]
    },
    {
      "title": "VueJS and NodeJS: A Practical Guide with Typescript",
      "url": "https://www.udemy.com/course/vue-node-admin/",
      "bio": "NodeJS with Typescript, Vue 3 Composition API, Vuex, MySQL, TypeORM, Upload Images, Export CSV",
      "objectives": [
        "Use NodeJS with Typescript",
        "Use TypeORM with MySQL",
        "Generate Jwt Token",
        "Login with HttpOnly Cookies",
        "Upload Images",
        "Export CSV files",
        "Use Vue 3 with Typescript",
        "Use Composition API",
        "Dispatch events with Vuex"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "NodeJS": [
          "Setup",
          "Typescript",
          "Express",
          "Routes",
          "Validation",
          "TypeORM",
          "Register",
          "Login",
          "Jwt",
          "Authenticated User",
          "Logout",
          "Environment Variables",
          "Middlewares",
          "Profile",
          "Users CRUD",
          "Roles",
          "Permissions",
          "Seeders",
          "Roles and Permissions CRUD",
          "Products",
          "Pagination",
          "Uploading Images",
          "Static Routes",
          "Orders",
          "Typescript Getters",
          "Export CSV",
          "Raw SQL",
          "Permission Middleware"
        ],
        "VueJS": [
          "Setup",
          "Template",
          "Components",
          "Routes",
          "Ref",
          "Child Components",
          "Form Submit",
          "Register",
          "Redirecting",
          "Reactive",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Pagination",
          "Watchers",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Vuex",
          "Vuex Modules"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to create an Admin App using Vue 3 and NodeJS.\nIn NodeJS you will learn:\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Access Middlewares\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV's\nIn Vue you will learn:\nUse Vue with Typescript\nUse Vuex\nHow to use Composition API\nCreate classes, interfaces\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "Code Along - AWS Lambda, Kinesis and Serverless Framework",
      "url": "https://www.udemy.com/course/code-along-aws-lambda-kinesis-serverless-framework/",
      "bio": "Architect a real time search platform using the \"Serverless Framework\" and AWS Lambda, API Gateway, Kinesis & Algolia",
      "objectives": [
        "Architect and develop a complete search platform using the Serverless framework and AWS technologies"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Project": [
          "Problem Statement",
          "Structure of Data",
          "Traditional Solution",
          "The New Serverless Architecture",
          "Github Link"
        ],
        "Starting Out with Serverless Framework": [
          "Installation & Configuration",
          "A brief Introduction",
          "Generate the project",
          "Caution: Node.js version",
          "First Lambda Function",
          "Understanding how Lambda Functions execute",
          "Sample Data"
        ],
        "Lambda Functions": [
          "Lambda Function to Push to Kinesis",
          "Kinesis Streams: A Introduction",
          "Understanding the data further",
          "Pushing data to kinesis continued"
        ],
        "Kinesis Consumer": [
          "Write a Kinesis Consumer",
          "Pushing data to Algolia",
          "Working with Algolia",
          "Faceting",
          "break and feedback :)"
        ],
        "Serverless API Functions": [
          "API Function I",
          "API Function II",
          "Where are the serverless functions hosted ?",
          "API Function III"
        ],
        "Final Steps": [
          "Meeting the KPI's",
          "Architectural Review",
          "End"
        ]
      },
      "requirements": [
        "Knowledge of JavaScript",
        "Knowledge of AWS LAMBDA"
      ],
      "description": "IN THIS COURSE I'LL WALK YOU THROUGH A SOLUTION CREATED USING AWS LAMBDA & KINESIS.\nTHIS IS NOT A TUTORIAL ON AWS LAMBDA OR KINESIS.\nWelcome to another course in the code along series. You are probably here because you may have heard a lot of buzz around server less technologies and specifically AWS lambdas and Kinesis. You probably know that this is code that runs without servers (i.e without you having to provision servers) but are not sure exactly where and how to use them.\nIn this course we will use these technologies to solve a real-industry problem.\nWe use the following technologies to arrive at our solution:\nThe Serverless Framework\nAWS LAMBDA\nAWS KINESIS\nALGOLIA SEARCH DATABASE.\nCAUTION:\nTHIS IS NOT A THEORY COURSE.  THIS COURSE IS ALL ABOUT IMPLEMENTATION :)\nAND HERE IS THE GOOD NEWS.  As we dive into the implementation, i will explain every single line of code, every single decision we make and how we arrive at solving out problem.\nIt will not matter that you do not know anything about these technologies. You will be able to follow along with ease.\nBy the end of this course you will be better off that those folks who simply watch fundamentals course because you will have implemented an end-to-end architecture.\nI hope you enjoy following this course as much as I enjoyed developing it.",
      "target_audience": [
        "Software Architects"
      ]
    },
    {
      "title": "React ASP.NET Core Starter Guide",
      "url": "https://www.udemy.com/course/react-asp-net-core/",
      "bio": "Learn how to use React and ASP.NET Core to develop Web Apps",
      "objectives": [
        "React Basics",
        "ASP(dot)NET Core Basics",
        "Create beautiful React Sites",
        "Connect react to .NET Backend to process and receive data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project Setup": [
          "Creating React and ASP.NET Core Project",
          "Creating your first react component"
        ],
        "ASP.NET Core Basics": [
          "Startup.cs",
          "ConfigureServices",
          "Configure",
          "Dependency Injection",
          "appsettings",
          "Custom Middleware",
          "Swagger Setup",
          "EF Core Setup",
          "Stackify"
        ],
        "ASP.NET Core Web API": [
          "Creating API Controller",
          "GET",
          "POST",
          "PUT",
          "DELETE"
        ],
        "Components": [
          "Props",
          "Lifecycle",
          "State",
          "Events",
          "Conditional Rendering",
          "Iterations",
          "Forms"
        ],
        "React Advance Topics": [
          "Errors",
          "Refs"
        ],
        "Front End and Backend Communication": [
          "Get Item List",
          "Post to Save Item",
          "PUT to update Item",
          "DELETE"
        ],
        "EF CRUD Operations": [
          "Insert",
          "Update",
          "Delete",
          "Get"
        ]
      },
      "requirements": [
        "Visual Studio 2019"
      ],
      "description": "Hello and welcome to this course. React is one of the most well known fronted frameworks where you can develop single-page applications SPA using it. Also, what is unique about React is that its performance is outstanding comparing other frameworks due to the fact that React relies on the virtual dom and do partials updates on the UI.\n\n\nASP.NET Core is the latest generation of ASP.NET. It's outstanding performance and ease of use make it the ideal backend framework to use to develop web applications. ASP.NET Core has a smaller memory footprint and out of the box dependency container that handles different components of a life time. Also, the ability to run it on all major platforms such as Linux, macOS and Windows. Also, the mode of hosting can be either under IIS or be self-contained.\n\n\nEF Core is the next generation ORM for EF. EF Core introduced huge performance enhancements comparing to older versions and more features for better developments. With EF Core, you can now see the queries and even add messages to help you debug your work.\n\n\nIn this course, no matter what is your knowledge level with React you can take this course. In this course, we will start with the creation of the ASP.NET Core Project with React and we ill deep dive into ASP.NET Core and we will see how you can configure it and also add some nice tools such as Swagger and Stackify to make your development life much easier.\n\n\nThen we will learn the basics of React and how we can use it. WE will se how we can create components with it to help share code and have a reusable UI element. And we will see how we can use the state and how to create JSX elements and Form elements.\n\n\nLater on, we will see how we can use EF Core for CRUD operations. So, we hope to see you on this course ;)",
      "target_audience": [
        "Developers",
        "Designers",
        "Technical Team Leader",
        "Evangelists"
      ]
    },
    {
      "title": "Learn Reactivex From Ground Up",
      "url": "https://www.udemy.com/course/learn-reactivex-from-ground-up/",
      "bio": "Master the technology of the future and start building better apps with ReactiveX",
      "objectives": [
        "Learn Asynchronous Programming with Reactive X",
        "Learn to manipulate UI events and API responses",
        "Learn to program with JavaScript Reactive Extensions",
        "Master the core concepts of Reactive programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Intro To Reactive Programming": [
          "Section Intro",
          "Programming Paradigms",
          "Reactive Programming & RxJS",
          "Setting Up Our Environment",
          "Intro To Reactive Programming Quiz"
        ],
        "Creating Observables": [
          "Section Intro",
          "Observables From Events",
          "Observables From Array-like Objects",
          "Create Observables From Scratch",
          "Hot & Cold Observables",
          "Simple Operators to Create Observables",
          "Observable From Promise",
          "Creating Observables Quiz"
        ],
        "Transforming & Filtering": [
          "Section Intro",
          "Using Map & Pluck",
          "Working With Buffers",
          "Find & Select From Observables",
          "Filter, DebounceTime & Distinct",
          "Transforming & Filtering Quiz"
        ],
        "Combining Observables": [
          "Section Intro",
          "Merge & Concat",
          "MergeMap, ConcatMap & SwitchMap",
          "GithubSearch Project Cleanup",
          "Zip, CombineLatest & WithLatestFrom",
          "Combining Observables Quiz"
        ],
        "Extras": [
          "Section Intro",
          "Utility Operators",
          "An Intro To Subjects",
          "Error Handling",
          "Extras Quiz"
        ],
        "WeatherFinder Project": [
          "Project Intro",
          "App Setup & API Request",
          "Submit Event & Data Manipulation",
          "Bootstrap UI",
          "Output Weather Data"
        ],
        "Course Summary": [
          "Course Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Students should have good understanding of JavaScript before taking this course"
      ],
      "description": "The first COMPLETE ReactiveX Course is finally here! Learn everything you need to know about Reactive programming and ReactiveX in this one concise and comprehensive course. There are no proper resources to learn Reactive programming, UNTIL NOW.\nReactive programming has become the latest go to technology for many companies, that helps developers design websites and apps that are more robust, resilient, flexible and scalable. All of this with the least amount of coding possible, you no longer have to worry about creating and maintaining way too many nested tables. The best part about Reactive programming is that it works with all the major programming languages that are currently available on the market, through ReactiveX.\nReactiveX is a functional library extension that can be added to your programming to make your app or website reactive. It creates asynchronous and event­ based programs by using observable sequences. It allows developers to make arrays, objects, and also events into an observable stream,which can then be subscribed to and can emit data, errors (if something goes wrong) or even the complete signal if the event completes.\nWith the few number of resources available online, learning this technology has become a pain. You have to search for many different blogs that do not provide the complete information or very vague articles and manifestos that cover reactive programming, but not ReactiveX. This is why we created the complete Reactive and ReactiveX course, to help you learn everything you need to know about Reactive Programming and ReactiveX API in one place!\nFrom the fundamentals of Reactive Programming and how it can help you customize your app for responsiveness to setting up the environment to even creating a complete project with ReactiveX,this tutorial has it all.\nYou will learn the Reactive programming paradigms, ReactiveX API and how you can incorporate it with JavaScript. You will also learn how to design observables from all sources possible, including creating them from scratch. We will also cover transforming and filtering functions and even how to combine two observations. Finally, you will design a WeatherFinder Project using everything you’ve learned in the course along with the instructor.\nWith so much left to learn, what are you waiting for? Let’s get ReACTIVE!",
      "target_audience": [
        "Students who want to learn reactive programming concepts for web development will find this course extremely useful"
      ]
    },
    {
      "title": "Mastering PHP, MySQL and JavaScript for web developers",
      "url": "https://www.udemy.com/course/learning-php-mysql-and-javascript-for-web-developers/",
      "bio": "Complete Developers course for web design, development with scripting, coding and database queries | Open source tools!",
      "objectives": [
        "Working on Dynamic web application coding",
        "You will learn to code on Coding, Database and Front-end technology",
        "Create your own stunning, layouts for awesome websites",
        "Start creating web sites for business needs",
        "Master client-end design using JavaScript, back-end development PHP coding with MySQL",
        "Apply PHP, MySQL and JavaScript on real-world tasks",
        "Create fully function web apps using PHP, MySQL and JavaScript",
        "Learn Using Generative AI tools A Hands On",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask a great questions",
          "Installing code editor",
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "External JavaScript",
          "Async and defer",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course",
          "Learn Using Generative AI tools A Hands On"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting",
          "Variable creation exercise"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Functions": [
          "Creating a Function",
          "Function Call()",
          "Function with parameters"
        ],
        "JavaScript Error Handling": [
          "Try-catch",
          "Try-catch-finally"
        ],
        "JavaScript Client-Side Validations": [
          "On Submit Validation",
          "Input Numeric Validation"
        ],
        "PHP Introduction": [
          "What is PHP",
          "Installing XAMPP for PHP, MySQL and Apache",
          "Installing Code Editor(Visual Studio Code)",
          "Creating PHP Project on XAMPP",
          "Creating PHP Project on XAMPP"
        ],
        "PHP Basic": [
          "Variables",
          "Echo and Print",
          "Data Types",
          "Numbers",
          "Boolean",
          "Arrays",
          "Multi-Dimensional Array",
          "Sorting Arrays",
          "Constants"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Become a full-fledged web developer with \"Mastering PHP, MySQL, and JavaScript for Web Developers.\" This course is tailored for aspiring developers who want to gain a deep understanding of both front-end and back-end technologies, empowering you to build dynamic, interactive, and data-driven web applications.\n\n\nLearn Using Generative AI tools A Hands On lecture to take you AI experience\n\n\nStart by mastering PHP, the powerful server-side scripting language. Learn how to create dynamic web pages, handle form data, manage user authentication, and interact with databases. You’ll explore PHP best practices, including security measures like input sanitization, preventing SQL injection, and data validation.\n\n\nNext, dive into MySQL, the leading relational database management system. Learn how to design and manage databases, write complex SQL queries, and work with stored procedures and joins. Understand how to connect PHP to MySQL for data retrieval, manipulation, and storage, allowing you to create fully functional applications with dynamic content.\n\n\nOn the front-end, you’ll master JavaScript, the language of interactivity. Learn how to manipulate the DOM, handle events, and validate forms, making your web applications interactive and user-friendly. You’ll also explore modern JavaScript frameworks like jQuery easily by learning this module, which simplifies DOM manipulation and AJAX calls.\n\n\nThroughout the course, you’ll apply your skills to real-world projects, such as building content management systems, e-commerce sites, and social media platforms. By the end of the course, you’ll be ready to develop complete web applications using PHP, MySQL, and JavaScript.\n\n\nEnroll today and take your web development skills to the next level with this comprehensive course!",
      "target_audience": [
        "Beginner PHP coding, MySQL and JavaScript developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Deploy Spring Boot services to AWS ECS Fargate with AWS CDK",
      "url": "https://www.udemy.com/course/aws-ecs-spring-boot-aws-cdk/",
      "bio": "Create microservices with AWS ECS, AWS CDK V2, Spring Boot V3 in Java 21. Learn to use SNS, SQS, DynamoDB, S3,AWS SDK V2",
      "objectives": [
        "Build microservices in Spring Boot V3 and Java 21, with AWS ECS and Fargate, the Serverless compute for containers from AWS, using DynamoDB, SNS, SQS, S3, API;",
        "Use AWS Cloud Development Kit (CDK) V2 to model and provision the infrastructure on AWS using Java. The AWS CDK is one of the best infrastructure as code tool;",
        "Use AWS SDK V2 for Java to access AWS resources, which is fully integrated with the Spring Boot framework and with JDK libraries to execute jobs concurrently;",
        "Build API with AWS API Gateway, with query string parameters and request body validations;",
        "AWS CloudFormation and resources organized in stacks;",
        "Model and provision resources on AWS with the AWS Cloud Development Kit (CDK) in Java;",
        "Create microservices using AWS Fargate without having to create infrastructure such as machine instances;",
        "Create clusters with AWS ECS service to control the application tasks' execution;",
        "Use AWS S3 to create an event-based file processing mechanism, integrated with AWS ECS services;",
        "Balance the requests between the application instances using the AWS Application Load Balancer service;",
        "Monitor microservices execution with the AWS X-Ray;",
        "Create subnets and network security rules using AWS VPC, to protect the application containers;",
        "Monitor application health using the AWS Target Groups, fully integrated with AWS ECS services;",
        "Create tables in AWS DynamoDB with a composite primary key;",
        "Learn how to query items from AWS DynamoDB tables using a composite primary key;",
        "Configure AWS DynamoDB tables in provisioned mode and with auto scaling;",
        "Configure AWS DynamoDB tables in on-demand mode;",
        "Monitor consumption graphs in AWS DynamoDB console;",
        "View logs from the microservices in AWS CloudWatch Insights;",
        "Publish messages to topics on AWS SNS via microservices;",
        "Consume AWS SQS messages from the microservices in a Spring Boot application;",
        "Subscribe AWS SQS queues to AWS SNS topics with message filtering;",
        "Import files using AWS S3, consuming its events from AWS SQS queues;",
        "Store the application Docker images in private repositories using the AWS ECR;",
        "Monitor application logs, parameters, and resource events for alarm generation with AWS CloudWatch Alarms;",
        "Create a Dead-Letter Queue engine with AWS SQS;",
        "Control costs through resource tags in AWS Cost Explorer;",
        "Control access permissions for specific DynamoDB items with AWS IAM policies;"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge of AWS is required;",
        "Object-oriented programming knowledge;",
        "REST services knowledge;",
        "You will not need to install any paid software to follow the course;",
        "Free AWS account."
      ],
      "description": "In this course you will create several microservices in Java 21, using the Spring Boot V3 framework and Docker containers, building a backend application to interact with Amazon Web Services resources, as the mentioned below. These resources will be created in AWS using the AWS Cloud Development Kit (CDK) V2, a modern way to model and provision infrastructure in AWS. The AWS CDK is one of the best infrastructure as code, or IaC, tools for AWS;\nSpring Boot V3 is a powerful Java framework to build server-side applications with annotations, controllers, services, request interceptors and much more.\n\n\nThis course will cover the following AWS resources and tools with practical exercises:\nAWS ECS: the Elastic Container Service is the AWS container orchestration service. With this service it's possible to manage the Docker based microservices containers execution in a robust and scalable way. And with the AWS Fargate, the Serverless compute for containers from Amazon Web Services, it isn't necessary create EC2 instances, reducing the operating cost of container based applications;\nAWS ECR: with the Elastic Container Registry from AWS it's possible to create private repositories to store the microservices' container Docker images;\nAWS VPC: with the Virtual Private Cloud it's possible to secure the infrastructure with private subnets and network security policies for inbound and outbound traffic rules;\nAWS ALB: the Application Load Balancer from AWS allows the incoming HTTP traffic to be balanced between all the available application instances, and with the integrated target groups, each instance can be monitored to only receive traffic if it is healthy;\nAPI Gateway REST: with the AWS API Gateway it's possible to protect the application REST API, as well as performing query string parameter and requests' body validation;\nCloudWatch Logs: responsible for concentrating applications logs and its metrics. The applications that will be created in this course will generate logs into CloudWatch Logs in a JSON format, using the log4j2 library. In this way, we can inject parameters in the logs, to be used in queries in the AWS CloudWatch Logs Insights console;\nCloudWatch Alarms: with the alarms from CloudWatch it will be possible to monitor the abnormal occurrences from the applications and AWS resources;\nCloudWatch Container Insights: with the Container Insights it's possible to aggregate monitoring information from the applications running in AWS ECS, including its logs;\nDynamoDB: the DynamoDB is a powerful NoSQL and non-relational database managed service. This course presents the usage of the DynamoDB enhanced client from the AWS SDK V2 for Java, which is a high-level library that allows a way to map client-side classes to DynamoDB tables;\nSQS: the SQS, or Simple Queue Service, is a queue service which allows asynchronous communication between applications, in order to exchange messages and events;\nSNS: with the SNS, or Simple Notification Service, it's possible to create topics and publish messages to be received by several resources and applications;\nS3: the S3, or Simple Storage Service, has a file storage with no server provisioning. Also, the S3 generates notifications when files are added to it;\nX-Ray: the AWS X-Ray is a service which allows analysis and debugging of distributed applications;\nIAM: the Identity and Access Management from AWS allows roles and permissions management, granted to users and services to access other AWS resources;\nAWS Cost Explorer: with the Cost Explorer from AWS it's possible to generate cost graphs about resource consumption, split by resource types and tags, which can identify applications and their parts.\nThese resources will be created on AWS using the AWS Cloud Development Kit - CDK, a modern way of modeling and provisioning infrastructure on AWS using the Java language. The AWS CDK is ideal if you want to work in the DevOps and in the infrastructure as code fields.\n\n\nWith this you will also learn how to use the AWS SDK V2 for Java, which is a set of libraries developed by AWS itself to use its services.\n\n\nThe AWS SDK V2 for Java is fully integrated with the Spring Boot V3 framework and with JDK 21 libraries, so it's very easy to access the AWS resources in an elegant way, creating operations to be execute concurrently.\n\n\nIf you already have AWS certification and are looking for hands-on experience, you can get that with this course, through the exercises that will be offered here.\n\n\nThis course has a good balance between theoretical and practical exercises. You can expect detailed explanations with diagrams and well-guided implementations, always with a well-defined purpose.\n\n\nNote: This course is not intended to prepare you for an AWS certification exam. There are other courses that are specific to AWS certifications.\n\n\nAlso included in the package, when you buy this course:\nStudent support, through the platform questions and answers section;\nProject source code to help you at the beginning of the course;\nQuizzes to test your knowledge about course topics;\nPractical exercises to let you practice, with detailed solutions offered by the instructor;\nAbout the instructor:\nI've been worked daily with the presented technologies in this course since 2016, acting as an AWS hosted solutions developer;\nI've been a profesor in cloud computing and mobile subjects, including AWS, in a postgraduate course for almost 10 years;\nI have published books on the subject;\nI am part of the AWS Community Builder since 2020, a global community created by Amazon Web Services.\nCredits for the music used in the course presentation: Bensound - License code: 8XYDILY4RHGNN6VB",
      "target_audience": [
        "Developers who want to learn about building microservice based applications on AWS;",
        "Cloud computing beginners, with or without prior knowledge, who want to learn more about AWS.",
        "Professionals with AWS certifications who want to get hands-on experience with AWS services",
        "DevOps professionals who want to learn how to build container infrastructure on AWS",
        "Professionals who want hands-on experience with infrastructure as code, or IaC"
      ]
    },
    {
      "title": "CSS, Bootstrap ,JavaScript, PHP And Python Full-Stack Course",
      "url": "https://www.udemy.com/course/css-bootstrap-javascript-php-and-python-full-stack-course/",
      "bio": "Learn Full Stack Course CSS, Bootstrap ,JavaScript, PHP And Python Complete Course",
      "objectives": [
        "Introduction to CSS And Bootstrap JavaScript concepts, PHP Programming Language And Python Programming Language",
        "Write CSS Scripts And Understanding Concepts",
        "Practically Getting Started With CSS Styles, CSS 2D Transform, CSS 3D Transform",
        "Bootstrap Crash course",
        "Introduction to bootstrap concepts",
        "Bootstrap Grid system,Forms, Badges And Alerts",
        "Getting Started With Javascript Variables,Values and Data Types, Operators and Operands",
        "Write JavaScript scripts and Gain knowledge in regard to general javaScript programming concepts",
        "Introduction And Use of JavaScript Variables, JavaScript Arrays, JavaScript Objects",
        "PHP Section Introduction to PHP, Various Operator types , PHP Arrays, PHP Conditional statements",
        "Getting Started with PHP Function Statements And PHP Decision Making PHP 7 concepts PHP CSPRNG And PHP Scalar Declaration",
        "Python section ,python operators and various operator types",
        "Python function statements and python decision making",
        "python use of lambda function and python command line arguments"
      ],
      "course_content": {
        "Section 1- CSS Complete Course": [
          "CSS IN HTML",
          "CSS Introduction",
          "CSS Basic Syntax",
          "CSS Fonts",
          "CSS Text",
          "CSS Links",
          "CSS Layers",
          "CSS Lists",
          "CSS Animation",
          "CSS 2D Transform",
          "CSS 3D Transform",
          "CSS Colors Introduction",
          "CSS Colors 2",
          "CSS Cursors",
          "CSS Padding",
          "CSS Positioning",
          "CSS Dimensions",
          "CSS Rounded Corners",
          "CSS Visibility",
          "CSS Scrollbars",
          "CSS Selectors",
          "CSS Background",
          "CSS Gradient",
          "CSS Images",
          "CSS Borders"
        ],
        "Section 2- Bootstrap Crash Course": [
          "Bootstrap Environment Setup",
          "Bootstrap Forms",
          "Bootstrap Badges",
          "Bootstrap Alerts",
          "Bootstrap Breadcrumb",
          "Bootstrap Button Groups",
          "Bootstrap Buttons",
          "Bootstrap List Groups",
          "Bootstrap Labels",
          "Bootstrap Grid System"
        ],
        "Section 3- JavaScript Complete Course": [
          "JavaScript Introduction",
          "JavaScript Array",
          "JavaScript Variables",
          "JavaScript Conditional Statement Introduction",
          "JavaScript If Else Statement.",
          "JavaScript Iteration Statements",
          "JavaScript for Loop",
          "JavaScript While Loop",
          "JavaScript Do..while loop",
          "JavaScript Loop Control Statements",
          "JavaScript Switch Statement",
          "JavaScript Operators",
          "JavaScript Logical Operators",
          "JavaScript Comparison Operators",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Error Handling",
          "JavaScript Cookies",
          "JavaScript Animation",
          "JavaScript Objects",
          "JavaScript Page Redirect."
        ],
        "PHP Complete Course": [
          "PHP Basic Syntax",
          "PHP Web Concepts.",
          "PHP Console Input And Output",
          "PHP Arithmetic Operators",
          "PHP Comparison Operators",
          "PHP Assignment Operators",
          "PHP Conditional Operator",
          "PHP Function Statements",
          "PHP Break Statement.",
          "PHP Continue Statement",
          "PHP Decision Making",
          "PHP While Loop",
          "PHP For Loop",
          "PHP MySql API",
          "PHP MySqli API.",
          "PHP Inheritance.",
          "PHP Class And Object",
          "PHP Anonymous Class",
          "PHP Cookies",
          "PHP File Input And Output",
          "PHP Error Handling",
          "PHP Exception Handling",
          "PHP GET And POST Method",
          "PHP CSPRNG",
          "PHP Scalar Type Declaration",
          "PHP Null Coalescing Operator",
          "PHP Spaceship Operator",
          "PHP Polymorphism",
          "PHP Sessions"
        ],
        "Python Complete Course": [
          "Python Arithmetic Operators",
          "Python Bitwise Operators",
          "Python Membership Operators",
          "Python Identity Operators.",
          "Python Lines And Indentation",
          "Python List",
          "Python List Built-In Functions",
          "Python List Basic Operations",
          "Python Access, Update And Delete List",
          "Python List Methods",
          "Python Tuple",
          "Python Access, Update And Delete Tuple.",
          "Python Basic Operations Tuple",
          "Python Built In Functions Tuple",
          "Python Dictionary.",
          "Python Update And Delete Dictionary",
          "Python Dictionary Functions",
          "Python Dictionary Methods.",
          "Python String Operators",
          "Python String Formatting Operators",
          "Python String Encoding Functions",
          "Python Quotations",
          "Python Triple Quotes.",
          "Python If Statement",
          "Python If Else Statement.",
          "Python If Elif And Else Statement",
          "Python While Loop",
          "Python While Loop Else Statement.",
          "Python While Loop Single Statement.",
          "Python Infinite While Loop.",
          "Python For Loop.",
          "Python For Loop Using Index Sequence",
          "Python Using Else With For Loop",
          "Python Nested Loops.",
          "Python Mathematical Functions",
          "Python Break Statement",
          "Python Continue Statement",
          "Python Functions.",
          "Python Parameter Pass By reference.",
          "Python Return Argument.",
          "Python Trigonometric Inverse Functions",
          "Python Default Arguments",
          "Python Anonymous (Lambda) Functions.",
          "Python Command Line Arguments",
          "Python Required Arguments.",
          "Python Executing Module As A Script.",
          "Python Scope Of Variable",
          "Python Random Number Functions",
          "Python For Loop Using Range Function.",
          "Python Trigonometric Misc Functions",
          "Python Single Statement Suites",
          "Python Keyword Arguments."
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "Learn CSS and Bootstrap and Javascript and PHP And Python all in one complete course\nsection 1- CSS course with basics and advanced concepts of CSS\never wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nthis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nwe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nthere are no prerequisites. Anyone Can join this course. It is recommended though that individual have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\ninclusion Of CSS In HTML\nCSS syntax\nCSS styling Text\nCSS page backgrounds\nCSS 2D transform\nCSS 3D transform\nCSS animation\nand more....\n\n\n\n\nSection 2- Learn bootstrap in a crash course\n\n\nbootstrap grid system\nbootstrap alerts\nbootstrap badges\nbootstrap forms\nbootstrap breadcrumb\nbootstrap  labels\nand more...\n\n\nSection 3- learn javascript programming language\nThe course is created with thorough, extensive, but easy-to-follow content that you’ll easily understand and absorb.\nThe course starts with the basics, including JavaScript fundamentals, programming, and user interaction.\n\n\nthe curriculum is going to be very hands-on as we walk you from start to finish to become a professional Javascript developer. We will start from the very beginning by teaching you Javascript basics and programming fundamentals, and then execute into real-life practice and be ready for the real world.\n\n\nwhile Javascript is complicated for beginners to learn, it is widely used in many web development areas.\nthis course gets you started with an introduction to JavaScript. It assumes that you're new to the language, so it gets you started with basic functionality such as creating functions, creating variables, and calling these lines of code from your standard HTML pages. It talks about events and triggers for custom event handling. It talks about pattern matching, searching for text within a page, flow control, and the document object model (DOM). We start off with the basics and move on to more complex functionality such as arrays and objects. We then discuss how to script common elements with JavaScript such as forms and tables. At the very end, we discuss major libraries such as Ajax, which allows you to make asynchronous calls to server-side scripts without reloading the web page in the server.\nMaster the fundamentals of writing Javascript scripts\nLearn core Javascript scripting elements such as variables and Objects\nDiscover how to work with lists and sequence data\nWrite Javascript functions to facilitate code reuse\nUse Javascript to read and write files\nMake their code robust by handling errors and exceptions properly\nSearch text using regular expressions\nThe topics covered in this course are:\n* javascript course contents:\nJavascript introduction\nJavascript array\nJavascript variables\nJavascript functions\nJavascript objects\nJavascript control statements\nJavascript cookies\nJavascript loop statements\nJavascript data structures\nJavascript error handling\nJavascript regular expressions\n\n\n\nsection 4- learn PHP programming language\nThis section will learn the basic structure of a web application and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, including GET/POST/Redirect. You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and superglobal variables, among other elements.\n\n\nThe topics covered in this PHP course are:\n\n\nPHP various operator types\nPHP arrays\nPHP conditional statements\nPHP loops\nPHP function statements\nPHP decision making\nPHP file Input and Output\nPHP web concepts\nPHP MySql API\nPHP CSPRNG\nPHP scalar declaration\nand more..\n\n\nSection 5- python programming language.\nThis course section provides an introduction to programming and the python language. students are introduced to core python programming concepts like conditionals, loops, variables, and functions. this section includes an overview of the various python aspects. It also provides hands-on coding exercises using commonly used writing custom functions, and reading and writing to files. this section or whole course may be more robust than some other courses, as it delves deeper into certain essential programming topics.\nwhat you will learn in this section:\nIdentify core aspects of programming and features of the Python language\nUnderstand and apply core programming concepts like conditionals, loops, variables, and functions\nUse different ways for writing and running Python code\nDesign and write fully-functional Python programs using commonly used data structures, custom functions, and reading and writing to files\npython various operator types\npython methods\npython conditional statements\npython loops\npython function statements\npython decision making\npython file Input and Output\npython datatypes.\nand more..\n\n\nThank you see you inside the course",
      "target_audience": [
        "Beginner Full Stack Developers",
        "Beginner Web Developer"
      ]
    },
    {
      "title": "Create Make an Online Ecommerce Store Website: Grizzly Ridge",
      "url": "https://www.udemy.com/course/create-make-an-online-ecommerce-store-website-grizzly-ridge/",
      "bio": "Build an online ecommerce store website, learn dropshipping & SEO",
      "objectives": [
        "How to make an online ecommerce store",
        "How to design a website without coding",
        "How to create logos",
        "How to set up a business that can be run from anywhere",
        "How to start selling without purchasing stock first; Dropshipping"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Intro & Preparation",
          "A quick quiz"
        ],
        "Get hosting and set up your site": [
          "Get Hosting and a Domain Name",
          "Verify your Domain",
          "The JackRabbit Dashboard",
          "Create an email for your new domain",
          "Use your new email with Gmail"
        ],
        "Wordpress": [
          "How to set up Wordpress (Don't follow this)",
          "Logging into wordpress",
          "Wordpress Updates",
          "Quick Wordpress Setup",
          "How to use wordpress",
          "Set up the Wordpress Mailing Function",
          "Secure your site with SSL"
        ],
        "Site Layout": [
          "Download the Theme",
          "Download the Course Materials",
          "Install the Theme and Plugins",
          "Install the Theme Help File and Demo",
          "Updating the Theme and Plugins",
          "Installing the Demo",
          "Enable the Visual Composer for Post Types",
          "Search and Replace",
          "Theme Options Overview",
          "Menus & Footer"
        ],
        "Images & Graphics": [
          "Where to find Images & Graphics",
          "Logo Overview",
          "Creating a logo from a Template",
          "Creating a logo from Scratch",
          "Preparing the logo and favicon for your website",
          "Adding the logo and favicon to your site",
          "Images we need",
          "How to edit images"
        ],
        "Customize your Website": [
          "Slider Revolution Crash Course",
          "Visual Composer Crash Course",
          "Home page customization",
          "About page customization",
          "Contact Page Setup",
          "Resource Pages",
          "Page Title and Subscribe Backgrounds",
          "Set up a mailchimp account",
          "Subscription & Popup Form setup",
          "Blog Images"
        ],
        "Woocommerce": [
          "Choose a Payment Gateway",
          "Set up Stripe",
          "Set up a Business Paypal account",
          "Set Up Woocommerce",
          "Woocommerce Settings Overview",
          "Taxes",
          "Shipping",
          "Categories",
          "Tags",
          "Adding Products",
          "Attributes & Variations",
          "Grouped Products",
          "Coupons",
          "Shop Sidebar",
          "Testing your store with Stripe",
          "Testing your store with Paypal"
        ],
        "Stocking your store": [
          "Affiliate Marketing & Dropshipping",
          "Finding and Listing Affiliate Products",
          "Finding and Listing Dropshipped Products",
          "Sell more with these Dropshipping Tools"
        ],
        "Enhancing your site with Plugins": [
          "On Page SEO",
          "Google Analytics",
          "Site Security",
          "Site Performance",
          "Backup your Site!",
          "Auto Updating Plugins"
        ],
        "Troubleshooting & Final Thoughts": [
          "How to troubleshoot, solve problems and get help",
          "Conclusion"
        ]
      },
      "requirements": [
        "A $70 budget (no other costs needed to start running your store) for hosting, domain name, site design taxes and fees",
        "Basic computer skills",
        "A computer"
      ],
      "description": "In this course, you're going to learn how to make an awesome online ecommerce store website from the ground up for less than $70 - then you'll learn how to stock it with any product you without spending money on inventory.\n\n\nI'm a best selling instructor and here's what my students are saying:\n\"This course is one of the best courses I've taken. It's got great depth and tons of gold nuggets in it. Super happy with it so far.\" - Mary\n\"Just wanted to give a quick feedback about the course, and let everyone know that I am very impressed with the quality of the content! Everything is covered here, all the way from setting up a theme and plugins to actually launching your own e-commerce business. Don't just let this awesome course collect dust inside your Udemy account. USE it! Everything you need is here. Thank you, Clinton, for the amazing experience!\" - Roger\n\"If you dream of creating a working online store as soon as possible, this is THE course for you! It covers everything you will need to know in one place. Clinton is an awesome instructor. I really appreciated his rapid, concise, and inspiring teaching style, and his use of real-world examples and step-by-step detailed instructions. This course is invaluable to me, and I give it my highest recommendation!\" - Sue\n\"Great course! So far everything is fluent. Would definitely show friends to build their e-commerce website! Clint is very helpful and I couldn't have picked a better course.\" - Giovanni\n\n\nIn this course, you'll learn how to:\nbuild a website in just a few minutes that's ready to customize\ndesign a beautiful boutique and logo without coding or without having any design skills\nSell any product you want with zero out of pocket costs for inventory.\nBuild your own business from the ground up, saving thousands on development costs.\n\n\nIs it really possible to build an online store without any knowledge of coding?\nYes, and you're going to love it.\nIn this course, we're going to be using Wordpress, an easy to use content management system. Wordpress is the most popular website builder online today with over 30% of websites on the internet being powered by wordpress.\nOur online shop will be powered by a Wordpress plugin called Woocommerce. Woocommerce is one of the most powerful, full featured ecommerce platforms on the internet.\n\n\nWhat exactly will you be learning?\nThis course provides clear, step by step instructions for anyone who is interested in learning how to create an online store and stock it with products, even if you don’t have products to sell yet.\nHow to build a website in under 10 minutes\nHow to design a website without coding\nHow to use WordPress\nHow to use Woocommerce\nHow to design your own logo\nHow to make opt in forms\nHow to do Affiliate Marketing\nHow to do Drop Shipping\nHow to track your visitors using Google Analytics\nHow to do SEO\nHow to set up payment gateways\n...Plus a whole lot more\n\n\nI believe this will be the most amazing and profitable thing you'll learn this year.\n\nWe stand behind Udemy's 30 day money back guarantee, so why not give it a try?\n\nTo get started, click the button that says ‘Take This Course’ and I’ll show you how to create an online store that will make money and that your customers will love.",
      "target_audience": [
        "Those who want to start an online shop",
        "Those who prefer a smaller budget",
        "Those with no or little knowledge of web design"
      ]
    },
    {
      "title": "Fundamentals of Apache Tomcat",
      "url": "https://www.udemy.com/course/fundamentals-of-apache-tomcat/",
      "bio": "Learn the core concepts of Apache Tomcat",
      "objectives": [
        "Learn the core concepts of Tomcat",
        "How to create a Tomcat application",
        "Learn about Java servlets",
        "Configuration settings for Tomcat logs",
        "Encrypting web traffic with Tomcat",
        "Deploying a web app using Tomcat Manager"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Tomcat Basics": [
          "Getting started",
          "Installing Tomcat"
        ],
        "Servlets and Logging": [
          "Servlet overview",
          "XML",
          "Config files",
          "Tomcat application",
          "Tomcat logs"
        ],
        "Advanced Tomcat Concepts": [
          "Web Encryption setup",
          "Tomcat manager",
          "Deploying"
        ]
      },
      "requirements": [
        "Familiar with Java Programming is helpful",
        "Basic Linux admin skills"
      ],
      "description": "Apache Tomcat is a web server popular with Java programmers and system admins who need a superior web server to publish their web apps. Written in Java for the Java community, Tomcat is a free production grade web server that is open source, cross-platform (runs on Unix, Linux, Mac OSX, Windows), and very easy to install\nIn this course, you'll learn all the core concepts of using Tomcat such as all the tools and major components.\nFirst, we'll show you how to set up Tomcat and use it to install web applications.\nThen, we'll get into some more advanced concepts, including how web servers handle encryption and how to encrypt web traffic with Tomcat.\nAlso learn how to deploy a web app using Tomcat Manager, the web-based UI for managing a Tomcat instance.\nBy the end of this course you should have a solid understanding of using Apache Tomcat.",
      "target_audience": [
        "Developers and Programmers",
        "Anyone interested in Learning about Apache Tomcat"
      ]
    },
    {
      "title": "Mastering CSS",
      "url": "https://www.udemy.com/course/mastering-css-2019/",
      "bio": "Earn your CSS Specialist Certification while Learning the Language of Style and Design",
      "objectives": [
        "How to Integrate CSS to a Web Site",
        "The Foundations of CSS syntax",
        "Basic CSS rule Usage",
        "How to Style Text",
        "How to Make Typographical Adjustments to Text",
        "How to Style Forms and Buttons",
        "How to Position Elements Using CSS",
        "The CSS Box Model",
        "How to Create Responsive Designs with CSS",
        "How to use Media Queries",
        "How to Use CSS Transitions and Transformations",
        "How to do Sprite Animation with CSS",
        "How to do Keyframe Animation with CSS"
      ],
      "course_content": {
        "Mastering CSS": [
          "CSS Basics",
          "All About Styling Text",
          "Complex Selectors",
          "Styling Forms and Buttons",
          "The CSS Box Model",
          "Understanding CSS Positioning",
          "Responsive Design with CSS",
          "CSS Transitions and Animations",
          "CSS Animation and Spritesheets"
        ]
      },
      "requirements": [
        "A Basic Understanding of HTML is Helpful",
        "Mac or PC",
        "No Special Software Needed"
      ],
      "description": "CSS is the key to good looking and functional web sites.\nMaybe you're tired of creating sites that look just \"so-so\"?  Or, perhaps, you're a traditional designer trying to get certified in web technologies?  Anyone who works on the web needs to have a strong command of CSS.  Whether you're a developer, designer, teacher, or student, you need to understand modern CSS thoroughly.\nThe world has changed, and things have become more complex.\nWhen CSS first came out, pretty much everyone was looking at web sites on a standard-sized computer monitor.\nNow, you've got to contend with colossal 5k (an even 6K) monitors down to tiny mobile screens.  And your web site has to look great on all of them.  That's why a current CSS program like Mastering CSS is essential for you.\nThis course won't just teach you the in's and out's of CSS.  We created the course in the current context. Nowadays, your job as a web site developer is to make content for all screen sizes-- and make it look good!\nYou'll be awarded the CSS Specialist Certification when you complete the course.  When you place this recognized certification on your LinkedIn account, everyone can recognize your achievement.\nEnroll in Modern CSS today and start building modern web sites with the latest in CSS.",
      "target_audience": [
        "People learning web design and development",
        "People who want to become certified in CSS",
        "Teachers and Students",
        "People who learn by doing!"
      ]
    },
    {
      "title": "Mastering AWS: Featuring SQS",
      "url": "https://www.udemy.com/course/aws-sqs-aws-sqs-tutorial/",
      "bio": "An AWS SQS course that is easy to understand, produces real results, and covers the basics",
      "objectives": [
        "You will be able to discuss the sqs pricing structure",
        "You will become confortable using sqs on the Console, Command Line Interface, or nodejs Software Development Kits",
        "You will understand how to use the amazon sqs api",
        "Lead amazon sqs tutorials at your workplace",
        "Explain the difference between sqs and sns",
        "Understand key terms like message retention period, visibility timeout, etc.",
        "Create programs using aws sqs and nodejs",
        "Create an sns topics and subscribe sqs queues to the sns topic"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Create an AWS Account",
          "Create User",
          "SQS Console Overview",
          "Instructor Introduction",
          "Into to AWS",
          "Introduction to SQS",
          "Cloud9",
          "Referencces"
        ],
        "SQS": [
          "SQS Introdction",
          "SQS Overview",
          "SQS Key Terms",
          "SQS Security",
          "SQS Cost",
          "SQS Limits and Restrictions",
          "SQS Best Practices",
          "Conclusion",
          "References"
        ],
        "SQS in the console": [
          "Console Introduction",
          "SQS Standard",
          "SQS Standard and FIFO",
          "SQS with SNS",
          "conclusion",
          "References"
        ],
        "Command Line": [
          "Introduction CLI",
          "AWS SQS cli create create queue",
          "AWS SQS cli send messages",
          "AWS SQS cli delete message",
          "conclusion",
          "References"
        ],
        "SQS SDK": [
          "SDK introduction",
          "AWS sdk node.js I",
          "AWS sdk node.js II",
          "SQS SDK node.js III",
          "Conclusion",
          "References"
        ],
        "Conclusion": [
          "Course Conclusion",
          "Bonus Content"
        ]
      },
      "requirements": [
        "Basic knowledge of computer programming",
        "Basic knowledge of operating system",
        "Basic knowledge of amazon web services",
        "Basic knowledge of cloud computing"
      ],
      "description": "Did you know that Amazon Web Services first service is the Simple Queue Service (SQS)? Did you know that SQS can be scaled to meet the needs of a company of any size, including Amazon and travel sites?\nThis course, Mastering AWS Featuring SQS, will provide everything you need to apply SQS to your everyday life. This course begins at the very beginning, creating an aws account and creating a User. Next, we define both SQS and AWS. We then take a deep dive into SQS. This course discusses sqs pricing, sqs vs sns, sqs api, and much more. We then apply the fundamentals we’ve learned to programming with SQS.\nWe will program in the AWS management console, in the aws command line (aws cli), and using the aws node.js sdk. Each programming section provides three detailed sqs tutorials.\nUsing the AWS management console, we will create basic queues, queues with attributes, and queues with different configurations. Once these queues are created, we will send messages and observe the results. In addition, we will use SNS and SQS together to send messages to multiple queues.\nAfter we’ve created and modified queues in the management console, we will step out game up by manipulating sqs on the command line. Using Cloud9 we will create an EC2 environment and create, modify and delete queues in the aws cli.\nNext we create sqs queues using the aws node.js SDK. In conjunction with Cloud9, we will use an EC2 instance to create tags for our queues, list queues, create queues, and delete queues.\nAs a bonus, we will use the following AWS services to assist our learning of SQS: AWS Identity and Access Management (IAM), AWS Simple Queue Service (SNS), AWS Elastic Cloud Compute (EC2), and AWS cloud9.\nBy the end of this course, you will be able to:\nDiscuss SQS pricing\nDiscuss SQS key terms: visibility timeout, FIFO\nCreate an EC2 instance using Cloud9\nSend messages t multiple recipients using SNS and SQS\nCreate SQS queues\nCreate SQS FIFO queues\nAdjust SQS queue attributes\nSend messages via the SQS queue\nDelete SQS queues\nDelete SQS messages\nYou should consider this course if you are:\nInterested in Amazon Web Services most used Service,\nWant to take a deep dive into SQS\nWant to learn how to program on the CLI, management console, or use the node.js SDK\nWant to learn how to use Cloud9\nWant to create an AWS account",
      "target_audience": [
        "You should take this course if you want hands on simple queue service experience",
        "Would like to become familiar with sqs pricing",
        "Would like to become familiar with amazon sqs api",
        "Would like a hands on amazon sqs tutorial",
        "Would like to understand the difference between aws sqs and sns",
        "If you’d like to configure the sqs retention period",
        "Hands on tutorial of aws sqs cli (Command Line Interface)",
        "Hands on knowledge of amazon sqs nodejs Software Development Kit"
      ]
    },
    {
      "title": "Advanced WordPress & Elementor | Build A Membership Website",
      "url": "https://www.udemy.com/course/wordpress-elementor-build-a-membership-website/",
      "bio": "Learn to build a premium membership website and sell paid subscriptions in this advanced WordPress & Elementor course",
      "objectives": [
        "Purchase my recommended Hosting and get Elementor Pro Advanced for FREE for 1 year, along with other premium plugins like Essential Addons Pro & Templately Pro",
        "Master your craft as a wordpress developer with visually stunning designs that makes selling your services as developer crazy easy",
        "Learn to build websites like the professionals where we will build our website 'locally' before migrating our website onto a server/hosting account",
        "Elevate your creative flair with smooth element animations, transitions and visual, on-page effects that will 'wow' any visitor, client or customer",
        "Learn how to introduce a paywall to your websites and create a membership site that requires a subscription or on-time fee",
        "Learn how we can 'hide' specific pages, or even specific sections on a page, from visitors that do now have the membership level to view the content",
        "Learn how to create your own membership site where you can sell subscriptions, courses, videos, ebooks, PDF's or just about anything through a paid membership",
        "Uncover how you can sell memberships as reoccurring, monthly or yearly subscriptions, as a one-off payment for particular access, or with lifetime access",
        "Learn how to use Elementor's motion effects to create animations and dynamic page transitions to bring your web pages to life",
        "Play around with third-party plugins such as Elementor Essential Addons and widgets to enhance website functionality & grow your own web development ability",
        "Master some of the most up-to-date design & build techniques and skills so that you can charge clients more for the work you do",
        "Learn how to harness the power of global site settings and templates to sling shot your design & build process for every website you ever build"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is this course for?",
          "Meet the website we are going to build"
        ],
        "Setting Things Up": [
          "Student hub",
          "Download & install Local WP",
          "Setting up our website locally",
          "Free Elementor Pro for 1 year",
          "Note on the next lesson (Updated Elemento Pro pricing)",
          "Installing Elementor Pro & our child theme",
          "Quick note on the next lesson",
          "Configuring our Elementor settings",
          "Join a fun and aspiring community of WordPress business builders"
        ],
        "Building Our Menu's, Header & Footer": [
          "Add our primary menu",
          "Add our site logo & icon",
          "Branding & graphic design",
          "Adding our global defaults",
          "Design & build our header",
          "Add our footer menu",
          "Design & build our footer",
          "Making our footer responsive",
          "Making our header responsive"
        ],
        "Building Our Homepage": [
          "Building a hero section",
          "Building our partners section",
          "Building the cards section",
          "Building the sticky section",
          "Building the testimonials section",
          "Building the subscribe section",
          "Mobile responsive design",
          "Attention Interrupt - 3 tips for becoming a WordPress Developer"
        ],
        "Building Our Pricing Page": [
          "Building our pricing page hero banner",
          "Building our pricing cards section",
          "Finishing off our pricing page"
        ],
        "Adding Additional Pages": [
          "Design & build a 'Contact' page",
          "Design & build the 'Contact' page - part 2",
          "Design & build our 'About' page",
          "Design & build the 'About' page - part 2",
          "Design & build the 'About' page - part 3",
          "Terms & conditions and privacy policy pages",
          "Adding an optional cookie policy page and plugin",
          "Adding a single page template for our service pages"
        ],
        "Making Our Pages Fully Responsive": [
          "Making our homepage fully responsive",
          "Making our pricing page fully responsive",
          "Making our contact page fully responsive",
          "Making our about page fully responsive"
        ],
        "Adding Our Membership Functionality": [
          "Membership plugins...which one to choose?",
          "Download, install & configure Paid Memberships Pro",
          "Intro to the membership admin dashboard",
          "Adding our membership levels",
          "Editing email templates"
        ],
        "Designing Our Paid Membership Pro Pages": [
          "Overview of our Paid Membership Pro pages",
          "Designing a narrow width template for our Paid Memberships Pro Pages",
          "Designing a boxed width template",
          "Changing our 'Membership Levels' page",
          "Design & build our checkout page",
          "Fully responsive design"
        ],
        "Building Our Members Area": [
          "Quick attention interrupt",
          "Planning the build of your membership site",
          "Adding our restricted members pages",
          "Restricting access by membership level",
          "Editing the display conditions for our existing header",
          "Adding a new member manually",
          "Design and build our members area header template",
          "Applying scrolling effects and a sticky menu to our header",
          "Making our members header fully responsive",
          "Do you want to be a WordPress Developer?",
          "Making a few functionality tweaks",
          "Adding some code to redirect members after login",
          "Updating our member navigation menu",
          "Free version of membership plugins vs premium",
          "Building a course page manually (Part 1)",
          "Building a course page manually (Part 2)",
          "Creating a blog with free content and members only content"
        ]
      },
      "requirements": [
        "Basic/intermediate understanding of Wordpress & Elementor",
        "Please check out my beginner WordPress courses if you do not have a basic understanding of WP & Elementor",
        "Claim Elementor Pro for FREE for 1 year when you purchase Hosting (otherwise Elementor Pro is $84 per year)",
        "Elementor Pro subscription ($84 a year, fully refundable within 30-days if you just wanted to try it out)"
      ],
      "description": "For a long time, students have been asking Ricky to produce a course where his students will master the skills to go away and build their own membership website...whether it's for your own business or for your clients.\nAnd to follow on with his other top-rated and best-selling WordPress & Elementor Mastery courses, this one is finally here to further catapult your skills and experience as an industry-leading WP developer.\nIn this comprehensive course, Ricky will lead you by the hand as you build a beautiful, modern membership website together as if you were behind him following along as you build this technically challenging and visually stunning website together.\nWith over a decade of experience building just about any website imaginable using WordPress & Elementor, you will learn the 'exact' processes, tools and workflows Ricky uses to build websites for his own businesses and for his clients.\nRicky's undeniable passion lies in WordPress and Elementor as he pioneers his own design techniques and leads the cutting-edge world of beautiful, dynamic WordPress development.\nThis course will advance your own personal skills as a WP developer where you will:\n\n\nMaster flexbox containers and truly responsive web design for visually stunning and modern websites\nLearn about paywalls and premium memberships, where we build a members-only dashboard and navigation menu that are only available to certain membership levels\nLearn how to accept monthly and yearly reoccurring payments, on-off payments and lifetime access payments\nMaster advanced Elementor design techniques that will blow your visitors, clients and customers away with super-clean and modern designs\nBring your pages to life using page animations, motions effects, scroll effects, mouse effects, parallax effects & more\nIf you are wanting to take your WordPress & Elementor skills to the next level so that you can build a stunning membership website for yourself or for your clients as a service, then this is the course that is going to progress you from an intermediate level to a complete master of your craft.\nReady to jump in? Let's get to it.",
      "target_audience": [
        "Business owners who want to build their own membership site with premium, paid content and paywalls",
        "Beginner & Intermediate WordPress & Elementor users looking to expand their skillset",
        "Existing WordPress developers looking to expand their knowledge & work flow",
        "Web designers looking for unique, fun and quirky design techniques",
        "Web developers looking to branch out into the words most popular Content Management System (CMS)",
        "Anyone looking to build complex websites for their own business",
        "Anyone looking to build beautiful and complex websites for clients for which they can charge a premium for"
      ]
    },
    {
      "title": "Deep Dive Into Windows Communication Foundation (WCF)",
      "url": "https://www.udemy.com/course/wcf-online-training/",
      "bio": "WCF incl. Web Services and Remoting",
      "objectives": [
        "Understand the inspiration and architecture of SOA & WCF",
        "Build client application and consume WCF Service",
        "Understand the role of End Point – ABC of WCF Service"
      ],
      "course_content": {
        "Prerequisite-Web Services": [
          "Introduction to distributed programming"
        ],
        "Developing Webservice and Client": [
          "Developing Webservice and Client"
        ],
        "Pass by value and pass by reference": [
          "Pass by value and pass by reference"
        ],
        "SOAP Header": [
          "SOAP Header"
        ],
        "Asynchronously Calling Web Method": [
          "Asynchronously Calling Web Method"
        ],
        "Securing Webservices": [
          "Securing Webservices"
        ],
        "Prerequisite-Remoting": [
          "Remoting Part-1"
        ],
        "Remoting Part-2": [
          "Remoting Part-2"
        ],
        "Introduction to WCF": [
          "Introduction to WCF and SOA"
        ],
        "Developing WCF Service Application and Client": [
          "First WCF Application and Client"
        ]
      },
      "requirements": [
        "The subscriber must have in-depth knowledge of Object Orientation and C# programming language."
      ],
      "description": "Like all other things Programming models have been evolving, from Structured Programming to Object Oriented Programming to Componentization to eventually Service Orientation Architecture (SOA). Windows Communication Foundation (WCF) is the best to implement SOA in an enterprise application development. WCF encompasses all older technologies of Microsoft like Web Services, Remoting, MSMQ and COM+ into a single basket. And because of this advantage it has become very easy to upgrade applications from intranet to internet environment and make discrete technologies interoperate with each other.\nSandeep Soni, Microsoft Certified Technology Specialist in WCF has explained all the concepts in very simple and easy to understand language. Irrespective of whether you are a fresher or experienced developer you will find that each and every topic is going to create interest in you and will let you to move towards your target goal of developing SOA applications.\nThis WCF Training Course provides deep understanding of all the modules. The videos are supported with the excellent training materialwhich will help you to quickly overview the topics at any point of time. For every module we have walkthroughs and Sample programs which will help you to understand how to implement the feature in an application. Our WCF Interview questions section will provide you with an opportunity to assess your skills and revisit the videos in case you find some concepts you are weaker at.",
      "target_audience": [
        ".Net Developers",
        "Anyone who has good understanding of C# programming language"
      ]
    },
    {
      "title": "WooCommerce Dropshipping & Secrets Revealed",
      "url": "https://www.udemy.com/course/start-your-store-today/",
      "bio": "Import & Profit: Master Woocommerce Printful, Amazon & High-Demand Products for Dropshipping Success Fast Way",
      "objectives": [
        "Create Their Own Website Quickly With ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎",
        "Importing With Aliexpresss , Amazon , Shein ,",
        "Import From ‎AliExpress Amazon Alibaba Etsy DHgate Banggood CJDropshipping Taobao 1688 Tmall Walmart Geekbuying",
        "Design With Woocommerce , Design Woocommerce Develop Woocommerce‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎",
        "Install Wordpress ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎",
        "installing Impority Dropshipping Plugin",
        "Customize Woocommerce Store",
        "Adding Products To Woocommerce Store",
        "Install Wordpress For Woocommerce",
        "Make Money From Home",
        "Woocommer Seo",
        "Woocommerce Style",
        "Importing Product in Woocommerce With Aliexpressㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤ",
        "WooCommerce installing Wordpress",
        "Woocommerce Adding and managing products effectively",
        "Woocommerce Adding and managing products effectively",
        "WooCommerce plugins and extensions",
        "Woocommerce Customizer",
        "Woocommerce Payment Gateways",
        "Woocommerce Dropshipping Plugins",
        "Woocommerce Security"
      ],
      "course_content": {
        "Introduction For Woocommerce Coruse": [
          "Introduction of the Woocommerce Course",
          "Best hosting"
        ],
        "Setting Up WooCommerce:": [
          "Introduction To Woocommerce",
          "The Wordpresss Dashboard For Woocommerce",
          "How To Install Wordpress",
          "installing Woocommerce"
        ],
        "Creating Product Listing IN Woocommerce": [
          "Installing the Design",
          "Explore themes and customization options.",
          "Slider Images"
        ],
        "Creating Product Listings In Woocommerce": [
          "How To Add A Product In Woocommerce",
          "Payment Gateways For Woocommerce",
          "Inventory Management In Woocommerce",
          "adding product image in Woocommerce"
        ],
        "Dropshipping": [
          "Best Dropshipping Plugin 1",
          "Dropshipping Plugin 2",
          "Best Dropshipping Plugin 3",
          "Best Dropshipping Plugin 4"
        ],
        "Security Best Practices:": [
          "Security Plugin in Wordpress",
          "Adding ssl"
        ],
        "Best Plugins For Woocommerce Store": [
          "Printfull",
          "RankMatch",
          "Ali Dropship",
          "Traffic plugin",
          "Elementor",
          "elementor",
          "Chat Plugin"
        ],
        "Building Site 2": [
          "Getting Domain And Hosting",
          "Installing Elementor"
        ],
        "Marketing trics": [
          "Installing Wordpress",
          "Platform To Hire Freelancers"
        ]
      },
      "requirements": [
        "No Knowledge Required",
        "No Programming needed",
        "No Html And Css Needed",
        "No Coding Required"
      ],
      "description": "This is the complete, actionable WooCommerce course that shows you exactly how to build fully functional, high-converting WooCommerce online stores using WordPress and **WooCommerce**—without any coding, guesswork, or wasted time. This is the ultimate guide to mastering your WooCommerce setup.\n\n\nWhether you're launching your own brand or building WooCommerce stores for clients, you'll learn how to create sleek, scalable, and profitable WooCommerce shops using the power of **WooCommerce**. Master the **WooCommerce** platform to minimize your upfront costs and maximize your results. The core of every lesson is a practical WooCommerce strategy.\n\n\n**What You’ll Master with our WooCommerce Training:**\n\n\n*   Installing WordPress and transforming it into a powerful eCommerce platform using the legendary **WooCommerce** plugin. We cover the essential first steps of any WooCommerce project.\n*   Expertly configuring the global **WooCommerce** settings for **WooCommerce** shipping, **WooCommerce** tax calculations, and **WooCommerce** payment gateways to accept global WooCommerce orders.\n*   Designing high-converting WooCommerce product pages and a seamless WooCommerce checkout using drag-and-drop builders that integrate perfectly with your **WooCommerce** store.\n*   Optimizing your entire **WooCommerce** store for SEO; we'll cover WooCommerce product SEO and WooCommerce category SEO to rank on Google. This WooCommerce SEO module is crucial.\n*   Building a **WooCommerce** store that is incredibly fast, secure, and ready for WooCommerce scalability as your business grows. A robust WooCommerce store is a successful store.\n\n\n**Your WooCommerce Course Structure:**\n\n\n1.  **WooCommerce Setup & Installation:** Install WordPress, configure the core **WooCommerce** plugin, and prepare your new WooCommerce store for launch. This WooCommerce foundation is key.\n2.  **The WooCommerce Settings Deep Dive:** Set up the crucial logistics: your **WooCommerce** shipping zones, your **WooCommerce** tax rules, and your **WooCommerce** payment options. Understanding the WooCommerce backend is vital.\n3.  **WooCommerce Design & Conversion:** Build beautiful, responsive WooCommerce pages that sell. We customize the WooCommerce shop page, the WooCommerce product page, and the vital WooCommerce cart flow.\n4.  **WooCommerce Marketing & SEO:** Implement advanced **WooCommerce** SEO strategies for your WooCommerce store. Learn to leverage the native features of WooCommerce to drive traffic to your WooCommerce products.\n\n\nThis WooCommerce course is built for action. You’ll follow step-by-step WooCommerce videos, get access to exclusive WooCommerce resource docs, and walk away with a fully operational **WooCommerce** store—ready to sell. Your journey to becoming a WooCommerce expert starts here.\n\n\nBy the end, you'll have the confidence to build any professional **WooCommerce** site—for yourself or for clients. You will truly be a **WooCommerce** guru, capable of handling any WooCommerce request.\n\n\n**Enroll now in this ultimate WooCommerce course and master the WooCommerce platform today!**\n\n\n(WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce, WooCommerce,",
      "target_audience": [
        "Beginners",
        "Complete Beginners That Wan't To Learn Woocommerce",
        "Anyone Who build build a Woocommerce store"
      ]
    },
    {
      "title": "Compass - powerful SASS library that makes your life easier",
      "url": "https://www.udemy.com/course/compass-powerful-sass-library-that-makes-your-life-easier/",
      "bio": "Improve your SASS skills by learning the benefits of the Compass framework, which has many time-saving useful utilities",
      "objectives": [
        "install compass",
        "integrate compass with sass",
        "explore compass framework",
        "use and know what are sprites",
        "know how to create vendor prefixes using mixins",
        "integrate compass and sass inside great IDE so the process of compilation is gonna be automated and you won't lose your precious time",
        "the most useful mixins/functions"
      ],
      "course_content": {
        "Introduction to the Course": [
          "What is Compass?",
          "Who Am I?",
          "What you will know after this course?"
        ],
        "Compass Installation": [
          "Installation of Compass",
          "Compass manually installation",
          "Configuration using config.rb file"
        ],
        "Sprites": [
          "What are sprites? Why they are so awesome?",
          "Creating sprites using Compass",
          "Customization of sprites",
          "Magic in Compass using Sprites",
          "Creating Sprites in Compass is so awesome! - Rehearsal"
        ],
        "Usage": [
          "Mixins used for creating vendor prefixes",
          "Setting vendor prefixies minimum browser requirement",
          "How to make horizontal lists fast?",
          "How to keep 'rhytm' in text using Vertical Rhytm",
          "Helper functions",
          "Streching boxes",
          "Fast Summary of Usage section"
        ],
        "Installation of SASS/Ruby/IDE": [
          "Ideal editor for working with SASS and Compass",
          "Installation and configuration of SASS",
          "Manually compilation of SASS"
        ],
        "Summary": [
          "What after this course?"
        ],
        "BONUS": [
          "Bonus: Links to my other courses"
        ]
      },
      "requirements": [
        "You should already be familiar with CSS, HTML and SASS."
      ],
      "description": "Compass is a framework (library) for SASS which means that inside of it you can find lots of useful utilities -that I will be showing you inside this course.\nThese utilities can save your time with developing your websites. By using Compass, you can use various functions/mixins created by other programmers, which you would normally need to write on your own.\nAs always time = money. Save your time by learning Compass.\nMake your website load faster using Sprites within Compass. With Compass you can create Sprites instantly. If you do not know what Sprites are, watch my free lesson about Sprites and you will see that this course is worth taking.\nAfter my course you will know how to:\ninstall compass\nintegrate compass with sass\nuse compass\nuse and know what are sprites\nuse Compass inside a great IDE\ncreate vendor prefixes using mixins\nand much more\nI give you 100% satisfaction - if you do not like my course you can request a full refund up to 30 days. Remember that if you have any questions regarding topics covered in the course please feel free to ask. I'm always happy to help!\nPlease check free lessons before buying! See for yourself the great quality of the course and enjoy it!",
      "target_audience": [
        "This Compass course is meant for people who do not know Compass or want to improve / remind themselves of things that are inside Compass. No prior knowledge about Compass is needed.",
        "This course is not for you if you do not know SASS"
      ]
    },
    {
      "title": "Web Development Bootcamp HTML CSS JS REACT NODE MERN STACK",
      "url": "https://www.udemy.com/course/web-development-bootcamp-html-css-javascript-react-next-node-mongodb/",
      "bio": "[With 7 PDF Booklet] All in One Web Developer Bootcamp to Learn Coding Full Stack Web Apps Front to Back DB & API",
      "objectives": [
        "Master the Fundamentals: Develop a solid understanding of HTML, CSS, and JavaScript, gaining the essential skills needed to build professional-quality websites.",
        "Build Dynamic Web Apps: Learn how to leverage the power of ReactJs to create interactive and responsive user interfaces, providing better user experience.",
        "Develop Full-Stack Expertise: Acquire proficiency in both front-end and back-end API development by mastering ReactJs, NextJs, NodeJs and MongoDB.",
        "Create Industry-Standard Projects: Engage in hands-on, project-based learning to develop real-world web applications, ensuring you have practical experience.",
        "Implement Best Practices: Learn coding standards, allowing you to write clean, efficient and maintainable code like a seasoned professional.",
        "Version Control and : Learn to use Github to push code and deploy static websites.",
        "Deploy and Launch Websites: Gain expertise in deploying web applications to production servers and hosting platforms like Digital Ocean.",
        "Troubleshoot and Debug: Develop strong problem-solving abilities through techniques and tools to identify and fix common errors and bugs.",
        "Stay Current with Industry Trends: Stay up-to-date with the latest advancements in web development, frameworks, and tools, ensuring your skills remain relevant."
      ],
      "course_content": {
        "Introduction to Web Development": [
          "Course Introduction",
          "What is Web Development?",
          "What are the roles of a Web Developer?",
          "Difference between Frontend, Backend and Full Stack Web Developer",
          "Path to become a Full Stack Web Developer",
          "Why learn JavaScript?",
          "Code editor setup",
          "Download 7 PDF Booklets",
          "Download All Projects Source Code"
        ],
        "HTML & CSS": [
          "Headings and paragraphs",
          "Vs code plugins and themes",
          "HTML document and head section",
          "Using CSS stylesheet",
          "Writing CSS",
          "Learning tips and writing comments",
          "Using Google fonts",
          "Display image on HTML page",
          "Media queries CSS for responsive images",
          "Margins and paddings",
          "HTML list items",
          "Clickable links",
          "Border styling and hover effects",
          "Text shadow and background color",
          "Image as background",
          "Parallax image background",
          "Gradient color background",
          "HTML form",
          "Styling HTML form",
          "Using icons",
          "HTML header and footer"
        ],
        "Bootstrap CSS Framework": [
          "Bootstrap CSS framework",
          "Using Bootstrap via CDN",
          "Downloading Bootstrap (optional)",
          "Containers, rows and columns",
          "Columns styling, offset, background, margin and padding",
          "Styling divs and texts using margin, padding and colors",
          "Responsive images",
          "Buttons and lists",
          "Bootstrap forms",
          "Bootstrap tables",
          "Bootstrap navigation menu",
          "Bootstrap carousel image slider",
          "Bootstrap popup modal"
        ],
        "Github": [
          "Using Github",
          "Push and pull code with Github",
          "Static website hosting with Github",
          "Push code changes",
          "Using Bootstrap themes"
        ],
        "JavaScript": [
          "What is JavaScript?",
          "JavaScript in HTML",
          "Different ways of creating variables",
          "String manipulation",
          "Doing math with numbers",
          "JavaScript objects",
          "Display object info on the page",
          "JavaScript operators",
          "If else statements",
          "Loops in JavaScript",
          "Object info display using for-in loop",
          "Functions in JavaScript",
          "Arrow functions",
          "Greeting app",
          "Template literals",
          "Arrays in JavaScript",
          "Display array item in HTML",
          "Working with object",
          "new Keyword, constructor function and prototype",
          "Classes in JavaScript",
          "Regular expressions",
          "BOM - Browser object model",
          "DOM - Document object model"
        ],
        "Projects using JavaScript, jQuery & VueJs": [
          "Project overview",
          "Todo app with plain JavaScript",
          "Todos render, delete and save in local storage",
          "Tasks project using jQuery",
          "Tasks display, store and remove using jQuery",
          "Todo app with VueJs overview",
          "Vuejs todo app create, read and delete"
        ],
        "NodeJs": [
          "Installing NodeJs",
          "Browser vs NodeJs environment",
          "Module exports and require",
          "Using NodeJS core module",
          "Using NPM packages",
          "Create express server",
          "Continuously running NodeJs server",
          "NodeJs event loop explained",
          "NodeJs event loop in action",
          "Synchronous vs Asynchronous programming"
        ],
        "ReactJs with NextJs": [
          "What is React?",
          "Why learn React and NextJs?",
          "Setup React and NextJs project",
          "React component",
          "Passing properties and default parameters",
          "useState hook and spread operator",
          "Using NPM packages with React",
          "useEffect hook to make API calls",
          "Conditional rendering, state changes and inline styling",
          "Breaking code into reusable components",
          "NextJs custom App component",
          "Using CSS files",
          "Serving images",
          "Global state using React Context",
          "Route queries",
          "Fetch request based on route query",
          "Client vs server side rendering",
          "Fetch data using server side rendering",
          "Head section for meta content",
          "Using CDN links"
        ],
        "NextJs 13 with App Directory": [
          "NextJs 13 with App directory",
          "NextJs 13 setup with page layout",
          "Data fetching inside App directory server components",
          "Route params inside App directory",
          "Loading in App directory",
          "Client components in App directory",
          "Error - Text did not match server"
        ],
        "API Development with NodeJs & MongoDB": [
          "Welcome to Full Stack JavaScript",
          "NodeJS server setup",
          "Routes log view using morgan",
          "Connect to MongoDB",
          "Working with routes",
          "Working with controllers",
          "POST request and JSON data",
          "Create User model",
          "Password hashing and compare",
          "Save user in MongoDB",
          "Validation on user registration",
          "JWT - Json web token",
          "Login user",
          "Protecting route for logged in user",
          "Admin middleware",
          "Blog Schema",
          "Form data on blog create",
          "Validation on blog create",
          "Create blog with image upload",
          "Access uploaded images",
          "Getting single blog by route params slug",
          "Getting all blogs with user info",
          "Update blog and image",
          "Blog Delete",
          "Resize image",
          "CORS - Cross origin resource sharing"
        ]
      },
      "requirements": [
        "No prior experience required: This course is designed for absolute beginners, so no prior knowledge or experience in web development is necessary.",
        "Basic computer literacy: Familiarity with using a computer, navigating the internet, and basic file management skills will be helpful throughout the course.",
        "Enthusiasm to learn: A positive attitude, eagerness to acquire new skills, and a willingness to invest time and effort into the learning process are essential for success in this course.",
        "Reliable internet connection: As this is an online course, a stable internet connection is required to access the learning materials, participate in interactive exercises, and watch video tutorials.",
        "Computer setup: A computer (desktop or laptop) running a modern operating system (e.g., Windows, macOS, Linux) is needed to install software and tools required for web development.",
        "Willingness to practice: Web development is a hands-on skill, and practice is crucial for mastery. Students should be prepared to dedicate time to complete coding exercises and work on projects outside of the course curriculum.",
        "Self-motivation and discipline: Online learning requires self-motivation and discipline to stay on track, manage time effectively, and complete the course.",
        "Openness to problem-solving: Web development often involves troubleshooting and problem-solving. Students should approach challenges with a problem-solving mindset and be willing to seek solutions independently or with the help of available resources."
      ],
      "description": "Welcome to the Web Development Bootcamp 2023, a comprehensive program designed specifically for individuals with no prior coding or programming experience. This course aims to transform beginners into professional full-stack web developers, equipping them with the knowledge and skills needed to succeed in the industry as web developers. Drawing from over 10 years of learning and teaching experience, this course covers everything you need to know to embark on a successful web development career as a web developer. This course also includes 7 PDF booklets (totaling 128 pages of well-crafted theories and coding examples) that cover everything that is included in the videos, making it absolutely easier to recap and cement what you learn in the videos. A great way to remember what you learned and use as a reference whenever needed.\nSection 1: Introduction to Web Development\nLay the foundation of web development by understanding its core concepts and principles.\nGain a solid understanding of how the web works and the fundamentals of web technologies.\nSection 2: HTML & CSS\nLearn how to create the structure and design of web pages using HTML and CSS.\nDiscover the essential tags and properties to build well-structured and visually appealing websites.\nSection 3: Bootstrap CSS Framework\nExplore the power of the Bootstrap CSS Framework for building responsive and mobile-friendly websites.\nLearn how to leverage Bootstrap's pre-built components and grid system to enhance your web designs.\nSection 4: Github\nUnderstand version control, an essential tool for modern web development.\nLearn how to manage your projects effectively, work in teams, and contribute to open-source projects.\nSection 5: JavaScript\nDive into JavaScript and explore its syntax, concepts, and advanced topics like asynchronous programming and object-oriented programming.\nMaster the language that brings interactivity and dynamism to the web.\nSection 6: Projects using JavaScript, jQuery & VueJs\nApply your JavaScript skills to practical projects and gain hands-on experience with popular frameworks like jQuery and Vue.js.\nBuild interactive applications and understand how these frameworks enhance web development.\nSection 7: NodeJs\nLearn Node.js, a server-side JavaScript runtime, and explore its capabilities for building scalable web applications.\nDiscover how to use Node.js to handle server-side logic and create efficient and high-performance web servers.\nSection 8: ReactJs with NextJs\nMaster React.js, a powerful JavaScript library for building user interfaces, combined with Next.js, a framework for server-side rendered React applications.\nCreate dynamic and highly performant web experiences using component-based architecture.\nSection 9: NextJs 13\nExplore brand new ways of building production ready react applications using NextJs 13.\nLearn how version 13 has introduces app directory that completely changes the way you write React.js applications using Next.js.\nSection 10: API Development with NodeJs & MongoDB\nBuild robust APIs using Node.js and integrate MongoDB, a popular NoSQL database, for storing and retrieving data.\nLearn how to design RESTful APIs, handle authentication and authorization, and ensure the security of your backend systems.\nSection 11: Frontend Web Development with ReactJs & NextJs\nExplore advanced frontend development techniques using React.js and Next.js.\nDive into topics such as state management, routing, and styling to create polished and professional-grade websites.\nSummary:\nThe Web Development Bootcamp 2023 may not appear lengthy at first glance, but rest assured that it is meticulously crafted with over 10 years of learning and teaching experience. This comprehensive course covers all the essential topics required to become a professional full-stack web developer, even for individuals without any prior coding experience.\nTo enhance the learning experience, the course includes 7 PDF booklets that cover everything taught in the video lectures. These booklets serve as valuable resources, making learning incredibly easy and providing a handy reference for future use. With the combination of video lectures and supporting materials, students can solidify their understanding and cement the concepts learned throughout the course.\nJoin the Web Development Bootcamp 2023 and embark on a transformative learning journey, where carefully crafted content and supplementary materials will empower you to become a skilled and confident web developer.",
      "target_audience": [
        "Absolute beginners: This course is designed for individuals with little to no prior experience in web development. If you have never written a line of code before or have dabbled in web development but want to strengthen your foundational knowledge, this course is perfect for you.",
        "Aspiring Web Developers: If you have a strong interest in web development and want to pursue it as a career, this course will provide you with the necessary skills and knowledge to kick-start your journey. Whether you aim to work as a front-end developer, back-end developer, or full-stack developer, this course will equip you with the essential tools.",
        "Career Switchers: If you are considering a career change and want to transition into the field of web development, this course will serve as an excellent starting point. It will provide you with a solid understanding of the core concepts and technologies in web development, helping you make a smooth transition into your new career path.",
        "Entrepreneurs and Small Business Owners: If you are an entrepreneur or small business owner looking to create and manage your own website, this course will empower you with the necessary skills to develop and maintain your online presence effectively. You will gain the ability to build custom websites and understand the technical aspects of web development.",
        "Designers and Creatives: If you are a designer or creative professional seeking to expand your skill set and enhance your ability to bring your designs to life on the web, this course is ideal for you. You will learn how to translate your design concepts into functional and visually appealing websites using HTML, CSS, and JavaScript.",
        "Self-Learners and Hobbyists: If you are a self-driven learner or hobbyist passionate about web development, this course will provide a structured learning path and comprehensive curriculum to deepen your understanding of web development concepts. You will have the opportunity to practice and build real-world projects, solidifying your skills and knowledge.",
        "Professionals Seeking Web Development Skills: If you are already working in a related field and want to acquire web development skills to complement your existing skill set, this course will offer you a practical and focused approach to learning the necessary technologies. It will enhance your versatility and expand your professional opportunities."
      ]
    },
    {
      "title": "Master Fullstack - React, Fastify Node.js, Postgresql & TDD",
      "url": "https://www.udemy.com/course/fullstack-project-react-fastify-nodejs-postgresql-tdd/",
      "bio": "Build Your First Full Stack Application With React, NodeJS & Postgresql. Learn How To Do TDD With NodeJS and React",
      "objectives": [
        "Master Everything Required To Build An End To End Enterprise NodeJS Application With React",
        "How To Write Unit Testcases for NodeJS and React",
        "Integration Testing With NodeJS - With Postgresql Database",
        "How To Write Unit Testcases For Data Access Layer With Postgresql",
        "How To Deploy NodeJS And React Application On Heroku",
        "Continuous Integration And Continuous Deployment Using Github Actions",
        "How To Dockerized NodeJS and React Application And Deploy Docker Container On Heroku",
        "Maintain Docker Container And Development Process With Batect",
        "Setup Of Redux ToolKit and Testing",
        "How To Setup Swagger For Documentation",
        "How To Maintain Data Migration Script In NodeJS Application",
        "How To Setup JWT With NodeJS",
        "How To Secure React Routes",
        "How To Maintain JWT In React"
      ],
      "course_content": {
        "Introduction": [
          "React - Code Walkthrough",
          "Fastify NodeJS - Code Walkthrough",
          "Project Codebase - Github Link"
        ],
        "Fastify Node.js Project Setup With ESLINT BATECT": [
          "Fastify application setup - [Node.js]",
          "Setup ESLint for Fastify node.js",
          "Prettier Code Formatter Setup",
          "Setup Jest Tests - Fastify Node,js",
          "Install Git",
          "Pushing fastify project to github",
          "Jest ESLint plugin",
          "Install OpenJDK - JDK",
          "Introduction | Batect - development tasks - docker container",
          "Dockerizing fastify application with Batect",
          "Database Migrations SQL Script with db-migrate - POSTGRESQL",
          "Apply migration with fastify - Postgresql",
          "Connect Fastify application to Postgresql container- Batect development workflow",
          "First Fastify POST Route",
          "Fastify GET Route",
          "PostgreSQL docker container volume mount",
          "Fastify POST route integration test",
          "Get Route Integration test",
          "Local Setup for test execution",
          "Running fastify application locally",
          "Database Plugin unit testcase",
          "Refactoring time"
        ],
        "Introduction to JSON Schema": [
          "JSON Schema",
          "Request body validation with JSON schema",
          "Response body validation with JSON Schema",
          "Fastify API documentation with Swagger"
        ],
        "CI/CD: Continuous Integration & Delivery": [
          "What Is CI/CD and How Does It Work?",
          "Setup Batect task for CI",
          "Setup CI Job with Github Actions",
          "Deploy fastify docker container on Heroku - Manually",
          "Setup Postgresql on heroku and connect with fastify docker container",
          "Setup CD JOB with Github Actions and deploy on heroku"
        ],
        "User RestAPI endpoint - end to end Using TDD - Fastify": [
          "Test Driven Development Introduction",
          "How to approach TDD in 3 layers based application",
          "Added User table migration script",
          "Understanding Optimistic Locking",
          "User Repository with TDD",
          "Added GET User by Id function in Repository with TDD",
          "User Service and unit testing - TDD",
          "Added GetUserById in service - TDD",
          "Handling date with moment.js",
          "Fix Red Pipeline - GO GREEN",
          "User POST Route - Unite Testing",
          "User POST Route Request Body Validation - JSON Schema",
          "User GET Route with Unit testing - TDD",
          "User Endpoints Integration Test",
          "User Endpoints Testing With Postman"
        ],
        "Job Feature endpoints with TDD - Fastify Nodejs": [
          "Job Table Migration Script",
          "Job Repository Testcases. - TDD",
          "Job Repository Testcases continue - TDD",
          "Job Repository Implementation - TDD",
          "Job Service implementation of save and getJobs using TDD",
          "Job Post Route - testcases - TDD",
          "Job Post Route Implementation - TDD",
          "Job Get Route - TDD",
          "Integration Test Of Job Routes",
          "Job Endpoints Testing with postman"
        ],
        "React Setup and Job Listing Page - React": [
          "React Setup",
          "Layout and Header Component - React",
          "Material UI Grid Explanation - React",
          "How redux works ?",
          "Job Reducer With Redux Toolkit",
          "Integration of Job Slice to Job Container - React",
          "Explanation Of CORS Issue",
          "Job List and Item Component",
          "Job List and Item Component Styling",
          "Job Loading Skeleton - Material UI Skeleton",
          "Load More option in Job Listing Page - React",
          "Http Error Handling In React"
        ],
        "React Testing Approach With Redux Toolkit and MSW (Http mock server)": [
          "Testing Approach Introduction",
          "Job Container Loading State TestCase",
          "Test Util for testing redux component",
          "JobList Unit Testcase - MSW",
          "Load More scenario (Pagination) testcases",
          "Error Scenario TestCase"
        ],
        "CI/CD - React Application": [
          "Upload React project to GIthub",
          "CI Job - React",
          "Deploy On Heroku Manually - React App",
          "Multiple Env Config like Dev, Prod In React Application",
          "Deploy React App On Heroku With Github Action"
        ],
        "Application Security with JWT": [
          "JSON Web Token Introduction",
          "Fastify Jwt Plugin",
          "Login endpoint - Fastify",
          "Secure Job Endpoints",
          "Add Bearer Token",
          "Router Setup - React",
          "Login Testcases - React Testing Library",
          "Login Form Implementation",
          "Login Form - CSS",
          "Login API request testcases",
          "AuthProvider - Login testcases implementation - React",
          "Http Request Interceptor - React",
          "Error view - Material UI Snackbar",
          "Add Register Route - React Router DOM",
          "User Register Component Testcases - React",
          "User Register's Testcases Impl",
          "Register Form Validation Testcase - React",
          "User Registration Form Submit Testcases - MSW",
          "User Reducer And Integration With Registration Form",
          "Display Current Logged In User and Logout Link On Header",
          "Fixed Failing Testcase",
          "Secure Private Route - Job Listing Page",
          "Public Route - Login and Register Page"
        ]
      },
      "requirements": [
        "Knowledge of NodeJS and JavaScript - beginner level",
        "Knowledge of React - beginner level",
        "Knowledge of Docker - Optional"
      ],
      "description": "If you know the basics of Javascript, NodeJS and React, the next thing to do is learn how to setup enterprise level application and how to do test driven development and how to write clean code and What is the ideal workflow for developing full stack application.\n\n\nWhy am I focusing on Test driven development ?\nBecause TDD is a way to develop highly usable software. Following the TDD process, a developer must focus on the test cases before actually coding anything. ... As a result, the developer is more interested in the interface than in the implementation—and that leads to more usable software\n\n\nIn this course we will learn various things as mentioned below:\nHow to setup actual enterprise level workflow with CI/CD using Github Actions and deploy both application to Heroku and locally we will connect NodeJS application with Postgresql  docker container  and on prod we will connect with Postrgresql.\nHow to deploy both frontend and backend on server.\nHow to maintain different environment like DEV,PROD.\nHow to maintain database migration script and apply on Postgresql\nHow to document rest api with swagger.\nHow to write Unit and Integration testcases for NodeJS application.\nHow to write Unit testcases for Redux side.\nHow to write Unite testcases for React.\nHow to secure application with JWT\nLearn How to setup Jwt based authentication with NodeJS and React\n\n\nThe most important thing that we will learn during this course would be test driven development with NodeJS and React & redux and while developing application we will learn best practice for frontend side and backend side.\nLast and not least we will write production level code not less than that.",
      "target_audience": [
        "Beginner NodeJS And React Developer"
      ]
    },
    {
      "title": "Advanced .NET Web API Security: Permission based auth & JWT",
      "url": "https://www.udemy.com/course/advanced-net-web-api-security-permission-based-auth-jwt/",
      "bio": "Mastering Secure Access Control in .NET: Advanced Authentication & Authorization with Users, Roles & Dynamic Permissions",
      "objectives": [
        "Immerse yourself in our Advanced .NET Security course, where you'll delve deep into crafting robust access control solutions.",
        "Master the essentials by working with AspNet Core Identity and IdentityDbContext, gaining expertise in seamless user, role, and permission management.",
        "Navigate the complexities of EntityFrameworkCore, mastering migrations and seamlessly seeding default roles, users, and permissions into your database.",
        "Build a solid architectural base using Clean Architecture and harness CQRS with MediatR for streamlined, maintainable systems.",
        "Master security with in-depth authentication, authorization, JWT intricacies, and permission-based access.",
        "Enhance data integrity and user experiences with rigorous request validations using FluentValidation techniques.",
        "Implement advanced security measures, including handling refresh tokens to fortify your applications against potential vulnerabilities.",
        "Practice industry best standards by incorporating authentication on SwaggerUI, ensuring seamless and secure API access.",
        "Craft permissions, master nuances: Requirement, Auth Handler, Policy Provider.",
        "Discover the art of dynamic user-role and role-permission assignments, allowing for flexible and efficient management of access control.",
        "Effortlessly manage user accounts with the ability to activate or deactivate users, enhancing security and compliance.",
        "Safeguard your API endpoints with precision by leveraging permission attributes for foolproof access control.",
        "Optimize requests with MediatR Pipeline; Embrace Dependency Injection for scalability.",
        "Gain a comprehensive understanding of user, role, and permission management to enhance the overall user experience and data security.",
        "Extra: Dive into Blazor WebAssembly, create interactive apps integrated with our API. Project Source code included."
      ],
      "course_content": {
        "Introduction": [
          "What Will Learn Part 1",
          "What Will Learn Part 2",
          "What Will Learn Part 3"
        ],
        "Source Codes": [
          "Backend"
        ],
        "The Solution Design": [
          "Solutions Architecture",
          "Projects references",
          "Entity",
          "Nuget Packages",
          "Db Context - ORM",
          "Identity Db Context",
          "Db Context extensions",
          "Database connections",
          "Database Migration",
          "Migration script",
          "Identity User Extended",
          "Identity Role and Identity Role Claim extended",
          "Entity Type configurations",
          "Test Answer: Entity Type configuration",
          "Employee: Entity Type configuration",
          "Handling decimal config",
          "Understanding db migration and schema creation - part 1",
          "Understanding db migration, schema creation and db update - part 2",
          "Recap"
        ],
        "Authentication Constants": [
          "Application Features Constants",
          "Application Actions and Claims Constants",
          "Application Role Groups and Default Roles Constants",
          "Collections",
          "Application Credentials and Permissions Constants",
          "Adding permissions and Building Permission list",
          "Add permissions to List of all permissions",
          "Adding permissions",
          "Permission list - Completing the statement"
        ],
        "Database seeder": [
          "Database seeder - part 1",
          "Database seeder - part 2",
          "Database seeder - part 3",
          "Database seeder - part 4",
          "Database seeder - part 6",
          "Database seeder - part 7",
          "Database seeder - part 8",
          "Assignment 1: Seed user functionality",
          "Assignment 1: Solution",
          "Register db seeder to dependency injection container - part 1",
          "Register Db Seeder to dependency injection container - part 2",
          "Complete and test db seeder"
        ],
        "Permissions Resources": [
          "Permission Requirement",
          "Permission Authentication Handler",
          "Permission Policy Provider - part 1",
          "Permission Policy Provider - part 2",
          "Permission Policy Provider - part 3",
          "Registering Permission handler and Policy provider to DI container",
          "Default Token Provider to DI"
        ],
        "Application Models(request, response and wrappers) and Interfaces": [
          "Token models and service - part 1",
          "Token service implementation - part 2",
          "Global Response Wrappers"
        ],
        "JWT - Generating a json web token": [
          "Auth Token Generation - part 1",
          "Auth Token Generation - part 2",
          "Auth Token Generation - part 3",
          "Auth Token Generation - part 4",
          "Auth Token Generation - part 5",
          "Auth Token Generation - part 6",
          "Auth Token Generation - part 7",
          "Auth Token Generation - part 8",
          "Auth Token Generation - part 9",
          "Assignment 2: Refresh token implementation",
          "Assignment 2: Solution"
        ],
        "Features - Token Queries and api endpoint": [
          "Get Token Query - part 1",
          "Get Token Query - part 2",
          "Controller error - IMediator",
          "Token Controller endpoint part 1",
          "Token Controller endpoint part 2"
        ],
        "Add JWT Authentication to DI Container": [
          "Register JWT Authentication to DI Container - part 1",
          "Register JWT Authentication to DI Container - part 2",
          "Register JWT Authentication to DI Container - part 3",
          "Assignment 03",
          "Assignment 3: Solution - part 1",
          "Add Swagger Gen extension to DI",
          "Testing - Exception",
          "Register MediatR and Token Service to DI",
          "Test token generation",
          "Extend Authorization Attribute",
          "Protect endpoint with Permission Attribute"
        ]
      },
      "requirements": [
        "C# Programming Language"
      ],
      "description": "Embark on an enriching journey with this Advanced .NET Security course, where we dive deep into crafting robust access control solutions. Starting with the fundamentals, you'll work with AspNet Core Identity and IdentityDbContext, learning how to seamlessly manage users, roles, and permissions.\nNavigate the intricacies of EntityFrameworkCore as you master migrations and seed default roles, users, and permissions into the database. With a strong foundation in place, we'll guide you through the world of Clean Architecture, CQRS, and the MediatR Library, empowering you to design efficient and maintainable systems.\nAuthentication and authorization take center stage as we explore topics such as permission-based authorization and JWT generation/validation. Elevate your skillset further with request validations using FluentValidation, and gain insights into handling refresh tokens for enhanced security.\nIncorporate best practices with authentication on SwaggerUI, and learn the art of building permissions, along with the inner workings of Permission Requirement, Permission Authentication Handler, and Permission Policy Provider.\nDynamic user-role and role-permission assignments are demystified, while you also learn to seamlessly activate/deactivate users and safeguard endpoints with permission attributes.\nWe'll delve into the intricacies of the MediatR Pipeline Behaviour, emphasizing the significance of Dependency Injection in your projects. To empower you with a holistic approach, we offer comprehensive guidance on user, role, and permission management.\nAs a Extra, explore the exciting realm of a Blazor WebAssembly Frontend App that interacts seamlessly with our API. Join us to transform your .NET skills and become a proficient architect of secure, and scalable web  applications.",
      "target_audience": [
        "Beginners who would like to know how to secure a web application",
        "Juniors who would to add know how to best implement security within .NET web applications",
        "Seniors who would like to take full control of application security with confident that their solutions are secured.",
        "Architects who would like to explore different way of implementing secure applications"
      ]
    },
    {
      "title": "Projects in ASP.NET Core 2.0",
      "url": "https://www.udemy.com/course/projects-in-aspnet-core-20/",
      "bio": "Learn the new ASP.NET Core 2.0 building real world projects",
      "objectives": [
        "Master core concepts of ASP Core 2.0",
        "Learn to build real world projects using ASP Core",
        "Learn to think like a professional developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "ASP.NET Core 2.0 Overview": [
          "Introduction",
          "Environment Setup",
          "Why Is ASP.NET Core 2.0",
          "Application Structure",
          "Lifecycle",
          "Middleware",
          "ASP.NET Core MVC",
          "Razor Pages",
          "Tag Helpers",
          "Adding Bootstrap",
          "Summary"
        ],
        "Contact Form/Send Mail With Razor Pages": [
          "Introduction",
          "Gmail Modiﬁcations And Adding NuGet Package",
          "Creating Backend Mail Send Workﬂow",
          "Create HTML Form With TagHelpers",
          "Submitting Form And Receiving Email",
          "Summary"
        ],
        "Date API Based Application": [
          "Introduction",
          "Setting Up The Environment",
          "Modifying Content Types",
          "Allowing User To Dictate Return Type",
          "Modifying URIs",
          "Returning Complex Objects And Status Codes",
          "Summary"
        ],
        "Shopping Cart": [
          "Introduction",
          "Project Scaffolding And Entity Frameworks Integration",
          "Completing Data Layer And Database Context",
          "Creating The ProductsController",
          "Creating The CartController",
          "Completion of CartController",
          "Products Layout",
          "Cart Layout",
          "Checking Final Functionality",
          "Summary"
        ],
        "Authentication": [
          "Introduction",
          "Adding Database and EntityFramework Dependencies",
          "Preparing For Database Migration",
          "Executing Migrations",
          "Starting AccountController",
          "Building Registration Methods",
          "Building AddUser Methods",
          "Handling User Logins",
          "AccountController Completion And Starting Views",
          "Creating The Home View",
          "Creating Remaining Views and Running The App",
          "Summary"
        ],
        "Course Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic kolwedge of HTML and JS is required to complete this course"
      ],
      "description": "A hands-on course to help you learn everything you need to know about ASP.NET Core 2.0 Framework!\nASP.Net Core 2 is the next generation open-source framework to help build dynamic cross-platform websites. With the ASP.Net Core 2, Microsoft has tried to create an amazing platform that is fast, flexible, and modern.\nHowever, learning ASP.Net Core 2 is not exactly easy, especially with a textbook approach at the subject matter. This is why we have designed a complete hands-on course that deviates away from just focusing on theory learning, but instead takes a hand-on approach to ASP.Net.\nThe course starts at the very beginning and is also designed keeping in mind newbie students who have no experience with ASP.Net framework. It will focus on building up the fundamentals and teach you everything you need to know to start building you very own ASP.Net Core 2 application.\nTaking it a step further, the instructor will also take you step-by-step to actually build four different projects from scratch that will help you learn the subject by doing. The first section of the course covers a detailed overview of ASP.Net Core 2, including a comparison between core 1.0 and web pages, as well as how this core version has improved cross-platform development.\nThe following 4 sections include different projects that cover simple applications such as a contact form that uses Razor Pages which lets you send emails, where you will also learn how to integrate the form with a GMAIL account. The second project will show you how to create a Web API that allows the developers to hit using RESTful resources on the application.\nThe third project will see you build a Shopping Cart from scratch which teaches you how to integrate the app with a database using the entity framework to accomplish that. We will also see how to retain information in the shopping cart as well allow users to modify their cart. In the final project, we will build an Authorized User Web App that is going to use the identity framework to build out all the structure, the schema inside of the database. You will also learn how to integrate the identity framework into our application and give varying information.\nAt the end of this course, you will not have the knowledge for building your very own ASP.Net web apps, but you’ll also have 4 projects that you can add to your portfolio.\nEnroll now and let’s get started building your very own ASP.Net app!",
      "target_audience": [
        "Anyone who wants to build professional software using ASP. Net core will find this course very useful"
      ]
    },
    {
      "title": "Advanced CSS For Web Developers",
      "url": "https://www.udemy.com/course/advanced-css-for-web-developers/",
      "bio": "The most comprehensive program to learn and master modern CSS development",
      "objectives": [
        "Learn the fundamentals of CSS from ground up",
        "Learn everything about modern web development using CSS"
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "CSS Basics & developer tools",
          "CSS Values & units",
          "CSS selectors & pseudo-selectors",
          "Introduction to Media Queries & breakpoints",
          "Custom CSS properties"
        ],
        "Typography": [
          "Typography Introduction, Font classifications, and Font stack",
          "Font weights, font styles, and font units",
          "Font MIME types",
          "Web fonts",
          "Add Web fonts to a project",
          "Add a locally hosted font to your project",
          "What are Variable fonts?",
          "Variable font demos",
          "Can I Use Variable Fonts, and Developer Tools for Variable Fonts",
          "Variable Font axes",
          "Adding a Variable font to your project",
          "Variable Font Resources",
          "Adding dimensions to text",
          "Text clipping",
          "Text transformations",
          "Text transitions and animations",
          "Responsive Text"
        ],
        "Content (Formatting Visual Data)": [
          "Basic List Styles",
          "Advanced List Styles",
          "Definition Lists",
          "Multiple Definition Lists",
          "Pure CSS Accordions",
          "Blockquotes and Pullquotes",
          "Pure CSS Slider",
          "CSS Slider with dots",
          "Simple Tables",
          "Advanced Tables",
          "Responsive Tables",
          "HTML Forms input types and attributes",
          "CSS Form Validation",
          "Responsive Forms"
        ],
        "Graphics (Images & Colors)": [
          "Advanced CSS colors",
          "CSS Backgrounds",
          "CSS gradients",
          "Multiple Backgrounds",
          "CSS Borders",
          "CSS Border Images",
          "Image Filters",
          "Responsive Images"
        ],
        "Layout": [
          "Content-box vs. Border-box",
          "Floats Positioning",
          "Box Model Layout",
          "Clearfix",
          "Flexbox Parent Element",
          "Flexbox Horizontal and Vertical Positioning",
          "Flexbox Children",
          "Flexbox Webpage Layout",
          "Flexbox Learning Resources",
          "Grid Parent Element",
          "Grid Children",
          "Grid Webpage Layout",
          "Grid Learning Resource",
          "Grid Schedule Examples"
        ],
        "Transitions and Animations": [
          "Basic Transitions _ Timing Functions",
          "Transition steps",
          "Multiple, asynchronous transitions",
          "2D Transforms",
          "3D Transforms",
          "Transform - origin _ Perspective",
          "3D Cards",
          "3D Image Carousel",
          "3D Cube",
          "Basic Animations",
          "Individual Animation Rules",
          "Sprite Animations",
          "SVG Animations"
        ],
        "Practical Application": [
          "Introduction",
          "Setup CSS files and folder structure",
          "Off-canvas Navigation HTML",
          "Style Navigation Tabs",
          "Style the off-canvas Navigation icon",
          "Finish styling the off-canvas menu",
          "Code the header HTML",
          "Code the Hero section HTML",
          "Code Course Sections HTML",
          "Code the footer HTML",
          "Setup base html CSS rules",
          "Declare CSS variables for color",
          "Declare CSS variables for font sizes",
          "Setup base CSS font sizes",
          "Finish CSS typography rules",
          "Create Hyperlink and Button rules",
          "Use text-clipping on the titles",
          "Style the header with flexbox",
          "Add a Screen-Reader-Text rule",
          "Finish the top-bar with responsive styling",
          "Add a background image to the hero",
          "Finish styling hero titles",
          "Animate the hero titles",
          "Skew the background image",
          "Style About section content",
          "Animate the About image",
          "Style the section cards",
          "Style the course section grid with CSS Grid",
          "Add an image border and image filters",
          "Style the footer",
          "Review what we made",
          "Dealing with fallbacks for older browsers",
          "Next Steps in your CSS Journey"
        ],
        "A Complete CSS Project": [
          "CSS Project"
        ]
      },
      "requirements": [
        "It is a beginner's course perfect for new developers who just have basic knowledge of HTML"
      ],
      "description": "Learn Advanced CSS to create beautiful websites in no time!\nEvery developer knows that the HTML is the backbone of the web content - but its close counterpart CSS or Cascading Style Sheets is equally important as well. Often CSS is used to style, format & present web content.\nIt is a very powerful language that can make web content beautiful, customized CMS, add animation & so on. Not only this, but the web developers proficient in Advanced CSS are also in demand & get a high paying salary.\nThough CSS might be incredibly powerful, it is also popular for being a tricky technology to learn, and even harder to get a stronghold.\nBut it is not true when you are ready to give your time & learn it step-by-step. Considering this, we have curated this course that will help you learn advanced CSS without any hassle.\nWhy you should learn CSS?\nCSS is a cornerstone programming language of the internet\nIt is very powerful\nHeavily used alongside HTML & JavaScript\nImportant for front-end web development\nCan add transitions & animations\nHelps in creating mobile-friendly websites\n\n\nWhy you should take this course?\nIt is a perfect course curated for any programmer seeking to learn the advanced concepts of CSS. All its sections are carefully crafted by an expert for giving you an in-depth understanding of advanced CSS. It covers both basics as well as advanced concepts ensuring a complete understanding of various aspects of CSS programming language.\nThis course includes:\nIntroduction to CSS, developer tools, custom CSS properties\nTypography- font classification, font MIME types, web fonts & variable fonts\nText clipping, text transformation, text transitions & animations\nResponsive text\nBasic to advanced list styles\nPure CSS accordions, CSS slider, CSS forms\nGraphics- colors, backgrounds, gradients, borders, filters, responsiveness\nLayout- content box vs border box, box model layout, clearfix, Flexbox, Grid\nTransitions & animations\nMultiple & asynchronous transitions\n2D & 3D transforms\nBasic, Sprite & SVG animations\nReal-time projects on HTML & CSS, and so much more\n\n\nGet started with this Advanced CSS course right away to learn one of the cornerstone programming languages of the internet!!",
      "target_audience": [
        "Any one who wants to learn HTML and CSS comprehensively will find this course very useful"
      ]
    },
    {
      "title": "cPanel Complete installation and configuration",
      "url": "https://www.udemy.com/course/cpanel-complete-installation-and-configuration/",
      "bio": "Setup a cPanel server from zero to hero (Become Master of cPanel)",
      "objectives": [
        "You can Setup Your own Blazing Fast And stable dedicated hosting",
        "You can Install and Configure cPanel control panel",
        "You Can Boost the Security of your cPanel Server",
        "You will be able to Start Web hosting business"
      ],
      "course_content": {},
      "requirements": [
        "Basic Linux commands knowledge",
        "Basic understanding of hosting industry",
        "General information about web hosting and Web development"
      ],
      "description": "cPanel is web hosting control panel software, similar to Plesk & Directadmin, that lets you administer your website and hosting options using a graphical, web-based interface. You can manage an unlimited number of websites, email accounts, etc. using a cPanel control panel. cPanel automates tasks so that web servers can be easily shared and give website owners a way to quickly set-up and manage websites.\nThe interface also has several special features for server administrators and resellers. It will only run on a Linux web hosting system. The cPanel website provides many informative guides on how to install and use cPanel control panel on its website so you can easily learn more.\ncPanel benefits, Easily establish and manage hundreds of websites. The cPanel control panel is very money worth and has become one of the most popular web hosting control panels in use today. It has practically every feature that you would want to set up your website on shared hosting. You can learn about cPanel on cPanel's own website and explore its features, benefits, and even try out a demo of cPanel.\nIn This Course We are going to setup a linux server from zero to hero and teach you every thing you need to have a complete secure and stable cPanel server and at the end we will install a wordpress on that to test if everything works great. You can see the demo of this control panel in cPanel website",
      "target_audience": [
        "Beginner server administrators",
        "Web Masters",
        "The people who own high traffic websites",
        "Expert Wordpress Developers",
        "Expert Web developers"
      ]
    },
    {
      "title": "Vue 3 Projects 2023 - Learn by doing with Hands-on exercises",
      "url": "https://www.udemy.com/course/vue-js-3-the-practical-guide/",
      "bio": "Master Vue.js 3 by building real-world projects: Unleash the Full Potential of Vue.js with Hands-On Exercises",
      "objectives": [
        "Master Vue js fundamentals and essential concepts",
        "Create dynamic components and build reusable UI elements with Options API & Composition API",
        "Implement Vue Router for seamless navigation in your applications",
        "Harness the power of Pinia for state management",
        "Work with APIs and asynchronous data retrieval using Axios",
        "Build a complete Google Drive clone from scratch with Vue 3, Vite, Composition API",
        "Enhance your skills with additional projects and challenges",
        "Master Vue 3 Composition API"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML, CSS, and JavaScript",
        "Familiarity with frontend development concepts"
      ],
      "description": "Welcome to Vue 3 Projects 2023 - Learn by doing with Hands-on exercises course, the ultimate hands-on course designed to take your Vue js skills to the next level! If you're ready to dive into the exciting world of Vue.js and learn by doing, this is the course for you.\n\n\nIn this comprehensive course, you'll enter an exhilarating journey through Vue js development. With a focus on hands-on exercises, you'll gain practical experience by working on real-world projects. From building interactive web applications to crafting dynamic user interfaces, you'll learn the ins and outs of Vue.js through engaging and exciting projects.\n\n\nWhy you should take this Course?\nHands-On Approach. You'll learn by doing and gain valuable practical experience through exciting, project-based exercises.\nComprehensive Curriculum. Covering everything from the basics to advanced topics, this course ensures you have a solid foundation in Vue.js development.\nExpert Guidance. Learn from industry professionals who have extensive experience in Vue.js development and teaching.\nReal-World Projects. Gain the confidence to tackle real-world scenarios and build robust Vue.js applications.\nFlexible Learning. Access the course materials at your own pace and from anywhere, with lifetime access to the content.\nSupportive Community. Join a vibrant community of learners, collaborate, and exchange ideas with fellow students.\nWhat you will build?\nAs you navigate through the course, you'll encounter a wide range of projects that will challenge and inspire you. You'll build interactive web applications with captivating user interfaces, leveraging Vue js components and directives to create seamless and intuitive experiences.\nHere are the projects that will help you put your skills into practice and build your portfolio.\n1st Project: Reusable Tags Input component\nYou will start learning the Vue js concept by building a simple Tags input, a Vue js-based tagging system that automatically converts the values that users enter in the input into delimited tags.\n2nd Project: Reusable Toast Notification component\nYou will build a reusable Toast notification component, where we can show a message at a given time with some different types and positions.\n3rd Project: Reusable Dropdown component\nYou will build a reusable Dropdown component which is a user interface element commonly used in web and mobile applications to provide a list of selectable options in a compact and collapsible manner.\n4th Project: Reusable Carousel Image slider component\nWe will build a reusable Carousel image slider from scratch, which allows users to automatically cycle through a series of images in a given time.\n5th Project: Reusable Modal component\nYou will build a reusable Modal component which is a user interface element that is used to display content or messages in a focused and temporary dialog box.\n6th Project: Vue Drive (Main Project)\nOur main project is building Vue Drive, a Vue Single Page Application (SPA) that is inspired by Google Drive, where you can upload some files with a drag-and-drop feature and manage them in folders.\n\n\nDon't just take our word for it - see what our past students have to say about our course:\n\"The way of explanation for each section is awesome. Upload file part and image slider is really useful for our projects.\" - Revathi\n\"Excellent course. Maybe the best Vue course out there. Intermediate-level course great for beginners to advanced because he takes you through building a PRODUCTION-QUALITY APP, that includes the sort of complexity you'd have to deal with in real-world projects. Too many courses are too introductory, even the ones with clone apps.\nAlso, his pace is good, not too fast like many others. So THANK YOU for this amazing learning resource. Keep them coming!\" - Michael M\n\n\nSo why wait? Start your journey to becoming a professional Vue.js developer today! Enroll now and join the hundreds of students who have already benefited from our comprehensive and hands-on course. We can't wait to see what you'll build with your new skills.",
      "target_audience": [
        "Frontend Developers looking to upgrade their skills and learn Vue Js",
        "JavaScript Developers interested in building dynamic web applications with Vue Js",
        "Students or Individuals aiming to enhance their web development capabilities",
        "Vue js developers who want to learn Vue 3 Composition API in building real world project"
      ]
    },
    {
      "title": "Alpine JS Masterclass: Learn Alpine.JS with 10 Cool Projects",
      "url": "https://www.udemy.com/course/alpinejs-masterclass/",
      "bio": "The BEST Online Course on Alpine JS V3-Learn How to Use and Apply Alpine.js on Your Day to Day Web Projects Very Easily!",
      "objectives": [
        "How to use alpine js to make your life easier as a developer",
        "Alpine JS key concepts and basics",
        "How to use alpine js directives and magic elements",
        "10 practical projects to learn the use of Alpine JS in real world scenarios",
        "How to create navbar, popup, tooltip, accordion, carousel, modal etc. using alpine js",
        "How to use alpine js to get and display data using API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Assets",
          "Basic Setup & Preparations - Editor, Plugins, Browser"
        ],
        "Alpine Concepts": [
          "x-data : Initializing Alpine JS & x-text",
          "x-show & x-on",
          "x-model",
          "x-bind",
          "x-bind & x-on shortcuts",
          "Let's review what we have learnt so far",
          "x-show vs x-if",
          "x-ref & $refs",
          "Looping in alpine: x-for",
          "x-text vs x-html",
          "Animation in alpine: x-transition",
          "Using x-transition with CSS classes",
          "x-cloak"
        ],
        "10 Cool Alpine JS Projects for Practice": [
          "Section introduction - the cool projects",
          "Let's create simple tooltips",
          "Responsive navigation bar / menu for website header",
          "Tabs with alpine js",
          "Create a cool countdown timer",
          "Accordion with smooth animation",
          "Using API: Create a quote generator",
          "Theme Switcher: Light/Dark mode switch",
          "Alpine.js modal",
          "A simple carousel",
          "Let's create a cool todo app for fun - markup and styling",
          "Let's create a cool todo app for fun - making it functional"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML & CSS",
        "Basic JavaScript knowledge will be helpful but not required."
      ],
      "description": "Let's face the truth. JavaScript is hard to learn and hard to implement in our day-to-day web projects. For example, to create small interactions in a webpage like navigation bar, dropdowns, modal - using javascript is a hassle. First of all, it takes a lot of our time and makes us exhausted.\nThat's why we used jQuery, right? But jQuery is DEAD!\nAlpine is the perfect alternative to using jQuery and vanilla javascript in our projects. It's tiny (only 21.9kB), simple to use but powerful as hell!\n\n\nYou can directly implement it in your HTML markup. You just need to put a script tag and get going!\n\n\nI created this course to help you start using alpine for your day-to-day projects in no time!\n\n\nWhy is this course different?\n- While most of the courses focus on the basics only, we will be also learning how to use alpine js in practical real world projects by actually DOING IT!\nWe will do 10 real world projects which will boost our learning. Not only that, but you will also be confident to get out there and use alpine js practically.\n\n\nThe projects we will do:\nBasic tooltip on both hover & click\nResponsive navigation bar\nComplex tabs\nAn accordion section with smooth animation\nCountdown timer\nModal with animation effect\nQuote generator using API\nA simple carousel\nDark / Light theme switcher\nA cool to-do app\nI highly advise you to invest just a few hours to learn something that is new and really cool and that will make your programming life much easier!",
      "target_audience": [
        "Anyone who wants to add interactions without using complex vanilla js or its frameworks like react.",
        "Anyone looking for an easier & better alternative to jQuery.",
        "A beginner web developer who has learned HTML & CSS and now wants to level up their game.",
        "Basically, who are interested to learn the 'practical' use of alpine js."
      ]
    },
    {
      "title": "C# & .NET Core for Beginners",
      "url": "https://www.udemy.com/course/c-net-core-for-beginners/",
      "bio": "Get up and running with the latest in C# 9 & .NET Core.",
      "objectives": [
        "Latest C# Syntax",
        "Web Development",
        "ASP",
        ".NET",
        "C# 9",
        "Object Oriented Programming",
        "Full Stack Development",
        "AJAX"
      ],
      "course_content": {
        "Getting Started With C# 9": [
          "Getting Started",
          "First Project",
          "Syntax",
          "Variables",
          "Numbers & Math",
          "Boolean Logic",
          "Arrays",
          "Loops",
          "Implicit Types",
          "Lists",
          "Do / While",
          "User Input",
          "Exceptions"
        ],
        "Object Oriented C#": [
          "Classes",
          "Constructors",
          "Get / Set",
          "Inheritance",
          "Interfaces"
        ],
        "ASP.NET": [
          "Getting Started",
          "Our First Application",
          "How ASP.NET Works",
          "Static Files",
          "MV(C) Controllers",
          "(MV)C Models & Views",
          "Building Our UI",
          "Forms",
          "Posting Form Values",
          "AJAX - GET",
          "Serializing Data",
          "AJAX - POST",
          "Adding A Watcher",
          "Adding Materialize",
          "Updating Paths",
          "Interfaces",
          "Dependency Injection"
        ]
      },
      "requirements": [
        "Basic Internet Access",
        "Computer"
      ],
      "description": "C# 9.0 is supported on .NET 5. For more information, see C# language versioning.\nThis course will be a quick dive into the world of C# and .NET.  By the end, you should be able to build your own small websites and applications using C#.   The C# language is used by the Unity engine to make games, mobile apps, websites, software, servers and more.\nSome of the reasons you want to learn C# in 2021 is the average salary is over $100,000 per year.   C# is cross-platform.  It's mature and stable, having been around for over 20 years now.   It's supported by one of the largest companies in the world (Microsoft) and has much community support.\nWe'll also be learning ASP.NET\nASP.NET is FREE, cross-platform & open source.   A framework for building web apps and services with .NET and C#.    .NET is a developer platform made up of tools, programming languages, and libraries for building many types of applications.   ASP.NET performs faster than any popular web framework in the independent TechEmpower benchmarks.   ASP.NET supports industry standard authentication protocols. Built-in features help protect your apps against cross-site scripting (XSS) and cross-site request forgery (CSRF).   ASP.NET provides a built-in user database with support for multi-factor authentication and external authentication with Google, Twitter, and more.\nSome of the largest companies build their websites on .NET including StackOverflow, GoDaddy, Microsoft, CoStar, Siemens and more.",
      "target_audience": [
        "Beginner C#",
        "Beginner ASP",
        "Beginner .NET Programmers"
      ]
    },
    {
      "title": "React, Context & Sass Build a Real World Responsive Website",
      "url": "https://www.udemy.com/course/react-context-create-responsive-website/",
      "bio": "Learn React.js, Context API, Flexbox and SASS/SCSS, Create Multi Pages Responsive Website",
      "objectives": [
        "Learn React JS library from beginners level",
        "Context API from beginners level",
        "CSS Flexbox from beginners level",
        "Sass or Scss from beginners to advanced",
        "React Routing",
        "Vanilla JavaScript scroll animations",
        "Accordion with pure React js",
        "Image lazy loading with React js",
        "SEO optimized React pages with Helmet"
      ],
      "course_content": {
        "Download Tools": [
          "Download Node JS & Text Editor",
          "Install VS Code Extensions",
          "Download Source Code"
        ],
        "FlexBox Basics": [
          "Section Intro",
          "Create Folder Structure",
          "What is Flexbox",
          "Try Flexbox Practically",
          "Flex Wrap",
          "Flex Direction",
          "Flex Align Horizontal",
          "Flex Align Vertical"
        ],
        "Sass/Scss Basics": [
          "What is SASS ?",
          "Setup SASS Environment",
          "Compile SCSS to Pure CSS",
          "SCSS/SASS Variables",
          "SASS vs SCSS",
          "SCSS Partials",
          "Access SCSS Variables in Partials",
          "SCSS Nested Rules",
          "BEM Methodology",
          "SCSS Extends",
          "SCSS Mixins",
          "SCSS If Else Statements",
          "SCSS Loops"
        ],
        "React Basics": [
          "Section Intro",
          "What is React",
          "Create React App",
          "React Folder Structure",
          "What is JSX",
          "Enable Emmet in JSX",
          "React State",
          "Update React State",
          "Loop Array in JSX",
          "Conditional Statements in JSX",
          "CSS in React",
          "React Props"
        ],
        "Project Setting": [
          "Section Intro",
          "Create React App",
          "Install Sass Package",
          "Create Script for SCSS",
          "Choose Google Font",
          "CSS rem Unit",
          "Reset Padding and Margin"
        ],
        "React Routing": [
          "Section Intro",
          "Install React Router Dom",
          "Exact Path Match",
          "Not Found Page"
        ],
        "Header Section": [
          "Section Intro",
          "Add Background Video",
          "Style Background Video",
          "Create Mixin for Positions",
          "Video Poster Attribute",
          "Create Awesome Shape For Header Section",
          "Add Contents in the Header Section",
          "Style Header Contents",
          "Pass Data as Props into Header Component",
          "Style Button",
          "Animate Heading",
          "Animate Sub Heading",
          "Add Logo",
          "Add Space Between Heading, Sub Heading & Button"
        ],
        "Context API & Create Modal": [
          "Section Intro",
          "Create Modal",
          "SCSS @forward Rule",
          "What is Context API",
          "Create Context Object",
          "Create Global State or Store",
          "Access Global State or Store",
          "Open Modal",
          "Close Modal",
          "Animate Modal",
          "Move Global State & Functions to a Separate Component",
          "Implement Reducer Function",
          "Call Reducer Function with Dispatch",
          "Move Reducer Function into a Separate File",
          "Create Types",
          "Create Register Form",
          "Style Register Form",
          "Style Register Button",
          "Create Login Form",
          "Open a Specific Modal",
          "Open Login Form",
          "Bind Register Form Fields",
          "Bind Login Form Fields"
        ],
        "Create Navigation": [
          "Section Intro",
          "Create Transparent Layer",
          "Create Navigation",
          "Style Navigation Links",
          "Create Nav Context & Provider",
          "Access Data from NavProvider in Nav Component",
          "Create Toggle Component",
          "Style Toggle Menu",
          "Open & Close Toggle Navigation",
          "Create Close Icon",
          "HTML Meta Data",
          "Generate Favicon"
        ],
        "Destinations": [
          "Section Intro",
          "Create Row and Columns",
          "Destination Heading",
          "Style Destination Heading",
          "Destinations Data",
          "Destinations Context",
          "Access Destinations Data from Store",
          "Loop Destinations Data",
          "Style Images",
          "Add Space Between Images",
          "Optimize Images Loading Process",
          "Show Country Name on Card",
          "Create Info Card",
          "Style Explore Link",
          "Create Details Page",
          "Access Destination Id",
          "Destination Details",
          "Details Header",
          "More Details about Destination",
          "More Details about Destination Part 2",
          "Cities Data",
          "Access Cities in Details Page",
          "Create Skewed Background",
          "Loop Cities Array",
          "Package Status",
          "Show Name & Package Duration",
          "Style Price",
          "Show Package Facilities",
          "Buy Now Button",
          "Create Folder For City Components",
          "Divide Cities Component in Sub Components",
          "Display Images in High Resolution",
          "Scroll To Top"
        ]
      },
      "requirements": [
        "Basic HTML, CSS & JavaScript is required"
      ],
      "description": "Welcome to React.js, Context API & SCSS course, in this comprehensive course you will learn React.js library, Context API, Flexbox, and Sass/Scss from absolute beginner level, after taking this course you will be compatible with React, Context API, and Sass, before this course no React.js and Sass knowledge is required. In this course first, we will learn CSS Flexbox which is the most widely used CSS layout, don't worry if you don't know CSS Flexbox because I will explain to you Flexbox from scratch.  Second, you will learn Sass or Scss which is a preprocessor language, SCSS will supercharge your skills because it's very flexible we can use variables, functions, loops, inheritance, and lots more features with the help of SCSS. Finally, you learn the React.js library which is the most popular library in the market nowadays, React.js is the front-end library for building user interfaces and it's created by Facebook a well known social network, many large companies are using React.js library such as Facebook itself, Udemy, Medium, PayPal, Payoneer, etc.\nNow let me summarize that what you will learn in this course.\nCSS Flexbox from beginners level\nSASS or SASS from beginners level\nReact.js library from beginners level\nContext API from beginners level\nReact Routing\nReact Image Lazy Loading\nJavaScript Scroll Animations\nGallery Lightbox with React.js\nDeployment to Netlify",
      "target_audience": [
        "If you want to learn React JS then course is for you",
        "If you want to supercharge your SASS/SCSS skills then this course is for you"
      ]
    },
    {
      "title": "Build Your Web Developer Portfolio and Brand To Get Hired",
      "url": "https://www.udemy.com/course/build-your-web-developer-portfolio-and-brand-to-get-hired/",
      "bio": "Get a level above all other developers applying for same job",
      "objectives": [
        "Build a professional portfolio",
        "Learn how to promote your brand as a developer in the community",
        "Learn to use social media accounts like instagram, twitter, dribbble, behance"
      ],
      "course_content": {
        "Introduction": [
          "Your name is your brand",
          "Requirements"
        ],
        "Branding yourself as a web developer": [
          "Blog",
          "Video",
          "Audio",
          "Social Media",
          "hashtags for social media",
          "Communities",
          "In-Person"
        ],
        "Building Your Portfolio": [
          "why your portfolio is important",
          "what do you need to get started to build your portfolio",
          "Taking a look at the layout",
          "HTML Top section",
          "Style the top section",
          "html of services section",
          "style services section",
          "html for portfolio section",
          "style the portfolio section",
          "style the portfolio section part 2",
          "html for experience section",
          "style experience section",
          "style experience section part 2",
          "html for blog posts",
          "style the blog posts",
          "style the blog posts part 2",
          "html for testimonials section",
          "style for testimonials section",
          "style or testimonials section part 2",
          "warning putting your personal information on portfolios",
          "HTML for Footer",
          "Style html for footer"
        ],
        "Make the landing page responsive": [
          "Container and media queries",
          "Top section responsive",
          "service section responsive",
          "portfolio section responsive",
          "Experience Section Responsive",
          "Blog Section Responsive",
          "Testimonials responsive"
        ],
        "Building Our Menu": [
          "Building Our Menu",
          "Style the menu",
          "style the mobile menu",
          "Javascript for mobile menu"
        ],
        "Building Individual Pages": [
          "Building Portfolio Project",
          "project page part 2"
        ],
        "Deploy your website": [
          "Deploying on a shared hosting like godaddy or namecheap or bluehost"
        ]
      },
      "requirements": [
        "Know how to use a text editor",
        "Basics of HTML and CSS"
      ],
      "description": "If you are a junior developer looking to get hired ASAP this is the best courses for you. I will teach you how to create a brand for yourself as a web developer that will impress your future employer. We will also build a portfolio that will show that you are a professional developer not just a junior developer. We will start with all the major social network platforms and then we will build your portfolio.",
      "target_audience": [
        "Anyone looking to have a professional portfolio",
        "Developers looking for an edge above other developers",
        "Developers looking to brand them selves online"
      ]
    },
    {
      "title": "Object oriented programming with Javascript - Build Quiz App",
      "url": "https://www.udemy.com/course/object-oriented-programming-with-javascript-build-quiz-app/",
      "bio": "[OOPs] Build Randomized Quiz App with Timer - Front End Web App Development - Hands-on training - Build app from scratch",
      "objectives": [
        "Understand the basics of HTML5 & CSS (I'll explain the concepts as we code the project)",
        "Understand the basics of Javascript (we have separate modules for this topics)",
        "Understand how object oriented programming works in building real world applicationss",
        "Build a completely dynamic real world quiz app with Javascript, HTML5 and CSS3 with a randomized question pulling feature",
        "Build a fully featured timer for your quiz",
        "Build a colored answer tracker for your quiz",
        "Know how front end web app development works by building this project",
        "Improve your logical problem solving skills",
        "Create step by step algorithms for projects before turning them into codes",
        "Improve your front end design and development skills",
        "Create HTML5 skeletons of web applications",
        "Design web applications with various CSS styling concepts",
        "Make web applications work with Javascript concepts",
        "Get a foundation in Object oriented programming concepts with Javascript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML5 Building Blocks of the App": [
          "Setting up the HTML page skeleton and title",
          "Setting up the Meta information for the app",
          "Create the app's header",
          "HTML code for the quiz's trackers",
          "Set up the quiz section - Question, Option buttons & Next question button",
          "Footer for the app - Progress bar and Timer",
          "HTML code for the app"
        ],
        "Styling the Quiz app - achieving the final look": [
          "Setting up and linking the CSS stylesheet",
          "Basics of CSS selectors and properties",
          "Default styling options for the app",
          "Background colors, and more on applying colors in CSS",
          "Design the quiz box",
          "Design the quiz box - part 2",
          "Design the header of the app",
          "Give the base design for the trackers",
          "Design the question and options area - part 1",
          "Design the question and options area - part 2",
          "Design the Next Question button",
          "Design the footer - progress area and timer",
          "Design the result area - score and retake button",
          "CSS code for the app"
        ],
        "[OPTIONAL] Javascript & OOPs Basic Concepts (related to this project)": [
          "Connecting HTML and script/JS files",
          "An introduction to variables and assigning values",
          "Mathematical operators and alerts",
          "Conditional statements - if else statement",
          "Conditional statements - Switch case",
          "Loops - For loop",
          "Arrays - 1 dimensional arrays",
          "Arrays - 2 dimensional arrays",
          "An introduction to functions (function definition and calls)",
          "Intro to DOM - getElementById and InnerText",
          "Intro to DOM - adding click events to buttons",
          "More Event listeners Part 1",
          "More Event listeners Part 2",
          "Objects oriented programming with Javascript - part 1",
          "Objects oriented programming with Javascript - part 2",
          "Objects oriented programming with Javascript - part 3"
        ],
        "Javascript code for the app - Making the app work": [
          "Creating and linking the scripts",
          "Creating the question bank in the form of objects",
          "Step by step algorithm for the Javascript code of the app",
          "Create and initialize the variables",
          "Retrieve the necessary HTML elements to manipulate them later",
          "Initialize more variables",
          "Function that sets the random question and options in the app",
          "Function that updates the progress bar with each question",
          "Function that changes the option buttons to their default color",
          "Get question function - consolidates and calls the mini functions",
          "Functions to change tracker colors, calculate final score & set result page",
          "Generate a unique random number to call a random question/answer set",
          "Generate a unique random number to call a random question/answer set - part 2",
          "Make the timer work - part 1",
          "Make the timer work - part 2",
          "Make the timer work - part 3",
          "Make the option selection work",
          "Make the next question button work - check and load next question",
          "Consolidate everything and make the app work on refresh",
          "Check the output and correct bugs",
          "Javascript code for the app",
          "Complete code (downloadable) for the Quiz app"
        ],
        "Conclusion & Feature ideas": [
          "New features that you can try to create for this game",
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "You can come to this course with absolutely no coding knowledge. I explain everything you need to create your very first web app based on object oriented programming.",
        "A PC or laptop to practice what I teach"
      ],
      "description": "Practice makes perfect.\nStart your journey into becoming a professional front end web developer here!\nLearn how to create a real world Object Oriented programming based Dynamic Quiz app with Timer!\nAt DigiFisk, we like making learning fun. Our courses are interactive and fun with a ton of practical elements to it. We've decided to take it a step further with our Front end Web app development practice series.\nOnce you learn the syntax of a programming language, the next logical step is to start creating software and apps. But that's where most students get stuck. Problem solving isn't as easy as learning a bunch of syntaxes.\nBut we aim to make it easy for you. We also aim to teach you intermediate programming topics like object oriented programming while at it.\n\n\nWhat will you learn in this course?\nIn this course, you'll learn how to build your Randomized Dynamic Quiz App with Timer & Answer Trackers from the ground up with just HTML5, Javascript and CSSS and Object Oriented programming concepts  in just a couple of hours.\nYou'll learn:\n1. How to create the HTML5 structures of this app.\n2. How to make the app pretty with CSS (design, design, design!)\n3. How to make the app work (draw on the canvas) with logic and algorithm, i.e Javascript\n4. Basic concepts of Javascript and Object oriented programming (concepts related to this project).\n5. How object oriented programming works in building real world applications\n6. How to build a completely dynamic real world quiz app with Javascript, HTML5 and CSS3 with a randomized question pulling feature.\n7. How to build a fully featured timer for your quiz app.\n8. How to build a colored answer tracker for your quiz.\n9. Logical problem solving skills\nBy the end of the course, you'll be one step closer to creating front end web apps like a pro. You could even try creating other  web apps and games from the concepts you learn in this course.\n\n\nHow is this course designed?\nI've made this course as easy to understand as possible. I've structured it in such a way that each section will handle one of the 3 languages covered here.\nIntroduction: This is where I'll explain how the app works, it's various features and what we'll be using to achieve the same results.\nModule 1: We'll be teaching you how to create the bare bones of the app with HTML5. The result will be a page with all the elements we need in our app, devoid any colors or design elements.\nModule 2: Here, we'll \"beautify\" our app. We'll be using CSS elements to give our app colors and styles. At the end of this module, we'll have a Quiz App app that'll look like the final result, albeit one that does not work yet. We'll cover that in the Javascript module.\nModule 3: We'll be covering some basic concepts of Javascript in this module.  We'll also be adding lectures on object oriented programming with Javascript (creating and using objects with Javascript). We'll only cover concepts that we'll need for our app's Javascript code though. If you already know the basics, you can skip this module.\nModule 4: This would be the meat of the course. We'll be delving into Javascript & Object oriented programming code of our app in this module, and We'll teach you how to make the app work (make the quiz, the tracker, the randomized question feature and the timer work) in here.\nFinal section: Finally, We'll give you some ideas on how to improve/enhance the app further and make it your own in terms of design and functionalities.\n\n\nThis course is for you if:\n1. If you like learning by doing rather than hours of boring theoretical lectures.\n2. If you're a complete newbie to the world of web development, or just programming in general, and would like to start creating software with the help of a beginner-friendly course. You'll learn the basics of everything used in this project (HTM5, CSS3, Javascript, HTML canvas).  I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.\n3. If you have the passion for programming, and if you know the basics of HTML5 and CSS3, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course.\n4. Do you want to get into real world programming and object oriented programming? This course will take you a couple steps further in the right direction.\n5. If you want to delve into the exciting world of front end web app development, this course will take you a couple steps further in the right direction.\n6. If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros.\n7. If you know the theoretical concepts of Javascript but would like to learn how to apply your knowledge in the real world.\n8. If you want to add a real-world project to your resume - to get a promotion or find a new job\n9. If you want to pad your portfolio with a cool project to bag more freelance web development projects.\n\n\nSo, what are you waiting for? Get this course today, and begin your journey into the wonderful world of front end web app development and object oriented programming!",
      "target_audience": [
        "If you like learning by doing rather than hours of boring theoretical lectures.",
        "If you're a complete newbie to the world of web development, or just programming in general, and would like to start creating software with the help of a beginner-friendly course. You'll learn the basics of everything used in this project (HTM5, CSS3, Javascript, HTML canvas). I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.",
        "If you have the passion for programming, and know the basics of HTML5 and CSS, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course.",
        "Do you want to get into real world programming and object oriented programming? This course will take you a couple steps further in the right direction.",
        "If you want to delve into the exciting world of front end web app development, this course will take you a couple steps further in the right direction.",
        "If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros.",
        "If you know the theoretical concepts of Javascript but would like to learn how to apply your knowledge in the real world",
        "If you want to add a project to your resume - to get a promotion or find a new job",
        "If you want to pad your portfolio to bag more freelance web development projects"
      ]
    },
    {
      "title": "Build 8 Types of WordPress Websites in this 1 Course Only",
      "url": "https://www.udemy.com/course/build-7-types-of-wordpress-websites-in-this-1-course-only/",
      "bio": "Build Blogging, Ecommerce, Affiliate Marketing, Online course creation website, etc with WordPress in this one Course.",
      "objectives": [
        "I will Teach to setup WordPress with Web Hosting & Domain Names",
        "I will teach how to Design WordPress website",
        "I will teach how to make eCommerce website with WordPress",
        "I will teach how to make blogging website with WordPress",
        "I will teach how to make Online Course website with WordPress",
        "I will teach how to make Affiliate Marketing website with WordPress",
        "I will teach how to make Personal Brand website with WordPress"
      ],
      "course_content": {
        "WordPress Setup for Website Building": [
          "Build 7 Types of WordPress Websites in this 1 Course Only",
          "Watch This Before Learning Course",
          "Introduction to Domain & Web Hosting",
          "Web Hosting Theory",
          "Domain Names Theory",
          "Watch Free Courses",
          "Hosting Setup",
          "Domain Setup",
          "Install SSL",
          "Intall WordPress 2 Cases",
          "Install WordPress (FREE Domain)",
          "Install WordPress (Paid Domain)",
          "WordPress Settings to Consider",
          "Build Multiple Website with Single Domain"
        ],
        "Elementor Settings (Important)": [
          "Elementor Settings (Important)"
        ],
        "Building Web Design Website with WordPress": [
          "Elementor Web Design Walkthrough",
          "Create Subdomain/ Domain",
          "Creating pages",
          "Connecting pages",
          "Install Theme",
          "Install Plugin",
          "Elementor Overview",
          "Hero Section",
          "Benefit Section",
          "Benefit Section Full",
          "Our Partners",
          "About Us",
          "testimonial",
          "Call to Action",
          "Footer Design",
          "About us Page",
          "Contact Us Page",
          "Home Response",
          "About Us Response",
          "Contact Us Page",
          "Custom Header"
        ],
        "Building Ecommerce Website with WordPress": [
          "Ecommerce Website Walkthrough",
          "Create Subdomain/ Domain",
          "Introduction to eCommerce Website",
          "Structure of Ecommerce Website",
          "Important WooCommerce Settings",
          "Creating Products for Shop",
          "Home Page Customization",
          "Full Website Customization",
          "Testing Website",
          "Dropshipping Jouney",
          "Dropship Website Walkthrough",
          "Install & Connecting Dropshipping Plugin",
          "Importing products from Aliexpress",
          "Managing & Edit Products",
          "Some Global Settings"
        ],
        "Building Online Course Website with WordPress": [
          "Online Course Website Walkthrough",
          "Create Subdomain/ Domain",
          "Install Plugin",
          "Install Theme",
          "Creating Course",
          "Quiz and Q&A",
          "Making Courses Paid",
          "Payment Gateway",
          "Custom Website Design",
          "Custom Website Design 2",
          "Custom Website Design 3",
          "Custom Website Design 4",
          "Video Hosting Alternative",
          "My recommended Hosting",
          "Tutor LMS",
          "Thank u Page",
          "Checkout Editor",
          "Autocomplete Orders",
          "Website Testing"
        ],
        "Building Blogging Website with WordPress": [
          "Blogging Website Walkthrough",
          "Create Subdomain/ Domain",
          "Blogging Setup One",
          "Blogging Setup Two",
          "Blogging Setup Three",
          "Adding Post Grid",
          "Social Share",
          "Google Analytics Integrate",
          "Add Google Adsense"
        ],
        "Building Affiliate (Amazon) Marketing Website with WordPress": [
          "Affiliate Website Walkthrough",
          "Create Subdomain/ Domain",
          "Mapping Course",
          "Installing Theme",
          "Installing Plugin",
          "Creating Pages",
          "Categories",
          "Creating Menus",
          "Product Slider",
          "Create Products",
          "Create Blog",
          "Home Page Customization",
          "Custom Footer",
          "Website Customization",
          "Final Touch Up"
        ],
        "Building Personal Brand Website with WordPress": [
          "Personal Brand Website Walkthrough",
          "Create Subdomain/ Domain",
          "Install Theme",
          "Install Plugin",
          "Creating Pages",
          "Connecting Pages",
          "Elementor Overview",
          "Hero Section",
          "Quote Section",
          "Body Section",
          "Event Design",
          "Adding Videos",
          "Image Carosel",
          "FB Feeds",
          "Insta Feeds",
          "Footer Design",
          "Checking Response",
          "Design Header",
          "About Contact Us",
          "Blog Design",
          "Last coverup"
        ],
        "Building Social Community Website like Facebook with WordPress": [
          "FB Website Walkthrough",
          "Download Resources",
          "Create Subdomain/ Domain",
          "Adding Theme",
          "Adding Plugin",
          "Theme Settings",
          "Registration Page Design",
          "Journey of User in Website",
          "Add Media",
          "Connecting Pages",
          "Create Blog",
          "ecomm Feature",
          "Creating Products for Ecommerce",
          "Full Website Customization",
          "Menu Settings"
        ],
        "Building Digital Marketing Agency Website": [
          "Digital Marketing Agency Website Walkthrough",
          "Create Subdomain/ Domain",
          "Download This Resources",
          "Installing Theme",
          "Installing Plugins",
          "Creating Pages",
          "Connecting Pages",
          "Write Blogs + Resources",
          "Add Main Menu",
          "Add Footer Menu",
          "Create Title",
          "Designing ToolBar",
          "Header Design",
          "Home Page Design",
          "Footer Design",
          "Blog Design",
          "Our Services",
          "Important Pages to Create",
          "Bonus"
        ]
      },
      "requirements": [
        "No experience required (Everything taught from scratch)",
        "Positive mind to learn",
        "Must have PC with Internet Connection"
      ],
      "description": "This course is very unique because inside this course we will teach you how to make different kinds of websites with WordPress. So with the help of this course, you can easily create any kind of WordPress website.\nSo what kind of WordPress website we will be creating inside this course:-\nhow to make an eCommerce website with WordPress\nhow to make a blogging website with WordPress\nhow to make an Online Course website with WordPress\nhow to make an Affiliate Marketing website with WordPress\nhow to make a Personal Brand website with WordPress\nhow to make a Facebook-like website with WordPress\nhow to make a Digital Marketing Agency website with WordPress\nPlus in this course, we will always add a new kind of WordPress website which we can create. We will notify you whenever we will add a new kind of website.\nFor example, we will soon add how to make a website like Facebook using WordPress and many more. So this course is just amazing if you want to make a website for maybe yourself or you can offer these skills as a freelancer.\nInside this course, we will also teach you how to make or set up or configure WordPress easily with only one click. We will explain to you a very amazing way where you can install an unlimited WordPress website with single web hosting and domain name.\nAlso, you can web design your website using WordPress & Plugins to make it more awesome you can totally customize it with any techy coding knowledge you can do this all just by doing drag and drop.\nEnroll now in our \"Build 8 Types of WordPress Websites in this 1 Course Only\" course.\nEnroll Now!",
      "target_audience": [
        "anyone who wants to make or learn eCommerce website with WordPress",
        "anyone who wants to make or learn Blogging website with WordPress",
        "anyone who wants to make or learn Personal Brand website with WordPress",
        "anyone who wants to make or learn Online course website with WordPress",
        "anyone who wants to make or learn Affiliate Marketing website with WordPress",
        "anyone who wants to make or learn to design website with WordPress"
      ]
    },
    {
      "title": "Entrepreneurship, Business, And Marketing For Engineers",
      "url": "https://www.udemy.com/course/entrepreneurship-business-and-marketing-for-engineers/",
      "bio": "Programmer, coder, IT or Computer Science major? Become an entrepreneur! Learn business for non-business people",
      "objectives": [
        "Be more than an employee. Become a founder, and reach a higher potential",
        "Smoothly transition from technology to business",
        "Start your own successful business",
        "Add a business dimension to your technical skills",
        "Participate in business and marketing meetings at your company",
        "Grow into a business leader, and have people follow your ideas instead of the other way around",
        "WORLD-CLASS student support: I answer 99% of student questions within 24 hours",
        "PERSONALIZED HELP from the instructor: Join OFFICE HOURS Zoom call with the instructor and students to ask questions directly"
      ],
      "course_content": {
        "Introduction and welcome": [
          "Course welcome and instructor introduction",
          "Options to have a better course-taking experience",
          "Correct entrepreneurship mindset to take on and conquer obstacles",
          "Transition from tech to business owner",
          "Customer development by Steve Blank",
          "MVP and Eric Ries",
          "Biology and Neuroscience of entrepreneurship and starting a business"
        ],
        "Business planning": [
          "Business planning section introduction",
          "Introducing the 3-sentence business plan, examples, then your exercise",
          "EXAMPLE: Turning a 3-sentence plan into a 1-page business plan for a mobile app",
          "EXAMPLE: 1-page business plan for local business like a lawn care business"
        ],
        "More 3-sentence business plan examples of common businesses": [
          "Section introduction - more examples of a three sentence business plan",
          "EXAMPLE: Agency or service business 3-sentence plan to a 1-page plan",
          "EXAMPLE: Ecommerce 3-sentence business plan to a 1-page plan",
          "EXAMPLE: B2B (Business to Business) 3-sentence & 1-page business plan",
          "How long should a business plan be & what writing style you should use"
        ],
        "More details on marketing strategies for planning a business": [
          "Marketing plan section introduction - a vital part of your business plan",
          "Infographic to help you create a marketing plan",
          "Basic marketing plan for an Ecommerce product",
          "Local business marketing plan example",
          "Agency or services (marketing, web development, design) company marketing plan",
          "Marketing plan for a blog or YouTube or podcast or influencer or coach",
          "Marketing plan for a platform or big website domination",
          "Marketing plan for an innovative new product or website",
          "B2B company marketing plan",
          "Marketing plan company and strategies overview"
        ],
        "Getting feedback on your business before you start coding it": [
          "How to get feedback on your business idea and from where",
          "Your business pitch which you will use to get feedback and more",
          "Paid options to get business idea feedback",
          "How to tell if an idea is good & cheap market validation of business ideas",
          "What to do if you have too many business ideas"
        ],
        "More entrepreneurship theory": [
          "Emotional Intelligence for entrepreneurs - section introduction",
          "Examining the state of being excited",
          "Stress management for entrepreneurs",
          "Role of emotions in decision-making",
          "Dealing with negative emotions like anger, dejection, and frustration",
          "The Marshmallow test - Stanford study of the best predictor of future success"
        ],
        "Why businesses fail": [
          "Reasons businesses fail"
        ],
        "How to generate business ideas": [
          "Section introduction - how to generate business ideas",
          "WORKSHEET: Picking an industry and getting started with business idea generation",
          "Identify your business goals",
          "Combining Industry and goals for unique & personalized business idea beginnings",
          "Question that help you start coming up with business ideas",
          "Adding demographics and psychographics to your idea",
          "Bigger checklist: 18-item business idea checklist",
          "EXERCISE and WORKSHEET: Get unique and creative business ideas",
          "Let's compare results from previous exercise - if yours are different, tell me",
          "Examples of innovative and disruptive companies from YCombinator",
          "What are moonshots, and how to balance the search for moonshots within a company",
          "How to come up with physical product ideas"
        ],
        "How to actually start your business": [
          "How to get business ideas",
          "Services business & freelancing as an engineer",
          "Apps",
          "Teaching engineering online",
          "Example of successfully teaching technical topics - Mark Lassoff",
          "Software product",
          "Gigantic platform business models",
          "Exercise for getting tech business ideas",
          "You can start commoditized non-tech businesses too"
        ],
        "Passive income business ideas": [
          "Section introduction - passive income ideas",
          "Passive income vs. residual income vs. hourly income vs. other?",
          "Introduction to Amazon Dropshipping and Amazon arbitrage",
          "Amazon arbitrage for white label products and two-step Dropshipping",
          "Tool for Amazon Dropshipping, price arbitrage, and Amazon buy box automation",
          "Make money with affiliate marketing & earn passive income",
          "Good things about affiliate marketing",
          "How to start affiliate marketing today and in a few minutes",
          "Make money by selling a physical product",
          "Selling in brick and mortar stores?",
          "How to manufacture and sell physical products without actually manufacturing!",
          "Overview of Shopify dropshipping and print on demand",
          "How to make money with video",
          "How to make money by selling courses out of your YouTube videos",
          "Licensing courses",
          "Flippa",
          "Blogging business overview",
          "Personal branded business overview"
        ]
      },
      "requirements": [
        "Please be excited about adding business skills to your engineering background",
        "Be able to do the exercises in the course"
      ],
      "description": "Become more than an employee! Turn yourself into a successful founder and CEO, and turn your ideas into a successful business!\nI got a Computer Science degree and worked as a software engineer.\nBut I wanted to learn more about business and have more of a say in business conversations and decisions. Plus, I wanted to turn my ideas into something real and successful.\nPlus, you have a bigger earning potential as a business owner than a software engineer who works for the business owner.\nThat is what you will get in this course - a way to transition from a techie to a full blown, strong entrepreneur.\nThis course will teach you\nHow to get business ideas\nIntroduce you to marketing\nGive you many soft business skills\nTeach you basics of business communication\nHelp you feel confident in thinking through business strategies\nINSTRUCTOR BACKGROUND\nI started as a software engineer with a CS degree, and I've been an entrepreneur for 15+ years, have coached 1,000+ entrepreneurs in person, taught 100,000+ students, impacted millions of entrepreneurs worldwide creating 6 and 7-figure businesses in the process, and I would love to help you.\nBONUSES INCLUDED\n* Lots of extra freebies, downloadable worksheets, and exercises to make the course more interactive and valuable\n* Personal invitation to my Facebook community after you complete the course\n* My list of 50 business-success skills after you complete the course\n* Be entered to get chosen for my student of the month status and have your business featured\nRESPONSIVE AND CARING INSTRUCTOR: WORLD-CLASS STUDENT SUPPORT\nIf you have questions, know that I am here to help! I answer 99% of student questions within 24 hours. Many students tell me that other instructors don't respond. Well, I do because\n1) I care about my students.\n2) I feel a responsibility to make sure that students get their money's worth from the course.\nMONEY-BACK GUARANTEE\nThe course comes with an unconditional, Udemy-backed, 30-day money-back guarantee. This is not just a guarantee, it's my personal promise to you that I will go out of my way to help you succeed just like I've done for thousands of my other students.\nInvest in your future. Enroll now.",
      "target_audience": [
        "Engineers who want to reach higher potential than to just have a job for the next 30-years",
        "Programmers who want to pursue their own creative ideas, but don't know the best way",
        "Take charge of your own career and make yourself the boss and CEO"
      ]
    },
    {
      "title": "Full Stack Web Development Foundations: Scratch to Advanced",
      "url": "https://www.udemy.com/course/full-stack-web-development-foundations/",
      "bio": "Become Full Stack Web Developer From Scratch. Course Covers HTML Web Forms, CSS, JavaScript, PHP, SQL, School Project",
      "objectives": [
        "Learn to Build a Dynamic Database Driven Website from Scratch",
        "Become a Full Stack Web Developer in a Simple Easy To Understand Way",
        "Learn to Build a Login Sign Up Form From Scratch",
        "Learn to Build a Contact Us From From Scratch",
        "Learn CSS, HTML, JavaScript, PHP, and SQL in the Simplest Manner",
        "Learn to Host Your Dynamic Website Online"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Software Download and Installation": [
          "Downloading and Installing the Required Software"
        ],
        "Building an HTML Form": [
          "Creating Your First Web Page in HTML",
          "Form Input: Email and Phone Number",
          "Form Input: Text Field",
          "Form Input: Text Box",
          "Form Input: Checkboxes",
          "Form Input: Radio Button",
          "Form Input: Date and Calendar",
          "Form Input: Images",
          "Form Input: Attachments",
          "Form Input: Password",
          "Form Input: Button",
          "Form Input: Links and Tooltip",
          "Form Input: Placeholders"
        ],
        "Styling Forms: Cascading Style Sheets (CSS)": [
          "What is CSS?",
          "Types of CSS: Inline vs. External Style Sheet",
          "Styling Text Color, Text Size and Text Type",
          "Styling Text Box",
          "Styling Checkboxes",
          "Styling Calendar",
          "Styling Password Field",
          "Styling Button"
        ],
        "JavaScript: Adding Interactivity to Forms": [
          "What is JavaScript?",
          "How to Change an HTML Tag Using JavaScript?",
          "Replacing An Image Using JavaScript: Bulb On Off Effect",
          "How to Control CSS Properties (Text Size, Color, Etc.) Using JavaScript?",
          "Internal JavaScript: How to Write and Internal JavaScript Code?",
          "External JavaScript: How to Link an HTML Page With An JavaScript File?",
          "Creating a Password Validator Using JavaScript",
          "Creating a Date of Birth Validator Using JavaScript",
          "Creating a Progress Bar Using JavaScript"
        ],
        "SQL Database": [
          "What is a Database?",
          "What are SQL and NoSQL Databases?",
          "Download, Installation and Getting Familiar with Oracle SQL Database",
          "How to Create and Read Tables in SQL?",
          "How to INSERT Data in SQL Database?",
          "Partial Search: How to Fetch a Record From SQL Database?",
          "Conditional Search: Using AND, OR, ORDER BY Queries",
          "How to UPDATE and DELETE Records from Database?"
        ],
        "PHP Project: Building a Contact Form With Validator & Honeypot Spam Protection": [
          "Code and Example Files",
          "Introduction to PHP",
          "Planning Your Contact Us Form",
          "Working with MAIN Tag",
          "Designing Contact Us Form with Honeypot Spam Protection",
          "Form Field Validation in Post Method",
          "Coding Mail Function for Sending Form Data to an Email ID",
          "Coding Index.php File",
          "Testing the Contact Us Form on Your Computer Using XAMMP Server"
        ],
        "Next Step": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming background required. We cover everything from scratch",
        "A computer or laptop with internet connection will be required to follow along the lessons"
      ],
      "description": "Do you want to build and manage your own dynamic data-driven website but don't know how to begin?\n\n\nDo you want to learn Web Development from scratch but are unable to do so because of the technicalities of programming and too much content is making you feel lost?\n\n\nAre you a researcher and curious to learn about web technologies?\n\n\nIf the answer to any of the above questions is yes, then this course is for you. Web development is a complex topic and could be a time bewildering experience for many! We are interacting with web data and night and web development skills are as essential as reading, writing, and arithmetic.\n\n\nWhy you should learn web development?\nWeb development is an essential skill, as essential as reading, writing, and arithmetic. Do not leave yourself behind in learning and mastering it.\nIf you know web development you can build a website online without investing lots of money in an external programmer or company.\nIf you are looking to make a career in Web Development, this course will get you started immediately.\nYou can build your own personal or a dynamic portfolio website using this course.\nYou can program your research survey or experiment online and collect data effortlessly\nWeb development is fun! You must try it.\n\n\nWhat does this course cover?\nWe have built this course to offer a comprehensive yet focussed coverage of core web development skills covering the following topics:\nHow to conceptualize and plan a dynamic website from scratch?\nHow to design any HTML form?\nHow to Style HTML form with CSS?\nHow to write inline CSS or connect an HTML form with an external CSS?\nHow to make your HTML form interactive with Javascript?\nHow to add validators like name validation, password validation, email, phone, and other types of validators in your Web Form?\nHow to program a form using PHP?\nWhat is Database and how to create a SQL Database?\nHow to host your dynamic website online?\nHow to create a fully functional login sign up form using a demo School project?\nThis course comes with a 30-Days Money back guarantee! No Questions Asked! So your investment is fully safe. Make full use of this opportunity and Sign up for the course now to start the web development journey today!",
      "target_audience": [
        "Beginners with no background in Web Development or technology who want to become an independent full stack web developer"
      ]
    },
    {
      "title": "RabbitMQ Messaging With Java (Spring Boot) From Zero To Hero",
      "url": "https://www.udemy.com/course/rabbitmq-messaging-with-java-spring-boot-from-zero-to-hero/",
      "bio": "AMQP, Queue, Exchange, Highly Availability, Clustering, Shovel, Federation, Binding, Asynchronous Messaging, Fanout",
      "objectives": [
        "Asynchronous Messaging with RabbitMQ",
        "RabbitMQ vs AMQP",
        "AmqpTemplate and RabbitTemplate in Spring Boot",
        "Create an application in Spring Boot from zero",
        "Learn RabbitMQ from zero to hero",
        "RabbitMQ Exchange Types: Default, Direct, Topic, Fanout, Header",
        "Message Post Processing",
        "Exception Handling, Retry Mechanism"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - AMQP, RabbitMQ, Asynchronous Messaging",
          "Exchange Types in RabbitMQ",
          "What is AMQP? How is it related with RabbitMQ?",
          "Overview for RabbitMQ Implementation for this Course"
        ],
        "Setting Up Development Environment": [
          "Download and Install Java 11+",
          "Download and Install Intellij",
          "Download and Install Lombok on Intellij",
          "Download and Install RabbitMQ and RabbitMQ Management Console"
        ],
        "Overview for Basic Frameworks and Tools": [
          "Spring Boot Overview - Annotations, Beans, Configuration",
          "Lombok Overview - Getter, Setter, Constructors",
          "Rest API Overview - Http Methods",
          "Postman Install and Overview"
        ],
        "Restful Web Services - Overview": [
          "@RequestParam Annotation and How does it work?",
          "@PathVariable Annotation and How does it work?",
          "@RequestBody Annotation and How does it work?"
        ],
        "Create Spring Boot Project With RabbitMQ Environment": [
          "Overview for Spring Application",
          "Source Code",
          "Create Project with Spring Initializer",
          "Why Did We Choose Gradle? Isn't Maven most common one?",
          "Configure Application Properties and Create Connection Factory"
        ],
        "1. Exchange Type - Default Exchange": [
          "Default Exchange",
          "Test Default Exchange With Rest Api"
        ],
        "2. Exchange Type - Direct Exchange": [
          "Direct Exchange",
          "Test Direct Exchange With Rest Api"
        ],
        "3. Exchange Type - Fanout Exchange": [
          "Fanout exchange",
          "Test Fanout Exchange With Rest Api"
        ],
        "4. Exchange Type - Topic Exchange": [
          "Topic Exchange",
          "Test Topic Exchange With Rest Api"
        ],
        "5. Exchange Type - Header Exchange": [
          "Header Exchange",
          "Test Header Exchange With Rest Api"
        ]
      },
      "requirements": [
        "Only a computer and basic java knowledge"
      ],
      "description": "Hi there,\nIn this course, we will learn every details of RabbitMQ from A to Z. To learn it, we will use Spring Boot project. First of all, we will start with meaning of it so we will start with basic things. And we will go on step by step with its details...  Maybe the most important thing about this course, we will learn some practical features of RabbitMQ like Highly Availability, Policies that you couldn't find enough resource on internet...\nHere is the some basic topics in this course that will be learned:\nQueue\nExchange\nBinding\nProducer\nConsumer\nRouting Key\nPolicies\nFederation Upstream\nClustering With Docker\nQueue Arguments/Features\nHighly Availability\nException Handling\nRetry Mechanism\nMax Priority\nMirroring\nAMQP Default\nVirtual Host\nConnection vs Channel\nIn this course, we will work with multiple nodes via Docker. So we will also learn basic Docker commands about RabbitMQ.\nWhy do we need RabbitMQ?\n- Messaging queue... We will see the details of it.\nShould we choose rabbitmq over apache-kafka?\n- It depends... We will see the details of it.\nIs Spring-Boot the right framework to work with rabbitmq? Do we really need it?\n- Absolutely. It provides many functionalists and flexibility...\nAre there disadvantages of rabbitmq over apache-kafka?\n- It depends... We will see the details of it.\n-----------------\nTo implement all rabbitmq steps, we will create a spring boot project. Our project will include model view controller structure. Of course, one of our aim is to create readable projects at the end of the day.",
      "target_audience": [
        "All developer curious about Messaging Queue"
      ]
    },
    {
      "title": "The Ultimate 70+ Hour Front-End Web Development Course 2025",
      "url": "https://www.udemy.com/course/the-ultimate-front-end-web-development-course/",
      "bio": "Master HTML, CSS, JS, ES6+, jQuery, AJAX, Bootstrap 5, React, Redux, Flex, Grid & SASS to Become a Web Development Pro!",
      "objectives": [
        "You will Learn everything you need to become complete Front End Web Developer",
        "Learn PSD to responsive HTML/CSS websites with PSD to HTML Portfolio Project",
        "Learn PSD to React JS Website with Project",
        "Learn CSS Flex , CSS Grid and learn creating CSS Layouts",
        "Learn CSS Animations , creating Awesome Hover Effects with Projects",
        "Learn CSS concepts in depth",
        "Learn Javascript , ES6+ , Advanced Javascript",
        "Learn JQuery , AJAX with Projects",
        "Learn Bootstrap 5 and Learn Creating Responsive Web Design",
        "Learn Creating Bootstrap Components with Projects",
        "Learn React JS , React Router , State Management , Context API , Redux , React Redux"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML": [
          "What is HTML",
          "Basic HTML Structure",
          "HTML Elements",
          "HTML Attributes",
          "HTML Styles",
          "HTML Headings",
          "HTML Paragraphs and Pre tag",
          "HTML Computer Code Tags",
          "HTML Comments",
          "Text Formatting",
          "Quotes , ABBR , BDO",
          "HTML Colors",
          "Important Concept : Block and Inline Elements",
          "Understanding ID and Class",
          "HTML Links",
          "HTML Images",
          "HTML Tables",
          "HTML Lists",
          "HTML Resource File"
        ],
        "CSS": [
          "CSS Syntax",
          "CSS Selectors",
          "CSS Parent Selectors",
          "Types of CSS Styles",
          "CSS Colors",
          "Border Radius and Outline",
          "CSS Margin",
          "CSS Padding",
          "Important : CSS Box Model",
          "CSS Font Family",
          "CSS Width , Height , Line Height",
          "Text Formatting",
          "CSS Display Property",
          "Important Concept : CSS Positioning",
          "CSS Overflow",
          "Important Concept : Float and Clear",
          "CSS Opacity",
          "Box Shadow",
          "Text Shadow",
          "CSS Resource Files"
        ],
        "CSS Transition": [
          "Transition Property and Transition Duration",
          "Transition Timing Function and Transition Delay",
          "Interesting Illustration using Transition Delay",
          "Project : Cool Unique Hover Effect",
          "Button Hover Project Resource File"
        ],
        "CSS Animation": [
          "Animation Basics : Part 1",
          "Animation Basics : Part 2",
          "Animation : Shorthand",
          "Project : Animated Video Background Hero Area Part 1",
          "Project : Animated Video Background Hero Area Part 2",
          "Project : Animated Video Background Hero Area Part 3",
          "Animated Video Background Project Files"
        ],
        "CSS Flex": [
          "Display Property",
          "Flex Direction",
          "Flex Wrap",
          "Flex Flow",
          "Justify Content",
          "Align Items",
          "Align Content",
          "Order",
          "Flex Grow",
          "Flex Shrink",
          "Flex Basis",
          "Flex Shorthand",
          "Align Self",
          "CSS Flex Resource Files"
        ],
        "CSS Grid": [
          "Concept of Grid Template , Grid Gap , Grid auto X",
          "Concept of Grid auto flow",
          "Concept of Different Grid Gap",
          "Justify Content",
          "Difference Between Justify Content and Justify Items",
          "Align Content and Align Items",
          "Place Content",
          "Rearranging Items using some cool Properties",
          "Grid Area and Challenge",
          "Solution for the Challenge",
          "Justify Self and Align Self",
          "Project - Web Layout using CSS Grid easily",
          "CSS Grid Resource Files"
        ],
        "CSS SASS": [
          "Intro",
          "Sass Variables",
          "Sass Nesting",
          "The Ampersand Sign (&)",
          "Shortening Code having some prefix",
          "Mixin",
          "Mixin Challenge",
          "Import",
          "Extend",
          "Mixin with arguments",
          "Final Touch of the Project",
          "CSS SASS Resource Files"
        ],
        "CSS Pseudo Elements": [
          "Understanding Pseudo Element and Project : Unique Hover Effect : part 1",
          "Project : Unique Hover Effect : part 2",
          "Project : Unique Hover Effect : part 3",
          "Project : Unique Hover Effect : part 4",
          "CSS Pseudo Element Resource Files"
        ],
        "CSS Shapes": [
          "Triangle",
          "Hexagon",
          "Circle",
          "Book Shape",
          "Hero Area Project",
          "CSS Shapes Resource Files"
        ]
      },
      "requirements": [
        "Softwares Used : Text Editor - Sublime Text , Code Editor - Visual Studio Code",
        "No Prior Programming Knowledge required . Just be open and start taking lectures with positive mind set"
      ],
      "description": "Welcome to the Ultimate Front-End Web Development Course!\nAre you ready to dive into the world of web development and become a front-end master? If you're searching for a one-stop course that takes you from absolute beginner to expert level, then this course is designed just for you!\nImagine confidently designing and creating stunning, responsive, and interactive websites that impress clients, employers, and users alike. This course covers everything you need to kickstart your web development journey and land your dream job in tech.\nWhy Choose This Course?\nComprehensive Curriculum: From the fundamentals of HTML and CSS to advanced JavaScript, React, and beyond, this course covers it all.\nHands-On Learning: Build real-world projects to solidify your skills and create an impressive portfolio.\nInterview-Ready Content: Preparing for a front-end developer job interview? This course will equip you with the necessary skills and confidence to ace it!\nPractical Challenges & Exercises: Enhance your learning experience with interactive coding challenges and fun mini-projects.\nResponsive Support: Stuck on a concept? Get your questions answered via the Q&A section or direct messaging.\nWhat You'll Learn\nThis course covers a wide range of essential front-end development technologies, including:\nHTML – The foundation of every webpage.\nCSS – Styling techniques to make your websites visually appealing.\nJavaScript – The language that brings your websites to life.\nES6+ – Modern JavaScript features and best practices.\nAdvanced JavaScript – Dive deep into closures, event loops, and more.\njQuery – Simplify complex JavaScript tasks.\nAJAX – Create seamless, data-driven web applications.\nCSS Flexbox – Master flexible and responsive layouts.\nCSS SASS – Write cleaner, reusable, and more manageable CSS.\nCSS Animations – Add eye-catching animations to your designs.\nBootstrap 5 – Rapidly develop stunning and responsive websites.\nReact JS – Build powerful, component-based web applications.\nReact Router, Hooks, State Management, Context API, Reducers, and more!\nRedux & React Redux – Efficient state management for large-scale applications.\nPSD to HTML/CSS – Convert design files into working web pages.\nPSD to React – Take your skills to the next level by converting designs into React-based websites.\nAnd so much more!\nProjects You’ll Build\nThis course isn't just about learning concepts—you'll be building exciting projects that you can showcase in your portfolio!\nCSS Projects:\nHover Effects\nLoader Animations\nCharacter Animations\nCSS Layouts\nMini Website with CSS Grid\nJavaScript & jQuery Projects:\nDOM Manipulation & Traversal\nArray Methods in Action\nAsynchronous JavaScript\nAJAX Projects:\nAuto Suggestion Feature\nAutofetching Data\nData Submission Forms\nBootstrap Projects:\nCustom Navigation Menu\nAnimated Carousel\nInteractive Modal & Accordion\nMega Projects:\nPortfolio Website (PSD to HTML/CSS)\nReact-Based Portfolio Website (PSD to React)\nMini Cricket App (Using React JS)\n… and many more exciting projects!\nWhat Makes This Course Special?\nReal-World Experience: You won’t just learn theory—you’ll apply your knowledge in practical, industry-relevant projects.\nStructured & Engaging Content: No fluff, no unnecessary jargon—just high-quality, straight-to-the-point learning.\nSupportive Learning Environment: Whether you have doubts, need guidance, or want feedback, I am here to help you  throughout your journey.\nJoin Today & Start Building Amazing Websites!\nDon't miss this chance to become a skilled front-end web developer. Take action now, enroll in this course, and start creating stunning websites today!",
      "target_audience": [
        "If you want to become a Complete Front End Web Developer, this course is for you",
        "If you want to Learn PSD to HTML/CSS , this course is for you",
        "If you want to Learn Creating Responsive Websites , this course is for you",
        "If you want to Learn Creating React JS SPA websites , this course is for you"
      ]
    },
    {
      "title": "HTML and CSS for Beginners - Web Design & Development",
      "url": "https://www.udemy.com/course/html-and-css-for-beginners-web-design-development/",
      "bio": "Html and CSS for beginners - Learn the power of creating your own website within 1 week!! Enroll now to Learn",
      "objectives": [
        "you will be able to make websites",
        "you will be able to work with html and css",
        "you will be able to work with javascript",
        "you will be able to create responsive web designs",
        "you will be a pro front- end web developer",
        "you will be hire-able as a front end web developer"
      ],
      "course_content": {
        "Introduction to HTML": [
          "Introduction",
          "Installing Code Editor - Sublime",
          "Introduction to HTML - HTML Elements",
          "Introduction to HTML - HTML Elements - Part 2"
        ],
        "Introduction to CSS": [
          "Linking Style Sheets with HTML",
          "Styling Headings, Paragraphs and Links",
          "Styling Ordered, Un-Ordered Lists",
          "Inline & Block Level Elements",
          "Margins & Padding",
          "CSS Positions",
          "Id's and Classes"
        ],
        "Creating website from Scratch": [
          "Introduction",
          "Creating Navigation - Part 1",
          "Creating Navigation - Part 2",
          "Header Section - Part 1",
          "Header Section - Part 2",
          "Header Section - Part 3",
          "About Me Section - Part 1",
          "About Me Section - Part 2",
          "Services Section - Part 1",
          "Services Section - Part 2",
          "Services Section - Part 3",
          "Contact Us Section - Part 1",
          "Contact Us Section - Part 2",
          "Footer Section",
          "CSS media Queries",
          "A little Assignment for my Students",
          "HTML5 Introduction",
          "Please Join this Quiz Test to Check your Html & CSS skill Level"
        ]
      },
      "requirements": [
        "You should know how to use a PC",
        "Willing to learn code",
        "Willing to change your career and become a master"
      ],
      "description": "Course: HTML and CSS for Beginners\nLearn how to create websites with HTML and CSS. If you are a beginner and wants to learn the art of web design and development?? Then this is the right course for you. In this course of HTML and CSS for beginners, We are going to learn the following skill set to get a 6 figures Salary.\nAbout the Course\n\nGet started creating web pages with HTML and CSS, the basic building blocks of web development. HTML, or HyperText Markup Language, is a standard set of tags you will use to tell the web browser how the content of your web pages and applications are structured. Use CSS, or Cascading Style Sheets, to select HTML tags and tell the browser what your content should look like. Whether you are coding for fun or planning to start a career in web development, learning HTML and CSS is a great place to start.\n\n\nWe are going to start with:\n\n1. HTML\n2. CSS\n3. JavaScript\n\n\n\nAfter covering this basic website design languages, We are going to jump on some advance stuff:\n\n1. HTML5\n\n2. CSS3\n\n3. JavaScript Animations\n4. Responsive Layout Designs\n5. Forms & CSS Animations\n\n\nWhat will you learn at the end of this course?\n\nBy the end of this course, you'll learn the basics of HTML and CSS and how to structure and style your web-page.\nWhy learn HTML and CSS?\nEverything you see in a website is a result of the combination of HTML and CSS. With these two languages, you will have the skills you need to bring your website design to life.\n\n\nYou will be able to do:\n\nYou will be able to create a website from scratch\n\nYou will be able to work with html and css\n\nYou will be able to work with javascript\n\nYou will be expert in web designing\n\nYou will be expert in web development\n\nYou will be hireable as a web developer\n\n\n\nSo Enroll now and join my course ( HTML and CSS for Beginners ) and earn up-to 6 figures salary.",
      "target_audience": [
        "Anyone who are willing to become a web developer",
        "Anyone who are willing to learn the code",
        "Anyone who wants to become a front-end web developer",
        "Anyone who wants to change career into web development"
      ]
    },
    {
      "title": "Front end web development in Rust",
      "url": "https://www.udemy.com/course/front-end-web-development-in-rust/",
      "bio": "Leverage WebAssembly to ship Rust applications to your browser",
      "objectives": [
        "Developing frontend components with Yew's virtual DOM",
        "Becoming familiar with the Rust WebAssembly ecosystem",
        "Interacting with browser and listening to events via wasm and websys",
        "Communicating to web APIs for CRUD via an authorization layer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Local setup",
          "Gitlab repository"
        ],
        "Login page": [
          "Yew Components",
          "Component props",
          "Event handling",
          "Backend setup",
          "Login endpoint",
          "Alert component and error handling"
        ],
        "Router and contexts": [
          "Router and custom routes",
          "Navigator and redirects",
          "Custom context and reducer",
          "A better welcome page",
          "Links and menu"
        ],
        "Session handling": [
          "Session storage for auth tokens",
          "Logout"
        ],
        "CRUD": [
          "Rustacean list and add",
          "Loader and custom hook",
          "Edit rustacean",
          "Delete rustacean",
          "Button component",
          "Crates list and add",
          "Select component",
          "Textarea component",
          "Crates edit and delete"
        ],
        "Trunk": [
          "Copying and serving files",
          "Custom CSS or SASS",
          "Building for release"
        ]
      },
      "requirements": [
        "Good knowledge of Rust",
        "Understanding of HTTP, REST, JSON, HTML and CSS",
        "Experience with other frontend frameworks (React-like) will greatly help"
      ],
      "description": "WebAssembly is a binary instruction format that most browsers support. It enables languages such as Rust, C, C++ Go, etc., to be compiled and run in a web browser.\nThe Rust programming language is the most frequently used language for developing WebAssembly applications, according to surveys.\nAnd how could it not? It was voted as StackOverflow’s most loved and desired programming language, eight years in a row, thus everyone is looking for an excuse to run it even inside browsers, where Javascript is the usually the common approach.\n\n\nYou have already spent a good amount of time developing web applications and you have a very good understanding of Rust.\nYou are wondering whether you can develop your next UI in Rust and ship it to browser via WASM.\nYou are looking for a resource that has all you need in a single place.\n\n\nWell, look no further! In this course i will show you how to create a complex web app in Rust that consumes JSON APIs.\n\n\nWe will use the Yew web framework along with wasm crates  to build a UI with\n- Authentication\n- Several different routes and pages\n- Forms for CRUD support\n- State management, custom hooks and reducers\n- Async requests via browser's fetch API",
      "target_audience": [
        "Experienced web developers evaluating Rust and WebAssembly for their next project",
        "Rust developers who want to build a UI for their application in Rust"
      ]
    },
    {
      "title": "Progressive Web Apps - Beginner to Expert - 2021",
      "url": "https://www.udemy.com/course/progressive-web-apps-beginners-to-advanced/",
      "bio": "Beginner to Advanced build a Progressive Web App (PWA) that will run and feel like a native Android and IOS App",
      "objectives": [
        "Progressive Web Apps",
        "HTML",
        "Practical Case Studies",
        "The use of Javascript Promises",
        "REST API End Points",
        "Index DB",
        "Web Application Audit",
        "Browser Debugging",
        "Java Script Arrow Functions",
        "PWA Service Workers",
        "NodeJS HTTP Server",
        "Cloud Databases",
        "Package JSON and Node JS",
        "Background Sync to the Coud",
        "Making your website installable on PCs and Phones",
        "Exciting New Developments in the Industry of PWAs",
        "Cloud Firebase",
        "News Agency Project where PWAs can be put to use"
      ],
      "course_content": {},
      "requirements": [
        "Very Basic HTML knowledge",
        "No programming experience required, I will teach you everything using my line by line break down of algorithm technique",
        "A Mac or a Windows computer with access to the internet",
        "No paid software required - All development will be done with free tools"
      ],
      "description": "Welcome to the complete Progressive Web App(PWA) Training bootcamp 2021!\n\n\nI am very excited to share all my knowledge around Progressive Web Applications.\n\n\nThe Web landscape is constantly evolving. Browsers are continuously improving and new features are constantly being released. The future for Progressive Web Apps is looking good. 2021 is an exciting time to be a web developer!\n\n\nIn this course you will learn how to implement Progressive Web App features for new and your existing web applications. Along the way you will learn how to measure and debug your PWAs so you are not missing any PWA core feature, you will learn the core concepts of building Progressive Web Apps, Rest API endpoints, cloud Firebase, Index DB, Application Auditing and Browser debugging, Java Script Arrow functions, Core concepts around Service Workers, Node JS and much much more !\nWith 15+ hours, this PWA course is most up-to date for those beginning to learn PWA in 2021. We'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a web developer.\nThe course includes over 15+hours of HD video tutorials and builds your programming knowledge while making real-world websites and web apps.\nEven if you have basic HTML programming skills, this course will take you from beginner to Mastery!\n\n\nProgressive Web Apps are a set of features you can add to ANY web application and make it run like a native application on your IOS and Android phone, giving web the features that were only available to the native software. If you are looking to leverage your existing basic web development skills and learn how to build modern Progressive Web Apps, then this course is for you.\n\n\nSo what are you waiting for, lets hit the road and get started on Progressive Web Apps development !",
      "target_audience": [
        "Beginner Web Developers with day one knowledge of HTML",
        "People who have no experience with Progressive web apps",
        "You are starting our a new web application project as a startup",
        "You have an existing web application and you want to convert it into a Progressive Web Application",
        "IOS and Android Native App Developers",
        "If you want to take one course and learn everything around PWAs"
      ]
    },
    {
      "title": "Mastering Bing Chat & AI: Unlock Your Digital Potential",
      "url": "https://www.udemy.com/course/mastering-bing-chat-ai-unlock-your-digital-potential/",
      "bio": "Explore AI Evolution, Bing Chat Operations, Professional Use Cases, & Creative Applications",
      "objectives": [
        "Understand Bing Chat's evolution and AI's role in modern tech",
        "Master Bing Chat prompts for effective communication.",
        "Apply AI for personal productivity and daily tasks.",
        "Utilize Bing Chat for business intelligence and market research.",
        "Develop skills for debugging and code analysis using Bing Chat.",
        "Harness Bing Chat for creative content creation and idea generation.",
        "Implement Bing Chat for project development and collaborative coding.",
        "Navigate and resolve common issues with Bing Chat support."
      ],
      "course_content": {
        "Introduction to Bing Chat and AI": [
          "Introduction",
          "Overview of Bing Chat",
          "The evolution of Bing Chat from basic search to AI-powered assistance",
          "The importance of AI in the modern world",
          "Why Microsoft Lunch Bing"
        ],
        "Introduction to Artificial Intelligence": [
          "What is Artificial Intelligence?",
          "History and Evolution of AI",
          "Different Types of AI: Narrow AI vs General AI",
          "Applications and Implications of AI in Today’s World",
          "GPT-4, Bard AI and Bing Chat Copilot"
        ],
        "Navigating Bing Chat Prompts": [
          "How to write the Prompts.",
          "Accessibility Features in Bing Chat"
        ],
        "Basic Operations with Bing Chat": [
          "Conducting Effective Searches",
          "Communication Skills: Asking Questions and Phrasing Requests",
          "Utilizing Bing Chat for Daily Tasks: Weather, News, and More"
        ],
        "Business and Professional Use Cases": [
          "Market Research and Analysis with Bing Chat",
          "Data Gathering and Business Intelligence Insights",
          "Networking and Professional Growth through Bing"
        ],
        "Bing Chat for Personal Productivity": [
          "Organizing Schedules and Reminders",
          "Managing Emails and Communications",
          "Note-Taking and Document Retrieval"
        ],
        "Bing Chat as a Developer’s Companion": [
          "Finding and Fixing Bugs with Bing Chat Assistance",
          "Using Bing Chat to Understand Code Snippets and Libraries",
          "Collaborative Coding and Pair Programming with Bing Chat"
        ],
        "Bing Chat for Debugging and Code Analysis": [
          "Step-by-Step Debugging Guidance with Bing Chat",
          "Static Code Analysis and Performance Recommendations",
          "Code Security Checks with Bing Chat’s Suggestions"
        ],
        "Building a Project Using Bing": [
          "Environment Setup",
          "Building ToDo app from Scratch using bing"
        ],
        "Creative Uses of Bing Chat": [
          "Assisting in Content Creation: Blogs, Articles, and Reports",
          "Brainstorming with Bing: Idea Generation and Development",
          "Graphics and Design Inspiration through Conversations"
        ]
      },
      "requirements": [
        "Basic computer literacy and internet navigation.",
        "Interest in AI, technology, and digital tools.",
        "No prior AI or programming knowledge required.",
        "Access to a computer with internet for Bing Chat."
      ],
      "description": "In the rapidly evolving digital landscape, the integration of Artificial Intelligence (AI) into daily operations has become paramount. \"Mastering Bing Chat & AI: Unlock Your Digital Potential\" is a comprehensive course designed to equip learners with a deep understanding of Bing Chat's AI capabilities and its transformative impact on both personal productivity and business processes.\nStarting with a foundational introduction to Bing Chat and the significance of AI in today's world, the course delves into the journey of Bing Chat from a simple search tool to a sophisticated AI-powered assistant. Participants will explore the evolution of artificial intelligence, distinguishing between Narrow AI and General AI, and examining the revolutionary GPT-4, Bard AI, and Bing Chat Copilot technologies.\nThe curriculum is carefully structured to guide learners through effective navigation of Bing Chat prompts, enhancing accessibility, and mastering basic operations for conducting searches, asking questions, and leveraging Bing Chat for daily tasks such as weather updates and news.\nFor professionals, the course offers insights into leveraging Bing Chat for market research, data analysis, networking, and business intelligence insights, highlighting its utility in professional growth and market analysis. Developers will find dedicated sections on utilizing Bing Chat for debugging, code analysis, and collaborative coding, showcasing Bing Chat as an invaluable tool for software development and project management.\nBeyond practical applications, the course encourages creative uses of Bing Chat in content creation, brainstorming, and design inspiration, fostering an innovative approach to digital creativity.\nBy the end of this course, learners will have a thorough understanding of Bing Chat's capabilities, how to apply AI tools in various aspects of their personal and professional lives, and best practices for maximizing the benefits of AI-powered assistance. Join us to unlock your digital potential and stay ahead in the AI revolution.",
      "target_audience": [
        "Professionals seeking to leverage AI for business and market analysis.",
        "Developers looking for AI assistance in coding and debugging.",
        "Educators and students interested in AI's applications and impact.",
        "Content creators aiming to utilize AI for creativity and productivity.",
        "Technology enthusiasts eager to explore Bing Chat and AI innovations.",
        "Individuals aiming to enhance personal productivity through AI tools."
      ]
    },
    {
      "title": "Django with Tailwind CSS",
      "url": "https://www.udemy.com/course/django-with-tailwind-css/",
      "bio": "Creating Beautiful Interfaces: Django and Tailwind CSS in Action",
      "objectives": [
        "Export data from Django admin & views in different formats: xls, csv, json",
        "Add Javascript to a Django project to i.e. copy to clipboard",
        "Create custom management command to generate dummy data",
        "Automation - writing linux scripts",
        "Build beautiful UI with Tailwind CSS",
        "Add light / dark mode",
        "Build reusable components",
        "One Time Password as extra authentication security step",
        "Generate qr codes",
        "Style django forms with Tailwind & Widget Tweaks",
        "Create custom template filters",
        "Function views vs class based views"
      ],
      "course_content": {
        "Introduction": [
          "Course overview",
          "Code editor + extensions",
          "Source code"
        ],
        "Defining the Models": [
          "Start a new project",
          "Settings.py file",
          "Create first app & model for Authors",
          "App structure",
          "Model Field Types",
          "Create apps for: publishers, books, customers & rentals",
          "Create the Publisher Model",
          "Relationship Fields",
          "Create the Book Model + override the save method to generate the slug",
          "Generating book id with uuid",
          "Add ImageField to the Book class + configure media files",
          "Create QR Code for the Book",
          "Create the Customer Model",
          "Create the Rental Model",
          "ISBN info for this course",
          "Improvements to the Book Model"
        ],
        "Introduction to Django MVT architecture": [
          "Introduction to MVT",
          "Writing our first view",
          "View with the template",
          "Template inheritance",
          "Working with querysets",
          "ORM + Queryset methods",
          "Reverse relationships",
          "Defining methods in models",
          "Better code organization",
          "App views and urls",
          "Navigating between views"
        ],
        "Exporting data from the admin": [
          "Dummy data generation with custom management commands",
          "Exporting the Publisher data",
          "Exporting Customers data",
          "Exporting Books data",
          "Improving the book exports",
          "Adjust admin header & title",
          "Exporting data"
        ],
        "First steps with Tailwind & Django CBV on the book app": [
          "Introduction to Tailwind css",
          "Add Tailwind CSS to a Django Project",
          "Tailwind css quiz",
          "Tags aren't working",
          "Session variables",
          "Add custom color",
          "Light / Dark mode",
          "Light dark mode fix",
          "Style Button",
          "Navbar & sidebar code for the next lecture",
          "Add navbar & sidebar",
          "Transforming the book title list to class view",
          "Overriding get_queryset method",
          "Create first Django Form",
          "Form methods",
          "Form validation",
          "Csrf token",
          "Styling options for the forms",
          "Styling the book title form",
          "Use of for loop",
          "Django messages",
          "Reusable components - alert",
          "Reusable components - header",
          "get context data method",
          "Adding extra parameter to the Book Title list view",
          "Configuring static files (add javascript)",
          "Add a button to the header",
          "Modal code for the next lecture",
          "Place form in a modal",
          "Adding js to the modal + fixing the form",
          "Pagination code",
          "Book list view",
          "Adding pagination",
          "Transforming to Book Title detail view",
          "Add a header to the Book title detail page + back button",
          "Table code for the next lecture",
          "Add table to display books",
          "Book detail page (get absolute url)",
          "Book delete page",
          "Add confirmation of delete",
          "Fix for going back",
          "Reusable components - buttons",
          "Checking if the book is available",
          "Display the status of the book",
          "Code for book detail page",
          "Book detail page",
          "Adding copy to clipboard"
        ],
        "Working on the rentals app": [
          "Add rentals section + create first view & template",
          "Highlight the current section in the sidebar",
          "Add search functionality by the book id - form and view",
          "Add search functionality by the book id - template and javascript",
          "Redirect to Rentals list",
          "Table code for the next lecture",
          "Display the history of rentals",
          "Writing custom template filter to retrieve status information",
          "Intro to book model modification",
          "Change pk to uuid",
          "Change isbn as hashed book title and publisher (sha 256)",
          "Automation - run migrations",
          "Automation - reset data",
          "Modification: display the book id and isbn",
          "Search by book id or isbn",
          "Last touches to book detail page",
          "Working on update rental status",
          "Add small improvements",
          "Add new rental",
          "Add header to the new rental page",
          "Download rentals data from view - part 1",
          "Download rentals data from view (and admin) - part 2"
        ],
        "Styling the navbar": [
          "Adding jdenticon to the navbar",
          "Create the dropdown menu",
          "Adding JS to the navbar to make it more interactive"
        ],
        "Dashboard & Authentication (including OTP)": [
          "Create the dashboard page",
          "Add ajax",
          "Aggregate vs annotate",
          "Prepare chart data - part 1",
          "Prepare chart data - part 2",
          "Add chart js",
          "Adding forms for logging in",
          "Add login view",
          "Form code for the next lecture",
          "Add login template",
          "Create send otp function",
          "Create otp view",
          "Otp template & test run",
          "Add logout",
          "Adding mixins & decorators for login",
          "Display contents depending on if user is authenticated",
          "Is ajax code for the next lecture",
          "Chart data only for ajax requests",
          "Fix change theme after login",
          "Put charts into cards & set the dashboard header",
          "Add about page + highlighting for about & dashboard section",
          "Add logo",
          "Add missing titles to templates"
        ],
        "Challenges & bonuses": [
          "List of challenges",
          "Switching Username to Email in Django Authentication"
        ]
      },
      "requirements": [
        "Basics of Python"
      ],
      "description": "Are you looking to create a functional and visually appealing book rental system using Django and Tailwind CSS? If so, this project-based course is the perfect fit for you!\nIn this comprehensive course, you'll learn how to create a fully-functional book rental system from scratch using Django and Tailwind CSS. You'll be guided through the entire development process, from setting up your development environment to deploying your project to a live server.\nThroughout the course, you'll gain a deep understanding of how to use Django's import-export feature to download data from admin and views, as well as how to create custom management commands to generate dummy data for your project. You'll also learn how to generate QR codes for book rentals, build reusable components with Tailwind CSS, and add light and dark mode to your interface.\nIn addition to these topics, we'll also cover how to automate scripts to make your workflow more efficient, copy data to clipboard, how to setup an extra security layer to authentication (time based one time password), how to work with 2 types of views in Django (function views and class based views) and... much more! You'll leave the course with a fully-functional book rental system that you can use as a template for your own projects.\nOur step-by-step guidance and practical approach to teaching will ensure that you not only understand the concepts covered in the course but also know how to apply them in real-world projects. By the end of the course, you'll have gained a deep understanding of how to use Django and Tailwind CSS to create stunning and user-friendly web applications.\nWhether you're a seasoned web developer or just starting out, this course will help you take your skills to the next level. Don't miss out on this opportunity to build your own book rental system with Django and Tailwind CSS.",
      "target_audience": [
        "Future Python/Django Web Developers"
      ]
    },
    {
      "title": "Create Virtual Meeting Rooms In Your Website",
      "url": "https://www.udemy.com/course/live-online-meetings-and-web-conferencing/",
      "bio": "Start Live Online Classes, Start Your Online Tutoring Program, Conduct Remote Guest Speaker Sessions & Lead Remote Teams",
      "objectives": [
        "You will be able to create and conduct live online meetings, web classes and webinars.",
        "You will be able to hold virtual meetings using your Mobile/Tablet and Laptop/ Desktop."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Benefits of Virtual Meetings": [
          "Benefits of Virtual Meeting"
        ],
        "Setting up WordPress Website": [
          "Installing WordPress",
          "Create Pages",
          "Create Menu"
        ],
        "Setting Up Virtual Meeting Room": [
          "Installing the BigBlueButton Plugin",
          "Creating Virtual Meeting Room / Classes",
          "Setting Up Virtual Meeting Room / Classes"
        ],
        "Join Meeting from Mobile/Tablet & Laptop/Desktop": [
          "Join Meeting from your Mobile or Tablet",
          "Join Meeting from your Laptop or Desktop"
        ],
        "Bonus-1: Creating Web Classrooms Using Greenlight Front-end of BigBlueButton": [
          "Creating Virtual Meeting Room Using Greenlight Front-end of BigBlueButton"
        ],
        "Bonus-2: Creating Virtual Classrooms in MOODLE using BigBlueButton": [
          "Creating BIGBLUEBUTTON Virtual Classrooms in MOODLE LMS"
        ]
      },
      "requirements": [
        "Basic Wordpress knowledge required.",
        "All you need is a computer and internet connection."
      ],
      "description": "You will be able to create Virtual Meetings / Web Classes in your own website without having to write a single line of code.\nYou will be able to start your Live Online Teaching & Tutoring Program, host Remote Guest Speaker Sessions, Virtual Office hours and Lead Remote Teams.\nWhat you'll learn\nYou will be able to create and conduct live online meetings, web classes and webinars. You will be able to hold virtual meetings using your Mobile/Tablet and Laptop/ Desktop. You will be able to Start Live Online Classes, Start Your Online Tutoring Program, Conduct Remote Guest Speaker Sessions & Lead Remote Teams. It allows you to create and manage live online meetings and web classes to interact with your students, clients and peers etc\nAbout Instructor\nAbdul Wahid Sarki, as a EdTech Coach and Consultant I am here on Udemy to teach what I know in an approachable way and share my knowledge.\nAbdul Wahid has created a courses on Udemy and has taught 1380+ students in 90 countries and received a 4.4 average review out of 41 reviews.\nPlease don't hesitate to drop me a message if you have a suggestion for a topic for one of my courses, or need help with something. I may not always be able to help you directly, but I would still love to talk to you !",
      "target_audience": [
        "Anyone interested in creating / holding their Meetings Live Online",
        "Business owners, Entrepreneurs, Teachers, Trainers and Bloggers"
      ]
    },
    {
      "title": "Learn Javascript & HTML5 Canvas - Build A Paint/Drawing App",
      "url": "https://www.udemy.com/course/learn-javascript-html5-canvas-build-a-paint-drawing-app/",
      "bio": "Javascript Front End Web App Development - HTML5 Canvas & CSS3 - Build a drawing app from scratch - hands-on training",
      "objectives": [
        "Understand the basics of HTML5 & CSS (I'll explain the concepts as we code the project)",
        "Understand the basics of Javascript & HTML5 canvas (we have separate modules for these 2 topics)",
        "Build a completely dynamic drawing/paint app with HTML5 canvas, CSS3 & Javascript from scratch",
        "Know how front end web app development works by building this project",
        "Create step by step algorithms for projects before turning them into codes",
        "Improve your logical problem solving skills",
        "Improve your front end design and development skills",
        "Create HTML5 skeletons of web applications",
        "Design web applications with various CSS styling concepts",
        "Make web applications work with Javascript concepts",
        "Get a foundation in HTML canvas concepts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Algorithm of the game app": [
          "Algorithm of the game app"
        ],
        "HTML5 Building Blocks of the App": [
          "Create skeleton of the HTML5 code",
          "Add meta tags",
          "Create the toolbar's skeleton",
          "Create the color input box",
          "Create the range input slider",
          "Create the brush, erase, reset & save button and the drawing canvas",
          "HTML code for the app with the images"
        ],
        "Styling the Drawing/Paint app - achieving the final look": [
          "CSS basics - link tag, selectors and comments",
          "CSS3 properties - box sizing and user select settings",
          "Style the drawing canvas",
          "Style the toolbar - part 1",
          "Style the toolbar - part 2",
          "Style the toolbar - part 3",
          "Style the color change tool - part 1",
          "Style the color change tool - part 2",
          "Style the size change tool",
          "Style the remaining tools/buttons - part 1",
          "Style the remaining tools/buttons - part 2",
          "Style.css file - Drawing/Paint app",
          "HTML & CSS (Related to the course)"
        ],
        "[OPTIONAL] Javascript Basic Concepts (related to this project)": [
          "Connecting HTML and script/JS files",
          "An introduction to variables and assigning values",
          "Mathematical operators and alerts",
          "Conditional statements - if else statement",
          "Conditional statements - Switch case",
          "Loops - For loop",
          "Arrays - 1 dimensional arrays",
          "Arrays - 2 dimensional arrays",
          "An introduction to functions (function definition and calls)",
          "Intro to DOM - getElementById and InnerText",
          "Intro to DOM - adding click events to buttons",
          "More Event listeners Part 1",
          "More Event listeners Part 2"
        ],
        "[OPTIONAL] HTML5 Canvas Basic Concepts (related to this project)": [
          "Step 1 & 2 - Getting the canvas and creating the drawing object",
          "Drawing a line (also explanation on canvas dimensions and pixel points)",
          "Drawing & coloring a shape with poly lines (a path)",
          "Drawing & coloring a circle and arcs"
        ],
        "Javascript code for the app - Making the app work": [
          "Initializing variables and conditions - part 1",
          "Initializing variables and conditions - part 2",
          "Make the brush work - brush button click event & function",
          "Make the brush work - mouse down event part 1",
          "Make the brush work - mouse down event part 2",
          "Make the brush work - mouse down event part 3",
          "Make the brush work - draw on mouse drag",
          "Make the brush work - mouse up event",
          "Make the eraser work",
          "Make the color change tool work",
          "Make the size change tool work",
          "Make the reset button work",
          "Make the save button work",
          "Add default conditions for when the app loads",
          "Complete code of the app",
          "Javascript & HTML5 Canvas Practice Test"
        ],
        "Conclusion & Feature ideas": [
          "New features that you can try to create for this game",
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "You can come to this course with absolutely no coding knowledge. I explain everything you need to create your very first web app.",
        "A PC or laptop to practice what I teach"
      ],
      "description": "Practice makes perfect. Start your journey into becoming a professional front end web developer here!\nAt DigiFisk, we like making learning fun. Our courses are interactive and fun with a ton of practical elements to it. We've decided to take it a step further with our Front end Web app development practice series.\nOnce you learn the syntax of a programming language, the next logical step is to start creating software and apps. But that's where most students get stuck. Problem solving isn't as easy as learning a bunch of syntaxes.\nBut we aim to make it easy for you.\n\n\nWhat will you learn in this course?\nIn this course, you'll learn how to build your own Drawing/paint App from the ground up with just HTML5 canvas, Javascript and CSS  in just a couple of hours.\nYou'll learn:\n1. How to create the HTML5 structures of this app.\n2. How to make the app pretty with CSS (design, design, design!)\nand last but never the least\n3. How to make the app work (draw on the canvas) with logic and algorithm, i.e Javascript\n4. Basic concepts of Javascript and HTML5 canvas (concepts related to this project).\nBy the end of the course, you'll be one stop closer to creating front end web apps like a pro. You could even try creating other smaller web apps and games.\n\n\nHow is this course designed?\nI've made this course as easy to understand as possible. I've structured it in such a way that each section will handle one of the 3 languages covered here.\nIntroduction: This is where I'll explain how the app works, it's various features and what we'll be using to achieve the same results.\nModule 1: Every professional developer writes algorithms before creating a software or game. We'll be writing the a step by step algorithm for our app, and I'll be explaining what we'll do in every step.\nModule 2: I'll be teaching you how to create the bare bones of the app with HTML5. The result will be a page with all the elements we need in our app, devoid any colors or design elements.\nModule 3: Here, we'll \"beautify\" our app. We'll be using CSS elements to give our game colors and styles. At the end of this module, we'll have a Drawing/Paint web app that'll look like the final result, albeit one that dose not draw on the canvas yet.\nModule 4: I'll be covering some basic concepts of Javascript in this module. I'll only cover concepts that we'll need for our app's Javascript code though. If you already know the basics, you can skip this module.\nModule 5:  I'll be covering some basic concepts of HTML5 canvas in this module. I'll only cover concepts that we'll need for our app's Javascript/HTML5 canvas code though. If you already know the basics, you can skip this module.\nModule 6: This would be the meat of the course. We'll be delving into Javascript & HTML5 canvas code of our app in this module, and I'll teach you how to make the app work (let the user draw on the drawing canvas and use the various tools in the toolbar) in here.\nFinal section: Finally, I'll give you some ideas on how to improve/enhance the app further and make it your own in terms of design and functionalities.\n\n\nThis course is for you if:\n1. If you like learning by doing rather than hours of boring theoretical lectures.\n2. If you're a complete newbie to the world of web development, or just programming in general, and would like to start creating software with the help of a beginner-friendly course. You'll learn the basics of everything used in this project (HTM5, CSS3, Javascript, HTML canvas).  I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.\n3. If you have the passion for programming, and if you know the basics of HTML5 and CSS, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course.\n4. If you want to delve into the exciting world of front end web app development, this course will take you a couple steps further in the right direction.\n5. If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros.\n\n\nSo, what are you waiting for? Get this course today, and begin your journey into the wonderful world of front end web app development!",
      "target_audience": [
        "If you like learning by doing rather than hours of boring theoretical lectures.",
        "If you're a complete newbie to the world of web development, or just programming in general, and would like to start creating software with the help of a beginner-friendly course. You'll learn the basics of everything used in this project (HTM5, CSS3, Javascript, HTML canvas). I'll be explaining every single line of code I'll be using in this course, so you won't feel lost.",
        "If you have the passion for programming, and know the basics of HTML5 and CSS, but you're stuck on the practical aspects of it. Turn your theoretical knowledge into practical knowledge with our course.",
        "If you want to delve into the exciting world of front end web app development, this course will take you a couple steps further in the right direction.",
        "If you're a Javascript web developer who just wants to try out a new project. Our course welcomes coders of every level, from absolute beginners, to pros."
      ]
    },
    {
      "title": "Learn and Understand Angular and NodeJS- A Developers Course",
      "url": "https://www.udemy.com/course/master-in-angular-and-nodejs-by-building-a-mean-stack-app/",
      "bio": "Angular Course for Beginners - Learn JavaScript, Understand NodeJS and Angular 7 by Building and Deploying a Web App",
      "objectives": [
        "Build a beautiful UI using the Angular Framework",
        "Use third party libraries with Angular, like Angular Material and ngx-Bootstrap",
        "Build your own Authentication System using JSON Web Token",
        "Create you own endpoints (API)",
        "Create a web Server with NodeJS",
        "How to use Express Framework with NodeJS",
        "How to use MongoDB and Mongoose",
        "CRUD operations with the NO-SQL database MongoDB",
        "Connect your Angular app with NodeJS and MongoDB",
        "Deploy your app to Real Web Server with 2 ways"
      ],
      "course_content": {
        "Getting Started": [
          "Intro",
          "MEAN Pattern",
          "Install NodeJS and Angular CLI",
          "Choose your IDE",
          "Course Topics",
          "Get Most of this Course"
        ],
        "Angular Front-End": [
          "Intro",
          "Folder Structure - SPA",
          "Component Overview",
          "Install Angular Material and Bootstrap",
          "Create Login Component",
          "Getting form values- Template driven Approach",
          "Adding Validation",
          "Angular Router - Register Component",
          "Create a Toolbar",
          "Create Sidenav Bar",
          "Sidenav Menu Components",
          "Manage-Reservations",
          "Create a Car",
          "Angular Http Request"
        ],
        "NodeJS - Backend": [
          "Introduction",
          "Connecting Front with Backend",
          "Restful API",
          "CORS Explanation",
          "Create Node-Server",
          "Install Express",
          "Install Cors and Body-Parser",
          "Install Nodemon",
          "Create Signup Endpoint",
          "Finish Signup",
          "Login - Backend Logic",
          "Login - Front End Logic",
          "Connection to MongoDB"
        ],
        "Finishing Up": [
          "Upload Image- Angular Request",
          "Install Multer - Image endpoint",
          "Create Car Angular Request",
          "Create Car Endpoint- Save to Mongo",
          "Users Angular Request and Node EndPoint",
          "Explanation of Mat Table",
          "Implement Logic of Mat Table",
          "Put Data to our Mat Table from Backend",
          "Delete User",
          "Fix Make Admin Button",
          "Fix Toggle",
          "Explain the query Structure",
          "Reservation endpoint",
          "Install MomentJS and ngx-Bootstrap",
          "Implement ngx-Bootstrap Datepicker",
          "Moment Library Conversions",
          "Reservation Schema and fix EndPoint and Angular Request",
          "Fix some Mistakes",
          "Use Subjects to pass Cars from Datepicker component to MainPage",
          "Load Cars in Mat-Card",
          "Modify Mat-Card for our Cars",
          "Add real Cars",
          "Send Angular Request to Rent a Car",
          "Rent Endpoint and save to Database",
          "Angular Material Dialog",
          "Angular Request to get Rented Cars",
          "Manage Reservation Mat Table",
          "Cancel a Reservation",
          "Unsubscribe to avoid Memory Leaks"
        ],
        "Deployment": [
          "Deployment Options",
          "Upload Backend - Option 1",
          "Upload Front-end - Option 1",
          "Finishing the seperated Uploads - Option 1",
          "Upload one Combined App - Option 2"
        ],
        "Project Code": [
          "Final Code"
        ]
      },
      "requirements": [
        "We are going to refresh a little bit of what is Angular, NodeJS and MongoDB is, but basic knowledge about them is strongly recommended",
        "You must know at least some basics from Angular framework but in general we will explain every step we do before we move on",
        "You don't have to be an expert at these technologies but is recommended to have a basic knowledge of Javascript(Typescript)",
        "We will work with HTML and CSS so it would be easier if you know also some basics about them"
      ],
      "description": "Create Beautiful and fast web applications using the latest technologies like Angular, NodeJS, MongoDB and Express\n\nThese four technologies are the parts of the famous MEAN stack pattern and they can help you to build a full stack application and of course become a full stack developer.\nUse the Angular as your front-end framework, benefit from it by building a beautiful UI and a super fast application. After that connect it to your NodeJS server and finally communicate with MongoDB a super flexible database to fetch and save your data.\nRefresh your Memory\nThis is not an Angular course and i expect from you to have a basic knowledge of the framework but still i try to explain everything we do step by step.\nIn this course Markos Klinakis will take you from the hand and guide you to the MEAN world and build together a real web application using and explaining these fantastic four technologies.\nEvery section in this course is seperated and explained also seperately. We explain each technology in the beggining of the section and then we dive into our project for the specific part. This will help you to understand better each of these four and in the end we will see how to combine all these parts.\nLearning Topics of this course:\nBuild our own Login System from Scratch with NodeJS\nUse Express framework together with NodeJS\nBuild components that can be reused with Angular and see how reactive our page will be\nConnect third-party libraries and frameworks to our Angular app like Angular Material, Bootstrap, ngx-bootstrap, MomentJS\nCreate Endpoints with NodeJS and then send requests to them with Angular Requests\nExplain how to Upload Images and fetch them back\nMake your Application more secure by implementing Users, Authentication as well as Authorization\nImplement beautiful tables using Angular Material and add Pagination\nAnd a lot more...!\nThis course will dive deeper and we will not stay to begginer levels.\n\n\nFar from basics!\nIn most courses here on Udemy you will learn a lot but only a few dive deeper and close to real web app. You will a lot in this course and you'll see some real-time problems that you may face later on as Software Engineer and a Software Developer.\nWho should take this course?\nBasic NodeJS and Angular Experience is strongly recommended and it will help you a lot\nYou should be familiar with HTML, CSS and JavaScript basics\nMongoDB (+ Mongoose) knowledge is a plus as MongoDB will be used in this course but won’t be subject of in-depth explanations\nNO expert or advanced knowledge on any of these topics is required or assumed\nBy the end of this course, you will be able to create your own MEAN Stack Application!!!",
      "target_audience": [
        "This course is for everyone that is interested to find a new job as developer. You will learn a lot and after this course you will be in position to get a job.",
        "With this course we dive deeper in these technologies and not covering only some basics, so it's good if you search something different",
        "Everyone who is interested to build a modern full-stack application with latest technologies",
        "Students and begginers who want to do some exercise with these latest technologies",
        "Everyone that want to understand how to connect all these pieces and deploy to a real Web Server"
      ]
    },
    {
      "title": "Content Management System in PHP & MySQL",
      "url": "https://www.udemy.com/course/content-management-system-in-php-mysql/",
      "bio": "PHP Content Management System from basic to advanced covering all the features.",
      "objectives": [
        "Developing a Content Management System in PHP & MySQL with step by step Guide",
        "You can write PHP Scripts on your own easily",
        "Learn PHP & MySQL with handson project",
        "You will be able to Create Dynamic Websites using PHP",
        "You will be able to Create Web Applications in PHP & MySQL"
      ],
      "course_content": {
        "Introduction": [
          "New Project Demo",
          "How to Access the Code : New Project",
          "Source Code Download: New Project",
          "How to Access the Source Code (Windows)",
          "Old Project Demo"
        ],
        "Project Setup": [
          "1. HTML Setup Demo",
          "2. Converting to Reusable Template Files Front End",
          "3. Converting to Reusable Template Files Back End 1",
          "4. Converting to Reusable Template Files Back End 2",
          "5. Database Creating Planning",
          "6. Connecting to Database",
          "7. Working on Admin Navigation"
        ],
        "Admin Login": [
          "1. Secure Admin Login",
          "2. Logout"
        ],
        "Categories CRUD": [
          "1. Adding Categories",
          "2. Viewing Categories",
          "3. Deleting Categories",
          "4. Updating Categories"
        ],
        "5 Article CRUD": [
          "1. Adding Articles",
          "2. View Articles",
          "3. Delete Articles",
          "4. Update Articles"
        ],
        "Pages CRUD": [
          "1. Add Pages",
          "2. View Pages",
          "3. Delete Pages with single Delete Page",
          "4. Update Pages"
        ],
        "7 Users CRUD": [
          "1. Adding Users",
          "2. View Users",
          "3. Delete Users",
          "4. Update Users"
        ],
        "8 Widget CRUD": [
          "1. Adding Widgets",
          "2. View Widgets",
          "3. Delete Widgets",
          "4. Update Widgets"
        ],
        "9 Blog Frontend": [
          "1. Blog Home Page",
          "2. Blog Menu",
          "3 Displaying Article Image",
          "4. Blog Single Article Page",
          "5. Blog Widgets",
          "6. Blog Category Page",
          "7. User Posts",
          "8. Adding Few More Widgets",
          "9 Blog Page"
        ],
        "10 Remaining Features": [
          "1. Uploading Image while Adding Articles",
          "2. Showing Image on View Articles Page",
          "3. Displaying Pic on Edit Page with Delete Link",
          "4. Deleting Pic on Edit Article Page",
          "5. Re-Uploading Pic on Edit Article Page",
          "6. Image Upload on Add & Edit Page",
          "7. Display Author Name on View Page",
          "8. Display Categories name in View Articles Page",
          "9. Select the Category & Status after Failed Submission in Add Article Page",
          "10. Select the Widget Type & Order on Edit Widget Page",
          "11. Select the User Role based on existing value in Edit User Page",
          "12 Select Article Status & Updating Categories in Edit Article Page",
          "13. Selecting Existing Categories from DB Values in Edit Article Page"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, CSS, PHP & MySQL"
      ],
      "description": "This course covers all the features of Content Management system. And it is best suitable for developers who want to learn with hands-on project. This project covers from basic to advanced concepts on working PHP project.\nThis course (Content Management System) is structured based on the topics. And it is easily understood by any one who has basic knowledge of PHP & MySQL.",
      "target_audience": [
        "Who want to learn PHP with handson project.",
        "Who want to develop a web applications in PHP",
        "Who want to Create Dynamic Websites in PHP"
      ]
    },
    {
      "title": "Jenkins With DevOps For Developers: Beginners Course",
      "url": "https://www.udemy.com/course/jenkins-with-devops/",
      "bio": "The basic guide to your Jenkins CI and DevOps. Learn Jenkins Continuous Integration pipeline build",
      "objectives": [
        "Run and Install Jenkins Dashboard along with Java",
        "Understand continuous integration and deployment",
        "Create New Jobs Using Jenkins interface",
        "Explore Jenkins Plugins and their functions",
        "Work with Jenkins Security in depth",
        "Master the Certified Jenkins Engineer Test"
      ],
      "course_content": {
        "Introduction": [
          "Course Promo",
          "Introduction"
        ],
        "Downloading Important Softwares": [
          "Downloading Virtual Box",
          "Your feedback: Updates - Let us know!",
          "Download Linux Ubuntu"
        ],
        "Preparation for Jenkins Environment": [
          "Installing Virtual Box",
          "Configuring Linux In VM",
          "Linux Ubuntu Installation",
          "Installing Java",
          "Installing Jenkins",
          "IP Address Configuration"
        ],
        "Managing Jenkins": [
          "Working with IP Tables",
          "Top 5 Jenkins Plugins",
          "Installing Jenkins Plugins",
          "Creating First Admin User"
        ],
        "Working With Jenkins UI": [
          "First jenkins Job",
          "Build First Job",
          "Installing Git along Apache2 Server",
          "Creating SSH Key",
          "Git Pull Request Builder Job",
          "Build For Github Pull Request"
        ],
        "DevOps Essentials": [
          "Software Development Lifecycle (SDLC)",
          "What is DevOps?",
          "Value of DevOps",
          "Measuring DevOps - Metrics",
          "How Agile Practice Applies to DevOps",
          "Concept of Source & Version Control",
          "DevOps Automation",
          "Concept Of Git",
          "Continuous Integration and Delivery in DevOps"
        ],
        "Conclusion": [
          "Course Conclusion"
        ],
        "Jenkins Certification Resources": [
          "Jenkins Certification Study Guide",
          "Certification Centers - Worldwide"
        ]
      },
      "requirements": [
        "A Windows based computer",
        "Fast Internet Connection",
        "Basic Knowledge of Local Host & WebServer",
        "Basic Networking Knowledge"
      ],
      "description": "Course Description\nDo you want to learn Jenkins Continuous Integration (CI) pipeline including DevOps using Linux Ubuntu and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to The Jenkins With DevOps For Beginners\nDevOps is the new trend in the IT Industry. Many companies that have adopted DevOps are more reliable as their continuous project delivery adds value to the business besides limiting failure and timely costs. Jenkins is the leading CI solution that is extremely flexible. As a continuous Integration/Build solution, Jenkins helps in reducing costs by enabling teams to automate their build and release processes. As a Jenkins Developer, you will have a head start into getting into the DevOps domain and thus contribute directly to your organization's bottom line.\nIn this course we will learn about Jenkins and how it can be used to automate builds and deployments. We will talk about the tools and processes and continuous integration. You will learn about how to install and configure Java and Jenkins, manage users and security credentials and protect your system from crashes by backing it up. We will then demonstrate a number of different build types that Jenkins can handle and how to set up build dependencies.\n\nThis course provides a strong foundation for implementing continuous inspection, continuous integration, continuous delivery, and even continuous deployment at your company.\n\nWe’ve left no stone unturned.\nThis is for sure that you will find everything you need to get up to speed or from scratch learn Jenkins and DevOps including creating and configuring Jenkins UI, Dashboard using Linux\n\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all the skills to become a cloud web developer, and I would without a doubt recommend it to anyone looking for a complete cloud based managing web applications course.” Chris Portman\nHappy learning\nSyed and Co-Instructors\nTeam ClayDesk",
      "target_audience": [
        "Anyone who is interested in DevOps and Jenkins",
        "People or companies interested in using Jenkins",
        "Developers and Engineers who want to gain acceleration in their careers as a Jenkins developer"
      ]
    },
    {
      "title": "Remake Retro Games with JavaScript",
      "url": "https://www.udemy.com/course/remake-retro-games-with-javascript/",
      "bio": "Make interactive animated games from scratch. This time with space bugs, lasers and asteroids!",
      "objectives": [
        "Learn how to animate game characters",
        "Build a browser based game from start to finish",
        "Explore the basics of game design",
        "Create multiple different enemy types with different visuals and behaviours",
        "Implement 3 weapon types and boss battles",
        "Write JavaScript code from scratch with no frameworks and no libraries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What will we learn? (Project features)"
        ],
        "JavaScript Space Invaders": [
          "Project Setup",
          "Game and player objects",
          "Keyboard controls",
          "Object pool",
          "Enemy waves",
          "Collision detection",
          "Counting score and drawing game text",
          "Game restart method",
          "Beetlemorph enemy class",
          "Sprite animation explained",
          "Animation timing",
          "Player animation",
          "Extra features: Armored enemies",
          "Rhinomorph enemy class",
          "Extra features: Boss battles",
          "Boss class",
          "Boss movement",
          "Boss vs player collision",
          "Extra features: Super weapons",
          "2 laser classes",
          "Laser damage",
          "Resource management",
          "Eaglemorph enemy class",
          "Enemy projectiles",
          "Projectile interactions",
          "Squidmorph enemy class",
          "Lobstermorph enemy class"
        ],
        "JavaScript Planetary Defense": [
          "Project Setup",
          "Planet and Game Class",
          "Mouse Position",
          "Player Spaceship",
          "A little bit of Math",
          "Understand Canvas Rotation",
          "Debug Mode",
          "Object Pool",
          "Player Projectiles",
          "Enemy Pool",
          "Collision Detection",
          "Periodic Events",
          "Asteroid Enemy Class",
          "Sprite Animation",
          "Lobstermorph Enemy Class",
          "Game Text",
          "Player Lives",
          "Beetlemorph Enemy Class",
          "Rhinomorph Enemy Class"
        ],
        "JavaScript Mobile Game": [
          "Make your first mobile game",
          "Project Setup",
          "Make Everything Responsive",
          "Enemy Class",
          "Object Pool Design Pattern",
          "Periodic Triggers",
          "Mouse Controls",
          "Collision Detection",
          "Touch Events",
          "Game Text",
          "Start and Restart",
          "Fullscreen Games",
          "Simple Crew Members",
          "Simple Enemy Type",
          "Sprite Animation",
          "Animation Timing",
          "Debug Mode",
          "Enemy Variety",
          "Randomized Space Crew",
          "State Management in Games",
          "State Design Pattern",
          "Sounds"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML5, CSS3 and JavaScript is needed to get the maximum value, this course is not for complete beginners."
      ],
      "description": "Old is gold. Let's get inspired by the classic games from the 80's and add our own graphics and game features. Explore the interstellar void and use 3 different weapon types to burn through swarms of space bugs of different types, some larger than the others.\n\nWe will start with a game loosely inspired by the classic Space Invaders arcade and we will experiment with different additional features such as boss battles, super weapons and different enemy types.\n\nLet's explore object oriented programming with JavaScript and implement a useful set of basic 2D game development techniques such as object pool design pattern, sprite animation, timing and staggering techniques using timestamps and much more.\n\nDon't forget to download all the bonus gifts. Students of this course will get a pack of premium quality 2D game art, this time in a sci-fi space theme. You can also download the source code from multiple stages of the project, as we gradually add more features.\n\n\nWe will implement multiple enemy types:\nBeetlemorph - basic enemy, 1 hit is enough\nRhinomorph - armored enemy, multiple lives, multiple damage states\nMantismorph - massive boss size enemy, increasing pool of lives\nEaglemorph - when hit, it will sacrifice a body segment and it will spit it back\nSquidmorph - unknown alien bug, use everything we learned to implement your own unique enemy type\nand more ...\n\n\nHave fun!",
      "target_audience": [
        "Beginner JavaScript developers, who already know the basics and are ready to start with more complex, fun projects"
      ]
    },
    {
      "title": "HTML, CSS & Python Django Full Stack for Web Development",
      "url": "https://www.udemy.com/course/html-css-python-django-full-stack-for-web-development/",
      "bio": "Full Stack Web Development with HTML, CSS and Python Django, Become Full Stack Python Web Developer, Build your websites",
      "objectives": [
        "You will have a basic understanding of HTML, CSS, Python Django, Full Stack Web Development",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "Learn how to setting up Python, PostgreSQL, Visual Studio Code, Postgres App, PgAdmin on Mac",
        "Understand how to use Python and Django Framework",
        "Learn Python Package Managing ( PIP ) Tool and Virtual Environments",
        "Learn modeling your domain and code classes with Django",
        "Understand Django basics like Models, HTTP, Processes",
        "Learn Django Templates basics and configurations",
        "Learn how to do Django Migrations with codes",
        "Each aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end",
        "What is web development? Web development is a broad description of the tasks and technologies that go into creating a website.",
        "What are the steps to becoming a web developer? Some web developers will obtain a degree or certification in the field. However, most jobs don't require",
        "How long does it take to become a web developer? The answer to this question will depend on you.",
        "What are the most popular coding languages for web development? The must-know languages for frontend web development are HTML, CSS, and JavaScript.",
        "What are the skills I need to become a web developer? You'll need to be able to code in HTML, CSS, and JavaScript. Mastering these three languages is essential",
        "What is the difference between front-end, back-end, and full-stack web development? Frontend web developers write client-side code.",
        "What is Python? Python is a general-purpose, object-oriented, high-level programming language.",
        "Python vs. R: what is the Difference? Python and R are two of today's most popular programming tools. When deciding between Python and R, you need to think"
      ],
      "course_content": {
        "Do You Know HTML Essentials for Full stack web development?": [
          "What is Internet and HTML ?",
          "Project Files and Course Documents: Full stack web development, Python Django",
          "Basic Tags in HTML",
          "Images and Attributes in HTML",
          "Lists in HTML",
          "List Example in HTML for Full Stack web development",
          "Block Level - Inline Elements in HTML",
          "FAQ about Full Stack Web Development",
          "Quiz Full Stack Web Development",
          "Quiz Python Django, Full Stack Web Development"
        ],
        "Let's Learn More Complex Topics in HMTL": [
          "Tables in Full Stack Web Development",
          "Table Example in Full Stack Web Development",
          "Forms in HTML",
          "Forms Example in HTML",
          "Quiz HTML CSS"
        ],
        "Let Me Introduce CSS": [
          "Let's Meet CSS",
          "CSS Basics",
          "CSS Colors",
          "Background and Border in CSS",
          "Selectors in CSS",
          "Quiz html css, python django, full stack web development",
          "Quiz html css, python django, full stack web development"
        ],
        "Intermediate CSS": [
          "Text and Fonts in HTML CSS",
          "Debugging in CSS",
          "Box Model in HTML CSS",
          "CSS Position",
          "CSS Float",
          "Display Property in HTML CSS",
          "Box-Model Practice in CSS",
          "Float-Layout Practice in CSS",
          "Box-Sizing in CSS",
          "Media Queries in CSS",
          "Quiz CSS, Python, Django"
        ],
        "Flexbox and Grid for CSS": [
          "Flexbox Introduction in CSS",
          "Flexbox Properties 1 in CSS",
          "Flexbox Properties 2 in CSS",
          "Flexbox Properties 3 in CSS",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2 in CSS",
          "Grid CSS - 3 in CSS",
          "Grid CSS - 4 in CSS",
          "Grid CSS - 5 in CSS",
          "Grid and Flexbox Project in CSS",
          "Grid and Flexbox Project - 2 in CSS",
          "Grid and Flexbox Project - 3 in CSS",
          "Grid and Flexbox Project - 4 in CSS",
          "CSS Quiz"
        ],
        "Python Django: Django Core Course Overview": [
          "Intro to Django Course For Full Stack Web Development",
          "Projects GitHub Links"
        ],
        "Set Up Your Django Environment": [
          "Installing PyCharm for Windows",
          "Installing PyCharm for Mac",
          "Installing Django"
        ],
        "Start to Django": [
          "Set Django",
          "Run the Django",
          "Quiz"
        ],
        "Views and Templates": [
          "Create our first view",
          "Templates and Filter – I",
          "Templates and Filter - II",
          "quiz"
        ],
        "Working with Models": [
          "Models",
          "Queryset – I",
          "Queryset - II",
          "quiz"
        ]
      },
      "requirements": [
        "No prior HTML, CSS, Pytthon Django, Full stack web development knowledge needed",
        "This course will take you from scratch to the advanced level",
        "Desire to learn HTML, CSS and Python Django",
        "A computer with an internet connection",
        "Free software and tools used during the course",
        "Desire to learn HTML CSS and Python Django",
        "Desire to learn Full Stack Web Development, Python Django",
        "Desire to learn Web Development, Full stack web development, Python web development",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the HTML, CSS & Python Django for Full Stack Web Development course.\nfull stack web development, full stack python developer, full stack developer, django, python web development, python full stack, python Django, python full course, django full stack, full stack python, html css & python django full stack for web development, python django full stack web developer\nFull Stack Web Development with HTML, CSS and Python Django, Become Full Stack Python Web Developer, Build your websites\nWe will take you from beginner to advance level. This course will be your gateway to learn web design with HTML5, CSS3, and Python Django with a step-by-step approach.\nWe can assure you that only this course will be enough for you to learn HTML and CSS from scratch to intermediate and you will learn Django development step-by-step with hands-on demonstrations.\nTo be able to benefit from this course, all you need is a basic understanding of Python. If you don’t have experience with Python or you are totally new, we will start with the basics of Python. Before starting Django we will simply comprehend Python Package Managing ( PIP ) tools and virtual environments. Finally, we are going to start Django models, databases, URLs, views, migrations, authentication, cache, and so on\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\nDjango is an excellent framework for new web developers and efficiency-minded veterans alike. Udemy Django courses cover all aspects of Django development, whether you’re interested in using the framework by itself, or adding it to your full stack development practice.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nHTML stands for HyperText Markup Language, which is the biggest markup language used to display web pages on the Internet. In other words, web pages are composed of HTML, which is used to display text, images, or other resources through a web browser.\nHTML is the basic building block of the web and actually isn’t a technical programming language. It is responsible for the structure of the website.\nDjango is an interesting framework for developers because it provides the infrastructure required for database-driven websites that have user authentication, content administration, contact forms and more. Instead of creating all of these features from scratch, you can use the Django framework that is already built so you can focus your time on developing your web app instead.\nIn this course, we will start with HTML, which is the basis of web development and then we will continue to learn CSS.\nThis course will take you from a beginner to a more experienced level. You will learn HTML5 and CSS3 step by step with hands-on examples.\nIn this course you will learn;\nTo create static HTML sites,\nTo create a beautiful, responsive landing page for anyone,\nYou will learn to use basic tags which are used commonly,\nYou will be able to prepare lists in different formats,\nThe difference in usage between block-level and inline elements in HTML,\nThe uses of HTML table, and by learning this you will be able to create different designs of your own,\nTo able to create commonly used user login and registration pages by learning the form structure,\nAnd improve your knowledge step by step by learning the basics of CSS\nTo place pages in the easiest way by talking about all layout models in CSS.\nTo prepare web pages with Grid CSS and Flexbox features.\nLearn modeling your domain and code classes with Django\nBasic Commands for Mac\nUnderstand Django basics like Models, HTTP, Processes\nLearn how to do Django Migrations with codes\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat are the most popular coding languages for web development?\nThe must-know languages for frontend web development are HTML, CSS, and JavaScript. These languages are used by nearly every site you visit. JavaScript is a fundamental programming language for adding interactivity to your website. There are many popular JavaScript libraries that you can import and allow you to add useful functionality while dramatically decreasing the amount of code you might write, and offering features that would be difficult or time-consuming to code yourself. Once you are comfortable with JavaScript, you will want to explore the many libraries available. There are many other programming languages that you can use for web development. If you want to write backend code, you will need to learn a language that runs on the server that powers your website (as opposed to the web browser, where frontend code is executed). Consider learning Python, Ruby, Java, or PHP. It can be helpful to research which backend language is popular in the field that interests you most.\nWhat are the skills I need to become a web developer?\nYou'll need to be able to code in HTML, CSS, and JavaScript. Mastering these three languages is essential for web development. They each serve a crucial function: HTML is the content itself – the words, pictures, etc., CSS controls how all of that content looks, and JavaScript makes a website interactive. Luckily, you can learn all three languages on your own using online tools and courses. To be a good web developer, you'll also need many skills beyond programming languages. A crucial professional skill is problem-solving. Good problem-solving skills will help you to track down bugs quickly and develop algorithms to complete complex tasks. Interpersonal skills are also necessary for the job, such as communication and collaboration. Many web development projects require a team of developers. To succeed in web development, you must work well in team environments.\nWhat is the difference between front-end, back-end, and full-stack web development?\nFrontend web developers write client-side code. This is all the code that runs on the user's computer when they visit a website. Generally, this includes everything that the user can see. To write frontend code, you need to know HTML, CSS, and JavaScript. Backend web developers write server-side code. This is all the code that runs on the website's server. Backend code controls the logic of the website. For example, a frontend developer may code where a username will appear on a website and its style, but the backend developer will write the code that retrieves the username from the database. Backend developers need to know a server-side programming language in addition to HTML and JavaScript. Not all projects have a front and backend web developer. Some projects only have full-stack web developers, which do both front and backend coding. The team composition depends on the needs of the project. Full-stack web developers need to be strong front and backend coders.\nWhat is Python?\nPython is a general-purpose, object-oriented, high-level programming language. Whether you work in artificial intelligence or finance or are pursuing a career in web development or data science, Python is one of the most important skills you can learn. Python's simple syntax is especially suited for desktop, web, and business applications. Python's design philosophy emphasizes readability and usability. Python was developed on the premise that there should be only one way (and preferably, one obvious way) to do things, a philosophy that resulted in a strict level of code standardization. The core programming language is quite small and the standard library is also large. In fact, Python's large library is one of its greatest benefits, providing different tools for programmers suited for a variety of tasks.\nPython vs. R: what is the Difference?\nPython and R are two of today's most popular programming tools. When deciding between Python and R, you need to think about your specific needs. On one hand, Python is relatively easy for beginners to learn, is applicable across many disciplines, has a strict syntax that will help you become a better coder, and is fast to process large datasets. On the other hand, R has over 10,000 packages for data manipulation, is capable of easily making publication-quality graphics, boasts superior capability for statistical modeling, and is more widely used in academia, healthcare, and finance.\nWhat does it mean that Python is object-oriented?\nPython is a multi-paradigm language, which means that it supports many programming approaches. Along with procedural and functional programming styles, Python also supports the object-oriented style of programming. In object-oriented programming, a developer completes a programming project by creating Python objects in code that represent objects in the actual world. These objects can contain both the data and functionality of the real-world object. To generate an object in Python you need a class. You can think of a class as a template. You create the template once, and then use the template to create as many objects as you need. Python classes have attributes to represent data and methods that add functionality. A class representing a car may have attributes like color, speed, and seats and methods like driving, steering, and stopping. The concept of combining data with functionality in an object is called encapsulation, a core concept in the object-oriented programming paradigm.\nWhat are the limitations of Python?\nPython is a widely used, general-purpose programming language, but it has some limitations. Because Python is an interpreted, dynamically typed language, it is slow compared to a compiled, statically typed language like C. Therefore, Python is useful when speed is not that important. Python's dynamic type system also makes it use more memory than some other programming languages, so it is not suited to memory-intensive applications. The Python virtual engine that runs Python code runs single-threaded, making concurrency another limitation of the programming language. Though Python is popular for some types of game development, its higher memory and CPU usage limits its usage for high-quality 3D game development. That being said, computer hardware is getting better and better, and the speed and memory limitations of Python are getting less and less relevant making Python even more popular.\nHow is Python used?\nPython is a general programming language used widely across many industries and platforms. One common use of Python is scripting, which means automating tasks in the background. Many of the scripts that ship with Linux operating systems are Python scripts. Python is also a popular language for machine learning, data analytics, data visualization, and data science because its simple syntax makes it easy to quickly build real applications. You can use Python to create desktop applications. Many developers use it to write Linux desktop applications, and it is also an excellent choice for web and game development. Python web frameworks like Flask and Django are a popular choice for developing web applications. Recently, Python is also being used as a language for mobile development via the Kivy third-party library, although there are currently some drawbacks Python needs to overcome when it comes to mobile development.\nWhat is Django?\nDjango is a Python-based Web Application Framework that follows the Model-View-Controller architectural pattern. As one of the most popular Web Application Frameworks available today, Django has an extensive amount of documentation and extensions available. It is also built primarily for data-driven websites. A non-profit organization and an active community of developers contribute to Django’s platform, which is both open-source and free. The advantages of using Django are rapid development and less code. Django also provides an administrative interface and many bundled components. Websites such as The Washington Times, Instagram, and Nextdoor used Django for development, and employers frequently seek Django developers and Python specialists for web development.\nWho uses Django?\nPython programmers who are interested in a low code development prefer Django for its “don’t repeat yourself” model. Ideally, Django can create streamlined programs that require little coding to initialize. It has a significant body of architecture within its components and libraries, and you can administer it internally. Developers primarily use Django for web applications that need to balance large amounts of data and significant loads. Over 2,500 packages are available to extend Django’s behavior, making it a particularly robust platform. Developers interested in using Django can check to see if the functionality they desire already exists. Django is also often favored by full-stack developers who want to be able to build web applications from start to finish, as you can use it for both frontend and backend design.\nIs Django frontend or backend?\nFrontend design is related to what the user sees and interacts with. Backend is concerned primarily with the data. Django is both a frontend and backend Web Application Framework, unlike platforms like JavaScript’s Bootstrap, which you can use for frontend design. Django concerns itself primarily with the application’s interior workings, such as data manipulation, but is also useful for end-to-end frontend and backend design. A developer familiar with Django may be able to develop their web application “full-stack,” developing the entirety of the web application from front to back. However, frontend and backend work in Django can be separated if desired, meaning you can use Django for one or the other with some work. When separated in this way, Django is compatible with other frontend or backend technology.\nWhat are the key considerations when deciding on a Web Application Framework?\nThere are both open-source, free Web Application Frameworks and commercial, proprietary frameworks. The latter is more expensive, but it will generally come with more support. Web Application Frameworks usually focus on a specific language. Django works with Python. Additionally, every Web Application Framework has its own level of complexity and learning curve, documentation, and support. Most web developers will want a Web Application Framework in a language they are fluent in. A solid library of extensions and plug-ins is also ideal as it reduces the amount of work the developer will need to do. Since the Web Application Framework has a lot to do with how a system functions, the system's look-and-feel may also come into play, as may other quality of life issues such as the robustness of the administrative panel.\nWhat is the model-view-controller (MVC) architectural pattern?\nThe Model-View-Controller architectural pattern (MVC) is a type of software pattern for creating user interfaces. It standardizes how information flows through an application and makes it easier for developers to control all levels, from frontend to backend. Many Web Application Frameworks today follow the MVC model. Under the MVC architecture, the “model” refers to the data. The “view” refers to the display. Finally, the “controller” refers to the way that both models and views are updated. By retaining this consistency, multiple developers can also work together (both frontend and backend) without potentially retreading ground or overwriting essential items. The MVC model makes it easier to manage interconnected elements while ensuring that the application functions as a whole. MVC is compatible with desktop, mobile, and web application designs.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned instructors' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now HTML, CSS & Python Django for the Full Stack Web Development course.\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5 and CSS 3 the first step in web development, completely and easily, you are at the right place.",
        "For those who want a great start guide to Django, python django",
        "Python developers want to enter Web Development with Django",
        "If you want to building your own website, you should enroll",
        "People who are willing to make a career in the Web Development",
        "People who want to learn Django",
        "People who want to learn full stack web development, python django"
      ]
    },
    {
      "title": "Divi Training: Manage a Divi WordPress Website UPDATED",
      "url": "https://www.udemy.com/course/managing-a-website-built-with-divi/",
      "bio": "The easiest way to learn step-by-step how to edit and manage a WordPress website built with the Divi Theme.",
      "objectives": [
        "Learn how to manage website content built in Divi, including text, images, links, video and more.",
        "Gain a deeper understanding of how the Divi theme's structure works",
        "Understand the WordPress Dashboard and how to navigate it",
        "Learn how to manage site users and their roles",
        "Feel comfortable optimizing and resizing images for your website",
        "BONUS: learn how to add downloadable PDFs, conditionally hide content, restore previous page revisions, and more."
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge or previous experience in editing websites or WordPress sites is required.",
        "Access to your username and password to log into your WordPress website",
        "Your website must be a WordPress website built using the Divi Theme"
      ],
      "description": "Do you manage a website built using the Divi theme?\nThis course is for anyone who manages a website built in the extremely popular Divi theme for the WordPress platform, even if you've never used WordPress or Divi before.\nThis is NOT a course that teaches you how to DESIGN or BUILD a website in Divi. It's meant to be a \"101\" introduction for those who are tasked with managing content within a Divi website. This course assumes your Divi website is already completed and you're ready to learn how to efficiently edit content and manage it.\nThis is course is meant to be consumed a la carte, meaning you don't need to sit through every lecture. You can jump to the lecture that pertains to whatever your current task is (but if you want to go through every lecture, that's great too!). My purpose when creating this course was to make a \"quick resource guide\" of sorts to help my students achieve success as quickly as possible.\nIn this course we'll cover:\nA brief introduction/refresher of WordPress\nAn introduction to the Divi Theme and how it works\nA tutorial of the most common Divi modules you're likely to encounter while managing your Divi website and how to do things like editing text, swapping images, embedding video, and more\nA helpful How Do I bonus section at the end, which shows you how to perform many common tasks you may encounter while managing your Divi website.\nAgain, this is NOT a course that teaches you how to design or build a website in Divi.\nThis IS a course for people who had a website built for them using WordPress and Divi or who inherited a WordPress and Divi website and who wish to learn how to manage it day-to-day.\nThe only requirements for this course are that you have administrator access to a WordPress website that was built using the Divi theme and a desire to learn more about how WordPress and Divi work together so you can effectively and efficiently manage them.",
      "target_audience": [
        "Website managers or editors who are taking over a website built using the Divi Theme",
        "Users with no experience working with Divi",
        "Beginner Divi users who want to refresh and grow their Divi knowledge"
      ]
    },
    {
      "title": "The Modern React 18 Bootcamp - A Complete Developer Guide",
      "url": "https://www.udemy.com/course/the-modern-react-18-bootcamp-a-complete-developer-guide/",
      "bio": "Learn to built frontend React 18 applications using Redux Toolkit, TypeScript, Stripe and the Hooks",
      "objectives": [
        "Best practices for building a React 18 frontend application",
        "Utilizing the Hooks & Redux Toolkit within a React project",
        "Identifying when to use a state management solution",
        "Handling user authentication and payments"
      ],
      "course_content": {
        "Introduction": [
          "A Little Setup"
        ],
        "Why We Care About React?": [
          "What is React",
          "Building an App With Vanilla JS",
          "Discussing the Annoyances We Faced",
          "Building the Same App With ReactJS"
        ],
        "The Fundamentals of React": [
          "Creating a React App",
          "Exploring the Files and Folders",
          "State and Event Handling"
        ],
        "Diving Deeper into React": [
          "Project Intro",
          "Class vs ClassName",
          "Building the JSX Structure",
          "Listing Out Everything We Need to Work On",
          "Two Way Binding",
          "Defining an Array State",
          "Iterating Through the List to Render Elements",
          "The Key Prop",
          "Computing the Quantity",
          "Conditionally Render JSX Elements",
          "Deleting an Item",
          "Two Way Binding a List Item",
          "The useEffect Hook"
        ],
        "Built it Yourself": [
          "Project Introduction",
          "Building the JSX Structure",
          "Two Way Binding",
          "A Cleaner and DRYer Way of Two Way Binding",
          "Input Validation and Conditional Styling",
          "Storing Store List and Map Through List to Render Elements",
          "Installing Dependencies",
          "Computing a New State"
        ],
        "Components for Maintainability and Reusability": [
          "Project Introduction",
          "Building the JSX Structure for the Home Page",
          "Dividing Our JSX into Components",
          "Passing Props to Components"
        ],
        "Page Routing and Navigation": [
          "Understanding Routing",
          "How React Renders Content to the Browser (CSR vs SSR)",
          "Installing react-router-dom",
          "Defining Our Routing Rules",
          "Adding Another Page to Our App",
          "Nested Routes for Common Elements",
          "Link Based Navigation",
          "Defining Dynamic Routes",
          "The useParams Hook for Extracting the Params",
          "The useNavigate Hook for Programmatic Navigation"
        ],
        "Fetching Data From an API": [
          "Where Will the Data Come From",
          "Fetching Data From an API With Our React App",
          "Iterating Through the Fetched Data",
          "Encapsulating the Fetch Logic in a Custom Hook",
          "Handling a Loading State",
          "Handling an Error State",
          "Querying for Data by Keyword",
          "A Quick Fix",
          "Another Custom Hook",
          "Traversing and Rendering the Data",
          "The Children Prop",
          "Building the Recipe Info Component",
          "Potentials Issues With the State We Defined",
          "The useReducer Hook"
        ],
        "Advanced Navigation Topics": [
          "Adding Query Params",
          "Handling Error State with an Error Message",
          "A 404 Error Page",
          "More Nested Pages",
          "Passing Data to an Outlet With useOutletContext",
          "Wrapping Things Up",
          "Deploying the Application",
          "Viewing Our Deployment"
        ],
        "Other React Hooks": [
          "React Has Many Hooks",
          "The useRef Hook",
          "Building a Mini Project With useState",
          "Improving Performance With useRef",
          "Referencing Elements with useRef",
          "The useMemo Hook",
          "Memo and Props",
          "The useCallback Hook"
        ]
      },
      "requirements": [
        "Basic JavaScript, HTML, and CSS is needed for this course"
      ],
      "description": "In this course we will take you from a React 18 novice to a job ready engineer. This course is loaded with practical projects and examples so that you can truly understand and utilize React 18 in great depth!\n\n\nWe will be building five projects, each one getting more and more complex. We will end this course by building an Netflix clone with features like payments and user authentication. By the end of this course, you should have multiple practical example to show off your knowledge!\n\n\nHere are a list of thing you will learn in this course:\nThe difference between pure Vanilla JS and React 18\nHow to utilize the all the different React hooks\nConditional rendering and mapping through a list of elements\nFetching data from an external API and handling the success, loading and error states\nHandling user authentication\nBuilding a Postgres database to handle complex relations\nUtilizing TypeScript for bug free code\nAll the important ways to handle state (useState, useContext, useReducer, Redux Toolkit)\nHandling subscriptions payments with Stripe\nScroll based pagination with the Observer Intersection API\nOptimizing performance by preventing unnecessary re-renders\n\n\nI really hope you enjoy this course and learn a ton from it!",
      "target_audience": [
        "Beginner Web Developers that want to dive in to React 18"
      ]
    },
    {
      "title": "GraphQL with React & Node js - Real Time Private Chat App",
      "url": "https://www.udemy.com/course/practical-graphql-course/",
      "bio": "Master GraphQL by building real time web applications using React & Node js",
      "objectives": [
        "Discount is available! Use DISCOUNT500 coupon!",
        "GraphQL with Apollo Server",
        "Apollo Client v3",
        "Prima v3 to interact with database",
        "Authentication and Authorization",
        "Material UI v 5 (MUI)",
        "WebSocket and GraphQL Subscriptions"
      ],
      "course_content": {
        "Introduction": [
          "Project Overview",
          "Why GraphQL - Over fetching and Under fetching",
          "REST API vs GraphQL API",
          "GraphQL Terminology - Query, Mutation, Schema and Resolvers",
          "source code"
        ],
        "GraphQL basics": [
          "Setup Apollo server and Hello world",
          "Query, variables and Resolvers",
          "Mutation and input type",
          "parent argument for relational data",
          "Context, Aliases and Fragment"
        ],
        "Authentication and Authorization + Prisma v3": [
          "Setup Prisma and User Model",
          "Signup User mutation and Password hashing",
          "Sign In User mutation and Jwt sign",
          "Understanding jwt and Authorization",
          "Adding Authorization"
        ],
        "Send And Receive Message": [
          "Message Model Prisma",
          "Send Message Mutation",
          "Query to get messages between 2 users"
        ],
        "Creating UI using React and MUI": [
          "create react app and install dependencies",
          "Sign Up page UI",
          "Login page UI",
          "Side Bar Component",
          "Adding Routing",
          "Chat Screen UI",
          "Typo and Logout icon"
        ],
        "Apollo Client v3+": [
          "Why Apollo client, Making request using fetch",
          "Setup Apollo client with React",
          "useMutation hook and Signup User",
          "call Login mutation and logout",
          "useQuery & attach token in headers",
          "Showing messages on UI",
          "Sending text message from UI"
        ],
        "GraphQL Subscriptions": [
          "Setup graphql-ws with Apollo Server",
          "Subscription schema, resolver and PubSub asyncIterator",
          "Testing Subscription in playground",
          "Setup Subscription with apollo client",
          "useSubscription hook for real time notification",
          "Inspecting web socket request in network tab",
          "fixing bug"
        ],
        "Deploy - Going Live": [
          "Deploy Apollo Server",
          "Deploy Apollo Client (React App)"
        ]
      },
      "requirements": [
        "Basics of React and Node js"
      ],
      "description": "This course will get you up and running with GraphQL quickly, and teach you the core knowledge you need to deeply understand and build GraphQL application quickly using React and Node.js\nAuthentication? you will learn it. Apollo client? included. Subscriptions? of course.\nIn this course you'll learn how to use GraphQL both on the server side and in client applications. You will be introduced to all the main GraphQL concepts like schema definition, Queries, Mutations, and Subscriptions, as well as to solution to common requirements such as handling authentication, authorization and client-side caching.\n\n\nThis course will teach you -\nWhat and why of GraphQL\nMaterial UI v5 for neat & beautiful UI\nBuilding GraphQL with Apollo Server\nApollo Client for server side state management\nAuthentication and Authorization\nPrisma v3 to interact with relational databases like MySQL\nGraphQL Subscriptions for real time functionality\nOne to One private Chat app like MS teams\nDeploy GraphQL application\nIn the end of this course you will get solid understanding of GraphQL that you can apply in projects & you will also have you own real time one to one chat application project like MS teams that you can add in your portfolio.\n\n\nThis course assumes good knowledge of modern JavaScript, and ideally some familiarity with Node.js and React.",
      "target_audience": [
        "Who want to become GraphQL champion"
      ]
    },
    {
      "title": "The Ultimate Authentication Course with NestJS and React",
      "url": "https://www.udemy.com/course/react-nest-authentication/",
      "bio": "Authenticate with Access & Refresh Tokens, 2FA, Social Authentication with Google etc.",
      "objectives": [
        "Use NestJS with Typescript",
        "Use TypeORM with MySQL",
        "Use Access & Refresh Tokens",
        "Send Emails",
        "Login using 2 Factor Authentication (2FA) with Google Authenticator",
        "Social Authentication using your Google Account",
        "Use React Hooks",
        "Use Redux Toolkit",
        "Create QR Codes"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Big Picture"
        ],
        "NestJS": [
          "Setup",
          "Database",
          "Entities",
          "Controllers",
          "Services",
          "Login",
          "Jwt",
          "Cors",
          "Authenticated User",
          "Refreshing the Token",
          "Logout",
          "Revoking Tokens",
          "Forgot Password",
          "Sending Emails",
          "Reset Password"
        ],
        "React": [
          "Setup",
          "Components",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Redux Toolkit",
          "Using Redux",
          "Forgot Password",
          "Reset Password"
        ],
        "Two Factor Authentication": [
          "Two Factor Authentication",
          "Sending the Authenticator Code",
          "Expanding the Login Form",
          "Authenticator Form",
          "Displaying the QR Code"
        ],
        "Google Authentication": [
          "NestJS Google Authentication",
          "React Google Authentication"
        ]
      },
      "requirements": [
        "Javascript Knowledge"
      ],
      "description": "Welcome to this course where you will learn everything you need to know to secure your React and NestJS app.\nIn NestJS you will learn:\nUse NestJS with Typescript\nUse TypeORM with MySQL\nUse Access & Refresh Tokens\nUse HttpOnly Cookies\nSend Emails\nLogin using 2 Factor Authentication (2FA) with Google Authenticator\nSocial Authentication using your Google Account\nIn React you will learn:\nUse Typescript\nUse React Hooks\nUse Redux Toolikt\nCreate QRCodes\nSocial Authentication using your Google Account\nIf these are what you are looking for then this course is for you.\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "Opencart 3 Complete Ecommerce Project With Multi Vendor",
      "url": "https://www.udemy.com/course/opencart-3-ecommerce-opencart-multi-vendor-project/",
      "bio": "In This Complete Course You Will Learn How to Create Professional Opencart Multi Vendor eCommerce Store.",
      "objectives": [
        "Start Building Full and Functional Multivendor eCommerce Website With Opencart 3",
        "Install and Setup OpenCart 3.3 E-Commerce Platform",
        "Setting Up Opencart Blog, News Letter,",
        "Setting Up Marketing , Affiliates, Coupons, Gift Vouchers",
        "Install and Setup Multi Vendor In Opencart",
        "Setting Up Theme, Modules, Mega Menu, Layer Sliders",
        "System Setting User, User Group, Languages, Currencies, Zones",
        "Opencart Backup and Restore, SEO, Security",
        "Setting Up Payments, Shipping, Orders Processing",
        "Install New Module and Customize Module",
        "Adding New Product, Categories, Filters, Options",
        "Setting Up Download able Product, Information Page & More",
        "One Page Checkout System Setup"
      ],
      "course_content": {
        "Introduction": [
          "Project Introduction - What You are Going to Learn",
          "Project Excise File",
          "Lets Start Where You Can to Download Opencart"
        ],
        "Installing Opencart and Opencart Theme in Webserver": [
          "How to Create SubDomain In Cpanel",
          "How to Create Database in cPanel",
          "How to Install Opencart in cPanel",
          "What is Opencart Theme and Where You Can Find It",
          "How to Install Opencart Theme and Theme Module"
        ],
        "Customizing Catalog Admin Menu": [
          "How to Create Categories and Sub Categories in Opencart",
          "How to Upload Products",
          "How to Create Recurring Profiles",
          "How to Setup Filters",
          "How to Setup Attributes and Attributes Group",
          "How to Setup Options",
          "How to Setup Manufacturers",
          "How to Setup Download able Product",
          "How to Setup Reviews in Opencart",
          "How to Setup Information Page in Opencart"
        ],
        "Customize Opencart Theme Module": [
          "How to Install New Module in Your Store",
          "How to Setup Theme Config Option in Your Store",
          "How to Setup So Mobile Option in Your Store",
          "How to Setup up So Page Builder in Your Store",
          "How to Setup So Mega Menu in Your Store",
          "How to Setup So Virtical Menu in Your Store",
          "How to Setup So Search Pro in Your Store",
          "How to Setup So Html Content in Your Store",
          "How to setup So Home Slider in Your Store",
          "How to setup So Newsletter in Your Store",
          "How to setup So Deals Module in Your Store",
          "How to setup So Extra Slider in Your Store",
          "How to setup So Social Login in Your Store",
          "How to setup So Listing Tabs in Your Store",
          "How to setup So Categories in Your Store",
          "How to setup So Popular Tags in Your Store",
          "How to setup So Quick View in Your Store",
          "How to setup So Onepage Checkout in Your Store",
          "How to create Blog Page and Add Articles in to the Blog",
          "How to setup So Latest Blog in Your Store",
          "How to setup So Instragram Gallery in Your Store",
          "How to setup So Coundown Popup in Your Store",
          "How to setup So Super Category in Your Store",
          "How to setup So Call For Price. So Facebook Messages",
          "How to setup So Basic Products in Your Store",
          "How to setup So Category Slider in Your Store",
          "How to Setup Shipping Method on Your Store"
        ],
        "Customizing Opencart Design Section": [
          "How to Setup Layout Option",
          "How to Use the Language Editor in OpenCart 3.x",
          "How to Setup Banners in your store",
          "How to Setup SEO URL in Your Store"
        ],
        "Customizing Opencart Sales Options": [
          "How to Process Your Order in Your Store",
          "How to Manage Returns Product From you Store",
          "How to Setup Gift Vouchers in Your Store"
        ],
        "Customizing Opencart Customers Options": [
          "How to Manage Customer and Customer Groups",
          "How to Manage Affiliate Program in Your Store",
          "How to Manage Custom Filed in Your Store"
        ],
        "Customizing Marketing Options": [
          "How to Setup Marketing Option in Your Store",
          "How to Create Coupon in Your Store"
        ],
        "Customizing System Options": [
          "How to Setup Settings",
          "How to Setup User and User Group",
          "How to Setup Currencies in Your Store",
          "How to Setup Low Statuses and Order Statuses",
          "How to Setup Country and All",
          "Report option in opencart"
        ],
        "Customize Your Theme Design": [
          "How to Setup Order Details in Your Cart Page",
          "How to Change Top bar Background Color",
          "How to Change Menu Bar Background Color",
          "How to Change Vertical Menu Color and Font Size",
          "How to Change Category Menu Font Size to Bold",
          "How to Customize Your Footer Area Color",
          "How to Disable Home Page Side Widgets (Left side)",
          "How to Change Admin Logo and Footer Text"
        ]
      },
      "requirements": [
        "You should be a basic user of Computer and be able to browse Internet",
        "An open mind and willingness to learn a new skill!"
      ],
      "description": "Welcome to my course Opencart 3 Complete Ecommerce Project With Multi-Vendor\nopencart tutorial | opencart multi vendor\nBest Opencart Course on Udemy.\nOpencart is an open-source PHP based eCommerce software. It helps you set up your own online store and run your eCommerce business cost-effectively and one of the fasted growing E-Commerce software that is very fast, lightweight on the server, easily customizable, and open source.\nThis comprehensive course is designed for opencart beginners and step by step take you the basics to the master level of opencart that you all you need to know. You will be able to build a fully – functional  A -Z Multi-Vendor online store with opencart 3.\nI create this course from my professional experience so at the end of the course I think you will get all that answer that you want to know. My goal is to become you expert, that you can earn money from your new skill.\n\n\n\n\nWhen i update something new, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\n---------------------------------------------------------------------------------------------------------------------\nThis course will not remain this price forever! It's time to take action!\nwithout action nothing will change in you life, and I am also not responsible for your actions.\nI am excited to see you in the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Beginners who wants to Setup Multi Vendor E-Commerce Website in OpenCart 3.3.x",
        "Anyone Wants to Make his Own Online Business",
        "Anyone Wants to Know How to Sell Products Online",
        "Freelancers to get started with OpenCart 3.3.X",
        "Everybody Wants to Get New Job at This Field",
        "Everybody Wants to Earn More Money by Easiest Way From the Internet"
      ]
    },
    {
      "title": "PHP Webforms from Scratch Zero to Expert : Bootcamp",
      "url": "https://www.udemy.com/course/php-webforms-from-scratch-zero-to-expert-bootcamp/",
      "bio": "The PHP course for everyone! Master PHP with core and advanced OOPs, Inheritance, CRUD, Secure forms with MySQL data!",
      "objectives": [
        "Become an advanced, confident PHP developer from scratch",
        "Become job-ready by understanding how PHP really works behind the webpage",
        "PHP fundamentals: variables, if/else, operators, Boolean logic, functions, arrays, objects, strings, control flow loops, etc.",
        "How to think and work like a developer: problem-solving, researching, workflows coding coding",
        "PHP OOPs - Object Oriented Programming Concept to build enterprise applications",
        "Learn to Code PHP - MySQL forms Create, Read, Update and Delete functionality with real-world examples",
        "Standard Functional application required forms with MD5 like algorithms",
        "Client-side Validations: On Submit, input, login form, password strength check, etc.",
        "Server-side Validations: On Submit all input data validation, RegEx and Input Type validations",
        "Error Handling: How to apply try catch finally block coding to handle real-time errors.",
        "learn What is Generative AI for prompt engineering",
        "participate on Coding Exercise to test your skills"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Course Curriculum",
          "How to Get Pre-Requisites",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up Local Development Environment": [
          "What is PHP",
          "Installing XAMPP for PHP, MySQL and Apache",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "Installing Code Editor (Visual Studio Code)",
          "Creating PHP Project on XAMPP",
          "Hello World Program",
          "Summary",
          "Creating variables exercise"
        ],
        "PHP Fundamentals": [
          "Section Introduction",
          "Variables",
          "Echo and Print",
          "Data Types",
          "Numbers",
          "Boolean",
          "Arrays",
          "Multi-Dimensional Array",
          "Sorting Arrays",
          "Constants",
          "Comments",
          "Summary"
        ],
        "PHP Strings": [
          "Section Introduction",
          "Strings",
          "String Formatting",
          "String Methods",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "PHP Operators": [
          "Section Introduction",
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Increment – decrement operators",
          "Logical operators",
          "Ternary operator",
          "Summary"
        ],
        "PHP Conditional Statements": [
          "Section Introduction",
          "If statement",
          "If-else statement",
          "If-elseif-else statement",
          "Switch-case statement",
          "Summary"
        ],
        "PHP Control Flow Statements": [
          "Section Introduction",
          "Flow Chart",
          "While loop",
          "Do-while loop",
          "For loop",
          "Foreach loop",
          "Break",
          "Continue",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "PHP Functions": [
          "Section Introduction",
          "Creating a Function",
          "Function with Arguments",
          "Default Argument",
          "Function return values",
          "Call-by-value",
          "Call-by-reference",
          "Summary"
        ],
        "PHP Superglobals": [
          "Section Introduction",
          "$_SERVER",
          "$_REQUEST",
          "$_POST Method",
          "$_GET Method",
          "Summary"
        ],
        "PHP Advanced": [
          "Section Introduction",
          "Form Handling",
          "Date and Time",
          "Include",
          "Require",
          "Cookies",
          "Sessions",
          "File Reading",
          "File Writing",
          "File Upload",
          "Summary"
        ]
      },
      "requirements": [
        "No coding experience is necessary to take this course! I take you from beginner to expert in PHP",
        "Any computer and OS will work - Windows, macOS or Linux. you will set up your text editor",
        "A basic understanding of HTML and CSS is knowing benefit, but not a must!"
      ],
      "description": "Take your web development skills to the next level with \"PHP Webforms from Scratch Zero to Expert: Bootcamp.\" This course is perfect for beginners who want to learn how to create dynamic, interactive web forms using PHP. From the basics to advanced techniques, this bootcamp will guide you step-by-step in building secure and efficient web forms that are essential for modern websites and web applications.\n\n\nYou’ll start by understanding the fundamentals of PHP and how it interacts with HTML to create server-side functionality. You'll learn to create forms, handle user input, validate data, and process form submissions. As you progress, you’ll dive deeper into advanced topics such as handling file uploads, preventing security vulnerabilities like SQL injection and XSS, and storing form data in databases using MySQL.\n\n\nThroughout the course, you’ll work on real-world projects, gaining hands-on experience in building complex web forms with features like multi-step forms, form validation, and email notifications. You’ll also learn to integrate PHP with JavaScript for client-side interactivity and improve the user experience.\n\n\nBy the end of the bootcamp, you'll have a solid understanding of PHP and be able to build and manage web forms from scratch—skills that are highly sought after in web development. Whether you want to create contact forms, user registration systems, or feedback forms, this course will give you the tools to succeed.\n\n\nEnroll now and become a PHP web forms expert!",
      "target_audience": [
        "Beginner PHP developers curious about web development",
        "Take this course if you want to gain a true and deep understanding of PHP coding",
        "Take this course if you want to get started with programming: PHP is a great first language!",
        "Who wants to master in PHP core and advanced application development life cycle",
        "Anyone who wants to become a freelancer on web development"
      ]
    },
    {
      "title": "Learn Drupal 8 - With a Live Project",
      "url": "https://www.udemy.com/course/learn-drupal-8-with-a-live-project/",
      "bio": "Learn Latest Version of DRUPAL, the Most Powerfull CMS on the planet.",
      "objectives": [
        "Build a fully functional, advanced and feature rich sites."
      ],
      "course_content": {
        "Start Here": [
          "Introduction to the Course"
        ],
        "Introduction": [
          "Introduction to CMS & Drupal",
          "Why you should choose drupal?"
        ],
        "Requirements": [
          "What you need to get started?"
        ],
        "Drupal 8 Installation": [
          "Install Drupal 8 on Localhost using XAMPP",
          "Install Drupal 8 using Acquia Dev Desktop",
          "Setup MAMP on MAC OSx"
        ],
        "Explore Fresh Installation of Drupal 8": [
          "Explore Fresh Installation of Drupal 8",
          "Explore Content in Admin Toolbar",
          "Explore Structure in Admin Toolbar",
          "Explore Appearance in Amdin Toolbar",
          "Explore Extend in Admin Toolbar",
          "Explore Configuration in Amdin Toolbar",
          "Explore People in Amdin Toolbar",
          "Explore Reports in Amdin Toolbar"
        ],
        "Work with Content Types": [
          "What is a Content Type?",
          "Explore Built-in Content Types",
          "Create a New Content Type",
          "Quiz about Content"
        ],
        "Content Editing in Drupal 8": [
          "Inline Editing Concept",
          "Explore CKeditor (WYSIWYG) in Drupal 8",
          "Explore CKeditor Configurations",
          "Quiz about Content Editing"
        ],
        "Explore Taxonomies and Entity Reference": [
          "Explore Entity Reference in Drupal 8",
          "Explore Taxonomies in Drupal 8"
        ],
        "Modules & Themes Drupal 8": [
          "What is a Module?",
          "How to download and install Modules?",
          "How to download and install a Theme?",
          "Quiz about Modules"
        ],
        "Displays in Drupal 8": [
          "Create Content using Devel Module",
          "Introduction to Displays in Drupal 8",
          "Custom Display Mode",
          "How to create a Custom View Mode?",
          "How to utilize Custom View Mode?"
        ]
      },
      "requirements": [
        "Should have basic understanding of web."
      ],
      "description": "One of the most widely-used and mature Content Management Systems on the planet, Drupal runs more than one in fifty websites in the world.  However, it has always been something of an odd duck, with an architecture and design very different than anything else in PHP.\nEnter Drupal 8: Almost a complete rewrite under the hood, Drupal 8 is a modern, PHP 5.4-boasting, REST-capable, object-oriented powerhouse.  Now leveraging 3rd party components from no less than 9 different projects, Drupal 8 aims to be the premiere Content Management Platform for PHP.\nBut how do you use all this new-fangled stuff?  This course will provide a walkthrough of Drupal's key systems and site building stuff using drupal 8.\nIn this course, you will learn everything you need to know to build and maintain your own Drupal website, from simple blogs to more complex database applications.Once you have completed this  course, you will be fully capable of installing, building, deploying, and maintaining your own customized Drupal websites. Working files are included, allowing you to follow along with the author throughout the lessons.\n\nAre you ready to embark on an exciting journey into the world of Drupal 8? Let's get started and transform your web development skills today!",
      "target_audience": [
        "Site Builders, anyone who want to build a site without coding."
      ]
    },
    {
      "title": "30 HTML CSS & JavaScript projects in 30 Days for Beginners",
      "url": "https://www.udemy.com/course/30-html-css-javascript-projects-in-30-days-for-beginners/",
      "bio": "Build HTML, CSS & JavaScript Project each day for 30 Days & create your portfolio as a Beginner Front End Web Developer",
      "objectives": [
        "Modern Grid & flexbox, CSS animations, custom properties, etc",
        "DOM manipulation, events, array methods, Date manipulation & more",
        "30 projects with pure JavaScript, HTML5, CSS3",
        "Materialize CSS and Bootstrap is also included for some basic applications",
        "Write maintainable, clean and performant JavaScript code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Environment Setup",
          "Optional 4 Hours JavaScript Crash Course"
        ],
        "I am NOT a Robot (Beginner project)": [
          "Project Intro",
          "Creating the User Interface",
          "Main code",
          "Resources"
        ],
        "Stopwatch-Lap timer": [
          "Project Intro",
          "Stopwatch UI",
          "Stopwatch using JavaScript"
        ],
        "Expandable Search": [
          "Project Intro",
          "Project UI",
          "Expandable Search using JavaScript"
        ],
        "Digital Clock with interchangeable background img and focus section": [
          "Project introduction",
          "Creating the User Interface UI",
          "Clock.js"
        ],
        "Animated Navigation": [
          "Project Intro",
          "Navigation UI",
          "Animated navigation using JavaScript",
          "Resources"
        ],
        "Simple Typewriter Text Effect": [
          "Project introduction",
          "Creating the User Interface UI",
          "Typewriter Effect using JavaScript"
        ],
        "Tabs Menu using data Attributes": [
          "Project Intro",
          "Tabs UI",
          "Tabs JS"
        ],
        "Login Form Validation": [
          "Project Intro",
          "Creating the User Interface UI",
          "Show/Hide Password",
          "Validating User Name and Password",
          "Show Error or Success",
          "Show/Hide forgot Username and Password and Validate it"
        ],
        "Tip Calculator": [
          "Project Intro",
          "Creating the User Interface UI",
          "Calculate the tip and the tip pro person and total amount to be paid"
        ]
      },
      "requirements": [
        "A basic knowledge of HTML, CSS & JavaScript",
        "PC or Mac"
      ],
      "description": "What is going on everybody!\nWelcome to the 30 projects in 30 Days Course!\nThis is a Beginner friendly Project based Course with all modern features of HTML5, CSS3 and JavaScript!\nIf you are a intermediate web developer who wants to refresh his memory on some basic and also wants to cement his knowledge in the modern ways of HTML5 CSS3 and JS then this is the course for your. Also just having a different project per day for 30 days is a pretty nice challenge that I would strongly recommend.\n\n\nAll of the projects are created from Scratch, this means that we will write out all of the HTML CSS and JS complete from start to finish and I will explain each step I take as we move forward.\n\n\nAlthough I did include a Couple of Front end CSS frameworks like Bootstrap and Materialize CSS, this are not overused and a purely meant to ease some parts of the project for you and simultaneously make you comfortable with their existence. I know as fact, that sooner or later you will encounter them, and they are actually pretty helpful and easy to use in some cases, so why not learn about them now.\n\n\nAs far as what kind of knowledge should you bring to this course before getting started, I would suggest some basic HTML CSS and some fundamental JavaScript knowledge.\n\n\nRegarding the projects themselves, I do wish to menschen that some of them are short and simple and some of them are longer and more complex but still remaining within that Beginner to Intermediate Level. Also, most importantly all of them are useful in real life situations.\n\n\nWith this being said if this sounds interesting for you then I`ll be seeing you in the course!\n\n\n------ For all Web Developers ------\nThis projects are a must for all Beginner Front End Web Developers and also perfect for a Portfolio !\n\n\n------ Course Structure ------\nSo what are we building? 30 Projects as following :\nI am NOT a Robot (Beginner project)\nStopwatch-Lap timer\nExpandable Search\nDigital Clock with interchangeable background img and focus section\nAnimated Navigation\nSimple Typewriter Text Effect\nTabs Menu using data Attributes\nLogin Form Validation\nTip Calculator\nDrag and Drop Cup Game - Find the Pea\nUpload Progress bar\nText formatter\nSimple Task List with Animations\nCollapsible Accordion Tabs\nVertical Timeline\nTest your Might- JavaScript Quiz Application\nBackground image gallery carousel\nSimple Image carousel\nQuote of the day-Random generator\nUnits Convertor\neCommerce sales Promotion countdown timer\nJob Scout Website with Animated show hide buttons and text\nSimple Project Manager\nCreate a Form using only the DOM\nRandom API Generator\nWebsite with Dark Mode switch\nRegistry Form Validation using Regular Expression\nGaming Website with Expandable Cards\nStoryteller with Autocomplete Text\nInterchangeable Website Background Color\n\n\nJavaScript is one of the top in demand programming languages and it is climbing to the very top!\nWhy Learn JavaScript ?\nThis is a simple to answer, go to google and type in the search bar \"Top 10 programming languages\" if JavaScript is in the top 5 then take the Course. Not convinced, then go to google and type in the search bar \"The 10 most in-demand programming languages for developers at top companies\" if JavaScript is in the top 5 then take the Course.\n\n\nWho this course is for:\nLearning JavaScript for the first time? Already using JavaScript and want to master the language? This course is for you!\nThis course if for anyone who wants to use JavaScript to launch an application, switch careers, or freelance as a JavaScript developer.\n\n\nWhat is JavaScript ?\nJavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else. .",
      "target_audience": [
        "Beginner developers who want to create a solid portfolio",
        "Beginner front end developers who want to create a solid portfolio",
        "Beginner HTML CSS and JavaScript developers",
        "Beginner web developers",
        "Beginner JavaScript developers",
        "JavaScript developers looking for portfolio projects"
      ]
    },
    {
      "title": "AJAX JavaScript XHR and Fetch",
      "url": "https://www.udemy.com/course/ajax-fetch-xhr/",
      "bio": "Learn how to use AJAX within your web applications, Course covers vanilla JavaScript using XMLHttpRequests and Fetch",
      "objectives": [
        "Use AJAX to get JSON data into their web pages",
        "Use XHR requests to connect to servers and APIs",
        "Use Fetch within web development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to using AJAX XHR and Fetch in JavaScript",
          "Developer setup environment",
          "Localhost Setup",
          "AJAX introduction for Fetch and XHR",
          "XHR requests across the web",
          "Exercise Random User XHR option",
          "Exercise Random User AJAX Load Data",
          "Source Code Ajax Exercise",
          "More XHR practice",
          "XHR Request Data",
          "Joke Exercise AJAX Source Code",
          "JavaScript Fetch",
          "Source Code Fetch Intro",
          "Fetch Promise Response",
          "Fetch Options",
          "Source Code Fetch Jokes",
          "Post with Fetch",
          "Fetch Form Submit Data",
          "Source Code Form Submit",
          "Course Overview and summary",
          "Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Supplementary Course Materials"
        ]
      },
      "requirements": [
        "JavaScript Experience and HTML and CSS",
        "You should have web development Experience"
      ],
      "description": "Welcome to our introductory course for using AJAX - Asynchronous JavaScript And XML\nAJAX allows web pages to request small chunks of data (such as HTML, XML, JSON, or plain text) and display them only when needed.  This is achieved by using APIs like XMLHttpRequest or Fetch API. These technologies allow web pages to directly handle making HTTP requests for specific resources\nTypically when a user goes to a website the user has to wait for the server to respond with the data.  This is not the case as with AJAX we have the option to load the data when the user is already on the page making the user really happy.\n\nThis course covers making AJAX requests using the XMLHttpRequest as well as the newer fetch.\nUse JavaScript to send requests, receive response content and use the response data to output into the html.  JavaScript is at the center of it all connecting the web page content to the server data and doing all the work in between.\nCourse Covers\nHow to setup a localhost\nWhat Fetch and XHR are and how they work\nHow to load an external files into the JavaScript\nHow to connect to web apis and load data\nUsing JavaScript to read response content and make use of it\nExercise to build a random user loader\nUsing AJAX to get a txt file content\nExercise Getting Random Jokes to output on a website\nUsing Fetch\nExercise Posting form data to a server using Fetch\nPractice AJAX\nSource Code is included\nFriendly support in the Q&A section\nTaught by an instructor with many years real world web development experience ready to answer your questions and help you learn AJAX.\nWhat are you waiting for take the first step start learning AJAX and experience the amazing things YOU can build with AJAX?",
      "target_audience": [
        "Web developers who want to practice AJAX",
        "Anyone who wants to learn more about XHR and Fetch requests",
        "JavaScript developers"
      ]
    },
    {
      "title": "Complete Web Development: HTML5 and CSS3",
      "url": "https://www.udemy.com/course/complete-web-development-html5-and-css3/",
      "bio": "Companion to HTML5 CSS3 All in One for Dummies.",
      "objectives": [
        "How to build an HTML5 page from scratch: You will not need to purchase an expensive IDE, and you'll truly understand how your page is created and what the code does.",
        "Learn to build valid code from the beginning. Learn how to test your code to find errors before your users do.",
        "Separate meaning from layout. Build solid HTML structures, then learn how to add visual improvements",
        "Use the new media elements in HTML5 to add audio and video to your pages",
        "Managing data with tables and lists",
        "Connecting pages with links",
        "Creating forms - including new HTML5 and mobile form elements",
        "How CSS works with HTML to add formatting",
        "Working with colors - the standard RGB color model as well as new techniques like alpha and HSL color",
        "Styling text - custom fonts, bold, italics, text size",
        "Selecting elements to style with CSS using class and id selection",
        "Using internal, inline, and external CSS styles",
        "Adding borders and backgrounds to any element",
        "New features of CSS3 including transparency, reflections, shadows, transformations, and animation."
      ],
      "course_content": {
        "Building the Structure with HTML": [
          "My First Web Page",
          "It's all about validation",
          "Choosing your tools",
          "Using Lists",
          "Working with tables",
          "Connecting your pages with links",
          "Adding Images",
          "Embedding Audio and Video",
          "Creating forms with basic input",
          "Adding selection elements and buttons to forms",
          "New form elements in HTML5"
        ],
        "Styling with CSS": [
          "Basic CSS",
          "Working with Colors",
          "Using Fonts and Typefaces",
          "Manipulating Text",
          "Selecting with Class and Style",
          "Working with Borders",
          "Using Background images",
          "Working with Gradients and list images",
          "Using Levels of CSS",
          "Special Effects with CSS3",
          "Transformation and Animation"
        ],
        "Using CSS for Page Layout": [
          "Fun with Float",
          "Creating Multi-column Layouts",
          "Styling Lists and Menus",
          "Alternative Layout Techniques",
          "Preview of JavaScript and jQuery"
        ]
      },
      "requirements": [
        "A reasonably modern computer, any operating system."
      ],
      "description": "Web development is complex, but it can be easy if you take it step by step. This course is the first in a series of courses by bestselling author Andy Harris. Throughout the series, he takes students through every single example of his massive book (the book is over 1000 pages of fun yet authoritative instruction.)\nEach mini-book will be its own smaller course, so you can pick and choose the content you need without having to pay for content you already know.\nThis first course provides a solid understanding of HTML5 and CSS3, the underlying foundations of the Internet. You'll learn:",
      "target_audience": [
        "Beginners to web development",
        "Folks with experience in older forms of HTML who want HTML5 exposure",
        "People familiar with HTML who want to add modern CSS styling",
        "Developers curious about the new features of CSS3"
      ]
    },
    {
      "title": "Create a Chatbot for Facebook Messenger with Laravel and PHP",
      "url": "https://www.udemy.com/course/chatbot-facebook-messenger-laravel/",
      "bio": "Step by step to your first custom chatbot with PHP",
      "objectives": [
        "Develop your own keyword-based chatbots for Facebook Messenger",
        "Use Laravel to your advantage to create chatbots quickly",
        "Use PHP to communicate with the Twitter REST API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Landscape",
          "Introduction to Laravel",
          "Introduction to Chatbots",
          "Summary"
        ],
        "Your first bot: \"Hello World\"": [
          "Introduction",
          "Create a new Laravel project",
          "Make your local server accessible with ngrok",
          "Use the Messenger API Package for PHP",
          "Create a Facebook app",
          "Verify a webhook with the Facebook API",
          "Receive messages from Facebook users",
          "Send your first message: Hello World!",
          "Summary",
          "Bonus: Create a parrot bot"
        ],
        "Build your bot with real-time data": [
          "Introduction",
          "Respond to simple keywords",
          "Get real-time data from Twitter",
          "Return Twitter trends for Berlin",
          "Return Twitter trends for any location",
          "A simple fix for better readability",
          "Summary"
        ],
        "Publish your bot": [
          "Introduction",
          "Upload your project to Heroku",
          "Prepare for the Facebook Messenger review",
          "Summary"
        ]
      },
      "requirements": [
        "You should be able to understand and write simple PHP code",
        "You should have a text editor like Sublime Text 2 and a working version of PHP on your computer",
        "You should understand the principles of Model View Controller frameworks like Laravel"
      ],
      "description": "At the end of this course, you will be able to create your own keyword based chatbots for Facebook Messenger!\nSince Facebook Messenger opened their platform for chatbots, many people believe these conversational bots are among the next big things to change how people interact with technology. But how do you build a chatbot? Welcome to Chatbot Academy.\nTogether, we will build a chatbot called \"Twitter Trending Chatbot\" that returns currently trending topics for a location the user wants. We will do this step by step with a PHP framework called Laravel, which makes it very easy to prototype and develop your first bot.\nIn this hands-on course, you will learn:\nHow to use Laravel for PHP to create a new chatbot project\nHow to create a Facebook app and receive messages\nHow to send messages based on a user's input\nHow to respond to keywords with real-time data\nHow to upload and publish your bot\nThis course is designed for:\nDevelopers and marketers with some experience with PHP\nPeople who have heard of MVC frameworks like Laravel before\nPeople who are excited about learning something new :)\nTopics that are not part of this course (yet):\nNatural Language Processing (for beginners, keyword based solutions are enough to play with)\nArtificial Intelligence (we are going to create a rules based chatbot)\nOther platforms like Kik, Telegram, or Slack\nAre you ready to build your first bot?\nThen sign up now and join Chatbot Academy. It's a lot of fun, we promise :).\n\n\n\nEmoji provided free by EmojiOne.",
      "target_audience": [
        "This course is for developers and marketers who want to learn how to create simple chatbots"
      ]
    },
    {
      "title": "Blazor Course | .NET 8 and .NET 9 Ready",
      "url": "https://www.udemy.com/course/blazor-in-2020/",
      "bio": "Explore Blazor | Binds, Components, Forms, DI, Security and a lot more",
      "objectives": [
        "Blazor",
        "Blazor navigation",
        "Blazor components",
        "Accessing APIs and WebSockets in Blazor",
        "CSS isolation",
        "Background tasks in Blazor",
        "Blazor code libraries",
        "Forms and validation in Blazor",
        "Authentication and authorization"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basics": [
          "First project",
          "Basic syntax",
          "Binds",
          "Methods",
          "Events and event arguments",
          "Quick example: Multiple selection",
          "Quick exercise: basic text box",
          "Section quiz"
        ],
        "Navigation": [
          "Basics of navigation",
          "Layouts",
          "Parameters",
          "Life cycle events",
          "Navigate from C#",
          "Quick example",
          "Quick exercise",
          "Section quiz"
        ],
        "Components": [
          "Basics",
          "Custom events",
          "Custom binds",
          "Component reference",
          "Quick example: Component list",
          "Quick exercise: List with removable items",
          "Section quiz"
        ],
        "Forms": [
          "Building forms",
          "Form validation",
          "Custom validation"
        ],
        "Retrieve data": [
          "API calls",
          "Web sockets",
          "Example: Submit order form",
          "Example: Submit order form (server-side)"
        ],
        "Security": [
          "State containers (Blazor server)",
          "Custom auth (Blazor server)"
        ],
        "Misc.": [
          "JavaScript from C#",
          "Background tasks",
          "Blazor class libraries - basics",
          "Blazor class libraries - style and JS",
          "Quick example: Timer",
          "CSS isolation",
          "File picker"
        ],
        "MudBlazor": [
          "Get started and Button"
        ],
        "Example: Classroom quiz (Blazor server)": [
          "Part 1: Database set up",
          "Part 2: Entity Framework",
          "Part 3: Mudblazor and first form submit",
          "Part 4: Navigation",
          "Part 5: Adding dynamic forms",
          "Part 6: Quizzes table",
          "Part 7: Questions and answers",
          "Part 8: Timers and callbacks"
        ]
      },
      "requirements": [
        "C# knowledge",
        "Understanding of web development"
      ],
      "description": "The brand new Blazor course will get you started very efficiently and with lots of opportunities for you to practice and check your skills. You will start with basic setup, basic syntax, navigation and a few more basic things. But in the end, more advanced features and use cases will not be forgotten.\n\n\nIn the first section we will cover the basics of blazor - such as the syntax itself and bindings between input/output elements and the variables in the C# code.\n\n\nThe second section will cover the navigation in Blazor, from basic route setup, to parameters and even more. The third section will show you one of the more specific Blazor features - components.\n\n\nYou will see how they are setup, how the parameters are passed through and many more things about them.\n\n\nThe fourth section will show you can access APIs in Blazor and with that - how to establish WebSockets in Blazor. Also, you will see an example of API implementation in Blazor.\n\n\nFinally, in the last section you will find a few more things about the Blazor technology. You will learn how to interact with JavaScript from C# code, how to create Blazor code libraries and a few more things.\n\n\n\n\nAlongside the general lectures, you will also find examples that will incorporate what you have learned in a specific section and in the previous section. The first one will show how to create a multiple selection arrangement, it uses bindings and all the other basic Blazor features and it can be used in quizzes and other real-world arrangements. Then in the components section, you will see how components can be used to create a list, The last example will incorporate most of the things of the previous sections and will add access to API. There is much to learn and much to experience with the course and the examples in it.",
      "target_audience": [
        "C# developers"
      ]
    },
    {
      "title": "TDD Laravel - Lets Build Personal Budget Website",
      "url": "https://www.udemy.com/course/tdd-laravel-lets-build-personal-budget-website/",
      "bio": "Learn how to apply Test Driven Development techniques & best practices into your Laravel projects",
      "objectives": [
        "Create Feature & Unit tests for your projects",
        "Apply Test Driven Development best practices",
        "Use and expand your new personal budget application",
        "Enjoy life as a PHP developer who can delivery fully tested projects built in Laravel"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with Laravel 5.4 at a beginner level.",
        "You should have Laravel Homestead already installed"
      ],
      "description": "The toughest part of learning Test Driven Development is where to start. Here, you get a quick jumpstart by creating an entire project using TDD & Laravel\nCreate a personal budget web application using TDD and the latest Laravel Framework.\nBy the end of this course, you will acquire sufficient knowledge on:\nFeature & Unit Testing\nTest Driven Development\nDevelop faster and deliver better products\nBy using Test Driven Development, you will not only discover how much it improves your development speed, but also how much more confident you are about your final product, knowing that it has been thoroughly tested and it works as intended.",
      "target_audience": [
        "PHP developers who want to apply Test Driven Development techniques in Laravel"
      ]
    },
    {
      "title": "Practical OAuth, OpenID and JWT in C# .NET Core",
      "url": "https://www.udemy.com/course/practical-oauth-openid-and-jwt-in-c-net-core/",
      "bio": "Get hands on with these standards and technologies in .NET Core",
      "objectives": [
        "Understand OAuth, OpenID and JWT",
        "Implement Microsoft Identity (OpenID) server side and client side",
        "Consume any OAuth provider using .NET Core C# 5.0",
        "Consume any OpenID provider using .NET Core C# 5.0",
        "Create and configure your own Identity Provider",
        "Use a 'Front door key' pattern to secure your applications"
      ],
      "course_content": {
        "The Foundation": [
          "Course Overview",
          "What are OAuth, OpenID and JWT? Part 1: OAuth",
          "OAuth Knowledge Check",
          "What are OAuth, OpenID and JWT? Part 2: OpenID",
          "OpenID Knowledge Check",
          "What are OAuth, OpenID and JWT? Part 3: JSON Web Tokens",
          "JWT Knowledge Check",
          "Implementing Microsoft Identity for a Web App",
          "Implementing Microsoft Identity for a SPA",
          "Let's talk PKCE for a minute",
          "PKCE Knowledge Check"
        ],
        "Generic OAuth Implementation in .NET Core": [
          "Consume AzureAD as a Generic OAuth provider server-side",
          "Extend our Generic OAuth provider to capture identity",
          "Generic OAuth Implementation Knowledge Check"
        ],
        "Generic OpenID Implementation in .NET Core": [
          "Consume AzureAD as a Generic OpenID connect provider",
          "Generic OpenID connect Knowledge Check"
        ],
        "Custom Claims Management": [
          "Custom Claims Management Approaches",
          "Check your existing identity provider first",
          "Implementing a Custom Identity provider (Basic concept example only)",
          "Implementing Custom JSON Web Tokens",
          "Using a 'Front door key' Claims model",
          "Custom Claims Management Knowledge Check"
        ],
        "Preparing for OAuth 2.1": [
          "OAuth 2.1 Summary of Changes",
          "Thank you!"
        ]
      },
      "requirements": [
        "A basic understanding of what OAuth is used for",
        "Basic development of Web APIs in C# .NET Core 5.0",
        "Basic development of React Single Page Applications (Optional)"
      ],
      "description": "OAuth (2.0), OpenID, and JWT pretty much go hand-in-hand with new web application development today. Especially for an enterprise setting where security controls are the top priority!\nIn this course, we will focus on the key understandings needed to put these technologies and standards into action.\nWe will build practical examples using .NET Core C# 5.0.\nBy the end of the course, we will have spanned both basic and complex integrations of Identity services.\nSupporting a custom Identity provider in your application is a real bonus (if not a requirement) for Enterprise customers.\nMany of the 3rd party services and tools used to implement authentication and authorization are easy to switch on with a few lines of code.\nHowever, without this practical hands-on experience integration OAuth, OpenID, and JWT, Enterprise grown Identity Providers are often out of reach.\nThis course is for you if:\nYou've never worked with OAuth, OpenID, or JWT in your applications before, or,\nYou've used example code from Microsoft documentation with varied success or confidence in the solution, or,\nYou want to understand how these standards are leveraged in native .NET Core code, or,\nYou want to understand how to implement identity-based Microservice APIs, or,\nYou want to integrate with a custom Enterprise Identity Provider built on OAuth or OpenID",
      "target_audience": [
        "Beginner and intermediate developers who want to learn and overcome OAuth integration challenges",
        "Cloud architects who want to understand common OAuth integration challenges",
        "Developers who need to implement OAuth or OpenID in their application and must integrate a custom enterprise identity provider"
      ]
    },
    {
      "title": "Learn Gulp, The Streaming Build System",
      "url": "https://www.udemy.com/course/gulp-101/",
      "bio": "Automate all your front-end tasks with ease and become a Gulp Guru in this workshop-filled course!",
      "objectives": [
        "Explain what Gulp is and what it should be used for",
        "Install Gulp and Install Gulp Plugins on their workstation",
        "Seek out and install new Gulp plugins as required",
        "Use Gulp from the Command Line",
        "Write a custom Gulpfile for whatever task is required",
        "Automate a whole project using a personally created Gulpfile"
      ],
      "course_content": {
        "Introduction to Gulp": [
          "Why Gulp?",
          "Course Overview",
          "What is Gulp?",
          "Gulp Basics"
        ],
        "Gulp Plugins": [
          "What are Plugins?",
          "Important Gulp Plugins",
          "Workshop: Locating Gulp Plugins",
          "Plugin Recap"
        ],
        "Using Gulp": [
          "Workshop: Installing Gulp and Gulp Plugins",
          "What is a Gulpfile?",
          "The Gulp API",
          "The Gulp Command Line",
          "Gulp Usage"
        ],
        "All About Gulp": [
          "Running Tasks in Series",
          "Automatically Running Tasks",
          "Live Reloading",
          "Workshop: Putting it All Together - Automating a Project with Gulp",
          "Are you a Gulp Guru?"
        ],
        "Conclusion": [
          "Course Summary",
          "Course Slides"
        ]
      },
      "requirements": [
        "Students will need a PC or Mac with Node.js installed to code along in the hands-on demos, but nothing is required to watch"
      ],
      "description": "This comprehensive course covers everything a developer needs to know to effectively use Gulp in day-to-day situations and in the workplace.\nWe will cover all main Gulp topics in this series, including what Gulp is, Installation, Plugins and automating a project using a Gulpfile.\nYou will learn:\n• How to install Gulp on your Mac or PC\n• How to run Gulp from the command line and use the Gulp command-line arguments\n• How Gulp works and when you should use it\n• About various essential Gulp plugins including gulp-less, gulp-concat and gulp-uglify\n• How to run Gulp tasks in sequence\n• How to run Gulp tasks automatically when certain files are updated\n• How to write a fully-fledged Gulpfile to manage a complex project\n\nGulp is a very powerful and easy-to-use tool. By taking this tutorial series, you will be able to use Gulp in all your day-to-day projects. You will understand how to write a Gulpfile, what plugins to download, and how to configure them using the Gulp API.\nBest of all, we'll tackle a full Gulpfile in a hands-on workshop where we'll need to automate LESS, JavaScript and HTML processing. We'll use gulp-uglify, gulp-less, browser-sync and more, all in real time, so you can code along at home.",
      "target_audience": [
        "This course is ideal for someone who already knows Grunt, Make, Rake, etc",
        "Also great for someone with a JavaScript background",
        "Perfect for anyone working on large Web development projects, especially those using Gulp"
      ]
    },
    {
      "title": "Learn Functions & Function Expressions in Modern JavaScript",
      "url": "https://www.udemy.com/course/learn-functions-function-expressions-in-modern-javascript/",
      "bio": "Mastering JavaScript Functions: A Comprehensive Guide to Declarations and Expressions",
      "objectives": [
        "Students will gain a solid understanding of how functions work, including their definition, components, and different forms (declarations and expressions)",
        "In this 45-minute video, you will have a solid ground on understanding functions and their usage.",
        "This information will broaden your mind and can apply this concept in learning other programming languages.",
        "This video will motivate your interest in learning more and working on challeging tasks to secure your future in computer programming."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "JS Manual and Specifications": [
          "Manual and Specifications"
        ],
        "Developer Console": [
          "Developer Console"
        ],
        "Modern JavaScript Functions and Function Expressions": [
          "Functions",
          "Function Expressions",
          "else condition is required or not?",
          "Refactor the Function Using Ternary Operator '?' or Logical OR '||'",
          "Refactor the Syntax of the min Function to Compare a and b.",
          "Refactor the syntax of the pow function, which calculates the power of a number x to the exponent n."
        ]
      },
      "requirements": [
        "Basic understanding of any programming knowledge"
      ],
      "description": "Welcome to our JavaScript Functions Mastery Course Preview, where we provide a sneak peek into the dynamic world of functions. This course is designed to empower learners with a solid foundation in both function declarations and expressions, essential building blocks for any JavaScript developer.\nIn the introductory phase, you'll unravel the fundamental concepts of functions, understanding their role as reusable code blocks with distinct inputs and outputs. Explore the nuances of parameter usage, learning how to effectively pass values into functions for enhanced flexibility and functionality. Delve into the art of crafting functions with purpose, enabling you to write more modular and organized code.\nAs we progress, you'll discover the versatility of functions through practical examples and hands-on exercises. Gain insights into how functions contribute to code efficiency and maintainability. This course is not just about theory; it's a practical guide that equips you with the skills needed to confidently apply your knowledge in real-world JavaScript projects.\nWhether you're a coding novice or looking to enhance your skills, our course is tailored to provide a comprehensive and accessible learning experience. Join us in unraveling the power of JavaScript functions, and let's elevate your programming prowess together and prepare yourself for more advanced programming skills!\"",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "The Fastest Next.js Course: Learn Next 15 with App Router",
      "url": "https://www.udemy.com/course/nextjs15-with-app-router-complete-with-react-the-fastest-nextjs-course/",
      "bio": "Learn Next JS 15 with App Router by Building a Full App in 6 hours! Master Routing, Data Fetching and State management!",
      "objectives": [
        "Set up and configure a Next.js 15 project from scratch",
        "Understand the Next.js project structure and file-based routing system using App Router",
        "Style Next.js applications using CSS Modules for modular and scalable styling",
        "Optimize images with the Next.js Image component for better performance",
        "Implement dynamic navigation using the Next.js Link component",
        "Fetch data from an external API and handle loading and error states effectively",
        "Learn the diffierence and when to use client-side and server-side components",
        "Manage global state in a Next.js application using the Context API",
        "Import and use Google Fonts to enhance the design of your project",
        "Build a real-world shopping bag application following best practices"
      ],
      "course_content": {
        "Getting Started with Next.js": [
          "Presentation of the Project & Course Introduction",
          "Creating a Next.js Application",
          "Installing ES7+ React and JavaScript Nightly VS Code Extensions",
          "The Next.js Project Structure",
          "The Layout File",
          "Styling Next.js Apps with CSS Modules",
          "Best Practices for Creating Custom Components",
          "CSS Code for the Project",
          "Styling The Header Component",
          "Adding Multiple Classes with CSS Modules",
          "The Next.js Image Element",
          "The Next.js Link Element",
          "Importing Google Fonts",
          "Finishing the Homepage Styles"
        ],
        "Data Fetch and URL Parameters": [
          "Fetching Data With Next JS",
          "Creating the Product Cards",
          "Setting Up Remote Patterns for Images",
          "Working with Dynamic URL Parameters",
          "Building the Individual Product Page"
        ],
        "State Management in Next JS with The Context API": [
          "Client x Server Components",
          "State Management in Next JS Applications",
          "Context API - Creating and Providing the Context",
          "Reading from the Context",
          "Creating the Bag Count Component",
          "Mutating the State",
          "Removing Items from Bag",
          "HTML Code For the Quantity Section",
          "Handling Product Quantities",
          "Updating Quantities in the Basket",
          "HTML Code for the Basket Items Component",
          "Adding the Basket Page",
          "Reading the Context from the Basket Page",
          "Displaying the Items in the Basket",
          "Setting-Up the Product Actions",
          "Calculating the Order Total",
          "Creating a Utility Function to Format Prices",
          "Clearing the Basket",
          "Persisting the Basket Items in the Localstorage"
        ],
        "Error Handling & Loading States": [
          "Error Handling in Next JS Applications",
          "The Error.js Routing File",
          "Customizing the Error Page",
          "Using Error Boundaries for Component Errors",
          "Separating Products and Categories into Smaller Components",
          "Customizing the 404 - Not Found Page",
          "The Loading.js File for Routable Pages",
          "Adding Loading States for Other Components with React Suspense"
        ],
        "URL Parameters, Filters, Paginated Results and More": [
          "Starting the Products Page",
          "Setting Loading and Error States for the Products Page",
          "Creating the Paginated Products List",
          "Loading More Products on Demand",
          "Setting Up The Error and Loading States for the Paginated List",
          "Adding URL Paremeters for Product Categories",
          "Fetching Filtered Categories",
          "Adding The Categories Filter",
          "Changing Categories"
        ],
        "Deploying Your Next JS Application to Vercel": [
          "Creating a Git Repo for the Project",
          "Deploying Next JS Applications with Vercel",
          "Making Changes Deploying New Versions of the Website",
          "Publishing New Features on a Test Environment",
          "Rolling Back Releases on Vercel"
        ]
      },
      "requirements": [
        "Basic knowledge of React, including components, props, and state",
        "Familiarity with JavaScript ES6+ features"
      ],
      "description": "Learn Next.js by Building a Real-World E-Commerce App\nNext.js is one of the most powerful React frameworks, offering server-side rendering, static site generation, and seamless routing. In this course, you’ll learn how to build a complete shopping bag application from scratch, mastering key Next.js features along the way.\nWe start with the fundamentals, including setting up a Next.js project, understanding the file-based routing system, and working with the layout component. You'll then dive into styling with CSS Modules, customizing components, and optimizing images with the Next.js Image component.\nAs the course progresses, you'll fetch data from a products API, handle loading and error states, and implement client-side and server-side rendering techniques. You'll also learn how to manage global state using the Context API, improving the user experience with efficient data handling.\nBy the end of this course, you'll have a solid grasp of Next.js and the skills to build scalable, production-ready applications. Whether you're a React developer looking to expand your skill set or a beginner eager to explore Next.js, this hands-on course will equip you with the knowledge and confidence to create modern web applications.\nJoin now and start building with Next.js today!",
      "target_audience": [
        "React developers who want to learn Next.js and build modern, server-rendered applications",
        "Web developers looking to improve their skills in data fetching, routing, and state management with Next.js",
        "Beginners familiar with JavaScript and React who want a hands-on project to master Next.js fundamentals",
        "Anyone interested in building a real-world shopping bag application using Next.js and best practices"
      ]
    },
    {
      "title": "Next.js 15 & PostgreSQL",
      "url": "https://www.udemy.com/course/nextjs-postgresql/",
      "bio": "Build a finance tracker app with Next 15, postgres, clerk, drizzle, typescript, shadcn, zod, react-hook-form + more!",
      "objectives": [
        "Increase your value and improve your knowledge as a web developer",
        "Implement Secure Authentication with Clerk Auth",
        "Build and Manage Databases with Postgres and Neon",
        "Master the integration of TypeScript, shadcn/ui, Tailwind CSS, Zod, and React Hook Form to build robust, type-safe, and user-friendly applications",
        "Protect specific routes to ensure that only authenticated users have access to certain parts of their application",
        "Use Drizzle for seemless interactions with your Postgres Databse"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important! Read this before you begin the course (GitHub repo etc)",
          "Udemy ratings and reviews",
          "Helpful tools and resources for this course",
          "Project setup"
        ],
        "Implement auth": [
          "NEW - Create the top navbar",
          "Set up clerk auth",
          "Create test account and render user dropdown"
        ],
        "Build the create new transaction functionality": [
          "Create the new transaction page",
          "Implement route protection for all dashboard routes",
          "Create the transaction form schema with zod",
          "Render the first form fields",
          "Finish rendering the remaining form fields",
          "Create the postgres db on neon",
          "Seed the database with categories data",
          "Query for the categories data",
          "Build the createTransaction server action",
          "Finish the create transaction functionality",
          "Handle error and success states for create transaction"
        ],
        "Build the transactions page": [
          "Build out the basic transactions page UI",
          "Query for the transactions data",
          "Render the transactions data in a table",
          "Query for the associated category data for a transaction",
          "Implement the month and year filters for transactions"
        ],
        "Build the edit transaction page": [
          "Create the edit transaction page and render the transaction form",
          "Query for transaction and populate transaction form with default values",
          "Finish the edit transaction functionality (updateTransaction server action)",
          "Add the delete transaction UI",
          "Create the deleteTransaction server action",
          "Add custom error page for non-existent transactions"
        ],
        "Build the main dashboard page": [
          "Add the recent transactions table",
          "Query for the annual cashflow",
          "Add the cashflow card and dyanmic loading data",
          "Add the cashflow bar chart with recharts",
          "Add the cashflow summary"
        ],
        "Extras": [
          "Upload project to github",
          "Deploy to vercel",
          "Set up custom domain for clerk",
          "Implement the landing page",
          "Add loading states to our app",
          "BONUS!"
        ]
      },
      "requirements": [
        "Willingness to Learn and Experiment: A proactive attitude and eagerness to explore new technologies, such as Next JS, PostgreSQL, TypeScript, and database management, will help students get the most out of the course",
        "A basic understanding of React is required, as the course builds upon React concepts and integrates them with Next JS",
        "Familiarity with Node and NPM is recommended for managing dependencies and running development environments"
      ],
      "description": "Welcome to the Next.js 15 & PostgreSQL course! In this project-based course you'll build NextCash, a robust finance application to track income and expenses, while mastering the tools and techniques in Next JS with a PostgreSQL database.\nWith step-by-step guidance, you'll go beyond the basics to integrate cutting-edge technologies, ensuring you walk away with real-world skills that are immediately applicable in your projects.\n\n\nWhat You'll Learn:\nNext.js: Use the new file-based app router / directory while leveraging server and client components.\nServer Actions: Implement efficient server-side logic to handle your app's data.\nTypeScript: Write clean, scalable, and type-safe code for the frontend and backend.\nPostgreSQL with Neon: Set up a hosted database to store income and expense data securely.\nDrizzle ORM: Simplify database interactions with a type-safe and developer-friendly ORM.\nClerk Authentication: Integrate secure user authentication with ease.\nZod Validation: Ensure data integrity with powerful schema validation.\nShadcn UI & Tailwind CSS: Design a beautiful, modern UI with custom components and utility-first styling.\n\n\nProject Focus:\nYou'll create NextCash, a fully functional app that allows users to:\n1. Log Income and Expenses: Add, edit, and delete transactions.\n2. View Reports: Display data through dynamic charts and summaries.\n3. Manage Accounts: Create a personalized experience with secure user authentication.\nBy the end of the course, you'll not only have a professional-grade project to showcase in your portfolio but also the confidence to build complex, scalable web applications using the latest tools in the industry.\n\n\nWho This Course is For:\nWeb Developers: Looking to learn or level up their skills with Next JS 15 & Postgres with additional industry standard libraries and tools.\nFreelancers & Job Seekers: Want to create impressive projects to stand out in the competitive job market.\nTech Enthusiasts: Eager to explore a comprehensive tech stack in a practical, hands-on way.\n\n\nWhy Enroll?\nThis course goes beyond just coding—it's about building something meaningful while gaining real-world experience. Whether you're a beginner ready to learn the latest tools or an experienced developer looking to stay ahead of the curve, this course is for you!\nJoin us and start building NextCash today!",
      "target_audience": [
        "This course is ideal for web developers who want to increase their value as a web developer and enhance their skills in building websites and apps using modern tools and technologies like Next JS"
      ]
    },
    {
      "title": "Cloud Computing with SALESFORCE HEROKU",
      "url": "https://www.udemy.com/course/cloud-computing-with-salesforce-heroku/",
      "bio": "Build your concept from beginning to end",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Heroku.",
        "Learn to deploy Wordpress, Laravel , nodejs app , python app etc",
        "Learn to host website on Heroku",
        "Having command over all the options, services and tools available."
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the World of Cloud Computing"
        ],
        "Architecture of Heroku": [
          "Heroku Dashboard",
          "What is Dyno",
          "Different types of Dynos",
          "What is Stack",
          "How Heroku works : Procfile and Git",
          "How Heroku works : Buildpacks , Slugs and Config-var",
          "How Heroku works:Releases , Add-ons , Dyno Manager , Logging and Monitoring etc"
        ],
        "Heroku Command Line": [
          "Heroku Command line Part 1",
          "Heroku Command line Part 2",
          "Heroku Command line Part 3"
        ],
        "Collaboration": [
          "Collaboration"
        ],
        "Heroku Labs": [
          "Heroku Labs"
        ],
        "Account and Billing": [
          "Account and Billing"
        ],
        "Troubleshooting and Support": [
          "Troubleshooting and Support Part 1",
          "Troubleshooting and Support Part 2"
        ],
        "Hand on Labs": [
          "Deploying Nodejs app",
          "Deploying Python Web app",
          "Hosting Website on Heroku",
          "Deploying Java Web app",
          "CMSDeploy: Laraval on Heroku",
          "CMSDeploy: Wordpress on Heroku"
        ]
      },
      "requirements": [
        "No prerequisites at all.",
        "But if you have knowledge of any programming language & git then it would be plus point."
      ],
      "description": "You might be already familiar with Amazon AWS, Microsoft Azure, Salesforce Heroku, IBM Bluemix, etc. What are they actually and why its need for the industry is elevating day by day. Everyone wants to shift their business on cloud whether a giant company or small startups. Yes, Cloud computing is one of the such skills which industry wants and to have forged careers in cloud computing you have to enroll this learning path to get familiar with cloud computing and its use cases.\nSalesforce Heroku is one of the famous cloud platforms and the best part is it enables developers to build and run their awesome applications entirely in the cloud without charging them. Yes, Heroku, a Salesforce company and industry pioneer in the PaaS (Platform as a Service) to do so.\nOver 5 million apps, including ones from Macy’s, Product Hunt and Citrix run on Heroku. It supports a wide range of popular languages such as Python, java, Ruby and Node.js, high-scale data services including Postgres, Kafka and Redis, and an add-ons ecosystem featuring over 180 cloud application services. It creates, deploys and manage apps in such an effective way that everyone is migrating to Salesforce Heroku.\nIf you want to host a website using famous combo using HTML,CSS and Javascript or any CMS like Wordpress, Laravel etc. You'll need to write a few lines and it will be live. It's pricing is too low compared to other platform, an another reason to use Salesforce Heroku.\nTopics which you'll learn in this learning path :\nHeroku Architecture\nHeroku Deployment(Using Git)\nHeroku CLI to use Heroku through Command Line Interface\nDeploy WordPress, Laravel, Nodejs web app, Python web app etc\nHosting a static Website for free\nHeroku Collaboration\nHeroku Teams and many more such topics.\nHeroku is for Developers from Developers\nBecome certified Heroku cloud developer today. Enroll Now !!",
      "target_audience": [
        "Anyone who just wants to learn and test Heroku Platform or any developer willing to develop his/her application over Heroku Platform."
      ]
    },
    {
      "title": "PHP for Beginners : Learn PHP Programming From Scratch!",
      "url": "https://www.udemy.com/course/php-fundamentals-course/",
      "bio": "Learn the Basics and Fundamentals of PHP Programming! A Great PHP Course that you will Actually Learn to Code PHP!",
      "objectives": [
        "Write PHP codes easily",
        "Understand PHP and Web Terminology",
        "Create Your Own PHP Pages!",
        "Catch the Opportunities in the Web Development!",
        "Understanding PHP Variables",
        "Using PHP Output Statements",
        "Introducing PHP Data Types",
        "Using Strings in PHP Programming",
        "Creating and Using PHP Operators",
        "Creating and Using PHP Constants",
        "Lifetime Author Support"
      ],
      "course_content": {
        "Module 1: PHP Course Introduction": [
          "Introduction"
        ],
        "Module 2: What is PHP and Why is it used for?": [
          "What is PHP and Why is It Used For?",
          "Why PHP?",
          "What can PHP do?"
        ],
        "Module 3: Installing Environmental Programs": [
          "How to Download, Install and Use the XAMPP Server"
        ],
        "Module 4: Let's begin to coding! Dive into the PHP Syntax": [
          "Basic PHP Syntax",
          "Comments in PHP!",
          "Case Sensitivity"
        ],
        "Module 5: PHP Variables": [
          "Introduction to PHP variables!",
          "Creating Variables",
          "Variable Scope Part 1 - (Local and Global Keyword)",
          "Variable Scope Part 2 - (Static Keyword)"
        ],
        "Module 6: PHP Output Statements": [
          "What is \"echo\" statement and how is it used?",
          "What is \"print\" statement and how is it used?"
        ],
        "Module 7: PHP Data Types": [
          "What are the Data Types in PHP?",
          "Integer and Float(Double) data types",
          "Boolean and Null Data Types",
          "Array Data Types",
          "String Data Types",
          "Object Data Types",
          "Resource Data Type"
        ],
        "Module 8: Strings in PHP": [
          "Get the Length of a String",
          "Reversing a String",
          "Searching Text Within a String",
          "Getting the Number of Words in a String",
          "Replace Text within a String"
        ],
        "Module 9: PHP Constants": [
          "What are the PHP constants?",
          "Creating PHP Constants",
          "Globality of Constants"
        ],
        "Module 10: PHP Operators": [
          "What are PHP Operators & Arithmetic Operators",
          "Increment and Decrement Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators (And, Or, Not)",
          "String Operators"
        ]
      },
      "requirements": [
        "Using an Operating System"
      ],
      "description": "An easy course does not mean to understand easily, it means just thinking to understand. This course is not just easily explained, but also explained in detail, and many examples. If you get this course, please try to write and run all the examples with me. If you follow what I said in this course, \"You will be a PHP Developer in a short time.\"\nYou can ask any questions about this course from the discussion board.\nYour questions will be answered immediately.\n\n\nBenefits of Taking This PHP Course:\nPHP is one of the best-used programming languages in the world and I can say that this is the most used web development language. If you learn how to create PHP pages, that means you can do anything in the web. PHP is a very strong web language and you can do anything you wish with PHP. The popularity of PHP is increasing because of its power of the web. You can use PHP with HTML, javascript, CSS, and with many things.\nI think, learning PHP can change your life like many rich people in the world. You should know that the best web pages in the world like Facebook are using PHP while developing their sites.\nNow, the only thing in front of you to make a site like that is learning PHP.\nYou may have your best chance with learning PHP...\n\n\nNo-Risk – Money-Back Guarantee:\nFinally, there is no risk. You can preview 10% of the course for free. Once you purchase the course, if for some reason you are not happy with the course, Udemy offers a 30-day money-back guarantee.\nSo you have nothing to lose, sign up for this course and learn how to write PHP code easily from scratch..",
      "target_audience": [
        "University or College Students",
        "Graduates or Workers",
        "Beginners on PHP",
        "Anyone who wants to learn PHP",
        "Software Developers (Java/.Net/ Python, ...) interacting with the web programming"
      ]
    },
    {
      "title": "Essential HTML, CSS & HTML5 Training",
      "url": "https://www.udemy.com/course/essential-html-css-html5-training/",
      "bio": "The Most Convenient Way to Learn the Essentials of HTML, CSS and HTML5 - Quickly, No Travel or Classes.",
      "objectives": [
        "Setting up a website environment",
        "Basic formatting using HTML tags",
        "Using hyperlinks",
        "Adding images",
        "Organizing text by using tables",
        "Introduction to Cascading Style Sheets (CSS)",
        "Formatting text",
        "The CSS Box Model",
        "HTML5 and new tags",
        "Adding multimedia",
        "CSS rules",
        "Advanced CSS",
        "Working with navigation menus",
        "Discover the differences between HTML4 and HTML5",
        "Learn the different elements and attributes of the tags used in HTML5",
        "Find out about the support HTML5 offers for the latest multimedia"
      ],
      "course_content": {
        "Introducing HTML": [
          "Course Objectives and Introduction to HTML",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Course Demo Files",
          "Setting Up the Environment for Web Development - Demo",
          "Basic Formatting Tags",
          "How to Use the HTML Tags - Demo",
          "Lists, Hyperlinks and Image Tags",
          "More HTML Tags - Demo",
          "HTML Tables",
          "Table and Form Tags - Demo"
        ],
        "Introducing CSS": [
          "Introduction to CSS",
          "CSS Styles - Demo",
          "Color Keywords, Text and Fonts",
          "How to use CSS Style Properties - Demo",
          "CSS Box Model",
          "CSS Box Model and How to Manipulate Placement of Elements - Demo"
        ],
        "More HTML and CSS": [
          "Course Review",
          "Block and Inline Elements; More Tags",
          "Div Tag - Demo",
          "New HTML Tags",
          "Video, Footer and Nav Tags - Demo",
          "CSS Rule Set, Grouping, Nesting, Pseudo Classes and Pseudo Elements",
          "CSS Block Model and CSS Popup - Demo",
          "Position Property",
          "Designing a Web Site Using the CSS Concepts - Demo 1",
          "Designing a Web Site Using the CSS Concepts - Demo 2",
          "Advanced CSS",
          "Navigational Menu - Demo 1",
          "Navigational Menu - Demo 2",
          "Navigational Menu - Demo 3"
        ],
        "Conclusion": [
          "Course Wrap up"
        ],
        "Course Quiz": [
          "Assessment Test - HTML/CSS Quiz"
        ],
        "Introduction to HTML5": [
          "HTML 5 Course Overview",
          "Course Demo Files"
        ],
        "What's New in HTML 5": [
          "Filetype and Charset",
          "Comparing HTML5 File to HTML 4 File - Part 1",
          "Comparing HTML5 File to HTML 4 File - Part 2",
          "Forms",
          "Scalable Vector Graphics",
          "Video and Audio",
          "Microdata Tutorial"
        ],
        "Final": [
          "Math element, MathML, and Canvas",
          "Conclusion"
        ],
        "Coourse Quiz": [
          "Assessment Test - HTML5 Quiz"
        ]
      },
      "requirements": [
        "A text editor and a passion for learning."
      ],
      "description": "During this Learn HTML, CSS and HTML5 essentials course, you'll discover necessary elements behind becoming a web developer.\nThe objective of this “crash course\" is to take someone who is a “mouse and keyboard\" user and teach them the essentials of web development by teaching HTML, CSS and some HTML5.\nThis is a fundamental course for learning HTML and it does not assume that participants have prior knowledge.\nBy the end of the HTML, CSS and HTML5 essentials course, you will know the essentials for creating your first website.\nIf you are unaware of the new the features and tags that HTML5 offers, HTML5 essentials course is a course intended for you. This insightful and fast paced overview will help you quickly discover exactly what makes HTML5, the 5th revision of HTML, such an important standard to learn.\nThis course will assist you to:\nDiscover the differences between HTML4 and HTML5, as your trainer makes revealing side-by-side comparisons.\nFind out the different elements and attributes of the tags used in HTML5\nLearn about the support HTML5 offers for the latest multimedia.\nTutorials include the new <video>, <audio> and <canvas> elements, as well as the integration of scalable vector graphics (SVG) content and MathML for mathematical formulas.\n\n\nHere's what our students are saying...\n\n\n★★★★★ \"From zero to web developer. This course really does what it promises. I have taken quite a few courses about this subject, and this is in my opinion the very best one.\" -Ana B Sanchez-Prieto\n★★★★★ \"Excellent presentation through the HTML section. Learned a lot.\" -Edward Madigan\n★★★★★ \"The pace is fast but thorough ... at this point I think that I could get a simple web page up and running.\" -Earl Hatt",
      "target_audience": [
        "Web developers, web designers",
        "People who want to become web designers and developers",
        "Web design students",
        "Total beginners"
      ]
    },
    {
      "title": "Learn Backend Development with Python Django and AWS",
      "url": "https://www.udemy.com/course/learn-backend-development-with-python-django-and-aws/",
      "bio": "Master Django, Django Rest Framework, AWS Deployment and more",
      "objectives": [
        "Develop dynamic web applications with Django and Django Rest Framework",
        "Implement email notification systems for user engagement",
        "Utilize Git for version control and collaboration",
        "Test and debug APIs using Postman",
        "Deploy applications on Vercel, AWS EC2 with Nginx and Gunicorn, and set up SSL and domain",
        "Configure and manage AWS RDS PostgreSQL database instances"
      ],
      "course_content": {
        "Backend Development": [
          "Introduction",
          "Part 01: Python installation",
          "Part 01: Vs Code Setup",
          "Clone Github Repository (For Reference)",
          "Part 01: Project Setup",
          "Part 01: Client Requirements",
          "Part 01: Django Models",
          "Part 01: Create APIs",
          "Part 01: Swagger",
          "Part 01: Email Notification",
          "Part 02: Postman",
          "Part 03: Git and GitHub",
          "Part 04: Deployment on Vercel (Optional)",
          "Part 05: AWS RDS PostgreSQL",
          "Part 05: AWS S3 Bucket",
          "Part 05: Deployment on AWS EC2",
          "Part 06: Domain Setup",
          "Part 06: SSL Certificate"
        ]
      },
      "requirements": [
        "Basic understanding of Python programming language"
      ],
      "description": "Are you eager to dive into the world of backend development? Look no further! In this comprehensive course, you'll embark on a journey to become a proficient backend developer using Python Django, and AWS.\nWith a hands-on approach, you'll learn the ins and outs of Django, including its powerful features and how to build robust web applications. Harness the full potential of Django Rest Framework to create APIs that seamlessly interact with frontend frameworks.\nBut that's not all - you'll also delve into the realm of AWS, confidently deploying your Django applications. From setting up AWS RDS PostgreSQL databases to launching EC2 instances with Nginx and Gunicorn, you'll gain practical experience in deploying scalable and secure web applications.\nAdditionally, you'll explore essential tools and technologies like Git for version control, Postman for API testing, Vercel for continuous deployment, and SSL and domain setup for enhanced security and professional-grade applications.\nWhether you're a beginner or an experienced developer looking to expand your skill set, this course offers a structured learning path to help you master backend development with Python Django, and AWS. Enroll now and unlock the doors to a world of opportunities in backend development. So Are You Ready to Become a Backend Developer?",
      "target_audience": [
        "This course is designed for aspiring backend developers seeking to master Django and related technologies. It's suitable for beginners with basic Python knowledge and intermediate developers looking to expand their skill set."
      ]
    },
    {
      "title": "Microsoft Azure Machine Learning (ML) Fundamentals",
      "url": "https://www.udemy.com/course/microsoft-azure-machine-learning-fundamentals/",
      "bio": "Create your first Data Science experiment in Microsoft Azure using Machine learning (ML). Real world data analysis.",
      "objectives": [
        "Build basic data science experiments using Microsoft Azure Machine Learning",
        "Understand and apply Microsoft Azure Machine learning concepts to real world problems",
        "Learn Azure ML Studio",
        "Become proficient at Machine Learning workings including predictive analysis"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Structure"
        ],
        "Deep Dive Azure ML": [
          "Tutorial: Getting started with Azure Machine Learning Studio",
          "Tutorial: Business use case in machine learning",
          "Tutorial: Conducting an experiment",
          "How to process data",
          "Converting data with Windows PowerShell",
          "Uploading data onto Azure ML Studio",
          "How to test and evaluate models",
          "How to deploy a web service"
        ],
        "Concept Lectures": [
          "What is Azure Machine Learning",
          "How does ML Studio work",
          "Understanding Data Science"
        ],
        "Test your knowledge": [
          "Concepts Quiz"
        ],
        "Bonus": [
          "Bonus - Discounted Coupons"
        ]
      },
      "requirements": [
        "A credit card is required to create Microsoft Azure account",
        "Knowledge of basic statistical concepts are highly desirable but not required"
      ],
      "description": "Are you a company or a Web developer, IT administrator, data center architect, consultant, enterprise architect, data protection officer, programmer, data security specialist, or big data analyst and want to gain fundamental and intermediate level skills and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to Microsoft Azure Machine Learning (ML) Fundamentals course For Beginners - A one of its kind course!\nThe flipped classroom model with hand-on learning will help you experience direct  into the course as your begin your learning journey. Be sure to watch the preview lectures that set course expectations!\nIn this course, you'll learn and practice:\nWorking in Azure ML Studio\nCreating a machine learning experiment\nModeling a real business use case\nLearn the basic concepts of machine learning\nUnderstand  best practices, and much more....\nYou will also get complete resources, toolkit, and code where applicable with this course! We've built this course with our Team ClayDesk of industry recognized developers and consultants to bring you the best of everything!\nSo, if you would like to:\n- start your freelancing career and consult companies, this course is for you\n- gain marketable skills as an IT expert and professional, this course is for you\n- This course is not designed for advanced level students\n...this Microsoft Azure Machine Learning (ML) Fundamentals course is exactly what you need, and more. (You’ll even get a certification of completion)\nSee what our students say “It is such a solid course that covers all important areas of machine learning, and I now know hoe to predict future products based on their features. Simply awesome!.” - Alex Neuman\n“This is such an awesome course. I loved every bit of it – Wonderful learning experience!”  Ankit Goring.\nJoin thousands of other students and share valuable experience\nWhy take this course?\nAs an enterprise architect consulting with global companies, technology evangelist, and brand innovator, I have designed, created, and implemented enterprise level projects, I am excited to share my knowledge and transfer skills to my students.\nEnroll now in Microsoft Azure Machine Learning (ML) Fundamentals  today and revolutionize your learning. Stay at the cutting edge of Machine Learning and Data Science —and enjoy bigger, brighter opportunities with Microsoft Azure.\nHappy learning.\nQasim Shah",
      "target_audience": [
        "Beginner IT students curious about Azure machine learning. This course is not for experienced data science students",
        "Anyone who wants to learn the fundamental workings of machine learning (ML)",
        "Big Data specialists, Network Engineers, Developers, programmers, coders can also enhance their skill set"
      ]
    },
    {
      "title": "Bootstrap 4 For Everyone",
      "url": "https://www.udemy.com/course/bootstrap-4-for-everyone/",
      "bio": "Learn The Latest Version Of Bootstrap 4 From Start To Finish And Build 3 Website Projects. Become A FrontEnd Hero Today!",
      "objectives": [
        "Install and Use the Bootstrap CSS Framework",
        "Understand the Major Bootstrap Components",
        "Understand The Bootstrap Grid System",
        "Use Bootstrap Utilities",
        "Use and Modify The Free Bootstrap Website Themes",
        "Build Amazing Websites Quickly and Easily with Bootstrap"
      ],
      "course_content": {
        "Bootstrap Components": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Website Overview",
          "Install Bootstrap via CDN",
          "Download and Install Bootstrap Locally",
          "Typography",
          "Code, Images, and Tables",
          "Navbars",
          "Alerts",
          "Badges",
          "Breadcrumbs",
          "Buttons",
          "Cards",
          "Carousel",
          "Collapse",
          "Dropdowns",
          "Forms",
          "Input Groups",
          "Jumbotrons",
          "List Groups",
          "Modals",
          "Navs",
          "Pagination",
          "Popovers",
          "Progress Bars",
          "Tooltips"
        ],
        "The Grid System and Utilities": [
          "Containers",
          "Intro To The Grid System",
          "Grid Letter Sizes",
          "No Gutters",
          "Grid Numbering",
          "Responsive Breakpoints",
          "Grid Alignment",
          "Borders",
          "Colors",
          "Shadows",
          "Text Align"
        ],
        "Example Themes and Projects": [
          "Intro To Example Themes",
          "Download Example Themes",
          "Set Javascript Path",
          "Album Example - Adding Images To Cards",
          "Album Example - Final Customization",
          "Cover Example",
          "Carousel Example 1",
          "Carousel Example 2",
          "Carousel Example 3",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser",
        "We'll Download a Free Coding Text Editor Called Sublime Text",
        "We'll Download Bootstrap For Free As Well",
        "Knowledge Of HTML Would Be Useful but not Necessary",
        "You Don't Need To Know CSS To Take This Course"
      ],
      "description": "There's a reason why Bootstrap is the MOST popular CSS Framework in the world, used by millions of websites all over the world!\nThe reason...it's easy!\nBootstrap 4 allows you to build amazing looking websites quickly and easily, sometimes as easy as drag and drop!\nHTML and CSS are the fundamental building block of the Internet. Using a frontend web framework like Bootstrap can cut your web development time down drastically!\nIn this course I'll show you how to use Bootstrap 4.1.1 from start to finish.  You don't need any special skills or knowledge to start building great looking websites in minutes.\nWe'll start out learning how to install and start using Bootstrap. Then we'll learn about all of the Bootstrap Components. After that we'll learn how to position things on a webpage using the Bootstrap grid system. Then we'll learn how to use the Bootstrap Utilities.\nFinally, we'll build three websites using free templates that come with bootstrap. The first is a cool photo album website, the second is a simple one page landing page site, and the last one is a cool blog/business website template.\nAimed at the absolute beginner, this course is great for front end developers, back end developers, or even just hobbyists who want to learn to build cool websites!\nSee you inside!\n-John Elder\nCEO Codemy. com",
      "target_audience": [
        "This course is built for absolute beginners who want to learn to build websites with Bootstrap",
        "Front End Developers Who Want To Learn Bootstrap",
        "Back End Developers Who Want To Learn Bootstrap",
        "Anyone Who Wants To Learn Bootstrap 4"
      ]
    },
    {
      "title": "Front End Web Development: How To Sell On Envato Themeforest",
      "url": "https://www.udemy.com/course/sell-on-envato-themeforest/",
      "bio": "The complete guide to start generating passive income by selling front end website templates on envato themeforest.",
      "objectives": [
        "How to do extensive market research before creating any type of product for envato themeforest",
        "The art behind a perfectly designed website template",
        "Themeforest requirements and how to fulfill those",
        "Themeforest rejections and how to get approved without rejections",
        "How to write a perfect documentation for you buyer",
        "How to create logo, preview image, thumbnail images",
        "How to submit a product on envato themeforest and generate passive income",
        "Basic use of Figma and conversion of a UI template to HTML template",
        "How to create a premium front end website template with HTML, CSS and JS",
        "Rules of high standard coding practices"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of front end web development",
        "A personal computer with your favorite code editor and browser",
        "Willingness to learn something new"
      ],
      "description": "Front End Web Development : How To Sell On Envato ThemeForest\nBuild A Premium HTML Template Using Your Front End Web Development Knowledge and Generate Passive Income while you sleep!\nIn this course, you will learn everything you will need to create and sell a premium front-end template that is guaranteed to get accepted on marketplaces like ThemeForest.\nBecome a Website Template expert and make money online by publishing your templates! After finishing the course you will be able to do:\nYou can create a premium quality site template for premium marketplaces like ThemeForest and earn money.\nYou will go one step further in the path of becoming a professional front end web developer.\nYou will be able to use advanced javascript plugins on your website to make it more attractive and eye-catching.\nYou can submit your front end templates on Themeforest and other marketplaces all by yourself.\nYou will have the basic skills of graphics designing and you will be able to design a simple logo, favicon, thumbnail image, preview images, etc.\nYou will be able to create awesome designs and get ideas about design.\nYou will be able to make money right away by using your front end web development skills.\nTake your HTML & CSS knowledge to the next level\nAre you looking to code premium HTML templates that will pass the coding standards review on websites like themeforest?\nDo you have great designs or you work with a designer and you have HTML/CSS/JS knowledge and you want to convert your designs into a great front end website templates?\nDo you have some front end web development knowledge and you want to expand your knowledge and get deeper into the world of professional front end web developers and be able to sell themes online?\nThen this course is for you!\nThis course is the essence of my experience with submitting templates to the themeforest. In these lectures, I will share everything I know about creating HTML templates. After completing the course you will be able to create templates coded to match Themeforest's coding standards. You should have no problems passing themeforest's code review as long as you have a great design!\n\n\nThis is not a Design/HTML course!!! If you are looking for that, I am sure you will find a lot of other resources. In this course, I will just focus on the complete process of creating and submitting HTML website templates in ThemeForest using Front End Web Development.\nAlso, you should have some basic front end web development knowledge. I will not teach you html & css from scratch here, so if you are interested in taking this course, I suggest taking a beginner's front end web development course first!\n\n\nWho is the target audience?\nDevelopers who have basic HTML/CSS knowledge and wish to create professional HTML templates from scratch.\nFront end web developers who want to take their knowledge to the next level.\nFront end web developers looking to create premium templates that get approved on marketplaces like themeforest.\nAnyone interested in learning advanced coding practices and standards.\nIntermediate level front end web development learners.\n\n\n\n\n#frontendwebdevelopment #createpremiumhtmltemplate#Front End Web Development",
      "target_audience": [
        "Beginner level front end web developer",
        "Web developers who doesn't know how to earn with their skills",
        "Who wants to generate passive income",
        "Who wants to learn about premium marketplaces"
      ]
    },
    {
      "title": "React js &Next js: Became Full Stack web Developer",
      "url": "https://www.udemy.com/course/nextjs-q/",
      "bio": "Web development",
      "objectives": [
        "File-Based Routing",
        "Server-Side Rendering (SSR) with Nextjs",
        "RESTful APIs and Nextjs",
        "ntegrating Headless CMS with Nextjs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "introduction": [
          "1 introduction",
          "2 server side rendering",
          "3 Static site generation",
          "4 file based routing"
        ],
        "HTML (For Beginners)": [
          "1 introduction of HTML",
          "2 html elements",
          "3 creating files and folder in vs code",
          "4 html elements",
          "5 attributes in html",
          "6 attributes in html",
          "7 attributes in html",
          "8 Headings in html",
          "9 paragraph in html",
          "10 html formating",
          "11 adding images",
          "12 resizing of image",
          "13 creating clickable images",
          "14 background image",
          "15 lists in html"
        ],
        "CSS (For Beginners)": [
          "1 CSS introduction",
          "2 css use with html",
          "3 css colors",
          "4 background color",
          "5 css box model and border",
          "6 padding and margin"
        ],
        "JavaScript(For Beginners)": [
          "1 introduction of js",
          "2 inner_html",
          "3 document.write",
          "4 other_methods",
          "5 intro of variable in js",
          "6 identifiers and rules for variables",
          "7 many variable in one statement",
          "8 types of variables",
          "9 let in javascript",
          "10 operators",
          "11 Java scrip Events",
          "12 java script Events types",
          "13 IF Else statemment(decision making introduction)",
          "14 switch statement in js",
          "15 looping in js intro",
          "16 for loop in js",
          "17 syntax of for loop",
          "18 while loop in js",
          "19 syntax of while loop in js",
          "20 Defination and syntax",
          "21 function example",
          "22 arrow function",
          "23 map function.",
          "24 self invocking function",
          "25 objects in java script",
          "26 object literal in js",
          "27 object by using new keyword in js",
          "28 by using object constructor"
        ],
        "React (refresher)": [
          "1 React intro",
          "2 start working on React",
          "3 using React| (previous version)",
          "4 create react Element (previous version)",
          "5 create react Element by variables (previous version)",
          "6 jsx and Babel (previous version)",
          "7 using Babel (previous version)",
          "8 react components",
          "9 creating Mutiple components",
          "10 Tailwind css with react",
          "11 import image in react",
          "12 Creating Header component",
          "13 routing in React",
          "14 routing in React",
          "creating buttons in header",
          "Onclick Event",
          "creating forms",
          "form Styling",
          "creating more inputs",
          "styling in page",
          "on change event"
        ],
        "nextjs installation": [
          "1 nextjs installation",
          "2 creating first page"
        ],
        "file based routing": [
          "1 File based routing",
          "2 nested routing",
          "3 Linking and navigation",
          "4 Linking and navigation",
          "5 Dynamic Routing",
          "6 Dynamic routing example"
        ],
        "styling with Next js": [
          "1 introducion of tailwind css",
          "2 installation of tailwind css",
          "3 background colors",
          "5 border,padding and margin",
          "4 text and font setting",
          "6 creation of table",
          "7 styling of table"
        ],
        "Image Optimization": [
          "Image Optimization in Next.js",
          "Image optimization in NEXTJS",
          "KEY Feature for optimizing image in next js",
          "KEY Feature for optimizing image in next js 1",
          "creating image component using next js",
          "Assignment"
        ]
      },
      "requirements": [
        "webdevelopment"
      ],
      "description": "This comprehensive course is designed to equip learners with the knowledge and skills required to create cutting-edge, SEO-friendly websites using Next.js, one of the most advanced technologies in web development today. Next.js provides robust features such as server-side rendering, static site generation, and file-based routing, making it an ideal choice for developing high-performance web applications that rank well on search engines. From understanding the basics of Next.js to mastering full-stack development and deploying serverless architectures, this course offers a deep dive into building practical, efficient web applications. Whether you're a beginner aiming to get started in web development or a seasoned developer looking to enhance your skillset with Next.js capabilities, this course covers everything from foundational concepts to advanced techniques, including RESTful APIs and the integration with headless CMS platforms like Strapi.\nWho Should Enroll:\nWeb Developers looking to upgrade their skills with the latest technologies\nFront-end Developers interested in learning server-side rendering techniques\nFull-stack Developers wanting to master Next.js for building scalable applications\nAnyone interested in creating high-performance, SEO-friendly websites\nCourse Outline:\nModule 1: Introduction to Next.js\nOverview of Next.js and its advantages\nSetting up a Next.js project\nUnderstanding the Next.js file structure\nModule 2: File-Based Routing\nBasics of file-based routing in Next.js\nCreating and managing routes\nNested routes and path parameters\nModule 3: Server-Side Rendering (SSR) with Next.js\nUnderstanding server-side rendering\nImplementing SSR for improved SEO and performance\nData fetching methods for SSR\nModule 4: Dynamic Routing\nImplementing dynamic routes in Next.js\nBuilding user-friendly URLs\nHandling dynamic data with getStaticPaths and getStaticProps\nModule 5: Full Stack Development in Next.js\nIntroduction to full-stack development concepts\nBuilding APIs with Next.js\nConnecting to a database in Next.js applications\nModule 6: RESTful APIs and Next.js\nUnderstanding RESTful APIs\nCreating and using RESTful APIs in Next.js\nBest practices for API integration\nModule 7: Serverless Deployments with Next.js\nIntroduction to serverless architecture\nDeploying Next.js applications in a serverless environment\nBenefits and considerations of going serverless\nModule 8: Integrating Headless CMS with Next.js\nOverview of headless CMS and its benefits\nIntegrating Strapi with Next.js\nBuilding dynamic websites with Next.js and Strapi\nModule 9: Advanced Next.js Features\nAdvanced routing techniques\nOptimizing Next.js applications for performance\nSecurity best practices in Next.js\nModule 10: Capstone Project\nApplying the concepts learned to build a complete Next.js application\nIncorporating SEO-friendly features, dynamic content, and serverless deployment\nPeer review and feedback on projects",
      "target_audience": [
        "anyone"
      ]
    },
    {
      "title": "Progressive Web Apps(PWA) development For beginners",
      "url": "https://www.udemy.com/course/progressive-web-appspwa-development-for-beginners/",
      "bio": "Create and publish Progressive Web Apps from scratch",
      "objectives": [
        "Build progressive web apps",
        "Publish app to the internet",
        "Add version control to app",
        "Create repository on GitHub and push your project to it",
        "Make the app installable on various devices",
        "Implement offline access for the app",
        "Setup and configure local Server"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What are progressive web apps",
          "Features of progressive web apps",
          "Key components of progressive web apps",
          "Technologies used to create progressive web apps"
        ],
        "Creating the app": [
          "Installing Text Editor",
          "Installing SublimeText",
          "Installing Visual Studio Code",
          "What we will create",
          "Creating project directory and files",
          "Creating project structure",
          "Adding CSS",
          "Adding logic with JavaScript: Part 1",
          "Adding logic with JavaScript: Part 2",
          "Source Code"
        ],
        "Node js Setup": [
          "What is Node Node js",
          "Installing Node js",
          "Node js Modules and Packages",
          "Initializing a Node js project",
          "Installing lite server",
          "Lite server Configuration"
        ],
        "Converting the app to a progressive web app": [
          "What Makes a Web App Progessive",
          "Adding app files to public directory",
          "Running the development server",
          "What is Lighthouse",
          "Creating manifest file",
          "Register service worker",
          "Adding icons directory",
          "Implement caching for offline access: Part 1",
          "Implement caching for offline access: Part 2",
          "Installing the app"
        ],
        "Version Control and deployment": [
          "Tools to publish your app online",
          "What is git",
          "What is Github",
          "Install git",
          "Git Setup",
          "Create GitHub account",
          "Creating personal access tokens",
          "Adding files to local git repository",
          "Adding files to remote GitHub repository",
          "Publishing app to the internet"
        ]
      },
      "requirements": [
        "Knowledge of HTML,CSS, JavaScript advised"
      ],
      "description": "PWAs are web apps developed using a number of specific technologies and standard patterns to allow them to take advantage of both web and native app features. For example, web apps are more discoverable than native apps; it's a lot easier and faster to visit a website than to install an application, and you can also share web apps by sending a link.\nOn the other hand, native apps are better integrated with the operating system and therefore offer a more seamless experience for the users. You can install a native app so that it works offline, and users love tapping their icons to easily access their favorite apps, rather than navigating to it using a browser.\nPWAs give us the ability to create web apps that can enjoy these same advantages.\nIt's not a brand new concept—such ideas have been revisited many times on the web platform with various approaches in the past. Progressive Enhancement and responsive design already allow us to build mobile friendly websites.\nPWAs, however, provide all this and more without losing any of the existing features that make the web great.\n\n\nWhat makes an app a PWA?\nThere are some key principles a web app should try to observe to be identified as a PWA. It should be:\nDiscoverable, so the contents can be found through search engines.\nInstallable, so it can be available on the device's home screen or app launcher.\nLinkable, so you can share it by sending a URL.\nNetwork independent, so it works offline or with a poor network connection.\nProgressively enhanced, so it's still usable on a basic level on older browsers, but fully-functional on the latest ones.\nRe-engageable, so it's able to send notifications whenever there's new content available.\nResponsively designed, so it's usable on any device with a screen and a browser—mobile phones, tablets, laptops, TVs, refrigerators, etc.\nSecure, so the connections between the user, the app, and your server are secured against any third parties trying to get access to sensitive data.",
      "target_audience": [
        "Beginner to Progressive Web App Development"
      ]
    },
    {
      "title": "Learn 10 PHP Patterns!",
      "url": "https://www.udemy.com/course/php-patterns/",
      "bio": "Learn 10 the most useful PHP Patterns",
      "objectives": [
        "Learn PHP Patterns",
        "Improve your code skills",
        "Understand when to use each pattern"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "The Facade Pattern": [
          "The Facade Pattern in action"
        ],
        "The Adapter Pattern": [
          "The Adapter Pattern in action"
        ],
        "The Decorator Pattern": [
          "Problem",
          "Solution"
        ],
        "The Strategy Pattern": [
          "The Strategy Pattern in action"
        ],
        "The Factory Pattern": [
          "The Factory Pattern in action"
        ],
        "The Command Pattern": [
          "The Command Pattern in action"
        ],
        "The Observer Pattern": [
          "The Observer Pattern in action"
        ],
        "The Singleton Pattern": [
          "The Singleton Pattern in action"
        ],
        "The Active Record Pattern": [
          "The Active Record Pattern in action"
        ]
      },
      "requirements": [
        "Basic PHP knowledge"
      ],
      "description": "I know you always wanted to learn PHP Design Patterns, but never had enough of time! Today you have a grate chance to learn the 10 most useful php patterns!\nI will teach you how to implement each pattern and when to use it! Each lecture has files attached to it. You can download all source code.\nYou will learn the following patterns:\nThe Facade Pattern\nThe Adapter Pattern\nThe Decorator Pattern\nThe Strategy Pattern\nThe Factory Pattern\nThe Command Pattern\nThe Observer Pattern\nThe Singleton Pattern\nThe Active Record Pattern\nThe Prototype Pattern\nAll patterns explained in this course can be implemented using any programming language.",
      "target_audience": [
        "Those who want to grasp patterns",
        "Those who want to write maintainable code"
      ]
    },
    {
      "title": "The Ultimate Authentication Course with NodeJS and React",
      "url": "https://www.udemy.com/course/react-node-authentication/",
      "bio": "Authenticate with Access & Refresh Tokens, 2FA, Social Authentication with Google etc.",
      "objectives": [
        "Use NodeJS with Typescript",
        "Use TypeORM with MySQL",
        "Use Access & Refresh Tokens",
        "Send Emails",
        "Login using 2 Factor Authentication (2FA) with Google Authenticator",
        "Social Authentication using your Google Account",
        "Use React Hooks",
        "Use Redux Toolkit",
        "Create QR Codes"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Node": [
          "Setup",
          "Typescript",
          "Express",
          "MySQL",
          "TypeORM",
          "Entities",
          "Register",
          "Login",
          "Jwt",
          "Cors",
          "Authenticated User",
          "Refreshing the Token",
          "Logout",
          "Forgot Password",
          "Sending Emails",
          "Reset Password"
        ],
        "React": [
          "Setup",
          "Components",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Redux Toolkit",
          "Using Redux",
          "Forgot Password",
          "Reset Password"
        ],
        "Two Factor Authentication": [
          "Two Factor Authentication",
          "Scanning and Sending the Authenticator Code",
          "Expanding the Login Form",
          "Authenticator Form",
          "Displaying the QR Code"
        ],
        "Google Authentication": [
          "Node Google Authentication",
          "React Google Authentication"
        ],
        "Authentication using Bearer Tokens": [
          "Revoking Tokens",
          "Using the Access Token in the Headers"
        ]
      },
      "requirements": [
        "Javascript Knowledge"
      ],
      "description": "Welcome to this course where you will learn everything you need to know to secure your React and NodeJS app.\nIn NodeJS you will learn:\nUse NodeJS with Typescript\nUse TypeORM with MySQL\nUse Access & Refresh Tokens\nUse HttpOnly Cookies\nSend Emails\nLogin using 2 Factor Authentication (2FA) with Google Authenticator\nSocial Authentication using your Google Account\nIn React you will learn:\nUse Typescript\nUse React Hooks\nUse Redux Toolikt\nCreate QRCodes\nSocial Authentication using your Google Account\nIf these are what you are looking for then this course is for you.\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript Developers"
      ]
    },
    {
      "title": "Writing Clean Asynchronous Code In Node.js",
      "url": "https://www.udemy.com/course/writing-clean-asynchronous-code-in-nodejs/",
      "bio": "A Complete Guide To Avoiding CallbackHell And Writing Clean Code With Async.js, Async/Await, And Promises",
      "objectives": [
        "Write Clean Code with Callbacks in Nodejs",
        "Write Clean Code with Promises in NodeJs",
        "Write Clean Code with Async/Await in Nodejs",
        "Avoid CallbackHell with Promises, Asyncjs and Promises",
        "Convert Callbacks To Promises",
        "Best Design Pattern To Write Asynchronous Code in Nodejs"
      ],
      "course_content": {
        "Getting Setup": [
          "Installing NodeJs",
          "Connecting NodeJs Application to MongoLab"
        ],
        "Callbacks And CallbackHell": [
          "What is Callback",
          "What is CallbackHell"
        ],
        "Execute Asynchronous Tasks In Series": [
          "Introduction to Async.js",
          "Execute Tasks In Series Using Async.series",
          "What is Async.waterfall",
          "Execute Tasks In Series Using Async.waterfall",
          "What is Promise",
          "Execute Tasks in series using Promise Chainning",
          "What is Async/Await",
          "Execute Tasks in Series using Async/Await"
        ],
        "Execute Asynchronous In Parallel": [
          "Introdcution",
          "Parallel Demo Setup for Async.js",
          "Create NodeRestClient Service",
          "Execute Tasks In Parallel Using Async.parallel",
          "Create Axios Api Service",
          "Execute Tasks in Parallel Using Promise.all",
          "Execute Tasks In Parallel Using Async/Await"
        ],
        "Execute Asynchronous Tasks In Loop": [
          "Introduction",
          "Problems With Simple For Loop",
          "Execute Tasks In The Loop Using Async.each",
          "Execute Tasks In The Loop Using Promises",
          "Execute Tasks In The Loop Using Async/Await"
        ],
        "Converting Callbacks to Promises": [
          "Bluebird.promisify Demo",
          "Bluebird.promisifyAll Demo"
        ],
        "Bonus Lecture": [
          "Learn React and Redux by building real world application",
          "FullStackHour"
        ]
      },
      "requirements": [
        "Basic Knowledge of Javascript is Important",
        "Basic Knowledge of Nodejs is Important",
        "Basic Knowledge of Expressjs is Important"
      ],
      "description": "This course will include topics on\nWhat is Callback\nWhat is CallbackHell\nHow to avoid CallbackHell using Async.js\nHow to avoid CallbackHell using Promises\nHow to avoid CallbackHell using Async/Await\nWhat is Promise\nWhat is Promise Chaining\nHow to run  Asynchronous tasks in the Series using Promise Chaining\nHow to run  Asynchronous functions in the Parallel using Promise.all\nHow to run Asynchronous functions in Series using Async.series method\nHow to run  Asynchronous methods in Parallel using Async.parallel method\nHow to run  Asynchronous methods  in Loop using Async.each method\nWhat is Async/Await\nExecute Asynchronous tasks in Parallel using Async/Await\nExecute Asynchronous tasks in Series using Async/Await\nRun Asynchronous Tasks in Loop using Async/Await\nConverting Callbacks to Promises\nWhat is Bluebird\nPractical examples of Bluebird.promisify method\nPractical examples of Bluebird.promisifyAll method",
      "target_audience": [
        "Programmers looking to learn, how to avoid callbackhell",
        "Developers who want to write Clean Code Asynchronous Code in Nodejs",
        "Developers who want to learn Async/Await in Nodejs",
        "Developers who want to learn Promises in Nodejs",
        "This course is not for Nodejs beginners,you must have an intermediate knowledge of Nodejs",
        "Developers who want to follow the best practices to write code using Callbacks",
        "Developers who want to learn how to run tasks in parallel,series and in the loop using Callbacks",
        "Developers who want to learn how to run tasks in parallel,series and in the loop using Promises",
        "Developers who want to learn how to run tasks in parallel,series and in the loop using Async/Await"
      ]
    },
    {
      "title": "LIVE HELP - ZERO to HERO Python 3 FULL STACK MASTERCLASS",
      "url": "https://www.udemy.com/course/pythonfullstack/",
      "bio": "learn HTML CSS Bootcamp jQuery Javascript DOM and Python by using easy to execute code.",
      "objectives": [
        "build a search engine like Google, build a website like Youtube or Facebook. You can build anything you want in Python."
      ],
      "course_content": {
        "Introduction": [
          "Installing Python",
          "Installing Anaconda"
        ],
        "Setting Up Your Software": [
          "Installing Chrome",
          "Installing Atom",
          "Installing Visual Code Studio"
        ],
        "HTML": [
          "HTML Introduction",
          "HTML 2. Intro To HTML",
          "HTML 3. Headers and Paragraphs",
          "HTML 4. Divs and Spans",
          "HTML 5. List Types",
          "HTML 6. Attributes",
          "HTML 7. Tables",
          "HTML 8. Forms",
          "HTML 9. Form Legend",
          "HTML 10. Button Forms",
          "HTML 11. Quiz Exercise",
          "HTML 12. Quiz Exercise Solution"
        ],
        "CSS": [
          "CSS Introduction",
          "CSS 2. Colors",
          "CSS 3. Backgrounds",
          "CSS 4. CSS id, classes",
          "CSS 5. CSS Specificity",
          "CSS 6. CSS Chrome Console",
          "CSS 7. CSS Web Fonts",
          "CSS 8. CSS Box Model"
        ],
        "Bootstrap": [
          "Bootstrap Introduction",
          "Bootstrap 1. Intro to Bootstrap Part 1",
          "Bootstrap 1. Intro to Bootstrap Part 2",
          "Bootstrap 2. Bootstrap Forms",
          "Bootstrap 3. Bootstrap Navbar Part 1",
          "Bootstrap 3. Bootstrap Navbar Part 2",
          "Bootstrap 4. Grids",
          "Bootstrap 5. Test Project"
        ],
        "Javascript": [
          "Intro to Javascript",
          "Javascript 2. JS Operators",
          "Javascript 3. JS to HTML Part 1",
          "Javascript 3. JS to HTML Part 2",
          "Javascript 4. JS Operators Part 1",
          "Javascript 4. JS Operators Part 2",
          "Javascript 5. JS Control Flow",
          "Javascript 6. JS While Loops",
          "Javascript 7. JS for Loops",
          "Javascript 8. JS Exercises",
          "Javascript 9. JS Exercise Solutions",
          "Javascript 10. Functions",
          "Javascript 11. Functions Exercises",
          "Javascript 12. Functions Solutions",
          "Javascript 13. Functions Arrays",
          "Javascript 14. Objects",
          "Javascript 15. Objects Exercises",
          "Javascript 16. Objects Exercises Solutions"
        ],
        "Document Object Model (DOM)": [
          "DOM 1. Introduction to DOM",
          "DOM 2. DOM Console Part 1",
          "DOM 2. DOM Console Part 2",
          "DOM 4. Event Listeners",
          "DOM 5. Game Project"
        ],
        "jQuery": [
          "jQuery 1. jQuery Introduction",
          "jQuery 2. jQuery Basics",
          "jQuery 3. jQuery Events",
          "jQuery 4. jQuery Project"
        ],
        "Intro to Python": [
          "Python 1. Introduction",
          "Python 2. Python Numbers",
          "Python 3. Python strings",
          "Python 4. Python Lists",
          "Python 5. Dictionaries",
          "Python 6. Python Tuples"
        ],
        "Python Flow Control": [
          "Python Flow Control 1. Intro",
          "Python Flow Control 2. Test Conditions",
          "Python Flow Control 3. For Loops",
          "Python Flow Control 4. Extending For Loops",
          "Python Flow Control 5. Continue Break",
          "Python Flow Control 6. Augmented Assignment",
          "Python Flow Control 7. While Loops",
          "Python Flow Control 8. While Loop Challenge",
          "Python Flow Control 9. Exercise"
        ]
      },
      "requirements": [
        "have a PC or mac. Must have desire to learn programming. HD monitor is preferred."
      ],
      "description": "My name is GP.  I used AI to classify brain tumors.  I have 11 publications on Pubmed talking about that.  I went to Cornell and taught at UCSF, NIH, Cornell University and Amherst College.  I have taught hundreds of students one on one.\nI am providing LIVE HELP M-F 9-5pm NYC eastern standard time and afterhours as well\nThis course will be continually updated and we answer all questions.  We will continue updating content based on both user demand and changes in technology.  If you have taken a previous bootcamp but still are struggling, this course will fill in the holes and have you applying Python on lots of different projects.  Alot of courses made for Python 2 do not work anymore in Python 3 IDEs\nThis is the only fullstack course that teaches you everything from basic frontend HTML to Python 3.  Other courses have upgraded from Python 1 to Python 3, which uses OLD CODING CONVENTIONS.  This is based on modern programming techniques from 2018!\nThis is a large course, but it is still easy!  The secret to this course is that to learn rapidly, we present information in small steps, so that no one step seems difficult.  Of course, there are lots of steps, so the knowledge builds fast, but its on a very strong foundation.\nThis is the definitely the most advanced yet simple Python fullstack course online.    We can literally take someone with no programming experience and have them programming in 2 weeks (or faster if they study daily).  Whether you have never programmed before, already know basic syntax, or want to finally advance your skillset, this course is for you! In this course we will teach you HTML, CSS, Bootstrap, Javascript, jQuery and Python 3.\nWith over 70 lectures and more than 30 hours of video this course is extremely comprehensive\nWe cover a wide variety of topics, including:\nHTML\nCSS\nBootstrap (to make responsive websites fast!)\nJavascript (to interact with users)\njQuery (to further interact with users using clicks and mouseovers)\nInstalling Python\nRunning Python Code\nStrings\nExternal Modules\nObject Oriented Programming\nInheritance\nPolymorphism\nLists\nDictionaries\nTuples\nSets\nNumber Data Types\nPrint Formatting\nFunctions\nScope\nargs/kwargs\nBuilt-in Functions\nDebugging and Error Handling\nModules\nFile I/O\nAdvanced Methods\nDecorators/ Advanced Decorators\nand much more!",
      "target_audience": [
        "Anyone who wants to learn programming. You need no skills to start this course."
      ]
    },
    {
      "title": "Master HTML & CSS: From Basics to Advanced Web Design",
      "url": "https://www.udemy.com/course/master-html-css-from-basics-to-advanced-web-design/",
      "bio": "Master HTML & CSS with Hands-On Projects: Build Modern, Responsive Websites and Enhance Your Web Development Skills",
      "objectives": [
        "Understand HTML & CSS Fundamentals: Gain a solid foundation in HTML and CSS, including core concepts such as HTML tags, CSS selectors, properties, etc.",
        "Apply Advanced Layout Techniques: Master intermediate CSS concepts like the Box Model and Flexbox, to create complex and responsive web designs.",
        "Build Real-World Projects: Develop practical skills by working on hands-on projects, such as creating a modern album layout inspired by Bootstrap 5.3.",
        "Implement Best Practices for Web Development: Learn to use semantic HTML tags for better accessibility and SEO, manage CSS styling to enhance user experience."
      ],
      "course_content": {
        "Introduction to Web Development: Essential Theories and Concepts for Beginners": [
          "Introduction to Web Development: Understanding Markup vs. Programming Languages",
          "HTML Essentials: Key Tags, Syntax, and Common Attributes Explained"
        ],
        "Hands-On Exercises: Applying Web Development Concepts from Section 1": [
          "Hands-On Exercise: Creating Your First HTML Document",
          "How to Inspect a Webpage: Tools and Techniques for Beginners",
          "Hands-On Exercise: Building a Webpage with Images, Hyperlinks, and Lists",
          "Exercise 2: Common Pitfalls and How to Avoid Them in HTML",
          "Hands-On Exercise: Creating a New Webpage with Advanced HTML Techniques"
        ],
        "CSS Fundamentals: Essential Styling Techniques and Best Practices": [
          "Introduction to CSS: Basics and Fundamental Concepts",
          "Understanding CSS: Practical Applications and Styling Techniques",
          "Example: A simple CSS styling",
          "CSS Styling Example: Creating a Simple and Effective Design",
          "CSS Margin Collapsing: What It Is and How to Handle It"
        ],
        "Intermediate HTML & CSS: Building Advanced Layouts and Styling Techniques": [
          "Understanding Block-Level vs Inline Elements in HTML and CSS",
          "The Box Model Explained: How It Works in HTML and CSS",
          "Box Sizing Property: Key to Responsive Web Design",
          "CSS Pseudo-Elements: Enhancing Your Web Designs with Advanced Selectors",
          "Semantic HTML Tags: Improving Accessibility and SEO with Meaningful Markup",
          "Introduction to Flexbox: Mastering CSS Flexbox Layout for Beginners"
        ],
        "Creating a Modern Album Layout: Inspired by Bootstrap 5.3 Design Example": [
          "Building a Modern Album Page inspired by Bootstrap: A Step-by-Step Guide",
          "Styling the Header Section of Your Album Layout: Best Practices",
          "Finishing Touches: Complete Styling for the Album Header",
          "Starting the Styling of Cards: Creating Attractive Layouts",
          "Designing Button Groups: A Polished Look",
          "Completing Card Styling: Finalizing The Design Elements",
          "Final Touches: Polishing and Completing Your Album Page Layout"
        ]
      },
      "requirements": [
        "Basic Computer Skills: Familiarity with using a computer, including navigating files and folders, and using a web browser.",
        "No Prior Coding Experience Required: This course is designed for beginners, so no previous knowledge of HTML, CSS, or web development is necessary.",
        "Access to a Text Editor and Web Browser: You will need a text editor (such as Notepad++) and a modern web browser (like Chrome, Firefox, or Edge) to write and view your code.",
        "Eagerness to Learn: A willingness to explore and practice new concepts is essential. This course is structured to guide you through each topic step-by-step, making it easy to follow along."
      ],
      "description": "Unlock the potential of web development with our comprehensive course. This course is crafted for beginners who want to build a strong foundation in HTML and CSS while learning to create modern, responsive websites.\n\n\nWhat You’ll Learn:\nCore HTML and CSS Fundamentals: Start with the basics of HTML and CSS, including essential tags, syntax, and styling techniques.\nIntermediate Concepts: Dive into more advanced topics like the CSS Box Model, Flexbox, and semantic HTML to enhance your web development skills.\nReal-World Projects: Apply your knowledge with hands-on exercises, including creating your first HTML document, styling a modern album layout inspired by Bootstrap 5.3, and building responsive web pages.\nPractical Techniques: Learn to handle complex layout challenges, such as margin collapsing and box sizing, and master advanced CSS features like pseudo-elements and responsive design strategies.\n\n\nWhy This Course?\nHands-On Learning: Gain practical experience through exercises and real-world projects that reinforce your understanding.\nModern Design Practices: Learn to use the latest techniques and tools to build professional, visually appealing websites.\nExpert Instruction: Benefit from clear, step-by-step guidance that helps you build confidence and proficiency in web development.\n\n\nBy the end of this course, you’ll be equipped with the skills to create stunning, responsive websites and have a solid understanding of HTML and CSS principles that will set you apart in the field of web development. Whether you’re looking to start a new career or enhance your existing skills, this course provides the essential knowledge and experience you need.",
      "target_audience": [
        "Beginners in Web Development: Individuals who are new to HTML and CSS and want to start building their own websites with a strong foundation in web development fundamentals.",
        "Aspiring Web Designers: Those interested in creating visually appealing and responsive web designs and looking to learn practical techniques for styling and layout.",
        "Career Changers: People seeking a career transition into web development or design, and who need a comprehensive introduction to the essential skills required in the field.",
        "Hobbyists and DIY Enthusiasts: Anyone passionate about building and customizing their own websites, blogs, or online portfolios, and who wants to understand the principles of HTML and CSS."
      ]
    },
    {
      "title": "Firebase Authentication masterclass with Angular",
      "url": "https://www.udemy.com/course/firebase-masterclass-with-angular/",
      "bio": "Implement User Authentication with Facebook, Twitter, Google, Github, Email/Password, Phone, and Anonymous.",
      "objectives": [
        "Create an Angular App that showcases User Authentication",
        "Implement User Authentication using social channels like Facebook, Twitter, GitHub, and Google",
        "Build sign-in/sign-up experiences using pop-ups as well as redirects",
        "Develop User Authentication using Phone Sign-in"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Overview",
          "Introduction to Firebase",
          "Creating a Firebase App on the Firebase Console",
          "Create a Project on the Firebase Console.",
          "Setting up Firebase on an Angular App",
          "Setup an Angular App with a Firebase Project Configured in it."
        ],
        "Setting up Firebase SignIn Providers": [
          "Enabling Different Sign-in Providers",
          "Enabling Email/Password Sign-in Provider",
          "Enabling Google Sign-in Provider",
          "Enable Email/Password and Google Sign-in Provider on your Firebase Project",
          "Enabling Facebook Sign-in Provider",
          "Enabling Twitter Sign-in Provider",
          "Enabling GitHub Sign-in Provider",
          "Enable Sign-in Providers for Facebook, Twitter, and GitHub",
          "Enabling Anonymous Sign-in Provider",
          "Enabling Phone Sign-in Provider",
          "Enable Anonymous, and Phone Sign-in Providers"
        ],
        "Implementing the Front-end": [
          "Implementing the Front-end - Section Overview - Adding Styles",
          "Implementing the Template",
          "Implementing Google Sign-in",
          "Implementing Facebook, Twitter, and GitHub Sign-in",
          "Implementing Anonymous Sign-in, User Details, and Sign Out",
          "Implementing SignUp with Email/Password",
          "Implementing Sign-in with Email/Password. Toggling between Sign-in and Sign-up",
          "Implementing Phone Sign-in"
        ],
        "Refactoring Code": [
          "Refactoring Code - Section Overview",
          "Deferring Business Logic to a Service - Part 1",
          "Deferring Business Logic to a Service - Part 2",
          "Breaking the App Component into different Child Components - Part 1",
          "Breaking the App Component into different Child Components - Part 2",
          "Breaking the App Component into different Child Components - Part 3"
        ]
      },
      "requirements": [
        "Sound knowledge of TypeScript",
        "Working knowledge of ES6 or later",
        "Hands-on experience with Angular",
        "Angular CLI(1.5+) and NodeJS(Latest Version) installed.",
        "A code Editor. Preferrably Visual Studio Code",
        "A laptop or PC with 4 GB of RAM and around 100 GB+ of Harddisk"
      ],
      "description": "Learn to implement User Authentication using Facebook, Twitter, Google, Github, Email/Password, Phone, and Anonymous strategies using Firebase Authentication.\nWe'll start with understanding the Firebase Console. We'll then configure and enable several sign-in methods on Firebase Authentication Providers Section. We'll then implement User Authentication in our Angular App. Finally we'll refactor the code.\nBy the end of this course, you'll be able to implement User Authentication using social identity providers like Facebook, Google, Twitter, and GitHub. You'll also be able to implement User Authentication using Email/Password, Phone and Anonymous strategies.",
      "target_audience": [
        "Beginner Angular Developers curious about Firebase Authentication.",
        "Angular Developers looking to implement User Authentication with Email/Password combination, Phone Number, and social Open Identity providers like Facebook, Twitter, Google, GitHub etc.",
        "Developers looking to learn implementing Social Sign-in in their apps."
      ]
    },
    {
      "title": "Vue 3 and Laravel Authentication: Forgot and Reset Password",
      "url": "https://www.udemy.com/course/vue-and-laravel-authentication/",
      "bio": "Learn PHP 8, Laravel 8, Vue 3 Composition API, Laravel Sanctum, Send Emails with Mailhog, Typescript",
      "objectives": [
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Create Controllers and Run Migrations",
        "Use Laravel Sanctum",
        "Send Emails"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel": [
          "Installation",
          "Migrations",
          "Routes",
          "Register",
          "Custom Requests",
          "Laravel Sanctum",
          "Login",
          "Authenticated User",
          "HttpOnly Cookies",
          "Logout",
          "Forgot Password",
          "Reset Password"
        ],
        "Vue": [
          "Installation",
          "Navigation",
          "Register",
          "Form Submit",
          "Login",
          "Authenticated User",
          "Vuex",
          "Forgot Password",
          "Reset Password"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge",
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to authenticate using Vue and Laravel.\nIn Laravel you will learn:\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nRegister Users\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nSend Emails\nIn Vue you will learn:\nUse Composition API\nCreate components and routes\nConsume API calls\nUse Vuex\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner PHP and Javascript Developers"
      ]
    },
    {
      "title": "ASP.NET Core 2.0 Vue.JS Starter Guide",
      "url": "https://www.udemy.com/course/asp-core-vuejs/",
      "bio": "Learn how to use Vue.JS with ASP.NET Core",
      "objectives": [
        "Understand VueJS better",
        "Understand how to communicate between ASPNET API and VueJS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "ASP.NET Core & Vue.JS Project Setup": [
          "Source Code for this course",
          "Installing Template Project"
        ],
        "Vue.JS Basics": [
          "Intro to Vue.JS",
          "Components",
          "Data",
          "Templates - Interpolations",
          "Templates - Directives",
          "Databinding",
          "Models",
          "Routes",
          "Methods",
          "Axios"
        ],
        "Vue.JS Advanced": [
          "Iteration",
          "Computed Propertises",
          "Mixins"
        ],
        "Vue.JS Deep dive": [
          "Custom Directives",
          "Filters",
          "Transition and animation",
          "Vuex State Management"
        ],
        "Database Access Layer": [
          "What is Dapper?",
          "Models",
          "Entites",
          "Connecting to database",
          "Dapper Query - One to One Relationship",
          "Dapper Query - One to Many Relationship",
          "Dapper Execute",
          "Dapper Contrib - Get Methods",
          "Dapper Contrib - Insert",
          "Dapper Contrib - Update",
          "Dapper Contrib - Delete Methods",
          "Dapper Contrib - Data Attributes"
        ],
        "RESTFul Services": [
          "What is RESTFul Service?",
          "Creating API Controllers",
          "API Methods - GET",
          "API Methods - POST",
          "API Methods - PUT",
          "API Methods - DELETE"
        ],
        "Connecting Vue.JS to ASP.NET API": [
          "Get All Items",
          "Add item",
          "Updating Item",
          "Delete Item"
        ],
        "Authentication and Authorization": [
          "Understanding JWT Tokesn",
          "Authentication Setup",
          "JWT Generation",
          "Working with JWT and Vue.JS"
        ]
      },
      "requirements": [
        "C#",
        "Visual Studio",
        "JavaScript"
      ],
      "description": "Hello and welcome to the ASP.NET Core course with Vue.JS. In this course, you will be able to create an ASP.NET Core powered sites along with Vue.JS. This course will walk through the usage of Vue.JS and the main topics about it. will make sure that you understand how to use Vue.JS in a real world situation.\nFirst, let’s start with what is Vue.JS and why you need to learn about it. Vue.JS is a progressive JavaScript framework that allows you to create a really interactive web app. Vue.JS is widely used and popular framework that can do what you expect from a UI framework. It contains also state management (vuex) and routing engine. Not that only, you can have a lot of packages that already supports Vue.JS and a large base of fans that can answer your questions and help you resolve your problems. It has many of the well-known frameworks such as (Angular, React) features and even more! After an experience with other frameworks, I find Vue.JS the best framework for me as it has a small learning curve and can accomplish many things.\nThis course will walk with you to learn about Vue.JS and how you will use it with ASP.NET Core. We will have also Dapper as our ORM. Dapper, is a micro ORM that has a lot of potentials and great performance. In case you don’t know, Dapper is developed by StackExchange the creators of stackoverflow. And we will exchange data via the ASP.NET Core API. Most of our work will be on Vue.JS side to help you lower your dependency on creating Razor Pages.\nThis course will also include how to do authorization using JWT with ASP.NET Core. And how you will send data to the api and access authorized only API methods. So what are you waiting for? Join us in the ASP.NET Core with Vue.JS Course!",
      "target_audience": [
        "Web Developers",
        "Students",
        "Anyone interested in ASP NET Plus VueJS"
      ]
    },
    {
      "title": "Introduction to Node.js for Beginners",
      "url": "https://www.udemy.com/course/introduction-to-nodejs-for-beginners/",
      "bio": "Learn the basics of Node.js in practical simple and easy steps .",
      "objectives": [
        "Install Node",
        "Install Express",
        "Create a simple Express App",
        "Create your first Nodejs App",
        "Understand"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is Node.js",
          "Npm",
          "Downloading and installing Node.js",
          "Download and install sublimetext",
          "Common Npm Commands",
          "Global Objects",
          "Synchronous and Asynchronous",
          "Asynchronous vs Synchronous EventListeners",
          "Events and Emitters",
          "Example Event Emiter",
          "Callbacks",
          "Components of Nodejs Application",
          "Creating your first Nodejs App",
          "Modules and Packages",
          "Installing and using third-party packages"
        ],
        "Express.js": [
          "What is Express.js",
          "Installing Express.js",
          "Creating a simple Express App",
          "Express application generator",
          "Creating an App with Express Generator",
          "Package.json File",
          "Understanding apps.js file",
          "Editing dependencies",
          "Using Template engines with Express",
          "How to start Node. js server",
          "How to stop Node.js Server",
          "What is Routing",
          "How routing works",
          "Cloning Routing Functions"
        ],
        "Understanding the FS Module": [
          "What is the FS Module",
          "Reading Files",
          "Listing Files",
          "Writing to files",
          "Appending Files",
          "Creating directories",
          "Renaming directories",
          "Deleting files",
          "What are Streams",
          "Reading from streams",
          "Piping Streams",
          "Writing to Streams"
        ],
        "Project: Creating a Chat App": [
          "Project Introduction",
          "Creating a package.json file",
          "Installing web framework (express)",
          "Creating the app engine(index.js )",
          "Refactoring The Route Handler",
          "Creating the view (index.html)",
          "Integrating Socket.io",
          "Editing index.html to accomodate socket.io",
          "Emiting Events",
          "Broadcasting from the server"
        ],
        "Deploying your app to the internet": [
          "What is Heroku",
          "Creating Heroku user account",
          "Installing Heroku CLI",
          "Editing your index.js file",
          "Initializing git and deploying your app",
          "Challenges",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic HTML Knowledge",
        "Basic CSS Knowledge",
        "Basic JavaScript Knowledge"
      ],
      "description": "Node.js is a very powerful JavaScript-based framework/platform built on Google Chrome's JavaScript V8 Engine.\nIt is used to develop   web  and mobile applications.. Node.js is open source, completely free, and used by thousands of developers around the world. Node was built with JavaScript so it helps if you have some understanding of how JavaScript actually works.\nAlso having  some understanding of other web technologies such as HTML, CSS, AJAX is useful.\nThis course is an absolute beginners course that will teach you some Node .js basic fundamentals.\nNode is quite popular and used by some big companies like  eBay, General Electric, GoDaddy, Microsoft, PayPal, Uber, and Yahoo!\njust to  name a few. By the end of this course you will have some basic understanding of Node.js.\nWhat You Will Learn Include:\nDownloading and Installing Node.js\nDownload and install sublimetext\nSynchronous and Asynchronous\nCallbacks\nComponents of Nodejs Application\nCreating your first Nodejs App\nModules and Packages\nNpm\nInstalling and using third-party packages\nInstalling Express.js\nCreating a simple Express App\nExpress application generator\nCreating and App with Express Generator\nPackage.json File\nUnderstanding apps.js file\nEditing dependencies\nUsing Template engines with Express\nHow to start Node. js server\nHow to stop Node.js Server\nWhat is Routing\nHow routing works\nCloning Routing Functions",
      "target_audience": [
        "Beginner Programmers",
        "Beginner Developers"
      ]
    },
    {
      "title": "Learn HTML Canvas - Pixels, Particles & Physics",
      "url": "https://www.udemy.com/course/learn-html-canvas-pixels-particles-physics/",
      "bio": "From creative coding basics to advanced algorithmic art",
      "objectives": [
        "Draw shapes and images",
        "Create particle systems",
        "Learn web animation with vanilla JavaScript",
        "Create animated generative art with code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Slice & Dice Effects (optional warm-up class)": [
          "Control and animate images with code",
          "HTML, CSS & JavaScript setup",
          "How to organise anything into a grid",
          "How to draw, crop & slice images with code",
          "How to animate images with code",
          "Mouse interactivity",
          "How to find the distance between 2 points",
          "Getting direction from point A to point B",
          "Motion physics formula (friction & easing)",
          "Moving the cells around",
          "Performance optimizations",
          "Creative coding experiments"
        ],
        "Main project: Particle Images": [
          "Project setup",
          "Converting images to code",
          "How to use canvas",
          "JavaScript classes and particle systems",
          "Drawing rectangles",
          "Drawing images",
          "Drawing particle objects",
          "Effect class",
          "Code clean-up",
          "Multiple randomized particles",
          "Draw image method",
          "How to center images in canvas",
          "Particle motion",
          "Pixel analysis",
          "Coordinates and colors from pixel data",
          "Turning images into particle systems",
          "Animated particle transitions",
          "Animation on button click",
          "Mouse interactions and particle physics",
          "Creating unique animated transitions",
          "Particle assemble effect",
          "Particle print effect"
        ]
      },
      "requirements": [
        "Beginner friendly class going from HTML canvas basics to more advanced animation algorithms. Basic knowledge of HTML, CSS and JavaScript is needed."
      ],
      "description": "Learn the fundamentals of HTML canvas and discover how to develop, draw, and animate visuals and images with vanilla JavaScript. No frameworks and no libraries. I will explain all principles and techniques as we write our code line by line.\n\n\nThe HTML canvas element is used to draw graphics on a web page. We can use it as an art board and draw lines, rectangles, circles, images, curves. Today we will go deep on rectangles and images, let me show you how far we can take it. Let's dive deep into creative coding and explore the possibilities of modern front end web development.\n\n\nWe will start by drawing a simple rectangle and image on canvas. We will learn how to turn these basic rectangles into a particle system and we will teach these particles how to take shape and colours of any image.\n\n\nLet's turn images into interactive animated pixels with physics (friction, easing). Let's make those pixels react to mouse. We will also learn how to break the images apart into individual pixels and make them automatically reassemble in 4 unique different ways.\n\n\nDiscover the secrets of creative coding with me. From simple shapes to advanced algorithmic art in a single class. Have fun!",
      "target_audience": [
        "Front end web developers who want to learn more about creative coding with vanilla JavaScript"
      ]
    },
    {
      "title": "Django 2.0 from Zero to Hero and Deploy on Heroku and Amazon",
      "url": "https://www.udemy.com/course/django-2x-deploying-heroku/",
      "bio": "Learn how to develop modern web sites and web applications with Django 2.0 deploying on Heroku and static files on AWS",
      "objectives": [
        "Preparing your environment installing Python, Django and Pycharm",
        "Understanding the main Django concepts",
        "Creating the Project and Django app",
        "The Django request life cycle",
        "How to handle static and media files",
        "Creating a Full Django CRUD",
        "Security: Enabling Django login system",
        "Database relationships",
        "Preparing the project to deploy on Heroku",
        "Integrating the project with Bootstrap for better looking",
        "Using Amazon S3 as a storage for static and media files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - What to expect",
          "Preparing the environment WINDOWS - BONUS",
          "Get your local environment ready. Installing Python and Django",
          "Running your first Django project",
          "Creating you first Django App"
        ],
        "Django Workflow": [
          "Creating your first URL and View",
          "How to use Models",
          "Customizing Django Admin",
          "How does Django views works",
          "Using Django template system",
          "Using the new URL mechanism",
          "How does Django handle static files",
          "How does Django handle MEDIA files"
        ],
        "Starting the Clients Manager Application": [
          "CRUD: (Read) Listing clients",
          "CRUD: (Read) Creating new Clients",
          "CRUD - Update ( Updating Clients from the Databse )",
          "CRUD: (Delete) Removing clients from the database",
          "Create a full CRUD"
        ],
        "Security - Using Django Login System": [
          "Enabling Django Login System",
          "Login and Logout URL's"
        ],
        "Database relationships": [
          "OneToOne relationships",
          "Foreignkeys relationships",
          "ManyToMany relationships"
        ],
        "Preparing the project to deploy on Heroku": [
          "Installing the dependencies and creating the GIT repository",
          "Configuring the database and static files",
          "Deploying for the first time"
        ],
        "Styling the project": [
          "Integrating the project with Bootstrap on a CDN",
          "Styling forms with django-bootstrap-forms",
          "Styling grids and last details",
          "Updating on Heroku",
          "Publish your application on Heroku"
        ],
        "Extras": [
          "Using Amazon as a file Storage"
        ]
      },
      "requirements": [
        "It'is recommended that you have some knowledge about Python and HTML"
      ],
      "description": "In this course, we are going to cover websites and web applications using the latest version (2.0) of Django web framework.\nWe will go deep step-by-step into the Django framework understanding the whole request life cycle.\nBy the end of this course, you are going to have your own web application ( a Client manager ) published online in a highly reliable web server ( Heroku ) using the best practices in a very professional way.\nFirst steps\nIntroduction\nPreparing the environment\nInstalling Python, Django, and Pycharm\nCreating the project\nRunning the project for the first time\nCreating apps\nCreating your first URL's and views\nUsing Models in the right way\nCustomizing Django Admin\nUnderstanding Django views\nUsing the URL mechanism\nHow does Django handle static files\nHoe does Django handles Media files\nCrud\n\nPreparing the project\nCreating the list view\nCreating the Detail view\nCreating the Update view\nCreating the Delete view\nSecurity\n\nEnabling Django Login System\nLogin and Logout URL\nDatabase relationships\n\nOneToOne relationships\nForeign key relationships\nManyToMany relationships\nPreparing the project for deploying on Heroku\n\nInstalling the dependences\nCreating the Heroku account\nConfiguring the Postgres database\nConfiguring the Static files\nDeploying for the first time\nStyling the project\n\nIntegrating with Bootstrap\nStyling the forms with django-bootstrapform\nStyling grids\nReleasing a new version\nUsing Media files and Static files on AWS\n\nPreparing the project for Amazon\nCreating the Bucket on S3\nInstalling boto s3 on your project\nUpload the files to S3 for the first time",
      "target_audience": [
        "If you want to learn about web development with a very productive framework or if you know Django already but want to improve you knowledge that is the course for you",
        "We will develop a simple Customer registration CRUD and we will put it on line on Heroku, with all the best practices on web development"
      ]
    },
    {
      "title": "React Redux Ultimate - State Management (/w Typescript, JWT)",
      "url": "https://www.udemy.com/course/react-state-management-mastering-redux-and-project/",
      "bio": "Mastering Redux, React Query, JWT Authentication, Firebase, Typescript and learn a ton of advanced technique",
      "objectives": [
        "Understand how Redux work",
        "Become a react developer",
        "Understand why we should learn redux",
        "Become a better javascript developer"
      ],
      "course_content": {
        "Introduction": [
          "Course Outline",
          "Install VS Code"
        ],
        "Understand Redux": [
          "Why should we use Redux ?",
          "Understand redux concepts",
          "Setup Project",
          "Setup store",
          "The first app with redux",
          "Understand useSelector",
          "More example",
          "Why should we copy state?",
          "Redux vs React Redux Library"
        ],
        "Redux Thunk": [
          "Fetch API without redux thunk",
          "Async with redux",
          "Setup redux thunk",
          "Understand Flow of Redux (Thunk)",
          "Three status when dispatch"
        ],
        "Redux toolkit": [
          "Setup project",
          "Understand slice and immer library",
          "Dispatch action with payload",
          "Fetch API with redux toolkit",
          "Best practice with thunk",
          "extraReducers"
        ],
        "Full CRUD Project": [
          "Setup few components",
          "Fetch API",
          "Setup react bootstrap",
          "Setup JSON Server to Fake API",
          "Setup Modal & Understand how modal work",
          "Create Form",
          "Create user",
          "Lift State Up Technique",
          "Notification with react toastify",
          "Fetch users with thunk",
          "Create user with thunk",
          "Manually remove fake data",
          "Update User start",
          "Determine edit or create mode",
          "Fetch User By Id",
          "Update User end",
          "Delete User part 1",
          "Delete User part 2",
          "Add some code",
          "Light/dark mode part 1",
          "Light/dark mode part 2",
          "Load data to redux when refresh page",
          "Take your time to practice"
        ],
        "JWT Authentication & React Router DOM (latest version)": [
          "Setup Project",
          "Install Package",
          "Create component",
          "Setup react router dom",
          "Understand Nested Route",
          "Setup Backend",
          "Index Page & Link Component",
          "Design Components",
          "Setup redux",
          "Register account part 1",
          "Register account part 2",
          "Register account part 3",
          "Login account",
          "Protected Route",
          "Persist data in redux",
          "Create Post with jwt header",
          "Show all posts"
        ],
        "Firebase & Authentication": [
          "Why should we you firebase ?",
          "Setup Firestore",
          "Get document from firestore",
          "Get all documents",
          "Add document",
          "Update document",
          "Delete document",
          "Setup redux",
          "Setup component quickly",
          "Firebase Authentication",
          "Setup router quickly",
          "Observable user",
          "Set Current User",
          "Sign out"
        ],
        "React Query": [
          "What is React Query?",
          "Prepare backend",
          "Prepare frontend & setup react query",
          "React Query Devtool",
          "Understand useQuery hook",
          "IsLoading, isError and auto retry API",
          "Understand Stale Concept",
          "Pagination with React Query",
          "Fix null error",
          "Understand useMutation",
          "Invalidate Data"
        ],
        "Typescript": [
          "Setup React Typescript project",
          "Primitive Type with typescript",
          "Reference Type with typescript",
          "Work with function part 1",
          "Work with function part 2",
          "Understand Interface",
          "Optional property",
          "Understand Generic Type",
          "useState with typescript",
          "Pass Props",
          "Work with input element",
          "Work with form part 1",
          "Work with form part 2",
          "Children prop part 1",
          "Child prop part 2"
        ],
        "Convert Project To Typescript": [
          "Convert existing project to typescript",
          "Change all jsx extension to tsx",
          "Define Data Type for State of Redux",
          "Defined Type for useSelector and useDispatch",
          "Typescript for User Delete Modal Component",
          "Typescript for User Modal Component & Thunk",
          "Optional Property",
          "Type for slice"
        ]
      },
      "requirements": [
        "Basic understanding React"
      ],
      "description": "Are you ready to take your React skills to the next level by mastering state management with Redux? This comprehensive Udemy course, \"Mastering Redux,\" is designed for both beginner and intermediate React developers who want to gain a deep understanding of Redux and its integration with React applications.\n\n\nIn this course, you will embark on a journey from the fundamentals to advanced concepts of Redux, empowering you to build scalable and maintainable React applications with confidence. Our experienced instructor will guide you through a hands-on learning experience, ensuring you not only grasp the theory but also gain practical skills to implement Redux effectively in your projects.\n\n\nIn particular, with the effective learning method: \"Don't memorize anything\". In the course you will learn how to \"read documents\", something many courses out there do not cover\n\n\nMany courses out there teach you to jump straight into the redux toolkit, which is not a good way to learn. And mostly only teaches you how to \"read\" from API. Besides redux, I also show you advanced techniques, and how to fit react bootstrap and notifications into your project\n\n\nBelow are the main sections of the course:\n- Redux: this section will help you master the fundamentals of redux\n- Redux Thunk: how to integrate thunk middleware into the project\n- Redux toolkit: super fast project setup with redux, see how it differs from redux\n- Project I: the best way to learn redux is to practice. This is a project with full CRUD operations, light/dark mode. In addition, this part also helps you how to fake api very quickly\n- Project II: I'll show you how to integrate jwt and react router dom (latest version) into project.\n- Firebase: I'll show you how to integrate firebase into react projects\n- React Query: Do pagination, understand stale, catch, useQuery, useMutation\n- Typescript: Understand how to integrate typescript into react project and convert react.js to react.ts\n\n\n\n\nBy the end of \"Mastering Redux,\" you'll have the confidence and skills to implement Redux seamlessly in your React applications. Elevate your React development journey and enroll now to unlock the full potential of state management with Redux!",
      "target_audience": [
        "Beginner React Developer"
      ]
    },
    {
      "title": "How to Safely Copy and Move Your WordPress Website",
      "url": "https://www.udemy.com/course/how-to-safely-copy-and-move-your-wordpress-website/",
      "bio": "Duplicate, clone, backup, move and transfer your entire WordPress site from one location to another — like a pro!",
      "objectives": [
        "In this course, we'll copy and move a pre-existing WordPress website from one web server to another",
        "We'll focus on what each step means and WHY we do it –– so you can develop an intuitive understanding of the entire migration process",
        "By the end of this course, you'll be able to copy and move an entire WordPress website with confidence, following best practices every step of the way!"
      ],
      "course_content": {
        "Introduction": [
          "Course overview",
          "Who is this course for?",
          "Why is it so hard to move WordPress sites?",
          "Disclaimer!"
        ],
        "Getting started": [
          "Migration scenario: Moving from one webhost to another",
          "Prepping your existing site",
          "Setting up your tools",
          "Building and downloading your website package"
        ],
        "Next steps: The destination": [
          "EXTRA: What to do when you're keeping the same domain name",
          "Setting up your new location",
          "Using cPanel to create a MySQL database and user",
          "Uploading your files"
        ],
        "Let's do it!": [
          "Running the installer",
          "Site testing and cleanup",
          "WordPress migration checklist"
        ],
        "(EXTRA CONTENT) FTP Basics": [
          "Understanding FTP: File Transfer Protocol",
          "Getting your files online using FTP",
          "Editing your files online via FTP"
        ],
        "In conclusion...": [
          "Course review — and thank you!"
        ]
      },
      "requirements": [
        "A website built using the latest stable release of WordPress, hosted on a webserver or on your own local machine (NOT wordpress.com)",
        "Any FTP client (e.g. Cyberduck, FileZilla)",
        "Some basic computer skills (cutting and pasting text, saving files into folders)",
        "Familiarity with the WordPress interface",
        "A desire to learn!"
      ],
      "description": "Learn how to duplicate and transfer your entire WordPress site from one location to another — like a pro!\nWant to know the best, safest, and easiest way to copy and move your own WordPress site?\nIn this course, we'll talk about how WordPress migration works, how to prepare your existing site and your site's destination, and what tools you need to clone and move your entire WordPress site.\nWhether you plan to migrate your own WordPress website from one web host to another, from your local computer to a web server, or from a web server to your own local computer — understanding how WordPress migration works will help you feel more confident and secure about the process!\nHOW IS THIS COURSE DIFFERENT?\nMy name is Kathleen, and I've been teaching technology to beginners under the moniker Robobunnyattack! since 2009. I believe that with the right approach, anyone can learn anything.\nMy goal is to help you develop an intuitive understanding of web technologies, and how to make them work for YOU.\nThe lessons in this course are perfect for \"advanced beginners\" who:\nAre comfortable using WordPress;\nKnow (or are willing to learn) how to use FTP software to move files to and from a web server;\nKnow (or are willing to learn) how to perform some basic configuration tasks via their web hosting provider's web hosting control panel (e.g. cPanel).\nIf this describes you, then you're ready to learn how to migrate your own WordPress website!\nIn this course, we'll copy and move a pre-existing WordPress website from one web server to another. As we work together, I'll explain what each step means and WHY we do it, so you can learn more quickly and with more confidence. We'll cover:\nWhy moving a WordPress website is so complicated (and how to approach this);\nHow to prepare your existing site for a successful migration;\nFree tools you can use to automate and simplify the process;\nEssential steps for setting up your destination location;\nTesting, cleanup, and more!\nBy the end of this course, you'll be able to copy and move an entire WordPress website from one location to another, following best practices every step of the way!\nHere's a sample of what my students have to say about my other WordPress courses on Udemy:\n\"Love, love, love. . . LUUURVE RoboBunny's online lectures. I've worked a bit with WordPress here and there over the years, but RoboBunny certainly has filled in many of the missing parts and I have a much better understanding.\" —Kimberly M.\n\"This helped build my confidence to go ahead and take action. Tutor has a passion and super knowledge of her subject.\" —Tania Y.\n\"Course was just the right amount of information at the right price. A clean and concise format. Thank you.\" —Lori J.\n\"Kathleen's instruction is clear, down-to-earth, and spot on. Her style is devoid of geek-speak and enthusiastic.\" —Leslie S.\n\"Thank you Kathleen for sharing this information. ... My working life is now a lot easier thanks to your clear, concise and illuminating presentation here.\" —Paul B.\nWHAT'S INCLUDED?\nThis course includes lifetime access to over 90 minutes of step-by-step videos.\nI've included a downloadable \"WordPress migration checklist\" for you to print and keep.\nYou'll also get supplementary text lectures and links to helpful tools and resources.\nBONUS: I've also included a FREE bonus section (\"SECTION 6: FTP Basics\") explaining how FTP (File Transfer Protocol) works. Understanding how to use FTP software is essential in order to move WordPress sites. If you aren't already familiar with FTP or you need a quick refresher, you can start there!\nHOW LONG WILL IT TAKE ME?\nThis completely depends on your availability and learning preference. You can work through all the video lectures in one afternoon, or pace yourself over several days or weeks — it's up to you!\nWHAT IF THIS COURSE ISN'T FOR ME?\nThis course comes with an unconditional 30-day Udemy-backed guarantee. Try out this course for 30 days and see for yourself if this course is right for you. If you're not 100% satisfied, simply request a full refund within 30 days — no conditions, no questions asked!\nI'm confident you'll LOVE this course, and I'm excited to help you learn. Enrol now and add this essential skill to your WordPress toolbox today!\n—Kathleen Farley (aka Robobunnyattack!)",
      "target_audience": [
        "WordPress site owners and administrators who want to be able to copy and move their site with confidence",
        "Web designers seeking to strengthen their WordPress administration skills"
      ]
    },
    {
      "title": "Master Angular Fundamentals by Building a Real App",
      "url": "https://www.udemy.com/course/angular-by-example/",
      "bio": "Fast-paced and super practical Angular course.",
      "objectives": [
        "How to use Angular to build a real world app",
        "How to use Angular routes and router service",
        "How to use Angular forms",
        "How to use custom input and output property binding",
        "How to use ngIf and ngFor structural directives",
        "How to use the async pipe and the observables",
        "How to use different styles of fetching the data from the API",
        "How to use CSS flex and grid",
        "Basic UI state management with component properties",
        "How to use ng-template with template variables",
        "How to use ng-container",
        "How to use ng cli"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Home list": [
          "Home list section introduction",
          "Generate the app and add UIkit",
          "Add /homes route and new component",
          "Add mocked data",
          "Add service and fetch data",
          "Show home details",
          "Add styling",
          "Add spinner"
        ],
        "Home filtering": [
          "Home filtering section introduction",
          "Add filters buttons",
          "Add dropdown with home type filter and the toggling state",
          "Add form for home type filtering",
          "Capture selected filters",
          "Set selected filters in the URL",
          "Refactor home list to use command pattern",
          "Filter homes using URL parameters",
          "Add default filters and the highlight to the button"
        ],
        "Search": [
          "Introduction",
          "Add search component",
          "Add form control",
          "Output search to the query params",
          "Filter homes by search",
          "Set default search value",
          "Show empty message",
          "Update filtering to work with search",
          "Make search case insensitive",
          "Throttle API calls by using debounce"
        ]
      },
      "requirements": [
        "Basic knowledge of Angular"
      ],
      "description": "In this course, you will learn how to use angular framework to build an example of a home rental application. I will show you how to fetch a list of homes from a simulated backend, show a spinner and display the data with a clean responsive style. Then, I'll show you how to build a dropdown that allows you to select home types, click apply update the URL and filter the list homes. These might seem like trivial features however as you will see it shows you how to use:\nangular routes and the router service\nangular forms\ncustom input and output property binding\nngIf and ngFor structural directives\nthe async pipe and the observables\ndifferent styles of fetching the data from the API\nCSS flex and grid\nUI state management with component properties\nng-template with template variables\nng-container\nng cli\nI will not waste your time going over any slides or theory. I keep every video short to the point where show you how to build one specific thing that you can apply right now in your next angular application\nMoreover, with every video, I include two links. The first link shows what I added or changed in the code precisely line by line so you never lose track of what's happening on the screen. The second link takes you to the stackblitz page showing both the code and the application live as I wrote it for that specific video. This is super useful because you can make changes and poke around the app for every topic completely on your own without having to type the whole thing as you go along\nIf that sounds exciting, sign up now and start learning!",
      "target_audience": [
        "Intermediate Angular developers"
      ]
    },
    {
      "title": "Build A TodoList with Java, Spring Boot and React",
      "url": "https://www.udemy.com/course/build-a-todolist-with-java-spring-boot-and-react/",
      "bio": "Build a Full Stack Todolist Application Fast and Easy",
      "objectives": [
        "The student will learn the basics of RESTful API development with java Spring Boot",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Hibernate ORM with JPA",
        "Learn to consume JSON with React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Disclaimer",
          "Install Java"
        ],
        "Create Java Spring Boot Todo API": [
          "Create Java Project",
          "Create Spring Boot Project",
          "Create Spring Boot Database Connection",
          "Create Spring Boot JPA Entity",
          "Create SpringBoot Flyway Migrations",
          "Create Spring Boot Java Controller",
          "Build Get Requests in Spring Boot",
          "Build Update Requests in Spring Boot",
          "Build Delete Requests in Spring Boot"
        ],
        "Create React Todo Front End": [
          "Create React Todo Front End",
          "Build Project Structure",
          "Build Todo Service Part 1",
          "Build Todo Service Part 2",
          "Create Todo Form Part 1",
          "Create Todo Form Part 2",
          "Create Todo Form Part 3",
          "Build Todo Item Part 1",
          "Build Todo Item Part 2",
          "Build TodoTab",
          "Create TodoList State",
          "Create React Hooks to Refresh App",
          "Finish TodoList",
          "Bonus!"
        ]
      },
      "requirements": [
        "Understand basic Java",
        "Be familiar with Spring Boot",
        "Some familiarity with SQL"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use Java, Spring Boot, and React. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Java, Java, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact Hooks\nReact Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nJava Programming Language\nSpring Boot\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React, Java, and Spring Boot.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "Mastering DALL·E Artistry: AI's Creative Revolution",
      "url": "https://www.udemy.com/course/mastering-dalle-artistry-ai-creative-revolution/",
      "bio": "Unlock AI Art, Emotional Prompts, and Real-World Applications",
      "objectives": [
        "Master DALL·E's interface and setup for efficient art creation.",
        "Craft descriptive and emotional prompts for tailored art outputs.",
        "Explore and apply various art styles, from classic to modern.",
        "Utilize DALL·E for creating realistic and abstract digital artworks.",
        "Learn techniques for optimizing prompts to enhance image quality.",
        "Navigate copyright considerations for AI-generated art.",
        "Develop strategies for monetizing and selling DALL·E creations.",
        "Apply DALL·E art in real-world applications like marketing and design.",
        "Enhance images through DALL·E's refining and polishing tools.",
        "Explore future AI art tools and platforms beyond DALL·E."
      ],
      "course_content": {
        "Introduction & Foundation": [
          "Welcome to DALL·E World",
          "History and Evolution of DALL·E",
          "DALL·E Pricing, Licensing, and Setup",
          "Crafting Your First DALL·E Art",
          "DALL E Credits",
          "Understanding AI & DALL·E's Potential"
        ],
        "astery of DALL·E Prompts": [
          "Introduction to DALL·E Prompts",
          "Crafting Descriptive Prompts",
          "Exploring Emotional & Abstract Prompts",
          "DALL E in ChatGPT",
          "Combining Multiple Prompts",
          "Common Pitfalls & How to Avoid Them",
          "Optimizing Promptsfor Better Results"
        ],
        "Deep Dive into Styles & Techniques": [
          "DALL·E and Classic Art Styles",
          "Modern Art & DALL·E",
          "Abstract Imaginations with DALL·E",
          "Using DALL·E for Realistic Creations",
          "Exploring Surrealism with DALL·E",
          "Pushing DALL·E's Boundaries: Experimental Art"
        ],
        "Tools, Features & Enhancements": [
          "Overview of DALL·E's Toolset",
          "From Text Descriptionsto Detailed Art",
          "Refining & Polishing Generated Images",
          "Collaborative Art: Merging Multiple Creations"
        ],
        "Projects & Real-world Applications": [
          "DALL·E for Digital Marketing & Advertisements",
          "Book Covers & Album Art with DALL·E",
          "DALL·E in the Gaming Industry: Concept Art",
          "Crafting Unique Merchandise with DALL·E",
          "DALL·E in Education & Training"
        ],
        "Business, Monetization & Commercial Use": [
          "Copyright Considerationsfor DALL·E Art",
          "Platforms & Strategiesto Sell DALL·E Creations",
          "Pricing Your DALL·E Art",
          "Building a Brand Around AI Art"
        ],
        "Conclusion & What's Beyond DALL·E": [
          "Review & Key Takeaways",
          "Exploring Other AI Art Tools & Platforms",
          "Future Developments in AI Art",
          "Farewell & Continued Learning"
        ]
      },
      "requirements": [
        "No prior AI or art experience required; ideal for beginners.",
        "Access to a computer and internet for DALL·E platform use.",
        "Curiosity and creativity to explore digital art concepts.",
        "Basic computer literacy for navigating online tools."
      ],
      "description": "Dive into the transformative world of AI art with our comprehensive course, \"Mastering DALL·E Artistry: AI's Creative Revolution\". This meticulously designed program offers an unparalleled journey through the capabilities, techniques, and applications of DALL·E, an AI tool that is reshaping the landscape of digital creativity. Whether you're a budding artist, a seasoned creator, or simply intrigued by the intersection of technology and art, this course is tailored to unlock your creative potential and guide you through the nuances of generating art with AI.\nFrom the fundamentals of DALL·E's operation, including setup, pricing, and crafting your first piece of AI art, to mastering the art of effective prompt crafting and exploring the vast possibilities of styles and techniques, this course covers crucial aspects to elevate your artistry. Delve into the realms of classic and modern art styles, experiment with surrealism, and push the boundaries with experimental art, all through the lens of DALL·E.\nBeyond the art creation process, we address practical considerations such as copyright, monetization strategies, and real-world applications in digital marketing, book covers, concept art for the gaming industry, and unique merchandise creation. This holistic approach ensures you are well-equipped to navigate both the creative and commercial aspects of AI-generated art.\nEmbrace the future of art with us and explore how DALL·E can become your digital Picasso, enabling you to create, innovate, and possibly revolutionize the way we perceive art in the digital age. Join us to unlock your potential and become part of the AI art revolution.",
      "target_audience": [
        "Artists and designers eager to explore AI in creative processes.",
        "Digital marketers looking for innovative visual content strategies.",
        "Game developers seeking unique concept art through AI.",
        "Educators and trainers interested in incorporating AI art into teaching.",
        "Entrepreneurs aiming to monetize AI-generated art.",
        "Technology enthusiasts curious about the intersection of AI and creativity."
      ]
    },
    {
      "title": "MERN Stack Retail Store POS Application",
      "url": "https://www.udemy.com/course/mern-stack-retail-store-pos-application-reactreduxnode-d/",
      "bio": "Build a Full Stack Point Of Sales Application for Retail Stores with React , Node , Express , Mongo DB",
      "objectives": [
        "What is POS and Difference Between POS / Ecommerce Application",
        "React topics like routing , states , props , components , storage etc.",
        "Redux State Management tool to control different component states",
        "Ant Design Library. It is the world most second popular UI framework for React.",
        "One of the best part about the UI in this application is you can also generate / print a bill with the items and amount for a customer.",
        "Working with node with the combination of express and mongo DB."
      ],
      "course_content": {
        "Intro / Resourses": [
          "Promo / Github Link"
        ],
        "React Setup": [
          "React app setup",
          "Folder structure"
        ],
        "Layout Design": [
          "Layout Part-1",
          "Layout Part-2",
          "Layout Part-2"
        ],
        "Node Setup": [
          "Node Server Setup",
          "Mongo DB Connection"
        ],
        "Get Items": [
          "Adding static items data",
          "Item model and get items api",
          "Get Items UI",
          "Item Component"
        ],
        "Redux / State Management Setup": [
          "Redux Setup Part-1",
          "Redux Setup Part-2"
        ],
        "Cart Functionality": [
          "Add to Cart",
          "Cart Page",
          "Cart Quantity",
          "Delete From cart",
          "Loading"
        ],
        "Items": [
          "Items List",
          "Add Item Model",
          "Add Item Form",
          "Add Item API"
        ],
        "Edit and Delete Items": [
          "Edit Item - 1",
          "Edit Item - 2",
          "Delete"
        ],
        "Items Categories": [
          "Categories -1",
          "Categories -2"
        ]
      },
      "requirements": [
        "React Basics",
        "Javascript Basics"
      ],
      "description": "Hello , Welcome To The Course MERN Stack Retail Store POS Application.\nFirst of all....\nWhat is POS ?\nA point of sale (POS) is a place where a customer executes the payment for goods or services and where sales taxes may become payable. A POS transaction may occur in person or online, with receipts generated either in print or electronically.\nSo in this course we will teach you how to build a POS application using React , Redux , Node , Node , Mongo.\nIt is almost similar to an ecommerce application but here we don't have any user dashboards or user screens. We will have everything related to the Stores / Malls / Hotels etc.\nWe will cover the following features / concepts in this MERN Stack POS Application.\nReact / UI\nWhat is POS\nDifference Between POS / Ecommerce Application\nReact topics like routing , states , props , components , storage etc.\nRedux for State Management\nWe will make all the API calls without redux only , We just use redux for cart functionality , So you need not to be a pro in Redux.\nFor Building UI we will use the Ant Design Library. It is the world most second popular UI framework for React.\nFor normal styling we will use bootstrap classes to speedup our development process.\nOne of the best part about the UI in this application is you can also generate / print a bill with the items and amount for a customer.\nNode / Express / Mongo\nWorking with node with the combination of express and mongo DB.\nMaking complex schemas , models in Mongo DB.\nCreating Rest Full API's .\nDeploying the app to heroku\n\n\nMERN Stack: MERN Stack is a JavaScript Stack that is used for easier and faster deployment of full-stack web applications. MERN Stack comprises of 4 technologies namely: MongoDB, Express, React and Node.js. It is designed to make the development process smoother and easier.\nEach of these 4 powerful technologies provides an end-to-end framework for the developers to work in and each of these technologies play a big part in the development of web applications.\nPre Requisites\n-------------------------------------------------------------------------------\nReact\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\nRedux\nRedux is an open-source JavaScript library for managing and centralizing application state. It is most commonly used with libraries such as React or Angular for building user interfaces. Similar to Facebook's Flux architecture, it was created by Dan Abramov and Andrew Clark.\nNode\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.\nExpress\nExpress.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs. It has been called the de facto standard server framework for Node.js.\nMongo DB\nMongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License.",
      "target_audience": [
        "Fullstack Developers",
        "MERN Stack Developers"
      ]
    },
    {
      "title": "Go Full Stack With Spring Cloud Microservices and React JS",
      "url": "https://www.udemy.com/course/go-full-stack-with-spring-cloud-microservices-and-react-js/",
      "bio": "Spring Boot, Spring Cloud, React JS, Eureka Discovery Client & Server, PostgreSQL, MySQL, H2-Database, Lombok, Router",
      "objectives": [
        "Spring Boot and Spring Cloud",
        "Microservices with Spring Boot and Spring Cloud",
        "Full Stack Development with Spring Boot and React JS",
        "Eureka Discovery Server and Client",
        "Develop and design RESTful web services with Spring Boot",
        "Build and run RESTful Microservices",
        "Develop Microservices with Spring Boot and Spring Cloud"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Architecture Of All System",
          "Advantages and Disadvantages of Microservices",
          "What do We Try to Do in This Course?"
        ],
        "Setting Up Development Environment": [
          "Download and Install Java 11+",
          "Download and Install Intellij",
          "Download and Install Lombok on Intellij - Pre Intellij 2021",
          "Download and Install Postman"
        ],
        "Overview for Basic Frameworks and Tools": [
          "Spring Boot Overview - Annotations, Beans, Configuration",
          "Rest API Overview - Http Methods",
          "SQL Overview - Basic CRUD Operations",
          "Lombok Overview - Getter, Setter, Constructors"
        ],
        "Restful Web Services - Overview": [
          "@RequestParam Annotation and How does it work?",
          "@PathVariable Annotation and How does it work?",
          "@RequestBody Annotation and How does it work?"
        ],
        "Database for Microservice1": [
          "Download and Install Postgresql"
        ],
        "Microservice1 - Course Service": [
          "Source Code for the Course MicroService",
          "Overview - Architecture of Course Microservice",
          "Create Project with Spring Initializer",
          "Create Database on PostgreSQL with PgAdmin",
          "Configure Database Properties on Application Properties",
          "Implement the Course Entity Class",
          "Do you want to learn more about ID Generated Strategies? - Optional",
          "Implement the Course Repository Class with JPA CRUD Repository",
          "Implement the Course Service Class - Business Layer",
          "Implement the Course Controller Class - Rest API"
        ],
        "Overview for Spring Security - Optional": [
          "What is Authentication?",
          "What is Authorization?",
          "How does Spring Security handle Authentication and Authorization?"
        ],
        "Course Microservice - Security Implementation": [
          "Implement Security on the Course Microservice",
          "Circular Reference Error - Spring Boot 2.6+"
        ],
        "Test Spring Boot Application": [
          "Postman Overview",
          "Test the Endpoints of Course Microservice with Postman"
        ],
        "Microservice 2 - Purchase Service": [
          "Source Code for the Purchase Microservice",
          "Overview - Architecture of the Purchase Service",
          "Create Project with Spring Initializer",
          "Configure Database Properties on Application Properties",
          "Implement the Purchase Entity Class",
          "Implement the Purchase Repository Class with JPA CRUD Repository",
          "Implement the Purchase Service Class - Business Layer",
          "Implement the Purchase Controller Class - Rest API",
          "Implement Security on the Purchase Microservice"
        ]
      },
      "requirements": [
        "Basic java knowledge and a computer"
      ],
      "description": "In this course, we will create a project like an online-course-application.\nWhen I say online-course-application, we can think of it like that we will have a product-list page such as book-list, food-list or course-list. Somehow users or customers will see these product-lists and they can buy one of the products. Of course, at the end of it, this transaction will be logged.\nActually, in our application, we will try to implement these processes with different microservices.\n\n\nTo implement this application, we will use five different microservices.\nOur microservices will be api-gateway, course-service, purchase-service, eureka-discovery-service and frontend-with-react.\n\n\nIn api-gateway, we will manage APIs. This microservice will be a gateway for the whole application. To access the other services, we will use this microservice. In this microservice, we will handle user-management also. We will authorize users and if the users are authorized, other services can be available.\n\n\nIn course-service, we will manage course CRUD operations. This service will be a course-management-service.\n\n\nIn purchase-service, we will manage purchase CRUD operations. This service will store the logs coming from the course purchases. For example, the UserX bought the CourseX on DateX etc.\n\n\nOur other microservice will be eureka discovery service. To provide it we will use spring-cloud-netflix-eureka library.\nThis microservice allows services to find and communicate with each other without hard coding hostname and port.\nWith eureka service, other services can register eureka servers and all of them can reach each-other with application name.\n\n\nThese four microservices will be used for server side.\nOn the client side, we will use React to consume all data which come from these microservices. And we will provide a user-friendly UI with react.\n\n\nOur microservices dependency process will be like that.\nClients can access the system from the UI. On react-UI,users can take different actions like creating courses, purchasing courses etc. All requests coming from react-UI will go to api-gateway. So all traffic will pass over api-gateway.\nTo access the api-gateway, the client should pass the login process. Then other services will be accessible over the api-gateway.\n\n\nSpring-security will be one of the main topics in our application. Also, we will use JWT to provide security.\nHere, the important point is, we will also use secure connections among microservices. To provide it, we will use secure-key-tokens.\n\n\nAs a database, we will use MySQL, PostgreSQL and H2Database. We will use different databases to show the functionalities of microservices.\n\n\nWe will provide connections between microservices with the OpenFeign library. OpenFeign will handle connection problems in the gateway.\n\n\nAlso, on the backend to provide the connection among all microservices, we will use eureka discovery server. Eureka-discovery-server will be aware of all microservices and it helps to create connections between microservices easily.\n\n\nIn addition to these libraries, In our project, we will use lots of technologies like Spring Boot, Spring Security, Hibernate, MySQL, PostgreSQL, Maven, Lombok, JWT etc.\n\n\nOf course here, our main library will be Spring-boot. It will provide a simpler and faster way to set up, configure, and run rest API applications.\n\n\nAt the end of each microservices, we will test our applications with Postman. Postman is another amazing tool to debug networking.",
      "target_audience": [
        "All curious developers about Microservices and React"
      ]
    },
    {
      "title": "Ruby on Rails 5 Masterclass: Build Ajax web app from scratch",
      "url": "https://www.udemy.com/course/rails-5-masterclass/",
      "bio": "Learn Rails fundamental and how to build ajax web based application from scratch with Rails 5, Boostrap, jQuery",
      "objectives": [
        "Build a professional Rails application",
        "Implement AJAX into a Rails application, such as ajax server side validation, AJAX CRUD and AJAX file upload."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started with Rails": [
          "Create New Rails Application",
          "Database Configuration"
        ],
        "Working with Database": [
          "Using Database Migration to create Contacts and Groups Tables",
          "Specify the column length when working with Migration",
          "Populate Data in contacts and groups tables using Seed"
        ],
        "Route, Controller and Views": [
          "Introducing to Rails Route, Controller and Views",
          "Instegrated Bootstrap to Rails"
        ],
        "Presenting Data": [
          "Display All Contacts",
          "Display All Contacts Using Collection Rendering",
          "Show No Record Found Alert",
          "Show Contact's Avatar",
          "Pagination - Part 1",
          "Pagination - Part 2",
          "Display all contact groups from database to the sidebar",
          "Mark the selected link",
          "Make the links working"
        ],
        "Working with Form": [
          "Building a form",
          "Saving the contact data to database",
          "Validate data before saving",
          "Utilize The Rails Form Helper",
          "Make the form to be able to update contact data"
        ],
        "File Upload": [
          "Uploading and resizing Image with paperclip gem",
          "Set The Default Image (Alternative)",
          "Fix the Form's Image Preview"
        ],
        "Building a Search Form": [
          "Adding Delete Contact Feature",
          "Code Refactor",
          "Fix The Selected sidebar group's link before and after saving",
          "Adding a search form feature - Part 1 (Building a Search Form)",
          "Adding a search form feature - Part 2 (Code Refactor)",
          "Adding a search form feature - Part 3 (Using Active Record Scope)",
          "Adding a search form feature - Part 4 (Misc)"
        ],
        "Working with AJAX": [
          "Autocomplete",
          "Utilize Jbuilder to handle JSON response",
          "Implementing AJAX to validate new contact group",
          "Implementing AJAX to create new contact group",
          "Implementing AJAX to add the newly created contact group to the form"
        ],
        "Authentication": [
          "Install and configure Devise gem",
          "Customizing Navbar in the Application Layout",
          "Customizing Devise's Forms Style",
          "Fix The current user's name",
          "Creating a helper to indicate active menu item",
          "Customize Devise's redirection hook",
          "Customizing Devise Default Route",
          "Customize Devise's edit user form"
        ]
      },
      "requirements": [
        "You should have basic computer skills",
        "You should have modern Web Browser and Text Editor or IDE",
        "You have Rails 5 installed in your computer"
      ],
      "description": "With a focus on Rails and real world application, This course is an efficient way to learn Rails and AJAX and start building the applications you have been dreaming about.\nThis course contains practical and valuable information that you can use to build any Web applications. Together we will build \"My contact\", a full stack contact manager application which users can easily manage their contacts.\nThe course cover:\nRails Core concept\nBasic CRUD\nFile Uploading\nAuthentication\nAuthorization\nAJAX\nSJR\nAnd much more\nJoin me as I show you how to build full stack applications from start to finish with Rails and some of today's top technology.",
      "target_audience": [
        "Anyone who wants to learn Ruby on Rails 5 efficiently and effectively",
        "Developers who want to learn how to implement AJAX CRUD in Rails application",
        "Anyone who wants to learn how to build professional applications with Ruby on Rails"
      ]
    },
    {
      "title": "Deep dive into ASP.NET MVC by 26 Yrs Experience Trainer",
      "url": "https://www.udemy.com/course/deep-dive-into-aspnet-mvc/",
      "bio": "Completely practical approach about how Model, View and Controller participate in building Modern Web Applications.",
      "objectives": [
        "As a pre-requisite understanding of how ASP .NET WebForms worked.",
        "Deep Understanding of MVC Design Pattern and comparison with traditional ASP. NET Web Forms.",
        "You will be able to understand how Model, View and Controller communicate with each other.",
        "You will have good knowledge Model, View and Controller individually.",
        "Implement Authentication and Authorization using ASP .NET Identities Framework.",
        "Very good understanding of how Cookies and Session overcome stateless behaviour of HTTP Protocol.",
        "Configuring Web Applications."
      ],
      "course_content": {
        "Prerequisite-Introduction to Web Programming": [
          "Web Programming Introduction"
        ],
        "Prerequisite-Overview of HTML and Javascript": [
          "HTML"
        ],
        "Javascript In Body Of Document": [
          "Javascript In Body Of Document"
        ],
        "JavaScript Event Handling": [
          "JavaScript Event Handling"
        ],
        "JavaScript Mouse Event This Styles And Debugging": [
          "JavaScript Mouse Event This Styles And Debugging"
        ],
        "JavaScript Client Side Validation": [
          "JavaScript Client Side Validation"
        ],
        "JavaScript Timer Windows Library": [
          "JavaScript Timer Windows Library"
        ],
        "Prerequisite-Overview of Classic ASP": [
          "Classic ASP Introduction"
        ],
        "Classic ASP Form Handling": [
          "Classic ASP Form Handling"
        ],
        "Prerequisite-ASP.NET Introduction and Controls": [
          "ASP NET Introduction"
        ]
      },
      "requirements": [
        "Very basic knowledge of HTML and CSS - Initial Videos will provide an Inroduction to these topics.",
        "Should have good command over C# Programming Language",
        "Would require Visual Studio and SQL Express"
      ],
      "description": "Mr. Sandeep Soni, a Microsoft Certified Trainer and having 27 years of experience has participated in architecting and developing a large number of ASP.NET MVC applications and has trained more than 100,000 students. Topics covered are in-depth and not only benefits beginners but also experienced software developers.\n\n\nThis course is a full course that covers all the topics (57 modules) of ASP.NET MVC.\nCovering every topic right from basic to in-depth understanding, our online ASP.NET MVC course provides essential knowledge of MVC design patterns and applying its features to developing lightweight but large-sized web applications as in modern applications.\n\n\nThe most striking feature of OUR online ASP.NET MVC training is that it includes both theories as well as practical examples for each and every module. In addition to this, the ASP.NET MVC Interview questions provide an effective source for helping our participants to communicate effectively and confidently in any interview.\n\n\nYou can very quickly decide about our QUALITY of content after watching our Preview Videos.\n\n\nThe controller is the main function of ASP.NET MVC which decides the data from the model and processes it to view sections and controls the whole performance. The incoming user interaction is handled and gives a reply response to the user inputs.",
      "target_audience": [
        "Anyone who would like to get into building dynamic web applications from ground up."
      ]
    },
    {
      "title": "Blazor and Web Development Fundamentals with .Net 7",
      "url": "https://www.udemy.com/course/blazor-and-web-development-fundamentals-with-net-7/",
      "bio": "Learn the underlying mechanics of Blazor Server, WebAssembly and Progressive Web Applications with minimal coding skills",
      "objectives": [
        "Essential foundations and underlying mechanics of Blazor Web Applications",
        "Essential differences between Blazor WASM, Blazor Server and Blazor PWAs",
        "Microsoft's .Net7 Framework and how it supports Blazor Applications",
        "WebAssembly technology and how it supports web application development",
        "Technical fundamentals of web client/browser and server communications",
        "Signal R, the Document Object Model (DOM) and RenderTree concepts",
        "PWA manifest and service-worker concepts"
      ],
      "course_content": {
        "Part 1: A Gentle Introduction to Blazor": [
          "Introduction and prerequisites for this course",
          "What we will cover in Part 1",
          "What is Blazor?",
          "The different Blazor implementation options",
          "Blazor Server Web Applications",
          "Blazor WebAssembly (WASM) Web Applications",
          "Blazor Progressive Web Applications (PWAs)",
          "Different Hosting Models for Blazor WebAssembly Applications",
          "Summary"
        ],
        "Part 2: A Gentle Introduction to Blazor, continued...": [
          "Introduction and Outline for Part 2",
          "What is ASP.Net Core?",
          "The ASP.Net Core Framework version and Target Framework Moniker (TFM)",
          "Blazor and UI Rendering",
          "Traditional browser-server communication - How Blazor improves on this.",
          "Blazor Server-side 'Rendering'",
          "The Document Object Model (DOM) and Render Tree concepts",
          "Blazor Server-side 'Rendering', continued...",
          "Blazor WebAssembly (WASM)",
          "Summary"
        ],
        "Part3: Creating Blazor WASM and Server Applications with Visual Studio": [
          "Introduction and Outline for Part 3",
          "Set up and run a stand-alone Blazor WASM application",
          "Set up and run a Blazor Server web application",
          "Blazor WASM vs Blazor Server - Browser Demonstration"
        ],
        "Part4: Blazor WASM and Server - A Deeper Exploration": [
          "Introduction and Outline for Part 4",
          "Blazor WASM - Browser Demonstration",
          "Blazor Server - Browser Demonstration",
          "Blazor Server vs. Blazor WASM - Closing Remarks"
        ],
        "Part 5: Creating Progressive Web Applications (PWAs) with Blazor": [
          "Introduction and Outline for Part 5",
          "Set up and install a stand-alone Blazor PWA",
          "Set up an ASP.Net Core Hosted Blazor PWA",
          "PWA Closing Remarks"
        ]
      },
      "requirements": [
        "Visual Studio Community Edition (free).",
        "A laptop or PC with Windows 10 or later",
        "A basic understanding of how web applications work",
        "Very little, or basic C# or HTML coding experience will be needed for this course."
      ],
      "description": "In this course, you will learn the important underlying mechanics of all the different types of Blazor web applications. You will not have to write a single line of code to get through this course.\nI am specifically steering away from jumping into the code, because without understanding the subtle differences between the different Blazor applications, you will end up 'coding in the dark', and you will get into issues for which there is not much support for currently. For example, if you don't understand the detailed mechanics of Blazor applications, you will not understand why you are getting CORS errors when making HTTP calls from your Blazor WASM application, or why you are getting database concurrency issues with Blazor Server and EF Core. And so on...\nThe course is divided into 5 parts. The first two parts of this course will focus on the theory of Blazor. In Parts 3 to 5, we will see those theoretical concepts from Parts 1 and 2 in action.\nIn Part 1, I will discuss what Blazor is, what the different types of Blazor applications are, and how the different hosting options work. I will also go into some detail about Single Page Applications and WebAssembly technology.\nIn Part 2, I will cover the .Net7 Framework, the Document Object Model, and the Render Tree concepts.\nIn Part 3, we will start getting more hands-on. We will create and run both Blazor Server and Blazor WASM applications from within Visual Studio. We will also start comparing the two application types in Part 3.\nIn Part 4, we will go into more detail with both Server and WASM applications. There will be a big focus on the runtime differences, which we'll explore using our browser developer tools.\nThen finally, in Part 5, we'll create, run and install Blazor Progressive Web Applications (PWAs) onto our local machines. We will create 2 types of PWAs - a stand-alone PWA and an ASP(.)NetCore Hosted Application. We'll conclude Part 5 with some closing remarks about why PWAs are not always the best option for your use case, and what complications come with the development and testing of PWAs.",
      "target_audience": [
        "This course is for full-stack development beginners, who want strong foundations for Blazor web application development.",
        "This course is not for experienced developers, unless they want to revisit fundamental concepts that we all tend to forget as we continue on our coding journey.",
        "It is intended to help beginners to get up to speed as fast as possible in their web development journey."
      ]
    },
    {
      "title": "Bootstrap 5 - The Complete Guide",
      "url": "https://www.udemy.com/course/bootstrap-5-the-complete-guide/",
      "bio": "Learn Bootstrap 5, by Using it's Every Feature and by Building Real-Life Projects with HTML5, CSS3 and Bootstrap 5",
      "objectives": [
        "Learn Every Feature that Bootstrap 5 has to Offer",
        "Learn Bootstrap 5 Components, Grid System, Utilities, Classes, Widgets, and Much Much More",
        "Learn to Create Fully Responsive Websites, Admin Panels, Galleries",
        "Learn to Create High-Quality Real Life Website using HTML5, CSS3, and Bootstrap 5",
        "Learn how Properly to Use HTML5 and CSS3 using Semantic and Modern Techniques"
      ],
      "course_content": {},
      "requirements": [
        "HTML5 and CSS3 Knowledge is not Required but Suggested",
        "You don't need requirements in any Older or Current Version of Bootstrap"
      ],
      "description": "This course starts from scratch so you don't need to know any previous version of Bootstrap.\nBootstrap is a type of technology that evolves every year and it will continue to evolve in years to come. Each Bootstrap version came with new features, better implementations, and a variety of examples, but not a single version holds this much content as Bootstrap 5 holds.\nJoin me in this journey and let me teach you every feature that Bootstrap 5 has to offer, its classes, components, and utilities. Be prepared to learn, but also be prepared to build. This course is full of real-life projects that will prepare you and set you on the right track in becoming a Web Developer.\nThis Complete Guide will start slowly, as you will learn first basics of Bootstrap, a little bit of its history, and other versions. As you progress with the course, the content will change to more complex sections and in the end, it will cover every feature, step by step that Bootstrap 5 has to offer.\nThe entire course is set with clear goals, to teach you about the framework, about the technology itself but on top of that, to prepare you and turn you into a professional Bootstrap developer capable of using the framework on an extensive level, building portfolio projects, admin panels and even whole professional websites.\nThe best way to learn is to learn by building.\nFrom the very start of this course, you will realize that course will be paused from time to time, as it will require you to work with skills that you acquired to develop and build real-life projects. Talking about those projects, you can expect around 6 projects on different scales.\n- You will Create a Simple Blog Layout\n- You will Create Movie Album\n- You will Create Masonry Grid Gallery\n- You will Create Admin Dashboard Panel\n- You will Create Full-Form Validation\n- You will Create a Full Professional Website\nWhy Bootstrap 5?\nWe all know as Web Developers that we can choose from a variety of different frameworks specific for HTML, CSS, and JavaScript, but none of those has been popular like Bootstrap is. Bootstrap is around for more than 10 years and through those years of experience and its versions, it gained in popularity. We as developers would mostly work on projects that are based around Bootstrap and on top of that, other frameworks also learned from Bootstrap, and by that, learning Bootstrap will secure knowledge that you will be able to reuse for other similar Frameworks.\nAs Bootstrap is often a skill that belongs to Front End Developers, it will also lead developers into better job positions and also higher salaries. According to PayScale Front End Developers can expect Salaries in the range of $45k to $92k. So learning Bootstrap will definitely move you into a higher bracket.\nTake a leading role in your life.\nDon't wait much, through your life you will have a lot of obstacles, but you are the only one who can help you and the best way to do that is to lead yourself. Lead Yourself and make sure to take this course today. This first step will get you in front of many, so pay once and benefit for a lifetime!",
      "target_audience": [
        "Anyone that Wish to Become Front End Web Developer",
        "Anyone that Wish to Learn to Create Real-Life Websites",
        "Anyone that Wish to Become Web Developer",
        "Anyone that Wish to Learn Bootstrap"
      ]
    },
    {
      "title": "2019 Calendar App: Let's Build It!",
      "url": "https://www.udemy.com/course/2019-calendar-app-lets-build-it/",
      "bio": "Build a real world web application using HTML, CSS, Javascript, PHP and MySQL.",
      "objectives": [
        "Build a real world web application",
        "Use CSS media queries to make your pages responsive",
        "Use Javascript to create & control the operations of an application"
      ],
      "course_content": {
        "Introduction": [
          "Reviewing the Final Product",
          "About the App's Appearance",
          "The Tools I'm Using",
          "Getting the Course Files"
        ],
        "HTML/CSS - Making the Left Side": [
          "Setting up the Index",
          "Writing the Left Side Markup",
          "Writing Generic Styles",
          "Styling the Left Side"
        ],
        "HTML/CSS - Making the Calendar": [
          "Writing the Calendar Markup",
          "Styling the Calendar: Part 1",
          "Styling the Calendar: Part 2",
          "Styling the Post-its and Tooltips"
        ],
        "HTML/CSS - Creating the Popups": [
          "Setting up the Modal",
          "Creating the Theme Markup",
          "Styling Theme Popup: Part 1",
          "Styling Theme Popup: Part 2",
          "Creating and Styling the Create Note Popup"
        ],
        "HTML/CSS - Making the App Responsive": [
          "Preparing the Media Query",
          "Making the Left Side (Or top) Responsive",
          "Making the Calendar Responsive",
          "Making the Popups Responsive"
        ],
        "JS - Setting the Current Day Values": [
          "Writing the updateCurrentDates() function",
          "Continuing the updateCurrentDates() function",
          "Adding Ordinal Indicators",
          "Translating Month/Day Numbers to Strings",
          "Writing the UpdateCalendarDates() Function"
        ],
        "JS - Filling the Calendar": [
          "Using month_data",
          "Writing the fillInCalendar() Function: Part 1",
          "Writing the fillInCalendar() Function: Part 2",
          "2020 Update - Fixing Month Data",
          "Writing more Functions",
          "Changing Months on the Calendar",
          "2020 Update - Calendar Navigation",
          "Fixing the Color Problem",
          "Calendar Borders"
        ],
        "JS - Updating the Theme": [
          "Using color_data",
          "Triggering the Modal",
          "Updating Color Data",
          "Updating the Theme",
          "Adding Check Marks to the Current Theme"
        ],
        "JS - Posting Post-it Notes": [
          "Embedding Data into the Table Cells",
          "Trigger a Function when Cells are Clicked",
          "Adding post_it objects to post_its array",
          "Writing the Function to Add Notes/Tooltips to Cells",
          "Posting Notes",
          "Editing Notes",
          "Deleting Notes"
        ],
        "Final Touches Before PHP": [
          "Cleaning up the Index",
          "Note about cleanCells()",
          "Fix \"Calender\" Misspelling",
          "Refactoring Code",
          "Refactoring FillInCalendar()",
          "Re-styling"
        ]
      },
      "requirements": [
        "Know Basic HTML, CSS & Javascript"
      ],
      "description": "This entire course is one big code along, broken up into byte sized chunks.  I start by creating the markup and styling all the pieces.  The  I use JavaScript to add all the front-end functionality.  Then at the end I start using PHP and MySQL to connect to a database to make all of the changes made in the front end persistent, so that the app will remember how it was the last time you used it.\nKeep in mind that there may be some technologies used in this course that you aren't used to using.  I use Flexbox, AJAX, MySQL, etc.  These technologies aren't aren't taught in this course, as that isn't the main objective, for me, these technologies are just a means to an end.",
      "target_audience": [
        "Novice web developers who want take there skills to new level by building web applications."
      ]
    },
    {
      "title": "Build Serverless APIs with Serverless Framework and NodeJs",
      "url": "https://www.udemy.com/course/serverless-with-aws-lamba/",
      "bio": "Learn how to build and deploy Restful APIs with Serverless Framework, Node.Js, DynamoDB, and AWS",
      "objectives": [
        "Develop and deploy AWS Lambda functions properly with the Serverless Framework",
        "Learn the fundamentals of AWS Lambda",
        "Learn YAML and manage your entire deployment using code",
        "Learn how to build Serverless APIs using offline plugin",
        "Deploy Serverless APIs to AWS Provider"
      ],
      "course_content": {
        "Introduction": [
          "Creating a Service using serverless",
          "When to use Serverless",
          "Yaml Basics",
          "Creating Lambda Function",
          "Emulates AWS λ and API Gateway on your local machine",
          "Create HTTP GET and POST endpoint using API Gateway Event",
          "Access Request Parameters in Lambda Function"
        ],
        "Deploying Serverless API to AWS": [
          "Setup AWS console Account",
          "Configure AWS Credentials with Serverless",
          "Deploy Serverless API to AWS Cloud Provider",
          "Checking AWS Lambda Configs and Logs"
        ],
        "DynamoDB Basics": [
          "What is DynamoDB",
          "Tables, Items and Attributes in DynamoDB",
          "Primary Key",
          "Data Types in DynamoDB",
          "Secondary Indexes"
        ],
        "CRUD(Create, Read, Update and Delete) with Serverless and DynamoDB": [
          "Installing DynamoDB on your local Machine",
          "Define DynamoDB table in serverless.yaml file",
          "Create Table a in Local DynamoDB server",
          "Save new Record in Local DynamoDB",
          "Validate request param using Joi package",
          "Create GET Endpoint to fetch all the Records from DynamoDB Table",
          "Create GET Endpoint to fetch single Item from DynamoDB Table",
          "Create DELETE Endpoint to delete Record from DynamoDB Table",
          "Create PUT Endpoint to update Record in DynamoDB Table",
          "Create Env variables for TableName in Serverless",
          "Deploy Serverless API to AWS"
        ],
        "Learning Path to become a full-stack developer": [
          "Learning Path to become a full-stack developer"
        ]
      },
      "requirements": [
        "Knowledge of Nodejs is required",
        "Basic understanding of the AWS Cloud is preferred to take this course"
      ],
      "description": "The Serverless Framework is a free and open-source web framework written using Node.js. Serverless is the first framework that was originally developed for building applications exclusively on AWS Lambda, a serverless computing platform provided by Amazon as a part of the Amazon Web Services. Currently, applications developed with Serverless can be deployed to other function as a service providers, including Microsoft Azure with Azure Functions, IBM Bluemix with IBM Cloud Functions based on Apache OpenWhisk, Google Cloud using Google Cloud Functions, Oracle Cloud using Oracle Fn[1], Kubeless based on Kubernetes, Spotinst and Webtask by Auth0.[2]\nServerless is a cloud computing execution model where the cloud provider dynamically manages the allocation and provisioning of servers. A serverless application runs in stateless compute containers that are event-triggered, ephemeral (may last for one invocation), and fully managed by the cloud provider. Pricing is based on the number of executions rather than pre-purchased compute capacity, isn’t it the ideal framework for that project you have been planning since a long time? Well, go ahead do it.\nServerless applications are event-driven cloud-based systems where application development rely solely on a combination of third-party services, client-side logic and cloud-hosted remote procedure calls (Functions as a Service).\nMost of the cloud providers have invested heavily in serverless and thats a lot of money; with the given massive promotion and realistic offering you can safely assume serverless to be one of the most used cloud services in upcoming years. Here are some of the currently available cloud services:\nAWS Lambda\nGoogle Cloud Functions\nAzure Functions\nIBM OpenWhisk\nAlibaba Function Compute\nIron Functions\nAuth0 Webtask\nOracle Fn Project\nKubeless\nTraditional vs. Serverless Architecture\nFor years your applications have run on servers which you had to patch, update, and continuously look after late nights and early mornings due to all the unimaginable errors that broke your production. As long as you managed them, the whole responsibility of their proper functioning was on you. Serverless tends to be unlike the aforementioned, you no longer need to worry about the underlying servers. Reason being, they are not managed by you anymore and with management out of the picture the responsibility falls on the Cloud vendors. But regardless the cool features of Serverless in some cases, the traditional architecture outshines it.\nPricing\nOne of the major advantages of using Serverless is reduced cost, for years the cost of provisioning servers and maintaining that 24x7 server team which blew a hole in your pocket is gone. The cost model of Serverless is execution-based: you’re charged for the number of executions. You’re allotted a certain number of seconds of use that varies with the amount of memory you require. Likewise, the price per MS (millisecond) varies with the amount of memory you require. Obviously, shorter running functions are more adaptable to this model with a peak execution time of 300-second for most Cloud vendors.\nThe winner here is Serverless Architecture.\nNetworking\nThe downside is that Serverless functions are accessed only as private APIs. To access these you must set up an API Gateway. This doesn’t have an impact on your pricing or process, but it means you cannot directly access them through the usual IP, snap!\nThe winner here is Traditional Architecture.\n3rd Party Dependencies\nMost, if not all of your projects have external dependencies, they rely on libraries that are not built into the language or framework you use. You often use libraries with functionality that includes cryptography, image processing, etc., these libraries can be pretty heavy. Without system-level access, you must package these dependencies into the application itself.\nReinventing the wheel isn’t always a good idea.\nThe winner here is based on the context. For simple applications with few dependencies, Serverless is the winner; for anything more complex, Traditional Architecture is the winner.\nEnvironments\nSetting up different environments for Serverless is as easy as setting up a single environment. Given that it’s pay per execution, this is a large improvement over traditional servers, you no longer need to set up dev, staging, and production machines. Eventually you’d lose count of all the environments, at some point.\nThe winner here is Serverless Architecture.\nTimeout\nWith Serverless computing, there’s a hard 300-second timeout limit. Too complex or long-running functions aren’t good for Serverless, but having a hard timeout makes it impossible to perform certain tasks. A hard limit on this time makes Serverless unusable for applications that have variable execution times, and for certain services which require information from an external source.\nThe clear winner here is Traditional Architecture.\nScale\nScaling process for Serverless is automatic and seamless, but there is a lack of control or entire absence of control. While automatic scaling is great, it’s difficult not to be able to address and mitigate errors related to new Serverless instances.\nIt’s a tie between Serverless and Traditional Architecture.\nFunctions as a Service (FaaS)\nFaaS is an implementation of Serverless architectures where engineers can deploy an individual function or a piece of business logic. They start within milliseconds (~100ms for AWS Lambda) and process individual requests within a 300-second timeout imposed by most cloud vendors.\nPrinciples of FaaS:\nComplete management of servers\nInvocation based billing\nEvent-driven and instantaneously scalable\nKey properties of FaaS:\nIndependent, server-side, logical functions\nFaaS are similar to the functions you’re used to writing in programming languages, small, separate, units of logic that take input arguments, operate on the input and return the result.\nStateless\nWith Serverless, everything is stateless, you can’t save a file to disk on one execution of your function and expect it to be there at the next. Any two invocations of the same function could run on completely different containers under the hood.\nEphemeral\nFaaS are designed to spin up quickly, do their work and then shut down again. They do not linger unused. As long as the task is performed the underlying containers are scrapped.\nEvent-triggered\nAlthough functions can be invoked directly, yet they are usually triggered by events from other cloud services such as HTTP requests, new database entries or inbound message notifications. FaaS are often used and thought of as the glue between services in a cloud environment.\nScalable by default\nWith stateless functions multiple containers can be initialised, allowing as many functions to be run (in parallel, if necessary) as needed to continually service all incoming requests.\nFully managed by a Cloud vendor\nAWS Lambda, Azure Functions, IBM OpenWhisk and Google Cloud Functions are most well-known FaaS solutions available. Each offering typically supports a range of languages and runtimes e.g. Node.js, Python, .NET Core, Java.",
      "target_audience": [
        "Developers who want to learn about AWS Lambda and the Serverless Architecture",
        "Developers who want to build Serverless APIs using Serverless Framework, AWS and NodeJs"
      ]
    },
    {
      "title": "Vue 3, Vuetify and Nuxt.js: A Rapid Guide",
      "url": "https://www.udemy.com/course/vue-influencer/",
      "bio": "VueJS with Typescript, Nuxt.js, Vuetify, Composition API, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "VueJS with Typescript",
        "NuxtJS with Typescript",
        "Dispatch events with Vuex",
        "Use Vuetify",
        "Use Composition API and Options API",
        "Authentication and Authorization",
        "Use Composition API and Options API",
        "Pay with Stripe"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Vue Admin": [
          "Setup",
          "API",
          "Template",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Vuetify",
          "Pagination",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Orders",
          "Profile",
          "Vuex"
        ],
        "Vue Ambassador": [
          "Setup",
          "Template",
          "Navigation",
          "Header",
          "Watchers",
          "Route",
          "Reactive",
          "Stats",
          "Rankings",
          "Products",
          "Backend Searching",
          "Frontend Searching",
          "Backend Sorting",
          "Frontend Sorting",
          "Backend Lazy Loading",
          "Frontend Lazy Loading",
          "Seleting Products",
          "Generating Links"
        ],
        "Nuxt Checkout": [
          "Setup",
          "Template",
          "Routing",
          "Server-Side Rendering",
          "Products",
          "Submitting the Form",
          "Stripe"
        ]
      },
      "requirements": [
        "Good understanding of VueJS"
      ],
      "description": "Learn how to create an Ambassador App using Vue 3, Vuetify and Nuxt.js with Typescript. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big API.\nIn this Vue you will learn:\nUse Vue with Typescript\nUse Nuxt.js with Typescript\nUse Vuex\nHow to use Composition API and Options API\nUse Vuetify\nCreate public and private routes\nPay with Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "The Complete WordPress Website Course Tutorial",
      "url": "https://www.udemy.com/course/the-complete-wordpress-website-course-tutorial/",
      "bio": "WordPress Website Course Tutorial The Complete WordPress Website Course Tutorial Learn CMS",
      "objectives": [
        "The Complete WordPress Website Course Tutorial",
        "WordPress Website Design Best Web Page",
        "WordPress Website Course Tutorial",
        "WordPress Website design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Niche Website Elementor WordPress Website blog tutorials"
        ],
        "Registration domain name and hosting": [
          "How find domain Name and Registration",
          "how buy hosting for website",
          "how change Price Product Course in WordPress"
        ],
        "Setup Installation of WordPress website": [
          "admin Panel Dashboard of WordPress",
          "install WordPress Niche Website in Cpanel",
          "install WordPress Themes on website",
          "Install WordPress Elementor Themes pages",
          "Check Page of WordPress",
          "how publish post in Niche WordPress Website",
          "how create page on WordPress Website",
          "how look niche micro website content",
          "how start starter templates of elementor",
          "WordPress Mcqs"
        ],
        "Research Plan Website Keywords": [
          "How Find Best Keyword Idea for website",
          "How find best CPC keyword for website",
          "How find affiliate product from Amazon",
          "WordPress Mcqs"
        ]
      },
      "requirements": [
        "No Requirements"
      ],
      "description": "The Complete WordPress Website Course Tutorial\nWordPress Website Course Tutorial The Complete WordPress Website Course Tutorial\nIn this tutorial, we will be teaching you everything you need to know about setting up and running a WordPress website. We will walk you through the entire process, from start to finish, so that you can create a website that is both functional and stylish.\nComplete WordPress Website Course Tutorial\nWe will cover everything from installing WordPress to creating custom themes and plugins. We even have a full course curriculum that you can follow to learn everything there is to know about WordPress website design. So if you're looking to create a website of your own, be sure to check out this tutorial WordPress Website Course Tutorial The Complete WordPress Website Course .\n\n\nThe Complete WordPress Website Course Tutorial\nWordPress Website Course Tutorial The Complete WordPress Website Course Tutorial\nIn this WordPress Website Course Tutorial, we will be covering all aspects of setting up a WordPress website from start to finish. We will be walking you through the entire process, from choosing a hosting platform to creating your site's layout and design.\n\n\nComplete WordPress Website Course Tutorial\nWe will also discuss the different features and functions of WordPress, and how to use them to create a website that is both user-friendly and engaging.\nSo if you're looking to learn everything there is to know about setting up and running a WordPress website, this course is for you!\n\n\nThe Complete WordPress Website Course Tutorial\nWordPress Website Course Tutorial The Complete WordPress Website Course Tutorial\nIn this tutorial, we will be teaching you everything you need to know about setting up and running a WordPress website. We will walk you through the entire process, from start to finish, so that you can create a website that is both functional and stylish.\n\n\nComplete WordPress Website Course Tutorial\nWe will cover everything from installing WordPress to creating custom themes and plugins. We even have a full course curriculum that you can follow to learn everything there is to know about WordPress website design. So if you're looking to create a website of your own, be sure to check out this WordPress Website Course Tutorial The Complete WordPress Website Course Tutorial Learn CMS\n\n\nThe Complete WordPress Website Course Tutorial\nWordPress Website Course Tutorial The Complete WordPress Website Course Tutorial\nIn this tutorial, we will be teaching you everything you need to know about setting up and running a WordPress website. We will walk you through the entire process, from start to finish, so that you can create a website that is both functional and stylish.\nWordPress Website Course Tutorial The Complete WordPress Website Course Tutorial\nIn this tutorial, we will be teaching you everything you need to know about setting up and running a WordPress website. We will walk you through the entire process, from start to finish, so that you can create a website that is both functional and stylish.\n\n\nThe Complete WordPress Website Course Tutorial\nWe will cover everything from installing WordPress to creating custom themes and plugins. We even have a full course curriculum that you can follow to learn everything there is to know about WordPress website design. So if you're looking to create a website of your own, be sure to check out this tutorial!\n\n\nComplete WordPress Website Course Tutorial\nWe will cover everything from installing WordPress to creating custom themes and plugins. We even have a full course curriculum that you can follow to learn everything there is to know about WordPress website design. So if you're looking to create a website of your own, be sure to check out this tutorial!",
      "target_audience": [
        "WordPress developer",
        "WordPress Students",
        "Blogger",
        "website design developer students"
      ]
    },
    {
      "title": "Web Design How to Create a Website HTML CSS Bootstrap",
      "url": "https://www.udemy.com/course/how-to-create-a-website-html-css-bootstrap/",
      "bio": "Complete guide to learning how to build an HTML CSS website that is fully Responsive and ready for mobile devices",
      "objectives": [
        "create responsive websites",
        "use bootstrap to build websites",
        "style and create websites",
        "develop HTML and CSS websites"
      ],
      "course_content": {
        "Creating Responsive websites from scratch": [
          "HTML CSS course introduction",
          "Course Resources to create a website from scratch",
          "Course Resources",
          "Website Planning",
          "Updated Bootstrap 4 Beta"
        ],
        "Building the Website from scratch": [
          "Building HTML page Structure",
          "adding Bootstrap to a website",
          "Adding placeholder content",
          "Source Code HTML",
          "Adding Default Styling",
          "Update Logo Slogan section",
          "Create a Navbar with Active element",
          "Index Page welcome message",
          "Source Code",
          "Create a two column content area",
          "Create Footer Element",
          "Make it responsive",
          "Setting up Font Awesome",
          "Update navbar to be responsive",
          "JavaScript to Hide and Show Elements",
          "Source Code First NavBar",
          "Create another responsive Navbar",
          "Source Code Second NavBar",
          "How to add Bootstrap JavaScript Library",
          "Add Bootstrap Menu NavBar",
          "Bootstrap Menu Navbar",
          "Source Code Bootstrap",
          "Create website pages",
          "Online Code Editor",
          "Links and Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Bonus Educational Resources: Downloadable Content, Practical Examples"
        ]
      },
      "requirements": [
        "Basic HTML and CSS skills",
        "Computer access",
        "Desire to learn"
      ],
      "description": "Learn how to build a modern fully responsive website from scratch!\nStep by step training including everything you need to create a website from scratch.  By the end of this course you will have the resources and understanding to create websites adding CSS to HTML.\nModern websites are ready for any size device including mobile phones, tablets, and desktops. This course will show you how to create websites that are modern and responsive.\nThis course has everything you need to start\nincluding source code\ntop resources\nstep by step training\nfull HD videos\nwire-frame and web design planning\nfull portfolio project from start to finish\nhow to add Bootstrap for rapid web development\nLearn how to create website structure with HTML and prepare to add styling.   Use CSS to make your website come to life.  Then make it responsive!\nI'm here to help you learn how to make websites and ready to answer any questions you may have.  Discover the freedom of creating and styling websites from scratch.  Are you ready, let's begin learning how to make a website from scratch.",
      "target_audience": [
        "anyone who wants to build a website",
        "anyone who wants to learn how to apply CSS to create a website",
        "anyone who wants to learn more about using Bootstrap"
      ]
    },
    {
      "title": "JavaScript Complete for beginners with real world Apps",
      "url": "https://www.udemy.com/course/javascript-complete-and-comprehensive/",
      "bio": "The Easiest way to learn JS. A practical tutorial that builds real world mini Projects/Apps in JavaScript from Scratch.",
      "objectives": [
        "JavaScript Complete Syntax and Building blocks",
        "Building Real World small but practical javascript Applications",
        "Better understanding of DOM ( Document object Model )",
        "Working with Javascript Events",
        "Jquery Quick Starter Kit for FREE",
        "Students can Start applying their learned skills in the real world.",
        "Grasp how Javascript works and it's fundamental concepts",
        "Understand any type of JS script easily",
        "Learn how to Implement your own logic in JS",
        "Avoid common coding problems and mistakes other Javascript coders make"
      ],
      "course_content": {
        "intro to Javascript course and instructor": [
          "intro to Javascript course and instructor"
        ],
        "Introduction and syntax": [
          "Introduction of JavaScript",
          "Course Overview according to JavaScript Understanding and Learning",
          "Getting the Best Editor",
          "Internal JavaScript",
          "COURSE CODES"
        ],
        "Get Access on Web Content |Better understanding of JS": [
          "Access HTML with Commenting Functionality in JavaScript",
          "User Response in Javascript",
          "Playing with Website Content Using JS",
          "Hide the Contents of Web using JS",
          "How?"
        ],
        "Building Blocks": [
          "Variables in JavaScript",
          "Arrays in JavaScript",
          "Arrays Functions in Javascript",
          "Sending message to console pannel",
          "IF Conditional Operator in JavaScript",
          "Functions of Javascript",
          "While Loop Structure in JS",
          "For Loop Structure in JS",
          "Operators in JavaScript"
        ],
        "Objects in JS": [
          "Number types in Javascript",
          "Working with Javascript Date Objects",
          "String Objects in Javascript",
          "User Define Objects"
        ],
        "A Deeper look in Document Object Model": [
          "Understanding DOM of Javascript",
          "Elements of Javascript",
          "Creating and Changing Elements in javascript"
        ],
        "Events": [
          "what are JS Events",
          "Javascript Form Event",
          "Time and interval (building simple slider using javascript)",
          "Showing & Hiding Form Content using Form Event"
        ],
        "Changing User Interface CSS": [
          "How to Tackle CSS in javascript",
          "Set & Reset CSS Class by javascript",
          "Minification",
          "What Next"
        ],
        "JQuery Quick Starter Kit": [
          "JQuery Promo",
          "Linking and Applying JQuery",
          "CDN",
          "Working with JQuery and JQuery UI"
        ],
        "BONUS": [
          "Bonus | Important Lecture",
          "For More"
        ]
      },
      "requirements": [
        "Student must have a Basic knowledge about html and css. just basic.",
        "No Requirements of basic JS syntax at all !! i will show you everything from scratch. You dont have to worry.",
        "Any computer will do . (Windows, Mac, PC or Linux)",
        "Passion to learn exciting new skills",
        "You don’t need to buy any software."
      ],
      "description": "JavaScript is very powerful programming client side language that added a life into modern websites and hardware equipment . it is the Essential language that modern developers need to know. That's why i have created this Amazing elite class course where you will use these technologies to create actual projects and will learn their usage in real world.Truly knowing JavaScript will get you a job, and enable you to build quality web and server applications.\nThis course is for Absolute Beginners OR Web Designers ( who dont know anything about JS) or Students who never created a single Application in Javascript. This course will teach you the core knowledge you need to deeply understand what JavaScript is, learn how JavaScript works, and how to implement it in your web from scratch.\nWe will start from the ground level, and we will move towards some real time Projects. In this course we will look at everything from scratch.\nThis course is designed in more logical way from easy to complex modules step by step. Here is description of the course\nRoad Map:\nIntroduction and syntax\nGet Access on Web Content\nBetter understanding of JS\nBuilding Blocks & Fundamentals\nObjects in JS\nA Deeper look in Document Object Model\nEvents in javascript\nChanging User Interface\nCombine CSS and JS Application\nJavascript Form Applications\nJQuery Quick Starter Kit for FREE\nThis course will focus on all the Fundamentals , Building blocks and  Advance Concepts of Javascript in complete details which are essentials for beginners. In this Course students will build Applications after every section to see the real world representation of JS.\nBonuses:\nJQuery Quick Starter Kit for FREE\nFull Coding Exercises\nTips / Tricks\nIn case if the course does not meet your expectations you can get a full re-fund immediately . Also i will answer all of your questions on top priority.\nNow if you want to learn JavaScript and start your professional career, Take this course now\n--------------------------------------------------------------------------------------------------------------------\nThis course is for complete beginners and for those who want to see Real World JS representation.\n-----------------------------------------------------------------------\nEnroll Today!\nLets start together.",
      "target_audience": [
        "Complete Beginners who want to learn JS,",
        "Non-programmers who find development attractive and dont know where to start",
        "Students with some knowledge about JS, who struggle to make a Professional Project",
        "Designers who want to implement java script in their web",
        "Aspiring Web Designers",
        "People who desire a new career path"
      ]
    },
    {
      "title": "Mastering React.js by answering top interview questions",
      "url": "https://www.udemy.com/course/react-interview-questions/",
      "bio": "Crack the Interview with React.js. Master Core Concepts and Expert Techniques for Landing Your Dream React.js Job",
      "objectives": [
        "How to prepare for ReactJS Interview.",
        "Learn new ReactJS concepts.",
        "Learn how ReactJS works behind the scenes.",
        "Improve your coding skills with clean implementation."
      ],
      "course_content": {
        "Beginner Questions": [
          "Components Part 1",
          "Questions asked often",
          "Components Part 2",
          "Virtual DOM",
          "ES5 vs ES6",
          "CodePractice",
          "Scope Code Practice",
          "Code Practice 3",
          "useEffect"
        ],
        "Intermediate Questions": [
          "Pattern 1",
          "Mounting",
          "Fix the code",
          "memo1",
          "memo2",
          "hook",
          "unique IDs"
        ],
        "Advanced Questions": [
          "HOC",
          "Pattern2",
          "SSR",
          "Redux",
          "Manipulating UI",
          "Non-Blocking UI",
          "Delaying Updates"
        ],
        "How to prepare for a job Interview?": [
          "Strategies"
        ]
      },
      "requirements": [
        "You need to know the basics of ReactJS.",
        "A computer(MacOS, Windows, or Linux) is required to install NPM.",
        "Desire to learn ReactJS in more detail.",
        "Nothing else! It’s just you and your ambition to get started."
      ],
      "description": "Are you ready to tackle the challenges of today's React.js interview process head-on? With competition fiercer than ever and interview questions becoming increasingly tricky, it's essential to have a comprehensive understanding of in-demand technologies like React.js. But how confident are you in your React.js skills? Do you feel equipped to succeed in that interview?\n\n\nI understand that the interview process can be daunting, but with this comprehensive curriculum, expert guidance, you'll uncover the missing pieces in your tool case that are essential for success.\n\n\nIn this React.js course, we go beyond the basics to ensure you're not just proficient, but truly mastery-level. This hands-on approach ensures you not only understand the theory, but can apply it in real-world scenarios. Through a series of coding challenges, you'll develop the problem-solving skills crucial for interview success.\n\n\nWhether you're aiming for a junior, mid-level, or senior React.js position, this course will empower you with the skills and confidence to tackle any React.js interview question that comes your way. I assure you that upon completing this course, your proficiency in React.js will significantly improve.\n\n\nPlease Note that basic ReactJS knowledge is required\n\n\nEnroll now and step into your React.js interviews with the expertise and assurance to land your dream job.",
      "target_audience": [
        "Developers or future developers who want to prepare for ReactJS interview",
        "People who want to get a job as a frontend developer."
      ]
    },
    {
      "title": "Basics of Web Development in 3 Hours",
      "url": "https://www.udemy.com/course/basics-of-web-development/",
      "bio": "Learn HTML5, CSS3, JS and Build Your Own Website just in 180 Minutes!",
      "objectives": [
        "How a Website Works",
        "Basics of HTML",
        "Basics of CSS",
        "Basics of Javascript"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Course Overview"
        ],
        "Learn HTML5": [
          "First HTML Website",
          "Text Elements",
          "Text Formatting",
          "Text Quotations",
          "Comments",
          "Links",
          "Images",
          "Favicon",
          "Tables",
          "Lists",
          "iFrames",
          "Symbols, Characters & Emojis",
          "HTML Forms",
          "HTML Audio / Video / Embedding",
          "Project Files"
        ],
        "Learn CSS3": [
          "3 Types of CSS",
          "Colors & Backgrounds",
          "Text Styles",
          "Margins & Paddings",
          "Links",
          "Id & Class Selectors",
          "Display",
          "Tables",
          "Align & Float",
          "Opacity",
          "Background Images",
          "Gradients",
          "Custom Icons",
          "Custom Fonts",
          "Project Files"
        ],
        "Learn Javascript": [
          "Basics of JS",
          "3 ways to use JS",
          "Variables",
          "Operators",
          "Alert & Input",
          "Arrays",
          "Functions",
          "ID Selectors",
          "Conditions",
          "Project Files"
        ],
        "Project - Barbershop Website": [
          "Coming Soon"
        ],
        "Deployment & Completion": [
          "What's next?"
        ]
      },
      "requirements": [
        "A computer with a good internet connection"
      ],
      "description": "Learn about the very basics of HTML, CSS, JS and learn how you can build your own websites in just 3 hours.\nStart from scratch to learn how to create a basic HTML5 structured website.\nHTML5 web page structure\nelements and tags\nformatting and quotations\nusing comments\nline breaks, links and images\niframes, emojis, forms\naudio, video, embedding\nCSS styling\ncolors, backgrounds\nlinks, display, opacity\nJS Basics\nvariables, arrays, operators\nloops, conditions, input\nThis Specialization covers how to write syntactically correct HTML5 and CSS3, and how to create interactive web experiences with JavaScript. Mastering this range of technologies will allow you to develop high quality web sites that, work seamlessly. During the course you will develop a professional-quality website for a barbershop. Enroll in this course today and master the basics of HTML, CSS and JS.\nBuy this course today and this is what you'll get\n3 Hours of Explanations + Hands-on Coding to make you understand the basics of Web Development\nCompletely understand HTML, CSS, JS\nWork with 10+ HTML Elements and Practice Activities\nWho is Bihan Mahadewa?\nBihan Mahadewa is your instructor for this entire course. He is the youngest instructor on the entire Udemy platform with top-rated courses. Bihan runs a successful edTech startup and has been creating online courses for the last 4 years. He has 90K+ students and a 4.4+ star average rating on the instructor profile. Bihan is an individual who is passionate about teaching coding and is also qualified with a degree and a master's in computer science from Westminister University, UK.\nAs an instructor Bihan's goal is to provide you with the skill that you need to tackle problems and create solutions with technology. Let's get started with this course now...",
      "target_audience": [
        "Anyone who wants to start learning Web Development"
      ]
    },
    {
      "title": "Starting with Git & GitHub",
      "url": "https://www.udemy.com/course/starting-with-git-github/",
      "bio": "All about Git and GitHub",
      "objectives": [
        "Learn the world's most popular code repository.. Git!",
        "Learn to use GitHub to host public code repositories",
        "Understand the most commonly used Git commands",
        "Use GitHub's amazing repository management utilities",
        "Branch and Merge code like a pro!",
        "Understand how to use a Git repo on your local machine",
        "Use Pull Requests to initiate a code review",
        "Learn how to participate in an open-sourced project on GitHub",
        "Discover the benefits of a rich GitHub repository collection",
        "Understand what Git and GitHub are, and how they can make you a significantly better developer ... and much, much more!"
      ],
      "course_content": {
        "Welcome to Starting With Git and GitHub": [
          "Introduction",
          "Git Defined",
          "GitHub Defined",
          "The Development Workflow",
          "Installing Git Locally"
        ],
        "Using Git": [
          "Introduction",
          "Getting Things Started",
          "Managing Files",
          "Working with a Repo",
          "A Local Workflow"
        ],
        "Using GitHub": [
          "Introduction",
          "Working with Remote",
          "An Extended Workflow",
          "Pull Requests",
          "Branching & Merging"
        ],
        "Additional Features": [
          "Introduction",
          "GitHub Pages",
          "GitHub as a Safety Net",
          "GitHub Integrations",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have:",
        "A at least a modest knowledge of HTML and JavaScript. The student should be familiar with how Unix commands are executed in a terminal and should have at least a very basic understanding of Unix file management commands. If the student has only some, or even none of these skills, he/she will still benefit from this course greatly, but may need to pause a video in progress to perform some additional background research. This is encouraged, as it'll only make for a better overall experience and net benefit.",
        "NO Git or GitHub EXPERIENCE IS REQUIRED!!!"
      ],
      "description": "Any IT professional or casual developer anticipating a solid understanding of how Git and GitHub work in open-sourced and private development projects needs to go through this course and absorb all of its contents. Anyone desiring to learn how Git and GitHub are designed, administered, and used needs the knowledge and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how to effectively participate in a project manage with Git and/or GitHub.",
      "target_audience": [
        "This course was built for software developers who need to understand how to use source code management systems, Git in particular.",
        "This course is designed for those developers who need to learn Git and the use of GitHub to be able to effectively participate on a team-based project that is managed with Git.",
        "Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how Git and GitHub are designed and used in a software development environment.",
        "Learn Git's easy to follow workflow to properly manage code"
      ]
    },
    {
      "title": "ChatGPT: Create a Hospital Management System using ChatGPT",
      "url": "https://www.udemy.com/course/harness-the-power-of-chatgptcreate-a-revolutionary-hospital/",
      "bio": "Master ChatGPT and learn the secrets to using it effectively when coding.",
      "objectives": [
        "How to design and implement a MySQL database",
        "How to integrate ChatGPT technology for natural language processing and voice recognition",
        "How to use PHP for server-side scripting to interact with the database and process user input",
        "How to effectively use ChatGPT to design any project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing Sublime Text Editor"
        ],
        "Layout Design": [
          "Login and Registration Interface",
          "Creating the Database",
          "Connecting the Pages"
        ],
        "Creating Admin Dashboard": [
          "Admin Dashboard",
          "Inserting Data into Admin Dashboard"
        ],
        "Creating Doctor Dashboard": [
          "Doctor Dashboard"
        ],
        "Creating Patient Dashboard": [
          "Patient Dashboard"
        ],
        "Customizing the Pages": [
          "Adding some Features",
          "Adjusting the Footer",
          "Changing the background Image"
        ],
        "Creating the Appointments Database": [
          "Booking appointments database"
        ],
        "Summary": [
          "Tips and Conclusion"
        ]
      },
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Welcome to my online course on how to develop hospital management using ChatGPT.\nIn this course, you will learn how to build a hospital management system from scratch.\nHow to design and implement a MySQL database.\nHow to integrate ChatGPT technology for natural language processing and voice recognition.\nHow to use PHP for server-side scripting to interact with the database and process user input.H\nAnd how to effectively use ChatGPT to design any project.(\nAs healthcare becomes increasingly digitized, hospitals and healthcare providers must have efficient and effective systems in place to manage patient data, appointments, and medical records. My course will equip you with the skills and knowledge necessary to build a state-of-the-art hospital management system that meets these needs.\nThroughout the course, you will work on a project that involves designing and implementing a hospital management system, step-by-step. You will begin by building a database using MySQL and PHP to store patient information, including medical history and appointment schedules. You will then integrate ChatGPT technology to enable natural language processing, allowing patients to interact with the system via text or voice commands.\nNext, you will use HTML and CSS to design a user-friendly front-end interface for the hospital management system, complete with a dashboard for administrators and patients. You will also learn to incorporate security measures into your system to protect patient data and ensure confidentiality.\nI will guide you through each step of the process, real-world examples to help you develop a deep understanding of the concepts and techniques involved in developing the hospital management system design. By the end of the course, you will have full knowledge of how you can effectively program using ChatGPt even if you are just a beginner.\nJoin today and take the first step towards becoming a skilled programmer.",
      "target_audience": [
        "A programmer who wants to learn how to use ChatGPT to design a project.",
        "Anyone who wants to lean how to write clean codes",
        "A freelance who wants to learn how to effective use ChatGPT"
      ]
    },
    {
      "title": "Vue 3 and Golang: A Practical Guide",
      "url": "https://www.udemy.com/course/vue-go-admin/",
      "bio": "Go APIs, Vue 3 Composition API, Typescript, Vuex, MySQL, Upload Images, Export CSV",
      "objectives": [
        "Use Go with Fiber Framework",
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Go with MySQL",
        "Use Vue 3 with Typescript",
        "Dispatch events with Vuex",
        "Use Composition API",
        "Upload Images",
        "Export CSV files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Go": [
          "Installation",
          "Fiber Framework",
          "Pointers",
          "Database",
          "Packages",
          "Structs",
          "Realize",
          "Migrations",
          "Request Data",
          "Register",
          "Login",
          "Jwt",
          "Cookies",
          "Authenticated User",
          "Logout",
          "Json Output",
          "Middlewares",
          "Users",
          "Methods",
          "Users CRUD",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Pagination",
          "Profile",
          "Products",
          "Interfaces",
          "Uploading Images",
          "Orders",
          "Ignore Columns",
          "Export CSV",
          "Raw SQL",
          "Permission Middleware"
        ],
        "Vue": [
          "Installation",
          "Template",
          "Components",
          "Router",
          "Ref",
          "Child Components",
          "Form Submit",
          "Register",
          "Redirecting",
          "Reactive",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Pagination",
          "Watchers",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Vuex",
          "Vuex Modules"
        ]
      },
      "requirements": [
        "Some knowledge of Go and Javascript is preferred but not required"
      ],
      "description": "Learn how to create an Admin App using Vue 3 and Deno.\nIn Go you will learn:\nUse the Fiber framework inspired by express.js\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV files\nIn Vue you will learn:\nUse Vue with Typescript\nUse Vuex\nHow to use Composition API\nCreate classes, interfaces\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner Javascript and Go Developers"
      ]
    },
    {
      "title": "Coding HTML5 animations & banners made easy",
      "url": "https://www.udemy.com/course/html5-animations-using-javascript-greensock/",
      "bio": "Through a case study, learn how to easily create animations for the web using HTML, CSS and Greensock JS library (GSAP).",
      "objectives": [
        "Use Photoshop to export images",
        "Take measurements from Photoshop",
        "Organise, code and style an HTML file",
        "Animate HTML elements using TweenMax library from Greensock"
      ],
      "course_content": {},
      "requirements": [
        "Have some very basic knowledge of HTML & CSS",
        "Basic photoshop Skills"
      ],
      "description": "This tutorial is mini project based where we will produce an HTML5 animated banner. Using a PSD file as asset, I will guide you through all the steps to exactly reproduce the banner in HTML before animating it. This tutorial will cover the following sessions :\n- Export images from PSD,\n\n- Organise folder by creating and linking HTML, JS, CSS files,\n- Create HTML file,\n- Style HTML elements by taking measurements from PSD,\n- Animate the HTML elements using Greensock Javascript Library.\n\n\nWe will start by exporting the contents from the PSD, writing the HTML codes, adding CSS styles and finally use the Greensock Tweenmax library to animate the banner.\nThis course is for students who already have some basic knowledge about HTML, and wish to progress further by doing some more advanced styling and produce animations. If you don't have any HTML knowledge, you can still take the course and you will understand what it is all about. It will also help students reproduce an HTML document from a any PSD.",
      "target_audience": [
        "Anyone who wants to create animations for the web."
      ]
    },
    {
      "title": "Learn Vue Js From Scratch",
      "url": "https://www.udemy.com/course/the-vuejs-bootcamp-with-project-vuejs-32vuexrouter/",
      "bio": "Learn everything about Vue.js 3.X with real-time project implementation along with some interesting plugin integrations",
      "objectives": [
        "To Develop Single Page Application",
        "Lifecycles in Vue",
        "What is Components & Dynamic Components in Vue ?",
        "Routers in Vue",
        "State Management pattern Library (VUEX)",
        "Rendering Methods",
        "Watchers & Slots",
        "Useful plugins integration in Vue like Datatable,Charts etc.",
        "Much More...."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of HTML,CSS,Javascipt"
      ],
      "description": "Vue.js is getting more popular day by day among the JavaScript frontend frameworks which are present in the market. Vue.js more flexible in terms of learning and merging, it can be easily merged with any other big project without any issues. Also, its very much easy to learn as compare to other frontend frameworks that’s one of the reasons why vue.js is getting popular among the developers. Choosing vue.js as the frontend development skill can be best decision because vue.js is widely growing framework.\nThis course is designed for all type of developers means anyone can take this course though learner is new to frontend frameworks or learner already knows other frameworks and willing to learn vue.js.\nOnly thing you needed to take this course is the basic knowledge of HTML, CSS, JavaScript. There is no need that you should have knowledge about backend development.\nWhat we will learn in this course?\nIn this course we will be covering almost all topics related to the Vue.js & they are as Follows:\nVirtual DOM\nData Binding\nComponents\nEvent Handling\nAnimation/Transition\nComputed Properties\nTemplates\nDirectives\nWatchers\nRouting\nLightweight\nVue-CLI\nVUEX\nDynamic Components\nDynamic Routing\nCross Component Communication\nHow to work with APIs in Vue.js\n\n\nAlong with the concepts of vue.js we will also learn following concepts into our course:\nHow to Integrate datatable in vue.js?\nHow to Integrate chart.js in vue.js?\nHow to Integrate Admin LTE 3 in vue.js?\nHow to use Json Server for dummy APIs?\nHow to use Faker.js for dummy Database?\n\n\nEnjoy the Course!\nThank You!",
      "target_audience": [
        "Web Application Developers",
        "Frontend Framework Learners"
      ]
    },
    {
      "title": "Accessible Design",
      "url": "https://www.udemy.com/course/accessible-design/",
      "bio": "How to Create Accessible Material",
      "objectives": [
        "Create accessible material",
        "Understand what accessibility means",
        "Find and follow accessibility laws",
        "Understand technical requirements and user needs",
        "Access your current documents for accessibility",
        "Create new material that is accessible",
        "Use checklists for Word, Excel, PDFs, lectures, web pages, and PowerPoint slides",
        "Test your material with accessibility checkers",
        "Develop a process you can use in your own work",
        "Cultivate an accessible mindset"
      ],
      "course_content": {
        "Introduction to Accessibility": [
          "Welcome",
          "Introduction",
          "Module 1 Quiz"
        ],
        "Getting Started Designing for Accessibility": [
          "Getting Started with Accessibility",
          "Accessibility Laws",
          "Discover Your Timeline",
          "Technical Requirements",
          "User Needs",
          "Putting it All Together",
          "Module 2 Quiz"
        ],
        "Using a Step-by-Step Process": [
          "The Process",
          "Step 1 Use a Checklist",
          "Step 2 Create Material Using an Accessibility Mindset",
          "Step 3 Make Changes Section by Section",
          "Step 4 Review and Test",
          "A Note About Achecker",
          "Step 4b Using Achecker",
          "Step 4bb Using WAVE",
          "Step 4bbb Additional Accessibility Checkers",
          "Step 4c Testing with Screen Readers",
          "Step 4d Screen Reader NVDA Demonstration",
          "Step 5 Create a Template",
          "Step 6 Repeat the Process",
          "Module 3 Quiz"
        ],
        "Designing Accessible Documents": [
          "Common Accessibility Requirements",
          "Reviewing a Web Page with Achecker",
          "Reviewing Web Pages with WAVE",
          "Accessible Word Documents and a Checklist",
          "Reviewing a Word Document",
          "Accessible PowerPoint Slides and a Checklist",
          "Reviewing PowerPoint Slides",
          "Accessible Excel Spreadsheets and a Checklist",
          "Reviewing an Excel Workbook",
          "Revisiting the Excel Checklist",
          "Module 4 Quiz"
        ],
        "Exploring Free Resources": [
          "Free Resources for Module 1",
          "Free Resources for Module 2",
          "Free Resources for Module 3",
          "Free Resources for Module 4",
          "Module 5 Quiz"
        ],
        "Conclusion": [
          "Summary"
        ],
        "Bonus Section": [
          "Bonus Material and Next Steps"
        ]
      },
      "requirements": [
        "A desire to create accessible material",
        "A basic knowledge of Microsoft Office programs like Word, PowerPoint and Excel",
        "A general understanding of how websites work",
        "No accessibility knowledge needed"
      ],
      "description": "Learn how to create accessible material including Word documents, PowerPoint slides, basic Excel worksheets, and more by assessing your current documents and creating new ones using accessibility tools and guidelines.\nAccessible design means designing for everyone and putting your audience first. Start by understanding accessibility laws and technical requirements. Look at common disabilities and learn how small changes allow you to reach many more people. Learn to use a process that includes checklists and accessibility checkers. Following an accessibility process helps you systematically cover all areas of document design and accessibility without the worry of missing something.\nCreating material with accessibility in mind gives you an advantage over those who react to user needs and legal requirements after the fact. Why go back and fix documents when you can be proactive and create material for everyone up front? Put user needs first and create accessible documents, slides, worksheets, webpages, and more.\nWhy this course?\nI have designed a process that works. My unique perspective on accessibility stems from my insider knowledge of communication, course design, disabilities, user needs, and education from my work as a course designer, learning disability consultant, and professor.\nI know how overwhelming it can be to understand accessibility laws and technical requirements, so I’m able to walk you through the process of creating accessible information quickly and efficiently.\nI show you how the legal, technical, and practical pieces of accessibility fit together and take you from understanding the basics to creating your own accessible documents. You'll learn how to evaluate material and fix documents. I share my own process and I provide you with examples, checklists, and free resources to help you get started.\nI created this step-by-step course from 20 years of experience in accessibility and communication. Currently, I’m a college professor who teaches both computers and communication online and in face-to-face courses, so I know the barriers that people face and the importance of creating accessible material.\nOver the years, I’ve often found a gap between those who create material and those who understand the technical side. This course closes that gap by showing you how accessibility laws, user needs, and technical requirements fit together, how to create accessible material and where to get help when you need it. We’ll look at actual documents, slides, web pages and more to determine if they’re accessible and if not, how to fix them.\nYou’ll finish the course with a toolbox that you can use in your own work and a proactive design mindset that will give you a competitive edge.\nThis Course Includes\nvideos with step-by-step demonstrations\ndownloadable documents and worksheets\noverview diagrams\ncharts\nchecklists\nquizzes\n\n\nDisclaimer: The information in this course is educational and intended to help people understand accessibility. This course does not give legal advice. You are responsible for checking and complying with the laws of your area.",
      "target_audience": [
        "Educators, designers, and business people who want to create accessible material including documents, charts, slides, and web material",
        "People who want to create accessible material in print and online"
      ]
    },
    {
      "title": "MERN Stack Development with React , Redux , Node 2021",
      "url": "https://www.udemy.com/course/mern-stack-development-with-react-redux-node-2021/",
      "bio": "Learn MERN Stack Development with React + Redux as Front End and Node + Express as Backend By doing 15 Hands-On Projects",
      "objectives": [
        "React",
        "Redux",
        "Node",
        "Express",
        "Mongo",
        "MERN"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "What is MERN"
        ],
        "React Introduction": [
          "What is React",
          "What is component",
          "JSX Overview"
        ],
        "ES6 Basics": [
          "ES6 Intro",
          "Let Keyword",
          "Const keyword",
          "Arrow Functions",
          "For of loop",
          "Template Literals",
          "Spread operator"
        ],
        "Create Your First React App": [
          "Hello World in React",
          "React Project Structure",
          "Debugging React App"
        ],
        "React Components": [
          "Components Intro",
          "Class Components",
          "Functional Components",
          "Parent and Child Components"
        ],
        "States and Props in Components": [
          "What is a State",
          "setState in class components",
          "Props in class components",
          "Props in functional Components"
        ],
        "Event Handling": [
          "Event Handling in class components",
          "Event Handling in functional components"
        ],
        "CSS in React": [
          "Inline CSS",
          "Local CSS",
          "Manipulating CSS using Events"
        ],
        "Projects - 1 Counter App": [
          "Counter Application"
        ],
        "Life Cycle in Class compoents": [
          "Class Components Life Cycle"
        ]
      },
      "requirements": [
        "Javascript Basics"
      ],
      "description": "MERN Stack Development with React , Redux , Node 2021\nReact is an open-source, front end, JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\nRedux is an open-source JavaScript library for managing application state. It is most commonly used with libraries such as React or Angular for building user interfaces. Similar to Facebook's Flux architecture, it was created by Dan Abramov and Andrew Clark.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser\nMERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js frontend framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and really any frontend JavaScript framework can work.\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework, and Node.js the popular and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nCourse Curriculum\nES6 Basics\nSingle Page Applications\nReact into\nComponents\nStates and props\nCSS in React\nReact Hooks\nLife Cycle Methods\nReact Router\nContext API\nNode JS\nNode JS Modules\nExpress Js\nExpress JS Routing\nMongo DB\nMongo DB Basic Operations\nMongo DB and Node JS Connections\nWorking with Postmon\nConnecting React and Node\nMERN Hello World\nMERN CRUD Project\nREDUX Intro\nState Management\nReducers , actions , stores , payloads\nCombine Reducers\nRedux Persist\nRedux THUNK\nRedux for MERN Stack Apps",
      "target_audience": [
        "Front End Developers",
        "Javascript Developers",
        "Fullstack Developers",
        "MERN Stack Developers",
        "Fullstack Developers"
      ]
    },
    {
      "title": "Material-UI 5 and React | Learn by building projects",
      "url": "https://www.udemy.com/course/material-ui-and-react-learn-by-building-projects/",
      "bio": "Learn Material UI-Frontend Library without the boring jargon. Intermediate course using React and Materia-UI.",
      "objectives": [
        "Build 2 real-world responsive websites",
        "Learn to use Figma to speed up development process",
        "Learn how to set up your theme for consistent look of your website",
        "Configure your styles to create custom layouts",
        "Learn how to create responsive websites with Material-UI"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Styling components in Material-UI": [
          "Using inline styles",
          "Use styled() to create customizable Button component",
          "Use styles object to create and style customizable Button"
        ],
        "Material-UI Components": [
          "Button component",
          "Typography component",
          "Box component",
          "Paper component",
          "Divider component",
          "Link component"
        ],
        "[Hands-on] - First project - Creative Agency Landing Page": [
          "Project Intro",
          "Environment Setup",
          "Project Theme-Palette setup",
          "Project Theme - Typography setup",
          "Creating reusable Button component",
          "Building Drawer component",
          "Building Header component",
          "Building Navbar component",
          "Styling Header component",
          "Building Hero section",
          "Styling Hero component",
          "Building Card component",
          "Styling Card component",
          "Building Creative Agency section",
          "Styling Creative Agency section",
          "Refactor Creative Agency section",
          "Building Experience section",
          "Styling Experience section",
          "Building Contact section",
          "Styling Contact section part 1",
          "Override default nested components styles",
          "Building Footer section",
          "Styling Footer section",
          "Final code refactoring - Intro",
          "Adding navigation with React-Router",
          "Adding Drop-down menu and finishing navigation refactoring",
          "Adding form validation with Formik and Yup"
        ],
        "[Hands-on] - Second project - Online Language School Website": [
          "Project Intro",
          "Environment Setup",
          "Project Theme - Setup",
          "Building Navbar component",
          "Building Drawer component",
          "Building Search Input Component",
          "Building Header component",
          "Building Hero section",
          "Styling Hero section",
          "Hero section adding additional styles to theme",
          "Building Featured Courses section",
          "Styling Featured Courses section",
          "Building Featured Cards section",
          "Styling Featured Cards section",
          "Building Benefits section",
          "Styling Benefits section",
          "Building Become Instructor section",
          "Styling Become Instructor section",
          "Building Subscribe section",
          "Styling Subscribe section",
          "Building Footer Section",
          "Styling Footer Section",
          "Creating Layouts setting up routes with React Router",
          "Building Breadcrumbs component",
          "Building Course Description component",
          "Building Current Status component",
          "Refactore Course Details Screen",
          "Building Course Details component",
          "Styling Course Details Component",
          "Building Courses component",
          "Building Learn Courses component",
          "Building Content component",
          "Styling Content component",
          "Building Featured Courses Screen",
          "Building Featured component",
          "Styling Featured Component",
          "Building All Categories component",
          "Building Select Order component",
          "Styling Select Order component"
        ]
      },
      "requirements": [
        "You should know the basics of CSS, HTML, REACT",
        "Mac or Windows Computer"
      ],
      "description": "Want to advance your skills as a frontend developer and improve your knowledge of Material UI-Frontend Library? Need to know how to build breath-taking websites without the complicated coding?\nDesigned for those who learn by doing, this course is geared towards building on your basic skills and taking them to the next level.\nIf you have a basic understanding of programming languages and comprehension of what makes an excellent digital user experience, then this is the course for you.\nUsing Material UI-Frontend Library might seem intimidating but it’s a useful and highly sought-after skill for developers of all abilities. Being able to implement pre-built components, and create custom ones, can save hundreds of hours of coding. This course aims to teach you how to properly use Material UI in conjunction with React so you can build stunning websites faster.\n\nBy the end of this course, you will\n\nGain confidence using Material-UI\nLearn how to make any project responsive with breakpoints\nLearn how to customize  theme and make you website design consistent\nFind new ways to use components\nReduce the hours of complicated coding\nBuild on pre-existing designs\nLearn how to use Figma to speed up development\nImprove user experiences\nUnderstand how and where to implement UI components\n\nBuild professional websites in less time\n\nCreating websites is a time-consuming business, especially if you have to start at the very beginning, creating code from scratch. This course will show you how to use UI-Material frontend library to build responsive and stunning websites.\nThe UI-Frontend Library contains hundreds of pre-built components which you can use immediately without any editing if you find it necessary. Alongside the pre-built components, you can use the customisations options to create your own unique designs. Perfect for creating beautiful projects without the hassle of complicated coding.\n\nPerfect for developers who are still honing their skills\n\nMaterial UI-Libraries are perfect for those who are still learning. Experienced developers have poured hours into creating the perfect components on UI-Libraries and as it is open source you can use and edit them as you see fit.\nThis allows you to harness the most up to date and effective interfaces with ease, so it makes sense that should join this course and learn how to make the most of the thousands of quality components.\nThe benefit of using these interfaces is that you can use any of the components you wish, edit them to suit your needs, or eliminate certain aspects altogether making the whole process so much simpler.\n\nBuild Your Own Projects\n\nLearning is more effective when you immerse yourself in the content. Instead of trawling through hours of jargon-filled text blocks, this course encourages you to learn through doing.\nYou’ll build your own projects as you move through the topics, harnessing new skills and honing old ones.\nDesigned for immersive, real-time learning, this course will give you all the knowledge you need to create powerful projects without the long-winded and time-consuming explanations.\nFirst, we’ll work together to build a Creative Agency Website using React and Material UI before moving on to the second project in this course; an Online Language School.\nThe aim of completing these projects as you move through the course is to provide you with the opportunity to use your newfound skills in a realistic setting and have a solid foundation to build upon your existing knowledge.\nAt the end of the course, not only will you have discovered some brilliant skills, but you’ll also have two perfect projects to show off your capabilities.\n\nTake your projects to the next level\n\nNot only should a website look beautiful, but it also needs to provide a great user experience. If your website doesn’t respond properly, navigate to where it should, or complete the appropriate actions users aren’t going to visit your site and you’re less likely to get repeat work as a developer.\nBy joining this course, you will gain an understanding on how to use UI-Frontend library to ensure the users digital experience is exactly as it should be, simple, effective and memorable. No more buggy websites that take an age to respond to input. Just quality, responsive sites and happy clients.\n\nContents and Overview\n\nYou will complete almost 7  hours of immersive video tutorials.  You will need to possess a basic understanding of CSS, HTML and React in order to get the most out of this course.\nYou’ll learn how to build beautiful websites with effective user interfaces. You’ll gain a better understanding of how to make websites that are mobile friendly through in-depth, step by step video instruction, so you’ll never feel overwhelmed.\nBy the end of the course, you will have developed a clearer understanding of how to use Material UI-frontend libraries as well as harnessing some powerful skills to enable you to create your own stunning websites in less time.\nWith clear tutorials and one-to-one support available for any questions you might have, this course is ideal for those who are ready to take the next step towards building their career as a frontend developer.",
      "target_audience": [
        "Anyone that wants to get better at creating website with Material-UI",
        "React developers looking for an easier, faster way to get up and running with clean, consistently designed applications",
        "React developers who want to master responsive design"
      ]
    },
    {
      "title": "Basic Java Programming with IntelliJ IDEA",
      "url": "https://www.udemy.com/course/intellij-idea-the-basic-java-programming-course/",
      "bio": "Take your first step into the world of programming with this beginner course on Java. Become a programmer today!",
      "objectives": [
        "You will have the basic knowledge of Java programming as well as an understanding of the popular IDE, Eclipse.",
        "Learn how to use basic Java tools",
        "Create beginner programs with Java",
        "Learn the fundamentals of programming that you will need in any programming career"
      ],
      "course_content": {
        "Basic Java with IntelliJ IDEA": [
          "Introduction",
          "IDE Download and Installation",
          "Creating Projects and First Line of Code",
          "String and Integer Variables",
          "Quiz 1",
          "Math Functions with Integer Variables",
          "The If Statement",
          "Nested If Statements and Additional Operators",
          "Quiz 2",
          "The While Loop",
          "The For Loop",
          "Retrieving User Input",
          "String and Integer Parsing",
          "The Character Variable and Parsing",
          "The Double Variable and Parsing",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "This is a beginner level course. No experience needed. Tools will be attained through course."
      ],
      "description": "Welcome to my Basic course on Java Programming with IntelliJ IDEA!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as taught several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in a fun and easy manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nJava, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Java over any other language. Of course, it goes without saying that Java is an excellent language, but do you know what is required of you to start programming Java?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course.\nI help you:\nInstall your IDE\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nas well as BONUS methods and code!\nWhat about IntelliJ IDEA? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several lessons that will help you get comfortable with the IDE as well as more adept at program creation.\nGo no further if you're looking for the course that will guide you into the world of programming! With my course I can guarantee that the knowledge you learn will help you get a head-start in Java programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Students wanting to learn Java programming from the beginning"
      ]
    },
    {
      "title": "HTML5 and CSS3 Interview Questions & Answers",
      "url": "https://www.udemy.com/course/html5-and-css3-interview-questions-answers/",
      "bio": "Most commonly asked HTML5 & CSS3 interview questions with answers. Apply confidently for Full Stack Web Developer jobs.",
      "objectives": [
        "Commonly asked Interview Questions & Answers on HTML5 and CSS3",
        "Prepare for Web Designer / Web Developer job interviews",
        "Free Downloadable booklet of HTML5 and CSS3 Interview Questions & Answers",
        "Become a Web Developer / HTML Developer / CSS Developer",
        "Prepare for Front End Engineer jobs",
        "Prepare for Full Stack Developer (MERN, MEAN) interviews"
      ],
      "course_content": {
        "Part 1 - HTML5 and CSS3 Interview Questions & Answers": [
          "Part 1 - HTML5 and CSS3 Interview Questions & Answers"
        ],
        "Part 2 - HTML5 and CSS3 Interview Questions & Answers": [
          "Part 2 - HTML5 and CSS3 Interview Questions & Answers"
        ],
        "Part 3 - HTML5 and CSS3 Interview Questions & Answers": [
          "Part 3 - HTML5 and CSS3 Interview Questions & Answers"
        ],
        "Part 4 - HTML5 and CSS3 Interview Questions & Answers": [
          "Part 4 - HTML5 and CSS3 Interview Questions & Answers"
        ],
        "Part 5 - HTML5 and CSS3 Interview Questions & Answers": [
          "Part 5 - HTML5 and CSS3 Interview Questions & Answers"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the HTML5 and CSS3 Interview Questions & Answers course by Uplatz.\n\n\nUplatz brings you this training on the most commonly asked interview questions and answers on HTML5 and CSS3.\nBy learning and understanding deeply the popular interview questions (with answers) of HTML5 and CSS3, you can confidently apply for Web Developer / Frond End Developer / Full Stack Engineer (MERN, MEAN stacks) roles.\nThis course explains the solutions to common questions asked in the recent Web Developer (HTML and CSS) interviews and comes with a freely downloadable booklet on the same.\nHTML5 and CSS3 interview questions tutorial will help you crack the job interviews which can be a turning point in your career!\nWith these top hand-picked HTML/CSS interview questions, you will be able to gain sound knowledge on HTML5 and CSS3 concepts and their practical usage in web development & design.\n\n\nBackground\nHTML5 is the latest version of the HTML language, HTML stands for Hyper Text Markup Language, it’s a universal World Wide Web Markup language which allows to create and design web pages to be viewed on the internet.\nHTML5 supports all existing web pages.\nThe new features of HTML5 include:\nSupport media element like video and audio\nLocal storage\nSupporting some new elements and custom attributes\nNew form elements like url, date, range, time, color etc.\nCSS is the key presentation technology that is used in website design. CSS stands for Cascading Style Sheets. CSS is a standard style sheet language used for describing the presentation (i.e. the layout and formatting) of the web pages.\nPrior to CSS, nearly all of the presentation attributes of HTML documents were contained within the HTML markup (specifically inside the HTML tags); all the font colors, background styles, element alignments, borders and sizes had to be explicitly described within the HTML.\nAs a result, development of the large websites became a long and expensive process, since the style information were repeatedly added to every single page of the website.\nTo solve this problem CSS was introduced in 1996 by the World Wide Web Consortium (W3C), which also maintains its standard. CSS was designed to enable the separation of presentation and content. Now web designers can move the formatting information of the web pages to a separate style sheet which results in considerably simpler HTML markup, and better maintainability.\nCSS3 is the latest version of the CSS specification. CSS3 adds several new styling features and improvements to enhance the web presentation capabilities.\nSome key features of CSS3 include:\nYou can easily apply same style rules on multiple elements.\nYou can control the presentation of multiple pages of a website with a single style sheet.\nYou can present the same page differently on different devices.\nYou can style dynamic states of elements such as hover, focus, etc. that isn't possible otherwise.\nYou can change the position of an element on a web page without changing the markup.\nYou can alter the display of existing HTML elements.\nYou can transform elements like scale, rotate, skew, etc. in 2D or 3D space.\nYou can create animations and transitions effects without using any JavaScript.\nYou can create print friendly version of your web pages.\nHTML5 and CSS3 together bring enhanced functionalities in web page development like multi-media support to add audio/Video files, canvas, real-time communication, local storage, and robust design. Embracing this technology will surely benefit you and your organisation.\n\n\nHTML5 Interview Questions (some examples)\n\n\n1) What is HTML5?\nHTML5 is the latest version of the HyperText Markup Language that can be referred to the WWW (World Wide Web) primary language, this markup language enhances a text file with bits of code, and this code which we can say as “markup” describes the structure of the document.\nHTML5 provides some standard features like that of CSS, HTML, JavaScript, and DOM, which in turn will reduce the requirement of external plugins. It’s more markup to replace scripting, better error handling, etc. HTML5 is device independent.\nHTML5 introduces some new features that can be used to change the way of user interaction with documents including:\nAdding new parsing rules to enhance flexibility.\nAdding New attributes.\nAllow offline editing.\nSupport (Web SQL), – A common standard for storing data in SQL databases.\nSupport Protocol and MIME handler registration.\n\n\n2) What is the difference between HTML and HTML5?\nDifferences between HTML and HTML5 are given below:\nHTML5 has high-level video and audio support. High-level video and audio support is not a part of the version and specifications in the previous HTML.\nCanvas, SVG and other virtual vector graphics are supported in HTML5. In HTML, if we want to implement vector graphics, that was only possible by using third party library like VML, Silver-light, etc.\nIn HTML5, SVG and MathML can be used in text. This is not possible in HTML.\nIn HTML5, Web SQL database, application cache and web storage is used as permanent storage. Browser cache can be used as temporary storage in HTML.\nHTML5 is more mobile friendly. HTML is less mobile friendly.\nIn HTML5, Doctype declaration is simple and easy. Doctype declaration is long and complicated in HTML.\nHTML5 allows drag and drop effect. HTML does not allow drag and drop effect.\nAttributes of Async, charset, and ping are available in HTML5. These attributes are not available in HTML.\nHTML5 supports JavaScript to run in the background. HTML does not support JavaScript to run within the web browser.\nWe can draw shapes like rectangle, circle, and triangle in HTML5. It is not possible to draw shapes like rectangle, circle, triangle etc. in HTML.\n\n\n3) What is <!DOCTYPE>? What are the different types of <!DOCTYPE> that are available?\nThe <!DOCTYPE> declaration provides instruction to the web browser to understand what information it should be display, and the need to start with <!DOCTYPE> declaration. In HTML5, DOCTYPE declaration is very short, and case-insensitive, and <!DOCTYPE html> is written at the top of every HTML5 page.\nThe following DOCTYPE are also supported in HTML5:\n<!DocTYpe html>\n<!dOCtype html>\n<!doctype html>\nThere are 3 types of DOCTYPES as mentioned below:\nStrict Doctype\nFrameset Doctype\nTransitional Doctype\n\n\n4) What are the new tags in Media Elements in HTML5?\nThe new tags in Media Elements in HTML5 are enlisted below:\n<audio>: Apply for multimedia contents like sounds, audio streams or music, embed audio content without the requirement of any additional plug-in like flash player.\n<video>: Apply for video content like video streams or movie clip, embed video content etc.\n<source>: Apply for multiple media resources in media elements, such as audio, video, picture etc.\n<embed>: Apply for an external application or embedded content (a plug-in).\n<track>: Apply for text tracks in the media elements such as video or audio. This tag is used for subtitles or caption files while the video media is playing.\n5) What is a tag in HTML5?\nA tag is a special content in HTML5, which is surrounded by an angle bracket (<,>). A slash (/) symbol is used to close the tag after completing the block.\nE.g.\n<title> This is my Browser </title>\nAn HTML5 tag is a set of characters that develop a formatted command for a web page. These formatted commands communicate and send the instruction to the Browser.\n\n\n6) What is the minimum number of HTML5 tags that are required to create a Web page?\nMinimum 3 HTML5 tags are required to create a Web page, such as (<HEAD>, <BODY>, <HTML>).\n\n\n7) What is the importance of Drag and Drop in HTML5?\nDrag and Drop is the most important User Interface concept which makes it easy to grab an object and Drag it at the place you want with the help of a mouse click.\nSome common features that are mostly used by Drag and Drop operation include move, link or copy.\nWe can drag an image using elements, type = <img draggable = “true”>, to make an image draggable and set the draggable image attribute to true.\n\n\n8) Explain new Form input types in HTML5\nHTML5 has 14 new forms input types:\nDate: This is a Date picker, we can pick a date by using type = “date”.\nWeek: This is a Week picker, we can pick a week by using type = “week”.\nMonth: This is a Month picker, we can pick a month by using type = “month”.\nTime: This is a Time picker, we can pick the time by using type = “time”.\nDatetime: This is a combined date and time, we can pick the combination of date and time by using type = “datetime”.\nDatetime-local: A combined local date and time, we can pick the combination of local date and time using type = “DateTime-local”.\nEmail: Allows one or more Email Addresses, we can enter multiple email addresses using type = “email”.\nTel: Allows different phone numbers around the world. A phone number is validated by the client-side. We can enter a phone number using type = “tel”.\nSearch: Allows to search queries by input text. We can enter multiple queries using type = “search”.\nNumber: Allows inserting a numerical value with additional attributes such as min, max. etc., and we can enter multiple numerical values using type = “number”.\nUrl: A url input type, that is used for the web address. In a single url, we can use multiple attributes using type = “url”.\nColor: Allows to select multiple colors, we can pic multiple color using type = “color”.\nRange: Allows to insert a numerical value within a specific range, Range is similar to the number but it is much specific. We can enter a numerical value within a range using type = “range”.\nPlaceholder: Allows to display a short hint (usually in a light color) in the input fields, before we enter the value. We can write a short hint in the input field by using type = “placeholder”.\n\n\n9) What is image map in HTML5?\nImage maps are a combination of URL and images, where clicking on these images (clickable area of the image) will open different new web pages.\nTwo types of image maps are available in HTML5, i.e. client side and server side:\nThe client-side image map is created by using two elements <area> and <map>, where the map holds the map information and the area element takes the attributes to define each section of the map. Server-side image map created by using <usemap> attribute, the usemap attribute is the name of our map.\n\n\n10) How do you write a copyright symbol on a web browser page?\nIn order to write a copyright symbol, we need to type © or © in an HTML5 file.\n\n\n11) How to optimize website assets?\nWe need to understand some basic optimization rules, in order to optimize website assets. Initially, we should decrease the download size and make fewer http requests.\nTo optimize website assets we can follow the below techniques:\nFile compression\nFile concatenation\nCDN Hosting\nOffloading assets\nRe-organizing\nRefining code\n\n\n12) What is the use of MathML Element in HTML5?\nThe word MathML (Mathematical Markup Language) is a markup language, that is used to show scientific and mathematical expression on the web. MathML is a form of XML (extensible markup language) to describe the Math notation.\nWe can use <math>…</math> tags inside the HTML5 documents for implementing MathML element.\n\n\n13) What are the various formatting tags in HTML5?\nHTML5 has some old and new formatting tags as given below:\nMarked text: Represents highlighted text for Reference purposes. We can use <marks> tags for text highlight.\nDeleted text: Specifies the deleted block of text. We can use <del> tags to implement a deleted text.\nEmphasized text: Defines the emphasized text. We can use <em> tags to implement an emphasized text.\nInserted text: Inserts a block of text into a document. We can use <ins> tags to implement an inserted text.\nSmall text: Display inserted text in a small size. We can use <small> tags to implement a small text.\nSuperscript text: This is a superscripted text. We can use <sup> tags to implement a superscript text.\nSubscript text: This is a subscripted text. We can use <sub> tags to implement a superscript text.\n\n\n14) Why do we use HTML5?\nHTML5 supports animation, drawing, audio, video, etc and it easily embeds a video on the web page. It does not require any additional software like Flash for watching videos.\nSome of the important reasons to use HTML5 are given below:\nLegacy and cross-browser support\nBetter interactions\nSmarter storage\nCleaner code\n\n\n15) What is a hyperlink? Does it only apply to text?\nThe hyperlink is a link that allows a user to move from one web page to another web page when clicked. Hyperlink concept is used on text and as well as image, and we can convert an image into a link with the help of <a href = “ ”….</a>> tags.\n16) Explain the concept of web storage in HTML5\nWeb storage provides the facility to store the data of our web applications locally into the user’s browser. It can store up to 10 MB data. Web storage helps to increase the performance of our applications.\nThere are two types of web storage that are used to store data locally in HTML5:\nLocal storage: This stores the data that will not expire or clear automatically when a user closes or reopens a browser.\nSession Storage: This stores data for one session only (i.e. a user who is surfing the internet or website). Once the browser is closed, session data will automatically delete from the web browser.",
      "target_audience": [
        "Anyone aspiring to become a Web Developer / Web Designer",
        "Front End Developers - HTML, CSS, JavaScript, JQuery",
        "Web Developers & Designers",
        "PHP Web Developers",
        "Full Stack Developers and HTML Developers",
        "Mobile App Developers/Designers",
        "Game Developers (OOP, JavaScript Game Engines, CSS)",
        "Application Developers",
        "Technical Architects",
        "Newbies and Beginners"
      ]
    },
    {
      "title": "Learn By Example: PHP For Dynamic Websites",
      "url": "https://www.udemy.com/course/learn-by-example-php-for-dynamic-websites/",
      "bio": "Super-practical PHP: cookies, sessions, login authentication, MySQL integration, Object Oriented PHP and lots more!",
      "objectives": [
        "Apply advanced constructs such as cookies, sessions and object oriented programming correctly",
        "Mitigate basic web security risks by sanitizing and validating user input",
        "Build a robust login authentication system using MySQL to allow users to sign up and log into your site",
        "Harness the power of programming to build intelligent, interactive and personalized web sites"
      ],
      "course_content": {
        "You, This Course, and Us!": [
          "You, This Course, and Us!"
        ],
        "Installing and setting up PHP": [
          "What is PHP?",
          "Installing PHP (Windows)",
          "Installing PHP (Mac)"
        ],
        "Basic Constructs In The PHP Language": [
          "Example 1 : Ensure PHP is installed and running on your server",
          "Example 2 : PHP outputs HTML",
          "Example 3 : Variables - containers of data",
          "Example 4 : Data Types - strings, integers, booleans, doubles",
          "Example 5 : Decisions using If-Else and Switch Statements",
          "Example 6 : Strings - single quotes, double quotes, what's the difference?",
          "Example 7 : Logical Operators",
          "Example 8 : Introduction to Web Forms",
          "Example 8 : The GET Request",
          "Example 8 : The POST Request and differences between GET and POST"
        ],
        "Web Forms, Validating And Sanitizing User Input, Mitigating Security Risks": [
          "Example 8 : Web Form Processing",
          "Example 9 : Superglobals",
          "Example 10 : The htmlspecialchars() function and XSS mitigation",
          "Example 10 : Sanitizing user input",
          "Example 11 : Validating user input",
          "Example 11 : Putting it all together",
          "Configure sending email using a Gmail account (Windows)",
          "Configure sending email using a Gmail account (Mac)",
          "Example 12 : Write code to send mail"
        ],
        "Intermediate Constructs In The PHP Language": [
          "Example 13 : Introduction to arrays",
          "Example 13 : Associative arrays",
          "Example 13 : Multidimensional arrays",
          "Example 14 : For, While And Do-While Loops",
          "Example 14 : Break And Continue - P2",
          "Example 15 : Introduction to functions",
          "Example 15 : Pass by Value, Pass By Reference, Default Values",
          "Example 16 : Local Variables, Variable Hiding",
          "Example 16 : Global and Static Variables"
        ],
        "PHP and MySQL - A Well Oiled Integration": [
          "MySQL Introduction",
          "Enabling MySQL and using phpmyadmin (Windows)",
          "Installing MySQL (Mac)",
          "Using MySQL Workbench (Mac)",
          "Getting PHP and MySQL to talk to each other (Mac)",
          "Example 17 : Connecting, Running Queries, Closing a Connection",
          "Example 18 : Creating a table, Inserting rows",
          "Example 19 : Running select queries",
          "Example 20 : prepared statements"
        ],
        "Cookies And Sessions - Stuff Which Makes PHP Cool": [
          "Example 21 : Introduction to cookies",
          "Example 21 : Setting and accessing cookies",
          "Example 21 : Deleting a cookie",
          "Example 22 : Introduction to sessions",
          "Example 22 : Creating and using sessions",
          "Example 22 : Destroying sessions",
          "Example 23 : Passing session ids automatically without cookies",
          "Example 23 : Working with sessions without cookies"
        ],
        "Build A Login Authentication System From The Ground Up": [
          "Steps to build a login authentication system",
          "Example 24 : Including files for code reuse",
          "Example 25 : Add signed up users to the Users table",
          "Example 25 : The sign up form and protection against Cross Site Request Forgery",
          "Example 26 : Logging in and authenticating a user",
          "Example 26 : Redirecting to a login success page",
          "Example 27 : Checking whether a user is already logged in",
          "Example 28 : Logout"
        ],
        "Advanced Constructs in PHP: Object Oriented Programming": [
          "What's the big deal about classes?",
          "Example 29 : Meet your very first class",
          "Example 29 continued: Blueprints and houses, classes and objects",
          "Example 30 : The constructor and the destructor",
          "Example 31 : Public and private access types",
          "Example 32 : Inheritance and modeling is-a relationships",
          "Example 32 : Working with base and derived classes",
          "Example 33 : The protected access type",
          "Example 34 : An object can have multiple forms, polymorphism",
          "Example 35 : Final and abstract",
          "Example 36 : Trust static variables to be strange even in classes!",
          "Example 37 : Constants, as opposed to variables",
          "Example 38 : Interfaces, the contract which a class adheres to"
        ],
        "Some random useful stuff": [
          "Example 39 : Filters are more powerful than you first imagined",
          "Example 40 : Headers are metadata about browser content"
        ]
      },
      "requirements": [
        "No prior programming experience needed, this course starts at zero",
        "A little basic HTML, CSS and SQL will be helpful for some of the examples - not really required though!"
      ],
      "description": "Super-practical PHP: Learn, by example, how to build a smart website with cookies, sessions, login authentication, MySQL integration, Object Oriented PHP and lots more!\nLet's parse that.\nThis course is super-practical: packed with knowledge you can put to use right away, while still giving you a good foundational understanding of web programming, not just PHP.\nIts about building smart websites: these days, its not OK for a website just to look snappy - login, cookies and  sessions are considered necessities, not luxuries anymore\nIn this course, we will learn by example. Each example is self-contained, has its source code attached, and gets across a specific PHP use-case. Each example is simple by itself, but they come together as building blocks to build complex use cases.\n\n\nWhat's included in this course:\nInstalling and setting up a basic web server with PHP\nWeb security basics: validating and sanitizing user input data. Web forms, mitigating XSS and XSRF attacks\nMySQL Integration and Installation: Connecting to a database, running queries, processing results, prepared statements. Easy integration with MySQL so it's dead simple to work with databases for permanent data storage\nCookies, Sessions and the differences between them, using sessions without cookies\nEnd to end login authentication\nObject oriented PHP, classes, inheritance, polymorphism\nGET, POST and other superglobals",
      "target_audience": [
        "YEP! Students who are looking to use the power of programming to build dynamic web sites",
        "YEP! Students who are looking to get into the nitty gritty of advanced PHP constructs such as cookies, sessions and object oriented programming"
      ]
    },
    {
      "title": "JavaScript Essentials: Things you must learn as a developer",
      "url": "https://www.udemy.com/course/javascript-essentials-things-you-must-learn-as-a-web-developer/",
      "bio": "Master JavaScript essential concepts for web development. It is truly the JavaScript for beginners.",
      "objectives": [
        "Learn JavaScript fundamental principles that every professional Web Developer understands very well.",
        "Go from complete beginner to advanced JavaScript developer.",
        "Understand how to make a web application interactive using JavaScript and browser's DOM API.",
        "Become smart in handling errors in your code using industry standard developer tools.",
        "Learn how to stay away from common mistakes that other JavaScript programmers make.",
        "Understand JavaScript best practices of writing industry standard code.",
        "Learn advanced concepts such as Scope, Closure, Hoisting, OOP, Built-in Objects, etc.",
        "Become confident to learn more advanced JavaScript concepts such as framework and libraries like React, Angular, Vue, etc."
      ],
      "course_content": {
        "Introduction": [
          "Welcome note"
        ],
        "Getting Started with JavaScript": [
          "Introduction",
          "Setting up development environment",
          "Integrating JavaScript with an HTML document",
          "Ways to display output from JavaScript",
          "JavaScript syntax, statements, keywords, etc.",
          "Recap & Practical Exercise Session",
          "Getting Started with JavaScript"
        ],
        "Data Types & Variable": [
          "Introduction",
          "Primitive data type",
          "Object data type",
          "Variables",
          "Dynamic typing and coercion",
          "Recap & Practical Exercise Session",
          "Data Types & Variable"
        ],
        "Operators & Expressions": [
          "Introduction",
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators",
          "Ternary and typeof Operators",
          "Recap & Practical Exercise Session",
          "Operators & Expressions"
        ],
        "Control Flow": [
          "Introduction",
          "if … else Statement",
          "switch Statement",
          "Recap & Practical Exercise Session",
          "Control Flow"
        ],
        "Loops & Iteration": [
          "Introduction",
          "for Loop",
          "while Loop",
          "do ... while Loop",
          "break and continue Statements",
          "Recap & Practical Exercise Session",
          "Loops & Iteration"
        ],
        "Functions": [
          "Introduction",
          "Types of function definition",
          "Function parameters & arguments",
          "Recap & Practical Exercise Session",
          "Functions"
        ],
        "Scope, Closure, and Hoisting": [
          "Introduction",
          "Overview of Scope",
          "Introduction to Closure",
          "What is Hoisting?",
          "Recap & Practical Exercise Session",
          "Scope, Closure, and Hoisting"
        ],
        "Basic Data Structures: Object & Array": [
          "Introduction",
          "Introduction to Object",
          "Working with Objects",
          "Introduction to Array",
          "Working with built-in Array methods",
          "Recap & Practical Exercise Session",
          "Basic Data Structures: Object & Array"
        ],
        "JavaScript Built-in Objects": [
          "Introduction",
          "Working with Global Object",
          "Working with Number Object",
          "Working with String Object",
          "Working with Math Object",
          "Working with Date Object",
          "Recap & Practical Exercise Session",
          "JavaScript Built-in Objects"
        ]
      },
      "requirements": [
        "Having basic knowledge of HTML, CSS, and ability to use any web browser will be helpful."
      ],
      "description": "The complete brand new step-by-step JavaScript beginner course in Udemy! This course is specially designed for you if you are new to Web Design or Web Development.\nHi! Welcome to JavaScript Essentials. If you are new to Web Development, or more specifically, to JavaScript, and if your goal is to become a professional Web Developer, you must begin your journey by understanding essential concepts of JavaScript programming. JavaScript is the language of the web, mobile, and devices everywhere. This language is going to stay around for long time. This is why it is worth learning this language well. As a beginner, everything that you must learn is covered very intuitive way in this course.\nThe structure and presentation have made this course very unique in Udemy. Course materials are designed in step-by-step, one-at-a-time approach. I did not bring up any topic or concept in the course without prior explanation about it. Every concept of JavaScript in this course is backed by detail and to-the-point lecture sessions followed by practical exercise sessions and quizzes. Lecture sessions will help you learn the technical theories behind each concept. Practical exercise sessions will help you learn by doing. Quizzes will help you evaluating your learning instantly. Finally towards the end of the course, you will have a series of coding challenges to take your JavaScript skill to the next level where you can start learning advanced JavaScript frameworks like Angular, React, and so on.\nFinally, I want you succeed in your pursuit to become a professional web developer. This course has everything you need to get you started. Moreover, I am here to help if you run into problems or questions. Please feel free to ask questions in the Q&A section.\nThis course is optimized for mobile devices. So, you can carry on with your learning while on the go. Besides, it is enabled with English subtitles. So what are you waiting for? Sign up today and take your JavaScript skills to a new height.",
      "target_audience": [
        "Anyone who has little or no knowledge in JavaScript.",
        "Anyone who wants to start career in Web Development."
      ]
    },
    {
      "title": "The Complete SOCKET IO V4 Bootcamp: Real Time Web Apps",
      "url": "https://www.udemy.com/course/the-ultimate-socket-io-bootcamp-from-zero-to-hero/",
      "bio": "Become FLUENT in Socket IO with just ONE COURSE. {Everything you need to know about Socket IO V4 with NodeJS and Python}",
      "objectives": [
        "Learn Socket IO from Scratch: Start with the basics and gradually progress to advanced topics, ensuring a solid understanding of Socket IO fundamentals.",
        "Comparing WebSockets, HTTP, and Polling.",
        "Understand the differences between these communication protocols and learn when to use Websockets over HTTP or polling for real-time applications.",
        "Events, Rooms, and Namespaces in Socket IO.",
        "Explore the powerful event-driven architecture of Socket IO, learn how to organize clients into rooms and namespaces, and utilize them effectively in your apps.",
        "Testing in Socket IO.",
        "Discover techniques and best practices for testing Socket IO applications, ensuring reliability and robustness in your code.",
        "Building Powerful Chat Web Applications.",
        "Dive into the process of building real-time chat applications using Socket IO, enabling instant messaging and real-time updates for a seamless user experience.",
        "Deploying the chat app to the Glitch platform under the name \"Hang Out\".",
        "You will discover how to take your completed chat application and deploy it to the Glitch platform, allowing you to share your app with others and get hired.",
        "Socket IO with Python and Flask.",
        "Explore how to integrate SocketIO with Python and Flask framework, leveraging the combined power of SocketIO and Python to develop dynamic and interactive apps.",
        "Building a Stock Tracker App.",
        "Build a powerful stock tracker application using SocketIO and Python. Track real-time stock data, provide live updates, and implement advanced features.",
        "Deploying the stock tracker app to Glitch under the name \"Stock Stalker\".",
        "You will explore how to deploy the powerful stock tracker application, built using the capabilities of SocketIO and Python, to the Glitch platform.",
        "Reliability in Socket IO.",
        "Understand why Socket IO is a preferred choice for real-time applications, ensuring smooth and consistent communication between clients and servers.",
        "Interactive Coding Exercises.",
        "Engage in hands-on coding exercises throughout the course, allowing you to practice SocketIO concepts and reinforce your learning in a practical manner.",
        "Leveraging Powerful Tools.",
        "Discover how to leverage powerful tools like Google and ChatGPT to enhance your self as a Socket IO Developer."
      ],
      "course_content": {
        "Introduction to the Course": [
          "What you are going to get from this Socket IO Masterclass",
          "How to succeed in this course",
          "Course Outline",
          "The tools that we are going to need in this Masterclass [all free]",
          "How to download files from the Udemy Resources tab",
          "How to solve The Interactive Coding Exercises",
          "Join our Discord community",
          "One More Thing!!!"
        ],
        "Introduction to Socket IO": [
          "What is Socket IO Conceptually?",
          "What is Socket IO Technically?",
          "What are the differences between Socket IO, HTTP and Polling",
          "Why do we use Socket IO over HTTP in certain cases?",
          "What are Websockets? and why do we use Socket IO over plain WebSocket?",
          "Evaluate your understanding of Basic Socket IO Concepts",
          "Setting up a Socket IO project [Node JS]",
          "What is CORS ?",
          "Handling CORS"
        ],
        "Events in Socket IO": [
          "What do events mean in web development and how do they work?",
          "Sending and receiving messages using Socket IO Events",
          "Evaluate your understanding of Events in Socket IO",
          "The 'door knocks' event",
          "Implementing the 'door knocks' event",
          "[Interactive Coding Exercise] 'greeting' event",
          "[Interactive Coding Exercise Solution] 'greeting' event",
          "[Interactive Coding Exercise] 'send user info' event",
          "[Interactive Coding Exercise Solution] 'send user info' event",
          "What are Acknowledgements in Web Development",
          "Acknowledgements in Socket IO",
          "[Interactive Coding Exercise] 'greeting' event with Acks",
          "[Interactive Coding Exercise Solution] 'greeting' event with Acks",
          "Acknowledgements with Timeout",
          "[Exercise] User Info with Acknowledgment Timeout",
          "[Solution] User Info with Acknowledgment Timeout",
          "Evaluate your understanding of Socket IO Acknowledgments",
          "Volatile events",
          "Broadcasting messages using Socket.io Events",
          "[Interactive Coding Exercise] Mood Tracker App",
          "[Interactive Coding Exercise Solution] Mood Tracker App",
          "Evaluate your understanding of Broadcasting Events in Socket IO",
          "One-Time listener in Socket IO",
          "Removing Listeners",
          "onAny() and onAnyOutgoing() methods",
          "How to handle errors in Socket IO"
        ],
        "Rooms in Socket IO": [
          "What are rooms and why they are very useful ?",
          "How to use rooms in socket IO",
          "[Interactive Coding Exercise] Sports news app",
          "[Interactive Coding Exercise Solution] Sports news app",
          "Evaluate your understanding of Socket IO Rooms"
        ],
        "Namespaces in Socket IO": [
          "What are Namespaces in socket IO",
          "Namespaces example",
          "Test your understanding of Socket.IO Namespace"
        ],
        "Testing in Socket IO": [
          "What is Testing, and why it's very important?",
          "Testing Example with Mocha",
          "Testing Example with Jest"
        ],
        "Emit cheatsheet": [
          "Emit cheatsheet"
        ],
        "Test your JavaScript Skills[Optional]": [
          "Section Description",
          "Variable Swap Without a Temporary Variable using JavaScript",
          "Reverse a String using JavaScript",
          "Calculate the Average of any array of numbers using JavaScript",
          "Find the Factors of a Number using JavaScript Loops",
          "Manipulating Student Data with JavaScript Objects",
          "Temperature Checker Using JavaScript Conditional Statements"
        ],
        "Hang Out App [part 1] (Building and deploying a chat application)": [
          "What are we building in this Project?",
          "Setting up the Server",
          "Serving client files",
          "Integrating Socket IO",
          "Emitting events",
          "Broadcasting Events to all users including the sender",
          "[Exercise]Broadcast a message on connection and disconnection",
          "[Solution] Broadcast a message on connection and disconnection",
          "[Exercise] Add support for nicknames",
          "[Solution] Add support for nicknames",
          "[Exercise] Display 'Me' next to the user's own message",
          "[Solution] Display 'Me' next to the user's own message",
          "[Exercise] Add “{user} is typing” functionality",
          "[Solution] Add “{user} is typing” functionality",
          "[Exercise] Show who’s online",
          "[Solution] Show who’s online",
          "[Exercise] Add private messaging",
          "[Solution] Add private messaging {Part 1}",
          "[Solution] Add private messaging {Part 2}"
        ],
        "Hang Out App [part 2] (Building and deploying a chat application)": [
          "What are we going to do in this section",
          "Creating a button to create a private Group",
          "[Exercise] Adding NSP for private groups",
          "[Solution] Adding NSP for private groups",
          "[Exercise] Adding NSP logic",
          "[Solution] Adding NSP logic",
          "Render the same group view as we did before",
          "[Exercise] Adding the event to join group",
          "[Solution] Adding the event to join group",
          "Other necessary events in the group namespace and room[part 1]",
          "Other necessary events in the group namespace and room[part 2]",
          "Other necessary events in the group namespace and room[part 3]",
          "[Exercise] Add an option to leave group",
          "[Solution] Add an option to leave group"
        ]
      },
      "requirements": [
        "No prior Socket IO or Websockets experience needed: This course is designed for beginners, and I will guide you through every step, starting from the basics and gradually progressing to advanced concepts.",
        "A Mac or PC computer with internet access: You will need a computer with internet connectivity to follow along with the course and complete the coding exercises.",
        "Basic familiarity with HTML & CSS: Understanding the basics of HTML and CSS will help you in building and styling web applications using Socket IO.",
        "Basic knowledge in JavaScript and Node JS: As Socket IO is a Node JS library, having a foundational understanding of JavaScript and Node JS will be beneficial.",
        "Basic knowledge in Python (optional): If you are interested in learning how to use Socket IO with Python and Flask, having some basic knowledge in Python will be helpful.",
        "No paid software required: The course will utilize open-source tools and libraries, and there is no need to purchase any paid software.",
        "Understanding basic usage of the terminal and command line.",
        "I will provide detailed instructions on how to install and set up all the necessary software required for the course. No prior installation experience is necessary."
      ],
      "description": "Unlock the world of real-time web applications with our Socket IO 4 Masterclass! From novice to pro, this course guides you through mastering Socket IO, the industry standard for real-time communication Build robust web apps, connect users instantly, and take your development skills to the next level. Don't miss out – join us on this exciting journey today!\nWelcome to The Premier SOCKET IO V4 Masterclass, the best resource on the whole internet to learn Socket IO and become a professional in the field! Get ready to master one of the most in-demand skills in the job market in 2024.\nThis comprehensive course covers both Socket IO with NodeJS and Python, two powerful and popular programming languages Whether you're a beginner or already have some knowledge, we'll guide you step-by-step through engaging video tutorials and hands-on projects to ensure your success as a Socket IO developer.\nThroughout the course, you'll build real-time web applications and learn how to leverage Socket IO to create dynamic and interactive experiences. From basic concepts and fundamentals to advanced topics like rooms, namespaces, and testing, we've got you covered.\nBut this course goes beyond just teaching you syntax. We dive into the theory behind Socket IO, explaining why things are done in certain ways, so you gain a deeper understanding of the subject matter.\nLed by Noor Fakhry, an experienced software engineer and passionate instructor, this course combines his expertise with animations, real-life examples, amazing whiteboard explanations, hands-on coding 4K videos, and humor to make learning fun and engaging. Noor's goal is not only to teach you how to code but also to equip you with the skills and knowledge needed to succeed in the tech industry.\nNoor's journey led him to discover his true passion for teaching programming and coding, where he finds joy in helping individuals achieve their aspirations and turn their dreams into reality. This very passion drove him to become a full-time online course creator at Programming Fluency.\nBy enrolling in this course, you'll save over $10,000 on bootcamps and gain access to 11+ hours of 4K video tutorials, quizzes, coding exercises, and two major projects: the Hang Out App (a real-time chat application) and Stock Stalker (a real-time stock tracker).\nIn addition to learning the latest tools and technologies used by top tech companies like Apple, Google, Netflix, Microsoft, and Facebook, you'll also receive detailed animated explanation videos and a comprehensive curriculum developed based on years of experience and student feedback.\nGet ready for a hands-on journey toward becoming a professional Socket IO developer! This comprehensive curriculum covers everything you need to know, starting from the basics and fundamentals of Socket IO and progressing to advanced topics and real-life projects.\n\n\nHere's an overview of the topics covered in this course:\nWe'll begin with the basics and fundamentals of Socket IO, ensuring you have a solid foundation to build upon.\nYou'll learn about the differences between Socket IO and various network protocols, gaining a deeper understanding of how Socket IO operates in the context of web communication.\nEvents in Socket IO will be explored, as they play a crucial role in real-time communication between the server and clients.\nRooms in Socket IO will be introduced, allowing you to create separate spaces for specific groups or topics, enhancing the scalability and organization of your applications.\nNamespaces in Socket IO will be covered, providing a way to segregate and manage different areas of your application's functionality.\nTesting in Socket IO will be explored, teaching you how to effectively test and ensure the reliability of your Socket IO applications.\nYou'll have the opportunity to build a real-time chat app named Hang Out, where users can interact in real-time and exchange messages.\nWe'll dive into the deployment process, guiding you on how to deploy the Hang Out app to the web, making it accessible to users.\nYou'll explore the integration of Socket IO with Python, harnessing the power of this dynamic duo to build real-time applications.\nGet ready to develop a real-time stock tracker app named Stock Stalker using Socket IO with Python, enabling users to track live stock data.\nWe'll guide you through the deployment of the Stock Stalker app to the web, allowing users to access real-time stock information.\nYou'll learn about the reliability aspects of Socket IO, understanding how to handle various scenarios and ensure smooth communication between clients and servers.\nWe'll provide insights into using various tools that can enhance your Socket IO development workflow, making you a more efficient and effective developer.\nIn this course, Each lecture is provided as a high-quality 4K video with clear explanations.\nThroughout the course, you will have access to the complete source code for every project and feature that we will build. This means you can review the code, experiment with it, and use it as a reference to deepen your understanding of Socket IO. Having the source code at your fingertips will empower you to explore and enhance the projects in your own unique way.\nMastering Socket IO is within your reach! With a commitment of just 1 to 3 months and dedicating 1 hour per day, you'll embark on a transformative journey. Each day, you'll build a new Socket IO feature, immersing yourself in writing Socket IO code and getting your hands dirty. This active and consistent practice is the key to mastering Socket IO and becoming a confident developer in this amazing technology.\nBy the end of this Masterclass, you'll have a comprehensive understanding of Socket IO and be equipped with the skills to build real-time applications, test them, deploy them, and ensure their reliability. Get ready to level up your Socket IO expertise and become a confident developer in this exciting field!\nWhether you want to become a professional Socket IO developer or start your own tech startup, finishing this course and mastering Socket IO can be life-changing. So, why wait? Enroll now and unlock your potential as one of the best Socket IO developers. Get ready to level up your coding skills and create real-world web applications with Socket IO.\n\nAbout Noor Fakhry(The Instructor):\nMeet Noor Fakhry, an experienced software engineer with many years of hands-on experience working in the field. Noor is the founder and lead instructor at Programming Fluency, where he shares his expertise with aspiring programmers. With a strong background in software development, Noor brings practical knowledge and real-world insights to his teaching. He has worked on various projects and tackled complex challenges, gaining valuable experience that he now imparts to his students.\nNoor's extensive experience as a software engineer enhances his ability to provide practical guidance and industry-relevant knowledge. He is currently pursuing a Master's degree in Computer Science, further deepening his understanding of the field. With a passion for both self-learning and formal education, Noor recognizes the specific needs of beginner coders and is committed to creating comprehensive and engaging programming and tech courses. His unique approach not only makes learning to code fun and interactive but also equips students with the skills they need to thrive in the tech industry. Noor goes beyond teaching coding concepts, he also emphasizes the reasoning behind certain practices, fostering a deeper understanding of the subject matter.\nBeing a self-taught programmer, Noor recognizes the abundance of online courses, tutorials, and books that tend to be excessively wordy and insufficient in imparting essential skills. Many individuals find themselves overwhelmed and uncertain about where to begin when learning programming and how to code. Furthermore, a considerable number of people lack the financial means to invest $20,000 in a coding bootcamp. The accessibility of programming skills should be inclusive and affordable for everyone. Educational materials ought to focus on imparting practical, up-to-date skills, ensuring they do not waste a student's precious time.\nTo enhance the learning experience, Noor employs animations, real-life examples, and whiteboard amazing explanations allowing students to visualize and comprehend complex concepts easily.\nNoor's journey led him to discover his true passion in teaching programming and coding, where he finds joy in helping individuals achieve their aspirations and turn their dreams into reality. This very passion drove him to become a full-time online course creator at Programming Fluency.\nJOIN Noor on a transformative journey towards programming fluency and a successful career in tech today!\n\n\nAre you ready to become FLUENT in your favorite programming language?",
      "target_audience": [
        "Beginners in Socket IO: This course is perfect for individuals who have basic familiarity with HTML, CSS, and JavaScript, but are new to Socket IO. You'll start from scratch and build your knowledge and skills through hands-on coding projects.",
        "Web Developers: Whether you're a seasoned web developer or an intermediate-level developer looking to enhance your skills, this course offers value. By learning Socket IO through coding projects, you'll quickly grasp the concepts and techniques needed to incorporate real-time functionality into your web applications. This course will help you level up your web development skills and add a powerful tool to your skills.",
        "Entrepreneurs and Startup Founders: If you have an idea for a real-time application or want to start your own startup centered around real-time functionality, this course is for you. You will learn how to leverage Socket IO to build interactive and dynamic web applications, setting a solid foundation for your entrepreneurial journey.",
        "Those Seeking Professional Web Development: If you're looking to expand your professional skills and become a Socket IO professional, this course provides comprehensive coverage. From the basics to advanced topics, you'll gain a deep understanding of Socket IO and its applications. By completing the course and building your portfolio, you'll be well-equipped to showcase your expertise to potential employers or clients",
        "Passionate Learners: If you have a genuine interest and enthusiasm for learning how to build chat applications, this course is designed to fuel your passion. You'll dive deep into Socket IO's capabilities and discover how to create engaging, real-time chat functionality. By embracing the challenges and possibilities of building chat applications, you'll develop a strong foundation in Socket IO and unleash your creativity in designing interactive and dynamic communication experiences."
      ]
    },
    {
      "title": "Kids Coding - Beginners CSS",
      "url": "https://www.udemy.com/course/kids-coding-beginners-css/",
      "bio": "Learn the life long, worth while and in demand skill of programming! Your kid could be the next Zuckerberg!",
      "objectives": [
        "Learn how to program",
        "Learn about software development",
        "Learn about web development",
        "learn the funadmentals of software production",
        "learn the fundamentals of programming"
      ],
      "course_content": {
        "Let's Learn CSS": [
          "Introduction to the course",
          "Kids coding info graphic",
          "Course requirements and format",
          "Setting up the HTML",
          "Introduction to CSS",
          "Colors and RGB values",
          "Changing the background color",
          "text Indentation",
          "Font families",
          "Font Types",
          "Text align",
          "IDs",
          "Class",
          "Lists and multiple tags",
          "More about list items",
          "Table properties",
          "Course conclusion"
        ]
      },
      "requirements": [
        "An internet connection",
        "An up to date web browswer"
      ],
      "description": "Please note that this course is only to be purchased by parents. Not Children.\nReading for parents\nDo your kids spend too much time on the computer, phone or tablet? Don't you wish they could do something more productive? Why not get them to learn a life long valuable skill that will lead them into a career that pays 2 times the national average?\nProgramming is the new math. The average computer programmer makes 78k a year and there will always be a need for programmers. The only problem is that all of the educational courses are not tailored towards the learning styles of children. Most of the documentation is geared towards people over 18.\nThis course shows kids how to code by adapting the material to their learning styles. There are animated lectures, informative screencasts and tests.\nThis course is not only fun for kids to watch and listen, it is interactive and fun. More and more people are learning to code so do you want your kids to not have the same opportunities as others? This course offers your kids a competitive advantage.\nEmployers look for technical skills and applicants that can code are more attractive to hire. Even if the job isn't technical it always helps to have that technical knowledge to communicate with the technical team. Personally, I like to hire people with programming skills. If they are artists, video editors, or social media marketers, I generally prefer to hire people with programming experience.\nAbout me, the instructor\nMy name is John Bura and I have run the software company Mammoth Interactive. We have had a ton of sales on our software which includes XBOX 360, iPad and iPhone games. On top of this I have been teaching people full time since I was 17. With the combination of teaching experience and real world experience, I have a truly unique experience that you can't find anywhere else. The knowledge I give out is from first hand knowledge of the industry and years of teaching experience.\nThank you for considering to purchase my course. Even if you choose to not buy it I wish you and your family a happy road to success.",
      "target_audience": [
        "Complete beginners"
      ]
    },
    {
      "title": "HTML and CSS for Beginning Web Developers",
      "url": "https://www.udemy.com/course/html-and-css-for-beginning-web-developers/",
      "bio": "HTML and CSS are like peanut butter and jelly for web designers and developers. Get started with the basics today.",
      "objectives": [
        "To program in HTML",
        "To program in CSS",
        "To understand how HTML and CSS work together"
      ],
      "course_content": {
        "Introduction to the Course": [
          "What Is HTML?",
          "What is HTML5?",
          "Getting the Browser",
          "Getting the Editor",
          "Setting Up the Editor"
        ],
        "The Basics of HTML": [
          "Structure - Hello World",
          "The DOM",
          "Customizing the Editor",
          "Self Closing Tags - Environment",
          "Validation",
          "Comments"
        ],
        "Block Level Elements": [
          "Block Level Elements"
        ],
        "Line Break and Spacing": [
          "Line Break and Spacing"
        ],
        "Inline Elements": [
          "Span - Text Modifiers",
          "Anchors",
          "Linking to the Top of a Page",
          "Images"
        ],
        "Tables and Forms": [
          "Tables",
          "Form Basics",
          "Placeholder vs. Value",
          "Radio Buttons, Checkboxes, Select Elements and Text Areas",
          "New HTML5 Inputs",
          "HTML5 Input Attributes",
          "Action Attribute",
          "GET vs. POST",
          "Submit Buttons",
          "Create a Hotel Booking Form"
        ],
        "Semantic HTML5 Elements": [
          "New Elements in HTML5",
          "HTML5 Semantic Elements",
          "Semantic Elements in Practice",
          "Meter and Progress Elements"
        ],
        "Multimedia": [
          "Audio",
          "Video",
          "Conclusion"
        ],
        "Introduction to CSS": [
          "What Is CSS?",
          "Understanding CSS",
          "How HTML and CSS Work Together",
          "Selectors Part 1",
          "Selectors Part 2",
          "Selectors Part 3",
          "Selectors Part 4",
          "Styling Links (Hyperlinks)",
          "Widths and Heights",
          "Positioning",
          "Centering a Container",
          "Display Types",
          "Hiding an Element",
          "Margins and Padding",
          "Overflow",
          "Element Stack Order (z-index)",
          "Cursors",
          "Box Sizing",
          "Color",
          "Font Basics",
          "Floats",
          "Clearfix",
          "Forcing Uppercase, Lowercase and Capitalisation",
          "Text Alignment",
          "Text Indenting",
          "Backgrounds",
          "Multiple Background Images",
          "Background Size",
          "Borders",
          "Border Images"
        ],
        "Your First CSS Projects": [
          "Build a Website Part 1",
          "Build a Website Part 2",
          "Build a Website Part 3",
          "Pure CSS Drop-Down Menu",
          "Dropdown List Menu Part 1",
          "Dropdown List Menu Part 2"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "HTML and CSS are like peanut butter and jelly for web designers and developers -- they go well together. Instead of learning just HTML, or just CSS, it's extremely beneficial to learn how each works together to form the basis of great, responsive websites.\nAbout This Course\nThis course is focused on beginners, and will take you all the way from 'what does that even stand for' to creating real life projects using HTML and CSS -- and understanding why and how you just did it.\nHTML5\nHTML5 will become the new HTML standard version in the coming years, and this course was created with that in mind. Any time an HTML5 specific markup should be used, you will be taught the HTML5 version so you'll be up to date from day one.\nProjects and Source Codes\nYou will learn the basics, then create real projects that use the skills you just learned so you can understand how HTML and CSS work in the real world. You will also get access to all lesson source codes so you can deconstruct each lesson -- another valuable learning and time saving tool.",
      "target_audience": [
        "Beginning web designers",
        "Beginning web developers"
      ]
    },
    {
      "title": "Python Masterclass| Basic to OOP Programming with Anaconda",
      "url": "https://www.udemy.com/course/python-masterclass-basic-to-oop-programming-with-anaconda/",
      "bio": "Go From Beginner to Expert Programmer in this Python Masterclass! Learn the Basics to OOP!",
      "objectives": [
        "Learn the basics of Python",
        "Learn how to use Anaconda and Jupyter Labs",
        "Learn the importance of Python",
        "Understand the importance of Python today",
        "Learn how to retrieve user input, basic methods and statements",
        "Learn how to create and use variables of the most basic data types",
        "Build a solid foundation of programming",
        "Learn many advanced Python methods and variables",
        "Learn how to scan, process and store data",
        "Learn how to create your own methods and functions",
        "Use many advanced Python programming techniques and have a great understanding Object Orientated Programming. These are essential skills for every form of Python programmer."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Programming Support",
          "What is Python?",
          "Software Download and Installation",
          "Software Tour and Project Creation"
        ],
        "Basic Studies on Python": [
          "First Line of Code and Text Shortcuts",
          "Variables and Data Types",
          "Math Functions with Variables",
          "Retrieving User Input",
          "The If Statement",
          "Additional Operators and Nested If Statements",
          "Basic Text Methods",
          "Basic Math Methods",
          "Data Type Conversion",
          "The While Loop",
          "The For Loop",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "Advanced Studies on Python": [
          "Introduction",
          "Workbook",
          "Lists Introduction",
          "Lists Practical",
          "Strings Introduction",
          "Strings Practical",
          "Slicing and Indexing Introduction",
          "Slicing and Indexing Practical",
          "Formatting Introduction",
          "Formatting Practical",
          "Dictionaries Introduction",
          "Dictionaries Practical",
          "Tuples Introduction",
          "Tuples Practical",
          "Sets Introduction",
          "Sets Practical",
          "Methods and Functions Introduction",
          "Functions Practical",
          "Advanced Functions Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ],
        "OOP Studies on Python": [
          "OOP Introduction",
          "Creating a Class and Attributes",
          "Class and Method Practice",
          "Inheritance and Polymorphism",
          "Dunder Methods",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "No knowledge is needed, just a computer",
        "Access to the internet"
      ],
      "description": "Welcome to Basic Python Programming for Beginners!\nMy name is Matthew Dewey, lead programmer at Programming Tut. I am an experienced programmer, having received several accommodations on programming in my formal education as well as taught several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in a fun and easy manner. In this course I do just that with the Python programming language.\nPython, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving programming over any other language. Of course, it goes without saying that Python is an excellent language, but do you know what is required of you to start programming Python?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course. From there I move to advanced studies which incorporates an understanding of special data types and processing of data, finally ending off on Object Oriented Programming, OOP for short. OOP being one of the essential skills that every programmer worthy of employment has in their tool kit. I help you attain this knowledge and much more.\nI help you:\nInstall your software, Anaconda\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nAdvanced Python Methods\nData Collection\nData Processing and Storage\nClass creation\nObject use\nAttribute development and connections\nOOP, Object Orientated Programming\nand BONUS tips and tricks!\nGo no further if you're looking for the course that will guide you into the world of programming! With my course I can guarantee that the knowledge you learn will help you get a head-start in Python programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "For those keen on learning Python this is the course for you!",
        "Any Python programmers seeking advanced knowledge on the Python programming language",
        "Python programmers looking to advance in the field",
        "Basic Python Programmers",
        "I.T Students",
        "Beginner programmers",
        "Students seeking studies on OOP"
      ]
    },
    {
      "title": "Introduction to Maps in R Shiny and Leaflet",
      "url": "https://www.udemy.com/course/introduction-to-maps-in-r-shiny-and-leaflet/",
      "bio": "Building web map applications like a pro",
      "objectives": [
        "R Programming",
        "Web Mapping",
        "Web GIS Programming",
        "Working with dataframes",
        "Web mapping with the Leaflet library",
        "Building a GIS application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation and Setup": [
          "Installation and Setup"
        ],
        "Creating the Earthquake OSM Map": [
          "Creating your first map",
          "Creating a menu item",
          "Adding markers",
          "Adding circle markers",
          "Creating a legend",
          "Adding a layers control"
        ],
        "Creating the Earthquake Dark Map": [
          "Adding the second menu item",
          "Adding circle markers",
          "Adding a legend",
          "Change map based on zoom level"
        ],
        "Creating the Heatmap": [
          "Adding the third menu item",
          "Adding the heatmap data"
        ],
        "Creating the Choropleth Map": [
          "Adding the fourth menu item",
          "Downloading and transforming data",
          "Preparing data for styling",
          "Creating and styling the choropleth map",
          "Creating the legend"
        ],
        "Project Source Code": [
          "Source Code"
        ]
      },
      "requirements": [
        "Little or no understanding of GIS",
        "Basic understanding of dataframes",
        "Very basic understanding of programming",
        "Very basic understanding of R programming",
        "Be able to install and setup R Studio"
      ],
      "description": "Welcome to the Introduction to Maps in R Shiny and Leaflet course. In this course we will be\ncreating a fully functional web gis application using the R programming language. This application\nwill be comprised of different types of maps ranging from point maps to heatmaps, to choropleth maps.\n\n\nWe will also be using different datasets ranging from dataframes to spatial dataframes, which we\nwill use to transform and visualize our data on different types of maps, depending on the use case.\nOnce we have completed the course we will be equipped with extremely valuable skills, that we can\nuse to build sophisticated web map applications of any kind and tell spatial data stories that almost anyone\ncan interpret and understand.\n\n\nSome of the skills you will acquire from taking this course range from:\nWorking with spatial data in the R programming language\nInstalling and using R studio\nUsing the leaflet web mapping library\nCreating a variety of maps and integrating it into a single application\nBuilding a dashboard in R Shiny\nCreating map legends and colour palettes\nStyling maps using embedded html functions\nWorking with dataframes\nUsing R terminal operations",
      "target_audience": [
        "R programmers at any level",
        "GIS Developers at any level",
        "Developers at any level",
        "An interest in spatial data story telling through Maps",
        "Anyone who wants to learn GIS programming using R",
        "The curious mind"
      ]
    },
    {
      "title": "AJAX in Action: Build AJAX-Based Applications",
      "url": "https://www.udemy.com/course/ajax-projects-hands-on-ajax-applications/",
      "bio": "AJAX for Beginners! Develop AJAX Projects with JavaScript& jQuery Handle JSON&XML Build API-Based Applications with AJAX",
      "objectives": [
        "Develop rich, user-friendly web applications",
        "Get data from the server without refreshing the page",
        "Update webpages without page reload",
        "Use AJAX with JavaScript and jQuery",
        "Understand difference between GET and POST methods",
        "Parse data in XML or JSON format",
        "Develop AJAX-based applications"
      ],
      "course_content": {
        "Introduction to AJAX": [
          "Unique Applications You are Going to Develop from Scratch",
          "What is AJAX?",
          "AJAX: The Misleading Name",
          "Technologies behind AJAX",
          "Setup the Development Environment",
          "AJAX Basics"
        ],
        "XMLhttpRequest Object in Action": [
          "Initiate the Request using XMLHttpRequest Object",
          "Source Code: ajax-example-1.html",
          "Source Code: get-countries.php",
          "Handle the Response",
          "Source Code: ajax-example-2.html",
          "Asynchronous Vs Synchronous Communication",
          "Source Code: ajax-example-3.html",
          "GET Vs POST",
          "Source Code: ajax-example-post.html",
          "XMLHttpRequest in Depth"
        ],
        "AJAX and Response Data": [
          "Different Types of Data: Plain Text/XML/JSON",
          "Parse JSON Data",
          "Source Code: employees.json",
          "Source Code: ajax-json.html",
          "Parse XML Data",
          "Source Code: employees.xml",
          "Source Code: ajax-xml.html",
          "AJAX Response Data"
        ],
        "AJAX and jQuery": [
          "Introduction to AJAX with jQuery",
          "Source Code: bmi.html",
          "Source Code: calculate-bmi.php",
          "Bonus Lecture: jQuery Basics",
          "Source Code: jquery-basics.html",
          "The ajax() Method",
          "Source Code: bmi-ajax.html",
          "More Options to Configure AJAX Request",
          "Source Code: bmi-ajax-options.html",
          "Source Code: calculate-bmi.php",
          "Three Callback Options with ajax() Method",
          "Source Code: bmi-ajax-callback.html",
          "jQuery's Shorthand AJAX Methods: get(), post(), getJSON() and load()",
          "Source Code: bmi-shorthand.html",
          "AJAX and jQuery"
        ],
        "AJAX and Security Limitations": [
          "Same-Origin Policy",
          "Using Proxy Server",
          "JSONP - JSON with Padding"
        ],
        "Let's Develop": [
          "Real-Time User Name Validation - Part 1",
          "Real-Time User Name Validation - Part 2",
          "Real-Time User Name Validation - Part 3",
          "Baby Name Suggestion - Part 1",
          "Baby Name Suggestion - Part 2",
          "Baby Name Suggestion - Part 3",
          "Live Stock Quotes Application - Part 1",
          "Live Stock Quotes Application - Part 2",
          "Live Stock Quotes Application - Part 3"
        ],
        "BONUS Section": [
          "Bonus Lecture: Special Offers on Other Courses!!!"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript"
      ],
      "description": "AJAX (Asynchronous JavaScript and XML) is a set of technologies used to create highly interactive web sites and web applications. AJAX allows to dynamically update a page without reloading the page. Using AJAX, data can be requested and received from a server in the background without interfering with the display and behaviour of the existing page. Learn AJAX if you want to develop highly dynamic, interactive and user-friendly websites and web applications.\nIn this course \"AJAX in Action: Build AJAX-Based Applications\", you will learn\nWhat is AJAX?\n\nDifferent Technologies Behind AJAX\n\nHow to Use XMLHttpRequest Object?\n\nHow to Make Asynchronous and Synchronous Call to the Server?\n\nDifference between GET and POST Requests\n\nHow to Handle JSON and XML Data Returned from the Server?\n\nHow to Implement AJAX using jQuery?\n\nHow to Develop Dynamic Webpages and Applications using AJAX?\nProjects developed as part of this course are:\nReal-Time User Name Validation\nBaby Name Suggestion\nLive Stock Quotes\nBy joining this course, you will get\n4+ hours of content\nSource code for each lecture\nQuizzes\nWhat are you waiting for? Join this unique AJAX course and start developing interactive and dynamic websites and web applications.",
      "target_audience": [
        "Anyone who wants to learn AJAX from scratch",
        "Anyone who wants to develop dynamic and interactive web applications"
      ]
    },
    {
      "title": "Use Vuejs 2 to Create a Beautiful SEO-Ready Website",
      "url": "https://www.udemy.com/course/vuejs-seo-website-course/",
      "bio": "Discover the power of using Vuejs to create modern websites that are SEO-Friendly.",
      "objectives": [
        "Build modern websites with Vuejs 2+",
        "Create Web Mockups & Prototypes in Adobe XD",
        "Write HTML & Sass to Match Mockups",
        "Work with the Vue Router",
        "Create Page Transition Animations",
        "Making a Vue Project SEO-Friendly"
      ],
      "course_content": {
        "Project Files": [
          "Download Project Files"
        ],
        "Mockup & Prototyping": [
          "Header Design",
          "Designing the Home Page",
          "Designing the Portfolio UI",
          "Finishing the Portfolio Page Designs",
          "Creating the Prototype"
        ],
        "Code": [
          "Starting the Project",
          "Header Development",
          "Home Page HTML",
          "Home Page CSS Styling",
          "Portfolio Page",
          "Finishing the Portfolio Pages",
          "About Page Development"
        ],
        "Finishing Up": [
          "Page Transition Animations",
          "Making the Project SEO-Friendly"
        ]
      },
      "requirements": [
        "Adobe XD is recommended but not required.",
        "Understanding of HTML & CSS",
        "Basic understanding of JavaScript",
        "Code Editor (Visual Studio Code is free)"
      ],
      "description": "Vue.js is among the top 3 JavaScript frontend frameworks, and it's growing in popularity for its simplicity and ease of use.\nVue is perhaps the most simple frontend framework for a frontend designer/developer to understand. For this reason, it's a great choice for handling modern website development.\nIn this course, I'm going to show you how to create a beautiful, SEO-Friendly website while using Vue. You will be able to create modern websites with seamless page transitions that are also SEO ready with prerendered pages. This offers huge benefits!\nWe will start by creating a full mockup & prototype of our website using Adobe XD. Then, we will develop it fully while using Vue.js & Sass. At the end, we will create seamless page transition animations and make it SEO-Friendly.\nAfter watching this course, you will understand:\nCreating Web Mockups & Prototypes in Adobe XD\nStarting Projects with the Vue.js CLI\nWriting HTML & Sass to Match Mockups\nWorking with the Vue Router\nCreating Page Transition Animations\nMaking a Vue Project SEO-Friendly with a Prerender Plugin\n..and much more.\nCourse Requirements:\nAdobe XD is recommended but not required.\nUnderstanding of HTML & CSS\nBasic understanding of JavaScript\nCode Editor (Visual Studio Code is free)\nSo, if you're ready to learn how to use Vue to create modern, SEO-Friendly websites, let's get started!",
      "target_audience": [
        "Frontend Designers & Developers"
      ]
    },
    {
      "title": "Design Patterns with Java(Beginner to Advance)",
      "url": "https://www.udemy.com/course/design-patterns-with-java/",
      "bio": "Discover the modern implementation of design patterns with #Java",
      "objectives": [
        "They can make their code more flexible, reusable and maintainable",
        "Refactor existing designs to use design patterns",
        "They will learn with different scenario where then can apply the design patterns for the solutions of complex problems",
        "Reason about applicability and usability of design patterns"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "Why Design Patterns",
          "Who am I"
        ],
        "Types Of Design Patterns": [
          "Types of Design Patterns"
        ],
        "Creational Design Patterns": [
          "Singleton design Pattern concept",
          "Singleton Design Pattern Implementation",
          "Factory Pattern Concept",
          "Factory Design Pattern Implementation",
          "Abstract factory design Pattern concept",
          "Abstract Factory Design Pattern implementation",
          "Prototype Design pattern concept",
          "Prototype Design Pattern implementation",
          "Builder Design Pattern Concept",
          "Builder Design Pattern Implementation"
        ],
        "Structural Design Pattern": [
          "Adapter Design Pattern concept",
          "Adapter Design Pattern implementation",
          "Bridge Design Pattern Concept",
          "Bridge Design Pattern implementation",
          "Composite Design Pattern concept",
          "Composite Design Pattern implementation",
          "Decorator Design Pattern Concept",
          "Decorator Design Pattern implementation",
          "Facade Design Pattern concept",
          "Façade Design Pattern implementation",
          "FlyWeight Design Pattern Concept",
          "Flyweight Design Pattern Implementation"
        ],
        "Behavioral Design Pattern": [
          "Chain of responsibility design pattern Concept",
          "Chain Of Responsibility implementation",
          "Iterator Design Pattern concept",
          "Iterator Design Pattern Implementation",
          "Observer design Pattern Concept",
          "Observer Design Pattern implementation",
          "Strategy Design Pattern",
          "Strategy Design Pattern implementation",
          "Template Design Pattern concept",
          "Template Method implementation",
          "Memento Design Pattern concept",
          "Memento Design Pattern Implementation"
        ],
        "SOLID Design Principles": [
          "SOLID Introduction",
          "Single responsibility Principle(SRP)",
          "Open-close Principle (OCP)",
          "Liskov Substitution Principle(LSP)",
          "Interface Segregation Principle (ISP)",
          "Dependency Inversion Principle(DIP)"
        ],
        "Famous Design Principles": [
          "DRY Principle",
          "KISS(Keep It Simple Stupid)"
        ],
        "Important Questions for interview": [
          "Summary Sheet for Design pattern",
          "Important points to remember",
          "What's NEXT....!"
        ]
      },
      "requirements": [
        "Basic Java knowledge is required(To understand the demo code)",
        "Good understanding of object-oriented design principles",
        "A computer with the JDK 8 or 11 (hopefully) an Eclipse IDE"
      ],
      "description": "Course Overview:\nThis course provides an overview of all the Gang of Four (GoF) design patterns as outlined in their seminal book, together with modern-day variations, adjustments, discussions of intrinsic use of patterns in the language.\nWhat are Design Patterns?\nDesign Patterns are reusable solutions to common programming problems. They were popularized with the 1994 book Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma, John Vlissides, Ralph Johnson and Richard Helm (who are commonly known as a Gang of Four, hence the GoF acronym).\nThe original book was written using C++ and Smalltalk as examples, but since then, design patterns have been adapted to every programming language imaginable: C#, Java, PHP and even programming languages that aren't strictly object-oriented, such as JavaScript.\nWhat Patterns Does This Course Cover?\nThis course covers all the GoF design patterns. In fact, here's the full list of what is covered:\nCreational Design Patterns: Builder, Factories (Factory Method and Abstract Factory), Prototype and Singleton\nStructural Design Patterns: Adapter, Bridge, Composite, Decorator, Façade, Flyweight ...many more.\nBehavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Iterator,  Observer, State, Strategy and Template Method many more.\nPresentation Style\nThis course is presented as a (very large) series of live demonstrations along with the concepts  being done in Java language. Most demos are as project, so you can download the attached zipped folder of the lesson and run it in Eclipse IDE of your choice.\nIn the last section you will find some important points to remember always.(Rule of  Thumbs).",
      "target_audience": [
        "Software engineers",
        "Architects",
        "Tech Leads",
        "Experienced software developer"
      ]
    },
    {
      "title": "Introduction to Web Development For Complete Beginners",
      "url": "https://www.udemy.com/course/introduction-to-web-development-for-complete-beginners/",
      "bio": "Learn the basic building blocks for web development by creating 7 Practical and useful apps",
      "objectives": [
        "Create HTML document structure",
        "Indent html document",
        "Add images to web page",
        "Add css to webpage",
        "Create online calculator",
        "Create an interactive quiz",
        "Create a TodoList App",
        "Create an image slider",
        "Create variables",
        "Create functioms"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of using a computer",
        "Basic knowledge of using the internet"
      ],
      "description": "Programming is the process of writing a set of instructions known as code for the computer to perform a task or series of task.\nLearning to program is a useful and enjoyable skill to have. Programming allows you to solve various types of problems.\nThere are several programming languages that can be used to write computer programs.\nIn this beginners course we will start with the basic front end languages which are HTML CSS and JAVASCRIPT. These three languages are collectively referred to as front end programming languages used to for web development and programming.\nIf you are thinking of becoming a web developer or just curious about how to build websites HTML is the\nlanguage you will need to start with. Every website on the planet has been built structurally using HTML.\nA website is built using a variety of technologies such as HTML which is used to create the structure ;then you have\nCSS or cascading style sheets which is used to style or make the website presentable;The third language you need is known as JavaScript which is responsible for the interactivity( This means the actions a visitor performs on a website e.g clicking on a button or completing a form) on the website .\nWhat You will Learn:\nIntroduction to HTML Basics\nIntroduction to CSS Basics\nIntroduction to JavaScript Basics\nProjects we will create together:\nCalculator\nDigital Clock\nInteractive Quiz\nImage slider\nTip calculator\nTodoList\nMath Addition Game\n\n\nThank you",
      "target_audience": [
        "Absolute beginner web developers",
        "Beginnerprogrammers"
      ]
    },
    {
      "title": "HTML5 and CSS3: Craft your own websites (with 4 projects)",
      "url": "https://www.udemy.com/course/html5-and-css3-craft-your-own-websites-with-4-projects/",
      "bio": "Learn HTML and CSS from zero, without need any prior knowledge, to create your responsive websites",
      "objectives": [
        "Structure web pages with HTML",
        "Style web pages with CSS",
        "How to create complete websites from scratch",
        "How to build responsive websites"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed, you learn all you need here =)"
      ],
      "description": "In this course you're going to learn everything you need to know how to build responsive web sites with HTML and CSS.\n\n\nYou will have a mix of theory and practice, to know the concepts of the techniques and also apply them in real situations.\nAfter the 4 projects of this course you are ready to create every website you want, and also adapt them to all the devices and screen sizes, using responsivity.\n\n\nSome of the concepts that are present in this course are:\n- HTML5;\n- CSS3;\n- Flexbox;\n- Semantic HTML;\n- Responsivity;\n- Real projects and exercises to practice;\n- And much more...\n\n\nYou don't need any previous contact with HTML or CSS, I am going to teach you from the very beginning, not only the languages, but the tools that you need as a developer are also covered in this course.\n\n\nIt is important to mention that all the subjects are explained in different aspects, so you will internalize this knowledge, to be ready to apply everything in your career or personal projects.\n\n\nThe projects of this course were built thinking in your progression and also to apply all the HTML elements and CSS rules you will learn, so we are going to start slow and in the end we will be building real websites and also clone a famous website.\n\n\nIf this is what you are searching for, I'm waiting for you in the classes to write code together! =)",
      "target_audience": [
        "Beginner developers",
        "Who wants to learn HTML and CSS",
        "Who wants to build sites"
      ]
    },
    {
      "title": "Vue 3 and Django: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/vue-django-admin/",
      "bio": "Django 3.1, Vue 3, Docker, Typescript, Vuex, Authentication and Authorisation, Upload Images, Export CSV, c3.js",
      "objectives": [
        "How to create APIs with Django Rest Framework",
        "Use Docker",
        "Create protected routes",
        "Login with HttpOnly Cookies",
        "Use APIViews, ViewSets, Generic API Views",
        "Authorize users for different routes",
        "Upload Images",
        "Export CSV files",
        "Use Vue 3 with Typescript",
        "Dispatch events with Vuex",
        "Use Composition API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django": [
          "Installation",
          "Docker",
          "Migrations",
          "Rest API",
          "Models",
          "Serializers",
          "Write Only Fields",
          "Hashing Passwords",
          "Login",
          "Generate JWT Token",
          "Getting the Authenticated User",
          "Logout",
          "Foreign Keys",
          "Fixtures",
          "Getting Permissions",
          "ViewSets",
          "Roles",
          "Related Fields",
          "Completing Orders",
          "Generic Views",
          "Pagination",
          "Update Request Data",
          "Profile",
          "User Permissions",
          "Products",
          "Product Routes",
          "Uploading Images",
          "Orders",
          "Serializer Method Fields",
          "Export CSV",
          "Raw SQL Queries",
          "View Permissions",
          "CORS"
        ],
        "Vue": [
          "Installation",
          "Template",
          "Router",
          "Form Submit",
          "Register",
          "Login",
          "Child Routes",
          "Logout",
          "Component Props",
          "Users",
          "Router Link Active",
          "Pagination",
          "Deleting Users",
          "Classes and Interfaces",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Image Component",
          "Updating Products",
          "Orders",
          "Order Items",
          "Export CSV files",
          "Chart",
          "Profile",
          "Vuex",
          "Dispatch Events with Vuex",
          "Vuex Modules",
          "Typescript Getters",
          "Permissions"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge",
        "Basic Python knowledge"
      ],
      "description": "Learn how to create an Admin App using Vue 3 and Django Rest Framework.\nIn Django you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nUse APIViews, ViewSets, Generic API Views\nAuthorize users for different routes\nUpload Images\nExport CSV files\nIn Vue you will learn:\nUse Vue with Typescript\nUse Vuex\nHow to use Composition API\nCreate classes, interfaces\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Javascript Developers",
        "Beginner Python Developers"
      ]
    },
    {
      "title": "Laravel Tutorial for Beginners Step by Step",
      "url": "https://www.udemy.com/course/laravel-tutorial-for-beginners-step-by-step/",
      "bio": "Become a Master in Laravel",
      "objectives": [
        "Learn to build applications using laravel",
        "Learn how use Laravel",
        "learn to use the templating engine",
        "How to connect and use Databases"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Laravel framework",
          "Laravel Installation and Environment Setup",
          "Basic Routing and Controllers",
          "Controllers in Laravel",
          "Laravel Blade Templating",
          "How to Compile Assets in Laravel"
        ],
        "Models and Migrations": [
          "Models and Migrations (Models & Database Migrations)",
          "Fetching Data Using Eloquent ORM Part 1",
          "Fetching Data Using Eloquent ORM Part 2",
          "Fetching Data Using Eloquent ORM Part 3"
        ],
        "Forms": [
          "Forms and Saving Data Part 1",
          "Forms and Saving Data Part 2",
          "Update and Delete record from MySQL in Laravel",
          "User Authentication",
          "Model Relationships",
          "How to Add User Access Control",
          "Laravel File Upload Example",
          "retrieve images from database",
          "Finishing File Upload"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge"
      ],
      "description": "Welcome to this course on PHP Laravel Tutorial for Beginners. Laravel is one of the the most popular option among PHP developers these days. In this course you will Learn the basic concepts, functions that you will need to build fully functional programs with the popular framework, Laravel. Laravel is a Full stack framework.",
      "target_audience": [
        "Students",
        "People looking to learn laravel"
      ]
    },
    {
      "title": "Build Real world Responsive Website using HTML CSS & JScript",
      "url": "https://www.udemy.com/course/build-real-world-responsive-website-using-html-css-jscript/",
      "bio": "Learn HighEnd HTML5, CSS3 and web design by building a creative website for your new portfolio! Includes flexbox and CSS",
      "objectives": [
        "Become a modern and creative website designer",
        "Design and Build a real world website",
        "Get Basic to advance level of knowledge about Modern Technologies",
        "Be a creative and responsive website designer",
        "Learn the website designing from very scratch"
      ],
      "course_content": {
        "Introductory Lecture & Overview": [
          "Course overview",
          "Introductory - Work Environment",
          "Google Font family and files linking",
          "Header Hero with HTML 5 Markup",
          "Header Area Styling",
          "Hero Header Styling using CSS 3",
          "Floating Wrapper with images"
        ],
        "Website Navigation using HTML CSS JS": [
          "Navigation Area with HTML 5 Markup",
          "Navigation Area styling using CSS 3 Mentioned properties",
          "Nav expanding with css and main js",
          "Fixing the navigation issues"
        ],
        "Service Section using HTML CSS Only": [
          "Service Section with HTML Markup",
          "Service section full styling using css",
          "Service Section Finalize"
        ],
        "Video Section - Mockup Animation": [
          "Video Section or Animated Mockup with HTML 5 Markup",
          "Animated Video section or mockup finalize"
        ]
      },
      "requirements": [
        "Basic Computer operating knowledge",
        "Text Editor like Brackets, Coda or Sublime (Preferable)",
        "Web Surfing (internet)",
        "Typing Speed (Optional)"
      ],
      "description": "Our course is designed to offer you a hands-on experience, guiding you on how to code web applications from scratch with the latest web technologies: HTML5, CSS3, and vanilla JavaScript. This approach ensures that you understand each concept thoroughly and allows you to practice your newly acquired skills without relying on copy-pasting.\nYou do not need any previous knowledge of HTML, CSS, or JavaScript since we will take you through every syntax and explain each step in detail. Our course is suitable for both beginners and experienced programmers. Whether you're new to coding or looking to refresh your skills, our course is perfect for you.\nWe believe that learning should be enjoyable and engaging, which is why we've created an array of modern, super-cool, and captivating projects that you will develop throughout the course. Each project is created independently from scratch, and you can choose which ones to work on based on your interests.\nOur course features separate videos for each technology, enabling you to learn and focus on the areas that interest you the most. For instance, if you're primarily interested in JavaScript, you can skip the HTML and CSS sections and dive right into the JavaScript videos.\nI am really looking forward to see you inside !",
      "target_audience": [
        "Beginner or advance frontend website designing",
        "Students who wants to learn the next level website designing skills",
        "You can easily learn frontend web designing step by step",
        "Students will learn real world website designing from scratch"
      ]
    },
    {
      "title": "Practical Understanding of MVC Framework with CodeIgniter",
      "url": "https://www.udemy.com/course/practical-understanding-of-mvc-framework-with-codeigniter/",
      "bio": "Learn & Understand MVC. Build A Web App With File Upload, Email Attachment, Ecommerce, AJAX Search & PayPal Payment API",
      "objectives": [
        "Fully Understand MVC",
        "Fully Understand How To Apply A PHP MVC Framework",
        "Fully Create A Web Application With Codeigniter",
        "Fully Understand How To Use The Codeigniter PHP Framework",
        "Fully Understand How To Work Around Most PHP MVC Frameworks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "OVERVIEW OF MVC": [
          "Introduction",
          "Concept and Evolution of the Web",
          "The Model View Controller Concept",
          "The Software Architecture & Design Pattern",
          "Business Logic Concept"
        ],
        "UNDERSTANDING OF MVC": [
          "ATM Analogy Example",
          "PHP Procedural Login Example",
          "MVC (View) and MVC (Controller) Example",
          "MVC (Model) Example & Conclusion"
        ],
        "MVC CORE ELEMENTS & STRUCTURE (FRAMEWORK)": [
          "CORE ELEMENT - THE FLOW",
          "CORE ELEMENT - CLASSES",
          "CORE ELEMENT - HELPERS & LIBRARIES",
          "FOLDER STRUCTURE OVERVIEW",
          "CORE ELEMENT - ROUTING"
        ],
        "PRACTICAL APPLICATION | SETTING UP": [
          "Why Codeigniter ? Download, Installation and Testing",
          "User Guide - Finding yourself when lost",
          "Local Server Settings - File Upload & Emails",
          "Loading Helpers & Libraries",
          "Course Files Download - HTML, Bootstrap & JS"
        ],
        "PRACTICAL APPLICATION | CREATING OUR MVC FILES": [
          "Explaining the View and Creating our View Files & Removing index.php from URL",
          "Explaining the Controller and Creating our Controller Files",
          "Explaining the Model and Creating our Model Files"
        ],
        "PRACTICAL APPLICATION | ADDING BOOTSTRAP & CREATING TEMPLATES": [
          "Integrating Bootstrap & JavaScript",
          "Creating our Template Files"
        ],
        "PRACTICAL APPLICATION | CREATING DATABASE": [
          "Creating Database & Users Table",
          "Creating Orders & Cart Table",
          "Creating Products, Messages & Password Reset Table"
        ],
        "PRACTICAL APPLICATION | RECAP ON OOP": [
          "Properties & Arrays",
          "Loading All Page Views"
        ],
        "PRACTICAL APPLICATION | USER ACCESS": [
          "Registration 1",
          "Registration 2",
          "Registration 3",
          "Registration 4",
          "Login",
          "Forgot Password 1",
          "Forgot Password 2",
          "Forgot Password 3",
          "Forgot Password 4",
          "Forgot Password 5",
          "Forgot Password 6",
          "Forgot Password 7",
          "Forgot Password 8",
          "Sessions & Header",
          "Controlling User Pages with Sessions 1",
          "Controlling User Pages with Sessions 2"
        ]
      },
      "requirements": [
        "Basic PHP",
        "Basic OOP"
      ],
      "description": "This is the ultimate MVC PHP Framework Course that'll breathe more successful life into your Career. Learn and Start Making Money as a Complete Professional PHP Developer / Web Engineer. Even if you don't need it now, Still Get It Now. This is a complete project we are building from scratch will all the resources and the final project attached for your quick reference.\nThe subject of this course is the most talked about \"MVC Framework\". I call it the \"Calculus of PHP Web Development\". If you tried to study but did not understand it, then it's probably your teacher. I want to teach you to understand MVC, MVC Framework, PHP MVC Framework and CodeIgniter. Notice that all these have distinctive meanings and I'll be glad to teach you to practically understand MVC Framework.\nWe will start with the basic concept, then move on to build a web application using the most popular lightweight PHP Framework \"CodeIgniter\".\nThe application we'll be building in this course has already been built using the procedural method in my Advance PHP course so this will be an added advantage for all the students who took that course.\nThis course is not for absolute beginners. If you are an absolute beginner, then I've got a good news for you. My courses are structured in levels as expected of an instructor. Visit my instructor profile and start up.\n\nIf you are not sure about your level of PHP then you might want to take my Building Database Web App Course and then Advance PHP course which is super easy and everything is discussed in PHP, OOP, PDO, AJAX and when you take this course, it'll be super easy for you as you'll understand comparatively how both the procedural and MVC are used.\nFor full description of the details of the course, See curriculum below.\nLooking forward to teaching you.",
      "target_audience": [
        "Web Developers",
        "PHP Programmers",
        "People Finding Understanding MVC Difficult",
        "PHP Framework Learners"
      ]
    },
    {
      "title": "Ultimate Voice Dev Course - Google Actions & Alexa Skills",
      "url": "https://www.udemy.com/course/ultimate-voice-dev-course/",
      "bio": "with Jovo Framework",
      "objectives": [
        "Publish apps on Google Assistant & Amazon Alexa and land a career building voice apps.",
        "Understand the Jovo Framework.",
        "Build Games, Apps, Services, and Sell Products voice first",
        "Land your first job as a Voice Developer.",
        "Software Engineering Best Practices"
      ],
      "course_content": {
        "JavaScript 101": [
          "Intro to JavaScript"
        ],
        "Introduction - Jovo V2": [
          "Introduction",
          "Voice First Community",
          "Terminal 101 - Intro",
          "Terminal 101 - Basic Commands",
          "Terminal 101 - Windows ONLY",
          "Introduction Quiz"
        ],
        "Installation": [
          "Node & NPM Installation",
          "Jovo CLI Installation & Demo",
          "Jovo Install Errors",
          "Tips for Voice Developers",
          "Installation Quiz"
        ],
        "Jovo Language Model": [
          "Intro",
          "Explore - What is a Language Model?",
          "Demo - Create Jovo Language Model",
          "Quest #1 - Add a Sample Phrase",
          "Quest #2 - Add an Intent",
          "Quest #3 - Create Custom Entity",
          "Quest #4 - Common Comma Errors",
          "Find Help Building Voice Apps",
          "Boss Battle - Video Game Language Model",
          "Quiz: Jovo Language Model"
        ],
        "Inputs - Slots & Entities": [
          "Resources - Inputs & Entities",
          "Alexa Slots 101",
          "Dialogflow Entities 101",
          "Jovo Inputs 101",
          "Quest #1 - Single Input ( Built-In )",
          "Quest #2 - Single Input ( Custom Type )",
          "Quest #3 - Double Input ( Built-In + Custom )",
          "Quest #4 - Double Intent ( 2x Same Built-In )",
          "Quest #5 - Double Intent ( 2x Custom Type )",
          "Boss Battle - Maps Cross-Country Planner",
          "Inputs, Slots & Entities Quiz"
        ],
        "Smart Lock App": [
          "Getting Started",
          "Run Tests",
          "Jovo Language Model",
          "Google Action",
          "Alexa Skill",
          "New Intent",
          "Github Storage",
          "AWS Hosting"
        ],
        "Account Linking": [
          "Intro & Project Setup",
          "Sign-In with Facebook",
          "Sign-In with Github",
          "Sign-In with Twitter",
          "Actions on Google Console",
          "Google Action Code",
          "Alexa Developer Console",
          "Amazon Alexa Code"
        ],
        "Business Card App": [
          "How to Get Help on You Adventures",
          "Resources - Business Card",
          "Business Card - Getting Started",
          "Business Card - Google Assistant & Alexa",
          "Business Card - Git Pull Request",
          "Business Card Quiz"
        ],
        "AirBnb App": [
          "Airbnb - Getting Started",
          "Airbnb - Create Launch Intent",
          "Airbnb - Create Alexa Skill",
          "Airbnb - Create Google Action"
        ],
        "Video Games + Voice": [
          "Introduction",
          "Get Started",
          "Explore Alexa Presentation Language (APL)",
          "Choose Your Quest",
          "Git Pull Request",
          "Alexa Presentation Language",
          "Collab with the Creators"
        ]
      },
      "requirements": [
        "You'll need a working computer",
        "Google and Alexa device is optional. We will use free in-browser tools."
      ],
      "description": "Have you ever wondered how Alexa Apps are made?\nWhy is Amazon and Google investing in voice technology?\nA better question is why haven't you built an Alexa App yet.\nIf you ever wanted to understand the space of Voice Apps or build them yourself, then take our course \"Ultimate Voice Dev Course - Google Actions & Alexa Skills\". We designed it in a practical way so that when you finish the content you can immediately put it into use with your Amazon Echo, Google Assistant or online counterpart.\nNow, why should you build Alexa Skills & Google Actions?\nThe biggest industries in technology are surrounded by AI, Bots, and Voice technology. Voice technology we believe will be the new 21st user interface that will not only understand basic commands, but will be so smart to understand anything you tell it. This is why Amazon is making a big bet with Alexa which it plans to generate close to $11 billion dollars by 2020. They know something about Amazon Echo which is why now is the best time to learn these skills before the mainstream starts developing applications. We all know the story about apps for the smartphones, this is the same thing.\nThis course contains over 50 lectures and 1.5 hrs of content. It's designed for beginners to play with new platforms in the voice space. You’ll learn the tools needed to build the Alexa Skills, Google Actions, how Skills & Actions work, publish a skill to Amazon's Alexa store, and publish an Action to the Google Assistant Directory.\nThere have be more voice devices sold in 2018 than in all previous years combined. There are lots of web and mobile developers. How many voice developers do you know? The Ultimate Voice Dev course will teach you how to build apps on Google Assistant and Amazon Alexa using the Jovo framework.\n\n\nJovo 1.0 (new courses will be coming soon for Jovo 3.0).\n\n\nLearn to build with the Jovo framework.\n\n\nLearn to build for both Google Assistant & Amazon Alexa.\n\n\nCode with NodeJS.\n\n\nTechnologies include: Jovo, AWS Lambda, AWS API Gateway, NodeJS, Github, Jovo CLI, and many more.\n\n\nIf you have any questions, please reach out to us on ANY social media platform @VoiceFirstAI.",
      "target_audience": [
        "Beginner Voice App Developers. Experience with JavaScript is needed.",
        "Everyone in the world",
        "High School Students",
        "College Students",
        "University Students"
      ]
    },
    {
      "title": "Advanced Python Programming",
      "url": "https://www.udemy.com/course/advanced-python-programming/",
      "bio": "Learn advanced Python programming techniques and methods",
      "objectives": [
        "Learn many advanced Python methods and variables",
        "Learn how to scan, process and store data",
        "Learn how to create your own methods and functions",
        "Take a huge step towards OOP, Object Orientated Programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Requirements",
          "Programming Support",
          "Workbook"
        ],
        "Advanced Python Programming": [
          "Lists Introduction",
          "Lists Practical",
          "Strings Introduction",
          "Strings Practical",
          "Slicing and Indexing Introduction",
          "Slicing and Indexing Practical",
          "Formatting Introduction",
          "Formatting Practical",
          "Dictionaries Introduction",
          "Dictionaries Practical",
          "Tuples Introduction",
          "Tuples Practical",
          "Sets Introduction",
          "Sets Practical",
          "Methods and Functions Introduction",
          "Functions Practical",
          "Advanced Functions Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "You will need a computer",
        "Anaconda Notebook",
        "A basic understanding of the Python Programming language"
      ],
      "description": "Welcome to my Advanced course on Python Programming!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accolades on programming in my formal education as well as taught several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the Java programming language.\nPython, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving Python over any other language. Of course, it goes without saying that Python is an excellent language, but do you know what is required of you in a programming career?\nThere are many skills in programming that are required in any form of the field, but what I plan to to teach you in this course is exactly what you will find on many job requirements as well as many advanced methods that will no doubt help you in the future.\nIn short, you will learn:\nAdvanced Python Methods\nData Collection\nData Processing and Storage\nand BONUS tips and methods!\nGo no further if you're looking for the course that will take you from a novice to an expert! With my course I can guarantee that the knowledge you learn will help you in your career or further studies on Python programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Any Python programmers seeking advanced knowledge on the Python programming language",
        "Python programmers looking to advance in the field"
      ]
    },
    {
      "title": "NodeJS TypeScipt - Build Job Portal Project (/w SQL, Redis)",
      "url": "https://www.udemy.com/course/the-ultimate-nodejs-typescript-sql-job-portal-project/",
      "bio": "Build a complete Job Portal from scratch using Node.js, TypeScript, SQL, Redis, and Prisma",
      "objectives": [
        "Develop a scalable and efficient backend for a job portal using NodeJS and TypeScript",
        "Implement robust RESTful APIs to manage job listings, applications, and user authentication.",
        "Master SQL for efficient data storage, retrieval, and manipulation.",
        "Use Prisma as an ORM to streamline database operations and interactions.",
        "Optimize backend performance with Redis for caching and improving response times.",
        "Secure your application with JWT-based authentication and authorization.",
        "Handle file uploads and data validation in a professional manner.",
        "Implement pagination and search functionalities in the backend.",
        "Learn best practices for structuring and organizing backend code in a scalable way."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript",
        "Basic understanding SQL",
        "No need for any NodeJS experience",
        "No need for any Typescript experience"
      ],
      "description": "Unlock the power of web development by focusing on the backend with \"The Ultimate NodeJS TypeScript SQL - Job Portal Project.\" In this comprehensive course, you will learn how to build a scalable and efficient job portal from the ground up, concentrating on the server-side technologies that make modern web applications possible.\nStarting with Node.js and TypeScript, you will dive deep into backend development, creating a robust API for managing job listings, applications, and user authentication. You'll harness the power of SQL databases for efficient data storage and retrieval, and use Prisma for seamless database interaction. Additionally, Redis will be utilized to optimize performance, implementing caching mechanisms that enhance the user experience.\nBy the end of this course, you will have a complete backend solution for a job portal, equipped with authentication, data management, and optimization techniques that are essential for any large-scale application.\nThis course is perfect for developers looking to strengthen their backend skills and gain hands-on experience with industry-standard tools and practices.\n\nWhy Learn SQL?\nThere are a lot of courses out there that teach you MongoDB (NoSQL), but in the real world, many companies use SQL. This course focuses on SQL, ensuring you are equipped with the skills that are in demand in the industry.\nProblem-Solving Skills\nOne of the most effective ways to level up as a programmer is to \"fix bugs and research\" and many courses out there don't teach you that. I will do the opposite. I will guide you on how to \"research and fix bugs\" equipping you with the problem-solving skills essential for any professional developer.\nWhy Class?\nAs a backend developer, learning and mastering classes is crucial. Classes in TypeScript allow you to define object blueprints, enabling more structured and maintainable code. This course will cover the essential concepts of object-oriented programming (OOP) and how to effectively use classes to build scalable and reusable components in your applications.",
      "target_audience": [
        "Aspiring backend developers looking to build practical, real-world applications.",
        "Intermediate developers wanting to deepen their knowledge of NodeJS, TypeScript, and SQL.",
        "Professionals aiming to enhance their skills in backend development and database management.",
        "Students interested in learning how to create scalable and optimized server-side solutions.",
        "Developers seeking hands-on experience with industry-standard tools and best practices."
      ]
    },
    {
      "title": "Chrome DevTools Introduction Web Developers Guide",
      "url": "https://www.udemy.com/course/devtools-course/",
      "bio": "Learn how use Chrome DevTools improve on Debugging, Customize look and feel and learn some shortcuts for Web development",
      "objectives": [
        "Web Developers tools that can be used to speed up web development process",
        "Tools with how they can be used",
        "Get details about web pages and HTML CSS and JavaScript",
        "Chrome browser users get more out of the browser",
        "Using and debugging of Code"
      ],
      "course_content": {
        "Introduction to using Chrome DevTools": [
          "DevTools Introduction",
          "PDF Resource and Lesson Guide",
          "DevTools Open Options",
          "Elements Panel.",
          "CSS Box Model.",
          "Web Scavenger Hunt 1",
          "Source Code",
          "Console JavaScript.",
          "Code Snippets",
          "Sources FileSystem",
          "Web Scavenger Hunt 2.",
          "Network Panel",
          "Source Code for Font Files and Application storage",
          "Application Tab.",
          "Audit Tab",
          "Short Cuts Conclusion"
        ],
        "Google Chrome DevTools Helpful tips": [
          "Chrome DevTools Helpful tips settings and preferences"
        ]
      },
      "requirements": [
        "Internet access",
        "Basic Code HTML JavaScript"
      ],
      "description": "Learn how use Chrome DevTools improve on Debugging, Customize look and feel and learn some shortcuts for Web development.\nBONUS - Free eBook PDF guide for lessons\n2 Web scavenger hunt lesson challenges\nExercise in each lesson to practice and challenge your skills\nPerfect course to explore more about what Chrome DevTools has to offer and how you can use devTools for development.\nChrome DevTools is a set of web developer tools built directly into the Google Chrome browser.\nDevTools\nHelp you edit pages on-the-fly\nDiagnose problems quickly\nTest and try code\nWrite code snippets\nInspect Code\nCheck responsiveness\nDevTools ultimately helps you build better websites, faster.  Most browsers have their own version of devtools.\nCourse covers\nOpen DevTools\nElement Panel\nWhere to compute and get box model details\nusing the Console and JavaScript coding\nSnippets of code running and saved in the console\nAccess local filesystem with DevTOols\nNetwork for file load times and debugging\nApplication tab for session and local storage values\nAudit Panel and how to get website improvement report\nShortcuts and getting more help with DevTools\nTaught by an instructor with over 20 years of web development experience ready to help you learn about DevTools\n\n\nChrome DevTools\nChrome DevTools is a set of web developer tools built directly into the Google Chrome browser. DevTools can help you edit pages on-the-fly and diagnose problems quickly, which ultimately helps you build better websites, faster.\nOpen DevTools\nThere are many ways to open DevTools, because different users want quick access to different parts of the DevTools UI.\nWhen you want to work with the DOM or CSS, right-click an element on the page and select Inspect to jump into the Elements panel. Or press Command+Option+C (Mac) or Control+Shift+C (Windows, Linux, Chrome OS).\nWhen you want to see logged messages or run JavaScript, press Command+Option+J (Mac) or Control+Shift+J (Windows, Linux, Chrome OS) to jump straight into the Console panel.",
      "target_audience": [
        "Web Developers",
        "Web Designers",
        "Coders",
        "Anyone developing websites or web applications"
      ]
    },
    {
      "title": "Spring Boot with Spring Framework",
      "url": "https://www.udemy.com/course/springboot-with-spring-framework/",
      "bio": "Spring Boot, Rest API, Microservices,Java Framework -100000+ Students",
      "objectives": [
        "Spring Boot",
        "Spring MVC",
        "Spring Data JPA",
        "Spring Security",
        "Spring Core - IoC",
        "Spring AOP",
        "Spring REST"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Spring Boot MVC Application",
          "Spring Boot Hello World Program",
          "Dependency Injection in Spring",
          "Autowired Annotation in Spring Boot",
          "Accepting User input using ModelAndView with RequestParam Annotation",
          "Prefix And Suffix"
        ],
        "Spring Boot MVC": [
          "Model class",
          "Model And Modelmap",
          "Model Attribute At Method Level",
          "PostMapping Annotation"
        ],
        "CRUD Operation": [
          "GetMapping",
          "Fetching Data From Database",
          "Fetching data By using id",
          "Inserting data into database in spring Boot"
        ],
        "Spring Data JPA": [
          "Fetching Data By Using Name in spring Boot",
          "Fetching Data By Ascending and Descending Order into Spring Boot",
          "Query Annotation in Spring Boot",
          "Postman Download And Use",
          "REST API in Spring Boot",
          "PathVariable",
          "Rest PostMapping Annotation"
        ],
        "Spring Aop": [
          "Spring Aop",
          "Logger in Spring Boot"
        ],
        "MVC Application": [
          "MVC Application"
        ],
        "Fetching Data From Database Using JPA": [
          "Fetch Data",
          "Cruid Application"
        ]
      },
      "requirements": [
        "Basic Java knowledge is required",
        "Basic Knowledge of Servlet, JSP, and HTML is helpful",
        "Knowledge of SQL and databases is helpful"
      ],
      "description": "The Spring Framework and Spring Boot enable developers to create high-performing, reusable, easily testable, and loose coupling enterprise Java applications.\nIt can be used to develop any Java application.\nKnowledge of the Spring framework has a huge demand in the enterprise market and Spring frameworks developers are paid handsomely.\nHaving Spring Framework on your resume will highlight you amongst other Java developers.\nThis course offers hands-on experience building Spring Framework applications using Spring Boot.\nThis course will be interactive and fun as I will code all the projects from scratch.\nBy taking this course you will have the latest skills that you need to build real applications using the Spring Framework.\n\n\n\n\nRequirements for this Course:\nBasic Java knowledge is required\n\n\nLearn Spring Boot :\nSpring Boot dependency injection\nSpring Core - IoC\nSpring MVC\nSpring Data JPA\nSpring REST\nMicroservices\nSpring Boot Annotation\n\n\n\n\n\n\nWho this course is for:\nThe course is for all Java developers: beginners to advanced who want to master Spring framework modules with Spring Boot\nThis learning path is for developers who wish to create their own web applications with Spring 5\nThis course is ideal for developers who wish to use the Spring Frameworks for enterprise application development",
      "target_audience": [
        "Any Computer Background student,and Developer,programmer.",
        "Who like to Become Java developer.",
        "Who like to make carrier in java.",
        "Whose know oops concept.",
        "Beginner Java Developer"
      ]
    },
    {
      "title": "Best WebRTC Course - Very Informative - 2025",
      "url": "https://www.udemy.com/course/best-webrtc/",
      "bio": "An advanced WebRTC course for everyone! Learn STUN, TURN, ice agents, candidates, signaling, etc all without libraries",
      "objectives": [
        "Gain a deep understanding of WebRTC (no libraries)",
        "Deep dive into WebRTC including SDP, ICE, STUN, TURN and more",
        "Set up a real WebRTC connection between peers, from scratch (no libraries)",
        "Understand the importance of signaling in WebRTC and learn how to implement a signaling server using WebSockets",
        "Learn how to use data channels to send arbitrary data between peers",
        "Get hands-on experience with the WebRTC APIs, including getUserMedia, RTCPeerConnection, and RTCDataChannel and more",
        "Build a real chat application project to enhance learning",
        "Gain a complete understanding of signaling, STUN, TURN, Ice Agents, ice candidates and more!",
        "Understand why NAT was introduced and the problems it creates",
        "Understand why a WebSocket signaling server is required to establish a WebRTC connection",
        "Build a complete WebSocket signaling server in Node, (NO libraries)",
        "Learn how to use Chrome's webrtc-internals to analyze WebRTC traffic",
        "Learn how to use Firefox's about:webrtc to analyze WebRTC traffic",
        "Use Wireshark to analyze STUN binding request and responses, and the WebRTC process",
        "Code WebRTC with native APIs",
        "Become a Sought-After Developer: Employers want WebRTC expertise",
        "Emerge confident with WebRTC",
        "The WebRTC API is complex and verbose - this course simplifies every API and demystifies all the complexity",
        "AND A BUNCH MORE!"
      ],
      "course_content": {
        "Introduction to WebRTC": [
          "Traditional HTTP has limitations",
          "WebRTC - an introduction",
          "WebRTC requires JavaScript",
          "First WebRTC video call between Firefox and Chrome",
          "WebRTC is governed by a specification (W3C) and many RFCs",
          "WebRTC use cases (some of the use cases may surprise you)",
          "WebRTC source code",
          "The RTCPeerConnection function, \"new\" and the 2 most important aspects of WebRTC",
          "WebRTC Connection Setup",
          "WebRTC Fundamentals"
        ],
        "WebRTC Theory": [
          "Accessing a user's video device (GUM)",
          "Using the enumerateDevices() method to access a specific device ID",
          "Displaying a media stream inside of a <video> tag",
          "How do you identify yourself (ipconfig, netstat and public IPs)",
          "What is NAT?",
          "Introduction to HOST and STUN candidates",
          "WebRTC workflow visualized",
          "The role of ICE servers",
          "What is the Ice Framework and who is the Ice Agent?",
          "Examining the RTCPeerConnection object",
          "Introduction to chrome://webrtc-internals and about:webrtc",
          "Did you know?",
          "The onicecandidate event",
          "Creating a WebRTC offer",
          "The different ways to deal with Promises and functions in JavaScript",
          "WebRTC is managed by session descriptions",
          "Remote session description",
          "What is a Session Description?",
          "JavaScript Session Establishment Protocol (JSEP)",
          "Using getTracks() and setTrack() to add video media to your peer connection",
          "Using getStats() to view statistic reports related to the WebRTC connection",
          "What exactly does an OFFER indicate, and how to customize the SDP ?",
          "Generating HOST ice candidates",
          "Listening for the onnegotiationneeded event",
          "Explaining the candidate property, sdpMid, sdpMLineIndex and more",
          "What are STUN servers",
          "More about STUN",
          "Adding STUN configurations to our RTCPeerConnection object",
          "Using Wireshark to analyze a STUN request and response",
          "Why does STUN sometimes fail?",
          "What are TURN servers",
          "Signaling server and the different types (SIP, XMPP, WebSockets, AJAX, etc)",
          "Don't over complicate your code",
          "WebRTC Detailed Connection Overview",
          "The final step - connectivity checks",
          "Coding files and diagram image",
          "WebRTC Infrastructure"
        ],
        "Prepare environment and set up Node Server": [
          "Who should do this section?",
          "HTML overview",
          "Setting up folders, script, modules, and calculating a unique ID",
          "Defining state on the frontend, and setters",
          "Using JavaScript to enable the modal",
          "Closing the modal by adding an event listener on the window object",
          "Improving the naming of our modal element, and removing the hidden class",
          "Server Code - initiating a Node project and installing dependencies",
          "Spinning up Node's HTTP server, and serving the frontend files",
          "Installing Nodemon, and setting up a \"start\" script",
          "Listening for a WebSocket connection, and extracting query parameters",
          "Creating server state for connected users",
          "Initiating a WebSocket request on the client side using the native WebSocket API",
          "Server side - disconnection logic and message event handler",
          "Client side - updating state and registering WebSocket event listeners",
          "Client side - define a custom logger",
          "Client side - defining a constants file and testing custom logger",
          "Client side - defining WebSocket frontend event listeners",
          "Defining a getter for our state object",
          "Environment Setup Quiz"
        ],
        "Implement room connection logic before WebRTC": [
          "Who needs to do this section?",
          "Create Room - set up frontend click event listener",
          "Create Room - send a POST AJAX Fetch request to the server",
          "Create Room - process chunks on the server and extract the req body",
          "Create Room - send back a response from the server, to the client",
          "Create Room - dealing with the server response on the frontend",
          "Create Room - updating the user interface for the creator of a room",
          "Adding a keypress event, and improving code",
          "Fixing the bug (spoiler alert: its the \"return\" keyword)",
          "Destroy Room - sending a POST AJAX Fetch to destroy a room",
          "Destroy Room - server logic to destroy a room before peer2 has joined",
          "Destroy Room - finishing logic on the frontend",
          "Adding server logic for removing a room when a user disconnects",
          "Fixing error",
          "Fixing the favicon error by using the data URI scheme",
          "Join Room - sending a WebSocket join request",
          "Join Room - setting up switch statements to route different requests",
          "Join Room - check whether the room exists, and if not, send a failure message",
          "Define a generic WebSocket send function (also used for WebRTC)",
          "Join Room - check whether the room is full, and if so, send a failure message",
          "Join Room - sending a successful response and notification message",
          "Join Room - setting up switch statements to handle incoming WebSocket messages",
          "Join Room - defining success logic on the frontend",
          "Join Room - notifying the other user that a peer has joined their room",
          "Join Room - fixing error and updating the message container",
          "Exit Room - sending a WebSocket message to exit a room",
          "Exit Room - process the exit request on the WebSocket server",
          "Exit Room - handling the response from the server",
          "Testing the application",
          "Add disconnection logic on the server",
          "Add disconnection logic on the frontend",
          "Final touch-ups and source files",
          "Project logic prior to WebRTC"
        ],
        "Use WebRTC to establish a direct peer-to-peer connection": [
          "WebRTC process recap and .md file",
          "STAGE 1 - setting up STUN configuration servers",
          "Triggering the WebRTC process",
          "Updating UI and displaying buttons",
          "Creating a peer connection object",
          "The connectionstatechange and signalingstatechange event listeners",
          "Completing event handler logic",
          "Updating UI after a user clicks a button",
          "Testing our code",
          "Trigger a function to create a Data Channel",
          "WebRTC Data Channel Overview",
          "Creating a WebRTC data channel, and setting up ondatachannel event listener",
          "Testing and viewing Chrome's webrtc-internals",
          "Creating a WebRTC offer",
          "Set local description and listen for ice candidates",
          "Testing ice generation",
          "Setting up function to send an offer",
          "Sending an offer to the signaling server (end of Stage 1)",
          "Stage 2 - setting up function routes, and sending offer to PEER2",
          "Stage 3 beings - PEER2 receiving an offer",
          "Fixing a bug, and confirming that PEER2 has received the offer",
          "Showing PEER2 buttons",
          "Create PEER2's peer connection object",
          "Registering the ondatachannel event on PEER2's pc object",
          "Timeout - viewing the ondatachannel listener on the pc object",
          "Set remote description with PEER1's offer",
          "Create WebRTC answer, and set local session description with that answer",
          "Touchups",
          "Send WebRTC answer to signaling server",
          "Send ice candidates to signaling server",
          "Stage 4 beginnings - server receiving answer and ice candidates",
          "Creating a generic signaling message function for WebRTC messages",
          "On second thoughts ...",
          "Stage 5 beginnings - PEER1 receiving an answer and ice candidates",
          "Timeout - testing code",
          "Sending ice candidates to PEER2",
          "Handle ice candidates received",
          "Ice candidates and the remote desription",
          "Setting remote description with the answer, and looping through ice buffer",
          "MILESTONE - testing the WebRTC connection",
          "Update UI and show message input elements",
          "Add outgoing messages to the sender's UI",
          "Sending a message on a WebRTC Data Channel",
          "Listen for incoming messages on the dataChannel, and update UI",
          "Closing a peer connection and data channel when exiting a room",
          "Testing WebRTC closure for the user exiting the room",
          "Why does setting a variable to null, help with garbage collection?",
          "Closing a Data Channel",
          "Using webrtc-internals to analyze the entire WebRTC process",
          "Closing the second peer's connection",
          "Closing a Peer Connection",
          "WebRTC can work without the server",
          "Although WebRTC can work without a server, generally you still need a server",
          "Analyzing WebRTC in Wireshark",
          "Certificates",
          "SCTP property of the pc object",
          "Done and dusted!"
        ],
        "WebRTC Test": [
          "WebRTC Grandmaster Test"
        ],
        "Outro": [
          "Where to next?"
        ]
      },
      "requirements": [
        "Basic knowledge of HTTP, JavaScript and HTML will be helpful",
        "Desire to understand the INNER-WORKINGS of the pure WebRTC (no libraries)",
        "A Mac or PC is required as you need to code alongside me to learn effectively"
      ],
      "description": "*** BEST WEBRTC COURSE ***\nWebRTC allows web browsers and apps to connect directly to each other for video calls, voice chats, or sharing files in real time. It works without needing extra software or servers.\nPure WebRTC: forget libraries. I want you to learn pure native WebRTC.\nReal-Time Communication: Build apps with instant video, audio, and data exchange.\nBecome a Sought-After Developer: Employers want WebRTC expertise.\nPeer-to-Peer Connectivity: Use WebRTC to build direct peer-to-peer connections, WITHOUT A SERVER.\nVersatile Applications: From conferencing, video calls, chat applications to gaming, endless possibilities.\nCross-Platform Compatibility: Works in all major browsers, seamlessly.\nFuture-Proof Skills: Essential for modern, real-time web development.\nStand Out from the Crowd: Showcase your real-time communication skills.\nAre you ready?\nThe WebRTC API is complex and verbose, and this course will simplify every API and demystify all the complexity behind WebRTC.\nDive into the world of WebRTC and unlock the power of real-time communication on the web! This course takes you beyond basic tutorials, providing a comprehensive understanding of WebRTC from the ground up.\nForget relying solely on libraries – you'll learn to harness the raw power of WebRTC to build dynamic, interactive applications.\nImagine building video conferencing platforms, collaborative workspaces, and interactive gaming experiences directly within a browser or device. This course makes that dream a reality.\nUnlike traditional request-response models, WebRTC enables persistent, peer-to-peer connections WITHOUT A SERVER allowing for seamless data exchange without constant polling. In a world demanding real-time experiences, understanding WebRTC is no longer optional – it's essential.\n\n\nThis course focuses on the pure WebRTC protocol, providing you with in-depth knowledge and practical skills to build cutting-edge real-time applications.\nWhy WebRTC is a Game Changer:\nReal-Time Communication: Build applications that send and receive video, audio, and data instantly, creating engaging user experiences.\nPeer-to-Peer Connectivity: Understand the power of direct peer-to-peer connections WITHOUT A SERVER, reducing latency and improving performance.\nVersatile Applications: Create a wide range of applications, from video conferencing and live streaming to online gaming and collaborative tools.\nCross-Platform Compatibility: WebRTC is supported by all major browsers, ensuring your applications work seamlessly across different platforms and devices.\nFuture-Proof Skills: Master a technology that is essential for modern web development and will continue to be relevant as real-time applications (and yes, AI) become more prevalent.\n\n\nWhat You Will Learn:\nWebRTC Fundamentals: Discover what WebRTC is, its origins, and its role in revolutionizing real-time communication on the web.\nUnderlying Protocols: Deep dive into the protocols that make WebRTC work, including SDP, ICE, STUN, and TURN. Learn how these protocols enable peer-to-peer connections and handle NAT traversal.\nReal-World Applications: Explore various real-world applications of WebRTC, including video conferencing, live streaming, online gaming (I even show you a first-shooter game that uses WebRTC), and collaborative tools. Get inspired to build your own innovative WebRTC applications\nWebRTC APIs: Get hands-on experience with the WebRTC APIs, including getUserMedia, RTCPeerConnection, and RTCDataChannel. Learn how to access media devices, establish peer connections, and send data between peers.\nUnderstanding NAT: Gain insights into Network Address Translation (NAT) and its role in peer-to-peer communication. Learn how NAT affects connectivity and how WebRTC overcomes these challenges to establish seamless connections (spoiler alert: this is where STUN and TURN come into the picture).\nSignaling: Understand the importance of signaling in WebRTC, why its needed and learn how to implement a signaling server using WebSockets. No libraries. No SocketIO.\nData Channels: Learn how to use WebRTC data channels to send arbitrary data between peers. This opens up possibilities for building collaborative applications, file sharing tools, CDNs, and more.\nMedia Streams: Explore how to capture and stream audio and video using WebRTC.\nBuilding a Node Server: Get hands-on experience by building a Node.js server using native WebSockets (without Socket IO). Understand the server-side architecture necessary to support your WebRTC applications.\nCOURSE PROJECT: WebRTC Chat Application: Put your knowledge into practice by developing a fully functional chat application using WebRTC and data channels. This project will solidify your understanding of real-time communication and give you a tangible product to showcase your skills.\nWhy You Need This WebRTC Course:\nHere's why learning about WebRTC is crucial for any aspiring web developer:\nBuild Engaging Applications: Create dynamic, interactive experiences that captivate users and keep them coming back for more.\nUnlock New Possibilities: Explore a wide range of real-time applications and discover innovative ways to leverage WebRTC technology.\nStand Out from the Crowd: Showcase your skills and creativity by building standout projects that demonstrate your expertise in real-time communication.\nBecome a Sought-After Developer: Employers are looking for developers who can create modern, interactive applications, and WebRTC skills are highly valued.\nJoin a Thriving Community: Connect with other WebRTC developers, share ideas, and stay inspired as you explore new ways to push the boundaries of web technology.\n\n\nMeet Your Instructor: Clyde\nClyde is a coding enthusiast who has been immersed in the world of computers since the age of 7.\nWith years of experience in web development and a passion for teaching, Clyde brings a wealth of knowledge and practical insights to the course. His engaging teaching style and real-world examples will make complex concepts accessible and enjoyable.\n\n\nWhy AI Won't Replace WebRTC Developers\nWhile AI can automate certain coding tasks, it can't replicate the creativity, problem-solving skills, and deep understanding of network protocols required to build robust WebRTC applications. AI can assist with code generation, but it can't replace the human expertise needed to design, implement, and maintain complex real-time communication systems.\n\n\nEnroll Now\nDon’t miss this opportunity to elevate your web development skills and unlock the potential of real-time communication with WebRTC.\nRight this second, your competitors are learning how to become better web developers.\nWeb development is a blazing hot topic at the moment.\nBut you have a distinct advantage. This course offers memorable learning topics, actionable tactics and real-world examples. Get ready to transform your projects into interactive experiences that captivate users and make you money!\nLet's get crackin'!",
      "target_audience": [
        "Anyone interested in learning the art and science behind WebRTC",
        "Front-End Developers: Level up your apps with live features and direct peer-to-peer data exchange",
        "Back-End Developers: Build rock-solid server-side WebRTC support",
        "Full-Stack Developers: Aiming to create complete real-time applications from scratch",
        "YES: This course is for intermediates. It’s aimed at people who have some knowledge of coding, but want to dig deeper",
        "Communication Platform Developers: Designing video conferencing or chat applications",
        "IoT Developers: Stream data and control devices in real-time",
        "Game Developers: Interested in building multiplayer online games with low latency",
        "Engineers/Architects: Designing scalable, real-time communication architectures",
        "Developers Seeking a Competitive Edge: Mastering WebRTC for in-demand skills"
      ]
    },
    {
      "title": "Mastering Live(View) development in Go (GoLang)",
      "url": "https://www.udemy.com/course/mastering-liveview-development-in-go-golang/",
      "bio": "Modern Phoenix LiveView inspired development in GoLang, where JS is not needed (almost).",
      "objectives": [
        "Real-time user experiences with server-rendered HTML",
        "Phoenix(Elixir) LiveView-like programming in Go",
        "Form-based UI using Live(View)",
        "Pub/Sub based user communication using Live(View)",
        "Periodic background jobs using Live(View)",
        "Creating a single-page application in one file",
        "Integration with Fabric framework",
        "Handling application events in a declarative way",
        "Using websocket communication between frontend and backend"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "LiveView inspired programming - technical info": [
          "Application communication flow",
          "Websocket as a horse power for your application"
        ],
        "Key Live(View) concepts explained": [
          "Core minimum application structure",
          "Handling Events",
          "Using Params"
        ],
        "Thermostat - interactive application without JS": [
          "Thermostat Feature Overview",
          "GoLang App - minimal setup",
          "Creating Live(View) application core",
          "Starting with Thermostat UI",
          "Mounting application to backend",
          "Side note: Where backend state is stored?",
          "Buttons and click events - part 1",
          "Buttons and click events - part 2",
          "What we are not doing?",
          "Getting and displaying the username",
          "Communicating the status to UI",
          "Overview"
        ],
        "Quiz": [
          "Knowledge review # 1"
        ],
        "Live with Pub/Sub - real-time communication": [
          "Technical introduction",
          "Basic application setup updates",
          "Using Pub/Sub for communication for status updates",
          "Implementing status history updates",
          "What we are not doing"
        ],
        "Thermostat - adding a new features": [
          "Adding a temperature warning",
          "Adding a clock",
          "Adding a chat like communication",
          "Working with custom JS using 'hooks'",
          "Managing temperature using a keyboard",
          "What we are not doing"
        ],
        "Live(View) with other popular frameworks": [
          "Live(View) with Fiber Framework - part 1",
          "Live(View) with Fiber Framework - part 2",
          "Using Django compatible template engine"
        ],
        "Live(View) integration with NATS server (external Pub/Sub system or MQ)": [
          "What is NATS Server",
          "Setting up an external NATS periodic message publisher",
          "NATS Go client setup",
          "Making a Live app receiving and displaying NATS data"
        ]
      },
      "requirements": [
        "Basic programming skills in Go language",
        "Basic Web development skills"
      ],
      "description": "Welcome to the ‘Mastering Live(View) programming in Go’ course. With this course, you will add value to your existing Go Lang knowledge by getting familiar with several web development techniques known as a 'LiveView' programming model introduced within the last several years.\n\n\nWe will focus on several topics popular when building web applications and we take a look at how to implement those features using Live(View) techniques where JS usage is not needed or minimized at least. We are going to see how the Live(View) programming approach makes web app development easier to do and more solution-oriented.\n\n\nWhat you'll learn\nCreate interactive web apps in GoLang\nUse of websockets as a modern technique for client-server communication\nKnowledge of creating UI based apps with your current GoLang backend skills\nUse of Push techniques for updating users from backend\nCreate collaboration types of applications using popular LiveView approach\nSpeed-up your development with modern programming techniques\nCreate highly maintainable and easy to read application code\n\n\nWhat is the LiveVew programming approach/model?\nLiveView provides rich, real-time user experiences with server-rendered HTML. The LiveView programming model is mostly declarative: instead of saying \"when event ABC happens, change XYZ on the page\", events in LiveView are managed by handlers bound to event id. Once the state changes, LiveView will re-render the relevant parts of its HTML template(calculate diff) and push it to the browser, which updates itself most efficiently. This means developers write LiveView templates as any other server-rendered HTML and LiveView does the hard work of tracking changes and sending the relevant diffs to the browser using websocket communication. Phoenix Framework widely popularized this approach and there are implementations for many significant languages or platforms.\n\n\nTopics covered by this course:\nDuring the course, we create a basic web application in Go Lang with a Live(View) approach. The main topics include:\n\n\nLiveView-inspired programming - technical info\nKey Live(View) concepts explained\nThermostat - interactive application without JS\nImplementation of Pub/Sub communication\nEnhancing thermostat - implementation of chat, clock, JS hooks\nLive(View) in popular frameworks\nIntegration of Live(View) application with NATS server\n\n\nAn important part of this course is to realize 'what we don't need to do' when using the Live(View) approach. Simplification can be huge and the old saying that 'the best code is the code you don't have to write' is proven here.\n\n\nSummary:\nThe goal of this course is to make a guide in the Live(View) programming world. We use a pragmatic approach by building real applications and exploring the Live(View) programming model practically.\n\n\nGitHub repository:\nThe source code is available through the link attached to the last lecture in this course. You can clone the repo and use the code snippets we are building in this course.",
      "target_audience": [
        "For all existing or new Go programmers with an interest for LiveView like programming approach when building interactive applications easily."
      ]
    },
    {
      "title": "LINQ from Basic to Advanced",
      "url": "https://www.udemy.com/course/linq-from-basic-to-advanced/",
      "bio": "Learn LINQ - Every module feature demonstrated with real-time examples",
      "objectives": [
        "Leverage new features of C# 6.0, including extension methods and lambda expressions.",
        "Understand LINQ Architecture and Role to LINQ Providers",
        "Use LINQ to filter, sort, and group in-memory collections of objects.",
        "Perform CRUD operations using LINQ to SQL",
        "Create LINQ to SQL queries to execute SQL Server stored procedures."
      ],
      "course_content": {
        "LINQ Centric C# Language Extensions": [
          "Anonymous Types",
          "Partial Classes",
          "Extension Methods"
        ],
        "Linq Architecture": [
          "Linq Architecture"
        ],
        "Linq Queries": [
          "Linq Queries Syntax",
          "Lambda Expressions",
          "Linq Queries over Custom Collections"
        ],
        "Linq to SQL": [
          "Linq to Sql",
          "Performing CRUD Operations",
          "Performing CRUD Operations Using Joins",
          "Delay Loading",
          "Dealing with Concurrency Issues",
          "Linq and Stored Procedure",
          "Performing CRUD Operation Using Stored Operation",
          "Transaction Handling"
        ],
        "Linq To DataSet": [
          "Linq to Dataset"
        ],
        "LINQ To XML": [
          "LINQ To XML",
          "Sample Project With Complete source Code"
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "Basic Knowledge of C#",
        "Good understanding of Collections and generics recommended but not necessary."
      ],
      "description": "According to Anders Hejlsberg the chief architect of C#. “Microsoft original motivation behind LINQ was to address the impedance mismatch between programming languages and database.”\nBestDotNetTraining’s Online LINQ Training begins with all the prerequisite features of C# language which were added from 3.5 framework and goes on to understanding LINQ Queries Syntax and eventually concentrates on LINQ to SQL .\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\n\nLeverage new features of C# 3.0, including extension methods and lambda expressions.\nUnderstand LINQ Architecture and Role to LINQ Providers\nUse LINQ to filter, sort, and group in-memory collections of objects.\nPerform CRUD operations using LINQ to SQL\nCreate LINQ to SQL queries to execute SQL Server stored procedures.\nUnderstand how to resolve concurrency conflicts with LINQ to SQL.\nTo deal with Transactions using LINQ\nUsing Linq to DataSet for retrieving data from DataSet.\nWrite LINQ to XML queries to search XML documents and save them to the file system.\nBuild a real-world n-tier application using LINQ to SQL.",
      "target_audience": [
        "C# Developers working on Mobile and Web Applications"
      ]
    },
    {
      "title": "Medical WordPress Website for Hospitals, Clinics & Doctors",
      "url": "https://www.udemy.com/course/create-medical-website-for-dentist-clinic-laboratory-pharmacy-health/",
      "bio": "Create website for Dentist, Clinic, Pediatrician, Medical Laboratory, Ophthalmologist, Pharmacy, Medicine, Geriatrician,",
      "objectives": [
        "Design a professional medical website with FREE professional theme from me ( 59$ )",
        "How to make a medical website with wordpress",
        "Create website for Dentist, Clinic, Pediatrician, Medical Laboratory, Ophthalmologist, Pharmacy, Medicine, Geriatrician, Health Care Center",
        "Make your website Faster then ever",
        "Learn more about SEO and Blogging",
        "Edit pages with WP bakery page builder visually without coding knowledge",
        "Embed Google Maps in website on contact page and edit contact details for multiple branches",
        "Installing the theme and importing demo data of your medical category",
        "Duplicating / Cloning pages and posts faster then ever",
        "Editing slider revolution to edit sliders and understanding how to animate them",
        "Website Header and Footer Customization",
        "Editing doctor team members and their information",
        "Learn to use E commerce functionality with Woocommerce",
        "Learn to take online payments and managing store",
        "Learn to create events and managing booking with doctor's timetable"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Hosting for wordpress": [
          "Best WordPress Hostings",
          "Get WordPress Hosting",
          "DreamHost Hosting - Installing WordPress"
        ],
        "Creating medical website": [
          "Download Theme - Medical WordPress Theme ( PROVIDED FREE )",
          "Medical WordPress Theme ( PROVIDED FREE ) Preview",
          "Installing Theme & Activating Plugins",
          "importing Theme Demo Data",
          "Editing and Creating Menu Items",
          "changing default homepage",
          "fix slider revolution for different homepages"
        ],
        "Website header and Footer": [
          "Header Customization",
          "Footer Customization",
          "Header side area"
        ],
        "Creating and editing website pages": [
          "Editing Homepage and Other Pages with Page Builder ( Frontend )",
          "Editing and Adding new doctors in team and editing testimonials",
          "Editing Dentist Homepage",
          "Timetable",
          "Editing slider Revolution Slider",
          "Editing Contact Page, Form and Adding Map in Page",
          "Easily Duplicate / Clone Page and Posts"
        ],
        "Ecommerce Store - Woocommerce": [
          "Woocommerce store",
          "Woocommerce payment and menu",
          "Changing website name and managing users"
        ],
        "automatically adding products to website without manual work": [
          "Scaping products with chrome extension - no code",
          "Cloud Scraping products and updating new products with monitoring"
        ],
        "Blogging and seo": [
          "Keyword Tools ( BEST FREE TOOLS )",
          "Integrate Google Analytics with WordPress",
          "Yoast and Rankmath SEO Plugins",
          "Backlinks and Social Website",
          "Google Adsense and other Advertisement Platforms",
          "Affiliate Marketing and Best Marketplaces ( 2 )"
        ],
        "Make website faster": [
          "Tools for Pagespeed and Performance ( BEST FREE TOOLS )",
          "WP-Rocket WordPress Plugin and Comparison ( PLUGIN PROVIDED FREE )",
          "Configuring WP-Rocket Plugin",
          "Imagify Image Compression",
          "Minify CSS and Javascript ( JS ) file without any plugins",
          "Cloudflare CDN"
        ],
        "Bonus": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Computer and an internet connection",
        "You don't need to have any experience"
      ],
      "description": "Do you want to create a Medical website with Wordpress If yes, then you are in the right place.\nEasily create an online website with our powerful yet simple all-in-one platform. ( WordPress )\n\n\nDownload Premium Wordpress theme - MEDICLINIC ( FREE )\nDownload WP Rocket ( FREE )\nWith this Course, you will save 120$\n\n\n#1 Provide a world-class experience\n#2 User-friendly website builder\n#3 Fully optimized for web and mobile\n#4 Advanced developer customization\n\n\nThis course is meant for anyone who wants to create a Medical Health website with Wordpress. There is no experience required. You can do this if you can point and click. The idea is to teach a broad subject like WordPress website creation coupled with a specific outcome through a really specific application of the knowledge like creating a medical website with WordPress.\nLearn how to create a Medical Website ( LMS ) with WordPress even if you are a beginner. If you are an intermediate or advanced user of WordPress, you will know the lessons you need to take as the outline has a meaningful learning path and meant to address the beginner as well as the intermediate user. I will take you by the hand and we will travel the path together. We will move from the beginner stage to the intermediate and the advanced stages along the course.\nThe steps are clearly laid down with walk-throughs so that you can follow along the course and create the desired outcome.\nThis course is suitable for professionals across verticals who would like to create a great professional medical website with WordPress.\n\n\nYou will be able to create a website for different categories like :\nDentist\nClinic\nPediatrician\nMedical Laboratory\nOphthalmologist\nPharmacy\nMedicine\nGeriatrician\nHealth Care Center\n& more\n\n\nStart now and turn your knowledge into Professional website with Stunning design\nYou Have Nothing To Lose But Everything To Gain!\n30-Day Money-Back Guarantee!",
      "target_audience": [
        "Anyone who wants to learn how to make a WordPress website with no experience",
        "Anyone who wants to make a website the easiest way",
        "Anyone who wants to learn how to start a web design business",
        "Doctors who wants to learn to build websites for their hospital and clinics and get patients easily"
      ]
    },
    {
      "title": "Laravel - Learn How to Create Charts with Vue.js and Laravel",
      "url": "https://www.udemy.com/course/laravel-learn-how-to-create-charts-with-vuejs-and-laravel/",
      "bio": "Vue & Laravel Charts The Easy Way",
      "objectives": [
        "Student will be able to create custom charts using Vue and Laravel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Reference Files",
          "Creating Our Migrations and Routes",
          "Creating Routes, Methods, and Testing",
          "Setting Up Index and Store Methods",
          "Creating Our Routes and Views",
          "Creating the HTML Product Addition Form",
          "Creating a VUE Component and Adding the Form",
          "Hooking up Our Form with VUE",
          "Saving a Product In The Database with VUE",
          "Creating Our Vue Chart In the Component Part 1",
          "Creating Our Vue Chart In the Component Part 2",
          "Creating Our Vue Chart In the Component Part 3",
          "Creating Our Vue Chart In the Component Part 4",
          "Conclusion"
        ]
      },
      "requirements": [
        "Some Laravel Knowledge is required to understand this course"
      ],
      "description": "On this short course students will learn to use VUE.js with Laravel to create custom charts to display data. Students will also learn to send and receive requests via VUE to the backend (PHP ) where they then can process it.\nThis is an excellent course for those wishing to learn this knowledge to apply it right away in their projects. We jump right to the point in this course without wasting too much time in trivial matters.",
      "target_audience": [
        "Students who want to create charts using Vue and Laravel should take this course"
      ]
    },
    {
      "title": "Angular for beginners: Learn from scratch",
      "url": "https://www.udemy.com/course/angular4-for-beginners-learn-from-scratch/",
      "bio": "Learn skills to be productive with angular 4",
      "objectives": [
        "Setup development environment for Angular4",
        "Use Angular CLI",
        "Generate components",
        "Nest components",
        "Define external HTML templates",
        "Define inline HTML templates",
        "Use Interpolations",
        "Use conditional statements with templates",
        "Display data from arrays",
        "Bind data",
        "Display assets in view"
      ],
      "course_content": {
        "Getting the lab environment ready": [
          "Introduction",
          "Installing Node.js",
          "Installing Angular CLI",
          "What is Git ?",
          "Basic Git Architecture illustration",
          "Git work flow",
          "Installing Git",
          "Git Configuration",
          "How to retrieve specific configuration settings",
          "Initialising git repository",
          "Adding files to staging index",
          "How to commit files to repository",
          "Using Git help",
          "Installing SublimeText Editor"
        ],
        "Angular 4 Basics": [
          "Create a new project",
          "Introduction to Angular 4 Components",
          "Angular 4 component -Continued",
          "Introduction to basic Templating in Angular4",
          "Defining External HTML Templates",
          "Defining Inline HTML Templates",
          "Using Interpolation with Templates",
          "Using ngFor directives",
          "Using conditionals with Templates",
          "Property binding",
          "Event Binding",
          "Defining CSS in Angular4",
          "Css Class Binding",
          "Css Style binding",
          "Setting up Syntax highlighting with Sublimetext",
          "Creating a service in angular4",
          "Using a Service in angular 4",
          "How to use services in Components",
          "Setting up angular4 animations",
          "Getting component ready for animation",
          "Animation states and styles",
          "Attaching animation to template"
        ],
        "Deploying Angular4 App": [
          "What is Github",
          "Create a Github account",
          "How to create remote repository",
          "Deploying your angular4 app project",
          "Deploying your angular4 app to GitHub Pages",
          "Pushing angular app to remote repository",
          "Pushing your app to GitHub Pages",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic working knowledge of HTML and CSS",
        "Basic knowledge of JavaScript"
      ],
      "description": "AngularJS is one of the most popular JavaScript framework available today for creating web applications. And now Angular 4 and TypeScript are bringing true object oriented web development to the mainstream, in a syntax that is strikingly close to Java 8. Angular 4 is the next version of Google’s massively popular MV* framework for building complex applications in the browser (and beyond).\nThis AngularJS 4 beginners course provides you the skills needed to create dynamic web applications. You will learn about some concepts of AngularJS.\nAngular allows your application to have an expanded HTML library. Learn to add behaviour to your HTML and speed up your application’s responsiveness. Angular js is famous for creating single page application which is known as SPA. Angular developers are well in demand with recruiters.\nWho is This Course for?\nThis course is aimed at absolute beginners who want learn about Angular Js.\nBeginner developers\nBeginner programmers\nPrerequisites\nBasic Knowledge of HTML\nBasic Knowledge of CSS\nBasic Knowledge of JavaScript\nWhat You will learn:\nHow to setup a development environment\nHow to create a new project in angular 4\nHow to generate components\nHow to nest components\nHow to use basic templates\nHow to use interpolation with your templates\nHow to define external HTML templates\nHow to define inline HTML Templates\nHow to create arrays\nHow to use *ngFor directives to display objects of an array\nHow to use conditional statements with your templates\nHow to interact with components\nHow to data bind",
      "target_audience": [
        "Beginner developers",
        "Beginner programmers",
        "Beginner angular 4 developer"
      ]
    },
    {
      "title": "Microsoft Word: Ultimate Microsoft Word Beginner to Advanced",
      "url": "https://www.udemy.com/course/microsoft-word-ultimate-microsoft-word-beginner-to-advanced/",
      "bio": "Latest Microsoft Word course to create professional documents and Master the dynamic tools in Microsoft Word!",
      "objectives": [
        "Learn the complete Microsoft Word from basic to Advanced level",
        "Learn to create professional documents in Microsoft Word",
        "Master every feature that Microsoft Word provides",
        "Be able to create your own professional document"
      ],
      "course_content": {
        "Word Essentials": [
          "Introduction",
          "Welcome to Word",
          "Meet Word",
          "Getting Started in Word",
          "Basic Font Formatting",
          "Paragraph Alignment",
          "Bulleted Lists",
          "Numbered Lists",
          "Multi Level Lists",
          "Indenting & Line Spacing",
          "Format Painter"
        ],
        "Intermediate Formatting": [
          "Let's take those docs up a notch",
          "Text Effects and Typography",
          "Shading & Borders",
          "Sort Tool",
          "Design with Themes",
          "Styles",
          "Colors Schemes",
          "Deep Dive into Fonts",
          "Adding Water Marks",
          "Changing Page Color",
          "Page Borders"
        ],
        "Working with Objects": [
          "What are objects and why do we need them",
          "Shapes 101",
          "Shape Fill Options",
          "Shape Outline Formatting",
          "Shape Effects",
          "Text Boxes",
          "Adding and Editing Icons",
          "Pictures in Documents",
          "Videos in Documents",
          "Word Art",
          "Smart Art",
          "Wrap Text Around Object",
          "Grouping Objects",
          "Object Magic Keys",
          "Arranging & Positioning Objects",
          "Aligning & Rotating Objects"
        ],
        "Page Layout Tips & Techniques": [
          "Importance of using the right Page Layout",
          "Page Margins",
          "Page Orientation",
          "Page Size",
          "Creating Columns",
          "Insert a Cover Page",
          "Insert a Blank page",
          "Page Breaks",
          "Formatting Trio - Gridlines, Rulers and",
          "Window Options",
          "Zoom Options & Page Movement",
          "Selection Pane",
          "View Options"
        ],
        "Other Useful Tools": [
          "Intro",
          "Find & Replace",
          "Header & Footer",
          "Date, Time & Page Numbers",
          "Drop Caps Lettering Technique",
          "Document Properties",
          "Using Fields",
          "Adding Links",
          "Reuse Files Tool",
          "Add Ins",
          "Draw Tool",
          "Clipboard Hacks (Multiple Items & Panel)",
          "Add Signature Line"
        ],
        "Tables, Charts & Excel Data": [
          "Intro to Tables, Charts & Excel Data",
          "Creating Tables in Word",
          "Adding and Editing Cells in Table",
          "Using Pen & Eraser in Table",
          "Formatting Tables in Word",
          "Importing and Linking Live Excel Data",
          "Creating Charts",
          "Formatting Chart Elements",
          "Filtering Charts",
          "Updating Charts with New Data"
        ],
        "Design Aesthetics in Word": [
          "Welcome to Design School",
          "Color Schemes",
          "Custom Fonts",
          "Kerning (Font Hack)",
          "Design Trends",
          "Creating Transparent Overlays",
          "Designing Custom Shapes",
          "Sliced Image Trick",
          "Displaying Big Data - Highlight Trick",
          "Displaying Big Data - Photo Trick"
        ],
        "Reference Tools": [
          "What are Reference Tools",
          "Creating a Table of Contents",
          "Adding Footnotes",
          "Search Tool",
          "Researcher Tool",
          "Adding Citations & Building Bibliographi",
          "Captions & Inserting Tables Figures",
          "Cross Referencing & Indexes"
        ],
        "Mail Tools": [
          "Welcome to Mail Tools",
          "Creating Envelopes"
        ],
        "Reviewing Files": [
          "Reviewing 101",
          "Spell Check, Thesaurus & Word Count",
          "Read Aloud & Accessibility Check",
          "Translate & Language",
          "Comments",
          "Tracking Changes",
          "Comparing Documents",
          "Protecting Documents",
          "Hide Ink on Documents",
          "LinkedIn Resume Assistant",
          "LinkedIn Notes"
        ]
      },
      "requirements": [
        "No prior Word experience necessary!",
        "You will learn from very basics of Microsoft Word to Advanced- You do not need to have any prior knowledge in Microsoft Word"
      ],
      "description": "You will learn Microsoft Word in this course. You will learn how to create professional documents and learn the dynamic tools in Microsoft Word. You will learn the basics of Microsoft Word. You do not need any prior Word experience. Microsoft Word is one of the most widely used word processing applications in the world, essential for students, professionals, educators, and business users alike. This comprehensive course is designed to equip learners with the knowledge and skills required to confidently create, format, and manage documents using Microsoft Word. Whether you are a complete beginner or someone looking to refresh your skills, this course offers a structured and practical approach to mastering Word.\nThe course begins with an introduction to the Word interface, guiding learners through essential elements such as the ribbon, toolbars, and document views. You will learn how to create, open, save, and print documents efficiently. As the course progresses, learners will explore core formatting features including fonts, paragraph alignment, line spacing, bullet points, and numbered lists. They will also become proficient in using styles and themes to maintain consistency throughout their documents.\nBy the end of the course, You will be able to confidently produce various types of documents including resumes, reports, letters, brochures, and academic papers. The course includes hands-on exercises, real-world projects, and step-by-step guidance to reinforce learning and ensure practical application of skills.",
      "target_audience": [
        "If you want to learn the complete Microsoft Word from basics to Advanced level , This course is perfect for you!"
      ]
    },
    {
      "title": "Storybook Official Tutorial Code Along - Web Development",
      "url": "https://www.udemy.com/course/storybook-official-tutorial-code-along-web-development/",
      "bio": "Modern 2024 Industry Web Development: Javascript Interview Skills + React and Redux Crash Course",
      "objectives": [
        "Master Storybook: Build stunning UIs, write robust tests, & impress recruiters with this in-demand skill.",
        "Go Code-Along Hero: Build a portfolio project & conquer advanced concepts like asyncThunk & Playwright!",
        "Deploy & Automate: Master GitHub, Chromatic, & push-triggered workflows for seamless development.",
        "Land Your Dream Job: Become an industry-ready UI developer with Storybook - the key to career success."
      ],
      "course_content": {
        "What is Storybook - A Key Level Overview": [
          "What is Storybook and why should we care",
          "Which Leading Engineer Teams are using Storybook",
          "The Problem with modern large scale Web Apps",
          "Join Our Online School",
          "How Storybook improves applications with the isolation of UI development",
          "How storybook works with components",
          "Thesis - Storybook saves valuable time and resources for projects",
          "Summary and brief overview of this section - Storybook Utility"
        ],
        "React Crash Course for Beginners - What is React and How To Build Web Apps": [
          "Code Solution",
          "Important note on the upcoming sections",
          "What is the DOM and what is the React Virtual DOM - React Fundamentals",
          "How to start building a react app with CRA",
          "CRA - React Files and Dependencies - Overview",
          "How to connect the Root of React to the DOM and Rendering React Application",
          "Running A Local Development Server of React",
          "What are functional components in React",
          "Quick Observation on Echma Standards with React",
          "The React Component Tree And Composite Components",
          "How Props work in React",
          "Exercise - Build A React Component",
          "What are hooks in React",
          "Input Dynamic tests and events with React",
          "Event Handling Practice and Section Summary"
        ],
        "Build A Storybook Example From Scratch With React - Junior Level": [
          "Installing and setting up Storybook into your Project Application from Scratch",
          "Overview of How Storybook is Configured with Web App Projects",
          "How to build a component in React with Storybook - visual breakdown",
          "Build A Basic Sub Component In React",
          "How to build a story for react components from scratch",
          "How to use args in Storybook for multiple dynamic component stories",
          "How to use argTypes and controls in storybook to create user friendly stories",
          "Automating Documentation for Web Components with Storybook",
          "Customizing Docs and values with Storybook",
          "Adding Component Complexity for Storybook Arguments",
          "CSS Techniques and Storybook rendering",
          "What are actions in Storybook and the Synthetic Base Event Object",
          "Hooking Up Live React Components to Storybook and Rendering Fundamentals",
          "Creating Stories with mock state and events in Storybook",
          "Testing Interactions and Events with React Components in Storybook",
          "Final Code Solution"
        ],
        "Storybook - Advanced Tutorial Code Along": [
          "Taskbox Project Link",
          "How to set up Storybook with React",
          "How to build a component with Storybook - CDD Methodology",
          "Configurations for Storybook and Storybook Local Server",
          "PropTypes and CSS formatting with Storybook and React",
          "Using WCAG Accessibility to Catch Errors in Storybook Addon",
          "Building a Composite Component in React for Storybook",
          "Building Out Robust Components with Storybook"
        ],
        "Connecting External Data with Storybook - Redux": [
          "Mini Crash Course on Redux Toolkit - Setting up the Store",
          "Dispatching Actions and Selectors for State with Redux in Components For React",
          "Creating a Mock Redux Store for Stories in Storybook",
          "Connecting Mock External Data into Stories with Storybook for Components"
        ],
        "Building Higher Level Components with Storybook - Redux and React Example": [
          "Starter Code",
          "Summary of Redux Code And Mock Data From Previous Section",
          "Fetching Remote API Data with Storage",
          "Fetching Data with Component Mounting in React and Error Handling",
          "Building A Screen Component And Wrapping React Around Redux",
          "Using Service Workers in Storybook to Build Stories with API Requests",
          "Feature Updates with Complex Component Pages and Screens in Storybook",
          "Automating Tests with Interactions in Storybook",
          "Storybook Playwright Automations for Testing"
        ],
        "Deploying Storybook to Github with Chromatic and Automations": [
          "Quick Summary So Far and Upcoming Notice for this Section",
          "Starter Code",
          "How to deploy Storybook to Github and Chromatic",
          "Automating Deployments to Storybook with CI Actions and Rebasing Merges",
          "GITHUB ACTION CODE",
          "Visual Testing with Regression in Components using Storybook",
          "Conclusion and Congratulations!!",
          "Taskbox Final Solution Code"
        ]
      },
      "requirements": [
        "No programming experience needed. A fundamental understanding of Javascript is recommended and React + Redux Crash Course included free!"
      ],
      "description": "Are you ready to take your Web Development to the next level? Look no further! In this comprehensive and in-depth Udemy course, you will embark on an immersive journey through the Storybook official documentation and the Taskbox example as the final project (made by Chromatic), equipping yourself with the knowledge and expertise to excel as a front end Javascript developer.\nMaster Frontend Web Development with Storybook: Zero to Hero - Code Along\nMaster the in-demand skill that sets top developers apart and transforms your workflow. This comprehensive, code-along course is your passport to UI development mastery with Storybook - the industry gold standard.\nWhy Storybook?\nUsed by thousands of top companies:  Over 30,000 projects use Storybook. It powers frontend development for teams at Airbnb, Lyft, Slack, Twitter, NASA and thousands of more companies. It's used to build top design systems like Shopify Polaris, IBM Carbon, Salesforce Lightning, and the WordPress Gutenberg project.\nHighly sought-after skill: Companies crave developers who can build and test beautiful, consistent UIs with Storybook. This course unlocks what high-paying job opportunities as frontend developers look for when it comes to mastering key testing and team frameworks.\nSupercharge your development: Say goodbye to slow iteration cycles and inconsistent UIs. Storybook boosts efficiency, simplifies collaboration, and ensures pixel-perfect designs.\nWhat makes this course different?\nOfficial Storybook Tutorial + Hands-On Code-Alongs: We dive deep with the official tutorial, then take you step-by-step through real-world projects, building confidence and practical skills.\nGo beyond the basics: We cover advanced concepts like Composite components, argTypes, mockData, service workers, asyncThunk, Playwright automations, fetches, and WCAG best practices.\nMaster React & Redux (Crash Courses Included): Get up to speed with these essential companion technologies to power your Storybook skills.\nBuild a quality portfolio project: Showcase your mastery with a fully-functional application built from scratch using the official Taskbox example as a foundation. We'll add exciting augmented features to make it truly shine.\nDeployment & Automation mastery: Learn to confidently deploy your projects and automate tasks with GitHub,Chromatic, and Git push-triggered automation.\nTesting that covers every corner: Write comprehensive tests for accessibility, functionality, and performance,ensuring rock-solid applications.\nThe Curriculum:\nStorybook Foundations: Dive into the core concepts, setting up your environment, and writing your first stories.\nReact Crash Course: Get comfortable with React, the foundation of Storybook development.\nRedux Crash Course: Understand state management with Redux, a powerful partner for Storybook.\nBuilding Components with Storybook: Master component creation, composition, and testing, including accessibility best practices.\nAdvanced Techniques: Explore mockData, argTypes, service workers, asyncThunk, and Playwright automations.\nTaskbox Mastery: Build the official Taskbox example from scratch, adding exciting new features.\nDeployment & Automation: Learn to deploy to production with GitHub, Chromatic, and automated workflows.\nTesting Strategies: Write unit, integration, and accessibility tests for bulletproof applications.\nPortfolio Project: Build a stunning application to showcase your skills and land your dream job.\nBy the end of this course, you'll be:\nA confident Storybook developer: Build beautiful, consistent UIs with unparalleled efficiency.\nIndustry-ready: Impress recruiters for high-paying UI development jobs.\nA workflow master: Boost your productivity and collaborate seamlessly with designers and developers.\nA creative force: Build stunning, pixel-perfect applications with cutting-edge features.\nDon't just build UIs, master them. Enroll today and unlock your future as a top-tier UI developer!\nBonus: Additional resources, downloadable code samples, and a supportive community forum are included to accelerate your learning journey.\nInvest in your skills, invest in your future. Enroll now and let Storybook take your career to the next level!\nCourse Image by Racool_studio on Freepik",
      "target_audience": [
        "Junior developers looking to build a strong foundation in Web Development and advance their Web Development skills.",
        "Intermediate web developers seeking to master Scalable Code and excel in high-level front end interviews.",
        "Senior web developers aiming to stay updated with modern concepts and industry requirements."
      ]
    },
    {
      "title": "Build React forms using Formik, No more pain!",
      "url": "https://www.udemy.com/course/build-react-forms-using-formik-no-more-pain/",
      "bio": "Build React forms using Formik",
      "objectives": [
        "Be able to create a real web forms using React and Formik."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why React Formik?"
        ],
        "React Formik": [
          "Setting up development environment",
          "First simple form using Formik!",
          "Form lifecycle",
          "Form validation",
          "Touching field",
          "Disable form submitting",
          "A little bit of refactoring"
        ],
        "Signup form with React select and Yup!": [
          "Creating Signup form component",
          "Let's create our own Drop list using react select",
          "Let's wrap our form using withFormik()",
          "Add some life to our form",
          "Handle form submit",
          "validationSchema using Yup",
          "Customs errors component using ErrorMessage",
          "Finalize the form using <Field /> and <Form /> built-in components"
        ],
        "Project repository": [
          "Repository link"
        ]
      },
      "requirements": [
        "Basic understanding of React and Javascript."
      ],
      "description": "This course was created for those without experience in react Formik. By watching these videos, you'll go from knowing nothing about React Formik to building a working web forms. You'll see how far just knowing basic React can get you when using React Formik to build a web forms.\nThe app built in this course is a signup form.\nThis course assumes basic understanding of React, Javascript and HTML.",
      "target_audience": [
        "Anyone who wants to use React Formik to build web forms."
      ]
    },
    {
      "title": "Step-By-Step Ethereum Smart Contract & Web3 Development",
      "url": "https://www.udemy.com/course/step-by-step-smart-contract-web3-development/",
      "bio": "Build Professional Ethereum Blockchain Apps With Solidity, Ethers.js, Hardhat, OpenZeppelin... + 85 Page Course Manual",
      "objectives": [
        "Building a complete Web3 application using the most popular and most in-demand tools and technologies",
        "Successfully using all major Blockchain tools & technologies: Solidity, Hardhat, EthersJS, OpenZeppelin, React, IPFS & Pinata...",
        "Writing secure smart contracts using the proven and battle-tested OpenZeppelin smart contracts",
        "Using Hardhat to compile, test and deploy your smart contracts",
        "Deploying your contracts to a local Hardhat node, to Ganache and to the Sepolia test network",
        "Advanced testing techniques using the Hardhat-Chai matchers and the Hardhat Network Helpers",
        "Uploading your images and NFT metadata to IPFS using the Pinata API",
        "Creating an NFT using the ERC721URIStorage contract",
        "Communicating with a Blockchain and calling smart contract functions using the Ethers library",
        "Using React and Vite to create the frontend of your Web3 application",
        "Using the MetaMask RPC API to fully integrate your Dapp with MetaMask"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome And A Quick Overview Of The Course",
          "Course Manual, Source Code And Other Resources",
          "Tips To Improve Your Course Taking Experience"
        ],
        "Setting Up Your Development Environment": [
          "Overview - Development Environment Setup",
          "Installing Node.js, VSCode And Ganache",
          "ASSIGNMENT: Setup Your Development Environment",
          "Installing And Configuring MetaMask",
          "ASSIGNMENT: Install And Configure MetaMask"
        ],
        "Getting Started with Hardhat": [
          "Overview - Hardhat",
          "Creating A Smart Contract Project With Hardhat",
          "ASSIGNMENT: Create Your First Hardhat Project",
          "The Project Code: Practice Code And Finished Project",
          "ASSIGNMENT: Download The Project Code From Github",
          "The Hardhat Config File",
          "Third Party Accounts, API Keys And the .env File",
          "ASSIGNMENT: Get Your API Keys And Update Your Environment File"
        ],
        "The Basics of Solidity": [
          "Overview - Solidity",
          "A Quick Overview Of Smart Contracts And Solidity",
          "The Basic Structure Of A Solidity Smart Contract",
          "Solidity Value Types",
          "ASSIGNMENT: Solidity Value Types",
          "Solidity Reference Types",
          "ASSIGNMENT: Solidity Reference Types",
          "Error Handling In Solidity",
          "Functions and Modifiers",
          "ASSIGNMENT: Functions And Modifiers",
          "Events in Solidity",
          "Inheritance In Solidity",
          "ASSIGNMENT: Digging Deeper Into Solidity"
        ],
        "Creating Your ERC721 NFT Smart Contract": [
          "Overview - ERC721 NFT Smart Contract",
          "NFT's And The ERC721 Standard",
          "OpenZeppelin Contracts And Libraries",
          "ASSIGNMENT: Study The OpenZeppelin ERC721 Contract",
          "Creating Your NFT Smart Contract",
          "Compiling And Deploying Your Smart Contract Locally",
          "Deploying Your Smart Contract To The Sepolia Test Network",
          "Verifying Your Smart Contract On Etherscan",
          "ASSIGNMENT: Write, Deploy And Verify Your Smart Contract"
        ],
        "Ethers.js - Interacting With The Ethereum Blockchain": [
          "Overview - Ethers.js",
          "A Quick Overview Of Ethers.js",
          "The Ethers.js Provider",
          "ASSIGNMENT: Ethers.js Provider",
          "The Ethers.js Signer",
          "ASSIGNMENT: Ethers.js Signer",
          "The Ethers.js Contract",
          "ASSIGNMENT: Ethers.js Contract",
          "Writing The NFT Minting Script",
          "ASSIGNMENT: Write The NFT Minting Script"
        ],
        "Testing Your Smart Contract With Hardhat": [
          "Overview - Testing Smart Contracts With Hardhat",
          "Basic Structure Of A Test File",
          "Hardhat Network Helpers And The LoadFixture",
          "Writing Tests For Your Smart Contract",
          "ASSIGNMENT: Test Your Smart Contract"
        ],
        "Creating A React Frontend For Your DApp": [
          "Overview - React Frontend",
          "Bootstrapping A Simple React App With Vite",
          "The Basic Structure Of A React App",
          "Merging The Hardhat And The React Project",
          "The MetaMask RPC API",
          "Integrating MetaMask Into Your Web3 Frontend",
          "ASSIGNMENT: Integrate MetaMask Into Your Web3 Frontend",
          "Pinning The NFT Metadata To An IPFS Node",
          "Creating The MintNFT Transaction For MetaMask",
          "ASSIGNMENT: Create The MintNFT Transaction For MetaMask",
          "Creating The NFTDAPP React Component",
          "ASSIGNMENT: Complete The NFTDAPP React Component",
          "Testing The App On Hardhat And Sepolia",
          "ASSIGNMENT: Test Your App On Hardhat And Sepolia"
        ],
        "Adding Your Project To Github": [
          "Adding Your Project To A Git Repository",
          "Adding Your Project To Github"
        ],
        "Conclusion": [
          "Final Thoughts And Tips",
          "Congratulations And Thank You"
        ]
      },
      "requirements": [
        "A computer running Windows, MacOS or Linux",
        "A basic understanding of a programming language like JavaScript would be great",
        "Motivation to learn about a new technology"
      ],
      "description": "This course is ideal for you, if you are looking for a quickstart into the fascinating world of blockchain and Web3 development.\n\n\nBuild a complete Web3 app that uses the most in-demant tools and technologies...\nYou will be building a complete Web3 application that is relatively simple, but integrates all tools, technologies and methodologies that are currently used by the biggest and most well-known applications in the blockchain industry.\n\n\nSome of those tools and technologies are...\nSolidity, Ethers.js, Hardhat, OpenZeppelin, MetaMask RPC API, IPFS, Pinata API, Etherscan, React + Vite, Remix, Sepolia...\n\n\nWe'll focus  on the essentials...\nThe features you'll be using on a daily basis as a professional Blockchain / Web3 developer... And, we won't worry about all the smaller details you'll almost never need.\nOf course, every professional Web3 projects has its particularities and you sometimes you will be forced to dig really deep. No course in this world can cover the nearly infinite amount of challenges you may encounter - not even the ones that contain 100+ hours of content...\n\n\nYou'll get a  rock-solid foundation as Ethereum/Web3 developer...\nThe goal of this course is to introduce you to all major tools and technologies and to provide you with a rock-solid foundation. From there, you will easily be able to go further, to dig deeper and to find the solutions to your programming challenges.\nI'm not a big fan of spending weeks and even months going through lengthy training courses and that's why I tried my best to keep this course as short and concise as possible without neglecting any of the really important stuff.\nI recommend, you acquire the basics and fundamentals as quickly as possible... and then you actually start building stuff and have fun solving those challenges you will encounter in real-world projects...\nAnd, that's exactly what this course has been designed for!\n\n\nA a step-by-step blueprint to build real-world Blockchain apps...\nIn short, you get a step-by-step blueprint that provides you with all the knowledge you need in order to successfully build complex, real-world, decentralized applications (Dapps) for the Ethereum blockchain.\n\n\nThe tools and technologies you'll be using\nSolidity - Smart Contract Programming Language\nHardhat - Smart Contract Development Environment & Local Developer Blockchain\nEthers.js - JavaScript Library for Interacting with the Ethereum Blockchain\nOpenZeppelin - Open-Source Framework for Building Secure Smart Contracts\nSepolia - Ethereum Test Network (Running PoS)\nReact & Vite - JavaScript Frontend Library & Build Tool\nIPFS & Pinata API - Decentralized File Storage & Media Pinning Service\nMetaMask RPC API - Protocol that allows MetaMask to Communicate with Ethereum and EVM Compatible Blockchains\nRemix - Browser-based Solidity Compiler & IDE\nEtherscan - Block Explorer and Analytics Platform\nGit & Github - Source Code Version Control System\n\n\nThis is much more than just a regular video course...\nOf course, you get the complete source code of the finished project (smart contracts, Hardhat scripts and React frontend).\nYou also get an unfinished \"Practice-Project\". This project already contains all non-blockchain relevant code (like HTML, CSS...) and you have to provide all blockchain related features you'll learn throughout the course. I provide you with detailed comments (//TODO blocks in code) so, you know exactly, what kind of feature needs to be provided and where it needs to be provided.\nIn the Solidity section of the course we'll be coding various simple smart contracts for all important Solidity topics and there will also be several assignments. And, yes, you also get the code for those smart contracts as well as for the solutions for the assignments.\nI also understand, not everyone is a visual-only learner. Some people prefer written content and that's why I also provide you with several written documents...\nYou get the entire course manual that provides you with everything you learn throughout the course in written form: discussion of the various tools and technologies we are using, code analysis, important Hardhat, Node.js, Git... commands, links to important websites, screenshots...\nYou also get several \"Quick-Guides\" for the most important technologies we are using, like Ethers.js, Hardhat MetaMask RPC API... and there are a few others. Sometimes it's a bit complicated and tedious to find what you are looking for in the official docs of those technologies and that's why I distilled the most important features, classes, methods and properties - the ones you need on a daily basis as a blockchain developer - for you.",
      "target_audience": [
        "Developers who want to build Ethereum blockchain applications with Solidity",
        "Anyone technically oriented who wants to get a deeper understanding of building Web3 applications on the Ethereum blockchain",
        "Developers looking for a quickstart into the exciting world of Smart Contract and Dapp development",
        "Professionals who want to add \"Blockchain Developer\" to their resume"
      ]
    },
    {
      "title": "How To Make A Wordpress Website 2020 | Divi Theme Tutorial",
      "url": "https://www.udemy.com/course/how-to-make-a-wordpress-website-2020-divi-theme-tutorial/",
      "bio": "Learn how to make a wordpress website with the #1 most popular wordpress theme in the world, the divi theme",
      "objectives": [
        "How To Make A Wordpress Website",
        "How To Use the Divi Theme",
        "How To Start A Web Design Agency"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install Wordpress + Hosting",
          "Create Menu + Make Pages",
          "Download And Activate Divi Theme"
        ],
        "Creating The Home Page and Website!": [
          "Home Page Process",
          "Creating The Home Page",
          "Creating The Home Part 2",
          "Creating The Home Page Part 3",
          "Creating The Home Page End",
          "Theme Customizer",
          "Creating The About Us And Contact Us Page"
        ],
        "Learning More About The Divi Theme": [
          "What will you learn in this section",
          "Divi Theme Builder",
          "Divi Theme Builder Part 2",
          "Divi Theme Features",
          "Mobile Optimization",
          "Divi Third Party Plugins"
        ]
      },
      "requirements": [
        "Nothing, just have a computer!"
      ],
      "description": "Why Take This AMAZING Course?\nHighest Rated Instructor Here On Udemy For WordPress Lessons\nLearn how to use the #1 Best selling WordPress Theme In The World\nMaster WordPress and the Divi Theme. Complete Beginners Guide\nGet a Modern And Amazing Look For Your Website That Will Impress!\nLearn From A Professional Who Creates Websites For a Living with over 500,000 Monthly Visits!\nTHE MOST UPDATE AND MODERN TUTORIAL. Don't Settle For Outdated Content!\nGet A fully Responsive Website And Mobile Responsive\nUnlike Other Lectures. I Cover Everything. Don't be left in the dark with other lectures that are only one hour long. I help my students and make sure they are 100% informed on all WordPress features. This lecture is very detailed and will make you fully understand how you can create your WordPress website from scratch as a beginner.\nWhat Will I Learn From This Course?\nSetting up your domain and hosting\nCreate Modern, Beautiful, and STUNNING Websites!\nCreate Pages With the Divi theme and WordPress\nCreate Pre-Made layouts for clients\nMaster The Divi Theme and even start your own business!\nMaster The #1 FREE Page Builder - Divi Theme\nLEARN HOW TO USE THE DRAG AND DROP MODULES + VISUAL BUILDER EASY!\nMaster WordPress. Create Your Own Website Simply And Easily.\nWhat are the requirements?\nNo Experience Required. Complete Beginners Welcome!\nWhat am I going to get from this course?\nMASTER WORDPRESS\nCreate Your Own Website From Scratch\nCreate MODERN Style 2020 Websites\nMASTER The Divi Theme\nWhat is the target audience?\nAnyone. This Course is for anyone with a desire to learn\nAnyone Who Wants To Start Their Own Website\nAnyone Who Wants To MASTER WordPress And The Divi Theme\nWhat you’ll learn\nCreate Websites From Scratch\nStart Their Own Web Design Business\nCreate Modern Style Websites In Under An Hour\nAre there any course requirements or prerequisites?\nJust an Internet Connection And A Computer!\nNo Experience Required, Beginners Welcome!\nWho this course is for:\nAnyone who wants to learn how to make a website step by step\nAnyone who wants to create their own business\nWho this course is for:\nAnyone who wants to learn how to make a wordpress website with no experience\nAnyone who wants to make a website the easiest way\nAnyone who wants to learn how to start a web design business",
      "target_audience": [
        "Anyone who wants to learn how to make a website",
        "Anyone who wants to learn how to use the divi theme",
        "Anbyone who wants to start their own web design business"
      ]
    },
    {
      "title": "WebGL internals",
      "url": "https://www.udemy.com/course/webgl-internals/",
      "bio": "WebGL2(OpenGL ES 3.0) Programming using GLSL Shaders(Vertex and fragment) and Javascript",
      "objectives": [
        "How to write vertex shaders and fragment shaders in WebGL2 and run them from scratch using pure JavaScript.",
        "How to set up and execute a complete WebGL2 rendering program, understanding every step of the process.",
        "Working with textures, framebuffers, and mastering the handling of vertices and pixels for precise control.",
        "Implementing GPU-based image processing techniques and building skills useful for a career as an image scientist or graphics programmer.",
        "How to optimize rendering performance by leveraging the GPU instead of relying solely on the CPU.",
        "The fundamentals of HTML5 Canvas and how to integrate it with WebGL2 for advanced visual output.",
        "Hands-on coding exercises to create real-time visual effects directly in the browser without heavy frameworks."
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview"
        ],
        "Introduction and Drawing various shapes": [
          "Introduction",
          "Prerequisites",
          "WebGL Code Access",
          "Creating a WebGL2 context",
          "Understanding Coordinates",
          "Draw Triangle-1",
          "Draw Triangle-2",
          "Encapsulation-1",
          "Encapsulation-2",
          "Draw Rectangle",
          "Draw Lines",
          "Draw Points",
          "Draw Circle"
        ],
        "Dynamic rendering of shapes": [
          "Introduction",
          "Dynamic rendering of rectangles-1",
          "Dynamic rendering of rectangles-2",
          "Playing with the Rectangle and Code Cleanup",
          "Dynamic rendering of points",
          "Dynamic rendering of lines",
          "Dynamic rendering of circles",
          "Playing with Dynamic Circle"
        ],
        "Dynamic drawing of complex shapes": [
          "Introduction",
          "Drawing country Flag-1",
          "Drawing country Flag-2",
          "Drawing a analog clock",
          "Running the analog clock",
          "Drawing Unlimited Grids",
          "Playing with Grids and drawing Chess Pattern"
        ],
        "Working with textures": [
          "Introduction",
          "What are textures?",
          "Sending Texture to GPU",
          "Rendering the Texture",
          "Rendering Multiple Textures",
          "Moving a Texture using Mouse Events",
          "Zooming a Texture using MouseWheel",
          "Maintain Aspect Ratio"
        ],
        "Basic Image Processing": [
          "Introduction",
          "Render a Image in HTML5 Canvas using 2D context",
          "Inverse and GrayScale of a texture in CPU",
          "Inverse and GrayScale of a texture in GPU/WebGL",
          "Apply Kernels on Texture",
          "Edge Enhancement Kernel in action",
          "Applying a Color Palette/ LUT(look up table)"
        ],
        "Viewport": [
          "Introduction",
          "What is Viewport?",
          "Playing with Multiple Viewports",
          "Preserve Drawing Buffer"
        ],
        "Working with Framebuffers": [
          "Introduction",
          "What are Framebuffers?",
          "Problems without using Framebuffers",
          "Using Framebuffers",
          "Fix multiple image processing problem",
          "Multiple Image Processing in Action",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "HTML5 and Javascript"
      ],
      "description": "\"Master WebGL2 and Unlock the Power of the GPU — No Libraries, Just Pure Understanding\"\nWant to create stunning 2D graphics and interactive visualizations in the browser? This beginner-friendly course is perfect for JavaScript developers who want to learn WebGL2 programming from the ground up. You’ll gain skills that can lead to careers in graphics development, game programming, image processing, or computer vision.\nUnlike most tutorials that hide the complexity behind frameworks, here you’ll learn pure WebGL2 — building everything from scratch. You’ll create your own rendering engine, write GLSL shaders, and render directly to the HTML5 canvas for maximum performance and understanding.\nBy the end of this course, you will:\nUnderstand the WebGL2 rendering pipeline and GPU-based rendering concepts.\nWrite vertex shaders and fragment shaders for real-time visual effects.\nWork with textures, framebuffers, and GPU-based image filters.\nBuild complete WebGL projects without heavy libraries like Three.js.\nHave your own library which you can tweak as per your requirement.\nThis course is hands-on, project-based, and filled with coding exercises so you learn by doing. If you want full control over your graphics code, improve your JavaScript performance skills, and create professional-quality visuals in the browser, this WebGL2 course will get you there, step-by-step, with clear explanations, practical guidance, and real-world coding examples.",
      "target_audience": [
        "Beginner JavaScript developers who want to explore WebGL2 graphics programming from the ground up.",
        "Developers experienced with HTML5 Canvas who struggle with the low performance of CPU-based rendering and want to leverage the GPU for speed.",
        "Graphics programmers interested in learning the fundamentals of image processing and shader programming.",
        "Game developers who want more control over rendering without relying on large frameworks like Three.js.",
        "College students or working professionals who are completely new to graphics programming but want a strong foundation.",
        "Anyone curious about how the GPU works, how to optimize rendering performance, and how to create stunning visuals in the browser."
      ]
    },
    {
      "title": "AJAX using JavaScript Libraries jQuery and Axios",
      "url": "https://www.udemy.com/course/ajax-jquery-axios/",
      "bio": "Learn how to make AJAX requests from the most popular JavaScript libraries including jQuery and Axios",
      "objectives": [
        "Get and post data using AJAX",
        "Use jQuery AJAX functionality",
        "Use Axios AJAX functionality",
        "Build applications using AJAX",
        "Send data and receive responses and output response content"
      ],
      "course_content": {
        "Introduction to using AJAX": [
          "Introduction to AJAX with jQuery and Axios",
          "Introduction to jQuery",
          "AJAX with jQuery",
          "jQuery AJAX output to element",
          "Source Code 3 jQuery Get",
          "jQuery in Codepen",
          "Source Code 4",
          "jQuery AJAX shorthand",
          "Source Code 5 jQuery Get",
          "jQuery Mulitple Items API",
          "Source Code 6 GetJSON",
          "jQuery Post example",
          "Source Code 7 POST jQuery",
          "jQuery post with AJAX",
          "Source Code 8 jQuery Post",
          "JQuery Exercise Overview",
          "JavaScript libraries for AJAX.",
          "Source Code 9 Axios Form POST",
          "AXIOS Get Data Update HTML",
          "Loop Multiple Items in Object",
          "Source Code 10 Axios Exercise",
          "Axios AJAX post",
          "Source Code 11 Axios Exercise",
          "Axios Exercise Overview",
          "Resources"
        ],
        "Bonus Section": [
          "JavaScript Fetch requests with AJAX",
          "Source Code Example Fetch",
          "Additional Resources and Documents"
        ]
      },
      "requirements": [
        "JavaScript and Web development",
        "Web editor",
        "Internet Access"
      ],
      "description": "Learn about AJAX and how to make request for data using jQuery or Axios.\nThese are the two most popular libraries that make AJAX easy to add and work with in JavaScript.  They solve the problem of cross browser differences in XHR requests and provide a seamless easy to apply experience when using AJAX\nOnce you start using jQuery or Axios for AJAX you will see how easy AJAX can be to add to your web pages.\nWith options for GET and POST both provide an easy way for AJAX.\nThe course provide several examples of how to connect to web apis and retrieve data for your web applications.\njQuery provide a powerful easy to use library which is famous for making AJAX easy.  Explore how you can use this most popular JavaScript library to do more with less coding.  not only is AJAX easy with jQuery its also extremely easy to update your page elements and add event listeners.  Why not try jQuery and do something amazing online!\nAxios provides a seamless AJAX approach that works off promises.   Using the JavaScript XHR object its a powerful but really light weight option for bringing AJAX into your projects.  This library is popular and easy to get started with.  Using Axios to power your AJAX requests and combined with plain JavaScript to update the DOM the course provides several examples of how to implement it and use it within your code.\nSource code is included to get you started quickly\nFriendly responses in the Q&A to help you learn further and clarify course content if needed.\nTaught by an instructor with many years of web development experience ready to help you learn more about AJAX\nWhat are you waiting for join now and start learning AJAX today.",
      "target_audience": [
        "Web developers who want to practice AJAX",
        "JavaScript Developers who want to use jQuery or Axios libraries for easy AJAX",
        "Anyone who wants a quick and easy way to make AJAX requests"
      ]
    },
    {
      "title": "Learn Ruby on Rails: Stripe Payment Processing",
      "url": "https://www.udemy.com/course/learn-ruby-on-rails-stripe-payment-processing/",
      "bio": "Learn How to Make a Web App That Uses Stripe to Accept One-Off or Subscription Payments.",
      "objectives": [
        "Use Stripe to Accept Subscription or One off Payments.",
        "App Development Through Ruby on Rails.",
        "Basic Layout and Formatting with HTML and CSS.",
        "Deploy an Application Using Heroku.",
        "Automatically Email Receipts Using SendGrid.",
        "All Students Will Have Access to Precise and Complete Code Downloads.",
        "Learn How to Use Git and Github for Version Control.",
        "Up-To-Date Guidance and Code.",
        "Streamlined Instruction for Ease and Efficiency."
      ],
      "course_content": {
        "Start Here": [
          "What We Will Make and Installation",
          "Create an App",
          "Start Making Your Homepage"
        ],
        "Launch with Heroku": [
          "Set the App up to Work with Heroku.",
          "Push the App to Heroku.",
          "Use Github to Save Code Changes."
        ],
        "Add Twitter Bootstrap": [
          "Add Twitter Bootstrap",
          "Make the Homepage Look Better.",
          "Update the Homepage CSS.",
          "Add an Image Tag.",
          "Update the Layout."
        ],
        "Use Stripe to Charge Customers": [
          "Add a Credit Card Form.",
          "Make a Charges Controller.",
          "Install Figaro.",
          "Modify the Credit Card Form.",
          "Make the Purchase Last.",
          "Store Images on Amazon S3 and Improve the Receipt.",
          "Make the Receipt URL More Secure."
        ],
        "SendGrid": [
          "Sendgrid and Email Settings.",
          "Get Emails Working Locally and on Heroku.",
          "Install Active Admin.",
          "Configure Active Admin.",
          "Add Products to the Database.",
          "Display Product Information from the Database.",
          "Update the Templates Then Test on Heroku"
        ],
        "Stripe Subscriptions": [
          "Use Stripe to Accept Subscription Payments.",
          "Create a Page That Displays All of the Products.",
          "Add a Page That Displays Individual Products.",
          "Make Sure That the Correct Subscription Is Purchased."
        ]
      },
      "requirements": [
        "No Previous Programming Experience Required.",
        "Any Computer Can Be Used."
      ],
      "description": "Whatever the brilliant idea, product, or service, an e-commerce website simply won't function without streamlined, intuitive payment processing. In this course we'll be providing an essential breakdown of activating Stripe using Rails to allow you to start receiving income without all the stress of merchant accounts and banks. Stripe is quickly becoming an industry standard for payment processing, and is an effective tool you cannot afford to be without.\nIn this course, you will learn the most straightforward way to accept one-off payments or recurring billing with your Rails web applications. You will also learn how to: Implement Bootstrap with HTML templates, add Stripe to your site, email receipts with Sendgrid, build a web application with Ruby on Rails, and deploy your application with Heroku.",
      "target_audience": [
        "Beginner and Advanced users alike",
        "Web Designers and Developers.",
        "Entrepreneurs and Self Starters."
      ]
    },
    {
      "title": "Custom Theme Creation for WordPress using HTML5 and CSS3",
      "url": "https://www.udemy.com/course/custom-theme-creation-for-wordpress/",
      "bio": "Create a WordPress theme completely from scratch using very little PHP and your own hand-rolled HTML template.",
      "objectives": [
        "Create a mobile first, responsive WordPress site from scratch using HTML5, CSS3 and a CSS Preprocessor (no child themes).",
        "Create a WordPress theme using very little PHP. You will be surprised how easy it really is.",
        "Change WordPress from a blog tool into a Content Management System.",
        "Instantiate a custom menu in your theme.",
        "Remove extraneous tags from WordPress pages.",
        "Learn to use FlexBox to layout unique designs.",
        "Learn to use shape outside to wrap text around a circle.",
        "Learn to use the new column-count, column-gap, and column rule in your WordPress Pages.",
        "Learn to add a responsive google map to a WordPress page."
      ],
      "course_content": {
        "Overview": [
          "Introduction to creating a WordPress Theme from Scratch"
        ],
        "Installing WordPress": [
          "Install WordPress Manually"
        ],
        "Build a Basic Theme": [
          "Introduction to the Basic Theme",
          "Create a Theme",
          "Word Press Editor",
          "Build a Menu",
          "Dynamic Page Title"
        ],
        "Building the Construction Theme": [
          "Overview of the Responsive Template",
          "Setup Header and Footer",
          "Fix the Bad Links",
          "Fix the Navigation",
          "Add the Slider",
          "Remove the Page Title",
          "Build the Site Search"
        ],
        "Page Design in Word Press": [
          "Overview of the Pages",
          "Building the Gallery Page",
          "Building the Testimonials Page"
        ],
        "My Favorite Plugins": [
          "Introduction to Plugins",
          "Yoast SEO Plugin",
          "WP News Plugin",
          "Contact Forms 7 Plugin",
          "Flamingo Plugin"
        ]
      },
      "requirements": [
        "Students should have access to web hosting so they can follow along as we learn about theme creation",
        "Students need to be familiar with HTML5 and CSS3. We will be covering some new exciting CSS that you can implement in your next WordPress site.",
        "Students should be familiar with a CSS preprocessor."
      ],
      "description": "WordPress is the most popular blogging platform on the internet today, however, it can also be used as a powerful Content Management System. In this course we will use it as a CMS to build a client website.\nIn this course you will learn to convert an HTML page into a WordPress theme. Actually it’s a lot simpler than you may think. I will provide you with a link to a free HTML5 template page and together we will walk through the steps to convert it into a theme.\nFirst we will spend a couple of minutes reviewing the essential features of a mobile first, responsive, HTML web template page that uses a CSS Preprocessor. hopefully this is a review of what you already know but you may also learn something new.\nNext you will learn to build a WordPress theme from scratch. In each video we cover the essential code necessary for the 5 basic php files we will create. I call this the ugly theme as it is fully functional but lacking any design.\nThen together you and I will walk through the steps of creating a beautiful WordPress theme by combining the ugly theme we just built and the HTML template I provided you.\nBut wait, were not finished yet. Now that you have created your own theme, you will get to create several pages in WordPress using cutting edge CSS tricks. During this process, you will learn to wrap text around a circle, align elements at the bottom using flexbox, and implement newspaper style column with lines between them.\nWhen your done, you will have a lightning fast WordPress theme devoid of any extraneous code or unused CSS rules. Actually it's pretty cool and very easy.",
      "target_audience": [
        "This course is for a web developer who needs to create a custom WordPress theme for a client.",
        "This course will help you use WordPress as a content management system for a client. It does not cover blogging."
      ]
    },
    {
      "title": "Getting really good at JavaScript and TypeScript",
      "url": "https://www.udemy.com/course/javascript-typescript/",
      "bio": "Turn your average JavaScript skills into excellent JavaScript skills, and use the power of TypeScript to tame this beast",
      "objectives": [
        "Write good and maintainable JavaScript",
        "Architect large scale JavaScript applications",
        "Learn Typescript",
        "Use TypeScript effectively",
        "Avoid common JavaScript mistakes"
      ],
      "course_content": {
        "Introductions": [
          "Introduction"
        ],
        "JavaScript Problems": [
          "History of JavaScript",
          "Setting up Brackets",
          "Globals",
          "IIFE",
          "Accidental Globals",
          "Use Strict and JSLint",
          "Accidental Globals and Loops",
          "Avoiding accidental globals",
          "ES6 and the let keyword",
          "Reserved Keywords and avoiding them",
          "Semicolon Madness",
          "typeof Unreliability",
          "types of numbers",
          "typeof null and undefined",
          "DataTypes and Operator related mistakes",
          "parseInt mistakes",
          "NaN is a number",
          "parseInt and radix confusion",
          "Comparison Operator bugs",
          "+ and - operator issues",
          "if and assignment related mistakes",
          "Numbers can be inaccurate",
          "Bitwise operators",
          "Number Precision Issues",
          "With operator issues",
          "Problems with Arrays",
          "Function parameter issues",
          "Understanding scopes",
          "Hoisting",
          "CDNs",
          "Data secrecy in JavaScript",
          "this keyword confusion",
          "Other Misc Issues"
        ],
        "JavaScript best practices": [
          "Best Practices",
          "Coding Conventions"
        ],
        "TypeScript: An Introduction": [
          "Introduction"
        ],
        "What is TypeScript?": [
          "What is TypeScript",
          "How TypeScript works",
          "ts, js, sourcemaps and d.ts files"
        ],
        "TypeScript Development Environment": [
          "Using TypeScript in Visual Studio",
          "Setting up VS Code for TypeScript using Gulp",
          "Continous compilation with watch",
          "Debugging TypeScript"
        ],
        "TypeScript in depth": [
          "Basic refactoring in plain JS",
          "Parameter matching in functions in plain JS",
          "Datatype checking in plain JS",
          "Specifying data types in Typescript",
          "Intellisense and help for HTML elements",
          "Learn new HTML tricks with TypeScript",
          "Features from the future and browser compatibility",
          "Intellisense for code you write",
          "Intellisense for code you didn't write",
          "Using interfaces to catch typos",
          "Managing Arrays with Interfaces and Generics",
          "Functions as DataTypes to catch errors",
          "Understanding statics in TypeScript classes",
          "Implementing constructors on classes",
          "Adding functions to classes",
          "Implementing inheritance in TypeScript",
          "Understanding interfaces in TypeScript",
          "Extending interfaces",
          "Private properties in classes",
          "The super keyword",
          "Accessors",
          "Statics",
          "Classes as interfaces",
          "Modules",
          "Function parameter management using ES6 and TypeScript",
          "Arrow Functions and this keyword",
          "Using generics effectively"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is required"
      ],
      "description": "You can’t avoid JavaScript, but you can avoid all the pain! This course turns your average JavaScript skills into great JavaScript skills, and makes you a champ at using TypeScript in a real project.\nJavaScript, the only language that runs everywhere, a language with huge shortcomings, finicky behavior, and yet something we must master. TypeScript that removes all the pain of JavaScript, but only if you use it properly. This course takes your hacky JavaScript skills, and turns you into a real JavaScript pro. And from there, it teaches you practical TypeScript by demonstrating the fundamentals, and real world usage in a project.",
      "target_audience": [
        "This course is for web developers who know JavaScript, but want to get really good at it.",
        "This course is for JavaScript developers who wish to start using Typescript in their projects effectively."
      ]
    },
    {
      "title": "Mastering React Testing: RTL, Vitest & MSW",
      "url": "https://www.udemy.com/course/mastering-react-testing-rtl-vitest-msw/",
      "bio": "Build robust React apps with React Testing Library, Vitest, and MSW, mastering modern testing techniques.",
      "objectives": [
        "Write user-focused tests for React components with React Testing Library, ensuring robust and accessible applications.",
        "Set up and run efficient, fast tests using Vitest, seamlessly integrated with Vite for modern React projects.",
        "Mock HTTP requests and responses with Mock Service Worker (MSW) for reliable and isolated API testing.",
        "Adopt Test-Driven Development (TDD) to create bug-free, well-designed features by writing tests before implementation."
      ],
      "course_content": {
        "Introduction": [
          "Course Info",
          "Discord Channel",
          "Video Blur Fix",
          "Course Review"
        ],
        "React Testing Library Tutorial": [
          "Main Course Repo !!! Important !!!",
          "Install/Setup Course Repository",
          "Files and Folders",
          "Explore First Test File",
          "Test Validation Details",
          "Vitest Info",
          "React Testing Library Essentials Quiz",
          "<SearchByText> - Component",
          "SearchByText Methods - Overview",
          "SearchByText Methods - Test File",
          "Test Driven Development Example",
          "React Testing Library Query Methods and TDD Basics Quiz",
          "<SearchByRole/> Component",
          "SearchByRole Methods Overview",
          "SearchByRole Test File",
          "User Interactions Component",
          "User Interactions - Test File",
          "React Testing Library: Search by Role and User Interactions Quiz",
          "Form Testing - Sandbox",
          "Test Empty Inputs",
          "Test Typing In The Inputs",
          "Refactor",
          "Form Testing - Remaining Tests",
          "Form Testing in React: Best Practices",
          "Reviews App - Logic",
          "Reviews App - List Component Unit Tests",
          "Reviews App - Form Component Unit Tests",
          "Reviews App - Sandbox Component Integration Tests",
          "Testing Logic in Reviews App: Components and Integration"
        ],
        "React Testing 101: Application Setup and Configuration": [
          "Create and Configure Template for Testing React Applications",
          "Testing Logic in Project Setup with Vitest and React Testing Library"
        ],
        "Test Driven Development - Focus Flow App": [
          "Focus Flow App - Intro",
          "Focus Flow App - Code Core Logic",
          "Focus Flow App - First Form Component Test",
          "Focus Flow App - Remaining Form Component Tests",
          "Focus Flow App - List Component Tests",
          "Focus Flow App - Card Component Tests",
          "Focus Flow App - Context API",
          "Focus Flow App - App Component Integration Tests",
          "Practice Test: Testing Logic in Focus Flow App"
        ],
        "Mock Service Worker - Mocking API's": [
          "MSW - Intro",
          "MSW - JSON Web Server and HTTP Requests",
          "MSW - Main Logic",
          "MSW - Front End",
          "MSW - Form, List and Item Unit Tests",
          "Mock Service Worker - Info",
          "MSW - Mock Fetch Posts",
          "MSW - Mock Remaining Requests",
          "MSW - Mock HTTP Error Responses",
          "Practice Test: Testing with Mock Service Worker"
        ],
        "Search Github Users - Front End": [
          "Info",
          "Install",
          "Tailwind CSS and ShadcnUI",
          "Structure",
          "Search Form",
          "GraphQL",
          "Apollo Client",
          "Query",
          "User Profile, Card and Stats Container Components",
          "Most Forked Repos",
          "Most Popular Repos",
          "Most Used Languages",
          "Charts",
          "Loading Component"
        ],
        "Search Github Users - Tests": [
          "Setup Info",
          "Test - calculateMostForkedRepos Function",
          "Test - calculateMostStarredRepos Function",
          "Test - calculatePopularLanguages Function",
          "StatsCard Component Test",
          "StatsContainer Component Test",
          "UserCard Component Test",
          "SearchForm Component Test",
          "ForkedRepos Chart Component Test",
          "Mock GraphQL Response",
          "UserProfile and App Components Test",
          "Testing Fundamentals in React Applications"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "A basic understanding of React and its core concepts is required.",
        "Familiarity with TypeScript is helpful, as it’s used in the course, but beginners can follow along and learn.",
        "An IDE (like Visual Studio Code) and Node installed on your machine are recommended to set up and run projects.",
        "No prior testing experience is required – this course is designed to guide you from the fundamentals to advanced techniques."
      ],
      "description": "Mastering React Testing: RTL, Vitest & MSW\nIn the world of modern web development, testing is a vital skill for ensuring application reliability, maintainability, and user satisfaction. This course, \"Mastering React Testing: RTL, Vitest & MSW,\" is designed to equip you with practical knowledge and hands-on experience to write robust, efficient tests for React applications.\nWhat You'll Learn\nThis course covers essential tools and methodologies for React testing, including:\nReact Testing Library (RTL): Learn how to write user-centric tests for React components, leveraging RTL's intuitive API to query and interact with the DOM as users would.\nVitest: Dive into modern test running with Vitest, a powerful and fast alternative to Jest, seamlessly integrated with Vite.\nMock Service Worker (MSW): Master the art of mocking API calls for both development and testing, ensuring controlled and reliable test environments for HTTP interactions.\nTest-Driven Development (TDD): Adopt a TDD mindset with structured exercises, building features while maintaining test integrity.\nComprehensive Testing Approaches:\nUnit Tests: Isolate and validate individual component logic.\nIntegration Tests: Verify the seamless interaction of components.\nForm Testing: Handle input validations and user interactions.\nMocking and Error Handling: Simulate complex scenarios, such as server errors, to validate application behavior.\nProjects You'll Build\nThis course incorporates real-world projects, providing context and application for the concepts taught:\nTesting Template: Set up a reusable project template using Vite, TypeScript, Vitest, and React Testing Library.\nReviews App: Develop and test a reviews application, integrating dynamic forms, list rendering, and component interaction.\nFocus Flow: Apply TDD to create a task management application, emphasizing the \"red-green-refactor\" workflow.\nPosts Manager: Build a CRUD application with mocked APIs using MSW, testing every aspect from fetching data to handling user actions.\nHands-On Challenges\nThroughout the course, you'll tackle hands-on exercises that simulate real-world challenges:\nWriting your first tests with RTL\nTesting user interactions like clicks, typing, and form submissions\nImplementing context API for global state management and testing its behavior\nMocking server responses for different HTTP methods (GET, POST, PUT, DELETE)\nSimulating error scenarios to ensure your app handles failures gracefully\nWhy This Course?\nWhether you're a developer looking to strengthen your testing skills or a React enthusiast eager to write more reliable code, this course offers everything you need. By the end, you'll be confident in writing maintainable tests, debugging efficiently, and delivering higher-quality applications.\nJoin us and transform how you write and test React applications!",
      "target_audience": [
        "Developers looking to master testing React applications using modern tools like RTL, Vitest, and MSW.",
        "React developers eager to enhance their skills with Test-Driven Development (TDD) practices.",
        "Engineers interested in creating robust, maintainable, and fully tested React applications.",
        "Intermediate React developers wanting to integrate TypeScript and testing frameworks into their workflow."
      ]
    },
    {
      "title": "WordPress Theme Development for Themeforest with Elementor",
      "url": "https://www.udemy.com/course/wordpress-theme-elementor-integration-for-themeforest/",
      "bio": "Wordpress Elementor Widgets & Addon, Build Wordpress Theme from Bootstrap Template with Standards of Themeforest",
      "objectives": [
        "You will be Able to Create Custom WordPress Themes from Scratch",
        "Know How to gain time with underscore prebuild Basic Theme and Knowing how to make the necessary modifications in order to have a pro Theme",
        "Enqueue styles and Scripts the right way for the Theme",
        "Master how WordPress works behind the scenes",
        "Work with WordPress theme Custom Post Types and Advanced Custom Fields for the Footer and projects CPT",
        "Write Custom WordPress Functions",
        "Know how to read the documentation of elementor developers",
        "Create custom made Elementor Widgets using the documentation of developers elementor",
        "Convert any Bootstrap section to widget using controllers of elementor developers",
        "Make the rendering of any elementor widgets with the necessary functions of WordPress and elementor premade functions",
        "Modify and implement the WordPress loop",
        "Customize WordPress themes",
        "Make a custom Plugin for Custom post types of your themes",
        "Make a Demo import \"One Click demo importer \" Like a pro",
        "Bundle all plugins using TGM plugin",
        "Create A One page professional Theme that meet to standards of Themeforest"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation of visual studio code editor and basic configuration for",
          "Admin panel of wordpress demonstration"
        ],
        "Getting familiar with elementor widgets development": [
          "Getting starting with elementor widgets development",
          "Creating a new widget of elementor",
          "Create a custom elementor widget category"
        ],
        "Elementor Control Types-Data Controls": [
          "Hidden Switcher Popover Select Select2",
          "Text Textarea Wysiwyg Code",
          "Choose Color Font controls",
          "Gallery and repeater",
          "Entrance Exit Hover animations"
        ],
        "Elementor Control Types-Multi value Controls": [
          "Url Media",
          "Icons Text and Box shadows"
        ],
        "Elementor Control Types-Unit Controls": [
          "Slider and Dimensions"
        ],
        "Elementor Control Types-User interface UI Controls": [
          "UI controls"
        ],
        "Elementor Control Types-Group Controls": [
          "Typography Text and Box shadows"
        ],
        "Practice -Clark project Installation": [
          "Installation and basic configuration of theme",
          "Enqueue styles the right way",
          "Enqueue scripts the right way",
          "Menu and Footer css of theme"
        ],
        "Practice-Clark project addon creation": [
          "Elementor addon and widgets configurations"
        ],
        "Practice-Clark project Slider Widget": [
          "Configuration and parameters of clark widget slider",
          "Clark slider enqueues styles and JS",
          "Add controls to our widget slider",
          "Render slider widget part 1",
          "Render slider widget part 2",
          "Clark slider widgets options for sliders loop and nav etc",
          "Clark style slider widget options",
          "Clark style slider widget options-part2",
          "Clark style slider widget options-dots_nav styles"
        ]
      },
      "requirements": [
        "PHP",
        "HTML",
        "CSS",
        "Bootstrap",
        "Javascript",
        "Jquery",
        "OOP",
        "Basic wordpress usage",
        "Basics knowledge of wordpress basic Functions",
        "ACF Functions and manipulations",
        "Basics of elementor Page Builder Usage"
      ],
      "description": "Note: this is a backend PHP course for WordPress\n**********************************************************\nWelcome to WordPress Theme Development with Elementor: For Themeforest. This course is very special, it allows you to know the secrets of WordPress Theming. Especially if you plan to sell on markets like ThemeForest or WordPress's official website.\n\n\nSo in this course, I will help you Be a professional WordPress theme developer. We will convert by the end of this course a full HTML CSS bootstrap template into a functional WordPress theme with the standards of Themeforest.\n\n\nSo after completing this course, you will be able to convert any bootstrap template to a fully functional WordPress theme using various technologies such as Custom post types, and you will be able to build Your Widgets of Elementor page Builder.\n\n\nWhat we will cover in this course?\n\n\nFirstly, we will be covering for the first sections how to deal with Elementor developers' documentation and their philosophy to see things of the MVC model. So we will see Multiples controllers, and we will see how to render them step by step.\nSo we will be getting familiar with Elementor widgets development, we will see how to create a new widget of Elementor, and see how to create custom widget categories.\nWe will manipulate each and every control type of Elementor controller, how to render them the right way.\nThe second part of the course will be a practical example, Clark's One-page theme creation from scratch.\nSo we will see how to do the right installation of underscores basic theme, and how to enqueue styles and scripts of theme the right way, and believe this is not always easy and trivial. We will be adding menu support …\nAfter that, we have a crucial step which is Elementor add-on creation and the code behind widgets configurations .also, we will enqueue styles and JS for widgets this time .and after that we will be creating Clark-slider widget; so we will be adding controls and making the render of our widget step by step, adding multiple options also to make our widget professional .making the styling functions of our widget .in order to allow our users the modifications of colors and typography, etc.\nMoreover, we will be creating several widgets almost twelve widgets including the Clark slider; we will list Heading, about, Resume, services, skills, projects, price, blog, counter, hire, contact, etc … and we will add controllers for each and every widget created, render them step by step, the style most of them…\n\n\nInto the final chapters, we will be creating and rendering the footer with the ACF pro plugin and using native widgets of WordPress Gutenberg, last but not least we will create a small plugin in order to bundle our custom post type of projects, we will make the\nimplementation of TGM functionality to deliver all our plugins when we install our theme. We will make integration as usual of one click demo importer plugin the right way with the right implementations.\nIn the end, we will have almost a ready theme for ThemeForest, and you will be able to develop your own themes\n\n\nWhat exactly are you going to learn?\nWe will start with the basics. You'll learn how to install WordPress the right way. And that's something not everyone knows how to do (trust me!). And, step by step, we will dive into more interesting topics.\nYou'll learn things like:\nHow to integrate the theme with Bootstrap—any version\nInner template files and essential WordPress pages\nNative functions and tools that bring the entire mechanism of the theme to life\nHow to read Elementor developers' documentation to convert any Bootstrap template with the Creation of your widgets.\nAnd much more… You'll also learn how to handle some specialized tools and APIs, like:\nACF and custom post types in general, you will create your CPT and make them editable with advanced custom fields ACF and ACF pro. And that for the Footer section.\nThe powerful TGM Plugin Activation library. If you intend to redistribute your work, TGM will help you package all your plugins with the theme.\nAnd finally, you'll also learn how to make one demo importer and a simple plugin for all your CPT “custom post types”\nWe will provide the initial HTML and CSS template that we will convert step by step and of course the final project or theme in the resources.\nHow is the course different?\nThe course’s uniqueness is its versatility in its benefits. It offers a comprehensive 65 lectures, carefully classified into sections, leaving no topic untouched. More than 20 Hours.\nThe best part is my eagerness to assist you 24/7. Solving your query sooner than possible is my priority. The excellent response time allows you to follow your own pace in your project.\n\n\nSo join me right now. I can promise you this will be a journey that will change your professional career for good!",
      "target_audience": [
        "For professionals that aim to deliver Themes with standards of Themeforest and Wordpress",
        "Anyone who is looking to start a career at Wordpress Theming",
        "Advanced user of PHP and HTML & CSS",
        "Anyone who want to start Business at Themeforest"
      ]
    },
    {
      "title": "Mastering Yii 2",
      "url": "https://www.udemy.com/course/mastering-yii-2/",
      "bio": "Leverage the incredible potential of Yii to build heavyweight web applications swiftly",
      "objectives": [
        "Employ a remote repository to work smoothly in a distributed team.",
        "Build an attractive user interface for your application with Twitter Bootstrap framework",
        "Boost the security and reliability of your application using Yii2 components",
        "Learn to encrypt and decrypt data effortlessly to improve the dependability of your application.",
        "Avoid traffic on your server by implementing caching.",
        "Explore various storage techniques of session data including the database, Memcached and Redis.",
        "Embed full text search into your site and find the desired data in a flash",
        "Make your application robust by testing it with Codeception"
      ],
      "course_content": {
        "Git Version Control System": [
          "The Course Overview",
          "Introduction to Git",
          "Learning the Most Used Commands in Git",
          "Auto-deploying with Bitbucket Hooks to Your VPS"
        ],
        "Twitter Bootstrap": [
          "Combining Highload with Twitter Bootstrap Framework",
          "Adding Bootstrap Components to Highload",
          "Using Bootstrap JavaScript Features in Highload"
        ],
        "Security Moments and Access Permissions": [
          "Implementing RBAC in Highload",
          "Adding Security on Form Submission in Highload",
          "Working with Passwords Correctly in Highload"
        ],
        "Caching": [
          "Improving Performance in Highload",
          "Fragmenting, Page Caching, and HTTP Caching",
          "Combining and Compressing JavaScript and CSS Files"
        ],
        "Additional Storages for Cache and Sessions": [
          "Changing Highload Session Storage to the Database",
          "Using Memcached for Session Storage",
          "Learning to Use Redis for Session Storage in Highload"
        ],
        "Full Text Search": [
          "Using Sphinx with Yii 2",
          "Understanding Elasticsearch for Yii 2",
          "Learning to Use MongoDB with Yii 2"
        ],
        "Testing with Codeception": [
          "Installing and Configuring the Test Components",
          "Discussing Unit Testing",
          "Learning Functional Testing"
        ]
      },
      "requirements": [
        "This course will help you to channel your knowledge of PHP and MySQL to create high-power web applications."
      ],
      "description": "Yii is a generic component-based PHP Web programming framework. In addition to being object-oriented, it also features the MVC design pattern. It is a high-performance framework and is used to develop heavy duty web applications quickly. With the rise in the dependability of the Internet, the influx of the users to our websites keeps swelling on a daily basis. Yii is just the right framework to help us cope with this heavy load.\nMastering Yii2 will guide you through rapidly building a sophisticated, secure, and flexible web application. This comprehensive guide will help you to develop and enhance this web application by focusing on a new aspect in every video.\nWe start by showing you how to set up our version control system using Git so that we can work effortlessly in a distributed team. We will then make our website more responsive using the Twitter Bootstrap framework and then enhance then its security. Then we will store our session data in different storage systems such as the database, Memcached and Redis, and analyze which storage best suits our needs. We will then walk you through step by step adding a full text search using Sphinx, ElasticSearch, and MongoDB NoSQL storage to find the desired data swiftly. Finally, we will take you through making our application robust by testing it with Codeception.\nBy the end of this course, you’ll be an ace at developing heavily loaded web applications using Yii 2.\nAbout The Author\n\nVitalii Tron has about 7 years’ experience in programming, and he has been developing Yii-based applications for 4 years. He graduated from the Sumy State University in the Mechanical-Mathematics school of Computer Science department. He also successfully finished post-graduate courses at the same department. Vitalii has amazing job history at Elance, where his clients have left delighted feedback about his work.",
      "target_audience": [
        "If you’re a web developer who is comfortable with the basics of the Yii framework and the development environment, then this course is perfect for you to sharpen your skills with Yii."
      ]
    },
    {
      "title": "Headless WordPress REST API Authentication",
      "url": "https://www.udemy.com/course/headless-wordpress-rest-api-authentication-course/",
      "bio": "Learn how to connect decoupled websites and applications with WordPress using JWT Auth and JavaScript",
      "objectives": [
        "How to setup WordPress to handle decoupled authentication",
        "How to make authenticated WordPress REST API call",
        "How to use JSON Web Tokens (JWT) and JavaScript for decoupled authentication",
        "How to store authentication data in secure cookies",
        "How to handle login and logout forms and processes",
        "How to add, edit and delete content via the WordPress REST API"
      ],
      "course_content": {
        "Introduction": [
          "An Introduction to Authentication with the WordPress REST API",
          "What We Will Build"
        ],
        "Setting Up the Project": [
          "Setting Up WordPress for Authentication",
          "The Project Starter Files",
          "Updating Header via API",
          "Listing Posts via API",
          "Showing Single Post from State"
        ],
        "Authenticating": [
          "Reminder to Setup WordPress",
          "Authentication Setup",
          "Login Form",
          "Logout Form"
        ],
        "Adding, Editing and Deleting": [
          "Adding Content",
          "Notices",
          "Editing Content",
          "Deleting Content"
        ],
        "Review": [
          "Course Review and Next Steps"
        ]
      },
      "requirements": [
        "Basic JavaScript Skills",
        "Basic WP REST API Skills"
      ],
      "description": "Many developers and top agencies have learned how to use WordPress as a headless CMS, where WordPress stores the content, but Modern JavaScript driven websites and applications display the content and provide customized interactivity.\nOne of the key components to using WordPress as a Headless CMS involves authenticating to allow full read, write and delete access to everything the WordPress REST API provides.\nIn this course you will learn the following:\nThe different types of authentication available\nHow to work with the JWT Authentication Standard\nHow to setup WordPress to offer authentication\nHow to write secure JavaScript to authenticate\nHow to build login and logout forms\nHow to add, edit and delete content using authenticated WordPress REST API calls\nThroughout the course we will build a custom decoupled project using simple JavaScript, but all of the code can be easily converted over to work with React, Vue, Angular and other JavaScript frameworks.",
      "target_audience": [
        "Theme Developers who want to build decoupled sites powered by WordPress and JavaScript",
        "Plugin Developers who want to build functionality that works outside of the WordPress admin",
        "App Developers who want to build JavaScript apps powered by WordPress",
        "Any Developer looking to use WordPress as a data store"
      ]
    },
    {
      "title": "WordPress Plugin Development with Vue.js (2021)",
      "url": "https://www.udemy.com/course/wp-plugin-development/",
      "bio": "WordPress plugin with Vue.js",
      "objectives": [
        "WordPress Plugin Development"
      ],
      "course_content": {},
      "requirements": [
        "None"
      ],
      "description": "Vue is an amazing framework. Wordpress is the most common CMS of the world. Why not mix these two by creating a plugin?\nThis course aims to teach you how to create a Wordpress plugin with Vue.js. This is how we are going to proceed, we are going to follow these steps carefully:\nCreate a local Wordpress,\nBuild a Vue app with Vue CLI 3,\nImport Bootstrap as a CDN,\nImport others scripts that we will need,\nUse an API to display the weather,\nTurn our WP into an API,\nCall our database to get posts...\nDuring all these steps, we aim to master this plugin development process in order to develop anything we want with Vue inside Wordpress.\nWhy Vue? Vue can scale up to be used for full-blown single page applications, but you can also use it to add small bits of interactivity to sites, pages, or plugins where in the past you may have used jQuery. Vue is a great option here because it’s a quick and easy way to add interactivity, and it really streamlines the development process by bringing reactivity and component-based architecture to the table with fairly low overhead.\nSo if you are ready, let's start to learn how to code your own plugin with Wordpress & Vue.js.",
      "target_audience": [
        "beginners"
      ]
    },
    {
      "title": "Build a Cryptocurrency News Site With Ruby on Rails",
      "url": "https://www.udemy.com/course/build-a-cryptocurrency-news-site-with-ruby-on-rails/",
      "bio": "Pull Crypto News From An API and Build A Website With Ruby on Rails!",
      "objectives": [
        "Introductory Ruby on Rails",
        "How to Build API Driven Websites With Rails",
        "Set up a virtual Development Environment",
        "How To Connect to Third Party APIs",
        "How To Get Crypto Price Data",
        "Basic CSS with Bootstrap 4.1",
        "How To Use Instance Variables",
        "How To Use Forms With Rails",
        "Understand The Rails Controller",
        "Basic Error Handling"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "Cryptocurrencies are all the rage right now. Wouldn't it be cool to build a website that shows Crypto news automatically? That's what we'll learn in this course!\nWe'll build a website using Ruby on Rails and Bootstrap that connects to a free third party crypto API.\nWe'll be able to pull news stories, crypto price data, and all kinds of cool stuff, and output it onto the screen of our website automatically.\nWho Should Take This Course?\nThis course is aimed at the beginner. You don't need to know Ruby, or the Rails framework, or Bootstrap...or anything at all...to take this course. I'll walk you through it all; step by step.  If you already know the basics of any of those things, you'll be fine too. You'll still learn some cool things along the way!\nWhat Tools Do You Need To Take This Course?\nYou don't need any special tools to take this course. We'll be using a free online development environment pre-loaded with Ruby on Rails. Or you can feel free to download rails directly to your computer (if you know how) and follow along that way.\nWhat if you don't like the course?\nI offer an unconditional, 30-day Money back Guarantee.  If you aren't happy for any reason, you get your money back! No hoops to jump through at all.\nWhat if you get stuck along the way?\nI'm here answering questions everyday!  Just shoot me a message and I'll personally walk you through it. Unlike a lot of instructors here, I actually care about my students success and I spend a lot of time answering questions to make sure you understand everything.\nMy name is John Elder and I hope to see you on the inside!",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the to build Websites with Ruby on Rails",
        "Anyone wanting to learn to build web apps",
        "Anyone interested in Crypto Currencies",
        "Anyone interested in Blockchain News"
      ]
    },
    {
      "title": "Angular & Firebase Authentication: Complete Login System",
      "url": "https://www.udemy.com/course/angular-firebase-authentication-create-full-sign-up-app/",
      "bio": "Build a Professional Authentication System with Angular 16, Material, and Firebase - with Google Sign-In, Password reset",
      "objectives": [
        "Build a complete Sign Up App with Angular 16, Angular Material and Firebase Authentication",
        "Integrate Firebase features such as Authentication, Firestore and Storage with Angular and Material Components",
        "Use Angular Material Components such as form fields, progress spinners and snackbars to build a real-world app",
        "Use Modern Angular 16 features such as Standalone Components and Signals API in a real world app"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to the course",
          "Overview of our final app!",
          "Modern Angular concepts used in this course",
          "Setting up an Angular 16 project",
          "Installing Angular Material in your project",
          "Adding Firebase and AngularFire to your project"
        ],
        "Building the Login with Password Flow": [
          "Creating the Login Form Component",
          "Adding Validations to the Login Form",
          "Integrating the Login Form with Firebase Authentication",
          "Adding Logout Button with Angular Material Menu Component",
          "Adding the Loading Indicator using the Angular Material Progress Spinner",
          "Adding notifications with Angular Material Snackbar Component",
          "Handling Firebase errors gracefully!",
          "Where does Firebase Store the Login State?"
        ],
        "Building the Sign up with Password Flow": [
          "Creating the Sign Up Form Component",
          "Adding Validations to the Sign Up Form",
          "Integrating the Sign Up Form with Firebase Authentication",
          "Adding Angular Route Guards: Why and how to add them?"
        ],
        "Storing User Data in Firestore DB and Firebase Storage": [
          "Enabling Firestore DB and Storage",
          "Creating the Profile Form Component",
          "Creating the User Profile Document on Sign Up",
          "Getting the Current User's Data and Populating the Profile Form",
          "Updating the User Profile Data in Firestore DB",
          "Uploading Profile Photo with Firebase Storage",
          "Adding Security Rules to Protect User Data in Firebase"
        ],
        "Adding nice to have features to the app!": [
          "Adding Reset Password Feature to your app",
          "Adding Google Social Login for Easy Sign In",
          "Handling Google Social Sign Up for New Users"
        ],
        "Deploying your app with Firebase Hosting": [
          "Deploying the Sign Up App with Firebase Hosting"
        ]
      },
      "requirements": [
        "Basic knowledge of the Angular framework and Javascript is required"
      ],
      "description": "Master modern web authentication by building a complete login system using Angular 16 and Firebase. This practical course covers everything from basic email/password authentication to Google Sign-In, using Angular Material for a professional UI. Perfect for developers looking to implement secure, production-ready authentication in their Angular applications.\n\n\nKey features:\nComplete authentication system with email/password and Google Sign-In\nProfessional UI using Angular Material components\nSecure password reset workflow\nFirebase Firestore integration for user data\nFile upload with Firebase Storage\nBuilt with latest Angular 16 features (Signals, Standalone Components)\n\n\n**Reviews**\nGreat course. Really good pacing and covered *almost all the topics I was hoping for. - Darren Y\nThis course was a good choice to consolidate some learnings and practices and hone in on some ways Angular/Fire can be used, as it explains some details that are not clear in their repository. Additionally, the course is concise and organized in a manner typical of simple development. - Pablo A. Torres R.\nFast paced, to the point and nice coverage of basic angular-firebase auth - Kostas O\n\n\nTechnical Skills Covered:\nAngular 16 Standalone Components\nAngular Signals for State Management\nReactive Forms with Validation\nFirebase Authentication SDK\nAngular Material Components\nFirestore Database Operations\nFirebase Storage Integration\n\n\nThis course will use latest Angular techniques such as standalone components, the `inject` function and the new Angular Signals API - so you'll be up to date with the latest way to create awesome Angular apps!\nBy the end of this course, you will have a solid idea of how to build full stack web application with Angular 16, Material components and the Firebase platform.\nSo come join me as we go on a journey to create an important part of any web application - its authentication process. I look forward to seeing you in the next lecture :)",
      "target_audience": [
        "Angular Beginners who want to learn to use Angular Material and Firebase",
        "Angular Developers who want to add a Sign up Flow to their existing apps using Firebase Authentication",
        "Javascript developers who want to learn how to build a complete Angular app with Material Components and Firebase integration",
        "Angular Developers who want to learn how to store and get data from Firebase Firestore DB and Storage"
      ]
    },
    {
      "title": "Master WordPress: Build Stunning Websites from Start",
      "url": "https://www.udemy.com/course/master-wordpress-build-stunning-websites-from-start/",
      "bio": "Learn WordPress step-by-step: From installation to customization, plugins, SEO, and scaling your site",
      "objectives": [
        "Install and set up WordPress locally and on live servers with confidence.",
        "Create, manage, and organize content using posts, pages, categories, and tags",
        "Customize the appearance of WordPress sites using themes, widgets, menus, and custom CSS.",
        "Extend website functionality using essential and custom plugins for SEO, security, and backups.",
        "Build scalable, optimized websites with image handling, page builders, and CDN integration.",
        "Create child themes, custom post types, and taxonomies to build advanced websites."
      ],
      "course_content": {},
      "requirements": [
        "No prior coding or web development experience needed!",
        "A computer (Windows, Mac, or Linux) with an internet connection",
        "A modern web browser (like Chrome or Firefox)",
        "Willingness to learn and explore WordPress step by step"
      ],
      "description": "Want to build your own website or blog using WordPress?\nLooking for a step-by-step beginner-friendly WordPress course that teaches you everything from scratch?\nThis is the perfect WordPress course for beginners, freelancers, entrepreneurs, students, and bloggers who want to build professional, responsive websites—no coding required.\n\n\nWhat You’ll Learn in This Course:\nSet up WordPress locally and on live hosting (perfect for practice and real websites)\nUnderstand WordPress basics – Posts vs Pages, Tags, Categories, Dashboard, and Settings\nCustomize WordPress themes and design your website layout with ease\nInstall & manage plugins for SEO, security, backups, and extra functionality\nUse drag-and-drop page builders to create beautiful, responsive pages\nAdd custom post types, menus, widgets, and blocks to structure your site\nOptimize website performance with CDNs, caching, and image compression\nSecure your WordPress site and set up regular backups\nLearn SEO tools to rank your site better on Google\nMake your site mobile-friendly and ready for all devices\nWho Is This Course For?\nThis course is ideal for:\nBeginners who want to learn WordPress from scratch\nStudents & job seekers looking to build WordPress skills\nBusiness owners who want to build their own company website\nBloggers & content creators launching their first blog\nFreelancers who want to offer website design services\nDigital marketers learning how to manage or build WordPress sites for SEO and campaigns\nWhat You Need:\nNo coding or prior experience required\nA computer (Windows, Mac, or Linux)\nInternet connection\nA web browser like Chrome or Firefox\nWillingness to learn and build real projects\nWhy Take This WordPress Course?\n100% beginner-friendly – no tech skills required\nStep-by-step instructions with real-world projects\nPerfect for personal websites, portfolios, blogs, or business sites\nUpdated for the latest WordPress version\nLearn themes, plugins, SEO, design, and security all in one place\nSave thousands by building websites yourself\nReady to create and manage professional WordPress websites with ease?\nJoin now and start building your online presence today!",
      "target_audience": [
        "Beginners who have never used WordPress and want to build their first website or blog.",
        "Entrepreneurs & Business Owners looking to create a professional website without hiring a developer.",
        "Freelancers & Aspiring Web Designers who want to learn WordPress to offer website-building services.",
        "Content Creators & Bloggers who want to set up and manage their own WordPress site.",
        "Marketers & SEO Enthusiasts who need to understand WordPress for content optimization.",
        "Students and hobbyists exploring web development and content management systems",
        "Anyone curious about building scalable, optimized websites with one of the most popular platforms on the web!"
      ]
    },
    {
      "title": "Angular A to Z",
      "url": "https://www.udemy.com/course/angular-a-to-z/",
      "bio": "Learn Angular like a Professional Start from the basics and go all the way to create big and complex applications.",
      "objectives": [
        "Angular Framework",
        "Basics of TypeScript"
      ],
      "course_content": {
        "Getting familiar with Angular Framework": [
          "What is Angular?",
          "Why To Choose Angular",
          "Friends and Competitors of Angular",
          "Version Comparison",
          "Create Your First Project in Angular",
          "Module Completion"
        ],
        "Deep Dive Into First Angular App": [
          "How Angular Framework Works",
          "Angular Modules",
          "Angular Components",
          "Execution Flow Of Application",
          "Module Completion"
        ],
        "Introduction to TypeScript": [
          "What is TypeScript",
          "Data Types",
          "Literal Type",
          "Enums",
          "Variables",
          "Functions",
          "Classes",
          "Constructor and Interface",
          "Module Completion"
        ],
        "Angular Decorators": [
          "What Is Decorator",
          "@Component & @NgModule",
          "Module Completion"
        ],
        "Angular Databinding": [
          "Installing Bootstrap And Jquery",
          "Text Interpolation Binding",
          "Property Binding",
          "Event Binding",
          "Two way Binding",
          "Module Completion"
        ],
        "Passing Data Between Components": [
          "Create Component",
          "@Input and @Output",
          "ngIf Directive",
          "ngClass Directive"
        ],
        "Angular Directives": [
          "What is Directive",
          "*ngFor directive",
          "*ngIf Directive",
          "ngClass Directive",
          "ngStyle Directive"
        ],
        "Angular Life Cycle Hooks": [
          "What is Angular Life Cycle Hooks",
          "How Life Cycle Hooks Executed",
          "Fetching Data Using @Input Decorator",
          "ngOnInit",
          "ngOnChanges and ngDoCheck",
          "ngOnDestroy"
        ],
        "Services and Dependency Injection": [
          "What is Services and Dependency Injection",
          "How Dependency Injection Works",
          "Creating Service",
          "Injecting Service Into Component",
          "Different Ways To Provide Service"
        ],
        "Angular Pipe": [
          "What is Pipe",
          "Built-In Pipes",
          "Custom Pipe"
        ]
      },
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "Are you a programmer and want to learn Angular to upgrade your career?\nIs this true that you want to learn Angular but because of false saying in the market that it is hard to learn you are not initiating?\nIf the answer is yes, then this course is for you. In this course we will learn Angular in very easy way and in standard pace that you can learn every bit and bytes of Angular.\nThis is the most comprehensive yet straight forward course on Angular framework. Whether you want to learn Angular framework from scratch, you want to switch to Angular framework or you want to learn advance features of this framework, this course is for you.\nIn this course we are going to cover very basic to advance structure of Angular framework. This course includes quizzes, tests, coding exercises and homework assignments as well as some major projects to create an application on Angular.\nThis course will include all the necessary theoretical and practical approach to every single topic. At first we will be focusing more on the basics and flow of Angular framework as it is the main thing in order to learn Angular. We will start by helping you get Angular installed on your computer.\nWe cover a wide variety of topics, including :\nBasics of Angular framework\nWhy you should use Angular\nPast of Angular\nExecution flow of the framework\nBasics of TypeScript\nAngular Modules\nAngular Components\nDecorators\nDatabinding\nDirectives\nLife-cycle hooks\nDependency Injection\nServices\nPipes\nAnd many more..\nSo what are you waiting for? Learn Angular in a way that will advance your career and increase your knowledge, all in a fun and practical way.",
      "target_audience": [
        "Web-developers",
        "Programmers",
        "IT students"
      ]
    },
    {
      "title": "Save time in Blazor with MudBlazor",
      "url": "https://www.udemy.com/course/save-time-in-blazor-with-mudblazor/",
      "bio": "Learn to integrate MudBlazor in your Blazor project",
      "objectives": [
        "MudBlazor layouts and themes",
        "MudBlazor inputs",
        "Mudblazor design components",
        "MudBlazor charts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup": [
          "Setup for Blazor server-side",
          "Setup for Blazor client-side (WASM)"
        ],
        "Basic components": [
          "Layout",
          "Buttons"
        ],
        "Inputs": [
          "Text boxes (TextField)",
          "Drop-selection (MudSelect/Select)",
          "Numeric input (text box for digits)",
          "Form"
        ],
        "Charts": [
          "Pie chart"
        ],
        "Misc.": [
          "Modify theme"
        ],
        "Example": [
          "MudBlazor setup",
          "Navigation menu",
          "Layout and theme setup",
          "Setting up the new article page (UI)",
          "Procedure for new article",
          "Implementing functionality for new article page",
          "Error and success messages for the new article page",
          "Search page setup (UI)",
          "Search procedure",
          "Adding search procedure to search page",
          "Creating article page",
          "Procedure to retrieve full article",
          "Retrieving article in the article page"
        ]
      },
      "requirements": [
        "Visual studio",
        "Rudimentary understanding of CSS",
        "Understanding of Blazor"
      ],
      "description": "This course will introduce you to MudBlazor, a library that allows you to use predefined components and fast-forward your development process in Blazor projects. It also allows you to interact with generic HTML and CSS without any restrictions.\n\n\nWe will begin with the setup of the library – installing Nuget packages and adding references to files, for both client and server-side options. Once we are done with that, we will be jumping into layouts and other aspects of basic setup.\n\n\nAfter the setup, we will be looking at all kinds of components - buttons, inputs of different types, and then some more complicated ones, such as charts and tables. You will not only learn how to adjust various visual properties, but also how to interact with these components programmatically.\n\n\nFinally, we will be looking at a rather large real-world example – a basic blog platform. This is to see how MudBlazor components interact with each other, as well as how they interact with generic HTML and CSS. The example will include a page that allows users to add a new article and pages that will allow searching for and reading articles. And it will include many of the components previously covered in the course, but in this case in a more realistic environment.",
      "target_audience": [
        "Blazor developers"
      ]
    },
    {
      "title": "Master Semantic UI and code 3 projects with 9 pages",
      "url": "https://www.udemy.com/course/semantic-ui-responsive-web-design-and-development/",
      "bio": "Master the latest version of Semantic UI and create real projects and themes while learning HTML, web design and coding",
      "objectives": [
        "Learn how to create and use all elements, collections, views and modules of the Semantic UI framework",
        "Learn how to create three different responsive websites using the Semantic UI framework",
        "Practice using a special built Semantic UI Learning Kit with more than 100 source files free to download and use",
        "Master the latest version: Semantic UI 2.4",
        "How to creating fluid and responsive layouts",
        "How to use breakpoints and the grid system",
        "How to structure all kinds of content",
        "How to build all of the 16 elements",
        "How to build all of the 6 collections",
        "How to build all of the 6 views",
        "How to build all of the 15 modules",
        "Project 1: Create a Resume and CV Page",
        "Project 2: Create a Small Business Website",
        "Project 3: Create a Knowledge Base"
      ],
      "course_content": {
        "Introduction": [
          "About the Course",
          "Projects Overview and Demos",
          "Understanding Semantic UI",
          "Downloading and Installing Semantic UI",
          "Learning Kit"
        ],
        "Elements": [
          "Button – Part I",
          "Button – Part II",
          "Container",
          "Divider",
          "Flag",
          "Header",
          "Icon",
          "Image",
          "Input",
          "Label",
          "List",
          "Loader",
          "Placeholder",
          "Rail",
          "Reveal",
          "Segment",
          "Step"
        ],
        "Collections": [
          "Breadcrumb",
          "Form – Part I",
          "Form – Part II",
          "Grid – Part I",
          "Grid – Part II",
          "Menu – Part I",
          "Menu – Part II",
          "Message",
          "Table – Part I",
          "Table – Part II"
        ],
        "Views": [
          "Advertisement",
          "Card",
          "Comment",
          "Feed",
          "Item",
          "Statistic"
        ],
        "Modules": [
          "Accordion",
          "Checkbox",
          "Dimmer",
          "Dropdown – Part I",
          "Dropdown – Part II",
          "Embed",
          "Modal – Part I",
          "Modal – Part II",
          "Popup",
          "Progress",
          "Rating",
          "Search",
          "Shape",
          "Sidebar",
          "Sticky",
          "Tab",
          "Transition"
        ],
        "Project 1 – Resume and CV Page": [
          "About the Project",
          "Basic Structure",
          "About",
          "Work Experience",
          "Education",
          "Testimonials",
          "Contact",
          "Portfolio",
          "Skills"
        ],
        "Project 2 – Small Business Website": [
          "About the Project",
          "Index – Basic Setup",
          "Index – Navigation",
          "Index – Hero",
          "Index – Message",
          "Index – About",
          "Index – News",
          "Index – Footer",
          "Services",
          "About – Story",
          "About – Office",
          "About – Clients",
          "Team",
          "Contact – Address",
          "Contact – Hours",
          "Contact – Message",
          "Contact – Map"
        ],
        "Project 3 – Knowledge Base": [
          "About the Project",
          "Index – Basic Setup",
          "Index – Navigation",
          "Index – Search",
          "Index – Articles",
          "Index – Categories",
          "Index – Footer",
          "Category – Search",
          "Category – Breadcrumb",
          "Category – Page Navigation",
          "Category – Article List",
          "Category – Support",
          "Article – Breadcrumb",
          "Article – Page Navigation",
          "Article – Content",
          "Article – Feedback",
          "Article – Related Articles"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "A code editor and a browser"
      ],
      "description": "ABOUT\nSemantic UI - one of the world's most popular front-end frameworks!\nThis course covers all the different parts of the latest version of one of the world's most popular front-end framework, Semantic UI 2.4.2. Semantic UI has been used by thousands of people around the world and have been carefully developed to cover a wide range of typical user interfaces.\nWeb pages built with Semantic UI works across all kinds of devices, browsers and screen sizes and will have a clean and modern design.\nThis course is for the beginner who want to learn Semantic UI from the bottom up. It goes through all the different parts, but each lecture can be watched independently.\nIn addition to just learning about the different parts of Semantic UI you will find a detailed walk-through of how to build three different responsive and modern complete projects using only Semantic UI.\nPROJECTS\nLearn to build the following projects using Semantic UI:\nProject 1: Resume and CV Page\nProject 2: Small Business Website\nProject 3: Knowledge Base\nLEARNING STYLE\nMore than just video lectures\nIn addition to the video lectures this course contains the following kinds of learning materials:\nSemantic UI Learning Kit:\nDownloadable ZIP file that works offline\nA custom built learning kit with source code for all parts of Semantic UI. Features a reference section with many examples and a practice section, which you can use while learning about Semantic UI. More than 100 source files included in this learning kit.\nUPDATES\nUpcoming future updates for this course will include the following:\nNew projects will be added: online shop, social network, portfolio, CMS admin, dashboard and more...\nNew components, utilities and other features in future versions of Semantic UI will be added\nAdvanced section on how to customize Semantic UI with Sass\nCoding exercises, quizzes and assignments\nTESTIMONIALS\nDon't take my word for it – read what other students are saying:\nGood. Thanks teacher !\n– Tạ Hồng Bản\nExcelente eleccion.\n– Gabriel Galán Maldonado",
      "target_audience": [
        "Anyone who wants to learn how to make responsive and modern websites with Semantic UI",
        "Anyone who wants to learn how to make quick prototypes"
      ]
    },
    {
      "title": "Python Machine Learning - Recommender systems with Angular",
      "url": "https://www.udemy.com/course/angular-recommender-system/",
      "bio": "Fullstack Recommender System using Python3 and Angular - E-commerce Machine Learning Using Python and Firebase",
      "objectives": [
        "Be able to create and launch a fully working recommender system",
        "Understand how frontend and backend communicate",
        "Be able to use both Python and Angular to develop advanced systems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "System overview",
          "Install IDE's"
        ],
        "Angular Website": [
          "Install npm/angular Cli",
          "Create the Angular project",
          "Add Bootstrap",
          "Navigation and Routing",
          "Login page and Dashboard",
          "Setup your Angular project"
        ],
        "Mysql": [
          "Download Mysql Workbench",
          "Sql Connection",
          "Database Theory",
          "Schema and tables",
          "Add Data",
          "Setup Database"
        ],
        "Python Backend Recommender": [
          "Install Python",
          "Get Backend Recommender",
          "Flask Api",
          "Combine recommender and Angular app",
          "Change returned Data",
          "Return the right Data"
        ],
        "Application Styling (Optional)": [
          "Style Intro",
          "Apply CSS and images"
        ],
        "Authentication (Firebase)": [
          "Create Firebase project",
          "Firebase Settings",
          "Signup/login methods",
          "Create User",
          "User Login",
          "Setup Firebase Authentication"
        ],
        "Update Backend": [
          "Insert user in Database part 1",
          "Insert user in Database part 2",
          "Load User from Database using Firebase ID",
          "Fetch data from new user",
          "Display data in Application",
          "Present Data"
        ],
        "Save user rating through web app": [
          "Add frontend rating view",
          "Add stars to rating view",
          "Save Item rating made by User",
          "Final changes"
        ],
        "Optional Angular functionality": [
          "Angular Routing - How To Pass Parameters"
        ]
      },
      "requirements": [
        "No prior coding knowledge",
        "Computer or Laptop",
        "Internet connection for downloading IDE's and course material"
      ],
      "description": "Interested in recommender systems or do you just want to learn how to build advanced systems consisting of both frontend and backend? Then this course is all you need! You will learn how to setup a API using the programming language Python such that a backend recommender can be remotely called. Furthermore you will learn how to develop a fully working frontend system using Angular and firebase which is capable of presenting user recommendations.\n\n\nDuring this course you will use a vast range of technologies including Angular, Python, Typescript, MySQL and firebase. The course will in other words give you a solid introduction to the development of fully functional web applications where several systems are integrated.\n\n\nWhat is TypeScript?\nTypeScript is the main language used by the official Angular teams and the language you'll mostly see in Angular tutorials. It's a superset to JavaScript and makes writing Angular apps really easy. Using it ensures, that you will have the best possible preparation for creating Angular apps.\n\n\nBy the end of this course, you'll be able to:\nBuild real client apps with Angular\nBuild backend systems using Python3\nWork with MySQL databases\nIntegrate to Firebase\nUse Machine Learning algorithms\nConsuming HTTP services\n\n\nThe Machine Learning Algorithms used in this course is all based on the Surprise Library which also any Python developer to get started with Machine Learning using just a few lines of code.",
      "target_audience": [
        "Anyone with an interest in Machine Learning",
        "Beginner/intermediate developers",
        "Anyone with an interest in Frontend development"
      ]
    },
    {
      "title": "Become a PHP Pro: A Step-by-Step Guide for Beginners 2024",
      "url": "https://www.udemy.com/course/the-complete-php-bootcamp-from-beginner-to-advance-full-course/",
      "bio": "Learn Modern PHP from Scratch | A Comprehensive Beginner's Guide | Learn to Code Like a Pro in Just a Few Weeks 2023",
      "objectives": [
        "The basics of PHP syntax, including variables, data types, and operators",
        "How to use control structures, such as if statements and loops, to create conditional logic in their code",
        "How to create functions and use them to organize their code and make it more efficient",
        "How to work with arrays, including creating, manipulating, and accessing their values",
        "How to use PHP to create and manipulate strings",
        "Students will gain an introduction to object-oriented programming (OOP) in PHP.",
        "They will learn how to define classes and create objects, as well as how to use OOP principles to write more maintainable and scalable code."
      ],
      "course_content": {
        "Introduction": [
          "Setting up the Environment for php development"
        ],
        "Mastering PHP from Scratch: A Comprehensive Beginner's Guide": [
          "1.0 Php basic syntax Explanation",
          "1.1 PHP Echo and Print Statement",
          "1.2 What are statements",
          "1.3.0 Types in php",
          "1.3.1 String type in php part 1",
          "1.3.2 String type in php part 2",
          "1.3.3 Numbers Type in php",
          "1.3.4 Floating point number in php",
          "1.3.5 Booleans in php",
          "1.3.6 Null And Numeric Strings",
          "1.4 Comments In php",
          "1.5.1 Basics of Variables in PHP Part 1",
          "1.5.2 Variable scopes Variables part 2",
          "1.5.3 Variable Variables in php Variables part 3",
          "1.5.4 Constants in php",
          "1.6.0 Functions in php",
          "1.6.1 Function in php part 1",
          "1.6.2 Functions in php part 2",
          "1.6.2 Functions in php part 3",
          "1.7.0 Operators overview",
          "1.7.1 Assignment operator",
          "1.7.2 Arithmetic operator",
          "1.7.3 Comparison operators",
          "1.7.4 Logical Operator",
          "1.7.5 String Operator",
          "2.8.0 Arrays in php",
          "2.8.1 Arrays in php part 2",
          "2.8.2 Arrays in php part 3",
          "2.8.3 Arrays in php part 4",
          "2.9.0 Control Structures in php",
          "2.9.1 If Else Else If",
          "2.9.2 If Else New Syntax",
          "2.9.3 Swtich case",
          "2.9.4 Do while and while loop",
          "2.9.5 Continue and break keyword",
          "2.11.8 Goto",
          "2.12 variable variables in php"
        ],
        "Object Oriented Programming In PHP": [
          "2.10.1 Getting started with object oriented programming",
          "2.10.2 Construct and destruct in php part 1",
          "2.10.3 Construct and destruct in php part 2",
          "2.10.4 Inheritance in php part 1",
          "2.10.5 Inheritance in php part 2",
          "2.10.6 Access Modifiers or Visibility in php",
          "2.10.7 Overriding in php",
          "2.10.8 Abstraction in php part 1",
          "2.10.9 Abstraction in php part 2",
          "2.10.10 Interfaces in php part 1",
          "2.10.11 Interfaces in php part 2",
          "2.10.12 Late Static Bindings in php part 1",
          "2.10.12 Traits in php",
          "2.10.12 Type Hinting in php part 1",
          "2.10.13 Type Hinting in php part 2",
          "2.10.14 Anonymous Classes in php part 1",
          "2.10.15 Anonymous Classes in php part 2",
          "2.10.16 Comparing objects in php",
          "2.10.16 Magic Methods in php part 1",
          "2.10.16 Magic methods in php part 2",
          "2.10.17 Magic methods in php part 3",
          "2.10.18 Magic methods in php part 4",
          "2.10.19 Magic methods in php part 5",
          "2.10.20 Magic methods in php part 6",
          "2.11 Magic Constants",
          "2.12.1 Namespaces in php part 1",
          "2.12.2 Namespaces in php part 2",
          "2.13.1 Enumerations in php part 1",
          "2.13.2 Enumerations in php part 2",
          "2.13.3 Enumerations in php part 3",
          "2.14.1 Exceptions in php part 1",
          "2.14.2 Exceptions in php part 2",
          "2.14.3 Exceptions in php part 3",
          "2.15 Method chaining",
          "2.16.1 Properties in php part 1",
          "2.12.4 Properties in php part 2",
          "2.12 Static"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS: While this course is designed for beginners, having a basic understanding of HTML and CSS will be helpful",
        "You'll also need a PHP development environment to run PHP code. There are several options available, including XAMPP, WAMP, or MAMP.",
        "The course is delivered online, so you'll need a reliable internet connection to access the course material and complete exercises.",
        "To write and execute PHP code, you'll need a text editor or IDE. There are many free options available, such as Notepad++, Sublime Text, or Visual Studio Code."
      ],
      "description": "Welcome to the PHP for Beginners course, the perfect starting point for anyone looking to learn the ins and outs of PHP. This comprehensive course is designed to take you from absolute beginner to proficient PHP developer in no time.\nIf you're looking to create dynamic, database-driven websites or web applications, PHP is an essential tool to learn. This popular server-side scripting language is used by millions of websites, making it a valuable skill for any developer to have.\nIn this course, you'll start with the basics of PHP, including syntax, variables, data types, and operators. From there, you'll move on to more advanced concepts, such as control structures, functions, and arrays.\n\n\nWhether you're a complete beginner or have some experience with web development, this course is perfect for anyone looking to learn PHP. With a focus solely on PHP, you'll gain a deep understanding of this powerful language and be well on your way to becoming a proficient PHP developer.\nTo get the most out of this course, you should have a basic understanding of HTML, CSS, and JavaScript. However, even if you're completely new to web development, you'll find the course easy to follow and understand.\nEnroll in the PHP for Beginners course today and start your journey to becoming a skilled PHP developer. With a comprehensive curriculum, hands-on exercises, and expert instruction, this course is the perfect starting point for anyone looking to learn PHP.",
      "target_audience": [
        "The course assumes no prior knowledge of PHP, making it perfect for those who are new to programming and web development.",
        "If you're a web developer who wants to add PHP to your skillset, this course is an excellent starting point.",
        "The course is ideal for students who want to learn how to create dynamic web applications using PHP.",
        "If you're a freelancer or contractor who wants to expand your services to include PHP development, this course will give you a solid foundation to build on."
      ]
    },
    {
      "title": "Use Laravel to Create a SPA with Vue, Inertia, and Tailwind",
      "url": "https://www.udemy.com/course/use-laravel-to-create-a-spa-with-vue-js-inertia-js-and-tailwind-css/",
      "bio": "Create a Single Page Application for your portfolio using the best CSS, JavaScript and PHP frameworks and libraries.",
      "objectives": [
        "Get ahead of the pack and master the technologies of the future, now",
        "Create flexible, dynamic and reactive projects in a very short time",
        "Create a SPA without dying in the process and without high complexities",
        "Learn how to use the fastest growing and most popular tools today",
        "Start with Tailwind CSS and apply it to a real project (your own portfolio)",
        "Learn Inertia JS along with Vue JS and create reactive interfaces for your users",
        "Apply Laravel and build a SPA from scratch in conjunction with all components of the VILT stack",
        "Learn how to use Laravel Jetstream, one of Laravel's most complete authentication systems"
      ],
      "course_content": {
        "Meet the Instructor and How to Take Advantage of the Course": [
          "About VILT and the Project to Build in the Course",
          "About the Instructor",
          "The Development Environment Used in The Course",
          "The Source Code for The Course's Project",
          "How to Ask Questions"
        ],
        "Prepare the Project and Its Dependencies": [
          "Install and Configure a Fresh Laravel Project",
          "Install Jetstream to Get Intertia.js in Your Laravel Portfolio",
          "Create the Components to Store Your Portfolio Data, with Laravel",
          "Generating and Inserting Test Data for Your Portfolio with Laravel",
          "Notes About Laravel Vite"
        ],
        "Learn How to Use Each Member of the VILT Stack for Your Portfolio": [
          "Get to Know and Use Laravel Jetstream",
          "Meet Tailwind CSS and Use it to Start with Your Portfolio",
          "Meet and Learn How to Use Inertia.js Together with Vue.js",
          "Explore More Components and Add Content to Your Portfolio with Laravel"
        ],
        "Implement the Portfolio Sections Separated in Modules with Tailwind and Inertia": [
          "Define a Component to Display the List of Skills in Your Portfolio",
          "Improving Some Pending Details of the Portfolio",
          "Define the Component to Display the Projects of Your Portfolio with Laravel",
          "Resolving Project Icons Dynamically",
          "Use a Jetstream Modal to Display a Contact Form"
        ],
        "Add the Functionalities of the Contacting System with Inertia.js and Laravel": [
          "Linking Your Contact Form with Laravel, Through Inertia.js",
          "Send the Received Contact Message from Your Portfolio, Using Laravel",
          "Validating the Contact Form with Laravel and Inertia.js",
          "Showing a Success Message When Receiving a Contact Form in Your Portfolio"
        ],
        "Practice What You Learned by Creating an Admin Panel for Your Portfolio": [
          "Prepare Your Portfolio to Get an Admin Panel",
          "Implement the Components to Display the List of Skills on the Dashboard",
          "Show the Project List in the Admin Panel",
          "Allow to Create Skills in Your Portfolio with Laravel and Inertia.js",
          "Add Projects to Your Portfolio Using Laravel and Inertia.js",
          "Allow to Edit Existing Skills and Projects from Your Portfolio",
          "Remove Skills and Projects from Your Portfolio with Laravel and Inertia.js"
        ],
        "Conclusions and Recommendations": [
          "Recommendations and Steps to Follow",
          "Bonus Class"
        ]
      },
      "requirements": [
        "Desire to learn from scratch and step by step",
        "Initiative to be ahead of others, with new technologies",
        "Willingness to change the way of thinking and create applications. Now it's better and different"
      ],
      "description": "Get ahead of the competition and start with the VILT stack, made up of Vue.js, Inertia.js, Laravel, and Tailwind CSS. Master the technologies that will dominate the world of web development with its growing popularity and demand.\n\n\nBuild a Single Page Application, which used to be complex, in a short time and with little effort, thanks to these Full Stack technologies. Inertia.js will be your greatest ally in this process.\nYou will create your own SPA Portfolio with an attractive appearance thanks to Tailwind, dynamic and reactive, thanks to Vue.js and Inertia.js, and perfectly functional and supported thanks to Laravel. You will also create an administration panel, using Laravel Jetstream, which will allow you to manage the skills and projects that you will show in your portfolio, applying everything you have learned with Vue.js, Intertia.js, Laravel, and Tailwind CSS.\n\n\nThe approach of the course will allow you to master the essential concepts and functionalities of Vue.js, Inertia, Laravel, and Tailwind together, while also applying them in a fully functional project (your portfolio as a Single Page Application).\n\n\nThe type of SPA to be built with VILT will not matter, you will make it a reality and with ease.\nLaravel is the most popular framework in the world and together with Inertia.js, Vue.js, and Tailwind CSS, you will have no limits. You will take advantage of the enormous potential of Laravel for your SPA, without having to limit it to just an API.\n\n\nIt's your opportunity to get ahead\nThese technologies will dominate the near future of web development and it's your chance to stay ahead of them all.\n\n\nWhy take this course with me?\nBecause I am always there to accompany and guide your learning. I will answer all your questions and comments during the course. ALWAYS.\nMore than 25,000 students appreciate the effectiveness of the answers to all their questions and their more than 6,000 perfect scores prove it.\nNot only do I teach you VILT, but you will also learn how to apply it and solve real problems for your projects and ideas.\n\n\nLearning VILT increases your capabilities and ensures a bright future, full of flexibility and agility for your developments.\n\n\nDo not wait anymore. The world moves fast and all your ideas and projects are waiting to be implemented in an effective and agile way with VILT.\n\n\nPress the button to enter the course now.",
      "target_audience": [
        "If you want to get ahead of the competition and master the technologies that will dominate web development in no time",
        "If you want to start with multiple technologies that work together (Vue JS, Inertia JS, Laravel, and Tailwind)",
        "If you want to build complex applications with little effort and in a short time (as it should always be)",
        "If you are interested in SPAs",
        "If you want to build your own online portfolio"
      ]
    },
    {
      "title": "Ultimate PHP & MySQL Web Development Course & OOP Coding",
      "url": "https://www.udemy.com/course/php-mysql-course/",
      "bio": "Become an In-demand PHP & MySQL Ninja by learning all the web developments features for creating websites",
      "objectives": [
        "PHP Programming",
        "SQL Programming",
        "Database Coding",
        "Application Programming",
        "Cross Platform Development",
        "Web Development",
        "Semantics of General Programming",
        "The Format of Coding Applications",
        "Web Design",
        "All The Features of PHP & MySQL",
        "Object Oriented Programming"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction",
          "Setup On Windows",
          "Setup On Mac",
          "Setup On Linux",
          "Online Code Editor"
        ],
        "Basics": [
          "Basic File Syntax",
          "Printing (echo)",
          "Comments",
          "Variables",
          "Variable Data Types",
          "Variable Naming",
          "Constants",
          "Arrays",
          "Associative Arrays",
          "Multidimensional Arrays",
          "Quiz - Basics"
        ],
        "Control Structures": [
          "if Statement",
          "if...else Statement",
          "if...elseif...else Statement",
          "Switch Statement",
          "while Loop",
          "do...While Loop",
          "for Loop",
          "foreach Loop",
          "Break Statement",
          "Continue Statement",
          "Quiz - Control Structures"
        ],
        "Functions": [
          "Basic Function",
          "Passing Function Arguments",
          "Passing Function Arguments By Reference",
          "Default Argument Value",
          "Function Returning Values",
          "Dynamic Function Calls",
          "Variable Scope",
          "Quiz - Functions"
        ],
        "Forms": [
          "Simple HTML Form",
          "GET vs POST",
          "$_SERVER[\"PHP_SELF\"]",
          "Validating Form Data With PHP",
          "Required Fields",
          "Display Error Messages",
          "Validate Name",
          "Validate Email",
          "Validate URL",
          "Keep The Values In The Form",
          "Quiz - Forms"
        ],
        "File Handling": [
          "Read File (readfile())",
          "Open, Read & Close A File (fopen(), fread(), fclose())",
          "Read Single Line (fgets())",
          "Check End-Of-File (feof())",
          "Read Single Character (fgetc())",
          "Write To File (fwrite())",
          "Configure php.ini File For File Uploading",
          "Front End HTML Upload Form",
          "PHP Upload Script",
          "Check If File Exists",
          "Limit File Size",
          "Limit File Type",
          "Quiz - File Handling"
        ],
        "MySQL": [
          "MySQL vs MySQLi vs PDO",
          "Creating A Database & Table (phpMyAdmin)",
          "Connecting To A Database",
          "Get Data Using SELECT Query",
          "WHERE Property For Filtering",
          "LIKE Property For Pattern Search",
          "Sorting Results Using ORDER BY Property",
          "Using JOINS",
          "Insert Data Using INSERT Query",
          "Get ID Of The Last Inserted Row",
          "Insert Multiple Rows",
          "Update Data Using UPDATE Query",
          "Delete Data Using DELETE Query",
          "Delete All Rows In A Table Using TRUNCATE Query",
          "Delete Table Using DROP Query",
          "Limit Data Selections Using LIMIT, ROWNUM",
          "Create Table Using CREATE Query",
          "Clone/Duplicate Table",
          "Alter Table",
          "Create Database",
          "Drop Database",
          "SQL Injection & Prepared Statements",
          "Quiz - MySQL"
        ],
        "XML": [
          "What Is XML?",
          "What Is SimpleXML?",
          "Parse XML String",
          "Parse XML File",
          "Get Node Values",
          "Get Node Values of Specific Elements",
          "Get Node Values - Loop",
          "Get Attribute Values",
          "What Is The XML Expat Parser?",
          "Initializing the XML Expat Parser",
          "Load and Output XML Using The Dom Parser",
          "Looping through XML Using The Dom Parser",
          "Quiz - XML"
        ],
        "AJAX": [
          "What Is AJAX?",
          "Load Simple Data Using AJAX Front End",
          "Load Simple Data Using AJAX Back End",
          "Load Data From A Database Using AJAX",
          "Quiz - AJAX"
        ],
        "Emails": [
          "Send A Plain Text Email",
          "Send A HTML Email",
          "Email Attachments",
          "PHPMailer Setup",
          "Send Email Using PHPMailer",
          "Send HTML Email Using PHPMailer",
          "Email Attachments Using PHPMailer",
          "Quiz - Emails"
        ]
      },
      "requirements": [
        "Passion For Learning Web Development",
        "Basic Computer Knowledge and Skills",
        "Passion For Learning PHP Programming",
        "Basic Knowledge of Computer Science Is Optional"
      ],
      "description": "Learn about everything there is to know about PHP & MySQL Web Development. A step by step process is used to explain every facet of these topics.\nNOTE: This course includes information on web programming, design, OOP, SQL!\nGain a good understanding of the following concepts with this course:\nWhat PHP & MySQL is?\nWeb Certifications\nHow to develop websites/applications using PHP & MySQL\nFeatures of the PHP & MySQL programming language\nCoding semantics\nApplication programming\nNetwork programming\nPHP is one the most popular languages in the world. It is requested by all companies such as Google, Facebook and Microsoft for development. It powers Facebook and many other popular websites. This course will ensure you are not left out as more and more companies request this awesome and powerful language. This course will teach you everything about programming PHP & MySQL applications.\nYou will receive all the knowledge to use and leverage the powerful technology behind these amazing and wonderful platforms.\nOver 455,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only PHP & MySQL Programming course that you will need!",
      "target_audience": [
        "Anyone Looking To Learn About PHP Coding",
        "Developers Looking To Learn The Skills Needed To Utilise PHP Features",
        "PHP Developers",
        "Web Developers",
        "Application Programmers",
        "Web Designers",
        "People Looking To Learn About Programming",
        "Those Seeking To Understand How PHP Programming Works",
        "People Seeking Guidance On How To Create PHP & MySQL Websites/Application",
        "Beginners & Experts In This Field",
        "People With a Desire To Improve Their Programming Knowledge"
      ]
    },
    {
      "title": "Complete ReactJS developer Bootcamp - Build 10 projects",
      "url": "https://www.udemy.com/course/complete-reactjs-developer-bootcamp-build-10-projects/",
      "bio": "A complete beginner-friendly course on Reactjs. This course includes modern react with Hooks, Context API, and more...",
      "objectives": [
        "ReactJS - Complete modern and updated react knowledge",
        "Build 10+ projects that can be used in Portfolio",
        "React - State, props, hooks, router, context API, API handling and more",
        "Authentication, route restriction, CRUD flow of database",
        "Firebase Auth, Firebase database and Firebase file hosting"
      ],
      "course_content": {
        "Get started with Reactjs": [
          "A note about CODE files and attachments",
          "Introduction to react js and some myths",
          "Tools that we need"
        ],
        "Going all classic": [
          "Section 2 introduction",
          "01 Finishing the hello world task",
          "02 Delete and recreate everything",
          "03 Adding CSS to our Hello World",
          "04 Everything in its own file",
          "05 Reusable components"
        ],
        "03 Create a react template": [
          "Section 3 Introduction",
          "01 Understand the existing template",
          "02 Move navbar and understand the errors",
          "03 Convert the HTML template into React App",
          "04 Reusable Card and Assignment"
        ],
        "04 Getting friendly with states": [
          "Section 4 Introduction",
          "01 What are props and states",
          "02 Preparing the state based application",
          "03 Complete counter application",
          "04 Assignment for counter app"
        ],
        "05 Building a TIC TAC TOE": [
          "Section 5 Introduction",
          "01 You need to study first",
          "02 Preparing the Tic Tac Toe",
          "03 Sending icons from components",
          "04 Setup layout for tictactoe",
          "05 Game is almost working",
          "06 Finishing tictactoe and assignment"
        ],
        "06 Learn React Context API with projects": [
          "Section 6 Introduction",
          "01 The problem that contextAPI solves",
          "02 Detail on Context and Provider",
          "03 Detail on Consumer in contextAPI",
          "04 Understand the working of dark and light mode",
          "05 Creating a theme Toggler with Context API",
          "06 FInishing the theme switcher app"
        ],
        "07 App with Context API with reducers and actions": [
          "Section 7 Introduction",
          "01 What we are building here",
          "02 create brain of the application",
          "03 useReducer for our app",
          "04 Add an input form",
          "05 Sending a dispatch",
          "06 Display the context data and dispatch - assignment"
        ],
        "08 Local Storage and UseEffect Hooks": [
          "Section 8 Introduction",
          "01 Introducing the Effect hook",
          "02 A form to submit the data",
          "03 Looping through all the values",
          "04 Hooks and local storage in action"
        ],
        "09 Learn to handle API": [
          "Section 9 Introduction",
          "01 Learn to read docs for API",
          "02 Lets read Axios docs",
          "03 Drill down the API",
          "04 Extracting information from API"
        ],
        "10 Design a shopping cart with API": [
          "Section 10 Introduction",
          "01 A walk through with Pexels and JSON",
          "02 Add item to the cart",
          "03 Buy item and remove item",
          "04 Fetching photos from API",
          "05 store everything is state",
          "06 Card for every product",
          "07 Create cart section",
          "08 Bring the shop application together",
          "09 Removing the duplicate bug"
        ]
      },
      "requirements": [
        "Basics of JS like loops and function",
        "NO PRIOR knowledge of react is expected"
      ],
      "description": "Welcome to the modern react js developer course.\n\n\nNOTE: This is totally new course and not a refreshed course, where just 1 or 2 sections are new. Every single video is new and according to modern reactjs. Also, this course is totally beginner-friendly course.\n\n\nNow, let’s go through with some questions that you should know.\n\n\nQ. What is the prerequisite for this course?\nA. You need to know JS basics before getting started with the course. You don’t need to be expert in JS, just basics of loops, arrow functions, etc need to know.\n\n\nQ. What I will build in this course?\nA. In this course, you will create 10 different applications. Every application is focused on different subjects of react like hooks, context API, web API, local storage, firebase, login, etc. We will create a different application for every major concept. This helps a beginner to understand the topic easily. Also, this will give you a nice portfolio to publish on Github, giving a nice proof of your gradual learning.\n\n\nQ. Why should I learn ReactJS?\nA. ReactJS is one of the most popular React library that is looked after by companies hiring for front end developers. This course will give you enough confidence and projects, in-depth understanding of react that you will be able to apply for Jr. Front End developer or Jr. React Developer positions.\n\n\nQ. Where are the code files used in this course?\nA. All code files are already included in this course. All most all (not all videos) videos have attachment, where whatever code I have written in that video, is attached in the video. Final projects are included in this course.\n\n\nQ. Why there are bug fixing videos in this course?\nA. I have tried to give you a real-world development approach with this course. Not all codes are written with “You write and it will work like magic” approach. All developers make mistakes and I have not skipped that part. All though very less but all debugging videos are added in the course (some in fast forward mode), so that you can see and understand the debugging process.\n\n\nI hope that this course will serve you best at most affordable pricing that I can offer.\n\n\nThanks,",
      "target_audience": [
        "Beginners in React",
        "Intermediate user of javascript",
        "Students interested in front end development with reactjs"
      ]
    },
    {
      "title": "Modern WebSockets Application Development with Java EE",
      "url": "https://www.udemy.com/course/java-ee-fundamentals-websockets-app-development-for-java-developers/",
      "bio": "Your Complete Guide to WebSockets Application Development on the Java EE Platform",
      "objectives": [
        "Build WebSocket enabled applications on the Java EE platform",
        "Know how to use the Java EE API documentation",
        "Know what Java EE really is",
        "Know how the Java EE platform is evolved",
        "Know how to contribute to the Java EE platform"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of the Java programming language",
        "Java IDE - NetBeans or IntelliJ",
        "Java 8",
        "Maven",
        "Git SCM"
      ],
      "description": "Are you a software developer? Or aspiring to be one? Just finished learning Java the language and wondering what next? Do you want to learn to develop full-duplex and bidirectionally communicating applications on the Java EE platform?\nIf you answered yes to any of the above questions, then The Complete Java EE WebSockets Development Course is your complete guide to the fascinating world of WebSocket programming on the industry gold standard Java EE platform.\nThis course will thoroughly cover the entire WebSocket API as specified in JSR 356 and teach you how to develop\nProgrammatic Server Endpoint\n\nAnnotated Server Endpoint\n\nWebSocket Encoders and Decoders\n\nAnnotated Client Endpoint\n\nProgrammatic Client Endpoint\n\nJavaScript Client Endpoint and much much more\nYou will also learn, along the way, what Java EE really, how the platform is evolved, what the JCP is, what a JSR is, what is meant by a reference implementation and a whole lot more you may not have known about the ever powerful Java EE platform.\nThis course is packed with exercises to reinforce what you learn, along with personal anecdotes from your instructor's experiences. By the end of this course, you will have mastered WebSocket development on the Java EE platform and would be on you way to creating the next big thing out there.\nSo go ahead, click on the big green button to enroll now and I will see you in the course.",
      "target_audience": [
        "Anyone who wants to learn about WebSockets application development on Java EE",
        "Anyone who has basic Java knowledge and wants to take that to the next step",
        "Anyone who wants to know what Java EE is",
        "Anyone interested in modern software application development on Java EE"
      ]
    },
    {
      "title": "Ruby Programming for Beginners",
      "url": "https://www.udemy.com/course/ruby-programming-for-beginners-course/",
      "bio": "Ruby Programming Basic fundamentals for beginners, Learn everything in Ruby Programming",
      "objectives": [
        "Learn the core basic fundamental of ruby",
        "Write your own code in ruby",
        "Able to analyze standard ruby code and make changes according to the requirement"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to ruby",
          "Ruby software install",
          "First program",
          "Basic numbers",
          "Commenting",
          "Variables",
          "Text editor and file",
          "User input"
        ],
        "Decision making": [
          "If statement",
          "If else statements"
        ],
        "Examples": [
          "Program to find odd or even",
          "Program to find vowel or consonant",
          "Finding greatest number"
        ],
        "Operators": [
          "Operators in ruby",
          "Operators"
        ],
        "Loops in Ruby": [
          "While Loop",
          "Until Loop",
          "For Loops",
          "Program to find factorial of any number",
          "Program to print multiplication table",
          "Multi multiplication table",
          "Program to findExponent value",
          "Break Statement",
          "Next statement",
          "Redo",
          ".times",
          "Password example",
          "Chomp",
          "print vs puts",
          "Interpolation"
        ],
        "Arrays and Hashes": [
          "Arrays",
          "Push and Pop in arrays",
          "Loop in arrays",
          "Adding arrays",
          "Hashes",
          "Hashes methods",
          "Methods Introduction",
          "Methods example",
          "add and sub example",
          "methods with arguements",
          "List as arguement",
          "user entered array"
        ],
        "Object Oriented Programming": [
          "OOPs Introduction",
          "Class and Object",
          "Class and objects example",
          "Accessing attributes",
          "Initialization method",
          "attr_reader,writer,accessor",
          "Singleton",
          "Inheritance",
          "Method overriding",
          "String method",
          "Multiple Inheritance",
          "Modules",
          "Begin and end blocks",
          "Class Variable",
          "Class Variable example",
          "Class method or self method",
          "setter and getter methods",
          "Global Variable",
          "Constants",
          "Object Freeze",
          "require statement to load files",
          "Ranges"
        ],
        "Blocks": [
          "Blocks",
          "Blocks example",
          "Blocks with arguement",
          "Blocks Example",
          "Blocks with reference"
        ],
        "Procs and Lambda": [
          "Procs",
          "Proc Example",
          "Lambda",
          "Proc.new and implicit method",
          "Example",
          "Difference between proc and lambda",
          "last diff between lambda and proc",
          "proc and arity method",
          "Example",
          "Time Class",
          "conclusion",
          "Keywords or Reserved words in Ruby",
          "Ruby documents"
        ]
      },
      "requirements": [
        "Basic understanding of programming language",
        "Software to run programs, How to install is explained in the course"
      ],
      "description": "Acutal price of the course is $127, Join now and get the benefit, very soon price will hike\n\nIn this Ruby training course, We will teach you the fundamentals of the Ruby programming language. Ruby was designed to be more powerful that Perl, and more object-oriented than Python, and has gained in popularity due to its power and ease of use. Mike will show you the basic functions and features of Ruby, and how to put them together to create powerful programs.\nThis is a complete Ruby programming Basics Fundamentals tutorial for beginners. All the topics from basic to advanced are covered with examples to understand the concepts better. Once you complete the course you will be able to write complex code using ruby.I am sure you are going to love the python than any other programming language for rest of your life.\nThis tutorial has been designed for software programmers with a need to understand the Ruby programming language starting from scratch. This tutorial will give you enough understanding on Ruby programming language from where you can take yourself to a higher level of expertise.",
      "target_audience": [
        "Anybody who want to learn ruby programming",
        "Who want to make their career in software industry",
        "Who is a beginner to programming language"
      ]
    },
    {
      "title": "TypeScript: The Complete Guide",
      "url": "https://www.udemy.com/course/typescript-complete-guide/",
      "bio": "Understanding typescript from scratch to advance level and integration with frameworks like Angular, Express and more",
      "objectives": [
        "Difference between javascript and typescript",
        "Writing typescript code from scratch to advance level",
        "Understanding typescript role in advance frontend frameworks like Angular",
        "Understanding typescript role in advance backend development frameworks like Node + Express + Typescript",
        "Writing object oriented programming in typescript with class, interfaces, generics and more",
        "Writing advance typescript decorators to meet advance needs",
        "Detailed understanding of typescript compiler with wide variety of configuration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Typescript?",
          "Issues in Javascript",
          "JavaScript Versions",
          "Typescript Advantages",
          "Typescript Versions",
          "Do you know?",
          "Basic understanding about Typescript & it's use"
        ],
        "Setup": [
          "Important Note",
          "Visual Studio Code & Node",
          "Installing Typescript & Writing First Typescript File",
          "Downloading Zip from Resources & Using it",
          "Setting Code Formatter Extension - Prettier",
          "Setting Icon Theme Extension",
          "Important Links & Commands"
        ],
        "Typescript Compilation": [
          "Important Note",
          "Introduction",
          "Watch Mode",
          "tsconfig.json",
          "noUnusedLocals",
          "noUnusedParameters",
          "noImplicitReturns",
          "Setting up debugger",
          "Typescript basic compilation understanding",
          "Additional resources"
        ],
        "Basics Types with Typescript": [
          "Introduction",
          "Data Type Validation in Javascript",
          "Basic Type (primitives)",
          "bigint",
          "Symbol",
          "Type Assignment (Implicit vs Explicit)",
          "Summary",
          "Basic data types with Typescript"
        ],
        "Working with Typescript": [
          "Introduction",
          "Objects Basic",
          "Objects Readonly & Optional Properties, Nested Objects",
          "Objects with Functions",
          "Arrays Basic",
          "Arrays Readonly & Objects",
          "Array Destructuring & Constructor",
          "Union",
          "Enums with Log Example",
          "Enum in Detail",
          "Summary",
          "Objects, Arrays, Union & Enums",
          "Array of Objects - Filter & Map",
          "let var const",
          "let in Detail",
          "Tuples",
          "Tuple Destructuring",
          "Alias",
          "Literals",
          "Functions, Params and More",
          "Arrow Functions",
          "Anonymous Functions & Constructor",
          "Casting",
          "Casting with HTML Example",
          "Summary",
          "Tuples, Aliases, Arrow Functions, Casting and more",
          "Arrow Function"
        ],
        "Classes": [
          "Introduction",
          "What is Class?",
          "Creating first Class",
          "How Class looks in JS?",
          "Constructor and Params",
          "this keyword",
          "Access Modifiers",
          "Readonly",
          "Debit & Credit Example",
          "Static Property",
          "Static Method",
          "Summary",
          "Classes, Objects, Access Modifiers & Static Members",
          "Creating Class for Student",
          "What Is Inheritance?",
          "Creating Objects for Child Classes",
          "Method Overriding",
          "Method Overriding With Example",
          "Protected",
          "Abstract Classes",
          "Abstract Properties",
          "Getter & Setter",
          "Invisible Constructer",
          "Abstract Methods",
          "Summary",
          "Inheritance, Method Overriding, Abstract, Getter & Setter",
          "Inheritance & Overriding"
        ],
        "Interfaces": [
          "Introduction",
          "What is Interface?",
          "Example BankAccount Interface",
          "Functions in Interface",
          "How Interface looks in JS?",
          "Union Examples with Property",
          "Interface vs Class",
          "Summary",
          "Interfaces - Part 1",
          "Implementing Interfaces",
          "Extending Interface",
          "Implementing Multiple Interfaces",
          "Interface as type",
          "Utility Types",
          "More Utility Types",
          "Interfaces Vs Type Aliases",
          "Interface with same name",
          "Summary",
          "Interfaces - Part 2 (Extending Interfaces, Utility Types,Types Aliases and more)",
          "Utility Types"
        ],
        "Generics": [
          "Introduction",
          "Creating Generic Function",
          "Naming Convention",
          "Multiple Types",
          "Return Types",
          "Issue with Return Type",
          "With Arrays",
          "Generic Classes",
          "Generics Interfaces",
          "Generics Vs Any",
          "Generics Functions, Classes & Interfaces",
          "Write a Generic Class"
        ],
        "Advance Typescript Compilation": [
          "Introduction",
          "compilerOptions",
          "target",
          "rootDir and outDir",
          "declaration & declarationMap",
          "removeComments",
          "noEmit",
          "noEmitOnError",
          "Advance Compilation - Part 1",
          "noImplicitAny",
          "strictNullChecks",
          "strictFunctionTypes",
          "strictBindCallApply",
          "strictPropertyInitialization",
          "noImplicitThis",
          "noUnusedLocals",
          "noFallthroughCasesInSwitch",
          "allowUnreachableCode",
          "Advance Compilation - Part 2"
        ],
        "Decorators": [
          "Introduction",
          "Class Decorator",
          "experimentalDecorators",
          "Decorator Factories",
          "A change in Naming Convention",
          "Class Decorator - Example",
          "Multiple Decorator",
          "Class Decorator Used by Angular",
          "Property Decorator",
          "Method Decorator",
          "Method Decorator With Parameter",
          "Decorators, Decorator Factories, Class/Property/Method Decorators and more"
        ]
      },
      "requirements": [
        "A basic of javascript will be an advantage [Not compulsory]"
      ],
      "description": "#1: Best Indian corporate instructor with TypeScript\n\"I attended Navin's offline training in Deloitte, India, for JavaScript; it was a great experience, which also helped me become a senior developer at my current company. Then I also learned about other technologies from him on Udemy. I loved the ways he explained concepts and also understood in advance the doubts that could arise for a learner; that's great art that comes with experience for any instructor.\" -- Govind Satpute\n\n\nWhy choose this course?\nEverything is covered right from scratch.\nPractical scenarios added from my product-building experience.\nUnique ways to explain concepts with different real-time examples.\nDeep dive into advanced topics.\nMake yourself ready to learn advanced frameworks like React, Angular, Vue, Express, and many more.\nDesigning solutions for given problems.\nHave you seen how few developers debug any code in minutes? Debugging is an art, which saves hours of your precious time.\nSuitable for beginners, intermediates, and advanced learners (specific modules for mastering an area of JavaScript).\nWhy me as the instructor for this course?\nMy name is Navin Rajesham, and I am a certified corporate trainer from India. I trained Deloitte, CitiusTech, Infosys, TCS, and many more MNCs on JavaScript. With my 10+ years of experience, I learned how to keep a path in a course, elaborate the things, put great examples to understand concepts, and make sure all the learners get the best out of it. Creating an online course is not just a simple task; it's an art that comes with experience. I feel great when I read reviews of how my courses have helped learners. I would like to thank my 70k+ learners on Udemy.\n\n\nWhat does the course cover?\nWhy TypeScript?\nIssues in JavaScript\nTypeScript versions\nSetting watch mode\ntsconfig.json in details\nSetting up debugger\nData Types\nObjects\nTraditional Functions\nArrow Functions\nAnonymous Functions\nArray\nTuples\nUnion\nEnums\nCasting\nClasses, Access Modifers\nGetter & Setter\nStatic Property & Method\nInheritance\nAbstract Classes, Properties & Methods\nInterface\nUtility Types\nGenerics\nAdvance Compiler Configurations\nDecorators\nTypeScript with Angular\nTypeScript with Express\nand many more\nAdditionally\nThe quizzes will help you test your understanding quickly.\nThe coding exercises will make you more confident in writing examples with the real-time concepts you learned.\nIn the active Q&A section, where students answer each other personally, I will be available to answer your queries.\nSource code (in ZIP Format) is attached in almost every lecture, so if you are stuck somewhere & not able to get the desired output, you can quickly download and use it [but I recommend you to give it a try rather than downloading].\nAnd finally, it’s Udemy, where you have a 30-Day Money-Back Guarantee for your satisfaction. So your investment is completely safe.\n\nLet’s begin your typescript journey. See you inside the course.",
      "target_audience": [
        "Adding Typescript in your skillset",
        "Wants to learn advance typescript",
        "Learning advance frameworks in which typescript used like Angular/React/Express and more",
        "Preparing for an Interview as Typescript Developer"
      ]
    },
    {
      "title": "Create a social network using PHP Mysqli HTML Css and JQuery",
      "url": "https://www.udemy.com/course/create-a-social-network-using-php-mysqli-html-css-and-jquery/",
      "bio": "Learn how to make a complete professional social networking website with all features like facebook",
      "objectives": [
        "Build your own website",
        "Start your online career as web developer",
        "Earn online by working for clients and fixing their problems about programming"
      ],
      "course_content": {
        "Introduction of Instructor and Project": [
          "Introduction of Instructor and Project"
        ],
        "Signup/Login for your social network": [
          "Creating Signup for my website",
          "Handling Signup form submission in PHP",
          "Creating Login page for my website"
        ],
        "Saving And Displaying User Profile details": [
          "Adding Navigation bar",
          "Saving or updating User profile details",
          "Handling insert and update of User profile details",
          "Profile Handling"
        ],
        "Creating user timeline or Wall": [
          "Creating User Timeline (Part-1)",
          "Creating User Timeline (Adding Send Friend Request button)",
          "Creating User Timeline (Send Friend Request button)",
          "Creating Notifications functionality (Part-1)",
          "Creating Notifications functionality (Part-2)",
          "Creating Notifications functionality (Accept of Request friend Request)",
          "Displaying User friend List",
          "Posting on User Timeline",
          "Displaying all posts of a User"
        ],
        "Adding Comments on user posts": [
          "Adding Comments on Posts",
          "Displaying Comments for each Post (part-1)",
          "Displaying Comments for each Post (part-2)",
          "Deleting Post or Comment if you are the owner"
        ],
        "Add Messages or Chat System in your website": [
          "Creating Messages or Chat Page for my website (Part-1)",
          "Creating Messages or Chat Page for my website (Part-2)",
          "Creating Messages or Chat Page for my website (Part-3)"
        ],
        "Apply privacy settings": [
          "Adding Privacy Settings for my website (Part-1)",
          "Adding Privacy Settings for my website (Part-2)",
          "Adding Privacy Settings for my website and finishing Up"
        ]
      },
      "requirements": [
        "You should have basic knowledge of PHP and MYSQL",
        "You should have an internet connection",
        "A Text Editor (like notepad++ or Sublime)",
        "Xampp"
      ],
      "description": "Want to learn how to use PHP and MYSQLI in order to create a professional website? Isn’t it a bonus if that website is “SOCIAL NETWORKING WEBSITE”.That is what you are going to learn in this course.\nIf you already know the basics of PHP, MYSQLI, HTML, CSS and JQuery. This course is a gem for you. In this course you will learn how you can combined use all of these languages in the right direction to create a professional working website.\nHow is this social media network perform?\nSocial media is basically for people to share their thoughts, activities and interest to the world. To make that kind of functionality together is called social networking website.\nSocial media network in this course is basic but beautiful. This course is specially designed for people who really want to enhance their programming skills and want to know how you can use all basic languages to build a social network. We will learn all this right from the scratch and program every single line and view the live effect of our website.\nWhat should you know?\nYou should know the basics of PHP & MySQLi before joining this course, because we'll straight start working on the project instead of explaining the basic syntax of PHP. We'll first create the web development environment on our local computer.\nContent and features of this website:\n•             Displaying all members of website\n•             Signup & Login Systems\n•             User Profile Update\n•             User Timeline\n•             User Posts\n•             Notifications\n•             Send or receive friend requests\n•             User comments on each Post\n•             Sending & Receiving Messages\n•             Privacy Settings for User timeline",
      "target_audience": [
        "Anyone who wants to learn use of PHP in real world",
        "Anyone who wants to experience how you can develop a website using PHP and MYSQLI",
        "Anyone who have some basic knowledge of PHP and want to explore",
        "Anyone who want to develop their own professional website"
      ]
    },
    {
      "title": "Mastering RESTful APIs with Python, Flask and Postman",
      "url": "https://www.udemy.com/course/mastering-restful-apis-a-comprehensive-guide/",
      "bio": "From Design to Development: Unlock the Power of RESTful APIs for Seamless Web Integration",
      "objectives": [
        "Learners will grasp the fundamental principles of Representational State Transfer (REST) architecture",
        "Learners will learn best practices for designing RESTful APIs, including resource naming conventions, proper use of HTTP methods (GET, POST, PUT, DELETE)",
        "Learners will acquire practical skills in implementing RESTful APIs using popular frameworks and tools",
        "Learners will understand how to effectively consume RESTful APIs from client applications",
        "Learners will explore different authentication methods (e.g., Basic Auth) and learn how to implement secure authentication and authorization mechanisms"
      ],
      "course_content": {
        "Introduction to REST APIs": [
          "What are APIs?",
          "Importance of APIs in software development",
          "Types of APIs (RESTful, SOAP, GraphQL)"
        ],
        "Fundamentals of REST Architecture": [
          "Definition and history of REST architecture",
          "Advantages of using RESTful APIs"
        ],
        "Building and Testing RESTful APIs": [
          "Introduction to popular frameworks",
          "Resource naming conventions",
          "Common HTTP status codes and their meanings",
          "Hands-on demonstration of building and testing a simple RESTful API",
          "API Functionality in Flask"
        ],
        "Authentication and Security": [
          "Authentication methods (Basic Auth, OAuth, JWT)",
          "Authentication and Security"
        ],
        "Best Practices and Optimization": [
          "Performance optimization techniques (caching, compression)",
          "Caching and Compression in Flask"
        ]
      },
      "requirements": [
        "Basic Programming Skills: Learners should have a fundamental understanding of programming concepts and at least one programming language, such as JavaScript, Python, Java, or similar. They should be comfortable writing and understanding code.",
        "Understanding of Web Development: It would be beneficial for learners to have a basic understanding of web development concepts, including HTML, CSS, and JavaScript. Familiarity with concepts like client-server architecture, HTTP protocols, and web services will help learners grasp the concepts covered in the course more effectively.",
        "Knowledge of Command Line Interface (CLI): Familiarity with using the command line interface (CLI) for tasks such as navigating directories, running scripts, and making HTTP requests using tools like cURL would be advantageous. However, this is not a strict requirement, as relevant CLI commands will be covered as part of the course.",
        "Access to a Computer with Internet Connection: Learners should have access to a computer with a stable internet connection to access course materials, watch lectures, and complete assignments. They will also need access to software development tools and environments for coding exercises and projects.",
        "Motivation and Willingness to Learn: Above all, learners should come with a strong motivation to learn and a willingness to engage actively with the course material. This may involve completing assignments, participating in discussions, and seeking help when needed to fully understand and apply the concepts covered in the course."
      ],
      "description": "Embark on a journey through the intricate web of modern software development with our comprehensive course on mastering RESTful APIs. Are you ready to become a virtuoso in the art of API craftsmanship?\nIn this immersive experience, you'll traverse the realms of Representational State Transfer (REST) architecture, where you'll unravel the secrets behind seamless communication between web applications. From design to deployment, you'll learn to wield the power of RESTful APIs with finesse, enabling you to weave intricate connections and bring your web projects to life.\nJoin us as we delve into the very essence of REST, exploring its core principles and uncovering the building blocks of robust API design. With hands-on exercises and real-world examples, you'll gain mastery over resource naming, HTTP methods, and the art of crafting intuitive API endpoints.\nBut the journey doesn't stop there. Venture deeper into the realms of security and authentication, where you'll learn to safeguard your APIs against the forces of digital malevolence. Discover the secrets of error handling and exception management, ensuring your APIs remain resilient in the face of adversity.\nAs you ascend to greater heights, you'll unlock the mysteries of advanced concepts such as versioning, pagination, and optimization, empowering you to create APIs that transcend the ordinary and redefine the boundaries of possibility.\nWhether you're a seasoned developer seeking to enhance your skill set or a budding enthusiast eager to explore the wonders of web integration, this course is your gateway to mastery. Join us on this exhilarating journey and become a true Web Weaver, shaping the digital landscape one API at a time.\nEnroll now and unleash the power of RESTful APIs!",
      "target_audience": [
        "Software Developers and Programmers: This course is designed for developers and programmers who want to deepen their understanding of RESTful API architecture and learn best practices for designing, building, and consuming APIs. They may have basic knowledge of web development concepts and programming languages like JavaScript, Python, or Java.",
        "Web Application Developers: Web developers who are building or maintaining web applications that interact with RESTful APIs will benefit from this course. They may be interested in learning how to design robust APIs, implement secure authentication mechanisms, and optimize API performance to enhance the functionality and user experience of their web applications."
      ]
    },
    {
      "title": "Beginners Guide to Electron Framework",
      "url": "https://www.udemy.com/course/beginners-guide-to-electron-framework/",
      "bio": "Learn to build desktop apps using Electron framework",
      "objectives": [
        "Learn to build Apps using Electron Framework",
        "Master core concepts of the Electron framework",
        "Build a complete app along with the instructor"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "Introduction To Electron": [
          "Introduction",
          "Overview of Electron",
          "IDE",
          "Hello World - Part 1",
          "Hello World - Part 2",
          "Modularzing Your App",
          "Menus",
          "Utilizing Associated JS Files",
          "Communication Between Components - Part 1",
          "Communication Between Components - Part 2",
          "Distribution",
          "Installing and running Hello World",
          "Updating and Managing Packages",
          "Summary"
        ],
        "Integrating Frameworks": [
          "Introduction",
          "Using Angular with Electron",
          "Building Great Looking UI with Photon",
          "Integrating Bootstrap",
          "Summary"
        ],
        "Real World Apps": [
          "Introduction",
          "WebView",
          "Simple Database Driven App",
          "Simple Database Driven App - Part 2",
          "Simple Database Driven App - Part 3",
          "Advanced Database Driven App - Part 1",
          "Advanced Database Driven App - Part 2",
          "Advanced Database Driven App - Part 3",
          "Advanced Database Driven App - Part 4",
          "Advanced Database Driven App - Part 5",
          "Splitting Responsibilities - Part 1",
          "Splitting Responsibilities - Part 2",
          "Fetching Data From The Internet - Part 1",
          "Fetching Data From The Internet - Part 2",
          "Fetching Data From The Internet - Part 3",
          "Fetching Data From The Internet - Part 4",
          "Summary"
        ],
        "Project": [
          "Introduction",
          "Building A Calculator App - Part 1",
          "Building A Calculator App - Part 2",
          "Building A Calculator App - Part 3",
          "Summary"
        ],
        "Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, CSS and JavaScript is required to complete this course"
      ],
      "description": "Desktop applications have been receiving less love lately because of the smartphone boom, however, there are still a lot of people who love coming back to the Start button (now Home) or Dock, and find the steady comforting applications that are no fuss and forever ready to do their bidding.\nDesktop applications are still popular among desktop users, and the demand for application developers is still increasing. But, building desktop applications is not that easy, rather it is more difficult than building mobile apps. It requires a more thorough integration with the OS of your system. This is why frameworks such as Electron are such a boon!\nIf you want to build a clean, powerful cross-platform native application, without having to learn a bunch of other languages, APIs, processes and technology, then Electron is the perfect framework to have on hand. Electron helps you build apps using JavaScript, HTML and CSS!\nThis epic frameworks removes the hard parts from coding, so that developers can focus more on actually building the app rather than messing around with languages, codes and syntax. And in this course, we will show exactly how to get started with this amazing framework!\nOur Electron course has been designed as a beginner’s course for newbies or any developers who are looking to get started in the lucrative world of building desktop apps. In this tutorial, you will break down exactly how to get stared building apps using the Electron framework.\nYou will go on a journey with the instructor, who will take you step-by-step through the process of downloading, installing, configuring, running and even building real-world apps with Electron!\nThe course will start will a detailed introduction and overview of Electron, and include topics such as understanding the IDE, modularizing your apps, utilizing associated JavaScript files, working with different Electron components, installing and running Hello World, integration with other frameworks (Angular, Photon & Bootstrap), and will end with actually building real world projects such as a Calculator App.\nAll of this and so much more is waiting for you inside this course! So, let’s charge up and start building your very own desktop app!",
      "target_audience": [
        "Anyone who wants to develop apps using Electron framework will find this course very useful"
      ]
    },
    {
      "title": "Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet",
      "url": "https://www.udemy.com/course/building-web-gis-apps-with-c-aspnet-core-mvc-and-leaflet/",
      "bio": "Learn to Build Web GIS Applications with C# and ASP.NET CORE",
      "objectives": [
        "Be able to create a Full-stack web GIS application from scratch",
        "Building Full-stack ASP Dotnet Core MVC Apps",
        "Backend Coding in C#",
        "Be able to use a 3rd party JavaScript charting library",
        "Building a .NET Core REST API",
        "PostgreSQL for .NET and Windows",
        "Entity Framework Core"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup and Installations": [
          "Installing PostgreSQL and PostGIS on Windows",
          "Creating a Spatial Database",
          "Installing OSGeo4w"
        ],
        "Building an ASP.NET Core MVC Application": [
          "Installing the .NET SDK",
          "Installing the Visual Studio Code IDE",
          "Creating an ASP.NET MVC 6 Starter Project",
          "Installing Entity Framework Core Packages"
        ],
        "Writing the Back-End Code": [
          "Creating the Model Class",
          "Creating the Data Context Interface",
          "Creating the Data Context Class",
          "Adding the Connection String",
          "Database Migrations",
          "Creating the Repository Interface",
          "Creating the Repository Implementation Class"
        ],
        "Building the REST API Service": [
          "Downloading the Sample Dataset",
          "Extract Transform and Load Data into our Spatial Table",
          "Creating the REST Controller Class"
        ],
        "Building the Front-End View with Bootstrap and Leaflet.js": [
          "Adding the Front-End Static Files",
          "Creating the Layout Page",
          "Creating the Index Page",
          "Creating our First Leaflet Map",
          "Creating Multiple Basemaps",
          "Displaying Data on the Map",
          "Styling the Map Part 1",
          "Styling the Map Part 2: Interactivity",
          "Creating the Legend",
          "Creating the Bar Chart Legend",
          "Creating the Bar Chart"
        ],
        "Project Source Code": [
          "Source Code"
        ]
      },
      "requirements": [
        "A basic knowledge of C# and JavaScript",
        "A Windows operating system",
        "Some coding experience"
      ],
      "description": "Welcome to the Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet course. We'll be building a Full-stack MVC style Web Application using the .NET Core Framework. The purpose of this course and many more to follow, is to learn to create geospatial analytics and convert it into a functional application.\n\n\nIn our use case we will be working with suburban water consumption data and we will be applying data processing techniques to extract transform and load the data into our spatial database. Once we have processed and cleaned the data, we will use it as a data source for building our .NET Core Web Map Application.\n\n\nWe will be powering our application with a PostgreSQL and PostGIS database. In the Front-End we'll use Bootstrap, JavaScript, Leaflet and Ajax. On the server side we'll be using C#, ASP.NET CORE MVC, combined with use of libraries like Entity Framework Core, Newtonsoft.Json and Npgsql for our data transformation and conversion operations. The operating system that we will be working on is Windows 10 and Server 2016.\n\n\nSome skills that you can expect to derive after completing the course are the following:\nYou will learn how to build a Spatial Database using Postgresql and PostGIS.\nYou will learn how to create charts with Chart.js.\nYou will learn to build Web Maps with Leaflet.js.\nYou will learn how to build REST API Endpoints with C# and LINQ\nYou will learn some C# programming.\nYou will learn some JavaScript programming.\nYou will learn how to build Web Applications using the C# and ASP.NET Core MVC Framework.",
      "target_audience": [
        "Beginner and advanced developers",
        "The curious mind"
      ]
    },
    {
      "title": "Mastering Dialogflow Build Smart Chatbots with Google AI",
      "url": "https://www.udemy.com/course/mastering-dialogflow-build-smart-chatbots-with-google-ai/",
      "bio": "Create Intelligent Conversational Bots Using Google's Natural Language AI – No Coding Required",
      "objectives": [
        "How to create a Dialogflow account and set up your first chatbot",
        "Understanding key Dialogflow concepts: agents, intents, entities, and contexts",
        "Designing and building conversation flows using intents and training phrases",
        "Using entities to extract useful information from user messages",
        "Creating dynamic responses with rich messages and suggestions",
        "Handling user input using contexts for more advanced conversations",
        "ntegrating Dialogflow with popular platforms like Facebook Messenger, WhatsApp, and websites",
        "Connecting Dialogflow with external APIs using webhooks",
        "Testing and improving chatbot performance with built-in tools",
        "est practices for building helpful, natural-sounding chatbots"
      ],
      "course_content": {
        "GETTING START": [
          "WHAT IS DIALOGFLOW",
          "DIALOG BUILDING BLOCKS",
          "AGENTS",
          "INTENTS",
          "ENTITIES",
          "CONTEXT",
          "FULFILLMENTS",
          "DIALOGFLOW INTERFACE"
        ],
        "CREATING INTENTS": [
          "CREATE AN AGENT IN DIALOGFLOW",
          "CREATE INTENTS",
          "IMPORT AND EXPORT AGENTS",
          "CHALLENGE",
          "SOLUTION"
        ],
        "ENTITIES": [
          "CREATE ENTITIES",
          "ADDING PARAMETERS TO INTENTS",
          "TESTING PARAMETERS IN DIALOGFLOW",
          "CHALLENGE",
          "SOLUTION",
          "INTEGRATING CHATBOT WITH GOOGLE ASSISTENT"
        ],
        "CONTEXT": [
          "ADDING FOLLOWUP INTENT",
          "CHALLENGE",
          "SOLUTION"
        ],
        "INTEGRATIONS": [
          "INTEGRATIONS",
          "INTEGRATING ON WEBSITE"
        ]
      },
      "requirements": [
        "No programming or technical experience needed – this course starts from scratch"
      ],
      "description": "Are you interested in building your own chatbot without needing to be a professional coder? Want to create intelligent virtual assistants that can interact with users naturally using Google’s AI? This course is perfect for you!\n\n\nIn this Dialogflow course, you will learn how to create smart and conversational chatbots using Dialogflow – Google’s powerful natural language processing platform. Whether you want to use it for websites, mobile apps, social media, or customer support, Dialogflow makes it easy to build chatbots that understand what users say and respond correctly.\n\n\nWe start with the basics, so no previous experience is required. You’ll learn how to set up a Dialogflow agent, create intents, use entities, and train your chatbot to understand different phrases. Step-by-step, you’ll see how to connect your chatbot to platforms like WhatsApp, Facebook Messenger, or even your website. We will also cover how to use webhooks to make your chatbot even smarter by connecting it to external APIs or databases.\n\n\nBy the end of this course, you’ll have the skills to build a fully functional chatbot that can understand natural language, provide useful answers, and improve customer experience. The course is designed to be practical, hands-on, and easy to follow for everyone.\n\n\nSo, if you're a student, developer, marketer, or business owner who wants to take advantage of the growing trend in AI and automation, this is the right course for you.\n\n\nLet’s start building your smart chatbot today with Dialogflow",
      "target_audience": [
        "Beginners who want to learn how to create chatbots without coding experience",
        "Business owners looking to automate customer support or improve user engagement",
        "Marketing professionals who want to use chatbots to generate leads and interact with customers",
        "Students interested in AI, natural language processing, and conversational design",
        "Developers who want to explore Dialogflow and integrate it with external systems",
        "Freelancers or agencies offering chatbot solutions to clients"
      ]
    },
    {
      "title": "Minimal API for .NET Developers",
      "url": "https://www.udemy.com/course/minimal-api/",
      "bio": "Minimal API | .NET | DotNet | .NET Core | .NET Minimal API",
      "objectives": [
        "Get started with Minimal APIs by understanding what are minimal APIs, it's need, when to use them, etc.",
        "Know the difference and similarity between Minimal APIs and MVC APIs.",
        "Implement collection API using EntityFramework and Dependency Injection.",
        "Improve your Minimal API through Data Transfer Objects (DTO), AutoMapper, and handling exceptions.",
        "Implement individual item endpoints such as GET, PUT, and DELETE.",
        "Download the companion resources and apply the learnings through practice activities."
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome & About This Course",
          "PROJECT OVERVIEW: eCampusConnect Minimal Web API",
          "DOWNLOAD: eCampusConnect Minimal WebAPI Source Code",
          "Join the Official Coding Masters Group",
          "RECOMMENDED: Development Environment"
        ],
        "Getting Started with Minimal APIs": [
          "Introduction",
          "What are Minimal APIs?",
          "Need for Minimal APIs",
          "Minimal APIs vs Controller APIs",
          "STEP 1: Check the Prerequisites",
          "STEP 2: Create a New Web Project",
          "Understanding the Map Method"
        ],
        "Implementing Collection APIs": [
          "Introduction",
          "STEP 3: Add an Endpoint",
          "STEP 4: Add Data Models",
          "STEP 5: Add Database Context Class",
          "STEP 6: Add Dependency Injection",
          "STEP 7: Implement GET Operation to Fetch All Items"
        ],
        "A Closer Look at Return Types": [
          "Introduction",
          "Returning the Results in Minimal API",
          "STEP 8: Update GET Operation to Use Results",
          "Returning the Results Asynchronously",
          "STEP 9: Update GET Operation to Use Async"
        ],
        "Improving your Minimal API": [
          "Introduction",
          "STEP 10: Implement POST Operation to Add a New Item",
          "STEP 11: Add DTO Models",
          "STEP 12: Add AutoMapper to Map Data and Input Models",
          "STEP 13: Use AutoMapper to MapPost Method",
          "Using Attributes in Map Methods",
          "STEP 14: Handle Exceptions"
        ],
        "Implementing Individual Item APIs": [
          "Introduction",
          "STEP 14: Implement GET Operation to Fetch a Single Item",
          "STEP 15: Implement PUT Operation to Update an Existing Item",
          "STEP 16: Implement DELETE Operation to Delete an Existing Item"
        ],
        "Course Conclusion": [
          "Congratulations",
          "Bonus Lecture: Recommended Resources"
        ]
      },
      "requirements": [
        "Basics of designing a RESTful API.",
        "A PC running Windows, macOS, or Linux with Visual Studio Code (or similar IDE that can build C# projects) to carry out hands-on activities and exercises."
      ],
      "description": "Minimal API is a new feature in .NET 6 that helps you develop APIs quickly. ASP.NET Web API is one of the hot topics in the web development space. The usage of Web API has increased exponentially in the development circle. Companies such as Netflix, Spotify, Tesla, and Amazon use APIs to connect front-end and back-end functionality at a large scale. You will be learning to build Minimal API from scratch in this course.\n\n\nInstructor Bio:\nPraveen is an experienced product designer and developer who has worked for 10 years at Honeywell and 7 years at Bosch. He specializes in building products on the .NET stack and cloud platforms. He has a patent and has presented two papers. Additionally, he has published 20+ Courses and 50+ Hands-On Labs on Kubernetes, Docker & Azure, teaching thousands of students on various cloud-native topics.\n\n\nTopics Covered In This Course:\nGet started with Minimal APIs, including what minimal APIs are, their needs, when to use them, etc.\nDifferences and similarities between Minimal APIs and MVC APIs.\nImplement collection API using EntityFramework and Dependency Injection.\nImprove your Minimal API through Data Transfer Objects (DTO), AutoMapper, and handling exceptions.\nImplementing individual item endpoints such as GET, PUT, and DELETE.\nMany downloadable resources and practice activities.\n\n\nAt The End Of This Course:\nYou will know how to create a Minimal Web API using .NET Core.\n\n\nEnroll now to get started.",
      "target_audience": [
        "Developers who work with APIs by either consuming or exposing APIs. You may be working with internal teams or external 3rd party teams.",
        "Software Architects who want to apply the API concepts to scale and enhance distributed computing in your projects."
      ]
    },
    {
      "title": "Learn to Build Web Apps using UnderscoreJS : Code Like a Pro",
      "url": "https://www.udemy.com/course/learn-to-build-web-apps-using-underscorejs-code-like-a-pro/",
      "bio": "Master the App Development using UnderscoreJS",
      "objectives": [
        "Use UnderscoreJs for Web Development",
        "Learn the effective use of Underscore functions",
        "Get to know the functional programming methodology",
        "Build Professional Apps using Underscore JS"
      ],
      "course_content": {
        "Getting Started With Underscore": [
          "Course Intro",
          "Underscore Overview",
          "JavaScript Refresher"
        ],
        "Array Functions": [
          "Chapter Intro",
          "First & Last Functions",
          "Compacting & Comparing Arrays",
          "Uniq & Zip Functions",
          "Range & Index Functions"
        ],
        "Object Functions": [
          "Chapter Intro",
          "Key, Value & Prototype Functions",
          "Extend, Clone & Pick",
          "Conditional & Matching Helpers"
        ],
        "Collection Functions": [
          "Chapter Intro",
          "Each & Map Functions",
          "Reduce & ReduceRight",
          "Collection Query Functions",
          "Indexing"
        ],
        "Functions & Utility": [
          "Chapter Intro",
          "Binding & Delay",
          "Wrapping Functions",
          "Utility Functions",
          "Templating With Underscroe"
        ],
        "Customer Data Project": [
          "Chapter Intro",
          "Bootstrap Layout Setup",
          "Customer Table",
          "Customer Details"
        ],
        "Course Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Student should have basic understanding of programming concepts and JavaScript"
      ],
      "description": "UnderscoreJS is a powerful library for JavaScript developers which provides host of functional programming helpers to ease web development . It is the library which provide utility functions for common programming tasks. It has gained a lot of acceptance among professional web developers and following a great demand from our students we have created a standalone course which helps you learn this amazing tool from the ground up.\nThe course follows a simple and practical approach with concepts followed by coding examples. You will learn the underlying philosophy of UnderscoreJs and will be able to create web apps with underscore along with this course. This course also comes with a complete professional project which will help you assimilate everything you learnt during the course.\nYou will learn the following during the course:\nJavascript - Get a quick refresher course in JavaScript\nArray Functions - Learn about functions such as first and last, Comparing and Compacting functions, Range and Index Functions\nObject Functions - Learn about Key Value functions, Clone, Matching and Pick functions\nCollection Functions - Map and Reduce Functions, Collection and query Functions, Indexing functions\nUtilities - Wrapping functions, Utility and Templating functions\nLearn all this and much more on the other side of this course. So lets get started with your UnderscoreJS training",
      "target_audience": [
        "Students who want the learn the use of UnderscoreJS functions for web development"
      ]
    },
    {
      "title": "ASP.NET - Total Guide",
      "url": "https://www.udemy.com/course/asp-net-guide/",
      "bio": "Build real world webs using ASP.NET - Your Complete guide",
      "objectives": [
        "Introduction to ASP .NET",
        "installing ASP .NET",
        "Dynamic website",
        "Connecting to Database and Presenting",
        "Forms, Separating presentation and logic code files",
        "Web forms",
        "Handling postback",
        "Data binding expression",
        "Variables, Loops and Functions",
        "Creating web controls",
        "Registering user control",
        "Validation control",
        "Controling validation message",
        "Viewstate and sessions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to ASP.NET",
          "Installing ASP.NET",
          "Hello world",
          "Dynamic website",
          "Connecting to Database",
          "Presenting a Database",
          "Forms",
          "Separating presentation and logic code files",
          "Web forms",
          "Handling post back",
          "Data binding expression",
          "Variables",
          "Loops",
          "Functions",
          "Creating web controls",
          "Registering user control",
          "Validation control",
          "Controling validation message",
          "Viewstate",
          "Seession"
        ]
      },
      "requirements": [
        "C# or Visual Basic is just the starting point. you also must know how to handle page layout with HTML. you need to know how to create, manage, and implement interface styling with Cascading Style Sheets (CSS). JavaScript will also be required if you intend to write your own client-side functionality for your Web pages. you might also need to understand Extensible Markup Language (XML), Web services, and database programming. of course, you also need to know how all of these things work together to form a single solution. Checkout our C#, CSS and Many other to learn easily."
      ],
      "description": "The name stands for Active Server Pages Network Enabled Technologies. This is a Beginner to Advanced level course on .NET  that will take you from basics all the way to advance mode. This course is for anyone who is new to ASP.NET or who is familiar with ASP.NET and wants to take the first stab at understanding what is different in ASP.NET. Easiest formula to understand all concepts in .NET\nThere are a number of flavors of ASP.NET, Web Forms (Web Sites and Web Applications), Model-View-Controller (MVC) , Razor Pages and the newest one Blazor. This course is aimed at anyone who wants to create dynamic websites using all these models , with ASP.NET Web Forms as the starting point.\nASP.NET is the Microsoft platform for developing Web Applications. Using ASP.NET you can create e-commerce sites, data driven portals and just about anything else you can find on the internet. Best of all, you don't need to paste together a jumble of HTML and JavaScript code. Instead you can create full scale web apps by leveraging your knowledge of C# coding and a design tool like Visual Studio.\nIn recent years Microsoft has added MVC (Model View Controller) and Razor pages which offer different ways to build dynamic web pages. To some , MVC and Razor pages are cleaner and more suited to the web. To others , it's a whole lot of extra effort with no clear payoff. Either way, it's good to have a strong knowledge of all of these web application programming models before moving onto the most future forward choice .... Blazor.\nWe cover all these models at a beginners level and offer a multitude of practical applications.",
      "target_audience": [
        "Anyone who wants to learn ASP NET",
        "Anyone interested in learning how to Architect Large Scale Projects"
      ]
    },
    {
      "title": "Build a Real Time Chat App with JavaScript and Firebase",
      "url": "https://www.udemy.com/course/build-a-real-time-chat-app-with-javascript-and-firebase/",
      "bio": "Learn to build a real time chat app and chat to friends and family",
      "objectives": [
        "Create directories using the command line tool",
        "Install node js and node package manager (npm)",
        "Install Firebase CLI Tool",
        "Declare variables",
        "Add event listener",
        "Attach an event like click to a button element",
        "Use querySelector method",
        "Create a reference to firebase database",
        "Install firebase CLI",
        "Login to firebase",
        "Initialize firebase",
        "Deploy firebase app"
      ],
      "course_content": {
        "Create a real time chat app": [
          "Introduction",
          "What you will create",
          "What is Firebase",
          "Getting Firebase for free",
          "Setting up development environment",
          "Creating firebase project directory",
          "Creating directories and files",
          "Install node js and npm",
          "Building the app user interface",
          "Styling the app user interface",
          "Creating a reference to the firebase database",
          "Creating Variables to access the DOM elements",
          "Adding Event Listener",
          "Using the Input Text Value Property to return values",
          "Saving data into firebase database",
          "The Firebase CLI",
          "Initializing your project directory",
          "Deploying your app to Firebase",
          "Sending data to firebase database",
          "Create an object and save data using push method",
          "Sending data with the push method to firebase",
          "How firebase stores data",
          "Data updates and events",
          "Data updates and events part 2",
          "Displaying posted chat messages in Realtime",
          "Rolling back if things go wrong",
          "Thank You"
        ]
      },
      "requirements": [
        "Download and install Node js and npm. We'll cover that in the course"
      ],
      "description": "Firebase is database service that is used to provide backend functionality for applications big and small.\nFirebase has three types of plans icluding a free plan that allows you real time data download and upload limits and\nalso storage facilities.  Firebase on the free plan allow 100 simultaneous connections to your application.\nFirebase implementation in your application means you do not need to write any backend server code. It supports both web and mobile app deployments.\nIn this beginner course we will be building a real time chat app  that you can deploy using firebase static hosting and share\nthe link with friends and family and begin to chat provided there are only 100 simultaneous connections. If you are expecting more than 100 simultaneous connections to your app\nyou will have to upgrade to a paid plan.\nWe will be using the frontend tools like HTML ,CSS and JavaScript  to build the app's user interface and functionality and\nuse firebase as the backend database server.\nIn this course we will aslo be installing and using the Firebase CLI tool . This resourceful tool can be used to manage and administer your firebase project.\nThe tool can be used to various task like:\nLogin to firebase\nAuthenticate users\nInitialize firebase project\nDeploy firebase project\nWhat you will learn include:\nHow to connect to firebase from your app\nHow to publish your app to firebase hosting service\nHow to store and work with objects in firebase\nHow to save data to the  firebase database\nHow to hook into real-time object updates with firebase\nHow t use firebase supported authenication providers\nHow to validate data sent to firebase\nHow to secure data from unauthorized access.\nLooking forward to you joining the course.",
      "target_audience": [
        "This course if for newbies who are not familiar with firebase.",
        "Anyone with basic knowledge of HTML",
        "Anyone with basic knowledge of CSS",
        "Anyone with basic knowledge of JAVASCRIPT"
      ]
    },
    {
      "title": "Master ExpressJS to Build Web Apps with NodeJS&JavaScript",
      "url": "https://www.udemy.com/course/expressjs/",
      "bio": "Based on ExpressWorks automated workshop, author Azat Mardan (Pro ExpressJS) walks you through each exercise.",
      "objectives": [
        "Utilize Express and Node to build REST APIs",
        "Use Express to create traditional web app (server-side rendering)",
        "Use Express middleware static",
        "Interpret data on the server from web form",
        "Accept URL parameters on the server",
        "Send back JSON data to clients"
      ],
      "course_content": {
        "Welcome": [
          "Welcome",
          "Express.js System Setup"
        ],
        "Lectures": [
          "Slides (DOWNLOAD)",
          "Express.js Overview and the Core http RESTful API Demo",
          "Express.js Configurations and Middleware",
          "REST Methodology in Express.js",
          "Express.js GET Route",
          "Express.js Request and Response Objects",
          "Express.js Demo RESTful API",
          "Express.js Alternative and ExpressWorks Workshop"
        ],
        "Practicum": [
          "Practicum: ExpressWorks",
          "ExpressWorks",
          "Hello World!",
          "Static",
          "Jade",
          "Good Old Form",
          "Stylish CSS",
          "Param Pam Pam",
          "What's in Query",
          "JSON ME"
        ],
        "BONUS": [
          "Bonus",
          "Express.js 4 Cheatsheet (BONUS)",
          "Building HackHall.com: Large Express.js Project (BONUS)",
          "Closing"
        ]
      },
      "requirements": [
        "Fundamentals of browser JavaScript",
        "Fundamentals of NodeJS"
      ],
      "description": "You might have heard about such rapidly-growing-in-popularity technologies as NodeJS or the M.E.A.N. stack (MongoDB, ExpressJS, AngularJS and NodeJS). The brilliance of NodeJS is its fast performance and the ability to leverage JavaScript on the server. That's right! Developers can use one language for the browser and the server code. Even more so, they can use JavaScript for the database layer with MongoDB. Therefore, the full stack JavaScript becomes a new standard for web development.\nWith NodeJS being a low-level platform, it is not a framework by itself. This leads us to a problem of how we can organize code, parse requests, send back responses, use template engines, implement authentication, validation, and connect to databases among other things without solving those problems by ourselves?\nFor many years, NodeJS developers' choice of web framework is ExpressJS.\nAfter taking this course, you can start mastering ExpressJS by building RESTful APIs for your single-page applications (powered by AngularJS, ReactJS, BackboneJS or any other front-end framework). With ExpressJS, developers can easily organize their code (middleware pattern), add more functionality (npm modules) and configure the server (configuration over convention).\nMoreover, Express is mature and very stable so that it's a default choice for small companies and large enterprises. Even more advanced frameworks, like Sails or Loopback, extend ExpressJS (i.e., they depend on Express). Therefore, learning ExpressJS first is a valuable investment, because you can apply the same skills and existing ExpressJS middleware to more advanced frameworks.\nThis course comes with series of lectures and practicum. The benefits of ExpressWorks course and practicum (ExpressWorks the automated workshop) include:\nGet the basic understanding how Express works\nBuild a few straightforward apps which introduce the core concepts\nBecome confident enough to start building your own REST APIs for SPAs\nBecome proficient enough to develop traditional web apps (server-side rendering)\nSpent time coding, not watching boring videos with hands-on automated workshop\nSee the real code from the real large application built with ExpressJS, MongoDB/Mongoose, and BackboneJS — HackHall.\nThis course is brought to you by Azat Mardan, the author of Practical Node, Pro Express, React Quickly, Full Stack JavaScript, Express API Reference and other JavaScript/Node books.",
      "target_audience": [
        "Web developers",
        "Back-end engineers",
        "Software engineers"
      ]
    },
    {
      "title": "Master Typescript : Learn Typescript from scratch",
      "url": "https://www.udemy.com/course/master-typescript/",
      "bio": "Put your Object Oriented Programming Skills to create cool dynamic JavaScript applications using TypeScript",
      "objectives": [
        "Develop easily manageable large web applications using TypeScript",
        "Understand how to install and use TypeScript with various editors like WebMatrix etc",
        "Understand how to combine multiple files in one and create a production ready version",
        "Understand how to work with jQuery and TypeScript together"
      ],
      "course_content": {
        "Introduction to TypeScript": [
          "What is TypeScript",
          "Why one should learn TypeScript",
          "What this course covers"
        ],
        "Prerequisites & Installation": [
          "Prerequisites & Installation",
          "Using TypeScript Compiler",
          "Editors",
          "Editors Continued...Visual Studio Code",
          "Exploring TypeScript Playground"
        ],
        "Understanding Types in TypeScript": [
          "Introduction to Types",
          "Basic Types",
          "Types introduced by TypeScript",
          "Code Demo"
        ],
        "Understanding Interfaces in TypeScript": [
          "Introduction to Interface",
          "Making the interfaces with Optional Properties",
          "Defining structure for Functions - Function Types",
          "Understanding Array Types",
          "Understanding Class Types",
          "More on Understanding Class Types",
          "Extending Interfaces",
          "Working with Hybrid Interfaces"
        ],
        "Understanding Classes": [
          "Introduction to Classes",
          "Inheritance",
          "Public Private Modifiers",
          "Parameter Properties",
          "Class Accessors",
          "Static Properties"
        ],
        "Understanding Modules": [
          "Introduction",
          "External Modules",
          "Using Aliases",
          "Using Modules with jQuery and RequireJS"
        ],
        "Understanding Functions": [
          "Introduction",
          "Optional & Default Parameters",
          "Rest Parameters",
          "Lamdas & This",
          "Function Overloading"
        ],
        "Understanding Events in TypeScript": [
          "Events in TypeScript"
        ],
        "Generics": [
          "Introduction",
          "Generics Array",
          "Generic Interfaces",
          "Generic Classes",
          "Generic Constraints"
        ],
        "Declaration Merging": [
          "Introduction",
          "Interface Merging",
          "Module merging",
          "Merging Module with Classes",
          "Merging Module with Functions",
          "Merging Modules with Enums",
          "Disallowed Merges"
        ]
      },
      "requirements": [
        "Basic HTML",
        "Basic knowledge of javascript",
        "Basic knowledge of jQUery",
        "Basic CSS"
      ],
      "description": "This course is all about exploring TypeScript and how it makes use of Object Oriented Programming concept to create large web applications in a manageable way.\nThe course is for aspiring web developers as well as professional web developers who want to enhance their skillset. Those who have basic knowledge of server side programming with OOP like C# or JAVA will find it more easy to write TypeScript code which gets compiled to JavaScript\nThe course demonstrates the practicality of TypeScript by creating a Shopping Cart Application\nHere's what you will be learning in detail about TypeScript\n1. Introduction to TypeScript\n2. Prerequisites & Installation\n3. Understanding Interfaces in TypeScript\n4. Understanding Classes\n5. Understanding Modules\n6. Understanding Functions\n7. Generics\n8. Declaration Merging\n9. Type Compatibility\n10. Creating a Shopping Cart using TypeScript and jQuery\nSo let's get started with TypeScript",
      "target_audience": [
        "Aspiring Web Developer",
        "Aspiring Web Designers",
        "Web Developers",
        "Web Designers"
      ]
    },
    {
      "title": "Learn Pro Advanced Modern JavaScript Programming",
      "url": "https://www.udemy.com/course/learn-pro-advanced-modern-javascript-programming-l/",
      "bio": "Learn Modern and Advance Level JavaScript Programming with many Real Time Examples",
      "objectives": [
        "Advanced Level and Weird Concepts in JavaScript",
        "The intuition behind each Advanced Python Concepts",
        "Learning the Concepts with Examples",
        "Modern JavaScript Programming"
      ],
      "course_content": {
        "Installing Node.js and Setting up VS Code": [
          "Introduction"
        ],
        "Asynchronous Programming in JavaScript": [
          "Thread vs Process",
          "Synchronous vs Asynchronous Programming",
          "Synchronous Programming Example",
          "Asynchronous Programming Example",
          "Asynchronous - Callback Example",
          "Asynchronous - Callback - Making an Ice Cream Part - 1",
          "Asynchronous - Callback - Making an Ice Cream Part - 2",
          "Asynchronous - Callback - Making an Ice Cream Part - 3",
          "Asynchronous - Callback Hell",
          "Escaping Callback Hell with Promises - Promise Life Cycle",
          "Asynchronous - Promises - Making an Ice Cream Part - 1",
          "Asynchronous - Promises - Making an Ice Cream Part - 2",
          "Asynchronous - Promises - Making an Ice Cream Part - 3",
          "Asynchronous - Async/Await - Better Way of Writing Promises",
          "Asynchronous - Async/Await - Understanding Await Keyword with an Example",
          "Asynchronous - Async/Await - Making an Ice Cream"
        ],
        "Advanced Working with Functions": [
          "Recursion and Stack - I",
          "Recursion and Stack - II",
          "Rest Parameter and Spread Syntax - I",
          "Rest Parameter and Spread Syntax - II",
          "Variable Scope and Closure - I",
          "Variable Scope and Closure - II",
          "Variable Scope and Closure - III",
          "The Old Var",
          "Decorators and Forwarding - I",
          "Decorators and Forwarding - II",
          "Decorators and Forwarding - III",
          "Decorators and Forwarding - IV"
        ],
        "Language Translator Application in JavaScript": [
          "Language Translator App Part - 1",
          "Language Translator App Part - 2",
          "Language Translator App Part - 3",
          "Language Translator App Part - 4",
          "Language Translator App Part - 5",
          "Language Translator App Part - 6",
          "Language Translator App Part - 7",
          "Language Translator App Part - 8"
        ],
        "Document Object Model in JS": [
          "Introduction to DOM",
          "DOM Tree",
          "Exploring the DOM",
          "Searching in DOM - I",
          "Searching in DOM - II",
          "Node Properties - I",
          "Node Properties - II",
          "Attributes and Properties",
          "Modifying the Document - I",
          "Modifying the Document - II",
          "Styles and Classes - I",
          "Styles and Classes - II"
        ],
        "Music Player Application in JavaScript": [
          "Music Player Application Part - 1",
          "Music Player Application Part - 2",
          "Music Player Application Part - 3",
          "Music Player Application Part - 4",
          "Music Player Application Part - 5",
          "Music Player Application Part - 6",
          "Music Player Application Part - 7",
          "Music Player Application Part - 8",
          "Music Player Application Part - 9"
        ],
        "Introduction to Events": [
          "Introduction to Browser Events",
          "Introduction to Events - II",
          "Bubbling and Capturing",
          "Event Delegation"
        ],
        "UI Events": [
          "UI Events - I",
          "UI Events - II",
          "UI Events - III",
          "UI Events - IV"
        ],
        "Form Controls": [
          "Form Properties and Methods - I",
          "Form Properties and Methods - II",
          "Form Properties and Methods - III",
          "Focusing - I",
          "Focusing - II",
          "Focusing - III",
          "Focusing - IV",
          "Events",
          "Events - II",
          "Submit Method"
        ],
        "Frames and Windows": [
          "Popups and Window Methods - I",
          "Popups and Window Methods - II",
          "Popups and Window Methods - III",
          "Cross Window Communication - I",
          "Cross Window Communication - II",
          "Cross Window Communication - III"
        ]
      },
      "requirements": [
        "Basics of any Programming Language is required"
      ],
      "description": "This course is for all those who has some basic knowledge of any programming language and is now ready to become a professional JavaScript programmer by learning Advanced Level Concepts. We will cover Advance Level Concepts with real life examples so that you know how to implement these concepts while making real time Applications.\n\n\nWe will only be learning the modern JavaScript Programming so that you are well updated in terms of the Industry Requirement. We have given special attention to the intuition part because gaining the fundamental knowledge about the Advance Level Concept in very important. We will keep on adding new concepts with the passage of time and we totally welcome your suggestions in adding new Advance Level Concepts.\n\n\nWe will not only Learn the Advanced Concepts in JavaScript but we will use these concepts to make something real out of it. We will be making Real Professional Level Applications in JavaScript so that you also know how to be making Professional Applications in JavaScript so that you look like a Pro Developer.\n\n\nYou need to move forward from your basic concepts so that you can become a Professional Programmer. We know exactly what type of questions can be asked if you are going to the interview for the job. In JavaScript, the most important topic in terms of getting a Job is Asynchronous Programming and that is why we have covered that concept particularly more in depth as compared to other concepts. You have to learn advance concepts to be a Professional so just take this Course and become a Pro Programmer...\n\n\nLets Get Started...",
      "target_audience": [
        "Anyone interesting in learning Advanced Level and Weird Concepts in JavaScript",
        "Anyone interesting in learning the Concepts with Examples",
        "Anyone interesting in learning the intuition behind each Advanced JavaScript Concepts",
        "Anyone interesting in learning Modern JavaScript Programming"
      ]
    },
    {
      "title": "Wordpress Site Migration",
      "url": "https://www.udemy.com/course/wordpress-site-migration-tutorial/",
      "bio": "A to Z guide for learning the process of migrating wordpress sites.",
      "objectives": [
        "Migrate any Wordpress site from Local Host to Live Server",
        "Migrate any Wordrpress site from one hosting account to other hosting account with same domain",
        "Migrate any Wordpress site from one hosting account to other hosting account with different domain",
        "Migrate any Wordpress site from live server to local host"
      ],
      "course_content": {
        "Chapter 1 - Some Basic Concepts": [
          "01. Introduction",
          "What's in the Course Detailed",
          "02. Pre-Requisites",
          "03. Scope of the Course",
          "04. How Wordpress Works"
        ],
        "Chapter 2. Local Host to Live Server": [
          "01. Preparing Files to Move",
          "02. Extracting Files",
          "03. Exporting Database",
          "04. Creating Database and User",
          "05. Importing Database",
          "06. Editing Wp-Config File",
          "07. Changing URL in Database"
        ],
        "Chapter 3. Live Server to Local Host": [
          "01. Downloading Files and Creating Database at Local Host",
          "02. Exporting Database from PhpMyadmin",
          "03. Exporting Database from Backup Section",
          "04. Importing Database to Local Host",
          "05. Configuring Wp-Config File",
          "06. Changing URLs in Database"
        ],
        "Chapter 4. Main Domain to Sub Domain Migration": [
          "01. Creating Sub Domain",
          "02. Moving Files from Main Domain to Sub Domain",
          "03. Duplicating MySql Database",
          "04. Associating User to Duplicated Database",
          "05. Changing Wp-Config File"
        ],
        "Chapter 5. Migrating to Another Hosting Account with Different Domain": [
          "01. What We are Going to Do",
          "02. Downloading All Files",
          "03. Exporting Database",
          "04. Uploading Files",
          "05. Importing Database",
          "06. Changing Wp-Config File",
          "07. Changing URL in Database"
        ],
        "Chapter 6. Migrating to Another Hosting Account with Same Domain": [
          "01. Understanding the Scenario",
          "02. Accessing Cpanel with IP Address",
          "03. Finalizing Migration"
        ],
        "Chapter 7. Complete Migration Using Plugin": [
          "01. Migration using a Plugin",
          "02. Why Plugin is Not the Best Option"
        ]
      },
      "requirements": [
        "Basic use of wordpress",
        "Basic knowledge of Cpanel"
      ],
      "description": "This courses is for the wordpress site developers who want to learn the process of Wordpress based site migration from one hosting account to others. Wordpress Site Migration course covers all the aspects of site migration including:\nMigration of site from Liver server to Local host\nMigration of wordpress site from Local Host to LIve Server\nMigration of Wordrpess based sites from one hosting account to another using same domain\nMigration of Wordpress Based sites from One hosting account to another hosting using same domain\nMigration from Main Domain to Subdomain\nMigration using Plugin\nThis course contains 34 Videos with a total duration of 1 Hour 24 Minutes. The course is mainly comprised of Videos but it also include the MySql Queries Text file (containing all the queries used during this course).",
      "target_audience": [
        "If you have some experience of using Wordpress and want to learn how to migrate the Wordpress site."
      ]
    },
    {
      "title": "Laravel - Create a user registration with email notification",
      "url": "https://www.udemy.com/course/laravel-account-activation-project/",
      "bio": "Activate users by sending emails and by tokens validation right from the database in Laravel apps",
      "objectives": [
        "At the end of the course students will be able to understand queuing in Laravel",
        "At the end of the course students will be able to understand events in Laravel",
        "At the end of the course students will know how properly send emails with laravel",
        "At the end of the courses students will know how to create an account activation feature for their current of future project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What we are going to be building",
          "Tools",
          "Reference files",
          "Database connection, migrations and models",
          "Relations and fillable setup",
          "Route model binding"
        ],
        "These are the first steps": [
          "Code submission"
        ],
        "Email setup": [
          "Setting up the email feature",
          "Sending and queuing emails",
          "Setting up user notifications",
          "Creating the controllers and routes",
          "Activating users"
        ],
        "handling not active users": [
          "Resend method part 1",
          "Resend method part 2",
          "Refactoring with events",
          "Integrating a new notification system -user registration",
          "Integrating a new notification system - email resending with ajax",
          "Conclusion"
        ]
      },
      "requirements": [
        "Laravel"
      ],
      "description": "Learn how to activate users account via email with your Laravel app.\nOn this course we cover\n\nRoute model binding\nSending email via SMTP\nLearn about email testing t server (how we test our email sending)\nQueuing emails for faster user interaction\nAnd lots more.....\nYou can use the knowledge of this course to create a really awesome user registration that activates and notifies users in Laravel apps.\nLaravel has become one of the best and most popular PHP framework on the planet. For a time it seemed that PHP was boring and and just plain old. Laravel brought back the joy of coding to the PHP community.\nLaravel has many functionalities right out of the box, but it is lacking the account user activation which in my opinion is necessary for applications to have since there is so much SPAM.\nOn this course, we are going straight to the point and build an account activation small app where the user registers, gets an email to activate their account and if they did not get it, they can ask for the code again.\nIf you ready to learn then I'm ready to teach, lets do it\nEdwin Diaz",
      "target_audience": [
        "Any student looking to add account activation in Laravel to their skill set should take this course"
      ]
    },
    {
      "title": "Spring Framework 5 and Spring Boot 2",
      "url": "https://www.udemy.com/course/spring-framework-and-spring-boot/",
      "bio": "Master Spring and Spring Boot with Security",
      "objectives": [
        "Become an Enterprise Spring Developer",
        "Build Apps using Java and Spring Boot",
        "Learn Spring and Spring Boot",
        "Build Web Application using Java Spring"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to Spring",
          "Spring Documentation",
          "Prerequisites",
          "Software Requirement",
          "Spring Tool Suite",
          "Dependency Injection"
        ],
        "Spring Boot": [
          "Creating Spring Starter Project",
          "Dependency Injection in Spring Boot",
          "Spring Boot Autowire"
        ],
        "Spring Core - IoC": [
          "BeanFactory",
          "ApplicationContext",
          "Spring Container",
          "Singleton vs. Prototype",
          "Setter Injection",
          "Ref Attribute",
          "Constructor Injection",
          "Autowire",
          "Primary Bean"
        ],
        "Spring MVC": [
          "Spring MVC Theory",
          "Spring MVC Getting Started",
          "Creating Controller",
          "Tomcat Jasper",
          "Accepting User Input",
          "@RequestParam",
          "@ModelAndView",
          "Prefix and Suffix",
          "Model and ModelMap",
          "Need of ModelAttribute",
          "ModelAttribute",
          "ModelAttribute at Method Level",
          "Spring MVC Project",
          "Spring MVC Part 2",
          "Post Mapping",
          "Get Mapping"
        ],
        "Spring ORM": [
          "Spring ORM Theory",
          "Spring Hibernate Config",
          "MySQL and DAO",
          "DAO Creation",
          "Add and Fetch"
        ],
        "Spring Data JPA": [
          "Spring Data JPA Configuration",
          "JPARepository",
          "JPARepository Add and Fetch",
          "Query DSL",
          "Query Annotation"
        ],
        "Spring REST": [
          "What is REST",
          "Postman Setup",
          "REST Getmapping",
          "Jackson",
          "PathVariable",
          "RestController",
          "PostMapping",
          "Jackson XML",
          "Produces Attribute",
          "RequestBody and Consumes Attribute"
        ],
        "Spring AOP": [
          "Why AOP",
          "AOP Terms",
          "Aspect and Before Annotations",
          "Logger",
          "After Finally",
          "AfterReturning and Throwing"
        ],
        "Spring Security": [
          "What is Spring",
          "Spring Security part 2",
          "Spring Security part 3",
          "Spring Security MySQL",
          "Spring Security BCrypt Password Encoder",
          "Spring Boot Security OAuth 2"
        ]
      },
      "requirements": [
        "Java"
      ],
      "description": "Spring 5 is a functional web framework for back-end development and is quite famous among Java developers when it comes to designing an enterprise-based application.\n\nIt consists of lots of modules and projects, which makes it very huge.\nThe Spring Framework and Spring Boot enable developers to create high-performing, reusable, easily testable, and loose-coupling enterprise Java applications\nIt can be used to develop any Java application.\n\nKnowledge of Spring Framework has a huge demand in the enterprise market, and Spring Framework developers are paid handsomely.\nHaving Spring Framework on your resume will highlight you among other Java developers.\n\nThis course offers hands-on experience building Spring Framework apps using Spring Boot.\nThis course will be interactive and fun, as I will code all the projects from scratch.\nBy taking this course, you will have the latest skills that you need to build real apps using the Spring Framework.\n\nRequirements for this Course:\nBasic Knowledge of HTML, CSS and JS is helpful\nKnowledge of SQL and databases is helpful\nGood knowledge of Core Java, JDBC and Servlets.\nLearn these important topics\nSpring Boot\nSpring Core (IoC)\nSpring MVC\nSpring AOP\nSpring Data JPA\nSpring REST\nSpring Security\n\n\n\nWho this course is for:\n\nThis learning path is for developers who wish to create their own web apps with Spring 5\nThis course is ideal for developers who wish to use the Spring Frameworks for enterprise application development",
      "target_audience": [
        "Java Developer who wants to explore Spring Framework"
      ]
    },
    {
      "title": "JavaScript Career Pack: 10 Real-World Projects From Scratch",
      "url": "https://www.udemy.com/course/complete-javascript-masterclass/",
      "bio": "Learn JavaScript Basic to Advanced: Concepts, Coding Exercises, Quizzes, Assignments along with 10 Projects!",
      "objectives": [
        "Everything you need to become a JavaScript developer with basics to advanced concepts, how things works behind the scenes and real projects",
        "Understand fundamentals: variables, data types, control flow statements, loop, functions and more...",
        "Dive deep with Object-oriented Programming: classes, objects, constructors, inheritance, encapsulation, static keyword, getter & setter etc.",
        "Complex concepts like the 'this' keyword, closures, promises, async-await etc.",
        "Work with API's to make the most of third-party data (such as News/Weather/Sports information)",
        "Build real-world front-end applications with JavaScript (Task manager, budget tracker, kanban, quiz application, bookmark manager & more)",
        "Modern tools for 2023: NPM, Babel, Webpack, Firebase and more.",
        "And lot more!"
      ],
      "course_content": {
        "Introduction & Resources": [
          "Course Introduction",
          "Welcome - Lets Get Started!",
          "Resources [Important]",
          "Resources [Important]"
        ],
        "JavaScript Basics": [
          "JavaScript Basics",
          "Environment Setup / 003",
          "How To Run JavaScript Files? / 005",
          "Browser Console / 006",
          "Variables, Constants & Comments / 007",
          "Naming Convention / 007-1",
          "Data Types / 008",
          "Strings / 009",
          "String Methods / 010",
          "Numbers / 011",
          "Template Literals / 012",
          "Arrays / 013",
          "Null & Undefined / 014",
          "Booleans & Comparisons / 015",
          "Loose vs Strict Comparison / 016",
          "Type Conversion / 017"
        ],
        "Control Flow": [
          "Control Flow / 018",
          "For Loop / 019",
          "For Loop (in & of) / 019-1",
          "While Loop / 020",
          "Do While Loop / 021",
          "If Statements / 022",
          "Else & Else If / 023",
          "Logical Operators / 024",
          "Logical NOT / 025",
          "Break & Continue / 026",
          "Switch Statements / 027",
          "Scope (Global & Local) / 028",
          "Ternary Operator / 028-1"
        ],
        "Functions": [
          "Functions - I / 029",
          "Functions - II / 030",
          "Arguments & Parameters / 031",
          "Returning Values / 032",
          "Arrow Functions / 033",
          "Functions & Methods / 034",
          "forEach Method & Callbacks / 035",
          "forEach Method / 036"
        ],
        "Object Literals": [
          "Object Literals - I",
          "Object Literals - II / 038",
          "Methods / 039",
          "'this' Keyword / 040",
          "Objects in Arrays / 041",
          "Math Object / 042",
          "Primitive vs Reference Types - I / 043",
          "Primitive vs Reference Types - II / 043-2"
        ],
        "Document Object Model": [
          "DOM Introduction / 044",
          "DOM In-depth / 045",
          "Query Selector / 046",
          "Selectors / 047",
          "Controlling Content (Add/Delete) / 048",
          "Attributes (Get/Set) / 049",
          "Changing CSS Styles / 050",
          "Classes (Add/Remove) / 051",
          "Relationships (Parent/Child/Siblings) / 052",
          "Events - I / 053-1",
          "Events - II / 053-2",
          "Creating & Removing Elements / 054",
          "Event Bubbling & Delegation / 055",
          "More DOM Events / 056"
        ],
        "Form & Form Events": [
          "Events Inside Forms / 057",
          "Submit Events / 059",
          "Regular Expressions / 060",
          "Testing RegEx Patterns / 061",
          "Basic Form Validation / 062",
          "Keyboard Events / 063",
          "Events on HTML Page / 065"
        ],
        "Project: Quiz Application": [
          "Project Source Code - Github",
          "Project Demo / 210",
          "Template Structure [Optional] / 211",
          "Template Structure [Optional] / 212",
          "Working With Answer / 213",
          "Score Update / 214",
          "Reload / 215",
          "Final Demo / 216",
          "Project Deployment Using Github & Netlify / 321"
        ],
        "Array Methods": [
          "Filter Method / 071",
          "Map Method / 072",
          "Reduce Method / 073",
          "Find Method / 074",
          "Sort Method / 075",
          "Reverse Method / 075-3",
          "Chaining Methods / 076"
        ],
        "Project: Todo List Manager": [
          "Project Source Code - Github",
          "Project Demo / 221",
          "Template Structure [Optional] / 222",
          "Template Structure [Optional] / 223",
          "Add Task / 224",
          "Delete Task / 225",
          "Update Task Count / 226",
          "Search Task I / 227",
          "Search Task II: Case Sensitive / 228",
          "Project Deployment Using Github & Netlify / 322"
        ]
      },
      "requirements": [
        "Basics of HTML & CSS"
      ],
      "description": "Welcome to JavaScript Masterclass, one single course to start your JavaScript journey as a beginner step-by-step. This course touches on each and every important topic through concept explanation, documentation, and implementation. The entire course is designed for beginners with one goal in mind, to learn concepts and build JavaScript projects.\nThroughout the course, we will explore the most important JavaScript topics step-by-step:\nFundamental Concepts:\nIntroduction\nVariables\nData Types\nLoops & Iteration\nControl Flow\nExpressions & Operators\nFunctions\nMore...\nIntermediate Concepts:\nDOM: Document Object Model\nRegular Expressions\nArray Methods\nDates & Times\nLocal Storage\nObject Oriented Programming\nError Handling & Exceptions\nModules\nAPIs\nAdvanced Concepts:\nEvent Loops\nsetTimeout & setInterval\nCallbacks & Callback Hell\nPromises\nAsync Await\nFetch API\nMiscellaneous:\nBabel\nWebpack\nDatabase: Firebase\nExternal Libraries: Swiper JS\nDeployment: Git, Github & Netlify\n\n\nWhy this course?\nComplete course is focused on the concept learning approach, you learn every concept through a logical and visual learning approach.\nLearn all important concepts in the simplest possible way with examples and real-life projects.\nYou just need basic HTML and CSS knowledge, we will cover everything step-by-step from scratch.\n\nAfter completing this course you will be ready to work as an Intern, Fresher, or Freelancer and you will also be able to implement everything yourself! Most importantly you will be ready to divide deep with future practice and the hard-level questions of JavaScript.\nEnroll now, I will make sure you learn best about JavaScript.",
      "target_audience": [
        "Anyone who wants to learn JavaScript",
        "No previous programming knowledge required"
      ]
    },
    {
      "title": "Mastering Contentful: A Comprehensive Guide for Beginners",
      "url": "https://www.udemy.com/course/contentful-for-frontend-developers/",
      "bio": "Unlocking the power of Contentful CMS for building responsive websites with Next.js and React",
      "objectives": [
        "Unleash the power of Contentful: Learn how to build powerful content-driven apps with ease!",
        "Elevate your frontend skills: Learn how to integrate Contentful to create dynamic and engaging web applications.",
        "Take your content to the next level: Learn how to leverage Contentful's API-first approach to create high-performance apps.",
        "Transform your development process: Learn how Contentful can streamline your workflow and help you build amazing user experiences.."
      ],
      "course_content": {
        "Contentful Ecosystem": [
          "Introduction to Contentful CMS",
          "Introduction to Contentful APIs",
          "Introduction to Contentful CLI Tools",
          "Introduction to Contentful CMS UI"
        ],
        "Presentation and Management APIs": [
          "Explore Contentful Preview/Delivery API",
          "Explore Contentful Management API"
        ],
        "Content Models": [
          "Introduction to Content models",
          "Introduction to Fields in Content models",
          "Introduction to Content model migration"
        ],
        "Hands-on practice": [
          "Creating a Next.JS site with Contentful"
        ],
        "Hands-on practice (Advanced)": [
          "Building a Bilingual Site with Contentful: An Introduction to the Project",
          "Setting Up Contentful for a Bilingual Project: Best Practices and Tips",
          "Saving Data for a Bilingual Site: Best Practices and Strategies",
          "Building a Homepage for a Bilingual Site: Tips and Best Practices",
          "Building Additional Pages for a Bilingual Site: Best Practices and Strategies",
          "Creating Menu and Language Toggle for a Bilingual Site: Best Practices and Tips",
          "Adding Styling to a Bilingual Site with Sass: Best Practices and Techniques"
        ],
        "Additional Features": [
          "Creating a Sandbox environment with Contentful CLI"
        ]
      },
      "requirements": [
        "In this online course, I will teach you how to leverage Contentful's API-first approach to create high-performance apps, without the need for any prior coding experience. You will learn how to integrate Contentful with your frontend development workflow and build powerful content-driven apps with ease. My course is designed to be accessible and easy to follow, with step-by-step instructions and interactive exercises that will guide you through the entire process. You will gain a solid understanding of the core concepts of frontend development and be equipped with the skills you need to build dynamic, responsive, and engaging web applications. Don't miss out on this opportunity to transform your development process and take your content to the next level. Sign up for my course today and start building amazing user experiences!"
      ],
      "description": "The \"Mastering Contentful: A Comprehensive Guide for Beginners\" course is designed to empower frontend developers with the skills and knowledge to effectively use Contentful, a powerful headless content management system (CMS), in their web development projects. Through practical examples and hands-on exercises, this course will provide frontend developers with a comprehensive understanding of Contentful and how it can be integrated with Next.js and React to create dynamic and responsive websites.\nThe course will cover key topics such as setting up a Contentful space, creating content models, and managing content using Contentful's management API. Frontend developers will learn how to fetch and render content from Contentful in their Next.js and React applications, and optimize performance and SEO for their websites.\nThe course will also delve into advanced topics, including content model migrations, customizing the content editing experience with Contentful's UI extensions, and utilizing popular Contentful npm packages for frontend development.\nThroughout the course, frontend developers will gain practical experience through hands-on exercises and real-world examples, enabling them to confidently use Contentful in their frontend development projects. By the end of the course, frontend developers will have a solid understanding of Contentful, Next.js, and React, and be able to create dynamic and responsive websites that are easily managed through Contentful's powerful CMS capabilities.\nWhether you're a seasoned frontend developer looking to expand your skills or a newcomer to Contentful and headless CMS, this course is perfect for you. Join us and unlock the power of Contentful for frontend development!",
      "target_audience": [
        "This course is designed to be accessible and suitable for all age groups. Whether you're a beginner or an experienced developer, this course will provide you with the knowledge and skills you need to build powerful content-driven apps using Contentful."
      ]
    },
    {
      "title": "Laravel 11 with Inertia.js and React | A Practical Guide",
      "url": "https://www.udemy.com/course/laravel-with-inertia-and-react/",
      "bio": "The ultimate guide to build Single Page Applications with Laravel 11, React, and Inertia | Build Practical Projects",
      "objectives": [
        "Learn how to Build Single Page Applications using Laravel 11, Inertia and React",
        "Learn how to Implement Roles and Permissions on an Inertia based App (Without using any external package)",
        "Learn how to Build dependent dropdowns in Laravel and React",
        "Learn how to Build Data-tables using Laravel, Inertia and React",
        "Learn how to Implement Translations in an Inertia based app.",
        "Learn how to implement Infinite Scrolling in Inertia Based Applications",
        "Learn how to Customize Error Pages in Inertia"
      ],
      "course_content": {
        "Learn Inertia.js": [
          "Introduction",
          "Install and Setup Laravel/Inertia.js with React",
          "Overview of the Project",
          "Creating Pages",
          "Title and Meta Tags",
          "Passing Data to Pages",
          "Swapping to API Resources",
          "Form Basics",
          "Submitting Forms",
          "Resetting Forms",
          "Clearing Validation Errors",
          "Accessing Form Processing State",
          "Manual Visits and Partial Reloads",
          "Partial Visits (and more) with Links",
          "Shared Data",
          "Making Use of Ziggy",
          "Hooking into Forms for Flash Messages",
          "Revisiting Shared Data for Better Flash Messages",
          "Shorthand Routes",
          "Remembering Form States",
          "Preserving States",
          "Basic Authorization"
        ],
        "Flexible Flash Notifications in Inertia": [
          "Reusing the Flash Notifications code for multiple pages",
          "Improving the Flash Notifications flow",
          "Fix Flash Notification Issues"
        ],
        "Customizing Error Pages in Inertia": [
          "Customizing the default Error page",
          "Returning an Inertia Response",
          "Handling Multiple Error Types with a Single Component",
          "Define a Config to Show/Hide Custom Error Pages"
        ],
        "Let's Build a Students Management System": [
          "Introduction to Students Management System",
          "Install and Setup Laravel with Inertia and React",
          "Define the Models/Migrations/Factories/Seeders/Relationships",
          "Displaying the Students Data",
          "Let's Implement Pagination",
          "Let's work on the Record Creation Flow",
          "Continue working on Record Create Flow",
          "Implementing Dependent Dropdowns",
          "Display Validation Errors and Finalize Record Creation Flow",
          "Let's Work on Record Update Flow",
          "Deleting Individual Records",
          "Implementing Search Functionality",
          "Fixing Pagination Related Issues",
          "Let's Implement Filter By Class Functionality",
          "Debounce Search Input and Fix remaining Issues"
        ],
        "Implementing Roles and Permissions in Inertia Based Applications": [
          "Introduction to Implementing Roles/Permissions in Inertia based Applications",
          "Database Structure Overview",
          "Define the Models/Migrations/Pivot Tables/Seeders for Roles/Permissions",
          "Displaying and Deleting Roles",
          "Storing Roles",
          "Editing Roles",
          "Implement Permissions Selection on Role Create Page",
          "Implement Permissions Selection on Role Edit Page",
          "Defining the Auth Gates with a Middleware",
          "Implementing Checks on the Backend",
          "Implementing Checks on the Frontend"
        ],
        "Learn how to Implement Infinite Scrolling in Inertia Based Applications": [
          "Introduction to Implementing Infinite Scrolling in Inertia Based Applications",
          "Install and Configure a new Laravel Project",
          "Setup Model/Migration/Factory/Seeder",
          "Displaying the Posts Data",
          "Let's Implement useIntersectionOnserver",
          "Let's Start Implementing Infinite Scrolling Behaviour",
          "Use Axios instead of Inertia's router",
          "Finalizing the Infinite Scrolling Feature",
          "Fix Remaining Issues"
        ],
        "Learn how to Implement Translations in Laravel and Inertia": [
          "Introduction to Implementing Translations in Laravel and Inertia",
          "Install and Setup a Fresh Laravel Project",
          "Storing available languages with an Enum",
          "Sharing available languages globally",
          "Building the Language Selector",
          "Storing the chosen Language in a Session",
          "Setting the locale through a Middleware",
          "Sharing all translations with Inertia",
          "Building a Translation helper in Javascript",
          "Caching Translations"
        ],
        "What's New In Inertia v2": [
          "Upgrade Inertia",
          "Polling",
          "Deferred Props",
          "Merging Props",
          "History Encryption API",
          "Partial Reloads are now Async",
          "Prefetching"
        ]
      },
      "requirements": [
        "Beginner Level knowledge of PHP/Laravel is required",
        "Beginner Level knowledge of React is required"
      ],
      "description": "In this course, we will be Learning Inertia.js (A tool to build single-page apps, without creating any APIs)  along with React.js in a practical way by building multiple practical projects along the way.\n\n\nInertia serves as the solution, seamlessly connecting Laravel as a backend with a frontend Framework (React/Vue/Svelte), enabling us to build everything in one application (a monolith) while achieving the same outcome. The best part? We don't have to create an API.\n\n\nProjects Roadmap and Status:\n[Uploaded] Learn Inertia\n[Uploaded] Flexible Flash Notifications with Inertia\n[Uploaded] Customizing Error Pages in Inertia\n[Uploaded] Building a Simple Student's Management System\n[Uploaded] Implementing Roles/Permissions in Inertia-Based Applications.\n[Uploaded] Infinite Scrolling with Inertia\n[Uploaded] Translations with Laravel and Inertia\n\n\nProject Description:\n\n\n[Uploaded] Learn Inertia\nIn this section, we'll look into the basics of Inertia and some of the fundamental features of Inertia.js.\nSome of the topics we'll cover in this section include:\n\n\nLearn how to set up Laravel with Inertia and React Stack.\nLearn how to Format the data with API Resources.\nLearn about how to work with forms, and display validation errors\nLearn how to preserve the scroll behavior, and preserve the state of the page\nLearn how to implement Manual Visits and Partial Reloads in Inertia.\nLearn how to Implement Authorization checks (on both frontend and backend)\nLearn how to Customize the default Error pages and render Custom Inertia Pages (403, 404, 419 pages)\nLearn how to display Flash Notifications in Inertia/React\nLearn how to Set up page titles and meta tags.\n\n\n[Uploaded] Flexible Flash Notifications with Inertia\n\n\nIn this Section, we'll learn how to build a flexible flash notifications feature in Inertia.\nBy the end of the section, we'll have the ability to flash any type of notification, anywhere in our application, without repeating any code.\n\n\n[Uploaded] Customizing Error Pages in Inertia\nLearn how to Customize the default error pages in Inertia.\nWe'll learn the following in this Section:\nLearn how to customize the default error pages in Laravel\nLearn how to return an Inertia Response whenever any error is encountered in our app.\nLearn how to render different types of errors by re-using the same React component.\nLearn how to define a config to enable/disable the rendering of custom error pages\n\n\n[Uploaded] Building a Simple Student's Management System\nIn this section, we'll build a simple CRUD app and dive into the fundamentals of building CRUD applications with Laravel, Inertia, and the React Stack, and we will learn the following topics along the way:\n\n\nLearn how to Build dependent dropdowns in Inertia/React\nLearn how to work with Factories and Seeders in Laravel, and seed the necessary data for all of our Models\nLearn how to use a Re-usable React Component to display validation messages.\nLearn how to Implement Server Side Pagination from scratch.\nLearn how to Implement Search Functionality in an Inertia/React Data-table.\nLearn how to Implement filters in an Inertia/React Data-table.\n\n\n[Uploaded] Implementing Roles/Permissions in Inertia-Based Applications.\nWe'll continue from where we left off in the previous section and implement the Roles and Permissions functionality without using any external plugins.\nSome of the features that we'll cover in this section are listed below:\n\n\nImplement Roles CRUD.\nImplement Authorization/Gate Checks throughout the project (on both frontend and backend)\n\n\n[Uploaded] Translations with Laravel and Inertia\nLocalization is a breeze in Laravel applications, but what happens when you need to bring this to the client side? Turns out in Inertia, it's pretty simple.\nIn this section, we'll build a language switcher, share translations with the client, and build a simple translation helper to use directly in React components. We'll also cover caching translations to keep things running smoothly.\n\n[Uploaded] Infinite Scrolling with Inertia\nIn this section, we'll seed our database with a bunch of data and start building the solution, we'll start by using Inertia's router to load additional data, and later we'll optimize the infinite scrolling flow by replacing the Router with Axios.",
      "target_audience": [
        "Students who want to Build Monolith(SPA) Applications using Laravel, InertiaJS and React"
      ]
    },
    {
      "title": "Building FullStack E-Commerce App using SpringBoot & Angular",
      "url": "https://www.udemy.com/course/building-fullstack-ecommerce-app-using-springboot-angular/",
      "bio": "Master the Art of Crafting E-Commerce App with Cutting-Edge Technologies, Spotlighting SpringBoot 3.2.0 and Java21",
      "objectives": [
        "Developers aspiring to excel in FullStack with SpringBoot and Angular.",
        "Web developers eager to build robust with SpringBoot and Angular.",
        "Students looking to kickstart their careers with hands-on experience in FullStack development.",
        "Experienced coders transitioning to FullStack, specializing with SpringBoot and Angular",
        "Entrepreneurs seeking to understand the tech behind e-commerce apps built with SpringBoot and Angular.",
        "Entrepreneurs seeking to understand the tech behind e-commerce apps built with SpringBoot and Angular.",
        "Tech enthusiasts exploring the world of FullStack using SpringBoot and Angular.",
        "Managers and Project leaders aiming to gain insights into FullStack e-commerce app development with SpringBoot and Angular.",
        "IT professionals wanting to expand their skill set with SpringBoot and Angular for e-commerce projects.",
        "Innovators excited to create cutting-edge e-commerce solutions with SpringBoot and Angular.",
        "Anyone with a passion for tech, ready to dive into FullStack using SpringBoot and Angular."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Solution Overview",
          "Github Strategy",
          "Demo"
        ],
        "Spring Intializer": [
          "Introduction",
          "Spring Intialiazer",
          "Setting up the Project in IDE",
          "Creating Folder structure",
          "Setting up Application",
          "Seed data setup using Docker and Mysql",
          "Validating data in MySql Db",
          "Creating Brand JPA Entity",
          "Creating Type JPA Entity",
          "Creating Product JPA Entity",
          "Setting up the relationships between entities",
          "Setting Project Structure for Java 21 Project"
        ],
        "Implementing Repositories": [
          "Introduction",
          "Creating Repositories",
          "Creating Models",
          "Adding Required Services",
          "Implementing Brand Service",
          "Implementing Type Service",
          "Implementing Product Service - 1st Part",
          "Implementing Product Service - 2nd Part",
          "Implementing Product controller - 1st Part",
          "Implementing Product controller - 2nd Part",
          "Demo of working APIs",
          "Multiple Choice Questions"
        ],
        "Implementing Pagination, Sorting, Searching, Filtering etc": [
          "Introduction",
          "Implementing Pagination",
          "Creating Custom Resolver",
          "Fixing Custom Pagination resolver",
          "Implementing Search method",
          "Implementing Search functionality in Product Controller",
          "Implementing Get Products with Search functionality",
          "Fixing Search functionality with Get Products",
          "Implementing Sorting",
          "Multiple Choice Questions"
        ],
        "Angular Implementation": [
          "Introduction",
          "Angular Installation",
          "Creating an Angular Application",
          "Understanding Folder structure",
          "Running Angular App",
          "Installing ngx-bootstrap component",
          "Installing Font awesome",
          "Creating Navbar",
          "Adding logo and required images",
          "Improving App Component page",
          "Implementing Http Client Module",
          "Fixing Cors Issue",
          "Fixing data iteration issue",
          "Using Models"
        ],
        "Building User Experience": [
          "Introduction",
          "Creating Core and Shared Modules",
          "Creating Store Module",
          "Creating Store Service",
          "Wiring up store component with service",
          "Fetching Brands and Types",
          "Designing the Store Page",
          "Setting Brand and Type Active class",
          "Modifying search criteria in Product Controller",
          "Modifying Service and Repository for filtering changes",
          "Implementing the filtering criteria at the Client side",
          "Fixing the UI and API Issues",
          "Creating the Product Item Component",
          "Wiring up Sorting Functionality",
          "Implementing Sorting Functionality",
          "Implementing Search and Reset Functionality",
          "Multiple Choice Questions"
        ],
        "Building User Experience - Part 2": [
          "Introduction",
          "Implementing NGX-Bootstrap Pagination",
          "Wiring up Pagination Functionality",
          "Refactoring Code - Part 1",
          "Refactoring Code - Part 2",
          "Creating Pagination Header",
          "Creating Pagination Header as a Shared Component",
          "Creating Pagination as a Shared Component"
        ],
        "Creating Routes": [
          "Introduction",
          "Creating Home and Product Detail Module",
          "Route creation",
          "Creating Route Links",
          "Implementing the Route Activation",
          "Creating Product Detail Page - Part 1",
          "Creating Product Detail Page - 2nd Part",
          "Implementing Store as Lazy Loaded Module",
          "Designing Home Page",
          "Multiple Choice Questions"
        ],
        "Implementing Cross Cutting Concerns": [
          "Introduction",
          "Creating Error Components",
          "Creating Error Interceptor",
          "Registering Error Interceptor",
          "Creating Custom Exception Handler",
          "Installing NGX-Toastr",
          "Wiring up Toast Notifications"
        ],
        "Creating Header Section": [
          "Introduction",
          "Creating Section Header",
          "Installing XNG-Breadcrumb Package",
          "Setting the Metadata for Breadcrumb",
          "Setting the Breadcrumb Name",
          "Making Breadcrumb Title Dynamic",
          "Installing BootsWatch Theme",
          "Creating Loading Interceptor",
          "Wiring up Spinner with Application",
          "Fixing the Spinner Issue"
        ]
      },
      "requirements": [
        "Basic Java, SpringBoot & Angular Skills"
      ],
      "description": "Welcome to \"Building FullStack ECommerce App using SpringBoot & Angular\" – an immersive learning experience meticulously crafted for developers eager to master the art of full-stack e-commerce application development with SpringBoot and Angular.\nEmbark on a transformative journey where you'll harness the powerful synergy of SpringBoot's robust back-end capabilities and Angular's dynamic front-end framework. Over the course of 16+ hours, you'll transition from grasping core concepts to applying industry-standard design patterns.\n\n\nYour comprehensive curriculum includes:\n- Mastery of SpringBoot essentials and advanced features\n- Efficient data access with Spring Data JPA\n- Secure user authentication and authorization with Spring Security\n- Creating RESTful APIs with Spring Boot for seamless data communication\n- Angular best practices, including routing, lazy loading, and reactive forms\n- Styling with Bootstrap and Font Awesome for a polished user experience\n\n\nWhether you're an intern, junior developer, senior developer, tech lead, architect, or senior architect, this course offers a tailored path to elevate your expertise. You'll engage in hands-on projects, reinforce your learning with quizzes, and stay updated with yearly content refreshes.\nDive into 15 comprehensive sections, spanning over 185+ videos, all geared towards a pragmatic and thorough understanding of full-stack e-commerce development. Plus, enjoy lifetime access to all course materials and future updates.\n\n\nWho Should Enroll?\n- Interns: Build a solid foundation for a tech career by applying academic knowledge to real-world projects.\n- Junior Developers: Upgrade your skill set with advanced full-stack e-commerce development practices.\n- Senior Developers: Lead the way in e-commerce application development.\n- Tech Leads: Direct cutting-edge projects with confidence, leveraging SpringBoot and Angular.\n- Architects: Incorporate insights into your design strategies for innovative, scalable e-commerce solutions.\n- Senior Architects: Pioneer the integration of robust architecture, leading high-impact projects with expertise.\n\n\nCourse Stats: What You'll Get\n- Fast-Track Your Learning: Dive into a meticulously crafted course designed for maximum engagement and superior learning outcomes.\n- 15 Engaging Sections: Traverse the depths of full-stack e-commerce development, from fundamentals to advanced design patterns and beyond.\n- 185+ In-Depth Videos: Each video is a stepping stone, providing clear explanations, step-by-step instructions, and real-world applications.\n- 16+ Hours of Content: Immerse yourself in a comprehensive curriculum that fits your schedule, accessible anytime, anywhere.\n- Multiple Choice Questions: Solidify your knowledge with carefully designed quizzes that reinforce and test your learning.\n- Yearly Updates: Stay in sync with the latest trends and best practices in SpringBoot and Angular as technology evolves.\n- Lifetime Access: Your one-time enrollment grants you unrestricted access to all current and future course content—forever.\n\n\nThis isn't just another course—it's your gateway to pioneering e-commerce applications that are as smart and efficient as they are scalable. The future of e-commerce development begins with your decision to join us. Let's embark on this journey together!",
      "target_audience": [
        "Developers: Master FullStack development with SpringBoot and Angular to build dynamic web applications",
        "Web Developers: Expand your expertise by integrating SpringBoot and Angular for modern web development.",
        "Students and Graduates: Kickstart your career with hands-on FullStack skills in SpringBoot and Angular.",
        "Experienced Coders: Transition to FullStack specialization with SpringBoot and Angular.",
        "Tech Entrepreneurs: Understand the tech behind e-commerce with SpringBoot and Angular for informed business decisions.",
        "Tech Enthusiasts: Explore FullStack magic using SpringBoot and Angular for personal or professional projects.",
        "Managers and Project Leads: Gain insights into SpringBoot and Angular to oversee development teams effectively.",
        "IT Professionals: Expand your skill set with SpringBoot and Angular for competitive advantage.",
        "Innovators: Create cutting-edge web apps with SpringBoot and Angular to bring your ideas to life.",
        "Curious Learners: Explore SpringBoot and Angular to satisfy your curiosity and personal growth."
      ]
    },
    {
      "title": "AJAX API JSON Connect to JSON data using AJAX webpage",
      "url": "https://www.udemy.com/course/ajax-api-json/",
      "bio": "JavaScript for beginners JavaScript Objects and JSON data for web pages AJAX request for JSON data to use in JavaScript",
      "objectives": [
        "How to use JavaScript Objects",
        "How to use JSON data",
        "Explore JavaScript"
      ],
      "course_content": {
        "Introduction to AJAX and JSON data use for web applications": [
          "API JSON Introduction",
          "Introduction to JSON",
          "JavaScript Objects",
          "Source Code",
          "JavaScript Arrays",
          "Source Code",
          "Output Contents",
          "Source Code",
          "JSON Stringify JSON Parse",
          "Source Code",
          "Updates",
          "Validate lint JSON",
          "Sample JSON source",
          "JavaScript Fetch AJAX request",
          "Source Code",
          "Fetch Web APIs AJAX from web pages",
          "Source Code GitHub",
          "JavaScript Arrow Function format",
          "Source Code",
          "Fetch Options GET",
          "SOURCE CODE",
          "CORS with request debugging",
          "Source Code",
          "More Open APIs Practice",
          "Source Code",
          "Fun with APIs Tools and More",
          "source code",
          "API Next Page Load all pages",
          "Source Code",
          "Post method send data",
          "Source Code",
          "Practice API endpoints",
          "Source Code",
          "More API endpoints AJAX request Exercise and JSON data",
          "Source Code",
          "API JSON conclusion"
        ],
        "Code Examples Source code Question Responses with JavaScript Code examples": [
          "Async Promises and Callback",
          "JavaScript Closure",
          "Additional Learning Resources and Guides"
        ]
      },
      "requirements": [
        "JavaScript",
        "Programming and coding knowledge",
        "HTML and some programming experience"
      ],
      "description": "Explore how you can connect to various endpoints on the web and get JSON data to use on your website.\nJSON data and JavaScript Objects\n\n\nJavaScript Object Notation (JSON) is an open-standard file format or data interchange format that uses human-readable text to transmit data objects consisting of attribute–value pairs and array data types. It is a very common data format, with a diverse range of applications.\nJSON is a language-independent data format. It was derived from JavaScript, but many modern programming languages include code to generate and parse JSON-format data. The official Internet media type for JSON is application/json. JSON filenames use the extension .json.\nAJAX (\"Asynchronous JavaScript + XML\") is a set of web development techniques using many web technologies on the client side to create asynchronous web applications. With Ajax, web applications can send and retrieve data from a server asynchronously (in the background) without interfering with the display and behavior of the existing page. By decoupling the data interchange layer from the presentation layer, Ajax allows web pages and, by extension, web applications, to change content dynamically without the need to reload the entire page.\nIn practice, modern implementations commonly utilize JSON instead of XML.\nCourse Covers\nJavaScript Objects and how they are used in code to retrieve values and store groups of related data sets\nJavaScript Arrays - a data structure commonly used in JSON to contain Objects\nJSON vs JavaSCript Objects\nIterate Array Contents\nJSON parse and Stringify\nTools online to help connect to endpoints and debug AJAX requests\nUse of JavaScript Fetch to return content\nGET and POST methods to web endpoints\nVarious examples of open web APIs\nSource Code is included.\nJavaScript Object\nAn object is a collection of related data and/or functionality.\nFunctions can be contained in JavaScript objects they are referred to as methods within the object.\nJavaScript objects names don’t need quotes, can be single, double or none.\nValues can be Strings, Numbers, Booleans, Arrays, Objects\nCreate an object setting a variable name and assigning the {} to the variable.\nObject names can hold values of other objects and arrays\nCan go multiple levels deep, as many as needed.\nDot notation : The object name (person) acts as the namespace, then a dot, then the item you want to access.\nBracket notation : Similar format to arrays, instead of using an index number to select an item you are using the name associated with each member's value.\nJavaScript Array\nAn Array can hold multiple values\nArrays cannot use strings as element indexes but must use integers.\nArrays are zero based, first index value is always 0;\nArray values can be strings, numbers, booleans, arrays or objects.\nThe design of objects and arrays is to hold lots of content. You can loop through the content in a number of ways using JavaScript.\nYou can loop through the data in the array using a number of methods in JavaScript. Arrays need the index to find the value associated with it. If objects are contained within you should structure them the same way so it is easier to check the values contained.\nObjects have length so using a for loop is possible. There is also Object.entries which can get the key and the value from the object.\nKeep data structured the same so that you can easily determine where the values are located.\nThe JSON.stringify() method converts a JavaScript object or value to a JSON string\nThe JSON.parse() method parses a JSON string, constructing the JavaScript value or object described by the string\nThe JSON object contains methods for parsing JavaScript Object Notation (JSON) and converting values to JSON.\nObjects and Arrays: Property names must be double-quoted strings; trailing commas are forbidden.\nNumbers: Leading zeros are prohibited; a decimal point must be followed by at least one digit. NaN and Infinity are unsupported.\nPlease note that the scope of this course using JavaScript and JSON data outputting via JavaScript.  If you are looking for a more detailed JavaScript course this course is not for you.  Simple course with limited scope designed to be topic specific.\nTaught by an instructor with over 20 years of Web Development experience.\nIf you've been looking to get started with AJAX and JSON-  THIS COURSE IS FOR YOU!!!!\nNothing to lose - Fast friendly support is always available to help if you need it.\nPlease note that the SCOPE OF THIS COURSE IS Creating a simple API and JSON and will not cover complex commands and everything about JavaScript, HOW TO GET STARTED COURSE - if you are looking at more detailed node or JavaScript content this is not for you.",
      "target_audience": [
        "Web designers",
        "Web Developers",
        "Anyone who is building a website",
        "Webmasters and web coders creating web content"
      ]
    },
    {
      "title": "Backend Web Development - Python, Django,Databases, Git, API",
      "url": "https://www.udemy.com/course/backend-web-development-python-djangodatabases-git-api/",
      "bio": "Become a backend developer using :Python, Django, Database Integration, Cloud Deployment , API,Git & Github",
      "objectives": [
        "Python Fundamentals",
        "Python Operators",
        "Python Data Structures",
        "Python Functions",
        "Python Control Flow Statements",
        "Python Object Oriented Programming - OOP",
        "Python Modules and Packages",
        "Working with Images in Python",
        "Python Error Handling",
        "Build an Image Upload Web App",
        "Build a TodoList Web App",
        "Building an API",
        "Publish Web App to internet"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Backend Web Development",
          "Http Overview (Text Version)",
          "What is http",
          "How the internet works"
        ],
        "Python Installation": [
          "What is Python",
          "Installing Python on Windows",
          "Installing Python on Macs",
          "Installing Python on Linux (Ubuntu)"
        ],
        "PyCharm Installation & Configuration": [
          "Install PyCharm on Windows",
          "Change Pycharm theme",
          "Pycharm Configuration on Windows : Part 1",
          "Pycharm Configuration on Windows : Part 2",
          "Install Pycharm on Macs",
          "Pycharm Configuration on Macs"
        ],
        "Text Editors": [
          "What are Text Editors",
          "Please Read",
          "Installing Atom",
          "Installing Visual Studio Code"
        ],
        "Python Fundamentals": [
          "Interacting with Python: Part 1",
          "Interacting with Python: Part 2",
          "Python Expressions",
          "Python Statements",
          "Python Code Indentation",
          "Python Variables",
          "Creating Variables",
          "Capturing user inputs"
        ],
        "Python Operators": [
          "Python Arithmetic Operators",
          "Python Assignment Operators",
          "Python Comparison Operators",
          "Python Logical Operators"
        ],
        "Python Data Types": [
          "Number Data Types",
          "String Data Type",
          "Boolean Data Types",
          "Casting Data Types"
        ],
        "Python Data Structures": [
          "What are data structures",
          "What are Python List",
          "Creating a Python List",
          "Accessing elements in a List",
          "Python List Methods: Part 1",
          "Python List Methods: Part 2",
          "Nested List and For Loop",
          "Python Tuple: Part 1",
          "Python Tuple: Part 2",
          "Python SET",
          "Python SET Methods",
          "Python Dictionary",
          "Python Dictionary Methods",
          "Creating a directory for Python files"
        ],
        "Python Functions": [
          "What are Python Functions",
          "Python Return Keyword Value",
          "Using default parameter",
          "Using keyword arguments",
          "Functions returning other functions",
          "Assigning functions to variables",
          "Global and local variable scopes",
          "Nesting functions",
          "Nesting functions accessing variable scopes",
          "Function Pass keyword",
          "Passing functions as arguments",
          "Using VarArgs Parameter",
          "Anonymous Functions",
          "Python DocStrings",
          "Python Decorators",
          "Python Function Vs Python Methods"
        ],
        "Python Control Flow Statements": [
          "Introduction to control flow",
          "if statements",
          "ELSE Statements",
          "ELif statements",
          "While Loops",
          "For Loops",
          "Nested For Loops",
          "Break statement",
          "Continue statement"
        ]
      },
      "requirements": [
        "No backend programming experience required."
      ],
      "description": "What is a Back-End Developer? .The back- end of a website consists of a server, an application, and a database. A back-end developer builds and maintains the technology that powers those components which, together, enable the user-facing side of the website to even exist in the first place\nBack end development refers to the server side of an application and everything that communicates between the database and the browser. .\nBackend web developers are responsible for designing, building, and maintaining a scalable “behind-the-scenes” infrastructure to support the user interfaces and user experiences built by frontend developers. This skill set is one of the most sought-after by major tech employers.\n\n\nWhat is Python?\nPython is a popular programming language.\nIt is used for:\nweb development (server-side),\nsoftware development,\nmathematics,\nsystem scripting.\nWhat can Python do?\nPython can be used on a server to create web applications.\nPython can be used alongside software to create workflows.\nPython can connect to database systems. It can also read and modify files.\nPython can be used to handle big data and perform complex mathematics.\nPython can be used for rapid prototyping, or for production-ready software development.\nWhy Python?\nPython works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc).\nPython has a simple syntax similar to the English language.\nPython has syntax that allows developers to write programs with fewer lines than some other programming languages.\nPython runs on an interpreter system, meaning that code can be executed as soon as it is written. This means that prototyping can be very quick.\nPython can be treated in a procedural way, an object-oriented way or a functional way.\nDjango is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.\nRidiculously fast: Django was designed to help developers take applications from concept to completion as quickly as possible.\nReassuringly secure: Django takes security seriously and helps developers avoid many common security mistakes.\nExceedingly scalable: Some of the busiest sites on the web leverage Django’s ability to quickly and flexibly scale.",
      "target_audience": [
        "Beginners to backend web development"
      ]
    },
    {
      "title": "Star Rating Project AJAX with JSON response from PHP MySQL",
      "url": "https://www.udemy.com/course/star-rating-project-ajax-with-json-response-from-php-mysql/",
      "bio": "Get dynamic data response using JQuery and AJAX to return PHP server content",
      "objectives": [
        "create a project from scratch",
        "use AJAX to get MySQL data",
        "Use JQUERY to receive JSON data",
        "PHP and JQUERY working together",
        "create an image rating project"
      ],
      "course_content": {},
      "requirements": [
        "basic html and css",
        "desire to learn"
      ],
      "description": "Learn how to make a image rating application from scratch!\nEverything is included, source files, resources and top links to get you creating your own projects quickly. Syntax use is explained step by step learning.\nMultiple technologies are used in this course together to demonstrate how projects can be built. HTML and CSS to create the base of the application. How to add Jquery and setup AJAX calls. Setup PHP files to respond back to the AJAX call sending JSON data back to the front end.\nFull project from start to finish, use the source code to create your own version of this useful application. One of the best ways to learn is to see code in action, see what it does fully explained. MySQL database connection with front-end Jquery.\nThere are so many great things that can be accomplished when combining front and backend code. Real world projects like this are useful and can also be incorporated and expanded to multiple other purposes.\nThis course is designed to teach you how to create applications, better learn and understand AJAX and JSON.\nHTML\nCSS\nMySQL\nJQUERY\nJavaScript\nPHP\nJSON\nMost popular tech online is demonstrated in this course.",
      "target_audience": [
        "anyone who wants to learn how to use multiple languages together",
        "anyone who wants to learn to use AJAX in a real project",
        "web developers",
        "application developers"
      ]
    },
    {
      "title": "NodeJS Microservices: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/node-microservices/",
      "bio": "Break a NodeJS Monolith into Microservices with Apache Kafka and Event-Driven Architecture",
      "objectives": [
        "Event Driven Architecture with Apache Kafka",
        "Multiple Database Connections",
        "Internal Http Requests",
        "Run Docker with multiple networks",
        "Import Data from multiple databases",
        "Use Kubernetes",
        "Deploy to Google Cloud Platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Monolith": [
          "Setup",
          "Stripe Keys",
          "Exploring the Code",
          "Monolith vs Microservices"
        ],
        "Email Microservices": [
          "Email Diagram",
          "Setup",
          "Kafka Setup",
          "Confluent Cloud CLI",
          "Consuming Kafka Messages",
          "Producing Kafka Messages",
          "Sending Emails"
        ],
        "Users Microservice": [
          "Users Diagram",
          "Setup",
          "Importing Data",
          "Http Requests",
          "Login",
          "Requests with Headers",
          "Storing Tokens",
          "Profile",
          "Refactoring Users Service",
          "Ambassadors",
          "Removing User Entity",
          "External Networks",
          "Scopes"
        ],
        "Admin Microservice": [
          "Admin Diagram",
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Configuring Kafka",
          "Consuming Messages",
          "Dynamic Methods"
        ],
        "Ambassador Microservice": [
          "Ambassador and Checkout Diagram",
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Configuring Kafka",
          "Consuming Kafka Messages",
          "Consumer Service",
          "Handling Erros"
        ],
        "Checkout Microservice": [
          "Setup",
          "Moving Controllers",
          "Configuring Kafka",
          "Producing to Multiple Topics",
          "Testing the Frontend"
        ],
        "Kubernetes & Deployment": [
          "Kubernetes",
          "Pods",
          "Environment Variables",
          "Kompose",
          "Secrets",
          "Kubernetes Engine",
          "Cloud Shell",
          "Cloud SDK",
          "Container Registry",
          "Cloud SQL",
          "Authorized Networks",
          "Users Kubernetes Files",
          "Users Deployment",
          "Private IP",
          "Ingress",
          "Admin Setup",
          "Admin Kubernetes Files",
          "Admin Deployment",
          "Ambassador Setup",
          "Ambassador Kubernetes Files",
          "Ambassador Deployment",
          "Checkout Setup",
          "Checkout Kubernetes Files",
          "Checkout Deployment",
          "Testing the Frontend"
        ]
      },
      "requirements": [
        "Good understanding of Javascript"
      ],
      "description": "Welcome to NodeJS and Kafka: Breaking a Monolith to Microservices Course - the course that will take your Javascript development skills to the next level.\nHow this course works\nThis course will start with a pre-built monolith, the building of the starting app won't be covered in this course. So in this course, you will start immediately with Microservices Architecture, this course is intended for people that have a solid understanding of Javascript and want to learn in a short amount of time more advanced concepts. I am very clear and precise in my way of teaching so this course won't have unnecessary explanations on my part, I will explain what is needed when it is needed.\nIf you are interested in learning how the Monolith is created you can check my other courses:\nAngular Material & NodeJS: A Rapid Guide - Advanced\nReact, Next.js and NodeJS: A Rapid Guide - Advanced\nVue 3, Nuxt.js and NodeJS: A Rapid Guide - Advanced\nIn those courses, you will learn how to build a SPA with your favorite frontend framework.\n\n\nWhat you will learn in this course\nIn this course, you will start with a pre-built monolith and you will learn:\nWhat is the Microservices Architecture\nHow to Configure Kafka with NodeJS\nInternal Http Requests\nHow to make a Microservice only for Authentication Purposes\nRun Docker with multiple networks\nProduce Kafka Events to multiple topics\nCreate Custom Middlewares & Services\nImport Data from multiple databases\n\n\nAbout Me\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Javascript developers curious about the Microservices Architecture"
      ]
    },
    {
      "title": "Projects in Foundation Framework - Learn By Building 10 Apps",
      "url": "https://www.udemy.com/course/foundation-framework-course/",
      "bio": "Learn to build responsive websites while building 10 professional projects",
      "objectives": [
        "Master Foundation Concepts",
        "Use Foundation to build responsive UI",
        "Migrate current projects to Foundation",
        "Build websites using Foundation and SASS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Business Website": [
          "Project Intro",
          "File Structure & Navbar",
          "Showcase & Grid System",
          "Adding the Main CSS",
          "Inner Page Markup & CSS",
          "Chapter 1 Quiz"
        ],
        "Photographer Image Gallery": [
          "Project Intro",
          "Homepage With Orbit Slider",
          "About & Gallery Pages",
          "Contact Modal",
          "Chapter 2 Quiz"
        ],
        "Project Management UI": [
          "Project Intro",
          "Dev Environment Setup",
          "Login Page",
          "Icon Menu & Projects Page",
          "Icon Menu & Projects Page - Final Implementation",
          "Inner Page UI",
          "Add Project Form",
          "Chapter 3 Quiz"
        ],
        "Mobile Application": [
          "Project Intro",
          "Foundation Apps Setup & Title Bar",
          "Adding & Listing Todos",
          "Display Message & Deleting Todos",
          "Chapter 4 Quiz"
        ],
        "Hosting Template": [
          "Project Intro",
          "Setup & Navigation",
          "Homepage HTML and Showcase CSS",
          "Homepage HTML and Showcase CSS - Final Implementation",
          "CSS & Inner Pages",
          "Chapter 5 Quiz"
        ],
        "Fitness Website": [
          "Project Intro",
          "Files and Home HTML Markup",
          "Files and Home HTML Markup - Final Implementation",
          "Customized Slider & CSS",
          "Website Inner Pages",
          "Chapter 6 Quiz"
        ],
        "Ecommerce Theme": [
          "Project Intro",
          "Homepage Markup",
          "Homepage Markup - Final Implementation",
          "CSS Styling",
          "Product Pages",
          "Inner Pages",
          "Chapter 7 Quiz"
        ],
        "Foundation Wordpress Theme": [
          "Project Intro",
          "Installing Xampp & Wordpress",
          "Theme Header & Footer",
          "Menu & Main Body",
          "Sidebar Widget Support",
          "Chapter 8 Quiz"
        ],
        "Restaurant Website": [
          "Project Intro",
          "Homepage HTML",
          "Homepage HTML - Final Implementation",
          "Website CSS",
          "Slick Slider",
          "Inner Pages & Lightbox2",
          "Chapter 9 Quiz"
        ]
      },
      "requirements": [
        "You should know basic HTML and CSS to complete the course"
      ],
      "description": "The world's most advance course on Foundation is here. Learn responsive web development with Foundaton by building ten amazing websites. It has everything you need to master professional programming techniques in foundation. It is a through, elegant and practical course designed for everyone who wants to learn the Foundation framework.\nThe course starts with quick review of the Zurb Foundation Framework the open source tool chain for creating responsive websites. The following are the projects covered in the course\nBusiness Website\nA detail discussion on navbar and Grid system\nPhotographer Image Gallery\nLearn the use of orbit slider, gallery pages and contact modal\nProject Management UI\nAdvance foundation concepts, form design and environment setup\nMobile Application\nIntroduction to mobile app development concepts and foundation APIS.\nHosting Template\nLearn advance CSS design and HTML markup with foundation\nFitness website\nLearn Professional app development practices using Foundation\nEcommerce Theme\nBuild a real world app that you can monetize\nFoundation WordPress Theme\nLearn to combine Wordpress and Foundation in this awesome project\nRestaurant Website\nLearn to use slick Slider and lightbox\nTech News Website\nFinal project covering Mixture, tempates and includes\nLearn to build all these cool projects while building a sound understanding of the underlying concepts. So enroll and lets get started",
      "target_audience": [
        "Students who want to learn responsive web development will love this course"
      ]
    },
    {
      "title": "The Ultimate Authentication Course with Django and React",
      "url": "https://www.udemy.com/course/react-django-authentication/",
      "bio": "Authenticate with Access & Refresh Tokens, 2FA, Social Authentication with Google etc.",
      "objectives": [
        "Use Django Rest Framework",
        "Connect Django with MySQL",
        "Use Access & Refresh Tokens",
        "Use HttpOnly Cookies",
        "Send Emails",
        "Login using 2 Factor Authentication (2FA) with Google Authenticator",
        "Social Authentication using your Google Account",
        "Use React Hooks",
        "Use Redux Toolkit",
        "Create QRCodes"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Big Picture"
        ],
        "Django login with Access & Refresh Tokens": [
          "Setup",
          "Database",
          "Models",
          "Views",
          "Serializers",
          "Serializer Methods",
          "Login",
          "Jwt",
          "Cors",
          "Authenticated User",
          "Middlewares",
          "Refreshing the Token",
          "Logout",
          "Revoking Tokens",
          "Forgot Password",
          "Sending Emails",
          "Reset Password",
          "Exception Handler"
        ],
        "React login with Access & Refresh Tokens": [
          "Setup",
          "Components",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Redux Toolkit",
          "Using Redux",
          "Forgot Password",
          "Reset Password"
        ],
        "Two Factor Authentication": [
          "Two Factor Authentication",
          "Sending the Authenticator Code",
          "Expanding the Login Form",
          "Authenticator Form",
          "Displaying the QR Code"
        ],
        "Google Authentication": [
          "Django Google Authentication",
          "React Google Authentication"
        ]
      },
      "requirements": [
        "Javascript Knowledge",
        "Python Knowledge"
      ],
      "description": "Welcome to this course where you will learn everything you need to know to secure your React and Django app.\nIn Django you will learn:\nUse Django Rest Framework\nConnect Django with MySQL\nUse Access & Refresh Tokens\nUse HttpOnly Cookies\nSend Emails\nLogin using 2 Factor Authentication (2FA) with Google Authenticator\nSocial Authentication using your Google Account\nIn React you will learn:\nUse Typescript\nUse React Hooks\nUse Redux Toolikt\nCreate QRCodes\nSocial Authentication using your Google Account\nIf these are what you are looking for then this course is for you.\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Python Developers",
        "Javascript Developers"
      ]
    },
    {
      "title": "Build Full-Stack Apps with GraphQL, Prisma, Node and React",
      "url": "https://www.udemy.com/course/build-full-stack-apps-with-graphql/",
      "bio": "Learn GraphQL by building full-stack web applications with Prisma, NodeJs, Apollo Client v2, and React.Js",
      "objectives": [
        "Build highly scalable GraphQL APIS",
        "Build frontend apps with React and Apollo client",
        "Build and deploy full-stack web application from scratch"
      ],
      "course_content": {
        "Big Picture of Prisma": [
          "What is Prisma",
          "Why Prisma",
          "What Prisma is not",
          "Who should use Prisma",
          "What platform and Cloud Providers Prisma work",
          "What are the benefits of GraphQL",
          "Prisma generates GraphQL API for your datamodel",
          "Connect your resolvers to Prisma API",
          "What is Prisma Query Engine",
          "What is DataModeling in Prisma",
          "What databases are supported by Prisma",
          "What is Prisma Cloud",
          "VS Code Setup",
          "Setting up Prisma"
        ],
        "Build GraphQL server with Prisma": [
          "What is DataModel?",
          "Update Prisma Data Model",
          "Setup GraphQL server with Prisma",
          "Setup env variables for Primisa endpoint"
        ],
        "CRUD in Prisma": [
          "Create Data Model in Prisma",
          "Fetch Records from Database",
          "Create, Update and Delete Record in Prisma"
        ],
        "Create Frontend CRUD App with React and Apollo Client": [
          "Create React Application",
          "Create Apollo client in React Application",
          "Connect Apollo Client to React",
          "Fetch Data using Apollo Query Component",
          "Understanding render Prop pattern in React",
          "Creating Forms in React",
          "Send GraphQL Mutation from React Component",
          "Updating Apollo Cache After Mutation",
          "Adding Routing with React Router",
          "Render List items to Bootstrap card component",
          "Query for Single Record",
          "Edit Record using update Mutation",
          "Mutation for Delete Record in React Apollo"
        ],
        "Authentication in Prisma and GraphQL": [
          "Restructure the resolver functions into separate folder",
          "Understanding JSON Web token Authentication",
          "Signup User in Prisma and GraphQL",
          "Login User in Prisma and GraphQL",
          "Apply Authentication on Resolvers"
        ],
        "Authentication in React Apollo Client Application": [
          "Send Login Request from Frontend App",
          "Save Token to LocalStorage after LoggedIn",
          "Implement Logout User",
          "Require Authentication on Edit and Delete",
          "Implement Signup User on Frontend",
          "Protect Routes in React using React Router",
          "Add Authorization header to every request in React Apollo Client"
        ],
        "Error Handling": [
          "Create Error Message Component to render Errors",
          "Adding Spinner for Loading Data"
        ],
        "Pagination in Prisma and React Apollo Application": [
          "Paginate List fo records of Prisma",
          "Count all Records using Prisma Connection Query",
          "Create Pagination Controls in Frontend Application",
          "Implement Pagination in React Application",
          "Filtering Records in Prisma",
          "Create Search Course Component",
          "Execute Search Query and display courses",
          "Apply Sorting on the Records",
          "Update Cache after creating records",
          "Fix Cache after Delete Records"
        ],
        "Optimistic UI In React Apollo Application": [
          "Improve UI Performance using Optimistic UI in React Apollo"
        ],
        "Deploy Prisma and React Application to Heroku": [
          "Deploy Prisma Project to Heroku",
          "Deploy React Project to Heroku"
        ]
      },
      "requirements": [
        "Javascript Basics are required",
        "NodeJs basics are required"
      ],
      "description": "What Is GraphQL?\nGraphQL is a query language for your APIs. It’s also a runtime for fulfilling queries with your data.\nWho is this course for?\nThis course is for most programmers. If you write software that fetches data from a server, or you write server code that provides data to others, this course is for you. It’s particularly relevant to frontend and backend web and mobile developers.\nThis course will be especially poignant to these groups of people:\nBackend devs who work on REST APIs and write a lot of similar data-fetching code, or who maintain view-specific endpoints.\nFrontend devs of medium- or large-sized apps who either: A) don’t use a caching library, and manually keep track of what data has already been fetched from the server, or B) use a cache, and write a lot of code to fetch data over REST and put it in the cache.\n\n\nWhat are the drawbacks of REST?\nWhen GraphQL was first released, some touted it as a replacement to REST. “REST is dead!” early adopters cried, and then encouraged us all to throw a shovel in the trunk and drive our unsuspecting REST APIs out to the woods. This was great for getting clicks on blogs and starting conversations at conferences, but painting GraphQL as a REST killer is an oversimplification. A more nuanced take is that as the web has evolved, REST has shown signs of strain under certain conditions. GraphQL was built to ease the strain.”\nWhat will you learn?\nIntroduction to Prisma :  Prisma is a performant open-source GraphQL ORM-like* layer doing the heavy lifting in your GraphQL server.\nBuild GraphQL Server with Prisma: Introduces you how to build highly scalable GraphQL server with Prisma\nCURD In Prisma: You will learn to implement create, read, update and delete the record\nCreate a Frontend CRUD App with React and Apollo Client : You will learn how to create, read, update and delete the record in React Application using Apollo Client\nAuthentication in Prisma and GraphQL: In this module, I will teach you how to implement Json web token authentication in GraphQL and Prisma\nAuthentication in React Apollo Client Application: We will implement Authentication on React Application.\nError Handling: I will teach you how to implement error handling in React and Prisma\nPagination in Prisma and React Apollo Application: This module covers the pagination feature on GraphQL and React application\nOptimistic UI In React Apollo Application: Introduces you how to improve the performance of React application\nDeploy Prisma and React Application to Heroku: You will learn how to deploy Prisma and React Application to Heroku\nSubscriptions in Prisma and React Apollo Application: Understand the real-time subscriptions by building chat application\nState Management in React Application using Apollo Link:  A modern way to manage state in Apollo client application\nFile Upload in Prisma and React: Learn how to upload a file in Prisma, GraphQL and React application",
      "target_audience": [
        "Javascript developers who want to build full-stack apps with GraphQL and React",
        "Developers who want to learn Prisma and React Apollo Client",
        "Developers who want to GraphQL in production"
      ]
    },
    {
      "title": "Next.js React NextAuth Serverless API FullStack Development",
      "url": "https://www.udemy.com/course/nextjs-nextauth-next-api-react/",
      "bio": "[With PDF Booklet] Learn to Build Next Generation Full Stack React Web Apps with Next.js 13, NextAuth and Serverless API",
      "objectives": [
        "Master NextJs 13: Acquire a deep understanding of NextJs 13 and its revolutionary features, including server-side rendering and dynamic routing.",
        "Implement Secure Authentication: Learn to integrate NextAuth and create a seamless, secure, and multi-provider authentication system for web applications.",
        "Build Powerful Serverless APIs: Harness the power of Serverless architecture to create scalable and cost-effective APIs that enhance web app performance.",
        "Develop Dynamic Blog Features: Discover how to create and manage blogs with features like pagination, search functionality, and interactive elements."
      ],
      "course_content": {
        "Getting Started with NextJS 3": [
          "Download PDF Booklet - Next.js 13, NextAuth & Serverless API",
          "Download Source Code",
          "Project Setup",
          "Using Bootstrap Material CSS",
          "Navigation Component"
        ],
        "Next.js API and MongoDB": [
          "Next.js API Route",
          "Mongo Atlas Connection String",
          "Managing ENV Variables",
          "Connect to MongoDB"
        ],
        "User Login and Registration": [
          "User Model",
          "Register API",
          "Register Page",
          "Post Request Using Fetch",
          "Login Page"
        ],
        "Authentication with NextAuth": [
          "Authentication Using NextAuth",
          "Provide User Session",
          "Access Logged In User Status"
        ],
        "Protecting Pages": [
          "User Dashboard",
          "Protecting Pages",
          "Redirect Back to Intended Page"
        ],
        "Login with Google": [
          "Login with Google",
          "Save Social Login User in Database"
        ],
        "Role Based Access": [
          "Adding User Role to Token and Session",
          "Display User Role",
          "Admin Layout",
          "Role Based Page Protection for Admin"
        ],
        "Creating Blogs with Rich Text Editor and Image Upload": [
          "Blog Model",
          "Signup to Cloudinary",
          "React Quill Rich Text Editor",
          "Blog Create Form with Rich Text Editor",
          "Upload Image to Cloudinary",
          "Blog Create Post Request",
          "Blog Create API",
          "Saving Blog"
        ],
        "Blogs with Pagination": [
          "Paginated Blogs List",
          "Search Params in Next.js App Router",
          "Fetch Blogs on Home Page",
          "Pagination Links",
          "Pagination Previous and Next Links"
        ],
        "Displaying Blogs": [
          "Blog List and Blog Card Component",
          "Display Blog Image",
          "Display Blog Meta Content",
          "Single Blog API",
          "Fetch Single Blog Using Route Params",
          "Single Blog View",
          "Loading Page (Default)"
        ]
      },
      "requirements": [
        "Solid foundation in web development fundamentals, including proficiency in HTML, CSS, JavaScript and React",
        "Prior experience in building web applications and understanding the client-server architecture will also be beneficial."
      ],
      "description": "Learn to build Modern React Apps with NextJs 13 App Directory, NextAuth & NextAPI Routes (includes Downloadable PDF booklet)\nAre you ready to take your full-stack React development skills to the next level with the latest cutting-edge tools and best practices? Welcome to \"Full Stack React with Next.js 13, NextAuth & Serverless API\" – the ultimate course designed to empower you with the knowledge and expertise required to build next-generation web applications with unrivaled efficiency and performance.\n\nGetting Started with Next.js\nLay the foundation for your Next.js journey as we introduce you to the world of Next.js. Learn the core concepts, set up your development environment, and get ready to build powerful web apps.\nNext.js API and MongoDB\nDive into the backend magic of Next.js as we explore the integration of Next.js API with MongoDB. Discover how to handle data, perform CRUD operations, and create a robust backend for your applications.\nUser Login and Registration\nSecurity is vital for any app! Explore user authentication and registration mechanisms and implement them effectively to create a seamless login experience for your users.\nAuthentication with NextAuth\nTake your app security to the next level with NextAuth! Learn to integrate NextAuth 15 into your project and enable secure, multi-provider authentication options for your users.\nProtecting Pages\nSafeguard your app's sensitive pages with user authentication. We'll show you how to protect specific pages, ensuring only authorized users can access them.\nLogin with Google\nUnleash the power of Google authentication and enable users to log in with their Google accounts. Learn how to integrate Google login seamlessly into your Next.js app.\nRole Based Access\nTailor user access permissions with role-based authentication. Understand how to grant different levels of access based on user roles, creating a personalized and secure experience.\nCreating Blogs\nStep into the world of content creation by implementing a blog feature in your app. Learn how to add, edit, and manage blogs effortlessly.\nBlogs with Pagination\nImprove the user experience by implementing pagination for your blogs. Make it easy for users to navigate through your blog posts with smooth and efficient pagination.\nDisplaying Blogs\nMake your blogs shine with stunning display options. Master the art of showcasing your blogs beautifully to captivate your audience.\nBlogs Like and Unlike\nEngage your users with interactive blog features. Implement like and unlike functionality for blogs and add a touch of interactivity to your app.\nBlogs Update and Delete by Admin\nEmpower admins to manage the content with ease. Learn how to enable blog update and deletion functionalities for admin users.\nBlogs Search with React Context\nEnhance user convenience with blog search functionality. Discover how to implement a powerful blog search feature using React Context.\nDeployment\nLearn the deployment process and make your Next.js app accessible to the world. Deploy full stack Next.js app to vercel along with API routes.\nIn this dynamic and comprehensive learning journey, we will dive headfirst into Next.js 13, the revolutionary framework that supercharges your React applications with blazing-fast server-side rendering, optimal performance, and seamless dynamic routing. You'll be equipped with the tools and techniques to create web apps that score almost 100 out of 100 in Google Page Speed testing tool, ensuring a superlative user experience that keeps visitors engaged and delighted.\nBut that's not all – we'll take your apps to the next level with NextAuth, empowering you to implement secure and frictionless user authentication. No more sluggish login processes or worries about data breaches; you'll learn how to create a streamlined and trustworthy experience for your users.\nGet ready to embrace the future of backend architecture with Serverless APIs. By harnessing the power of Serverless technology, you'll build web apps that scale effortlessly, optimize resource utilization, and keep operational costs in check. Your apps will soar to new heights, delivering unrivaled performance to users worldwide.\nSay goodbye to the outdated \"pages\" directory and embrace the new \"app\" directory, the recommended and forward-looking approach to organizing your code in Next.js projects. Experience enhanced code organization, greater maintainability, and more productive development workflows.\nTo top it all off, I'll guide you through seamless deployment using Vercel, the ultimate platform for hosting and deploying Next.js applications. Witness the magic of one-click deployment, enabling you to take your creations live with ease.\nThroughout this transformative journey, our team of expert instructors will be your trusted mentors, providing personalized guidance and sharing practical insights to ensure your success.\nBy the end of this course, you will be equipped with the knowledge and skills to craft lightning-fast, cutting-edge web applications using Next.js 13, NextAuth, Serverless API, and the new \"app\" directory. Whether you're a seasoned developer seeking to elevate your expertise or a budding enthusiast aiming to make your mark, this course is your gateway to building web apps that shine in the digital realm.\nDon't miss out on this opportunity to excel in full-stack React development! Enroll now and embark on an exhilarating adventure towards a future filled with high-performance web applications and endless possibilities.",
      "target_audience": [
        "Intermediate Web Developers: If you already have experience with HTML, CSS, JavaScript, and React basics, this course will take your skills to new heights. Learn advanced techniques and implement secure authentication and backend systems with ease.",
        "React Enthusiasts: If you have a solid grasp of React fundamentals and want to explore the NextJs ecosystem, this course offers an exciting opportunity. Discover the power of server-side rendering and dynamic routing with NextJs 13.",
        "Backend Developers Exploring Frontend: If you come from a backend development background and want to venture into frontend technologies, this course provides a smooth transition. Learn to build powerful web apps with React and NextJs.",
        "Web Development Career Seekers: If you're aspiring to launch a career in web development, this course is a stepping stone to acquiring the latest skills demanded by the industry. Enhance your portfolio with real-world projects and cutting-edge technologies.",
        "Passionate Learners: If you're enthusiastic about web development and have a strong drive to learn, regardless of your current expertise level, you are welcome! We offer comprehensive explanations and hands-on practice to support your learning journey."
      ]
    },
    {
      "title": "React JS For Beginner Convert Any HTML Site To React JS",
      "url": "https://www.udemy.com/course/react-for-beginner-convert-html-to-react/",
      "bio": "This Course Will Help You To Build Strong Foundation of React JS And You Will Be Able, Convert Any HTML Site To React JS",
      "objectives": [
        "Complete React JS fundamental",
        "Convert Html Site to React",
        "Different Components",
        "Two Way Data Binding",
        "Form Validation",
        "Upload Project on cPanel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Excise File for Download"
        ],
        "JavaScript Fundamental That You Should Know First": [
          "React JS Fundamental Introduction",
          "What You Should Know",
          "Let, Const Var in Javascript",
          "Arrow Function of JS",
          "This Keyword of Javascript",
          "Classes, Object in JS"
        ],
        "React JS Fundamental": [
          "Project Setup",
          "Project Structure and First Code",
          "Babel ,Webpack",
          "Components",
          "Functional Components",
          "Class Components",
          "JSX",
          "Props",
          "State",
          "Event Handler with Methods",
          "State Manipulating",
          "React DOM",
          "UseState Hook",
          "Two Way Data Binding, on Change",
          "Stylesheet & Inline Style in Component",
          "Single Input",
          "OnChange",
          "Another Way Onchange",
          "OnSubmit",
          "Multiple Input",
          "Set Data to State in One Line",
          "Form Validation",
          "Error Showing",
          "Textarea",
          "Select Option",
          "Lists",
          "JSON Array List",
          "Use Bootstrap",
          "React Bootstrap",
          "Routing",
          "React Router DOM",
          "Router Link Load Component",
          "HTTP Request",
          "Axios,Lifecycle Methods",
          "Fetch Data From API",
          "Link Load Component",
          "Form Component",
          "Http Post Data",
          "ActiveLink",
          "React Hooks",
          "UseState , Class Component to Functional Componen",
          "Functional Component to Class Component"
        ],
        "Covert HTML TO React JS": [
          "Template Project Setup",
          "React Router"
        ],
        "Setup Home Component": [
          "Home Component"
        ],
        "Setup About Component": [
          "About Component"
        ],
        "Setup Services Component": [
          "Services Component"
        ],
        "Setup Portfolio Component": [
          "Portfolio Component"
        ],
        "Setup Contact Component": [
          "Contact Component"
        ],
        "Setup Blog and Blog Details Page Component": [
          "Blog Component",
          "Blog Details Components"
        ]
      },
      "requirements": [
        "Strong Knowledge of HTML, CSS",
        "Some Knowledge About JS. ES6 is Optional."
      ],
      "description": "This React JS Course is Best for The Beginners.\nReact has rapidly become one of the most powerful tools for building Web Applications. Top sites using React include Facebook, Twitter, Netflix, Airbnb, and more!\nThis course is perfect for Beginner who wants to start their career in Rect JS and want to be a React Js Front end Developer This course will help you to build a strong foundation of React Js.\nAnd you will learn how to convert HTML site to React Js. After the end of this course, you will be able to convert any HTML site to React Js. And also with this skill, you can earn some cash from your client to covert there existing Html site to One single page Application. It means the total site will be a load for just one time.\nWhat is the Best Part of this Course?\nYou will learn React Js Basic Fundamentals\nSome Essential JavaScript.\nConvert Html to React Js.\nUpload Total Project in Live webserver.\nAnd More..\n\n\nThis course you will not just learn you actually doing it. Learn and apply this on a live project with me.\nSound Great right?\n---------------------------------------------------------------------------------------------------------------------\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you on the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Web Developers",
        "Front-End Developers"
      ]
    },
    {
      "title": "Practical CSS Grid: Learn Grid Layout in under 2 hours!",
      "url": "https://www.udemy.com/course/practical-css-grid/",
      "bio": "Learn CSS Grid via practical examples using design patterns you know with new and game-changing tweaks",
      "objectives": [
        "Learn what you need to put CSS Grid Layout into production in 2 hours",
        "Learn Revolutionary new tweaks to design patterns you know",
        "Take home practical examples of CSS Grid in production",
        "New design patterns for interesting layouts on the Web"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "CSS Grid Definitions",
          "Code for the Exercises"
        ],
        "Exercises": [
          "Exercise 1: Building a Simple Grid",
          "Exercise 2: Fluidly Responsive Grid with no Breakpoints",
          "Exercise 3: An Asymmetric Grid",
          "Exercise 4: Art Directed Banners",
          "Exercise 5: Big Responsive Changes",
          "Bonus Exercise: Asymmetric Promotional Area",
          "Bonus Exercise: Creating a \"breakout\" section of an article body"
        ],
        "Use Grid Today!": [
          "Closing",
          "Resources to Continue Learning"
        ]
      },
      "requirements": [
        "Assumes basic levels of CSS knowledge",
        "Assumes basic levels of HTML knowledge"
      ],
      "description": "You've heard about CSS Grid layout. You know it's the new hotness in the web design world, but you haven't started using it yet. Many tutorials out there focus on the new properties themselves and don't give practical examples. Let me walk you through all its features in a simple, practical approach. By the end of this course, you'll understand Grid and have practical examples to put into production right away!",
      "target_audience": [
        "Designers and Developers looking to learn modern CSS",
        "People who have heard about CSS Grid but were intimidated",
        "People wanting to do new interesting layouts on the Web"
      ]
    },
    {
      "title": "Laravel Jetstream B2B Project Setup",
      "url": "https://www.udemy.com/course/laravel-jetstream-b2b-project-setup/",
      "bio": "Laravel professional course series Part 1",
      "objectives": [
        "You'll learn how to work with Laravel Jetstream",
        "You'll learn the first steps of setting up a B2B business project",
        "You'll learn how to install an admin backend",
        "You'll learn 10+ essential Laravel features:",
        "Jetstream Installation, Advanced Seeding, Middleware, Stubs, Scopes, Routing, E-Mail Verification"
      ],
      "course_content": {
        "Laravel + Jetstream Starter Package Setup": [
          "Section Overview and comment on Laravel version",
          "Your Course Material",
          "Laravel Installation",
          "Jetstream starter package installation",
          "Publish Jetstream Components & Change dashboard page",
          "Change Logo, Favicon and App Title",
          "User seeder + Admin user / seeder + Theory on facades",
          "Admin Middleware and Registration in Kernel",
          "Theory on Routing and AdminController",
          "Email Verification in Laravel Jetstream & how to adapt messages and email looks",
          "Section Recap and Cheat Sheets"
        ],
        "Setup of Laravel Valet (Mac only)": [
          "Laravel Valet Introduction",
          "Homebrew installation to manage your Mac software",
          "Install PHP, Composer, Node, MySQL, phpMyAdmin with Homebrew",
          "Install Valet and add Composer Path to $PATH in ~/.zshrc",
          "Serving Sites with Valet",
          "Serving phpMyAdmin and solving \"no-password-problem\"",
          "Valet Section Summary"
        ],
        "Laravel Upgrade to Version 9": [
          "Laravel Upgrade Introduction",
          "Laravel Upgrade Introduction Pt. 2",
          "Perform GIT STASH to save changes before the Laravel Upgrade",
          "Perform GIT BRANCH to work on a copy while doing the Upgrade",
          "Laravel and Composer",
          "That' it - for the moment..."
        ]
      },
      "requirements": [
        "PHP / MySQL experience"
      ],
      "description": "ATTENTION! THIS COURSE IS NOT FINISHED YET. THERE WILL BE MORE LECTURES.\n\n\nHello my friends,\nyou probably already know that Laravel is the best PHP framework in the world.\nThis course is for programmers who want to learn about Laravel Jetstream and more.\nTogether we will do the setup for a B2B multi tenancy e-commerce application with Laravel Jetstream.\nApart from getting an insight into Laravel Jetstream you also will learn quite a few advanced tricks and features of Laravel itself.\nAlso we will install an AMAZING Dashboard Theme for your business's admin area.\nAfter the course you will master the following:\nLaravel Jetstream HowTos + Knowledge\nInstallation of Jetstream\nChange Logos + Favicon and App Title in Jetstream\nActivate E-Mail-Verification in Jetstream\nHow to upload profile images in Jetstream > STILL IN WORK\nIntegration of ADMIN Dashboard > STILL IN WORK\nGeneral Laravel features\nMiddleware\nLaravel Routes - Deeper Insight\nSoft Deletes > STILL IN WORK\nAdvanced Database Seeding > STILL IN WORK\nWorking with stubs > STILL IN WORK\nWorking with global scopes > STILL IN WORK\nBlade Templating > STILL IN WORK\n\nWho is this course for?\nThis course is not a dedicated beginners course, that means that I will not explain basic programming concepts like the MVC-Pattern here that Laravel uses.\nHowever you can still master this course even as a Laravel Beginner as long as you have some advanced experience with PHP.\n\nEverything is documented, you will get:\nA complete detailed documentation on every lecture\nFull source code of the project for every lecture on GitHub\nA bunch of How-To Cheat Sheets\n\n\nThe larger picture: Your way to become a Laravel Professional\nThis course is Part 1 of a larger course series that I am creating. The master plan here is that I want to guide you all the way from being a Laravel \"Experimenter\" to becoming a Laravel Master.\nThe overall focus of this series is the creation of professional business applications. This is a skillset that is highly needed in the industry.\n\n\nI am looking very much forward of seeing you in the course!\nMartin",
      "target_audience": [
        "PHP programmers who intend to work with the Laravel framework professionally"
      ]
    },
    {
      "title": "Building REST API using Node.js and Express",
      "url": "https://www.udemy.com/course/building-rest-api-using-nodejs-and-express/",
      "bio": "Learn to create API's and call the API using Postman",
      "objectives": [
        "Create a web API with Node and Express",
        "Build an express server",
        "Create request handlers with CRUD methods.",
        "Configure routing, URL paths, and return values.",
        "Call the web API with Postman as API client",
        "Perform CRUD operations on API using Postman",
        "Create function to validate API data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is an API",
          "Overview of API and Project Code",
          "What is Node.js",
          "Install Node.js",
          "What is NPM",
          "Installing Postman",
          "Installing ATom",
          "Creating package.json file"
        ],
        "Building API Server": [
          "Install Express",
          "Installing JOI",
          "Creating application file",
          "Creating an array of objects",
          "Creating READ request handlers",
          "Install Nodemon",
          "What is HTTP",
          "HTTP Request Methods",
          "HTTP Response Codes",
          "Testing READ Request Handlers",
          "Creating function to validate data",
          "CREATE Request Handler",
          "Testing CREATE Request Handler",
          "UPDATE request Handler",
          "Testing UPDATE Request Handler",
          "DELETE Request Handler",
          "Testing DELETE Request Handler",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript",
        "Basic knowledge of Express",
        "Basic knowledge of Node"
      ],
      "description": "REST stands for Representational State Transfer and defines a set of standards for web services.  It is an architectural style as well as an approach for communications purposes that is often used in various web services development.\nAn API is an interface that different software programs use to communicate with each other.\nRESTful API is an API that conforms to the REST architectural style and constraints. REST systems are stateless, scalable,cacheable, and have a uniform interface.\nRESTful APIs most commonly utilize HTTP requests.Four of the most common HTTP methods are :\nGET, POST, PUT, and DELETE, which are the methods by which a developer can create a CRUD system – create, read, update, delete.  REST   it is an application program interface (API) that makes use of the HTTP requests to GET, PUT, POST and DELETE the data over WWW. (World Wide Web)\n\n\nThe main functions used in any REST-based architecture are:\nGET − Provides read-only access to a resource.\nPUT − Creates a new resource.\nDELETE − Removes a resource.\nPOST − Updates an existing resource or creates a new resource.\n\n\nIn this course you will learn a practical demonstration of building  a REST API using Node.js and Express.\nYou learn how to:\nCreate a web API .\nBuild an express server\nCreate request handlers with CRUD methods.\nConfigure routing, URL paths, and return values.\nCall the web API with Postman.\nPerform CRUD operations on API using Postman as API Client\nValidate data for the API",
      "target_audience": [
        "Absolute beginners to creating API's"
      ]
    },
    {
      "title": "[For Beginners] JavaScript Complete Course",
      "url": "https://www.udemy.com/course/the-javascript-course/",
      "bio": "Learning JavaScript from basics to advanced with unique industry-proven approaches and making you confident with JS.",
      "objectives": [
        "Becoming a JavaScript developer",
        "All JavaScript basics (Variables, Control Statements, Functions, Arrays, Objects, and more)",
        "Async JavaScript (Promise, Callbacks, Async/Await, and more)",
        "A professional developer approach to writing code and debugging",
        "Advance concepts (Closures, IIFE, Recursion, and more)",
        "Apply your understanding to assignments and quizzes.",
        "Special lectures have been added for complete beginners to understand from scratch, like literals and variables.",
        "Answering interview questions in JavaScript up to an advanced level",
        "VSCode add-ons to simplify Javascript coding",
        "Next-Gen JavaScript (ES6)",
        "How to think and build steps to write complex code.",
        "Learning each concept with an example",
        "Document Object Model to handle HTML documents from JavaScript code.",
        "JQuery in details for the real-time restapi call",
        "Using JSON to communicate with other web servers",
        "Understand and apply best practices that help with scalability.",
        "Understanding different ways to solve problems while writing the code",
        "Writing a robust code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup & Best Practices": [
          "IDE setup",
          "Sample File Creation",
          "Prettier - Code Formatter Extension",
          "Material Icon Theme - Extension"
        ],
        "[Part 1] Javascript Basics": [
          "Literals",
          "Variables",
          "Let",
          "Const",
          "Comments",
          "Arithmetic Operators",
          "Quiz",
          "Data Type - String",
          "String Method",
          "Data Type - Number",
          "Data Type - Bigint",
          "Data Type - Boolean",
          "Undefined vs Null",
          "Data Type - Symbol",
          "Data Type - Object",
          "Dynamic types",
          "Quiz"
        ],
        "[Part 2] Javascript Basics": [
          "Array",
          "Array length property",
          "Array can hold anything",
          "Holes in array",
          "Array like a Stack",
          "Array - shift() & unshift()",
          "Array - splice",
          "Array - delete operator",
          "Array - join",
          "Array - flat()",
          "[Optional] Array - deep flat() [Custom]",
          "Array - Default Sort",
          "Array - Sort without modify original",
          "Array - Sort with CompareFn",
          "Array - Sort on Objects",
          "What is stable sort?",
          "[Optional] Sorting on Restapi Data",
          "Array filter()",
          "Array filter() [Examples]",
          "[Optional] Array filter() - advance options",
          "Array map()",
          "Array map() - Objects",
          "Array map() - Best Practices",
          "[Optional] Array map() - advance options",
          "Quiz",
          "Array - reduce()",
          "Array - reduce() without initial value",
          "Array - reduce() with advance config",
          "Array - reduce() on objects",
          "Array - reduce() vs reduceRight()",
          "Array - IndexOf & lastIndexOf",
          "Array - find & findLast",
          "Array - findIndex() & findLastIndex()",
          "Array - from()",
          "Array - includes()",
          "Array with Const declaration",
          "Date",
          "Date - Get Methods",
          "Date - Set Methods",
          "Math Object",
          "OTP generation with Math.random()",
          "Quiz"
        ],
        "[Part 3] Javascript Basics": [
          "If Else",
          "Nested If",
          "If Else If",
          "Conditional (Ternary) Operator",
          "Switch Statement",
          "Switch Example",
          "For Loop",
          "For Loop on 1 Dimensional Array",
          "For Loop on Multi Dimensional Array",
          "Why to use let in For Loop?",
          "for...of",
          "for...of on Multi Dimensional Array",
          "for..in",
          "while",
          "do while",
          "Label, Break & Continue",
          "Break vs Continue",
          "TypeOf",
          "Quiz"
        ],
        "Javascript Functions In Depth": [
          "Anonymous Functions",
          "Arrow Function",
          "Function Hoisting",
          "First-class Function",
          "Anonymous Functions",
          "Anonymous Function - Returning Function",
          "Overloading",
          "Arguments Object",
          "Default Parameters Prior to ES6",
          "Default Parameters ES6",
          "Default Parameters",
          "The this Object",
          "Function Properties & Prototype",
          "The call() Method",
          "The apply() Method",
          "The bind() Method",
          "call() method",
          "bind() method",
          "Nested Functions",
          "Closure",
          "Recursion",
          "Call Stack Error",
          "Recursion",
          "Closure",
          "Immediately Invoked Function Expressions (IIFE)",
          "Callback",
          "Pure Functions",
          "Impure Functions",
          "Currying",
          "Currying",
          "Quiz"
        ],
        "Asynchronous JavaScript": [
          "How Promise works?",
          "Promise Chaining",
          "Callback Hell",
          "All Settled",
          "All",
          "Async and Await",
          "Quiz"
        ],
        "Javascript HTML Document Object Model (DOM)": [
          "Introduction",
          "Location of script import",
          "What is document object?",
          "getElementById()",
          "getElementByName()",
          "getElementsByTagName()",
          "getElementsByClassName()",
          "querySelectorAll() with Basic Selector",
          "querySelectorAll() with Grouping selectors",
          "querySelectorAll() with Combinators",
          "querySelectorAll() with Pseudo",
          "Node vs Element",
          "Parent Element",
          "Child Elements",
          "Siblings Elements",
          "Create Elements",
          "Create Elements [List Example]",
          "Create Elements [Script Example]",
          "appendChild()",
          "Quiz",
          "textContent & innerText",
          "Reading from innerHTML",
          "Setting innerHTML",
          "Security Issues with innerHTML",
          "setHTML()",
          "DocumentFragment",
          "before()",
          "before() with multiple parameter",
          "before() with text",
          "after()",
          "after() with multiple parameter",
          "after() with text",
          "replaceChild()",
          "removeChild()",
          "cloneNode()",
          "append() vs appendChild()",
          "prepend()",
          "HTML Attributes & DOM Objects Properties",
          "Property - Attributes",
          "Property - Dataset",
          "setAttribute()",
          "getAttribute()",
          "removeAttribute()",
          "Property - Style",
          "Quiz"
        ],
        "Javascript Browser Object Model (BOM)": [
          "Introduction",
          "What is window Object?",
          "window.open()",
          "Height & Width",
          "Resizing Window",
          "Moving Window",
          "Closing Window",
          "window.alert()",
          "window.confirm()",
          "window.prompt()",
          "setTimeout()",
          "setTimeout() with this keyword",
          "setTimeout() with params",
          "setInterval()",
          "Location - Object & It’s Properties",
          "Location - assign() & replace()",
          "Location - Navigate with href",
          "Location - reload()",
          "Location - redirection based on country",
          "URLSearchParams",
          "URLSearchParams keys() values() entries()",
          "Navigator",
          "Navigator - Browser compatibility",
          "Navigator - Clipboard text copy paste",
          "Navigator - Clipboard Events",
          "Navigator - Clipboard Copy Image",
          "Screen",
          "History - forward() & back()",
          "History - forward() & back() [Example]",
          "History - go()",
          "History - with Hash",
          "Geolocation",
          "Geolocation - watchPosition() & clearWatch()",
          "Quiz"
        ],
        "Javascript AJAX": [
          "Introduction",
          "AJAX Example [Live Score Update] Part 1",
          "AJAX Example [Live Score Update] Part 2",
          "AJAX with JSON",
          "ReadyState Property",
          "Response & ResponseType",
          "Request Timeout",
          "Response Headers",
          "Request Headers",
          "File Upload with AJAX [Part 1]",
          "File Upload with AJAX [Part 2]",
          "File Upload with AJAX [Part 3]",
          "Submitting Data with AJAX",
          "Quiz"
        ]
      },
      "requirements": [
        "No coding experience is needed; we will be covering it right from the beginning.",
        "Any computer with Mac, Windows, or Linux OS. We will be installing all other tools in the course step by step.",
        "Knowing already HTML and CSS will be an advantage, which is completely optional.",
        "No paid software is needed. Writing a robust code"
      ],
      "description": "#1: Best Indian corporate instructor with JavaScript\n\"I attended Navin's offline training in Deloitte, India, for JavaScript; it was a great experience, which also helped me become a senior developer at my current company. Then I also learned about other technologies from him on Udemy. I loved the ways he explained concepts and also understood in advance the doubts that could arise for a learner; that's great art that comes with experience for any instructor.\" -- Govind Satpute\n\n\nJavaScript is preferred by almost all web development beginners, and JavaScript is used to build popular modern web development frameworks like React, Angular, Vue, Express, and hundreds more.\n\n\nWhy choose this course?\nEverything is covered right from scratch.\nPractical scenarios added from my product-building experience.\nUnique ways to explain concepts with different real-time examples.\nDeep dive into advanced topics.\nMake yourself ready to learn advanced frameworks like React, Angular, Vue, Express, and many more.\nDesigning solutions for given problems.\nHave you seen how few developers debug any code in minutes? Debugging is an art, which saves hours of your precious time.\nSuitable for beginners, intermediates, and advanced learners (specific modules for mastering an area of JavaScript).\nWhy me as the instructor for this course?\nMy name is Navin Rajesham, and I am a certified corporate trainer from India. You might have heard why Indian instructors prefer to learn new technology. There is a strong reason behind that. In India itself, we have 25+ states with different cultures, so when we teach, we get to know how to teach learners of different backgrounds. So when it comes to an international platform like Udemy, it's not new for us to build a course that should be suitable for learners in 100+ countries. I trained Deloitte, CitiusTech, Infosys, TCS, and many more MNCs on JavaScript. With my 10+ years of experience, I learned how to keep a path in a course, elaborate the things, put great examples to understand concepts, and make sure all the learners get the best out of it. Creating an online course is not just a simple task; it's an art that comes with experience. I feel great when I read reviews of how my courses have helped learners. I would like to thank my 70k+ learners on Udemy.\n\n\nWhat does the course cover?\nJavaScript Basics (Literals, Variables, Data Types, etc.)\nHow is JavaScript a dynamically typed language?\nNext-Gen JavaScript features\nArray: map(), filter(), reduce(), reduceRight(),\nArray: find(), findIndex(), from(), includes\nHow does OTP generation work?\nConditional Statements (If, If…Else, If…ElseIf, Switch)\nLooping Statements (For, While, Do, While)\nLabel, Break, and Continue\nArrow Functions, Anonymous Functions\nImmediately Invoked Function Expressions (IIFE)\nFirst-Class Functions\ncall(), apply() and bind()\nClosure: To limit variables to a particular function\nRecursions\nPure and Impure Functions\nCurrying\nHoisting\nDedicated Module on AJAX\nFile uploading and getting progress on uploads with AJAX\nDedicated Module on JSON\nCalling real-time RestAPI with JSON data\nJSON vs. XML\nDedicated Module on the Document Object Module (DOM)\nDedicated Module on the Browser Object Model (BOM)\nAsynchronous Programming with Promise\nAsynchronous Programming with Async Await\nCallback in detail\n\n\nWhat additional things were covered?\nReal-time examples like OTP generation\nCalling data from the live server and processing it\nUnderstanding security issues (like using innerHTML)\nCreating a solution with a unique approach (step-by-step patterns)\nUnderstanding the art of debugging\nUnderstanding each new concept by first understanding its need\nUnderstanding similar approaches and selecting the best suitable for better scalability in the future\nLet's take your journey as a JavaScript developer to the next level. See you inside the course.",
      "target_audience": [
        "For those who want to master JavaScript",
        "For those who is looking for a job as a JavaScript developer",
        "Have you tried learning JavaScript earlier? but couldn't get a detailed idea, this course will really help you, as it has a unique approach to learning each concept.",
        "If your goal is to learn advanced frameworks like React, Angular, VueJs, Express, and more, this course will really help you build the core needed throughout the course. I have also highlighted the points that are useful to learn for advanced JavaScript frameworks.",
        "If you want to start programming, JavaScript will be the best choice.",
        "If you are already an advanced JavaScript developer and want to even master it with critical topics."
      ]
    },
    {
      "title": "Solid JS & Firebase - Complete Guide to X(Twitter) Clone",
      "url": "https://www.udemy.com/course/solid-js-firebase-the-complete-guide-twitter-clone-app/",
      "bio": "Build a Twitter-like app with Solid JS and Typescript. Unleash Solid JS reactivity. Use Firebase as the data store.",
      "objectives": [
        "Learn to program with Solid JS and create amazing Web Apps",
        "Get an understanding of how to create a Twitter clone app explained practically",
        "Write type-safe code with Typescript",
        "Use Firebase services - Firestore storage, Authentication",
        "Establish yourself in the field of the Web Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to resolve issues",
          "Few words before start"
        ],
        "Init Project": [
          "Init Project",
          "Open Coding Editors",
          "Create entry files",
          "Tailwind css",
          "Quiz",
          "Layout",
          "Init Icons + Popup menu",
          "Base Layout Done",
          "Quiz"
        ],
        "Components & Modularity": [
          "Sidebar Components",
          "Quiz",
          "Trends Data",
          "For Loop",
          "Layouts",
          "Main Layout",
          "Quiz"
        ],
        "Reactivity": [
          "Create signal",
          "Create glide function",
          "Add more content to the glide",
          "Quiz",
          "Glide Post Component",
          "Pass props to glide post",
          "Glide Type",
          "Simplify Getters",
          "Quiz"
        ],
        "Routing": [
          "Screens",
          "Login and Register layout",
          "Routing Changes! Important.",
          "Next Lecture Router Changes",
          "Router",
          "Lazy loading",
          "Main navigation Links",
          "A Router Component",
          "Quiz"
        ],
        "Popup": [
          "Show content conditionally",
          "Fallback and lifecycle functions",
          "Simple Popup",
          "Pass component to Popup",
          "Improve look of popup",
          "Create effect",
          "Adjust popup",
          "Set popup position",
          "Close popup on outside click",
          "Portal",
          "Resize Event",
          "Dont close on popup click",
          "Quiz"
        ],
        "Create Root": [
          "Pagesize createroot",
          "Track resize",
          "Display icon conditionally",
          "Pagesize tracking",
          "Quiz"
        ],
        "Context and Provider": [
          "Auth Provider - Before you Start",
          "Auth Provider",
          "Auth context values",
          "Stores",
          "Set Auth State",
          "Quiz",
          "Loader",
          "Display loader conditionally",
          "Routing Layouts",
          "Redirects",
          "Quiz"
        ],
        "Register Form": [
          "Set value in the form",
          "Function to handle input changes",
          "Quiz",
          "Register form type",
          "useForm hook",
          "Move functionality to useForm",
          "Submit Callback",
          "Generic types",
          "Quiz"
        ],
        "Validation": [
          "Custom directive",
          "On Blur, On Input",
          "Move Validate Out",
          "Simple validation",
          "Simple Max length validator",
          "Max length validator",
          "Reusable validators",
          "Run all validators",
          "First letter uppercase validator",
          "Quiz"
        ]
      },
      "requirements": [
        "Base Javascript & Typescript knowledge"
      ],
      "description": "Is this course right for you?\nThis course covers creating a Twitter-like application with Solid JS and minimal 3rd party dependencies. Almost every feature is made from scratch without any dependency package. This covers - Form Validation, Pagination, Modal, Popups, Snackbar, and more.\nThe course covers the explanation of Solid JS library API by working on an actual project. This course will give you the confidence and skills required to start any project.\nStudents should have basic javascript knowledge to start working on this course.\nWhat is Solid JS?\nSolid JS is a reactive UI library inspired by React JS. It utilizes Component-like architecture, reactive data binding, and JSX.\nEvery Component executes once, and the Hooks and bindings execute many times as their dependencies update.\nSolid follows the same philosophy as React with unidirectional data flow, read/write segregation, and immutable interfaces. It, however, has an entirely different implementation that forgoes using a Virtual DOM.\nWhat is Typescript?\nTypeScript is an open-source language that builds on JavaScript, one of the world's most used tools, by adding static type definitions.\nWhat are you going to work on?\nStudents will build a Twitter-like app from scratch - the HTML layout part is not part of the course (This will be provided in the course materials to save time and focus purely on Solid JS). The focus of this course is coding and not writing HTML content.\nYou will learn how to use Typescript language - a superset of Javascript providing additional features and a static type checker.\nThe course starts with the preparation of the base layout of the application. All designs - images, and content are provided by the instructor.\nContent can be briefly summarized in these points:\nLayout preparation - A few lectures to prepare the HTML for your application. Separation of layout into the Solid JS components.\nSolid JS Router - This part explains how to create a \"multi-page\" application. Students will learn how to create a routing with different routing strategies and navigation to the routes. Covers the creation of Profile, Login, and Register pages.\nSignals & Reactivity - Explains how to create and manage reactive data with createSignal and stores.\nLifecycle function - How to use onMount and onCleanup\nAuth Forms - Students will learn how to create a reactive form and bind the data to form inputs.\nCustom Form Validation - Covers creating a custom input/form validation and error handling from scratch.\nFirebase/Firestore - Initialization of Firebase application (data storage)\nHook Functions - Important part of the projects. Allows the feature-related code to be separated into its context.\nAuthentication - This part covers creating a login, register, and logout functionality. Students will learn how to authenticate a user upon the application visit.\nProvider and Context - This creates a provider component, which can hold the data on the root level and provide them to underlying components.\nSnackbars - App-wise functionality created with Provider to display any message as a toast popup.\nGlide Creation - Covers how to create a new glide and display it on the main page. From this point on, students will often work with Firebase/Firestore.\nFollow Functionality - Follow functionality allows users to subscribe to other users.\nDisplay Glides from Following - Subscription (Following) to other users will allow seeing the Glides (messages) they post.\nPaginate Glides - It would be inefficient to fetch/display all of the glides on the initial load. Students will learn how to implement their lazy loaded pagination when data are loaded as the users browse the application.\nCreate Sub-Glides - It's essential to have a way to respond to glides. This feature enables a user to create subglides, which is an answer to the glide.\nModal Messenger - Students will learn how to create a modal component from scratch. This will be used to display a messenger component on any page.\nDeployment to Vercel - Finally, the application will be live hosted on Vercel. Anybody on the internet will be able to visit your application.\nPersistence - This section explains how to store data on the application level and persist them for later use.\nWhile working on the features above, the students will learn and understand Solid JS features. They will know how to architecture applications and will be able to create their applications with Solid JS.",
      "target_audience": [
        "Anybody interested in how to create Web Apps with modern JS libraries/frameworks",
        "People looking for a practical web development guide",
        "This course is for everyone eager to understand how to build an app from scratch"
      ]
    },
    {
      "title": "HTML5 canvas Bootcamp for beginners 25 easy steps",
      "url": "https://www.udemy.com/course/html5-canvas-course-for-beginners/",
      "bio": "Basic introduction to about how to use canvas element on your webpage JavaScript dynamic image generation",
      "objectives": [
        "create amazing drawing on canvas",
        "create a dynamic image on a webpage",
        "use JavaScript to draw on canvas"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript HTML",
        "desire to learn",
        "computer access"
      ],
      "description": "Do you want to learn about HTML5 canvas and get drawing on your web pages quickly?\nThis is a crash course on how to use HTML5 canvas, taught by an instructor with over 15 years web development experience\nTopics covered include\nIntroduction to what canvas is and how to use it\nBasics of lines and strokes\nmoving paths and pixel locations\nusing images within canvas\nadding text\ncool effects - shadows and more\ntransformations\nworking with dynamic content looping\ncolor formats along with how to apply gradients\nshowing you how to render your canvas content to and image\nCanvas consists of a draw-able region defined in HTML code with height and width attributes. JavaScript code may access the area through a full set of drawing functions, allowing for dynamically generated graphics.\nSome common uses of canvas include building graphs, animations, games, and image composition.\nThis course includes everything you need to build a solid foundation to create amazing content using canvas on your web pages.\nLet begin learning HTML5 canvas.",
      "target_audience": [
        "anyone who wants to use canvas on web pages",
        "create images on the fly",
        "web developers",
        "web designers",
        "JavaScript developers"
      ]
    },
    {
      "title": "Instagram clone with FastAPI, ReactJS and Android",
      "url": "https://www.udemy.com/course/instagram-clone/",
      "bio": "Build a complete project from database, backend API and 2 clients, web and mobile",
      "objectives": [
        "Instagram clone project development",
        "FastAPI",
        "ReactJS",
        "Android",
        "Web technologies",
        "Network communication",
        "Database storage"
      ],
      "course_content": {},
      "requirements": [
        "FastAPI",
        "ReactJS",
        "Android"
      ],
      "description": "This course will teach you how to build an Instagram like project from beginning to end. It will build your knowledge of full stack development, both on the web stack and mobile stack.\nWe will cover all layers of development. From database design and communication, API development, and user authentication on the backend layer.\nThen we will build our first client, a react js application using HTML, CSS and Javascript. We will implement all features available in the backend API, and you will learn how to use the API we've just developed to make the project works smoothly.\nFinally, we will implement a mobile client. We will build it in Android, and it will be able to communicate with the API to provide an interface similar to the web one, but built on native Android.\nBy the end of this course you will have a clear understanding of how all these technologies work together and collaborate to make our project a reality. And you will also have a project that you can build upon and improve, if you would like to add more functionality.\nSo sign up today and let's build an end to end Instagram clone project, with web and mobile clients.",
      "target_audience": [
        "Web full stack developers",
        "Mobile full stack developers"
      ]
    },
    {
      "title": "Fullstack Django and Python Bootcamp With Real Life Projects",
      "url": "https://www.udemy.com/course/fullstack-django-and-python-bootcamp-with-real-life-projects/",
      "bio": "Learn How To Build an E-commerce app Using Django, Python, HTML, CSS, SASS, Bootstrap, And JavaScript",
      "objectives": [
        "Learn how web applications work",
        "Learn how Django Implements web applications",
        "Understand HTML and how to use it to create mark-ups for web pages",
        "Understand CSS and how to use it to style web pages",
        "Understand Sass and how to use it to write styles programmatically",
        "Understand JavaScript and how to use to add interactions to web applications",
        "Understand Python and how to use to build web applications on top of Django Framework",
        "Learn how to analyse a customer’s problem and generate the software requirements for the project",
        "Learn how to structure a large-scale project",
        "Learn how to implement all the functionalities of a complete eCommerce application which include: Product catalogue, Shopping Cart, Order and Checkout, Customer Management"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet connection",
        "Visual Studio Development Environment",
        "Visual Studio Code Development Environment"
      ],
      "description": "Description\nThis is a no holds barred, action packed, Full Stack Django Web Development Course. To demonstrate My Confidence About This Course, I have created a CV that contains all the Concepts that I covered, and the Projects I have executed in this course. You can Take This Course and Start Looking for Job Immediately using the CV I have prepared.\nYour prospective employer wants you to come on-board and start building applications for them straight away. That is what I did in this course. To provide the knowledge that will allow you go straight into the industry and start working immediately. With over 170 Lectures that covers Five Crash Courses, and Two Solid Real-World Projects, I did not leave any stone unturned!!\nBasically, the whole course can be grouped into Three Main Themes:\nIntroduction to web Applications\nWhere I introduced how web applications work and how Django implements web applications\nThe Crash Courses\nWhere I provided short but comprehensive mini courses on HTML, CSS, SASS, JavaScript and Python\nSince, the course is a Full Stack (Front End and Back End) development course, the crash courses on HTML, CSS, SASS and JavaScript provide you with the knowledge to work on the Front End, while the Python Crash Course provides you with the knowledge Back End Language\nThe Real World Projects\nWhere I built Two SOLID Real-World Projects. The type of Projects that you will be working on when you get into the industry.",
      "target_audience": [
        "Beginners who do not have a prior experience with programming",
        "Intermediate and Senior developers looking to start working with Python",
        "Developers looking to gain more knowledge within full stack development"
      ]
    },
    {
      "title": "Learn to Create REST API's with C# .NET",
      "url": "https://www.udemy.com/course/aspnet-web-api-create-restful-apis-in-c-using-net-45/",
      "bio": "Easy ASP.NET Web API framework for building RESTful applications and HTTP services on .NET framework",
      "objectives": [
        "REST API/Web API - Get started to build your skill set with edge cutting technologies",
        "Develop REST/Web API's with C#",
        "Learn core concepts with an additional course on developing a HTTP Client application for consuming REST/Web API",
        "Launch your API in market place with skills learned from this course"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Web API"
        ],
        "WebAPI Basics, Controller, Configuration, Routing": [
          "WebAPI Basics",
          "WebAPI Basics",
          "WebAPI Controller",
          "Configuration",
          "Routing",
          "WebAPI Controller",
          "WebAPI Routing"
        ],
        "Parameter Binding, Action Return Type, Data Formats, Media Type Formatters": [
          "Parameter Binding",
          "Parameter Binding",
          "Action Return Type",
          "WebAPI Request/Response Data Formats",
          "Media Type Formatters",
          "Media Type Formatters"
        ],
        "WebAPI Filters, HttpClient and WebAPI Hosting": [
          "WebAPI Filters",
          "Filters",
          "HttpClient Console App for communicating with WebAPI (send & receive data)"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic programming knowledge",
        "Beginner level knowledge of .Net, C#, Visual Studio",
        "Curiosity, interest in learning something innovative",
        "Motivation to enhance your skills set to fulfill marketplace demands"
      ],
      "description": "ASP.NET Web API provides ideal platform for build restful services, it supports ASP.NET request/response pipeline and supports HTTP protocol. The course covers both core and advanced topics such as:\n- Web API Controller\n- Configuration\n- Routing\n- Parameter Binding\n- Action Return Type\n- Data formats\n- Filters\n- HttpClient for consuming Web/REST API\n- Hosting - Web/REST API\nCourse also includes a project on building a restful service using Web API. Students will learn core concepts on Web API, comparison with WCF, tools for accessing web api with a project on building a REST application.",
      "target_audience": [
        "Beginner/Intermediate level programmers, students, anyone interested in developing API's",
        "Software Professionals, developers, test engineers",
        "Anyone interested in learning REST or Web API"
      ]
    },
    {
      "title": "JavaScript Crash Course: Learn Essential Coding Skills Fast!",
      "url": "https://www.udemy.com/course/javascript-crash-course-learn-essential-coding-skills-fast/",
      "bio": "Accelerate Your JavaScript Journey: Variables, Loops, Functions, Classes, Expressions, Conditional Processing & More!",
      "objectives": [
        "Learn the core Javascript skills needed to apply for Javascript developer positions in just 15 hours.",
        "Have a fundamental understanding of the Javascript programming language.",
        "Understand how to create your own Javascript programs.",
        "Be able to demonstrate industry best practices in the Javascript code you write.",
        "Obtain a solid understanding of what debugging and refactoring is and how to do it."
      ],
      "course_content": {},
      "requirements": [
        "A computer running Windows, Mac OS, or Linux so that the free tools for writing Javascript code can be installed and used in the course.",
        "An open mind to learn something new and exciting which may make a huge difference in your future career."
      ],
      "description": "Discover the Fastest Way to Learn JavaScript and Boost Your Programming Career!\nTime is precious, and finding the perfect balance between work, study, and personal life can be challenging. However, with our streamlined JavaScript programming course, you can unlock the doors to a successful programming career without sacrificing your quality of life.\n\nIntroducing the JavaScript Crash Course: Learn Essential Coding Skills Fast!\nOur course is designed to teach you the most important JavaScript concepts and commands in record time. By focusing on the core essentials, we cut through the clutter and empower you with the knowledge you need to land your first programming job or enhance your current position.\n\nWhy Learn Just the Essentials?\nProgramming languages are vast, but not every feature is necessary for success. Think of using a spreadsheet program: most users only need basic functionality. Learning every feature would be time-consuming and not always beneficial.\nOur course adopts the same principle for JavaScript. We focus on what you need to know to achieve your goals, saving the rest for when it becomes relevant.\n\nPerfect for Beginners and Experienced Programmers\nWhether you're new to programming or looking to learn a second or third language, our course caters to all skill levels. We start from scratch, guiding you through downloading and installing the tools, writing your first programs, and mastering essential JavaScript concepts.\nStudent Testimonial (from the instructors Python crash course on Udemy):\n\"One of the best courses I have come across. Very smart and unique way to teach a programming language. Enjoying it thoroughly so far :)\" - Anil M.\n\nWhat Will You Learn?\nOur curriculum covers essential JavaScript skills, including:\n• Creating a basic JavaScript program\n• Setting up and running JavaScript programs\n• Data Types, Variables, Conditional Processing, Loops, Classes, Operators, Expressions, and more\n• Check the curriculum on this page for a full list of topics\n\nLearn by Fixing and Improving Real JavaScript Code\nThroughout the course, you'll work with real JavaScript code, identifying errors, and enhancing its quality. This hands-on approach will help you think like a programmer and maximize your JavaScript proficiency.\n\nMeet Your Instructor: Faisal\nWith 12+ years of experience building global products, Faisal's passion for technology and teaching shines through. He has successfully led startups, raised funding from Google and other investors, and is now the Head of Product at a fast-growing Indian startup.\n\nInstructor Support\nFaisal is committed to your success, offering full support and answering of your questions in a timely manner. You'll never be stuck on a lesson for too long, ensuring smooth progress throughout the course.\n\nRisk-Free Investment with a 30-Day Money-Back Guarantee\nWe're confident in the value of our course, which is why we offer a full 30-day money-back guarantee. If you're not satisfied with the course or your progress, you'll receive a 100% refund, no questions asked.\n\nReady to Jumpstart Your JavaScript Career?\nEnrol now using the \"Add to Cart\" button and start your journey to becoming a skilled JavaScript programmer. Preview some of the course content to be sure it's the right fit for you.\nWe'll see you on the inside (hurry, your JavaScript adventure awaits!)",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous programming experience.",
        "Existing programmers who know Java, C#, Python, Java, or other languages who want to become skilled in Javascript."
      ]
    },
    {
      "title": "Hands on ASP.NET Core 5 production grade API Development",
      "url": "https://www.udemy.com/course/hands-on-aspnet-core-31-production-grade-api-development/",
      "bio": "asp.net core 5 production grade API with next generation technology (Oauth2, elastic search, redis, mongodb, rabitmq )",
      "objectives": [
        "Hot!! Docker and Docker Compose Updated today (NEW)",
        "Hot!! Oauth2 and JWT (Upcomming)",
        "Build real-world applications with ASP .NET Core 3.1",
        "Service Repository Pattern",
        "Unit Of Work Implementation",
        "MongoDB for reporting",
        "Elastic Search Implementation",
        "Global Exception Handling",
        "JWT and Oauth2 implemention for tokne base authendication and authorization",
        "Microservice Architecture of RabbitMQ",
        "Implement filtering, sorting and pagination",
        "Firebase implementation for notifications",
        "Docker for development environment and production publish",
        "Hosting application in nginx server",
        "Redis cache implementation",
        "Test API with Postman and tricks for using postman",
        "Implement a clean and decoupled architecture",
        "Understand and apply the Dependency Inversion Principle (DIP)",
        "Dependency injection feature in ASP .NET Core",
        "Troubleshoot common runtime errors",
        "Write clean, maintainable and reliable code",
        "Refactor bad code into good code",
        "Better understand software development lifecycle"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Scope",
          "Application Requirements",
          "Download the Source Code",
          "Who Am I"
        ],
        "Application Setup": [
          "Create a first application",
          "File Structure Details",
          "Environments"
        ],
        "Entry point of Application": [
          "Controller",
          "Status Code",
          "Postman for API Testing",
          "Implement REST API with Basic Response",
          "Github for version control",
          "Implement REST API with Proper Model",
          "Swagger Implementation",
          "API Versioning",
          "Controller Excrcise",
          "Controller Deep Drive"
        ],
        "Implementing CRUD Operation": [
          "Introduction",
          "Entity Framework Setup",
          "Refactoring Setup and Some Thinking",
          "Migration And Seed Data",
          "CRUD Operation Part-1 (Insert Data)",
          "CRUD Operation Final Part (Read, Update and Delete)",
          "Exercise For Student Controller"
        ],
        "Refactoring Existing Code (part-1)": [
          "Introduction",
          "Discuss Service Repository Pattern",
          "Implement Service Repository Pattern",
          "Complete Exercise Part",
          "Form Validation",
          "More Feature of Form Validation"
        ],
        "Refactoring Code part 2": [
          "Delete Method Refactoring",
          "Update and Find Method Refactoring",
          "Middleware Basic",
          "Create Custom Middleware"
        ],
        "Best Practice In Repository": [
          "Introduction",
          "Add Base Repository",
          "Refactor Repository code",
          "Soft Delete 1st Part",
          "Soft Delete Final Part",
          "CreatedAt, UpdatedAt, CreatedBy and UpdatedBy Implement",
          "Unit of Work Implementation"
        ],
        "Relational Database Design": [
          "Introduction",
          "One to Many Relationship",
          "One to Many Relationship Implement Code",
          "Many To Many Relationship"
        ],
        "Course And Course Assign Student Controller Implementation": [
          "Course Controller CRUD",
          "Course CRUD FInal",
          "Enroll Course CRUD",
          "Enroll Course Final",
          "Getting Enroll Course Student Info"
        ],
        "Sorting , Filtering & Pagination": [
          "Introduction",
          "Dummy or Seed Data Insert Part:1",
          "Dummy or Seed Data Insert Part:2",
          "Paginate Sort and Filtering"
        ]
      },
      "requirements": [
        "c#",
        "basic web programming knowledge"
      ],
      "description": "ASP.NET core 5 is a fantastic framework to developed rest API. but most of the course teach you only basic part, when they enter practical life or job life when they see various technology needed to developed a production grade application . Then they frustrated to think that what they teach.\nIn this course I try my best to teach my student a production grade application and developed their basement . All the latest technology i try to implement this course.\nAfter completing this course every developer make them ninja in software development.\nI always told people programming is nothing cause every problem you solved using condition , loop using variable. but main theme part of a good programmer is understand the  architecture and  life cycle of software. Scaling, single responsibility when u understand then you can easily develop production grade application\nHuge concept you learn from this tutorial series. asp net version 3 and version 5 has no major changes. Maximum changes done in framework level.\n\n\nConcept you learn form my course :\n1) REST API\n2) Layer Architecture\n3) Unit of Work Pattern\n4) Service Repository Pattern\n5) Message Broker\n6) Demo work for RabbitMQ\n7) Token based authentication system\n8) Base Repository Implementation\n9) MongoDb Implementation\n10) Redis implementation\n11) ElasticSearch implementation",
      "target_audience": [
        "asp .net core lover",
        "Microsoft lover",
        "rest api developer",
        "beginners",
        "advance",
        ".net developer",
        "asp net core"
      ]
    },
    {
      "title": "The Complete React.js Course: Beginner to Advanced (2025)",
      "url": "https://www.udemy.com/course/react-js-basic-to-advance-learn-by-doing/",
      "bio": "Master modern React (Learn By Doing)! React Query, Redux Toolkit, Context API, Tailwind, advanced patterns",
      "objectives": [
        "You will know everything about reat js",
        "You will learn how to build and optimize web applications",
        "You will be able to build complex web applications",
        "Deployment to server"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to react js",
          "Introduction to Components",
          "Tool installations",
          "How to Ask Question and Rate the course",
          "React installation",
          "React boiler plate",
          "How React js works",
          "Introduction to jsx",
          "comment in jsx",
          "Types of component",
          "Creating our first functional component",
          "Types of export",
          "Props",
          "Props.children",
          "Props Immutability",
          "Props destructuring",
          "function as props",
          "React State (useState)",
          "Event handling",
          "Conditional Rendering",
          "Map Method (List Rendering)",
          "Unique Key Props (Mapping)",
          "Regular css",
          "Css Module",
          "Form input (Controlled Component)",
          "React Fragment"
        ],
        "Hooks (React js Advance Topics)": [
          "Introduction To Hooks",
          "useState Hooks",
          "update state based on the previous state value",
          "Object as state variable",
          "Array As state variable",
          "Organize the code",
          "useEffect Intro",
          "Component did mount and update",
          "Conditionally run Effect",
          "effect clean up function",
          "Component will unmount",
          "Fetch multiple posts",
          "Button click id",
          "Implement context",
          "useContext for multiple context",
          "useReducer Hooks",
          "useReducer State and action object",
          "Multiple useReducer",
          "useState and useReducer",
          "useState Data Fetch",
          "useReducer DataFetch",
          "useCallback Hook",
          "useMemo Hook",
          "useRef Hooks",
          "useRef Hooks Timer",
          "Introduction To Context API"
        ],
        "YumEat Project": [
          "51 Building Yum Eat Website (react installation )",
          "Clean up boiler plate",
          "Create components",
          "Tailwind Installation",
          "TopNav Component",
          "Open and close the drawer",
          "SideNav Menu design",
          "SideNav Final Touch",
          "Featured component",
          "Quick delivery component",
          "Top Pick component",
          "Meal Component",
          "Sort Buttons",
          "Trending Categories",
          "Meal Component Key",
          "Trending Category count down",
          "Footer Component",
          "Testing and Fixing"
        ],
        "Building Netflix Clone": [
          "Netflix Clone (Create React App )",
          "Components and pages",
          "Setting Up the routes",
          "BackgroundImage reUseAble Component",
          "Header reUseAble component",
          "SignUp Page",
          "Login",
          "Login Fix",
          "SettingUp Firebase",
          "CreateUsers",
          "Login Authentication",
          "OnScrollEvent",
          "TopNav Component",
          "Global css",
          "TopNav css",
          "LogOut",
          "Hero Component",
          "Consistent Margin",
          "VideoPlayer Component",
          "MovieCard",
          "Card css",
          "Api Key",
          "Redux toolkit",
          "Fetch Genres",
          "Fetches Movies",
          "Global State",
          "Stop infinite Loop",
          "Styling Movie Component",
          "Render Movie on The Screen",
          "Performance Optimization",
          "Slider Control",
          "Implementing the Slider"
        ],
        "Dashboard Project (Building Dashboard website)": [
          "React js Installation",
          "Cleaning Up The Boiler Plate",
          "Understanding The Flow",
          "TopNav Component",
          "TopNav Css",
          "SideNav Component",
          "Side Nav Css",
          "Featured Item Component",
          "Featured Item Css",
          "Chart Component",
          "Chart Css",
          "Style Configuration",
          "Display Total Component",
          "Styling Display Total",
          "Order Widget Component",
          "Styling Order Widget",
          "Member Widget Component",
          "implementing the Routes",
          "Styling The Member Widget",
          "User List Table",
          "Refactoring",
          "Adding Custom Data",
          "Delete Button",
          "User Profile",
          "Profile Css",
          "Create User Route",
          "Create User Component",
          "Create User Css",
          "ProductLIst Component",
          "Product List Design",
          "Product List Css"
        ]
      },
      "requirements": [
        "Html",
        "css",
        "java script"
      ],
      "description": "About This Class\nWelcome to React for Beginners — a complete step-by-step course designed for web developers who are new to React.js. We’ll start right from the basics, so no prior React experience is required.\nReact combines HTML and JavaScript, which can seem tricky at first. Don’t worry — I’ll guide you through exactly when to use JavaScript and when to write HTML (JSX) so it becomes second nature.\nIn this course, you’ll learn:\nReact syntax and JSX basics\nHow to import and structure components across multiple files\nExtending components and managing attributes & state\nHandling click events and user interactions\nMaking API requests and integrating them into your app\nBy the end of this class, you’ll be able to build real-world projects including:\nA Netflix Clone\nA Professional Dashboard\nA Recipe Website\nAn Interactive Quiz App\nA Personal Portfolio Website to showcase your work\nAnd finally, we’ll deploy all of these projects online so you can share live links with potential employers, clients, or sponsors.\nWho Uses React?\nReact.js is everywhere — from major platforms like Netflix to smaller projects that need powerful, dynamic components. Because of its flexibility and popularity, React has become an essential skill for developers worldwide, making it a must-learn technology for anyone serious about web development.\nAbout the Instructor\nHi, I’m Edubaba Ehizeex, your instructor. Since 2015, I’ve been teaching web development and helping hundreds of students — including tens of thousands on Udemy — build the skills they need to thrive in tech. My goal is to make React approachable, practical, and fun for beginners.\nIf you’ve never worked with React before, this course is the perfect place to start. A solid foundation in JavaScript is recommended, so if you’re brand new to coding, you may want to learn JavaScript basics first. Otherwise, jump right in — I’ll walk you through everything step by step.",
      "target_audience": [
        "This course is for beginners of all level, who want to learn react basics and advance topics."
      ]
    },
    {
      "title": "Python Web Development: Building Interactive Websites",
      "url": "https://www.udemy.com/course/learn-web-design-and-development-course-from-scratch/",
      "bio": "Python-Powered Web Interactions: Building Dynamic Websites with CSS and JavaScript",
      "objectives": [
        "Build creative websites and webapps for business needs",
        "Learn to apply ChatGPT AI techniques for your Quick learning",
        "Create your own stunning, CSS layouts for awesome websites",
        "Apply Python coding for Data Science concepts",
        "Master front-end development using CSS & JavaScript back-end development using Python",
        "Advanced python will help you to work on python built in libraries",
        "Apply CSS, JavaScript and Python for Data science code on real-world tasks",
        "Create fully function web apps using Python and JavaScript",
        "Applying Python skills on machine learning, artificial intelligence concepts",
        "Generative Ai for programmers",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask a Great Questions",
          "How to ask a Great Questions",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "CSS Syntax",
          "Creating a first page with CSS Style",
          "What is Source code",
          "ChatGPT AI for software developers",
          "Generative AI for programmers",
          "Best Practices for Learning Online Course"
        ],
        "CSS Basic": [
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "CSS Classes",
          "CSS IDs",
          "Colors",
          "Backgrounds",
          "Floating",
          "Positioning",
          "Margins",
          "Padding",
          "Borders",
          "Color Text in CSS exercise"
        ],
        "CSS Intermediate": [
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "Font Family",
          "Font Styles",
          "Applying Google Fonts",
          "Box Model",
          "Icons",
          "Tables",
          "Navigation-Menu",
          "Dropdowns"
        ],
        "CSS Advanced": [
          "Advanced Selectors",
          "Forms",
          "Website Layout",
          "Rounded Corners",
          "Color Keywords",
          "Animations",
          "Pseudo Classes",
          "Gradients",
          "Shadows",
          "Calculations",
          "Creating Responsive Page"
        ],
        "CSS Expert": [
          "Button Styles",
          "Pagination",
          "Multiple Columns",
          "Image Reflection",
          "UI - UX Design",
          "Social Media Icons",
          "External CSS Style adding"
        ],
        "JavaScript Introduction": [
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Unlock the world of Python web development with \"Python Web Development: Building Interactive Websites.\" This course is designed for those who want to learn how to build dynamic, user-friendly websites using Python. Whether you’re a beginner or looking to enhance your web development skills, this course will guide you step-by-step in creating interactive, feature-rich websites using Python’s powerful web frameworks.\n\n\nYou’ll begin by learning the basics of Python programming, covering variables, control structures, functions, and more. As you progress, you’ll dive into popular Python development, learning how to build scalable and maintainable web applications. You'll discover how to design interactive user interfaces, manage responsive Web Design using CSS.\n\n\nThe course also focuses on adding interactivity to your websites. You’ll learn to use JavaScript to enhance the user experience, handle forms, and manipulate the DOM to create responsive, real-time interfaces. Additionally, you’ll explore how to integrate apps, send and receive data asynchronously, and manage form states.\n\n\nThroughout the course, you'll work on hands-on projects, building fully functional website designs like blogs, e-commerce platforms, and portfolio sites, ensuring that you gain practical experience. By the end, you’ll be ready to create and deploy your own interactive web applications, equipped with the skills to build dynamic, data-driven websites using Python.\n\n\nEnroll today and start building your own interactive websites with Python!",
      "target_audience": [
        "Beginner CSS, JavaScript Python developers curious about Data science",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to develop web applications using ChatGPT Open AI techniques",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Advanced UX Techniques - Novice to Pro!",
      "url": "https://www.udemy.com/course/advanced-ux-techniques-novice-to-pro/",
      "bio": "Understand how UX methods work. Learn hands-on how to plan your own cost-effective approach!",
      "objectives": [
        "Explore different research methods to help build a good user experience.",
        "Create a solid process that clearly communicates the benefits to the customer, which will build trust and can often lead to an increased budget.",
        "Improve your expertise to gain an advantage over the competition.",
        "Explore important concepts such as ideation, sketching, high-fidelity sketching, and prototyping.",
        "Explore ideation and sketching and how to generate ideas by understanding user and business needs.",
        "Explore high-fidelity prototyping, user interface styling and sketch symbols, typography styles, and more.",
        "Master interaction design and motion studies and build motion prototypes."
      ],
      "course_content": {
        "UX Design by Example": [
          "The Course Overview",
          "What Is UX Design",
          "Exploring the Methods of UX Research",
          "Building Your Personas",
          "Building Journey Maps and Storyboard",
          "Performing Brainstorming/Ideation Process – Design Thinking Method",
          "Working with Wireframe",
          "Exploring the Information Architecture",
          "Understanding Basic Principles and Heuristics in UX Design",
          "Building Your Prototype and Testing it on Users",
          "Usability Test",
          "Performing Analytical Testing",
          "Performing A/B Testing",
          "Test Your Knowledge"
        ],
        "Effective UX Design": [
          "The Course Overview",
          "Understanding UX Design",
          "Exploring the Double Diamond Process",
          "Meeting the Expectations",
          "Making All Pieces Come Together",
          "Adding UX to Agile Development",
          "Quick Methods to Validate Your Design",
          "Hands-on Activities",
          "Design Things Right",
          "Find Innovative Solutions",
          "Hands-on Activities",
          "Design the Right Things",
          "Getting Stakeholder Participation",
          "Successfully Pitch Your Design",
          "Knowledge Is King",
          "Quick Methods for Early Research",
          "Hands-on Activities",
          "Plan Your Process",
          "How to Get Funding",
          "Shortcuts (Not) Allowed",
          "Personal Progress",
          "Test Your Knowledge"
        ],
        "Advanced UX Techniques": [
          "The Course Overview",
          "Paper Sketch > Wireframe",
          "Sketch App and Setup",
          "Wireframe Assets",
          "Wireframes Pages – Idea Choice",
          "User Interface and Sketch Symbols",
          "Sketch Layers and Labels",
          "PNG Exporting",
          "Refreshing InVision Prototype",
          "UI Styling and Sketch Symbols",
          "UI Style Guide",
          "Typography Styles H1 - H6",
          "Color Styles Hex Code",
          "Imagery and Composition",
          "Headlines and Copy",
          "PNG Exporting",
          "Refreshing InVision",
          "Why Does Motion and Interaction Matter",
          "Review Motion Patterns",
          "Identify Areas That Need Animation",
          "Define Interactions and Motion Prototypes",
          "Separate Layers and Export Layer Assets",
          "Set Up Principle for Mac",
          "Upload/Import Assets",
          "Animate Components",
          "Iterate Animations and Re-Upload",
          "Export Video and Review"
        ]
      },
      "requirements": [
        "Basic familiarity with UX is helpful, but not mandatory."
      ],
      "description": "Designers/developers building a company website have to find the right way to fulfill the objectives of the company as well as that of their users. The need to provide the best results with a reasonable amount of effort, depending on the type of project, the scale, and the budget is a major challenge. UX design is a theoretical understanding of how users interact with websites. UX design is the process of enhancing user satisfaction with a product by improving the usability and accessibility provided by interacting with the product. With UX you’ll be able to design your applications in a better way. If you're a developer who wishes to learn and become an expert in UI / UX designing, prototyping, and testing, then this Course is for you.\nThis comprehensive 3-in-1 course is packed with step-by-step instructions, working examples, and helpful advice to master Advanced UX Techniques: ideation, sketching, high-fidelity sketching, and prototyping. You’ll begin with building a Storyboard for your UX design and work with a Wireframe to execute your UX design. Explore ideation and sketching and how to generate ideas by understanding user and business needs. Learn how to sketch and identify UI style guides, and review and sketch solutions. Explore high-fidelity prototyping, user interface styling and sketch symbols, typography styles, and more. Finally, Master interaction design and motion studies and build motion prototypes.\n\nBy the end of this course, you'll get to grips with advanced UX techniques and explore modern techniques such as sketching, wireframes, and high-fidelity prototypes!\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, UX Design by Example, covers all about UX design with practical examples. This is the most comprehensive, yet straightforward, a course in the UX designing. Whether you have never designed before or already know the basics, this course is for you! In this course, we will teach you the essentials of UX design so you can easily apply them to your product or service. This course will teach you about user experience in a practical manner. We start by helping you understand what UX design is and the different research methods to get you a good user experience. The course will give you hands-on experience in using UX design tools—for example, building a Storyboard, working with Wireframes, and their architecture. By the end of the course, you will know different methods to research and analyze your product from the user's perspective. The course supplies practical examples and shows you how some of the best brands have used UX to enhance the user experience.\nThe second course, Effective UX Design, covers Understand how UX methods work. Understanding how UX methods work. You will learn how to combine methods in a smart way to plan a cost-effective process without compromising your design research and ideation, which are the crucial foundation any successful product is built upon. You will start by seeing what actually drives UX Design and exploring the Double Diamond process and how you can meet the expectations of an actual UX Design. The course will then show you how to understand UX Design and how knowledge is its most important aspect. You will explore cost-effective techniques for your UX Design. You will then see how to Focus on your UX Design and create your own cost-effective UX design. Finally, you will learn to plan a cost-effective process for your UX. By the end of the course, you will be able to design your own cost-effective UX design process.\nThe third course, Advanced UX Techniques, covers exploring UX techniques such as sketching, wireframes, and high-fidelity prototypes. You will start off your journey by looking at how to set up a high-fidelity UX design process and defining the steps and interactions a user is engaging in. Learn to sketch wireframing, symbols and prototyping here. You will also learn how to export PNGs. Moving on, you’ll master high-fidelity prototyping; here you will learn to use interface styles, typography styles, color styles, and more. Further, you will master interaction design and motion studies, reviewing motion patterns and identifying areas that require animation. You will learn why we should use prototypes and Invisionapp, connecting prototypes via Invisionapp, and sharing. Finally, you will finish the course by looking at motion prototypes, setup principle by Mac, uploading assets, animating components, and exporting video and app assets for testing.\nTowards the end of this course, you'll get to grips with advanced UX techniques with this practical guide: sketching, wireframes, and high-fidelity prototypes!\nAbout the Authors\nKeren Rijensky is UX expert with 6 years of accomplishments in defining, designing and launching successful products used by millions of end users. She has a proven success at turning ideas into products by a process of collaborating and managing cross-functional teams, implementing best UX practices, encouraging a culture of usability-driven product development, careful implementation and user experience innovation. She is dedicated to staying current on design trends and technology. Keren is a team player, brainstormer, quick learner, proactive, tech geek and problem solver with an ability to zoom in and out in order to create a great product.\nYishay Cohen is a UX professional with over 14 years' experience. He has served as a Design Thinking advocate in IBM and is a certified Design Sprint Master and a Google Expert on product design, mentoring startups and teaching UX in various academies and companies. He has a passion for understanding users' problems and needs and translating them into products and features they'll love.\nTim Schoch is a freelance UX/Interaction designer from Switzerland. He has years of experience in the industry as a graphic designer and front- and back-end developer and is currently working as a full-stack UX specialist for websites, enterprise products, and mixed reality apps. Throughout his career, he has been interested in building easy-to-use stuff and prioritizing the user's needs. Besides his infectious enthusiasm for usable design, Tim holds a UX Design Master's Degree from Nielsen Norman Group.\nChris R. Becker is an Imaginative and creative Sr. UX designer/IxD/design thinker and educator, a creative thinker with the ability to design across media platforms from the web to iOS and Android as well as SaaS and service design. He is a versatile designer and systems thinker with problem-solving skills for User Experience Design, organized and passionate with a passion for following design problems from concept to finished product. He is well versed in Agile product development methodologies but flexible with the waterfall techniques as well. He applies LEAN UX methods to rapid prototyping, design research, and user testing to take ideas from the drawing board to the real world. He leads Design thinking workshops and UX deliverables, all the while using communication skills both in the classroom and for client presentations. Participates in making through Fine Art & Graphic Design background, which leads to a variety of creative thinking, design thinking, human-centered design research, user testing, and problem-solving skills. His studies have included courses in rapid prototyping, usability/heuristics, human-centered design research, design thinking, painting, sculpture, drawing, printmaking, archetypes, graphic design, typography, systems theory, media theory, programming, drawing, motion, and art history. Specialties: Design thinking, user experience design, information architecture, branding, identity design, conceptual modeling, rapid prototyping, user interface, brainstorming, product design, advertising, retail design, interactive art director, wireframes, application GUI design, multimedia presentations, production artist, webmaster, social media, UX strategy development.",
      "target_audience": [
        "Existing UX/UI designers or those who wish to enter the field of UX/UI Design, especially graphic designers, programmers, content strategists, and organizations keen to understand the core concepts of UX/UI design and explore UX techniques such as sketching, wireframes, and high-fidelity prototypes."
      ]
    }
  ]
}