{
  "courses": [
    {
      "title": "Automatización con Selenium Webdriver para principiantes",
      "url": "https://www.udemy.com/course/automatizacion-con-selenium-webdriver-para-principiantes/",
      "bio": "Aprende a automatizar pruebas de software",
      "objectives": [
        "Crear un proyecto de automatización con Selenium Webdriver, Java y Gradle",
        "Identificar elementos dentro de una página web usando xpath y css selector",
        "Utilizar el API de Selenium webdriver para interactuar con los elementos de una página web",
        "Crear aserciones para validar los resultados obtenidos vs los actuales"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Código Fuente",
          "Preguntas y soporte",
          "Contacto conmigo",
          "Recomendaciones generales",
          "Feedback del curso"
        ],
        "Planeación automatización": [
          "Estrategia automatización de pruebas",
          "Herramienta para seguir los avances de la automatización"
        ],
        "Configuración del entorno de trabajo": [
          "Herramientas requeridas para la ejecución de un script usando webdriver",
          "Descarga y configuración de JDK",
          "Descarga y Configuración de Maven",
          "Descarga y Configuración de Gradle",
          "Descarga e Instalación de Intellij IDEA",
          "Creación de Estructura Base del Proyecto Usando Gradle",
          "Creación de Estructura Base del Proyecto Usando Maven",
          "Importante usuarios Maven - Pom.xml Actualizado",
          "Importando un Proyecto Existente usando Intellij IDEA"
        ],
        "Introducción al API de Selenium de Selenium WebDriver": [
          "Creación de mi primer script",
          "Linea de comandos integrada en IntelliJ",
          "Comandos Básicos en IntelliJ Para Mejorar la Productividad",
          "Descarga de Mini Web Apps para practicar",
          "Conociendo el API de Selenium - SendKeys - FindElement",
          "Conociendo el API de Selenium - Interactuando con elemento Select",
          "Conociendo el API de Selenium - Click y Subida de Archivos",
          "Conociendo el API de Selenium - Cambio de foco entre tabs y GetText",
          "Creando Aserciones con AssertJ",
          "Explorando las aserciones de AssertJ",
          "Asegurando el cierre del browser en caso de que el test falle",
          "Anotaciones BeforeEach y AfterEach",
          "Practica - Buscando elementos en MercadoLibre",
          "Introducción a la localización de elementos",
          "Estrategias de localización de elementos"
        ],
        "Esperas en Selenium WebDriver": [
          "Implicit Wait",
          "Explicit Wait",
          "Fluent Wait"
        ],
        "Patrón de diseño Page Objects": [
          "Introducción a page objects",
          "Implementación de los Page Objects",
          "Clase base para los tests",
          "Trabajando con tablas - Page Objects"
        ],
        "Captura de pantalla": [
          "Captura de pantallas con Selenium - Tomando evidencias"
        ],
        "Reportes": [
          "Gestión del Driver - ThreadLocal",
          "Eliminando el paso del Driver por el constructor - Refactorización",
          "Integración con Allure - Gradle",
          "Integración con Allure - Maven",
          "Anotaciones para Allure @description y @step",
          "Adjuntar screenshot al reporte",
          "Tomar screenshots de forma automática"
        ],
        "Caracteristicas Avanzadas en Selenium 4": [
          "Relative Locators - Above",
          "Relative Locators - Below",
          "Relative Locators - Chaining",
          "Captura de mensajes de la consola",
          "Cambiando la Geolocalizacion",
          "Mockeando llamados a APIs"
        ],
        "Selenium IDE (Opcional)": [
          "Introducción",
          "Creación primer script",
          "Comandos/uso básico",
          "Flujos de control: Foreach",
          "Flujo de Control: Foreach parte 2",
          "Generación de valores aleatorios",
          "Aserciones",
          "Exportar Test de Selenium IDE a Selenium Webdriver",
          "Conclusiones"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación"
      ],
      "description": "Con el fin de soportar la integración continua y el despliegue continuo se hace necesario contar con mecanismos que nos permitan validar que nuestras aplicaciones cuenten con los requerimientos de calidad de software minimos para ser entregadas a nuestros clientes finales ¿pero como lograr esto a una velocidad tal que nuestro producto sea competitivo en el mercado?Para ello una práctica importante es la automatización de pruebas de software. Este  curso se diseñó con el fin de enseñar al estudiante como crear un proyecto desde 0 usando Selenium Webdriver, Java y Gradle, con el fin de automatizar pruebas relacionadas a un sitio web y poder aportar a la organización desde un ámbito tan importante como es la calidad del software. Con este curso se pretende que el estudiante aprenda los conceptos básicos de automatización de pruebas y cree sus primeros scripts usando una de las herramientas más usadas en el mercado al día de hoy.\nCon este curso lograras entender como usar Selenium Webdriver, conocerás los métodos básicos como navegar, localizar los elementos, ejecutar acciones sobre dichos elementos, como por ejemplo escribir en las cajas de texto, dar click sobre los botones, links, entre otros. Durante el desarrollo del curso también se le brindará al estudiante diferentes tips aprendidos de la experiencia del tutor.",
      "target_audience": [
        "Ingenieros de calidad de software",
        "Ingenieros de desarrollo de software",
        "Personas interesadas en aprender lo relacionado con automatización de pruebas de software"
      ]
    },
    {
      "title": "Developing Real-Time Spring Boot Unit & Integration Testing",
      "url": "https://www.udemy.com/course/unit-testing-and-integration-testing/",
      "bio": "Developing Real-Time Spring Boot Unit Tests and Integration Tests : JUnit 5, Mockito and Test Container",
      "objectives": [
        "Understanding how to build unit tests",
        "Understanding how to build integration tests",
        "Working with test containers",
        "Using Junit and Mockito to implment unit testing",
        "Apply Test Driven Development (TDD) using JUnit 5, Mockito and Spring Boot",
        "Spring Boot developers with JUnit and Mockito testing are in HIGH-DEMAND.",
        "You can download all source code for offline LEARNING and REVIEW."
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview",
          "Course Sections"
        ],
        "Preparing Development Environment": [
          "Agenda",
          "Step 1 : Download and Install JDK",
          "Step 2 : Download and Install the IntelliJ IDE",
          "Step 3 : Download and Install MySql"
        ],
        "Introduction to 'JavaCorner-Admin' System": [
          "Agenda",
          "Business Requirements + Use Case",
          "System Roles + Actors",
          "UML Class Diagram",
          "Application Demo"
        ],
        "Step 1 - Importing the Base Project": [
          "Importing the Base Project"
        ],
        "Step 2 - Creating Unit Tests using Junit and Mockito": [
          "Part 1 - Test Course Service (Start)",
          "Part 2 - Test Course Service (End)",
          "Part 3 - Test Instructor Service (Start)",
          "Part 4 - Test Instructor Service (End)",
          "Part 5 - Test Role Service",
          "Part 6 - Test User Service",
          "Part 7 - Test Student Service (Start)",
          "Part 8 - Test Student Service (End)"
        ],
        "Step 3 - Configuring Test Containers for Integration Tests": [
          "Part 1 - TestContainers Dependencies",
          "Part 2 - Create MySQL Container",
          "Part 3 - Generate InitialData Script"
        ],
        "Step 4 - Testing Repositories using TestContainers (@DataJpaTest)": [
          "Part 1 - Course Dao Integration Tests",
          "Part 2 - Instructor Dao Integration Tests",
          "Part 3 - Role Dao Integration Tests",
          "Part 4 - User Dao Integration Tests",
          "Part 5 - Student Dao Integration Tests",
          "Part 6 - Reuse same Database Container for Testing"
        ],
        "Summary": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Java: Java 8 or higher",
        "Spring Boot 2 or Spring Boot 3"
      ],
      "description": "Spring Boot :\nIs the most popular framework for building enterprise Java applications. Spring Boot includes testing support to develop unit tests and integration tests using JUnit, Mockito and MockMvc. By developing tests, you can create applications with better code design, fewer bugs, and higher reliability. This course shows you how to take full advantage of Spring Boot's testing support.\n\n\nJUnit :\nDevelop JUnit Tests\nSet up projects to use JUnit\nApply JUnit assertions: Equals/Not Equals and Null/NotNull\nApply JUnit assertions: Same/Not Same and True/False\nLeverage JUnit lifecycle annotations\nDefine custom display names for JUnit tests\nCheck for exceptions and timeouts\nDefine execution order in JUnit tests\nPerform code coverage analysis for JUnit tests\nApply conditionals with JUnit tests\n\n\nTest Driven Development (TDD) :\nApply Test Driven Development for build tests and application code.\nCreate a failing test first.\nUpdate your code to make the tests pass.\nTake your tests from RED to GREEN.\nApply TDD to a coding project.\nLeverage parameterized tests with TDD.\n\n\nMocking with Mockito :\nIdentify the need for mocking during test development\nLeverage Mockito in JUnit tests\nApplying the @MockBean annotation for injection\nThrowing exceptions with Mocks\n\n\nDatabase Integration Testing :\nIdentify the need for database integration testing during test development\nAdd database setup and clean code using @BeforeEach and @AfterEach\nLeverage an embedded database to ease with testing setup and maintenance.",
      "target_audience": [
        "Java Web Developer",
        "JEE Developer",
        "Web Developer",
        "Web Programming",
        "Java Programming"
      ]
    },
    {
      "title": "Testing react applications for professional engineers",
      "url": "https://www.udemy.com/course/testing-react-applications/",
      "bio": "Learn the best practices and strategies to effectively test your react components and applications.",
      "objectives": [
        "Shipping confident, well tested and stable code",
        "The best practices for testing react applications",
        "What should you test in your frontend applications",
        "How to test third-party providers such as Stripe",
        "How to test navigation flow with react router",
        "How to test your application for accessibility",
        "How to test custom hooks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get the project source code"
        ],
        "Testing with the DOM": [
          "Test a component with ReactDOM",
          "Test a checkbox with react testing library",
          "Fire native events on elements",
          "Checked and unchecked checkbox states",
          "Automate accessibility tests",
          "Find elements using text and alt text",
          "Test for absence of elements"
        ],
        "Test context connected components": [
          "Test context connected elements",
          "Test array rendering elements",
          "Test parent components that render children",
          "Test context provider values",
          "Test the toggle scroll behaviour"
        ],
        "Test react hooks": [
          "Test the use filters hook",
          "Test use outside click hook",
          "Test hook cleanup functionality"
        ],
        "Integration tests - Test API connected components": [
          "Integration test for fetch products",
          "Generate test data with test-data-bot",
          "Test open and close off canvas",
          "Test product search functionality"
        ],
        "Test react router connected components": [
          "Introduction to part 2",
          "Test router dependent components with memory router",
          "Test a component with use location hook",
          "Test a user can navigate to a page"
        ],
        "Test the checkout process": [
          "Test add product to cart",
          "Test checkout with stripe"
        ]
      },
      "requirements": [
        "Basic knowledge of React"
      ],
      "description": "Hi ! I' m Kati Frantz , and I've built tons and tons of React applications. Everyone can ship software, but shipping quality software requires a lot of quality assurance and best practices. A professional ships confident, well tested, and stable code.\nThis is the standard, but testing react applications can be painful and complex. What are the best practices ? What should I test ? How can I test a react router based, redux store connected stripe checkout form ???\nBe glad you found this course, because this course will show you the best practices for testing components and full scale applications.\nWe'll be testing an e-commerce application ?? with Stripe Checkout. Here are some of the features we'll be testing:\nReusable checkboxes\nExternal API powered products listing\nProduct tiles accessibility\nOff canvas filter menu (with portals)\nPrevent scroll on canvas open\nEvent listener cleanups\nDebounced products search\nContext dependent components\nReact router page navigation\nRedux connected components and pages\nCustom hooks\nCheckout modal\nStripe checkout\nBy the end of this course, you'll be able to:\nImplement a testing solution for any react application\nTest components connected to state management stores\nTest components that call external APIs\nTest components that use other component packages\nTest router connected components\nTest components that use a huge range of design patterns such as render props and composition.\nTest components with accessibility in mind.\nAnd so much more ! Go ahead and enroll to the course and join me to learn techniques and strategies you can use in applications and job starting today!",
      "target_audience": [
        "React developers wanting to up their React skills",
        "Senior react engineers who want to create a testing culture at their organisation",
        "Developers looking for advanced react knowledge, design patterns and best practices",
        "Junior react developers with desire for more react knowledge"
      ]
    },
    {
      "title": "Software Testing Simple (Software Quality Assurance QA)",
      "url": "https://www.udemy.com/course/software-testing-simple/",
      "bio": "Easiest practical Testing course on the market that will explain you what is QA and testing and what QAs are doing!",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "This course is for complete beginners with 0 experience as QAs",
        "No prerequisites at all",
        "No coding or any Tech previous experience required"
      ],
      "description": "This 3 hours course will be your first step in Testing. Software testing is a high demandable field with competitive compensation. It is also known as the \"back door\" to Tech World because it is the easiest way to get into the field without learning programming languages!\nThese days we visit hundreds of websites and a lot of mobile applications on our phones - all of those were tested before we (users) see them. Only 1 position out of 6 is filled by Tech companies are things are getting even worse...\nThat's why it is never been a better time to become a Software Tester (QA Analyst). This course will be your perfect start in QA.\nIn this course, I will use simple examples (Simpsons, car dealerships, and more) to explain to you step by step what is Testing and how easy it is to become QA Analyst.\n\nTopics that are covered:\n- Software Development Life Cycle (SDLC)\n- Testing definition\n- Defects (bugs)\n- Types of testing: UI testing, Functional testing, Compatibility testing, Localization testing, Performance testing, Usability testing, Security testing, s Ad-hoc testing, Cross-platform and Cross-browser Testing\n- How to capture screenshots\n- Bug triage\n- Severity and Priority\n- Test cases\n- Test plans\n- Smoke, Sanity and Regression testing\n- How to test on Mobile devices\n- How to use Chrome Mobile view\n- Modern browsers and segmentation\n- How to test Android \\ iOS apps without a device\n- Positive and Negative Testing\n- Boundary Value Analysis?\n- What is Equivalence Partitioning testing?\n- Web Architecture, Back-end and Front-end testing\n- How to debug front-end or back-end issues (must have)\n- Builds and Releases: Deployment, Release\n- User Acceptance Testing (UAT)\n- QA Interview: How to prepare, How to write resume, Education requirements for QAs, Where to apply for QA job, Contract vs Full-time QA job,\nAgency (Recruiter) vs Direct Hire, Interview Process, How to apply on LinkedIn and Glassdoor\n- QA resume screening\n- QA phone screening\n- Tell me about yourself story\n- Tell me about your project\n- QA technical interview questions\n- QA personality interview questions\n\nTest Automation is not covered in this course.\nI also cannot upload more than 3 hours of content due to Udemy limitations for Free Course, otherwise, I would. Thanks for understanding!\nWelcome to the amazing world of Software testing!",
      "target_audience": [
        "Anyone who is looking to start a carrier in Software Testing",
        "People who do not have any experience in Software Industry but want to get in",
        "Graduates of different bootcamps and schools who is struggling to find a job in IT",
        "People who is curious about Software testing and wants to get an idea of what it is",
        "Anyone who is thinking that QA is very complicated and you cannot do it"
      ]
    },
    {
      "title": "Performance testing using LoadRunner12.5",
      "url": "https://www.udemy.com/course/performance-testing-using-loadrunner/",
      "bio": "LoadRunner Basics",
      "objectives": [
        "Will be ready to automation application for performance testing",
        "Ready to face interview in performance testing using LoadRunner"
      ],
      "course_content": {
        "LoadRunner Introduction": [
          "LoadRunner Introduction",
          "LoadRunner Installation",
          "Recording in LoadRunner",
          "Protocol Analyzer",
          "Running Script in Loop",
          "Actions",
          "Action Block",
          "Transactions",
          "View Transactions Result",
          "Rendezvous Point",
          "Parametrization Basics"
        ],
        "Controller": [
          "Controller Introduction",
          "Controller - Create First Scenario",
          "Create Manual Scenario in Group mode",
          "Create Manual Scenario in Percentage mode",
          "Covert Percentage mode to Group mode and Vice versa",
          "Set Rendezvous Point Policy"
        ]
      },
      "requirements": [
        "Setup machine with Windows OS",
        "Download LoadRunner latest version"
      ],
      "description": "LoadRunner is a Licensed tool  from HP for performance and load automation testing. Very widely used in industry, it support web based application & also support almost all commonly used protocols.\nThis course is specially designed for Software Testing professionals, This will take students from basic level to advance in decent pace videos.\nHere we will cover basic to advance concepts of LoadRunner & performance testing also we have covered many interview question which are asked in interviews\nIn this course we will be learning in-depth of JMeter tool and will also use some good plugins available for jmeter.\nWe also cover distributed testing using LoadRunner\nAfter going through the course you can easily measure performance of any web based application / Service and can crack performance testing related interviews.",
      "target_audience": [
        "Professionals working in Manual Testing",
        "Performance testing aspirants",
        "Automation testers want to start career in loadrunner"
      ]
    },
    {
      "title": "Software Testing with AI Agents | Agentic AI Testing",
      "url": "https://www.udemy.com/course/software-testing-with-ai-agents-agentic-ai-testing/",
      "bio": "Learn how to create and Army of AI Testing Agents with Microsoft Autogen, Chatgpt, Langchain, Browser Use, FlowiseAI",
      "objectives": [
        "Learn the basics of AI",
        "Learn the architecture and components of AI Agents",
        "Understand which are the tools out there in the world of Agentic AI",
        "Understand how to use AI Agents it Test automation",
        "Learn how to create an automation AI Framework with Playwright and ZeroSTEP",
        "Learn the basics of Microsoft Autogen",
        "Learn how to create agents that self improve and evaluate a task",
        "Understand the Basics of Browser - Use an agentic ai Operator style",
        "Understand how memory tokens and context affect the results of Gen AI",
        "Learn how to migrate tests from one technology to another",
        "Gain understanding of Flowise AI, and agentic AI toolkit",
        "Generate context aware tests with Langchain and python",
        "Hand on Laboratories with Python",
        "Playwright and JS AI Framework Creation",
        "Access to Github Repo for you to simply use",
        "Learn to use Playwright agent mode with MCP and Copilot",
        "Learn to use Playwright agent mode with OPEN AI Codex Agent"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About your instructor",
          "Agentic AI - Demo On AI Agent that can Automatically Create Tests",
          "Do not skip - AI for Testing the DOs and DONTs"
        ],
        "Demo on Software Testing agents in the SDLC": [
          "DEMO - Agents that critique stories",
          "Demo - Using AI Agents to Identify Test Cases",
          "AI Agents will perform acceptance test and log steps",
          "Demo - Copilot Playwright Script Generation",
          "AI Agents Automatic Peer Review - PR Close Review"
        ],
        "Environment Preparation": [
          "Resources and links from the course",
          "Install Python",
          "Install PIP for Python",
          "Install NPM and Node.js",
          "Install VSCode",
          "See the application under Test",
          "Get an OPENAI API Key"
        ],
        "Introduction to basics of AI, Agentic AI and parameter tunning": [
          "Introduction to the Modules of AI",
          "Natural Language Processing - NLP",
          "Types of Machine Learning",
          "Importance of Training Data",
          "What is a token in LLMs",
          "Introduction and demo on Retrieval Augment Generation - RAG",
          "Fine tunning of AI and how it impacts performance",
          "What is Agentic AI",
          "Architecture of Agentic AI"
        ],
        "Open AI Codex - AI Coding Agent for Testing": [
          "Open AI Codex - Understand what is Codex - 01 Agent",
          "Open AI Codex - Configure Codex for your environment",
          "Open AI Codex - Configure the Agents.md File",
          "Open AI Codex - Create a powerful Agent.md file - fix the previous one",
          "Open AI Codex - Use Codex to generate invalid test data",
          "Open AI Codex - Generate Test that use invalid test data to simulate failure"
        ],
        "Agentic AI - Browser -Use - Browser best automation": [
          "Agentic AI - Browser -Use - What is it",
          "Agentic AI - Browser -Use - How to install",
          "Agentic AI - Browser -Use - Resolve Browser Errors",
          "Agentic AI - Browser -Use - First Run of Browser Agent",
          "Agentic AI - Browser -Use - Generate Tests based on Application",
          "Agentic AI - Browser -Use - Automation Example for POM in Selenium Java"
        ],
        "Microsoft AutoGen - Collaborating Agents": [
          "What is Microsoft Autogen - Agentic Creation Framework",
          "Installing Microsoft Autogen",
          "Autogen - How to define an agent -Chatbot",
          "Autogen - Create 2 agents that talk to each other",
          "Autogen - Adding success criteria - End Conversation",
          "Autogen - creating an agent that recursively enhances test cases"
        ],
        "Playwright MCP Server with Github Copilot and VS Code": [
          "Activating Free Github Copilot",
          "Installing Playwright MCP",
          "Validate Playwright MCP Server Install",
          "Test Case Generation with MCP Playwright and Copilot"
        ],
        "Flowise AI - Test Case Generator Tool": [
          "Agent flows",
          "What is Flowise AI - Drag and Drop AI Orchestration tool",
          "Agentic AI | AI Agents - Installing Flowise AI Locally",
          "Agentic AI | AI Agents - Prompt Chaining",
          "Agentic AI | AI Agents - Interact with files",
          "Agentic AI | AI Agents - Generate Automated Tests from Webpage"
        ],
        "Zero Shot - Playwright AI Agent for AI Automation": [
          "Install Playwright and Demo Test",
          "Deciding what is most important for Testing",
          "Debug manually code",
          "Completing the Test and generating first Draft Code with Mini o1 Model",
          "Configuration File and more Options",
          "Headless Execution and screenshot only on error",
          "Run Tests on multiple Browsers",
          "Playwright Workers: Executing Tests in Parallel",
          "AI Agent Playwright - ZEROSTEP What is it?",
          "AI Testing Agents - Installation and Usage of ZeroStep",
          "AI Testing Agents -Example How to Use the ZeroStep for Playwright"
        ]
      },
      "requirements": [
        "Basic understanding of AI and Gen AI",
        "A Windows 10 or 11 PC",
        "Desire to learn the hottest new skill out there",
        "A Chat GPT API key and some 5$ Credits"
      ],
      "description": "Step into the future of software testing with AI-driven automation. This course is meticulously crafted for both newcomers and experienced professionals seeking to harness the power of AI Agents in test automation. Whether you’re exploring Agentic AI for the first time or looking to refine your expertise, this course delivers deep insights into state-of-the-art tools, frameworks, and methodologies shaping the industry.\nThought by one of the best Teachers out there with over 12 courses and 25.000 Students . Money back guarantee in case you do not find it useful.\n\n\nWhat You’ll Gain:\n1. Foundations of AI & Agentic AI – Grasp the fundamental principles of AI and its evolution into intelligent agents.\n2. AI Agent Architecture – Deconstruct the anatomy of AI Agents, understanding their core components and functionality.\n3. Essential Tools & Frameworks – Get hands-on with Microsoft AutoGen, Flowise AI, LangChain, and Python, mastering the ecosystems driving Agentic AI.\n4. AI-Driven Test Automation – Discover how AI-powered agents revolutionize software testing, enhancing speed, accuracy, and scalability.\n5. Building Intelligent Automation Frameworks – Leverage Playwright and ZeroSTEP to design next-generation testing infrastructures.\n6. Context-Aware Testing Strategies – Implement advanced techniques such as memory tokens and contextual awareness to optimize AI-driven validation.\n7. AI-Powered Browser Automation – Master sophisticated AI operators for seamless, intelligent browser automation.\n8. Self-Learning AI Agents – Develop adaptive AI agents capable of self-improvement, continuous evaluation, and autonomous decision-making.\n9. Seamless Test Migration Across Tech Stacks – Learn best practices for transitioning automated tests across diverse technologies without disruption.\n10. See Playwright agent mode  with MCP and Github Copilot in VS Code\n11. Use Open AI Codex - AI Agentic Coding together with Playwright for increased speed\n12.  80 percent of the material is laboratories and practice to make sure that you get the most of out this material\nThis learning experience will equip you with the expertise to integrate AI-driven intelligence into software testing, elevating efficiency, precision, and scalability.",
      "target_audience": [
        "Production Owners",
        "Software Testers",
        "Chief of AI",
        "Quality Assurance Engineers",
        "Devops Engineers",
        "Citizen Developer"
      ]
    },
    {
      "title": "Selenium WebDriver with Java -MasterClass.",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-w/",
      "bio": "Core Java, Selenium WebDriver,Automation testing",
      "objectives": [
        "By the End of the course you will be as much trained to automate any web based application using Selenium",
        "With all this knowledge gained, you should be easily able to clear Selenium Automation interviews",
        "Automate tests using Selenium WebDriver and Java",
        "InDepth understanding of real time Selenium CHALLENGES"
      ],
      "course_content": {},
      "requirements": [
        "No prior Java / coding knowledge required as everything is taught from the scratch",
        "All topics are covered in detailed with live programming in the lectures which will make you feel as in you are studying in a live class room"
      ],
      "description": "#1  Trending Welcome to this most recent Selenium Automation testing course of 2024.\nThis course covers the latest version of all the Automation tools.\nThe course is specially designed so that you do not need Java coding experience to start this course. Even non-programming candidates can follow this course comfortably\nThe course is designed so that no programming language students can understand every topic easily with non-technical examples.\nCourse Is for:\nQuality Assurance professionals and Manual testers looking to start career in test automation\nQuality Assurance Automation professionals willing to intensify their current test automation skill sets\nFresh Graduates who want to make a dream career in software engineering\nHuge list of real time and practical examples are provided throughout the sessions\nAfter watching all the videos, you will be able to answer most of the interview questions, as all the topics are covered from basic to advanced level\nSessions covering the development of different frameworks are also covered in detailed\n\n\nAll the topics include examples from real-time application Web applications.\n\n\nRun First Test Case\nIn this lecture, you will learn how to write and execute your first Selenium WebDriver test case. You will be guided through creating a simple test, understanding the test structure, and running the test using an IDE like Eclipse.\nLocators Identification Introduction\nHere, you will be introduced to the concept of locators in Selenium WebDriver. This lecture will explain the importance of identifying web elements and give you a foundational understanding of different types of locators like ID, name, class, and more.\n8 Locators in Selenium\nThis lecture dives deeper into the various locators available in Selenium WebDriver. You will learn about the eight main locators, including XPath, CSS selectors, and more, and how they help in identifying web elements accurately.\nSelectorsHub Chrome Extension\nLearn how to use the Selectors Hub Chrome extension to inspect and generate locators for web elements. This lecture provides a walkthrough on how to integrate this powerful tool into your Selenium testing workflow to simplify the process of identifying elements on a webpage.\nHandle Windows Introduction\nThis lecture introduces window handling in Selenium WebDriver. You will learn how to manage multiple browser windows or tabs within your test cases, and how to switch between them effectively.\nWindow Handle Methods\nIn this session, you will explore the different methods available in Selenium WebDriver for handling windows. You'll gain a practical understanding of how to open new windows, switch between them, and close them programmatically.\nWebDriver & WebElements Methods Introduction (Preview enabled)\nThis lecture provides an introduction to the WebDriver interface and WebElement methods. You will learn about common actions you can perform on web elements, such as clicking, sending text input, and retrieving attributes.\nWebElement Methods\nDive deeper into WebElement methods and their use cases. This lecture explains how to interact with web elements programmatically, including methods like click(), sendKeys(), and getText(), among others.\nSelect Class Introduction\nThis lecture introduces the Select class in Selenium, which is used to handle dropdowns and multi-select options in web applications. You will learn how to work with different dropdown menus programmatically.\nSelect Class Methods-1\nThis session will cover the basic methods available within the Select class. You will learn how to select options by value, visible text, or index in dropdown elements, along with best practices for working with dropdowns in Selenium.\nActions Class Introduction\nGet an introduction to the Actions class, which allows for complex user interactions such as mouse movements, keypresses, and hovering actions. You will understand the significance of Actions class in scenarios like drag-and-drop and other advanced interactions.\nKeyboard Methods\nThis lecture focuses on keyboard interactions in Selenium WebDriver. You will learn how to simulate keyboard inputs and shortcuts (e.g., pressing Enter, Tab, etc.) using the Actions class.\nMouse Methods\nFinally, in this lecture, you will explore various mouse actions such as click, double-click, right-click, and hover using the Actions class. You’ll understand how to interact with elements that require advanced mouse movements.",
      "target_audience": [
        "The course is designed in a such a way that even a beginner with zero knowledge in Manual testing or Automation or programming can master this course",
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Automation testers who wants to enhance their current skills",
        "Graudates who want to kick start their Carrier in IT World"
      ]
    },
    {
      "title": "Rest API Testing (Automation) with Playwright & TypeScript",
      "url": "https://www.udemy.com/course/rest-api-testing-automation-with-playwright-typescript/",
      "bio": "Learn how to develop a robust Playwright & Typescript API automation framework from the ground up.",
      "objectives": [
        "How to setup your own local development environment. (IntelliJ and VSCode)",
        "Planning out our API automation suite coverage with Postman.",
        "Developing our first automation test with Playwright and JavaScript.",
        "GET, POST, PUT, PATCH and DELETE automation tests with Playwright & JavaScript.",
        "Developing our first GET cucumber scenario together.",
        "Introducing Cucumber World into our framework - Segregated test context.",
        "Passing our retrieved API response in segregated context across step definitions leveraging Cucumber World.",
        "Adding Lintrc to ensure code quality for our automation framework.",
        "Customising the cucumber-js on runtime - Dynamic Cucumber runtime arguments.",
        "Adding ENV files for better environment variables management.",
        "Introducing Global Configuration into our framework to enable dynamic host routes.",
        "Asserting on our JSON response within our automation test.",
        "Adding the Cucumber html reporter to review automation results.",
        "Adding parallel and retry capabilities to our automation framework.",
        "DELETE’ing our first post and asserting on an empty JSON response.",
        "Posting a custom json payload to our create new records.",
        "Editing posts with PATCH and asserting on our edited response.",
        "Updating posts with PUT.",
        "Asserting on unsuccessful response if we attempt to update a post that does not exist."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up your development environment": [
          "Getting started with node.js",
          "Setting up your development environment - Intellij",
          "Setting up your development environment - VSCODE",
          "Key Learnings",
          "Quiz time!"
        ],
        "API Testing with Playwright and JavaScript": [
          "Planning our API automation coverage using Postman - part 1",
          "Planning our API automation coverage using Postman - part 2",
          "Planning our API automation coverage using Postman - part 3",
          "Creating our API end-to-end automation project structure and e2e folder",
          "GET, POST, PUT, PATCH and DELETE with Playwright and JavaScript - part 1",
          "GET, POST, PUT, PATCH and DELETE with Playwright and JavaScript - part 2",
          "GET, POST, PUT, PATCH and DELETE with Playwright and JavaScript - part 3",
          "GET, POST, PUT, PATCH and DELETE with Playwright and JavaScript - part 4",
          "Key Learnings",
          "Quiz time!"
        ],
        "Introducing Cucumber and TypeScript": [
          "Running our first cucumber automation test",
          "Introducing Cucumber World - part 1",
          "Introducing Cucumber World - part 2",
          "Passing our API response to cucumber steps with Cucumber World - part 1",
          "Passing our API response to cucumber steps with Cucumber World - part 2",
          "Introducing Lintrc to ensure code quality in our automation framework",
          "Key Learnings",
          "Quiz time!"
        ],
        "Environment Variable Management and Custom Global Configuration": [
          "Customise the cucumber-js on runtime - part 1",
          "Customise the cucumber-js on runtime - part 2",
          "Environment files for better environment variable management",
          "Introducing global configuration - Reusable getResponse function - part 1",
          "Introducing global configuration - Reusable getResponse function - part 2",
          "Key Learnings",
          "Quiz time!"
        ],
        "Cucumber HTML Report (Parallel and Retry)": [
          "Adding more GET automation tests to our suite - part 1",
          "Adding more GET automation tests to our suite - part 2",
          "Introducing the cucumber html reporter - Adding Parallel and Retry capabilities",
          "Adding our first automation test for DELETE",
          "Key Learnings",
          "Quiz time!"
        ],
        "The Final 3 - Post, Patch and PUT and asserting on response text errors": [
          "Creating posts with POST - part 1",
          "Creating posts with POST - part 2",
          "Editing posts with PATCH",
          "Updating posts with PUT",
          "Validating our json payload exists",
          "Asserting on response text errors",
          "Key Learnings",
          "Quiz time!"
        ],
        "Conclusion": [
          "Concluding.. for now! More content coming soon :)"
        ]
      },
      "requirements": [
        "The course has been designed to take you from beginner to expert in building a robust API automation framework.",
        "You can complete this entire course on MAC, Windows on Linux."
      ],
      "description": "This course has been designed to simulate a real-world experience in building both a barebones Playwright and JavaScript API Automation framework and a Cucumber, Playwright & TypeScript API automation framework from the ground up for a fully-featured API.\n\n\nUpon completion, you will be able to apply your learnings and the automation framework you have built into your respective companies and projects. We are confident you will become an expert in building a world-class automation framework.\n\n\nOur course and the automation framework we will build together has been developed with guidance from some of the globes leading testing and software engineering professionals and because of that we believe we can offer an incredible course where we will:\n\n\n- Plan and roadmap your automation coverage with Postman.\n- Develop your API automation framework against a real API.\n- Build two end-to-end automation frameworks from the ground up for a full-featured end-to-end API.\n- Evolve your skills and continuously improve your automation framework as we progress through the course\n- Learn how to build an object-orientated – engineer-reviewed and approved automation framework.\n\n\nWe want this course to be the best decision you have ever made for your personal growth when it comes to improving your knowledge and skills in API test automation framework architecture.\n\n\nAcross many hours of exciting content, I will be at the bottom right of your screen instructing and cheering you along throughout the course. You will have everything you need to learn how to build a robust API automation framework.",
      "target_audience": [
        "Manual testers interested in learning Automation",
        "Automation Engineers",
        "Software Testers",
        "Software Engineers",
        "IT Professionals"
      ]
    },
    {
      "title": "API TestAutomation with SoapUI, includes Maven,Git & Jenkins",
      "url": "https://www.udemy.com/course/rest-api-automation-with-soapui-beginners-crash-course/",
      "bio": "No Coding Rest API Testing & Automation with SoapUI | Maven with SoapUI | Execute Tests in JENKINS For CI/CD",
      "objectives": [
        "How to do Rest API Testing/Automation with SoapUI(OpenSource)",
        "Webservice Testing with Opensource SoapUI",
        "Testcases and test steps writing in SoapUI",
        "SoapUI with Maven Automation Testing",
        "About the most popular CI/CD automation tool JENKINS",
        "How to execute SoapUI tests from Jenkins, with nice HTML formatted test report",
        "How to install and configure Jenkins in Windows machine easily.",
        "Integration of SoapUI and Jenkins for API Testing",
        "Boost your resume with API Automation skills without any coding",
        "Learn about Rest API methods and Json format",
        "Know about FREE public Rest API's for testing, prototyping",
        "About Maven build tool"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Course Overview"
        ],
        "Getting Started: SoapUI Config and Public APIs": [
          "SoapUI Installation/Configuration",
          "Create/Add RestAPI Project, Add Testcase/Suite in SoapUI",
          "Free Public APIs-1",
          "API URL changed",
          "Free Public APIs-2"
        ],
        "HTTP Verbs: Creating Requests-Response in SoapUI": [
          "GET Request",
          "POST Request",
          "PUT/Update Request",
          "DELETE Request",
          "Quiz1"
        ],
        "Validating API with SoapUI Assertions": [
          "Contains & Not-Contains Assertions",
          "JsonPath Count and Match Assertions",
          "Quiz2"
        ],
        "TestCase and TestSteps in SoapUI": [
          "Adding Testcase, TestSteps",
          "Properties in SoapUI",
          "More About Properties in SoapUI",
          "Quiz3",
          "Property Transfer in SoapUI",
          "Quiz4",
          "RunTestCase Step in SoapUI"
        ],
        "TestCases Writing in SoapUI": [
          "Prepare for Writing Testcases",
          "TC1: Verify Create User",
          "TC2: Verify Get User using ID",
          "TC3: Verify duplicate email, and firstname"
        ],
        "Test Execution And Test Reports using Jenkins": [
          "Add Test & Execute From SoapUI Console",
          "Jenkins Install and Setup",
          "Execute SoapUI Tests From Jenkins(CI/CD tool)"
        ],
        "Maven for SoapUI Test Execution": [
          "Section Intro",
          "Maven Basics",
          "Installing Maven(windows)",
          "SoapUI Maven Pom File",
          "Execute SoapUI Test from Maven"
        ],
        "CI & Automated Testing-Git, Github, Jenkins": [
          "Section Intro",
          "Git and GitHub Intro",
          "Git installation & GitHub Account",
          "Working with Git: Local Cmds",
          "Working with Git: Remote Cmds",
          "GitHub repository And push project files",
          "Jenkins job for test execution"
        ],
        "Extras(But Important)": [
          "API Headers - Setting Headers from Properties and From API Response Dynamically",
          "SoapUI Workspace And Export/Import Project",
          "Jenkins Plugin for TestReporting"
        ]
      },
      "requirements": [
        "No pre-requisites, although familiarity about testing concepts is helpful",
        "A PC with Internet connection",
        "Able to install software application in Windows 10"
      ],
      "description": "Hi! Welcome to the Rest API Automation with SoapUI, Beginners Course, the exclusive course you need to get started and master API Testing and Automation without the need to write any code.\nUpdated:\n- Added Maven to execute SoapUI Tests\n- Added Jenkins sections to execute and report tests easily:\nHow to easily install and setup/configure Jenkins in windows.\nHow to create Jenkins jobs to execute the tests, without need to copy/paste xml files- edit from SoapUI and directly execute tests from Jenkins.\n------------------------\nNowadays there are no projects or applications that don't have a Webservice or REST API services exposed for external applications. Name any company big or small, Google, Twitter, Facebook, youtube … hundreds of companies generate business using API's. The more API's being developed the more API testing job is out there. Without automation the QA team will not be able to completely test the API's. SoapUI is one of the top tools for API testing, be it Rest API or Soap API.\nThis course will help you master the basics of Rest API testing with SoapUI opensource. You will learn basic to intermediate level SoapUI skills. Most importantly how to write testcases and test steps and verify with assertions. There will be multiple live Testcase writing sessions which will help you in mastering SoapUI easily.\nStudents aren't required to know anything about SoapUI beforehand - we'll start from the fundamentals, and how to apply them, how to validate the APIs and write Testcases in SoapUI, and finally become a API automation engineer.\nAlso, there will be no coding involved, so anyone who wants to transition from manual to automation testing or anyone who wants to start a career in testing can take this course.\nEnroll now and master the art of API automation with SoapUI and Jenkins! Good Luck!",
      "target_audience": [
        "Manual testers who want to learn API Automation",
        "People interested in Rest API Testing",
        "Anyone who is interested to try out Opensource SoapUI",
        "Anyone wanting to transition from Manual to Automation Testing",
        "Anyone who wants to learn Jenkins automation tool",
        "Anyone who wants to learn Rest API Automation",
        "Beginner QA person who wants to learn testing and automation",
        "Anyone who wants a crash course on Rest API Automation with SoapUI",
        "People interested to get a boost in their career with API Automation",
        "Anyone who wants to become an expert in Rest API Testing"
      ]
    },
    {
      "title": "Jenkins CI CD : 70 Live Assignments| Declarative, DSL & more",
      "url": "https://www.udemy.com/course/jenkins-ci-cd-hands-on-tasks-on-declarative-pipelines-dsl-jobs/",
      "bio": "Learn Jenkins CI CD with 70 tasks & Live CI/CD Project | Practice Jenkins Declarative Pipelines, DSL & Jenkins Features",
      "objectives": [
        "Design and Deploy Jenkins Declarative CI/CD Pipelines",
        "Hands On Tasks onto Jenkins Declarative CI/CD Pipelines",
        "Hands On Tasks on DSL Jobs/Scripts",
        "Hands On Tasks onto Free Style Jenkins Jobs",
        "Learn and Deploy Live Docker CI/CD Project",
        "Practice the Industry Standards on CI/CD Pipeline Designing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment Setup": [
          "Setup AWS Cloud Free Tier Account",
          "Setup EC2 Instance for Jenkins",
          "GitLab SignUp",
          "GitLab Project Setup",
          "Setup Jenkins , Docker on VM Machine",
          "Verify the Jenkins Setup - Hello World Example Pipeline"
        ],
        "Jenkins - Free Style Jobs - 5 Hands On Tasks": [
          "Task 1 - Jenkins Free Style Job Setup",
          "Solution 1 - Jenkins Free Style Job Setup",
          "Task 2 - Jenkins Free Style Job -> Cron Setup",
          "Solution 2 - Jenkins Free Style Job -> Cron Setup",
          "Task 3 - Jenkins Free Style Job -> Parameters",
          "Solution 3 - Jenkins Free Style Job -> Parameters",
          "Task 4 - Jenkins Free Style Job -> TimeStamps",
          "Solution 4 - Jenkins Free Style Job -> TimeStamps",
          "Task 5 - Jenkins Free Style Job -> Disable Job",
          "Solution 5 - Jenkins Free Style Job -> Disable Job"
        ],
        "Jenkins - Declarative Pipelines with Live CI/CD Project - 45 Hands On Tasks": [
          "Task 6 - Jenkins Declarative Pipeline -> Docker Verify Stage Setup",
          "Solution 6 - Jenkins Declarative Pipeline -> Docker Verify Stage Setup",
          "Task 7 - Jenkins Declarative Pipeline -> Git Verify Stage Setup",
          "Solution 7 - Jenkins Declarative Pipeline -> Git Verify Stage Setup",
          "Task 8 - Jenkins Declarative Pipeline -> JenkinsFile Setup on GitLab",
          "Solution 8 - Jenkins Declarative Pipeline -> JenkinsFile Setup on GitLab",
          "Task 9 - Jenkins Declarative Pipeline -> JenkinsFile SCM GitLab Integration",
          "Solution 9 - Jenkins Declarative Pipeline -> JenkinsFile SCM GitLab Integration",
          "Task 10 - Jenkins Declarative Pipeline -> Install Blue Ocean Plugin",
          "Solution 10 - Jenkins Declarative Pipeline -> Install Blue Ocean Plugin",
          "Task 11 - Jenkins Declarative Pipeline -> Setup Dockerfile on GitLab",
          "Solution 11 - Jenkins Declarative Pipeline -> Setup Dockerfile on GitLab",
          "Task 12 - Jenkins Declarative Pipeline -> Add Docker Build Stage",
          "Solution 12 - Jenkins Declarative Pipeline -> Add Docker Build Stage",
          "Task 13 - Jenkins Declarative Pipeline -> Docker Image Verify Stage",
          "Solution 13 - Jenkins Declarative Pipeline -> Docker Image Verify Stage",
          "Task 14 - Jenkins Declarative Pipeline -> Environment Variables",
          "Solution 14 - Jenkins Declarative Pipeline -> Environment Variables",
          "Task 15 - Jenkins Declarative Pipeline -> Jenkins Pre Defined Variables",
          "Solution 15 - Jenkins Declarative Pipeline -> Jenkins Pre Defined Variables",
          "Task 16 - Jenkins Declarative Pipeline -> Retry",
          "Solution 16 - Jenkins Declarative Pipeline -> Retry",
          "Task 17 - Jenkins Declarative Pipeline -> Timeout",
          "Solution 17 - Jenkins Declarative Pipeline -> Timeout",
          "Task 18 - Jenkins Declarative Pipeline -> Parallel Stage",
          "Solution 18 - Jenkins Declarative Pipeline -> Parallel Stage",
          "Task 19 - Jenkins Declarative Pipeline -> Options - Timestamps",
          "Solution 19 - Jenkins Declarative Pipeline -> Options - Timestamps",
          "Task 20 - Jenkins Declarative Pipeline -> Options - skipDefaultCheckout",
          "Solution 20 - Jenkins Declarative Pipeline -> Options - skipDefaultCheckout",
          "Task 21 - Jenkins Declarative Pipeline -> Options - buildDiscarder",
          "Solution 21 - Jenkins Declarative Pipeline -> Options - buildDiscarder",
          "Task 22 - Jenkins Declarative Pipeline -> Options - disableConcurrentBuilds",
          "Solution 22 - Jenkins Declarative Pipeline -> Options - disableConcurrentBuilds",
          "Task 23 - Jenkins Declarative Pipeline -> When Condition",
          "Solution 23 - Jenkins Declarative Pipeline -> When Condition",
          "Task 24 - Jenkins Declarative Pipeline -> When Condition",
          "Solution 24 - Jenkins Declarative Pipeline -> When Condition",
          "Task 25 - Jenkins Declarative Pipeline -> Deploy Stage",
          "Solution 25 - Jenkins Declarative Pipeline -> Deploy Stage",
          "Task 26 - Jenkins Declarative Pipeline -> Add CleanUp Stage Before Deploy",
          "Solution 26 - Jenkins Declarative Pipeline -> Add CleanUp Stage Before Deploy",
          "Task 27 - Jenkins Declarative Pipeline -> Manual Approvals",
          "Solution 27 - Jenkins Declarative Pipeline -> Manual Approvals",
          "Task 28 - Jenkins Declarative Pipeline -> Add CleanUp Stage",
          "Solution 28 - Jenkins Declarative Pipeline -> Add CleanUp Stage",
          "Task 29 - Jenkins Declarative Pipeline -> Post",
          "Solution 29 - Jenkins Declarative Pipeline -> Post",
          "Task 30 - Jenkins Declarative Pipeline -> Post",
          "Solution 30 - Jenkins Declarative Pipeline -> Post",
          "Task 31 - Jenkins Declarative Pipeline -> Post",
          "Solution 31 - Jenkins Declarative Pipeline -> Post",
          "Task 32 - Jenkins Declarative Pipeline -> Post",
          "Solution 32 - Jenkins Declarative Pipeline -> Post",
          "Task 33 - Jenkins Declarative Pipeline -> Post",
          "Solution 33 - Jenkins Declarative Pipeline -> Post",
          "Task 34 - Jenkins Declarative Pipeline -> Setup ECR Repo",
          "Solution 34 - Jenkins Declarative Pipeline -> Setup ECR Repo",
          "Task 35 - Jenkins Declarative Pipeline -> Create AWS IAM Role",
          "Solution 35 - Jenkins Declarative Pipeline -> Create AWS IAM Role",
          "Task 36 - Jenkins Declarative Pipeline -> Attach AWS IAM Role to EC2",
          "Solution 36 - Jenkins Declarative Pipeline -> Attach AWS IAM Role to EC2",
          "Task 37 - Jenkins Declarative Pipeline -> Build Stage Integration with ECR",
          "Solution 37 - Jenkins Declarative Pipeline -> Build Stage Integration with ECR",
          "Task 38 - Jenkins Declarative Pipeline -> Deploy Stage Integration with ECR",
          "Solution 38 - Jenkins Declarative Pipeline -> Deploy Stage Integration with ECR",
          "Task 39 - Jenkins Declarative Pipeline -> Setup Build Number as Tag",
          "Solution 39 - Jenkins Declarative Pipeline -> Setup Build Number as Tag",
          "Task 40 - Jenkins Declarative Pipeline -> Setup index.html on GitLab",
          "Solution 40 - Jenkins Declarative Pipeline -> Setup index.html on GitLab",
          "Task 41 - Jenkins Declarative Pipeline -> Update Dockerfile",
          "Solution 41 - Jenkins Declarative Pipeline -> Update Dockerfile",
          "Task 42 - Jenkins Declarative Pipeline -> Test Jenkins Pipeline - Default index",
          "Solution 42 - Jenkins Declarative Pipeline -> Test Pipeline - Default Index",
          "Task 43 - Jenkins Declarative Pipeline -> Test Jenkins Pipeline - Modified index",
          "Solution 43 - Jenkins Declarative Pipeline -> Test Pipeline - Modified index",
          "Task 44 - Jenkins Declarative Pipeline -> Create New EC2 Instance for Prod Env.",
          "Solution 44 - Jenkins Declarative Pipeline -> Create EC2 Instance for Prod Env.",
          "Task 45 - Jenkins Declarative Pipeline -> Jenkins Secrets Setup",
          "Solution 45 - Jenkins Declarative Pipeline -> Jenkins Secrets Setup",
          "Task 46 - Jenkins Declarative Pipeline -> Jenkins Plugins",
          "Solution 46 - Jenkins Declarative Pipeline -> Jenkins Plugins",
          "Task 47 - Jenkins Declarative Pipeline -> New Deploy Stage Setup for Prod Env.",
          "Solution 47 - Jenkins Declarative Pipeline -> Deploy Stage Setup for Prod Env.",
          "Task 48 - Jenkins Declarative Pipeline -> Manual Action/Approval",
          "Solution 48 - Jenkins Declarative Pipeline -> Manual Action/Approval",
          "Task 49 - Jenkins Declarative Pipeline -> Clean Up Stage for Production Deploy",
          "Solution 49 - Jenkins Declarative Pipeline -> CleanUp Stage for Prod. Deploy",
          "Task 50 - Jenkins Declarative Pipeline -> Final Demo CI/CD Project",
          "Solution 50 - Jenkins Declarative Pipeline -> Final Demo CI/CD Project"
        ],
        "Jenkins - DSL Scripts - 15 Hands On Tasks": [
          "Task 51 - Jenkins DSL Pipeline -> Install DSL Plugin",
          "Solution 51 - Jenkins DSL Pipeline -> Install DSL Plugin",
          "Task 52 - Jenkins DSL Pipeline -> Create Seed Job",
          "Solution 52 - Jenkins DSL Pipeline -> Create Seed Job",
          "Task 53 - Jenkins DSL Pipeline -> Create Empty Job",
          "Solution 53 - Jenkins DSL Pipeline -> Create Empty Job",
          "Task 54 - Jenkins DSL Pipeline -> Security Update for DSL Jobs",
          "Solution 54 - Jenkins DSL Pipeline -> Security Update for DSL Jobs",
          "Task 55 - Jenkins DSL Pipeline -> Setup Job Description",
          "Solution 55 - Jenkins DSL Pipeline -> Setup Job Description",
          "Task 56 - Jenkins DSL Pipeline -> Update Job Description",
          "Solution 56 - Jenkins DSL Pipeline -> Update Job Description",
          "Task 57 - Jenkins DSL Pipeline -> Setup Job Parameters",
          "Solution 57 - Jenkins DSL Pipeline -> Setup Job Parameters",
          "Task 58 - Jenkins DSL Pipeline -> Setup Job Parameters",
          "Solution 58 - Jenkins DSL Pipeline -> Setup Job Parameters",
          "Task 59 - Jenkins DSL Pipeline -> Setup Job Parameters",
          "Solution 59 - Jenkins DSL Pipeline -> Setup Job Parameters",
          "Task 60 - Jenkins DSL Pipeline -> Setup Job Steps",
          "Solution 60 - Jenkins DSL Pipeline -> Setup Job Steps",
          "Task 61 - Jenkins DSL Pipeline -> Setup Job Steps",
          "Solution 61 - Jenkins DSL Pipeline -> Setup Job Steps",
          "Task 62 - Jenkins DSL Pipeline -> Setup Job - Add timestamps to the Output",
          "Solution 62 - Jenkins DSL Pipeline -> Setup Job - Add timestamps to the Output",
          "Task 63 - Jenkins DSL Pipeline -> Setup Job - Edit Display Name",
          "Solution 63 - Jenkins DSL Pipeline -> Setup Job - Edit Display Name",
          "Task 64 - Jenkins DSL Pipeline -> SCM Integration",
          "Solution 64 - Jenkins DSL Pipeline -> SCM Integration",
          "Task 65 - Jenkins DSL Pipeline -> Setup Job - Disable Job",
          "Solution 65 - Jenkins DSL Pipeline -> Setup Job - Disable Job"
        ],
        "Jenkins - Plugins Management - 5 Hands On Tasks": [
          "Task 66 - Jenkins Manage Plugins -> Install New Plugin on Jenkins",
          "Solution 66 - Jenkins Manage Plugins -> Install New Plugin on Jenkins",
          "Task 67 - Jenkins Manage Plugins -> Install New Plugin on Jenkins",
          "Solution 67 - Jenkins Manage Plugins -> Install New Plugin on Jenkins",
          "Task 68 - Jenkins Manage Plugins -> Update Existing Plugin on Jenkins",
          "Solution 68 - Jenkins Manage Plugins -> Update Existing Plugin on Jenkins",
          "Task 69 - Jenkins Manage Plugins -> Remove Plugin from Jenkins",
          "Solution 69 - Jenkins Manage Plugins -> Remove Plugin from Jenkins",
          "Task 70 - Jenkins Manage Plugins -> Disable Plugin on Jenkins",
          "Solution 70 - Jenkins Manage Plugins -> Disable Plugin on Jenkins"
        ],
        "AWS Account Cleanup": [
          "AWS Account Cleanup"
        ]
      },
      "requirements": [
        "No Prior knowledge on Jenkins is required"
      ],
      "description": "Hello Guys,\n\n\nWelcome to the \"Jenkins CI CD | 70 Tasks on Declarative Pipelines & DSL Jobs\" Course, which is specifically designed for Hands-On purpose onto Jenkins Declarative Pipelines, DSL Scripts, and Other Jenkins Features.\n\n\n\n\nIt's 2022\nLearning new skills by just watching video sessions is not enough !!\nYou will have to hustle and practice the skills by implementing new things and by doing a lot of mistakes...\nSo, this course will push you to solve industry standard CI/CD related tasks on Jenkins.\n\n\n\n\nJenkins Hands On - Journey will cover below sections and topics:\n\n\n\n\n# Environment Setup\n\n\nAWS Account Setup\nVM Setup\nJenkins Setup\nGitLab Account Setup\nDocker Setup\n\n\n# Jenkins Free Style Jobs - Tasks\n\n\nJenkins free-style jobs\nCron setup\nParameters\nTimestamps\nDisabling jobs\n\n\n# Jenkins CI/CD using Declarative Pipelines - Tasks\n\n\nPipeline jobs setup\nDocker builds\nRetry\nTimeOuts\nTimeStamps\nStages/Steps Setup\nOptions\nConditions\nApprovals\nPost Actions\nDeploy Stages\nSSH Agents\nRemote Production Deployments\nDocker CI/CD\nECR Integration\n\n\n# DSL Tasks\n\n\nDSL Seed Jobs\nDSL Plugins\nNew Job Setup\nParameters\nDescriptions\nTimestamps\nDisable Jobs\n\n\n# Jenkins Plugins Management Tasks\n\n\nInstall Plugins\nUpdate Plugins\nRemove Plugins\nRestart Jenkins\n\n\nHere are the steps that you need to follow while working on this course tasks:\n\n\nGive your 100% to solve the given tasks\nSearch Online for Official Documentation\nStill not sure, Solution videos are provided for every task\nStill have queries ?, We are here, Reach out to us through Q/A Section\n\n\nJenkins CI CD Hands-On with 70 Pipelines & Live Project | Practice Jenkins Declarative Pipelines, DSL & Jenkins Features\n\n\nFor all the tasks on Declarative Pipelines, DSL Pipelines, and Free Style Jobs, solutions will be provided just after every question.\nYou can also practice other Jenkins CI CD Projects after this course to enhance your skill set on Jenkins.\nThis course also includes a session on \"How to delete the EC2 Machines on AWS and How to Terminate the Free Tier Account\"\n\n\nWe are also offering other Hands On Courses on:\n\n\nBash Scripting Practice with 100 Tasks and 10 Live Projects\nGitlab CI CD Hands On | Build your own 50 Gitlab Pipelines\nMaster the Ansible by Solving 50 Ansible Playbooks Tasks\nLearn Docker by doing with 50 Hands On Tasks and CI/CD Setup\nLearn AWS LEX with Live Project, Slack Integration and CI/CD\n\n\n#Jenkins #CI/CD #DevOps #ContinuousIntegration #ContinuousDeployment #Automation #SoftwareDevelopment #JenkinsPipeline #JenkinsJobs #DeclarativePipelines #DSL #DevOpsTools #DevOpsEngineering #BuildAutomation #DeploymentAutomation #ConfigurationManagement #InfrastructureAsCode #VersionControl #Testing #Deployment #Integration #DevOpsPractices #DevOpsCulture\n\n\nAll the Best Guys !!\nKeep Learning and Keep Exploring !!\nAutoPilot DevOps",
      "target_audience": [
        "Beginners or Professionals, who want to learn and practice Jenkins Declarative Pipelines Implementation",
        "Beginners or Professionals, who want to learn and practice Jenkins DSL Jobs/Scripts Implementation",
        "Beginners or Professionals, who want to learn and practice Jenkins Free Style Jobs Implementation",
        "Beginners or Professionals, who want to learn and practice Live CI/CD Implementation using Jenkins Pipelines"
      ]
    },
    {
      "title": "Build Web Automation from Scratch: Playwright and TypeScript",
      "url": "https://www.udemy.com/course/playwright-typescript-automation-from-scratch-basics-quest/",
      "bio": "Build Web automation framework on a gamified- Star Wars-themed playground from scratch using Playwright and Typescript",
      "objectives": [
        "Set up Automation Framework Playwright + Typescript + Allure from Scratch",
        "Write Effective UI and E2E Tests",
        "Master Test Execution & Debugging using Playwright Features",
        "Generate Professional Allure Test Reports"
      ],
      "course_content": {
        "Introduction": [
          "Introduction: Awakening the Force of Automation",
          "Project Setup and Installation : Igniting the Lightsaber",
          "Project Setup Default Template- Setting Up Your Environment - The Jedi Temple",
          "Explore The Framework and run the tests- The Sacred Files of the QA Order Galaxy",
          "Writing Our First Basic Test: The Droid Awakens and Empire Logs Back",
          "Test the Jedi Enhancements Panel - Revenge of the Sliders",
          "The Phantom Application - Join the Jedi Order Sign up Test",
          "Attack of the End to End - Classes, Constructors and Variables",
          "Attack of the End to End - Writting our Full Test Mission using POM - Part One",
          "Attack of the End to End - Writting our Full Tell Mission using POM- Part Two",
          "Holocrons of Testing: Unlocking Allure Reports",
          "The Playwright Awakens: Mastering Workers and Tags in the QA Galaxy",
          "Github",
          "Balance Restored: Goodbye and May the Tests Be With You"
        ]
      },
      "requirements": [
        "No programming experience needed, you will learn by doing all that is necessary."
      ],
      "description": "Course Summary – Playwright + TypeScript using a gamified Star Wars QA Automation Playground for Beginners\nThis course takes you on an intergalactic journey where you’ll build an automation testing framework from scratch using Playwright and TypeScript, themed around our custom Star Wars Automation Playground.\nInstead of learning automation in a dull, abstract way, you’ll interact with a playful, themed HTML application — complete with Droid Control Panels, Imperial Access Consoles, and E2E Diagnostics — and turn them into fully automated test cases.\nWhy this course is useful\nHands-on from the start — you’ll create a working automation framework step-by-step, not just follow theory.\nReal-world skills — learn how to test UI elements, handle popups, forms, and dynamic content, just like in production apps.\nEnd-to-End coverage — from installing Node.js and dependencies to running Allure reports for professional test reporting.\nFramework-first mindset — instead of random scripts, you’ll design a structured, maintainable automation framework.\nFun learning environment — the Star Wars theme keeps things engaging while still teaching industry-standard practices.\nBy the end of the course, you will:\nInstall and configure Node.js, npm, Playwright, and TypeScript.\nBuild a custom Playwright framework with reusable page objects.\nAutomate each feature of the Star Wars playground (forms, dropdowns, logs, popups, and more).\nRun and debug Playwright tests\nPerform an E2E test simulating a real mission.\nGenerate Allure reports to visualize test results like a pro QA engineer.\nRun tests in paraller and using special tags\nIn short:\nYou’ll go from zero to a fully functional TypeScript Playwright automation framework, testing a fun, interactive web app — and gain skills directly applicable to real-world projects.",
      "target_audience": [
        "Even if this is your first time with test automation, you now have the foundation to continue exploring, practicing and building more complex tests. Keep experimenting and remember — every great QA Jedi starts with small steps."
      ]
    },
    {
      "title": "Expert's Guide of API Automation using RestAssured and JAVA",
      "url": "https://www.udemy.com/course/api-testing-restassured/",
      "bio": "Master in API Automation using REST Assured with Live Example, Design expert Level Framework, Design Pattern practices",
      "objectives": [
        "Ready to write basic to advance level of API automation testcase in Java Programming & RestAssured",
        "Ready to design REST API Testing automation framework from scratch with BDD Cucumber",
        "Detailed understanding of Java Concepts, Programming and its implementation in RestAssured including OOPS",
        "Ready to face basic to advance level REST API automation interviews with RestAssured",
        "Design and build a industry level API automation framework step-by-step",
        "Confidently work with complex JSONs JSON PATH in request and responses"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Agenda of this Course",
          "Setup Java on Windows Machine",
          "Setup Eclipse on Windows Machine",
          "Environment Setup- Rest Assured",
          "Setup Sample Applications for Practice"
        ],
        "***** STEP 1 ***** WebService/API Basics | Advantage": [
          "What is WebService",
          "WebService Example",
          "Advantage of WebService over WebBased Application",
          "Difference between API and WebService",
          "Different type of Services : Soap and Rest",
          "Micro Service Introduction",
          "Rest API : common Methods - GET, POST, PUT, DELETE",
          "Pre-requisites before starting API Testing"
        ],
        "Manual API Testing using Postman": [
          "Introduction to Postman (One of most popular tool for REST API testing)",
          "Postman Setup : Step by Step Setup Instructions",
          "Postman window walkthrough",
          "Basic GET request : Fetch data from application",
          "Basic POST request : Insert New data to Application",
          "Basic PUT request : Update Data of Application",
          "Basic DELETE request : Delete application Data",
          "End to End test case with verifications",
          "Add Verification : Status Code, Body Data & Response time",
          "Validate Header Content",
          "Validate Data using JSON Path"
        ],
        "Eclipse & Java Introduction | Lets Start basic programming": [
          "Introduction to Eclipse | Walkthrough to Eclipse Environment",
          "Start Java programming - Project & Package",
          "How to Define Variables & Constants in Java",
          "What is Class ? & How to access class members by using Object",
          "Methods(Functions) in Detail : Different types of Methods",
          "Constructor | What is Constructor and How to Write Constructor",
          "Where to use Constructors (Practical Usecase)",
          "Read data from user at runtime : Take User Input"
        ],
        "Step by Step Condition Handling | How and Where to use Condition Handling": [
          "Simple Condition Handling - IF - Else (Handle 2 conditions)",
          "Multiple Condition Handling (If - Else if - else) with practice exercise",
          "Condition handling with Logical OR / AND",
          "Nested Condition Handling (Condition inside Condition)"
        ],
        "Step by Step Looping | For - While - Do While - For Each": [
          "For Loop : Run Loop with increment and Decrement Order",
          "While Loop",
          "Do While Loop",
          "For Each loop : Advance For Loop for Group of Data",
          "Nested Loop : Loop inside Loop"
        ],
        "String Handling : What is String, Use different functions available in String": [
          "String Handling - Part1 : What is String -String Functions(Length, Upper, Lower)",
          "String Handling - Part2 : String Functions- Replace, SubString, Split, Concat",
          "String Handling - Part3 : String Comparison",
          "Array In Java",
          "Multi dimension Array"
        ],
        "File Handling : Read and Write File Data": [
          "File Reader - File Reader (Read data character by character)",
          "File Read - Buffered Reader (Read data line by line)",
          "File Write - File Writer : Write data character by character",
          "File Write - BufferedWriter : Write data line by line"
        ],
        "OOPS in Detail (Object Oriented Programming)": [
          "Encapsulation : Wrapping up data & functions in single unit",
          "Inheritance : Transfer Property of a class to another class",
          "Types of Inheritance - Single Inheritance",
          "Types of Inheritance - Multilevel Inheritance",
          "Types of Inheritance - Hierarchical Inheritance",
          "Polymorphism : Data Overriding (Override Parent Class Methods)",
          "Overloading (Compile Time Polymorphism)",
          "Overriding (Runtime Polymorphism)",
          "Abstraction with Interview Questions",
          "Interface : To Achieve 100% abstraction",
          "Multiple Inheritance using Interface",
          "Hybrid Inheritance using Interface"
        ],
        "Access Modifiers : Access Class members at different places": [
          "public modifier : Access members throughout package",
          "private modifier : Access members within class",
          "default modifier : Access members within package",
          "protected modifier : Access members within package and child class",
          "Access Modifiers on class level"
        ]
      },
      "requirements": [
        "Basics understanding of REST API, its implementation and Testing",
        "No other knowledge required, except for willingness to learn and perform hands-on while you go through the course"
      ],
      "description": "REST Assured API is one of the most popular library when it comes to automating the REST APIs. Most of the today's web applications are backed by the Micro services architecture and the REST APIs.\nREST stands for REpresentational State Transfer. REST is web standards based architecture and uses HTTP Protocol for data communication.\nIn REST architecture, a REST Server simply provides access to resources and REST client accesses and presents the resources.\nWhat topics are covered in this course?\nAPI Basics\nJSON & JSON Path\nEnd to End Setup\nJava Programming Basics\nComplex POJO Example\nFull JSON body matching\nParameterization using TestNG Data provider\nRest Assured - Request Specification\nRest Assured - Response Specification\nRest Assured - Automate Post, Put, Del\nRest Assured - Multiple ways to send request payload\nRest Assured - Complex JSON in request body\nRest Assured - Request Parameters\nRest Assured - JSON Schema Validation\nRest Assured - Logging Filters\nRest Assured - Configs\nTestNG Basic to Expert\nCollections\nSerialization & De-serialization: POJOs\nHashMap to JSON object\nArrayList to JSON array\nComplex POJO Example\nFull JSON body matching\n\n\nFramework Development->\nBDD Framework with Features\nScalable Framework Structure\nConfigurations\nReporting\nAutomate positive and negative scenarios\nData driven using TestNG Data Provider\nCucumber Implementation\nBest Practices\nProperty and Configuration\nIntegration with Git\nIntegration with Jenkins\n\n\nTool, Library & Technology\nEclipse\nRest Assured\nTestNG\nCucumber\nReporting\nJava\nAllure Reports\n\n\nOutcome of this course\n1. Expertise in Java Programming\n2. Expertise in API Concepts\n3. Able to design End to End API Automation Framework\n4.  Ready to face Automation interviews",
      "target_audience": [
        "Testers looking to Test REST Api without any automation tool",
        "Developers looking to consume REST API in Java"
      ]
    },
    {
      "title": "ISTQB Test Management V3.0 CTAL-TM | Certified Test Manager",
      "url": "https://www.udemy.com/course/istqb-test-management-v30-ctal-tm-certified-test-manager/",
      "bio": "Step Up Your Advanced Level Test Manager Skills | The ISTQB CTAL-TM V3 Test Management Certificate Masterclass",
      "objectives": [
        "Get ready for the test manager position with deep context-awareness",
        "Differentiate yourself as a test manager with the latest CTAL-TM version",
        "Prepare for team leadership and executive-level conversations",
        "Pass the exam with confidence and become a certified test manager"
      ],
      "course_content": {
        "CTAL-TM 1.1 | The Test Process - ISTQB Certified Test Management V3.0": [
          "Introduction | Test Planning Activities | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 1.1.1 | Test Planning Activities",
          "CTAL-TM 1.1.2 | Test Monitoring and Control Activities",
          "CTAL-TM 1.1.3 | Test Completion Activities",
          "Exam Sample Questions | TM-1.1 - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 1.2 | The Context of Testing - ISTQB Certified Test Management V3.0": [
          "Introduction | The Context of Testing | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 1.2.1 | Test Stakeholders",
          "CTAL-TM 1.2.2 | Importance of Stakeholders’ Knowledge in Test Management",
          "CTAL-TM 1.2.3 | Test Management in a Hybrid Software Development Model",
          "CTAL-TM 1.2.4 | Test Management Activities for Various SDLCs",
          "CTAL-TM 1.2.5 | Test Management Activities for Various Test Levels",
          "CTAL-TM 1.2.6 | Test Management Activities for Different Test Types",
          "CTAL-TM 1.2.7 | Test Management Activities to Plan, Monitor, and Control",
          "Exam Sample Questions | TM-1.2 [P.1] - ISTQB Advanced Level Test Manager V3.0",
          "Exam Sample Questions | TM-1.2 [P.2] - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 1.3 | Risk-Based Testing - ISTQB Certified Test Management V3.0": [
          "Introduction | Risk-Based Testing | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 1.3.1 | Testing as a Risk-Mitigation Activity",
          "CTAL-TM 1.3.2 | Identification of Quality Risks",
          "CTAL-TM 1.3.3 | Quality Risk Assessment",
          "CTAL-TM 1.3.4 | Quality Risk Mitigation Through Appropriate Testing",
          "CTAL-TM 1.3.5 | Techniques for Risk-Based Testing (Part 1)",
          "CTAL-TM 1.3.5 | Techniques for Risk-Based Testing (Part 2)",
          "CTAL-TM 1.3.6 | Success Metrics and Difficulties Associated with RBT",
          "Exam Sample Questions | TM-1.3 [P.1] - ISTQB Advanced Level Test Manager V3.0",
          "Exam Sample Questions | TM-1.3 [P.2] - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 1.4 | The Project Test Strategy - ISTQB Certified Test Management V3.0": [
          "Introduction | The Project Test Strategy | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 1.4.1 | Choosing a Test Approach",
          "CTAL-TM 1.4.2 | Analyzing the Organizational Test Strategy and Project Context",
          "CTAL-TM 1.4.3 - Definition of Test Objectives",
          "Exam Sample Questions | TM-1.4 - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 1.5 | Improving the Test Process - ISTQB Certified Test Management V3.0": [
          "Introduction | Improving the Test Process | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 1.5.1 | The Test Improvement Process ( IDEAL )",
          "CTAL-TM 1.5.2 | Model-Based Test Process Improvement",
          "CTAL-TM 1.5.3 | Analytical-Based Test Process Improvement Approach",
          "CTAL-TM 1.5.4 | Retrospectives",
          "Exam Sample Questions | TM-1.5 - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 1.6 | Test Tools - ISTQB Certified Test Management V3.0": [
          "Introduction | Test Tools | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 1.6.1 | Good Practices for Tool Introduction",
          "CTAL-TM 1.6.2 | Technical and Business Aspects for Tool Decisions",
          "CTAL-TM 1.6.3 | Selection Process Considerations and R.O.I Evaluation",
          "CTAL-TM 1.6.4 | Tool Lifecycle",
          "CTAL-TM 1.6.5 | Tool Metrics",
          "Exam Sample Questions | TM-1.6 - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 2.1 | Test Metrics - ISTQB Certified Test Management V3.0": [
          "Introduction | Test Metrics | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 2.1.1 | Metrics for Test Management Activities",
          "CTAL-TM 2.1.2 | Monitoring, Control and Completion",
          "CTAL-TM 2.1.3 | Test Reporting",
          "Exam Sample Questions | TM-2.1 - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 2.2 | Test Estimation - ISTQB Certified Test Management V3.0": [
          "Introduction | Test Estimation | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 2.2.1 | Estimating What Activities Testing Will Involve",
          "CTAL-TM 2.2.2 | Factors Which May Influence Test Effort",
          "CTAL-TM 2.2.3 - Selection of Test Estimation Techniques (Part 1)",
          "CTAL-TM 2.2.3 - Selection of Test Estimation Techniques (Part 2)",
          "EXTRA - Estimation Techniques | From Foundation Level V4",
          "Exam Sample Questions | TM-2.2 - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 2.3 | Defect Management - ISTQB Certified Test Management V3.0": [
          "Introduction | Defect Management | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 2.3.1 | Defect Lifecycle",
          "CTAL-TM 2.3.2 | Cross-functional Defect Management",
          "CTAL-TM 2.3.3 | Specifics of Defect Management in Agile Teams",
          "CTAL-TM 2.3.4 | Defect Management Challenges in Hybrid Software Development",
          "CTAL-TM 2.3.5 | Defect Report Information",
          "CTAL-TM 2.3.6 | Defining Process Improvement Actions Using Defect Report Info",
          "Exam Sample Questions | TM-2.3 [P.1] - ISTQB Advanced Level Test Manager V3.0",
          "Exam Sample Questions | TM-2.3 [P.2] - ISTQB Advanced Level Test Manager V3.0"
        ],
        "CTAL-TM 3.1 | The Test Team - ISTQB Certified Test Management V3.0": [
          "Introduction | The Test Team (Part - 1) | ISTQB CTAL-TM | Test Manager V3",
          "Introduction | The Test Team (Part - 2) | ISTQB CTAL-TM | Test Manager V3",
          "CTAL-TM 3.1.1 | Typical Skills within Four Areas of Competence",
          "CTAL-TM 3..1.2 | Analyze Required Test Team Member Skills",
          "CTAL-TM 3.1.3 | Assessing Test Team Member Skills",
          "CTAL-TM 3.1.4 | Developing Test Team Member Skills",
          "CTAL-TM 3.1.5 | Test Management Skills Required to Manage a Test Team",
          "CTAL-TM 3.1.6 | Motivating or Demotivating Factors for a Test Team",
          "Exam Sample Questions | TM-3.1 [P.1] - ISTQB Advanced Level Test Manager V3.0",
          "Exam Sample Questions | TM-3.1 [P.2] - ISTQB Advanced Level Test Manager V3.0"
        ]
      },
      "requirements": [
        "Basic understanding of the software testing concepts and terminology",
        "For students applying for the official exam, an ISTQB CTFL certicate is mandatory"
      ],
      "description": "Hello, future test management heroes! Welcome to our ultimate ISTQB Advanced Level Test Manager V3.0 masterclass.\n\n\nIn this course introduction, we're going to answer 3 major questions that any test manager may have in mind:\nWho is this course for?\nWhat to expect during our CTAL-TM V3 journey?\nWhat to expect after completing this course?\n\n\n- - -\n\n\nWho is this course for?\nSoftware testers who want to apply for a test manager position\nCurrent test managers aiming to improve their test management skills\nStudents who want to pass the ISTQB Advanced Level Test Manager exam\nOther stakeholders seeking an understanding of the test management process\n- - -\n\n\nWhat to expect during our CTAL-TM V3 journey?\n14 hours of test management training\nThorough explanations of all test management concepts\nLectures accompanied by a lot of examples\nClear and natural pace audio for better follow-up\nSolving the official ISTQB CTAL-TM V3 exam sample questions after each section\nThe presentation slides for each lecture are available for download (PDF Files)\n\n\n- - -\n\n\nWhat to expect after completing this course?\nSolid understanding of all test management concepts and terminology\nDeep comprehension of how a test manager should behave in different contexts\nBeing able to digest the essential actions required in the test process\nGain the context-awareness of a test manager in various test types, levels, and SDLCs\nRevisit Risk-Based Testing and explain its various measures and considerations\nAnalyze and explain the  typical choices for a test approach and strategy\nMaster the IDEAL approach for test process improvement and adaptation\nExplain the tool lifecycle and best practices for tool introduction and maintenance\nUsing test results and metrics in test control and achieving the test objectives\nUnderstanding the proper test estimation techniques and their influencing factors\nMaster the defect management process in different SDLC models\nExcellence in analyzing, building, and improving a test team based on a skills matrix\nLearn the basics of stakeholder relationships essential for any test manager on any project\n\n\n- - -\n\n\nJoin us and become the next superstar of test management",
      "target_audience": [
        "Software testers who want to apply for a test manager position",
        "Current test managers aiming to improve their test management skills",
        "Students who want to pass the ISTQB Advanced Level Test Manager exam",
        "Other stakeholders seeking an understanding of the test management process"
      ]
    },
    {
      "title": "Complete RAG Testing course with Ragas Deepeval and Python",
      "url": "https://www.udemy.com/course/complete-rag-testing-course-with-ragas-deepeval-and-python/",
      "bio": "Learn the complete way to test RAG implementations. From functional to performance from Python to RAGAs and DeepEval",
      "objectives": [
        "Understand the Basics of LLMs",
        "Understand LLM Application types",
        "Gain know how on types of AI - Weak and Generative",
        "Understand How RAG works",
        "Understand the types of RAG Testing",
        "A lot of ready to use code that can be used from moment 0",
        "Understand ML metrics such as Accuracy, Recall and F1",
        "Understand RAG Testing Metrics such as Context Recall, Context Accuracy",
        "Understand RAG Testing Metrics such as Answer Relevancy",
        "Understand RAG Testing Metrics such as Truthfulness",
        "Gain know how with RAGAs open source Testing framework",
        "Gain know how with DeepEval open source Testing framework",
        "Understand how to create custom metrics",
        "Test for Coherence, Fluency, tone and other human specific metrics",
        "Rapid validation tools for MVPs using RAG systems.",
        "Deep understanding of metrics (fluency, coherence, relevance, conciseness), customizable test frameworks."
      ],
      "course_content": {},
      "requirements": [
        "Some basic Python programing experience",
        "Basic understanding of LLMs and AI",
        "A LLM API Key",
        "Basic Testing understanding",
        "Laptop/ PC with VS Code",
        "Willingness to learn a new hot skill"
      ],
      "description": "Master the art of evaluating Retrieval-Augmented Generation (RAG) systems with the most practical and complete course on the market — trusted by over 25,000 students and backed by 1,000+ 5-star reviews.\n\n\nWhether you're building LLM applications, leading AI QA efforts, or shipping reliable MVPs, this course gives you all the tools, code, and frameworks to test and validate RAG pipelines using DeepEval and RAGAS.\nWhat You’ll Learn\nUnderstand the Basics of LLMs and how they are applied across industries\nExplore different LLM Application Types and use cases\nLearn the difference between Weak AI and Generative AI\nDeep-dive into how RAG works, and where testing fits into the pipeline\nDiscover the types of RAG Testing: factuality, hallucination detection, context evaluation, etc.\nGet hands-on with ready-to-use code from Day 0 — minimal setup required\nMaster classic ML metrics (Accuracy, Recall, F1) and where they still matter\nLearn RAG-specific metrics:\nContext Recall\nContext Accuracy\nAnswer Relevancy\nTruthfulness\nFluency, Coherence, Tone, Conciseness\nBuild custom test cases and metrics with DeepEval and RAGAS\nLearn how to use RAGAS and DeepEval open-source frameworks for production and research\nValidate MVPs quickly and reliably using automated test coverage\nWho is This For?\nAI & LLM Developers who want to ship trustworthy RAG systems\nQA Engineers transitioning into AI testing roles\nML Researchers aiming for reproducible benchmarks\nProduct Managers who want to measure quality in RAG outputs\nMLOps/DevOps professionals looking to automate evaluation in CI/CD",
      "target_audience": [
        "AI Engineers & LLM Developers",
        "QA/Test Automation Engineers transitioning to AI",
        "ML Researchers & Applied Scientists",
        "AI Product Managers"
      ]
    },
    {
      "title": "Software Testing By Innovation Techniques",
      "url": "https://www.udemy.com/course/software-testing-by-innovation-techniques/",
      "bio": "Making of Agile Tester.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Software Testing",
        "Agile Scrum"
      ],
      "description": "You would have heard about Testing Techniques used in software testing and also about Innovation Techniques using in innovating. But, how about using the innovation techniques in software testing. Innovation and Testing go hand in hand. What you will learn in this course is how to make your testing work more exciting and start to expand yourself in terms of your expertise. You will learn about a path breaking brand new approach called IPSOVI. This is quite a different new approach towards testing which will enable you to do not only better testing but also take you towards being cross functional.\nAs we understand that for a successful Agile Scrum team it is  important that over a period of time the team members become cross functional. The team needs to move as \"Team One\" and for this to become real it is important that each member should be able to help each other and achieve the sprint goals and attain a good sprint velocity. This kind of shift in approach will transition you from a Conventional Tester to an Agile Tester. Using innovation techniques, like IPSOVI will help in moving successfully towards that transition.\nWe will also get pointers to other innovation techniques that we can build further on as:\nVUDOCS, Random, Attribute, SCAMPER, Role Usage, Analogy, Mind Maps, Six Thinking Hats, Fishbone, 5W approach, IGNITE.\n\nThis is your opportunity in life to break through the barriers and through your software testing work move over to being cross functional and unleash the innovation streak in you and take your work to new exciting level.",
      "target_audience": [
        "All software professionals"
      ]
    },
    {
      "title": "Top 200+ QA Automation Interview Questions & Resume Tips",
      "url": "https://www.udemy.com/course/qa-automation-interview-prep/",
      "bio": "Master Selenium, API Testing, TestNG, SQL, Cucumber & Java with Real-World Q&A and Expert Solutions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Attention: Our questions are sourced from 200+ real SDETs working in top companies worldwide to ensure you get the most relevant and up-to-date interview insights.\nAre you preparing for a QA Automation or SDET interview? This job-oriented course provides expert-curated questions and detailed answers to help you ace your interview with confidence.\n\n\nWhat Makes This Course Unique?\nMaster Problem-Solving & Coding Questions – Special focus on logical coding challenges to help QA professionals tackle complex problems with ease.\nPractical, Detailed Answers – Each question comes with a step-by-step solution and real-world examples so you can confidently explain your approach.\nMultiple Answer Versions – Where applicable, we provide different versions of answers to showcase depth of knowledge and impress interviewers.\nFrequent Updates & Lifetime Access – We revise and update questions every quarter to match current SDET job market trends, keeping you ahead of the competition.\nComprehensive Coverage Across QA Domains:\nManual Testing & Real-World Testing Processes\nSelenium WebDriver & Automation Framework Design\nTestNG & Cucumber – Testing Standards & Best Practices\nAPI Testing (Manual & Automation)\nJava & WebDriver Coding Challenges\nOOPs Concepts, Problem-Solving, and Logical Programming\nNon-Functional Testing Topics\nResume Tips & Job Search Strategies\nBonus: Learn how to create an impactful resume and prepare for behavioral HR interviews to increase your hiring chances!\nDon't miss out on this must-have course for QA professionals! Enroll now and take your QA Automation career to the next level!",
      "target_audience": [
        "Freshers & Entry-Level Testers preparing for their first QA job interview",
        "Anyone who wants to master QA Automation interview questions in a structured way",
        "QA Engineers & Test Automation Professionals preparing for job interviews",
        "SDET (Software Development Engineer in Test) aspirants looking for real-world Q&A",
        "Manual Testers who want to transition into Automation Testing roles",
        "Experienced Automation Engineers looking to refine their interview skills"
      ]
    },
    {
      "title": "Robot Framework & SeleniumLibrary - Web automation",
      "url": "https://www.udemy.com/course/robotframework/",
      "bio": "complete course for Beginners",
      "objectives": [
        "This course is for Test engineers or QA resources who want to learn automation testing using Robot Framework."
      ],
      "course_content": {
        "Robot framework - Introduction & Installation": [
          "Introduction to Robot framework",
          "Edge of Robot framework over other automation tools/frameworks",
          "Installation",
          "RIDE and RED IDE",
          "Create a new project in RED"
        ],
        "Concepts of Robot Framework": [
          "Test Suite, Test Cases and User Keywords",
          "Builtin-Library and keywords",
          "Test your knowledge - Built-in Library",
          "Scalars, Lists, Dictionaries and Variable files",
          "Suite/Test setup teardown",
          "External resources",
          "Loop Statements",
          "Conditional Functions",
          "Multiple conditions in Run Keyword If",
          "Print numbers divisible by 7.",
          "Print reverse of a string",
          "BONUS LECTURE : Special variables in robot framework",
          "BONUS LECTURE : Data driven test case execution"
        ],
        "Robot framework & Selenium Library": [
          "Introduction to Selenium & SeleniumLibrary",
          "Open and Close Browser (Firefox, Chrome, ie)",
          "Object Identification | Part 1 | Basic techniques",
          "Object identification | Part 2 | XPATH",
          "Object Identification | Part 3 | CSS Selector",
          "Xpath & CSS Selector techniques",
          "SeleniumLibrary Functions | Web automation",
          "Wait Functions for Synchronization",
          "Handling Alerts",
          "Assertions",
          "Switch to windows and popups",
          "Switch to frames",
          "Search your name on Google and print titles of 5th to 10th results.",
          "Practice Questions - No Hints No Answers",
          "BONUS LECTURE | Integration with Teamcity"
        ]
      },
      "requirements": [
        "No prior knowledge of Robot Framework and Selenium WebDriver is required. You need to have a loptop and internet connection."
      ],
      "description": "Robot Framework is a  test automation framework. It is used for simplifying your test automation process. With Robot, you can run a variety of automated tests with the assistance of Selenium Webdriver, API, Database, etc. Robot Framework is easier to learn than other frameworks and it helps you automate your tests with ease.\nThis course begins with covering the features, functionalities, and the use of Robot framework along with setting up the development environment wherein you will create a project and a script directory. You will then deep dive into the essential concepts of the framework such as functions, variables, loops, and test libraries with practical use cases. You will also learn how Selenium and SeleniumLibrary are used along with Robot framework for writing test cases.\nBy the end of the course, you will be well-versed in using Robot Framework for your test automation requirements.\n\n\nKEY FEATURES -\nGet well-versed with Web Automation using Robot Framework\nAutomate any website with confidence and skills gained in this course\nExecute test scripts on a real website to acquire real-world industry specific scenarios\n\n\nAPPROACH - The course will follow hands-on approach. Each concept will first be explained in theory and then it will be followed by a hands-on practical examples. Best test automation practices will also be discussed to give the student an idea about how things work in industry.\n\n\n\n\nWHAT WILL YOU LEARN -\nGain a complete understanding of Web Automation using Robot Framework.\n\n\nAutomate web based applications and web services using Robot framework\n\n\nManage your test cases by designing structures using Robot Framework\n\n\nPerform cross-browser testing on firefox, chrome, and Internet Explorer.\n\n\nProgramming concepts in Robot Framework - Variables, Loops\n\n\nRobot Framework libraries such as SeleniumLibrary for web UI automation\n\n\n\n\nABOUT THE AUTHOR - Kamal Girdher is a Lead automation architect, with rich experience on automation of web, mobile and web service applications. He is a Youtuber, blogger and therefore passionate about teaching thousands of people all over the world.",
      "target_audience": [
        "Beginners in automation, Manual test engineers, College students and anyone who want to learn Web Automation using a simple keyword driven framework i.e. Robot Framework."
      ]
    },
    {
      "title": "Design 3000: Software Management and Testing",
      "url": "https://www.udemy.com/course/testing-success/",
      "bio": "Modern Software Challenges, Roles and Team-Building Best Practices",
      "objectives": [
        "Understand Testing & Software Developer Terms",
        "Understand Modern Testing Practices",
        "Appreciate How to Win Friends While Testing Software",
        "Know How to Test Browser, Console, & Cloud Software",
        "Document Testing & Software Analysis Activities",
        "Create Iterative Testing Plans & Prescriptions",
        "Learn How To Use UML Use Cases",
        "Discover How To Create & Manage Test Cases",
        "Discover how to limit a UML Activity Diagram so as to use more universally-understood Flow Chart activities.",
        "Understand HTML, JavaScript, Python, and Java",
        "Enjoy a Role-Based Review Of \"The Perfect Team Collaboration Software\""
      ],
      "course_content": {
        "Introduction (1000)": [
          "Personal Success & Motivation",
          "Training Overview + Roles & Responsibilities",
          "Basic Terms & Concepts",
          "Roles & Responsibilities"
        ],
        "Testing Fundamentals (2000)": [
          "Input, Output & Processing",
          "Testing Terminology",
          "I/O Redirections",
          "Testing Fundamentals (Part Two - Start)",
          "Sources of Error: Requirements, Technology & Complexity",
          "Sources of Error – Complexity (continued)",
          "Testing Realms",
          "Testing Realms (continued)",
          "Testing Realms (continued)",
          "Testing Approach",
          "Testing Approach (continued)",
          "A Bug's Life",
          "Testing Fundamentals: More Testing Terms",
          "Honorable Mentions",
          "Analysis Activities & Lab Exercise",
          "The Software Quality Review",
          "Requirements, Behaviors, & Reliability",
          "Testing, Debugging & Verification",
          "Testing & Verification Process",
          "Test Case Creation"
        ],
        "Internet & Browser Testing (3000)": [
          "Browser-Based Software Testing - Introduction",
          "Client-Server Testing",
          "JavaScript Overview",
          "Browser Testing: Testing JavaScript",
          "Testing Web Services",
          "HTML5 Overview",
          "Cross-Browser Testing",
          "Graphical User Interface (GUI) Testing",
          "Browser Testing & Regular Expressions (RE)",
          "Regular Expressions (Part Two)"
        ],
        "Testing Concepts (4000)": [
          "Testing Concepts (Introduction)",
          "Black & White Box Testing",
          "Code Testing",
          "System Testing",
          "Static Testing Environment (LAB)",
          "Testing Concepts: Software Quality Defined",
          "Testing Concepts: Requirements, Behavior, & Reliability",
          "Analytical Concepts",
          "Functions & Control Flow Graphs (CFGs)",
          "Lab Exercise: LineDDA"
        ],
        "Case Studies (5000)": [
          "Case Studies: Introduction & Case Study 01",
          "Case Study 02: Life in the DMZ",
          "Case Study 03: SOA Testing & Service Technologies",
          "Case Study 04: Load Testing & Lab Exercises"
        ],
        "Best Practices (6000)": [
          "Introduction & Work Management",
          "Source Code Repositories",
          "Source Code Repositories (continued)",
          "Testing Best Practices",
          "Special Testing Emphasis"
        ],
        "Closing Concepts (7000)": [
          "Closing Concepts – Testing Perscriptions & Other Winning Strategies",
          "Testing Prescriptions (continued)",
          "Testing Prescription (continued) & Closing Concept Review",
          "Closing Concept Review (continued)"
        ]
      },
      "requirements": [
        "Students should have a basic understanding of computer programming & software development concepts."
      ],
      "description": "Software Management and Testing is designed for those who have little to no experience with the software development testing terminology documentation or even the modern testing world.\n\n\nTerms, Teams and Tactics\nIn this training we'll be discussing the key terms and concepts presently used by modern software development professionals. We'll also be discussing that where we can find software defects in supporting applications no matter where these applications are discovered in the software development lifecycle because we can encounter problems at any point in the software review process.\n\n\nTesting Realms\nFrom upper management to content creators, the clear and present need in the software industry is to seek out and employ not only those who can identify and use their tools well, but also those who know how to win friends, as well as influence team members. From under, poorly, and well as well tested softwares, far from being a mundane technical process, the art of creating fantastic software requires an ability to kindle synergies.\n\n\nTesting Technique\nWe will be discussing testing related systems software services scripts as well as the policies offered required to better manage the software development testing and repair process.\n\n\nComplete Coverage\nFrom testing graphical to browser based applications therefore, in addition to reviewing the modern trends, techniques, and tools de jur, my Software Management and Testing training opportunity also covers how to encourage team members to do their best. By combining field-tested techniques used to remedy defects found in multi-million dollar software systems with well known testing concepts, our mission is to equip each student with the insight and real-world experiences required to ensure both personal, as well as project, success.",
      "target_audience": [
        "Students who are new to the testing and / or software development industry"
      ]
    },
    {
      "title": "Selenium 4 - Beginners to Advanced Course (Year 2022 - 23)",
      "url": "https://www.udemy.com/course/selenium-4-beginners-to-advanced-course-year-2022-23/",
      "bio": "Covers all the latest things in Selenium - Frameworks, Docker, Selenium Grid 4 etc.",
      "objectives": [
        "Selenium 4",
        "Core Java",
        "TestNG Hybrid Framework with Page Object Model and Page Factory (In detailed explanation)",
        "Cucumber Hybrid Framework (In detailed explanation)"
      ],
      "course_content": {
        "Introduction to Selenium 4": [
          "Introduction to Selenium 4"
        ],
        "Locators for Selenium": [
          "Locators Basics for Selenium"
        ],
        "Java for Selenium (Initial List)": [
          "Getting started with Java in Windows",
          "Getting started with Java in Mac Machine",
          "Understanding Java programs, Variables, Data Types, Literals and Operators",
          "Flow Control Statements",
          "Methods, Classes, Objects, Constructors, this, Overloading, Inheritance and Over",
          "Modifiers and Interfaces"
        ],
        "Selenium 4 - WebDriver Command and running on different Browsers": [
          "Setting up and Running Selenium 4 Scripts on different browsers of Windows",
          "Setting up and Running Selenium 4 Automation Scripts on different browsers of Ma",
          "Selenium WebDriver Commands - Getting Started List"
        ],
        "Java for Selenium (Continued)": [
          "Arrays, String, Wrapper Classes and Exceptional Handling",
          "Packages, Handling Files and Collections Framework"
        ],
        "Locators in Depth": [
          "XPath Expressions and CSS Selectors - Complete Tutorial Guide from Scratch"
        ],
        "Selenium 4 (Advanced Topics)": [
          "findElements(), Handling StaleElementReferenceException and tagName() methods",
          "Handling Multiple Windows - Covers new commands introduced in Selenium 4",
          "Waiting mechanism - Selenium 4 Changes, pageLoadTimeout(), Ajax calls, loading p",
          "Handling JavaScript Alerts, Prompts, Confirmation Dialogs, Authentication Popups",
          "Handling HTML Drop-down, Multi-selection box, Bootstrap, JQuery and Auto-suggest",
          "Handling Frames and iFrames - Covers new commands introduced in Selenium 4",
          "Handling Mouse and Keyboard Events using Actions Class",
          "Taking Screenshots - Page, Web Element, Section, Full Page, FileHandler, Robot,",
          "Handling Calendar - Different types of Date Pickers",
          "Handling Static and Dynamic Tables",
          "Selenium 4 - WebDriver Hierarchy",
          "JavascriptExecutor from Scratch - Includes Javascript and DOM",
          "Robot Class - From scratch and detailed",
          "AutoIt - From scratch and detailed"
        ],
        "Selenium Grid 4": [
          "Selenium Grid Modes (Standalone, Hub & Nodes and Distributed) and different Gri"
        ],
        "Docker for Selenium": [
          "Executing Selenium Automation Scripts on Docker Containers (Selenium Grid Modes)"
        ],
        "Kubernetes for Selenium": [
          "Executing Selenium Automation Scripts on Kubernetes having Selenium Grid Setup"
        ]
      },
      "requirements": [
        "No pre-requisites required for this course. All prerequisites are included in this course from basics.",
        "Also includes Core Java in detail"
      ],
      "description": "In detailed, easy, step by step, practical, well defined and real time video tutorials on Selenium 4 Java\nNot required to have any prior Java programming knowledge, as all the prerequisites such as Java are explained in detail before covering Selenium topics\nDifferent topics covered in this course include: (Includes Videos and Notes for every topic listed below)\nIntroduction to Selenium 4\nLocators Basics for Selenium\nGetting started with Java in Windows Machine\nGetting started with Java in Mac Machine\nUnderstanding Java programs, Variables, Data types, Literals and Operators\nFlow Control statements in Java\nMethods, Classes, Objects, Constructors, this, overloading, inheritance and Overriding\nModifiers and Interfaces\nRunning Selenium 4 Automation Scripts on different browsers on Windows\nRunning Selenium 4 Automation Scripts on different browsers of Mac Machine\nSelenium WebDriver Commands - Getting started list\nArrays, String, Wrapper Classes and Exception Handling\nPackages, Handling Files and Collections Framework\nXPath Expressions and CSS Selectors in depth\nfindElements(), Handling StaleElementReferenceException and tagName()\nHandling Multiple Windows - Covers new commands introduced in Selenium 4\nWaiting Mechanism - Selenium 4 Changes, Ajay Calls, loading process and Synchronization\nHandling Alerts, Prompts, Confirmation, Authentication Popups and many more\nHandling HTML, Bootstrap, JQuery and Auto-suggestive dropdown/listbox fields\nHandling Frames and iFrames - Covers new commands introduced in Selenium 4\nHandling Mouse and Keyboard Events using Actions class\nTaking Screenshots - Page, Element, Section, Full, FileHandler, Robot and AShot\nHandling Calendar - Different types of Data Pickers\nHandling Static and Dynamic Tables\nSelenium 4 - WebDriver Hierarchy\nJavaScriptExecutor from Scratch - Includes JavaScript and DOM\nRobot Class - From Scratch and detailed\nAutoIt - From Scratch and detailed\nSelenium 4 - Selenium Grid Modes\nExecuting Selenium scripts on Docker Containers\nExecuting Selenium Scripts on Kubernetes having Grid Setup\nUsing Properties File in Selenium Automation\nLearn POI API in depth\nLearn Complete TestNG in depth\nData Driven Framework in depth\nExtent Repots in depth\nJava for Frameworks\nHybrid TestNG Framework using Page Object Model and Page Factory\nJUnit - Unit Testing framework in depth\nCucumber BDD in depth\nCucumber Hybrid Framework",
      "target_audience": [
        "Beginners and Advanced Selenium Members"
      ]
    },
    {
      "title": "Postman - testowanie REST API",
      "url": "https://www.udemy.com/course/kurs-postman/",
      "bio": "Kurs testowania API za pomocą aplikacji Postman",
      "objectives": [
        "Obsługa aplikacji Postman",
        "Testowanie REST API",
        "Wysyłanie requestów",
        "Definiowanie zmiennych",
        "Definiowanie środowisk",
        "Uruchamianie testów z poziomu lini komend",
        "Dodawanie testów do żądań",
        "Testowania realnych aplikacji internetowych"
      ],
      "course_content": {
        "Wstęp teoretyczny": [
          "Postman - wprowadzenie",
          "Architektura trójwarstwowa aplikacji internetowych",
          "Warstwa prezentacji",
          "Warstwa logiki biznesowej",
          "Warstwa danych",
          "Testowanie API - kontekst",
          "Interfejs, API, WebAPI",
          "Protokół HTTP",
          "Żądanie i odpowiedź HTTP",
          "Zasoby",
          "Nagłówki",
          "Metody HTTP",
          "REST API",
          "Przykład aplikacji korzystającej z REST API część I",
          "Przykład aplikacji korzystającej z REST API część II",
          "Dokumentacja API",
          "Kody odpowiedzi HTTP"
        ],
        "Przygotowanie środowiska do pracy": [
          "Instalacja Postman",
          "Stworzenie konta",
          "Instalacja Node",
          "Instalacja i uruchomienie API do testów",
          "Co będziemy testować?"
        ],
        "Testy pierwszej aplikacji": [
          "Pierwszy request - pobranie wszystkich postów",
          "Zapisywanie requesta",
          "Pobranie wybranego posta",
          "Filtrowanie postów",
          "Query vs Path Param",
          "Dodanie posta",
          "Nadpisywanie posta",
          "Aktualizacja posta",
          "Usuwanie posta",
          "Uruchamianie testów w kolekcji",
          "Praca domowa",
          "Rozwiązanie pracy domowej"
        ],
        "Testy": [
          "Wprowadzenie",
          "Weryfikacja kodu odpowiedzi",
          "Weryfikacja ciała odpowiedzi - sprawdzenie czy zawiera tekst",
          "Weryfikacja ciała odpowiedzi - sprawdzenie wartości pola",
          "Współdzielenie testów w obrębie kolekcji",
          "Praca domowa"
        ],
        "Zmienne, środowiska i skrypty wykonywane przez wysłaniem żądania": [
          "Zmienne wprowadzenie",
          "Zmienne globalne",
          "Zmienne w ciele żądania",
          "Środowiska wprowadzenie",
          "Środowiska",
          "Zmienne dynamiczne",
          "Skrypt wykonywany przed wysłaniem żądania",
          "Praca domowa",
          "Rozwiązanie pracy domowej"
        ],
        "Wczytywanie danych z pliku": [
          "Wczytywanie danych z pliku - wprowadzenie",
          "Wczytywanie danych z pliku Excel",
          "Praca domowa",
          "Rozwiązanie pracy domowej"
        ],
        "Uruchamianie kolekcji z poziomu linii poleceń": [
          "Wprowadzenie",
          "Import i export kolekcji",
          "Uruchamianie testów za pomocą Newman",
          "Dlaczego chcemy uruchamiać testy z poziomu command line"
        ],
        "Autoryzacja i autentykacja": [
          "Wprowadzenie",
          "Basic authentication",
          "Digest authentication",
          "Hawk auth",
          "Gdzie znaleźć informacje o metodzie autoryzacji?"
        ],
        "Test aplikacji Jira": [
          "Plan gry",
          "Założenie konta",
          "Próba dodania filtra",
          "Stworzenie API tokenu",
          "Testy i unikalna nazwa filtra",
          "Tworzenie filtra z taką samą nazwą",
          "Pobranie filtra",
          "Aktualizacja filtra",
          "Usunięcie filtra",
          "Wykład bonusowy"
        ]
      },
      "requirements": [
        "Dostęp do internetu",
        "Posiadanie komputera"
      ],
      "description": "Aplikacja Postman jest klientem HTTP, który umożliwia testowanie, tworzenie i dokumentowanie API.  Być może jesteś na początku swojej drogi i wszystkie pojęcia związane z testowaniem API są dla Ciebie \"czarną magią\" , jednak po przerobieniu mojego kursu przekonasz się, że strach ma wielkie oczy i wykonywanie testów na poziomie API za pomocą aplikacji Postman to czysta przyjemność :)\nNa początku kursu skupimy się na teorii, wyjaśniając wszystkie najważniejsze pojęcia i koncepcje.\nZ pierwszej sekcji dowiesz się między innymi:\n- jak zbudowana jest aplikacja\n- czym jest API i jakie ma zastosowanie\n- czym jest protokół HTTP i jakie znamy metody HTTP\n- czym są zasoby\n- jak wygląda dokumentacja API\n- czym jest kod odpowiedzi\n- jak wygląda aplikacja, która korzysta z REST API\nPo zapoznaniu się z teorią przejdziemy do sekcji praktycznej. Na początku przetestujemy bardzo proste API, które zainstalujesz na swoim komputerze. Czego nauczysz się w tej sekcji ?\n- jak stworzyć i wysłać żądanie podając konkretny adres zasobu i wybierając metodę http\n- jak dodać parametry\n- jak zdefiniować i używać zmiennych\n- jak zweryfikować czy testowane API działa zgodnie z założeniami za pomocą testów \"napisanych\" przy pomocy języka programowania JavaScript\n- jak uruchomić Nasze testy z poziomu lini komend i po co jest nam to potrzebne\n\nPo zapoznaniu się z działaniem aplikacji Postman i uzbrojeniu w wiedzę zdobytą podczas testów pierwszej aplikacji przejdziemy do testowania realnej aplikacji internetowej. Przetestujemy narzędzie do zarządzania projektami informatycznymi (Jira). W celu przeprowadzenia testów będziemy musieli między innymi zapoznać się z dokumentacją API aplikacji Jira oraz dowiedzieć się jak stworzyć token api, który pozwoli aplikacji rozpoznać Naszego użytkownika.\nPo ukończeniu tego kursu będziesz wiedział jak obsługiwać aplikację Postman i za jego pomocą tworzyć testy REST API. Znajomość aplikacji Postman jest pożądana na rynku pracy na stanowiskach testera manualnego i automatyzującego.",
      "target_audience": [
        "Testerzy oprogramowania chcący nauczyć się testowania API za pomocą aplikacji Postman",
        "Programiści chcący nauczyć się testowania API za pomocą aplikacji Postman",
        "Kandydaci na testerów oprogramowania chcący poszerzyć swoją wiedzę"
      ]
    },
    {
      "title": "Testes contínuos em CodeceptJS no Github Actions",
      "url": "https://www.udemy.com/course/testes-continuos-em-codeceptjs-no-github-actions/",
      "bio": "Integrando o CodeceptJS no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux",
        "Conhecimento básico em CodeceptJS"
      ],
      "description": "Construa um workflow de testes contínuos em CodeceptJS no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados. Controle o fluxo de execução de testes com relatórios, screenshots e métricas.\nExplorar o campo do DevOps enquanto Analista de Testes de Software pode trazer melhorias significativas na eficiência, qualidade e colaboração ao longo do ciclo de vida do desenvolvimento de software. Proporciona uma compreensão abrangente do produto, impulsionando o avanço profissional.\nCom a implementação de pipelines de testes contínuos, os testes são executados automaticamente sempre que há modificações no código-fonte, permitindo a detecção precoce de defeitos e reduzindo custos associados à correção tardia. Além disso, promove uma cultura de qualidade, incentivando a equipe a se concentrar em desenvolver funcionalidades robustas e confiáveis.\nA execução automatizada de testes contínuos garante a integridade do código em desenvolvimento, evitando problemas em outras partes do sistema e garantindo uma experiência mais consistente para os usuários finais. Isso fortalece a confiabilidade do software e minimiza falhas em ambientes de produção, proporcionando maior tranquilidade para a equipe de desenvolvimento e para os stakeholders.\nDurante este treinamento, você aprenderá a construir e otimizar um fluxo de trabalho de testes contínuos no GitHub Actions, criando um histórico robusto de testes de regressão, acompanhado de relatórios detalhados e evidências visuais essenciais. Além disso, explorará técnicas avançadas de automação e integração para garantir a eficiência e a escalabilidade do processo de teste em projetos de todos os tamanhos e complexidades.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "DEVENIR TESTEUR DES SYSTEMES EMBARQUES",
      "url": "https://www.udemy.com/course/test-des-systemes-embarques/",
      "bio": "Conception et exécution des tests avec des cas pratiques -Embedded systems testing",
      "objectives": [
        "Concepts de base des tests logiciels pour les systemes embarqués",
        "Tests manuels du logiciel de débutant à avancé",
        "Cas de test et rédaction de rapports de bug",
        "Notions de base sur les méthodologies agiles et les tests agiles",
        "Connaissance pratique détaillée de JIRA du point de vue de l'assurance qualité, sera prêt à utiliser JIRA pour la gestion des bug et des tâches",
        "création d'une épic",
        "création d'une user story",
        "création de cas de test",
        "cas pratique de systèmes embarqués"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Pourquoi j'ai fait cette formation",
          "Introduction aux systemes embarqués",
          "C’est quoi les systèmes embarqués ?",
          "Comment on test les systèmes embarqués ?",
          "Pourquoi on test les systèmes embarqués ?",
          "Story Mapping - Cas pratique : Distributeur automatique",
          "Création des Epics et User story",
          "Merci"
        ],
        "Conception et exécution des tests": [
          "Test Logiciel : c'est quoi une campagne de test ?",
          "Test Logiciel : Exemple d'une campagne de test",
          "Test Logiciel : c'est quoi une suite de test ?",
          "Test Logiciel : c'est quoi un cas de test ?",
          "Test Logiciel : Exemple d'un cas de test",
          "Introduction",
          "c'est quoi testlink?",
          "Testlink : Installation",
          "Testlink :Création de projet",
          "C'est quoi un plan de test ?",
          "Testlink :Création de plan de test",
          "Testlink : Création d'un build -Release",
          "Testlink : Création de suite de test - cas de test - les étapes de test",
          "Testlink : Recherche cas de test",
          "Testlink : Keyword",
          "Testlink : TEST SPECIFICATION",
          "Testlink : Gestion des exigences : REQUIREMENT",
          "Testlink : gestion des rôles",
          "Testlink : Gestion des plateforme",
          "Testlink : Milestone",
          "Testlink : Execution de campagne de test",
          "Testlink : Gestion des rapports et métriques de tests",
          "Cas pratique : Distributeur automatique : Conception des tests-Partie 1",
          "Cas pratique : Distributeur automatique : Conception des tests-Partie 2",
          "Cas pratique : Distributeur automatique : Conception des tests-Partie 3",
          "Cas pratique : Distributeur automatique- Affectation des cas de test",
          "Cas pratique : Distributeur automatique- Execution des tests"
        ],
        "Bonus : Création d’une anomalie avec Mantis Bug Tracker": [
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker"
        ],
        "Old vidéos": [
          "Testlink : Installation"
        ],
        "Création d'une anomalie": [
          "Cas pratique avec Jira : Distributeur automatique",
          "Continuer l'apprentissage",
          "Félicitations"
        ]
      },
      "requirements": [
        "Aucune connaissance préalable du domaine n'est requise"
      ],
      "description": "Test des systèmes embarqués\nEmbedded systems testing\nTout ce dont vous avez besoin pour apprendre les tests de logiciels, le tout combiné dans une seule ressource pour les systemes embarqués\n\n\nL'objectif du cours est de vous fournir toutes les connaissances nécessaires dont vous avez besoin pour décrocher votre  emploi au domaine du test de logiciels ou faire une reconversion , qu'il s'agisse d'un emploi à temps plein ou d'un travail indépendant.\n\n\nThèmes abordés dans le cours :\n\n\n-Bases des tests manuels [Outils utilisés : Google Sheets-Testlink]\n\n\n-Bases des tests agiles [Outils utilisés : Jira]\n\n\n\n\npour tout professionnel souhaitant commencer une carrière dans les tests de logiciels.\n\n\nIl comprendra toutes les sections obligatoires nécessaires pour devenir un parfait testeur de logiciels.\n\n\nIci, vous obtiendrez également des informations de base sur les tests manuels d'applications mobiles\n\n\nCe cours de formation à l'assurance qualité pour les tests de logiciels est conçu de manière à vous présenter les bases des tests de logiciels à des sujets avancés créant un plan de test, un modèle Agile, ainsi qu'une introduction et une familiarité avec les tests d'automatisation et outils de gestion de test JIRA et Postman.\nCouverture des tests manuels :\nVous couvrirez tous les sujets avancés des tests manuels\nDifférents types de tests\nAgile - Modèle Scrum.\nTests fonctionnels des systemes embarqués\nConception de cas de test dans les détails.\nImplémentation de projet en temps réel.\nTester les meilleures pratiques.\nÀ faire et à ne pas faire pour le testeur de logiciels.\nCycles de vie des bugs\nJIRA : Pour le suivi des bugs et la gestion des tâches\nConfiguration JIRA pour la pratique\nRapports de bogues et suivi\nGestion des tâches\nCycle de vie des bogues de bout en bout dans JIRA\n\n\nEnsembles de pratique\nCe cours vous mènera étape par étape du niveau de base au niveau expert, nous couvrons presque tous les aspects requis pour les activités quotidiennes d'assurance qualité et également pour la préparation de l'entretien.",
      "target_audience": [
        "Les personnes qui souhaitent commencer une nouvelle carrière",
        "Les personnes qui veulent apprendre les tests de logiciels Testeurs de logiciels qui souhaitent acquérir une meilleure connaissance dans leur domaine",
        "Les personnes à la recherche d'un emploi à temps partiel ou indépendant"
      ]
    },
    {
      "title": "QA Testing Quiz - Pytania rekrutacyjne na testera",
      "url": "https://www.udemy.com/course/quiz-na-testera/",
      "bio": "QA Testing Quiz - Pytania rekrutacyjne na - rekrutacja na stanowisko Tester Oprogramowania, QA, Tester Automatyczny itp",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Pytania i Odpowiedzi na Testera oprogramowania - rekrutacja na stanowisko Tester Oprogramowania, QA, Tester Automatyczny i podobne stanowiska związane z zapewnianiem jakości w projektach informatycznych.\n\n✔️ Poznasz podstawowe pojęcia testerskie, które mogą być (i bardzo często są) poruszane podczas rozmowy rekrutacyjnej\n✔️ Poznasz podstawy psychologii, sposób myślenia testera, nauczysz się stosować krtyczne testerskie podejście do projektu/produktu. Zrozumiesz testerski punkt widzenia podczas rekrutacji na stanowisko\n✔️ Poznasz niezbędne podstawy, które trzeba znać przystępując do rekrutacji na stanowiska testerskie\n✔️ Poznasz niezbędne i często używane typy testów jak również rodzaje i sposoby testowania. Poznasz mocno skompresowaną teorię konieczną do zaliczenia rozmowy rekrutacyjnej\n✔️ Zobaczysz i zrozumiesz jak wykorzystać rodzaje testowania w praktyce biznesowej podczas rekrutacji na stanowisko\n✔️ Ogólnie poznasz i zrozumiesz podstawy najczęściej omawianych zagadnień na stanowiska Testera oprogramowania, QA oraz Testera Automatycznego - bez względu na używany język programowania.\n✔️ Poznasz i zrozumiesz praktyczne wykorzystanie najbardziej popularnych tricków na rekruterów podczas rozmów kwalifikacyjnych\n✔️ Pytania są przygotowane w formie testów, gdzie jest podana przykładowa prawidłowa odpowiedz. Wystarczy, że nauczysz się odpowiedzi wraz z wyjaśnieniem w zwięzłej formie. To pomoże Ci zaliczyć rozmowę kwalifikacyjną łatwo i przyjemnie\n✔️ Podsumowanie i sprawdzenie wiedzy studenta z zakresu testowania oprogramowania, co pozwoli na łatwą i przystępną aplikację bez obaw o pytania rekrutacyjne i zmniejszy ryzyko nie powodzenia podczas rekrutacji na stanowisko",
      "target_audience": [
        "Osoby chcące rozwijać karierę w branży inżynierii oprogramowania lub po prostu \"informatyce\"",
        "Zawody \"cyfrowe\" wymagające umiejętności testowania",
        "Osoby chętne do rekrutacji na stanowisko testera oprogramowania"
      ]
    },
    {
      "title": "Préparation Efficace au Certificat ISTQB Agile",
      "url": "https://www.udemy.com/course/agile-formation-istqb-agile-tester-100-de-reussite/",
      "bio": "[AGILE] La meilleure façon de réussir l'examen Agile Tester - 100% de réussite-Non officiel",
      "objectives": [
        "Devenez un testeur Agile certifié",
        "Différencier les méthodologies agiles (Scrum-Kanban-XP)",
        "Comprendre les 4 valeurs et les 12 principes de l'Agile",
        "Comprendre les méthodes de test Agile"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Clarification",
          "Documenntation : Syllabus ISTQB AGILE",
          "Développement logiciel Agile .",
          "Pourquoi les sociétés migrent vers l’agilité ?",
          "Merci",
          "Les 4 valeurs de l'agile Manifesto",
          "Les fondamentaux du développement logiciel Agile-les 12 principes",
          "Approche d’équipe Intégrée",
          "Un feedback au plus tôt et fréquent",
          "Un feedback au plus tôt et fréquent",
          "Approches de développement logiciel Agile.",
          "XP",
          "Approches de développement logiciel Agile : SCRUM",
          "Scrum : Les pratiques",
          "Méthode Agile -C'est quoi un Sprint ?",
          "agilité - Les rôles Scrum : Le Product Owner",
          "Agilité -Les rôles Scrum : Le SCRUM MASTER",
          "Agilité -Les rôles Scrum : Equipe Scrum",
          "Kanban",
          "Les 4 Principes Fondamentaux de Kanban",
          "Création collaborative de User Story",
          "Méthode Agile -Exemple de création de User STORY (US) SOUS JIRA",
          "Rétrospectives",
          "Intégration Continue",
          "Intégration continue : Les étapes :",
          "Intégration continue : Les avantages :",
          "Intégration continue : Les risques :",
          "Planification de release et d’itérations",
          "Principes, Pratiques, et Processus fondamentaux Agile",
          "Principes, Pratiques, et Processus fondamentaux Agile:",
          "Les différences des tests entre les approches traditionnelles et Agile",
          "Principes, Pratiques, et Processus fondamentaux Agile ; Automatisation des tests",
          "les changements dans un projet agile : Partie 1",
          "les changements dans un projet agile : Partie 2",
          "Produits d’activité des projets",
          "Niveaux de Test",
          "Tests et gestion de configuration",
          "Tests et gestion de configuration",
          "Options d’organisation avec des tests indépendants",
          "Statuts du test dans les projets Agile",
          "Gérer les risques de régression en faisant évoluer les cas de test manuels et au",
          "Compétences d’un testeur Agile",
          "Le Rôle d’un testeur dans une équipe Agile",
          "Méthodes, Techniques, et outils pour les tests Agile",
          "Développement piloté par les tests",
          "Développement piloté par les tests d’Acceptation",
          "Développement piloté par les tests de Comportement",
          "La Pyramide des tests",
          "Quadrants de Test, :",
          "Le Rôle d’un Testeur : Travail d’équipe",
          "Point important:",
          "Sprint Zero",
          "Intégration :",
          "Planification des tests",
          "Evaluer les risques Qualité et estimer l’effort de Test",
          "Evaluer les risques Qualité et estimer l’effort de Test",
          "Estimation Planning Poker",
          "Techniques dans les projets Agile",
          "Techniques dans les projets Agile",
          "Exemple d’un projet Agile",
          "Exemple d'un outil agile",
          "Définition of Done - définition de terminé :",
          "Définition of Done - définition de terminé :",
          "Définition of Done - définition de terminé :",
          "Outils dans les projets Agile",
          "Simulateur pour préparer la certification :",
          "QCM",
          "Bonus : Création des User Story : C'EST QUOI UNE USER STORY",
          "Exercice : vérification d'une USER STORY",
          "Correcton exercice : vérification d'une USER STORY",
          "Les critères d’acceptance :",
          "User Story : Les 3 C",
          "INVEST",
          "QCM ISTQB AGILE",
          "Exercice : Création d’une user story avec les critères d’acceptance",
          "Correction d’exercice : Création d’une user story avec les critères d’acceptance",
          "Comment découper les user stories ?",
          "Comment estimer les User Stories",
          "Q / R",
          "Préparation Certification ISTQB AGILE : Exercice 1",
          "Préparation Certification ISTQB AGILE : Correction de l’exercice 1",
          "Préparation Certification ISTQB AGILE : Exercice 2",
          "Préparation Certification ISTQB AGILE : Correction de l’exercice 2",
          "Préparation Certification ISTQB AGILE : Exercice 3",
          "Préparation Certification ISTQB AGILE : Correction de l’exercice 3"
        ],
        "Examen ISTQB AGILE": [
          "Examen ISTQB AGILE"
        ],
        "L'agilité en pratique : Cas pratique": [
          "L'agilité en pratique : c'est quoi JIRA ?",
          "L'agilité en pratique : jira",
          "L'agilité en pratique : Cas pratique",
          "Le test logiciel agile en pratique avec Jira & Xray : Ajout Xray",
          "Le test logiciel agile en pratique avec Jira & Xray : Configuration de Xray",
          "en cas de probleme de configuration de XRay : comment le résoudre ?",
          "Le test logiciel agile en pratique avec Jira & Xray : Cas pratique",
          "Cas pratique avec Jira & Xray : Ajout des users stories et sous tâches",
          "Cas pratique avec Jira & Xray : Création d'un plan de test",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Jira-Xray : Attacher les tickets à un test plan",
          "Jira-Xray : Affecter les tickets au sprint",
          "Jira-Xray : Rattachement des cas de test avec plusieurs test plan",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Création d’une anomalie",
          "Jira-Xray : Création des rapports",
          "Jira-Xray : Création des rapports",
          "L'agilité en pratique : Cas pratique",
          "Félicitations"
        ]
      },
      "requirements": [
        "Avoir la certification FOUNDATION",
        "Comprendre les concepts de base des tests manuels"
      ],
      "description": "Préparation à la  certification   Agile Tester-100% de réussite\n\n\nLa notion de Testeur Agile est une notion récente qui s'appuie sur un développement logiciel agile tel que décrit dans le Manifeste Agile. Cette approche intègre entièrement le test et les testeurs dans l'équipe d'un projet Agile, aux côtés des développeurs et des parties prenantes. Cette formation certifiante ISTQB Agile Tester de 3 jours vous apportera l'ensemble des connaissances nécessaires à l'implémentation du test agile dans vos équipes agiles et vous fera passer la certification officielle Agile Testeur de l'ISTQB !\n\n\n\n\nProgramme de formation\nLes fondamentaux du développement agile\nRetour sur l’agilité et le manifeste agile\nApproche d’équipe intégrée\nLes feedbacks\nAspects des approches agile\nLa création de User Stories\nRétrospectives\nIntégration continue\nPlanification de releases et itérations\nLes différences des tests en approches traditionnelles et agiles\nActivités de test et développement\nProduits d’activité des projets\nNiveaux de tests\nTests et gestion de configuration\nOptions d’organisation avec des tests indépendants\nStatuts du test dans les projets agiles\nCommuniquer les statuts du test, avancement et qualité\nGérer les risques de régression\nRôles et compétences du testeur agile\nCompétences d’un testeur agile\nLe rôle d’un testeur dans une équipe agile\nMéthodes de test agile\nDéveloppement piloté par les tests\nDéveloppement piloté par les tests d’acceptation et développement piloté par les tests de comportement\nNiveaux et types de tests\nEvaluer les risques qualité et estimer l’effort de test\nEvaluation des risques de qualité sur les projets agiles\nEstimation de l’effort de test\nTechniques dans les projets agiles\nCritères d’acceptation, adéquation de la\ncouverture\nAppliquer l’ATDD\nConception de tests boite noire fonctionnels et non-fonctionnels\nOutils dans les projets agiles : vue d’ensemble\nOutils pour la gestion des tâches et de suivi\nOutils de communication et de partage d’information\nBuild de logiciel et outils de distribution\nOutils de gestion de configuration\nOutils de conception, d’implémentation et d’exécution des tests\nOutils Cloud et de virtualisation\n\n\nObjectifs pédagogiques.\n1-Passer et obtenir la certification officielle ISTQB Agile Tester\n2-Maîtriser la terminologie des tests en environnement agile\n3-Connaître les bonnes pratiques du test en méthode agile\n4-Adapter la méthode agile à l'environnement et à la situation\n5-Connaître les différentes méthodes de test agile\n6-Maîtriser les outils dans les projets agiles\n\n\n\"This material is not accredited with the ISTQB\".\n\n\nISTQB is a registered trademark of the International Software Testing Qualifications Board.\n\n\nje ne suis pas affilié à ISTQB , ce cours n'est pas officiel",
      "target_audience": [
        "La certification Foundation Level Agile Tester est conçue pour les professionnels qui travaillent dans des environnements Agile. Il s'adresse également aux professionnels qui envisagent de commencer à mettre en œuvre des méthodes Agiles dans un avenir proche ou qui travaillent au sein d'organisations qui envisagent de le faire.",
        "Pour obtenir cette certification, les candidats doivent détenir le certificat Certified Tester Foundation Level.",
        "Software Testers",
        "ingénieurs de test",
        "les testeurs",
        "les testeurs en mode Agile",
        "QA -QUALITY ASSURANCE",
        "TEST MANAGER"
      ]
    },
    {
      "title": "Ninja do Cypress",
      "url": "https://www.udemy.com/course/ninja-do-cypress/",
      "bio": "Uma jornada completa para aprender do absoluto ZERO até a nuvem!",
      "objectives": [
        "Domine a criação de testes automatizados rápidos e confiáveis com uma abordagem prática e descomplicada.",
        "Execute seus testes com Cypress em pipelines de CI usando GitHub Actions, de forma simples e eficiente.",
        "Aprenda a interagir com os principais elementos das interfaces web modernas.",
        "Descubra como validar diferentes tipos de comportamentos e resultados esperados com assertivas poderosas.",
        "Desenvolva uma API REST do zero com Node.js e Express — e aprenda a testá-la do início ao fim usando Cypress.",
        "Integre seus testes à Cypress Cloud e tenha uma visão completa da sua suíte de testes na nuvem."
      ],
      "course_content": {
        "Comece por aqui": [
          "Instalando o Node.js 22",
          "Visual Studio Code",
          "Git e Bash",
          "Fork do projeto",
          "Olá WebDojo!",
          "Desliguei meu PC! E Agora?",
          "Windows Terminal"
        ],
        "Introdução ao Cypress": [
          "Instalando o Cypress para Testes E2E",
          "Entendendo Describe e It no Cypress",
          "Como Identificar e Preencher Campos",
          "Clicando em Botão! O Cypress tem XPath?",
          "Validando o Comportamento Esperado",
          "Cobertura de Testes",
          "Automatizar Testes é o Mesmo que Programar?",
          "Inglês ou Português? Qual Idioma Usar?"
        ],
        "Interação e Manipulação de Elementos": [
          "Os principais Elementos de páginas Web",
          "Como Implementar Baby Steps nos Testes",
          "Interagindo com Campo de Texto",
          "Interagindo com Campo Email",
          "Interagindo com Campo de Telefone com Mascara",
          "Interagindo com Seleção de Opções",
          "Interagindo com Botões de Radio",
          "Nem sempre o Placeholder é ideal – saiba por quê!",
          "Interagindo com Checkboxes e Selecionando tudo com forEach",
          "Anexando arquivos para Upload",
          "Interagindo com Area de Texto",
          "Interagindo Array de Tags e Simulando o Teclado Físico",
          "Submissão do Formulário"
        ],
        "Trabalhando com Asserções e Esperas": [
          "Como Testar Mensagens de Erro e Cores CSS",
          "Aprimorando a Validação com Identificação Visual",
          "Buscando Elementos por Classes de Forma Eficiente",
          "Trabalhando com Timeout Implícito",
          "Tornando Seus Testes Mais Confiáveis com Timeout Explícito"
        ],
        "Record and Play com Cypress Studio": [
          "Habilitando e Utilizando o Cypress Studio na Prática",
          "Gravando e Executando um Teste Automatizado",
          "Minha Opinião Sincera Sobre o Cypress Studio"
        ],
        "Dicas, Hacks e Trade Offs": [
          "Simulando MouseOver com Real Events",
          "Como Testar Links que Abrem em Nova Aba no Navegador",
          "A Melhor Maneira de Interagir com iFrames",
          "Testando Drag And Drop no Kanban Board",
          "Testando PDF com Cypress e Javascript",
          "Como Utilizar as Subfunções Only e Skip no Cypress",
          "Quando Escolher Executar Testes em Headless ou Assistido?",
          "O Que Acontece Quando um Teste Falha no Cypress?",
          "Executando Testes de Regressão em outros Navegadores!",
          "Testes de Regressão com Geração de Evidências em Vídeos"
        ],
        "Ganchos e Helpers": [
          "Todos os Ganchos do Cypress",
          "Helper para facilitar a manutenção do código"
        ],
        "Gestão da Massa de Testes": [
          "Super Massa de Testes: Automação eficiente com Testes Orientados a Dados",
          "Trabalhando com as Fixtures do Cypress",
          "Use Desestruturação na Importação ao invés de Cy Fixture"
        ],
        "Custom Commands e Hacks": [
          "Custom Commands na Prática",
          "Aprimorando o Código com Array e Loops"
        ],
        "Tabelas e Links Externos": [
          "Adicionando registros em Tabelas",
          "Validando registros em Tabelas",
          "Como Remover um Item da Tabela e Garantir que Foi Excluído",
          "Validação de Links com Redirecionamento e Nova Aba no Navegador"
        ]
      },
      "requirements": [
        "Experiência com Testes de Software"
      ],
      "description": "Preparado para se Tornar o Ninja do Cypress?\nImagine dominar uma das ferramentas mais poderosas do mercado e finalmente criar testes automatizados eficientes, confiáveis e que realmente agregam valor ao seu time e à sua empresa. Chega de perder horas com testes manuais repetitivos ou de se sentir travado quando o assunto é automação!\nO curso Ninja do Cypress foi criado para guiar você em uma jornada completa — do absoluto zero até a automação contínua na nuvem. Mesmo que você nunca tenha automatizado um teste antes, aqui você vai aprender com clareza, prática e profundidade.\nSe você sente que:\nQuer aprender automação, mas não sabe por onde começar;\nJá tentou outros cursos, mas travou na hora de aplicar no mundo real;\nPerdeu oportunidades de crescimento por não saber automatizar;\nPassa horas testando manualmente as mesmas coisas em cada entrega...\nEste curso é para você!\nApresento o Ninja do Cypress, seu passaporte para o sucesso na automação de testes. Você vai entender por que o Cypress vem revolucionando o mercado, superando ferramentas como Selenium em agilidade, confiabilidade e experiência do desenvolvedor.\nAqui, você vai aprender a testar interfaces modernas, APIs e componentes, além de integrar seus testes em pipelines, gerar relatórios e aplicar boas práticas que os times realmente utilizam no mercado.\nChegou sua hora de ser referência em automação com Cypress. Vamos juntos?",
      "target_audience": [
        "Analista de Testes de Software"
      ]
    },
    {
      "title": "Automatización de APIs con Karate DSL y ChatGPT + Portafolio",
      "url": "https://www.udemy.com/course/automatizacion-de-apis-con-karate-dsl-y-chatgpt-portafolio/",
      "bio": "Aprende pruebas automatizadas de APIs REST con Karate DSL y ChatGPT desde cero y crea tu portafolio profesional.",
      "objectives": [
        "Aprende a automatizar pruebas de APIs con asistencia de ChatGPT.",
        "Construir un proyecto real con el arquetipo de Karate DSL.",
        "Aprende a configurar tu entorno de aprendizaje en Windows.",
        "Instalar y configurar Java, Maven, IntelliJ IDEA, Postman y GIT en Windows.",
        "Comprender conceptos clave de Karate DSL: features, escenarios y escenarios outline.",
        "Crear y ejecutar pruebas con métodos HTTP: GET, POST, PUT y DELETE.",
        "Validar contratos de API y diseñar pruebas positivas y negativas.",
        "Ejecutar pruebas por tags y personalizar scripts de Karate DSL",
        "Crear y publicar un portafolio profesional de automatización en GitHub.",
        "Aplicar tips prácticos para destacar en entrevistas de QA Automation.",
        "Refactorizar scripts para mejorar su mantenimiento."
      ],
      "course_content": {
        "Bienvenida y objetivos": [
          "Agenda y metodología de aprendizaje"
        ],
        "Instalación y configuración de entorno en Windows": [
          "Instalación de java y maven y configurar en la variable de entorno",
          "Instalación de IDE IntelliJ, Postman y GIT"
        ],
        "Fundamentos esenciales de Karate DSL para pruebas de APIs": [
          "¿Qué es Karate DSL?",
          "Feature, Escenario y Escenario Outline"
        ],
        "Conceptos clave antes de automatizar APIs REST": [
          "Definición de APIs y métodos importantes: GET, POST, PUT, DELETE",
          "¿Qué es un contrato y como analizarlo?",
          "Identificar pruebas positivas y negativas"
        ],
        "Creación del proyecto de Karate DSL y preparación del IDE": [
          "Crear el proyecto a partir del arquetipo de karate DSL",
          "Configuración del IDE",
          "Plugins importantes para la ejecución"
        ],
        "Automatización de APIs REST paso a paso + ChatGPT": [
          "Estructura y jerarquía del proyecto",
          "Automatizando pruebas | Petición POST",
          "Automatizando pruebas | Petición GET",
          "Automatizando pruebas | Petición PUT",
          "Automatizando pruebas | Petición DELETE",
          "Automatizando pruebas | Pruebas Negativas",
          "Ejecución por Tags",
          "Customizar y Refactor de código",
          "Lectura de reporte"
        ],
        "Creación de un portafolio profesional en automatización": [
          "Preparar tu portafolio de pruebas",
          "Publicar tu proyecto en GitHub"
        ],
        "Bonus: tips para entrevistas de QA Automation": [
          "Tips para entrevistas técnicas"
        ]
      },
      "requirements": [
        "Windows 10 o superior",
        "Acceso a un PC con internet",
        "Conocimientos de informática básica para instalar correctamente los programas",
        "Conocimientos básicos en programación"
      ],
      "description": "¿Quieres aprender a automatizar APIs REST aunque tengas poca experiencia en programación?\nEn este curso aprenderás, paso a paso, a crear pruebas automatizadas para APIs usando Karate DSL, con el apoyo de ChatGPT para acelerar tu aprendizaje y resolver dudas técnicas.\nAdemás, construirás un portafolio profesional que podrás mostrar en entrevistas.\n\nA lo largo del curso aprenderás a:\nInstalar y configurar Java, Maven, IntelliJ IDEA, Postman y GIT en Windows.\nComprender los fundamentos de Karate DSL: features, escenarios y escenarios outline.\nAutomatizar peticiones HTTP GET, POST, PUT y DELETE con buenas prácticas.\nImplementar pruebas positivas y negativas para asegurar la calidad de las APIs.\nEjecutar pruebas por tags, personalizar scripts y generar reportes claros.\nPublicar tu proyecto en GitHub para crear un portafolio profesional.\nRecibir tips para entrevistas de automatización y destacar frente a reclutadores.\n\nEste curso incluye:\nExplicaciones claras y ejemplos prácticos listos para usar.\nMódulo bonus con consejos para tu carrera como QA Automation.\n\nNivel: Básico, pero diseñado para que desarrolles habilidades prácticas desde la primera lección.\n\nAl finalizar, tendrás las bases para crear tus propios scripts de automatización de APIs con asistencia de ChatGPT y un portafolio que te ayude a conseguir un trabajo como QA Automation.",
      "target_audience": [
        "Aprendices que nunca hayan automatizado",
        "Estudiantes informáticos que quieran tener una nueva habilidad",
        "Profesionales que buscan un empleo de Jr como QA Automation"
      ]
    },
    {
      "title": "Testes Unitários com jest",
      "url": "https://www.udemy.com/course/testes-unitarios-com-jest/",
      "bio": "Testes unitários utilizando javascript e jest",
      "objectives": [
        "Entender o conceito de testes unitários",
        "Aprender a aplicar testes unitarios utilizando javascript e biblioteca jest",
        "Entender a importância de práticas de qualidade de código, principalmente a pratica de testes unitários",
        "Aprender TDD: Test Driven Development (Teoria e Pratica)"
      ],
      "course_content": {
        "Testes Unitários - Parte 1": [
          "Introdução",
          "Testes Unitários com JavaScript e Jest: Parte 1 - Video 1",
          "Testes Unitários com JavaScript e Jest: Parte 2",
          "Configurando a Biblioteca e primeiros testes: Parte 1 :Video 1",
          "Configurando a Biblioteca e primeiros testes: Parte 2",
          "Configurando a Biblioteca e primeiros testes: Parte 3 - Video",
          "Configurando a Biblioteca e primeiros testes - Parte 4",
          "Configurando a Biblioteca e primeiros testes: Parte 5 - Video",
          "Configurando a Biblioteca e primeiros Testes: Parte 6",
          "Casos de Borda e TDD: Parte 1 - Vídeo",
          "Casos de Borda e TDD: Parte 2",
          "Casos de Borda e TDD: Parte 3 - Video",
          "Casos de Borda e TDD: Parte 4",
          "Casos de Borda e TDD: Parte 5 - Video",
          "Casos de Borda e TDD: Parte 6",
          "DESAFIO 1 - Transferências Internacionais: Parte 1 - Video",
          "DESAFIO 1 - Transferências Internacionais: Parte 2"
        ],
        "Testes Unitários - Parte 2": [
          "Testando aplicações com mocks e stubs: Parte 1 - Vídeo",
          "Testando aplicações com mocks e stubs: Parte 2",
          "Explorando os mocks mais a fundo: Parte 1 - Vídeo",
          "Explorando os mocks mais a fundo: Parte 2",
          "Quando usar ou não usar os mocks? Parte 1 - Vídeo",
          "Quando usar ou não usar os mocks? Parte 2",
          "DESAFIO 2 - Loja Virtual"
        ]
      },
      "requirements": [
        "Não é necessário ter experiencia em programação."
      ],
      "description": "Testes unitários são testes que validam pequenas unidades lógicas e regras de negócio da sua aplicação de forma simples e automatizada.\nSão uma prática essencial para todo e qualquer sistema, pois garantem que seu código está sendo construído com qualidade, e proporcionam uma segurança mínima e necessária para a evolução e melhoria contínua da sua aplicação.\nAlém disso, quando bem construídos, funcionam como uma espécie de documentação viva das suas regras de negócio: é muito natural recorrer aos testes unitários para entender o que alguns trechos de código estão fazendo, ao invés de gastar energia tentando entender linha a linha de uma função específica.\nNeste curso você terá a oportunidade de:\n- Entender o conceito de testes unitários;\n- Aplicar testes unitários javascript e biblioteca jest;\n- Entender a importância de práticas de qualidade de código, principalmente a pratica de testes unitários;\n- Aprender TDD: Test Driven Development (Teoria e Prática).\n\n\nA Blue EdTech é uma escola de tecnologia de informação que cria pontes entre pessoas, conhecimento e empresas. Nela você possui a oportunidade de:\n- Aprender a programar;\n- Reforça fortalezas pessoais;\n- Estuda com educação e metodologia inovadoras;\n- Pratique com técnicas e situações do dia a dia;\n- Conecte-se às vagas do mercado de TI;\n- Construir uma carreira sem parar de trabalhar.",
      "target_audience": [
        "Desenvolvedores iniciantes interessados em aprender sobre Testes Unitários"
      ]
    },
    {
      "title": "Masterclass de QA Testing orientado al mercado laboral",
      "url": "https://www.udemy.com/course/masterclass-de-qa-testing-orientado-al-mercado-laboral/",
      "bio": "Aprende los conocimientos necesarios para ser QA. Curso totalmente orientado al mercado laboral para que puedas ser QA",
      "objectives": [
        "¿Qué es el testing?",
        "Fundamentos del testing",
        "¿Cómo llegar a ser QA tester?",
        "Como reportar un bug",
        "Cómo crear un test plan y casos de prueba",
        "Introducción a la automatización de pruebas y tests de API con Postman"
      ],
      "course_content": {
        "Sección 1": [
          "Qué es un QA o tester y como llegar a serlo.",
          "Los principios del testing",
          "La importancia del testing",
          "Cómo ser un buen tester",
          "Análisis de valores límite",
          "Mini test"
        ],
        "Test plans y reporte de errores": [
          "Cómo hacer un Test Plan",
          "Cómo reportar un bug correctamente"
        ],
        "Automatización": [
          "¿Qué es una API?",
          "Ejemplos de peticiones",
          "Como hacer tests de API automáticos con Postman"
        ],
        "Entrevistas": [
          "Consejos para ir a una entrevista de trabajo de tester",
          "Posibles preguntas en una entrevista de tester"
        ],
        "¿Y ahora qué?": [
          "Posibles caminos",
          "ISTQB mi opinión"
        ],
        "Examen fin de curso": [
          "Test"
        ]
      },
      "requirements": [
        "No se necesita ningún tipo de experiencia previa ni conocimientos"
      ],
      "description": "¿Para quién va dirigido este curso?\nSi estás buscando ser QA o tester y dedicarte a ello profesionalmente, o simplemente quieres mejorar tus conocimientos, este curso está pensado para ti.\n\n\n¿Por qué elegir este curso y no otros?\nEn este curso he querido orientarlo al mercado laboral, ya que la mayoría de los cursos te enseñan la teoría de las pruebas de software, pero no tienen nada que ver con la realidad del día a día. Con este curso vas a aprender con información de primera mano como se trabaja en la empresa y vas a adquirir las nociones básicas de QA o tester para que puedas empezar a trabajar en cualquier empresa como probador de software manual y de automatización.\n\n\nSi llegas hasta el final del curso conseguirás un certificado de de QA tester avalado por la empresa tecnológica Raned.\n\n\n¿Quién soy yo?\nMi nombre es Randy Varela y llevo más de 10 años en el sector IT, he trabajado como QA y programador para empresas internacionales de diferentes sectores.\n\n\n¿Qué vas a aprender en este curso?\nQué es el testing\nCómo ser QA y dedicarte a las pruebas de software profesionalmente\nPrincipios del testing o pruebas de software\nCrea un test plan con casos de prueba con ejemplo práctico usando la herramienta QAtouch\nComo reportar un error correctamente en Trello\nIntroducción de las pruebas automáticas, con test de API en Postman\nY mucho más\n\n\nEspero verte en el curso y no dudes en enviarme cualquier pregunta que tengas, que estaré encantado de poder ayudarte.\n\n\nNotas:\n1. Este curso no requiere experiencia o conocimientos previos.\n2. Todas las herramientas usadas en el curso ofrecen una versión gratuita y no es necesario pagar más para poder seguir el curso. De hecho, no es necesario ni usar las mismas herramientas para poder completar el curso hasta el final.",
      "target_audience": [
        "A aquellas personas que quieran encontrar su primer trabajo de QA o que quieran ampliar sus conocimientos"
      ]
    },
    {
      "title": "Maîtrisez les Tests Unitaires en .NET Core (.NET 7) et Xunit",
      "url": "https://www.udemy.com/course/maitrisez-les-tests-unitaires-en-net-core-net-7-et-xunit/",
      "bio": "Maîtrisez les tests unitaires en .NET Core avec xUnit. Unit testing",
      "objectives": [
        "Apprendre les tests unitaires à partir de zéro",
        "Écrire un code peu couplé et testable",
        "Comprendre et mettre en œuvre l'injection de dépendances",
        "Appliquer les meilleures pratiques en matière de tests unitaires",
        "Trucs et astuces pour écrire des tests propres, maintenables et fiables",
        "Utiliser des mocks pour isoler le code des dépendances externes avec NSubstitute",
        "Apprendre à utliser XUnit",
        "Écrire des assertions fluide avec FluentValidation",
        "Couverture de code",
        "Générer des données de test réaliste avec Bogus"
      ],
      "course_content": {
        "Aperçu du cours": [
          "Bienvenue",
          "Qu'allez vous apprendre dans ce cours ?",
          "À qui s'adressent ce cours et les prérequis"
        ],
        "Introduction aux tests unitaires": [
          "Les différents type de tests",
          "Qu'est-ce qu'un test unitaire et pourquoi est-il important",
          "La pyramide des tests"
        ],
        "Les bases des tests unitaires": [
          "Les 3 concepts clé des tests unitaires",
          "Pourquoi Xunit",
          "Écrire votre premier test unitaire",
          "Structurer votre solution",
          "L'importance des noms pour vos tests unitaires",
          "Arrange, Act, Assert",
          "Modèle d'exécution des tests",
          "Configuration des tests",
          "Paramétrage des tests",
          "Ignorer des tests",
          "À vous de jouer ! (Exercice)",
          "Correction de l'exercice"
        ],
        "Techniques de tests unitaires": [
          "Écrire des assertions plus fluide",
          "Tester des chaînes de caractères",
          "Tester des nombres",
          "Tester des dates",
          "Tester des objets",
          "Tester des listes",
          "Tester des exceptions",
          "Tester des évènements",
          "Tester des membres privés",
          "Tester des membres internes"
        ],
        "Les concepts des tests unitaires": [
          "Le problème avec les dépendances",
          "L'injection de dépendances",
          "Mocking",
          "Nsubstitute vs Moq"
        ],
        "Les tests unitaires dans le monde réel": [
          "Présentation du projet",
          "Notre scope de tests",
          "Tester la couche applicative",
          "Exercice: Tester le reste de la couche applicative",
          "Correction exercice",
          "Créer des données de test réalistes avec Bogus",
          "Tester la couche API",
          "Exercice: Tester le reste de la couche API",
          "Correction exercice"
        ],
        "Techniques avancées de tests unitaires": [
          "Observons le comportement par défaut de l'exécution des tests",
          "Partager des données entre nos tests",
          "Paramétrage avancé",
          "Définition des délais d'exécution des tests",
          "Tester du code qui utilise des dates",
          "Test en continue",
          "C'est quoi le code coverage ?",
          "Mesurer le code coverage"
        ]
      },
      "requirements": [
        "Connaissance de base en c#"
      ],
      "description": "Ce cours complet est conçu pour vous aider à maîtriser l'art des tests unitaires en utilisant le framework .NET Core. Que vous soyez un développeur chevronné à la recherche de meilleures pratiques ou un novice souhaitant renforcer vos compétences en développement logiciel, ce cours vous fournira les connaissances et les compétences nécessaires pour créer des tests unitaires solides et fiables.\n\n\nLes tests unitaires sont essentiels pour garantir la qualité et la stabilité de votre code. Ils vous permettent de vérifier que chaque composant individuel de votre application fonctionne correctement et de manière isolée. En utilisant des librairies de tests telles que xUnit, vous serez en mesure d'écrire des tests clairs, concis et faciles à maintenir.\n\n\nDans ce cours, nous commencerons par une vue d'ensemble de l'importance des tests unitaires et de leur rôle dans le développement logiciel. Nous explorerons ensuite les différents types de tests, y compris les tests unitaires, les tests d'intégration et les tests end-to-end, en mettant l'accent sur les tests unitaires en tant qu'unités indépendantes sans dépendances externes.\n\n\nVous apprendrez également les concepts clés des tests unitaires, tels que l'organisation de vos tests, la structuration de votre solution, les bonnes pratiques de nommage et l'approche Arrange-Act-Assert. Nous couvrirons également l'utilisation de librairies de mock pour gérer les dépendances externes et de librairies d'assertion pour vérifier les résultats attendus de manière fluide.\n\n\nAu fur et à mesure que vous progresserez dans le cours, vous découvrirez des techniques avancées de tests unitaires, telles que l'utilisation de fixtures de classe, l'exécution parallèle des tests et la mesure de la couverture de code. Vous explorerez également les meilleures pratiques pour tester différentes parties de votre application, y compris les couches application, données et API.\n\n\nGrâce à des exercices pratiques et à des projets concrets, vous aurez l'opportunité de mettre en pratique vos connaissances et de consolider votre compréhension des tests unitaires en .NET Core. À la fin du cours, vous serez en mesure d'intégrer des tests unitaires efficaces dans votre processus de développement, ce qui vous aidera à détecter les erreurs plus tôt, à améliorer la qualité de votre code et à accélérer le cycle de développement.\n\n\nRejoignez-nous dès maintenant et devenez un expert des tests unitaires en .NET Core. Améliorez la qualité de votre code et assurez-vous que votre application est fiable et robuste.",
      "target_audience": [
        "Les développeurs .NET : Si vous travaillez avec la plateforme .NET et que vous souhaitez approfondir vos connaissances en tests unitaires, cette formation est faite pour vous. Vous apprendrez à écrire des tests unitaires robustes et à les intégrer dans votre flux de travail de développement.",
        "Les développeurs soucieux de la qualité du code : Si vous accordez de l'importance à la qualité de votre code et à la réduction des erreurs, les tests unitaires sont un élément essentiel de votre boîte à outils. Ce cours vous aidera à renforcer vos compétences en matière de tests et à adopter une approche plus rigoureuse dans vos développements.",
        "Les professionnels cherchant à améliorer leurs compétences en développement : Que vous soyez un développeur en reconversion ou que vous souhaitiez simplement élargir votre ensemble de compétences, ce cours vous fournira une base solide en tests unitaires en .NET Core. Vous pourrez ainsi renforcer votre profil professionnel et augmenter vos opportunités de carrière.",
        "Les étudiants en informatique : Si vous êtes actuellement étudiant en informatique ou en génie logiciel, cette formation complétera vos connaissances académiques en vous montrant comment appliquer les tests unitaires dans des projets réels. Vous serez mieux préparé à intégrer des pratiques de qualité dans votre future carrière."
      ]
    },
    {
      "title": "Automatisation des tests logiciels avec Katalon de A à Z",
      "url": "https://www.udemy.com/course/automatisation-des-test-logiciels-avec-katalon-de-a-a-z/",
      "bio": "+ Bonus : Test Mobile -Formation complète Katalon Studio avec des travaux pratiques, des démos et des exemples",
      "objectives": [
        "Tutoriel complet de Katalon Studio à partir de zéro",
        "Tests d'automatisation avec Katalon Studio",
        "Comment gérer différents scénarios de test avec Katalon Studio",
        "Tests basés sur les données",
        "Exécutions en ligne de commande",
        "automatisation des tests avec la méthode de script",
        "automatisation des tests avec la méthode manuel",
        "automatisation des tests avec la méthode de Recording"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Automatisation des tests",
          "C'est quoi KATALON ?",
          "Installation de KATALON",
          "KATALON : Les méthodes d'automatisation",
          "Carrière en automatisation des tests",
          "Katalon : Création d'un projet",
          "Les différentes méthodes d’automatisation avec Katalon",
          "Katalon : Explorer Katalon",
          "Merci",
          "Automatisation des tests : les points à savoir",
          "Automatisation des tests : les points à savoir - Partie pratique",
          "Comment créer des tests d'automatisation avec le Mode d'enregistrement /RECORD",
          "Exemple d'automatisation des tests avec le Mode d'enregistrement /RECORD",
          "Création de tests en mode manuel",
          "Création de tests en mode script",
          "C'est quoi une suite de test-Création d'une suite de test",
          "Création d'une collection de suite de test",
          "Log & Reports",
          "Katalon : Documentation",
          "Exercice",
          "Correction de l'exercice",
          "Création d’une anomalie : Introduction",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Cas pratique de test mobile avec Katalon :",
          "Continuer l'apprentissage"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Apprenez Katalon Studio de la meilleure façon, en l'utilisant sur un site Web et une API en direct. Découvrez comment créer des cas de test et le référentiel d'objets, puis développez vos connaissances en créant des suites de tests, en injectant des données de test, en intégrant Git, en apprenant les meilleures pratiques, et bien plus encore. Faites passer vos compétences en automatisation au niveau supérieur en apprenant à utiliser Katalon Studio de la bonne manière.\nSuivez la formation pratique sur Katalon Studio.\nApprenez Katalon Studio à partir de zéro,\n\n\nCe cours vous montre les bases de l'utilisation de Katalon Studio pour l'automatisation des tests\n\n\nAprès avoir suivi ce cours, vous serez en mesure de :\n\n\nApprenez les bases de Katalon Studio\nObtenez une compréhension complète des fonctionnalités de Katalon Studio\nConfigurer une plate-forme d'automatisation des tests à l'aide de Katalon Studio\nAutomatisation des tests avec RECORING\nAutomatisation des tests avec la création des étapes manuellement\nAutomatisation des tests avec des scripts\nCréation des collection de suite de test\nCréation des cas de tests\nCréation des suites de tests\nRapports\nDépannage et débogage\nLa ligne de commande s'exécute\nCréation de mots-clés personnalisés\n\n\nÀ la fin de ce cours, vous serez prêt à créer des solutions d'automatisation de test impressionnantes avec Katalon Studio\n\n\nTutoriel complet de Katalon Studio à partir de zéro\nTests d'automatisation avec Katalon Studio\nComment gérer différents scénarios de test avec Katalon Studio\nTests basés sur les données\nExécutions en ligne de commande",
      "target_audience": [
        "Toute personne veut apprendre Katalon Studio à partir de zéro",
        "Les utilisateurs qui veulent apprendre Katalon Studio avec des exemples étape par étape",
        "Utilisateurs impatients d'utiliser Katalon Studio pour configurer une plate-forme d'automatisation des tests",
        "Ingénieurs et responsables QA et automatisation",
        "Des testeurs veulent maitriser l'automatisation des tests"
      ]
    },
    {
      "title": "Testes Automatizados com Playwright + Typescript - Básico",
      "url": "https://www.udemy.com/course/testes-automatizados-com-playwright-typescript-basico-pt-br/",
      "bio": "Saia na frente no mercado de trabalho e comece sua jornada empolgante na Automação Web com Playwright e TypeScript!",
      "objectives": [
        "Instalar e configurar um repositório Playwright do zero",
        "Escrever seus primeiros testes em Playwright usando Typescript",
        "Definir Locators e aprender a localizar elementos HTML com CSS Selectors de maneira otimizada",
        "Executar ações básicas e verificações UI nos seus testes",
        "Debugar seus testes com o Inspector nativo do Playwright, Trace Viewer e com VSCode",
        "Gerar scripts automáticos de teste com Record / Play",
        "Otimizar seus testes organizando por pastas / suites",
        "Gerar reports de teste HTML e aprender os outros tipos de report do Playwright"
      ],
      "course_content": {
        "Introdução": [
          "Estrutura do Curso",
          "Pré requisitos",
          "Como navegar no projeto do Github",
          "Como instalar um projeto Playwright",
          "Entendendo o arquivo playwright.config",
          "Seu primeiro teste"
        ],
        "Page Locators e Selectors": [
          "CSS Selectors",
          "Text Selectors",
          "Data-testid Selectors",
          "Outros tipos de selectors"
        ],
        "Fazendo Verificações nos seus testes": [
          "Assertions e Soft Assertions"
        ],
        "Controlando o Browser e executando ações nos seus testes": [
          "Executando Ações e verificações Básicas - Navegando e clicando em items",
          "Executando Ações e verificações Básicas - Interagindo com Dropdowns",
          "Executando Ações e verificações Básicas - Trabalhando com Hovers",
          "Desafio - Testando uma página de Login"
        ],
        "Debugando seus testes": [
          "Playwright Inspector",
          "VSCode Debugger",
          "Reporters",
          "Trace Viewer"
        ],
        "Gerando scripts de testes automaticamente": [
          "Aprenda a usar o Codegen (Recorder) com o VSCode"
        ],
        "Organização e otimização do código": [
          "Instruções - Adicionando Linters",
          "Adicionando Linters no seu projeto",
          "Organizando seus testes e criando test suites"
        ],
        "Test Hooks - otimizando ações repetitivas": [
          "[Extra] beforeEach e beforeAll",
          "[Extra] afterEach e afterAll"
        ],
        "Customizando Projetos e Browsers": [
          "[Extra] Controlando novas abas no seu teste"
        ]
      },
      "requirements": [
        "Conhecimento básico ou intermediário de Javascript e NodeJS",
        "Conhecimento básico de Typescript",
        "Conhecimento em Git / Github",
        "(Recomendado) - Computador com 8 GB de RAM e Processador Quad-core"
      ],
      "description": "O Playwright, uma ferramenta de automação de testes desenvolvida pela Microsoft, tem experimentado um crescimento notável nos últimos anos, consolidando-se como uma escolha popular entre os profissionais de teste e desenvolvimento de software, principalmente na troca do Cypress e Selenium por uma ferramenta mais robusta e com menos flaky tests!\nEle oferece aos profissionais de teste e desenvolvimento uma solução abrangente e eficaz para automação de testes de aplicações web. Sua capacidade de adaptar-se a um cenário dinâmico de tecnologia da web e a atenção constante da comunidade para melhorias fazem dele uma escolha confiável para aqueles que buscam eficiência e confiabilidade em seus processos de automação.\n\nNeste curso básico, vou te ensinar a escrever testes e workflows de usuários de forma que você conseguirá iniciar sua automação logo em seguida.\nAlém disso você vai aprender como localizar elementos usando as melhores práticas de CSS Selectors\nVou ensinar como funcionam Page Locators e Selectors, Assertions e Soft Assertions, Executar Ações Básicas e Debugar seus testes com as mais variadas maneiras! Tudo isso usando Typescript\nAlém disso, no final do curso vou deixar um desafio completo de como fazer um workflow de testes para uma página de login para que você possa praticar o que aprendeu! E vou resolver o desafio com você também.\n\n\nVamos aos estudos? Te aguardo nos vídeos!",
      "target_audience": [
        "Desenvolvedores e QAs que querem aprender automação de testes com uma ferramenta moderna e performática"
      ]
    },
    {
      "title": "从质量效能推动DevOps转型",
      "url": "https://www.udemy.com/course/devops-w/",
      "bio": "智能化API测试框架搭建指南",
      "objectives": [
        "1.收获一个CI平台到DevOps平台的推进的实践案例，掌握智能化API测试框架打造过程",
        "2.了解基于容器的持续集成平台",
        "3.学习AI-DT，引入开源；了解如何应用开源的AI测试框架服务于自我建设的DevOps平台",
        "4.掌握自解耦&自测试的检测装置，了解如何从开源框架中获取灵感打造自己的AI测试框架。"
      ],
      "course_content": {
        "课程导读": [
          "课程简介",
          "讲师介绍",
          "课程大纲"
        ],
        "课程内容": [
          "1.智能化API测试框架打造过程（上）",
          "2.智能化API测试框架打造过程（下）",
          "3.基于容器的持续集成平台",
          "4.学习AI-DT，引入开源",
          "5.自解耦&自测试的检"
        ],
        "课程回顾": [
          "课后寄语"
        ]
      },
      "requirements": [
        "有一定自动化测试工作经验"
      ],
      "description": "本课程从持续集成的原始框架开始，讲解在不同阶段的不同技术。\n随着测试工作重心的转变和工作量的陡然增加，以及推行单元测试过程中的各种阻碍，发现了智能化的单元测试框架EvoSuite，逐渐将其引入到CI平台中。随着容器化的推进和微服务化的演进，按照内部方式打造了智能化api测试框架，并将其进入到CI平台中，CI平台逐渐的演化成DevOps平台。测试过程逐渐的将测试工程师从测试脚本的撰写者变成了测试结果的鉴别和下一步进程的决策者。\n本节课程是由授课老师与三节课合作制作的。在此，要特别感谢老师的辛苦付出！经历了课程立项、设计、开发中的众多环节，我们才能最终为你呈现现在的这门课程。无论是授课老师还是三节课团队，都希望这门课程能够让你有所收获，希望同学们结合个人工作情况，学以致用。\n本课程版权归三节课所有，未经书面同意私自录制、转载等行为均属侵权行为。课程内的所有内容，包括但不限于视频、文字、图片均由三节课公司或其他权利人依法拥有其知识产权，包括但不限于著作权、商标权、专利权等。未经三节课公司的明确书面特别授权，任何人不得为任何目的使用以及向任何自然人或单位提供出售、营销、出版或利用三节课官网上提供的任何内容或服务。如有违反，您将承担由此给三节课公司或其他权利人造成的一切损失。",
      "target_audience": [
        "1.自动化测试方向技术从业者",
        "2.寻求智能化API测试框架打造方法的技术人员",
        "3.对自动化测试感兴趣的学习者"
      ]
    },
    {
      "title": "Testy jednostkowe w Python – zrozum, a nie zapamiętaj",
      "url": "https://www.udemy.com/course/testy-jednostkowe-w-python/",
      "bio": "Od pierwszego testu po mockowanie i automatyzację. unittest, pytest - realne przykłady w Python - naucz się unit test",
      "objectives": [
        "Pisać testy jednostkowe w Pythonie przy użyciu bibliotek unittest i pytest",
        "Tworzyć testy dla funkcji, klas, API oraz przypadków brzegowych.",
        "Wykorzystywać TDD (Test Driven Development) w praktyce.",
        "Stosować mockowanie i parametryzację testów w realnych projektach.",
        "Organizować strukturę testów w projekcie i automatyzować ich uruchamianie."
      ],
      "course_content": {
        "Wprowadzenie do testów jednostkowych": [
          "Dlaczego testy są ważne",
          "Czym jest test jednostkowy? - Podsumowanie",
          "Co powinieneś wiedzieć zanim oglądniesz kurs?",
          "Jak myśleć jak autor dobrych testów"
        ],
        "Pierwsze kroki z unittest": [
          "Pierwszy test w unittest – praktyczny przykład",
          "Asercje negatywne - testowanie warunków logicznych",
          "Asercje pozytywne - testowanie pozytywnych scenariuszy",
          "Praktyka na błędnym kodzie [ĆWICZENIE]",
          "Sztuka Pisania Dobrych Asercji: Jak Tworzyć Czytelne i Skuteczne Testy",
          "Pierwsze kroki w testach jednostkowych | Quiz"
        ],
        "Pisanie kodu przez testy (TDD)": [
          "Na czym polega TDD",
          "[Ćwiczenie] Przećwicz TDD",
          "TDD w praktyce - część 1 - Red Green Blue - assertEqual",
          "TDD w praktyce - część 2 - wyjątki - assertRaises",
          "TDD w praktyce część 3 - mixed wartości i refactoring",
          "TDD w praktyce część 4 - kolejne przypadki",
          "Wyjątki, listy, porówania - Ćwiczenie: parse_user_data i minimalne wymagania"
        ],
        "Wygodniejsze testowanie z pytest i pluginami": [
          "Python Test Explorer - plugin VSC do testów - struktura projektów",
          "Dlaczego pytest - migracja unittest do pytest"
        ],
        "Testowanie trudniejszych przypadków": [
          "Testy parametryzowane",
          "Testy parametryzowane - ids",
          "Mockowanie - teoria",
          "KROK 1 - tylko sukces- Mockowanie praktyka - sendEmail z TDD",
          "Krok 2 - side_effects - wyjątki",
          "Krok 3 - nieprawidłowy email - assert_not_called",
          "Setup i teardown",
          "Setup i teardown w praktyce - testujemy bloga i postowanie"
        ],
        "Dobre praktyki": [
          "Test coverage – mierzenie pokrycia kodu testami",
          "Test coverage w praktyce - instalacja i raportowanie w terminalu i HTML",
          "Super darmowy plugin do szybszego i wizualnego testowania coverage wewnątrz VSC",
          "Test wiadomości z całego kursu o testach jednostkowych"
        ]
      },
      "requirements": [
        "Podstawowa znajomość Pythona (zmienne, funkcje, instrukcje warunkowe, pętle).",
        "Python zainstalowany na komputerze",
        "Chęć pisania czystego, bezpiecznego kodu i gotowość do pracy z praktycznymi przykładami."
      ],
      "description": "Chcesz pisać kod w Pythonie, który działa pewnie i nie psuje się po każdej zmianie?\nMasz już podstawy Pythona, ale testy jednostkowe znasz tylko z nazwy?\nTen kurs powstał po to, by dać Ci konkretną przewagę w pracy i projektach.\nNauczysz się pisać praktyczne testy jednostkowe w Pythonie – takie, które naprawdę chronią Twój kod. Od pierwszej lekcji będziemy pracować na przykładach, które mają zastosowanie w realnych projektach, a nie w oderwanych od życia zadaniach.\nTo nie jest kurs o suchej teorii.\nKażde zagadnienie pokazuję na kodzie, krok po kroku, tłumacząc, dlaczego robimy to w ten sposób i co się stanie, jeśli coś pominiesz.\nW kursie znajdziesz:\nunittest – wbudowaną bibliotekę testów w Pythonie\npytest – wygodniejsze i szybsze pisanie testów\nTest Driven Development (TDD) w praktyce\ntesty wyjątków, przypadków brzegowych i nietypowych danych\nmockowanie do testowania kodu zależnego od API\nfixtures\norganizację i automatyzację testów w projekcie\nKurs pomoże Ci nie tylko pisać testy poprawnie, ale przede wszystkim rozumieć ich sens i unikać typowych błędów. Po ukończeniu będziesz potrafił wdrożyć testy w dowolnym projekcie i utrzymywać je tak, by pomagały, a nie przeszkadzały.\nTo kurs dla osób, które chcą pisać bezpieczny kod – taki, który możesz zmieniać bez obawy, że coś zepsujesz.\n\nJeśli zależy Ci na tym, by Twój kod był stabilny, łatwy w utrzymaniu i odporny na błędy – jesteś w dobrym miejscu.\nPonad 350 000 studentów na Udemy uczy się z moich kursów. Dołącz do tej grupy i przekonaj się, jak testy mogą ułatwić Ci życie jako programiście.\n\nJeśli kurs Ci się nie spodoba, pamiętaj – masz 30 dni gwarancji zwrotu pieniędzy.\nA jeśli będziesz miał pytania dotyczące kursu lub testów w Pythonie – pisz śmiało, zawsze chętnie pomogę.",
      "target_audience": [
        "Programiści Pythona, którzy chcą zacząć pisać testy jednostkowe.",
        "Osoby znające podstawy Pythona, ale nieposiadające doświadczenia w testowaniu kodu.",
        "Twórcy projektów, którzy chcą uniknąć regresji i błędów po wprowadzaniu zmian.",
        "Kursanci, którzy wolą praktyczne przykłady zamiast teoretycznych definicji."
      ]
    },
    {
      "title": "Selenium ile Test Otomasyonu(J-unit, Test NG, CucumberBDD)",
      "url": "https://www.udemy.com/course/selenium-ile-test-otomasyonuj-unit-test-ng-cucumber-bdd/",
      "bio": "En Temel Seviyeden Zirveye Selenium Web Driver Test Otomasyonu & Uygulamalı Proje",
      "objectives": [
        "Selenium Web Driver ile Test Otomasyonu yapabilecek uzmanlığa ulaşacaksınız.",
        "Junit , Test NG ve Cucumber BDD frameworklerini A'dan Z'ye öğreneceksiniz.",
        "Piyasada popüler ve en çok tercih edilen Frameworkleri sıfırdan oluşturabileceksiniz.",
        "Kursun sonunda gerçek iş hayatında ihtiyacınız olan herşeyi öğrenmiş ve kendi algoritmanızı oluşturabiliyor olacaksınız.",
        "En temel Statik ve Dinamik Locate alma yöntemlerini,Scripter ve Raporlamaları Oluşturabileceksiniz.",
        "İnterview aşamalarında size fark katacak Paralel testler ve Çapraz Browser Testlerini full donanım ile öğreneceksiniz",
        "Mülakatlarda karşınıza çıkabilecek senaryoların oluşturulma ve güncel olarak yenilenme süreçlerini kavrayacaksınız"
      ],
      "course_content": {},
      "requirements": [
        "Temel seviyede Java bilgisi"
      ],
      "description": "Sıfırdan Web Otomasyonu öğrenmek ya da bilgilerini geliştirmek isteyen kursiyerler için hazırlanmış bu içerikte her modül için özenle oluşturulmuş ve daha sonra sadece takıldığınız yerlere bakma kolaylığı sağlayan parçadan bütüne bir akış yöntemiyle hazırlanmıştır.Oluşturulan Reusable methodlar ile hem clean code yazma hem de uzun algoritmalar oluşturarak zaman kaybetmenizin önüne geçip zamanı verimli kullanmanızı sağlayan Classlar ile Framework çatısını oluşturan ince trickler ve interviewlerde karşınıza çıkacak muhtemel sorulara da değinilen kursta A dan Z ye donanım sahibi olmanız bunun yanı sıra oluşturulan Classlarda kullanılan yöntemleride rahatlıkla anlayıp özümsemeniz noktasında size çok büyük avantaj sağlayacaktır.İş hayatından kesitlere ve karşılaşacağınız senaryolara da değinilen kursta sadece eğitim değil deneyim de satın almış olacaksınız.Kursun sonunda birçok yeni yöntem ve method öğrenip tamamen iş hayatına yönelik çalışmalar içerisinde bulunabilecek ve kendi başınıza frameworkünüzü oluşturabileceksiniz.Piyasanın en popüler framework yapılarını öğreneceğiniz bu kursun sonunda iş hayatınızda karşınıza çıkacak spesifik durumlarda rahatlıkla algoritma üretebilecek bir seviyeye gediğinizi fark edeceksiniz.Kurs boyunca aklınıza takılan birçok sorunun kendiliğinden çözümlendiğini ve bununda ötesinde kendi cevaplarınızı tatmin edecek edecek şekilde yanıtlayabildiğinizi fark edeceksiniz.Ayrıca yine mülakatlarda sıkça karşınıza çıkabilecek \"Paralel Test\" ve \"CrossBrowser Test\" lerinin yapılarının nasıl olduğunu bu yapıların nasıl kurgulandığını rahatlıkla ifade edebileceksiniz.\nAyrıca eğitim sonunda bulunan proje ile öğrendiklerinizi fazlasıyla pekiştirmiş ve kullanmıs olacaksınız.\nŞimdi keyifli ve verimli çalışmalar.",
      "target_audience": [
        "Manuel Testten Otomasyon testine gecmek isteyen ve Sıfırdan Test Otomasyonunu öğrenek isteyenler için."
      ]
    },
    {
      "title": "Introducción a la automatización de pruebas Web - Playwright",
      "url": "https://www.udemy.com/course/introduccion-a-la-automatizacion-de-pruebas-web-playwright/",
      "bio": "Automatiza aplicaciones web usando playwright y Typescript",
      "objectives": [
        "Instalar y configurar las herramientas requeridas para desarrollar un script de prueba usando playwright",
        "Configurar VS Code IDE para la ejecución de pruebas con playwright",
        "Localizar elementos web dentro del DOM usando xpath y css selectors",
        "Depurar un script de automatización básico para identificar errores dentro de la automatización",
        "Ejecutar scripts por línea de comando",
        "Implementar el patrón page objects",
        "Ejecutar scripts automatizados con Jenkins"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Contacto conmigo",
          "Recomendaciones",
          "Presentación instructor",
          "Objetivos del curso",
          "¿Qué es Playwright?"
        ],
        "Planeación automatización": [
          "Estrategia automatización de pruebas",
          "Herramienta para seguir los avance"
        ],
        "Instalación de herramientas y configuración ambiente de trabajo": [
          "Herramientas",
          "Instalación de NodeJs y Npm",
          "Instalación de VS code y plugin Playwright for VsCode"
        ],
        "Configuración de recursos": [
          "Aplicación bajo prueba",
          "¿Cómo descargar los recursos?"
        ],
        "Localización de elementos": [
          "Herramientas del desarrollador",
          "Creación de proyecto base",
          "Creación de primer script",
          "Localización de elementos - Teoría",
          "Localización de elementos usando Xpath",
          "Localización de elementos usando Css Selector"
        ],
        "Automatizando con playwright": [
          "Automatizando flujo de Log in",
          "Automatizando flujo de Log in parte 2",
          "Creación de una aserción",
          "Creando datos con playwright",
          "Uso del code generator parte 1",
          "Uso del code generator parte 2",
          "Automatizando el registro",
          "Agregando Aserciones al registro",
          "Agregando Aserciones al registro - Parte 2",
          "Ejecución por línea de comandos",
          "¿Cómo organizar los tests?",
          "¿Cómo depurar un test?",
          "Mejorando la productividad con el plugin de Playwright para VS Code",
          "Uso de JS Faker para crear data aleatoria y dar dinamismo a los test",
          "Tomar capturas de pantalla/screenshots",
          "¿Cómo hacer reintentos y grabar videos?",
          "Automatización de carrito de compras - Parte 1",
          "Automatización de carrito de compras - Parte 2"
        ],
        "Patrón de diseño Page Objects": [
          "Refactorizando código a page objects - Parte 1",
          "Refactorizando código a page objects - Parte 2",
          "Refactorizando código a page objects - Parte 3",
          "Refactorizando código a page objects - Parte 4",
          "Convertir test de registration y buying new products a page objects"
        ],
        "Automatizando tareas varias": [
          "Agregar contactos de linkedin - Protocolo CDP - Parte 1",
          "Agregar contactos de linkedin - Protocolo CDP - Parte 2",
          "Agregar contactos de linkedin - Protocolo CDP - Parte 3",
          "Agregar contactos de linkedin - Protocolo CDP - Parte 4",
          "Agregar contactos de linkedin - Protocolo CDP - Parte 5",
          "Mejorando el reporte y código de playwright usando steps"
        ],
        "Integración con Jenkins": [
          "Descarga e instalación de Java",
          "Descarga e instalación de Jenkins",
          "Subiendo código a Github",
          "Creación de Job en Jenkins",
          "Parametrizando job de jenkins",
          "Configurando Job para ejecución periodica",
          "Ejecución con Github Actions"
        ],
        "Despedida y Agradecimientos": [
          "Despedida y agradecimientos"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación"
      ],
      "description": "¿Estás listo para llevar tus habilidades de prueba web al siguiente nivel? ¡Este curso es para ti!\n¿Qué aprenderás?\nFundamentos de Playwright: Descubre los conceptos básicos de Playwright, la herramienta moderna de automatización de pruebas web desarrollada por Microsoft.\nConfiguración Inicial: Aprende a instalar y configurar todas las herramientas necesarias para empezar a automatizar pruebas de manera eficiente.\nCreación de Scripts: Desde tu primer script hasta escenarios de prueba más complejos, te guiaremos paso a paso.\nMejores Prácticas: Adopta las mejores prácticas para escribir pruebas robustas y mantenibles.\n¿Por qué elegir este curso?\nAprendizaje Practico: Más que teoría, este curso está diseñado para que aprendas haciendo. Cada lección incluye ejemplos prácticos y ejercicios para que apliques lo aprendido de inmediato.\nInstructor Experimentado: Aprende de un experto en automatización de pruebas con años de experiencia en la industria y en la enseñanza.\n¿Quién debería tomar este curso?\nDesarrolladores y testers que buscan mejorar sus habilidades en automatización de pruebas.\nProfesionales que desean conocer las últimas herramientas y técnicas en automatización.\nCualquier persona interesada en el desarrollo de software de alta calidad.\n\n\nInscríbete hoy y comienza tu viaje hacia la automatización de pruebas web con Playwright. ¡Haz que tus pruebas sean más rápidas, confiables y fáciles de mantener!",
      "target_audience": [
        "Ingenieros de calidad de software que quieran aprender a automatizar",
        "Ingenieros de desarrollo de software que deseen aprender a automatizar aplicaciones web",
        "Ingenieros de sistema que quieran incorporar nuevas habilidades enfocadas a la automatización web"
      ]
    },
    {
      "title": "Testes unitários em C# com NUnit e Moq",
      "url": "https://www.udemy.com/course/testes-unitarios-em-csharp-com-nunit-e-moq/",
      "bio": "Aprenda a construir testes unitários elegantes e robustos utilizando os frameworks NUnit e Moq",
      "objectives": [
        "Compreender a importância dos testes unitários no processo de desenvolvimento de software",
        "Dominar os principais recursos dos frameworks NUnit e Moq para construção de testes unitários",
        "Escrever testes unitários de forma elegante e consistente",
        "Melhorar a qualidade dos software construídos"
      ],
      "course_content": {
        "Introdução": [
          "Roteiro"
        ],
        "Teste unitário": [
          "Tipos de teste",
          "Teste unitário",
          "Exemplo: Conta Bancaria",
          "Benefícios",
          "Quiz"
        ],
        "NUnit": [
          "Instalação",
          "Primeiro teste",
          "Ignorando testes",
          "Um pouco mais sobre a classe Assert",
          "Setup e Teardown",
          "Categorizando testes",
          "Testando Exceptions",
          "Parametrizando testes",
          "Testando timeout",
          "Cobertura de código",
          "Test Explorer",
          "Quiz"
        ],
        "Moq": [
          "O problema das dependências",
          "Injeção de dependência (solução)",
          "Moq - implementando o primeiro mock",
          "Matching argument",
          "Simulando excpetions",
          "Verificando comportamento do mock",
          "Quiz"
        ],
        "TDD": [
          "Test Driven Development"
        ],
        "Conclusão": [
          "Boas práticas",
          "Considerações finais"
        ]
      },
      "requirements": [
        "Ter conhecimento básico de C# e OO"
      ],
      "description": "Este treinamento aborda os conhecimentos necessários e fundamentais para que você entre com segurança nesse interessante universo dos testes unitários.\nVocê vai aprender a usar os principais frameworks do mercado, NUnit e Moq, mas além disso irá compreender todos os conceitos relacionados ao assunto.\nVocê vai entender como funciona a metodologia TDD (Test Driven Development), vai conhecer uma métrica importante relacionada a testes de software (Code coverage), além de um conjunto de boas práticas para implementação de testes unitários robustos e elegantes.\nNão é necessário conhecimento prévio sobre o assunto mas se já tem alguma experiência com testes unitários ou o assunto lhe é familiar, será uma ótima oportunidade de rever e consolidar conceitos importantes, além de absorver novos conhecimentos.",
      "target_audience": [
        "Desenvolvedor .NET",
        "Desenvolvedores de outras plataformas OO"
      ]
    },
    {
      "title": "API авто-тесты: Java, Rest Assured, Maven + Postman + Ci/CD",
      "url": "https://www.udemy.com/course/api-java-rest-assured-maven-postman-cicd/",
      "bio": "Полный курс по созданию API-фреймворка с нуля. От основ и теории до автоматизации и интеграции.",
      "objectives": [
        "Что такое API и для чего нужна автоматизация",
        "Ручное тестирование в Postman, создание простой коллекции",
        "Основные артефакты API: JSON/XML формат, REST API, Status codes, HTTP-запросы",
        "Инструменты для автоматизации: Rest Assured, TestNG, Maven, Jackson Data Bind, Lombok",
        "Создание API фреймворка с нуля",
        "Обработчик JSON формата + парсинг в Java код",
        "Работа с enum-классами + генератор рандомных значений",
        "GET, POST, PUT, DELETE запросы",
        "Метод для передачи Token в запросы и считывание с конфигурации",
        "Методы для отправки тела запроса с ендпоинтом + получения ответа",
        "Написание Assertions для ответов",
        "Принципы Java: Абстракция, наследование, инкапсуляция и полиморфизм",
        "Непрерывная интеграция Ci/CD на GitLab",
        "Настройка и запуск pipeline'ов с генерацией отчётов",
        "Настройка запуска тестов съютами и по расписанию"
      ],
      "course_content": {
        "Подготовка, цели и инструменты для начала работы": [
          "Обзор и цели курса",
          "Теория автоматизации + артефакты API",
          "Установка необходимых инструментов",
          "Знакомство с тестовым сайтом"
        ],
        "Ручное тестирование API и создание коллекции в Postman": [
          "Ручное тестирование: Подробный обзор тестового сайта, его возможности",
          "Ручное тестирование: Создание простой коллекции, POST запрос",
          "Ручное тестирование: User controller + Post controller",
          "Ручное тестирование: Comment controller"
        ],
        "Создание API проекта с нуля, парсинг JSON, assertions для ответов и авто тесты": [
          "Создание нового проекта на Java",
          "Добавляем структуру проекта",
          "Обработка JSON",
          "Настройка URL, метод для аутентификации и передачи Токена + RequestSpecification",
          "Pojo-классы, реализация методов отправки запросов, первый авто тест",
          "Assertions для тестов, новые тесты с запросами GET, PUT",
          "Post controller, FakeRandomGenerator, Enum classes",
          "Тесты для Comment controller + лямбда-выражения",
          "Более сложные авто тесты с preconditions"
        ],
        "Непрерывная интеграция Ci/CD на GitLab, запуска pipeline, генерация отчётов": [
          "Добавляем проект на GitLab + ssh ключ",
          "Конфигурационный файл для запуска Pipeline + отчёты",
          "Запуск тестов сьютами + запуск тестов по расписанию"
        ]
      },
      "requirements": [
        "Базовые знания языка программирования Java"
      ],
      "description": "Интенсивный курс по тестированию API, автоматизации и настройке CI/CD на GitLab\nПривет! Если вы хотите разобраться с тестированием API с нуля и научиться автоматизировать тесты, то этот курс точно для вас. Здесь мы разберём всё: от ручного тестирования до создания крутых автоматизированных тестов и настройки CI/CD для работы в реальных проектах!\nЧто вас ждёт в курсе:\nОсновы тестирования API. Что такое API, как оно работает, как разобраться в методах, протоколах и статусах ответов.\nРучное тестирование. Как грамотно тестировать API без автоматизации, чтобы понять, что и как нужно проверять.\nАвтоматизация API. Учимся создавать тесты на Java с использованием Maven, TestNG и Rest Assured. Сделаем это так, чтобы ваши тесты были не только полезными, но и удобными в работе.\nНастройка CI/CD. Подключим тесты к GitLab, чтобы всё работало автоматически — быстро, чётко и без лишней рутины.\nПрактика! Мы не будем учиться «в теории». Вы выполните настоящий проект, где сможете применить все знания и навыки, чтобы почувствовать себя в реальной рабочей ситуации.\nЭтот курс подойдёт всем: от тех, кто только начинает, до тех, кто уже немного знаком с тестированием, но хочет разобраться в автоматизации и внедрить её в свои проекты.\n\n\n***\n\n\nIntensive Course on API Testing, Automation, and CI/CD Setup on GitLab\nHi there! If you want to learn API testing from scratch and dive into automation, this course is perfect for you. We’ll cover everything: from manual testing to building awesome automated tests and integrating them into a CI/CD pipeline for real-world projects.\nHere’s what you’ll learn in the course:\nAPI Testing Basics. What APIs are, how they work, and how to understand methods, protocols, and response statuses.\nManual Testing. How to effectively test APIs without automation and identify what and how to validate.\nAPI Automation. Learn how to create tests in Java using Maven, TestNG, and Rest Assured. We’ll make sure your tests are not only functional but also easy to maintain and scale.\nCI/CD Integration. Hook your tests into GitLab to automate everything — fast, seamless, and hassle-free.\nHands-on Practice! This is not just theory. You’ll work on a real project where you can apply everything you’ve learned and experience real-world challenges.\nThis course is great for everyone: whether you’re just starting out or already have some experience but want to dive deeper into automation and bring it into your projects.",
      "target_audience": [
        "Все, кто желает быстро и результативно усвоить ключевые возможности автоматизации API",
        "Для начинающих Manual QA и также для Automation QA"
      ]
    },
    {
      "title": "Master: Robot Framework con Python Test QA (En Español)",
      "url": "https://www.udemy.com/course/master-robot-framework-nivel-1-en-espanol/",
      "bio": "Automatiza tus Pruebas con Robot Framework atravez de Ejemplos en Español, (Sub.-Es,En,Fra,Chi,Por,Hin,Ara,Etc)",
      "objectives": [
        "Aprenderás a utilizar el Framework Robot Framework de nivel Básico a Avanzado con Python con más de 100 Ejemplos en ESPAÑOL",
        "Crear tus pruebas desde Cero",
        "Aprende la bases de Este maravilloso Framework",
        "Aprenderás Estrategias para mejorar tus pruebas",
        "Crearas tus propias funciones y métodos para mejorar tus pruebas"
      ],
      "course_content": {},
      "requirements": [
        "No se necesita ninguno conocimiento previo para poder tomar este curso",
        "El curso va desde Cero hasta un nivel Básico - Intermedio - Avanzado para que aprendas las bases de este Framework",
        "De preferencia saber de Selenium y webdriver pero si no se puede empezar desde cero"
      ],
      "description": "Es un framework de automatización de tests de desarrollo dirigido y de automatización de procesos robóticos, de código abierto. Está basado en Python, y nos permite testar aplicaciones distribuidas y muy diversas.\nEl entorno que se ha creado está compuesto por múltiples librerías y herramientas ya construidas. 7 razones para usar Robot Framework en el testeo de aplicaciones.\n\n\n1. Es Open Source, como decíamos, lo cual permite disfrutar de todas las ventajas de ese tipo de código.\n2. Es muy sencillo de instalar, se puede hacer usando el administrador de paquetes estándar de Python, Pip. Puede instalarse desde la fuente, mediante una distribución JAR e incluso de forma manual.\n3. Es independiente de la aplicación a testar y de la plataforma, lo cual hace que Robot Framework resulte muy atractivo.\n4. Los usuarios no necesitan usar ningún lenguaje de programación para implementar tests y ejecutarlos.\n5. Proporciona multitud de librerías para testear todo tipo de aplicaciones, como librerías de Android, librerías de bases de datos, etc\n6. También proporciona una librería API para la creación de librerías de tests propias que pueden implementarse tanto en Java como en Python.\n7. Incorpora una línea de comandos y ficheros de salida en formatos XML legibles, que luego se utilizarán para la construcción de ficheros de log en formato HTML y ficheros de informe, también en HTML, con una gran cantidad de información mostrada de una forma bastante sencilla, intuitiva y precisa.\n\n\nEstá formado por cuatro módulos o capas bien diferenciadas que describiré a continuación, de forma ascendente en relación a su estructura:\n• Sistema bajo testeo: La parte más física de la pila de capas que tiene la arquitectura. En ella encontramos cada uno de los sistemas físicos, aplicaciones, entornos, etc., que vayan a ser testados, automatizados…\n• Capa de Tests, con sus herramientas y librerías. Esta capa se conecta con la inferior mediante las interfaces de sistema, y con la superior mediante una librería API de test.\n• Infraestructura de Robot Framework: se encuentra más arriba, en la pila. Esta parsea los datos de testeo e interactúa con la capa inferior.\n• Y por último, los datos de testeo.",
      "target_audience": [
        "Estudiantes con conocimientos básicos de la web y testing, pero sobre todo gente que quiera hacer pruebas automatizadas",
        "Tester y QA",
        "Administradores de Sistemas",
        "Programadores de Pruebas Automatizadas."
      ]
    },
    {
      "title": "Mastering C# Testing From Unit to Integration with Moq",
      "url": "https://www.udemy.com/course/mastering-c-testing-from-unit-to-integration-with-moq/",
      "bio": "Learn C# testing with MS Test, NUnit, xUnit, and Moq — build reliable, high-quality applications with hands-on example",
      "objectives": [
        "Understand the fundamentals of testing in C#.",
        "Master the AAA (Arrange, Act, Assert) testing pattern.",
        "Learn different types of unit testing and when to use them.",
        "Write and run tests using MSTest, NUnit, and xUnit frameworks.",
        "Use Moq to create and manage mock objects for testing.",
        "Set up in-memory databases with EF Core for fast, isolated tests.",
        "Perform integration testing with EF Core and SQL Server."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Content",
          "Testing is C#",
          "Unit Testing",
          "Importance of Testing",
          "Type of Unit Testing"
        ],
        "MS Testing": [
          "MS Testing",
          "Creating Project",
          "Failure Test Case",
          "Datarow",
          "Test Initialize and Test Cleanup",
          "Task I Solution",
          "Positive & Negative Test Case",
          "Ignore Test"
        ],
        "Nunit Testing": [
          "Nunit Test Project",
          "Mutiple Assert",
          "Exception in Assert",
          "Classic Assert vs Assert",
          "Test Case"
        ],
        "Moq": [
          "Moq Framework",
          "Moq in Nunit",
          "Task II Solution"
        ],
        "Xunit Testing": [
          "Xunit Test Project Setup",
          "Fact & InlineData",
          "Moq in Xunit"
        ],
        "Project with Unit & Intergration Testing": [
          "API Project Setup",
          "Repository",
          "Controller",
          "EF Core InMemory",
          "Teardown",
          "Repository Test",
          "Controller Test",
          "Integration Test",
          "Integration Repository Test"
        ]
      },
      "requirements": [
        "Basic c# knowledge is enough"
      ],
      "description": "Mastering C# Testing From Unit Tests to Integration\nIn this course, you’ll dive deep into testing C# applications, covering everything you need to build reliable, production-ready software. We’ll walk through essential concepts and practical examples step by step, including:\nUnderstanding Testing in C#: Learn the purpose and importance of testing in software development.\nUnit Testing with AAA (Arrange, Act, Assert): Structure your tests for clarity and effectiveness.\nTypes of Unit Testing: Explore different testing approaches and their use cases.\nMS Testing Framework: Get hands-on experience with Microsoft’s built-in testing tools.\nNUnit Testing: Write flexible and powerful tests using the NUnit framework.\nxUnit Testing: Leverage of xUnit testing for modern, streamlined test development.\nMocking with Moq: Simulate dependencies to isolate components and test behavior.\nBuilding a Real-World .NET Core API: Create a complete API project and implement both unit and integration tests using EF Core and SQL Server.\nBy the end of this course, you’ll know how to write, structure, and run tests effectively, handle complex scenarios with mocking, and ensure your APIs are thoroughly validated with integration tests. Perfect for developers looking to strengthen their testing skills and deliver higher-quality C# applications with power of automation testing in C# world.",
      "target_audience": [
        "Beginner to Intermediate C# Developers wanting to build robust applications with proper testing.",
        "ASP.NET Core Developers looking to implement unit and integration testing in real-world projects.",
        "Software Engineers eager to learn modern testing frameworks like MSTest, NUnit, and xUnit.",
        "QA Engineers and Testers wanting to deepen their understanding of automated testing in .NET.",
        "Developers Transitioning to .NET Core seeking to level up their skills with testing strategies."
      ]
    },
    {
      "title": "Introdução ao BDD",
      "url": "https://www.udemy.com/course/introducao-ao-bdd/",
      "bio": "Aprenda os fundamentos do BDD, escreva cenários claros e automatize testes com ferramentas como Cucumber",
      "objectives": [],
      "course_content": {
        "Fundamentos do BDD": [
          "Introdução ao BDD",
          "BDD vs TDD e ATDD",
          "Testes 2: BDD vs TDD e ATDD",
          "Princípios e Filosofia do BDD",
          "Testes 3: Princípios e Filosofia do BDD",
          "Testes 1: Introdução ao BDD"
        ],
        "Linguagem Gherkin": [
          "Estrutura e Sintaxe do Gherkin",
          "Testes 4: Estrutura e Sintaxe do Gherkin",
          "Testes 6: Estruturação de Cenários Complexos",
          "Criando Cenários Básicos",
          "Testes 5: Criando Cenários Básicos",
          "Estruturação de Cenários Complexos",
          "Exemplos e Tabelas no Gherkin",
          "Testes 7: Exemplos e Tabelas no Gherkin"
        ],
        "Ferramentas de BDD": [
          "Introdução ao Cucumber",
          "Testes 8: Introdução ao Cucumber",
          "Executando Testes com Cucumber",
          "Testes 9: Executando Testes com Cucumber",
          "Explorando Outras Ferramentas",
          "Testes 10: Explorando Outras Ferramentas"
        ],
        "Integração e Automação": [
          "BDD em Ambientes Ágeis",
          "Testes 11: BDD em Ambientes Ágeis",
          "BDD e Integração Contínua",
          "Testes 12: BDD e Integração Contínua",
          "Automatizando Testes com BDD",
          "Testes 13: Automatizando Testes com BDD"
        ],
        "Colaboração e Comunicação": [
          "Envolvimento de Stakeholders",
          "Envolvimento de Stakeholders",
          "Workshops de Descoberta",
          "Workshops de Descoberta",
          "Comunicação Efetiva com BDD",
          "Comunicação Efetiva com BDD"
        ],
        "Melhores Práticas e Desafios": [
          "Melhores Práticas no BDD",
          "Melhores Práticas no BDD",
          "Antipadrões no BDD",
          "Antipadrões no BDD",
          "Superando Desafios Comuns",
          "Superando Desafios Comuns"
        ],
        "Casos de Uso e Exemplos Avançados": [
          "Estudos de Caso Reais",
          "Estudos de Caso Reais",
          "Gerenciamento de Cenários Complexos",
          "Gerenciamento de Cenários Complexos"
        ],
        "Projeto Final e Avaliação": [
          "Desenvolvimento de Projeto Final",
          "Desenvolvimento de Projeto Final",
          "Apresentação e Feedback",
          "Apresentação e Feedback"
        ]
      },
      "requirements": [
        "Mesmo sem experiência avançada, você poderá acompanhar o curso. Todo o conteúdo será explicado de forma clara, com foco em iniciantes no BDD.",
        "É importante que os alunos tenham uma compreensão geral sobre como o desenvolvimento de software funciona, incluindo conceitos básicos de programação.",
        "Ter noções de testes de software (como testes unitários ou testes automatizados) será útil, mas não obrigatório.",
        "Os alunos precisarão de um computador para acompanhar as práticas e uma conexão estável à internet para acessar o conteúdo do curso.",
        "Para atividades práticas, será necessário ter um editor de código (como VS Code) e uma linguagem de programação configurada (como Java, Python ou outra de sua escolha). O curso explicará como usar isso no contexto do BDD."
      ],
      "description": "Transforme a forma como você desenvolve software com o poder do Behavior-Driven Development (BDD)!\nVocê já enfrentou problemas de comunicação entre equipes de desenvolvimento, QA e stakeholders? Já passou por situações em que os requisitos de um projeto ficaram confusos ou mal documentados? Ou talvez você esteja em busca de uma forma mais eficiente de alinhar o desenvolvimento técnico às necessidades reais do negócio?\nO Behavior-Driven Development (BDD) é uma abordagem moderna e colaborativa que ajuda a resolver esses problemas, promovendo alinhamento entre todas as partes envolvidas em um projeto. Com este curso \"Introdução ao BDD\", você aprenderá tudo o que precisa para começar a aplicar essa poderosa metodologia no seu dia a dia.\nO Que Você Vai Aprender?\nOs fundamentos do BDD e como ele se diferencia de TDD e ATDD.\nComo escrever cenários claros e compreensíveis usando a linguagem Gherkin.\nComo usar ferramentas como Cucumber para automatizar testes baseados em BDD.\nMelhores práticas para aplicar o BDD em ambientes ágeis e pipelines de integração contínua.\nComo envolver stakeholders e melhorar a comunicação entre equipes técnicas e de negócio.\nIdentificar e evitar antipadrões, superando desafios comuns no uso do BDD.\nCriar um projeto prático, aplicando todos os conceitos aprendidos ao longo do curso.\nPor Que Este Curso É Para Você?\nEste curso foi criado para desenvolvedores, QAs, analistas de negócios, product owners, estudantes de tecnologia e qualquer pessoa que queira dominar o BDD. Não importa se você é iniciante ou já tem experiência, o conteúdo foi pensado para ser claro, prático e aplicável desde o primeiro momento.\nO Que Mais Você Vai Ganhar?\nAcesso a materiais ricos e exemplos práticos.\nA possibilidade de trabalhar em um projeto final real.\nConhecimento para estruturar cenários complexos e criar testes alinhados às necessidades reais do negócio.\nAo final do curso, você estará pronto para aplicar o BDD em seus projetos, promovendo colaboração, comunicação e alinhamento entre equipes, transformando a forma como você entrega valor aos seus clientes.\nNão perca tempo! Inscreva-se agora e dê um passo à frente na sua carreira.",
      "target_audience": [
        "Desenvolvedores Iniciantes e Intermediários: Profissionais que desejam aprender práticas modernas de desenvolvimento e melhorar a colaboração com equipes de negócio.",
        "Testadores de Software (QA): Especialistas em qualidade que querem escrever cenários de teste claros e automatizá-los com ferramentas como Cucumber.",
        "Scrum Masters e Agile Coaches: Profissionais que buscam implementar o BDD para melhorar a comunicação e o alinhamento em equipes ágeis.",
        "Product Owners e Gerentes de Produto: Líderes de produto interessados em alinhar requisitos de negócio com a equipe técnica usando cenários claros e objetivos.",
        "Analistas de Negócios: Analistas que precisam traduzir requisitos de negócio em cenários compreensíveis para todos os envolvidos.",
        "Estudantes de Tecnologia: Alunos ou recém-formados em cursos de tecnologia que querem adicionar o BDD ao seu conjunto de habilidades.",
        "Profissionais de Automação de Testes: Engenheiros que desejam adotar o BDD para criar testes automatizados alinhados com requisitos reais de negócios.",
        "Equipes de Desenvolvimento de Produtos Digitais: Times buscando aprimorar sua colaboração e o alinhamento entre áreas técnicas e de negócio.",
        "Consultores de Tecnologia: Profissionais que ajudam empresas a adotar metodologias modernas e querem incluir o BDD em suas práticas.",
        "Qualquer Pessoa Interessada em BDD: Curiosos e profissionais de qualquer área que desejam entender e aplicar os fundamentos do Behavior-Driven Development."
      ]
    },
    {
      "title": "Aprenda testes integrados com Selenium em C#",
      "url": "https://www.udemy.com/course/aprenda-testes-integrados-com-selenium-em-csharp/",
      "bio": "Aprenda na prática a criar um projeto do zero para fazer testes automatizados com selenium e c# (visual code)",
      "objectives": [
        "Criar testes integrados com Selenium e C#",
        "Ser capaz de automatizar os testes de uma aplicação"
      ],
      "course_content": {},
      "requirements": [
        "Ter conhecimento básico em c#"
      ],
      "description": "Neste curso vamos criar do zero um projeto em c# (visual code) usando selenium para testar um web application, vamos aprender também boas práticas e um pouco sobre o conceito de SOLID.\nCurso 90% pratico e 10% teórico, isso por que vamos fazer juntos um projeto de testes automatizados (xunit), passo a passo, do inicio ao fim.\nO Curso está leve e com bastante conteúdo, sempre direto ao ponto maximizando o aprendizado",
      "target_audience": [
        "Desenvolvedores c#",
        "Testers com conhecimento básico em programação"
      ]
    },
    {
      "title": "Dominando o PLAYWRIGHT!",
      "url": "https://www.udemy.com/course/dominando-o-playwright/",
      "bio": "Dominando o PLAYWRIGHT!",
      "objectives": [
        "Automatizar testes utilizando o playwright",
        "Javascript básico",
        "Conceitos de automação de testes",
        "Ferramentas auxiliares"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos básicos em automação de testes"
      ],
      "description": "A FERRAMENTA DE AUTOMAÇÃO DE TESTES MAIS INCRÍVEL QUE VOCÊ VAI VER!!! Este é o Playwright!\nA Microsoft com certeza deu um passo muito importante no mundo dos testes automatizados e considerando as ferramentas atuais, nenhuma não chega nem perto do poderoso Playwright. Tudo é muito simples e robusto ao mesmo tempo. Automatizar testes nunca foi tão fácil.\nAtravés de uma ferramenta de depuração, é possível criar ou gravar script’s em várias linguagens de programação, tais como Python, C#, Java, NodeJS (Javascript e Typescript), executando-os nos principais navegadores atuais, como Chrome, Firefox, Webkit (Safari) e Edge. Sua fácil configuração é um ponto muito positivo, visto que, ao instalar o framework, todo o ambiente estará pronto, uma vez que são instaladas todas as dependências necessárias, inclusive os diferentes navegadores suportados.\nPara interagir com o browser, o Playwright utiliza protocolos de depuração remota para navegadores, a exemplo o CDP para Chromium, que possibilita uma conexão via WebSocket entre o executor do teste e o navegador, otimizando os testes e reduzindo o risco de falhas.\nUm outro recurso importante do Playwright é o auto-wait. Com ele, é possível tornar a escrita dos testes ainda mais simples, permitindo que o desenvolvedor se preocupe somente com as interações com o navegador, deixando o trabalho de aguardar os elementos totalmente com o framework.",
      "target_audience": [
        "desenvolvedores, engenheiros de teste, automatizadores de teste, gestores de teste."
      ]
    },
    {
      "title": "Complete manual software testing course",
      "url": "https://www.udemy.com/course/learn-manual-testing-in-hindi/",
      "bio": "software testing",
      "objectives": [
        "basic software testing",
        "basic concept of testing",
        "manual testing",
        "types of testing & many more"
      ],
      "course_content": {},
      "requirements": [
        "no coding anyone can join"
      ],
      "description": "Software testing tutorial provides basic and advanced concepts of software testing. Our software testing tutorial is designed for beginners and professionals.\nSoftware testing is widely used technology because it is compulsory to test each and every software before deployment.\nOur Software testing tutorial includes all topics of Software testing such as Methods such as Black Box Testing, White Box Testing, Visual Box Testing and Gray Box Testing. Levels such as Unit Testing, Integration Testing, Regression Testing, Functional Testing. System Testing, Acceptance Testing, Alpha Testing, Beta Testing, Non-Functional testing, Security Testing, Portability Testing. Software testing is a process of identifying the correctness of software by considering its all attributes (Reliability, Scalability, Portability, Re-usability, Usability) and evaluating the execution of software components to find the software bugs or errors or defects. Testing is a group of techniques to determine the correctness of the application under the predefined script but, testing cannot find all the defect of application. The main intent of testing is to detect failures of the application so that failures can be discovered and corrected. It does not demonstrate that a product functions properly under all conditions but only that it is not working in some specific conditions.\nTesting furnishes comparison that compares the behavior and state of software against mechanisms because the problem can be recognized by the mechanism. The mechanism may include past versions of the same specified product, comparable products, and interfaces of expected purpose, relevant standards, or other criteria but not limited up to these.\nTesting includes an examination of code and also the execution of code in various environments, conditions as well as all the examining aspects of the code. In the current scenario of software development, a testing team may be separate from the development team so that Information derived from testing can be used to correct the process of software development.\nThe success of software depends upon acceptance of its targeted audience, easy graphical user interface, strong functionality load test, etc. For example, the audience of banking is totally different from the audience of a video game. Therefore, when an organization develops a software product, it can assess whether the software product will be beneficial to its purchasers and other audience.",
      "target_audience": [
        "start career in IT sector"
      ]
    },
    {
      "title": "Test Android Mobile với APPIUM",
      "url": "https://www.udemy.com/course/test-android-mobile-voi-appium/",
      "bio": "Sử dụng APPIUM để test các Application như Native và Hybird.",
      "objectives": [
        "Chức năng, kiến trúc khi sử dụng Appium",
        "Thiết lập môi trường Appium",
        "Làm việc với Native App va Hybrid App",
        "Định vị các phần tủ trong ứng dụng di động Android",
        "Tìm các thành phần trong ứng dụng di động bằng ID, Tên lớp, XPath, Tên hoặc AndroidUIAutomator và UISelector",
        "Send Keys, chọn danh sách tự động",
        "Chuyển đổi bật / tắt, kéo và thả, vuốt, cuộn tự động trong Appium",
        "Viết Scenario test",
        "Quay phim lại test scenario và Screenshoot khi test case pass hay fail"
      ],
      "course_content": {},
      "requirements": [
        "Học viên cần biết các kiến thức cơ bản JAVA JDK, MAVEN, IntelliJ IDEA Community, Jenkin."
      ],
      "description": "Trong môi trường công nghệ di động ngày càng phát triển, việc tự động hóa kiểm thử ứng dụng Android là một kỹ năng vô cùng quan trọng, giúp tăng năng suất và giảm thiểu sai sót trong quá trình phát triển ứng dụng. Khóa học này sẽ giúp bạn trở thành một chuyên gia kiểm thử ứng dụng di động với Appium – một công cụ mạnh mẽ, kết hợp với ngôn ngữ lập trình Java, giúp bạn xây dựng và thực hiện các bài kiểm thử tự động cho các ứng dụng Android trên cả thiết bị thật và trình giả lập.\nBắt đầu từ những kiến thức cơ bản về Java, khóa học sẽ hướng dẫn bạn cách sử dụng Java trong việc tự động hóa các bài kiểm thử, đồng thời trang bị cho bạn kỹ năng làm việc với các công cụ như IntelliJ IDEA và Maven. Bạn sẽ được học:\nThiết lập môi trường Appium: Cách cài đặt và cấu hình Appium để sẵn sàng cho công việc kiểm thử tự động.\nLập trình và tự động hóa với Java: Hiểu cách xây dựng và phát triển các bài kiểm thử với Java cho ứng dụng Android.\nĐịnh vị các yếu tố trong ứng dụng: Sử dụng các kỹ thuật mạnh mẽ như ID, XPath, AndroidUIAutomator để tìm và tương tác với các thành phần trong ứng dụng.\nCác thao tác tự động: Học cách thực hiện các thao tác như gửi dữ liệu vào các trường, chọn mục từ danh sách, kéo thả, vuốt màn hình, và cuộn trang trên ứng dụng Android.\nThực hiện kiểm thử với Native và Hybrid App: Bạn sẽ hiểu rõ cách làm việc với các ứng dụng Android thuần túy (native) và ứng dụng kết hợp web và di động (hybrid).\nGhi lại quá trình kiểm thử: Khóa học còn hướng dẫn bạn cách quay video và chụp màn hình trong quá trình kiểm thử để dễ dàng phân tích và báo cáo kết quả.\nKhóa học này đặc biệt thiết kế dành cho những ai đã có kiến thức cơ bản về lập trình Java và muốn nâng cao khả năng tự động hóa kiểm thử ứng dụng di động. Nếu bạn đang làm việc trong lĩnh vực phát triển phần mềm hoặc kiểm thử ứng dụng, khóa học sẽ trang bị cho bạn những công cụ và kỹ năng cần thiết để tự động hóa quy trình kiểm thử, giúp tiết kiệm thời gian, nâng cao hiệu quả và đạt được kết quả chính xác hơn.\nYêu cầu trước khi tham gia khóa học:\nHọc viên cần có kiến thức cơ bản về Java, JDK, Maven, và IntelliJ IDEA.\nKhóa học này sẽ là bước đệm tuyệt vời để bạn phát triển sự nghiệp trong lĩnh vực kiểm thử tự động hóa, một kỹ năng đang ngày càng được yêu cầu cao trong ngành công nghiệp phần mềm.",
      "target_audience": [
        "Học viên yêu thích về automation testing"
      ]
    },
    {
      "title": "Testando API REST com MongoDB e RabbitMQ em Cypress",
      "url": "https://www.udemy.com/course/testando-api-rest-com-cypress/",
      "bio": "Com foco em boas práticas de testes para APIs desenvolvidas com arquitetura de Microsserviços",
      "objectives": [
        "Como construir um projeto de testes para API em Cypress",
        "Utilizar Custom Commands para construir a camada de serviços",
        "Construir tasks do Cypress para conectar no banco de dados",
        "Como consumir uma API no modo hardcore 😱 sem Swagger",
        "Testar requisições HTTP (Post, Get, Put e Delete)",
        "Trabalhar com fixtures para request e response",
        "Testar e adicionar tokens em requisições HTTP",
        "Interceptação e validação de dados na fila de mensageria"
      ],
      "course_content": {},
      "requirements": [
        "Básico do Cypress"
      ],
      "description": "Aprimore suas habilidades em testes automatizados para APIs REST com o nosso incrível curso de Cypress! Nele, você aprenderá as melhores práticas para testar APIs desenvolvidas com arquitetura de microsserviços.\nOs testes de API desempenham um papel crucial no processo de desenvolvimento de software, garantindo que a aplicação funcione conforme o esperado e facilite a comunicação entre diferentes componentes.\nAo executar testes na API, tanto os QAs quanto os desenvolvedores podem garantir que a funcionalidade da aplicação esteja intacta e que qualquer alteração no sistema não afete o desempenho geral dela. Com o Cypress e o JavaScript, você pode construir e executar esses testes, obtendo um feedback muito rápido para verificar se o software está funcionando corretamente.\nNeste curso prático, você aprenderá como implementar testes automatizados de API com o poderoso Cypress 12.\nMas afinal, o Cypress oferece suporte para testes de APIs?\nApesar de ser um framework de teste frontend, o Cypress realiza solicitações HTTP em nome das aplicações web enquanto está em execução. Surpreendentemente, ele utiliza o Node.js como motor para fazer requisições HTTP ao servidor da API, permitindo que você teste suas APIs com sucesso. O resultado é excelente!\nEntão, que tal embarcar nessa jornada comigo e aprimorar suas habilidades em testes automatizados de APIs com o Cypress? As aulas foram preparadas com base em minha experiência e conhecimento, e espero que você aproveite ao máximo. Vamos aprender juntos?",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Performance Testing Using Apache JMeter (بالعربية)",
      "url": "https://www.udemy.com/course/performance-testing-using-apache-jmeter-arabic/",
      "bio": "JMeter from Zero to HERO",
      "objectives": [
        "سوف تتعلم فى هذا الكورس اساسيات قياس اختبارات التحمل والاداء وانواعها ودورة حياتها",
        "سوف تتضح الصورة كاملة حول استخدام JMeter  لقياس الاداء والتحمل",
        "سوف تكون محترف فى دورة حياة قياس الأداء والتحمل واتمتة وتنفيذه وتحليل الأداء",
        "استخدام الملحقات الخاصة بال JMeter والاستفادة منها",
        "الالمام بالتقارير التى تساعد فى تحسين أداء وتحمل النظام والمساعدة فى حل المشاكل",
        "سوف تكون لديك القدرة على اختبار الأداء الويب وقواعد البيانات وكذلك خدمات الويب"
      ],
      "course_content": {},
      "requirements": [
        "لا يشترط اى معرفة بالبرمجة يكفى المعرفة باساسيات الاختبارات"
      ],
      "description": "الاهداف الرئيسية من الدورة التدريبية\nسوف تتعلم فى هذا الكورس اساسيات قياس اختبارات التحمل والاداء وانواعها ودورة حياتها\nسوف تتضح الصورة كاملة حول استخدام JMeter  لقياس الاداء والتحمل\nسوف تكون محترف فى دورة حياة قياس الأداء والتحمل واتمتة وتنفيذه وتحليل الأداء\nاستخدام الملحقات الخاصة بال JMeter والاستفادة منها\nالالمام بالتقارير التى تساعد فى تحسين أداء وتحمل النظام والمساعدة فى حل المشاكل\nسوف تكون لديك القدرة على اختبار الأداء الويب وقواعد البيانات وكذلك خدمات الويب",
      "target_audience": [
        "QC\\QA Engineer, Testers (Beginner, Intermediate, Expert), developer, anyone interested to measure application Performance"
      ]
    },
    {
      "title": "Testes Automatizados usando Robot Framework - Módulo 2",
      "url": "https://www.udemy.com/course/testes-automatizados-usando-robot-framework-modulo-2/",
      "bio": "Usando recursos avançados da ferramenta",
      "objectives": [
        "Instalar, configurar e atualizar o Robot Framework",
        "Criar e rodar scripts automatizados",
        "Acessar banco de dados com o Robot",
        "Variáveis avançadas e orientação a objeto",
        "Trabalhar com estruturas lógicas de controle e condicionais",
        "Criar palavras-chave personalizadas",
        "XPath avançado",
        "Data Driven Tests",
        "Teste de APIs",
        "Qualidade dos scripts de teste"
      ],
      "course_content": {
        "Introdução ao módulo 2": [
          "Apresentação inicial do módulo 2"
        ],
        "Atualização das Ferramentas de Teste": [
          "Apresentação",
          "Atualizar Python e Bibliotecas",
          "Atualizar navegadores e drivers",
          "ATENÇÃO: Chrome fechando sozinho mesmo sem o Close Browser"
        ],
        "Novas Habilidades": [
          "Mudando nome de logs e reports",
          "Personalizar titulos de logs e relatorios",
          "Tags",
          "Timestamps",
          "Variaveis de sistema",
          "Variáveis automáticas",
          "Sintaxe estendido e orientação a objeto",
          "Retornando valores de palavras-chave",
          "Palavras chave com Python"
        ],
        "XPath Avançado": [
          "Introducao ao XPath",
          "XPath na pratica",
          "Exemplo XPath absoluto vs relativo",
          "Funções",
          "Axes/Eixos",
          "XPath parametrizável"
        ],
        "Acessando Banco de Dados": [
          "Instalacao MySQL",
          "Instalação biblioteca DatabaseLibrary",
          "Externalizando dados de conexao",
          "Verificando tabelas no banco de dados",
          "Verificando dados no banco de dados",
          "Retornando dados do banco",
          "Verificando quantidade de registros",
          "Criando, atualizando e excluindo"
        ],
        "Testes Orientados a Dados": [
          "Introdução aos Templates",
          "Exemplo: Cenários de login inválidos",
          "Templates para cenários de login inválidos",
          "Biblioteca para ler dados de arquivo CSV",
          "Usando a biblioteca CSV para os cenários de login inválidos",
          "CSVLib",
          "Dados de teste em JSON"
        ],
        "Teste de APIs": [
          "Introdução API e API Restful",
          "Teste da API ViaCEP",
          "IMPORTANTE: Atualização da keyword Dictionary Should Contain Item no RF6.0",
          "Introdução FakeRESTAPI",
          "Testando GET para listagem de livros",
          "Testando GET de livro por ID",
          "Testando POST para criar livro",
          "Testando PUT para alterar livro",
          "Testando DELETE para excluir livro"
        ],
        "Qualidade dos Scripts de Teste Automatizados": [
          "Introdução",
          "Verificando script com a opção --dryrun",
          "RFLint",
          "Robocop"
        ]
      },
      "requirements": [
        "Idealmente ter feito o módulo 1 deste curso",
        "Noção básica de teste de software e que saiba como criar testes manuais para servir de base para seus testes automatizados",
        "Noção básica de lógica de programação, entender os conceitos de variáveis, funções, métodos e laços",
        "Não é necessário ter experiência prévia em programação usando Selenium",
        "Não é necessário ter experiência prévia em automação"
      ],
      "description": "O curso Testes Automatizados Usando Robot Framework – Módulo 2 vai mostrar recursos mais avançados da linguagem, como por exemplo automação de APIs, acesso a banco de dados e testes orientados a dados (Data Driven Tests).\nO Robot é um framework para automação genérica de testes, ou seja, você pode automatizar sites, aplicativos Web, APIs, desktop e mobile, usando um único framework.\nE o melhor, ele não exige conhecimento específico em qualquer linguagem de programação. O objetivo do framework é tornar os testes mais reaproveitáveis e fáceis de implementar usando palavras-chaves pré-definidas e/ou personalizadas.\nO Robot permite aos testadores e pessoas da área da Qualidade de Software automatizar mesmo sem ser muito técnico.\nNeste curso vamos ver como manter sempre atualizadas nossas ferramentas de teste como bibliotecas e drivers, e demais dependências. Os procedimentos de atualização do framework são apresentados de maneira clara e objetiva. Estudaremos algumas das principais bibliotecas do framework como a DatabaseLibrary para acessar o banco de dados realizando comandos SQL diretamente usando o Robot Framework e a biblioteca Requests para automação de APIs.\nVamos estudar também o XPath de forma avançada para permitir encontrar elementos nas telas que vamos automatizar usando a biblioteca SeleniumLibrary.\nAo final vamos ver dicas de como manter a qualidade dos nossos scripts automatizados usando ferramentas de lint que analisam código-fonte para acusar erros de programação, bugs, erros estilísticos, e construções suspeitas.",
      "target_audience": [
        "Analistas de teste e profissionais da área de Qualidade de Software que desejam iniciar no mundo da automação",
        "Analistas de teste que já fazem automação mas querem conhecer novas opções para realizar seu trabalho",
        "Curiosos em geral sobre o assunto automação de testes"
      ]
    },
    {
      "title": "QA קורס בדיקות תוכנה ידני",
      "url": "https://www.udemy.com/course/qa-israelonline-cource/",
      "bio": "QAקורס בדיקות התוכנה המותאם בדיוק לשוק ההייטק הישראלי, בוגרי הקורס יוכלו להשתלב בהצלחה רבה ובאופן עצמאי בעולם ה",
      "objectives": [
        "ארכיטקטורת עולם הבדיקות",
        "פרקטיקה ולימוד חשיבה של בודק תוכנה בשביל לבנות קריירה מוצלחת",
        "איך לבצע בדיקות ווב",
        "איך לבדוק אפליקציות מובייל",
        "בדיקות בקאנד",
        "איך לכתוב מסמכי בדיקות בצורה נכונה",
        "איך לפתוח באגים בצורה נכונה",
        "איך לקבל זימונים לראיונות עבודה ולצלוח אותם",
        "תלמדו את סוגי הבדיקות ואיך ליישם אותן"
      ],
      "course_content": {
        "היכרות": [
          "מה זה בדיקות תוכנה והאם זה יכול להתאים לי?",
          "קישור לדיסקורד"
        ],
        "בסיס עולם הבדיקות": [
          "ארכיטקטורת עולם התוכנה",
          "חידון ארכיטקטורה",
          "הכרות עם סוגי הבדיקות",
          "מה הן סוגי הבדיקות?"
        ],
        "בדיקות פרונט אנד": [
          "שיעור 1",
          "שיעור 2",
          "שיעור 3",
          "שיעור 4",
          "סיכום פרונט אנד"
        ],
        "בדיקות מובייל": [
          "בדיקות פרונט אנד מובייל",
          "בדיקות מובייל נייטיב 1",
          "בדיקות מובייל נייטיב 2"
        ],
        "סיכום בדיקות פרונט אנד": [
          "סיכום בדיקות פרונט אנד",
          "סיכום בדיקות פרונט אנד"
        ],
        "בדיקות צד שרת": [
          "Database",
          "JSON",
          "API",
          "Postman",
          "שאלון ראיון בקאנד",
          "SQL",
          "SQL Coding 1",
          "SQL Coding 2",
          "SQL Coding 3",
          "SQL Coding 4",
          "SQL Coding 5",
          "שאלת סיכום פרונטאנד ובקאנד"
        ],
        "מסמכים לבודק התוכנה": [
          "היכרות עם הצוות ומסמכי הבדיקה",
          "פתיחת באגים בדרך הנכונה"
        ],
        "צבירת נסיון רלוונטי לתעשייה": [
          "פרילאנס - איך ואיפה?"
        ],
        "חיפוש עבודה בצורה הנכונה": [
          "היכרות עם לינקדאין ויצירת פרופיל נכון",
          "איך לכתוב קורות חיים בצורה נכונה",
          "איך לשלוח קורות חיים בלינקדאין ולקבל זימון לראיון עבודה"
        ],
        "סימולציות לראיונות": [
          "הסבר על התהליך המלא וראיון טלפוני.",
          "ספיץ'",
          "פסיכולוגיית ראיונות"
        ]
      },
      "requirements": [
        "אנגלית בסיסית",
        "חיבור לאינטרנט"
      ],
      "description": ":דרישות\nידע בסיסי באנגלית (קריאה וכתיבה, לא חייב רמת שיח גבוהה)\nרצון להכנס או לחקור את עולם בדיקות התוכנה\nמחשב וחיבור לאינטרנט\n\n\n?למי מתאים הקורס\nהקורס מתאים במיוחד לאנשים ללא נסיון או רקע בעולם התוכנה, והוא מונגש בצורה ברורה ומדוייקת לאנשים שרוצים להכנס לעולם בדיקות התוכנה.\nהקורס מתאים לבודקים או מתכנתים שרוצים לשפר ולהתמקצע באיכות הבדיקות והעבודה שלהם.\nהקורס מתאים לכל מי שרוצה להבין אם עולם התוכנה מדבר אליו מבלי להתחייב או להוציא סכומים גבוהים של כסף\n\n\n?למה כדאי לי לעסוק בעולם הבדיקות\nעולם הבדיקות הוא מרתק, עם עבודה ורסטילית וגיוון יום יומי\nהקריירה בעולם הבדיקות היא רחבה מאוד, יש אופציות קידום מהירות ורחבות גם לאנשים ללא השכלה\nאין סף כניסה לעולם הבדיקות, אין צורך בתעודות רשמיות או השכלהה גבוהה, רק הבנה ולמידה עצמית ואת כל הכלים תוכלו לקבל בקורס\nהמשכורות בעולם הבדיקות מאוד גבוהות, יכולות להתחיל מ8000 - 12000 לבודקים ללא נסיון ועד סכומים של 35-50 אלף בממוצע לתפקידים בכירים\n?מה נלמד בקורס\nארכיטקטורת עולם התוכנה - הבסיס של עולם התוכנה על מנת שנוכל להבין את מהות הבדיקות\nסוגי בדיקות השונות ומה המשמעות שלהן ואיך ליישם אותן בתהליכי עבודה\nפיתוח חשיבה אנליטית מצד הבדיקות - לתת כלים לאיך לגשת לבדיקות בצורה הנכונה לאורך כל הקריירה\nבדיקות פרונטאנד\nבדיקות מובייל נייטיב ו ווב\nבדיקות צד שרת\nעבודה מול דאטאבייסים\nעבודה עם API\nSQL\nמסמכים לבודק התוכנה - מסמכי אפיון ומסמכי בדיקה\nאיך פותחים באגים בצורה נכונה ולמה\nניהול סיכונים\nכתיבת קורות חיים - איך לנצח את האלגוריתם\nאיך לצבור נסיון עם החברות המובילות במשק\nאיך לקבל זימונים לראיונות עבודה\nפסיכולוגיית ראיונות וניהול מו\"מ בראיונות בשביל להבטיח חוזה מנצח\n\n\n?למה כדאי לי לבחור דווקא בקורס הזה\nהמרצה עבד בחברות המובילות בתעשייה הישראלית, בעל 4 שנים בבדיקות ידניות ו3 שנים בבדיקות אוטומציה וכיום מוביל את מערך הבדיקות ומנהל תהליכים.\nהקורס בעברית ומותאם ספציפית לצרכי ההייטק הישראלי\nהקורס ממוקד, וכל עיקר הקורס הוא לתת את הכלים הנכונים בשביל לסלול את הדרך שלך לקריירה מוצלחת בעולם ההייטק\nכל רוכש קורס יכול להצטרף לקבוצת דיסקורד שיהיה אפשר להתייעץ עם המרצה ובוגרי קורס נוספים\nהקורס היחידי בארץ עם הסילבוס הרחב ביותר שמקיף את כלל סוגי הבדיקות ונותן כלים פרקטיים איך להתמודד עם תרחישי בדיקה חדשים בצורה נכונה",
      "target_audience": [
        "הקורס מותאם לאנשים ללא רקע טכני",
        "בודקי תוכנה ידניים שרוצים לשפר ידע ושכר",
        "מתכנתים שרוצים לקחת את יכולת הבדיקות שלהם לרמה הבאה"
      ]
    },
    {
      "title": "【ウズカレ式】2.5時間で「ソフトウェアテスト設計の概要」が学べる講座＜JSTQB-FL試験対策①＞",
      "url": "https://www.udemy.com/course/jstqb-tr/",
      "bio": "#FL試験出題範囲1章、2章完全対応 #最短合格 #累計受講者8万人超え #企業研修のプロ講師陣が監修 #徹底した図解学習 #初心者・未経験者 #QAエンジニア #テスター #TDD、CI #PMプロジェクトマネージャー",
      "objectives": [
        "ソフトウェアの欠陥を発見するだけでなく、計画的かつ体系的なテストを通じて、品質を評価・向上させるための知識と実践的なスキルを習得できます。",
        "開発の初期段階からテストを組み込む「シフトレフト」の考え方を理解し、ウォーターフォールやアジャイルなど、プロジェクトの特性に応じた最適なテストプロセスを設計できるようになります。",
        "テスト計画の策定、進捗のモニタリング、そして開発者やステークホルダーと協力して品質目標を達成するための、テストマネジメントとチームコミュニケーションの重要性を習得できます。",
        "機能テスト、非機能テスト、自動化テストなど、目的に応じた多様なテスト手法を使い分け、テストベースやテストウェアといった専門知識を活用して、効率的かつ効果的なテスト活動を実践できるようになります。"
      ],
      "course_content": {},
      "requirements": [
        "ソフトウェアテストの経験は不要。必要なことをすべて学習できます。"
      ],
      "description": "▼このコースの特徴\n図解メインで理解しやすい → 難解な用語やプロセスも、ビジュアルで直感的に整理！\nJSTQBシラバスに準拠した内容 → 合格に必要な知識を効率よく、体系的に学べる！\n開発経験が少なくても大丈夫 → テストの基本から、実務での活用イメージまで丁寧にカバー！\n「なぜそうするのか」を重視した構成 → 単なる暗記でなく、現場で使える理解が身につく！\n品質への意識が高まる → テストの視点を持つことで、開発スキルの底上げにもつながる！\n\n\n本コースは、開発経験が少ない方でも安心して学べるよう、「イラスト中心＋ていねいな解説」にこだわっています。単なる用語の解説にとどまらず、「なぜその工程が必要か？」「現場でどう活かせるか？」という視点で学ぶことで、知識を実務へとつなげる力が養えます。\n「テストってバグを見つけるだけ？」と思っていた方も、品質保証の全体像や開発との関係性が見えることで、新たな視野を得られるはずです。\n未経験からステップアップしたい方、テストやQAの基礎をしっかり固めたいエンジニアの方に、ぜひ手に取っていただきたい内容です。\n\n\n▼JSTQB（Foundation Level）の出題範囲\nこのコースは、JSTQB（Foundation Level）の出題範囲の1章と2章に完全対応しています。その他の章については別のコースで学習することができます。\n\n\nJSTQB-FL試験対策①（本コース）\n1章：テストの基礎\n2章：ソフトウェア開発ライフサイクル全体を通してのテスト\n\n\nJSTQB-FL試験対策②（別コース）\n3章：静的テスト\n4章：テスト分析と設計\n\n\nJSTQB-FL試験対策③（別コース）\n5章：テスト活動のマネジメント\n6章：テストツール",
      "target_audience": [
        "ソフトウェア開発の現場にいるけれど、テストの全体像がよくわからない方",
        "プログラミング学習はしていないけれど、IT分野に関わる仕事をしてみたい方。",
        "未経験・微経験からテスターやQAエンジニアを目指している方。",
        "用語を丸暗記するより、「なぜそうするのか」を理解してから覚えたい方。",
        "テキスト中心の教材だと眠くなってしまい、図解やビジュアルで学びたい方。"
      ]
    },
    {
      "title": "【한글자막】 Jira & Agile 사용한 소프트웨어 테스트 마스터 클래스: 품질 보증 (QA) 팀 리더되기",
      "url": "https://www.udemy.com/course/jira-agile-qa-leader/",
      "bio": "소프트웨어 방법론, 개발 수명 주기, QA 프로세스, Jira & 애자일 등의 프로젝트 관리 도구로 할 수 있는 다양한 방법들을 이번 강의로 배워 QA팀의 리더가 되세요!",
      "objectives": [
        "생생한 예제를 통해 소프트웨어 프로젝트가 실무에서 처리되는 방식에 대해 명확한 이해",
        "업계에서 사용하는 수동 테스트 도구를 사용하여 현재 소프트웨어 테스트 방법론에 대한 심층적 이해",
        "JIRA (프로젝트 관리 도구)의 이해와 Jira에서 테스터로 처음부터 작업하는 법",
        "애자일 스크럼(Scrum), SDLC, 테스트 주도, 행동 주도 접근 방식과 같은 최신 사례에 대한 완벽한 지식 습득",
        "라이브 프로젝트에서 Xray 앱을 사용하여 Jira에서 테스트 케이스 작성하는 것에 대한 심층적인 지식 습득",
        "테스트 케이스와 결함 수명주기 프로세스 설계에 대한 심도있는 학습",
        "요구사항 수집부터 프로젝트 납품까지 QA 프로세스에 대한 완전한 지식 습득",
        "프로젝트의 다양한 단계에서의 테스트 기법과 실제 사례",
        "자주 묻는 소프트웨어 테스트 면접 질문 상위 50개와 모범 답변",
        "SQL 기초 지식 습득"
      ],
      "course_content": {
        "소개": [
          "강의 FAQ (필수)",
          "강의 개요"
        ],
        "파트 1- Jira를 사용한 애자일 스크럼에서의 QA 역할 – 실제 프로젝트": [
          "작업 대상 프로젝트 시작하기",
          "최고의 학습 경험을 위한 중요한 팁",
          "Jira 계정 설정 & Jira에서 애자일 스크럼 프로젝트 생성",
          "애자일의 에픽 & 사용자 스토리란? 그리고 그들의 차이점",
          "Jira에서 에픽과 사용자 스토리 생성",
          "컴포넌트와 릴리즈 버전은 무엇인가, Jira에서 생성 방법",
          "비즈니스 가치를 반영하는 사용자 스토리 설명(Description) 설정하기",
          "Check Your Knowledge !!"
        ],
        "파트 2- Jira를 사용한 애자일 스크럼에서의 QA 역할 – 실제 프로젝트": [
          "애자일 스크럼에서 백로그 개선 미팅/ 그루밍이란?",
          "사용자 스토리에 대한 Jira에서 서브태스크 생성과 인수 기준 정의하기",
          "스프린트(Sprint)란 무엇이며 애자일 스크럼에서의 중요성",
          "Jira의 스크럼 보드 및 워크플로우 살펴보기",
          "Jira에서 버그 생성과 스프린트 보고서 확인하기",
          "애자일 스크럼 실무에서 회고(Retrospective)의 중요성",
          "애자일의 칸반 보드(Kanban Board)란 무엇인가",
          "강사의 소셜 네트워크에 참여하기",
          "Check Your Knowledge !!"
        ],
        "QA의 사고방식/ 제품 테스트 케이스 설계 전략": [
          "QA가 테스트를 수행할 때 프로젝트 아키텍처 지식이 어떻게 되는가",
          "API로 프로젝트 백엔드를 설계할 때 테스터가 테스트를 정의하는 방법",
          "단일 시나리오 테스트 관련 여러 유형의 테스트 이해하기",
          "요구사항이 주어졌을 때- QA의 독창적 사고 방법 - 예시"
        ],
        "테스트 케이스의 설계 형식의 이해와 Xray 플러그인으로 Jira에서 문서화": [
          "예제로 테스트 시나리오 vs 테스트 케이스 vs 테스트 단계 vs 전제 조건 알아보기",
          "Jira의 Xray 앱과 용어 소개",
          "Jira의 Xray에서 테스트 사례, 전제 조건 및 테스트 세트 생성",
          "Xray에서 테스트 계획의 중요성과 테스트 추가를 위해 이를 생성하는 방법",
          "테스트 실행이란 무엇이며 Jira의 테스트 계획과의 연관성",
          "테스트 계획 용어에 대한 중요 참고 사항"
        ],
        "테스트 수명주기, 테스트 계획과 종료 활동 이해": [
          "이 섹션에 대한 중요 사항",
          "소프트웨어 테스트 수명주기 소개",
          "테스트 계획이란? 그리고 테스트 계획을 준비하는 방법",
          "테스트 케이스 개발 단계와 여기서 알아야 할 사항",
          "테스트 환경이란? 실제 사례",
          "요구사항 추적표(RTM)의 중요성",
          "프로젝트 전달 후 테스트 종료 활동",
          "노트 다운로드",
          "Check Your Knowledge !!"
        ],
        "심각도와 우선 순위 용어로 결함 수명주기 심층이해": [
          "애플리케이션에서 버그를 찾았을 때 트러블슈팅 옵션",
          "애플리케이션의 문제 이해를 위해 앱 서버 로그 확인하기",
          "버그에 관한 모든 세부 사항과 함께 결함 생성 방법",
          "결함의 심각도와 우선순위의 차이",
          "결함의 우선순위와 심각도 이해를 위한 실제 사례",
          "결함을 다시 테스트하는 현명한 방법 – 면접 질문",
          "테스트에 관한 지속적인 업데이트 받기",
          "추가자료 다운로드",
          "Check Your Knowledge !!"
        ],
        "테스트 타입-실무 사용 이해": [
          "회귀 테스트는 무엇이며 언제 필요할까요?",
          "스모크/세너티 테스트란? 구축 프로세스에서의 중요성",
          "통합과 컴포넌트 테스트의 차이점",
          "인증과 검증",
          "부하 테스트와 스트레스 테스트",
          "강의 노트",
          "Check Your Knowledge !!"
        ],
        "기능적&비기능적 요구사항 테스트 범위": [
          "기능적 요구사항과 비기능적 요구사항의 차이점 이해",
          "블랙박스와 화이트박스 테스트의 차이점",
          "Check Your Knowledge !!"
        ],
        "Bugzilla 도구 데모를 통한 앱 E2E(End-to-End) 테스트": [
          "테스트 케이스 도출을 위한 샘플 애플리케이션",
          "전자상거래 앱에 대한 테스트 케이스 이어하기",
          "모든 테스트 케이스에 대한 테스트 실행과 결과 상태 업데이트",
          "Bugzilla 도구 소개와 버그 생성 방법",
          "모든 필드에 대해 이해하고, 버그에 대한 세부사항 추가하기"
        ]
      },
      "requirements": [
        "누구나 수강하실 수 있습니다. (본 강의 수강을 위해 필요한 요건이나 테스트 경험 등은 필요 없습니다.)",
        "Jira & Agile 포함한 모든 필요 조건이 본 강의에 포함되어 있습니다.",
        "모든 것을 처음부터 설명해 드리니 즐거운 마음으로 시작하세요."
      ],
      "description": "현재 소프트웨어 산업에서 실무에 사용하는 프로그램을 능숙하게 다루고 싶으신가요?\n관련 경험은 없지만 이 분야에 새로이 뛰어들고 싶은 분께 추천 드립니다.\n소프트웨어 방법론, 개발 수명 주기, QA 프로세스, Jira & agile 등의 프로젝트 관리 도구로 할 수 있는 다양한 방법들을 이번 강의로 배워 QA팀의 리더가 되어보세요.\n\n\n강의 최근 업데이트: QA 직무 관련 면접 질문 & 테스트 계획(Test plan) 준비 동영상\n이 강의를 통해 7년 이상의 실무 경험을 얻고 QA 팀 리더 수준에 이를 수 있습니다.\n\n\n\n\n[본 강의를 수강해야 하는 이유]\n소프트웨어 업계에서 프로젝트 전달 과정에서 무슨 일이 일어나는지 알기 위해 고군분투하고 있나요?\n실무 경험 없이도 프로젝트 리더 수준의 기술을 얻고 싶으신가요?\n그렇다면 이 강의는 여러분을 위한 강의입니다!\n또한, 저는 여러분의 프로젝트가 올바른 방향으로 진행되게 필요한 조언을 해드리고 평생 멘토가 되겠습니다.\n(질문은 꼭 영어로 남겨주세요)\n\n\n\n\n[본 강의의 구성]\n섹션별, 주제별로 매우 심도있게 다룹니다.\n애자일 환경에서 소프트웨어 프로젝트가 진행되는 방법 알아보기\n프로세스를 시연을 위해 Jira (프로젝트 추적 도구)를 사용합니다\n기존 소프트웨어 개발 수명주기에서 소프트웨어 테스트가 진행되는 방식 알아보기\n다양한 테스트 유형과 실무 프로젝트에서의 사용법에 익숙해지기\n프로젝트 관리를 위해 Jira와 Bugzilla에 대해 확실하게 이해하기\n독창적 사고로 엣지 테스트 케이스(Edge test case)를 작성하고 결함 수명주기의 프로세스를 이해하기\n기초 SQL 배우기\n\n\n\n\n[본 강의에서 배울 키워드]\n소프트웨어 테스트\n애자일 스크럼(Scrum)\n애자일 칸반(Kanban)\nSDLC\n폭포수 모델\n테스트 케이스를 설계할 때 쓸 수 있는 독창적 사고방식\n테스트 계획\n테스트 기법과 사용법\nJira 도구에서 종단 간(E2E) 실제 프로젝트 데모\nBugzilla\n결함 수명주기\n테스트 계획 설계\n스크럼 마스터 기술\nSQL\n테스트 주도 개발과 행동 주도 개발\n\n\n오늘 바로 수강하세요!\n여러분들은 그 누구보다 빠르게 [QA팀]의 리더가 될 것입니다!\n- Rahul\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다.",
      "target_audience": [
        "소프트웨어 테스트 업계에서 새로운 경력으로 이직을 원하시는 분",
        "소프트웨어 업계 경력은 없지만 실제 경험을 증명해 IT분야에 구직을 원하는 취업준비생",
        "JIRA와 Bugzilla 같은 프로젝트/테스트 관리 도구를 통달하고 싶으신 분",
        "현재 소프트웨어 산업의 모범 사례를 구현해야 하는 수동 테스터, 스크럼 마스터 및 프로젝트 리더"
      ]
    },
    {
      "title": "Tổng quan về kiểm thử tự động",
      "url": "https://www.udemy.com/course/automation-test-fundamental/",
      "bio": "akaAT Training",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Có hiểu biết cơ bản về công nghệ thông tin",
        "Có hiểu biết cơ bản về kiểm thử tự động"
      ],
      "description": "Trong khoá học này, bạn sẽ được học những kiến thức tổng quan về kiểm kiểm thử tự động, cách để chọn công cụ kiểm thử tự động phù hợp cho dự án, các tiêu chí để áp dụng kiểm thử tự động vào dự án và học cách sử dụng công cụ kiểm thử akaAT.\nNội dung khoá học\n1. Giới thiệu\n2. Tại sao lại lựa chọn Kiểm thử tự động\n3. Định nghĩa về Kiểm thử tự động\n4. Quy trình kiểm thử tự động\n5. Các loại hình kiểm thử tự động\n6. Cách lựa chọn công cụ kiểm thử tự động phù hợp với dự án\n7. Làm sao để áp dụng kiểm thử tự động vào dự án\n8. Tổng quan về công cụ kiểm thử tự động của FPT (akaAT)\n9. Hướng dẫn sử dụng công cụ kiểm thử tự động của FPT (akaAT)\n10. Tổng kết\nHãy tham gia khoá học và cho chúng tôi biết cảm nghĩ của bạn về khoá học này. Sự đánh giá của bạn là động lực giúp chúng tôi cải tiến những khoá học tiếp theo trong tương lai.\n\nakaAT là một Giải pháp kiểm thử tự động toàn diện cho phép các dự án/doanh nghiệp tăng tốc quá trình kiểm thử, tiết kiệm nguồn lực kiểm thủ công và rút ngắn thời gian đưa sản phẩm/phần mềm ra thị trường. Với akaAT, các kiểm thử viên có thể thực thi các kịch bản kiểm thử phức tạp cho Web, Desktop và Mobile mà không cần có kỹ năng về lập trình (NO CODE) akaAT hoạt động như thế nào:\n\nakaAT là công cụ kiểm thử tự động toàn diện với các thành phần độc lập bao gồm: akaAT Studio, akaAT Manager, akaAT Agent. Trước hết, người dùng sẽ làm việc với akaAT Studio. Đây là môi trường để họ sáng tạo, tạo kịch bản thử nghiệm, họ sẽ được hỗ trợ bởi chức năng từ khóa và tối ưu giao diện người dùng.\nTiếp theo, người dùng sẽ tương tác với akaAT Manager để lên lịch cho kế hoạch kiểm thử, đồng thời quản lý các trường hợp thử nghiệm và thông qua môi trường đám mây, tất cả dữ liệu sẽ được chuyển đến các akaAT Agent. Các Agent sẽ thực hiện việc kiểm thử theo dựa trên kịch bản nhận được theo đúng lịch trình của ngày hôm đó.\nViệc này sẽ giúp kiểm thử viên không phải theo dõi quy trình kiểm thử. Vào cuối ngày, tất cả các kết quả thử nghiệm sẽ được gửi lại cho akaAT Manager để tạo ra một báo cáo tổng quan cao cấp.\nĐể tiết kiệm thời gian cho khách hàng, akaAT được phát triển để thực hiện càng nhiều thử nghiệm càng tốt. Công cụ còn được tích hợp để sử dụng tốt tốt với JIRA và Jenkins. Khi triển khai khách hàng có thể lựa chọn triển khai akaAT tại chỗ (on -permise) hoặc theo phiên bản SAS. Sau đây là các tính năng chính của akaAT:\n\n1. akaAT Studio\nKeyword-Driven: Sử dụng các tệp dữ liệu có chứa các từ khóa liên quan đến ứng dụng đang được kiểm tra.\nCodeless GUI: Kiểm thử viên có thể tạo/chạy các tập lệnh kiểm thử mà không cần phải có kỹ năng lập trình.\nRuntime Engine: Chạy test case và truyển kết quả lên manager, giúp kết nối manager để có thể chạy trên nhiều máy.\n\n2. akaAT Manager\nCentralized Report: Tổng hợp tất cả kết quả kiểm của project cả automation test và manual test\nExecution Scheduler: Cho phép tự động chạy automation testcase, test suite theo lịch trình\nAutomation Project Management: Quản lý các dự án kiểm thử tự động\nScalable & Parallel: Kiểm thử nhiều lần tại cùng một thời điểm trên các môi trường khác nhau.\nIntegration: Tích hợp dễ dàng vào hệ thống của bạn và chuyển thử nghiệm tự động thành thử nghiệm liên tục với Runtime Engine.\nDevOps Ready: Tiện ích ghi âm mạnh mẽ để dễ dàng lưu trữ tất cả các phần tử giao diện người dùng nhằm tối đa hóa khả năng tái sử dụng.\n\n3. akaAT Agent: Nhiều thiết bị (Agent) có thể chạy cùng 1 lúc",
      "target_audience": [
        "Kiểm thử viên thủ công",
        "Kiểm thử viên tự động",
        "Người bắt đầu tìm hiểu về kiểm thử tự động",
        "Lập trình viên muốn tìm hiểu kiểm thử tự động"
      ]
    },
    {
      "title": "Xray en Jira: Curso Esencial para Gestión de Pruebas",
      "url": "https://www.udemy.com/course/xray-en-jira-curso-esencial/",
      "bio": "Xray para Jira: gestiona, ejecuta y documenta pruebas de software de manera profesional.",
      "objectives": [
        "Configuración de Xray en Jira desde 0",
        "Uso de las diferentes entidades de xray en jira",
        "Tipos de pruebas y sus detalles en Xray",
        "Gestión de pruebas de software con Xray",
        "Creación de reportes",
        "Creación y uso de dashboards para pruebas de sofware",
        "Gestión de planes de prueba, ejecuciones, test, y mucho mas!"
      ],
      "course_content": {
        "Introducción": [
          "Presentación del Curso",
          "Introducción - Primer Acercamiento",
          "Introducción - Issue Types",
          "Introducción - Requerimiento y Cobertura",
          "Introducción - Crear cuenta en JIRA",
          "Introducción - Instalar XRAY"
        ],
        "Configuraciones": [
          "Configuraciones - Columna para pruebas",
          "Configuraciones - XRAY en proyecto de equipo",
          "Configuraciones - Crear Entidad de Bug",
          "Configuraciones - XRAY en proyecto empresa"
        ],
        "Entidades en XRAY": [
          "Entidades de XRAY - Manual Test",
          "Entidades de XRAY - Cucumber Test",
          "Entidades de XRAY - Generic Test",
          "Entidades de XRAY - Precondition",
          "Entidades de XRAY - Test Set",
          "Entidades de XRAY - Test Execution",
          "Entidades de XRAY - Test Plan",
          "Pon a prueba lo aprendido!"
        ],
        "Manual Test en XRAY": [
          "Manual Tests - Creación y ejecución con un caso de ejemplo",
          "Test Manuales - Utilizar Data Tables",
          "Test Manuales - Utilizar Data Tables Combinatorios",
          "Test Manuales - Importar pasos de prueba desde CSV",
          "Test Manuales - Importar Tests desde CSV",
          "Pon a prueba lo aprendido!"
        ],
        "Test Cucumber": [
          "Test Cucumber - Uso de Outlines",
          "Test Cucumber - Importar Resultados de una Prueba"
        ],
        "Funcionalidades en XRAY": [
          "Funcionalidades de Xray - Crear un Dashboard de Pruebas",
          "Funcionalidades de Xray - Reportes de XRAY",
          "Funcionalidades de Xray - Enviroments",
          "Funcionalidades de Xray - Uso de API REST",
          "Funcionalidades de Xray - Test Case Import"
        ]
      },
      "requirements": [
        "Conocimientos básicos en Jira",
        "Conocimientos básicos en testing"
      ],
      "description": "[Puedes acceder a este curso con descuento de instructor en centyc. cl]\n\n\n¿Quieres dominar la gestión de pruebas de software dentro de Jira y trabajar como un profesional?\nEste curso te llevará desde cero hasta un nivel avanzado en Xray, la aplicación que permite gestionar, ejecutar y documentar pruebas directamente en Jira, mejorando la visibilidad y control de todo tu proceso de testing.\n\n\nLo que lograrás con este curso:\nConfigurar y administrar proyectos de pruebas en Xray desde cero.\nComprender y utilizar diferentes tipos de entidades y pruebas dentro de Jira.\nGestionar estados, ejecuciones y versiones de las pruebas de forma profesional.\nCrear dashboards automatizados en Jira para monitorear el proceso de pruebas en tiempo real.\nAplicar buenas prácticas en la documentación y seguimiento de pruebas.\nPrepararte para rendir los exámenes de certificación de Xray (By Blend) y el certificado del Instituto Latinoamericano de Calidad del Software (Centyc).\n\n\nCómo aprenderás:\nClases prácticas paso a paso, comenzando desde la creación de una cuenta en Jira.\nEjercicios aplicables que consolidan tu aprendizaje en cada lección.\nIntroducciones teóricas breves para comprender los conceptos clave antes de aplicar los ejercicios.\nMaterial descargable que incluye ejemplos y configuraciones mostradas en clase.\nAl finalizar este curso, tendrás la confianza y las habilidades para gestionar pruebas en Jira con Xray de manera profesional, optimizando la visibilidad y eficiencia de tu equipo de software.\nEl aprendizaje práctico y guiado te permitirá aplicar inmediatamente lo que aprendas en proyectos reales, y prepararte para destacarte en roles de QA y gestión de pruebas.\n\n\nBonus de valor agregado:\nAccede a ejemplos y técnicas profesionales basadas en la Xray Academy, y obtén un portafolio funcional que respalde tus conocimientos para certificaciones o tu desarrollo profesional.",
      "target_audience": [
        "Ingenieros de calidad",
        "Testers",
        "QA Automation",
        "Manual Testers"
      ]
    },
    {
      "title": "Testes Unitários do Zero com Angular 14 / Jasmine e Karma",
      "url": "https://www.udemy.com/course/testes-unitarios-com-angular-14-jasmine-e-karma/",
      "bio": "Aprenda a escrever testes 100% na prática com dicas importantes para você evoluir como programador(a)",
      "objectives": [
        "Utilizar recursos do Jasmine e Karma",
        "Saiba o que testar em uma aplicação Angular",
        "Testar Componentes, Classes, Serviços, Rotas, Pipes e Diretivas",
        "Debugar seus testes",
        "Garantir a cobertura de testes",
        "Trabalhar com còdigos asíncronos",
        "Configurar módulos de testes",
        "Interagir com a aplicação",
        "Resolver problemas comum de uma aplicação"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Apresentação do curso",
          "Como tirar maior proveito do curso",
          "Links importantes",
          "Conteúdo da próxima aula",
          "Dicas para acompanhar o curso",
          "O que é preciso saber para continuar",
          "Um recado importante para você"
        ],
        "Testes unitários no Angular": [
          "Introdução da seção",
          "A importância do Teste de Software",
          "O que é Jasmine e Karma",
          "Teste de integração x Teste de Unidade",
          "O que testar em uma aplicação Angular",
          "Cobertura de Testes (code coverage)"
        ],
        "Conceito de uma suíte de testes": [
          "Introdução da seção",
          "Suíte de testes - describe",
          "Especificações de testes - it",
          "Antes de cada teste - beforeEach",
          "Após cada teste - afterEach",
          "Antes de todos - beforeAll",
          "Configurando os módulos dos testes- TestBeb"
        ],
        "Criando o projeto com Angular CLI": [
          "Introdução da seção",
          "Instalação do Nodejs",
          "Instalando o Angular CLI",
          "Instalando o Visual Studio Code",
          "Criando o projeto com Angular CLI",
          "Rodando a aplicação no navegador",
          "Executando os testes"
        ],
        "Resolvendo problemas comuns em uma aplicação": [
          "Introdução da seção",
          "Erro ao trabalhar com requisições - No provider for HttpClient!",
          "Erro modal Angular material - No provider for MatDialog!",
          "Erro ao trabalhar com formularios - No provider for FormBuilder!",
          "Erro ao trabalhar com ngModel - No provider for NgControl found in NodeInjector."
        ],
        "Debugando os testes": [
          "Introdução da seção",
          "Focando em um único teste - fdescribe",
          "Focando em uma única especificação - fit",
          "Rodando os testes de um único arquivo - ng test --include",
          "Adicionando breakpoints",
          "Utilizando debugger",
          "Contexto de Debugger do Jasmine"
        ],
        "Testando expectativas - Jasmine Matchers": [
          "Introdução da seção",
          "Verificando se os valores são iguais - toEqual",
          "Verificando se os valores são iguais e do mesmo objeto - toBe",
          "Testando se um valor é truthy - toBeTruthy",
          "Testando se um valor é falsy - toBeFalsy",
          "Verificando se um valor é true - toBeTrue",
          "Verificando se um valor é falso - toBeFalse",
          "Testando se um valor não é true - not",
          "Verificando se um valor esta contido em um array ou string - toContain",
          "Verificando se um valor foi definido - toBeDefined",
          "Verificando se um valor não foi definido - toBeUndefined",
          "Testando se um valor é nulo - toBeNull",
          "Testando se um valor é NaN - toBeNaN",
          "Verificando se um valor é maior do que outro - toBeGreatherThan",
          "Testando se um valor é menor do que outro - toBeLessThan",
          "Verificando se um numero está próximo a outro - toBeCloseTo",
          "Testando se um valor é igual com base em uma expressão regular - toMatch",
          "Verificando se uma funcão lançou um erro - toThrow"
        ],
        "Mockando métodos de componentes e serviços": [
          "Introdução da seção",
          "Mockando métodos de serviço com Mocks",
          "Mockando métodos de serviços com Stubs",
          "Espionando métodos de componentes com spyOn",
          "Espionando métodos de serviços com spyOn",
          "Espionando métodos getter com spyOnProperty",
          "Criando objetos com createSpy",
          "Mockando métodos com createSpyObj"
        ],
        "Testando chamadas HTTP": [
          "Introdução da seção",
          "Testando requisição GET por ID",
          "Testando requisição GET",
          "Testando erro na requisição",
          "Testando requisição POST",
          "Testando requisição PUT",
          "Testando requisição DELETE",
          "Testando se a requição possui headears"
        ],
        "Testando código Assíncrono": [
          "Introdução da seção",
          "Testando subscribe",
          "Testando promises",
          "Utilizando done função",
          "Async e WhenStable",
          "FakeAsync e Tick"
        ]
      },
      "requirements": [
        "Conhecimento básico do Framework Angular 2+",
        "Noções de HTML, CSS e JavaScript",
        "Lógica de programação básico",
        "Vontade de aprender"
      ],
      "description": "Aprenda a escrever testes unitários com Angular do jeito certo! Domine Jasmine, Karma e Angular 14 com exemplos práticos, cobre todo seu código e escreva software confiável, mesmo sem experiência prévia. Curso ideal para desenvolvedores que querem subir de nível e evitar bugs em produção.\nTestes unitários são essenciais para garantir qualidade, evitar bugs e entregar software profissional. Mesmo desenvolvedores experientes enfrentam dificuldades com testes. Neste curso, você vai aprender a testá-los da forma certa, com foco prático, direto e eficiente.\nProjetado especialmente para quem está dando os primeiros passos com testes no Angular, este curso vai te ajudar a subir de nível na sua carreira e escrever código mais robusto e confiável.\nO QUE VOCÊ VAI APRENDER:\nComo escrever seus primeiros testes unitários no Angular 14\nComo testar componentes, serviços, pipes, guards e formulários\nComo garantir alta cobertura de testes com Jasmine e Karma\nComo mockar (zombar) serviços e métodos com facilidade\nComo simular requisições HTTP e testar código assíncrono\nComo gerar dados fake e resolver problemas do dia a dia real de um dev\nPARA QUEM É ESTE CURSO:\nDesenvolvedores iniciantes ou intermediários em Angular\nQuem quer dominar testes unitários na prática\nQuem quer ganhar confiança ao revisar códigos e entregar soluções mais estáveis\nRESULTADOS ESPERADOS:\nConfiança ao subir PRs com testes\nMenos bugs e retrabalho\nReconhecimento como dev que escreve código profissional\nOPORTUNIDADE:\nEste é um curso direto ao ponto, com exemplos reais e acesso vitalício. Aproveite o desconto de lançamento antes que ele acabe!\nAtualizado com as versões:\nAngular 14\nJasmine 4\nKarma 6\nInscreva-se agora e comece hoje a dominar testes unitários com Angular!",
      "target_audience": [
        "Programadores",
        "Desenvolvedores",
        "Quem almeja ser desenvolvedor",
        "Quem deseja aprender testes para replicar em seus projetos"
      ]
    },
    {
      "title": "Automação de Testes de API com Playwright e Python",
      "url": "https://www.udemy.com/course/automacao-de-testes-de-api-com-playwright-e-python/",
      "bio": "Crie testes de API modernos, confiáveis e fáceis de manter com Python e Playwright",
      "objectives": [
        "Criar testes automatizados de API com Python e Playwright",
        "Organizar projetos de automação de API",
        "Utilizar JSON Schema para garantir a qualidade e consistência das respostas de API",
        "Gerar relatórios profissionais (HTML e Allure)",
        "Executar testes em paralelo, otimizando tempo e performance em grandes suítes de testes."
      ],
      "course_content": {
        "Fundamentos essenciais": [
          "Recursos",
          "Introdução ao conceito de API",
          "Metodos HTTP",
          "Preparando o ambiente",
          "Primeiro teste de API na prática"
        ],
        "Primeiros passos com Playwright para APIs": [
          "Recursos",
          "Como trabalhar com requisições e respostas",
          "Construindo um CRUD completo de usuarios",
          "Autenticação e Tokens"
        ],
        "Arquitetura de Testes de API com OOP": [
          "Recursos",
          "Introdução + Estrutura do projeto (teoria)",
          "Criando classes de serviços de API (OOP)",
          "Helpers e reutilização de código",
          "Estrutura de Projeto e Boas Práticas"
        ],
        "Garantia de Qualidade e JSON Schema": [
          "Recursos",
          "Validação de mensagens de erro",
          "Validação usando JSON Schema"
        ],
        "Testes orientados a dados (DDT)": [
          "Recursos",
          "Testes orientados a dados"
        ],
        "Relatórios e Performance nos Testes de API": [
          "Recursos",
          "Relatorios com pytest-html e Allure",
          "Execução paralela com pytest-xdist"
        ],
        "Conclusão": [
          "Conclusão"
        ]
      },
      "requirements": [
        "Noções básicas de lógica de programação ou Python serão úteis, mas não obrigatórias."
      ],
      "description": "O objetivo deste curso é capacitá-lo a desenvolver testes automatizados de API utilizando Playwright e Python, dominando desde os fundamentos até técnicas avançadas aplicadas em projetos reais no mercado de trabalho.\nVocê começará entendendo os fundamentos essenciais: o que são APIs REST, como funcionam no ciclo de desenvolvimento e como interagir com os principais métodos HTTP (GET, POST, PUT, DELETE, PATCH). Também aprenderá a configurar seu ambiente de desenvolvimento com Python, Playwright, Pytest e todas as dependências necessárias.\nEm seguida, vamos avançar para os primeiros passos com Playwright para APIs, criando seu primeiro teste prático, explorando requisições e respostas (status codes, headers, body), gerenciando autenticação e tokens e construindo um CRUD completo.\nDepois, o curso mostra como estruturar um projeto profissional, aplicando boas práticas e Programação Orientada a Objetos, além de implementar funções auxiliares para aumentar a reutilização de código.\nVocê também vai aprender a aplicar validações com JSON Schema, garantindo a qualidade das respostas recebidas, e a trabalhar com testes orientados a dados (DDT), rodando múltiplos cenários automaticamente a partir de arquivos CSV e JSON.\nPor fim, abordaremos relatórios e performance, onde você gerará relatórios em HTML e Allure, além de configurar execução paralela para aumentar a performance da suíte de testes.\nEste curso é prático, direto ao ponto e com foco no mercado, preparando você para construir uma automação de APIs moderna, escalável e confiável.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Pengujian Kegunaan dalam Pengembangan Perangkat Lunak",
      "url": "https://www.udemy.com/course/usability-testing-/",
      "bio": "Usability Testing, Perangkat Lunak, Efisien dan Efektif Aplikasi",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Student memahami konsep dasar pengujian"
      ],
      "description": "Usability merupakan salah satu bentuk kualitas yang harus dimiliki oleh banyak produk atau aplikasi. Usability meliputi beberapa faktor yaitu desain yang intuitif, kemudahan untuk dipelajarin, penggunaan yang efektif, tingkat kemudahan untuk diingat, tingkat kesalahan yang terjadi, serta tingkat kepuasan yang sifatnya subyektif. Jika produk atau aplikasi tersebut gagal dalam memenuhi penggunaan maka pemanfaatan akan berkurang bahkan hilang Oleh karena itu, maka diperlukan usability testing. Usability Testing merupakan salah satu cara untuk mengetahui apakah user dapat dengan mudah menggunakan suatu produk atau aplikasi, seberapa efisien dan efektif sebuah aplikasi dapat membantu user mencapai tujuannya serta apakah user puas dengan produk atau aplikasi yang digunakan. terdapat beberapa tempat pilihan untuk melakukan Usability Testing antara lain: tempat umum, ruangan laboratory yang sudah diatur kondisinya, dan melalui online. Penentuan tempat dapat kita tentukan atau tergantung dari calon pengguna, waktu yang tersedia dan anggaran biaya yang tersedia. ketika kita melakukan umumnya Usability Testing dilakukan secara bersama oleh Tim Desain dan Pengembang. Penentuan kriteria user dan tugas yang akan diuji direncanakan terlebih dulu oleh tim tersebut. Kemudian penentuan calon user tergantung dari aplikasi yang dibuat. Dalam pembelajaran ini siswa akan dikenalkan dengan usability testing, waktu untuk menguji, keterampilan untuk moderator pengujian, Siswa akan memahami proses untuk melakukan pengujian, berbagai metode dasar, dan meluas dari Pengujian Kegunaan hingga Merancang Pengalaman Pengguna.",
      "target_audience": [
        "Student yang ingin mempelajari usability testing"
      ]
    },
    {
      "title": "Software Testing für Anfänger oder Quereinsteiger",
      "url": "https://www.udemy.com/course/software-tester-werden-videokurs-software-testing/",
      "bio": "Starte Deine Karriere als Software Tester - Keine Programmierkenntnisse erforderlich",
      "objectives": [
        "Wie das Berufsbild des Software Testers aussieht",
        "Welche Aufgaben ein Software Tester hat",
        "Wie das Software Testing in der Praxis aussieht",
        "Welche Tools Software Tester verwenden",
        "Welche Qualifikationen ein Software Tester braucht",
        "Wie dir der Quereinstieg ins Software Testing gelingt",
        "Wie du schon heute als Software Tester Geld verdienen kannst"
      ],
      "course_content": {
        "Das Berufsbild des Software Testers": [
          "Welche Qualifikationen braucht ein Software Tester?",
          "Wozu Software Testing?",
          "Wie kann ich als Quereinsteiger Software Tester werden?",
          "Die wichtigsten Begriffe zum Einstieg in der Theorie",
          "Deine konkreten Aufgaben als Software Tester",
          "Was sind virtuelle Maschinen und wozu sind diese gut",
          "So kannst du effektiv Browser testen",
          "Was sind Emulatoren/Simulatoren",
          "So sieht ein guter Fehlerbericht aus",
          "Wozu Bugmanagement und was ist JIRA",
          "Verschaffe dir super Überblick über deine Testaktivitäten",
          "So behälst du guten Überblick über die User Story",
          "So erstellst du gute Regressionstests",
          "Wozu Testfallmanagement und was ist Testlink",
          "Einfache Testautomatisierung mit Selenium IDE",
          "Fazit Software Testing Praxis",
          "Geld verdienen als Software Tester mit Crowdtesting",
          "Geld verdienen als Software Tester mit Bug Bounty Programmen",
          "Wichtige Testerzertifikate und wie du diese erlangen kannst",
          "Fazit"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "PC",
        "Internetverbindung"
      ],
      "description": "In diesem Online-Kurs erwirbst Du das Grundlagenwissen für das manuelle Testing. Weiterhin wirst Du wertvolle Tipps sowie Tools zur Verbesserung Deiner Tester-Fähigkeiten erhalten.\nNeben den theoretischen, wirst Du auch praktische Fähigkeiten erlernen, die Du als QA-Experte benötigst, damit Du Deine neue Karriere als Software Tester noch heute starten kannst.\n\n\nSoftware Testing und Qualitätssicherung sind essenziell für den Erfolg Deiner Webseite, Programme oder Apps. Ohne sorgfältiges Testing riskierst Du, Bugs zu übersehen, die dann Deine Kunden entdecken. Solche Fehler können Deiner Reputation und Deinem Geldbeutel schaden.\nMit dem wachsenden Bedarf an Softwareapplikationen steigt auch die Nachfrage nach kompetenten Softwaretestern.\n\nDieser Online-Kurs bietet sowohl Quereinsteigern, angehenden als auch erfahrenen Softwaretestern einen tiefgreifenden Einblick in das Berufsbild.\nWas Du lernen wirst:\n\nAufgaben im Software Testing\nGefragte Qualifikationen\nEffiziente Methoden und Tools für den Alltag\nQuereinstieg in die IT-Karriere als Softwaretester\nMöglichkeiten, heute schon als Software Tester Geld zu verdienen\nVoraussetzungen? Nur ein PC und Internetzugang. Auch ohne klassische IT-Ausbildung, wie ich sie auch nicht hatte, kannst Du erfolgreich in die Welt des Software Testings einsteigen.\nStarte Deine Karriere im Software Testing – einem Bereich, der nicht nur Spaß macht, sondern auch lukrativ ist.\nBereit für den Wandel? Melde Dich jetzt an und beginne Deine Reise als  Software Tester!",
      "target_audience": [
        "Software Tester UND angehende Software Tester",
        "Menschen mit und OHNE Programmierkenntnisse",
        "Menschen mit Interesse an Qualitätssicherung und Software Testing"
      ]
    },
    {
      "title": "Pruebas Unitarias en Spring Boot con JUnit y Mockito.",
      "url": "https://www.udemy.com/course/pruebas-unitarias-en-spring-boot-con-junit-y-mockito/",
      "bio": "Aprende a probar servicios reales con Spring Boot, usando JUnit 5, Mockito y buenas prácticas desde cero.",
      "objectives": [
        "Realizar pruebas unitarias a proyectos Spring Boot reales.",
        "JUnit en versión 5.",
        "Framework Mockito.",
        "Combinar JUnit y Mockito para pruebas unitarias.",
        "Utilizar Jacoco para reportes de cobertura de tus pruebas.",
        "Porcentajes de coberturas en tu proyectos.",
        "Pruebas reales en Apis Rest hechas con Spring Boot",
        "Uso de MockMvc",
        "Introducción a TDD.",
        "Pruebas de integración con @DataJpaTest"
      ],
      "course_content": {},
      "requirements": [
        "Java básico",
        "Haber realizado alguna Api Rest en Spring Boot"
      ],
      "description": "¿Te ha pasado que haces un cambio en tu código… y de repente todo se rompe?\n¿Te sentiste alguna vez inseguro al hacer deploy porque no sabes si tu app realmente está funcionando bien?\nEs normal. Y es una señal de que estás listo para dar un paso más como desarrollador profesional: escribir pruebas unitarias de verdad.\n¿Qué vas a aprender?\nEste curso está diseñado para que entiendas y apliques las pruebas unitarias en proyectos Spring Boot, como lo hacen los equipos de desarrollo en empresas reales.\nAquí no solo aprenderás la teoría de JUnit y Mockito, sino que construirás pruebas que te darán confianza en tu código.\nY como parte del enfoque moderno del curso, también aprenderás a usar GitHub Copilot como un asistente inteligente para acelerar la escritura de tus pruebas.\n¿Por qué incluir GitHub Copilot?\nPorque los desarrolladores modernos no solo escriben código: optimizan su tiempo, su enfoque y sus herramientas.\nEn este curso verás cómo Copilot puede ayudarte a:\nSugerir tests automáticamente\nCompletar estructuras de prueba más rápido\nAhorrar tiempo sin perder control del código\nAprender nuevas formas de escribir tests viendo ejemplos generados\n¿Qué incluye el curso?\nPruebas unitarias con JUnit 5 y Mockito paso a paso\nCómo probar servicios, controladores, excepciones y lógica de negocio\nUso de GitHub Copilot como herramienta de apoyo\nBuenas prácticas, TDD, mocks y cobertura de código\nProyectos reales y ejercicios guiados\nExplicación clara, sin rodeos, desde cero\nAcceso de por vida y comunidad de apoyo\n¿Este curso es para ti?\nSí, si…\nQuieres aprender pruebas unitarias desde cero o reforzar tus bases.\nEstás trabajando con Spring Boot y quieres mejorar como profesional.\nEstás cansado de probar “a mano” sin saber si tu código es confiable.\nTe interesa usar Copilot para escribir mejor y más rápido.\nTe gustaría tener un proyecto con pruebas bien escritas en tu portafolio.\n\n\n¿Qué te llevarás al terminar?\nVas a poder escribir pruebas unitarias con seguridad, entender el flujo completo de prueba de tus servicios, y sobre todo: vas a sentirte como un desarrollador más sólido, profesional y confiado.\nY si alguna vez pensaste que las pruebas eran solo para “expertos”…este curso está hecho para ti.\n\n\n¡Nos vemos dentro y vamos a probar juntos, paso a paso!",
      "target_audience": [
        "Desarrolladores Java y Spring Boot"
      ]
    },
    {
      "title": "Подготовка к собеседованию Мануальный тестировщик ТЕСТЫ",
      "url": "https://www.udemy.com/course/career-and-interview-qa-2022/",
      "bio": "Симулятор собеседования для изучающих Тестирование ПО в 2024. Начало карьеры тестировщика.",
      "objectives": [
        "Большое количество вопросов на различные темы. Вы сможете легко проанализировать ошибки и узнать темы, которые освежить в памяти",
        "Более 100 вопросов, что задают на собеседованиях",
        "Вопросы не только о тестировании, а и о компьютерной грамотности",
        "Видео-лекции о карьерном росте тестировщика, куда и как двигаться дальше",
        "Где взять практический опыт для резюме и какие существуют онлайн платформы для заработка QA. Как работать на фрилансе",
        "Шпаргалки и дополнительные ресурсы, которые станут помощниками на первой работе",
        "Сайты для поиска работы. Как найти вакансию Trainee или Junior",
        "Создание и оформление резюме"
      ],
      "course_content": {
        "Карьера тестировщика: пути развития и перспективы": [
          "Подготовка к собеседованию",
          "Куда двигаться дальше? Карьерный рост QA",
          "Где взять практический опыт для резюме? Онлайн платформы для заработка QA",
          "Создание и оформление резюме",
          "Сайты для поиска работы. Как найти вакансию Trainee или Junior"
        ],
        "Тестирование знаний": [
          "Методологии разработки ПО.Управление проектами. Основы Agile, Scrum.",
          "База тестирования",
          "Компьютерная грамотность",
          "Инструменты для тестирования. Общие инструменты (БД, API)",
          "Desktop тестирование",
          "Web тестирование",
          "Mobile тестирование",
          "Итоговый тест"
        ]
      },
      "requirements": [
        "Начальные знания в сфере тестирования"
      ],
      "description": "Данный курс предназначен для тех, кто находится в процессе изучения тестирования, или хочет проверить свои знания перед поиском новой работы, узнать возможности карьерного роста, актуальные на 2023 год, хочет изменить свое резюме и просто прокачать навык прохождения собеседований.\nКурс подойдет как новичкам, так и специалистам позиций Junior и Junior+\nПомимо тестов на различные разделы тестирования ПО, данный курс включает в себя теоретические и практические видео по таким темам:\nКуда двигаться дальше? Карьерный рост QA-инженера\nГде взять практический опыт для резюме? Онлайн платформы для заработка QA\nСоздание и оформление резюме\nСайты для поиска работы. Как найти вакансию Trainee или Junior\n\n\nТесты разбиты по модулям на отдельные темы, а так же финальный тест, который подготавливает к каверзным и неожиданным вопросам на собеседовании\nТемы, которые затрагиваются:\nМетодологии разработки ПО (Основы проекта, состав проектной команды, Модели разработки ПО. Жизненный цикл продукта, Гибкие методологии. Scrum и Kanban. Коммуникации на проекте, Системы для работы над проектом и задачами)\nТеоретические знания. База тестирования (Принципы тестирования, Классификация видов тестирования, Тест-дизайн, Документация и управление проектной документацией, Артефакты тестирования: Тесткейсы и чеклисты, багрепорты и багтрекеры. Локализация багов, Дополнительная документация в тестировании\nКомпьютерная грамотность (Программное и аппаратное обеспечение компьютера, Тестирование периферийных устройств, Операционные системы, Архитектура приложений, Клиент-серверная архитектура, Система контроля версий. Непрерывная интеграция)\nИнструменты для тестирования. Общие инструменты\n(Тестирование API. Инструменты тестирования API, Основы базы данных Снифферы. Fiddler и Charles)\nDesktop тестирование (Особенности Desktop тестирования, Виртуальные машины, Удаленные рабочие столы)\nWeb тестирование (Различия браузеров. Особенности кросс-браузерного тестирования, Выбор браузеров для тестирования. Формы браузеров, Инструмент Веб тестирования Chrome DevTools)\nMobile тестирование (Типы мобильных приложений. Особенности мобильного тестирования, Особенности тестирования Web-страниц на Mobile девайсах, Выбор девайсов для тестирования, парк девайсов. Mobile формы, Mobile гайдлайны, Снятие логов и скриншотов с мобильных девайсов)\n\n\nПо любым вопросам и пожеланиям обращайтесь, я буду рада помочь!\n\n\nНадеюсь, данный курс поможет вам стать увереннее и собеседование пройдёт отлично!\nУверенность в себе – это основа всех крупных успехов и достижений.",
      "target_audience": [
        "Для тех кто изучает и осваивает профессию Тестировщика ПО",
        "Для тестировщиков, которые решили сменить место работы и хотят подтвердить свои знания",
        "Для тестировщиков, которые занимаются самообучением и хотят проверить свои знания",
        "Для любого желающего проверить свои знания в теории тестирования"
      ]
    },
    {
      "title": "ISTQB Foundation Level Pratik Konu Çağrışımlı Test",
      "url": "https://www.udemy.com/course/istqb-foundation-level-pratik-konu-cagrsml-test/",
      "bio": "ISQTB - anlama ve tekrar testleri",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Kursumuzun temel hedefi pratik testler ile öğrencilere yazılım testi hakkında temel bilgileri öğretip ISQTB Foundation Level sertifikasına sahip olabilecek düzeyde bilgi birikimi edindirmekle beraber temel bilgilerini de pekiştirmektir. Sorular bu amaçla hazırlanmış olup açıklamalarda bulunan bilgiler ile eksiklerinizi tamamlama imkanına sahip olacaksınız. Bu kursu tamamladıktan sonra sınavı tek seferde geçebilecek güvene sahip olacaksınız.\nISQTB müfredatını bir defa inceledikten sonra çoktan seçmeli pratik testler ile konuları daha iyi ele alıp eksiklerinizi kapatabileceksiniz. Müfredatın her ünitesi için ünite testlerini tamamladıktan sonra ISTQB Foundation Level hazırlık sınavlarını da çözerek sınava bilinçli bir şekilde hazırlanabileceksiniz.\nYazılım test tekniklerini, süreçlerini ve politikalarını öğrenip tüm test seviye ve türlerini kavrayabilecek, ileride karşılaştığınız senaryolar karşısında daha profesyonel bir şekilde aksiyon alabileceksiniz. Böylece bu kurs ile kendinizi çok daha iyi geliştirebileceksiniz.\nAyrıca kurs içerisinde reel senaryoları gözlemleyip, yazılım test temelleri ile pratiğinizi geliştirmiş olacaksınız.\nKariyer hedefinize yardımcı olabilmek adına Foundation Level sonrası \"Agile Tester\" sınavına da hazırlık yapabileceğiniz şekilde terimlerin İngilizce dilindeki karşılığına da soru açıklamalarından ulaşabileceksiniz.\nNetice de bilinçli bir şekilde ISTQB Foundation Level sertifikasına sahip olabilecek seviyede kursu tamamlayabileceksiniz.\nBu kurs sonrası ISTQB Foundation Level sertifikasına sahip olacak ve öğreticinin bu kursu tamamladıktan sonra sunacağı \"ISQTB Agile Tester\" kursunu da tamamlamak isteyeceksiniz. Ve öğretici, geri dönüşleriz için her zaman aktif bulunacak olup hızlı dönüş sağlayacaktır.",
      "target_audience": [
        "ISTQB Foundation Level sertifikasına sahip olmak isteyen Yazılım Test Mühendisleri"
      ]
    },
    {
      "title": "TDD em C# com xUnit, NUnit e Moq. Testes e Frameworks .NET.",
      "url": "https://www.udemy.com/course/c-testes-e-frameworks/",
      "bio": "Testes unitário e integrados com: xUnit, NUnit, Moq e AutoFixture. Acessando BD com Dapper. Refatoração com Testes.",
      "objectives": [
        "Testes unitários com xUnit",
        "Testes unitários com NUnit",
        "Testes integrados com NUnit",
        "Framework Moq",
        "Framework Dapper",
        "Framework Autofixture",
        "Criar e Acessar Banco de Dados SqlServer",
        "Delegates, expressões Lambda, Action, Func e Predicates",
        "Tipos Nullable",
        ".NET Core"
      ],
      "course_content": {
        "Conceitos": [
          "Conceitos",
          "Comparação entre xUnit e NUnit",
          "Nomes",
          "Anti-Padrão"
        ],
        "Visual Studio Code e .NET Core": [
          "Projeto no VS Code com .NET Core"
        ],
        "Instalando aplicativos": [
          "Montando o ambiente de desenvolvimento"
        ],
        "Criando o projeto": [
          "2 - Projeto simples - Parte 1",
          "3 - Projeto simples - Parte 2",
          "4 - Criando a camada de acesso a dados",
          "5 - Criando a classe de teste"
        ],
        "Acessando o banco de dados": [
          "6 - Criando métodos e testes",
          "7 - Criando o projeto de domínio",
          "8 - Dapper"
        ],
        "Banco de dados para teste": [
          "9 - Criando o script do BD de teste",
          "10 - Criando o BD de teste",
          "11 - AutoFixture",
          "12 - Seções em testes de BD"
        ],
        "Criando e testando repositório com mock": [
          "13 - Criando o projeto repos e interfaces",
          "14 - Criando o projeto de teste",
          "15 - Criando o esboço",
          "16 - Testando repositório com mock"
        ],
        "Padronizando construtores mock": [
          "17 - Criando construtores mock",
          "18 - Herança e genéricos"
        ],
        "Delegates": [
          "Delegates e métodos anônimos",
          "Delegates e expressões Lambda",
          "Delegates genéricos: Func, Action e Predicate"
        ],
        "Dominando C#": [
          "O tipo Nullable"
        ]
      },
      "requirements": [
        "Noção básica de programação."
      ],
      "description": "Criação de testes unitário e integrados utilizando os Frameworks: NUnit, Moq e AutoFixture.\nUtilização de scripts para criação e exclusão de bancos de dados para testes integrados.\nRefatoração de código de teste utilizando padrões que auxiliam na manutenção do código de teste.\nUtilização do Dapper para acessar o banco de dados, reduzindo código.",
      "target_audience": [
        "Estudantes C# .Net",
        "Desenvolvedores C# .Net"
      ]
    },
    {
      "title": "Podstawy Frameworka Appium w praktyce i pigułce!",
      "url": "https://www.udemy.com/course/framework-appium/",
      "bio": "Podstawy Appium z Pythonem w praktyce i pigułce! Pokrywa solidne podstawy testowania automatycznego w Frameworku Appium",
      "objectives": [
        "Podstawy Framework Appium: Zrozumienie kluczowych konceptów i architektury Appium, w tym jego roli w automatyzacji testów aplikacji mobilnych.",
        "Konfiguracja i Instalacja: Praktyczne porady dotyczące konfiguracji środowiska Appium, w tym instalacji niezbędnych narzędzi i zależności.",
        "Pisanie Skryptów Testowych: Nauczysz się tworzenia efektywnych skryptów testowych wykorzystujących Appium, aby automatyzować testy na różnych platformach mobiln",
        "Lokatory i Interakcje z Elementami UI: Zdobędziesz umiejętności identyfikowania i manipulowania elementami interfejsu użytkownika w aplikacjach mobilnych.",
        "Testowanie na Różnych Urządzeniach i Platformach: Zrozumienie jak używać Appium do testowania aplikacji na różnorodnych urządzeniach i wersjach systemów operacy",
        "Debugowanie i Rozwiązywanie Problemów: Nauka technik debugowania skryptów testowych oraz rozwiązywania typowych problemów napotykanych podczas pracy z Appium.",
        "Zaawansowane Techniki i Najlepsze Praktyki: Poznawanie zaawansowanych technik i najlepszych praktyk w zakresie automatyzacji testów mobilnych przy użyciu Appium"
      ],
      "course_content": {
        "Wprowadzenie do Appium / Instalacje i konfiguracje": [
          "Agenda kursu",
          "Wprowdzenie do Frameworka Appium",
          "Architektura Appium",
          "Checklista + skrypty wykorzystane w kursie",
          "Wymagania wstępne przed uruchomieniem Appium",
          "Proces instalacji JDK",
          "Ustawienie JDK w systemie operacyjnym",
          "Proces instalacji NodeJS",
          "Android Studio instalacja i konfiguracja",
          "Ustawienie Android Studio SDK",
          "Proces Dodania nowego urządzenia w Android Studio (emulatora)",
          "Częste problemy z konfiguracją i ustawieniem urządzenia w Android Studio",
          "Ukończenie konfiguracji i omówienie Android Studio wraz z emulatorem",
          "Proces instalacji Frameworka Appium",
          "Proces Instalacji Aplikacji Appium Inspector",
          "Instalacja Python Appium Client w Pycharm i utworzenie pierwszego projektu"
        ],
        "Podstawy Frameworka Appium": [
          "Uruchomienie pierwszego Testu za pomocą Appium w Pycharm",
          "Częste problemy Appium w Pycharm i jak je rozwiązać",
          "Dyrektywa PEP8 w Pycharm",
          "Przykład (Template) Skryptu w Appium w Pycharm. Omówienie krok po kroku",
          "Przegląd dokumentacji Appium i oficjalnych zasobów od twórców Frameworka",
          "Przegląd Appium Inspectora (krok po kroku)",
          "Proces instalacji APK na emulatorze w Android Studio",
          "Przegląd i przykład sesji w skonfigurowanym Appium Inspector",
          "Ustawianie Sesji z emulatorem w Appium Inspector",
          "Pierwszy przykład testu web z użyciem Recordera w Appium Inspector",
          "Edycja i modyfikacja oraz uruchomienie testu z Recordera w Pycharmie",
          "Częsty problem Appium - 'reconnect offline' i jak go rozwiązać",
          "Przyklad testu z aplikacją natywną w Recorderze (Appium Inspector)",
          "Pisanie skryptów Appium i wykorzystanie Chata GPT do nauki i usprawnienia pracy",
          "Appium na poziomie średniozaawansowanym i zaawansowanym / Co dalej po kursie?"
        ],
        "Python Praktyka - Podstawy": [
          "Omówienie IDE - Pycharm",
          "Import bibliotek w IDE Pycharm",
          "Jak uruchomić swój pierwszy skrypt Pythona w Pycharmie?",
          "Oficjalna dokumentacja do nauki Pythona - tu musisz zaglądać!",
          "Kompilator w przeglądarce \"Replit\" - wprowadzenie",
          "Przegląd środowiska \"Replit\" - pierwsze kroki z kompilatorem online",
          "Pierwsze kroki z Pythonem w kompilatorze online - podstawowe operacje w Pythonie",
          "Stringi (łańcuchy znaków) w Pythonie",
          "Numbers (Liczby) w Pythonie",
          "Operators (Operatory) w Pythonie",
          "Variable (Zmienne) w Pythonie",
          "Lists (Listy) w Pythonie",
          "Lists (Listy) w Pythonie cz.2 - bardziej zaawansowane przykłady",
          "Tuples (Krotki)",
          "Dictionaries (Słowniki)",
          "Sets (Sety) w Pythonie",
          "Conditionals (Warunki) - Pętla for w Pythonie",
          "Loops (Pętle) w Pythonie",
          "Statements (Warunki) if-else",
          "Functions (funkcje) w Pythonie cz.1",
          "Functions - funkcje i metody cz.2",
          "Classes (Klasy) w Pythonie",
          "Scope (Zakres) - Zasięg zmiennych w Pythonie",
          "Args and kwargs (arguments/keyword arguments) w Pythonie",
          "Decoratory w Pythonie",
          "Generatory w Pythonie"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Dostęp do internetu",
        "Chęć nauki i upór",
        "Podstawy Pythona mile widziane"
      ],
      "description": "Witaj w kursie \"Podstawy Frameworka Appium w praktyce i pigułce (2024)\", który został starannie zaprojektowany, aby zapewnić uczestnikom gruntowne zrozumienie jednego z najbardziej dynamicznych narzędzi do automatyzacji testów aplikacji mobilnych - Appium. W świecie, gdzie aplikacje mobilne stanowią kluczowy element cyfrowej przestrzeni, umiejętność efektywnego testowania ich funkcjonalności i wydajności jest niezbędna. Dzięki mojemu kursowi, uczestnicy będą mogli nie tylko nauczyć się podstaw Appium, ale również zastosować zdobytą wiedzę w praktycznych scenariuszach testowania.\n\nCele kursu:\nZapoznanie z architekturą i ekosystemem Appium.\nZrozumienie konfiguracji środowiska Appium dla aplikacji Android\nNauka tworzenia i uruchamiania skryptów testowych z użyciem Appium w języku Python\nPraktyczne zastosowanie lokalizatorów do interakcji z elementami aplikacji\nWykorzystanie Appium Inspectora w praktyce i solidne pokrycie podstaw testowania mobilnego za pośrednictwem frameworka Appium\n\nDla kogo jest ten kurs? Kurs jest skierowany do testerów oprogramowania jak również dla osób zainteresowanych rozpoczęciem pracy w dziedzinie testowania aplikacji mobilnych. Nie wymagam wcześniejszego doświadczenia z Appium, jednak podstawowa wiedza z zakresu programowania w Pythonie oraz zrozumienie zasad testowania oprogramowania będzie pomocne.\n\n\nModuły kursu:\nWprowadzenie do kursu i frameworka Appium\nArchitektura Appium\nPrzeglad dokumentacji, gdzie szukać informacji?\nWymagania wstępne dla systemu Windows / MAC / Linux\nPython\nPycharm\nJava JDK\nNodeJS\nAndroid Studio\nAppium GUI / Desktop app\nAppium-Python-Client\n\n\nPierwszy Test Appium w Pycharm\nAppium Inspektor / Ustawienie połączenia / Pierwsze kroki\ni przegląd narzędzia Appium Inspektor\nPrzykład użycia Recordera dla Aplikacji Webowej\nOmówienie elementów charakterystycznych dla Appium\nw Pycharm w j. Python - ustawienia, lokatory, uruchomienie skryptu / serwera itp. itp.\nPrzykład użycia Recordera dla Aplikacji Natywnej\nChat GPT + Framework Appium - jak korzystać i uczyć się?\nPoziom zaawansowany i co dalej, skąd czerpać wiedzę?\n\nDołącz do nas już dziś, aby rozpocząć swoją podróż w świecie automatyzacji testowania aplikacji mobilnych z \"Podstawy Frameworka Appium w praktyce i pigułce (2024)\"!",
      "target_audience": [
        "Początkujący i rozpoczynający karierę w branży IT",
        "Jeśli chcesz nauczyć się testować automatycznie aplikacje mobilne",
        "Osoby Pragnące Zmienić Ścieżkę Kariery: Osoby z innych dziedzin IT lub z ograniczonym doświadczeniem w testowaniu, które chcą rozwinąć swoje umiejętności w kierunku automatyzacji testów mobilnych.",
        "Testerzy Oprogramowania: Osoby już pracujące w testowaniu oprogramowania, które chcą poszerzyć swoje umiejętności o automatyzację testów aplikacji mobilnych przy użyciu Appium.",
        "Kurs ten oferuje wartość zarówno dla osób już pracujących w branży IT, jak i dla tych, którzy dopiero rozpoczynają swoją przygodę z automatyzacją testów mobilnych"
      ]
    },
    {
      "title": "ChatGPT w testowaniu oprogramowania",
      "url": "https://www.udemy.com/course/chatgpt-w-testowaniu-oprogramowania/",
      "bio": "Chat GPT, zwiększ wydajność testowania, automatyczne generowanie testów",
      "objectives": [
        "Jak korzystać z ChatGPT w testowaniu oprogramowania",
        "Tworzenie zapytań SQL z ChatGPT",
        "Tworzenie testów wydajnościowych w JMeter",
        "Optymalizacja testów automatycznych z ChatGPT",
        "Generowanie danych testowych",
        "Tworzenie historyjek użytkownika za pomocą ChatGPT",
        "Uruchamianie testów w Dockerze z ChatGPT",
        "Tworzenie przypadków testowych i dokumentacji",
        "Tworzenie testów API przy użyciu AI"
      ],
      "course_content": {
        "Wprowadzenie do kursu": [
          "Informacje o instruktorze",
          "Moja społeczność"
        ],
        "Podstawowe informacje o ChatGPT": [
          "Co to jest ChatGPT?",
          "Interfejs graficzny ChatGPT",
          "Pierwsze użycie"
        ],
        "Dokumentacje i przypadki użycia": [
          "ChatGPT do zrozumienia teorii testowania",
          "Tworzenie dokumentacji testowej",
          "Pomoc w ocenie i wyborze narzędzi testowych",
          "Tworzenie historyjek użytkownika",
          "Tworzenie przypadków testowych"
        ],
        "Dane testowe i generowanie kodu": [
          "Generowanie scenariuszy Given, When oraz Then",
          "Tworzenie testów automatycznych z ChatGPT",
          "Pomoc w zrozumieniu testów automatycznych",
          "Refaktoryzacja kodu za pomocą ChatGPT",
          "Generowanie żądań API za pomocą kodu",
          "ChatGPT do konfiguracji Postmana",
          "Konfiguracja CLI dla Postmana",
          "Generowanie danych testowych",
          "Generowanie zapytań SQL",
          "Uruchamianie testów w Dockerze"
        ],
        "Analiza i modyfikowanie kodu": [
          "Wykorzystanie AI w celu zrozumienia kodu",
          "Tworzenie testów jednostkowych za pomocą AI",
          "Optymalizacja testów jednostkowych",
          "Interakcja z plikami PDF"
        ],
        "Gotowy projekt testów wydajnościowych": [
          "Wybór najlepszego narzędzia",
          "Utworzenie pierwszego testu wydajnościowego",
          "Dodanie iteracji i użytkowników",
          "Generowanie testu wydajnościowego z ładunkiem",
          "Dodanie posumowania wyników",
          "Uruchamianie testów za pomocą CLI",
          "Uruchomienie testów w Dockerze"
        ],
        "Informacje dodatkowe": [
          "Tworzenie testów w Cypress za pomocą AI",
          "Książka \"Rekrutacja\""
        ],
        "Zadanie praktyczne": [
          "Zadanie praktyczne 1"
        ],
        "Egzamin teoretyczny": [
          "Egzamin sprawdzający wiedzę"
        ],
        "Zakończenie": [
          "Podziękowanie i certyfikat",
          "Nagroda za ukończony kurs"
        ]
      },
      "requirements": [
        "Nie musisz posiadać żadnej wiedzy z zakresu sztucznej inteligencji"
      ],
      "description": "ChatGPT w testowaniu oprogramowania – praktyczny kurs dla testerów\nChcesz dowiedzieć się, jak wykorzystać sztuczną inteligencję (AI) w codziennej pracy testera?\nW tym kursie pokażę Ci, jak używać ChatGPT do automatyzowania, wspomagania i optymalizacji różnych zadań testerskich – od dokumentacji, przez testy API, aż po uruchamianie testów w Dockerze.\nTo praktyczny kurs oparty na realnych scenariuszach z życia testera.\n\n\nCzego się nauczysz?\n\n\nPodstawy pracy z ChatGPT:\n– Czym jest ChatGPT i jak działa\n– Praca z interfejsem, formułowanie zapytań\n– Jak pisać skuteczne prośby (prompty)\n\n\nWspomaganie testera przez AI:\n– Tworzenie dokumentacji testowej\n– Wybór narzędzi testowych dopasowanych do projektu\n– Tworzenie historyjek użytkownika i przypadków testowych\n– Generowanie scenariuszy testowych\n– Refaktoryzacja kodu z pomocą AI\n\n\nAutomatyzacja i integracje:\n– Tworzenie testów automatycznych i jednostkowych\n– Generowanie testów API w Postmanie z pomocą AI\n– Konfiguracja CLI i skryptów testowych\n– Generowanie plików do uruchamiania testów w Dockerze\n– Tworzenie testów wydajnościowych w JMeter\n– Generowanie zapytań SQL\n– Interakcja z plikami PDF\n\n\nJak wygląda kurs?\n\n\nKurs oparty na praktycznych przykładach i realnych zastosowaniach\nKażdy moduł skupia się na konkretnym scenariuszu użycia ChatGPT w pracy testera\nNa koniec: praktyczne zadanie + test teoretyczny, które podsumowują zdobytą wiedzę\n\n\nDla kogo jest ten kurs?\n\n\nDla testerów manualnych i automatyzujących, którzy chcą zwiększyć efektywność pracy\nDla osób, które chcą nauczyć się tworzyć zapytania do AI z myślą o konkretnych celach testerskich\nDla tych, którzy chcą zrozumieć, jak naprawdę zintegrować AI z codziennymi zadaniami QA\n\n\nCzym jest ChatGPT?\n\n\nChatGPT to nowoczesny model językowy opracowany przez OpenAI, który potrafi generować odpowiedzi zbliżone do ludzkich.\nW kontekście testowania oprogramowania może wspierać np. tworzenie dokumentacji, generowanie kodu, analizy danych, tworzenie przypadków testowych i znacznie więcej. Jego elastyczność i zdolność adaptacji sprawiają, że staje się cennym narzędziem w rękach testera.\n\n\nTen kurs pomoże Ci nauczyć się, jak z głową korzystać z AI w pracy testera – nie po to, żeby zastąpić myślenie, ale żeby pracować szybciej, lepiej i mądrzej. Jeśli chcesz zdobyć praktyczne umiejętności i wykorzystać potencjał ChatGPT w pracy testera – zapraszam do kursu.",
      "target_audience": [
        "Testerów oprogramowania",
        "Programistów",
        "Kierowników projektu",
        "Analityków biznesowych"
      ]
    },
    {
      "title": "Postman İle API Testlerine Giriş: Başlangıç Seviyesi Eğitim",
      "url": "https://www.udemy.com/course/postman-ile-api-testleri-egitimi/",
      "bio": "Postman kullanarak API testlerini öğrenin Temel kavramlardan başlayarak RESTful API ve otomasyon teknikleriyle ilerleyin",
      "objectives": [
        "Postman, Swagger ve SOAPUI nedir, karşılaştırmaları",
        "Rest API",
        "SOAP API",
        "Postman nedir ve neden kullanılır?",
        "Request ve Response Kavramları",
        "Request Çeşitleri",
        "HTTP Status Code",
        "Workspace, Collection Yapısı",
        "Değişkenler",
        "Query Params",
        "Path Variables",
        "Authentication",
        "Token",
        "Test Environment",
        "Global, Collection, Random Değişkenler",
        "Test Caselerinin Hazırlanması",
        "Postbot Aracı İle Test Script Oluşturulması",
        "Koleksiyonlar için test senaryoları oluşturma.",
        "Koleksiyon testlerini çalıştırma ve raporların incelenmesi.",
        "Bir REST API örneği üzerinden uçtan uca uygulamalı testler.",
        "Authenticated API'lerle çalışmak (ör. JWT Token).",
        "API hata yönetimi ve test senaryoları oluşturma.",
        "Postman monitörleri ile test otomasyonu."
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Teorik Bilgiler": [
          "API Testleri İçin Güçlü Araçlar",
          "HTTP, Request ve Response Kavramları Nedir?"
        ],
        "Postman Kurulumu ve İlk Requestin Oluşturulması": [
          "Postman Uygulamasının Kurulumu",
          "Postman Uygulaması ve Tarayıcı Üzerinden İlk Requestin Oluşturulması"
        ],
        "Basit Seviyede Oluşturulan Restfull API Tanıtımı": [
          "Rest API İncelenmesi"
        ],
        "Workspace ve Collection Oluşturulması": [
          "Workspace ve Collection Yapısı"
        ],
        "Değişkenler, Query Params, Path Variables Kavramları": [
          "Değişkenler",
          "Query Params Nedir, Örnekler İle Açıklanması",
          "Path Variable Nedir, Örnekler İle Açıklanması",
          "Authorization ve Token Nedir, Örnekler İle Açıklanması",
          "Bearer Token Nedir",
          "Patch ve Delete Request Örnekleri İle Token Kavramının Detaylanması"
        ],
        "Test Scriptleri, Environment Kavramı ve Değişken Türleri": [
          "Pre Request ve Post Response Kavramları",
          "Test Scriptleri İle Collection Seviyesinde Değişken Güncelleme",
          "Environment Nedir, Örnekler İle Açıklanması",
          "Global ve Random Değişkenler"
        ],
        "Test Fonksiyonlarının Oluşturulması": [
          "Test Fonksiyonlarının PM Objesinin İncelenmesi",
          "Postbot Aracı İle Test Fonksiyonlarının Oluşturulması"
        ],
        "Kurs Requestlerinin Otomasyon İçin Hazırlanması": [
          "Query Params Değerlerinin Collection Seviyesine Taşınması",
          "Get All Courses İçin Test Caselerinin Hazırlanması",
          "Path Variable Değerinin Collection Seviyesine Taşınması"
        ],
        "Kullanıcı Requestlerinin Otomasyon İçin Hazırlanması": [
          "Register Requestinin Düzenlenmesi",
          "Register ve Login Requestinin Düzenlenmesi"
        ]
      },
      "requirements": [
        "Temel Düzeyde Javascript Bilgisi"
      ],
      "description": "Postman ile API Testlerine Giriş: Başlangıç Seviyesi Eğitim\nGünümüzde API'ler, yazılım geliştirme süreçlerinin olmazsa olmaz bir parçası haline geldi. Peki, bir API'nin doğru çalıştığını nasıl test edebilirsiniz? İşte bu noktada Postman devreye giriyor!\nBu kurs, Postman kullanarak API testlerine sıfırdan başlamak isteyen herkes için tasarlandı. Eğer daha önce API'ler veya test araçlarıyla çalışmadıysanız endişelenmeyin; bu eğitim temel kavramlardan başlayarak sizi adım adım ileriye taşıyacak.\nKurs boyunca şunları öğreneceksiniz:\nPostman nedir ve neden API testlerinde bu kadar yaygın kullanılır?\nRESTful API'ler nasıl çalışır ve bunlarla nasıl etkileşim kurabilirsiniz?\nGET, POST, PUT, DELETE gibi HTTP metotlarının işlevleri ve kullanım senaryoları.\nQuery parametreleri, header bilgileri ve body yapılandırmaları.\nPostman Collections ile API testlerini organize etme ve otomasyon süreçlerini kolaylaştırma.\nTest scriptleri yazarak API'lerinizi daha etkili bir şekilde doğrulama.\nRequestleri otomasyona hazır hale getirme.\nOtomasyonun çalıştırılması, sonuçların analiz edilmesi.\nJSON uzantılı bir veri ile projeye değişken sağlama ve sağlanan veri ile otomasyonun çalıştırılması\nBu kurs, yalnızca teorik bilgi değil, aynı zamanda bolca uygulamalı örnek içerir. Gerçek dünyadan alınmış senaryolarla API testlerini hem pratik yaparak öğrenir hem de günlük iş hayatında nasıl uygulayacağınızı kavrarsınız.\nEğitim sonunda, API test süreçlerine hakim bir şekilde Postman kullanabilir ve projelerinizde verimliliği artırabilirsiniz. Yazılım geliştiricisi, test mühendisi ya da API'lerle çalışmak isteyen bir teknoloji meraklısıysanız, bu kurs tam size göre!\nHaydi, bu fırsatı kaçırmayın ve hemen kursa katılın. API test dünyasına adım atmaya hazır mısınız?",
      "target_audience": [
        "Yazılım testi konusunda deneyimi olmayan, kariyerine test mühendisi olarak başlamak isteyen kişiler.",
        "API testlerini öğrenmek isteyen ancak teknik bilgiye fazla sahip olmayan adaylar.",
        "API geliştiren ancak test süreçlerini daha iyi anlamak isteyen yazılım geliştiriciler.",
        "API testlerini manuel olarak yapmayı öğrenip, gelecekte otomasyona geçmek isteyenler.",
        "Ürün yöneticileri, iş analistleri veya teknik destek ekipleri gibi teknik bilgiye çok fazla sahip olmayan ancak API testlerini anlaması ve uygulaması gereken profesyoneller.",
        "Yazılım testleri veya API'ler hakkında bilgi sahibi olmayan, temel bir giriş yapmak isteyen öğrenciler veya mezunlar.",
        "Kendi geliştirdiği projelerde API'lerini test etmek isteyen girişimciler veya freelance geliştiriciler.",
        "Başka bir meslekten QA mühendisliğine geçmek isteyen, API testi konusunda hızlı bir başlangıç yapmak isteyen kişiler."
      ]
    },
    {
      "title": "Все про Charles Proxy для розробки та тестування",
      "url": "https://www.udemy.com/course/charles-proxy-course/",
      "bio": "Повний гід по Charles Proxy: перехоплення, аналіз та налагодження мережевого трафіку",
      "objectives": [
        "Основи роботи з Charles Proxy та його ключові функції.",
        "Налаштування Charles Proxy для мобільних та десктопних пристроїв",
        "Перехоплення, аналіз та налагодження HTTP/HTTPS трафіку",
        "Використання Charles Proxy для тестування API та вирішення мережевих проблем",
        "Робота з розширеними функціями, такими як брейкпоінти, модифікація запитів/відповідей, обмеження пропускної здатності",
        "Використання Charles Proxy у реальних сценаріях, включаючи розробку, тестування та налагодження мобільних застосунків."
      ],
      "course_content": {
        "Знайомство та встановлення": [
          "Встановлення та налаштування на Mac Windows та Android iOS"
        ],
        "Базові можливості charles Proxy": [
          "Перегляд трафіку з веб-браузера чи мобільного девайса",
          "Огляд меню та елементів швидкого доступу",
          "Throttling",
          "Allow and Block Lists"
        ],
        "Просунуті можливості Charles Proxy": [
          "Breakpoints",
          "Map Remote",
          "Map Local",
          "Rewrite"
        ]
      },
      "requirements": [
        "Базове розуміння мережевих концепцій, таких як HTTP/HTTPS",
        "Бажано мати досвід у тестуванні програмного забезпечення або веброзробці (не обов’язково)",
        "Доступ до комп’ютера (Windows/Mac) з установленим Charles Proxy (інструкція надається в курсі)",
        "Мобільний пристрій (iOS/Android) для уроків з налаштування мобільного проксі (за бажанням)"
      ],
      "description": "Навчіться використовувати Charles Proxy – потужний інструмент для аналізу та налагодження мережевого трафіку. Цей курс надасть вам повний набір знань для роботи з мережевими-запитами та відповідями, тестування API, мобільних додатків і вебсайтів.\nЩо ви дізнаєтеся?\nВстановлення та налаштування Charles Proxy на Mac, Windows, Android та iOS.\nЯк переглядати та аналізувати трафік з веб-браузерів та мобільних пристроїв.\nРобота з ключовими функціями: Breakpoints, Map Remote, Map Local, Rewrite, Throttling.\nВикористання Allow і Block Lists для фільтрації запитів.\nЯк тестувати API, емулювати різні мережеві умови та знаходити баги у ваших застосунках.\nДля кого цей курс?\nQA-інженери та тестувальники, які хочуть вдосконалити свої навички.\nРозробники, що працюють з веб та мобільними застосунками.\nIT-фахівці, які аналізують та налагоджують мережевий трафік.\nСтуденти та ентузіасти, які бажають освоїти нові інструменти.\nЧому саме цей курс?\nПрактичні приклади та реальні кейси.\nПокрокові інструкції для налаштування та використання Charles Proxy.\nОгляд найважливіших функцій і сценаріїв їх застосування.\nВідмінний ресурс для початківців та досвідчених фахівців.\nВимоги:\nБазове розуміння HTTP/HTTPS (необов’язково, але бажано).\nКомп’ютер (Mac, Linux або Windows) та мобільний пристрій (iOS або Android) для практичних завдань.\nЦей курс допоможе вам отримати впевненість у використанні Charles Proxy для оптимізації та тестування будь-яких мережевих взаємодій. Приєднуйтесь зараз, щоб розкрити повний потенціал цього потужного інструменту!",
      "target_audience": [
        "QA-інженери та тестувальники, які хочуть покращити свої навички налагодження",
        "Веб- та мобільні розробники, які шукають інструменти для тестування API та аналізу мережі",
        "IT-фахівці, відповідальні за моніторинг та аналіз мережевого трафіку",
        "Студенти та ентузіасти, які хочуть вивчити Charles Proxy для навчальних чи особистих проектів",
        "Усі, хто цікавиться налагодженням і оптимізацією мережевої взаємодії в додатках"
      ]
    },
    {
      "title": "工程總監帶你學軟體測試 Learn QA testing with engineering director",
      "url": "https://www.udemy.com/course/learn-qa-testing-with-engineering-director/",
      "bio": "軟體測試的推廣課程",
      "objectives": [],
      "course_content": {
        "軟體測試基礎緒論": [
          "誠實- 軟體測試的必備基本態度",
          "粗評會-軟體開發流程中的起始點",
          "細評會-軟體開發流程中第一堂溝通課",
          "測試類型 - 理解何為測試及如何進行測試的第一堂課",
          "優先級緒論 - 必須要先知道什麼是優先級",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "無需任何經驗，只需帶著對軟體測試好奇的心"
      ],
      "description": "首先我們先稍微介紹一下這堂課程，這不是你學習了就會變成超強測試工程師的一堂課，相反的，我反而希望上完這堂課的同學，能夠「停下腳步」，慢下來，好好地思考一下，你現在所經歷的軟體開發流程，是不是有什麼優點，另外又有什麼缺點，是不是還有什麼欠缺的，透過這堂課程，主要是在教授各位一個測試工程師在軟體開發流程裡面，應該扮演什麼角色和做哪些事，還有最重要的，是QA怎麼思考的，所以，這也是讓非測試領域的人認識QA的一堂課，所以課程的目標群眾，是會經歷到軟體開發的所有人，不限於測試工程師本身喔。",
      "target_audience": [
        "目前身處於軟體開發流程中的成員",
        "對軟體測試有興趣的學習者"
      ]
    },
    {
      "title": "2 EXAMENS ISTQB FONDATION V4 - COMPLETS AVEC DETAILS",
      "url": "https://www.udemy.com/course/2-examens-istqb-fondation-v4-complets-avec-details/",
      "bio": "2 examens qualitatifs avec explications détaillées sur la bonne réponse ET sur les réponses incorrectes",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Chaque examen se compose comme un vrai examen :\n- contient 40 questions  qui abordent l'ensemble des chapitres du syllabus ISTQB FONDATION V4 (dernière version)\n- contient chaque niveau attendu par la certification ISTQB : K1 (Mémorisation), K2 (Compréhension), K3 (exercice pratique - schémas )\n- contient pour chaque question, l'explication détaillée de la bonne réponse et de pourquoi les autres réponses sont incorrectes. Ce qui rend nos examens UNIQUES sur la plateforme Udemy, aucun autre examen ne sera aussi complet et précis.\n\n\n\n\nVoici un extrait de nos examens blanc :\n\n\n\n\nQUESTION 1 - NIVEAU K2\n\n\n\n\nPlus de tests sont effectués sur la partie du système qui présente plus de défauts que la moyenne. Lequel des principes de test suivants est appliqué ?\n\n\na. Paradoxe des pesticides\nb. Le test dépend du contexte\nc. Absence d'erreurs fallacieuses\nd. Regroupement des défauts\n\n\n\n\nREPONSE ET EXPLICATIONS DETAILLEES\n\n\nRéponse : d. Regroupement des défauts\nExplication :\nLe principe du regroupement des défauts stipule que :\n\"La plupart des défauts sont généralement concentrés dans un nombre relativement réduit de modules.\"\nAutrement dit, une petite partie du système contient souvent la majorité des défauts, ce qui incite les testeurs à concentrer davantage d’efforts de test sur ces zones.\nLa phrase de la question :\n\"Plus de tests sont effectués sur les parties du système testé qui présentaient plus de défauts que la moyenne.\" illustre parfaitement ce principe, car on cible les zones historiquement problématiques avec plus de tests.\n\n\nPourquoi les autres options sont incorrectes :\na. Paradoxe des pesticides : Le paradoxe des pesticides indique qu'en effectuant toujours les mêmes tests sur le même code, on finit par \"ne plus détecter de nouveaux défauts\". Autrement dit, si on continue à tester de la même manière, les tests deviennent moins efficaces au fur et à mesure. Cependant, cette notion ne se réfère pas spécifiquement à la pratique de tester plus intensivement les parties du système avec plus de défauts. C'est un phénomène qui survient lorsque les tests existants ne découvrent plus de nouveaux défauts, mais cela ne correspond pas au principe de se concentrer sur les zones à défauts plus nombreux.\nb. Le test dépend du contexte : Le test dépend du contexte fait référence au fait que les stratégies de test doivent être adaptées en fonction du contexte du projet, de l'application ou du produit testé. Par exemple, un test d'interface utilisateur ne sera pas mené de la même manière qu'un test de performance. Cela ne correspond pas directement à l'idée de tester davantage les parties du système ayant plus de défauts. Cette notion est plus liée à l'adaptation des tests à des situations spécifiques, mais pas spécifiquement à l'intensification des tests dans des zones à défauts concentrés.\nc. Absence d’erreurs fallacieuses : L'absence d'erreurs fallacieuses signifie qu'un test ne doit pas laisser croire qu'un défaut est absent alors qu'il en existe réellement. Cela se réfère à éviter des tests qui pourraient être trompeurs et induire en erreur, par exemple en vérifiant uniquement les bonnes parties du code ou en faisant des hypothèses incorrectes. Ce principe n'est pas directement lié à la pratique de tester plus intensivement les zones du système avec plus de défauts, il traite plutôt de la manière dont on évite des erreurs dans les tests eux-mêmes.",
      "target_audience": [
        "Personnes qui souhaitent travailler dans la qualité logiciel / assurance qualité"
      ]
    },
    {
      "title": "Pruebas unitarias con xUnit en .NET",
      "url": "https://www.udemy.com/course/xunit-net/",
      "bio": "Curso profesional de pruebas unitarias con xUnit, Moq y coverlet para cobertura de pruebas",
      "objectives": [
        "Aprende como funciona y como se aplica el concepto de TDD",
        "Crea pruebas unitarias utilizando xUnit, C# y .NET",
        "Aprende como inyectar dependencia de servicios utilizando Moq",
        "Aprende buenas prácticas para pruebas unitarias",
        "Aprende como medir la cobertura de tus pruebas unitarias"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Prerrequisitos",
          "Que son las pruebas unitarias?",
          "Iniciando proyecto con xUnit",
          "Creando tu primera prueba unitaria"
        ],
        "Herramientas y proyecto base": [
          "Extensiones para Visual Studio",
          "Usando Visual Studio",
          "Configurando proyecto base",
          "Recapitulando lo aprendido"
        ],
        "Funciones de xUnit": [
          "Analizando tipos de Assert",
          "Analizando tipos de Assert parte 2",
          "Analizando tipos de Assert parte 3",
          "Utilizando el constructor para datos iniciales",
          "Funciones Theory y InlineData",
          "Función ClassData",
          "Utilizando parámetro Skip",
          "Recapitulando lo aprendido",
          "Quiz 1"
        ],
        "Librería Moq": [
          "Características de la librería Moq",
          "Introducción a librería Moq",
          "Utilizando librería Moq",
          "Escenario de dependencia en un proyecto",
          "Imitando dependencias con librería Moq"
        ],
        "Cobertura de pruebas unitarias": [
          "Herramientas para medir cobertura",
          "Utilizando Coverlet",
          "Parámetro Include",
          "Atributo [ExcludeFromCodeCoverage]",
          "Reporte de cobertura",
          "Quiz 2"
        ]
      },
      "requirements": [
        "Conocimientos de C#",
        "Conocimientos de programación",
        "Visual Studio Code Instalado",
        ".NET SDK versión 6/7 o superior"
      ],
      "description": "En este curso aprenderás de una manera fácil y rápida como utilizar la librería de xUnit para crear pruebas unitarias y mejorar la calidad del código que estamos haciendo. Este curso es básico e introductorio, si bien revisamos juntos cada unas de las funcionalidades o mejoras que tiene xUnit, no recreamos escenarios avanzados o complejos que se pueden dar  ciertas situaciones cuando trabajamos en proyectos grandes o con arquitecturas muy complejas.\nSi no tiene conocimientos sobre pruebas unitarias o no sabes como implementar pruebas unitarias para tu proyecto, este curso es perfecto para ti!\nEn cuando a metodología del curso:\nEste curso cuenta con videos cortos y puntuales de cada tema\nSe explica de manera fácil y detallada cada paso y funcionalidad\nTienes exámenes, pruebas o quiz que te ayudaran a medir tus conocimientos\nTienes recursos de apoyo para complementar\nEn cuanto a los requisitos para tomar el curso:\nEs indispensable conocimientos de C# y experiencia con .NET\nTener Visual Studio Code (herramienta del curso) o Visual Studio (2022 o superior)\nTener el SDK de .NET 6 o superior\nLo que aprenderás en este curso:\nAprenderás a crear pruebas unitarias con xUnit\nAprenderás cada una de las funcionalidades que ofrece xUnit\nAprenderás sobre el modelo AAA\nAprenderás como imitar dependencias usando la librería Moq\nAprenderás a extraer reporte de cobertura de pruebas\n\n\nPROXIMAS CLASES:\n- Uso avanzadp de libreria Moq\n- Uso de la libreria AutoFixture",
      "target_audience": [
        "Programadores Junior, Mid y Senior de .NET",
        "Aprendices de .NET y C#",
        "Estudiantes de tecnologías de la información",
        "Desarrolladores interesados en aprender sobre pruebas unitarias, TDD y xUnit"
      ]
    },
    {
      "title": "Robot eXpress",
      "url": "https://www.udemy.com/course/robot-express/",
      "bio": "Automação de Testes de ponta a ponta para aplicações Web em Robot Framework",
      "objectives": [
        "Automação de Testes com Robot Framework;",
        "Automação de ações que o usuário realiza em um navegador da Web;",
        "Preencher formulários automáticamente;",
        "Como validar o comportamento esperado;",
        "Boas práticas para implementação de testes automatizados;",
        "Como criar scripts de testes de qualidade com Page Objects."
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Iniciando com Robot Framework": [
          "Boas vindas ao Robot eXpress",
          "O que é o Robot Framework?",
          "Instalando o Robot",
          "Fundamentos do Robot Framework",
          "Preparação do ambiente de testes",
          "Implantação da API e WebApp",
          "Conheça o Mark85, seu gerenciador de tarefas"
        ],
        "Testes de ponta a ponta": [
          "Primeiros passos na automação web",
          "Organizando outputs do Robot",
          "Checkpoints",
          "XPath ou CSS Selectors",
          "Formulário de cadastro",
          "Trabalhando com dados dinâmicos usando Faker",
          "Validação do comportamento esperado",
          "Estrutura do projeto",
          "Cuidado com a Lib Faker",
          "Construindo uma Lib em Python",
          "Cobertura de testes",
          "Dependências entre cenários",
          "Testes independentes",
          "Super Variáveis",
          "Screenshots mágicos",
          "Ganchos do Robot (Setup e Teardown)"
        ],
        "Avançando na automação": [
          "URL Base",
          "O padrão de projetos",
          "Arquivo de configuração",
          "Page Object direto ao ponto",
          "Nomenclatura na camada de resources",
          "Campos obrigatórios",
          "Email incorreto",
          "Cenários variantes",
          "Templates de Teste",
          "Templates de Suíte",
          "Variações na mesma sessão",
          "Formulário de login",
          "Validando usuário logado",
          "Criptografando a senha",
          "Componentes"
        ],
        "Testando um CRUD completo": [
          "Massa de testes em JSON",
          "Camada de Fixtures",
          "O reuso é real",
          "O verdadeiro teste orientado a dados",
          "Validando item na página",
          "Campo de tags",
          "Consumindo a API com Insomnia",
          "Testando registro duplicado",
          "Consumindo a API com Robot",
          "Testando mais, codando menos",
          "Tem situações que só o XPath salva",
          "Validando CSS Style",
          "Finalizando os testes E2E"
        ],
        "Conclusão": [
          "Camada de Helpers",
          "Firefox e Webkit",
          "Git e Github sem rodeios",
          "Git clone e Requirements",
          "Parabéns, você concluiu o curso!"
        ]
      },
      "requirements": [
        "Pelo menos 6 mêses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Projetado para iniciantes sem conhecimento prévio em programação ou automação, este curso é perfeito para aqueles que desejam começar sua jornada no mundo da automação de testes de forma prática e eficiente.\nO Robot é um framework para automação de testes de aceitação e RPA. É open source e multiplataforma (roda no Windows, Mac ou Linux). Nativamente implementado em Python e algumas coisas em Java.\nPOR QUE VOCÊ DEVE APRENDER ROBOT?\nTem bloqueio com programação? ...então o Robot Framework é pra você!\nConhecido por sua sintaxe clara e legível, o que o torna muito amigável para QAs iniciantes. Mesmo sem conhecimento prévio em programação, é possível entender e criar scripts de automação rapidamente.\nDurante as aulas, você aprenderá os conceitos fundamentais do Robot Framework, começando desde a configuração do ambiente até a criação e execução de scripts de testes.\nVocê será guiado passo a passo com um método baseado e compartilhamento de experiências reais e práticas alinhadas com o mercado para garantir um aprendizado sólido.\nCom um enfoque prático, explorará a ferramenta, compreendendo a estrutura de testes, variáveis, bibliotecas e keywords. Aprenderá como interagir com aplicações web e consumo de APIs.\nAo concluir o curso, você estará apto(a) a criar scripts de automação eficientes, economizando tempo e recursos, e terá uma base sólida para avançar em níveis mais avançados de automação e testes.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Automatyzacja testów: WebdriverIO + Typescript - Jenkins",
      "url": "https://www.udemy.com/course/testowanie-automatyczne-webdriverio/",
      "bio": "Naucz się, jak pisać szybkie i niezawodne testy automatyczne. Kurs od podstaw z Javascript oraz Typescript",
      "objectives": [
        "Podstawy języka JavaScript",
        "Podstawy języka TypeScript",
        "Automatyzacja z WebdriverIO",
        "Platformy testowej Mocha",
        "Umiejętność stosowania asercji",
        "Projektowanie według Page Object Model",
        "CI/CD integracja z Jenkins",
        "Integracja z Allure",
        "Lokalizowanie elementów HTML (xpath, id, klasy, name)",
        "Harmonogram wykonywania testów"
      ],
      "course_content": {
        "Wprowadzenie do kursu": [
          "Wstęp",
          "Społeczność testerów - Facebook"
        ],
        "Instalacja narzędzi i programów": [
          "Instalacja systemu kontroli wersji GIT",
          "Instalacja NodeJs",
          "Instalacja Visual Studio Code",
          "Rozszerzenia do Visual Studio Code"
        ],
        "Podstawy języka JavaScript": [
          "Zmienne i typy danych w JavaScript",
          "Instrukcje warunkowe w JavaScript",
          "Użycie pętli w JavaScript",
          "Funkcje w JavaScript",
          "Pobieranie elementów strony w JavaScript",
          "Tablice i metody na tablicach w JavaScript",
          "Async i await w JavaScript"
        ],
        "Podstawy języka TypeScript": [
          "Wprowadzenie do języka TypeScript",
          "Podstawowe typy w języku TypeScript"
        ],
        "Instalacja WebdriverIO i konfiguracja projektu": [
          "Instalacja WebdriverIO",
          "Instalacja i konfiguracja TypeScript",
          "Omówienie i stworzenie struktury plików",
          "Ustawianie konfiguracji webdriverio"
        ],
        "Uruchomienie pierwszego testu WDIO": [
          "Implementacja pierwszego testu WDIO",
          "Uruchomienie pierwszego testu"
        ],
        "Automatyzacja elementów Input, Checkbox, Select, Popup": [
          "Input - type, clear, getValue",
          "Checkbox",
          "Dropdown",
          "Obsługa okien",
          "Alerty",
          "Wgrywanie pliku",
          "Skrolowanie, najechanie"
        ],
        "Projektowanie testów według Page Object Model": [
          "Co to jest Page Object Model",
          "Praktyczne wykorzystanie Page Object Model"
        ],
        "Testy automatyczne E2E na przykładzie aplikacji": [
          "Konfiguracja projektu",
          "Implementacja testów automatycznych cz. 1",
          "Implementacja testów automatycznych cz. 2",
          "Implementacja testów automatycznych cz. 3",
          "Implementacja testów automatycznych cz. 4",
          "Uruchamianie testów w trybie headless"
        ],
        "CI/CD - Integracja testów z Jenkins": [
          "Wprowadzenie do Jenkins",
          "Instalacja i konfiguracja Jenkins",
          "Instalacja NodeJS Jenkins",
          "Stworzenie projektu",
          "Uruchomienie testów automatycznych w narzędziu Jenkins",
          "Integracja testów z Allure",
          "Przykład podłączenia testów w oparciu o system kontroli wersji",
          "Ustawienie harmonogramu wykonywania testów"
        ]
      },
      "requirements": [
        "Nic. Wszystko jest zawarte w kursie, w tym podstawy Javascript oraz Typescript"
      ],
      "description": "Automatyzacja testów z WebdriverIO i TypeScript – od podstaw do CI/CD\nChcesz rozpocząć karierę jako tester automatyzujący, ale nie masz doświadczenia w programowaniu?\nTen kurs jest właśnie dla Ciebie. Prowadzę go od podstaw, krok po kroku, bez zakładania wcześniejszej wiedzy z zakresu JavaScript, TypeScript czy automatyzacji.\nWspólnie zbudujemy pełny framework testowy, nauczysz się WebdriverIO, a na koniec zintegrowasz testy z narzędziem Jenkins.\n\n\nCo zyskasz po ukończeniu kursu?\n\n\nPodstawy programowania dla testera:\n– Nauczysz się pisać kod w JavaScript i TypeScript\n– Poznasz edytor Visual Studio Code i jego funkcje wspierające automatyzację\n\nAutomatyzacja z WebdriverIO:\n– Tworzenie testów automatycznych z użyciem Mocha i WebdriverIO\n– Używanie asercji do walidacji wyników testów\n– Wzorzec projektowy Page Object Model\n– Praca z selektorami (XPath, ID, klasy, name)\n\nZaawansowane umiejętności testera automatyzującego:\n– Separowanie danych testowych\n– Tworzenie pełnego frameworka testowego\n– Podpinanie testów do Jenkinsa (CI/CD)\n– Ustawianie harmonogramu testów\n– Konfiguracja repozytorium GIT i integracja z Jenkins\n– Generowanie raportów testowych z użyciem Allure\n\n\nCzym jest WebdriverIO i dlaczego warto się go uczyć?\n\nWebdriverIO to potężne narzędzie do automatyzacji aplikacji webowych i mobilnych.\nDziała na silniku Node.js i pozwala testować aplikacje napisane w React, Angularze, Vue.js, a także aplikacje mobilne na Androida i iOS. Łączy w sobie zalety Selenium z prostotą i elastycznością nowoczesnych technologii JavaScript.\nTo jedno z najczęściej wybieranych narzędzi do automatyzacji w nowoczesnych zespołach QA i DevOps.\n\n\nDla kogo jest ten kurs?\n\nDla osób bez doświadczenia, które chcą wejść do świata testów automatycznych\nDla testerów manualnych, którzy chcą zrobić kolejny krok i nauczyć się automatyzacji\nDla wszystkich, którzy chcą od zera zbudować działający framework i zintegrować go z Jenkins\n\n\nJeśli chcesz nauczyć się automatyzacji testów krok po kroku i zrozumieć, jak wygląda realna praca testera automatyzującego, to ten kurs poprowadzi Cię od podstaw aż do wdrożenia CI/CD.",
      "target_audience": [
        "Tester manualny",
        "Osoby chcące zacząć przygodę z automatyzacją",
        "Tester automatyzujący",
        "Osoby szukające pracy jako tester oprogramowania"
      ]
    },
    {
      "title": "Создание фреймворка и автоматизация тестов на Java+Selenium",
      "url": "https://www.udemy.com/course/buildyourtestautomationframework/",
      "bio": "Постройте свой фреймворк для автоматизации тестов на Java, используя Selenium WebDriver, TestNG, AssertJ, Maven, Jenkins",
      "objectives": [
        "Получите практические навыки в автоматизации тестирования и научитесь созданию собственного фреймворка для автоматизации тестов на Java",
        "Получите базовые навыки работы с популярными инструментами: Selenium WebDriver, TestNG, AssertJ, Maven, Jenkins",
        "Изучите основные паттерны проектирования, используемые в автоматизации тестов"
      ],
      "course_content": {
        "Введение в Selenium и подготовка среды разработки": [
          "Введение в Selenium и подготовка среды разработки - теория",
          "Введение в Selenium и подготовка среды разработки - практика (1)",
          "Введение в Selenium и подготовка среды разработки - практика (2)",
          "FAQ - описание возможных проблем и их решений"
        ],
        "Базовые возможности Selenium WebDriver": [
          "Базовые возможности Selenium - теория",
          "Базовые возможности Selenium - практика"
        ],
        "WebElement и локаторы элементов": [
          "WebElement и локаторы элементов - теория (1)",
          "WebElement и локаторы элементов - теория (2)",
          "WebElement и локаторы элементов - практика"
        ],
        "WebElement и простые действия в Selenium": [
          "WebElement и простые действия в Selenium - теория",
          "WebElement и простые действия в Selenium - практика"
        ],
        "Верификация результатов тестов: Assert": [
          "Верификация результатов тестов: Assert - теория",
          "Верификация результатов тестов: Assert - практика"
        ],
        "Построение фреймворка с использованием TestNG аннотаций": [
          "Построение фреймворка с использованием TestNG аннотаций - теория",
          "Построение фреймворка с использованием TestNG аннотаций - практика"
        ],
        "Шаблоны проектирования (Design patterns) в автоматизации тестирования": [
          "Шаблоны проектирования в автоматизации тестирования - теория (1)",
          "Шаблоны проектирования в автоматизации тестирования - теория (2)",
          "Шаблоны проектирования в автоматизации тестирования - теория (3)",
          "Шаблоны проектирования в автоматизации тестирования - практика (1)",
          "Шаблоны проектирования в автоматизации тестирования - теория (2)",
          "Шаблоны проектирования в автоматизации тестирования - практика (3)",
          "Шаблоны проектирования в автоматизации тестирования - практика (4)",
          "Шаблоны проектирования в автоматизации тестирования - практика (5)"
        ],
        "Ожидания в Selenium": [
          "Ожидания в Selenium - теория",
          "Ожидания в Selenium - практика (1)",
          "Ожидания в Selenium - практика (2)"
        ],
        "Продвинутые действия и другие возможности Selenium": [
          "Продвинутые действия и другие возможности Selenium - теория",
          "Продвинутые действия и другие возможности Selenium - практика (1)",
          "Продвинутые действия и другие возможности Selenium - практика (2)"
        ],
        "Интеграция фреймворка с сервером CI на примере Jenkins": [
          "Интеграция фреймворка с сервером CI на примере Jenkins - теория",
          "Интеграция фреймворка с сервером CI на примере Jenkins - практика (1)",
          "Интеграция фреймворка с сервером CI на примере Jenkins - практика (2)",
          "Интеграция фреймворка с сервером CI на примере Jenkins - практика (2)"
        ]
      },
      "requirements": [
        "Базовые знания языка программирования Java",
        "Базовые знания тестирования программного обеспечения"
      ],
      "description": "Добро пожаловать на курс Создание фреймворка и автоматизация  тестов на Java с использованием Selenium!\n\n\nЧтобы автоматизация тестов была эффективной, вам необходим тестовый фреймворк - структура, которая упорядочивает и облегчает написание тестов, их поддержку и дает множество других преимуществ. С другой стороны фреймворк это готовый инструмент, с помощью которого вы сможете тестировать целевое программное обеспечение. В этом курсе я покажу как создать такой фрейморк с использованием Java и Selenium, и в результате вы сможете создать собственный простой но работающий фреймворк.\n\n\nОбратите внимания, что в этом курсе я не обучаю языку программирования Java, поэтому для эффективной работы с курсам крайне желательно иметь начальные навыки программирования.\n\n\nВ отличии от других курсов по автоматизации, мы не будем углубляться в возможности Selenium хотя конечно же обсудим основы. Цель этого курса - научиться разрабатывать фреймворк, поэтому вы получите полезную практическую информации о процессе создания фреймворка, то что вы сразу же сможете применить в своей работе.\n\n\nКурс построен по принципу от простого к сложному, поэтому начнем мы с простейших скриптов, а затем будем усложнять и развивать фреймворк, при этом вы научитесь применять шаблоны проектирования и использовать грамотные архитектурные решения в вашей работе.\n\n\nФинальная версия исходного кода проекта доступна на bitbucket.\n\n\nСодержимое курса:\nВведение в Selenium и подготовка среды разработки\nБазовые возможности Selenium WebDriver\nWebElement и локаторы элементов\nWebElement и простые действия в Selenium\nВерификация результатов тестов: Assert\nПостроение фреймворка с использованием TestNG аннотаций\nШаблоны проектирования (Design patterns) в автоматизации тестирования\nОжидания в Selenium\nПродвинутые действия и другие возможности Selenium\nИнтеграция фреймворка с сервером CI на примере Jenkins",
      "target_audience": [
        "QA специалисты и тестировщики программного обеспечения, желающие изучить основы автоматизации тестирования",
        "Начинающие специалисты по автоматизации тестирования, желающие научиться создавать эффективные и легко поддерживаемые фреймворки для автоматизации тестов"
      ]
    },
    {
      "title": "Performance Testing using JMeter Tool - تعلم أساسيات",
      "url": "https://www.udemy.com/course/performance-testing-jmeter/",
      "bio": "Load, Stress, Endurance, Spike Testing, Script Recording, Non-GUI execution of Test plans.",
      "objectives": [
        "What is Performance Testing",
        "Why do Performance Testing",
        "Types of Performance Testing",
        "Common Performance Problems",
        "How to Do Performance Testing",
        "How to use JMeter",
        "Tips and Tricks in JMeter Tool"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Content",
          "Important Note"
        ],
        "What is Performance Testing": [
          "What is Performance Testing",
          "Example Performance Testing _ Part 1",
          "Example Performance Testing _ Part 2",
          "Functional vs. Performace",
          "Why Performance Testing",
          "Conclusion",
          "Impact of poor Performance Testing"
        ],
        "Types of Performance Testing": [
          "Types Overview",
          "Load Testing",
          "Stress Testing",
          "Endurance Testing",
          "Spike Testing",
          "Volume Testing",
          "Scalability Testing",
          "Concurrency Testing"
        ],
        "Load Generation": [
          "Non-Functional Requirements",
          "Concept of Load Generation",
          "Load Profile Steps",
          "Load Profile - Example",
          "Load Profile Assignment",
          "Solution"
        ],
        "Performance Problems": [
          "Overview on Performance Problems",
          "Categories of Performance problems",
          "Long Load Time",
          "Poor Response Time",
          "Poor Scalability",
          "Bottlenecking",
          "Ideas for Test Cases"
        ],
        "JMeter Overview": [
          "How it works",
          "How to Download JMeter",
          "JMeter Components",
          "How to create plan and add elements Overview"
        ],
        "Hands-on JMeter": [
          "Google Test",
          "Different Types of Reports",
          "Google Template",
          "JMeter Non-GUI",
          "Non-GUI Report",
          "Non-GUI Graph",
          "Non-GUI Graph 2"
        ],
        "Timers": [
          "Timers",
          "Timers Example"
        ],
        "Assertions": [
          "Assertions Overview",
          "Response Assertion",
          "Size and Duration Assertion",
          "HTML Assertion",
          "HTML Assertion Errors",
          "JSON Assertion"
        ],
        "Variables and CSV files": [
          "Variables and CSV Files"
        ]
      },
      "requirements": [
        "Laptop"
      ],
      "description": "Course Outline:\n1 What is Performance Testing\nDive into the fundamentals of Performance Testing and understand why it's crucial for modern software development.\n\n\n2 Why do Performance Testing\n\n\n3 Types of Performance Testing\nLoad testing\nStress testing\nEndurance testing\nSpike testing\nVolume testing\nScalability testing\nConcurrency Testing\n4 Practical Examples\nLearn through hands-on, real-world examples of Performance Testing to reinforce your understanding.\n\n\n5 How to Design Load Profile\nMaster the art of crafting effective and efficient load generators.\n\n\n6 Common Types of Performance Issues\nGet an in-depth look at the most common problems that can affect performance and how to identify and enhance them.\n\n\nCourse Features:\nEngaging video lessons.\nReal-world examples and case studies.\nHands-on labs to practice Performance Testing.\nQuizzes and assessments to test your knowledge.\nCertificate of Completion.\n\n\nBrief about Me:\n\n\nMahmoud Eid, an electromechanical engineer, graduated from the Faculty of Engineering, Alexandria University, Electromechanical Department.\n\n\nI have experience in the software testing field over the past 4 years, working with European clients, which enabled me to play different roles and processes that enriched my knowledge and experience. I am passionate about my work, am self-motivated, and enjoy guiding others to reach their goals.\n\n\nAcademy instructor within the company, where I work, teaching newcomers the ISTQB-FL, Practical Manual Testing, and Tosca Automation Tool.\n\n\nMy Certificates:\n\n\nISTQB Agile Tester\nISTQB Foundation Level\nTosca Automation Tool:\nAutomation Specialist Level 1\nAutomation Specialist Level 2\nAutomation Engineer Level 1\nAutomation Specialist for API\nTest Design Specialist Level 1\nTest Design Specialist Level 2\nAutomation Specialist Certified Trainer\n\n\nAlready have +850 teaching hours in many fields of engineering and software testing courses for different ages and backgrounds, including undergraduates, graduates, and employed people.\n\n\nEnroll now and embark on your journey to become a proficient Performance Tester!",
      "target_audience": [
        "Junior Software Tester"
      ]
    },
    {
      "title": "Selenium từ cơ bản đến nâng cao",
      "url": "https://www.udemy.com/course/selenium-tu-co-ban-va-nang-cao-voi-springboot/",
      "bio": "Tìm hiểu Selenium chuyên sâu, JUnit, JAVA, sử dụng Spring Framework, Cucumber Framework và Extent Report.",
      "objectives": [
        "Selenium từ cơ bản đến nâng cao",
        "1. Cách lấy element ID, Name, Class, xpath, CSS và DOM",
        "2. Làm việc với Alert, Frame và windows",
        "3. Làm việc với Mouse",
        "4. và nhiều vấn đề khác",
        "SelectorHUB: cài đặt và cách sử dụng",
        "Java với selenium",
        "Design Patterns với Java và 2 ứng dựng trong Selenium",
        "JUnit cách viết code với JUPUTER",
        "Thiết kế Framework",
        "Tìm hiểu Cucumber, Gherkin và ứng dụng với Selenium",
        "Báo cáo với Extent Report",
        "Tìm hiểu Spring Boot và Làm framework autumatio với Spring Boot",
        "Sử dụng CI/CD với GitLab"
      ],
      "course_content": {
        "Giới thiệu": [
          "Giới thiệu Khóa học",
          "Nội dung khóa học"
        ],
        "Selenium từ cơ bản đến nâng cao": [
          "Nội dung",
          "Cài đặt JAVA",
          "Cài đặt Maven",
          "Cài đặt EClipse",
          "Tạo dự án",
          "Làm việc với Webdriver Manager",
          "Công cụ"
        ],
        "Locators trong Selenium Webdriver": [
          "Locators trong Selenium Webdriver",
          "Định vị phần tử giao diện người dùng theo ID",
          "Định vị phần tử giao diện người dùng theo Name",
          "Định vị phần tử giao diện người dùng theo ClassName",
          "Định vị phần tử giao diện người dùng theo Tag Name",
          "Định vị phần tử giao diện người dùng theo Link Text / Partial Link Text",
          "Sử dụng Id với bộ chọn CSS để tìm phần tử",
          "Sử dụng ký tự đại diện với bộ chọn CSS",
          "Sự khác biệt giữa Xpath tuyệt đối và tương đối",
          "Sử dụng hàm contains() để tìm các phần tử"
        ],
        "Các lệnh hành động cơ bản của WebDriver": [
          "Các lệnh hành động cơ bản",
          "get(String url)",
          "Click()",
          "Submit()",
          "Clear() và sendKeys()",
          "navigate().to()",
          "navigate().back() và navigate().forward()",
          "getCurrentUrl()",
          "maximize()",
          "Quit() và Close()"
        ],
        "Làm việc với Form": [
          "Button",
          "Link",
          "TextBox",
          "Radio Button",
          "CheckBox",
          "DropDown Box"
        ],
        "Định vị bằng DOM": [
          "Giới thiệu",
          "Lấy elements với ID bằng DOM",
          "Lấy elements với Name bằng DOM",
          "Lấy elements bằng dom:name",
          "Lấy elements bằng dom:index"
        ],
        "Xử lý cảnh báo, xác nhận và lời nhắc Javascript": [
          "Giới thiệu",
          "Alert Popup",
          "Alert Confirmations",
          "Alert Prompts"
        ],
        "Di chuột": [
          "Giới thiệu",
          "Sự kiện di chuột",
          "Sự kiện kéo và thả",
          "sự kiện kéo",
          "xử lý-trượt",
          "xử lý thay đổi kích thước"
        ],
        "Iframe và Windows": [
          "Windows",
          "IFrame"
        ],
        "Đánh dấu phần tử bằng cách sử dụng trình duyệt": [
          "Giới thiệu và cách Đánh dấu phần tử",
          "Bài Tập"
        ]
      },
      "requirements": [
        "Chưa biết về Lập trình java cũng có thể tham gia khóa học"
      ],
      "description": "Bạn đang muốn phát triển sự nghiệp trong lĩnh vực kiểm thử tự động (Automation Testing) hoặc nâng cao kỹ năng để tạo sự khác biệt trong công việc? Khóa học Selenium từ cơ bản đến nâng cao chính là lựa chọn lý tưởng để giúp bạn thành thạo Selenium và xây dựng các framework tự động hóa mạnh mẽ, đáp ứng nhu cầu công việc hiện tại và tương lai.\nTại sao bạn cần khóa học này?\nỨng dụng thực tế: Học cách sử dụng Selenium để tự động hóa các tác vụ kiểm thử, giúp tiết kiệm thời gian, giảm sai sót và tăng hiệu suất làm việc.\nTrang bị kỹ năng toàn diện: Từ các kiến thức cơ bản như lấy elements, sử dụng DOM, đến các kỹ thuật nâng cao như xử lý ngoại lệ, tạo báo cáo tự động, xây dựng framework với Spring Boot và tích hợp CI/CD với GitLab.\nHướng đến sự chuyên nghiệp: Bạn sẽ được học cách thiết kế framework chuyên nghiệp, áp dụng các Design Pattern như Page Object Model và Factory, giúp tăng tính tái sử dụng và bảo trì dễ dàng.\nKhóa học sẽ giúp bạn:\nLàm chủ Selenium WebDriver: Hiểu rõ cách lấy và thao tác với các element (ID, Name, Class, XPath, CSS, DOM), xử lý Alert, Frame, Windows, và các hành động với chuột.\nTự động hóa kiểm thử: Tích hợp Selenium với các công cụ phổ biến như JUnit, Cucumber, và tạo báo cáo chuyên nghiệp bằng Extent Report.\nHọc Java từ cơ bản đến nâng cao: Không cần kiến thức lập trình ban đầu, bạn sẽ học cách viết code với Java, từ đó ứng dụng để xây dựng framework mạnh mẽ.\nHiểu và ứng dụng Gherkin: Viết các feature và scenario rõ ràng, dễ hiểu, phục vụ tốt cho các nhóm làm việc Agile.\nTích hợp CI/CD: Triển khai và quản lý framework tự động hóa trên GitLab, đảm bảo quy trình kiểm thử liền mạch và chuyên nghiệp.\nAi nên tham gia khóa học này?\nCác bạn đam mê kiểm thử phần mềm và muốn bước vào lĩnh vực Automation Testing.\nNhững người mới làm quen với lập trình Java nhưng muốn nhanh chóng ứng dụng nó trong công việc.\nCác chuyên gia kiểm thử thủ công (Manual Testing) muốn chuyển đổi sang kiểm thử tự động.\nBất kỳ ai muốn nâng cao kỹ năng và phát triển sự nghiệp trong lĩnh vực kiểm thử phần mềm.\nĐiểm nổi bật của khóa học:\nHọc theo lộ trình rõ ràng: Từ kiến thức cơ bản đến nâng cao, đảm bảo bạn có thể áp dụng ngay vào công việc.\nDự án thực tế: Xây dựng framework từ đầu với các công nghệ tiên tiến, chuẩn bị cho các dự án doanh nghiệp.\nHỗ trợ lâu dài: Tài liệu chi tiết, bài giảng trực quan, và hỗ trợ học viên trong suốt quá trình học.\nĐừng chần chừ! Tham gia khóa học Selenium từ cơ bản đến nâng cao ngay hôm nay để làm chủ kỹ năng tự động hóa, mở rộng cơ hội nghề nghiệp và sẵn sàng đón đầu các thách thức công nghệ trong tương lai!",
      "target_audience": [
        "Chưa biết về Lập trình java cũng có thể tham gia khóa học",
        "Các bạn yêu thích lập trình test tự động"
      ]
    },
    {
      "title": "SDET QA Yazılım Test Otomasyonu",
      "url": "https://www.udemy.com/course/yazilim-test-muhendisligi-selenium-testng-cucumber/",
      "bio": "Yazılım test mühendisliği alanında sıfırdan ileri seviyeye eksiksiz bir kurs",
      "objectives": [
        "Selenium WebDriver, TestNG ve Cucumber ile web, mobil ortamlarına kullanıcı kabul testleri üretmeyi öğrenecek",
        "Bir yazılım firmasında Agile proje yönetim modeli çalışma yapısını öğrenecek",
        "Bir CI/CD tool olan Jenkins ile otomasyon test senaryolarının periyodik olarak çalıştırılması ve raporlarının alınmasını öğrenecek",
        "Tester olarak sıfırdan bir test repository nasıl kurulur, hangi kısımlar göz önünde bulundurularak bir test ortamı hazırlanır öğrenecek"
      ],
      "course_content": {
        "Yükleme Videoları": [
          "Intellij IDE Download",
          "Visual Studio Code Download",
          "Selenium WebDriver Download",
          "Apache Maven Download",
          "Slf4j Download",
          "Slf4j lib Klasörüne Ekleme"
        ],
        "HTML ve CSS": [
          "HTML ve CSS temel bilgileri - 1",
          "HTML ve CSS temel bilgileri - 2"
        ],
        "Selenium WebDriver": [
          "1.1",
          "1.2",
          "1.3",
          "2.1",
          "2.2",
          "2.3",
          "3.1",
          "3.2",
          "3.3",
          "3.4",
          "4.1",
          "4.2",
          "5.1",
          "5.2",
          "5.3",
          "6.1",
          "6.2",
          "7.1",
          "7.2",
          "Ödev Soruları 1,2,3",
          "Ödev Çözümleri 1,2,3",
          "Ödev Çözümleri 3 Devamı"
        ],
        "TestNG": [
          "1.1",
          "1.2",
          "2.1",
          "2.2",
          "3.1",
          "3.2",
          "3.3",
          "4.1",
          "4.2",
          "5.1",
          "5.2",
          "6.1",
          "6.2",
          "6.3",
          "7.1",
          "7.2"
        ],
        "Cucumber": [
          "1.1",
          "1.2",
          "2.1",
          "2.2",
          "3.1",
          "3.2",
          "3.3",
          "4.1",
          "4.2",
          "5.1",
          "5.2",
          "6.1",
          "7.1",
          "7.2",
          "8.1",
          "9.1",
          "10.1",
          "10.2",
          "11.1",
          "11.2"
        ],
        "Jenkins && Jira": [
          "Jenkins",
          "Jira 1.1",
          "Jira 1.2"
        ],
        "Agile Proje Yönetim Modeli ve Scrum Yapısı": [
          "Agile Model"
        ]
      },
      "requirements": [
        "Bir OOP (Object Oriented Programming) programlama dilini başlangıç düzeyinde de olsa bilmek, kurs içerisinde verilecek bilgilerin daha hızlı kavranmasını sağlayacaktır. Tercihen başlangıç düzeyinde Java bilinmesi tavsiye edilir"
      ],
      "description": "Web ve mobil uygulamalarında en yaygın kullanılan Selenium WebDriver ve ona bağlı olarak testNG ve Cucumber kullanımlarını öğreneceğimiz kursumuza hoş geldiniz. Bu kurs içeriği sayesinde sıfır durumundan kendi otomasyon test repository'nizi oluşturabilir hale geleceksiniz. Yazılım test mühendisliğinin temellerini bu kurs sayesinde öğrenecek ve piyasa koşullarına hazır hale geleceksiniz.\nÖğreneceğimiz konular:\nSelenium WebDriver,\nTestNG,\nCucumber ve Gherkin dil kullanımı,\nYazılım yaşam döngüsü (SDLC), Test yaşam döngüsü (STLC), Test Çeşitleri (White Box, Black Box, etc.)\nBir SDET/QA uzmanının sorumluluk alanı,\nCI/CD tool olarak Jenkins kullanımı,\nGithub temel kullanımı,\nAgile proje yönetim modeli temelleri,\nJira proje yönetim uygulaması kullanımı,\nJira testing plugins olan Zephyr Scale kullanımı,\nBu kurs kapsamı içerisinde bir yazılım projesine baştan sona test repository'si hazırlayabileceksiniz. Agile proje yönetim metodolojisini ve bir projenin bu yöntem ile nasıl geliştirildiğinin temellerini kurs içeriğimizde öğreneceksiniz. Aynı zamanda bir yazılım test mühendisi olarak ihtiyacınız olacak yardımcı toolları da bu kurs içeriği sayesinde öğrenmiş olacaksınız. CI/CD  süreçleri içerisinde en çok kulllanılan Jenkins içerisinde projeniz için testler oluşturarak rapor süreçlerinin yönetilmesini öğreneceksiniz. Kurs içerisinde size verilen ödevleri ve çözümlerini dikkatle çalışmanız, dersleri dikkatle izlemeniz ve tekrar tekrar kendinize ödevler oluşturarak tekrarlar gerçekleştirmeniz ile birlikte yazılım test uzmanı kariyerinizde fazlasıyla yeterli olacak tüm bilgi ve donanıma sahip olacaksınız.\nDers Müfredatı:\nHTML Temelleri\nCSS\nSelenium Konuları:\nLocators\nBase Driver\nSelectors: Xpath, CSS Selector\nAction Class\nWait\niframes\njavascript executor\nRobot Class\nTestNG Konuları:\nXML Files\nMethod, Class: Groups - Parameter\nData Provider\nCross Browser Testing\nParallel Testing\nHard Assert and Soft Assert\nPage Object Model\nCucumber Konuları:\nFramework Hazırlığı\nScenario\nParameter\nScenario Outline\nDatatable\nRunner Class\nExtend Reports\nParallel Testing\nCross Browser Testing\nApache POI ile Excel işlemleri\nJenkins ile CI/CD pipelining kurulumu\nSmoke ve Regression Test kurulumu\nJira proje yönetim aracı kullanımı\nJira Zephyr Scale ile test işlemleri ve raporlamalar\nAgile proje yönetim yapısı ve detayları",
      "target_audience": [
        "Dünya yazılım geliştirme sektöründe yükselen bir trend olarak yazılım geliştirme test mühendisliği alanına ilgi duyan ve tüm detayları ile bu alanda kendini geliştirmek isteyen herkese yönelik bir kurstur",
        "Test otomasyon süreçlerinde kendisine bir kariyer hedefleyen herkes, yazmış olduğu kodları otomasyon ile test etmek isteyen developerlar, yazılım proje yönetiminde test süreçleri hakkında bilgi sahibi olmak isteyen herkese uygun bir eğitimdir. Seviyeniz ne olursa olsun bu kurs ile kendinizi test alanında geliştirme fırsatı yakalayacakasınız."
      ]
    },
    {
      "title": "Fundamentos de Testing de Software y TDD con JUnit 5",
      "url": "https://www.udemy.com/course/testing-software-tdd-junit/",
      "bio": "Aprende los principios de Testing de Software y Desarrollo Dirigido por Test (TDD) con JUnit 5 y Mockito desde cero",
      "objectives": [
        "La importancia del testing automático en el desarrollo ágil de software",
        "Escribir tests unitarios y de integración de calidad, siguiendo los principios FIRST",
        "Escribir tests unitarios con JUnit 5",
        "Probar el lanzamiento de excepciones con JUnit 5",
        "Usar tests parametrizados de JUnit 5 (@ParameterizedTest, @ValueSource, @CsvSource, @MethodSource, etc.)",
        "Usar Clock en lugar de Instant now() o new Date()",
        "Aplicar con soltura la técnica desarrollo dirigido por tests (TDD), de forma práctica y efectiva. Tras el curso podrás desarrollar software dirigido por test",
        "Redactar tests de aceptación y traducirlos a tests unitarios y test de integración",
        "Fundamentos de dobles de prueba, cuándo usarlos y cuándo es mejor usar el objeto real",
        "Crear dobles de prueba con EasyMock y Mockito",
        "Escribir test de integración con JUnit 5",
        "Aplicar TDD con tests de integración",
        "Escribir tests de funcionalidades que acceden a base de datos con Spring Test y BD H2 en memoria",
        "Escribir tests de funcionalidades que acceden a base de datos con Database Rider y BD H2 en memoria",
        "Aprender las ventajas e inconvenientes del testing con bases de datos en memoria",
        "Aprender diferentes enfoques de testing. Test Unitarios vs Test de integración. De dentro a fuera vs de fuera a dentro"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¿Por qué hacer tests?",
          "Cómo seguir el curso",
          "Nota sobre el entorno de desarrollo",
          "Instalación del entorno en Windows (opcional)",
          "Instalación del entorno en Linux (opcional)",
          "Vista jerárquica de paquetes en Eclipse"
        ],
        "Base teórica": [
          "¿Qué aprenderemos en esta sección?",
          "Introducción al agilismo",
          "El testing en las prácticas CI/CD",
          "Conceptos de TDD y ATDD",
          "Tipos de tests",
          "Principios de testing",
          "Cuestionario sobre la base teórica"
        ],
        "Test Unitarios": [
          "¿Qué aprenderemos en esta sección?",
          "Introducción a JUnit 5",
          "¿Qué es un test unitario y cómo se escribe?",
          "Plantilla Given-When-Then para Eclipse",
          "Escribir los primeros tests unitarios - TextNormalizer",
          "Introducir bugs en TextNormalizer",
          "Ejercicio probar EmailValidator. Enunciado",
          "Ejercicio probar EmailValidator. Solución",
          "Pruebas de lanzamiento de excepciones",
          "Ejercicio, probar lanzamiento de excepción en EmailValidator. Enunciado",
          "Ejercicio, probar lanzamiento de excepción en EmailValidator. Solución",
          "Introducción a los tests parametrizados de JUnit 5",
          "Tests parametrizados - Mejorando EmailValidatorTest",
          "Tests parametrizados - Mejorando TextNormalizerTest",
          "Test parametrizados - Probar InvoiceLine con @MethodSource",
          "Usar Clock en lugar de Instant.now() o new Date()",
          "El término \"test fixture\"",
          "Cuestionario sobre test unitarios",
          "Código fuente de la sección Test Unitarios"
        ],
        "Desarrollo Dirigido por Test (TDD)": [
          "¿Qué aprenderemos en esta sección?",
          "El algoritmo TDD",
          "TDD - Beneficios e inconvenientes",
          "ATDD - Repaso",
          "ATDD y TDD - Proceso en práctica (Contador de palabras) - Parte 1",
          "ATDD y TDD - Proceso en práctica (Contador de palabras) - Parte 2",
          "La importancia de interiorizar el proceso y dar pasos pequeños",
          "Mejorando Product con TDD - parte 1",
          "Mejorando Product con TDD - parte 2",
          "Mejorando InvoiceLine con TDD",
          "Ejercicio del triángulo - Enunciado",
          "Ejercicio del triángulo - Solución",
          "Aplicar TDD en nuestro día a día",
          "Cuestionario sobre desarrollo dirigido por tests",
          "Código fuente de la sección Desarrollo Dirigido por Test (TDD)"
        ],
        "Dobles de prueba": [
          "¿Qué aprenderemos en esta sección?",
          "Dobles de prueba - Introducción",
          "Dobles de prueba - Ejemplo básico",
          "Tipos de dobles de prueba",
          "Cuándo usar un doble de prueba",
          "Dobles de prueba - Frameworks",
          "EasyMock - Getting Started",
          "Mockito - Getting Started",
          "Currency Converter con Mockito - parte 1",
          "Currency Converter con Mockito - parte 2",
          "Currency Converter con Mockito - Validación de estado vs comportamiento",
          "Cuestionario sobre dobles de prueba",
          "Código fuente de la sección Dobles de Prueba"
        ],
        "Test de integración": [
          "¿Qué aprenderemos en esta sección?",
          "Test de integración - Introducción",
          "Tests de integración en el desarrollo ágil con TDD",
          "Preparar base de datos H2",
          "Probar funcionalidades que requieran acceso a BBDD - Problemática",
          "Tests de acceso a BD - Solución con Spring Test",
          "Tests de acceso a BD - Database Rider - Introducción",
          "Tests de acceso a BD - Database Rider - Ejemplo práctico",
          "Tests de acceso a BD - Introducción a JDBDT (opcional)",
          "Testing con BBDD en memoria - Ventajas e inconvenientes",
          "Tests Unitarios vs Tests de Integración - Enfoques",
          "Cuestionario sobre test de integración",
          "Código fuente de la sección Test de Integración"
        ],
        "Proyecto de ejemplo": [
          "¿Qué haremos en esta sección?",
          "Aplicación parking - Descripción problema",
          "Esqueleto del proyecto",
          "Emitir un ticket - Test de aceptación",
          "Emitir un ticket - Parte 1 - Preparamos el test de integración",
          "Emitir un ticket - Parte 2 - Implementamos y metemos un bug",
          "Emitir un ticket - Parte 3 - Resolvemos bug y terminamos la historia",
          "Calcular importe a pagar - Tests de aceptación",
          "Calcular importe a pagar - Domain - Parte 1",
          "Calcular importe a pagar - Domain - Parte 2",
          "Calcular importe a pagar - Infrastructure y application",
          "Aplicación parking - resumen final",
          "Código fuente de la sección Proyecto de ejemplo"
        ],
        "Conclusión": [
          "Resumen y despedida"
        ]
      },
      "requirements": [
        "Solo conocimientos básicos de programación orientada a objetos en cualquier lenguaje",
        "Un ordenador personal. Puesto que gran parte del curso consiste en clases prácticas de programación es mucho mejor un PC que un móvil para seguir las clases prácticas"
      ],
      "description": "Una de las formas más efectivas de construir software es usando una métodología ágil. Pero en un desarrollo ágil es básico que el código se adapte bien a los cambios, ahí es donde entra el testing de calidad y el Desarrollo Dirigido por Test (TDD). En este curso aprenderás los Fundamentos del Testing de Software y el TDD a través de la popular herramienta de Java JUnit 5.\nAprende los fundamentos del testing de calidad con TDD (Test Driven Development) y mejora el nivel de tus desarrollos con la ayuda de este curso.\nEl objetivo principal del curso, más allá de aprender JUnit, Mockito o Database Rider, es que aprendas los principios que te permitan aplicar un TDD efectivo y de calidad, con tests unitarios y de integración. Y, por supuesto, que aprendas por qué es tan importante el testing en el desarrollo ágil.\nAprende la importancia del testing en las prácticas CI/CD y en el desarrollo ágil\nInterioriza los principios de testing.\nAprende a escribir test unitarios y de integración con JUnit 5\nAprende cuándo y cómo usar dobles de prueba con EasyMock y con Mockito\nAprende desarrollo dirigido por tests como técnica de diseño\nPon en práctica el proceso ATDD y TDD\nAprende a escribir test de funcionalidades que acceden a bases de datos\nConoce y practica los distintos enfoques de testing. Tests unitarios vs tests de integración. De dentro a fuera vs de fuera a dentro.\nUna habilidad que elevará tus desarrollos al siguiente nivel.\nEl testing de calidad es clave si quieres construir software robusto de forma ágil. Pero lo que realmente nos ayudará a diseñar mejor código, y por tanto a ser más productivos, es nuestra habilidad para aplicar el Desarrollo Dirigido por Test  (TDD) de forma efectiva.\nEn cuanto interiorices esta técnica y sepas escribir tests basados en unos principios básicos, tu nivel como programador/a subirá muchísimo. Y estoy convencido que ya no querrás trabajar de otra forma. Te lo digo por mi propia experiencia y la de muchos compañeros a los que he ayudado a aprender e interiorizar el TDD.\nEnfoque del curso y metodología de aprendizaje\nDe un programador para programadores. Todo el material del curso vas a poder aplicarlo directamente en tu día a día como desarrollador. Es lo que yo he aplicado cada día durante más de 10 años.\nSobre todo práctico. Más del 80% del material son clases prácticas.\nDesde cero y paso a paso. El único requisito es que tengas conocimientos básicos de programación orientada a objetos en cualquier lenguaje. Escribiremos los primeros tests desde cero, con ejemplos muy sencillos e iremos subiendo el nivel de dificultad poco a poco.\nNo necesitas venir del mundo Java. Yo te guiaré para montar el entorno y explicaré todo el código que hagamos.\nLa tecnología como un medio y no como un fin. Conceptos aplicables a cualquier lenguaje y tecnología.\nAprenderás JUnit 5 y otras herramientas como Mockito y Database Rider, pero siempre con un propósito y no como un fin en sí mismo.\nLa idea es que puedas aplicar los conceptos aprendidos en cualquier otro lenguaje.\nEvaluaciones y actividades de práctica\nCasi todas las secciones tienen al final un cuestionario para que puedas evaluar tu progreso.\nEjercicios para que practiques por tu cuenta (todos resueltos en la siguiente clase).\nCódigo fuente con todos los ejemplos al final de cada sección.\nEnlaces a lecturas adicionales recomendadas.\nAl final haremos un pequeño proyecto de ejemplo que incluirá todos los conceptos vistos durante el curso.\nEn resumen, si quieres dar un salto como programador, ser más productivo y mejorar la calidad de tus desarrollos, este curso es perfecto para tí. Simplemente decir que estás invitado. Para mí sería un honor tenerte como estudiante en este curso.\n¡Así que no te lo pienses más e inscríbete!\n¡Nos vemos en las clases!",
      "target_audience": [
        "Desarrolladores, que estén al comienzo de su carrera y quieran mejorar su nivel a través del desarrollo dirigido por tests",
        "Desarrolladores con experiencia, pero que no estén habituados a trabajar en base a testing y que estén interesado en aprender desarrollo dirigido por test (TDD) y fundamentos de testing",
        "Desarrolladores con o sin experiencia que vengan de otras plataformas y que quieran aprender a escribir pruebas unitarias y de integración en Java con JUnit 5",
        "Desarrolladores que, simplemente estén interesados en aprender los fundamentos de un testing de calidad y de TDD"
      ]
    },
    {
      "title": "Podstawy korzystania z WireMock do testowania REST API",
      "url": "https://www.udemy.com/course/podstawy-korzystania-z-wiremock-do-testowania-rest-api/",
      "bio": "Praktyczne podejście do symulowania serwisów REST i automatyzacji testów z wykorzystaniem WireMock",
      "objectives": [
        "Instalacja i konfiguracja serwera WireMock, co pozwala na elastyczne testowanie aplikacji w różnych kontekstach.",
        "Korzystanie z wbudowanych narzędzi administracyjnych oraz funkcji admin/recorder do przechwytywania i zarządzanie żądaniami oraz odpowiedziami HTTP.",
        "Tworzenie stubów bezpośrednio w kodzie, co pozwoli na precyzyjne symulowanie zachowań API w ramach testów jednostkowych i integracyjnych.",
        "Tworzenie i uruchamianie testów z wykorzystaniem podejścia deklaratywnego i programatycznego, używając JUnit 5 oraz Rest Assured."
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp do kursu",
          "Wprowadzenie do narzędzia WireMock"
        ],
        "Tworzenie projektu": [
          "Budowanie projektu Maven w Javie"
        ],
        "WireMock serwer": [
          "Wprowadzenie do serwera WireMock",
          "Konfiguracja serwera WireMock",
          "Rejestracja zapytań wysyłanych do rzeczywistego serwisu REST",
          "WireMock – Wprowadzenie i Konfiguracja"
        ],
        "Pisanie własnych zaślepek": [
          "Pisanie zaślepek obsługujących metodę GET oraz basic authentication",
          "Pisanie zaślepek obsługujących metodę POST oraz URL matching",
          "Pisanie zaślepek zwracających zawartość pliku w treści odpowiedzi",
          "Tworzenie zaślepek WireMock dla metod GET i POST"
        ],
        "Podejście Deklaratywne i Programistyczne (Declarative vs Programmatic)": [
          "Wprowadzenie do podejścia Deklaratywnego i Programistycznego",
          "Podejście Deklaratywne - adnotacja WireMockTest",
          "Podejście Programistyczne - adnotacja RegisterExtension",
          "Deklaratywne i Programistyczne podejście do testów WireMock"
        ],
        "Materiały do nauki": [
          "Link do kodu"
        ]
      },
      "requirements": [
        "Podstawy programowania w języku Java oraz zainstalowane środowisko programistyczne np. IntelliJ"
      ],
      "description": "Podstawy korzystania z WireMock do testowania REST API to kurs stworzony dla programistów i testerów, którzy chcą zautomatyzować testowanie aplikacji opartych na usługach REST. WireMock to narzędzie, które pozwala na symulowanie zewnętrznych serwisów, co znacząco ułatwia testowanie aplikacji w izolacji, bez potrzeby dostępu do rzeczywistych serwerów.\nW trakcie kursu nauczysz się:\nJak skonfigurować i uruchomić serwer WireMock\nTworzyć zaślepki (stubs) dla różnych metod HTTP, takich jak GET i POST\nObsługiwać autoryzację (basic authentication) i walidację zapytań\nRejestrować zapytania wysłane do rzeczywistych serwisów REST i automatycznie generować zaślepki\nTworzyć testy przy użyciu podejścia deklaratywnego i programistycznego\nSymulować odpowiedzi serwera i błędy w sposób dynamiczny i elastyczny\nKurs jest skierowany zarówno do osób początkujących, jak i bardziej zaawansowanych użytkowników, którzy chcą usprawnić proces testowania aplikacji.\nCo znajdziesz w kursie:\nTeorię i praktyczne przykłady krok po kroku\nPrzykłady kodu w Javie, które możesz wykorzystać w swoich projektach\nWyjaśnienie różnic pomiędzy podejściem deklaratywnym a programistycznym\nWskazówki, jak w pełni wykorzystać możliwości WireMock w testach\nDlaczego warto? Jeśli chcesz podnieść efektywność swoich testów, uniezależnić je od zewnętrznych serwisów i stworzyć bardziej niezawodne aplikacje, ten kurs jest dla Ciebie. Dzięki WireMock zyskasz kontrolę nad testowanymi scenariuszami, co pozwoli na szybsze i bardziej precyzyjne testowanie usług REST.\n\n\nTylko teraz zniżka na kurs: 29,99 zł z kodem: A98756253DA2AFB08D09",
      "target_audience": [
        "Kurs jest przeznaczony dla programistów, testerów oraz inżynierów QA, którzy chcą poszerzyć swoje umiejętności w zakresie testowania aplikacji korzystających z REST API. Polecany jest w szczególności uczestnikom którzy mają już podstawową wiedzę z programowania w Javie oraz doświadczenie w pracy z API, ale nie znają narzędzie WireMock. Kurs pomoże Ci nauczyć się tworzenia testów z użyciem stubowania oraz symulacji serwerów udostępniających REST API."
      ]
    },
    {
      "title": "Curso completo de testes de software, de jUnit a Arquitetura",
      "url": "https://www.udemy.com/course/testes-ao-codigo-do-legacy-ao-archunit/",
      "bio": "Aprende a testar com jUnit, Mockito, AssertJ, e com frameworks avançadas: PITest, JQWIK, ArchUnit, Testcontainers.",
      "objectives": [
        "Desenvolver testes unitários usando apenas código",
        "Desenvolver testes unitários com JUnit e Mockito",
        "Aprende sobre assertJ de uma forma mais especializada",
        "Tem acesso a uma lista de mais de 30 anti patterns sobre testes",
        "Aprende a fazer testes e refactor em código legacy",
        "Aprende sobre testes com mutações usando o PITest",
        "Testes baseados em propriedades, um ajuda tremenda nos testes com jqwik",
        "BDD e como desenvolver testes em cucumber e gherkin",
        "Test containers, e o uso de base de dados reais em testes do software",
        "Testes em Spring, com direito a um tutorial",
        "Testa a sua arquitetura aplicacional com ArchUnit",
        "Aprende sobre fitness functions e como te podem ajudar"
      ],
      "course_content": {
        "Introduction": [
          "Curso",
          "Sobre mim",
          "Agenda"
        ],
        "Princípios básicos sobre testar": [
          "Agenda",
          "Testar o software",
          "Porquê testar",
          "7 princípios dos testes",
          "Tipos de testes",
          "Pirâmide dos testes",
          "Testes Box - White, Gray, e Black",
          "Testes Black box",
          "Testes White box",
          "Testes Gray box",
          "TDD - Test Driven Development",
          "BDD - Behavior Driven Development",
          "Testes e DevOps",
          "O que testar",
          "Frameworks de testes em Java"
        ],
        "Testes unitários 101": [
          "Agenda",
          "O que são testes unitários",
          "Análise - código legacy",
          "Análise - testes após o desenvolvimento",
          "Análise - código em TDD",
          "JUnit 5 - O que é",
          "O primeiro teste unitário",
          "O primeiro teste unitário - demonstração",
          "Organização dos testes - por nome",
          "Organização dos testes - padrão AAA",
          "Asserções",
          "Asserções - demonstração",
          "Organização dos testes - Escolha",
          "Exercício - teste unitário",
          "Exercício - teste unitário - implementação",
          "ParameterizedTest - testes com parâmetros",
          "Exercício - ParameterizedTest",
          "Exercício - ParameterizedTest - implementação",
          "Exercício - ParameterizedTest (csvSource)",
          "Exercício - ParameterizedTest (csvSource) - implementação",
          "ParameterizedTest (methodSource)",
          "Exercício - ParameterizedTest (methodSource)",
          "Exercício - ParameterizedTest (methodSource) - implementação",
          "RepeatedTest",
          "Exercício - RepeatedTest",
          "Exercício - RepeatedTest - implementação",
          "Exercício - nova funcionalidade - valores",
          "Exercício - nova funcionalidade - valores - implementação",
          "Refactor - demonstração",
          "O que são dependências",
          "Padrão - dependency injection",
          "Doubles",
          "Fakes",
          "Exercício - fakes",
          "Exercício - fakes - implementação",
          "Execução de testes - ciclo de vida",
          "Execução de testes - Order",
          "Refactor - FileSystemCalculadoraDao",
          "Exercício - ciclo de vida",
          "Exercício - ciclo de vida - implementação",
          "Exercício - teste unitário (ler)",
          "Exercício - teste unitário (ler) - implementação",
          "DisabledTest",
          "Testes à condição",
          "Exercício - Testes à condição",
          "Exercício - Testes à condição - implementação",
          "Assumptions",
          "Tags",
          "Tags - implementação",
          "Maven - execução de testes",
          "Gradle - execução de testes",
          "Maven - execução de testes - implementação",
          "Cobertura dos testes",
          "Jacoco - plugin para cobertura",
          "Jacoco - implementação",
          "Pontos de interesse"
        ],
        "AssertJ": [
          "Agenda",
          "AssertJ - o que é",
          "assertThat - tudo começa aqui",
          "assertThat - tipos de dados",
          "Exercício - assertThat",
          "Exercício - assertThat - implementação",
          "Mensagens",
          "Exercício - mensagens",
          "Exercício - mensagens - implementação",
          "Strings",
          "Exercício - Strings",
          "Exercício - Strings - implementação",
          "Objetos",
          "Exercício - Objetos",
          "Exercício - Objetos - implementação",
          "Arrays e iterables",
          "Exercício - Arrays e iterables",
          "Exercício - Arrays e iterables - implementação",
          "Filtros",
          "Exercício - Filtros",
          "Exercício - Filtros - implementação",
          "Extrações",
          "Exercício - Extrações",
          "Exercício - Extrações - implementação",
          "Exceptions",
          "Exercício - Exceptions",
          "Exercício - Exceptions - implementação",
          "Comparação de objetos",
          "Exercício - Comparação de objetos",
          "Exercício - Comparação de objetos - implementação",
          "Satisfies",
          "Exercício - Satisfies",
          "Exercício - Satisfies - implementação",
          "Softly assertions com BDD",
          "Assumptions",
          "Condition",
          "Pontos de interesse"
        ],
        "Duplos e Mockitos": [
          "Agenda",
          "Projeto - loja online",
          "Projeto - loja online - apresentação",
          "Duplos",
          "Fakes",
          "Demonstração - Fakes",
          "Demonstração - Fakes - implementação",
          "Exercício - Fakes",
          "Exercício - Fakes - implementação",
          "Fakes - desafios",
          "Exercício 2 - Fakes",
          "Exercício 2 - Fakes - implementação",
          "Verificação - Fakes",
          "Exercício - Verificação - Fakes",
          "Exercício - Verificação - Fakes - implementação",
          "Mockito",
          "Mock",
          "Demonstração - Mock",
          "Demonstração - Mock - implementação",
          "Exercício - Mock",
          "Exercício - Mock - implementação",
          "Mock - funcionamento interno",
          "Demonstração - Mock - funcionamento interno",
          "Verify - verificar chamadas em dependências",
          "Verify - verificar parâmetros",
          "Stubs",
          "Exercício - Stubs",
          "Exercício - Stubs - implementação",
          "Stubs - doReturn",
          "Stubs - answers",
          "Stubs - Outros",
          "Exercício - Stubs",
          "Exercício - Stubs - implementação",
          "Spies - espia nos objetos reais",
          "Exercício - Spies",
          "Exercício - Spies - implementação",
          "mockStatic - mock de métodos estáticos",
          "Demonstração - mockStatic",
          "mockContruction - mock de construtores",
          "Demonstração - mockConstructor",
          "Mockito - anotações",
          "Mockito - InjectMocks",
          "Demonstração - Mockito - Anotações",
          "Demonstração - Mockito - Anotações - implementação",
          "Mockito e BDD",
          "Frameworks alternativas",
          "Pontos de interesse"
        ],
        "Anti-Patterns": [
          "Agenda",
          "Cuckoo",
          "Test per method",
          "Probe",
          "Happy path",
          "Slow Poke",
          "Giant",
          "The mockery",
          "The inspector",
          "Generous leftovers",
          "Local hero",
          "The hidden dependency",
          "The test with no name",
          "Nitpicker",
          "The secret catcher",
          "The silent catcher",
          "Dodger",
          "Loudmouth",
          "Greedy catcher",
          "Sequencer",
          "The free ride, aka Piggyback",
          "Excessive setup",
          "Chain gang",
          "Line hitter",
          "The forty-foot pole test",
          "The mother Hen",
          "The conjoined twins",
          "Wrongy",
          "Laboring",
          "Impractical",
          "The test it all",
          "Wait and see",
          "The dead tree",
          "The flickering test",
          "The sleeper",
          "The butterfly",
          "Doppelganger"
        ],
        "Testar código legacy": [
          "Agenda",
          "Código legacy",
          "Exemplo - código legacy",
          "Seams",
          "Refactor",
          "Refactor - passo 1",
          "Exercício - testes ao código legacy",
          "Exercício - testes ao código legacy - implementação",
          "Refactor - passo 2",
          "Padrão - Sprout class",
          "Exercício - Sprout class",
          "Exercício - Sprout class - implementação",
          "Refactor dos testes",
          "Refactor dos testes - implementação",
          "Refactor - Extração",
          "Padrão - Sprout method",
          "Exercício - Sprout method",
          "Exercício - Sprout method - implementação",
          "Refactor - dependências",
          "Exercício - refactor de dependências",
          "Exercício - refactor de dependências - implementação",
          "Exercício - testar método legacy",
          "Exercício - testar método legacy - implementação",
          "Padrão - Wrap method",
          "Exercício - Wrap class",
          "Padrão - Wrap class - Método 1",
          "Padrão - Wrap class - Método 2",
          "Exercício - Wrap class",
          "Exercício - Wrap class - implementação",
          "Refactor - consolidação",
          "Exercício - normalizar mensagens",
          "Exercício - normalizar mensagens - implementação",
          "Estado final do método",
          "Pontos de interesse"
        ],
        "PITest - testa os teus testes": [
          "Agenda",
          "O que são mutações",
          "PITest",
          "Configurações",
          "Exercício - primeiro teste",
          "Exercício - primeiro teste - implementação",
          "Relatórios",
          "Exercício - teste",
          "Exercício - teste - implementação 1",
          "Exercício - teste - implementação 2",
          "Mutators",
          "Parameterização",
          "Exercício - mutators",
          "Exercício - mutators - implementação",
          "Pontos de interesse"
        ],
        "Testes baseados em propriedades - jqwik": [
          "Agenda",
          "PBT - Testes baseados em propriedades",
          "jqwik - framework de propriedades",
          "Property - onde tudo começa",
          "Desafio - Property",
          "Exercício - Property",
          "Exercício - Property - implementação",
          "Property - parametrização",
          "Demonstração - Property com parâmetros",
          "fromData - gerar dados",
          "Exercício - fromData",
          "Exercício - fromData - implementação",
          "Example - outra forma de Test",
          "Ciclo de vida",
          "Nomes e grupos - organização de testes",
          "Geração de dados - por tipo",
          "Exercício - Cálculo de valores",
          "Exercício - Cálculo de valores - implementação",
          "Arbitraries - controla a geração de dados",
          "Exercício - Arbitraries",
          "Exercício - Arbitraries - implementação",
          "Domain e UseType - Gera os teus objetos",
          "Exercício - Domain e UseType",
          "Exercício - Domain e UseType - implementação",
          "Assumptions",
          "Datas e horas",
          "Exercício - Datas e horas",
          "Exercício - Datas e horas - implementação",
          "Emails e domínios",
          "Report e Footnotes - melhora o output",
          "Demonstração - Report e Footnotes",
          "Estatísticas",
          "Demonstração - estatísticas",
          "Execução de testes",
          "Demonstração - Execução de testes",
          "Pontos de interesse"
        ],
        "BDD - Behavior Driven Development": [
          "Agenda",
          "O que é BDD",
          "3 amigos",
          "Onde e quem usa",
          "Gherkin",
          "Cucumber",
          "Parâmetros e Steps",
          "Exercício - Parâmetros e Steps",
          "Exercício - Parâmetros e Steps - implementação",
          "Exercício - Feature",
          "Exercício - Feature - Atividade",
          "Lista de valores",
          "Tabela de valores",
          "DataTableType",
          "Exercício - Tabelas",
          "Exercício - Tabelas - implementação",
          "Background",
          "Demonstração - Background",
          "Exercício - Background",
          "Exercício - Background - implementação",
          "Hooks (ciclo de vida)",
          "Tags",
          "Exercício - Tags",
          "Exercício - Tags - implementação",
          "Relatórios",
          "Exercício - Relatórios",
          "Exercício - Relatórios - implementação",
          "Use case - Selenium",
          "Use case - Database",
          "Use case - Rest Api",
          "Pontos de interesse"
        ]
      },
      "requirements": [
        "Experiência básica no desenvolvimento em Java.",
        "Saber que o software tem de ser testado",
        "Conhecimento básico de maven (saber o que é será suficiente)",
        "O curso usa o IntelliJ como IDE, a versão básica é suficiente. O uso de eclipse é possivel."
      ],
      "description": "Descrição do Curso:\nEstá pronto para elevar suas habilidades de desenvolvimento de software? Nosso curso completo de testes de software é a escolha ideal para você! Aprenda a garantir a qualidade e a robustez das suas aplicações com técnicas avançadas e ferramentas essenciais. Este curso foi projetado para programadores que desejam dominar as melhores práticas de testes e assegurar que seus projetos sejam bem-sucedidos.\n\n\nTópicos Abordados:\n\n\nO que é testar código de software: Compreenda a importância dos testes no ciclo de desenvolvimento e como eles contribuem para a entrega de software de alta qualidade.\nUnit Tests: Aprenda a criar testes unitários eficazes para validar pequenas partes do seu código de forma isolada.\nAssertJ: Explore esta poderosa biblioteca para escrever asserções fluentes e legíveis em seus testes.\nAnti Patterns: Identifique mais de 30 práticas inadequadas que podem comprometer a qualidade dos seus testes.\nMutation Tests com PIT: Descubra como os testes de mutação podem ajudar a avaliar a eficácia dos seus testes unitários.\nProperty Based Testing com jqwik: Aprenda a testar propriedades gerais do seu código ao invés de casos específicos, aumentando a cobertura dos testes.\nBehavior Driven Development (BDD): Implemente o BDD para alinhar o desenvolvimento com os requisitos de negócio e melhorar a comunicação entre equipas.\nSpring Tests: Domine os testes no ecossistema Spring, garantindo que suas aplicações Spring funcionem conforme esperado.\nTestcontainers: Utilize containers para criar ambientes de teste consistentes e isolados.\nFitness Functions: Avalie continuamente a saúde do seu sistema através de funções de aptidão.\nArchUnit: Verifique a conformidade da arquitetura do seu código com as regras definidas.\n\n\nBenefícios do Curso:\n\n\nAprendizagem Prática: Exercícios com exemplos reais para aplicar imediatamente no seu trabalho.\nInstrutores Especializados: Aprenda com um profissional experientes e reconhecido na área do software.\n\n\nPor Que Este Curso é Para Você?\nSe você é um programador que procura aprimorar suas habilidades e garantir a qualidade dos seus projetos, este curso é essencial. Com uma abordagem prática e um instrutor especializado, você estará preparado para enfrentar os desafios do desenvolvimento de software moderno.\nInscreva-se. Agora!\nNão perca a oportunidade de se tornar um especialista em testes de software. Inscreva-se hoje e comece a transformar a qualidade dos seus projetos!",
      "target_audience": [
        "O curso destina-se a quem pretende desenvolver os conhecimentos em testes de código.",
        "Quem não sabe sobre testes unitários, poderá aprender, quem já sabe pode desenvolver, e muito.",
        "Todos aqueles que pretende analisar e testar código legacy.",
        "Querem conhecer outras frameworks de testes modernas que poderão ajudar na qualidade de software",
        "Pretendem complementar os testes com outras tecnologias, como mutações, propriedades, análise de arquitetura, entre outras."
      ]
    },
    {
      "title": "KI-Komplett: Die All in One Masterclass",
      "url": "https://www.udemy.com/course/ki-komplett-die-all-in-one-masterclass/",
      "bio": "Künstliche Intelligenz: ChatGPT, Google Veo, Gemini, SunoAI, Midjourney, n8n KI Agenten, Canva, Prompt Engineering uvm.!",
      "objectives": [
        "Du wirst ein umfassendes Verständnis für die Grundlagen und Möglichkeiten von Künstlicher Intelligenz entwickeln.",
        "Ich zeige dir, wie du moderne KI-Tools kreativ und produktiv in verschiedenen Bereichen einsetzt.",
        "Du lernst, wie du mit Text-, Bild-, Video- und Musik-KI beeindruckende Inhalte erstellen kannst.",
        "Du wirst in der Lage sein, verschiedene KI-Plattformen gezielt zu vergleichen und sinnvoll auszuwählen.",
        "Du entdeckst, wie du KI effektiv zur Automatisierung von Aufgaben und Workflows nutzen kannst.",
        "Du wirst verstehen, wie du mit KI-gestützter Content-Erstellung Zeit und Ressourcen sparst.",
        "Ich zeige dir, wie du mit KI-Tools Marketingstrategien umsetzt und deine Sichtbarkeit erhöhst.",
        "Du lernst, wie du KI-Technologien für Programmierung und technische Abläufe einsetzt – auch ohne Programmierkenntnisse.",
        "Du wirst ein solides Verständnis für ethische, rechtliche und gesellschaftliche Fragen im Umgang mit KI entwickeln.",
        "Du erkennst, wie du KI im Alltag und in Unternehmen sinnvoll und sicher einsetzt.",
        "Ich gebe dir Einblicke, wie du mit KI Einnahmequellen erschließen kannst.",
        "Du bekommst eine klare Vorstellung davon, wie sich KI in Zukunft auf Beruf, Gesellschaft und Technologie auswirkt."
      ],
      "course_content": {},
      "requirements": [
        "Alles was du brauchst, lernst du in diesem Kurs."
      ],
      "description": "In diesem Kurs werde ich dich Schritt für Schritt in die vielseitige Welt der Künstlichen Intelligenz einführen. Egal, ob du kompletter Einsteiger oder schon etwas KI-Erfahrung hast – wir werden gemeinsam tief in die spannendsten Tools, Anwendungsbereiche und Zukunftsperspektiven der KI eintauchen. Du wirst nicht nur verstehen, wie KI funktioniert, sondern auch lernen, sie effektiv in Alltag, Beruf und Business einzusetzen.\nBereit, in die faszinierende Welt der Künstlichen Intelligenz einzutauchen und deren riesige Möglichkeiten zu entdecken?\nMöchtest du lernen, wie du mit den besten KI-Tools Texte, Bilder, Videos, Stimmen und Musik erstellst?\nInteressierst du dich dafür, wie du mit KI Inhalte produzieren, Marketingstrategien umsetzen und sogar programmieren kannst?\nMöchtest du erfahren, wie du mit KI im Alltag und im Unternehmen effizienter arbeitest – und sogar Geld verdienst?\nDann ist dieser Kurs perfekt für dich geeignet!\nIn diesem umfassenden KI-Kurs wirst du ALLE relevanten Tools und Techniken kennenlernen, um dir fundiertes Wissen und praktische Fähigkeiten im Umgang mit künstlicher Intelligenz aufzubauen. Wir behandeln nicht nur Tools, sondern auch rechtliche Grundlagen, ethische Aspekte und werfen einen Blick in die Zukunft. Du wirst sehen: KI kann deine Welt verändern.\nHier bekommst du einen kleinen Vorgeschmack auf das, was dich erwartet:\n\n\nEinführung\nIch heiße dich herzlich willkommen und zeige dir, was dich in diesem Kurs erwartet. Besonders wichtig: Du musst den Kurs nicht chronologisch durchgehen – du kannst jederzeit zu den für dich relevanten Abschnitten springen.\n\n\nGrundlagen KI\nDieser Abschnitt dient als dein persönliches Lexikon. Du lernst die wichtigsten Begriffe rund um Künstliche Intelligenz kennen – verständlich erklärt und direkt anwendbar.\n\n\nChatGPT: DALLE & Sora\nWir schauen uns die bekannten Tools von OpenAI an. Du lernst, wie du mit ChatGPT Texte generierst, mit DALLE Bilder erstellst und mit Sora sogar Videos produzieren kannst – alles mit KI.\n\n\nGoogle Gemini: Image & Veo\nAuch Google bietet beeindruckende KI-Lösungen. Du wirst lernen, wie du mit Gemini Texte erstellst, Bilder designst und mit Veo Video-Content entwickelst.\n\n\nKling AI\nIn diesem Abschnitt lernst du die innovative Video-KI „Kling AI“ kennen und wie du sie kreativ und effizient einsetzt.\n\n\nMidjourney\nMidjourney ist ein extrem leistungsfähiges Tool zur Bilderstellung. Ich zeige dir, wie du beeindruckende visuelle Werke erzeugst – ganz einfach mit Textbefehlen.\n\n\nElevenlabs\nHier dreht sich alles um KI-Stimmen. Mit Elevenlabs kannst du realistische Sprachausgaben erstellen und sogar deine eigene Stimme klonen.\n\n\nSunoAI & Udio\nIn diesem Teil dreht sich alles um Musik. Du wirst lernen, wie du mit diesen Tools auf Knopfdruck eigene Musikstücke generierst.\n\n\nCanva\nDas bekannte Design-Tool wird durch KI noch mächtiger. Ich zeige dir, wie du mit Canva Bild-KI in deine Content-Projekte integrierst.\n\n\nHeyGen, Synthesia & Co.\nEntdecke die Welt der Avatare! In diesem Abschnitt erfährst du, wie du mit diesen Tools animierte, sprechende Avatare für Videos erstellst.\n\n\nChatBots & AI Agents (Flowise & n8n)\nLerne, wie du mit Tools wie Flowise und n8n eigene Chatbots und intelligente KI-Agenten erstellst – ganz ohne Programmierkenntnisse.\n\n\nWeitere interessante KI-Tools\nIch stelle dir zusätzliche spannende KI-Tools vor, die dein digitales Leben einfacher, kreativer und produktiver machen können.\n\n\nContent Creation mit KI\nHier lernst du, wie du mit verschiedenen Tools professionellen Content für Social Media, Blogs oder Webseiten erstellst – komplett KI-gestützt.\n\n\nMarketing mit KI\nNutze die Macht der KI für dein Marketing! Ich zeige dir Strategien, Tools und Techniken, um KI effizient in deiner Marketingpraxis einzusetzen.\n\n\nProgrammieren\nAuch im Bereich Programmierung spielt KI eine immer größere Rolle. Du lernst, wie du mit KI-Code-Generatoren arbeitest und Programmierprozesse vereinfachst.\n\n\nPrompt Engineering\nDie Qualität deiner Ergebnisse hängt stark von den richtigen Prompts ab. Ich erkläre dir, wie du perfekte Prompts formulierst – verständlich und praxisnah.\n\n\nSo verwende ich KI im Alltag und Unternehmen\nIch gebe dir konkrete Einblicke, wie ich selbst KI in meinem Business und Alltag nutze – zur Automatisierung, Effizienzsteigerung und Innovation.\n\n\nMit KI Geld verdienen\nDieser Abschnitt zeigt dir lukrative Möglichkeiten, wie du mit KI nicht nur Zeit, sondern auch echtes Geld verdienen kannst – sowohl nebenbei als auch beruflich.\n\n\nRechtliches & DSGVO mit KI\nWir behandeln die wichtigsten rechtlichen Grundlagen im Umgang mit KI – inklusive Datenschutz, Urheberrecht und DSGVO.\n\n\nEthik & Risiken\nEin kritischer Blick darf nicht fehlen: Was sind ethische Herausforderungen und Risiken beim Einsatz von KI? Wir sprechen offen über die Schattenseiten.\n\n\nZukunftsperspektiven\nZum Abschluss werfen wir einen Blick in die Zukunft: Welche Jobs entstehen durch KI? Welche gesellschaftlichen Veränderungen sind zu erwarten? Und welche Trends solltest du im Auge behalten?\n\n\nMit diesem detaillierten Kurs wirst du nicht nur ein fundiertes Verständnis für künstliche Intelligenz entwickeln, sondern auch in der Lage sein, die besten Tools direkt anzuwenden. Du wirst sehen, wie KI dein Leben verändern und deine beruflichen Möglichkeiten revolutionieren kann.\nBereit, deine Reise in die Welt der Künstlichen Intelligenz zu starten? Dann zögere nicht und melde dich jetzt für diesen spannenden Kurs an – und erfahre, wie du KI für dich nutzen kannst!\nIch freue mich auf dich!\n\n\nDanke für dein Vertrauen & Beste Grüße\n\nSascha",
      "target_audience": [
        "Für alle, die sich ein umfassendes Wissen über künstliche Intelligenz aneignen wollen."
      ]
    },
    {
      "title": "Master en API testing desde cero",
      "url": "https://www.udemy.com/course/master-en-api-testing-desde-cero-2023/",
      "bio": "Como construir un API testing framework utilizando un patrón de diseño",
      "objectives": [
        "Conocimento solido acerca de las APIs",
        "Como hacer pruebas de API con Postman",
        "Como automatizar pruebas de API con Cypress",
        "Como automatizar pruebas de API con un patron de diseño",
        "Bulder pattern",
        "CI/CD con Github actions"
      ],
      "course_content": {},
      "requirements": [
        "Conocimiento básico de Cypress",
        "Conocimiento básico acerca de Node JS",
        "Conocimiento básico acerca de cualquier editor de código"
      ],
      "description": "Este curso se enfoca en las pruebas de API, ofreciendo una comprensión detallada con ejemplos simples. Explora qué es una API, sus elementos y cómo inspeccionarlas en el navegador. Además, aborda la distinción entre API interna y externa, así como la interpretación de la documentación de una API externa.\nEl curso consta de tres proyectos. El primero implica la redacción de pruebas en Postman para la aplicación PetStore. El segundo proyecto se centra en la automatización de casos de prueba de API mediante Cypress. También, hay un proyecto final que abarca la automatización de pruebas de PetStore utilizando el patrón Builder.\nUn capítulo completo se dedica a explicar en qué consiste el patrón de diseño Builder y cuál es su utilidad en el contexto de las pruebas de API. Este enfoque permite a los participantes comprender y aplicar de manera efectiva este patrón en sus proyectos.\nAdicionalmente, el curso incluye una sección de diccionario que explora en detalle conceptos de JavaScript relevantes a lo largo del curso. Esto proporciona una base sólida para aquellos que desean profundizar en el lenguaje.\nEn resumen, el curso abarca aspectos teóricos y prácticos de las pruebas de API, proporcionando a los participantes una comprensión integral y herramientas prácticas para aplicar en sus proyectos.\n\n\n/Api testing / Builder patter / Pruebas de API con un patrón de diseño",
      "target_audience": [
        "QAs",
        "Testers",
        "Automatizadores de pruebas"
      ]
    },
    {
      "title": "API Testing اختبار البرمجيات",
      "url": "https://www.udemy.com/course/api-testing/",
      "bio": "اختبار البرمجيات بواسطه بوست مان",
      "objectives": [
        "كل ما يمكنه من التعامل مع Api",
        "كل ما يمكنه من التعامل مع Api",
        "كل ما يمكنه من التعامل مع Api",
        "كل ما يمكنه من التعامل مع Api"
      ],
      "course_content": {},
      "requirements": [
        "معرفه اساسيات اختبار البرمجيات",
        "معرفه اساسيات اختبار البرمجيات"
      ],
      "description": "API Application programming interface\nهو احد صور اختبار البرمجيات التي كثر الطلب عليها في الفتره الاخيره واصبحت في تزايد من قبل الشركات العامله بهذا المجال وهو عباره عن وسيط بين اي بيئه برمجيه وبين المطوريين وهذا الوسيط يعمل بواسطه مختبر البرمجيات ويتتح الاستفاده من خدمات البيئه البرمجيه دون بناء اي شئ من الصفر وفي هذا الكورس سنوضح كل المفاهيم ببساطه بعون الله ثم ننتقل الي العملي بواسطه الاداه postman\nAPI Application programming interface\nهو احد صور اختبار البرمجيات التي كثر الطلب عليها في الفتره الاخيره واصبحت في تزايد من قبل الشركات العامله بهذا المجال وهو عباره عن وسيط بين اي بيئه برمجيه وبين المطوريين وهذا الوسيط يعمل بواسطه مختبر البرمجيات ويتتح الاستفاده من خدمات البيئه البرمجيه دون بناء اي شئ من الصفر وفي هذا الكورس سنوضح كل المفاهيم ببساطه بعون الله ثم ننتقل الي العملي بواسطه الاداه postman\nAPI Application programming interface\nهو احد صور اختبار البرمجيات التي كثر الطلب عليها في الفتره الاخيره واصبحت في تزايد من قبل الشركات العامله بهذا المجال وهو عباره عن وسيط بين اي بيئه برمجيه وبين المطوريين وهذا الوسيط يعمل بواسطه مختبر البرمجيات ويتتح الاستفاده من خدمات البيئه البرمجيه دون بناء اي شئ من الصفر وفي هذا الكورس سنوضح كل المفاهيم ببساطه بعون الله ثم ننتقل الي العملي بواسطه الاداه postman",
      "target_audience": [
        "اي شخص يرغب بالتعلم",
        "اي شخص يرغب بالتعلم"
      ]
    },
    {
      "title": "Maîtrisez Cypress : Tests Automatisés pour Applications Web",
      "url": "https://www.udemy.com/course/maitrisez-cypress-tests-automatises-pour-applications-web/",
      "bio": "Découvrez les tests automatisés, la configuration de Cypress, l’analyse des scripts et l’optimisation des applications",
      "objectives": [
        "Comprendre les bases des tests de bout en bout et le rôle de Cypress dans les tests des applications web modernes.",
        "Apprendre à configurer et à paramétrer Cypress pour des flux de travail de test efficaces.",
        "Analyser et déboguer les scripts de test pour garantir un comportement stable et fiable des applications.",
        "Maîtriser les concepts théoriques des tests automatisés pour améliorer la qualité des projets de développement web."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Rappel : Les Fondamentaux de javascript": [
          "Introduction à Javascript",
          "Alertes Javascript - Ajout de comportement aux sites Web partie 1",
          "Alertes Javascript - Ajout de comportement aux sites Web partie 2",
          "Types de données",
          "Les Variables Javascript partie 2",
          "Début de l'exercice des variables Javascript",
          "Solution d'exercice des variables Javascript",
          "Conventions de nommage pour les variables Javascript",
          "Concaténation de chaînes",
          "Longueur des chaînes et récupération du nombre de caractères",
          "Trancher et extraire des parties d'une chaîne",
          "Défi du changement de casse dans un texte",
          "Arithmétique de base et opérateur Modulo en Javascript",
          "Expressions d'incrémentation et de décrémentation",
          "Fonctions Partie 1 : Création et appel de fonctions",
          "Fonctions Partie 2 : Défi - Karel le robot"
        ],
        "Prise en main de Cypress": [
          "Test de bout en bout",
          "Qu'est-ce que Cypress ?",
          "En quoi Cypress est-il différent ?",
          "Compromis et résumé",
          "Installation de cypress",
          "Les Tests Cypress",
          "Notre Premier Test"
        ]
      },
      "requirements": [
        "Aucune expérience préalable en tests automatisés n'est requise. Vous apprendrez tout ce qu'il faut savoir.",
        "Une connaissance de base du développement web (HTML, CSS, JavaScript) est utile, mais non obligatoire."
      ],
      "description": "Ce cours est conçu pour vous offrir une introduction complète aux tests automatisés avec Cypress, un outil puissant et largement utilisé pour les tests de bout en bout des applications web. Que vous soyez développeur débutant, professionnel expérimenté ou spécialiste des tests logiciels, ce cours propose une approche théorique axée sur les concepts fondamentaux et les meilleures pratiques pour garantir la qualité de vos projets web.\nVous commencerez par explorer les bases des tests automatisés et découvrirez le rôle unique de Cypress dans ce domaine. Le cours vous guidera à travers la configuration et l’installation de Cypress, vous permettant de comprendre comment optimiser un environnement de test. Vous apprendrez à écrire, organiser et analyser des scripts de test efficaces tout en explorant les fonctionnalités avancées pour identifier et résoudre les problèmes courants.\nGrâce à ce cours, vous développerez une compréhension approfondie des principes des tests automatisés, tout en conceptualisant des stratégies adaptées à des projets complexes sans nécessiter de mise en œuvre immédiate. Ce savoir est essentiel pour améliorer la fiabilité et la qualité des applications web modernes.\nCe programme est une ressource incontournable pour quiconque souhaite approfondir ses connaissances en tests logiciels ou se perfectionner dans le domaine de l’assurance qualité web. Enrichissez vos compétences et préparez-vous à exceller dans ce domaine clé du développement",
      "target_audience": [
        "Développeurs web débutants souhaitant découvrir les bases des tests automatisés avec Cypress.",
        "Professionnels du test logiciel cherchant à comprendre comment utiliser Cypress pour des tests de bout en bout.",
        "Étudiants ou autodidactes en développement web intéressés par l'amélioration de la qualité des applications web.",
        "Chefs de projet techniques ou responsables qualité voulant mieux comprendre les principes des tests automatisés pour leurs équipes."
      ]
    },
    {
      "title": "JMeter od podstaw: Kompletny kurs testowania wydajności",
      "url": "https://www.udemy.com/course/jmeter-od-podstaw-kompletny-kurs-testowania-wydajnosci/",
      "bio": "Od podstaw do zaawansowanych technik testowania wydajności",
      "objectives": [
        "Zrozumiesz, czym są testy wydajnościowe, ich cele oraz jakie korzyści przynoszą dla aplikacji i systemów",
        "Poznasz różnice między testami obciążeniowymi, stresowymi i skalowalności",
        "Zapoznasz się z interfejsem użytkownika JMeter i jego kluczowymi elementami",
        "Dowiesz się, jak skonstruować kompletny plan testowy, uwzględniając różne elementy, takie jak Thread Group, Samplery, i Config Elements",
        "Zrozumiesz rolę elementów, takich jak Logic Controllers, Assertions, Listeners, oraz jak je stosować w praktyce",
        "Nauczysz się używać Config Elements do centralnego zarządzania parametrami testowymi",
        "Dowiesz się, jak interpretować dane z listenerów, generować raporty oraz identyfikować wąskie gardła system",
        "Zdobędziesz wiedzę, jak projektować efektywne scenariusze testowe, unikać błędów i maksymalnie wykorzystać możliwości JMeter"
      ],
      "course_content": {
        "Wstęp": [
          "O mnie",
          "O czym jest ten kurs?"
        ],
        "Wprowadzenie do testów wydajności": [
          "Definicja i cele testów wydajności",
          "Różnice między testami obciążeniowymi, stresowymi i skalowalności",
          "Dlaczego warto przeprowadzać testy wydajnościowe?",
          "Historia i możliwości JMeter",
          "Typy testów obsługiwanych przez JMeter",
          "Przykłady zastosowań testów wydajności",
          "Kluczowe wskaźniki wydajności",
          "Alternatywy dla JMeter"
        ],
        "Podstawy pracy z JMeter": [
          "Proces instalacji JMeter",
          "Co to jest test plan?",
          "Tworzenie pierwszego testu wydajności"
        ],
        "Thread Group": [
          "Thread Group w Jmeter: Co to jest i jak działa?",
          "Thread Group"
        ],
        "Sampler": [
          "Sampler w Jmeter Co to jest i jak działa"
        ],
        "Logic controler": [
          "Logic Controller w JMeter: Co to jest i jak działa?",
          "If Controller",
          "Loop Controller",
          "Random Controller",
          "Simple Controller",
          "Once Only Controller",
          "Random Order Controller",
          "Runtime Controller",
          "Interleave Controller",
          "Module Controller"
        ],
        "Assertions": [
          "Asercje: Co to są i jak działają?",
          "Duration Assertion",
          "Size Assertion",
          "Response Assertion - częśc 1",
          "Response Assertion - częś 2",
          "JSON Assertion"
        ],
        "Timer": [
          "Timer: Co to jest i jak działa?",
          "Constant Timer",
          "Uniform Random Timer",
          "Gaussian Random Timer"
        ],
        "Test Fragment": [
          "Test Fragment: Co to jest i jak działa?",
          "Test Fragment"
        ],
        "Config Element": [
          "Config Element w JMeter: Co to jest i jak działa?",
          "Random Variable",
          "HTTP Request Defaults",
          "CSV Data Set Config",
          "HTTP Header Manager"
        ]
      },
      "requirements": [
        "Nie musisz mieć doświadczenia"
      ],
      "description": "Od podstaw do zaawansowanych technik testowania wydajności\nOpis kursu:\nTesty wydajnościowe są niezbędne, aby zapewnić, że aplikacje i systemy działają sprawnie i niezawodnie, niezależnie od obciążenia. W dobie rosnących wymagań użytkowników oraz intensywnie rozwijającej się technologii, wydajność aplikacji decyduje o jej sukcesie na rynku. Ten kurs wprowadzi Cię w testowanie wydajności przy użyciu Apache JMeter – jednego z najpopularniejszych i wszechstronnych narzędzi open-source.\nKurs został zaprojektowany tak, aby zrozumiały go zarówno początkujący testerzy i deweloperzy, jak i doświadczeni specjaliści QA. Dzięki odpowiedniemu balansowi teorii i praktyki nauczysz się tworzyć kompleksowe testy obciążeniowe, stresowe i skalowalności, które pomogą zidentyfikować potencjalne problemy jeszcze przed wdrożeniem aplikacji na produkcję.\nPodczas szkolenia opanujesz kluczowe funkcjonalności JMeter, w tym tworzenie planów testowych, konfigurowanie żądań, użycie elementów logicznych i asercji, a także analizę wyników testów.\nCel kursu:\nPo ukończeniu szkolenia zdobędziesz umiejętności, które pozwolą Ci kompleksowo przeprowadzać testy wydajnościowe, od ich zaplanowania, przez konfigurację, aż po szczegółową analizę wyników. Nauczysz się samodzielnie projektować realistyczne scenariusze testowe, które odwzorowują zachowanie aplikacji w rzeczywistych warunkach, takich jak codzienne użytkowanie czy nagły wzrost liczby użytkowników.\nPo szkoleniu będziesz pewnie poruszać się w środowisku testowym, stosować dobre praktyki i dostarczać wartościowe wyniki, które przyczynią się do poprawy jakości i wydajności oprogramowania w Twojej organizacji.",
      "target_audience": [
        "Dla wszystkich"
      ]
    },
    {
      "title": "Devops et Test logiciel avec Azure DevOps -2025",
      "url": "https://www.udemy.com/course/devops-et-test-logiciel-avec-azure-devops-test-plan-de-a-a-z/",
      "bio": "Optimisez vos processus de test avec Azure DevOps pour une gestion efficace et une qualité de code optimale",
      "objectives": [
        "Devops et le test logiciel",
        "Azure Devops : Création d'un test plan",
        "Azure Devops : Création d'une suite de test",
        "Azure Devops : Création d'un cas de test",
        "Azure Devops : Création d'un Dashboard",
        "Azure Devops : Création des paramétres",
        "Azure Devops : Création des configurations",
        "Azure Devops : Exécution des cas de test",
        "Azure Devops : Conception des cas de test",
        "Tests manuels du logiciel de débutant à avancé",
        "Concepts de base des tests logiciels",
        "Test logiciel : des exercices corrigés"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Azure Devops : Introduction",
          "C'est quoi le DEVOPS ?",
          "Azure Devops Test plan : Introduction",
          "C'est quoi Azure Test Plans ? :",
          "Azure Devops : Création d'un compte",
          "Merci",
          "Explorer Azure Devops :",
          "Ajout de test plan dans Azure Devops",
          "Ajout de test plan dans Azure Devops",
          "Azure Devops : Création d'un projet",
          "Azure Devops & test logicieel : C'est quoi une campagne de test ?",
          "Azure Devops & test logicieel : Exemple d'une campagne de test",
          "Azure Devops & test logicieel : C'est quoi une suite de test ?",
          "Azure Devops & test logicieel : C'est quoi un cas de test ?",
          "Azure Devops & test logicieel : Exemple d'un cas de test",
          "Azure Devops : Création d'un test plan",
          "Azure Devops : Création des suites de test",
          "Azure Devops : Création des cas de test",
          "Azure Devops : Création des cas de test avec des parametres",
          "Azure Devops : Configuration",
          "Azure Devops : Création des cas de test depuis le Board",
          "Azure Devops : Exécution des tests",
          "Azure Devops : Gestion des utilisateurs et droits",
          "Azure Devops : La documentation",
          "Azure Devops : exercice 1",
          "Azure Devops : Correction de l'exercice 1",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Félicitations",
          "Continuer l'apprentissage",
          "QCM -azure devops"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Azure DevOps Services | Azure DevOps Server 2020 | Azure DevOps Server 2019 | TFS 2018\nAzure Test Plans fournit des outils riches et puissants que tous les membres de l’équipe peuvent utiliser pour améliorer la qualité et la collaboration tout au long du processus de développement. La solution de gestion des tests basée sur un navigateur facile à utiliser fournit toutes les fonctionnalités requises pour les tests manuels planifiés, les tests d’acceptation utilisateur, les tests exploratoires et la collecte de commentaires des parties prenantes.\ncomment Azure Test Plans fonctionne-t-il ?\ngrâce à une combinaison d’outils basés sur le navigateur (plans de test, rapport de progression, paramètres, configurations, exécutions, outils de testet DevOps fonctionnalités d’intégration), Azure Test Plans prend en charge les objectifs de test suivants :\nTests manuels et exploratoires: tests manuels et exploratoires qui incluent les activités de test suivantes :\nTests manuels planifiés. Tests manuels en organisant des tests dans des plans de test et des suites de tests par des testeurs et des responsables de test désignés.\nTest d’acceptationde l’utilisateur. Les tests effectués par des testeurs d’acceptation de l’utilisateur désignés pour vérifier que la valeur fournie est conforme aux exigences du client, tout en réutilisant les artefacts de test créés par les équipes d’ingénierie.\nTests exploratoires. Les tests effectués par les équipes de développement, y compris les développeurs, les testeurs, les équipes de l’expérience utilisateur, les propriétaires de produits et bien plus encore, en explorant les systèmes logiciels sans utiliser les plans de test ou les suites de tests.\nCommentaires des parties prenantes. Tests effectués par les parties prenantes en dehors de l’équipe de développement, telles que les utilisateurs des divisions marketing et Sales.\ntests automatisés: Azure Test Plans est entièrement intégré à Azure Pipelines pour prendre en charge le test dans l’intégration continue/le déploiement continu (CI/CD). Les plans de test et les cas de test peuvent être associés à des pipelines de build ou de mise en version. Des tâches de pipeline peuvent être ajoutées aux définitions de pipeline pour capturer et publier les résultats des tests. Les résultats des tests peuvent être revus via des rapports de progression intégrés et des rapports de test de pipeline.\nTraçabilité: les cas de test et les suites de tests liés aux récits utilisateur, aux fonctionnalités ou aux spécifications prennent en charge la traçabilité de bout en bout. Les tests et les défauts sont automatiquement liés aux spécifications et aux builds testées, ce qui permet également de suivre la qualité des spécifications. Les utilisateurs peuvent ajouter et exécuter des tests à partir du tableau kanban, ou pour des équipes de plus grande taille, utiliser le Hub plans de test pour définir des plans de test et des suites de tests. Les résultats du pipeline et le widget des spécifications permettent de suivre le test des spécifications.\nCréation de rapports et analyse: le suivi des résultats des tests et la surveillance de la progression sont pris en charge via des diagrammes de suivi configurables, des widgets spécifiques aux tests que vous pouvez ajouter aux tableaux de bord et des rapports intégrés, tels que le rapport de progression, les rapports des résultats des tests de pipeline et le service d’analyse.\nNotes\ntest de charge et de performances: bien que Azure DevOps service de test de charge basé sur le cloud soit déconseillé, la version préliminaire de test de charge Azure est disponible. La version préliminaire du test de charge Azure est un service de test de charge entièrement géré qui vous permet d’utiliser des scripts Apache JMeter existants pour générer une charge à grande échelle. Pour plus d’informations, consultez qu’est-ce que le test de charge Azure Preview ?. pour plus d’informations sur la désapprobation des tests de charge Azure DevOps, consultez modifications apportées à la fonctionnalité de test de charge dans Visual Studio et le test de charge dans le cloud dans Azure DevOps.\nPrincipaux avantages\nAzure Test Plans fournit aux équipes de développement de logiciels les avantages suivants.\nTest sur n’importe quelle plateforme: avec le Test Plans portail web, vous pouvez utiliser n’importe quel navigateur pris en charge pour accéder à toutes les fonctionnalités de test manuel. Elle vous permet de créer et d' exécuter des tests manuels à l’aide d’une interface conviviale, basée sur un navigateur, à laquelle les utilisateurs peuvent accéder à partir de tous les principaux navigateurs de n’importe quelle plateforme.\nCollecte de données de diagnostic riche: à l’aide du client test Runner et Test Runner basé sur le Web, vous pouvez collecter des données de diagnostic riches au cours de vos tests manuels. Cela comprend les captures d’écran, le journal des actions d’image, les enregistrements d’écran, la couverture du code, les traces IntelliTrace et les données d’impact de test pour vos applications testées. Ces données sont automatiquement incluses dans tous les bogues que vous créez pendant le test, ce qui permet aux développeurs de reproduire facilement les problèmes.\ntraçabilité de bout en bout: Azure DevOps fournit une traçabilité de bout en bout de vos spécifications, builds, tests et bogues. Les utilisateurs peuvent suivre leur qualité d’exigence à partir de cartes du tableau kanban. Les bogues créés pendant le test sont automatiquement liés aux spécifications et builds en cours de test, ce qui vous permet de suivre la qualité des spécifications ou des builds.\nAnalytique intégrée: le service d’analyse fournit des données qui alimentent des rapports intégrés, des widgets de tableau de bord configurables et des rapports personnalisables à l’aide de Power bi. Les données suivent la progression et les tendances des plans de test pour les tests manuels et automatisés. Test Analytics fournit une visibilité en quasi temps réel des données de test pour les builds et les mises en production. Teams pouvez agir sur ces données pour améliorer la documentation de test afin d’assurer la maintenance des pipelines sains.\nPlateforme extensible. Vous pouvez combiner les outils et les technologies que vous connaissez déjà avec les outils de développement qui vous conviennent le mieux pour l’intégration et l' extension de Azure DevOps. Utilisez les API REST et le modèle de contribution disponibles pour la plateforme de test afin de créer des extensions qui offrent l’expérience dont vous avez besoin pour votre cycle de vie de gestion des tests.",
      "target_audience": [
        "Les personnes qui souhaitent commencer une nouvelle carrière",
        "Les personnes qui veulent apprendre les tests de logiciels Testeurs de logiciels qui souhaitent acquérir une meilleure connaissance dans leur domaine",
        "Les personnes à la recherche d'un emploi à temps partiel ou indépendant"
      ]
    },
    {
      "title": "Trở thành Quality Control (QC) / Tester (kiểm thử phần mềm)",
      "url": "https://www.udemy.com/course/tro-thanh-quality-control-qc-tester-kiem-thu-phan-mem/",
      "bio": "Khóa học về trở thành Quality Control (QC) / Tester (kiểm thử phần mềm)",
      "objectives": [
        "Phân biệt các vị trí Quality Assurance và Quality Control trong dự án phần mềm.",
        "Biết cách tạo Unit Test Case, thực thi Unit Test Case.",
        "Biết cách tạo Integration Test Case, thực thi Integration Test Case.",
        "Biết cách log bug chuẩn lên hệ thống quản lý, bao gồm Google Sheet, Excel, và hệ thống Redmine",
        "Biết cách đo năng suất tạo Test Case, thực thi Test Case.",
        "Biết được cách báo cáo mỗi ngày và đánh giá chất lượng của sản phẩm.",
        "Biết phân tích bug và rút ra bài học, cũng như cách thức thay đổi chất lượng của dự án",
        "Bộ template bao gồm: Unit Test, Integration Test, Bug Management, Test Plan, Project Plan, Burndown chart, v..v....",
        "Tài khoản Redmine miễn phí (chuẩn) để thực hành, đã được tác giả cấu hình cho phù hợp",
        "Bộ công cụ trị giá hơn hơn 500.000 VNĐ do tác giả viết",
        "Hỗ trợ khóa học trọn đời qua group học với tác giả",
        "Biết được khái niệm Point Of View (POV), ứng dụng vào trong việc viết Test Case",
        "Biết được số NORM của một công ty phần mềm outsourcing là gì?",
        "Vòng đời của dự án, cách thức hoạt động của dự án",
        "Các yếu tố của dự án: TIME, COST, QUALITY, SCOPE"
      ],
      "course_content": {
        "Giới thiệu": [
          "Giới thiệu về khóa học",
          "Thông tin giảng viên",
          "Nội dung khóa học",
          "Đối tượng, tài liệu, công cụ, kết quả đầu ra, yêu cầu của khóa học"
        ],
        "Hướng dẫn học tập và các khái niệm cơ bản": [
          "Link tài liệu tham khảo và công cụ",
          "Hướng dẫn học tập với giảng viên của chương trình",
          "Hướng dẫn tham gia vào nhóm hỗ trợ của giang viên (2024.07.11)",
          "Phân biệt QA và QC",
          "Các yếu tố của dự án TIME, COST, SCOPE, QUALITY",
          "Vòng đời của dự án",
          "Các hoạt động của dự án",
          "Quy trình phát triển phần mềm WaterFall",
          "Quy trình phát triển phần mềm V-Model",
          "Quy trình phát triển phầm mềm SCRUM",
          "Các loại testing trong phần mềm",
          "Giới thiệu về chức năng cơ bản trong khóa học"
        ],
        "Kỹ năng Unit Testing": [
          "Unit Testing là gì",
          "Hướng dẫn tạo mẫu Unit Testing (UT) bằng excel",
          "Hướng dẫn tạo mẫu Unit Testing (UT) bằng Spreadsheet (Google sheet)",
          "Giới thiệu về Point Of View",
          "Kết hợp với Point Of View vào trong kỹ thuật viết Test Case và thực hiện Testing",
          "Hướng dẫn định dạng tài liệu Unit Test Case (UTC) bằng excel",
          "Hướng dẫn sử dụng công cụ định dạng tài liệu bằng excel của tác giả",
          "Giải bài tập Unit Test Case cho luồng màn hình cơ bản",
          "Thực thi Unit Test Case và tạo Unit Test Report"
        ],
        "Kỹ năng Integration Testing": [
          "Integration Testing là gì?",
          "Hướng dẫn tạo mẫu Integration Testing (ITC) bằng Excel (Line)",
          "Hướng dẫn tạo mẫu Integration Testing (ITC) bằng Excel (Matrix)",
          "Hướng dẫn tạo mẫu Integration Testing (ITC) với Spreadsheet/Google sheet",
          "Giới thiệu về Screen Flow",
          "Hướng dẫn sử dụng ScreenFlow vào trong việc viết ITC và thực hiện testing",
          "Hướng dẫn định dạng tài liệu Integration Test Case (ITC)",
          "Giải bài tập Integration Test Case (ITC) cho luồng màn hình cơ bản",
          "Thực thi Integration Test Case và tạo Integration Test Report"
        ],
        "Hướng dẫn log/monitoring bug trên hệ thống quản lý dự án": [
          "Tại sao phải log bug lên hệ thống quản lý của dự án?",
          "Thông tin của bug cần thiết bao gồm những hạng mục nào?",
          "Giới thiệu về Redmine/Excel/Spreadsheet để quản lý bug",
          "Hướng dẫn log bug lên hệ thống Redmine",
          "Hướng dẫn log bug lên Excel/Spreadsheet"
        ],
        "Kỹ thuật tổng kết số liệu và báo cáo trong quá trình thực hiện testing": [
          "Giới thiệu về [Test Plan] trong dự án phần mềm",
          "Hướng dẫn cách lấy số liệu Test Case mỗi ngày bằng Excel",
          "Hướng dẫn cách tính năng suất của việc tạo Test Case mỗi ngày Excel",
          "Hướng dẫn cách lấy số liệu Test Case mỗi ngày bằng Spreadsheet",
          "Hướng dẫn cách lấy số liệu bug từ hệ thống Excel/Spreadsheet",
          "Hướng dẫn cách lấy số liệu bug từ hệ thống Redmine",
          "Tạo báo cáo tổng hợp mỗi ngày cho phần Testing",
          "Hướng dẫn tạo chart (Burndown chart, column chart, etc.) cho báo cáo"
        ],
        "Hướng dẫn phân tích bug, phân tích chất lượng và hành động cải thiện chất lượng": [
          "Hướng dẫn cách nhìn chất lượng của dự án thông qua số liệu Test Case và Bug",
          "Hướng dẫn phân tích danh sách bug dựa vào loại bug và nguyên nhân gây ra bug",
          "Hướng dẫn đưa các hành động để cải thiện chất lượng của dự án",
          "Giới thiệu về công cụ tự động đánh giá chất lượng và phân tích của dự án thông q",
          "Bonus (phần thưởng) sau khi hoàn thành khóa học"
        ]
      },
      "requirements": [
        "Niềm đa mê và mong muốn tìm hiểu về Testing trong phần mềm.",
        "Mỗi ngày dành khoảng 2 tiếng để học và thực hành làm bài tập trong suốt khóa học.",
        "Trong quá trình học, chủ động trao đổi trực tiếp với giảng viên để hiểu rõ hơn bài học.",
        "Làm đầy đủ các bài tập của khóa học yêu cầu.",
        "Tải tài liệu và các phần mềm mà khóa học cung cấp.",
        "Có tài khoản gmail để lấy tài liệu của khóa học",
        "Có tài khoản zalo để tham gia và nhóm hỗ trợ của khóa học"
      ],
      "description": "Tổng quan khóa học:\n1 - Cấu trúc bài giảng đơn giản\n2 - Chi tiết và định nghĩa sát với thực tế, sẽ giúp cho học viên có thể hiểu được Quality Control là gì?\n3 - Có thể thực hiện các công việc cơ bản của một Quality Control (QC)  - Tester trong dự án.\n4 - Nếu bạn chưa biết bắt đầu từ đâu để hiểu về Quality Control (QC) thì đây là khóa học dành cho bạn.\n5 - Khóa học dành cho các bạn chưa biết gì về Quality Control và mong muốn trở thành Quality Control  - Tester trong dự án Outsourcing.\n6 - Các bạn đã có kiến thức cơ bản về Testing và muốn hiểu rõ hơn về Testing trong dự án phần mềm.\n7 - Các bạn đang đi làm trong mảng Quality Control và muốn biết rõ hơn về các kỹ thuật phân tích, báo cáo Testing trong dự án phần mềm.\n8 - Các bạn đang ở vị trí khác trong dự án phần mềm như Developer  - Quality Assurance. Mong muốn biết thêm về vị trí Quality Control (QC)  - Tester trong dự án phần mềm\n\n\nSau khóa học bạn sẽ hiểu được:\n1 - Phân biệt các vị trí Quality Assurance và Quality Control trong dự án phần mềm.\n2 - Biết cách tạo Unit Test Case, thực thi Unit Test Case.\n3 - Biết cách tạo Integration Test Case, thực thi Integration Test Case.\n4 - Biết cách đo năng suất tạo Test Case, thực thi Test Case.\n5 - Biết cách log bug chuẩn lên hệ thống quản lý.\n6 - Biết được cách báo cáo mỗi ngày và đánh giá chất lượng của sản phẩm.\n7 - Biết phân tích bug và rút ra bài học, cũng như cách thức thay đổi chất lượng của dự án",
      "target_audience": [
        "Khóa học dành cho các bạn chưa biết gì về Quality Control và mong muốn trở thành Quality Control / Tester trong dự án Outsourcing.",
        "Các bạn đã có kiến thức cơ bản về Testing và muốn hiểu rõ hơn về Testing trong dự án phần mềm.",
        "Các bạn đang đi làm trong mảng Quality Control và muốn biết rõ hơn về các kỹ thuật phân tích, báo cáo Testing trong dự án phần mềm.",
        "Các bạn đang ở vị trí khác trong dự án phần mềm như Developer / Quality Assurance. Mong muốn biết thêm về vị trí Quality Control (QC) / Tester trong dự án phần mềm"
      ]
    },
    {
      "title": "Software Testing Level 2 بالعربي",
      "url": "https://www.udemy.com/course/software-testing-level-2/",
      "bio": "أختبار البرمجيات المستوي الثاني",
      "objectives": [
        "القدره علي القيام بإختبار لموقع كامل",
        "القدره علي القيام بإختبار لموقع كامل",
        "القدره علي القيام بإختبار لموقع كامل",
        "القدره علي القيام بإختبار لموقع كامل"
      ],
      "course_content": {
        "Software testing level 2": [
          "Introduction",
          "1-STLC1",
          "2-STLC2",
          "3-Test Case",
          "4-Test Case ID",
          "5-Title and Condition",
          "6-Data and Steps",
          "7-Expected-Status-Priority-Actual",
          "8-Bug Report",
          "9-Bug Life Cycle",
          "10-Test case example",
          "11-Bug Report example"
        ]
      },
      "requirements": [
        "فقط حب التعلم والشغف للمعرفه",
        "فقط حب التعلم والشغف للمعرفه"
      ],
      "description": "أختبار البرمجيات المستوي الثاني استكمالاً لما تم شرحه في كورس مقدمه في أختبار البرمجيات بالعربي من سلسله بالعربي هيتم شرح مستوي أعلي وسنبدأ بشرح\nsoftware testing life cycle (STLC)\nوالإنتقال لشرح إجزاء أخري إلي أن نصل لتطبيق عملي شامل علي موقع حقيقي\nوبعدها يمكنك القيام بعملك الخاص والاستمتاع بهذا المجال الشيق وربح الاموال\nأختبار البرمجيات المستوي الثاني استكمالاً لما تم شرحه في كورس مقدمه في أختبار البرمجيات بالعربي من سلسله بالعربي هيتم شرح مستوي أعلي وسنبدأ بشرح\nsoftware testing life cycle (STLC)\nوالإنتقال لشرح إجزاء أخري إلي أن نصل لتطبيق عملي شامل علي موقع حقيقي\nوبعدها يمكنك القيام بعملك الخاص والاستمتاع بهذا المجال الشيق وربح الاموال\nأختبار البرمجيات المستوي الثاني استكمالاً لما تم شرحه في كورس مقدمه في أختبار البرمجيات بالعربي من سلسله بالعربي هيتم شرح مستوي أعلي وسنبدأ بشرح\nsoftware testing life cycle (STLC)\nوالإنتقال لشرح إجزاء أخري إلي أن نصل لتطبيق عملي شامل علي موقع حقيقي\nوبعدها يمكنك القيام بعملك الخاص والاستمتاع بهذا المجال الشيق وربح الاموال\nأختبار البرمجيات المستوي الثاني استكمالاً لما تم شرحه في كورس مقدمه في أختبار البرمجيات بالعربي من سلسله بالعربي هيتم شرح مستوي أعلي وسنبدأ بشرح\nsoftware testing life cycle (STLC)\nوالإنتقال لشرح إجزاء أخري إلي أن نصل لتطبيق عملي شامل علي موقع حقيقي\nوبعدها يمكنك القيام بعملك الخاص والاستمتاع بهذا المجال الشيق وربح الاموال\nأختبار البرمجيات المستوي الثاني استكمالاً لما تم شرحه في كورس مقدمه في أختبار البرمجيات بالعربي من سلسله بالعربي هيتم شرح مستوي أعلي وسنبدأ بشرح\nsoftware testing life cycle (STLC)\nوالإنتقال لشرح إجزاء أخري إلي أن نصل لتطبيق عملي شامل علي موقع حقيقي\nوبعدها يمكنك القيام بعملك الخاص والاستمتاع بهذا المجال الشيق وربح الاموال",
      "target_audience": [
        "من لديه خلفيه بلغه الجافا او أي لغه برمجه",
        "من لديه معرفه مقدمه عن أختبار البرمجيات",
        "من لديه خلفيه بلغه الجافا او أي لغه برمجه"
      ]
    },
    {
      "title": "Sıfırdan Postman ile API Testi & Test Otomasyonu Öğrenin",
      "url": "https://www.udemy.com/course/sifirdanpostmanileapitestiveotomasyonu/",
      "bio": "Sıfırdan Postman ile API testlerinin nasıl yapıldığını öğrenin. Newman ve Jenkins ile API Test Otomasyonu öğrenin.",
      "objectives": [
        "GET,POST,PUT,PATCH,DELETE isteklerini oluşturmayı öğreneceksin.",
        "Postman da API Testleri yazmayı öğreneceksin.",
        "Postman da kullanılan değişken tiplerini öğreneceksin.",
        "Postman Monitors ve Newman ile Test Otomasyonu öğreneceksin.",
        "Projeler ve değerlendirme sorularıyla kendini geliştirebileceksin.",
        "Jenkins ile Test Otomasyonu yapabileceksin."
      ],
      "course_content": {
        "Giriş": [
          "Kursun Yol Haritası"
        ],
        "API Testinin Temelleri": [
          "API Nedir?",
          "Postman & HTTP Metotları",
          "Postman Kurulumu",
          "Postman Arayüzüne Genel Bakış",
          "Bölüm Değerlendirme Soruları"
        ],
        "API Testine Giriş": [
          "Giriş",
          "GET&POST&PUT&PATCH&DELETE İstekleri",
          "Pratik-1",
          "Pratik-1 Çözüm",
          "Değişkenler (Variables)",
          "Bölüm Değerlendirme Soruları"
        ],
        "Test Yazımı ve Collection Koşumu": [
          "Basit Test Yazımı ve Koşumu",
          "İleri Seviye Test Yazımı ve Koşumu",
          "Veriye Dayalı Test (Data Driven Testing)",
          "Bölüm Değerlendirme Soruları"
        ],
        "Monitors ve Newman İle Test Otomasyonu": [
          "Monitor Collection İle Test Koşumu",
          "Newman Nedir?",
          "Newman Kurulumu",
          "Newman İle CMD Üzerinden Test Koşumu",
          "Newman İle HTML Rapor Oluşturulması",
          "Newman İle Extra HTML Rapor Oluşturulması",
          "Bölüm Değerlendirme Soruları"
        ],
        "Jenkins İle Test Otomasyonu": [
          "Jenkins Nedir?",
          "Hatırlatma",
          "Jenkins Kurulumu",
          "Jenkins ile Test Otomasyonu",
          "Bölüm Değerlendirme Soruları"
        ],
        "Bitirme Projesi": [
          "Proje Adımları",
          "Proje Part-1",
          "Proje Part-2",
          "Proje Part-3",
          "Proje Part-4"
        ],
        "Kurs Sonu": [
          "Kurs Sonu"
        ]
      },
      "requirements": [
        "Bir bilgisayara sahip olmak.",
        "Gerekli olan her şeyi baştan öğreneceksiniz."
      ],
      "description": "Sıfırdan Postman ile API Testi & Test Otomasyonu Öğrenin eğitimine hoş geldiniz!\n\n\nKurs Hakkında\nBu eğitim ile API testinin nasıl gerçekleştirildiğini öğreneceksin. API testlerin için Postman kullanmayı ve daha sonra bu testleri Newman ve Jenkins ile otomatize etmeyi öğreneceksin.\n\n\nKurs İşlenişi\n1.Kurs sırasında öncelikle gerekli program ve ortamların kurulumunu öğreneceksin.\n2.Neden kullandığımızı ve nasıl kullandığımızı öğreneceksin.\n3.Bölüm sonu değerlendirmeleriyle kendini test edebileceksin.\n4.Projelerle kendini geliştirebileceksin.\n\n\nKurs Süresince\nBu kurs içerisinde bulunan derslerle ilgili anlamadığın veya yapamadığın her şeyi bana Udemy Soru&Cevap veya LinkedIn üzerinden istediğiniz zaman sorabilirsin.\n\n\nKurs Bölümleri\n\n\nBölüm 1: Giriş\nİlk bölümde kursun yol haritasıyla  bu kurs boyunca nelerin beklediğine odaklanılacak.\n\n\nBölüm 2: API Testinin Temelleri\nİkinci bölümde temel konular ele alınacak. API nedir ile başlayıp HTTP Metotları ile devam edilecek. Daha sonra Postman kurulumu yapılıp arayüzüne genel bakış ile bölüm sonlandırılacak.\n\n\nBölüm 3: API Testine Giriş\nÜçüncü bölümde API Testine giriş yapılacak ve farklı türlerde istekler gerçekleştirilecek. Ayrıca Postman da yer alan değişken türlerine ve kullanımlarına değinilecek.\n\n\nBölüm 4: Test Yazımı ve Collection Koşumu\nDördüncü bölümde isteklere farklı türlerde testler yazılacak. Örneğin durum kodu sorgulama , response time , response type vs testler yer alacak. Daha sonra yazılan bu testler Collection Runner ile koşulacak. Bölümün son dersinde ise veriye dayalı test ile JSON ve CSV kullanarak testler tekrar Collection Runner ile koşulacak.\n\n\nBölüm 5: Monitors ve Newman İle Test Otomasyonu\nBeşinci bölümde Postman da yazılmış olan testler otomatize etmeye başlanılacak. İlk olarak Postman Monitors ile otomatik koşumlar oluşturulacak. Daha sonra Newman kurulumu gerçekleştirerek testler Newman yardımıyla CMD üzerinde koşulacaktır. Son olarak ise Newman yardımıyla testler için farklı türlerde HTML Raporlar oluşturulacak.\n\n\nBölüm 6: Jenkins İle Test Otomasyonu\nAltıncı bölümde ilk olarak Jenkins'in ne olduğu ile başlanacak. Ardından Jenkins kurulumu ile devam edilecek. Jenkins ile Test Otomasyonu kısmında sıfırdan bir job oluşturulacak ve testler bu job üzerinden otomatik olarak koşturulacaktır.\n\n\nBölüm 7: Bitirme Projesi\nSon bölümde kurs içinde kullandığımız tüm özelliklerin kullanılabileceği bir proje yapılacaktır.\n\n\nDerslerde görüşmek dileğiyle!",
      "target_audience": [
        "Yazılım testi alanında kariyer hedefi olan kişiler.",
        "API testini öğrenmek isteyen kişiler.",
        "Test Uzmanlığına yeni başlamış Test Uzmanları.",
        "Postman & API Testi konularında bilgilerini pekiştirmek isteyenler."
      ]
    },
    {
      "title": "ChatGPT Elite Kurs: Von A-Z inkl. App, Sora & DALLE 2025!",
      "url": "https://www.udemy.com/course/chatgpt-elite-kurs-von-a-z-inkl-app-sora-dalle-2025/",
      "bio": "OpenAI´s ChatGPT richtig nutzen: Prompt Engineering, Bilder, Videos (Sora), GPTs erstellen, App-Anwendung & KI-Tools.",
      "objectives": [
        "Du wirst lernen, wie du ChatGPT sicher und effektiv von Anfang an nutzt.",
        "Ich zeige dir, wie du zwischen den verschiedenen ChatGPT-Versionen das Beste herausholst.",
        "Du lernst, wichtige KI-Begriffe wie LLM, Prompt Engineering oder GPT spielend zu verstehen.",
        "Du wirst Profi im Umgang mit der ChatGPT-Benutzeroberfläche – ob am Desktop oder auf dem Smartphone.",
        "Werde sicher in der Anwendung von Modellen, Chatverläufen und Dateianhängen.",
        "Du wirst lernen, wie du mit ChatGPT sprechen, Bilder generieren und sogar Code schreiben kannst.",
        "Ich zeige dir, wie du die mobile App mit Sprach-, Kamera- und Video-Funktion meisterst.",
        "Du wirst Experte darin, GPTs individuell zu erstellen, zu konfigurieren und zu personalisieren.",
        "Lerne, wie du ChatGPTs Stil und Ton an deine Bedürfnisse anpasst.",
        "Du wirst verstehen, wie du mit gezieltem Prompt Engineering beeindruckende Ergebnisse erzielst.",
        "Werde Experte im Einsatz von CoT, Few Shot, Role-based und anderen Prompt-Techniken.",
        "Du wirst lernen, wie du ChatGPT nutzt, um kreative und hochwertige Bilder zu generieren.",
        "Ich zeige dir, wie du Bilder für Amazon KDP, Social Media, Print-on-Demand und mehr erstellst.",
        "Du lernst, wie du mit Sora KI-generierte Videos erstellst – vom Skript bis zum fertigen Clip.",
        "Du wirst sicher im Einsatz von ChatGPT in Kombination mit Tools wie Google Docs, Canva und Notion.",
        "Du lernst, wie du ChatGPT in Alltag und Beruf gezielt einsetzt – von E-Mails bis Sprachtraining.",
        "Du wirst lernen, wie du ChatGPT nutzt, um Ideen zu entwickeln, Texte zu verbessern und Projekte zu verwalten.",
        "Du wirst erfahren, wie du KI mit Verantwortung nutzt – unter Berücksichtigung von Ethik und Datenschutz.",
        "Ich zeige dir, wie du ChatGPT zu deinem täglichen Assistenten machst – effizient und kreativ.",
        "Du wirst nach dem Kurs in der Lage sein, ChatGPT vielseitig, souverän und zielgerichtet einzusetzen."
      ],
      "course_content": {
        "Einführung": [
          "Herzlich Willkommen – DAS wirst du nach diesem Kurs können!",
          "Mehr KOSTENLOSE Inhalte? Dann schau dir DIESES Video an!",
          "Registrierung/Anmeldung",
          "Free vs. Plus Version (Ich benutze im ganzen Kurs die Plus Version)",
          "Die wichtigsten Einstellungen zuerst",
          "Einen groben Überblick über die Benutzerfläche"
        ],
        "Begriffe die im Laufe des Kurses vorkommen werden": [
          "Was sind LLMs?",
          "Was heißt eigentlich „GPT“?",
          "Was ist „Prompt Engineering“?",
          "Was sind „Bias“?",
          "Was ist eigentlich ein „ChatBot?“",
          "…wars das schon?"
        ],
        "Grundlagen von ChatGPT": [
          "Modelle auswählen und dessen Unterschiede",
          "Lass uns einfach mal anfangen zu chatten",
          "Den Chat selbst bearbeiten",
          "Canvas für detaillierte Bearbeitungen",
          "Suche & Deep Research",
          "Projekte anlegen",
          "Dafür ist der provisorische Chat nützlich",
          "Dateien/Bilder hochladen und anhängen",
          "Du kannst auch Bilder erstellen!",
          "Code erstellen für deine Programmiersprache",
          "Apropos Sprache – ChatGPT spricht auch mit dir!",
          "Gebe ChatGPT Feedback"
        ],
        "ChatGPT auf dem Smartphone": [
          "Lass uns erstmal die App herunterladen",
          "Kurze Übersicht der ChatGPT App",
          "Die Sprechfunktion inkl. Gesprächsverlauf",
          "Kamera Funktion nutzen",
          "Kamera Praxisbeispiel #1 - Handschrift digitalisieren",
          "Kamera Praxisbeispiel #2 - Fremdsprachen überall übersetzen lassen",
          "Kamera Praxisbeispiel #3 - Rezepte erstellen lassen",
          "Foto hochladen",
          "Geht natürlich auch alles im \"Text-Mode\"",
          "Die Videofunktion ist klasse!",
          "Videofunktion Praxisbeispiel #1 - Instrument lernen!",
          "Videofunktion Praxisbeispiel #2 - Innenraumgestaltung und Fragen zu Produkten",
          "Videofunktion Praxisbeispiel #3 - Technik Probleme im Alltag"
        ],
        "Individuell Konfigurieren & GPTs": [
          "Einführung Individuelles Konfigurieren",
          "IK-Praxisbeispiel #1 - Skriptschreiber für TikTok Videos",
          "IK-Praxisbeispiel #2 - Content Planer für eine Woche",
          "IK-Praxisbeispiel #3 - Bild/Screenshot hochladen und beschreiben lassen",
          "Einführung GPTs",
          "Create",
          "Profilbild, Titel und Untertitel",
          "Instruktionen",
          "Das übergeordnete Ziel",
          "Fokus und Einschränkungen",
          "Befehlsstruktur entwickeln",
          "Regeln festlegen",
          "Richtlinien festsetzen",
          "Letzte Klärungen",
          "Personalisierung, Stil und Tonalität",
          "Beispiele als Orientierung für ChatGPT",
          "Speichere dein GPT und teste es aus!"
        ],
        "Prompt Engineering mit ChatGPT": [
          "Was ist ein Prompt Engineer?",
          "Bedeutung und Relevanz",
          "Standard Prompts vs. Advanced Prompts",
          "Zero Shot, One Shot und Few Shot Prompting",
          "Chain-of-Thought (CoT) Prompting",
          "Self Consistency Prompting",
          "Role Based Prompting",
          "Multi Turn Prompting",
          "Multi Modal Prompts (Bilder, Audio etc.)",
          "System und User Prompts",
          "Geordnete und ungeordnete Prompts",
          "Level Prompts",
          "LLM-Prompts",
          "Steuerung der Ausgabe (Temperatur, Token etc.)",
          "Negative Prompts",
          "Iteratives Prompting",
          "Checkliste für einen guten Prompt"
        ],
        "Fantastische Bilder mit ChatGPT erstellen": [
          "Wie funktioniert diese Technologie eigentlich?",
          "Lass uns mal dein erstes Bild erstellen",
          "Du kannst das Format ändern",
          "Änderung im Bild selbst klappt eher so... na ja..",
          "ChatGPT kann Zusammenhänge erkennen",
          "Nutze Vorlagen/Bilder als Beispiel für ChatGPT",
          "Text in Bild: Grafiken mit Text-Overlays",
          "Nutze Adjektive für mehr Details",
          "Stil- und Künstlerorientierter Prompt",
          "Szene mit Handlung (Cinematic Prompting)",
          "Negative Prompting",
          "Wie lang kann ein Prompt sein? Der Extrem Test",
          "Prompt-Add-ons, die oft helfen",
          "Idee #1 – Malbuch für Enkel/Kinder (auch zum Verkauf)",
          "Idee #2 – Gute Nacht Geschichten",
          "Idee #3 – Social Media Posts",
          "Idee #4 – Logo erstellen",
          "Idee #5 – Print on Demand",
          "Idee #6 – Thumbnails und Titelbilder",
          "Idee #7 – Mockups"
        ],
        "Sora": [
          "Was ist Sora, was kann es und wie gut ist es?",
          "Das kannst du alles machen, um ein Video zu erstellen",
          "Bearbeite deine bereits erstellen Videos",
          "Für welche Fälle kann ich Sora anwenden und was wird in Zukunft kommen?"
        ],
        "ChatGPT + Tools = Power-Kombi": [
          "Der Chrome Extension Store",
          "Was sind Chrome Extensions?",
          "YouTube Summery – YouTube Videos AUTOMATISERT zusammenfassen",
          "ChatGPT Sidebar – ChatGPT aber in UNFASSBAR GUT!",
          "ChatGPT in Google Tabellen integrieren"
        ],
        "Alltags – und Berufsanwendungen mit ChatGPT inkl. Beispiele": [
          "Alltag organisieren & Zeit sparen",
          "Texte, E-Mails & Bewerbungen schreiben",
          "Lernen & Weiterbildung",
          "Kreativität & Ideenentwicklung",
          "Marketing & Social Media",
          "Kochen mit der Video - und Bilder Funktion",
          "Übe ein (Bewerbungs)-Gespräch mit ChatGPT",
          "Fremdsprachen lernen"
        ]
      },
      "requirements": [
        "Alles was du brauchst, lernst du in diesem Kurs!"
      ],
      "description": "In diesem Kurs werde ich dich Schritt für Schritt in die faszinierende Welt von ChatGPT einführen. Egal, ob du gerade erst beginnst oder schon Erfahrung mitbringst – gemeinsam tauchen wir tief in die Möglichkeiten dieser KI ein. Du wirst nicht nur verstehen, wie ChatGPT funktioniert, sondern auch lernen, es optimal in deinem Alltag, Beruf und sogar für kreative Projekte einzusetzen.\n\n\nBereit, in die Welt von ChatGPT einzutauchen und das volle Potenzial dieser KI auszuschöpfen?\nMöchtest du verstehen, wie du ChatGPT effizient und sicher nutzt – sei es für Texte, Bilder, Videos oder komplexe Automatisierungen?\nInteressierst du dich für Begriffe wie LLMs, Prompt Engineering oder GPTs – und willst wissen, wie du sie im Alltag einsetzt?\nMöchtest du erfahren, wie du mit KI deine Produktivität enorm steigern und gleichzeitig Spaß an neuen Technologien entwickeln kannst?\n\n\nDann ist dieser Kurs genau richtig für dich!\nIn diesem umfassenden ChatGPT-Kurs wirst du ALLE essenziellen Schritte kennenlernen, um die Fähigkeiten von ChatGPT sicher und kreativ zu nutzen. Wir starten bei den Grundlagen und arbeiten uns bis zu fortgeschrittenen Themen wie Prompt Engineering, Sora und professionellen Workflows mit Tools vor.\n\n\nHier bekommst du einen kleinen Vorgeschmack auf das, was dich erwartet:\n\n\nEinführung\nIch heiße dich herzlich willkommen und gebe dir einen Überblick darüber, was dich im Kurs erwartet. Du lernst, wie du dich am besten anmeldest, welche Version von ChatGPT wir nutzen und welche Grundeinstellungen du vornehmen solltest. Natürlich schauen wir uns auch die Benutzeroberfläche gemeinsam an.\n\n\nBegriffe, die du kennen solltest\nDamit du dich sicher im Kurs zurechtfindest, erkläre ich dir wichtige Begriffe wie LLMs, GPT, Prompt Engineering, Bias und was es mit Chatbots auf sich hat – verständlich und praxisnah.\n\n\nGrundlagen von ChatGPT\nHier lernst du, wie du mit ChatGPT arbeitest: vom Modellwechsel über die Chat-Bearbeitung bis hin zum Hochladen von Dateien, Bildgenerierung, Codenutzung und Sprachfunktionen. Auch die Chat-Historie und Projekte werden hier ausführlich behandelt.\n\n\nChatGPT auf dem Smartphone\nErfahre, wie du die App optimal nutzt. Von der Sprach- und Kamerafunktion über Videoaufnahmen bis hin zum Hochladen und Bearbeiten von Inhalten – inklusive vieler Praxisbeispiele.\n\n\nIndividuell Konfigurieren & GPTs\nJetzt wird es kreativ! Ich zeige dir, wie du GPTs nach deinen Vorstellungen erstellst und anpasst – vom Profilbild über Instruktionen bis hin zur Tonalität. Natürlich alles mit anschaulichen Beispielen.\n\n\nPrompt Engineering mit ChatGPT\nTauche ein in die Welt der Prompts. Du lernst, wie du ChatGPT durch gezielte Anweisungen steuerst – von einfachen bis zu hochentwickelten Techniken wie CoT, Role-based oder Multimodal Prompting. Bonus: ChatGPT schreibt dir sogar deine Prompts!\n\n\nFantastische Bilder mit ChatGPT erstellen\nWir nutzen die Bildgenerierung für kreative Projekte wie Amazon KDP, Social Media, Malbücher oder Print-on-Demand. Du lernst alle Tricks, von Stilrichtungen bis zu Kamerawinkeln und Negativen Prompts.\n\n\nSora – Video mit KI erstellen\nWillkommen in der Zukunft: Du lernst, wie du mithilfe von Sora Videos erzeugst, steuerst und gestaltest – von B-Roll bis Social Media Content, mit beschreibenden, stilvollen und handlungsorientierten Prompts.\n\n\nChatGPT + Tools = Power-Kombi\nIch zeige dir, wie du ChatGPT mit Tools wie Google Docs, Excel, Canva, Notion oder Zapier kombinierst – für mehr Effizienz und Automatisierung.\n\n\nAlltags- und Berufsanwendungen\nLerne, wie du ChatGPT zur Organisation deines Lebens, zum Lernen, im Büro, im Marketing oder beim Sprachenlernen einsetzt. Praxisnahe Beispiele helfen dir, sofort loszulegen.\n\n\nGrenzen & Risiken\nWir sprechen offen über wichtige Themen wie Datenschutz, Urheberrecht, Halluzinationen, Bias, Ethik und wie du verantwortungsvoll mit KI umgehst.\n\n\nAbschluss\nZum Schluss fasse ich alles noch einmal zusammen und zeige dir, was du jetzt alles mit ChatGPT machen kannst – ein echter Gamechanger für dein digitales Leben!\nMit diesem Kurs wirst du nicht nur ein tiefes Verständnis für ChatGPT und KI entwickeln, sondern auch lernen, sie gewinnbringend in dein Leben zu integrieren – ob beruflich, kreativ oder privat.\n\n\nBereit, deine Reise in die Welt von ChatGPT zu starten? Dann zögere nicht und melde dich jetzt für diesen Kurs an, um zu erleben, wie du mit ChatGPT beeindruckende Inhalte erstellst, Probleme löst und neue Möglichkeiten entdeckst!\n\n\nIch freue mich auf dich!\nDanke für dein Vertrauen & Beste Grüße\nSascha",
      "target_audience": [
        "Für alle die ChatGPT perfekt beherrschen und das volle Potential ausschöpfen wollen!"
      ]
    },
    {
      "title": "Cypress на реальном проекте для начинающих QA Automation",
      "url": "https://www.udemy.com/course/cypress-qa-automation/",
      "bio": "WEB UI / API / Visual Testing: базовые методы и функции, CSS селекторы, Mocks, Stubs и создание реального проекта.",
      "objectives": [
        "По окончании курса вы сможете создавать быстрые и надежные тесты автоматизации для любого веб-приложения с помощью Cypress.",
        "Практические знания в проектировании фреймворка Cypress Automation с нуля",
        "Полное понимание компонентов Cypress для записи ведо, снимков экрана и отчетов о выполнении тестов.",
        "Изучите тестирование XHR / API с помощью Cypress для создания интеллектуальных тестов автоматизации с фиктивными ответами",
        "Cypress API",
        "Cypress Mocks и Stubs",
        "Cypress CI",
        "GIT",
        "XPath, CSS селекторы"
      ],
      "course_content": {
        "Введение и подготовка": [
          "Введение",
          "Установка тестового окружения",
          "Установка Cypress",
          "Структура Cypress проекта и начальная конфигурация",
          "Структура тестов в Cypress",
          "DOM и элементы"
        ],
        "CSS, XPath локаторы. !(из курса Selenium/Selenide)!": [
          "Локаторы: способы поиска элементов",
          "CSS селекторы: тег, класс, идентификатор и атрибут",
          "CSS селекторы: родственные, псевдо-классы",
          "Локаторы: основы XPath",
          "XPath: базовая практика",
          "Оси XPath",
          "Функции XPath"
        ],
        "Базовые и продвинутые действия": [
          "Поиск элементов: Get",
          "Поиск элементов: Find, Eq",
          "Система контроля версий: GIT",
          "Поиск элементов: Contains",
          "Проверки: Should + And, Expect",
          "Действия с WEB элементами",
          "PageObject: создаем тест",
          "PageObject: создаем второй тест",
          "PageObject: создаем p2p и mobile pages",
          "PageObject: создаем BasePage",
          "API & HTTP requests",
          "API: verification of responses",
          "API: Mock, Stub",
          "Visual Testing: Cypress plugin snapshots"
        ]
      },
      "requirements": [
        "Необходимы базовые знания и навыки работы с языком программирования JavaScript.",
        "Необходимы навыки продвинутого пользователя ПК, уметь установить софт на разные операционные системы: Windows, MacOS или Linux. В курсе разработка будет демонстрироваться на MacOS, однако вся работа аналогична для остальных систем."
      ],
      "description": "Cypress чаще всего сравнивают с Selenium; однако Cypress отличается как фундаментально, так и архитектурно.\nCypress не ограничен теми же ограничениями, что и Selenium.\nЭто позволяет вам писать быстрее, проще и надежнее.\n\n\nВ этом курсе мы обсудим полное понимание и практическое тестирование приложений с использованием Cypress.\nЭтот курс начинается с основ и постепенно продвигается к продвинутым концепциям Cypress.\n\n\nЭтот курс охватывает такие темы, как\nТестирование автоматизации пользовательского интерфейса для веб-приложений через Chrome\nПолное понимание Cypress Runner\nТестирование API с Cypress\nXHR-тестирование для тестирования XMLHTTPResponse любого сайта\nCypress и Locators\nПолное понимание различных команд Cypress\nПанель управления Cypress для параллельного выполнения тестов\nИспользование PageObject в Cypress\nVisual testing - тестирование верстки\nИнтеграция CI\nПоддержка кросс-браузерного тестирования Cypress\nВ конце этого курса вы получите полное представление о Cypress с нуля!\n\n\nCypress is most often compared to Selenium; however, Cypress differs both fundamentally and architecturally.\n\n\nCypress is not limited by the same restrictions as Selenium.\n\n\nThis allows you to write faster, easier and more reliably.\n\n\nIn this course, we will discuss a complete understanding and practical testing of applications using Cypress.\n\n\nThis course starts with the basics and gradually works its way up to the advanced concepts of Cypress.\n\n\nThis course covers topics such as\n\n\nTesting UI Automation for Web Apps via Chrome\n\n\nFull understanding of Cypress Runner\n\n\nAPI testing with Cypress\n\n\nXHR testing to test the XMLHTTPResponse of any site\n\n\nCypress and Locators\n\n\nFull understanding of various Cypress commands\n\n\nCypress control panel for running tests in parallel\n\n\nUsing PageObject in Cypress\n\n\nVisual testing - layout testing\n\n\nCI integration\n\n\nCypress cross-browser testing support\n\n\nAt the end of this course, you will have a complete understanding of Cypress from the ground up!",
      "target_audience": [
        "Все желающие освоить новую профессию.",
        "Начинающие специалисты в автоматизации тестирования.",
        "Специалисты по ручному тестированию, желающие перейти в автоматизацию."
      ]
    },
    {
      "title": "Uygulamalı Etik Hacker Kursu Pythonla Hacker Araçları",
      "url": "https://www.udemy.com/course/uygulamal-etik-hacker-kursu-pythonla-hacker-araclari-yazma/",
      "bio": "Etik hacker Kursu, Digispark ile Kendi hack usbmizi nasıl yaparız. Pythonla Etik Hacker Araçımızı nasıl yaparız",
      "objectives": [
        "Sanal makine teknolojisinin tanımı ve kurulum süreçleri.",
        "Etik hackerlar için temel bilgi toplama yöntemleri ve araçları.",
        "Sunuculara ve bilgisayarlara sızma teknikleri ve savunma yöntemleri.",
        "Gelişmiş bilgi toplama araçlarının kullanımı ve yöntemleri.",
        "İnternet üzerinde anonim kalmak için kullanılan teknikler ve araçlar.",
        "Şifre saldırılarına giriş düzeyinde bir bakış ve temel saldırı yöntemleri.",
        "Python programlama dili kullanarak kendi etik hacker araçlarını geliştirme.",
        "Sosyal mühendislik teknikleri ve insanları manipüle etme yöntemleri.",
        "Web siteleri üzerinde bilgi toplama ve güvenlik açıklarının tespiti",
        "Kriptografi temel prensipleri ve şifreleme yöntemleri.",
        "BeEF (Browser Exploitation Framework) kullanarak tarayıcı tabanlı saldırılar.",
        "Disk, fotoğraf ve Windows sistemlerinin analizi ve veri toplama yöntemleri",
        "Steganografi (gizli mesajlama) yöntemleri ve dosyalarda gizli veri saklama.",
        "Wireshark aracı kullanarak ağ trafi"
      ],
      "course_content": {},
      "requirements": [
        "internet ve bilgisayar istek az bişey programala bilgisi"
      ],
      "description": "Sanal Makine Nedir? Kurulumları Nasıl Yapılır?\nBu kurs, sanal makine teknolojisini anlamak ve kullanmak isteyenlere yöneliktir. Sanal makine nedir, nasıl çalışır ve nasıl kurulur gibi konuları kapsayan bu kurs, katılımcılara sanal makineleri kullanarak farklı işletim sistemlerini deneyimleme ve uygulama yapma fırsatı sunar.\nTemel Düzeyde Bilgi Toplama\nBu eğitim, etik hackerlar ve siber güvenlik uzmanları için temel düzeyde bilgi toplama becerilerini öğrenmek isteyenlere yöneliktir. Kurs boyunca, çeşitli kaynaklardan veri toplama yöntemlerini, açık kaynak istihbaratı (OSINT) araçlarını ve tekniklerini öğreneceksiniz.\nSunucu ve Bilgisayara Sızma\nBu eğitimde, sunuculara ve bilgisayarlara sızma tekniklerini öğrenecek ve savunma yöntemleri hakkında bilgi sahibi olacaksınız. Gerçek dünya senaryoları üzerinden pratik yapma fırsatı bulacaksınız ve sızma testleri sırasında kullanılan araçları keşfedeceksiniz.\nBilgi Toplama Araçları 2\nBu kurs, bilgi toplama sürecinde kullanılan çeşitli araçlar ve teknikler hakkında daha fazla bilgi edinmek isteyenlere yöneliktir. İleri düzeyde açık kaynak istihbaratı (OSINT) araçları, sosyal medya analizi ve daha fazlasını içeren bu kurs, bilgi toplama becerilerinizi geliştirmenize yardımcı olacaktır.\nAnonim Olmak\nBu eğitim, çevrimiçi ortamda anonim kalmayı ve gizliliğinizi korumayı öğrenmek isteyenler için tasarlanmıştır. VPN'ler, Tor ağı, proxy sunucuları ve diğer gizlilik araçları üzerinde yoğunlaşacak ve çevrimiçi izleri nasıl gizleyebileceğinizi öğreneceksiniz.\nPassword Saldırılarına Küçük Bir Giriş\nBu kurs, şifre saldırılarına genel bir giriş yapmak isteyenlere yöneliktir. Şifre kırma yöntemleri, saldırı türleri ve şifre güvenliği konularını kapsayacak olan bu kurs, güvenlik açıklarını anlamak ve önlemek için önemli bir temel sağlar.\nPythonla Kendi Etik Hacker Aracımızı Yazalım\nBu kurs, Python programlama dili kullanarak etik hackerlar için özelleştirilmiş araçlar geliştirmek isteyenler için tasarlanmıştır. Python'un güçlü yeteneklerini kullanarak güvenlik açıklarını tespit etme, ağ analizi yapma ve diğer etik hacking görevlerini gerçekleştirme becerilerini öğreneceksiniz.\nSosyal Mühendislik\nBu eğitim, sosyal mühendislik becerilerini öğrenmek isteyenlere yöneliktir. İnsanları manipüle etme, sosyal etkileşimleri kullanma ve güvenlik açıklarını sömürme becerilerini geliştireceksiniz. Gerçek dünya senaryoları üzerinden pratik yapma fırsatı bulacak ve sosyal mühendislik saldırılarını anlama ve önleme konusunda bilgi sahibi olacaksınız.\nHTML\nBu kurs, web geliştirme alanında temel bir beceri olan HTML'yi öğrenmek isteyenlere yöneliktir. HTML etiketlerini kullanarak web sayfalarını nasıl oluşturacağınızı, içerikleri nasıl düzenleyeceğinizi ve temel web tasarım ilkelerini nasıl uygulayacağınızı öğreneceksiniz.\nWeb Sitesi Bilgi Toplama Pentesting\nBu eğitim, web siteleri üzerinde bilgi toplama ve güvenlik açıklarını tespit etme konularında becerilerini geliştirmek isteyenler için tasarlanmıştır. Kurs boyunca, pentesting yöntemlerini, açıkların keşfi için kullanılan araçları ve teknikleri öğreneceksiniz. Gerçek dünya senaryolarında pratik yapma fırsatı bulacak ve web sitelerinin güvenliğini artırmak için önlemler almayı öğreneceksiniz.\nSQL NEDİR\nBu kurs, SQL (Structured Query Language) hakkında temel bilgileri öğrenmek isteyenlere yöneliktir. SQL'nin ne olduğunu, veritabanı yönetimi ve sorgulama için nasıl kullanıldığını ve güvenlik açısından dikkate alınması gereken önlemleri öğreneceksiniz.\nKriptoloji\nBu eğitim, kriptografi temel prensiplerini ve şifreleme yöntemlerini öğrenmek isteyenlere yöneliktir. Kriptoloji alanında kullanılan temel algoritmaları, anahtar yönetimi tekniklerini ve şifreleme uygulamalarını öğreneceksiniz. Gerçek dünya senaryolarında şifreleme problemlerini çözecek",
      "target_audience": [
        "siber güvenliğe ilgi duyan herkese"
      ]
    },
    {
      "title": "Simulado CTFL-AT",
      "url": "https://www.udemy.com/course/simulado-ctfl-at/",
      "bio": "Simulado CTFL-AT",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Aprimore suas habilidades de teste de software em projetos ágeis e prepare-se para o exame ISTQB Agile com nosso conjunto abrangente de testes práticos. Essas perguntas são projetadas com base no último programa de estudos ISTQB Agile, garantindo que você tenha acesso ao material mais atualizado e preciso.\nMuitos recursos online contêm informações desatualizadas ou incorretas; nosso curso visa fornecer uma ferramenta confiável para praticar o exame de uma maneira que simule de perto a experiência do exame da vida real.\nRecursos do simulado:\n2 exames, cada um contendo 45 perguntas, com um limite de tempo de 1 hora para conclusão.\nAcesso vitalício, permitindo que você faça os testes quantas vezes quiser.\nPerguntas distribuídas de acordo com as diretrizes do ISTQB Agile, refletindo a dificuldade e a distribuição do exame real.\nComunicação aberta: sinta-se à vontade para pedir esclarecimentos ou informações adicionais sobre qualquer pergunta. Estamos aqui para ajudar.\nObserve que os resultados destes exames práticos destinam-se a avaliar seu conhecimento em teste de software e não devem ser considerados um indicador de seu desempenho no exame real. Use os resultados para identificar áreas de fraqueza e estudar novamente conforme necessário.\nEste material não é credenciado pelo ISTQB.\nISTQB é uma marca registrada do International Software Testing Qualifications Board.",
      "target_audience": [
        "Qualquer pessoa que fará a certificação CTFL-AT"
      ]
    },
    {
      "title": "הקורס השלם לאוטומציה: בניית תשתית עם Playwright & Python",
      "url": "https://www.udemy.com/course/test-automation-build-a-scalable-framework-from-scratch/",
      "bio": "שדרג את הקריירה שלך עם אוטומציה – שלוט בשיטות מתקדמות, בנה תשתית בדיקות יציבה וקח את עצמך לשלב הבא",
      "objectives": [
        "Playwright ו-Python – תבנו תשתית אוטומציה חכמה, מודולרית וניתנת לתחזוקה, כמו שהמומחים עושים",
        "Data-Driven Testing (DDT) – תשלבו טכניקות מתקדמות והתאמת נתונים דינמית לאוטומציה עוצמתית וגמישה יותר",
        "Page Object Model (POM) ו-Factory Pattern תיישמו עקרונות לכתיבת קוד מסודר, גמיש וניתן להרחבה",
        "Fixtures – תלמדו כיצד להגדיר ולהשמיש סביבת בדיקות בצורה חכמה, כך שהאוטומציה תהיה יציבה ויעילה, כולל SetUp ו-TearDown",
        "Allure Reporting – תשפרו את הדוחות שלך עם תובנות ויזואליות מרהיבות על הרצת הבדיקות שלך",
        "CI/CD – תלמדו כיצד לנהל תצורת בדיקות ולהכין את האוטומציה שלך לשילוב עתידי בתהליכי פיתוח אוטומטיים",
        "לוגים חכמים ושיטות איתור ותיקון שגיאות – תלמד כיצד לעקוב אחרי הריצות שלך, לזהות תקלות ולפתור בעיות במהירות",
        "הקורס הזה ייתן לך את כל הכלים להפוך לבודק אוטומציה מקצועי ולשלוט בתחום – בשטח ובקריירה"
      ],
      "course_content": {
        "מבוא": [
          "מבוא – הדרך שלכם לשלוט באוטומציה מתחילה כאן",
          "איך להפיק את המקסימום מהקורס"
        ],
        "מבנה הפרויקט ועיצוב התשתית": [
          "ארכיטקטורת הפרויקט ועיצוב מבני",
          "PyCharm - שלד הפרויקט – יישום הארכיטקטורה ב"
        ],
        "הגדרת הפרויקט ותצורות חיוניות": [
          "הגדרת פרויקט אוטומציה – קונפיגורציה חיוניות לעבודה יעילה",
          "Requirements.txt – ניהול תלויות עם",
          "Pytest.ini – הגדרות בדיקה וסביבת עבודה",
          "README.md - שיטות מומלצות לתיעוד פרויקט",
          "הבנת הגדרת הפרויקט אוטומציה"
        ],
        "בניית מחלקת הבסיס – הלב של תשתית האוטומציה": [
          "מבוא למחלקת הבסיס – היסודות של תשתית הבדיקות",
          "בניית מחלקת הבסיס – המבנה המרכזי לתשתית הבדיקות",
          "הטמעת לוגים וצילום מסכים – שיפור דיווחי הבדיקות",
          "שילוב לוגים וצילומי מסך במחלקת הבסיס – שיפור מעקב וניתוח בדיקות",
          "הבנת מחלקת הבסיס באוטומציה של בדיקות"
        ],
        "Page Object Model (POM) – תכנון ויישום מודל": [
          "מבוא למודל - איך זה עובד ולמה זה חשוב",
          "תכנון המודל – כתיבת מבנה קוד לדוגמה",
          "המודל בפעולה – יישום עמוד כניסה בגישה נכונה",
          "שליטה מלאה במודל"
        ],
        "אסטרטגיות לפיתוח טסטים ואימות תוצאות בדיקות": [
          "מבוא לפיתוח מונחה בדיקות (TDD)",
          "תכנון מקרים – כתיבת קוד לדוגמה ללוגיקת בדיקה",
          "לניהול חכם של תכנון ותחזוקה של בדיקות - Fixtures",
          "יישום מקרים (Test Cases)",
          "בדיקת תנאים ושיטות אימות",
          "בדיקות מונחות נתונים לאוטומציה (DDT)",
          "אסטרטגיות לפיתוח טסטים ואימות תוצאות בדיקות"
        ],
        "הרצת בדיקות ותובנות לגבי דוחות": [
          "מבוא לדיווחי בדיקות",
          "הרצת בדיקות והבנת התוצאות",
          "יצירת דוחות בדיקה עם Allure – שלב אחרי שלב"
        ],
        "סיכום הקורס": [
          "סיכום הקורס – כיצד למנף את הבדיקות שלך עם אוטומציה"
        ]
      },
      "requirements": [
        "נדרש ידע בסיסי בשפה - Python",
        "עקרונות אוטומציה – היכרות עם מושגי בדיקות אוטומטיות וזיהוי אלמנטים באתר",
        "הבנה של עקרונות תכנות מונחה עצמים (לא חובה, אך מומלץ) - OOP",
        "אין צורך בניסיון קודם, הכל נלמד במהלך הקורס - Playwright",
        "סביבת עבודה מותקנת ומוכנה לעבודה לדוגמא pycharm + Python"
      ],
      "description": "למד לבנות תשתית אוטומציה שניתנת להרחבה עם Playwright ו-Python – צעד אחר צעד, בלי לדלג על שלבים!\nבעולם הטכנולוגי של היום, מי שלא מתקדם – נשאר מאחור. אם אתה בודק תוכנה או מפתח שרוצה להשתלב באוטומציה ולבנות תשתית אמיתית מאפס, הקורס הזה בדיוק בשבילך. נלמד צעד אחר צעד איך להקים תשתית אוטומציה מודולרית, מקצועית וניתנת להרחבה, עם Playwright ו-Python – בדיוק כמו שעושים בצוותי אוטומציה בתעשייה, וכמו שמצפים ממך גם בעבודה וגם בראיונות עבודה.\n\n\nלמה הקורס הזה חשוב עבורך?\n◆ תלמד איך לבנות תשתית אוטומציה כמו שעושים בחברות המובילות, כך שתדע להוכיח את היכולות שלך גם בראיונות עבודה וגם בשטח.\n◆ הדרך הכי טובה לשדרג את הקריירה שלך. אם אתה מרגיש תקוע ולא מצליח להתקדם, זה מה שיקפיץ אותך לשלב הבא.\n◆ אוטומציה היא מיומנות מבוקשת מאוד בתעשייה. החברות המובילות מחפשות מומחים שיודעים לבנות פתרונות אמיתיים.\n◆ תוכל לחסוך שעות של עבודה ידנית. כלים אוטומטיים מאפשרים בדיקות מהירות, אמינות ומדויקות יותר.\n\n\nמה תלמד בקורס?\n◆ איך לבנות תשתית אוטומציה שניתנת להרחבה שלב אחר שלב – בדיוק כמו שעושים בצוותי אוטומציה אמיתיים.\n◆ להכיר לעומק את Playwright ולבצע בדיקות מהירות, אמינות וללא תקלות רנדומליות.\n◆ לכתוב קוד אוטומציה נקי, קריא וניתן לשימוש חוזר ב-Python, לפי סטנדרטים של התעשייה.\n◆ שימוש ב-Allure לדוחות מתקדמים – תובנות חכמות שמנהלים ומפתחים יאהבו.\n◆ להכין את התשתית שלך לאינטגרציה חלקה עם CI/CD – כי אף אחד לא רוצה לרוץ טסטים ידנית לנצח.\n◆ ליישם שיטות עבודה של אנשי אוטומציה בכירים – ללמוד איך עושים את זה נכון מההתחלה.\n\n\nלמי הקורס הזה בדיוק מתאים?\n◆ בודקי תוכנה ידניים שמרגישים תקועים ורוצים סוף סוף לפרוץ לאוטומציה.\n◆ QA ומהנדסי בדיקות שרוצים לעבוד על פרויקטים אמיתיים ולפתח קריירה.\n◆ מפתחים שרוצים לשלוט ב-Playwright & Python ולהוסיף כלי חזק לארגז הכלים שלהם.\n◆ כל מי שרוצה ללמוד איך לבנות תשתית מאפס ולהבין איך אוטומציה באמת עובדת.\n\n\nלמה לבחור דווקא בקורס הזה?\n◆ הקורס בנוי צעד אחר צעד – גם אם יש לך רק ידע בסיסי, תוכל לעקוב ולהבין כל שלב.\n◆ תעבוד לפי מתודולוגיות אמיתיות מהתעשייה – איך מקצוענים בונים תשתית אוטומציה שנשארת יציבה לאורך זמן.\n◆ אם הרגשת שהידע שלך לא מספיק כדי לעבור לאוטומציה, כאן תקבל את מה שחסר לך.\n◆ אם אתה רוצה להפוך למומחה אוטומציה ולדעת איך לבנות תשתית אמיתית, זה בדיוק הקורס בשבילך.\n◆ נדיר למצוא קורס כזה בעברית – לא אגיד שהוא היחיד, אבל אין הרבה כאלה ברמה הזאת.\n◆ או כמו שאנחנו אומרים – בשפה שרק אנחנו מבינים.\n\n\n✦✦ הצטרף עכשיו ותתחיל לבנות תשתית אוטומציה מקצועית עם Playwright ו-Python – בביטחון מלא! ✦✦",
      "target_audience": [
        "ובודקים ידניים שרוצים לעבור לעולם האוטומציה QA מהנדסי",
        "Playwright ו-Python מפתחי אוטומציה שרוצים לשלוט ב",
        "בודקים ידניים שמעוניינים לבנות תשתית אוטומציה יציבה מאפס",
        "כל מי שרוצה ללמוד טכניקות מוכחות מהתעשייה ליצירת אוטומציה חזקה, אמינה וניתנת לתחזוקה",
        "מפתחים שרוצים לקבל מושג באוטומציה ולבנות תשתית יציבה"
      ]
    },
    {
      "title": "Kurs Jenkins dla testerów automatyzujących",
      "url": "https://www.udemy.com/course/kurs-jenkins-dla-testerow-automatyzujacych/",
      "bio": "Jenkins w testach automatycznych",
      "objectives": [
        "czym jest Jenkins",
        "jak zainstalować Jenkinsa na swoim komputerze",
        "jak stworzyć i uruchomić zadanie",
        "jak uruchomić testy automatyczne za pomocą Jenkinsa",
        "jak automatycznie uruchamiać zadanie po zmianach w repozytorium na Githubie",
        "jak automatycznie uruchamiać zadanie zgodnie z harmonogramem",
        "jak skonfigurować raporty w Jenkinsie i dołączyć je do zadania"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Przywitanie",
          "Wymagania",
          "Efekt końcowy",
          "Agenda",
          "Kontakt z instruktorem"
        ],
        "Jenkins - podstawy": [
          "Wprowadzenie",
          "Proces wytwarzania i dostarczania oprogramowania",
          "Ciągła integracja",
          "Ciągłe dostarczanie",
          "Ciągłe wdrażanie",
          "Czym jest Jenkins?",
          "Jenkins - wersja Javy",
          "Instalacja Javy",
          "Instalacja Jenkinsa",
          "Tworzenie pierwszego joba",
          "Zapoznanie z Jenkinsem",
          "Odtworzenie zadania w cmd",
          "Restart Jenkinsa",
          "Uruchamianie projektu cyklicznie",
          "Ustawienie harmonogramu",
          "Powiązywanie zadań",
          "Dodanie repozytorium",
          "Dodanie klucza SSH na GitHubie",
          "Uruchamianie zadania przy zmianach w repozytorium",
          "Pobieranie kodu z repozytorium"
        ],
        "Uruchamianie testów API - Postman": [
          "Wprowadzenie",
          "Weryfikacja instalacji niezbędnych narzędzi",
          "Instalacja node",
          "Instalacja aplikacji do testów",
          "Instalacja newman i uruchamianie kolekcji za pomocą newana",
          "Zapoznanie się z kolekcją",
          "Stworzenie repozytorium i dodanie kolekcji do repozytorium",
          "Dodanie zadania w Jenkinsie",
          "Naprawienie testu kończącego się niepowodzeniem",
          "Generowanie raportu html",
          "Dodanie raportu do Jenkinsa",
          "Naprawienie błędu dotyczącego wyświetlania raportu"
        ],
        "Uruchamianie testów API - Rest Assured": [
          "Wprowadzenie",
          "Weryfikacja instalacji niezbędnych narzędzi",
          "Instalacja node",
          "Instalacja aplikacji do testów",
          "Aplikacja do testów i przykładowy test",
          "Dodanie zadania na Jenkinsie",
          "Dodanie raportu do Jenkinsa"
        ],
        "Uruchamianie testów UI - Selenium Java": [
          "Wprowadzenie",
          "Weryfikacja instalacji niezbędnych narzędzi",
          "Instalacja Maven",
          "Przebieg testu",
          "Uruchomienie testów",
          "Pobranie kodu testów",
          "Dodanie zadania na Jenkinsie",
          "Dodanie raportu do Jenkinsa"
        ],
        "Uruchamianie testów UI - Selenium Python": [
          "Wprowadzenie",
          "Weryfikacja instalacji niezbędnych narzędzi",
          "Instalacja Pythona",
          "Instalacja Allure",
          "Przebieg testu",
          "Uruchomienie testów",
          "Dodanie zadania na Jenkinsie",
          "Dodanie raportu do Jenkinsa"
        ],
        "Pipeline, jenkinsfile i praca z jenkinsem": [
          "Wprowadzenie",
          "Parametryzacja zadania",
          "Konfiguracja jenkinsa w celu wysyłania powiadomień",
          "Konfiguracja Gmail",
          "Wysyłanie powiadomienia email",
          "Pipeline - wprowadzenie",
          "Pierwszy pipeline",
          "Generator kroków",
          "Pipeline parametry",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Jenkinsfile",
          "Architektura master – slaves",
          "Praca z Jenkinsem jako tester"
        ]
      },
      "requirements": [
        "Umiejętność obsługi komputera"
      ],
      "description": "Uwaga!\nKurs jest częścią ścieżki edukacyjnej testera automatyzującego aplikacje internetowe w języku programowania Java. Przystępując do tego kursu powinieneś być absolwentem poprzednich kroków ścieżki edukacyjnej. W przeciwnym wypadku część tego kursu może być niezrozumiała. Z koncepcją ścieżki edukacyjnej możesz zapoznać się w lekcji pod tytułem \"Ścieżka edukacyjna\".\nJenkins jest potężnym i elastycznym narzędziem do automatyzacji niemal wszystkiego. Dowiedz się jaką rolę Jenkins pełni w procesie wytwarzania oprogramowania. W kursie pokażę Ci jak za pomocą Jenkinsa stworzyć zadanie które automatycznie będzie uruchamiało testy aplikacji internetowej. Dowiesz się  również jak skorzystać z wtyczek, które pozwolą Ci dołączyć raport z testów do konkretnego zadania na Jenkinsie.\n\nZ tego kursu dowiesz się:\nczym jest Jenkins\njak zainstalować Jenkinsa\njak stworzyć i uruchomić zadanie\njak uruchomić testy automatyczne za pomocą Jenkinsa\njak automatycznie uruchamiać zadanie po zmianach w repozytorium na Githubie\njak automatycznie uruchamiać zadanie zgodnie z harmonogramem\njak skonfigurować raporty w Jenkinsie i dołączyć je do zadania\njak korzystać z jenkinsfile\n\n\nWymagania:\nPodstawowa znajomość Javy\nZnajomość Selenium WebDriver\nZnajomość Cucumbera, Gherkina i BDD\n\n\nDla kogo jest ten kurs:\nTesterzy lub programiści chcący zapoznać się z Jenkinsem\nTesterzy lub programiści chcący uruchamiać testy za pomocą Jenkinsa\n\n\nO Autorze:\nMam na imię Bartek i już od 7 lat zajmuje się tworzeniem testów automatycznych. Skupiam się na tworzeniu szkieletów testów automatycznych, które pomagają zmniejszyć czas i koszt testowania manualnego i dają informację zwrotną programistom tworzącym aplikację. Mam nadzieję, że moje kursy pomogą Ci  poszerzyć Twoją wiedzę.",
      "target_audience": [
        "Testerzy lub programiści chcący zapoznać się z Jenkinsem",
        "Testerzy lub programiści chcący uruchamiać testy za pomocą Jenkinsa"
      ]
    },
    {
      "title": "Узучаем Java Тестирование: написание юнит-тестов в JUnit5",
      "url": "https://www.udemy.com/course/junit-5-30/",
      "bio": "JUnit 5, тестирование, юнит-тесты",
      "objectives": [
        "Писать тесты в JUnit 5",
        "Писать параметризованные тесты",
        "Выполните 2 практических задания",
        "Научитесь правильно организовывать ваш код в тестах"
      ],
      "course_content": {
        "Основы": [
          "Интро",
          "Немного теории",
          "Первый тест",
          "Исключения",
          "Multiply Assertions",
          "Run with Coverage",
          "@Nested",
          "@BeforeEach @AfterEach",
          "Практическое задание"
        ],
        "Параметризованные тесты": [
          "@ValueSource",
          "@СsvSource",
          "@MethodSource",
          "Практическое задание №2"
        ],
        "Завершение": [
          "JUnit 4 vs JUnit 5"
        ]
      },
      "requirements": [
        "Основы языка Java"
      ],
      "description": "В этом курсе мы будем учиться писать юнит-тесты используя фрейморк Junit5.\nЧто такое юнит-тест?\nЮнит-тест это программа, которая проверяет работу небольшой части кода. Разработчики регулярно обновляют сайты и приложения, добавляют фичи, рефакторят код и вносят правки, а затем проверяют, как всё работает.\nТестировать систему целиком после каждого обновления — довольно муторно и неэффективно. Поэтому обновлённые или исправленные части кода прогоняют через юнит-тесты.\nЮнит, или модульные тесты, проверяют отдельные блоки и функции написанного кода и нужны, чтобы быстро протестировать написанный фрагмент кода и сразу понять, где именно кроется ошибка.\n\nТакже основные преимущества юнит-тестов:\n● Можно провести сразу после написания кода. Программист пишет конкретный модуль и тут же его тестирует — не нужно ждать готовности других модулей или интеграций.\n● Быстрее, чем другие тесты, так как охватывают только небольшую функцию. Часто один такой юнит-тест занимает всего пару миллисекунд.\n● Не требуют серьёзной инфраструктуры, так как их выполнение не требовательно к вычислительным ресурсам.\n● За счёт лёгкости и скорости юнит-тесты самые дешёвые.\n● Разные юниты можно тестировать одновременно.\n● Легко автоматизировать, так как при таких тестах нет имитации сценария пользователя — только проверка реакции кода на те или иные действия и данные.\n● Просто посчитать, какой процент кода покрыт тестами.\nНедостатки:\nМодульное тестирование не гарантирует, что будут найдены все ошибки. Причина в том, что даже в относительно простых программах невозможно предугадать все сценарии их выполнения.\nUnit-тестирование применяется к изолированным фрагментам кода, поэтому может выявить только ошибки проверяемого модуля. Оно не способно показать баги, возникающие при интеграции модуля с другими компонентами приложения. Также unit-тестирование не способно выявить системные ошибки продукта в целом.",
      "target_audience": [
        "Для людей, которые изучают Java и хотят познакомиться с JUnit 5",
        "Для людей, которые хотят в дальнейшем найти работу в IT"
      ]
    },
    {
      "title": "Frida快速入门[Win]/OD/CE/IDA/Python/TypeScript/JavaScript",
      "url": "https://www.udemy.com/course/learnfrida/",
      "bio": "掌握Frida动态调试基本方法",
      "objectives": [
        "掌握Frida动态调试环境搭建",
        "掌握Frida动态调试基本方法",
        "熟悉基于Windows平台的Frida调试分析",
        "熟悉基于Frida的TypeScript脚本编写和编译"
      ],
      "course_content": {},
      "requirements": [
        "了解基本的逆向分析方法"
      ],
      "description": "Frida是一款免费的，基于Python和JavaScript来实现的，面向开发人员、逆向工程师和安全研究人员的动态检测工具包。\n\n\nFrida拥有一套全面的测试套件，不但调试效率极高，而且在广泛的使用中经历了多年严格的测试。\n\n\n尤其是，移动应用安全测试和服务巨头NowSecure对齐钟爱有加，在NowSecure内部，安全人员通过Frida这个工具套装，已经完成对大量的移动应用程序大规模深度的安全分析测试。目前依然在该公司的安全测试中扮演重要的角色。\n\n\n基于Python和JavaScript的Frida，天生就是跨平台的动态调试工具，不但可以运行在Windows、Linux、macOS之上，而且还可以调试Windows应用程序、Linux应用程序，macOS、iOS、Andriod和QNX等几乎全平台的应用程序。可以说，一旦掌握Frida这套工具，就可以在全平台，对全平台的应用程序进行动态调试和分析。\n\n\nFrida使用极其方便，在使用过程中，只需将你编写的JavaScript脚本通过Frida自身的工具注入到目标进程中，就可以HOOK任何功能，其中包括但不限于监视加密API或跟踪应用程序关键代码等。在使用过程中，无需知道被“研究”程序的源代码。\n\n\n尤其是可以一边编辑JavaScript脚本，一边运行JavaScript脚本的功能对于调试分析来说极为友好。只需“保存”正在编辑的JavaScript脚本，就立即就能看到该脚本执行的结果，全称无需其它人工介入，也无需重新启动被“研究”的应用程序，极大地简化了分析流程，同时也极大地提高了工作效率。因此，得到了众多安全分析人士的青睐。\n\n\n本课程从最基本的调试环境搭建开始，基于经典的Windows“扫雷”游戏的动态调试分析，编码等，循序渐进演示Firda在分析调试Windows应用程序中基本使用方法和技巧。拥有这些知识储备之后，在加上官方的参考文档，你就可以轻松地将这些知识“迁移”至分析和调试其他平台的应用程序。\n\n\n课程资料，请看第一课中github链接",
      "target_audience": [
        "软件开发人员 逆向工程师 安全研究人员"
      ]
    },
    {
      "title": "Testes de Mapas e Geolocalização com Cypress",
      "url": "https://www.udemy.com/course/testes-de-mapas-geolocalizacao-e-componentes-com-cypress/",
      "bio": "Eleve o Nível dos Testes Automatizados com Dicas, Técnicas e Práticas Inovadoras!",
      "objectives": [
        "Configuração básica do ambiente de teste com Cypress",
        "Como realizar testes em funcionalidades relacionadas a mapas e geolocalização",
        "Estratégias para simular diferentes localizações e cenários de mapa",
        "Compreensão de testes de componentes em aplicações React",
        "Utilização da API do Cypress para testar componentes isoladamente"
      ],
      "course_content": {
        "Comece aqui": [
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Testes E2E com Mapas": [
          "Preparando o Projeto Hope: Instalando Dependências e Pacotes npm",
          "Deploy do Ambiente de Testes: Passo a Passo Completo",
          "O Que Acontece Quando Desligo o PC?",
          "Começando com Cypress: Configuração Inicial para Testes End-to-End",
          "Mock de Geolocalização e Estratégias Avançadas para Preenchimento de Formulários",
          "Controle Total de Dados de Teste com LocalStorage e MongoDB",
          "Consumindo APIs e Automatizando Ações com Page Objects",
          "Upload de Imagens: Ajustes e Boas Práticas",
          "Interagindo com Mapas: Técnicas Práticas no Cypress",
          "Refatorações, Custom Commands e Configurações Avançadas",
          "Finalizando com Factory de Massa de Testes e Relatórios Allure"
        ]
      },
      "requirements": [
        "Conhecimento básico em Cypress e/ou CodeceptJS",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Testes automatizados desempenham um papel crucial no panorama atual do desenvolvimento de software. À medida que as versões de software evoluem, os testes de regressão se tornam cada vez mais extensos, destacando a importância da automação para mitigar essa carga de trabalho, frequentemente realizada manualmente em muitas empresas. Cypress surge como uma solução poderosa e preferida por desenvolvedores e testadores, especialmente aqueles que trabalham com tecnologias frontend como React, Vue, Backbone, Redux, Express ou Angular.\nPor que você deve dominar o Cypress? A resposta é simples: eficiência e preferência. Equipes que utilizam tecnologias frontend reconhecem o valor do Cypress devido à sua facilidade de uso e capacidade de gerar testes robustos. Este curso prático mergulha profundamente na utilização do Cypress para testes de mapas e geolocalização em aplicações React.js, além de ensinar como integrar a automação com a API dos correios.\nAo longo do curso, você não apenas aprenderá a configurar e executar testes eficazes, mas também entenderá como o Cypress se integra perfeitamente com suas ferramentas e tecnologias existentes. A abordagem prática \"mão na massa\" garantirá que você saia do curso não apenas com conhecimento teórico, mas com habilidades práticas que podem ser aplicadas imediatamente em seus projetos do mundo real. Esteja pronto para elevar seus testes automatizados a um novo patamar, adotando técnicas inovadoras e totalmente fora da caixa fornecidas por este curso intensivo de Cypress.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Initiation au test logiciel ou application mobile",
      "url": "https://www.udemy.com/course/initiation-au-test-logiciel/",
      "bio": "Apprenez à tester un logiciel (Plan, Campagne et Stratégie de test, Gestion des anomalies, Test de non-régression, ...)",
      "objectives": [
        "Réaliser la recette ou les tests d'un logiciel ou d’une application mobile",
        "Mettre en place une stratégie de test",
        "Apprendre le vocabulaire lié à l'univers des tests logiciels ou applicatifs",
        "Exemple : Réaliser la recette d'une application mobile"
      ],
      "course_content": {
        "Introduction": [
          "Présentation de la formation"
        ],
        "Connaissances préalables": [
          "À quoi servent les tests applicatifs ?",
          "Quels sont les prérequis avant de démarrer des tests ?",
          "Quels sont les différents niveaux de test ?",
          "Les différents types d'application : Saas, Clients lourds, Application mobile, S",
          "Focus : Les spécificités liées aux tests mobiles",
          "Le vocabulaire indispensable à connaître"
        ],
        "Créer son premier plan de test": [
          "Qu'est ce qu'un plan de test ?",
          "Comment créer un plan de test ?",
          "Qu'est ce qu'un cas de test ?",
          "Comment créer un cas de test ?"
        ],
        "Créer sa première campagne de test": [
          "Pourquoi créer une campagne de test ?",
          "Les différents types de campagnes : vitaux, de validation, de régression",
          "Qu'est ce que les tests de non-régression ?",
          "Qu'est ce que les tests d'évolution ?",
          "Quel est le cycle de vie d'une campagne de test ?",
          "Comment estimer le travail nécéssaire à la réalisation de votre campagne ?",
          "Pourquoi planifier sa campagne de test ?",
          "Cheklist avant de lancer sa campagne de test"
        ],
        "Exécuter ses premiers cas de tests": [
          "Quelle préparation pour l'exécution des tests ? Cas pratique",
          "Comment réaliser l'exécution des tests ? Cas pratique",
          "Quand s'arrêter de tester ?"
        ],
        "Gérer les anomalies": [
          "Qu'est-ce qu'une anomalie ?",
          "Comment formaliser une anomalie ?",
          "Comment évaluer la criticité d'une anomalie ?",
          "Quel est le cycle de vie d'une anomalie ?",
          "Comment réaliser l'arbitrage des anomalies ?"
        ],
        "Bilan d'une campagne de test": [
          "Comment présenter l'évolution et les résultats d’une campagne ?",
          "Comment formaliser le PV de recette ?"
        ],
        "Conclusion": [
          "Les 6 points à retenir",
          "Le mot de la fin"
        ],
        "BONUS : Étude de cas / Présentation d'experts": [
          "Présentation d'un outil d'automatisation : Ranorex"
        ]
      },
      "requirements": [
        "Aucune exigence n'est prérequis pour ce cours",
        "Aucun matériel ou logiciel spécifique n'est prérequis pour ce cours"
      ],
      "description": "Que vous soyez consultant en systèmes d'information, chef de projet web ou digital, un créateur d'applications mobiles ou encore simple curieux voulant s’initier au métier du test. Cette formation vous donnera les clés pour valider / homologuer une application web ou mobile.\nAvec cette formation, vous allez apprendre à tester une application ou un logiciel efficacement, c’est-à-dire avec les bonnes méthodes (création de plan de test, planification, gestion des anomalies, …) pour garantir un niveau de qualité logicielle / conformité logicielle optimale.\nNous vous expliquerons tout le vocabulaire à maîtriser (Stratégie de test, campagne de test, plan de test, cas de test, jeux de données, …), les modes opératoires à connaître (la priorisation des anomalies, les tests de non-régression, …)\nDans cette formation, différents modèles seront mis à votre disposition : Procès-verbal de recette, plan de test, bilan de campagne, …)\nVous découvrirez également dans cette formation, des études de cas où vous pourrez voir concrètement comment tester une application mobile ou un site web mais vous irez également à la découverte d'un logiciel d'automatisation comme Ranorex !\nEnfin, cette formation est parfaite pour s'initier aux concepts de base de la stratégie de test et pour se préparer à un entretien pour devenir testeur. Vous y verrez tout le vocabulaire à connaître pour être prêt le jour J.",
      "target_audience": [
        "Consultant informatique",
        "Chef de projet",
        "Directeur de projet",
        "Testeurs fonctionnels",
        "Testeurs de logiciel ou d'application mobile",
        "Product Owner",
        "Développeur informatique"
      ]
    },
    {
      "title": "Введення в тестування (QA). Що таке якість ПЗ?",
      "url": "https://www.udemy.com/course/web-academy-qa-eadfl/",
      "bio": "Життєвий цикл продукту, SDLC та STLC. Місце і роль тестування на кожному з етапів",
      "objectives": [
        "Розуміння основних концепцій",
        "Вміння вирішувати завдання і проблеми",
        "Критичне мислення і аналіз",
        "Ефективна комунікація"
      ],
      "course_content": {
        "Давайте починати!...": [
          "Визначення тестування",
          "Чому тестування є важливим",
          "Стандарти, які визначають терміни та процеси тестування",
          "Відмінність між Testing, QC та QA",
          "Верифікація і валідація",
          "7 принципів тестування"
        ],
        "Продовжуємо!...": [
          "Види циклу розробки SDLC",
          "Типовий SDLC",
          "Цикл тестування STLC",
          "SDLC та STLC і діяльність QA на кожному етапі циклу розробки",
          "Життєвий цикл продукту"
        ]
      },
      "requirements": [
        "Цей курс спеціально розроблений для того, щоб бути доступним для учнів з різними попередніми знаннями та досвідом. Конкретні вимоги відсутні. Всі необхідні навички, інструменти та концепції будуть представлені та пояснені протягом курсу."
      ],
      "description": "Курс \"Введення в тестування: Якість програмного забезпечення та Життєвий цикл продукту\" - це ідеальний старт для тих, хто цікавиться тестуванням програм та бажає зрозуміти, як воно впливає на якість ПЗ. Незалежно від вашого досвіду в цій області, цей курс надасть вам важливі знання та навички.\n\n\nНа початку курсу ми докладно розглянемо поняття якості програмного забезпечення, розкриємо важливість правильної тестування та покажемо, як тестування впливає на кінцевий результат. Ви дізнаєтесь про різні аспекти якості, включаючи функціональність, надійність, продуктивність та безпеку програм.\n\n\nПотім ми вивчимо життєвий цикл продукту (SDLC) та життєвий цикл тестування (STLC). Ви зрозумієте, як тестування інтегрується в різні етапи створення програм та як його результати впливають на виробництво високоякісного програмного забезпечення.\n\n\nЦей курс підготує вас до розуміння та використання тестування ПЗ у вашій кар'єрі. Незалежно від вашої галузі, ці знання стануть цінними для вас та допоможуть вам вдосконалити якість програм, які ви створюєте або використовуєте.\n\n\nПісля завершення цього курсу ви будете готові до розпочатку власного подорожі в світ тестування програмного забезпечення. Ви зможете впроваджувати стандарти та практики тестування на різних етапах розробки програми та впевнено оцінювати якість ПЗ. Ви також зрозумієте роль та важливість тестування на кожному етапі життєвого циклу продукту, від аналізу та проектування до релізу та післярелізного обслуговування.\n\n\nЦей курс пропонує не тільки теоретичні основи, але і практичні завдання та вправи, які допоможуть вам застосовувати знання на практиці. Розглядаючи реальні випадки та кейси, ви навчитесь розв'язувати проблеми та забезпечувати якість вашого програмного забезпечення. Вирушайте в цю подорож до світу тестування з нами та розширюйте свій набір навичок та знань для успішної кар'єри в галузі розробки програмного забезпечення.",
      "target_audience": [
        "Початківці"
      ]
    },
    {
      "title": "Pruebas Unitarias en .Net",
      "url": "https://www.udemy.com/course/pruebas-unitarias-en-net/",
      "bio": "Pruebas de unidades maestras con NUnit, XUnit y MOQ con una aplicación web N-Tier del mundo real (.NET 7 y EF Core)",
      "objectives": [
        "Aprende pruebas unitarias desde cero",
        "Para qué sirven las pruebas unitarias y cómo se redactan",
        "Cómo configurar y usar el marco de prueba NUnit y XUnit",
        "Run and Debug Unit Tests",
        "Escribir Mocks con Mocking Framework (MOQ)",
        "Implemente pruebas unitarias en un proyecto de aplicación web del mundo real de N niveles usando XUnit"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de C#",
        "Conocimientos básicos de .NET Core y EF Core (aplicación CRUD básica para uso real)"
      ],
      "description": "Este curso se trata de escribir pruebas unitarias efectivas utilizando el lenguaje de programación C# y NUnit /XUnit como marco de pruebas unitarias. En el camino, aprenderemos los conceptos relacionados con las pruebas unitarias. Hoy en día, las pruebas unitarias son una habilidad absolutamente necesaria para cualquier desarrollador profesional. Las empresas esperan que los desarrolladores sepan cómo escribir pruebas unitarias utilizando las mejores prácticas. Este curso lo ayudará a establecer una base sólida con un ejemplo del mundo real y cómo se pueden realizar pruebas unitarias en una aplicación web .NET Core con EF Core.\n\n\n¿Qué es la prueba unitaria?\nUNIT TESTING es un tipo de prueba de software donde se prueban unidades o componentes individuales de un software. El propósito es validar que cada unidad del código de software funcione como se espera.\n\n\n¿Por qué aprender pruebas unitarias?\n¿Por qué debo aprender pruebas unitarias? ¿Por qué dedicar más tiempo a escribir código para probar? ¿Las pruebas manuales no son suficientes?\n\n\nEstas son preguntas bastante comunes y las responderé todas, pero la mayoría de las veces, las pruebas manuales consumen mucho más tiempo y no son tan completas como las pruebas unitarias. ¡Las pruebas unitarias tardan una vez en escribirse y se pueden ejecutar de forma gratuita cada vez!\n\n\nA medida que crece la aplicación, el costo de las pruebas manuales crece exponencialmente. Y las pruebas manuales nunca darán el 100% de confianza en todos los casos extremos. Las pruebas automatizadas lo ayudan a detectar los errores mientras se encuentra en la fase de desarrollo, por lo que serían más fáciles de resolver.\n\n\n¿Me ayudará con el trabajo?\nMuchas veces, se necesita incorporar más habilidades que me ayudarán a lograr mis objetivos profesionales. Las pruebas unitarias son una habilidad muy valiosa con el ciclo de desarrollo actual. Es una habilidad imprescindible en la mayoría de las organizaciones para desarrolladores senior.",
      "target_audience": [
        "Desarrollador NET que quiere crear software de mejor calidad con menos errores",
        "Desarrollador .NET que quiere aprender pruebas unitarias",
        "Desarrollador de .NET que quiere ver pruebas unitarias en aplicaciones del mundo real"
      ]
    },
    {
      "title": "Testes contínuos em Playwright no Github Actions",
      "url": "https://www.udemy.com/course/testes-continuos-em-playwright-no-github-actions/",
      "bio": "Integrando o Playwright no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados",
      "objectives": [
        "Como executar testes de regressão no Github Actions",
        "Boas práticas de Testes Contínuos",
        "Habilidades de DevOps",
        "Construir um Workflow e Pipeline de testes no Github Actions"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas ao Curso",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Continuous Testing": [
          "Boas vindas & fork do projeto",
          "Clonando o repositório base",
          "Inicializando o Playwright",
          "Executando os testes no PC",
          "Executando os testes no Github Actions",
          "Organizando os Jobs steps",
          "Adicionando evidências em videos",
          "Testes em múltiplos navegadores",
          "One Click Testing",
          "Parabéns! Agora você é QA com habilidades de DevOps"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux",
        "Conhecimento básico em Playwright"
      ],
      "description": "Construa um workflow de testes contínuos em Playwright no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados. Controle o fluxo de execução de testes com relatórios, screenshots e métricas.\nExplorar o campo do DevOps enquanto Analista de Testes de Software pode trazer melhorias significativas na eficiência, qualidade e colaboração ao longo do ciclo de vida do desenvolvimento de software. Proporciona uma compreensão abrangente do produto, impulsionando o avanço profissional.\nCom a implementação de pipelines de testes contínuos, os testes são executados automaticamente sempre que há modificações no código-fonte, permitindo a detecção precoce de defeitos e reduzindo custos associados à correção tardia. Além disso, promove uma cultura de qualidade, incentivando a equipe a se concentrar em desenvolver funcionalidades robustas e confiáveis.\nA execução automatizada de testes contínuos garante a integridade do código em desenvolvimento, evitando problemas em outras partes do sistema e garantindo uma experiência mais consistente para os usuários finais. Isso fortalece a confiabilidade do software e minimiza falhas em ambientes de produção, proporcionando maior tranquilidade para a equipe de desenvolvimento e para os stakeholders.\nDurante este treinamento, você aprenderá a construir e otimizar um fluxo de trabalho de testes contínuos no GitHub Actions, criando um histórico robusto de testes de regressão, acompanhado de relatórios detalhados e evidências visuais essenciais. Além disso, explorará técnicas avançadas de automação e integração para garantir a eficiência e a escalabilidade do processo de teste em projetos de todos os tamanhos e complexidades.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Unit Testing in .NET",
      "url": "https://www.udemy.com/course/unit-testing-in-net/",
      "bio": "Lerne alles über GUTE Unit Tests in .NETmit Nunit, xUnit sowie den Mocking Frameworks NSubstitute & Moq.",
      "objectives": [
        "Was sind Unit Tests eigentlich? Wo werden sie eingeordnet?",
        "Wie helfen Unit Tests beim Design von Software Systemen?",
        "Alle Prinzipien anhand von NUnit und xUnit verstehen und üben.",
        "Konzepte wie z.B. Mocking und Faking verstehen und einsetzen",
        "Nützliche Libraries wie Moq und NSubstitute einsetzen",
        "Wie du einen guten Test eigentlich identifizieren kannst"
      ],
      "course_content": {
        "Einstieg zum Thema Unit Testing": [
          "EInführung zum Kurs und dem Thema Software Testing",
          "Warum eigentlich Software testen?",
          "Unser erster Unit Test mit dotnet core und xUnit.",
          "Die Testpyramide und wo Unit Tests einzuordnen sind",
          "Gute Unit Tests schreiben. Ein paar best practices",
          "Unser Setup für den Kurs: VS Code mit der dotnet CLI und Test Extension",
          "Zusammenfassung des ersten Kapitels"
        ],
        "Unit Tests schreiben mit NUnit und xUnit": [
          "Einführung zum Kapitel",
          "Einführung in die 2 Schulen des Testens",
          "Code für dieses Kapitel",
          "Anatomie eines Unit Tests",
          "Test Namensgebung, Logik in Tests und ein paar FAQ zu den 3A",
          "Testen eines Alogrithmus am Beispiel: Längste Wort finden",
          "Assertions erklärt. Beispiele für Equality, Identity und Boolean Werte",
          "Assertions Strings",
          "Assertion von Nummern (Ganzzahl, floats usw.)",
          "Assertions für Collections verstehen",
          "Assertions für Exceptions verstehen und nutzen",
          "Alle Assertions als Übersicht",
          "Daten in einen Test befördern",
          "Test setup und Test teardown",
          "Collection von Tests mit CollectionFixture",
          "Zusammenfassung"
        ],
        "Unit Tests mit Dependencies: Test doubles und verschiedene Umgangsweisen": [
          "Einführung zum Kapitel",
          "Dependency Kategorien verstehen",
          "Arten von Testdoubles verstehen.",
          "Vorstellung der Beispieldomäne für das Thema Mocking",
          "Einen Mock manuell implementieren",
          "Einen Stub manuell implementieren",
          "Mocks und Stubs erzeugen leicht gemacht: Libraries NSubstitute und Moq",
          "Codebeispiele für das Kapitel",
          "Testdouble und Abhängigkeitskategorien als Übersicht",
          "Zusammenfassung des Dependency Kapitels"
        ],
        "Gute Unit Tests schreiben": [
          "Einführung",
          "Coverage als Metrik untersucht",
          "4 Säulen eines guten Unit Tests und Evaluiierung",
          "1.te Säule: Schutz gegen Regressions / Bugs",
          "2.te Säule: Resistenz gegen Refacotring und Zusammenhang zur 1.ten Säule",
          "3.te u. 4te Säule: Fast Feedback und Wartbarkeit",
          "Gibt es den Idealen Test?",
          "3 Arten Unit Tests zu schreiben unter der Lupe",
          "Welchen Teil unser Code base sollten wir mit den meisten Tests versehen?",
          "Test Anti pattern erkennen",
          "Zusammenfassung"
        ],
        "Bonus Kapitel": [
          "Einführung in VS Code",
          "Entity Framework Core Übersicht"
        ]
      },
      "requirements": [
        "C# und .Net sollten grundsätzlich bekannt sein",
        "Dotnet core wird im Kurs verwendet, aber .Net Full hat die gleiche API",
        "Der Wille sich auf das Testen von Code einzulassen"
      ],
      "description": "Unit Testing gehört heute in jedem guten Softwareprojekt dazu, um die Qualität der Software sicherzustellen.\nDavon hast du sicher bereits häufiger gehört. Jetzt stellt sich allerdings die Frage, wie das eigentlich geht?\n\nDazu kommen Fragen wie:\n- Warum sind trotz der Tests in den meisten Projekten, die Defekte häufig und die Tests eher hinderlich als nützlich?\n- Wie solltest du im allgemeinen mit Abhängigkeiten im TestCode korrekt umgehen?\n- Wie schreibe ich eigentlich einen Test?\n- Welchen Teil meines Codes sollte ich am besten Testen?\n- Wie beurteile ich eigentlich die Qualität meiner Unit Tests?\n- Wie teste ich den Teil, der nicht durch Unit Tests abgedeckt wurde?\nDiese und viele weitere Fragen, hilft dir dieser Kurs zu beantworten.\nDu wirst lernen:\nWarum eigentlich Software testen?\nVerschiedene Gründe für Software Tests\nder Testzyklus und die Testpyramide erklärt\nWas hat es mit der Testpyramide auf sich\nWann schreiben wir Unit Tests\nWann schreiben wir Integration & E2E Tests\nWieviel Anteil sollte jede Testkategorie etwa haben\nAufbau eines Unit Tests\ndie 3 Phasen eines Tests\nAnhand der Frameworks Nunit & xUnit in .NET core\nAlle möglichen Assertions zur eindeutigen Validierung des Tests\nUmgang mit Abhängigkeiten\nDie Kategorien von Abhängigkeiten kennenlernen\nTestdoubles: wie, wann und warum\nMocking Frameworks NSubstitute & Moq\nQualität von Unit Tests ermitteln\nDie zwei Schulen des Unit Testings (London & Detroit)\nWie bewerte ich einen Unit Test --> 4 Säulen eines guten Unit Tests\nCode Metriken einordnen\nTest anitpattern erkennen\nÜber einfache Unit Tests hinaus\nIntegration Tests am Beispiel von Asp .NET core\nUnit Testing von Entity Framework Core\nTest Driven Development effektiv nutzen (TDD)\nDiese und weitere Themen werden im Kurs behandelt.\nZudem werden deine Fragen jederzeit von mir beantwortet, du hast lebenslangen Zugriff auf den Kurs und die zahlreichen Materialien wie Cheat Sheets, den Code und Übersichten und Merkblätter. Zusätzlich noch die 30 Tage Rückgabegarantie von Udemy.\nAlso lerne endlich vernünftige Unit Tests zu schreiben und um jedes deiner Projekte effektiver zu machen!\nLG\ndein Dozent\nTimo",
      "target_audience": [
        ".Net Entwickler jedes Einsatzgebietes",
        "Alle Entwickler die am allgemeinen Prinzip des Unit Testings interessiert sind."
      ]
    },
    {
      "title": "Robot Framework: Testes Automatizados de interface e API",
      "url": "https://www.udemy.com/course/robot-framework-testes-automatizados-de-interface-e-api/",
      "bio": "Aprenda a desenvolver testes automatizados com Robot Framework para interfaces Web e para APIs",
      "objectives": [
        "Você irá aprender como desenvolver testes automatizados com Robot Framework",
        "Estará apto a realizar testes de API em projeto reais",
        "Aprenderá boas práticas para automação de teste",
        "Conseguirá executar teste Web automatizados utilizando Selenium com Robot Framework",
        "Aprenderá conceitos de teste de software importantes para automação"
      ],
      "course_content": {
        "Apresentação": [
          "Apresentaçao do instrutor",
          "Introdução ao Robot Framework",
          "Tire suas dúvidas e participe da comunidade"
        ],
        "Instalação": [
          "Instalação do Ambiente",
          "Instalacão da IDE e plugins",
          "Mais plugins para o Vs Code",
          "Repositório"
        ],
        "Introdução ao Robot Framework": [
          "Estrutura básica do arquivo .robot",
          "Como executar o arquivo de teste",
          "Material de Apoio: Como executar testes via linha de comando"
        ],
        "Como utilizar keywords da BuiltIn": [
          "Biblioteca Builtin",
          "Como declarar variáveis durante meus testes",
          "Utilizando argumentos nas minhas keywords",
          "Utilizando keywords SHOULD",
          "Condicionais IF-ELSE",
          "Utilizando FOR loop nos testes",
          "Como converter variáveis",
          "Como utilizar listas e dicionários",
          "Log to Console, Log, Log Many e Log Variables",
          "Como forçar erros com: Fail e Fatal Error",
          "Utilizando \"Run Keyword\""
        ],
        "Bibliotecas importantes": [
          "Bibliotecas",
          "Biblioteca: BuiltIn",
          "Biblioteca: Operation System",
          "Biblioteca: String",
          "Biblioteca: JsonLibrary",
          "Biblioteca: DateTime"
        ],
        "Projeto de Teste de API no Server Rest": [
          "Apresentação do Server Rest",
          "Documentação Swagger: Server Rest e Postman",
          "Instalação da Library Requests",
          "Nivelamento sobre APIs",
          "Base para escrever teste de API",
          "Criação testes API USUÁRIOS - Parte 1",
          "Criação testes API USUÁRIOS - Parte 2",
          "Criação testes API USUÁRIOS - Parte 3",
          "Criação de teste API USUÁRIOS - Parte 4",
          "Testes propostos para API USUÁRIOS",
          "Testes propostos para API LOGIN",
          "Criação de testes API LOGIN - Parte 1",
          "Testes propostos para API PRODUTOS",
          "Criação de testes API PRODUTOS - Parte 1",
          "Criação de testes API PRODUTOS - Parte 2",
          "Testes propostos para API CARRINHO",
          "Criação de testes API CARRINHO"
        ],
        "Projeto testes de interface com Selenium": [
          "Apresentação do site a ser automatizado",
          "Conteúdo auxiliar para testes Web",
          "Instalação e Configuração: Selenium e ChromeDriver",
          "Arquitetura e organização dos testes",
          "Testes Proposto Login",
          "Teste de Login",
          "Testes Propostos Account details",
          "Testes Account details - Parte 1",
          "Testes Account details - Parte 2",
          "Testes propostos Addresses",
          "Testes Addresses",
          "Testes propostos fluxo de compra",
          "Testes fluxo de compra - Parte 1",
          "Testes fluxo de compra - Parte 2",
          "Testes fluxo de compra - Parte 3",
          "Considerações finais do projeto"
        ],
        "Considerações Finais": [
          "Considerações Finais do curso"
        ],
        "Bônus": [
          "Aula Bônus - confira!"
        ]
      },
      "requirements": [
        "Conhecimento básico de lógica de programação"
      ],
      "description": "Durante o curso de Robot Framework, você terá a oportunidade de adquirir conhecimentos sobre os conceitos fundamentais desse framework de automação de testes. O curso foi projetado para capacitá-lo a projetar testes automatizados do zero, além de fornecer técnicas para a automação de testes em páginas da web e APIs.\nAo longo do curso, você explorará os elementos essenciais do Robot Framework, começando pela compreensão da sua estrutura de teste. Você aprenderá sobre a sintaxe de palavras-chave do Robot Framework, que é uma abordagem intuitiva e legível para criar casos de teste.\nUma parte significativa do curso será dedicada à automação de testes em páginas da web. Você aprenderá como interagir com elementos da interface do usuário, como preencher formulários, clicar em botões, validar conteúdos e navegar entre as páginas. Também será introduzido aos recursos de asserção do Robot Framework, que permitem verificar se os resultados dos testes estão de acordo com as expectativas, tudo isso utilizando a biblioteca do Selenium.\nAlém da automação de testes em páginas da web, você também terá contado com automação de testes de APIs. Serão abordados tópicos como o envio de solicitações HTTP, a análise de respostas e a validação de dados retornados pelas APIs. Você aprenderá a lidar com diferentes tipos de requisições, como GET, POST, PUT e DELETE, e como extrair informações relevantes das respostas para fins de verificação.\nAo concluir o curso, você terá uma boa compreensão do Robot Framework e estará preparado para aplicar seus conhecimentos em projetos. Você será capaz de projetar e implementar testes automatizados abrangentes, eficientes e confiáveis tanto em aplicações web quanto em APIs. O conhecimento adquirido durante o curso lhe dará a confiança para enfrentar os desafios da automação de testes e contribuir para o sucesso dos projetos de desenvolvimento de software.",
      "target_audience": [
        "Profissionais de Qualidade de Software",
        "Desenvolvedores que queiram aprender automação de testes"
      ]
    },
    {
      "title": "Kurs: Testautomatisierung mit Selenium für Java + Python",
      "url": "https://www.udemy.com/course/kurs-testautomatisierung-mit-selenium-4-java-python/",
      "bio": "Lerne wie du automatisierte Tests in Java und Python erstellst. Du bekommst für alle Tests Webanwendungen bereitgestellt",
      "objectives": [
        "Am Ende dieses Kurses, hast du den sicheren Umgang mit Selenium WebDriver gemeistert",
        "Du wirst in der Lage sein, jede Webseite im Internet mit automatisierten Tests und unzähligen Testfällen zu testen",
        "Du nach diesem Kurs Tests für Webanwendungen zuverlässig und korrekt erstellen",
        "Dieser Kurs beinhaltet eine Praktische Webapplikation um mit allen Funktionen des WebDriver zu spielen",
        "Unit Tests zuverlässig und korrekt erstellen",
        "Du wirst neue Testmöglichkeiten für andere Anwendungsbereiche entdecken und nutzen",
        "Nach diesem Kurs kannst du Webanwendungen analysieren und potentielle Testmöglichkeiten entdecken",
        "Du wirst die Fähigkeit erlernen Page Ojbekt Modelle von grund auf zu erstellen",
        "Nach diesem Kurs kannst du Xpath nutzen",
        "Du wirst in der Lage sein, einen Testserver einzurichten",
        "Du erhälst du Fähigkeit Browserautomatisierung zu erstellen",
        "Du wirst deine Programmierskills optimieren",
        "du erhältst volle Kenntnisse über JUnit, PyUnit, Maven, pip, Jenkins ,Log4J, Cucumber, Selenium Grid, parametrisiertes Testen, paralelles Testen"
      ],
      "course_content": {
        "Kursvorstellung und Einführung in das Thema Testautomatisierung": [
          "Ein praktisches Beispiel: Was du in diesem Kurs lernen wirst",
          "Kurs Roadmap: Was deckt dieser Kurs ab",
          "Dozenten-Vorstellung",
          "Wie erreichst du deinen Dozenten?",
          "Lehrplan walkthrough",
          "Warum Testautomatisierung? Top Gründe warum du Selenium lernen musst!",
          "Kurs FAQs",
          "Bonusmaterial - Objektorientierung für Ein und Umsteiger",
          "Testprogramm aus diesem Abschnitt"
        ],
        "Einführung in Selenium": [
          "Zugangsdaten Übungsportal - https://seleniumkurs.codingsolo.de",
          "Grundlagen des Testens",
          "Gründe für Softwaretests",
          "Begriffe des Softwaretesten",
          "Grundsätze des Softwaretesten",
          "Manuelle Tests",
          "Automatisierte Tests",
          "Aufbau von Testfällen",
          "Psychologie des Testens",
          "Der erste Kontakt mit Selenium",
          "Erster Test mit Selenium IDE",
          "Test Aufnahme mit Selenium IDE",
          "Selenium IDE Vor und Nachteile",
          "Weitere Möglichkeiten mit Selenium IDE",
          "Selenium Eigentschaften - Was musst du wissen?",
          "Selenium Funktionen",
          "Selenium WebDriver - kurzer Einblick in die Architektur",
          "Quiz - Prüfe dein Wissen"
        ],
        "Java und Selenium von Zero to Hero": [
          "Intro für diesen Abschnitt (Wichtig!)",
          "Installation von Java auf Windows",
          "Installation von Java auf Mac",
          "Installation von Java auf Ubuntu",
          "Eclipse herunterladen und installieren",
          "Ein Java Projekt erstellen",
          "Hello World",
          "Selenium Projekt mit dem Selenium Client erstellen",
          "Browserdriver herunterladen und Konfigurieren",
          "Wie starte ich Tests in Firefox",
          "Wie starte ich Tests in Chrome und Internet Explorer",
          "Crash Course Java Basics I",
          "Crash Course Java Basics II",
          "Was ist JUnit",
          "Seleniumprojekt mit JUnit",
          "Was ist Maven",
          "Maven installieren",
          "Selenium Projekt mit Maven erstellen",
          "Pom.xml verstehen",
          "Browserdriver herunterladen und Konfigurieren (Maven Version)",
          "Wie starte ich Tests in Firefox (Maven Version)",
          "Wie starte ich Tests in Chrome und Internet Explorer (Maven Version)",
          "Maven test-Befehl zum aüsführen von JUnit Tests",
          "Problembehandlungen in Umgang mit Webdriver",
          "Zugangsdaten Übungsportal - https://seleniumkurs.codingsolo.de",
          "Zwischenstand - Wo stehst du?"
        ],
        "Python und Selenium von Zero to Hero": [
          "Intro für diesen Abschnitt (Wichtig!)",
          "Installation von Python auf Windows",
          "Installation von Python auf MAC",
          "Installation von Python auf Ubuntu",
          "PyCharm herunterladen und installieren (Community version)",
          "Ein Python Projekt erstellen",
          "Hello World",
          "Selenium Projekt erstellen mit PyCharm",
          "Browserdriver herunterladen und Konfigurieren",
          "Wie starte ich Tests in Firefox",
          "Wie starte ich Tests in Chrome und Internet Explorer",
          "Crash Course Python Basics I",
          "Crash Course Python Basics II",
          "Was ist PyUnit",
          "Unittest und PyCharm",
          "Seleniumprojekt mit PyUnit",
          "Was ist pip",
          "Selenium Projekt erstellen mit pip",
          "Browserdriver herunterladen und Konfigurieren",
          "Wie starte ich Tests in Firefox",
          "Wie starte ich Tests in Chrome und Internet Explorer",
          "Test-Befehl zum aüsführen von PyUnit Tests",
          "Problembehandlungen in Umgang mit Webdriver",
          "Zugangsdaten Übungsportal - https://seleniumkurs.codingsolo.de",
          "Zwischenstand - Wo stehst du?"
        ],
        "Lokatoren und Techniken": [
          "Was sind Lokatoren?",
          "Java: Lokatoren Beispiel ID, NAME, XPATH, CSS",
          "Python: Lokatoren Beispiel ID, NAME, XPATH, CSS",
          "Arten von Lokatoren",
          "XPath in Firefox Teil 1 - Expression generieren",
          "XPath in Firefox Teil 2 - Kind-Elemente identifizieren",
          "XPath in Firefox Teil 3 - Eltern-Elemente identifizieren",
          "XPath in Chrome Teil 4 - Expression generieren",
          "XPath in Chrome Teil 5 - Traversierung",
          "CSS in Firefox Teil 1 - Expression generieren",
          "CSS in Firefox Teil 2 - Kinde-Elemente identifizieren",
          "CSS in Chrome Teil 3 - Expression generieren",
          "Validierung von XPATH und CSS Expressions Teil 1 - Firefox",
          "Validierung von XPATH und CSS Expressions Teil 2 - Chrome",
          "Browser Erweiterung Chropath **Depricated**",
          "Browser Erweiterung SelectorsHub **NEU**",
          "XPATH Realtive / Absolute",
          "Praktisches Beispiel Login mit CSS Java & Python",
          "Praktisches Beispiel Testportal Navigation mit Link Text Lokator Java",
          "Praktisches Beispiel Testportal Navigation mit Link Text Lokator Python",
          "Praktisches Beispiel Formular 1 Java",
          "Praktisches Beispiel Formular 1 Python",
          "Web Element Variablen Java",
          "Web Element Variablen Python",
          "Drag and Drop Beispiel Java",
          "Drag and Drop Beispiel Alternative 1 Java",
          "Drag and Drop Beispiel Alternative 2 Java",
          "Drag and Drop Beispiel Python",
          "Drag and Drop Beispiel Alternative 1 Python",
          "Drag and Drop Beispiel Alternative 2 Python",
          "Einführung in XPATH",
          "Einführung in CSS Selector",
          "Reguläre Ausdrücke mit XPATH und CSS Selector",
          "Übungsseite Web Elemente",
          "Praktisches Beispiel Radio-Buttons Java",
          "Praktisches Beispiel Radio-Buttons Python",
          "Praktisches Beispiel Checkboxen Java",
          "Praktisches Beispiel Checkboxen Python",
          "Praktisches Beispiel IFrame Java",
          "Praktisches Beispiel IFrame Python",
          "Zugangsdaten Übungsportal - https://seleniumkurs.codingsolo.de",
          "Zwischenstand - Wo stehst du?"
        ],
        "Page Object Pattern": [
          "Wieso Design Pattern? Was ist ein Page Object?",
          "Page Object Klasse erstellen Java (LoginPage)",
          "Page Object Klasse erstellen Python (LoginPage)",
          "Page Object Factory FindBy Annotations",
          "Page Object Klasse erstellen Java (HomePage)",
          "Page Object Klasse erstellen Java (TestAppPage)",
          "Page Object Klasse erstellen Java (TestForm1Page)",
          "Page Object Klasse in Testfall einbinden Java Testfall Portal Navigation",
          "Page Object Klasse in Testfall einbinden Java Testfall TestForm1",
          "Page Object Klasse erstellen Python (HomePage)",
          "Page Object Klasse erstellen Python (TestAppPage)",
          "Page Object Klasse erstellen Python (TestForm1Page)",
          "Page Object Klasse in Testfall einbinden Python Testfall Portal Navigation",
          "Page Object Klasse in Testfall einbinden Python Testfall Portal Navigation",
          "Page Objekt Klasse für Drag and Drop Beispiel Java",
          "Page Objekt Klasse für IFrame Beispiel Java",
          "Page Objekt Klasse für Check Box Beispiel Java",
          "Refactoring",
          "Page Objekt Klasse für Radio Button Beispiel Java",
          "Page Objekt Klasse für Drag and Drop Beispiel Python",
          "Page Objekt Klasse für IFrame Beispiel Python",
          "Page Objekt Klasse für Check Box Beispiel Python",
          "Page Objekt Klasse für Radio Button Beispiel Python",
          "Zwischenstand - Wo stehst du?"
        ],
        "Selenium WebDriver -> Umgang mit Asynchronen Webzugriffen": [
          "Intro",
          "Implziertes Warten",
          "Praktische Beispiele Impliziertes Warten Java",
          "Praktische Beispiele Impliziertes Warten Python",
          "Explizites Warten",
          "Praktische Beispiele Expliziertes Warten Java",
          "Praktische Beispiele Expliziertes Warten Python",
          "Praktisches Beispiel WebShop Java",
          "Praktisches Beispiel WebShop Python",
          "Fließendes Warten (Fluent Wait)"
        ],
        "Best Practise Techniken": [
          "Warum parametrisierte Tests",
          "Parametrisierte Tests Java",
          "Parametrisierte Tests Python",
          "Konfigurationsdatei",
          "Driver Helper",
          "Parallele Testausführung mit JUnit",
          "Parallele Testausführung mit TestNG",
          "Mehr Best Practice Beispiele (Bald verfügbar)"
        ],
        "Selenium-Server & Remote WebDriver": [
          "Intro - Müssen Tests immer lokal laufen?",
          "Selenium-Server Einrichten Universal",
          "Remote WebDriver Einbinden Java",
          "Remote WebDriver Einbinden Python"
        ],
        "DATADRIVEN: Tests aus externen Quellen einlesen": [
          "Intro Data-Driven Tests",
          "Datenquellen: Excel, CSV oder TXT",
          "Apache POI um Excel Dateien auszulesen",
          "Testform 3 vorbereiten Java",
          "Praktisches Beispiel: Testform 3 externe Datenquelle (Excel) anbinden Java",
          "Python Pandas um Excel Dateien auszulesen",
          "Testform 3 vorbereiten Python",
          "Praktisches Beispiel: Testform 3 externe Datenquelle (Excel) anbinden Python"
        ]
      },
      "requirements": [
        "Funktionierenden Internetanschluss",
        "Du brauchst KEINE Java Programmierkenntnisse oder Python Programmierkenntnisse für diesen Kurs. Diesen Kurs kannst du ohne jegliche Programmiererfahrung meistern",
        "Alle Installationen sind Teil des Kurses und werden von mir geführt.",
        "Jeglicher Code und Materialien werden bereitgestellt"
      ],
      "description": "Kurs Update: 06.09.2020 - Testautomatisierung mit TestNG und Cucumber sind jetzt auch verfügbar\nKurs Update: 03.09.2020 - Die Browser Erweiterung Chropath wird nicht länger aktualisiert\nDas neue Tool trägt den Namen SelectorsHub. Neues Video im Kapitel 5 Lokatoren und Techniken verfügbar\nKurs Update: 30.08.2020 - Abschnitt Objektorientierung für Ein und Umsteiger ist jetzt auch verfügbar\nAufgrund von technischen Störungen, konnte ich seit 1. Monat keine Inhalte hochladen/verändern. Tut mir leid für die Verspätung.\n\nKurs Update: 18.07.2020 - Abschnitt Logging mit Log4J2 und logging ist jetzt auch verfügbar\nKurs Update: 17.07.2020 - Abschnitt DataDriven Tests ist jetzt auch Verfügbar\nKurs Update: 08.07.2020 - Initial Commit\n\n\nDu hast Interesse Testautomatisierung mit Selenium zu lernen aber hast noch keine Programmiererfahrung? Kein Problem! Ich biete dir in diesem Kurs einen Crash Kurs in Python und Java an, damit du die Grundlegenden Methodiken kennst, um professionelle Selenium Tests zu entwickeln.\nIch biete allen Kursteilnehmern einen langzeit Support an. Entweder du nutzt das Frage-Antwort Board von Udemy oder nimmst direkt Kontakt mit mir über Email oder Skype auf.\n**** Test-Applikationen für alle Tests**** Für meine Beispiele nutze ich Webapplikationen die auf einem eigenen Testportal für dich bereitgestellt werden. Du kannst die Tests aus meinen Lektionen problemlos nachbauen. Dieses Portal werde ich mit weiteren Tests erweitern.\n\n\nDieser Kurs deckt folgende Themen ab: Entwicklungsgrundlagen in Java und Python + Selenium Webdriver + Experten Selenium Techniken + Framework design ( JUnit, PyUnit, TestNG, Page Object Model, pip, Maven, Jenkins, Excel Datadriven, Cucumber, log4j , Docker) + Selenium Grid + Selenium Grid und Docker + Selenium Test Server. Außerdem erhältst du langzeit Support (Auf Anfrage mit skype) + Materialien +  Zugriff auf ein Testportal\n\n***************************************************************************************************\nWas unterscheidet meinen Kurs von den anderen Seleniumkursen?\nFür meinen Kurs benötigst du keine Vorkenntnisse. Ich biete den Kurs für Java und Python an. Und zu beiden Programmiersprachen, findest du in meinem Kurs jeweils einen Crash Kurs.\nAußerdem biete ich dir ein ganzes Testportal mit Beispielseiten an, auf dass du zugreifen kannst.\n\n\nLehrplan walkthrough\nHier findest du die Inhalte, die du von Grund auf lernen wirst.\n1. Java in Verbindung mit Selenium\n2. Python in Verbindung mit Selenium\n3. Installation einer IDE (Eclipse + PyCharm)\n4. Page Object Model\n5. Aufbau von Unit-Tests\n6. Lokatoren – Speziell XPath, CSS Selector\n7. Selenium Webdriver – Hauptfokus\n8. Tests mit mehreren Browser\n9. Selenium Server – Remote Webdriver\n10.Selenium Grid mit Docker\n11.PyUnit\n12.JUnit\n13.Parameterized\n14.TestNG\n15.Maven, pip\n16.Jenkins\n17.Log4j\n18.Cucumber\n\n\nFalls du etwas in meinen Inhalten vermisst, lass es mich wissen. Schreib mir einfach eine Nachricht und ich werde die Inhalte überarbeiten.\nFalls du irgendwelche Fragen hast oder Hilfe benötigst, kannst du gerne einen Post im QA Board hinterlassen. Ich werde versuchen, dir so schnell es geht zu antworten.\nWillkommen an Board!",
      "target_audience": [
        "Angehende Software Tester",
        "Software Tester",
        "Java-Entwickler",
        "Python-Entwickler",
        "Web-Entwickler",
        "Personen, die sich für Testautomatisierung interessieren",
        "Personen die sich für Browserautomatisierung interessieren"
      ]
    },
    {
      "title": "ISTQB CTFL v4 - دليلك لاجتياز شهادة اختبار البرمجيات",
      "url": "https://www.udemy.com/course/istqb-ctfl-v4/",
      "bio": "ابدأ رحلتك في مجال اختبار البرمجيات وتعلّم مفاهيم جودة البرمجيات",
      "objectives": [
        "مهارات مختبر البرمجيات",
        "الحصول على شهادة ISTQB CTFL v4",
        "أنواع اختبارات البرمجيات",
        "التعامل مع الاخطاء والتقارير"
      ],
      "course_content": {
        "أساسيات الاختبارات": [
          "ما هي اختبارات البرمجيات",
          "أهمية اختبارات البرمجيات",
          "اختبر فهمك",
          "المبادئ السبعة لاختبار البرمجيات",
          "اختبر فهمك",
          "أنشطة ومهام الاختبار ، والأدوار في الاختبارات",
          "اختبر فهمك",
          "التتبع بين أسس الاختبار ومخرجات أعمال الاختبار",
          "المهارات الأساسية لمهندس الاختبارات",
          "اختبر فهمك"
        ],
        "الاختبار طوال دورة حياة تطوير البرمجيات": [
          "نماذج دورة حياة تطوير البرمجيات",
          "تأثير دورة حياة تطوير البرمجيات في الاختبارات",
          "اختبر فهمك",
          "الاختبارات كموجه لعمليات التطوير",
          "نهج التحول الى اليسار، عمليات المراجعة وتحسين العمليات",
          "اختبر فهمك",
          "مستويات وانواع الاختبارات",
          "اختبار التأكيد واختبار الانحدار واختبارات الصيانة",
          "اختبر فهمك"
        ],
        "الاختبارت الثابتة": [
          "مبادئ الاختبارات الثابتة",
          "أنواع عمليات المراجعة وعوامل نجاحها",
          "اختبر فهمك",
          "عمليات المراجعة والتغذية الرجعية وأنشطتها",
          "الأدوار والمسؤوليات في عمليات المراجعة",
          "اختبر فهمك"
        ],
        "الاختبارات الديناميكية": [
          "تقنيات الاختبارت الديناميكية",
          "تقنيات اختبار الصندوق الأسود",
          "تقسيم التكافؤ",
          "اختبر فهمك",
          "تحليل القيمة الحدية",
          "اختبر فهمك",
          "جدول القرار",
          "اختبر فهمك",
          "مخطط وجدول انتقال الحالة",
          "اختبر فهمك",
          "تقنيات اختبار الصندوق الابيض",
          "اختبار العبارات واختبار الفروع",
          "اختبر فهمك",
          "تقنيات الاختبار القائمة على الخبرة",
          "أساليب الاختبار القائمة على التعاون",
          "اختبر فهمك"
        ],
        "إدارة أنشطة الاختبارات": [
          "الغرض من التخطيط للاختبارات",
          "مساهمة مهندس الاختبارت في التخطيط لجولات التطوير ولمرحلة الإطلاق",
          "معايير الدخول ومعايير الخروج من الاختبار",
          "اختبر فهمك",
          "تقنيات التقدير والتوقع",
          "تحديد أولوية حالات الاختبار",
          "اختبر فهمك",
          "هرم الاختبار",
          "رباعيات الاختبار",
          "اختبر فهمك",
          "إدارة المخاطر",
          "إدارة المخاطر 2",
          "اختبر فهمك",
          "مراقبة الاختبارات والتحكم فيها وانهاء أعمال الاختبار",
          "المقاييس المستخدمة في عمليات الاختبارات",
          "اختبر فهمك",
          "تقارير الاختبارات",
          "التبليغ والتواصل بشأن حالة الاختبار",
          "اختبر فهمك",
          "إدارة الاعدادات",
          "إدارة العيوب",
          "اختبر فهمك"
        ],
        "الأدوات في الاختبارات": [
          "الأدوات الداعمة للاختبارات",
          "أدوات أتمته الاختبارات",
          "اختبر فهمك"
        ]
      },
      "requirements": [
        "No requirements"
      ],
      "description": ": وصف الدورة\nهل ترغب في دخول عالم اختبار البرمجيات والحصول على أول شهادة دولية معترف بها؟\nهذه الدورة مصممة خصيصاً لك!\nISTQB CTFL (v4) في هذه الدورة، نقدم شرحاً وافياً وشاملاً لمحتوى شهادة\n، وبأسلوب مبسط ومنظم يناسب المبتدئين والمحترفين على حد سواء\n\n\nماذا ستتعلم في هذه الدورة؟\nأساسيات اختبار البرمجيات ومفاهيم الجودة\nدورة حياة الاختبار والأنشطة المرتبطة بها\nتقنيات تصميم الاختبارات\nالأدوات الشائعة في اختبار البرمجيات\nالمبادئ الأخلاقية في عالم اختبار البرمجيات\nلماذا تأخذ هذه الدورة؟\nISTQB CTFL v4 تغطية شاملة لمنهج\nأمثلة وتمارين واقعية\nإعداد قوي لاجتياز الاختبار الدولي\nمحتوى عربي واضح وسهل الفهم\n: المتطلبات\nلا يشترط وجود خبرة تقنية مسبقة\nالمعرفة الأساسية باستخدام الحاسوب تكفي\nلمن هذه الدورة؟\nالطلاب والخريجون الجدد\nالراغبون في بدء مسيرتهم في اختبار البرمجيات\nمختبروا البرمجيات الراغبون في تطوير مهاراتهم والحصول على اعتماد رسمي\nمطوروا البرمجيات الراغبين في الاطلاع على مجال جودة البرمجيات\nمحللوا الاعمال ومدراء المشاريع واصحاب الاعمال وغيرهم\n\n\n\n\nما الذي يتم تدريسه بشكل أساسي في هذه الدورة؟\nISTQB Certified Tester Foundation Level v4 (CTFL v4)،  تُركّز الدورة بشكل أساسي على شرح مفصّل لمنهج\n:  بما يشمل ما يلي\nمبادئ اختبار البرمجيات\nالنماذج المختلفة لدورة حياة التطوير\nتقنيات تصميم الاختبارات\nالإدارة الفعالة للاختبارات\nاستخدام الأدوات الخاصة بالاختبار\nوذلك بهدف تأهيل المتعلم لاجتياز اختبار الشهادة المعتمد بكل ثقة.",
      "target_audience": [
        "Beginners software engineer in testing",
        "Experience software engineer who want to understand istqb in arabic"
      ]
    },
    {
      "title": "React Nextjs-Testing Library Jest Full Project Test بالعربي",
      "url": "https://www.udemy.com/course/react-nextjs-testing-library-jest-full-project-test/",
      "bio": "اختبار المشاريع بالكامل الاساسيات والتطبيق على مشاريع عملية لمطورين الرياكت- NextJS Testing Library & Jest , Redux",
      "objectives": [
        "Testing For Front-End Developers (React Nextjs) -اساسيات الاختبار لمطورين الويب",
        "Testing Types - انواع الاختبارات بامثله عملية",
        "Jest with React Testing Library In Details",
        "Apply Testing With Real Projects - تطبيق عملي داخل الكورس على مشاريع حقيقه",
        "Todo Task List App with Full Testing",
        "You will be able to specify when to use the testing In Your Project",
        "Take Your Skills To Another Level OF Testing",
        "NextJS Testing",
        "MSW Testing",
        "Fetch Data",
        "Redux & Redux Toolkit",
        "Routing In React",
        "Routing In NextJS"
      ],
      "course_content": {
        "هام قبل البدايه": [
          "قناه اليوتيوب",
          "في حاله مواجه مشكله في الكود",
          "تقييم الكورس"
        ],
        "Testing Fundamental (Jest-Testing Library)": [
          "01-Overview Waht Testing (بالعربي)",
          "02-Why Automated Testing (بالعربي)",
          "03-What Jest ? (بالعربي)",
          "04-What React Testing Library  (بالعربي)",
          "05-Types Of Automation Test (بالعربي)",
          "06-First Test Run (بالعربي)",
          "07-Explan Test Page (بالعربي)",
          "08-getByTestId-watchMode-filter (بالعربي)",
          "09-beDisabled-haveAttribute-haveText (بالعربي)",
          "10-React Testing -TDD(بالعربي)",
          "11-Fire Event Part 1(بالعربي)",
          "12-Fire Event Part 2 (بالعربي)",
          "13-Grouping-Only-Skip(بالعربي)",
          "14-Using Matchers(بالعربي)",
          "15-Asynnchronous Test(بالعربي)",
          "16-Queries Intro (بالعربي)",
          "17-Queries getBy Part 1 (بالعربي)",
          "18-Queries getBy Part 2(بالعربي)",
          "19-Queries getBy Part 3(بالعربي)",
          "20- Queries getAllBy Part 1 (بالعربي)",
          "21-React Testing - Queries getAllBy Part 2 (بالعربي)",
          "22-React Testing - Queries getAllBy Part 2 (بالعربي)",
          "23-React Testing - Queries queryBy (بالعربي)",
          "24-React Testing - Queries findBy (بالعربي)",
          "25-React Testing - UserEvent(بالعربي)",
          "26-React Testing - Mock Functions (بالعربي)"
        ],
        "Todo Tasks App Testing": [
          "01-Todo Task App Testing -Overview",
          "02-Todo Task App Testing -Test Cases",
          "03-Todo Task App Testing -Form Render Correctly",
          "04-Todo Task App Testing -Input Typing Value Change",
          "05-Todo Task App Testing -Error Message Displayed",
          "06-Todo Task App Testing -Add Item When Click Button",
          "07-Todo Task App Testing -Input Clear After Adding",
          "08-Todo Task App Testing -Item List Test Cases",
          "09-Todo Task App Testing -Render 0 Tasks When No Data",
          "10-Todo Task App Testing -Render 3 Tasks When Pass 3 Tasks",
          "11-Todo Task App Testing -Item Component Test Cases",
          "12-Todo Task App Testing - Item Component Render 1 Item",
          "13-Todo Task App Testing -Delete Button",
          "14-Todo Task App Testing -Done Button",
          "15-Todo Task App Testing -Edit Button",
          "16-Todo Task App Testing -Test All App"
        ],
        "Custom Matchers": [
          "01-Section Intro",
          "02-React Test - Within",
          "03-React Test - Custom Matsher Part 1.",
          "04-React Test - Custom Matsher Part 2"
        ],
        "Fetching Data (Mock Api)": [
          "01-Fetch Data Intro",
          "02-Fetch Data-Jest Mock Part 1",
          "03-Fetch Data-Jest Mock Part 2",
          "04-Fetch Data-Jest Mock Part 3",
          "05-Fetching Data - MWS Part 1",
          "06-Fetching Data - MWS Part 2 setupWorker vs setupServer",
          "07-Fetching Data - MWS Part 3",
          "08-Fetching Data - MWS Part 4",
          "09-Fetching Data - MWS Part 5",
          "10-Fetching Data - MWS Part 6 - setupWorker"
        ],
        "Testing Movies App With Redux": [
          "01-Section Intro",
          "02-Navbar - Ui Test",
          "03-Redux & Redux Toolkit Testing Part 1",
          "04-Redux & Redux Toolkit Testing Part 2",
          "05-Navbar - Ui Test Part 2",
          "06-Navbar - Search Test Part 1.",
          "07-Navbar - Search Test Part 2",
          "08-Navbar - Search Test Part 3",
          "09-Navbar - Search Test Part 4",
          "10-MovieList - First Load Test Part 1",
          "11-MovieList - First Load Test Part 2",
          "12-MovieList - No Data Found",
          "13-CardMovie - UI.",
          "14-CardMovie - Link Url-Fix Ui Error",
          "15-MovieDetalis - Part 1",
          "16-MovieDetalis - Part 2",
          "17-MovieDetalis - Part 3",
          "18-MovieDetalis - Part 4",
          "19-MovieDetalis - Part 5",
          "20-Pagination Component - Part 1",
          "21-Pagination Component - Part 2",
          "22-Pagination Component - Part 3",
          "23-Pagination Component - Part 4",
          "24-Pagination Component - Part 5",
          "25-Summary مهم"
        ],
        "Nextjs Testing": [
          "01-Section Intro",
          "02-Nextjs First Project Setup",
          "03-First Test Case",
          "4-difference between test in react and next",
          "05-Fetch Data Testing - Nextjs",
          "06-UseRouter - Test",
          "07-MSW-Nextjs",
          "8-Summary Nextjs"
        ]
      },
      "requirements": [
        "React Fundamental- اساسيات الرياكت",
        "Javascript Fundamental - اساسيات جافا سكربت"
      ],
      "description": "كورس موجه لمطورين الويب عموما ومطورين الرياكت خصوصا\nلتعليم اختبار المشاريع عن طريق مكتبه React Testing Library And Jest\nنبدا بتعليم معنى الاختبار وانواعه واهميته داخل المشاريع والشركات\nثم نبدا بتعليم اساسيات مكتبه Jest\nومكتبه React Testing Library\nوتطبيق امثله عليهم ثم تطبيق الاختبارات على مشروع عملي وهو Todo Tasks List App\nثم ننتقل للتطبيق على مشروع اكبر واكثر تعقيدا واكثر واقعيه\nوفيه تعامل مع Api\nوهو عباره عن موقع لعرض الافلام من علي الانترنت من قاعده بيانات جاهزه وعرض تفاصيل كل فيلم منفصل\nوالبحث داخل قاعده بيانات الافلام والتنقل بينها عن طريق صفحات التنقل\nكذلك عمل اختبار للموقع بالكامل وشرح كيفيه التعامل مع الاختبارات في اي موقع اخر حقيقي  سواء كان حجمه كبير ام صغير\nعمل اختبار لل ٍRedux And Redux Toolkit\nوشرح الفرق بينهم والتعامل معهم داخل اي مشروع رياكت او نكست\n\n\nثم ننتقل لشرح مكتبه ال MSW\nلشرح التعامل مع Fetching Data بجميع انواعها\nوالتعامل معها بطرق مختلفه وبامثله عديده\n\n\nاذا كنت مبتدى او متوسط المستوي او متقدم المستوي فان هذا الكورس موجه لك لينقل مهاراتك الى مرحله ومستوى اخر\nهذا الكورس موجه للمطورين لزياده مهارتهم وخبراتهم\n\n\nثم ننتقل في النهايه لشرح اطار عمل ال Next js\nوالذي هو يعتبر مبني علي React js\nسنقوم بشرح بالتفصيل الفرق بينه وبين الرياكت من ناحيه الاختبارات وال testing داخل مكتبه jest\nومكتبه react testing library\nوكيفيه التعامل في مشروع نكست او رياكت\nوكذلك عمل اختبارات لل Routing داخل النكست\nوعمل اختبارات لمكتبه ال MSW\nوعمل اختبارات للRedux  ReduxToolkit",
      "target_audience": [
        "For React Nextjs Developer - مطورين الويب عموما ومطورين الرياكت بصفه خاصة",
        "For every Developer looking to develop himself and raise his level",
        "If you are a beginner in React - اذا كنت مبتدى",
        "If you are a intermadiate in React - اذا كان مستواك متوسط",
        "If you are advanced in React - اذا كان مستواك عالي"
      ]
    },
    {
      "title": "초보자를 위한 Postman 및 API 테스트 빠른 입문",
      "url": "https://www.udemy.com/course/introduction-postman-api-korean/",
      "bio": "Postman을 빠르게 익히고 REST API 및 테스트를 빠르게 배우세요. 20%의 시간 안에 필요한 것의 80%를 배웁니다.",
      "objectives": [
        "Postman을 사용한 API 소개",
        "Postman 시작하기",
        "HTTP 메시지 개요",
        "쿼리 매개변수, 경로 변수 및 헤더 사용",
        "JSON 읽기/쓰기",
        "기본 API 테스트 작성",
        "Postman 변수 작업",
        "간단한 워크플로우 만들기",
        "HTTP 요청 메서드 배우기: GET, POST, PATCH 및 DELETE"
      ],
      "course_content": {
        "과정 소개": [
          "강의 자료",
          "Postman 설치 방법",
          "Postman 업데이트하기",
          "강의 소개",
          "API에 대한 빠른 소개",
          "첫 번째 Postman 요청",
          "HTTP 프로토콜 설명"
        ],
        "Postman에서 요청 생성하기": [
          "포스트맨 컬렉션",
          "포스트맨 컬렉션 퀴즈",
          "HTTP 요청에서 쿼리 매개변수",
          "쿼리 매개변수",
          "과제 #1 - 쿼리 매개변수",
          "과제 #1 - 쿼리 매개변수",
          "과제 #1 - 쿼리 매개변수 - 해답",
          "경로 변수",
          "쿼리 매개변수와 경로 변수",
          "API 인증",
          "HTTP 상태 코드 문제 해결",
          "HTTP 헤더",
          "JSON 형식 설명",
          "과제 #2",
          "과제 #2 안내 - 단계별 지침",
          "과제 #2 - 해결책",
          "GET vs POST",
          "요청에서 랜덤 데이터 사용 (랜덤 변수)",
          "Postman 사용하지 않는 방법",
          "과제 #3 - 더 많은 요청 추가",
          "과제 #3 - 단계별 지침",
          "과제 #3 - 더 많은 요청 추가 - 해결책",
          "PATCH 요청 방법",
          "DELETE 요청 방법"
        ],
        "자동화 준비하기": [
          "자동화 기초",
          "첫 번째 API 테스트",
          "과제 #4 - 상태 코드 테스트 추가하기",
          "과제 #4 - 단계별 지침",
          "과제 #4 - 상태 코드 테스트 추가하기 - 해결책",
          "Postman 변수",
          "스크립트에서 Postman 변수 사용하기",
          "Postman 변수",
          "응답에서 데이터 추출하기",
          "퀴즈 - JSON 응답 처리하기",
          "과제 #5 - 동적으로 변수 설정하기",
          "과제 #5 - 단계별 지침",
          "과제 #5 - 동적으로 변수 설정하기 - 해결책",
          "객체에 대한 단언",
          "과제 #6",
          "과제 #6 - 단계별 지침",
          "과제 #6 - 해결책",
          "과제 #7",
          "과제 #7 - 단계별 지침",
          "과제 #7 - 해결책",
          "과제 #8",
          "과제 #8 - 단계별 지침",
          "과제 #8 - 해결책",
          "JavaScript 기초 배우기"
        ],
        "자동화된 컬렉션 실행": [
          "컬렉션 수동 실행",
          "컬렉션 러너",
          "요청 실행 순서",
          "Postman 모니터",
          "Newman - Postman CLI 도구",
          "Newman을 사용한 HTML 보고서",
          "자동화 개요"
        ]
      },
      "requirements": [
        "Postman과 API를 배우고자 하는 열망.",
        "Windows, macOS 또는 Linux에 Postman을 설치할 수 있는 가능성.",
        "프로그래밍 경험이 필요 없지만, 나중에 유용할 수 있습니다."
      ],
      "description": "새로운 직책이나 면접을 위해 Postman 및 API에 대해 배워야 합니까?\n당신만이 처음이 아닙니다. 현재 REST API는 어디에나 존재하지만 어디서 시작해야 할지 모를 수 있습니다. API에 완전히 초보자이고 Postman을 사용하여 API에 대한 간단한 소개를 찾고 있다면, 이 과정이 당신을 위한 것입니다.\nAPI란 무엇입니까?\n오늘날 모든 IT 시스템은 주로 JSON이라는 형식을 사용하여 데이터를 교환하는 API를 통해 상호 연결됩니다.\n그러나 API에 대해 배우는 것은 쉽게 혼란스러워질 수 있습니다. 서로 다른 HTTP 메서드, 헤더, 쿠키, 파일 업로드 처리 또는 API 키, 토큰, OAuth를 사용한 인증 등 많은 것을 알아야 합니다.\n이때 Postman이 필요합니다! Postman은 필요한 HTTP 메서드와 매개변수를 사용하여 요청을 매우 빠르게 생성하고, 요청을 제출하고 결과를 쉽게 검사할 수 있게 해줍니다.\nPostman은 API를 개발하는 경우에도 도움이 될 수 있습니다! 이 과정은 테스트 엔지니어와 소프트웨어 개발자를 위해 만들었습니다.\nPostman은 API 개발 중뿐만 아니라 API가 완료된 후에도 여전히 API가 의도한 대로 작동하는지 확인하는 테스트를 실행함으로써 도움이 될 수 있습니다.\n이 초보자를 위한 Postman 속성 과정에서는 Postman의 기능을 탐색하고, 요청을 생성하고, 간단한 워크플로를 구축하는 것부터 시작합니다. 그런 다음 API 테스트를 작성하고 Postman Collection Runner와 Newman을 사용하여 Postman 컬렉션을 자동으로 실행하는 방법을 계속합니다.\n이 과정이 나에게 맞나요?\nPostman을 빠르게 익히고 API를 사용해야 하지만 시간이 많지 않다면, 이 과정은 매우 짧은 시간에 매우 멀리 나아가게 할 것입니다. 시작하는 데 많은 것이 필요하지 않지만 3시간 이상의 투자가 필요합니다. 내용을 시청하는 것만으로는 필요한 기술을 개발하는 데 충분하지 않을 수 있습니다. 작업과 연습 과제를 수행해야 합니다.\n\n\n그럼 배울 내용을 살펴보겠습니다:\n간단한 요청으로 시작하기\nGET, POST, PUT 및 DELETE와 같은 HTTP 메서드 사용\nGET과 POST의 차이점 이해\n쿼리 매개변수와 경로 변수를 사용\nHTTP 헤더 이해\n인증 처리 배우기(예: Bearer 토큰 사용)\nJavaScript로 API 테스트 작성 시작\n테스트를 컬렉션으로 정리하고 팀과 공유\n컬렉션 러너 또는 Newman을 사용하여 API 테스트 실행\n\n\n이 과정을 마친 후 Postman에 대한 개요를 갖게 되며 이후에 더 배우고 싶은 영역을 결정할 수 있습니다.\nPostman을 배우고 싶으신가요? 오늘 이 과정에 가입하세요!",
      "target_audience": [
        "이 과정은 테스트 엔지니어와 개발자를 대상으로 합니다.",
        "Postman에 대한 간단한 소개가 필요한 누구나"
      ]
    },
    {
      "title": "Primeiros passos com Selenium | C# | NUnit | VSCode",
      "url": "https://www.udemy.com/course/primeiros-passos-com-selenium-c-nunit-vscode/",
      "bio": "Primeiros passos com Selenium | C# | NUnit | VSCode",
      "objectives": [
        "Utilizar Selenium com VSCode",
        "Conceitos básicos do Selenium com C#",
        "Básico de NUnit",
        "Seletores"
      ],
      "course_content": {
        "Introdução": [
          "Recados iniciais",
          "Introdução",
          "Avisos"
        ],
        "Mão na massa": [
          "CSS Selectors",
          "XPath Selectors",
          "Iniciando",
          "Listas",
          "Hooks",
          "Waits",
          "Page Object",
          "Bônus",
          "Conclusão"
        ]
      },
      "requirements": [
        "Conhecimento de alguma linguagem de programação"
      ],
      "description": "Quando se fala de qualidade de software, sabemos que a etapa de teste é imprescindível. O software deve fazer o que o cliente precisa de maneira confiável, segura, eficiente e flexível. Porém realizar testes de forma manual gasta tempo e dinheiro, por isso devemos dar a devida importância de se realizar os testes automatizados.\nPara nos auxiliar, existem as ferramentas de automação, que simulam a interação que um usuário teria, realizando os testes automaticamente quantas vezes forem necessárias. Uma dessas ferramentas é o Selenium, tema deste artigo.\nSelenium é um conjunto de ferramentas de código aberto multiplataforma, usado para testar aplicações web pelo browser de forma automatizada. Ele executa testes de funcionalidades da aplicação web e testes de compatibilidade entre browser e plataformas diferentes. O Selenium suporta diversas linguagens de programação, como por exemplo C#, Java e Python, e vários navegadores web como o Chrome e o Firefox.\n\n\nC# é uma linguagem de programação criada pela Microsoft como parte da plataforma .NET. Por ter uma sintaxe parecida com o Java e C++, o C# pode ser indicado mesmo para programadores iniciantes, que já conhecem a programação Orientada a Objetos. Com ela podemos criar desde aplicações web, desktop, mobile e também jogos eletrônicos.",
      "target_audience": [
        "Devs, QAs"
      ]
    },
    {
      "title": "Formation de test des API/WEBSERVICES avec SOAPUI de A à Z",
      "url": "https://www.udemy.com/course/formation-de-test-des-apiwebservices-avec-soapui-de-a-a-z/",
      "bio": "Maitriser le test des API / web services : SOAP et REST",
      "objectives": [
        "À la fin de ce cours, vous obtiendrez une connaissance complète des services Web, des API et leurs fonctionnalités",
        "Vous apprendrez à tester les Webservices et l'API REST à l'aide de SoapUI",
        "Comprendre le principe des API / webservices",
        "La différence entre les API et les web services",
        "Comprendre les API SOAP",
        "COMPRENDRE LES API REST",
        "Vous comprendrez l’importance des webservices",
        "Vous comprendrez comment générer des rapports soignés pour les résultats d'exécution",
        "Vous comprendrez la création d’une suite de test – les cas de test et les étapes de test",
        "Vous comprendrez l’exécution des cas de test sur les soap api",
        "Vous comprendrez l’exécution des cas de test sur les Rest api",
        "Capable d'implémenter SoapUI sur votre lieu de travail ou se préparera également à une opportunité de test d'API bien rémunéré"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "C'est quoi une API / WEB SERVICES",
          "Les avantages des API",
          "La différence entre API & WEB SERVICES",
          "API : le protocole HTTP - LES METHODES - LES CODES DE REPONSES",
          "Introduction aux API REST & SOAP",
          "Les API REST :",
          "Les API SOAP :",
          "REST & SOAP : QUE CHOISIR ?",
          "C'est quoi SOAPUI ?",
          "Installation de SOAPUI",
          "SOAPUI : explorer l'outil",
          "Premier exemple d'une API SOAP :",
          "Merci",
          "API SOAP : Création d'une suite de test :",
          "API SOAP : Execution d'un cas de test :",
          "API SOAP : Execution d'un cas de test avec les assertions",
          "API SOAP : Comment générer la documentation",
          "Exercice : TEST D’UNE API SOAP",
          "Correction Exercice : TEST D’UNE API SOAP",
          "SOAP UI : Custom Properties",
          "Exercice Custom Properties",
          "Correction exercice Custom Properties",
          "Custom Properties du test case",
          "Custom Properties",
          "Test de bout en bout ( end to end) avec Property Transfer",
          "API REST : premier exemple",
          "API REST -EXECUTION D'UN CAS DE TEST AVEC ASSERTIONS",
          "Exercice : TEST D’UNE API REST",
          "Correction Exercice : TEST D’UNE API REST",
          "Exercice N°2: TEST D’UNE API",
          "Correction Exercice N°2 : TEST D’UNE API",
          "CRUD : consultation et ajout des données",
          "REST API : CRUD & Ajout du TOKEN :",
          "REST API :Méthode Pöst",
          "Exercice : Ajout des commandes avec une API rest",
          "Correction exercice : Ajout des commandes avec une API rest",
          "REST API : Modification",
          "REST API : Suppression",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Q/R :",
          "Félicitations"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Formation  de test des API avec SOAPUI de A à Z\nMaitriser le test des API / web services : SOAP et REST\nÀ la fin du cours, vous serez maîtrisé dans les tests d'API REST / Webservices et pourrez l'implémenter avec succès sur votre lieu de travail ou vous atterrirez sûrement sur un emploi bien rémunéré\nAlors, qu'est-ce qui rend ce cours unique sur le marché ?\nNous supposons que les étudiants n'ont aucune expérience des tests d'API et commencent chaque sujet à partir de zéro et des bases.\n·Que sont les Webservices et les API\n·Comment tester les services Web à l'aide de l'interface utilisateur Soap\nTest des services et des API à l'aide de l'outil SoapUI\nQu'est-ce que l'API Rest\nTest des API REST à l'aide de l'outil SoapUI\nQu'est-ce que l'API SOAP\nTest des API SOAP à l'aide de l'outil SoapUI\nCréation d’une campagne de test avec les suites de test, les cas de test et les étapes de test\nFiltrer les cas de test en ajoutant les assertions\nÀ la fin de ce cours, vous comprendrez les spécifications du service Web et de l'API et rédigerez toutes sortes de cas de test efficaces pour les services dans Soap ui en utilisant toutes les fonctionnalités disponibles sur l'outil.\n\n\n\n\nCouverture du cours\n\n\nConfigurer un exemple d'application pour la pratique\n\n\nConfigurer SoapUI\n\n\nCréer des requêtes de base (GET, POST, PUT, DELETE)\n\n\nRédiger des cas de test de bout en bout\n\n\nAjouter des assertions aux cas de test\n\n\nApprenez différentes étapes dans SoapUI\n\n\nApprenez les bases pour faire progresser les scripts Groovy",
      "target_audience": [
        "Toute personne souhaite maitriser le test des API / web services : SOAP et REST",
        "Testeurs manuels qui veulent apprendre le test des services Web",
        "Tout diplômé qui souhaite lancer sa carrière dans les tests",
        "Toute personnes la recherche d'opportunités dans les tests de logiciels / tests d'API",
        "Testeurs manuels à la recherche d'une opportunité dans les API / WebServices",
        "Testeurs d'automatisation fonctionnelle pour étendre leurs scripts sur les webservices",
        "Des testeurs d'intrusion pour comprendre les failles de sécurité"
      ]
    },
    {
      "title": "Robot Framework com Playwright e GitHub Actions",
      "url": "https://www.udemy.com/course/robot-framework-com-playwright-e-github-actions/",
      "bio": "Automação de Testes Web com Robot Framework + Playwright (Library Browser) + Execução no GitHub Actions",
      "objectives": [
        "Conhecerá a Library Browser do Robot Framework que utiliza o Playwright para automação de testes WEB",
        "Conhecerá as diferenças entre Library Browser e Library SeleniumLibrary",
        "Aprenderá na prática os principais recursos da Library Browser",
        "Aprenderá na prática construir uma pipeline CI do GitHub Actions para executar os testes"
      ],
      "course_content": {
        "Módulo 1 - Introdução": [
          "Overview do Curso",
          "Recursos das Aulas",
          "O que é o Playwright?",
          "Playwright x Selenium",
          "Robot Framework Browser Library"
        ],
        "Módulo 2 - Instalações": [
          "Instalando o Python",
          "Instalando o Robot Framework",
          "Visual Studio Code e Plugin",
          "Instalando as Dependências",
          "Instalando a Library Browser",
          "Instalações Complementares"
        ],
        "Módulo 3 - Web Testing com a Browser na prática": [
          "Criando a Estrutura Inicial",
          "Lidando com o Navegador: New Browser, New Context e New Page",
          "Seletores e ferramenta Record Selector",
          "Interagindo com os Elementos",
          "Seletores em Cascata",
          "Conferências - Parte 1",
          "Conferências - Parte 2",
          "Mais interações: Dropdown",
          "Mais interações: iFrames",
          "Mais interações: Tabelas",
          "Mais interações: Abas",
          "Desafio: Automatizar um teste do zero",
          "Solução do Desafio",
          "Bora praticar mais: Desenvolva um teste para cadastrar e consultar produto"
        ],
        "Módulo 4 - Recursos da Library Browser": [
          "Evidências: Gravando Vídeo e Trace",
          "Configurações da Library",
          "Requisições HTTP - Parte 1",
          "Requisições HTTP - Parte 2",
          "Storages por Contexto"
        ],
        "Módulo 5 - Executando os Testes no CI do GitHub Actions": [
          "Criando uma conta no GitHub e subindo o código",
          "Overview do GitHub Actions",
          "Estrutura Básica do Workflow",
          "Execução dos testes: Criando o nosso Workflow",
          "Execução dos testes: Criando o Step de instalações",
          "Execução dos testes: Criando o Step de execução",
          "Execução dos testes: Artifacts",
          "Execução dos testes: Action de Summary",
          "Execução dos testes: Matriz",
          "Execução dos testes: Criando um workflow manual",
          "Desafio: Crie um novo Workflow",
          "Solução do Desafio"
        ],
        "Conclusão": [
          "Conclusão",
          "Links Úteis"
        ]
      },
      "requirements": [
        "Conhecimento prévio de Robot Framework",
        "Conhecimento em testes de aplicações WEB",
        "Conhecimento em Testes de Software"
      ],
      "description": "O curso Robot Framework com Playwright e GitHub Actions é uma oportunidade única de aprender a utilizar três ferramentas modernas e poderosas para automação de testes de software:\n\n\nO Robot Framework é uma plataforma de automação de testes de software que oferece diversas vantagens, como a possibilidade de criar testes de forma rápida e fácil, através de uma linguagem simples e intuitiva, reusabilidade de código, facilidade de manutenção de testes, geração de relatórios detalhados, além de ser uma ferramenta de código aberto e de fácil aprendizado.\nJá o Playwright é um poderoso framework de automação de testes de interface do usuário para aplicações web, que permite criar testes rápidos, confiáveis e robustos, capazes de simular a interação de um usuário real com a aplicação. O Playwright tem suporte multi-navegador (Chrome, Firefox, Safari e Edge) sem a necessidade de webdrivers.\nPor fim, o GitHub Actions é uma plataforma de integração contínua e entrega contínua (CI/CD) que permite automatizar a execução de tarefas e testes, integrando diretamente com o GitHub. Com o GitHub Actions, é possível executar testes de forma automática a cada nova alteração no código, garantindo a qualidade e integridade do software em todas as etapas do processo de desenvolvimento.\n\n\nAo combinar o poder do Robot Framework, Playwright e GitHub Actions, é possível criar uma estratégia de automação de testes WEB completa e eficiente, que ajudará a garantir a qualidade do seu software de forma rápida, fácil e confiável. Este curso oferece a oportunidade de aprender a utilizar essas ferramentas em conjunto, proporcionando conhecimento e habilidades valiosas para profissionais de teste e desenvolvimento de software.",
      "target_audience": [
        "Profissionais de Testes de Software",
        "Profissionais de Desenvolvimento de Software que automatizam testes funcionais",
        "Curiosos e Estudiosos do Robot Framework para automação de testes"
      ]
    },
    {
      "title": "Автоматизация мобильного тестирования с Robot Framework",
      "url": "https://www.udemy.com/course/robotframework-mobile/",
      "bio": "Научитесь писать мобильные автотесты, не обладая навыками программирования, используя Robot Framework",
      "objectives": [
        "Разработка автотестов для мобильных устройств в связке Robot Framework / Appium",
        "Создание проектов по автоматизации с нуля",
        "Основные конструкции традиционного программирования",
        "Настройка реальных устройств и эмуляторов для работы с автотестами",
        "Использование Appium Inspector для поиска локаторов элементов",
        "Написание реальных тестов для настоящих приложений"
      ],
      "course_content": {
        "Знакомимся и настраиваемся": [
          "Почему Robot Framework?",
          "Установка. Вступление",
          "Установка инструментов. Windows",
          "Установка инструментов. Mac",
          "Настройка среды разработки. Visual Studio Code",
          "Настройка среды разработки. PyCharm",
          "Настройка реального девайса",
          "Настройка эмулятора",
          "Тест. Про Robot Framework, установку и настройку"
        ],
        "Начинаем кодить": [
          "Первый тест",
          "Приложение и репозиторий с тестами",
          "Построение архитектуры",
          "Знакомство с Appium Inspector",
          "Первый тест, архитектура, Appium Inspector"
        ],
        "Проходим онбординг": [
          "Клики и ожидания",
          "Работа с переменными",
          "Предусловия и постусловия",
          "Условные операторы",
          "Тест. Проходим онбординг",
          "Проект № 1. Онбординг"
        ],
        "Пишем реальные тесты": [
          "Ввод данных",
          "Переменные окружения",
          "Жестовая навигация. Скролл, свайп",
          "Продвинутые нажатия (тапы)",
          "Циклы FOR и WHILE",
          "Запуск, перезапуск, остановка приложения",
          "Тест. Пишем реальные тесты",
          "Проект № 2. Сторис"
        ],
        "Углубляем знания": [
          "О чем раздел?",
          "Продвинутые свайпы",
          "Скриншоты и запись экрана",
          "Заключение",
          "Обратная связь"
        ]
      },
      "requirements": [
        "Базовые знания тест-дизайна (написание тест-кейсов) и видов тестирования",
        "Наличие компьютера на Windows или Mac"
      ],
      "description": "Если ты хочешь научиться автоматизировать мобильные приложения, при этом не имея никакого опыта автоматизации (и программирования), то тебе стоит присмотреться к Robot Framework - должно быть, самому простому и понятному инструменту для написания автотестов.\nЭтот курс призван показать, что обучение автотестам может быть простым, интересным и понятным. Никакой предыдущий опыт не нужен - все будет рассказано и разложено по полочкам для абсолютных новичков.\nПочему стоит выбрать Robot Framework?\nНе нужно учить языки программирования. Для понимания тестов хватит самых-самых основ английского языка (если вы понимаете перевод таких словосочетаний, как Click Element и Wait Until Element Is Visible, проблем с пониманием тестов не будет)\nНе нужно изучать разные инструменты для автоматизации на Android и iOS - достаточно один раз изучить Robot Framework.\nНе нужно подключать дополнительные инструменты для отчетности и логирования - все будет установлено за вас, а сами отчеты будут автоматически создаваться - вам останется лишь показывать тем, кому они нужны.\nЗахотите тестировать не только мобильные приложения? В Robot Framework есть библиотеки для тестирования веба, API, баз данных и многого другого - и вам уже будет проще их изучить, имея базу из этого курса.\nИнструментом пользуются крупные российские (например, Рамблер) и зарубежные компании. Найти работу с ним вполне реально!\nВ рамках курса мы научимся создавать и запускать тесты как на реальных девайсах, так и на эмуляторах. Наши тесты будут разной сложности сложности, начиная от совсем простых - \"нажми сюда, подожди этот элемент, нажми на него\", до куда более продвинутых - с использованием особенностей мобильных устройств - жестовой навигации (скролл, свайп, зум), взаимодействия с приложением и с аппаратными функциями телефона (запись экрана, скриншоты, переключение громкости, поворот экрана).",
      "target_audience": [
        "Для тестировщиков, которые хотят погрузиться в волшебный мир мобильных автотестов с нуля"
      ]
    },
    {
      "title": "C# .NET: Testy jednostkowe i integracyjne + praktyka",
      "url": "https://www.udemy.com/course/c-net-testy-jednostkowe-i-integracyjne/",
      "bio": "Kompletny kurs pisania testów automtycznych w C# (.NET) z wykorzystaniem FluentAssertions, Moq + zadania praktyczne",
      "objectives": [
        "pisać testy jednostkowe w xUnit z użyciem bibliotek Moq i FluentAssertions",
        "pisać testy integracyjne dla projektów webowych korzystająć z WebApplicationFactoryBuilder",
        "Mockować bazę danych jako entity framework InMemoryDatabase",
        "Wykonywać testy integracyjne wymagające autentykacji i autoryzacji użytkowników",
        "Dobrych praktyk pisania testów automtycznych"
      ],
      "course_content": {
        "Wstęp": [
          "Powitanie",
          "Discord",
          "Darmowe materiały",
          "Oglądaj kurs w Full HD",
          "Wprowadzenie",
          "Piramida testów",
          "Testy automatyczne",
          "Frameworki do pisania testów w .NET"
        ],
        "Pierwsze testy automatyczne": [
          "Utworzenie projektu testowego xUnit",
          "Pierwszy test",
          "Debuggowanie testów",
          "Polecenie dotnet test",
          "Ile asercji na test"
        ],
        "Testy jednostkowe": [
          "Testowanie determinatora",
          "Atrybut theory",
          "Parametryzacja testów",
          "Testowanie algorytmu BMI",
          "Wyjątki w testach",
          "Testowanie obiektów",
          "Fluent assertions",
          "Moq",
          "Testowanie metody void"
        ],
        "Testy jednostkowe - praktyka": [
          "Wprowadzenie",
          "Ćwiczenie StringHelper",
          "Rozwiązanie StringHelper",
          "Ćwiczenie BugFixing",
          "Rozwiązanie BugFixing",
          "Ćwiczenie pokrywanie się dat",
          "Rozwiazanie pokrywanie się dat"
        ],
        "Narzędzia do testowania": [
          "Atrybut DataMember",
          "Atrybut ClassMember",
          "TestOutputHelper",
          "Przypadki testowe z pliku JSON",
          "Customowy atrybut DataMember"
        ],
        "Testy integracyjne Web API": [
          "Omówienie projektu web API",
          "Setup Projektu Web API",
          "Utworzenie projetu Testow integracyjnych",
          "Testowanie metody publicznej",
          "Współdzielony kontekst testów",
          "Baza danych w pamięci",
          "Testowanie zapytania wymagającego uwierzytelnienia",
          "Testowanie walidacji zapytania",
          "Seedowanie danych testowych",
          "Testowanie rejestracji użytkowników",
          "Mockowanie serwisów",
          "Testowanie rejestracji zależności",
          "Testowanie walidatorów",
          "Walidator z zależnością",
          "Testy integracyjne: zadanie praktyczne"
        ],
        "Bonus": [
          "Migracja testów integracyjnych do .NET 6",
          "Szybkie tworzenie testów"
        ],
        "Testy jednostkowe i integracyjne MVC": [
          "Omówienie projektu MVC",
          "Lokalny setup projektu MVC",
          "Testy automatyczne MVC - wstęp",
          "CarWorkshop Tests",
          "CurrentUser Tests",
          "UserContext Tests",
          "Testy walidatora",
          "Testy CommandHandlera",
          "Testy mappera",
          "Podstawowe testy kontrolera",
          "Mockowanie zależności kontrolerów"
        ],
        "Co dalej": [
          "Roadmapa ASP.NET developera"
        ]
      },
      "requirements": [
        "Podstawowa znajomość języka C#"
      ],
      "description": "W tym kursie, przedstawię Ci technikę pisania testów automatycznych w języku C# - będą to testy jednostkowe i integracyjne.\nZ wykorzystaniem takich narzędzi jak xUnit, Moq, FluentAssertions czy InMemoryDatabase, będziemy w stanie napisać automatyzacje kodu, dzięki której będziemy mieć pewność, że nasz kod nie zawiera ukrytych bugów\n\nPodstawowa różnica między testowaniem ręcznym a automatycznym jest prosta. W przypadku testowania ręcznego człowiek jest odpowiedzialny za samodzielne testowanie funkcjonalności oprogramowania w sposób, w jaki zrobiłby to użytkownik. Testowanie automatyczne odbywa się za pomocą narzędzia do automatyzacji, dzięki czemu można poświęcić więcej czasu na zadania o większej wartości, takie jak testy eksploracyjne, jednocześnie automatyzując czasochłonne testy, takie jak testy regresji.\n\n\nZaletą testowania ręcznego jest to, że pozwala on ludzkiemu umysłowi wydobyć z testu spostrzeżenia, które w przeciwnym razie mogłyby zostać pominięte przez automatyzację testów. Testowanie automatyczne jest odpowiednie w przypadku dużych projektów, projektów, które wymagają ciągłego testowania tych samych obszarów oraz projektów, które przeszły już proces wstępnego ręcznego testowania.\n\nPo co pisać testy jakiekolwiek automatyczne?\n\nPrzede wszystkim będziemy mieć pewność, że kod który został pokryty testami automatycznymi, działa tak jak zakładamy. Na produkcji nie zaskoczą nas błędy, jeżeli napiszemy odpowiednie przypadki testowe. Mając zaimplementowane testy jednostkowe i integracyjne, to bez konieczności manualnego sprawdzania istniejących już funkcjonalności, będziemy mieć pewność, że nasze zmiany nie wpłynęły na działanie istniejących już funkcjnonalności. W ten sposób czas poświęcony na napisanie testów zwróci się niejednokrotnie.\n\n\nOprócz tego testy stanowią swego rodzaju dokumentacje kodu. Osoby które dołączają do projektu, na podstawie testów mogą stwierdzić jak dany kawałek kodu się powinnien zachować i jakie przykładowe rezultaty powinnien zwracać i w konkretnych przypadkach.\n\n\nOszczędzamy czas testerów manualnych.\nJak wiemy, czas to pieniądz  - czas wykonania każdego testu manualnego kosztuje. Odpowiednie testy redukują czas jaki testerzy poświęcają na sprawdzenie zmian po każdej zmianie w aplikacji. Bez testów automatycznych liczba drobiazgów, na jakich musiałby się skupić tester byłaby zdecydowanie większa.\n\nLepsza jakość kodu.\nPisząc testy automatyczne, często analizując dany kawałek kodu znajdziemy miejsce (funkcje/klasę) na jego ulepszenie stosując się do zasad SOLID czy wzorców projektowych.",
      "target_audience": [
        "Osoba ze znajomość języka C# chcąca nauczyć się pisania testów jednostkowych i integracyjnych"
      ]
    },
    {
      "title": "Automatización de APIS con Karate Labs + Jenkins desde Cero",
      "url": "https://www.udemy.com/course/automatizacion-de-apis-con-karate-labs-jenkins-desde-cero/",
      "bio": "Descubre cómo simplificar tu proceso de desarrollo con pruebas automatizadas de APIs y Jenkins",
      "objectives": [
        "Dominarás el uso de Karate DSL para escribir pruebas de API efectivas y funcionales.",
        "Aprenderás a implementar pruebas automatizadas en Jenkins, integrando Karate DSL en el flujo de trabajo de CI/CD para asegurar la calidad del software.",
        "Será capaz de crear pipelines de integración continua y despliegue continuo en Jenkins, que incluyan pruebas automatizadas de Karate DSL como parte integral",
        "Podrá identificar y solucionar problemas comunes en las pruebas de API con Karate DSL, además de mantener y actualizar las pruebas de API"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de programación",
        "Conocimientos básicos de pruebas de API",
        "Familiaridad con el entorno de Jenkins",
        "Conocimientos básicos de desarrollo de software"
      ],
      "description": "En este curso de Karate DSL con Jenkins, los participantes adquirirán habilidades sólidas en la automatización de pruebas de API y su integración en un flujo de trabajo de CI/CD utilizando la popular herramienta de automatización Jenkins. Los estudiantes aprenderán a escribir pruebas de API efectivas y funcionales utilizando Karate DSL y a implementar estas pruebas en un entorno de integración continua para garantizar la calidad del software en cada etapa del ciclo de vida de desarrollo.\nEl curso abordará desde los conceptos básicos de Karate DSL y su sintaxis hasta la creación de pipelines de CI/CD en Jenkins que incluyan pruebas automatizadas de API. Los participantes adquirirán habilidades prácticas en la resolución de problemas en las pruebas de API y aprenderán a mantener y actualizar las pruebas a medida que evoluciona el software.\nEste curso es ideal para desarrolladores de software y profesionales de la calidad del software que buscan mejorar sus habilidades en pruebas de API automatizadas y desean implementar un proceso sólido de integración continua y despliegue continuo en sus proyectos de desarrollo de software. Se espera que los participantes salgan del curso con la capacidad de mejorar significativamente la eficiencia y la calidad de sus proyectos de desarrollo de software a través de pruebas automatizadas de API integradas en sus flujos de trabajo de Jenkins.",
      "target_audience": [
        "Este curso está dirigido a desarrolladores de software y profesionales de la calidad del software que deseen mejorar sus habilidades en la automatización de pruebas de API utilizando Karate DSL en el entorno de Jenkins. Además, aquellos que estén familiarizados con conceptos básicos de programación y pruebas de software y que estén interesados en implementar pruebas automatizadas en sus flujos de trabajo de integración continua y despliegue continuo encontrarán valor en este curso."
      ]
    },
    {
      "title": "Jira + Xray: Aprenda a criar e gerir seu Plano de Teste",
      "url": "https://www.udemy.com/course/jira-xray-2024-aprenda-a-criar-e-gerir-seu-plano-de-teste/",
      "bio": "Guia Definitivo para a Criação e Gestão de Planos de Teste em 2024",
      "objectives": [
        "Introdução ao JIRA e Navegação Básica: Visão geral do que é o JIRA e sua importância. Como criar uma conta no JIRA. Navegação pela interface do JIRA.",
        "Configuração Inicial e Criação de Projeto: Configuração inicial do ambiente do JIRA. Criação de um projeto no JIRA. Personalização das configurações do projeto",
        "Boards Scrum e Fluxos de Trabalho: Criação de um board Scrum. Compreensão e personalização de fluxos de trabalho.",
        "Criação de Itens no JIRA: Criação manual de diferentes tipos de itens (épicos, histórias, bugs, etc.). Importação de itens através de arquivos CSV.",
        "Instalação e Configuração do Plugin Xray: O que é o plugin Xray e por que usá-lo. Instruções passo a passo para instalação e configuração.",
        "Tipos de Itens no Xray e Testes Manuais: Exploração dos tipos de itens oferecidos pelo Xray. Criação de testes manuais usando o Xray.",
        "Importação de Testes por CSV no Xray: Demonstração prática da importação de testes através de arquivos CSV.",
        "Execução de Testes e Rastreamento de Resultados: Como executar testes usando o Xray. Rastreamento e registro de resultados de teste.",
        "Trabalhando com Filtros, Dashboards e Relatórios: Criação de filtros personalizados. Construção de dashboards informativos. Exploração das opções de relatórios",
        "Gerenciamento de Planos de Teste no Xray: Criação e organização de planos de teste. Adição de testes a planos de teste.",
        "Execução de Testes em Planos de Teste: Execução de testes a partir de planos de teste. Rastreamento de progresso e resultados.",
        "Integração com o Ciclo de Desenvolvimento: Como integrar o JIRA e o Xray ao ciclo de desenvolvimento de software. Melhores práticas para colaboração de equipes"
      ],
      "course_content": {
        "Primeiros passos no JIRA": [
          "Bem-vindos",
          "Criando sua conta no JIRA",
          "Tipos de projetos no JIRA",
          "Tipos de cards"
        ],
        "Configurando o projeto do time de desenvolvimento": [
          "O que é Backlog",
          "Editando fluxo de trabalho",
          "Configurando colunas do board"
        ],
        "Criando itens no JIRA em lote": [
          "Criando itens no JIRA de forma manual",
          "Subindo arquivo csv",
          "[RESOLVIDO] Não encontrar projeto na importação em lote",
          "Criando a dupla rastreabilidade de itens",
          "Vinculando itens a sprint",
          "[RESOLVIDO] Problemas ao deletar itens"
        ],
        "Configurando seu Projeto de QA": [
          "Porque criar um Projeto de QA",
          "Criando e Configurando seu Projeto"
        ],
        "XRAY da instalação a configuração inicial no seu Projeto": [
          "O que são plugins",
          "O que é XRAY",
          "Como instalar plugin XRAY",
          "Como solucionar problema de instalação XRAY",
          "Como vincular plugin ao projeto",
          "Configurando itens que são testados",
          "Configurando coverage",
          "Tipos de escrita de teste no XRAY",
          "Configurando os ambientes de teste",
          "Configurando arquivos de Report"
        ],
        "Entendendo sobre a estrutura XRAY de teste": [
          "O que é Test Repository",
          "O que é Plano de Teste",
          "O que é suíte",
          "O que é Pre condição",
          "O que é um Caso de Teste",
          "O que é uma execução",
          "Recaptulando a dupla rastreabilidade"
        ],
        "Adicionando CTs em lote": [
          "Subindo cenários de teste em lote",
          "Criando a dupla rastreabilidade de itens",
          "Vinculando itens de teste ao board de desenvolvimento",
          "Alteração do tipo no board de desenvolvimento"
        ],
        "Executando seus testes": [
          "Executando teste e realizando aprovações",
          "Reprovando testes e abrindo defeito",
          "Reexecutando testes e fechando defeitos"
        ],
        "Finalizando a sua entrega": [
          "Gerando report da sua execução de teste",
          "Gerando reports do seu Plano de Teste"
        ],
        "Dashboard e Filtros": [
          "O que são filtros e Dashboard",
          "Criando filtros",
          "Criando dashboard e vinculando os filtros"
        ]
      },
      "requirements": [
        "Familiaridade com os conceitos básicos de testes de software seria benéfica para os participantes.",
        "Um entendimento básico de como os projetos são gerenciados pode ser útil, especialmente para aqueles que desejam aplicar os conhecimentos no contexto do gerenciamento de projetos.",
        "Alguma experiência prévia com ferramentas de colaboração ou desenvolvimento de software pode facilitar a compreensão do ambiente do JIRA.",
        "Uma compreensão inicial dos princípios do Scrum e das metodologias ágeis pode ajudar os participantes a contextualizarem melhor o uso do JIRA em ambientes ágeis",
        "Alguma experiência prévia ou familiaridade com a interface do JIRA pode facilitar a transição para os tópicos mais avançados do curso.",
        "Se os participantes já tiverem alguma experiência ou conhecimento prévio sobre criação e execução de planos de teste, isso pode ser útil."
      ],
      "description": "Você está pronto para levar suas habilidades em testes de software a um novo patamar? O curso \"Jira + Xray 2024 : Aprenda a criar e gerir seu Plano de Teste\" é a sua porta de entrada para a maestria no gerenciamento de testes, permitindo que você não apenas acompanhe, mas lidere a qualidade dos projetos.\nO Que Você Vai Aprender:\nDominar o Jira e o Xray: De iniciante a especialista, mergulhe nas funcionalidades essenciais do Jira e do poderoso plugin Xray.\nCriação de Boards Scrum Personalizados: Configure e otimize boards Scrum para refletir perfeitamente o seu fluxo de trabalho e metas de teste.\nDashboards e Relatórios Perspicazes: Aprenda a criar dashboards informativos e relatórios visualmente impactantes para comunicar eficientemente os resultados dos testes.\nImportação Eficiente de Dados: Desenvolva habilidades para criar e importar itens de teste de forma manual e através de arquivos CSV, economizando tempo e garantindo precisão.\nExecução e Rastreamento de Testes: Descubra estratégias eficazes para executar testes, registrar resultados e rastrear o progresso de forma eficiente.\nIntegração Perfeita com o Desenvolvimento: Entenda como integrar o Jira e o Xray ao ciclo de desenvolvimento de software para uma colaboração perfeita entre equipes.\nPor Que Este Curso?\nAtualizado para 2024: Mantenha-se à frente da curva com as mais recentes práticas e recursos do Jira e do Xray.\nExperiência Prática: Aprenda através de projetos práticos, aplicando imediatamente os conhecimentos adquiridos.\nInstrutor Especialista: Ministrado por uma Engenheira de Software com mais de 4 anos de experiência com o plugin XRAY em testes e gerenciamento de projetos, este curso é uma jornada guiada para o sucesso.\nEvolua Sua Carreira: Adquira habilidades valiosas que impulsionarão sua carreira no mundo dos testes de software e gestão de projetos.\nNão Espere Mais!\nPrepare-se para se destacar como um profissional de qualidade, inscreva-se agora no curso  e leve sua expertise em testes a novas alturas!",
      "target_audience": [
        "Indivíduos que trabalham como testadores de qualidade, engenheiros de teste ou em funções semelhantes.",
        "Interessados em melhorar suas habilidades no gerenciamento de testes e no uso de ferramentas como o JIRA.",
        "Pessoas que estão começando a trabalhar em projetos e desejam aprender a usar uma ferramenta de gerenciamento popular como o JIRA desde o início.",
        "Desenvolvedores que desejam entender melhor como o JIRA pode ser integrado ao ciclo de vida do desenvolvimento de software e como o gerenciamento de testes pode ser facilitado.",
        "Gerentes de projeto interessados em aprender a usar o JIRA para gerenciar projetos ágeis e implementar práticas eficazes de teste.",
        "Alunos que estão estudando ciência da computação, engenharia de software ou áreas relacionadas e desejam adquirir habilidades práticas em gerenciamento de projetos e testes.",
        "Profissionais de TI que buscam atualização nas ferramentas populares usadas na gestão de projetos e testes.",
        "Empresas e equipes de desenvolvimento que desejam treinar seus funcionários no uso eficaz do JIRA e do plugin Xray para melhorar a eficiência e qualidade dos projetos.",
        "Indivíduos autodidatas e curiosos que desejam explorar o JIRA e o plugin Xray por conta própria, independentemente da função profissional."
      ]
    },
    {
      "title": "Pengenalan Quality Engineering Di Dunia Industri",
      "url": "https://www.udemy.com/course/quality-engineering/",
      "bio": "Total Biaya Kualitas, Penerapan Fungsi Kualitas , Quality Tools, Contol Chart",
      "objectives": [],
      "course_content": {
        "Pengantar Kualitas": [
          "Overview",
          "Pengenalan Quality Engineering",
          "Total Biaya Kualitas"
        ],
        "Kualitas dalam Produksi dan Peningkatan Kualitas yang Berkesinambungan": [
          "Penerapan Fungsi Kualitas",
          "Quality Tools",
          "Kontrol Proses Statistik"
        ],
        "Teknik Pemantauan dan Kontrol Proses Statistik": [
          "Diagram Kontrol untuk Data Variabel",
          "Diagram Kontrol untuk Data Atribut",
          "CUSUM Control Chart"
        ],
        "Sistem untuk Kualitas": [
          "Kualitas dalam Procurement",
          "Sistem Manajemen Kualitas"
        ]
      },
      "requirements": [
        "Memahami proses produksi di dunia industri"
      ],
      "description": "Pelajaran ini memberikan teori dan praktik dasar mengenai implementasi, memelihara Sistem Manajemen Mutu untuk mengukur dan mengontrol kualitas dalam proses produksi. Quality Engineering mengacu pada disiplin ilmu yang mencakup metode teknis, manajemen, pendekatan, prosedur penetapan biaya, alat penyelesaian masalah statistik, pengadaan, dan semua ilmu di balik ini yang diperlukan untuk merancang, memproduksi, dan memberikan produk dan layanan untuk memenuhi kebutuhan pelanggan.",
      "target_audience": [
        "Pelajar yang ingin belajar Quality Engineering"
      ]
    },
    {
      "title": "İş Görüşmelerine Hazırlık ve CV Hazırlama Rehberi",
      "url": "https://www.udemy.com/course/test-uzmanlarnn-kariyer-yolculugu/",
      "bio": "LinkedIn profili oluşturma,etkili CV hazırlama ve başarılı iş görüşmesi teknikleri ile kariyer yolculuğunuzu hızlandırın",
      "objectives": [
        "LinkedIn profillerini optimize ederek profesyonel ağlarını genişletecek ve iş fırsatlarını artıracaklar.",
        "Test uzmanlarına özel, etkileyici CV'ler hazırlayarak işe alım süreçlerinde öne çıkacaklar.",
        "İş görüşmelerinde sık sorulan teknik ve davranışsal sorulara etkili yanıtlar vermeyi öğrenecekler.",
        "Yazılım test sektöründe kritik öneme sahip soft skills'leri geliştirerek kariyer ilerlemelerini hızlandıracaklar."
      ],
      "course_content": {
        "Giriş": [
          "Tanıtım",
          "Canva ile etkileyici CV'ler hazırlamak ve işe alım süreci",
          "Linkedin",
          "LinkedIn ve uzaktan işe başvurma siteleri üzerinden etkili iş arama stratejileri",
          "İş görüşmesinde neler söylenmeli ve etkili iletişim teknikleri",
          "İş görüşmesinde neler söylenmeli",
          "Kurs kapanışı: Öğrenilenlerin özeti ve kariyer gelişimi için eylem planı oluştur"
        ]
      },
      "requirements": [
        "Temel düzeyde yazılım testi bilgisi ve deneyimi",
        "Kariyer gelişimine ve soft skills'leri geliştirmeye istekli olmak"
      ],
      "description": "Bu kurs, yazılım test uzmanlarının kariyer gelişimini desteklemek ve iş bulma süreçlerini optimize etmek için tasarlanmıştır. Manuel ve otomasyon testleri konusunda deneyimli bir profesyonel olarak, sizlere sektörde öne çıkmanızı sağlayacak kritik soft skills ve stratejiler sunuyorum.\nKursumuzda şunları öğreneceksiniz:\nLinkedIn Profili Optimizasyonu:\nEtkili bir profesyonel ağ oluşturma\nİş fırsatlarını yakalama teknikleri\nRecruiter'ların dikkatini çekecek profil ipuçları\nCV Hazırlama Sanatı:\nTest uzmanları için özel CV formatları\nÖne çıkması gereken beceriler ve deneyimler\nYaygın CV hataları ve bunlardan kaçınma yolları\nİş Görüşmelerinde Başarı:\nSık sorulan teknik ve davranışsal sorulara hazırlık\nTest senaryoları ve vaka çalışmaları örnekleri\nGörüşmelerde kendinizi en iyi şekilde ifade etme taktikleri\nSoft Skills Geliştirme:\nEtkili iletişim becerileri\nZaman yönetimi ve organizasyon\nTakım çalışması ve uyum yetenekleri\nBu kurs, kariyerinde ilerlemeyi hedefleyen tüm test uzmanları için idealdir. Başlangıç seviyesindeki QA mühendislerinden deneyimli test liderlerine kadar, herkes bu kurstan değerli bilgiler edinecektir.\nKurs boyunca, gerçek dünya örnekleri, pratik egzersizler ve sektör içgörüleriyle desteklenen kapsamlı bir öğrenme deneyimi sunuyoruz. Kariyerinizi bir üst seviyeye taşımak ve yazılım test dünyasında fark yaratmak için bu kursa hemen katılın!\nAyrıca, kurs içeriğinde güncel endüstri trendlerini ve işverenlerin test uzmanlarından beklentilerini de ele alacağız. Agile ve DevOps ortamlarında test uzmanlarının rolü, sürekli entegrasyon ve sürekli dağıtım (CI/CD) süreçlerinde test otomasyonunun önemi gibi konulara da değineceğiz. Bu sayede, sadece iş bulma sürecinizde değil, kariyeriniz boyunca size değer katacak bilgiler edineceksiniz.\nKurs sonunda, modern yazılım geliştirme ekosisteminde başarılı bir test uzmanı olmanın tüm yönlerini kavramış olacaksınız. Hem teknik yeteneklerinizi hem de kişisel gelişiminizi destekleyerek, sektörde aranan ve değer verilen bir profesyonel olma yolunda ilerleyeceksiniz.",
      "target_audience": [
        "Kariyerlerini ilerletmek isteyen başlangıç ve orta düzey yazılım test uzmanları"
      ]
    },
    {
      "title": "Mastering Web Automation using Playwright & JavaScript (AR)",
      "url": "https://www.udemy.com/course/mastering-web-automation-using-playwright-and-javascript/",
      "bio": "Learn how to use Playwright to automate web browsers, create E2E test cases, API tests, and to run the tests into CI/CD",
      "objectives": [
        "Master Playwright: Understand how to use Playwright to develop automated tests for modern web applications.",
        "Write tests in JS: Employ JavaScript to simulate user interactions like clicks, typing, and handle events and assertions.",
        "Troubleshoot tests: Identify and troubleshoot issues that may arise when writing automated tests using Playwright, using debugging tools.",
        "Integrate with CI/CD: Automate testing of web apps by integrating Playwright tests with CI/CD pipelines, ensuring faster and higher quality releases."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript or any other programming language"
      ],
      "description": "In this course, you will learn how to use Playwright, a powerful open-source automation tool, to automate web browsers and API tests and streamline your testing processes. You will start by getting familiar with the installation of Playwright and its various components such as locators, configurations, reporters, and Playwright commands. You will then dive into applying the page object model design pattern, which will help you build more reliable and maintainable automation scripts. This course is designed to teach you everything you need to know to build robust and efficient web automation and API testing tools using Playwright and JavaScript.\nBut that's not all – you'll also discover how to integrate your tests into the GitHub actions workflow, a popular tool for automating software development workflows, so that you can automate your testing pipeline and ensure that your web applications and APIs are always performing at their best. You'll learn how to set up continuous integration and continuous deployment (CI/CD) for your web applications and APIs, and ensure that they're always delivering high-quality results.\nWhether you're a web developer, a quality assurance engineer, or simply interested in learning more about web automation and API testing, this course is the perfect way to take your skills to the next level. By the end of the course, you will have a solid understanding of how to build robust and reliable web automation and API testing tools using Playwright and JavaScript, and integrate them into your software development process.\n-------------------------------------------------------------------------\nمن خلال هذه الدورة ستتعلم كيفية استخدام بلايرايت لمحاكاة المتصفح لتنفيذ اخبارات الجودة الخاصة بالويب,\nGitHub Actions workflow وبنهاية الدورة ستكون قادر على دمج مشروعك وتشغيلة باستخدام",
      "target_audience": [
        "Test Engineers who are looking to improve there automation testing skills",
        "Students who are want to learn how to automate the browser"
      ]
    },
    {
      "title": "Learn Software Testing in Hindi",
      "url": "https://www.udemy.com/course/learn-software-testing-in-hindi/",
      "bio": "Complete Package of Testing and Methodologies",
      "objectives": [
        "A Profile for working into IT Industry",
        "How to Work in Development and Testing Cycle in Agile Development",
        "How to start career in Software Testing and QA",
        "What are the pre-requisites for getting job in MNC"
      ],
      "course_content": {
        "Introduction to Software Testing": [
          "Introduction to Software Testing"
        ],
        "SDLC Methodologies/Models": [
          "Waterfall Model - The most basic Methodology",
          "Prototype Model",
          "Agile Methodolgy",
          "V and V Model"
        ],
        "Introduction to Types of Testing": [
          "Types of Testing - Part I",
          "Types of Software Testing - Part II",
          "Types of Software Testing - Part III"
        ],
        "STLC - Software Testing Life cycle": [
          "Software Testing Life Cycle Implementation"
        ],
        "Bug/Defect Life Cycle": [
          "Bug Life Cycle"
        ]
      },
      "requirements": [
        "You can start from scratch, just have a knowledge about how any application works? Any Non IT people can also Learn and work.",
        "Anyone with basic knowledge about computer systems"
      ],
      "description": "HRDDesk is the Biggest platform to create best Videos and Audio Presentations and Tutorials. This Course is mainly useful to Beginners and working Professionals.\nExclusive course Series Specially developed for those candidates who are not comfortable with English. Hindi is the most used language specifically for Indian Learners. In India there are about 55% of candidates who lacks understanding foreign languages and which apparently leads to improper understandings to book and media in English. So we decided to come-up in Hindi.\nWhat you will get here?\nBrief Description about the Software Testing.\nExplanations about various Methodologies.\nBest Part Defect Life Cycle\nIntroduction to RTM.\nTest Case Design Techniques and many more.\nWrite us on contact@hrddesk.com for any suggestions and queries.",
      "target_audience": [
        "Beginners : Those who are least interested in Programming Languages and Those who are curious and want to start a career in Testing",
        "Intermediates : Those who keeps the Knowledge of Testing Domain in IT Industry.",
        "Advanced Manual Testers and Quality Assurance Engineers"
      ]
    },
    {
      "title": "Manuel ve Otomasyon Test Projesi",
      "url": "https://www.udemy.com/course/manuel-ve-otomasyon-test-projesi/",
      "bio": "Jira xray ,Robot framework, Jenkins ve Github",
      "objectives": [
        "Kurs, katılımcılara Jira Xray ile test yönetimi ve raporlamasının yanı sıra, Robot Framework ile otomasyon testlerini nasıl yazacaklarını öğrenecekler.",
        "Katılımcılar kurs sonrası, projelerin planlanması ve yürütülmesi aşamalarında temel proje yönetimi kavramlarını anlayacaklar.",
        "Robot Framework ile otomasyon testleri yazarak yazılım testlerini otomatikleştirme yetenekleri gelişecek.",
        "GitHub kullanarak sürüm kontrolü ve işbirliği konularında bilgi sahibi olacaklar."
      ],
      "course_content": {},
      "requirements": [
        "İhtiyacınız olan tüm bilgileri kurs sürecinde öğreneceksiniz."
      ],
      "description": "Bu proje, herkesin ilk kez manuel ve otomasyon testlerini birleştirdiği bir projedir. İlk adım olarak, bu büyülü yolculuğumuzda tüm kurumları hayata geçireceğiz. Jira xray kurulumuyla başlayacak ve ardından diğer uygulamaların sıfırdan kurulumunu gerçekleştireceğiz. Bu süreçte endişelenmenize gerek yok; size her adımıyla rehberlik edeceğim.\nBu projenin sonunda, artık sıfırdan bir uygulamayı nasıl kuracağınızı ve yöneteceğinizi öğrenmiş olacaksınız.\nBu, bilgi ve deneyimle dolu bir serüvenin başlangıcı ve başarıya giden yolda büyük bir adım olacak.                                                             İlk olarak, bir User Story'yi manuel olarak Jira'da oluşturacak ve ardından bu hikayelerin test senaryolarını yazacaksınız. Daha sonra bu senaryoları içeren bir test kümesi oluşturacak ve bir test kampanyası başlatacaksınız.  Sonrasında, Robot Framework ve Robot Framework ile otomasyonunu yaparak bu projeyi GitHub deposuna ekleyeceksiniz. Son olarak, Jenkins aracılığıyla testleri çalıştıracaksınız. Ayrıca, bu projede edindiğim deneyimleri üç farklı şirketteki tecrübelerimle sizlerle paylaşacağım. Manuel ve otomasyon testlerini bir araya getiren bu proje herkes için bir ilki temsil edecek.\nBu projenin sonunda, manuel ve otomasyon testlerinin arasındaki bağlantıyı sağlam bir şekilde kurmuş olacaksınız. Gerçek iş yerlerinde kullanabileceğiniz bir dizi test yöntemi ve bilgiyi öğrenerek, yeteneklerinizi en üst düzeye çıkaracaksınız.\nProje tamamlandığında, uygulamaların işlevlerini ve kullanım amaçlarını detaylı bir şekilde anlayacak ve neden tercih edildiklerini anlamış olacaksınız.  Bu proje ile , test dünyasına dair derin bir kavrayışa sahip olacak ve bilgi ve deneyim dolu bir yolculuğun tadını çıkaracaksınız.Proje tamamlandığında, uygulamaların işlevlerini ve kullanım amaçlarını detaylı bir şekilde anlayacak ve neden tercih edildiklerini anlamış olacaksınız.\nBu proje ile  test dünyasına dair derin bir kavrayışa sahip olacak ve bilgi ve deneyim dolu bir yolculuğun tadını çıkaracaksınız..",
      "target_audience": [
        "Herkes"
      ]
    },
    {
      "title": "Iniciando na área de testes de software",
      "url": "https://www.udemy.com/course/iniciando-na-area-de-testes-de-software/",
      "bio": "Guia para iniciantes em teste de software",
      "objectives": [
        "Você irá aprender os conceitos básicos para começar na área de testes",
        "Você irá aprender técnicas de testes",
        "Conseguirá fazer testes e encontrar bugs na práticas",
        "Você irá escrever casos de testes",
        "Você aprenderá sobre sobre ferramenta essenciais para o início da jornada em testes"
      ],
      "course_content": {
        "Módulo 0: Apresentações": [
          "Sobre o instrutor",
          "Sobre o curso",
          "Links úteis",
          "Slides aulas",
          "Tire suas dúvidas e participe da comunidade"
        ],
        "Módulo 1: Fundamentos dos Testes de Software": [
          "Como começou o teste de software",
          "Evolução e importância dos testes de software",
          "Papéis e Responsabilidades no Teste de Software",
          "O que nós testamos?",
          "Teste sobre os fundamentos do teste de software"
        ],
        "Módulo 2: O que são níveis de teste": [
          "Teste de unidade",
          "Teste de integração",
          "Material complementar: Teste de integração",
          "Teste de sistema",
          "Teste de aceitação e divisões",
          "Pirâmide de testes",
          "Material complementar sites para testes",
          "Teste sobre níveis de teste"
        ],
        "Módulo 3: tipos de teste": [
          "Testes funcionais e Testes não funcionais",
          "Testes de caixa branca e Testes de caixa preta",
          "Testes automatizados e testes manuais",
          "Exemplos de testes não funcionais",
          "Teste sobre tipos de testes"
        ],
        "Módulo 4: técnicas de teste": [
          "Técnicas de testes de caixa preta e caixa branca",
          "Técnicas de testes de baseadas na experiência",
          "Teste sobre técnicas de teste"
        ],
        "Módulo 5: Metodologia de gestão de projetos de software": [
          "Metodologia Cascata",
          "Metodologia Ágil"
        ],
        "Módulo 6: conceituando o processo de teste": [
          "Etapas do processo de teste",
          "Escrevendo testes teoria",
          "Escrevendo testes na prática",
          "Com abrir bugs",
          "Abrindo um bug na prática usando trello",
          "O que é DOD e DOR"
        ],
        "Módulo 7: Testando na prática": [
          "Apresentação da aplicação a ser testada",
          "Funcionalidade de Cadastro : Etapa 1 - Planejamento dos testes",
          "Funcionalidade de Cadastro : Etapa 2 - Escrever os cenário de teste",
          "Funcionalidade de Cadastro : Etapa 3 - Execução dos testes",
          "Funcionalidade de Cadastro : Etapa 4 - Relatório e Análise de resultados"
        ],
        "Módulo 8: Considerações finais": [
          "Próximos passos",
          "Conclusão do curso"
        ],
        "Bônus": [
          "Aula Bônus - confira!"
        ]
      },
      "requirements": [
        "Nenhum"
      ],
      "description": "Bem-vindo ao nosso Iniciando na área de testes de software: Guia para iniciantes em teste de software\nNo nosso curso, começaremos do zero, desvendando os conceitos básicos do teste de software. Você irá adquirir uma compreensão sólida sobre a importância dos testes e como eles contribuem para a entrega de produtos excepcionais. Vamos explorar as técnicas fundamentais de teste, desde testes exploratórios até testes baseados em especificações, permitindo que você desenvolva habilidades críticas na arte de identificar defeitos e garantir a funcionalidade adequada do software.\nAlém disso, desvendaremos os diferentes níveis de teste, desde os testes de unidade que examinam pequenas partes do código até os testes de sistema que validam o software como um todo. Vamos mergulhar nas estratégias e práticas para realizar testes eficazes em cada etapa do processo de desenvolvimento, aprimorando a qualidade e reduzindo o retrabalho.\nA metodologia ágil, uma abordagem ágil e flexível para o desenvolvimento de software, será um dos temas adotados no nosso curso. Você entenderá como os testes se encaixam nas metodologias ágeis, como o Scrum e o Kanban, permitindo que você se torne parte integrante de equipes ágeis de alta performance.\nMas não para por aí! Nosso curso é mais do que a transferência de conhecimento; é uma jornada interativa. Através de exemplos práticos, estudos de caso e exercícios, você aplicará o que aprendeu em situações reais e consolidará sua compreensão.\nSe você está pronto para adentrar um campo repleto de oportunidades e desafios emocionantes, inscreva-se agora em nosso Curso  Iniciando na área de testes de software. Prepare-se para se tornar um profissional de teste confiante e bem informado, capaz de contribuir significativamente para a qualidade e sucesso dos projetos de software. Juntos, vamos construir um futuro mais sólido e livre de erros no mundo da tecnologia!",
      "target_audience": [
        "Pessoas que queiram começar em teste de software",
        "Pessoas que já atuam com teste, mas são muito inciantes",
        "Desenvolvedores em início de carreira que desejam aprender um pouco sobre teste"
      ]
    },
    {
      "title": "JUnit 5",
      "url": "https://www.udemy.com/course/junit5-dmdev/",
      "bio": "Mockito, TDD, BDD",
      "objectives": [
        "Курс JUnit 5 содержит информацию про основные понятия и определения в тестировании программного обеспечения и конечно же про основной фреймворк, который используется для этого в Java - это JUnit 5. По окончании курса вы будете понимать, что из себя представляет тестирование ПО, уверенно владеть фреймворком JUnit 5 и хорошо разбираться во всех его аспектах"
      ],
      "course_content": {
        "JUnit 5, Mockito, TDD & BDD": [
          "Введение",
          "Установка программного обеспечения",
          "Аннотация @Test. Assertions",
          "Test Lifecycle",
          "Запуск тестов. Launcher API",
          "Test Driven Development. TDD",
          "AssertJ & Hamcrest",
          "Testing exceptions",
          "Tagging and Filtering",
          "Tests order. Nested tests",
          "Dependency Injection. DI",
          "Parameterized Tests",
          "Flaky tests. Timeouts",
          "Extension Model. Теория",
          "Extension Model. Практика",
          "Mockito. Test Doubles",
          "Mockito. Mock",
          "Mockito. Spy",
          "Mockito. MockitoExtension",
          "Behavior Driven Development. BDD",
          "Практика",
          "Заключение. Путь развития",
          "Домашнее задание"
        ]
      },
      "requirements": [
        "Java, Maven"
      ],
      "description": "Курс JUnit 5 включает в себя не только практическую часть, но и теорию тестирования, т.е. содержит информацию про основные понятия и определения в тестировании программного обеспечения, такие как:\n- все виды тестов (unit, integration, acceptance)\n- регрессионное и функциональное тестирование\n- flaky тесты\n- различные методологии и подходы в разработке программного обеспечения (TDD, BDD)\n- жизненный цикл тестов\n- многое другое\nТакже подробно будет разобран фреймворк Mockito, без которого не обходится ни один проект. Более того, он активно используется в таком фреймворке как Spring. Следовательно, знание его обязательно для любого Java разработчика.\nДля кого-то будет полезно узнать про механизм внедрения зависимостей (Dependency Injection - DI), т.к. в JUnit 5 он также был реализован для получения огромной гибкости в тестовых классах и методах, которые мы также разберем в теории и практике. Даже если вы не знакомы с DI - он все равно будет подробно разобран с самого нуля.\nБудут отдельные видео, которые раскроют мощь новой Extension модели, которая в свою очередь пришла на замену устаревших подходов в JUnit 4: runners и rules. Благодаря чему мы можем внедряться на любом этапе жизненного цикла тестов.\nНу и Конечно же речь будет идти про основной инструмент, который используется для тестирования программного обеспечения в Java - это фреймворк JUnit 5.\nПо окончании курса вы будете понимать, что из себя представляет тестирование ПО, уверенно владеть фреймворком JUnit 5 и хорошо разбираться во всех его аспектах.",
      "target_audience": [
        "java developers"
      ]
    },
    {
      "title": "Mobile Testing",
      "url": "https://www.udemy.com/course/mobile-testing/",
      "bio": "Con la certificación en Mobile Testing ingresarás al mundo de pruebas móviles comprendiendo las técnicas y mucho más",
      "objectives": [
        "Introducción a las pruebas mobile (conceptos y herramientas). Gestos táctiles y cómo usarlos. Restricciones en pruebas móviles.",
        "Diferenciación entre SO Android, iOS y Windows Phone. Teoría sobre emuladores. Teoría sobre simuladores. Checklist mobile.",
        "Introducción a las pruebas de performance mobile. Apptim, pruebas exploratorias. Práctica en Apptim.",
        "Experiencias de referentes acerca de testing mobile. Datos, seguridad y su aplicación en testing. Soft skills para mejorar las pruebas."
      ],
      "course_content": {
        "INTRODUCCIÓN": [
          "Introducción y bienvenida",
          "Importancia del Testing Mobile",
          "Cuestionario 1"
        ],
        "ENTENDIENDO EL TESTING MOBILE": [
          "¿Qué es Mobile Testing?",
          "Gestos táctiles y errores típicos",
          "Cómo NO probar dispositivos móviles",
          "Cuestionario 2"
        ],
        "Dispositivos": [
          "Dispositivos",
          "Sistemas Operativos: Android vs iOS",
          "Visualización de aplicaciones - Responsive Design",
          "Emuladores",
          "Simuladores",
          "Comparativa - Emuladores y Simuladores",
          "Cuestionario 3"
        ],
        "¿QUÉ DEBO TENER EN CUENTA SOBRE MOBILE TESTING?": [
          "¿Cómo enfrentar los desafíos?",
          "Checklist de mobile testing",
          "Checklist de mobile testing- Cont.",
          "Cuestionario 4"
        ],
        "Documentación": [
          "¿Qué tengo que tener en cuenta previo a documentar?",
          "Cuestionario 5",
          "Ahora sí, ¿cómo hacer pruebas mobile?"
        ],
        "Performance": [
          "Performance",
          "Herramientas",
          "Apptim - Demostración",
          "Práctica en Apptim",
          "Reporte generado con Apptim"
        ],
        "Datos y Seguridad": [
          "Datos y Seguridad",
          "Cuestionario 6",
          "Desafío",
          "Reflexiones",
          "Repasemos con Pia",
          "Cierre"
        ]
      },
      "requirements": [
        "Conocimiento básico sobre testing de software.",
        "Conocimientos básicos de informática (correo, documentos, hojas de cálculo, etc.).",
        "No necesitas saber programar."
      ],
      "description": "Con este curso, Mobile Testing, ingresarás al mundo de pruebas móviles comprendiendo las técnicas aplicadas en el mismo y los diferentes conceptos que allí se manejan. En la actualidad estos dispositivos están cada vez más arraigados en nuestra vida por lo que resulta indispensable que funcionen correctamente. El conocer sobre pruebas móviles es una de las habilidades más buscadas hoy en el mundo del testing por lo que al culminar este curso podrás acceder a muchas oportunidades dentro del mismo.\n\n\nLo que aprenderás\nEn este curso te daremos a conocer aquellos puntos básicos acerca del Mobile Testing así como nociones técnicas y que muchas veces damos por obvias o las sobreentendemos. Al finalizar este curso tendrás todas las herramientas necesarias para comenzar en un proyecto de estas características.\nIntroducción a las pruebas mobile (conceptos y herramientas).\nGestos táctiles y cómo usarlos.\nRestricciones en pruebas móviles.\nDiferenciación entre SO Android, iOS y Windows Phone.\nTeoría sobre emuladores.\nTeoría sobre simuladores.\nChecklist mobile.\nIntroducción a las pruebas de performance mobile.\nApptim, pruebas exploratorias.\nPráctica en Apptim.\nExperiencias de referentes acerca de testing mobile.\nDatos, seguridad y su aplicación en testing.\nSoft skills para mejorar las pruebas.\nEste curso incluye:\nVideos instructivos.\nMaterial escrito y de referencia.\nEjercicios prácticos y de uso cotidiano.\nAsistencia online continua.\nPruebas de evaluación.\nCertificado.",
      "target_audience": [
        "Tester que deseen profundizar su conocimiento en las pruebas móviles. Con la certificación en Mobile Testing podrán comprender las técnicas aplicadas en el mismo y los diferentes conceptos que allí se manejan."
      ]
    },
    {
      "title": "Préparation efficace au Certificat ISTQB TEST MANAGER V3",
      "url": "https://www.udemy.com/course/certification-istqb-testeur-certifie-avance-test-manager/",
      "bio": "Formation pour se préparer et mettre en pratique les questions pour la certification-Non officiel",
      "objectives": [
        "Préparez-vous à la certification Certifie Tester Advanced Level",
        "Faites progresser votre carrière en renforçant votre expertise en matière de tests.",
        "Apprenez grâce aux meilleures pratiques et à des exemples réels",
        "Découvrez les méthodologies de projets logiciels de test les plus récentes",
        "Offrez une efficience et une efficacité accrues à votre équipe",
        "Cela peut aider à réduire les défauts et à rehausser la visibilité de votre équipe.",
        "Apprenez d'un expert reconnu dans l'industrie en matière de tests logiciels, de qualité et de gestion de projet."
      ],
      "course_content": {
        "ISTQB TEST MANAGER : Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Certification ISTQB : Testeur Certifié Niveau Avancé Test Manager Processus de"
        ],
        "ISTQB TEST MANAGER V3 - Chapitre 1 :": [
          "Chapitre 1 : Management des activités de test : Introduction",
          "Le processus de test",
          "Activités de planification des tests",
          "Activités de pilotage et contrôle des tests",
          "Le contexte du test",
          "Les parties prenantes du test",
          "Importance de la connaissance des parties prenantes dans le management des tests",
          "Le Management des tests dans un modèle de développement logiciel hybride",
          "Merci",
          "Activités de management des tests pour différents modèles de cycle de vie",
          "Activités de management des tests à différents niveaux de test",
          "Activités de management des tests pour différents types de tests",
          "Activités de management des tests pour la planification, le pilotage et le contr",
          "Activités de management des tests pour la planification, le pilotage et le contr",
          "A retenir"
        ],
        "Test basé sur les risques": [
          "Test basé sur les risques"
        ],
        "5. Améliorer le Processus de Test": [
          "Améliorer le processus de test",
          "Processus d'amélioration des tests (IDEAL)",
          "Processus d'amélioration des tests (IDEAL)",
          "Amélioration du processus de test basés sur des modèles",
          "Améliorer le Processus de Test",
          "Améliorer le Processus de Test",
          "Améliorer le Processus de Test avec TMMi",
          "Améliorer le Processus de Test avec TPI Next",
          "Améliorer le Processus de Test avec CTP",
          "Améliorer le Processus de Test avec STEP"
        ],
        "Outils de test": [
          "Outils de test",
          "Métriques des outils"
        ],
        "Management du produit": [
          "Métriques de test",
          "Rapports de test",
          "Rapports de test"
        ],
        "Estimation des tests": [
          "Estimation des tests",
          "Estimation des tests"
        ],
        "Processus de Test :Pilotage et Contrôle des Tests": [
          "Processus de Test : Planification des Tests",
          "Processus de Test : Pilotage et Contrôle des Tests"
        ],
        "Processus de Test : Analyse des Tests": [
          "Processus de Test : Analyse des Tests"
        ],
        "Processus de Test : Conception des Tests": [
          "Processus de Test : Conception des Tests",
          "Comment concevoir des cas de test",
          "Comment concevoir des cas de test",
          "Exercice de conception de test",
          "Correction de l’exercice de conception de test"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Le cours de formation développe les techniques et méthodes de test introduites dans le cours de certification  et aborde les domaines du programme avancé\n\nLe cours se concentre sur les domaines clés essentiels à une gestion réussie des tests : le processus de test, la gestion des tests, les normes et les processus d'amélioration des tests, les révisions, la gestion des défauts, les outils et l'automatisation des tests, la gestion des incidents et les compétences relationnelles.\nIl est très difficile de préparer ce cours par vous-même en raison du manque de ressources  mais ce cours est là pour vous aider à surmonter ce problème. J'ai inclus tout ce que vous pourriez avoir besoin de savoir pour comprendre pleinementle domaine d'un test manager . J'ai inclus des explications sur chaque sujet dans de courtes vidéos séparées ainsi que des exemples de questions pour que vous puissiez vous entraîner à l'examen,\nLe cours est rempli d'exercices pratiques pour vous aider à mettre en pratique les méthodes et techniques enseignées dans ce cours. Explications vidéo des exemples de questions expliquant pourquoi et comment choisir la bonne réponse en peu de temps. J'ai également inclus des vidéos supplémentaires qui, selon moi, aideront à accélérer le processus de compréhension du programme.\nJe m'appelle Asma , TEST MANAGER expérimenté. J'ai plus de 13 ans d'expérience dans l'industrie du logiciel. J'ai une solide expérience en aidant des milliers d'étudiants à réussir dans le domaine du test logiciel. Je vous apprendrai tout ce que vous devez savoir pour réussir l'examen dès le premier essai, je vous fournirai des centaines d'exemples de questions et je répondrai à toutes vos questions 24h/24 et 7j/7.\n\n\n\n\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.\nje ne suis pas affilié à ISTQB , ce cours n'est pas officiel",
      "target_audience": [
        "Toute personne souhaitant passer l’examen Certified Tester Advanced Level Test Manager.",
        "Gestionnaires de tests, responsables de tests et responsables de programmes de tests, .",
        "Testeurs souhaitant améliorer leurs connaissances en méthodologies et techniques de gestion de tests.",
        "Toute personne impliquée dans les projets de tests de logiciels (y compris les testeurs, les ingénieurs, les analystes, les consultants, les développeurs de logiciels, les clients, tout le monde)."
      ]
    },
    {
      "title": "Осваиваем Kali Linux с нуля",
      "url": "https://www.udemy.com/course/kali-linux-ru/",
      "bio": "Ключ к миру кибербезопасности: Открытие полного потенциала Kali Linux",
      "objectives": [
        "Основы Kali Linux: Вы научитесь устанавливать, настраивать и эффективно использовать Kali Linux - начиная от самых основ и до сложных функций.",
        "Инструменты и Техники",
        "Практический Опыт",
        "Профессиональные Навыки"
      ],
      "course_content": {
        "Introduction": [
          "Установка и начальная настройка Kali Linux",
          "Основные инструменты и документация Kali Linux",
          "Структура каталогов и навигация в Kali Linux",
          "Базовые команды и работа со справочной системой в Linux",
          "Управление файлами и каталогами в Kali Linux",
          "Поиск файлов и работа с системными переменными Linux",
          "Настройка и управление SSH сервисом в Kali Linux",
          "Управление системными службами в Kali Linux",
          "Система управления пакетами APT в Kali Linux",
          "Поиск и установка пакетов через APT в Kali Linux",
          "Переменные окружения и оболочка BASH в Kali Linux",
          "Глобальные переменные и автодополнение в BASH",
          "История команд и поиск в BASH",
          "Перенаправление потоков и конвейеры в Linux",
          "Инструменты обработки текста в Linux",
          "Анализ системных логов в Kali Linux",
          "Текстовые редакторы Nano и Vim в командной строке Linux",
          "Методы сравнения файлов в Linux",
          "Управление фоновыми процессами в Linux",
          "Утилиты загрузки файлов и мониторинг системы Linux",
          "Настройка командной оболочки BASH в Kali Linux",
          "Использование утилиты NetCat для сетевых соединений",
          "Применение NetCat в среде Windows Server",
          "Анализ сетевого трафика с помощью Wireshark",
          "Мониторинг сети с использованием TCPdump",
          "Введение в написание скриптов BASH",
          "Работа со сложными переменными в BASH скриптах",
          "Использование подоболочек в BASH скриптах",
          "Применение аргументов в BASH скриптах",
          "Условные операторы в BASH скриптах",
          "Настройка русской локали в Kali Linux",
          "Операторы для работы с файлами и строками в BASH",
          "Настройка Git и GitHub в Kali Linux",
          "Публикация файлов в репозитории GitHub",
          "Расширенное использование условных операторов в BASH",
          "Разработка скриптов BASH в GitHub Codespaces",
          "Синхронизация локальных и удаленных репозиториев Git",
          "Основы OSINT и методология пассивного сбора информации",
          "Практическое применение инструментов OSINT в Kali Linux"
        ]
      },
      "requirements": [
        "Базовые знания компьютера: Уверенное использование операционных систем (например, Windows, MacOS или Linux) и основное понимание работы сетей.",
        "Желание учиться: Мотивация и интерес к изучению кибербезопасности и Kali Linux в частности."
      ],
      "description": "Уникальный Курс \"Осваиваем Kali Linux с Нуля\" - Ваш Путь к Мастерству в Сфере Кибербезопасности!\nПрисоединяйтесь к нашему погружению в мир Kali Linux - мощнейшего инструмента для экспертов по кибербезопасности!\nО курсе:\nПолное Погружение: Начните свой путь с азов и достигните продвинутого уровня владения Kali Linux.\nПрактический Опыт: Учитесь на реальных кейсах, симулируя настоящие сценарии кибератак и защиты.\nЭкспертные Инструкторы: Наставничество от профессионалов с глубокими знаниями в области кибербезопасности.\nГибкость Обучения: Индивидуальный подход к каждому учащемуся, адаптация к вашему уровню знаний и расписанию.\nЧто вы изучите:\nОсновы Kali Linux: Установка, настройка и использование основных инструментов.\nПродвинутые Техники: Сетевое сканирование, тестирование проникновения, анализ уязвимостей и многое другое.\nРеальные Сценарии: Практическое применение знаний в защите и тестировании систем.\nСертификация: Получите сертификат, подтверждающий ваше мастерство в Kali Linux.\nДля кого этот курс:\nНовички: Желающие освоить Kali Linux с нуля.\nПрофессионалы: IT-специалисты, стремящиеся расширить свои знания в области кибербезопасности.\nЛюбознательные Умы: Все, кто увлечен кибербезопасностью и хочет углубить свои знания.\nНе упустите шанс стать экспертом в кибербезопасности с нашим курсом \"Осваиваем Kali Linux с Нуля\"! Записывайтесь сейчас и начните свой путь к мастерству! Станьте частью сообщества профессионалов, постоянно развивающих свои навыки и знания. Вместе мы сможем сделать мир безопаснее и защищеннее, противостоять угрозам и предотвратить кибератаки.",
      "target_audience": [
        "Начинающие в области кибербезопасности: Те, кто хочет освоить основы Kali Linux и углубить свои знания в кибербезопасности.",
        "IT-специалисты: Профессионалы, стремящиеся расширить свои компетенции и добавить в арсенал навыки работы с Kali Linux для улучшения своей профессиональной деятельности.",
        "Компании и организации: Корпоративные сотрудники, ответственные за безопасность информационных систем, которые хотят улучшить свои знания для предотвращения киберугроз."
      ]
    },
    {
      "title": "Formation Selenium A4Q FOUNDATION certifié en automatisation",
      "url": "https://www.udemy.com/course/a4q-certification-devenir-testeur-selenium-a4q/",
      "bio": "A4Q Certified Selenium Tester",
      "objectives": [
        "Connaitre les facteurs à prendre en compte pour décider d'automatiser les tests",
        "Être en mesure d’implémenter des scripts Selenium WebDriver qui exécutent des tests d'applications web fonctionnels et implémentent des scripts maintenables",
        "Créer et exécuter des tests Selenium Web en autonomie.",
        "Être capable de sélectionner et mettre en œuvre les bons outils d'automatisation de tests",
        "Savoir et pouvoir appliquer correctement les principes d'automatisation de tests pour créer une solution d'automatisation de tests maintenable",
        "Préparer la certification Alliance For Qualification \"Testeur Selenium niveau Fondation\""
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pourquoi devenir Testeur Selenium A4Q ;",
          "Points essentiels :",
          "L'automatisation des tests",
          "L’objectif de l'automatisation des tests",
          "Les avantages & inconvénients de l'automatisation des tests",
          "Les contraintes de l'automatisation des tests :",
          "Merci",
          "Chapitre 1 – Bases de l’automatisation des tests",
          "Cas pratique : Simuler le ROI d’un projet d’automatisation Selenium",
          "Réponse Cas pratique : Simuler le ROI d’un projet d’automatisation Selenium"
        ],
        "Comprendre HTML": [
          "Comprendre HTML"
        ],
        "Comprendre XML :": [
          "Comprendre XML :"
        ],
        "Comprendre XPATH & CSS :": [
          "Comprendre XPATH & CSS :",
          "Exercice – Localisation d’éléments (HTML + XPath + CSS)",
          "Réponse de l'exercice – Localisation d’éléments (HTML + XPath + CSS)"
        ],
        "Exercice 2 – Analyse HTML avec pièges courants": [
          "Exercice 2 – Analyse HTML avec pièges courants",
          "Correction Exercice 2 – Analyse HTML avec pièges courants",
          "Astuces à retenir",
          "Exercice 3 : Teste tes compétences en XPath & CSS Selectors",
          "Correction exercice 3"
        ],
        "A4Q -Chapitre 3 - Utiliser Selenium WebDriver": [
          "Introduction :",
          "C'est quoi Sélénium",
          "Création d'un projet",
          "SELENIUM : Ajout des dépendances",
          "SELENIUM : Ajout des webdrivers",
          "Comment configurer ChromeDriver",
          "SELENIUM : premier exemple",
          "SELENIUM : Accepter les cookies",
          "Accepter les cookies : Exercice",
          "Accepter les cookies : Correction de l’exercice",
          "SELENIUM : Documentation",
          "SELENIUM : webdrivermanager",
          "SELENIUM : Manipulation du navigateur / browser",
          "SELENIUM : Manipulation du navigateur / browser-Partie 2",
          "Premier exercice :",
          "Correction de l'exercice",
          "SELENIUM : Fermeture de navigateur",
          "SELENIUM : Gestion du code - gestion du script",
          "SELENIUM : Manipulation du navigateur / browser-Partie 3",
          "SELENIUM : Manipulation du navigateur / browser-Partie 4",
          "SELENIUM : Position",
          "SELENIUM : Les captures d'écran / Screenshot",
          "SELENIUM : Introdcution WEB ELEMENT",
          "SELENIUM : WEBELEMENT - Find element",
          "SELENIUM : Exercice 2",
          "SELENIUM : Correction Exercice 2",
          "SELENIUM : Exercice 3",
          "SELENIUM : Correction Exercice 3",
          "SELENIUM : web Element - Partie 2",
          "Automatisation des tests : les points à savoir",
          "Automatisation des tests : les points à savoir - Partie pratique",
          "SELENIUM : Locator - Niveau avancé",
          "SELENIUM : WAIT",
          "SELENIUM : IMPLICIT WAIT",
          "Automatisation avec Sélénium : Gestion des Alertes – Partie 1",
          "Automatisation avec Sélénium : Gestion des Alertes – Partie 2",
          "Automatisation avec Sélénium : Les cas à cocher : Checkebox– Partie 1",
          "Automatisation avec Sélénium : Les cas à cocher : Checkebox– Partie 2",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Keyboard actions",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Keyboard actions",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Exercice",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Correction",
          "Automatisation avec Sélénium : Automatiser le formulaire d’un site web",
          "Automatisation avec Sélénium : Correction Automatiser le formulaire d’un site we",
          "SELENIUM : Exercice 4 :",
          "SELENIUM :Correction exercice 4 :",
          "Résumé-Localisation des éléments avec Selenium",
          "QCM-Localisation des éléments avec Selenium"
        ],
        "Chapitre 4 - Préparer des scripts de test maintenables": [
          "Préparer des scripts de test maintenables",
          "Préparer des scripts de test maintenables"
        ],
        "Préparer la certification A4Q :": [
          "QCM – A4Q Selenium Tester",
          "Résumé de chapitres",
          "Préparer la certification A4Q :",
          "Préparer la certification A4Q :",
          "Préparer la certification Selenium A4Q FOUNDATION"
        ]
      },
      "requirements": [
        "AUCUN"
      ],
      "description": "Connaitre les facteurs à prendre en compte pour décider d'automatiser les tests\nÊtre en mesure d’implémenter des scripts Selenium WebDriver qui exécutent des tests d'applications web fonctionnels et implémentent des scripts maintenables\nCréer et exécuter des tests Selenium Web en autonomie.\nÊtre capable de sélectionner et mettre en œuvre les bons outils d'automatisation de tests\nSavoir et pouvoir appliquer correctement les principes d'automatisation de tests pour créer une solution d'automatisation de tests maintenable\nPréparer la certification Alliance For Qualification \"Testeur Selenium niveau Fondation\"\nLe déroulement pédagogique est conforme au sommaire du syllabus « A4Q Selenium Tester Foundation 2018 » :\n\n\n1. Bases de l’automatisation des tests\n\n\n1.2 Les tests manuels par rapport aux tests automatisés\n\n\n1.3 Facteurs de succès\n\n\n1.4 Risques et avantages de Selenium WebDriver\n\n\n1.5 Selenium WebDriver dans l'architecture d'automatisation des tests\n\n\n1.6 Métriques pour l'automatisation\n\n\n1.7 La boîte à outils Selenium\n\n\n2. Technologies Internet pour l’automatisation des tests d’applications Web\n\n\n2.1 Comprendre HTML et XML\n\n\n2.2 XPath et recherche dans les documents HTML\n\n\n2.3 Localisateur CSS\n\n\n3. Utiliser Selenium WebDriver\n\n\n3.1 Mécanismes de logs et de reporting\n\n\n3.2 Naviguer dans différentes URLs\n\n\n3.3 Changer le contexte de la fenêtre\n\n\n3.4 Capturer des captures d'écran de pages Web\n\n\n3.5 Localiser les éléments de l'interface graphique\n\n\n3.6 Obtenir l'état des éléments de l'interface graphique\n\n\n3.7 Interagir avec les éléments de l'interface utilisateur à l'aide des commandes WebDriver\n\n\n3.8 Interagir avec les invites de l'utilisateur dans les navigateurs Web à l'aide des commandes WebDriver\n\n\n4. Préparer des scripts de test maintenables\n\n\n4.1 Maintenabilité des scripts de test\n\n\n4.2 Mécanismes d'attente\n\n\n4.3 Page Objects\n\n\n4.4 Tests dirigés par mots-clés (Keyword Driven Testing)",
      "target_audience": [
        "toute personne intéressée par la génie logiciel , test et recette",
        "Cette formation s'adresse aux publics suivants : Développeurs ; Testeurs ; Maitre d'œuvre ; Maitre d'ouvrage ; Responsables d'homologation. Cette formation s'adresse aux profils suivants Architecte d’application Chef de Projet Développeur d’applications Directeur de Projets",
        "toute personne souhaite avoir la certification en automatisation de test",
        "toute personne souhaite avoir une idée sur l'automatisation de test",
        "toute personne souhaite avoir la certification A4Q"
      ]
    },
    {
      "title": "Automatización avanzada de pruebas de software",
      "url": "https://www.udemy.com/course/automationtestingspa/",
      "bio": "Automation testing",
      "objectives": [
        "Diseño de pruebas automatizadas robustas",
        "Técnicas de diseño de pruebas automatizadas avanzadas",
        "Diseño de pruebas de performance con bases estadísticas",
        "Realización de varios casos prácticos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al diseño de pruebas automatizadas usando property based testing",
          "Continuación PBT"
        ],
        "API testing": [
          "API Testing"
        ],
        "Stateful Testing": [
          "Stateful Testing & fuzzy testing"
        ],
        "Analisis DSM": [
          "Analisis DSM"
        ],
        "Performance testing": [
          "Performance testing"
        ]
      },
      "requirements": [
        "Conocimientos de programación básicos",
        "De preferencia contar con un IDE para python configurado"
      ],
      "description": "En este curso aprenderás a diseñar, implementar, validar y construir pruebas automatizadas de software, con las mismas técnicas que usan empresas como Google, esta diseñado para adquirir los conocimientos de forma gradual y con ejemplos 100% prácticos.\nNo tienes que ser un experto o tener experiencia previa en automatización de pruebas de software ya que el curso avanza de forma escalonada.\nConocerás las distintas herramientas, los tipos de prueba más utilizados y las técnicas más avanzadas para llevarlas a cabo, de igual manera entenderás las ventajas, desventajas y limitaciones de la automatización de pruebas.\nEn este curso se recorrerá todo el ciclo de vida de las pruebas de software, desde generar los casos de prueba hasta realizar la última validación. El enfoque principal de la formación es la realización de casos prácticos de automatización. Aunque el curso dispone de sus propios escenarios, el alumno puede proponer sus propios ejemplos o incluso realizar las prácticas sobre sus propias aplicaciones. Al terminar este curso, estarás listo para desenvolverte como tester automatizador en cualquier tipo de proyectos informáticos, podrás crear tus propias automatizaciones de pruebas para probar y verificar software con UI, APIs y realizar pruebas de performance de forma robusta y mantenible.",
      "target_audience": [
        "Testers con interés en aprender técnicas de automatización de pruebas que se usan en empresas como Google",
        "Testers que quieran diseñar pruebas automatizadas más robustas"
      ]
    },
    {
      "title": "தமிழ் மொழியில் Selenium கற்றுக்கொள்ளுங்கள் | Learn Selenium",
      "url": "https://www.udemy.com/course/selenium-tamil/",
      "bio": "தமிழ் மொழியில் Selenium கற்றுக்கொள்ளுங்கள் | Learn Selenium from scratch in Tamil",
      "objectives": [
        "Selenium இன் அடிப்படை அறிவு உங்களுக்கு இருக்கும். | You will have the basic knowledge of Selenium.",
        "நீங்கள் அனைத்து அடிப்படை மற்றும் நடுத்தர அளவிலான கருத்துகளையும் கற்றுக்கொள்வீர்கள். | You will learn all the basic and medium level concepts.",
        "இந்த பாடத்திட்டத்திற்குப் பிறகு, நீங்கள் சொந்த பயன்பாடுகளை உருவாக்கலாம். | After this course, you can develop own applications.",
        "இந்த பாடத்திட்டத்திற்குப் பிறகு, நீங்கள் சொந்த பயன்பாடுகளை உருவாக்கலாம். | After this course, you can develop own applications."
      ],
      "course_content": {
        "Introduction": [
          "Software Testing Basics",
          "Selenium Basics",
          "System Requirements For Selenium",
          "Installation of Firefox And Add-ons for Selenium",
          "How To Open A Website In Selenium?",
          "Selenium WebDriver Methods",
          "How To Test Form Using Selenium? (Selenium Course) Lecture - 12",
          "Validation Program in Selenium WebDriver (Selenium Course) Lecture -13",
          "How To Validate Alert Box and Confirm Box Using Selenium? (Selenium Course) 14",
          "How To Validate Prompt Box and Message Alert Using Selenium? - Lecture 15",
          "How To Write XPATH In Selenium WebDriver? (Selenium Course) Lecture - 16",
          "Handling Mouseover & Screenshot in Selenium (Selenium Course) Lecture - 17",
          "Synchronization in Selenium WebDriver (Selenium Course) - Lecture 18",
          "Iframe in Selenium WebDriver (Selenium Course) - Lecture 19",
          "Robot API In Selenium WebDriver (Selenium Course) - Lecture 20",
          "JUnit in Selenium WebDriver (Selenium Course) Lecture - 22",
          "JUnit in selenium Webdriver - Part B (Selenium Course) (Lecture - 23)",
          "JUnit in Selenium WebDriver (Selenium Course) Lecture - 22",
          "Introduction to TestNG Framework and Annotations (Lecture - 25)",
          "Embedding selenium Script in TestNG Framework (Selenium Course) Lecture - 26"
        ],
        "Selenium Advanced Course": [
          "Creating and Writing Data Using Apache POI in Selenium Webdriver - 28",
          "Reading Data using Apache POI and Data-driven Test (Selenium Course) 29",
          "TestNG Framework Parallel and Cross-Browser Testing (Selenium Course) 30",
          "Group Testing Using TestNG Framework (Selenium Course) Lecture - 31",
          "What is Apache Ant? (Selenium Advanced Course) Lecture - 32",
          "Embedding Selenium Webdriver Script in Apache Ant (Selenium Course) Lecture - 33",
          "What is Apache Maven? (Selenium Advanced Course) Lecture - 34",
          "Embedding Selenium Webdriver Script in Apache Maven (Selenium Course) 35"
        ]
      },
      "requirements": [
        "நீங்கள் எதுவும் தெரிந்து கொள்ள தேவையில்லை. எங்கள் குழு உங்களுக்கு எல்லாவற்றையும் கற்பிக்கும். | You don't need to know anything. Our team will teach you each and everything."
      ],
      "description": "What is the course about?\n\" தமிழ் மொழியில் Selenium கற்றுக்கொள்ளுங்கள் “ நிகழ்நேர Selenium பயன்பாட்டை தமிழ் மொழியில் உருவாக்க தேவையான அனைத்து அத்தியாவசிய நிரலாக்க நுட்பங்களையும் கருத்துகளையும் உள்ளடக்கியது.\nஎங்கள் குழு Selenium நிரலாக்கத்தின் அனைத்து அத்தியாவசிய தலைப்புகளையும் (இது ஒவ்வொரு மாணவரின் அவசியமும்) ஒரே குடையின் கீழ் கொண்டுவர முயற்சித்தது, உங்கள் நேரத்தை மிச்சப்படுத்தவும், உங்கள் பணத்தை மிச்சப்படுத்தவும், நீங்கள் கற்றுக்கொள்ள விரும்புவதைக் கற்றுக்கொள்ளவும் உதவுகிறது.\n\"Learn Selenium in Tamil\" covers all the essential programming techniques and concepts, that are required to build the real-time Selenium application in Tamil language.\nOur team has tried to bring all the essential topics of Selenium programming (which is the necessity of every student ) under one umbrella, to save your time, to save your money and to help you learn what you want to learn.\n\n\nWhat is the course about?\n\" தமிழ் மொழியில் Selenium கற்றுக்கொள்ளுங்கள் “ நிகழ்நேர Selenium பயன்பாட்டை தமிழ் மொழியில் உருவாக்க தேவையான அனைத்து அத்தியாவசிய நிரலாக்க நுட்பங்களையும் கருத்துகளையும் உள்ளடக்கியது.\nஎங்கள் குழு Selenium நிரலாக்கத்தின் அனைத்து அத்தியாவசிய தலைப்புகளையும் (இது ஒவ்வொரு மாணவரின் அவசியமும்) ஒரே குடையின் கீழ் கொண்டுவர முயற்சித்தது, உங்கள் நேரத்தை மிச்சப்படுத்தவும், உங்கள் பணத்தை மிச்சப்படுத்தவும், நீங்கள் கற்றுக்கொள்ள விரும்புவதைக் கற்றுக்கொள்ளவும் உதவுகிறது.\n\"Learn Selenium in Tamil\" covers all the essential programming techniques and concepts, that are required to build the real-time Selenium application in Tamil language.\nOur team has tried to bring all the essential topics of Selenium programming (which is the necessity of every student ) under one umbrella, to save your time, to save your money and to help you learn what you want to learn.",
      "target_audience": [
        "இந்த பாடநெறி தமிழில் புதிதாக Selenium கற்க விரும்பும் எந்த மாணவர்களுக்கும். | This course is for any students who want to learn Selenium from scratch in Tamil.",
        "Selenium வார்த்தையை முதல் முறையாகக் கேட்டால் உங்கள் அறிவை மெருகூட்ட விரும்பினால் இந்த பாடத்திட்டத்தை நீங்கள் எடுக்கலாம். | You can take this course if you want to polish your knowledge if you listen Selenium word first time you can take this course."
      ]
    },
    {
      "title": "ゼロから始めるAIテスティング/今からでも遅くない AIテスティングの全てを学ぼう！",
      "url": "https://www.udemy.com/course/ai-ai-testing/",
      "bio": "30年以上の経験を持つ世界的なソフトウェアテストのエキスパートであるスチュアート・リード博士が、実際の演習をもとに解説します",
      "objectives": [
        "最新のAIテスティングの方法を学ぶことができます",
        "AIテスティング、ベストプラクティスで業界に貢献できます",
        "テスト技術の未来を拓く、AIの最新トレンドを体感できます",
        "AIにおける機械学習の基本的な知識を得られます",
        "MLモデルの実装とテストを体験する事で品質に影響を与える箇所を理解できます",
        "AIベースシステムのテスト戦略に貢献します",
        "ソフトウェアテストをサポートするためにAIをどのように使用できるかを理解できます",
        "国際的なテスト技術者資格制度(ISTQB)のAIテスティングの試験対策として効果的です",
        "ISTQB資格「AI テスティング (CT-AI)」の内容を日本語で深く理解することができます"
      ],
      "course_content": {
        "AIへの導入": [
          "コースの紹介",
          "AIへの導入 パート1",
          "AIへの導入 パート2"
        ],
        "AIベースのシステムの品質特性": [
          "品質特性 パート1",
          "品質特性 パート2",
          "品質特性 パート3"
        ],
        "機械学習（ML） - 概要": [
          "ML概要",
          "演習1a - MLコースレコメンダ",
          "演習1b - MLコースレコメンダ",
          "MLの種類",
          "MLワークフロー パート1",
          "MLワークフロー パート2"
        ],
        "ML - データ": [
          "データの準備と取得",
          "演習3a－MLのためのデータ準備",
          "データの前処理",
          "演習3b－MLのためのデータ準備",
          "データ準備の課題",
          "演習3c－MLのためのデータ準備",
          "データ品質",
          "MLワークフロー パート3"
        ],
        "ML機能パフォーマンスメトリクス": [
          "「混同行列」によるパフォーマンスメトリクス",
          "その他のパフォーマンスメトリクス"
        ],
        "ML - ニューラルネットワークとテスト": [
          "パーセプトロンへの導入",
          "演習9－エクセルでパーセプトロンを作る",
          "ニューラルネットワーク"
        ],
        "AIベースのシステムのテスト概要": [
          "仕様とオラクル問題",
          "受け入れ基準とドキュメンテーション",
          "AIのテストレベル"
        ],
        "AIに特化した品質特性のテスト": [
          "AI固有のテスト問題 パート1",
          "AI固有のテスト問題 パート2"
        ],
        "AIベースのシステムのテストのための方法と技法": [
          "テスト手法の選択",
          "敵対的攻撃とデータポイズニング",
          "ペアワイズテスト",
          "バックツーバックテスト",
          "メタモルフィックテスト",
          "経験に基づくテスト"
        ],
        "AIベースのシステムのテスト環境": [
          "テスト環境"
        ]
      },
      "requirements": [
        "このコースは誰でも受講可能で理解することができます",
        "プログラミング経験は不要です"
      ],
      "description": "「はじめに」\n・この講座はISTQB(テスト技術者資格制度)　Foundation Level シラバス-AI テスティング (CT-AI)のトレーニングコースです\n・スチュアート・リード博士による解説を日本語にローカライズしてお届けしています\n\n\n「コースの概要」\nAI技術が進化し、私たちの日常生活に不可欠なものとなっています。\n従来のシステムのテストは広く理解されていますが、AIベースのシステムの普及に伴い新たな課題が生じています。\nこのコースは、AIの核心となる理論や基準、そしてテストアプローチに焦点を当てています。\nAIベースのシステムは、ディープニューラルネットワークのような高度な構成要素や、大規模データを基にした学習能力、予測不可能な行動など、独特な特徴を持っています。\nそのため新たな課題とテスト機会が多く生じています。\n\n\nこのコースでは、現在使用されているAIベースのシステムの様々なタイプを紹介し、機械学習（ML）がこれらのシステムにおいて重要な要素であることを説明します。\nさらに、MLシステムの構築が比較的容易である方法を示し、AIベースのシステムにおいて基準の設定がどのように変化するか、なぜ倫理的な観点が重要かを考察し、AIベースシステムの特性によって従来のシステムと比較してテストがより難しくなる点を示します。\n\n\n「ISTQB AIテスティングコースの紹介」\nAIベースのシステムにおいて品質を確保するために3つの観点を用います。\n1.データ品質の確保：\n機械学習の精度は、バイアスのない、正確にラベル付けされたデータに依存します。\nまず機械学習システムを構築する際にデータの品質を確保するための選定と検証について考察します。\n2.効果的なテスト手法：\nAIシステムは不透明な部分が多いため、バックツーバックテストやA/Bテストなどのブラックボックステストが有効です。またメタモルフィックテストの応用も解説します。\n3.詳細な分析の実施:：\nホワイトボックステストを通じて、ニューラルネットワークのテストカバレッジを測定する方法を示します。\n\n\n加えて、仮想テスト環境の必要性については、自動運転車のケースを例にして説明します。\n最後に、AIのテスト支援ツールの使用例と、AIを活用した一般的なテスト問題の成功例を見ていきます。\n\n\nこの実践的なコースには、多数の演習が含まれますがプログラミング経験は不要です。\n参加者は、様々な機械学習システムのテスト経験を積むことができます。\n\n\nーーーーーーーーーーーーーーーーーーーーーーーーーーー\n「コースの各セッション紹介」\n1.  AI への導入\nAI、特に人工知能は、技術としての進化を遂げ、ビジネスや日常生活に取り入れられています。\nAIaaSではクラウドを介してAI機能を提供し、多くの開発フレームワークがAIアプリケーションの構築をサポートしています。\nこのセッションではニューラルネットワークやディープラーニングといったAIの中核技術をお伝えします。\nそのほか、GDPRのような法規制や特化型AI、従来の非AIシステムとの違いなどを紹介していきます。\n2  AI ベースのシステムの品質特性\nAIシステムの品質は、適応性、自律性、説明可能性などの要因によって評価されます。\nこのセッションでは、柔軟性、適応性、自律性、進化など、AIベースのシステムにとって特に重要な品質特性について説明します。\nさらに、バイアス、副作用、報酬のハッキング、倫理など、AIベースのシステムに特に重要な品質特性について学びユーザーがAIシステムをどのように信頼するかを考察します。\n3. 機械学習（ML）\n機械学習はデータを利用して学習・予測する技術で、アソシエーション分析、分類、クラスタリングなどの手法が存在します。\nモデルの評価やチューニングは、MLモデルの精度を高めるために不可欠です。\nこのセッションでは、機械学習の基本的な概念を紹介し、シンプルな機械学習モデルを構築するための実践を通じて理解を深めていきます。\n4. ML - データ\n機械学習の精度は、使用するデータの質に大きく依存します。\nデータのアノテーション、ラベリング、準備は、モデルのトレーニングにおいて中心的な役割を果たします。\nこのセッションでは、MLワークフローのデータ準備における課題、データ品質と、MLワークフローの一部として使用されるさまざまなデータセットについて検討します。\nさらに、MLワークフローの訓練とデプロイメントの部分を詳しく見ていきます。\n5. ML 機能パフォーマンスメトリクス\nMLモデルの性能は、正解率やAUC、混同行列などのメトリクスによって評価されます。\nこのセッションでは、混同行列による機能パフォーマンスメトリクスの計算の説明や正解率、適合率、再現率F1スコアの算出方法を説明します。\nさらに、回帰やクラスタリングなどの機械学習に適したメトリクスも紹介していきます。\n6. ML～ニューラルネットワークとテスト\nこの章では、MLとニューラルネットワークのテストに焦点を当てています。\n活性値やディープニューラルネットワーク（DNN）などの基本的なキーワードを取り上げ、多層パーセプトロンやニューロンカバレッジのような高度なテクニックも紹介。\nニューラルネットワークと関連するテストカバレッジレベルについても取り扱います。\n7. AIベースのシステムのテスト概要\nAIベースのシステムのテストは、コンポーネント、自動化バイアス、そしてビッグデータの扱いなど、多くの固有の課題を持っています。\nこのセッションでは、これらの課題にどのように対処するか、またコンセプトドリフトやデータパイプラインといったテストの際に考慮すべき事項について触れています。\nまた、AIベースのシステムに関するテストオラクルの問題、受け入れ基準のさまざまな例とドキュメント化についての課題などを考えていきます。\n8. AIに特化した品質特性のテスト\nAIの品質を評価するための特定のテスト技術と考え方をこのセッションで探求します。\nアルゴリズムのバイアスの検出、自律的なシステムの挙動、さらには解釈可能性や透明性を評価する方法など、AIの品質を確保するための多岐にわたるトピックが網羅されています。\n9. AIベースのシステムのテストのための方法と技法\nこのセッションでは、MLシステムに対するテスト手法の選択やテスト技法について見ていきます。\n従来のシステムテストの技法やAIシステム特有の技法について紹介します。\nAIシステムのテストには、A/Bテストや敵対的テストなどの特定の技法が利用されるケースが多くあり\n特にメタモルフィックテストは、AIの動作を確認するための新しい手法として注目されています。\n10. AI ベースのシステムのテスト環境\nAIのテスト環境はシステムの性能を評価するためのものです。\nこのセッションでは、AAIベースシステムタイプごとの専門的なテスト環境について見ていきます。\nここでは自動運転車を例に取り上げ、仮想テスト環境のメリットやデメリットについても考察していきます。\n11. テストにおける AI の使用\nAIを使用したテスト手法も増えています。\nAIの多くは確率的手法に基づいており、これらの手法はシステムの問題を扱うのに適しています。\nこのセッションでは、AIを使用してさまざまなテスト活動をサポートする方法について説明します。\n具体的には、AIを用いた欠陥分析やテストケース生成の自動化をサポートする方法。\nさらに、ユーザーインターフェースのテストと欠陥予測をサポートするためのAIの使用を見て理解を深めていきます。\nーーーーーーーーーーーーーーーーーーーーーーーーーーー\n\n(注意事項)\n・Udemyの動画はスチュアート リード博士が直接講義をしており、動画内の音声や表示されているスライド資料は全て英語となります\n・コースの動画内容は字幕以外は英語となりますので、日本語に翻訳された講義スライドと併せてご覧頂くことを推奨しております\n【日本語への翻訳内容について以下となります】\n◇動画内の字幕全般(日本語対応)\n◇添付資料1.「AIテスティング(CT-AI)コース_講義スライド_V3.01.pdf」\n◇添付資料2.「AIテスティング(CT-AI)コース_演習ガイド_V2.0.pdf」\n【日本語への翻訳対象外について以下となります]\n参考資料として用意しているファイルです。\n◇添付資料3.「参考資料1_ISTQB CT-AI_シラバスと模擬試験 」\n・こちらはISTQB公式の模擬試験になります。\n・参考用として資料を添付していますが詳細はISTQB公式サイトなどを参照してください。\n◇添付資料4.「参考資料2_論文集(Papers) 」\n・AIの進化、ロボット技術、ニューロモーフィック・コンピューティング、自動運転、デジタル経済、テスト技術、ソフトウェア欠陥予測など、多岐にわたるテーマを包括する論文集です。\n・本コースとは直接関係ありませんが関連資料として参考用に添付しております。",
      "target_audience": [
        "AIベースのシステムのテストやテストにおけるAIの活用に携わる方",
        "テストアナリスト、データアナリスト、テストエンジニア、テストコンサルタント、テストマネージャ、ユーザー受入テスト担当者、ソフトウェア開発者などが含まれます",
        "この資格を取得するには、ISTQB認定テスト技術者資格(Foundation Level)を保有している必要があります",
        "ISTQB「テスト技術者資格制度」のAIテスティング認定（Foundation Level）を受講する方"
      ]
    },
    {
      "title": "Selenium Webdriver y Python: Automatizacíon de pruebas 2020",
      "url": "https://www.udemy.com/course/selenium-webdriver-y-python-automatizacion-de-pruebas-2020/",
      "bio": "Automatización de pruebas con Python 3 - ¡Aprende a automatizar tu tiempo!",
      "objectives": [
        "Automatización de pruebas",
        "Manejo de selenium",
        "Aprender a programar en Python",
        "Interactuar con sitios web con Python",
        "Aprender a realizar pruebas sobre aplicaciones",
        "Trabajar con la estructura de sitios web",
        "Manejar excepciones",
        "Ahorrar tiempo y esfuerzo",
        "Aprender sobre la estructura del DOM",
        "Interactuar con sitios dinamicos",
        "Manejo de AJAX desde Selenium"
      ],
      "course_content": {
        "Bienvenida": [
          "Introducción al curso",
          "Requerimientos básicos",
          "Instalando Python",
          "Instalación del IDE"
        ],
        "Introducción rápida a Python": [
          "Primer hola mundo",
          "Tipos de datos, strings, numeros, flotantes y booleanos",
          "Operadores",
          "Entrada de datos",
          "Listas",
          "Tuplas",
          "Diccionarios",
          "Bucles",
          "Condicionales",
          "Manejo de ficheros",
          "Funciones",
          "Excepciones",
          "Clases",
          "Modulos y paquetes"
        ],
        "Introducción a Selenium": [
          "Escogiendo el navegador que usaremos",
          "Primer programa con selenium",
          "Ingresar datos en un sitio",
          "Clicks",
          "Tipos de busquedas",
          "find_element_by_class_name",
          "find_element_by_css_selector",
          "find_element_by_id",
          "find_element_by_link_text",
          "find_element_by_name",
          "find_element_by_tag_name",
          "find_element_by_xpath",
          "Elements",
          "Configuración por archivos INI"
        ],
        "Funciones y características": [
          "Implicit wait",
          "Explicit wait",
          "Navegación entre pestañas",
          "Detención del cliente",
          "Capturas de pantalla",
          "Regresar y adelantar paginas",
          "Display y enabled",
          "Ejecución en segundo plano",
          "Modo incognito"
        ],
        "Javascript, scripts y argumentos": [
          "execute_script",
          "window open",
          "scroll",
          "switch to alert",
          "accepts y dismiss",
          "Introducción a Unitest",
          "De Py a EXE"
        ],
        "Proyecto Final": [
          "Creación del proyecto final"
        ],
        "Navegadores extras": [
          "Brave",
          "Edge",
          "Opera"
        ],
        "Sugerencias": [
          "EXTRA"
        ]
      },
      "requirements": [
        "Una computadora o dispositivo movil",
        "Conexión a internet"
      ],
      "description": "En este curso que va desde 0, aprenderás a programar en Python, uno de los lenguajes con mayor crecimiento en la última década, posterior a ello, aprenderás a hacer uso de Selenium, un popular módulo para llevar a cabo testing de pruebas de manera automatizada, y si, ¡También desde 0!\nNo pierdas la oportunidad de aprovechar tu tiempo y hacer que tu código haga el trabajo por ti y para tu equipo, aprenderás desde algo tan simple como abrir el navegador hasta hacer una automatización real como práctica final.\n¡Entra ahora!",
      "target_audience": [
        "Todos, ¡Cualquiera puede inscribirse!"
      ]
    },
    {
      "title": "Appium自动化测试实战",
      "url": "https://www.udemy.com/course/appium-k/",
      "bio": "Appium基础入门",
      "objectives": [
        "1.了解什么是Appium框架",
        "2.理解Appium三元素",
        "3.掌握Appium的基本使用语法",
        "4.学会搭建基于Page Object的自动化测试框架"
      ],
      "course_content": {
        "课程导读": [
          "课程简介",
          "讲师介绍",
          "课程大纲"
        ],
        "课程内容": [
          "Appium简介",
          "Appium·技术一览",
          "基于Page Object的自动化测试框架"
        ],
        "课程回顾": [
          "课后寄语"
        ]
      },
      "requirements": [
        "了解自动化测试"
      ],
      "description": "三节课邀请到拥有16年软件和互联网开发行业从业经验的包建强老师，为你带来Appium基础入门讲解。课程将从Appium框架的原理讲起，带你了解Appium的基本使用语法，为你介绍如何搭建基于Page Object的自动化测试框架。希望通过本节课程的学习，你能掌握Appium编程技巧，加深对Appium框架的理解。\n本节课程是由授课老师与三节课合作制作的。在此，要特别感谢老师的辛苦付出！经历了课程立项、设计、开发中的众多环节，我们才能最终为你呈现现在的这门课程。无论是授课老师还是三节课团队，都希望这门课程能够让你有所收获，希望同学们结合个人工作情况，学以致用。\n本课程版权归三节课所有，未经书面同意私自录制、转载等行为均属侵权行为。课程内的所有内容，包括但不限于视频、文字、图片均由三节课公司或其他权利人依法拥有其知识产权，包括但不限于著作权、商标权、专利权等。未经三节课公司的明确书面特别授权，任何人不得为任何目的使用以及向任何自然人或单位提供出售、营销、出版或利用三节课官网上提供的任何内容或服务。如有违反，您将承担由此给三节课公司或其他权利人造成的一切损失。",
      "target_audience": [
        "1.自动化测试方向从业者",
        "2.寻求智能化API测试框架打造方法的技术人员",
        "3.对自动化测试感兴趣的学习者"
      ]
    },
    {
      "title": "Master: Robocorp RPA Testing QA Básico-Avanzado (Español)",
      "url": "https://www.udemy.com/course/master-robocorp-testing-qa-basico-avanzado-espanol/",
      "bio": "Pruebas Automatizadas con el Framework Robocorp RPA curso en Español, Sub(Es,En,Ita,Jap,Chi,Hin,Rus,Ara,Etc)",
      "objectives": [
        "Si eres QA, Tester ó Desarrollador, Aprenderás a utilizar el Framework Robocorp para la creación de Pruebas Automatizadas Nivel Básico-Avanzado",
        "Creación de Test con Python, Selenium, Webdriver",
        "Aprende Estrategias y Trucos Para Acelerar tus Bots",
        "Mejora tus tiempos de Pruebas",
        "Crearas tus propias funciones y métodos para mejorar tus pruebas"
      ],
      "course_content": {
        "Bienvenida": [
          "Introducción",
          "Instalando P-1",
          "instalando P-2",
          "Obteniendo ID",
          "Robocorp LAB",
          "Primer Test",
          "Open Available Browser"
        ],
        "Actualización de mi Página Web": [
          "Actualización de mi Página Web"
        ],
        "Actualizar Chrome Driver": [
          "Actualizar Chorme Driver"
        ],
        "Actualización a Visual Studeo Code": [
          "Introducción a Visual Stude Code",
          "Instalar Visual Studio Code",
          "Instalar Plugins en Visual Studeo Code",
          "Correr Ejemplo desde Visual"
        ],
        "Preguntas y Respuestas": [
          "Cómo hacer las Preguntas en el Curso ?"
        ],
        "Instalación de Python y Drivers": [
          "Introducción",
          "Instalando Python",
          "Instalar Visual Stude Code",
          "Instalando CMDER",
          "Instalando Drivers (Webdriver)",
          "Configurando Variables de Entorno"
        ],
        "Selectores CSS,ID y XPATH": [
          "Introducción a los Selectores",
          "Instalando Plugins",
          "Seleccionar por CSS y ID",
          "Seleccionar CSS,ID u Input",
          "Selectores Css por Clases",
          "Seleccionar por CSS y Atributos",
          "Seleccionar por CSS, Atributos y ID",
          "Seleccionar Xpath por Atributo",
          "Seleccionar por Xpath (And, Or)",
          "Seleccionar Xpath por Texto",
          "Seleccionar Xpath por Texto P-2",
          "Selectores Xpath por Contains",
          "Seleccionar Xpath por Plugins"
        ],
        "Bases de Python": [
          "Variables en Python",
          "Conversiones en Python",
          "Manejo de Cadenas",
          "Funciones con Cadenas",
          "Imprimir Valores con función (Format)",
          "Pedir Valores (Input)",
          "Operadores de Comparación",
          "Concatenar operadores (And y OR)",
          "Manejo de Listas",
          "Condional IF",
          "Condicional IF P-2",
          "Ciclo For P-1",
          "Ciclo For P-2",
          "Ciclo For P-3",
          "Ciclo While",
          "Funciones Simples",
          "Funciones con Parametros P-1",
          "Funciones con Parametros P-2",
          "Funciones por *ARGS"
        ],
        "Funciones de Texto (INPUT)": [
          "Input Text",
          "Input Text",
          "Input Text Visible"
        ],
        "Función Get Text": [
          "Validando el Texto"
        ]
      },
      "requirements": [
        "Conocer lo básico de Html y Principios de Programación",
        "Bases de la WEB"
      ],
      "description": "Donde el mundo se une para automatizar.\nGen2 RPA de Robocorp es mejor, más rápido y es la plataforma RPA más rentable del mundo, diseñada para desarrolladores y equipos que desean trabajar de manera más inteligente, no más difícil.\nLos equipos pueden crear, optimizar y acelerar las automatizaciones sobre la marcha, al mismo tiempo que reducen significativamente la carga de infraestructura necesaria para ejecutar las herramientas Gen1 RPA.\nLos equipos que ejecutan Robocorp ahorran hasta un 80 % de lo que han pagado tradicionalmente con herramientas Gen1.\ncompatibles con Python, RobotFramework, Jupyter, Github, Etc.\nLa tecnología de Robocorp permite a los desarrolladores crear cualquier automatización que su equipo pueda soñar. Nuestro enfoque programable aprovecha un poderoso ecosistema de código abierto de bibliotecas y palabras clave que le brinda la flexibilidad para crear automatizaciones con las que puede contar.\nNuestra pila de automatización del marco RPA está construida sobre Python. Ahora los desarrolladores pueden construir, integrar, implementar, analizar y mantener rápidamente automatizaciones complejas con Robocorp.\nAdemás de las ventajas intrínsecas de Python, también tiene una gran comunidad de desarrolladores y un vasto ecosistema de bibliotecas fácilmente disponibles que facilitan las integraciones con AI/ML, OCR y otros sistemas. En pocas palabras, cuando se trata de automatizaciones de edificios, Python es el lenguaje nativo de la automatización.",
      "target_audience": [
        "Estudiantes con conocimientos básicos de la web y testing, pero sobre todo gente que quiera hacer pruebas aut",
        "Personas que tienen Ganas de Ser QA"
      ]
    },
    {
      "title": "Jmeter接口性能及自动化测试实战",
      "url": "https://www.udemy.com/course/jmeter-performance-testing/",
      "bio": "Jmeter从入门到实战",
      "objectives": [
        "你将学会如何给web应用程序和REST API进行负载测试",
        "你将学会如何在给定负载下监控应用程序性能",
        "你将学会如何安装使用Jmeter插件，生成有效报告",
        "学会如何集成Selenium与Jmeter",
        "学习Jmeter Beanshell脚本基础知识",
        "学习如何实现Jenkin+Ant+Jmeters三者集成实现接口自动化测试",
        "借助于Jenkin+Ant+Jmeters搭建自动化测试框架",
        "学习如何用beanshell 借助于JSR223 Sampler编写测试框架"
      ],
      "course_content": {},
      "requirements": [
        "您无需具备任何负载测试经验即可开始本课程",
        "IT基础知识"
      ],
      "description": "******Jmeter 5.x版最新课程******\n性能测试工程师的需求量很大！！！！！\n使用最流行的开源性能测试工具Jmeter进行压力测试。\n课程的设计是零基础入门，而不必事先了解Jmeter或性能测试。\n\n\n课程完成后，你将掌握如何使用Jmeter进行性能和接口自动化测试，并可以运用到实际工作中，或者找到高薪工作！！\n\n\n****************************************************************************************************\n这门课包括：\nJmeter 简介\nJmeter UI组件\n使用代理录制和播放\n用线程组执行测试用例对应用加负载\n用监听器分析负载测试结果\n侦听器和线程组的附加插件\nJmeter中的断言\nJmeter中的控制器\n控制器在设计Jmeter脚本中的实际使用\nJmeter中计时器Timer的使用\n正则表达式提取动态响应\n使用外部文件做数据驱动测试\n关联\n在动态值上使用关联\nHttp cookie Manager\nBeanshell脚本介绍\n使用beanshell语言编写Jmeter脚本\nSelenium测试用例与Jmeter的集成，用jmeter运行selenium测试用例\nREST API概述和REST API的负载测试\n结合Jenkins+Ant+Jmeter实现自动化\n如何用beanshell 借助于JSR223 Sampler编写测试框架\n\n\n学完之后，您将能够借助Jmeter工具中的所有可用功能来设计健壮的性能测试用例，并且可以通过使用不同的负载参数来监视应用程序的性能",
      "target_audience": [
        "手工测试人员",
        "对学习性能测试感兴趣的人员",
        "想学习接口自动化测试的人员"
      ]
    },
    {
      "title": "Tester Universal - Introductorio",
      "url": "https://www.udemy.com/course/tester_universal_choucair/",
      "bio": "Impulsa tu carrera en el mundo del testing con un programa revolucionario inspirado en las mejores prácticas mundiales.",
      "objectives": [
        "Aprenderás los principales conceptos, técnicas y metodologías utilizadas en el campo del testing para comprender su importancia y su aplicabilidad.",
        "Conocerás los estándares de testing más reconocidos a nivel mundial para aplicar las mejores prácticas en cualquier proyecto de software.",
        "Identificarás las habilidades y competencias necesarias para ser un tester eficaz.",
        "Aprenderás a trabajar en equipo, comunicar resultados y participar en la mejora continua del proceso de testing."
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Contenido del curso"
        ],
        "Conceptos Claves de Pruebas": [
          "Calidad Vs Pruebas",
          "Calidad_Pruebas",
          "Principios de las pruebas - Visión",
          "Principios de las pruebas",
          "¿Para qué debo saber los principios?",
          "Más sobre el principios",
          "Causa Raíz_Defecto_Efecto",
          "Defectos y fallos"
        ],
        "Pruebas en el contexto de la Ingeniería de Software": [
          "Modelos de desarrollo _ Visión",
          "Modelos de desarrollo",
          "Niveles de prueba",
          "Niveles de Pruebas"
        ],
        "Pruebas Tempranas": [
          "Técnicas Estáticas de Pruebas",
          "Revisiones",
          "Técnicas estáticas de Pruebas"
        ],
        "Estrategia de Pruebas": [
          "Técnicas Dinámicas de Pruebas",
          "Clases de Equivalencia",
          "Clases de equivalencia"
        ],
        "Planeación y gestión de las pruebas": [
          "Riesgos de Proyecto y de Producto",
          "Riesgos de Proyecto y de Producto",
          "Niveles de Independencia de Pruebas"
        ],
        "Herramientas que soportan las pruebas": [
          "Clasificación de Herramientas - Parte 1",
          "Clasificación de Herramientas - Parte 2",
          "Clasificación de Herramientas que soportan las pruebas"
        ]
      },
      "requirements": [
        "No se necesita experiencia previa debido a que es un curso introductorio al mundo del Software Testing."
      ],
      "description": "Tester Universal es un programa introductorio que está inspirado en las mejores prácticas del testing en el mundo.\nEn este curso aprenderás los fundamentos del testing, entre ellos los principales conceptos, técnicas, metodologías y herramientas utilizadas en este campo. También exploraremos las habilidades y competencias necesarias para ser un tester eficaz.\n¿Por qué este curso es realmente especial? Porque se basa en los estándares de testing más importantes y reconocidos globalmente. Esto significa que tú como estudiante podrás aprender las prácticas que son altamente valoradas por las empresas.\nEl curso también te presenta retos que puedes aplicar a lo que has aprendido y así, desarrollar habilidades prácticas.\nBienvenidos a esta gran aventura. Este es el punto de partida para ingresar al mundo del Software Testing en el cuál podrás desarrollar una carrera, nuevas habilidades y otra perspectiva de una industria en crecimiento exponencial.\nTester Universal es un curso creado por Choucair Testing, una compañía de ingeniería de software con más de 23 años de trayectoria y reconocida por ser pionera en pruebas de software en Hispanoamérica. Te invitamos aprovechar el material que hemos dispuesto para ti con la guía de una de las más reconocidas testers e instructoras, Patricia Osorio.",
      "target_audience": [
        "Este curso está diseñado especialmente para personas que estén interesados en iniciar su carrera en la industria del testing."
      ]
    },
    {
      "title": "Governança de TI e Testes de Software (2025)",
      "url": "https://www.udemy.com/course/testes-de-software-para-iniciantes/",
      "bio": "Governança de TI e Testes de Software - 2025",
      "objectives": [
        "Aulas objetivas, super didáticas e simples de compreender para facilitar seu aprendizado.",
        "Aprenderá Testes de Software;",
        "Aprenderá Qualidade de Software;",
        "Aprenderá Gestão de Projetos de Software;",
        "Aprenderá sobre Governança de TI;",
        "Aprenderá sobre KPI e Métricas em TI;",
        "Aprenderá sobre Gestão de Riscos em Testes de Software;",
        "Aprenderá sobre Qualidade e Segurança em Testes de Software;"
      ],
      "course_content": {
        "Apresentação da Instrutora": [
          "Apresentação"
        ],
        "Testes de Software": [
          "Testes de Software",
          "Atribuições",
          "Tipo de Testes de Software",
          "Gestão, Planejamento e Processos",
          "Qualidade de Software",
          "Dimensões da Segurança em Testes de Software",
          "Gestão de Riscos em Testes de Software",
          "Dimensões Estratégicas"
        ],
        "Governança de TI": [
          "Management 4.0 em TI",
          "Governança de TI",
          "Métricas",
          "Elementos em Métricas",
          "Elementos da Engenharia de Valor",
          "Tipos de KPI - PARTE 1",
          "Tipos de KPI - PARTE 2",
          "Tipos de KPI - PARTE 3",
          "Pilares para Implementação de KPI e Métricas"
        ]
      },
      "requirements": [
        "Vontade de aprender."
      ],
      "description": "Este curso oferece uma abordagem integrada das práticas de governança em TI e dos testes de software, capacitando os participantes a alinhar estratégias de TI com os objetivos de negócios enquanto garantem a qualidade e a confiabilidade das soluções de software.\nObjetivos do Curso:\nCompreender os fundamentos e a importância da governança em TI para o sucesso organizacional.\nExplorar frameworks e modelos de governança de TI, como COBIT, ITIL, e ISO/IEC 38500.\nIntegrar práticas de testes de software nos processos de governança de TI.\nAprender a planejar e implementar uma estratégia de testes alinhada com as políticas de governança.\nDesenvolver habilidades para auditar e monitorar processos de TI e garantir conformidade com normas e regulamentos.\nAdquirir conhecimentos sobre a gestão de riscos e controle de qualidade em projetos de TI.\nPúblico-Alvo: Este curso é ideal para gerentes de TI, analistas de sistemas, engenheiros de software, profissionais de qualidade de software, consultores de TI, e qualquer pessoa interessada em aprimorar seus conhecimentos em governança de TI e testes de software.\nPontos de atenção:\nNeste curso você também pode fazer o download de todos os materiais utilizados nas aulas.\nEm caso de dúvidas ao longo do curso, peço que deixe mensagem no chat aqui da plataforma, pois em 24h consigo te responder e ajudar!\nBons estudos!",
      "target_audience": [
        "Todos com interesse por engenharia de software."
      ]
    },
    {
      "title": "Programación en Java para Selenium Webdriver",
      "url": "https://www.udemy.com/course/programacion-desde-cero-para-testers/",
      "bio": "Comienza a programar desde el primer minuto y desde cero: no requiere conocimientos previos.",
      "objectives": [
        "Programación Orientada a Objetos",
        "Programación con Java",
        "Estructuras de decisión",
        "Operadores lógicos y relacionales",
        "Estructuras de repetición",
        "Estructura de datos",
        "Métodos",
        "Ámbitos de variables",
        "Manejo de Strings"
      ],
      "course_content": {
        "Introducción a Java": [
          "Instalación de herramientas y tecnologías",
          "Introducción a Java",
          "Desafío - Introducción a Java",
          "Estructuras de decisión",
          "Operadores lógicos y relacionales",
          "Estructuras de repetición",
          "Estructuras de datos",
          "Métodos en Java",
          "Ámbitos de variables",
          "Manejo de Strings",
          "Desafío Integrador 1",
          "Desafío Integrador 2"
        ],
        "Programación Orientada a Objetos (POO)": [
          "Programación Orientada a Objetos. Clases y objetos",
          "Desafío POO 1",
          "Desafío POO 2",
          "Parámetros"
        ],
        "Características de la Programación Orientada a Objetos": [
          "Características de la Programación Orientada a Objetos",
          "Herencia",
          "Abstracción",
          "Polimorfismo",
          "Encapsulación"
        ],
        "Manejo de Excepciones": [
          "Manejo de Excepciones"
        ],
        "Desafío Final POO": [
          "Desafío POO 3"
        ]
      },
      "requirements": [
        "Tener deseos de aprender a programar",
        "No se requieren conocimientos previos de programación"
      ],
      "description": "¿Sabías que para aprender a automatizar el primer paso es dominar un lenguaje de programación?\nEn este curso te ayudaré a dar el primer paso para iniciarte en el mundo de la automatización aprendiendo a programar haciendo uso del lenguaje Java, comenzando desde la base para que en pocos días puedas empezar a dar tus primeros pasos en el mundo de la programación y crear las bases de tu carrera como QA Automation. Durante el curso podrás seguir las sesiones en videos, paso a paso y también tendrás varios desafíos a realizar que te ayudarán a poner en práctica lo aprendido y comprobar tus conocimientos.\nEn la documentación que acompaña las sesiones se incluyen las presentaciones vistas en las clases para que puedas repasar y continuar perfeccionando las habilidades adquiridas.",
      "target_audience": [
        "Testers que desean elevar su nivel técnico para incorporarse al área de automatización.",
        "Aquellas personas que deseen conocer como se programa con Java y quieran obtener una base sólida para obtener skills más técnicos."
      ]
    },
    {
      "title": "Pregatire pentru interviul QA (Testare Software)",
      "url": "https://www.udemy.com/course/pregatire-pentru-interviul-qa-testare-software/",
      "bio": "Cel mai bun ghid de pregatire pentru interviul de Software Tester (QA) in limba Romana.",
      "objectives": [
        "Cum sa iti pregatesti un CV bun",
        "La ce intrebari sa te astepti si ce se urmareste prin raspunsurile tale",
        "Ce teste tehnice pot aparea si cum sa le rezolvi",
        "Cum se poarta discutia salariala si care sunt salariile in IT"
      ],
      "course_content": {
        "Introducere": [
          "Despre curs si mine",
          "Bine de stiut",
          "Etapele unui interviu",
          "Test Introducere"
        ],
        "Interviul HR": [
          "Review CV",
          "Spune-mi cateva cuvinte despre tine",
          "De ce vrei acest job?",
          "Test limba Engleza (grila)",
          "Test limba Engleza (vorbit)",
          "Cum ai proceda in situatia in care...?",
          "Test interviu HR"
        ],
        "Interviul / Testul Tehnic": [
          "Cum ai testa...?",
          "Modul de lucru Agile",
          "Test practic bazata pe Equivalence partitioning & Boundary analisis",
          "Test practic bazat pe documentatie",
          "Test practic pentru game testing",
          "Test Scenario vs Test Case",
          "Test interviu tehnic"
        ],
        "Discutii Administrative": [
          "Discutia salariala",
          "Intrebari pentru angajator",
          "Verificare portofoliu"
        ]
      },
      "requirements": [
        "Cunostinte de baza in testare software"
      ],
      "description": "O gresala facuta de multe persoane aflate la inceput de drum este sa invete cat mai multe lucruri tehnice fara sa se pregateasca pentru cel mai important pas din procesul de gasirea al unui job. Pregatirea pentru un job in Testare Software (QA) nu se termina dupa absolvirea unui curs, aceasta ar trebui sa continue cu pregatirea CV-ului si a interviu.\nDe-a lungul timpului am vazut multi cursanti care stiau tot ce era necesar pentru o pozitie de QA dar nu erau chemati la interviuri si nici nu primeau un feedback la aplicatiile trimise. De cele mai multe ori CV-urile lor erau problematice pentru ca nu aveau destule informatii relevante dar aveau 1-2 pagini pline cu lucruri ce nu tin de IT sau tehnologie in general.\n\nPentru a avea succes in procesul de recrutare e nevoie sa stii sa te vinzi cat mai bine. Arata-i angajatorului ca tu esti persoana potrivita pentru pozitia deschisa in cadrul companiei sale. Pe langa acest aspect este bine sa te regatesti si din punct de vedere tehnic pentru testele care apar dupa discutiile initiale cu persoanele de la HR. Acest material iti ofera si diferite modele de teste tehnice + modul in care le poti rezolva.",
      "target_audience": [
        "Absolventi ai scolilor de IT",
        "Studenti care isi doresc un job in testare software",
        "Persoane care vor o conversie in cariera"
      ]
    },
    {
      "title": "Testing untuk Web Developer",
      "url": "https://www.udemy.com/course/testing-untuk-web-developer/",
      "bio": "Mampu menyusun dan mengembangkan web app dengan fungsi sebagai prioritas",
      "objectives": [
        "Memahami metode pengerjaan development web full stack menggunakan pendekatan outside in.",
        "Mempelajari cara membuat aplikasi dengan fokus pada fungsionalitas terlebih dahulu.",
        "Mengembangkan web app yang dapat digunakan dengan baik oleh khalayak umum.",
        "Mampu menyusun dan mengembangkan web app dengan fungsi sebagai prioritas utama."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Theory": [
          "ISO 9126",
          "White Box",
          "Black Box"
        ],
        "Feature Testing With TDD": [
          "Warming Up",
          "Assert",
          "Passing I",
          "Passing II",
          "Verify"
        ],
        "Outside-In TDD": [
          "Testing Pyramid",
          "What is Outside-In TDD"
        ],
        "Model Testing With TDD": [
          "Mongoose Fundamental",
          "Introduction to Model Testing",
          "Path Validation",
          "Method"
        ],
        "Server Testing With TDD": [
          "The Stack",
          "Status Code",
          "Response Content",
          "Refactoring",
          "API Errors"
        ],
        "Epilogue": [
          "Conclusion"
        ],
        "Quiz": [
          "Quiz"
        ]
      },
      "requirements": [
        "Sebelum mempelajari Course ini, pastikan kalian sudah memahami dasar-dasar pembuatan web apps terutama menggunakan JavaScript."
      ],
      "description": "Seringkali, bagian paling sulit dalam membuat aplikasi web full stack adalah kita harus mulai darimana. Karenanya, mempelajari metode pengerjaan development web full stack akan sangat membantu. Pada Course kali ini, kalian akan mempelajari salah satu metode pengerjaan web full stack. Kita akan menggunakan proses pengembangan outside in, dimana kita akan membuat aplikasi mulai dari fungsionalitasnya terlebih dahulu. Dengan mengerjakan sisi fungsionalitasnya terlebih dahulu, setidaknya kalian bisa memberikan web app yang dapat digunakan dengan baik oleh khalayak umum. Setelah menyelesaikan Course ini, kalian diharapkan mampu menyusun dan mengembangkan web app dengan fungsi sebagai prioritas utama.\nSeringkali, bagian paling sulit dalam membuat aplikasi web full stack adalah kita harus mulai darimana. Karenanya, mempelajari metode pengerjaan development web full stack akan sangat membantu. Pada Course kali ini, kalian akan mempelajari salah satu metode pengerjaan web full stack. Kita akan menggunakan proses pengembangan outside in, dimana kita akan membuat aplikasi mulai dari fungsionalitasnya terlebih dahulu. Dengan mengerjakan sisi fungsionalitasnya terlebih dahulu, setidaknya kalian bisa memberikan web app yang dapat digunakan dengan baik oleh khalayak umum. Setelah menyelesaikan Course ini, kalian diharapkan mampu menyusun dan mengembangkan web app dengan fungsi sebagai prioritas utama.\nSeringkali, bagian paling sulit dalam membuat aplikasi web full stack adalah kita harus mulai darimana. Karenanya, mempelajari metode pengerjaan development web full stack akan sangat membantu. Pada Course kali ini, kalian akan mempelajari salah satu metode pengerjaan web full stack. Kita akan menggunakan proses pengembangan outside in, dimana kita akan membuat aplikasi mulai dari fungsionalitasnya terlebih dahulu. Dengan mengerjakan sisi fungsionalitasnya terlebih dahulu, setidaknya kalian bisa memberikan web app yang dapat digunakan dengan baik oleh khalayak umum. Setelah menyelesaikan Course ini, kalian diharapkan mampu menyusun dan mengembangkan web app dengan fungsi sebagai prioritas utama.",
      "target_audience": [
        "Intermediate"
      ]
    },
    {
      "title": "Postman von Grund auf – REST API testen",
      "url": "https://www.udemy.com/course/postman-von-grund-auf-rest-api-testen/",
      "bio": "Praktischer Leitfaden zum Testen von REST-APIs mit Postman",
      "objectives": [
        "Grundlagen der Postman-Bedienung",
        "Erstellen und Verwalten von API-Anfragen",
        "Verstehen des JSON-Formats",
        "Verwaltung von Variablen in Postman",
        "Implementierung von Tests für API-Anfragen",
        "Automatisierung von Tests mit Postman Runner",
        "Überwachung von APIs mit Postman Monitors",
        "Praktische Beispiele für API-Tests"
      ],
      "course_content": {
        "Einführung": [
          "Über den Autor",
          "Einführung in API-Tests",
          "API-Methoden und Antwortcodes",
          "Einführung in Postman"
        ],
        "Umgebung vorbereiten": [
          "Installation von Postman",
          "Erstellen eines neuen Kontos",
          "Erste Konfiguration"
        ],
        "Grundlagen des API-Testens": [
          "Erstellen einer neuen Sammlung",
          "Einführung in die JsonPlaceholder-Plattform",
          "GET-Anfrage",
          "POST-Anfrage",
          "PUT-Anfrage",
          "DELETE-Anfrage",
          "Abfrageparameter",
          "Authentifizierung",
          "HTTP-Header"
        ],
        "Umgebung und Variablen": [
          "Erstellen globaler Variablen",
          "Erstellen von Variablen in der Sammlung",
          "Erstellen von Umgebungsvariablen"
        ],
        "Implementierung von Tests und Skripten": [
          "Implementierung des ersten Tests",
          "Erstellen eines Pre-Request-Skripts"
        ],
        "Automatisches Ausführen von Tests": [
          "Collections-Runner",
          "Postman Monitore"
        ],
        "Praktische Aufgaben": [
          "Praktische Aufgabe #1",
          "Praktische Aufgabe #2"
        ],
        "Theoretische Prüfung": [
          "Bestehe die theoretische Prüfung"
        ]
      },
      "requirements": [
        "Zugriff auf einen Computer mit Windows, macOS oder Linux",
        "Bereitschaft zu lernen und mit API-Tests zu experimentieren"
      ],
      "description": "Postman von Grund auf – REST API testen\nDieser Kurs vermittelt Ihnen ein umfassendes Verständnis für das Testen von REST-APIs mit Postman – einem der führenden Tools in der Softwareentwicklung und Qualitätssicherung. Ob Sie Einsteiger, Tester oder IT-Fachkraft sind: In diesem Kurs lernen Sie Schritt für Schritt, wie Sie APIs effizient analysieren, testen und automatisieren.\n\n\nWas Sie in diesem Kurs lernen:\n\n\nEinführung in Postman\nMachen Sie sich mit der Benutzeroberfläche vertraut und lernen Sie, wie Sie erste Anfragen erstellen und Ihre Umgebung konfigurieren.\n\n\nAPI-Anfragen erstellen und senden\nVerstehen Sie, wie HTTP-Methoden wie GET, POST, PUT und DELETE funktionieren. Arbeiten Sie mit Headern, Query-Parametern, Body-Daten im JSON-Format und Authentifizierungsmechanismen.\n\n\nVerwendung von Variablen\nNutzen Sie Umgebungs-, globale und Sammlungsvariablen zur dynamischen Gestaltung Ihrer Tests und reduzieren Sie manuellen Aufwand.\n\n\nTestskripte schreiben\nAutomatisieren Sie Validierungen mit Tests und Pre-/Post-Request-Skripten, um die Qualität und Korrektheit von API-Antworten sicherzustellen.\n\n\nTestautomatisierung\nVerwenden Sie den Postman Collection Runner sowie Monitors, um Tests regelmäßig auszuführen und die Verfügbarkeit Ihrer APIs zu überwachen.\n\n\nPraxisorientierte Übungen\nAnwenden des Gelernten durch reale Szenarien und Aufgaben mit echten Schnittstellen – ideal zur Vertiefung des Verständnisses.\n\n\nZertifizierungsvorbereitung\nNutzen Sie begleitende Materialien zur Vorbereitung auf Prüfungen und zur Dokumentation Ihrer erworbenen Fähigkeiten.\n\n\nFür wen ist dieser Kurs geeignet?\n\n\nSoftwaretester und QA-Engineers, die ihre Testkompetenz auf APIs erweitern möchten\nEntwickler, die zuverlässige Schnittstellen validieren und automatisieren möchten\nIT-Professionals, die sich mit modernen Tools wie Postman vertraut machen wollen\nEinsteiger im Bereich API-Testing, die systematisch und praxisnah lernen möchten\n\n\nIhre Vorteile:\n\n\nSofort anwendbares Wissen in echten Projekten\nBegleitende Community und Dozenten-Support für schnellen Austausch\nLernen im eigenen Tempo, zeitlich und örtlich flexibel\n\n\nStarten Sie jetzt und erlangen Sie fundierte Fähigkeiten im Testen von REST-APIs mit Postman – einem Schlüsselwerkzeug in der modernen Softwareentwicklung.",
      "target_audience": [
        "Programmierer und Entwickler",
        "Software-Tester",
        "Einsteiger im API-Testen"
      ]
    },
    {
      "title": "Arquitetura de testes de software - Curso COMPLETO!!",
      "url": "https://www.udemy.com/course/arquitetura-de-testes-de-software-curso-completo/",
      "bio": "Arquitetura de testes de software - Curso COMPLETO!!",
      "objectives": [
        "Como montar uma arquitetura de testes robusta e efetiva.",
        "Quando usar testes automatizados x manuais.",
        "Diferença entre engenheiro de testes e arquiteto de testes.",
        "Últimas tendências quando falamos em boas práticas de arquitetura de testes."
      ],
      "course_content": {
        "Introdução": [
          "Recados Iniciais",
          "Introdução"
        ],
        "Conceitos": [
          "Conceitos"
        ],
        "Planejamento": [
          "Planejamento 1",
          "Planejamento 2",
          "Planejamento 3",
          "Planejamento 4 - Tipos de testes"
        ],
        "Arquitetura de testes": [
          "Dicas Iniciais",
          "Conceitos",
          "Automação",
          "Automação - (Ferramenta)",
          "Automação 2 - (Ferramenta)",
          "Automação (longo prazo)",
          "Papel Test Automation",
          "Automação (Testabilidade)",
          "TAS",
          "Automação (Bad Smells)",
          "Estrutura (dividir para conquistar)",
          "Melhoria contínua",
          "O que automatizar?",
          "Context Driven",
          "Testes manuais",
          "Bônus",
          "Conclusão"
        ],
        "Bonus": [
          "Testes de performance"
        ]
      },
      "requirements": [
        "Conhecimentos básicas em testes de software."
      ],
      "description": "O conhecimento está aí acessível para todo mundo quando o assunto é software e testes, várias ferramentas, técnicas, infinitos vídeos no youtube, tudo está bem acessível!! Porém, quando o assunto é mais técnico, quando falamos de planejamento e arquitetura de testes o material é bem escasso e muitas vezes inconclusivo e confuso!\nPor isso resolvi criar esse curso com dicas extremamente efetivas e simples de entender que podem ser aplicadas imediatamente, em projetos novos ou em projetos em andamento.\n\nTudo o que será apresentado no curso é resultado de experiência prática em conjunto com o que a literatura de arquitetura de testes prega.\nO curso não aborda nenhuma ferramenta específica, com isso o que é aprendido aqui no curso pode ser aplicado com qualquer ferramenta, qualquer ecossistema de automação, qualquer ambiente, qualquer metodologia.\nA área de testes é uma das que mais cresceu nos últimos anos e todo o mercado está muito aquecido, porém os profissionais estão basicamente aprendendo a testar, programar automações... estas atividades são simples e qualquer um consegue facilmente aprendê-las na internet, com isso o planejamento, a montagem de uma arquitetura robusta parece ficar de lado o que acaba gerando sistemas com mais falhas, que levam muito tempo para serem testados entre várias outras coisas que serão vistas no curso.",
      "target_audience": [
        "Analistas de testes",
        "Desenvolvedores",
        "Arquitetos de teste"
      ]
    },
    {
      "title": "Master Selenium in മലയാളം | by Entri",
      "url": "https://www.udemy.com/course/master-selenium-in-by-entri/",
      "bio": "Selenium WebDriver, IDE, TestNG, Framework Basics – Learn Automation Testing in Malayalam with Hands-on Practice",
      "objectives": [
        "Build and run your first automation scripts using Selenium WebDrive",
        "Confidently locate web elements using XPath, CSS, ID, and more",
        "Automate real browser actions like clicks, hovers, and dropdowns",
        "Master wait strategies and capture screenshots for test results",
        "Record, play back, and debug tests using Selenium IDE easily"
      ],
      "course_content": {
        "Automation Testing Part-1": [
          "Introduction to Automation Testing",
          "Automation Testing Frameworks",
          "Introduction to Selenium"
        ],
        "Automation Testing Part-2": [
          "Basic Automation Scripting",
          "Selenium Components",
          "Selenium IDE"
        ],
        "Automation Testing Part-3": [
          "Selenium WebDriver 1st program",
          "Locators",
          "Locators - 2"
        ],
        "Automation Testing Part-4": [
          "Selenium WebDriver Commands",
          "Drop down command",
          "Xpath",
          "Double Click & Right Click",
          "Drag and Drop"
        ],
        "Automation Testing Part-5": [
          "Wait commands - 1",
          "Wait commands - 2",
          "Screenshot Capture in Selenium"
        ]
      },
      "requirements": [
        "No programming experience needed. Basic understanding of manual testing is helpful but not required.",
        "You just need a computer with internet access to install Selenium and related tools."
      ],
      "description": "Kickstart your automation testing journey with this compact Malayalam-language course designed for beginners and manual testers. Learn Selenium WebDriver, TestNG, and Selenium IDE through hands-on sessions—no programming experience required.\nThis course guides you from the basics of automation testing to building real test cases using Selenium tools. You'll learn to install necessary tools, write and run automation scripts, handle user interactions, and apply testing strategies confidently.\nWhy Take This Course?\nTaught fully in Malayalam – easy to follow and understand\nStep-by-step scripting with Selenium WebDriver\nNo coding background needed – ideal for beginners\nCompact and practical – complete essentials in a few hours\nQA career focused – suitable for interviews and real projects\nCovers setup to execution – end-to-end automation basics\nLearn at your own pace – pause, practice, and repeat anytime\nWhat You'll Learn:\nIntroduction to automation testing and its advantages\nSetting up Selenium, Eclipse, and browser drivers\nWriting your first script using Selenium WebDriver\nUnderstanding WebDriver, Grid, and IDE\nUsing locators: XPath, CSS, ID, Name\nBrowser commands, navigation, and mouse actions\nWorking with dropdowns, alerts, waits, and user actions\nCapturing screenshots for reports\nRecording and running tests with Selenium IDE\nBasics of frameworks like TestNG and Appium\nRequirements:\nBasic knowledge of software testing\nNo prior programming required (Java basics optional)\nA computer with internet access\nWho This Course is For:\nManual testers wanting to upskill\nBeginners exploring test automation\nQA aspirants preparing for interviews\nDevelopers seeking testing knowledge\nAnyone pursuing a career in software testing\nBy the End of the Course, You Will:\nUnderstand automation testing fundamentals\nSet up Selenium with required tools\nWrite and run test scripts\nWork with locators, waits, and browser actions\nUse Selenium IDE for quick automation\nUnderstand the role of frameworks like TestNG\nBe ready to take on QA projects and interviews",
      "target_audience": [
        "Manual testers and absolute beginners curious about automation testing. Ideal for QA job seekers, students, and developers who want to understand Selenium and start building test scripts."
      ]
    },
    {
      "title": "自动化测试框架",
      "url": "https://www.udemy.com/course/lcghfwjb/",
      "bio": "DevOps自动化测试与部署",
      "objectives": [
        "1.了解自动化测试技术的分支",
        "2.学习基本的Selenium测试技术",
        "3.学习判断可测试性问题的标准",
        "4.了解封装测试用例的常规策略（高级测试人员）"
      ],
      "course_content": {
        "课程导读": [
          "课程简介",
          "讲师介绍",
          "课程大纲"
        ],
        "课程内容": [
          "自动化测试体系",
          "分层测试思想",
          "三种测试驱动开发流程",
          "持续发布CD",
          "灰度发布",
          "概念辨析（上）",
          "概念辨析（下）及总结"
        ],
        "课程回顾": [
          "课后寄语"
        ]
      },
      "requirements": [
        "有一定技术开发能力"
      ],
      "description": "自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。通常，在设计了测试用例并通过评审之后，由测试人员根据测试用例中描述的规程一步步执行测试，得到实际结果与期望结果的比较。\n\n本课程简要阐述了DevOps中的关键环节——自动化测试与部署——的完整体系。\n以下角色是本课程的核心受众及其收益：\n测试经理：\n根据测试资源设计测试策略\n制定完整的自动化测试及发布流程\n测试人员：\n学习判断可测试性问题的标准\n\n\n本节课程是由授课老师与三节课合作制作的。在此，要特别感谢老师的辛苦付出！经历了课程立项、设计、开发中的众多环节，我们才能最终为你呈现现在的这门课程。无论是授课老师还是三节课团队，都希望这门课程能够让你有所收获，希望同学们结合个人工作情况，学以致用。\n本课程版权归三节课所有，未经书面同意私自录制、转载等行为均属侵权行为。课程内的所有内容，包括但不限于视频、文字、图片均由三节课公司或其他权利人依法拥有其知识产权，包括但不限于著作权、商标权、专利权等。未经三节课公司的明确书面特别授权，任何人不得为任何目的使用以及向任何自然人或单位提供出售、营销、出版或利用三节课官网上提供的任何内容或服务。如有违反，您将承担由此给三节课公司或其他权利人造成的一切损失。",
      "target_audience": [
        "1.自动化测试方向从业者",
        "2.想要进入自动化测试行业的开发者或程序员",
        "3.对自动化测试感兴趣的学习者"
      ]
    },
    {
      "title": "QA Automation Selenium Webdriver , Java , Git ,Jenkis",
      "url": "https://www.udemy.com/course/qa-automation-selenium-webdriver-java-git-jenkis/",
      "bio": "Aprende a automatizar con selenium y webdriver , Git, , Git Lab, Java y hacer un continuous integration con Jenkis",
      "objectives": [
        "Escribir mejores pruebas de aceptación automática",
        "Encarar logicas de automatizacion",
        "A crear proyecto de Automation desde cero usando Selenium Webdriver como framework usando Spring Boot",
        "Comandos git para nuestros proyecto",
        "Subir nuestro proyecto a un repositorio GIT Lab",
        "Hacer correr nuestro test automatizado con un job de Jenkis",
        "Generar Reportes al correr nuestro test automatizado",
        "Webdriver con el navegador Chrome",
        "Multi Browser",
        "Conceptos de selectores",
        "Test con Eclipse ID",
        "Test con Intellij Idea"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Configurando el ambiente en ID Eclipse": [
          "Configuracion del ambiente de trabajo",
          "Descargar el JDK de Java - Crear la cuenta para descargar",
          "Descargar e Instalar Java",
          "configurar Java en nuestro equipo (Variable Global)",
          "Instalar Eclipse",
          "Crear proyecto Maven",
          "Instalar Git",
          "Crear Lllaves SSH",
          "Subir codigo a Git Lab"
        ],
        "Creamos el primer Test con Selenium webdriver y dubir a repositorio Git": [
          "Abrir Proyecto con Eclipse",
          "Descargar Chromedriver",
          "Crear el primer Test",
          "Haciendo correr el primer test y conclusiones",
          "Subir codigo a Git Lab Test google test"
        ],
        "Crear el proyecto con Automation con el ID Intellij Idea": [
          "Instalar intellij Idea version comunity",
          "Introduccion a maven",
          "Instalar Maven",
          "Ejecutar Maven desde el intelliJ IDEA",
          "Proyecto Base Selenium",
          "Explorando el proyecto",
          "Selectores en Java Selenium"
        ],
        "Crear varios test con Intellij Idea": [
          "ScreenShot Failed Test",
          "Multiples browser Test",
          "Verificar Links Test",
          "Download file Test",
          "Check Download URL Test",
          "Upload File Test",
          "Read Excel",
          "Read Cell Value",
          "Write Excel",
          "Write Cell Value",
          "Excel + Selenium Test",
          "Subiendo Cambios al repositorio Git Lab"
        ],
        "Crear nuestro Test con un framework": [
          "Estructura del primer test",
          "Creando Page Obejct",
          "Assert TestAutomatizado",
          "Constant Primer test"
        ],
        "Automatizar Proyecto Completo con el Framework": [
          "intro al proyecto automation",
          "Selector Login",
          "Page Object Login sections",
          "Metodos del given",
          "Test Login Applications",
          "Espera Inplicita y explicita",
          "FlueWait espera"
        ],
        "Page Object Model en Selenium": [
          "Concepto de Page Objecto Model",
          "Creando la Base de los comandos de selenium webdriver",
          "Creando Page",
          "Creando el Test",
          "Resumen del proyecto a automatizar",
          "Creando el Menu Option Page",
          "Test Menu Option",
          "Return Page web",
          "Creando el Dropdown Test",
          "Select Catalog Page",
          "Creando CheckoutPage",
          "Personal information Page",
          "Finish Page",
          "Summary del proyecto"
        ],
        "Continuous integrations con Jenkins": [
          "Instalar y configurar Maven",
          "Ejecutar proyecto con Maven",
          "cambiar Java 16 a 11",
          "Instalar Java 11",
          "Configurar java 11 en el ID",
          "Instalar Jenkis localmente",
          "Ejecutar el proyecto conjenkis de manera local",
          "Subir Proyecto a un repositorio Git Lab",
          "Ejecutar Proyecto Maven desde el repositorio",
          "Generar reporte con Allure",
          "Subir los cambios al repositorio"
        ],
        "Despedida": [
          "Despedida del Curso"
        ]
      },
      "requirements": [
        "Conceptos básicos de manejo de windows",
        "Conceptos básicos de programación.",
        "Conceptos básicos sobre JAVA para entender el framework de manera mas real y rapida",
        "Una computadora con sitema opertivo windows 7 o mayor",
        "Conección a internet estable",
        "Conceptos basicos de Git",
        "Conceptos Basicos de Git Lab"
      ],
      "description": "¡Conviértete hoy mismo en un QA Automation con java con selenium webdriver  y aprende una de las habilidades más solicitadas por las empresas de software que buscan empleados bien cualificados en este 2023!\n\n\n¡Este es el curso más completo aprenderas a automatizar, pero manteniendo la simplicidad para que aprender una tecnología con Java de manera mas sencilla y sea accesible para todos los estudiantes, para el lenguaje de programación Java con Spring Boot en Udemy! Ya sea que nunca hayas programado antes, o bien ya conozcas la sintaxis básica o tal vez quieras aprender sobre las funciones avanzadas de selenium webdriver con Java y maven, ¡este curso es sin duda para ti si eres QA Manual y que quieres aprender QA Automation! En este curso te enseñaremos selenium webdriver desde lo más básico hasta convertirte en un experto capaz de programar lo que quieras.\n\n\n¡Con más de 60 clases, varias tareas de ejercicios y más de 10 horas de vídeo, este curso integral no dejará ningún concepto sin tratar! ¡Nuestro curso incluye varios mini proyectos desde lo mas basico hasta crear un como un mega proyecto final para crear un todo un portafolio de conocimientos prácticos en selenium webdriver!\n\n\nAprende a usar selenium webdriver  para tareas del mundo real en la parte de Front End, Mostrar reportes generados ,  jenkis, y todo subirlo a un repositorio GIT y mucho más.\n\n\nEste curso te enseñará selenium webdriver de una manera práctica, y además acompañando a cada una de las clases tienes la explicación práctica de conceptos diferente de programación en selenium webdriver, junto con un notebook con todo el código programado correspondiente a esa clase. ¡Aprende de la manera que sea mejor para ti: viendo el vídeo, programando desde cero o repasando el script ya creado mientras escuchas el audio del vídeo!\n\n\nDurante nuestro curso cubriremos una amplia variedad de temas, que incluyen entre otros:\n\n\nQué es selenium webdriver y por qué es tan popular para la automatizacion Front End\n\n\n- Conceptos básicos de la línea de comandos en bash con GIT\n\n\n- Cómo aplicar spring boot a nuestro proyecto\n\n\n- Reportes en selenium webdriver\n\n\n- Instalar Jenkis\n\n\n- Crear un Jobs para nuestros test\n\n\n- Spring Boot\n\n\n- Maven para nuestro proyecto\n\n\n- Ejecutar el test multi browser\n\n\n- Download y upload file Test\n\n\n- Como trabjar con excel y selenium\n\n\n¡Además, obtendrás acceso de por vida a más de 60 clases con sus dispositivos  correspondientes para cada tema de cada clase!\n\n\n¡Y por si fuera poco,para que estes tranquilo este curso viene con una garantía de devolución de dinero de 30 días! Si no estás satisfecho de alguna manera, recuperarás todo tu dinero, así que tienes riesgo nulo. Además, tendrás acceso a los notebooks como agradecimiento por probar el curso.\n\n\nEntonces,¿ a qué estás esperado? Aprende selenium webdriver de una manera que hará avanzar tu carrera profesional como QA Automation y aumentará tus conocimientos y opciones de ser contratado gracias a dominar esta nueva habilidad, ¡todo de una manera sencilla y práctica!",
      "target_audience": [
        "Personas que quieren entrar al fascinante mundo de la automatización con framework potentes",
        "Personas que trabajan como QA Manual y quieren analizar la parte de QA Automation Front End"
      ]
    },
    {
      "title": "Selenium və Java ilə Test Avtomatlaşdırma",
      "url": "https://www.udemy.com/course/selenium-ve-java-ile-test-avtomatlasdirma/",
      "bio": "Selenium, Java və XPath ilə real layihələrdə veb tətbiqlərin Uİ test avtomatlaşdırmasını öyrənmək üçün praktiki yol",
      "objectives": [
        "Test avtomatlaşdırmasının əsaslarını öyrənərək, Selenium və Java ilə veb tətbiqləri test etmək bacarığı əldə edəcəksiniz",
        "HTML, DOM, XPath kimi ön-tərəf texnologiyalarını və test obyektlərini effektiv şəkildə necə tapmağı öyrənəcəksiniz",
        "Java-nın əsas sintaksisini, funksiyalarını və obyekt-yönümlü proqramlaşdırma əsaslarını praktiki tətbiqlərlə mənimsəyəcəksiniz",
        "Selenium ilə ilk avtomatlaşdırılmış testlərinizi yazmağı və test ssenarilərini dizayn etməyi öyrənəcəksiniz",
        "Test avtomatlaşdırma layihələrində Selenium və JUnit-in güclü inteqrasiyasından istifadə etməyi öyrənəcəksiniz",
        "Qara qutu test dizayn metodlarından istifadə edərək, real layihələrdə tək-səhifəlik və ucdan-uca test-hallar və test-kodları inkişaf etdirəcəksiniz"
      ],
      "course_content": {},
      "requirements": [
        "Bu kursdan əvvəl, Proqram Testi və QA-nın əsaslarını öyrənməlisiniz. Bu mövzuda digər bir kursumuz mövcuddur.",
        "Java proqramlaşdırma təcrübəsi tələb olunmur. Test kodunu yazmaq üçün lazım olan Java proqramlaşdırma hissələrini öyrənəcəksiniz"
      ],
      "description": "Azərbaycan dilində Selenium və Java ilə ilk onlayn Test Avtomatlaşdırma kursunu təqdim etməkdən məmnunluq duyuruq.\nBu kurs, yüksək səviyyəli praktiki məşğələlər və tətbiqi biliklərə əsaslanaraq hazırlanmışdır. Kursun təlimçisi, 1998-ci ildən test avtomatlaşdırması sahəsində mütəxəssis olaraq fəaliyyət göstərən və hal-hazırda İngiltərədə yaşayan Azərbaycan əsilli bir ekspertdir. Təlimçimizin, IBM kimi dünya səviyyəli şirkətlər üçün test və keyfiyyət təminatı sahələrində konsaltinq və təlim xidmətləri göstərməkdə 25 ildən artıq təcrübəsi vardır.\nBu kurs sizi Selenium və Java istifadə edərək test avtomatlaşdırması sahəsində peşəkar etməyə hazırlayır. Proqram testlərinin təməllərindən başlayaraq, veb tətbiqlərin ön-tərəf texnologiyalarını, HTML və XPath kimi lokatorları öyrənəcəksiniz. Kursda həmçinin Java proqramlaşdırma bilikləri, Selenium əmrləri və JUnit ilə test inteqrasiyası əhatə olunur. Real layihələrdə tək-səhifəlik və ucdan-uca test kodları inkişaf etdirməklə praktiki təcrübə qazanacaqsınız. Kursun sonunda real tətbiqlər üzərində avtomatlaşdırılmış testlər yazmaq bacarığını mənimsəyəcəksiniz. Bu, karyeranızı inkişaf etdirmək üçün əvəzsiz bir imkandır!\nKursun ilkin şərtləri: Kursa qoşulmaq üçün Java və ya digər proqramlaşdırma dillərini bilməniz zəruri deyil. Selenium ilə Java əsaslı test avtomatlaşdırma kodunun yazılması üçün lazım olan minimal Java bilikləri bu kursda tədris edilir. Qlobal test və QA mütəxəssislərinin tövsiyələrinə əsasən, test avtomatlaşdırmasına başlamazdan əvvəl Proqram Testi və QA-nın əsaslarını bilmək vacibdir. Bu səbəbdən, kursun ilkin tələbi olaraq Proqram Testi və QA Əsaslarının öyrənilməsi güclü şəkildə təklif olunur. İlk addım olaraq, bu kursdan əvvəl Udemy platformasında mövcud olan \"Proqram Testi və QA-nın Təməlləri (Azərbaycan dilində)\" adlı kursumuzu alıb bitirməniz və sonra bu kursu alıb öyrənməniz tövsiyə edilir.\nKursumuz, təlimçimizin 25 illik təcrübəsinə və müxtəlif şirkətlərə və test mühəndislərinə verdiyi təlimlərə əsaslanaraq hazırlanmışdır. Kursun məzmunu, məntiqi ardıcıllıqla, öyrənənləri test avtomatlaşdırmasının maraqlı dünyasına daxil edəcək.\nMüasir və qabaqcıl test və QA texnologiyalarına əsaslanan onlayn və praktiki video dərslərimizlə, Azərbaycanımızın test və QA sahəsinin inkişafına töhfə verməkdən qürur duyuruq.\nHər bir həmvətənimizə test və QA sahəsində uğurlar arzulayırıq!",
      "target_audience": [
        "Test avtomatlaşdırılmasına başlamaq istəyən yeni başlayan proqram test mühəndisləri",
        "Java və Selenium ilə real layihələrdə test bacarıqlarını inkişaf etdirmək istəyənlər",
        "Manual testdən avtomatlaşdırılmış testə keçmək istəyən proqram testçiləri"
      ]
    },
    {
      "title": "QA Testing: Guia Media Pruebas, API y Automatizacion",
      "url": "https://www.udemy.com/course/qa-testing-guia-media-pruebas-api-y-automatizacion/",
      "bio": "Guia que incluye tips personales. Uso de SeleniumLibrary y mas de 50 Keywords con ejemplos",
      "objectives": [
        "QA Testing",
        "Pruebas de API",
        "Postman",
        "Automatizacion de Pruebas de API con Postman",
        "Robot Framework",
        "Scrum",
        "Pycharm",
        "Selenium Library"
      ],
      "course_content": {
        "Introducción al curso": [
          "Introducción"
        ],
        "Scrum y la gestion de Calidad": [
          "Introduccion a la sección",
          "¿Qué es un Proyecto?",
          "Gestion Predictiva",
          "Gestion Adaptativa o Agil",
          "Gestion Ágil Vs Gestión Tradicional",
          "El manifiesto Agil",
          "Scrum y la calidad",
          "La comunicacion efectiva y ser un oyente activo",
          "Metodologías y tu opinión",
          "Aprende acerca de las metodologias"
        ],
        "Python": [
          "¿Qué es Python y por que es importante para nosotros como QA?",
          "Acerca de Python 3 En MAC",
          "Instalando Python 3 En MAC",
          "Instalando Python 3 en WINDOWS",
          "Revisemos lo que hemos aprendido de Python"
        ],
        "Robot Framework": [
          "Introduccion a la sección",
          "¿Qué es un Framework para automatizar pruebas?",
          "Origen e Historia de Robot Framework",
          "Capacidades y Funcionalidades de Robot Framework",
          "Robot Framework y Selenium",
          "SOLO MAC en Python 2: Instalando Robot Framework en tu ordenador",
          "WINDOWS: Instalando RobotFramework en tu Computador Python 3",
          "MAC: Configurando Chromedriver para el navegador",
          "Variable PATH en Windows",
          "WINDOWS: Actualizando PIP en Python 3",
          "WINDOWS: Configurando Chromedriver para el navegador",
          "Clase Extra: Links para descargar los diferentes drivers",
          "Selenium2Library y Selenium",
          "Instalando Selenium2Library (o SeleniumLibrary)",
          "Frameworks de Automatización",
          "Probemos tu conocimiento"
        ],
        "Pycharm": [
          "Introduccion a la sección",
          "¿Qué es un IDE y cuales son sus ventajas?",
          "Qué es Pycharm?",
          "Pycharm: Ventajas y beneficios en relacion a Sublime Text",
          "MAC: Descargando e instalando Pycharm",
          "WINDOWS: Descargando e instalando Pycharm",
          "Conociendo la interface y creando la primera prueba automatica"
        ],
        "Keywords Utiles de Robot Framework y su libreria SeleniumLibrary": [
          "¿Qué son los Keywords y como se usan?",
          "Creando pruebas automaticas con Pycharm",
          "Tips para organizar tus carpetas de codigos de automatizaciones",
          "Caso 001 Manejar Alertas",
          "Corrigiendo errores en el codigo del Caso 001",
          "Caso 002 Asignar identificadores y hacer capturas de pantalla",
          "Asignar identificadores y hacer capturas de pantalla - Recursos y Comandos",
          "Caso 003 Hacer clicks sobre diferentes elementos de la pagina",
          "Caso 004 Hacer doble clic en Ventana Popup",
          "Caso 005 Verificar Elementos dentro el UI",
          "Caso 006 Verificar textos en el UI",
          "Caso 007 Inspeccionando todos los componentes de una seccion o pagina",
          "Configurando la velocidad de Selenium",
          "Usando Webdrivermanager con Robot Framework",
          "Solucionando problemas con los navegadores (Firefox, Edge-Chromium)",
          "Webdrivers ()",
          "Ejecutando un Javascript",
          "Comparando cadenas y comentando el codigo",
          "Enviando tus reportes a un directorio con Robot",
          "Repasemos lo aprendido sobre Robot y sus keywords"
        ],
        "Pruebas de API: Fundamentos y Conceptos": [
          "Lo basico acerca de las pruebas",
          "Que es un Json y por que es tan importante en las pruebas de API",
          "Respuestas, documentacion y metodos",
          "Como redactar un caso de prueba de API",
          "Postman y su estructura",
          "Comandos CURL y Automatizacion con Postman",
          "Algunas API para practicar",
          "Probemos tu conocimiento de APIs",
          "¿Qué debemos entender de las pruebas de API?"
        ],
        "Automatizando Pruebas de API Con Postman": [
          "Casos de Prueba: Poemist.com",
          "Casos de Prueba: Google Searh API",
          "Casos de Prueba: Nasa",
          "Conclusiones"
        ],
        "Buenas prácticas de testing": [
          "Introduccion a la sección",
          "Respecto al Producto: No podras hallar todos los errores",
          "Respecto al Producto: No te conviertas en el dueño de los lanzamientos",
          "Respecto a las pruebas: Formas de Pensamiento",
          "Respecto a las pruebas exploratorias: Cómo comenzar?",
          "¿Qué significa cuando dices que algo esta correctamente probado?",
          "Se me pasaron los errores, ¿Qué hacer?",
          "¿Qué hacer cuando un producto es dificil de probar?",
          "¿Puedo usar mi confusion como herramienta para probar?",
          "No confundas una prueba con probar un sistema",
          "Es mas fácil hallar errores la primera vez que pruebas un producto",
          "En tus procedimientos evita datos contenido estatico"
        ],
        "Siguientes Pasos": [
          "Dejame tu opinión del curso"
        ]
      },
      "requirements": [
        "Tener Conocimientos Basicos de QA",
        "Terminos de pruebas de sotware",
        "Metodologias"
      ],
      "description": "Este curso esta creado con la intención de brindarte las herramientas adecuadas para las pruebas de páginas web. Dadas las grandes oportunidades que existen en el mercado de la industria del desarrollo del software y las aplicaciones. Para este curso espero que domines la mayoría de los conceptos de pruebas de software y durante el desarrollo de este trabajaremos con ejemplos prácticos de pruebas automatizadas para SeleniumLibrary de Robot Framework.\nCrearemos automatizaciones utilizando muchos más keywords de Robot Framework con la librería selenium, además de adentrarnos mucho más sobre el entorno de trabajo Scrum y su diferencia con las metodologías tradicionales.\nTambién hablaremos a mayor profundidad sobre las pruebas de API y las diferentes respuestas que podemos recibir de ellas y algunos tips de postman para mejorar tu trabajo y automatizar las pruebas.\nTrabajaremos con el IDE pycharm para la creación de nuestro código y explicaremos las ventajas de trabajar con un ambiente de desarrollo integrado para poder probar el código una vez lo vayas creando.\nEl propósito de este curso es que puedas entender a mayor profundidad las herramientas de automatización y además puedas crear tus propias automatizaciones en adelante con Robot framework y la librería selenium en Python.",
      "target_audience": [
        "Ingenieros de Pruebas, Ingenieros de Sistemas, Testers, Analistas de Prueba"
      ]
    },
    {
      "title": "Teste de Performance com Jmeter",
      "url": "https://www.udemy.com/course/jmeter52/",
      "bio": "Teste de Performance para Aplicações Web",
      "objectives": [
        "Realizar teste de carga em aplicações Web utilizando o Jmeter"
      ],
      "course_content": {
        "Introdução ao HTTP": [
          "AVISO IMPORTANTE",
          "Introdução ao HTTP"
        ],
        "Construindo o primeiro script no Jmeter": [
          "Primeiro script no Jmeter",
          "Ampliando o script"
        ],
        "Gravação da navegação": [
          "Utilizando o HTTP(S) Test Script Record",
          "Filtragem da requisições"
        ],
        "Cache no Jmeter": [
          "Cache no Jmeter"
        ],
        "Execução do Teste": [
          "Configuração do workload",
          "Execução do teste"
        ],
        "Um exemplo mais complexo": [
          "Explicação sobre o ambiente usado e caso de teste escolhido",
          "Gravando o exemplo",
          "Organizando o script de teste",
          "Extrator de expressão regular - parte 1",
          "Extrator de expressão regular - parte 2",
          "Extrator de expressão regular - parte 3",
          "Lidando com as requisições AJAX",
          "Utilizando o CSV Data Set Config",
          "Asserção de resposta e timer",
          "Testando o script de teste"
        ],
        "Execução do exemplo mais complexo": [
          "Execução do teste",
          "Geração do relatório da execução"
        ]
      },
      "requirements": [
        "Jmeter",
        "Navegador web",
        "S.O. com Java 8",
        "Noções de HTML"
      ],
      "description": "O  curso apresenta a criação de Teste de Performance para aplicações  Web da maneira mais compreensível possível. O curso será altamente prático e objetivo, e exibirá os elementos do Jmeter necessários à realização de teste de carga . Tratará desde a criação de um simples caso de teste à execução do workload do teste de performance, análise do resultado e dicas sobre a execução do teste.",
      "target_audience": [
        "Analista de Qualidade de Software que não conheçam Teste de Performance",
        "Desenvolvedores web que necessitem realizar testes de performance"
      ]
    },
    {
      "title": "[2025] Cypress od podstaw: Automatyzacja testów",
      "url": "https://www.udemy.com/course/cypress-od-podstaw-automatyzacja-testow/",
      "bio": "Cypress w praktyce – od testów E2E po API, krok po kroku",
      "objectives": [
        "Instalacji i konfiguracji Cypressa",
        "Pisania testów end-to-end od podstaw",
        "Wyszukiwania i asercji elementów na stronie",
        "Obsługi formularzy, checkboxów i dropdownów",
        "Organizacji testów z wykorzystaniem Page Object Model",
        "Tworzenia własnych komend (Custom Commands)",
        "Wysyłania zapytań HTTP za pomocą cy.request()",
        "Struktury i składni testów (describe, it, beforeEach)"
      ],
      "course_content": {
        "Wprowadzenie": [
          "O instruktorze",
          "Wstęp do biblioteki Cypress"
        ],
        "Przygotowanie środowiska": [
          "Instalacja środowiska Nodejs",
          "Instalacja Git-Bash",
          "Instalacja edytora kodu",
          "Konfiguracja edytora kodu"
        ],
        "Wstęp do języka JavaScript": [
          "Wprowadzenie do modułu",
          "Zmienne i typy danych w JavaScript",
          "Instrukcje warunkowe w JavaScript",
          "Funkcje w JavaScript",
          "Pobieranie elementów strony w JavaScript",
          "Pętla for",
          "Pętla while",
          "Pętla do...while",
          "Pętla for of",
          "Tablice w JavaScript",
          "Metody na tablicach w JavaScript",
          "Klasy w JavaScript",
          "Dziedziczenie",
          "Pliki z lekcji"
        ],
        "Instalacja i konfiguracja Cypress": [
          "Instalacja biblioteki Cypress",
          "Omówienie podstawowej struktury plików",
          "Konfiguracja biblioteki Cypress"
        ],
        "Interakcja elementami na stronie": [
          "Terminologia DOM",
          "Podstawowa struktura testu",
          "Rodzaje lokalizatorów",
          "Znajdowanie elementów na stronie",
          "Kliknięcie w element",
          "Wpisywanie i czyszczenie wartości w pole",
          "Przechowywanie obiektu polecenia",
          "Pobieranie wartości tekstowych",
          "Obsługa checkboxów i pól opcji",
          "Date pickery w aplikacjach webowych",
          "Listy i rozwijane menu",
          "Okienka pop-up i podpowiedzi",
          "Wgrywanie pliku",
          "Asercję w cypress"
        ],
        "Page Object Model": [
          "Wprowadzenie do modułu",
          "Praktyczne wykorzystanie Page Object Model",
          "Custom Commands"
        ],
        "Praca z API": [
          "Co to jest API?",
          "Wykorzystanie Cy.request()"
        ],
        "Zadania praktyczne": [
          "Zadanie praktyczne 1",
          "Zadanie praktyczne 2"
        ],
        "Egzamin teoretyczny": [
          "Rozwiąż egzamin teoretyczny"
        ],
        "Lekcje dodatkowe": [
          "Tworzenie testów w Cypress za pomocą AI"
        ]
      },
      "requirements": [
        "Podstawowa znajomość obsługi komputera",
        "Chęć nauki automatyzacji testów",
        "Brak wymagań dotyczących wcześniejszej znajomości Cypressa czy programowania"
      ],
      "description": "Cypress od Podstaw: Automatyzacja testów krok po kroku\nTen kurs to praktyczne wprowadzenie do automatyzacji testów aplikacji webowych z użyciem biblioteki Cypress. Jeśli chcesz nauczyć się pisać testy E2E, poznać dobre praktyki testowania i rozpocząć przygodę z automatyzacją, ten kurs przeprowadzi Cię przez wszystko – od konfiguracji środowiska po testy API z wykorzystaniem cy.request().\n\n\nCzego się nauczysz\n\n\nPodstawy Cypressa\nDowiesz się, czym jest Cypress, jak działa i dlaczego warto go wybrać do testowania aplikacji webowych.\nInstalacja i konfiguracja\nZainstalujesz wszystkie potrzebne narzędzia (Node.js, Git Bash, edytor kodu) i skonfigurujesz Cypress w swoim projekcie.\nTworzenie testów E2E\nNapiszesz swoje pierwsze testy krok po kroku – nauczysz się znajdować elementy, wprowadzać dane, klikać, dodawać asercje i obsługiwać formularze, listy czy okienka pop-up.\nWprowadzenie do Page Object Model\nZobaczysz, jak organizować kod testów i wykorzystywać własne komendy (Custom Commands) dla lepszej czytelności i skalowalności.\nTestowanie API z Cypress\nPoznasz podstawy działania API oraz wykorzystanie cy.request() do wykonywania zapytań HTTP i sprawdzania odpowiedzi.\nZadania praktyczne i egzamin\nUtrwalisz wiedzę poprzez praktyczne zadania i sprawdzisz się w krótkim egzaminie teoretycznym.\n\n\nDla kogo jest ten kurs\n\n\nDla testerów manualnych, którzy chcą wejść w świat automatyzacji\nDla osób uczących się testowania i programowania\nDla junior developerów oraz QA, którzy chcą poznać nowoczesne narzędzia E2E\nDla każdego, kto chce rozpocząć naukę Cypressa od zupełnych podstaw\n\n\nDlaczego warto\n\n\nPraktyczne podejście – uczysz się poprzez działanie, a nie suchą teorię\nBez doświadczenia? Żaden problem – wszystko tłumaczone jest krok po kroku\nAktualna wiedza – przykłady zgodne z najnowszą wersją Cypressa\nGotowy projekt testowy – możesz od razu działać na własnym komputerze\n\n\nAutomatyzacja testów to dziś jedna z najbardziej pożądanych umiejętności w branży IT. Cypress pozwala szybko i skutecznie testować aplikacje webowe – niezależnie od tego, czy dopiero zaczynasz, czy chcesz uporządkować swoją wiedzę.\nZacznij już dziś i postaw pierwsze kroki w świecie testów automatycznych z Cypress.",
      "target_audience": [
        "Dla testerów manualnych, którzy chcą wejść w automatyzację",
        "Dla początkujących QA i junior developerów",
        "Dla każdego, kto chce poznać Cypressa od podstaw"
      ]
    },
    {
      "title": "Desenvolvimento Web para QAs",
      "url": "https://www.udemy.com/course/desenvolvimento-web-para-qas/",
      "bio": "Aprenda o básico necessário para evoluir como um QA voltado para aplicações Web.",
      "objectives": [
        "Quais os tipos de aplicações existentes",
        "Com funciona uma aplicação Web (Frontend e Backend)",
        "As principais tecnologias utilizadas para aplicações Web.",
        "Conhecer e aplicar os pilares da Web.",
        "Criar um projeto web básico com HTML, CSS e JavaScript.",
        "Conhecer e utilizar o Devtools.",
        "Manipular o DOM (Document Object Model)",
        "Aprender o protocolo HTTP",
        "Aprender a estrutura de uma aplicação backend do tipo API",
        "Aprender a fazer requisições - CRUD",
        "Conhecer algumas ferramentas de prototipação.",
        "Aprender algumas dicas de UX/UI"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Configurando o ambiente"
        ],
        "Conhecendos a Web": [
          "Entendendo os tipos de aplicações",
          "Pilares da Web",
          "Comunicação e arquitetura",
          "Conhecendo os principais framworks",
          "Conhecendo o HTML",
          "Conhecendo o CSS",
          "Conhecendo o DOM",
          "Conhecendo o JavaScript",
          "Conhecendo o DevTools - Parte 1",
          "Conhecendo o DevTools - Parte 2"
        ],
        "Protocolo HTTP": [
          "Conhecendo o protocolo HTTP - Parte 1",
          "Conhecendo o protocolo HTTP - Parte 2",
          "Conhecendo uma API em node.js",
          "Testando CRUD - Postman e Insominia"
        ],
        "Trabalhando com layout": [
          "Tipos de protótipos",
          "Ferramentas para prototipação",
          "Dicas de UX e UI"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência com programação."
      ],
      "description": "Desenvolvimento Web para QAs\n\nEste curso foi criado com intuito de ajudar milhares de pessoas a preencherem esta grande lacuna que temos no mercado, isso devido à falta de pessoas capacitadas a trabalharem como QAs para projetos Web.\nAtualmente as vagas para QAs voltados para Web, tem crescido cada vez mais devido à alta demanda de mercado. Conforme o cenário atual, preparamos um curso rico em conhecimento e detalhes, para você poder cair de cabeça nesta grande oportunidade.\nEste curso foi desenvolvido cuidadosamente pensando em pessoas que poderiam compor times de grandes empresas, com isso, focamos nos pontos que realmente importam e vão fazer toda a diferença.\n\nCremos que ao final deste curso, o aluno terá uma visão completa sobre aplicações Web, e estará apto a dar seus  primeiros passos como QA de aplicações Web.\n\nSe você deseja ser um profissional diferenciado, reconhecido no mercado e conquistar grandes oportunidades, faça este curso.\nNosso desejo:\nQue possa ser bem remunerado no mercado pelo seu excelente trabalho e qualidade.\nQue consiga evoluir e migrar para posições relevantes em projetos da empresa onde trabalha.\nQueremos que seja um profissional cobiçado e prestigiado pelas empresas no mercado.\nQue consiga sua oportunidade de trabalho, e possa crescer profissionalmente.\nSugerimos fazer este curso com calma, vendo e fazendo os exemplos demonstrados em aula.",
      "target_audience": [
        "Estudantes de TI em geral",
        "Analistas de qualidade iniciantes que desejam se aprofundar no mundo Web",
        "Candidatos a vaga de QA.",
        "Analistas de qualidade desktop que precisam migrar para Web."
      ]
    },
    {
      "title": "Trilhe sua Carreira: Explorando Cargos em Teste de Software",
      "url": "https://www.udemy.com/course/trilhe-sua-carreira-explorando-cargos-em-teste-de-software/",
      "bio": "Descubra o mundo das carreiras em Teste de Software neste curso.",
      "objectives": [],
      "course_content": {
        "Introdução": [
          "Apresentação do curso",
          "O que é teste de software"
        ],
        "Aprenda sobre os cargos": [
          "Cargo Testador",
          "Cargo Analista de Teste",
          "Cargo Quality Assurance",
          "Cargo Engenheiro de Software"
        ],
        "Ecossistema dos Cargos": [
          "Ecossistemas dos cargos"
        ]
      },
      "requirements": [
        "Não é necessário nenhum pré requisito para este curso"
      ],
      "description": "Explore as incríveis oportunidades profissionais que o mundo do Teste de Software tem para oferecer neste curso abrangente! Aqui, você vai descobrir dicas valiosas sobre os requisitos e habilidades necessárias para cada cargo, ajudando você a trilhar um caminho de sucesso em sua carreira.\nNão importa se você é um estudante curioso em busca de orientação ou um profissional experiente buscando dar um passo à frente, este curso é perfeito para você! Vamos te guiar por todos os segredos do Teste de Software, mostrando como você pode se tornar um verdadeiro expert na área e se destacar em qualquer equipe de desenvolvimento.\nDurante o curso, vamos explorar todas as diferentes possibilidades que esse campo dinâmico oferece, te ajudando a entender quais cargos e especializações podem ser a melhor opção para você. Além disso, você vai aprender as habilidades essenciais para realizar testes eficientes, identificar e rastrear defeitos, e garantir que o software seja sempre de alta qualidade.\nEstamos animados para te ajudar a trilhar sua carreira com confiança, proporcionando um conhecimento fundamental sobre as práticas de Teste de Software. Com esse curso, você estará pronto para encarar os desafios do mundo real e conquistar oportunidades incríveis no universo do desenvolvimento de software.\nEntão, junte-se a nós agora mesmo e venha se aventurar nessa jornada empolgante rumo a uma carreira brilhante em Teste de Software! Estamos esperando por você!",
      "target_audience": [
        "Estudantes de Tecnologia: Alunos que estão cursando faculdades ou cursos técnicos na área de tecnologia e desejam conhecer as diversas oportunidades de carreira em teste de software.",
        "Profissionais em Início de Carreira: Pessoas que estão começando suas carreiras na área de teste de software e desejam entender as opções de cargos disponíveis e as competências necessárias para progredir na carreira.",
        "Profissionais em Transição de Carreira: Indivíduos de outras áreas que estão considerando migrar para a área de teste de software e buscam entender as opções de carreira e os caminhos disponíveis.",
        "Analistas de Teste em Busca de Aperfeiçoamento: Analistas de Teste que desejam aprimorar suas habilidades e conhecimentos em busca de novas oportunidades de crescimento profissional.",
        "Qualquer Pessoa Interessada em Teste de Software: Qualquer pessoa que tenha interesse em aprender sobre as diversas possibilidades de carreira em teste de software, independentemente de sua formação ou área de atuação."
      ]
    },
    {
      "title": "Análise de Requisitos e Testes de Software (2025)",
      "url": "https://www.udemy.com/course/analise-de-requisitos-testes-de-software-2024/",
      "bio": "Análise de Requisitos e Testes de Software - 2025",
      "objectives": [
        "Aulas objetivas, super didáticas e simples de compreender para facilitar seu aprendizado.",
        "Aprenderá sobre Testes de Software;",
        "Aprenderá sobre Análise de Requisitos;",
        "Aprenderá sobre Desenvolvimento de Software;",
        "Aprenderá sobre ROI;",
        "Aprenderá sobre Estratégica em Testes de Software;",
        "Aprenderá sobre Qualidade e Segurança em Testes de Software;",
        "Aprenderá sobre Gestão de Riscos em Testes de Software;"
      ],
      "course_content": {
        "Apresentação da Instrutora": [
          "Apresentação da Instrutora"
        ],
        "Análise de Requisitos": [
          "Requisitos em Software",
          "Fase da Elicitação",
          "Fase da Análise",
          "Fase da Documentação",
          "Fase da Validação",
          "Fase da Gestão",
          "Estudo de Caso",
          "Revisão: Requisitos x ROI",
          "ROI"
        ],
        "Testes de Software": [
          "Testes de Software",
          "Atribuições",
          "Tipos de Testes de Software",
          "Gestão, Planejamento e Processos",
          "Qualidade de Software",
          "Segurança em Testes de Software",
          "Gestão de Riscos em Testes de Software",
          "Dimensões Estratégicas"
        ]
      },
      "requirements": [
        "Vontade de aprender"
      ],
      "description": "Este curso oferece uma visão abrangente sobre as práticas e técnicas essenciais para a Análise de Requisitos e Testes de Software, capacitando os participantes a desempenharem um papel crucial no ciclo de vida do desenvolvimento de software.\nObjetivos do Curso:\nCompreender a importância da análise de requisitos e como ela impacta a qualidade e o sucesso do software.\nAprender a elicitar, documentar e gerenciar requisitos de software de forma eficaz.\nExplorar diferentes técnicas e ferramentas utilizadas na análise de requisitos.\nDominar os princípios fundamentais do teste de software, incluindo as metodologias e tipos de testes.\nDesenvolver habilidades práticas na criação e execução de casos de teste.\nEntender o papel dos testes automatizados e manuais no processo de desenvolvimento de software.\nGarantir a qualidade do software através de uma análise crítica dos requisitos e de testes bem planejados.\nPúblico-Alvo: Este curso é ideal para analistas de negócios, desenvolvedores de software, engenheiros de qualidade, gerentes de projeto, e qualquer profissional interessado em adquirir ou aprimorar conhecimentos sobre análise de requisitos e testes de software.\nPontos de atenção:\n1. Todos os materiais utilizados nas aulas serão disponibilizados para você baixar e fazer anotações referente ao conteúdo;\n2. Se tiver dúvidas pode me enviar por mensagem aqui na plataforma que respondo em no máximo 24 horas.\n\n\nBons estudos e sucesso em sua trajetória!",
      "target_audience": [
        "Todos"
      ]
    },
    {
      "title": "Practical Manual Software Testing",
      "url": "https://www.udemy.com/course/practical_software_testing_full_course/",
      "bio": "Practical Software Testing Full Course",
      "objectives": [
        "اساسيات صناعة السوفتوير Software Engineering Basics",
        "اساسيات اختبار البرامج Software Testing Basics",
        "المستوى المتوسط لاختبار البرامج Software Testing Mid Level",
        "كيفية العمل على مايكروسوفت تى اف اس TFS Tool",
        "اجايل و تريللو Agile Testing & Trello Tool",
        "جيرا و سكرام Scrum & JIRA Tool",
        "اساسيات عمل الويب سيرفيس API Testing",
        "اسئلة الانترفيو Interview Questions"
      ],
      "course_content": {
        "Software Engineering Basics أساسيات هندسة البرامج": [
          "Software Definition تعريف السوفتوير",
          "Software Delivery Life Cycle Models مراحل تسليم السوفتوير",
          "Who Work With Us 01 فريق العمل الجزء الأول",
          "Who Work With Us 02 فريق العمل الجزء الثانى"
        ],
        "Software Testing Basics أساسيات اختبار البرامج": [
          "Software Tester Duties مهام مختبر البرامج",
          "Test Basis - Requirement Review مراجعة متطلبات العميل",
          "Requirement Review Assignment مهمة مراجعة متطلبات العميل",
          "Create Test Cases انشاء ملف الاختبارات",
          "Login Test Cases Assignment مهمة اللوجن",
          "Login Test Cases ملف اختبار اللوجن",
          "Sign Up Test Cases Assignment مهمة انشاء مستخدم",
          "Sign Up Test Cases ملف اختبار انشاء مستخدم",
          "Create Bug Sheet ملف غلطات المشروع",
          "Bugs Priority And Severity أهمية و أولوية الغلطات",
          "Login Screen Defects غلطات اللوجن",
          "Sign Up Screen Defects غلطات انشاء المستخدم"
        ],
        "Software Testing Mid Level أساسيات اختبار البرامج الجزء المتوسط": [
          "QC And QA مراقبة و ظبط الجودة",
          "Full Static Testing الاختبار الثابت",
          "Smoke Test الاختبار المبدءى",
          "Functional Testing اختبار العمليات الملموسة",
          "Non Functional Testing اختبار العمليات الغير ملموسة",
          "Cross Browser Testing اختبار على اكثر من مشغل ويب",
          "Multi Lingual Testing اختبار اكثر من لغة"
        ],
        "Microsoft TFS Tool مايكروسوف تى اف اس": [
          "TFS Course Introduction",
          "What's ALM دورة حياة المشروع",
          "ALM Tools الادوات المختلفة",
          "Requirements Basic Idea فكرة متطلبات العميل",
          "Create TFS Account and Project انشاء حساب و مشروع",
          "Creating Requirements in TFS انشاء متطلبات العميل",
          "TFS Board كانبان بورد",
          "TFS Test Cases انشاء ملف الاختبار",
          "TFS Test Case Run تنفيذ الاختبارات",
          "Create Bugs غلطات المشروع"
        ],
        "Scrum Testing & JIRA Tool سكرام و جيرا": [
          "Create JIRA Account انشاء حساب",
          "Create Scrum Project انشاء مشروع",
          "Scrum Process سكرام بروسيس",
          "Baclog - Create User Stories متطلبات العميل",
          "Backlog - Create Tasks & Sub Tasks انشاء مهام",
          "Backlog - Create Bugs انشاء اخطاء",
          "Create Releases تقسيم المتطلبات",
          "Create Sprints تقسيم الدورات",
          "User Story Estimation توقع متطلبات العميل",
          "Active Sprints الدورات الفعالة"
        ],
        "API Testing اختبار ال اى بى اى": [
          "API Introduction المقدمة",
          "Difference Between SOAP & REST الفرق بين",
          "Difference Between XML & JSON الفرق بين",
          "SOAP & REST Examples أمثلة",
          "HTTP Methods الطرق",
          "Postman Tool Introduction المقدمة",
          "REST GET Request استرجاع الداتا",
          "REST POST Request اضافة الداتا",
          "REST PUT Request تعديل البيانات",
          "REST PUT Request تعديل البيانات",
          "REST DELETE Request حذف البيانات",
          "Create Test Cases In POSTMAN الاختبارات",
          "SOAP UI Tool Introduction المقدمة",
          "SOAP Project مشروع",
          "REST Project مشروع",
          "Create Test Cases In SOAP UI الاختبارات",
          "شرح عملى Practical Examples 1",
          "شرح عملى Practical Examples 2",
          "شرح عملى Practical Examples 3",
          "API Practical Session - Postman - API Intro",
          "API Practical Session - Postman - REST & SOAP",
          "API Practical Session - Postman - API Requests",
          "API Practical Session - Postman - Test Cases",
          "API Practical Session - Postman - Run Collection"
        ],
        "Interview Questions أسئلة الانترفيو": [
          "Interview Questions أسئلة الانترفيو"
        ],
        "Life Project مشروع عملى": [
          "Bank System Testing 1 اختبار نظام بنكى",
          "Bank System Testing 2 اختبار نظام بنكى",
          "Bank System Testing 3 اختبار نظام بنكى",
          "Project 2 : E Commerce Application 1 اختبار نظام",
          "Project 2 : E Commerce Application 2 اختبار نظام",
          "Project 2 : E Commerce Application 3 اختبار نظام",
          "Project 3 : Invoice System 1 اختبار نظام فواتير",
          "Project 3 : Invoice System 2 اختبار نظام فواتير",
          "Project 3 : Invoice System 3 اختبار نظام فواتير"
        ]
      },
      "requirements": [
        "لا توجد متطلبات No prerequisites"
      ],
      "description": "أهلا بيكم فى أول كورس عملى عن اختبار البرامج .. الكورس دا لتعليم الاساسيات الكاملة الخاصة بالشغل و الهدوف الاوحد منه انك تشتغل على طول فى مصر او الخليج لانه بيفهمك اساس الشغل فى السوق المصرى من خلال انك بتتعلم تشتغل بايديك باكتر من أداة مستخدمة من كل الشركات تقريبا\nحتتعلم فى الكورس دا كل الاساسيات الخاصة بصناعة السوفتوير و ازاى تعملها اختبار كامل و تطلع كل الغلطات فى السوفتوير بطريقة منظمة\nالكورس دا تقدر تدرسه لو كنت شغال فى شركة كبيرة او صغيرة او حتى متوسطة و بيعملك ازاى تدير اى مشروع لوحدك تماما\nPractical manual software testing course is for those who wants to start in software testing field with more practical knowledge & tasks.\nCourse includes sections related to software testing from the basics till some advanced topics with real projects implementation.\nAs a student , you'll be able to understand the basics of software testing , how to write effective test cases , how to find bugs , bugs life cycle , using tools as Azure Devops / JIRA / Trello , postman for API testing & implementation of real 5 projects including all testing artifacts.\nLive projects in domains: e commerce , banking , booking medical services , banking & ERP systems - invoices system.\nAlso there's a section for interview questions.",
      "target_audience": [
        "المبتدئين فى مجال اختبار البرامج Junior Testers"
      ]
    },
    {
      "title": "Cypress ile Web Testlerini Güçlendirin",
      "url": "https://www.udemy.com/course/cypress-ile-web-testlerini-guclendirin-sfrdan-uzmanlga/",
      "bio": "Web uygulama testi",
      "objectives": [
        "Cypress'in kurulumu ve yapılandırması ve komutlarının kullanımı ve elementlere erişim",
        ", test senaryolarının oluşturulması ve test süitlerinin yapılandırılması ve test senaryolarının organizasyonu ve kategorizasyonu.",
        "Web uygulama testlerini Cypress ile yazarak komutlari daha iyi kullanma ve ogrenme",
        "Cypress kullanarak web test otomasyonunda temel becerileri kazanacaklar ve gelişmiş test senaryoları oluşturabilecekler testleri yönetme becerileri kazanacaklar"
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Nodejs Kurulumu",
          "VsCode Kurulumu ve Tabnine eklentisi",
          "Cypress dashboard tanitimi ve proje olusturumu",
          "Describe ve it ile ilk testCase ve steplerin yazilimi",
          "Ilk kodlarin yazimi",
          "Amazon sayfasi",
          "Amazon sayfasi-2",
          "Amazon sayfasi-3",
          "Amazon sayfasi-4",
          "Cimri",
          "Etsy-1",
          "Cucumber ve Allure reporting"
        ]
      },
      "requirements": [
        "Herhangi bir gereklilik yok"
      ],
      "description": "Bu kursla birlikte, sıfırdan başlayarak Cypress ile otomasyon yapmayı öğreneceğiz. Hiç kod bilgisi olmayan öğrenciler için tasarlanmış olan kursumuz, basit seviyeden başlayarak orta seviyelere doğru ilerleyecek ve öğrencilere kapsamlı bir eğitim sunacak.\n\n\nAmacımız, öğrencilerin teorik bilgileri ezberlemek yerine, pratik uygulamalarla öğrenmelerini sağlamaktır. Kurs boyunca, teker teker her komuta saatlerce odaklanmak yerine, hızlı bir şekilde uygulamaya geçerek kod yazmaya başlayacağız. Bu sayede öğrenciler, gerçek dünyada karşılaşacakları senaryolara daha iyi hazırlanacaklar.\n\n\nKursumuzda, her bir komutu anlamak için saatler harcamak yerine, daha etkili bir yöntem izleyeceğiz. Öğrenciler, önce 10-15 dakika sürecek bir anlatım ile temel bir kavrayış elde edecek ve ardından uygulama yaparak komutları öğrenecekler. Böylelikle, hızlı bir şekilde öğrenme sürecini tamamlayacak ve zaman kaybı yaşamayacaklar.\n\n\nKurs sonunda, öğrencilere Cypress'i kullanarak gerçek bir projede uygulama yapma fırsatı sunacağız. Ayrıca, Kükümmer adlı bir frenörtüyü Cypress ile entegre ederek tanıtacağız. Bu uygulama, öğrencilere gerçek bir senaryoda Cypress'i nasıl kullanacaklarını göstererek, pratik becerilerini pekiştirmelerini sağlayacak.\n\n\nAmacımız, öğrencilerin kısa sürede etkili bir şekilde öğrenmelerini sağlamaktır. Kursumuz, sıfırdan başlayan öğrencilere hızlı ve kaliteli bir şekilde Cypress ile otomasyon yapmayı öğretmek için tasarlanmıştır. kursun sonunda, öğrencilere Cypress ve Cucumber kullanarak hazır bir framework tanıtılacak. Bu framework, öğrencilerin iş görüşmelerinde ve demo çalışmalarında kullanabilecekleri bir yapıya sahip olacak.\n\n\nCypress ve Cucumber'ı bir araya getiren bu framework, BDD (Behavior Driven Development - Davranış Odaklı Geliştirme) yaklaşımını benimseyecek. Öğrenciler, Cucumber senaryolarını Cypress testlerine entegre ederek, işlevsel ve kolay anlaşılır test senaryoları oluşturma becerisini kazanacaklar.\n\n\nFramework'ün tanıtılmasıyla birlikte, öğrencilerin iş görüşmelerinde kullanabilecekleri örnek projeler ve demo çalışmaları sunulacak. Bu sayede, öğrenciler öğrendiklerini gerçek dünya senaryolarında nasıl kullanacaklarını görebilecekler.",
      "target_audience": [
        "Web testi öğrenmek isteyen tüm öğrencilere"
      ]
    },
    {
      "title": "FlutterでのはじめてのTDD(テスト 駆動開発)！【flutter testで、テストの第一歩から実導入まで】",
      "url": "https://www.udemy.com/course/flutter-tdd/",
      "bio": "Flutterで開発してるけど、ほんとに動くのかな？と不安なときはテストコードを作成しましょう。一緒にFlutterのテスト方法を勉強し、TDDでテストファーストを実施して、自信を持ってアプリ開発し、Flutterアプリの品質をあげよう！",
      "objectives": [
        "Flutterでテスト駆動開発ができるようになります",
        "基本的なソフトウェアテストの考え方が理解できます",
        "ユニットテストやウィジェットテストでロジックやウィジェットの自動テストできるよになり、アプリの品質が向上します",
        "エミュレータや実機で自動テストができ、最小限の実機テストでアプリをリリースできます"
      ],
      "course_content": {
        "イントロダクション": [
          "紹介"
        ],
        "テストについての基礎知識": [
          "Flutterにおけるテスト",
          "テストの概要",
          "テストの段階"
        ],
        "計算機アプリの準備": [
          "NullSafety対応について",
          "【対応報告】Flutter 3.19.2に対応",
          "プロジェクト作成",
          "GUIの解説1",
          "GUIの解説2",
          "GUIの解説3"
        ],
        "ユニットテスト": [
          "テストをどう始めるか",
          "GUIとロジックを繋げる",
          "入力をそのまま返すテストの作成",
          "テストをまとめて実行",
          "連続入力のテスト",
          "数字にする",
          "TDDの3ステップ",
          "iPhoneの動作を確認する",
          "桁区切りのテストを行う",
          "桁区切りのテストを実装する",
          "桁区切りの連続入力のテストを作成する",
          "桁区切りを実装する",
          "小数点をIntlで扱えるか",
          "小数点のテストを作成する",
          "小数点を実装する1",
          "テストをまとめる",
          "小数点を実装する2",
          "小数点を実装する_000000000",
          "数字の出力をリファクタリング",
          "数字の出力部分のテストを追加する",
          "整数部分のある小数のテスト",
          "小数部分が0への対応",
          "getDisplayTextの重複部分を消す",
          "GUIで動くか試してみる",
          "桁数取得の実装",
          "同値クラステスト",
          "境界値テスト",
          "9桁以上を無視するテスト",
          "9桁以上を無視するテスト小数あり",
          "計算についての説明",
          "計算の変数定義",
          "かけ算のテスト",
          "四則演算の変数",
          "かけ算の実装",
          "イコールの実装",
          "かけ算2回の実装",
          "割り算のテストと実装",
          "割り算を3回繰り返すテスト",
          "割り算のテスト",
          "割り切れない割り算のモデル実装",
          "四捨五入の実装",
          "小数点以下数位",
          "四捨五入で表示",
          "足し算のテストを作成",
          "足し算、2つの値",
          "足し算、4つの値",
          "引き算のテストを作成",
          "引き算、2つの値",
          "四則演算が混在",
          "四則演算のエラーの修正",
          "四則演算のかけ算",
          "四則演算の割り算",
          "四則演算の引き算のあるかけ算"
        ],
        "ウィジェットテスト": [
          "ウィジェットテストを始める",
          "Buttonのテストを始める",
          "既存のButtonを消す",
          "Buttonのテストを作成する",
          "Buttonの押したときのテスト",
          "Buttonの色のテスト",
          "KeyPadを独立させる",
          "KeyPadをテストする",
          "KeyPadのタップをテストする"
        ],
        "インテグレーションテスト": [
          "インテグレーションテストについて",
          "インテグレーションテストの準備",
          "画面にテキスト「1」があることを確認する",
          "画面のボタンを確認する2",
          "なぜWidgetにKeyをつけるか",
          "WidgetにKeyをつける",
          "計算のテストをする"
        ],
        "DartテストのMatcherの解説": [
          "テスト機能の解説概要",
          "expectについて",
          "数値用のMatcher",
          "数値の範囲のMatcher",
          "文字用のMatcher",
          "nullのMatcher",
          "例外のMatcherとfail",
          "ListのMatcher"
        ],
        "Widget TestとIntegration Testで使用されるFinderの解説": [
          "finderの復習とtext,byIconを使う",
          "findByKeyを使う",
          "widgetWithTextを使う",
          "byTypeを使う",
          "findWithIconを使う",
          "byTooltipを使う",
          "bySemanticLabelを使う"
        ],
        "モックでテストをする": [
          "モックを使う目的",
          "mockitoのインストール",
          "作成するアプリの説明",
          "GithubApiRepositoryの作成",
          "アプリ本体の修正",
          "モックの作成と挙動確認",
          "DIのインストールと設定",
          "アプリコードにDIの設定を追加",
          "テストコードのモック(Mockito)のDI設定",
          "DIでのクラスの挙動の説明",
          "【課題】GithubApiRepositoryのDI設定をする",
          "【課題】GithubApiRepositoryのDI設定をする 詳細",
          "【課題回答】GithubApiRepositoryのDI設定をする",
          "【課題】GithubApiRepositoryのMockを作成する",
          "【課題】GithubApiRepositoryのMockを作成する 詳細",
          "【課題回答】GithubApiRepositoryのMockを作成する",
          "【課題】GithubApiRepositoryのMockを使用してWidgetTestを作成する",
          "GithubApiRepositoryのモックでテスト作成",
          "モックのまとめ"
        ],
        "Flutter testのチートシートの解説": [
          "expect",
          "isNull, isNotNull",
          "same, isNot",
          "isNot",
          "isTrue, isFalse",
          "isNan, isNotNan",
          "文字列の確認",
          "equals, equalsIgnoring",
          "equalsIgnoringWhitespace",
          "contains",
          "startsWith, endsWith",
          "stringContainsInOrder",
          "set, listのテスト",
          "mapのテスト",
          "hasLength",
          "contains",
          "containsAll",
          "containsAllInOrde",
          "orderedEquals",
          "unorderedEquals",
          "Streamのテスト emitsInOrder",
          "StreamControlleの関数化",
          "emitsDone",
          "emitsAnyOf",
          "matcher_for_stream",
          "イベントの数を確認",
          "emitsInAnyOrder",
          "neverEmits",
          "mayEmit,mayEmitMultiple",
          "例外の簡易的なテスト",
          "例外発生の具体的な例を紹介",
          "例外の詳細なテスト",
          "Future型のテスト,expectLater,completion",
          "throwsException",
          "completes, doesNotComplete"
        ]
      },
      "requirements": [
        "Flutterに関する基礎知識"
      ],
      "description": "アプリの開発に時間がかかって、テストまで手が回らない。だが、アプリの品質は保たなきゃならない。私も個人でアプリ開発をしてますが、開発の方が楽しいし、時間もないしで、テストはうんざり。自動でテストができて、アプリの品質を担保する切り札、それがテストファースト、テスト駆動開発です！\n実際にテストファーストでiOSの計算機アプリのクローンを作りながら、どのようにテストを作成し、アプリを開発していくかが理解できます。ただ、Flutterの本当の初心者にはお勧めしません。Flutterのインストール方法やWidgetの解説はしてません。初心者から中級者になって、アプリの品質をあげたい！と思っている方限定です。\n現場のエンジニアだけが知っているテストファースト、テスト駆動開発を一緒に学んでいきましょう。\n私の説明力が不足してるようでしたら、30日以内なら返金可能です！\n\n\n【本講座で学べること】\nFlutterにおけるテストの基礎知識と実践\nテストを実施しやすいシステム構成\nユニットテスト: Dartのみでのロジックのテスト\nウィジェットテスト:FlutterのWidgetをパーツ単位でテスト\nインテグレーションテスト: Flutterから実機・エミュレータを自動操作し、テストと画面キャプチャ\n\n\nテスト作成の基礎知識(ホワイトボックステスト・ブラックボックステスト、同値クラステスト、境界値テスト)\nテスト駆動開発・リファクタリングの実践\n\n\n【更新】\n2024/03/02 Flutter 3.19.2に対応しました。変更点をレクチャー「【対応報告】Flutter 3.19.2に対応」にまとめました",
      "target_audience": [
        "ソフトウェアテストの初心者の方",
        "Flutterでのテストコードを作成したことのない方",
        "自動テストを実施し、アプリの品質をあげたい方",
        "手動テストを最小限にするためなら、テストコードの作成をいとわない人"
      ]
    },
    {
      "title": "Gestion des tests : TestLink, Squash, Xray et autres outils",
      "url": "https://www.udemy.com/course/testlink-outil-de-gestion-des-tests-de-a-a-z/",
      "bio": "Maîtrisez les outils de gestion de tests pour optimiser vos processus : TestLink, Squash, Xray et plus.",
      "objectives": [
        "Concepts de base des tests logiciels",
        "Tests manuels du logiciel de débutant à avancé",
        "conception des tests",
        "Création de suites de tests",
        "Création de plan de test",
        "Création de cas de test dans TestLink",
        "Exécution des cas de test dans TestLink",
        "Comprendre le processus de gestion des tests",
        "Construire la génération de rapports",
        "Création de suites de tests",
        "Création de plusieurs projets"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Merci",
          "c'est quoi testlink?",
          "Testlink : Installation",
          "Clarification sur installation de Testlink",
          "Autres alternatives des outils de tests",
          "Testlink :Création de projet",
          "Test Logiciel : c'est quoi une campagne de test ?",
          "Test Logiciel : Exemple d'une campagne de test",
          "Test Logiciel : c'est quoi une suite de test ?",
          "Test Logiciel : c'est quoi un cas de test ?",
          "Test Logiciel : Exemple d'un cas de test",
          "C'est quoi un plan de test ?",
          "Testlink :Création de plan de test",
          "Testlink : Création d'un build -Release",
          "Testlink : Création de suite de test - cas de test - les étapes de test",
          "Testlink : Recherche cas de test",
          "Testlink : Keyword",
          "Testlink : TEST SPECIFICATION",
          "Testlink : Gestion des exigences : REQUIREMENT",
          "Testlink : gestion des rôles",
          "Testlink : Gestion des plateforme",
          "Testlink : Milestone",
          "Testlink : Execution de campagne de test",
          "Testlink : Gestion des rapports et métriques de tests"
        ],
        "Cas pratique : Distributeur automatique sous Testlink": [
          "Cas pratique : Distributeur automatique : Conception des tests",
          "Cas pratique : Distributeur automatique : Conception des tests",
          "Cas pratique : Distributeur automatique : Conception des tests",
          "Cas pratique : Distributeur automatique : Exécution des cas de test",
          "Cas pratique : Distributeur automatique : Exécution des cas de test"
        ],
        "Test Logiciel avec XRAY": [
          "Comprendre l'agilité",
          "Scrum en 10 minutes",
          "L'agilité en pratique : c'est quoi JIRA ?",
          "L'agilité en pratique : jira",
          "L'agilité en pratique : Cas pratique",
          "Le test logiciel agile en pratique avec Jira & Xray : Ajout Xray",
          "Le test logiciel agile en pratique avec Jira & Xray : Configuration de Xray",
          "en cas de probleme de configuration de XRay : comment le résoudre ?",
          "Le test logiciel agile en pratique avec Jira & Xray : Cas pratique",
          "Cas pratique avec Jira & Xray : Ajout des users stories et sous tâches",
          "Cas pratique avec Jira & Xray : Création d'un plan de test",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray :",
          "Jira-Xray : Attacher les tickets à un test plan",
          "Jira-Xray : Affecter les tickets au sprint",
          "Jira-Xray : Rattachement des cas de test avec plusieurs test plan",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Création d’une anomalie",
          "Jira-Xray : Création des rapports",
          "Jira-Xray : Création des rapports",
          "L'agilité en pratique : Cas pratique"
        ],
        "Management du tests logiciels avec Zephyr for JIRA": [
          "Zephyr for Jira : C’est quoi ?",
          "Zephyr for Jira : installation de l’outil",
          "Zephyr for Jira : Explorer l’outil",
          "Zephyr for Jira : Création d’un cas de test",
          "Zephyr for Jira : Exporter les cas de test",
          "Zephyr for Jira : Configuration avancée",
          "Zephyr for Jira : création test cycle et exécution de cas de test",
          "Zephyr for Jira : exercice de création projet Jira & Zephyr",
          "Zephyr for Jira : Correction de l’exercice de création projet Jira & Zephyr",
          "Zephyr for Jira : Gestion et génération des rapports"
        ],
        "Squash tm": [
          "C'est quoi SQUASH TM ?",
          "SQUASH TM Installation",
          "Squash TM : Comment résoudre le probleme d'accès",
          "Squash TM : Comment résoudre le probleme d'accès -Solution",
          "SQUASH TM : Explorer l'outil",
          "SQUASH TM : Création d'un projet",
          "SQUASH TM : Création des exigences",
          "SQUASH TM : Création des cas de tests et rattachement avec les exigences",
          "SQUASH TM : Création des cas de tests",
          "SQUASH TM : Création d'une campagne de test",
          "Atelier de conception :",
          "Correction de l'atelier de conception :",
          "Correction de l'atelier de conception :",
          "SQUASH TM : Exécution des tests",
          "Continuer l'apprentissage",
          "Félicitations"
        ]
      },
      "requirements": [
        "Aucune connaissance préalable du domaine n'est requise"
      ],
      "description": "Cette formation complète vous permettra de maîtriser les principaux outils de gestion des tests logiciels, essentiels pour garantir la qualité de vos applications. À travers des sessions théoriques et pratiques, vous apprendrez à utiliser efficacement TestLink, Squash, Xray et d'autres outils populaires pour planifier, exécuter et suivre vos tests.\nObjectifs de la formation :\nComprendre les bases de la gestion des tests dans un projet logiciel.\nExplorer en profondeur des outils de gestion de tests : TestLink, Squash et Xray.\nSavoir créer, organiser et suivre des cas de test, des plans de test et des rapports de test.\nAutomatiser certaines parties du processus de test et optimiser la gestion des tests dans un environnement agile ou traditionnel.\nAnalyser les résultats des tests pour améliorer la qualité du logiciel.\nPublic cible :\nCette formation s'adresse aux chefs de projet, responsables qualité, ingénieurs de tests, et toute personne impliquée dans le processus de gestion des tests logiciels.\nPrérequis :\nAucun prérequis spécifique n'est nécessaire, bien qu'une connaissance de base en gestion de projet ou en développement logiciel soit un plus.\nProgramme :\nIntroduction à la gestion des tests : Concepts et enjeux.\nPrésentation des outils : TestLink, Squash, Xray - leurs avantages et cas d'utilisation.\nConfiguration et personnalisation des outils : Création de projets, gestion des utilisateurs, paramétrage des tests.\nGestion des cas de tests : Rédaction, organisation et exécution des cas de tests.\nSuivi et reporting : Suivi des résultats, génération de rapports détaillés.\n\n\nModalités pédagogiques :\nFormations pratiques avec des exercices en laboratoire.\nÉtudes de cas réels pour une immersion dans des scénarios de gestion de tests complexes.\nEspace, Q/A avec une formateur experte pour répondre à vos questions spécifiques.\nÀ l'issue de cette formation, vous serez capable de mettre en place une gestion efficace des tests et d'utiliser les outils les plus populaires pour optimiser la qualité de vos projets logiciels.",
      "target_audience": [
        "Les personnes qui souhaitent commencer une nouvelle carrière",
        "Les personnes qui veulent apprendre les tests de logiciels Testeurs de logiciels qui souhaitent acquérir une meilleure connaissance dans leur domaine",
        "Les personnes à la recherche d'un emploi à temps partiel ou indépendant"
      ]
    },
    {
      "title": "Maîtriser l'automatisation des tests avec Cypress",
      "url": "https://www.udemy.com/course/maitriser-lautomatisation-des-tests-avec-cypress/",
      "bio": "Maîtrisez l'automatisation des tests avec Cypress et boostez la qualité de vos projets web-COURS AUDIO",
      "objectives": [
        "Maîtriser Cypress : Ils découvriront comment utiliser Cypress, l'outil d'automatisation des tests pour les applications web, afin d'écrire des tests fiables",
        "Écrire des tests d'interface utilisateur : Ils apprendront à automatiser les tests d'interaction avec l'interface utilisateur (UI), en simulant des actions",
        "Déboguer facilement",
        "Intégrer Cypress dans un workflow CI/CD",
        "Optimiser les tests",
        "Améliorer la qualité des applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Qu'est-ce que Cypress ?",
          "Les features de Cypress",
          "Les navigateurs qui supportent Cypress"
        ],
        "Cypress en pratique": [
          "Prérequis pour utiliser Cypress et Pourquoi",
          "Cypress : Installation et Configuration",
          "Guide détaillé pour installer Cypress",
          "Cypress : Premier test automatisé",
          "Cypress -Premier test",
          "Cypress : Premier test automatisé -Explication",
          "Cypress : Premier test automatisé -Explication",
          "Exercice",
          "Correction de l'exercice"
        ],
        "Cyppress -Les assertions": [
          "Cyppress -Les assertions",
          "Cyppress -Les assertions",
          "Cyppress -Les assertions -Exercice 1",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 1",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 1 ( le code )",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 2",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 2 ( le code )",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 3",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 3 ( le code )",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 4",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 4 ( le code )",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 5",
          "Cyppress -Les assertions -Correction de l'exercice 1-Partie 5 ( le code )",
          "Cyppress -Les assertions -Exercice 2",
          "Cyppress -Les assertions -Correction de l'exercice 2-Partie 1",
          "Cyppress -Les assertions -Correction de l'exercice 2-Partie 1 ( le code )",
          "Cyppress -Les assertions -Exercice 2",
          "Cyppress -Les assertions -Correction de l'exercice 2"
        ],
        "Pages Object Model": [
          "Pages Object Model",
          "Pages Object Model -Exemple avec explications",
          "Pages Object Model -Exemple",
          "Pages Object Model: Exempe",
          "C'est la fin de la formation"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Description du cours :\nDans cette formation, vous allez découvrir Cypress, l'outil d'automatisation des tests de plus en plus populaire dans le développement web. Conçu pour être à la fois puissant et facile à utiliser, Cypress vous permettra de tester vos applications web de manière rapide et fiable.\nTout au long de cette formation, vous apprendrez à écrire des tests efficaces pour vos applications, en vous familiarisant avec les commandes de Cypress, les assertions, et les meilleures pratiques pour garantir la robustesse de vos tests. Vous apprendrez également à exploiter des fonctionnalités avancées comme le Time Travel, le débogage en temps réel, et l'intégration des tests dans vos pipelines de développement pour une automatisation complète.\nGrâce à des exemples pratiques et des cas d’utilisation réels, vous découvrirez comment intégrer Cypress dans vos processus de travail quotidien et automatiser vos tests de manière transparente. Vous comprendrez comment détecter rapidement les erreurs dans vos applications, améliorer la qualité de votre code et accélérer vos cycles de développement, tout en réduisant les risques liés aux tests manuels.\nCette formation s'adresse à tous les développeurs, testeurs et responsables qualité souhaitant optimiser la fiabilité et la performance de leurs projets web en maîtrisant l'automatisation des tests avec Cypress.",
      "target_audience": [
        "Développeurs web : Que vous soyez débutant ou expérimenté, ce cours vous permettra de maîtriser l'automatisation des tests avec Cypress et d'intégrer cette pratique dans vos projets de développement pour garantir une meilleure qualité de code.",
        "Testeurs logiciels : Si vous êtes responsable des tests, cette formation vous aidera à automatiser vos tests et à les exécuter plus rapidement, tout en réduisant les erreurs humaines et en améliorant l'efficacité de vos processus de validation.",
        "Responsables qualité (QA) : Ce cours est idéal pour les professionnels de la qualité qui souhaitent renforcer leur expertise en automatisation des tests, en particulier pour les applications web, et ainsi accélérer les cycles de développement tout en maintenant une qualité optimale.",
        "Chefs de projets et Product Owners : Si vous êtes dans la gestion de projets ou la coordination des équipes, cette formation vous permettra de comprendre l'importance de l'automatisation des tests pour réduire les délais de livraison et garantir la stabilité des applications.",
        "Curieux du domaine de l'automatisation des tests : Si vous êtes intéressé par l'automatisation des tests mais que vous n'avez pas encore d'expérience avec Cypress, ce cours vous fournira une introduction pratique et complète pour commencer."
      ]
    },
    {
      "title": "Автоматизация тестирования API в Postman для начинающих",
      "url": "https://www.udemy.com/course/at-postman-qahacking/",
      "bio": "JS + ChaiJS",
      "objectives": [
        "Понимание что такое REST API и как его тестировать",
        "Знакомство с азами языка программирования JavaScript",
        "Умение писать базовые автотесты на JS в Postman",
        "Создание первого набора автотестов на REST API в Postman"
      ],
      "course_content": {
        "Приветствие": [
          "Рекомендации по обучению"
        ],
        "Application Programming Interface": [
          "Что такое API?",
          "API это:",
          "Контракт, договоренность, свод правил общения",
          "Выберите верные утверждения из списка:",
          "Типы API",
          "Систематизируем",
          "REST API",
          "CRUD",
          "Что такое REST?",
          "Postman для тестирования различных типов API",
          "Самые популярные протоколы",
          "HTTP / HTTPS",
          "Выберите правильное утверждение",
          "URL HTTP запроса",
          "Методы не всегда те, чем кажутся",
          "Правила хорошего тона при проектировании REST API",
          "Идемпотентность",
          "Пример использования методов",
          "Выберите одно ложное утверждение",
          "Запрос к API",
          "Структура HTTP запроса",
          "Стартовая строка",
          "Заголовки запроса",
          "Тело сообщения",
          "Выберите правильный ответ",
          "Ответ сервиса",
          "Структура HTTP ответа",
          "Строка состояния ответа",
          "Коды статусов ответа",
          "Заголовки ответа",
          "Тело ответа",
          "Найдите ложное утверждение",
          "Аутентификация",
          "Авторизация",
          "Как понять разницу между авторизацией и аутентификацией?",
          "Выберите правильное описание",
          "Планирование тестирования API",
          "Базовые проверки методов API",
          "Техники тест-анализа и тест-дизайна",
          "Тест-сьюты или коллекции тест-кейсов"
        ],
        "Postman - обзорное знакомство": [
          "Введение",
          "Установка",
          "Изучайте Postman и API за пределами нашего курса",
          "Как начать работу?",
          "Основные элементы Postman",
          "Коллекции / Collection",
          "Выберите одно ложное утверждение",
          "Запрос / Ответ в Postman",
          "Как подготовиться к следующему тесту",
          "Скачать задание для теста",
          "Проверяем статус-код"
        ],
        "Параметризация тестов в Postman": [
          "Что такое параметризация тестов?",
          "Уровни хранения переменных",
          "Что такое переменные",
          "Data переменные",
          "Доступность переменных",
          "Где можно использовать переменные",
          "Какого хранилища переменных нет в Postman",
          "Faker - готовая библиотека шаблонных переменных",
          "Как использовать Faker"
        ],
        "JS - немного основ": [
          "Для чего нам нужно изучить основы JavaScript",
          "Как запускать код JavaScript",
          "Запускаем скрипты JS в Postman",
          "JavaScript это",
          "Типы данных, переменные, синтаксис",
          "Объявление переменных",
          "Какой ответ неправильный?",
          "Основы синтаксиса JS",
          "Требования к названиям переменных и функций",
          "Функции и методы",
          "Методы и функции простым языком",
          "Синтаксис функции",
          "Функции при написании тестов в Postman",
          "Что будет выведено в консоль после выполнения следующего кода?",
          "Массивы",
          "Массивы в JavaScript",
          "Несколько операций с массивами",
          "Каким будет результат выполнения следующего кода в JavaScript?",
          "Простые операции",
          "Еще немного про знак =",
          "Конкатенация",
          "Приведение типов (изменение, преобразование типа переменной)",
          "Каким будет результат выполнения следующего кода в JavaScript?",
          "Ветвление. If / Else",
          "Ветвление. Switch",
          "Ветвление в тестах",
          "Какой будет вывод следующего кода на JavaScript?",
          "Циклы",
          "Цикл for",
          "Каким будет вывод следующего кода на JavaScript?",
          "Задачи на цикл while",
          "Задачи на цикл for"
        ],
        "Регулярные Выражения": [
          "Что такое регулярные выражения",
          "Синтаксис регулярных выражений",
          "Разберем еще несколько примеров",
          "Подберите подходящее регулярное выражение"
        ],
        "Первые автотесты в Postman": [
          "Скрипты и библиотеки тестов",
          "ChaiJS",
          "Node.js",
          "Chai.js или Node.js ?",
          "Документация к библиотекам",
          "Выполнение скриптов",
          "Pre-request Scripts",
          "Tests",
          "Как запускаются скрипты",
          "Порядок выполнения скриптов",
          "Пишем первые тесты",
          "О приложении для тестирования",
          "Знакомство со сниппетами",
          "Snippets",
          "Тесты",
          "Что делает следующий скрипт теста в Postman?",
          "Работа с JSON в ответе",
          "Тренируемся работать с JSON",
          "Считаем количество элементов в ответе",
          "Какой код выведет правильный заголовок в консоль?",
          "Функция обратного вызова (callback)",
          "Объяснение тестов",
          "Подробно проверяем статус-код",
          ".equal и .deep.equal",
          "Проверяем текстовую часть статус-кода",
          "Как проверить, что текстовая часть статуса содержит слово \"OK\" в Postman?",
          "Null, 0 и пустое значение",
          "Примеры null, 0 и ничего",
          "Тесты для массива объектов",
          "Проверим, что doneStatus нашей todo true",
          "Улучшаем тесты",
          "Проверяем, что в каждом объекте id состоит из трех цифр",
          "Сохраняем список всех id из ответа в переменную окружения",
          "Удаляем все toDo",
          "Работа Postman с html",
          "Знакомство с интерфейсом тестового приложения apichallenges",
          "Пара слов о HTML и CSS",
          "Делаем запрос html",
          "Проверяем html",
          "Выберите правильный ответ",
          "Недостатки Postman при тестировании html",
          "Циклы в автотестах",
          "Цикл while в автотестах",
          "Пишем тест с циклом for и с условием if / else",
          "Задачи на циклы",
          "Пишем автотесты для Challenger",
          "Параметризация",
          "Минимальная проверка",
          "Общие ошибки при написании автотестов",
          "Исправляем запросы",
          "Финальная проверка",
          "Проверяем знания",
          "Расширяем тесты",
          "02 GET /challenges (200)",
          "03 GET /todos (200)",
          "04 GET /todo (404)",
          "06 GET /todos/id (404)",
          "08 POST /todos (201)",
          "Больше тестов",
          "Вставьте пропущенное слово",
          "Поиск по json",
          "Регулярные выражения в автотестах",
          "RegEx и даты",
          "Выберите регулярное выражение"
        ],
        "Систематизируем тесты": [
          "Организация тестов в Postman",
          "Пример организации по сценариям",
          "Пример организации по отдельным методам",
          "Атомарность тестов",
          "Еще пример организации тестов",
          "Резюме курса"
        ]
      },
      "requirements": [
        "Необходимо немного знать теорию тестирования для того, чтобы было проще проектировать автотесты."
      ],
      "description": "Курс создан как базовый, то есть вам не нужно обладать какими-то глубокими познаниями в области программирования или автотестирования. Мы познакомим вас с основами JS, коротко познакомим с понятием API и с тем, что такое Postman. Также мы расскажем о том, что именно проверяется при тестировании API и какую часть этих проверок может покрыть автотестирование. Во время прохождения курса вы напишете свои первые автотесты и сможете приступить к автоматизации REST API своего рабочего проекта.\nЕсли вы уже знаете что такое RESTful API и Postman, вы можете пропустить первые части курса (просто пройти тесты) и перейти сразу к самому интересному.\nИ добро пожаловать в увлекательный мир автоматизации тестирования!\nЭто область, где технические навыки встречаются с аналитическими, где детали имеют значение и где ваш вклад имеет реальное значение для качество продукта, а сами автотесты снимают с вас, как с тестировщика, огромный пласт рутинных действий.\nДля кого этот курс\nЭтот курс будет интересен тем тестировщикам, кто мало знает о программировании, немного трогал постман и тестирование API и является базовым для того, чтобы начать писать автотесты в Postman (для REST сервисов)\nНачальные требования\nДля того, чтобы писать хорошие автотесты необходимо знать общую теорию тестирования и немного понимать как тестируется API. Базовое знакомство с одним из языков программирования не помешает (оптимально - JS). Но если нет технических знаний, то самые основные мы дадим в курсе.",
      "target_audience": [
        "Начинающие бэкенд тестировщики, которые хотят научиться писать автотесты в Postman"
      ]
    },
    {
      "title": "Cucumber con Selenium para la automatización de pruebas.",
      "url": "https://www.udemy.com/course/cucumber-con-selenium-para-la-automatizacion-de-pruebas/",
      "bio": "Aprende sobre Cucumber y cómo usarlo en la automatización de pruebas. También una introducción a Selenium para Java.",
      "objectives": [
        "Aprender a usar Selenium para la automatización de pruebas.",
        "Cómo usar el framework Cucumber para construir un proyecto de automatización de pruebas.",
        "Escribir definiciones de pasos para las palabras clave de Gherkin (Give, When, Then)",
        "Uso de palabras clave especiales: Before, After, Background."
      ],
      "course_content": {},
      "requirements": [
        "No se necesita experiencia previa.",
        "Preferible: curso introductorio sobre cómo escribir selectores web."
      ],
      "description": "Aprende sobre Cucumber y Selenium en este curso. Herramientas poderosas para la automatización de pruebas.\nCurso completo para principiantes. Todas las herramientas utilizadas son de código abierto. 24 lecciones con ejemplos. Cobertura completa de todos los aspectos del tema.\n¿Qué es Cucumber?\nCucumber es una herramienta que soporta el Desarrollo Guiado por Comportamiento (BDD). Si eres nuevo en el Desarrollo Guiado por Comportamiento, primero lee nuestra introducción a BDD.\n¿Qué es Gherkin?\nGherkin es un conjunto de reglas gramaticales que estructuran el texto plano lo suficiente como para que Cucumber lo entienda. El escenario anterior está escrito en Gherkin.\n¿Qué son las definiciones de pasos?\nLas definiciones de pasos conectan los pasos de Gherkin con el código de programación. Una definición de paso implementa la acción que se ejecutará en ese paso. Por lo tanto, las definiciones de pasos vinculan firmemente la especificación con la implementación.\n¿Qué es Selenium?\nSelenium automatiza navegadores.\nLo que hagas con ese poder depende completamente de ti.\nPrincipalmente se utiliza para automatizar aplicaciones web con fines de prueba, pero ciertamente no se limita a eso.\nLas tareas administrativas basadas en la web y repetitivas también pueden (y deberían) automatizarse.\n¿Qué es la prueba automatizada?\nLa prueba automatizada es una técnica de prueba de software realizada utilizando herramientas especiales de software automatizado para ejecutar un conjunto de casos de prueba. Por otro lado, la prueba manual es realizada por una persona frente a una computadora, ejecutando cuidadosamente los pasos de prueba.",
      "target_audience": [
        "Recientes graduados que buscan carreras en automatización de pruebas",
        "Ingenieros de software que buscan cambiar a la automatización de pruebas para aplicaciones web.",
        "Entusiastas de la automatización de pruebas para aplicaciones web."
      ]
    },
    {
      "title": "Automatización Móvil desde Cero con Appium + Cucumber",
      "url": "https://www.udemy.com/course/automatizacion-de-pruebas-moviles-desde-cero-con-appium/",
      "bio": "Pruebas Automatizadas con Appium desde Cero para dispositivos Android",
      "objectives": [
        "Implementación de soluciones para pruebas automatizadas en dispositivos móviles",
        "Desarrollo y configuración de automatización para móviles",
        "Automatización de pruebas para Móviles.",
        "Creación de Framework de Automatización para Móviles."
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos en programación Java"
      ],
      "description": "Automatización de pruebas con Appium y Java desde Cero.\nEn este curso aprenderás como automatizar tus pruebas usando Appium desde cero para dispositivos Android, aprenderás como configurar un entorno de pruebas y crear tu primer proyecto automatizado con Appium, Java y Maven.\n\n\nRequisitos Hardware\nLaptop con conexión a internet.\nMemoria de 8GB como mínimo.\nDisco Duro de 500 GB\n\n\n¿Qué conseguiré al finalizar el curso?\n\n\nPodrás crear tus propios escenarios o casos de prueba automatizados.\nEstarás en la capacidad de encontrar tu primer trabajo como QA Automatizador.\nObtendrás un certificado del curso.\nEl objetivo del curso es que puedas:\n\n\nConfigurar de 0 un Framework de automatización de pruebas de aplicaciones Android.\nEscribir casos de pruebas con código de fácil mantenimiento y reutilizable.\nSeguimiento de casos de pruebas automatizados.\nContenido:\n\n\nConfiguración\nInstalar Java y Variables de Entorno\nInstalar Maven y Variables de Entorno\nInstalar Android Studio y Variables de Entorno\nInstalar Visual Studio Code\nInstalar Plugin Visual Studio Code\nInstalar Appium\nAutomatización de pruebas\nConfigurar un Emulador.\nCreando mi primer proyecto de automatización móvil\nCaptura de elementos móvil\nScript Automatizado para Móvil con Appium\n¡ESTE ES EL PRIMER PASO HACIA EL MUNDO DE CONVERTIRTE EN UN QA AUTOMATIZADOR!\n\n\n¡IMPORTANTE!\nPodrás encontrar los recursos necesarios en cada sección del curso. Podré contestar tus dudas o consultas dentro de los videos. Este es el primer cursos de Appium, más adelante sacaré más contenido sobre como automatizar para nivel intermedio y avanzado.",
      "target_audience": [
        "Ingenieros de Calidad",
        "Quality Assurance",
        "Quality Engineer",
        "Quality Automation"
      ]
    },
    {
      "title": "Bootcamp Cypress en español - Un framework desde cero (2025)",
      "url": "https://www.udemy.com/course/bootcamp-cypress-como-crear-un-framework-desde-cero/",
      "bio": "Bootcamp de automatización de pruebas con Cypress - Curso completo - Como crear un testing framework desde cero",
      "objectives": [
        "Selectores",
        "Fundamentos de Cypress",
        "Cómo construir un testing framework desde cero",
        "Cómo escribir pruebas robustas y mantenibles",
        "Mejores prácticas en automatización de pruebas",
        "CI/CD",
        "Page Object Model",
        "Reporte de pruebas en formato HTML (Allure)"
      ],
      "course_content": {
        "Introducción": [
          "Presentación",
          "Unete a nuestra comunidad"
        ],
        "Preguntas y Respuestas": [
          "Introducción",
          "Cypress se friza cuando ejecuto una prueba con Electron",
          "Missing script: ejecutar-pruebas;",
          "La carpeta de allure-results no se me genera",
          "Allure command not found"
        ],
        "Una mirada al futuro": [
          "Una mirada al futuro - Cómo se verá el proyecto final, al final curso"
        ],
        "Configuracion del entorno de desarrollo": [
          "Cómo configurar el entorno de trabajo",
          "Cómo descargar e instalar Visual Studio Code",
          "Cómo descargar e instalar Node JS",
          "Cómo instalar GIT"
        ],
        "Selectores": [
          "Introducción a los selectores",
          "Selectores XPATH",
          "Como encontrar elementos XPATH por sus propiedades",
          "Como encontrar elementos XPATH por su inner text",
          "Selectores XPATH \"or\" y \"and\"",
          "Como encontrar elementos XPATH por su relación con otros elementos",
          "Selectores CSS",
          "Como encontrar elementos CSS por Id",
          "Como encontrar elementos CSS por clase",
          "Como encontrar elementos CSS por su relación con otros elementos"
        ],
        "Fundamentos de Cypress - Instalación y primer caso de pruebas": [
          "Instalación",
          "Como crear nuestro primer caso de pruebas"
        ],
        "Fundamentos de Cypress - Selectores Cypress": [
          "Método \"get\"",
          "Método \"contains\"",
          "Método \"find\"",
          "Método \"first\"",
          "Método \"eq\"",
          "Método \"closest\""
        ],
        "Fundamentos de Cypress - Assertions": [
          "Should exist",
          "Should have",
          "Should contain",
          "Should be visible",
          "Should be checked",
          "Should not"
        ],
        "Fundamentos de Cypress - Click, type and check": [
          "Método \"Click\"",
          "Método \"Type\"",
          "Métodos \"Check\" and \"Uncheck\""
        ],
        "Fundamentos de Cypress - Como esperar": [
          "Método \"Wait\" and timeout"
        ]
      },
      "requirements": [
        "Tener instalado un IDE, preferiblemente VS Code",
        "Tener instalado Node JS"
      ],
      "description": "Este es un curso completo de Cypress en español, explica paso a paso cómo crear un framework de automatización desde cero. Incluye temas básicos de Cypress, el patron de diseño Page Object Model (POM), ejecución de pruebas en paralelo, integración continua con AWS Codebuild así  como la generación de un reporte de pruebas HTML con Allure reporter.\n\n\nLa metodología de este curso esta basada en la construcción paso a paso de un framework de automatización para una serie de pruebas manuales que generamos a través de Chat GPT para la pagina web \"demoblaze\" A lo largo del curso se nos presentas errores, trabas, problemas de flakiness entre otras errores los cuales presentamos en el curso, sin ediciones, y resolvemos durante la marcha. A los fines de mostrar a los estudiantes los inconvenientes a los que nos encontramos mientras automatizados, como analizarlos y Cómo solucionarlos.\n\n\nEl curso no solo explica en forma llana los conceptos principales de automatización y de Cypress, si no que también los demuestra con ejemplos de la vida real.\n\n\nEl curso esta dirigido a profesionales de la automatización de pruebas de todos los niveles. Include desde los conceptos mas básicos de la automatización como es el tema de los selectores hasta temas mas avanzados como lo es la ejecución de las pruebas desde entornos remotos.\n\n\ncypress automation bootcamp / cypress desde cero / cypress continuous integration / Cypress POM / Cypress Page Object Model /",
      "target_audience": [
        "Automatizadores de pruebas de todos los niveles"
      ]
    },
    {
      "title": "基於Selenium WebDriver 的Web 應用自動化測試",
      "url": "https://www.udemy.com/course/selenium-webdriver-web/",
      "bio": "自動化測試基礎入門",
      "objectives": [
        "了解測試概念，這是最佳實踐",
        "使用Selenium進行自動化測試"
      ],
      "course_content": {
        "Introduction": [
          "什麼測試",
          "測試主管和測試工程師的角色與責任",
          "介紹Selenium 1 & Selenium2"
        ],
        "安裝 & 設定: Windows, MAC": [
          "在Windows安裝python",
          "Pycharm Installation",
          "webdriver 和 geckodriver"
        ],
        "SELENIUM 與 Browser": [
          "Your First Program on Web Automation. 建立第一個web自動測試程式",
          "Selenium : Browser的基本操作",
          "Selenium: Browser的進階操作"
        ],
        "WEB ELEMENTS IN SELENIUM": [
          "Locate Web Element with ID",
          "Locate Web Element with Name",
          "Locate Web Element with Class name",
          "Locate Web Element with Link and partial Link"
        ],
        "ADVANCED TECHNIQUES": [
          "Locating Web Element with Xpath",
          "How to Write Custom Xpath",
          "How to Write CSS Selector",
          "Xpath & CSS - Notes Download"
        ],
        "Learn Selenium with SignIn and SignUp page 登入與註冊頁面": [
          "測試登入頁面 -Part 1",
          "測試登入頁面 -Part 2",
          "測試登入頁面 -Part 3",
          "測試註冊頁面"
        ],
        "Selenium 進階操作": [
          "Selenium 等待操作",
          "鼠標事件介紹",
          "鼠標事件測試操作- drag and drop",
          "鼠標事件測試操作- context menu"
        ]
      },
      "requirements": [
        "一部有網路的電腦"
      ],
      "description": "在一般中小型的軟體公司，是不太重視測試或是有測試團隊也只是手動測試而已。但是我來到新加坡工作後接觸到許多團隊是有專業測試工程師，大部分薪水也是高於軟體工程師。\n不管你是用什麼語言都沒關係，先用python了解測試，再切換至你擅長的電腦語言就好了。 當我學測試時，是不懂python的，但是pyhton與selenium資源與資料是最多，更何況python很熱門，就想順便學習好了。  相信我，如果你有coding的經驗，學python很簡單的。\n您即將學習Web自動化測試中最好的綜合課程：\n您將學習Selenium，Python和手動測試。所有您需要確保您在自動化測試或頂尖學習體驗中的夢想工作！\n\n沒有什麼是不可能的，我們聽到你的旅程有所幫助。加入我們！你的事業將永遠不會再一樣..\n這裡是通過本課程註冊獲得的\nWord-By-Word說明：在整個課程中，我將解釋每一行代碼，而不會跳過一行代碼。\n良好的結構化和易於學習：課程是專門設計的，以便學生學習測試概念，為什麼是自動化測試，Python和Selenium。\n注意：學生查詢和問題將立即回答。\n這裡是您將在此完整課程中學到的一切：\n完整課程分為以下的主要部分\n軟件測試\nPython\nSelenium\n透過這個課程你將會了解什麼是自動測試，以後可以不論在那一個語言中都可以使用。\nSelenium 是為瀏覽器自動化（Browser Automation）需求所設計的一套工具集合，讓程式可以直接驅動瀏覽器進行各種網站操作。\n2004 年在芝加哥 ThoughtWorks 公司工作的 Jason Huggins 建立一個名為「JavaScriptTestRunner」的測試工具（testing tool），ThoughWorks 的風格就是讓各類型的應用程式都能自動化測試，這個最早的測試工具原型，就是 Selenium 開放源碼專案的前身。\nSelenium 執行「真實的瀏覽器」來進行網站操作的自動化，它能夠直接獲取即時的內容，包括被 JavaScript 修改過的 DOM 內容，讓程式可以直接與網頁元素即時互動、執行 JavaScript 程式，因此也適用於前端採用 AJAX 技術的網站。\nSelenium 是許多 Web Testing 工具的核心，利用 Selenium 操作網頁表單資料、點選按鈕或連結、取得網頁內容並進行檢驗，可以滿足相當多測試的需求。\nSelenium 發展迄今，已有四個主要的專案發行。\nSelenium IDE\nSelenium Remote Control\nSelenium WebDriver\nSelenium Grid\n\n\nSelenium 是目前最廣泛的，語言包括JAVA, C#, Javascript, Ruby, Objective C , PHP等等\n作業系統 : Microsoft Windows、 Apple OS X and linux\nbrowser :  Safari、Opera、Chrome、 Firefox and Internet Explorer\n所以讓我們開始成為Web自動化測試工程師的旅程！",
      "target_audience": [
        "從來沒有編程的初學者。",
        "軟體工程師員想切換到Web自動化測試。"
      ]
    },
    {
      "title": "Quality Assurance Engineer : Cypress Dari Awal Sampai Mahir",
      "url": "https://www.udemy.com/course/quality-assurance-engineer-cypress-dari-awal-sampai-mahir/",
      "bio": "Belajar Membuat Test Automation Dengan Cypress Dari Awal Sampai Mahir",
      "objectives": [
        "Belajar Install dan Setup Cypress",
        "Belajar Basic Cypress",
        "Belajar Basic Qualty Assurance Automation",
        "Membuat Automation Test Code Dengan Cypress",
        "Menjalankan Dan Mendebug Test Code",
        "Menjalankan dan Menampilkan Report Automation Cypress"
      ],
      "course_content": {
        "Introduction": [
          "Pengenalan End To End Testing",
          "Pengenalan Cypress",
          "Required Software dan Recommended Setup",
          "Install Cypress Part 1",
          "Install Cypress Part 2",
          "Install App To Test",
          "Buka Cypress Studio",
          "Cypress Basic Hello World",
          "Cypress Visit dan Assert",
          "Cypress Login Scenario Part 1",
          "Cypress Login Scenario Part 2",
          "Update : Install step by step Laravel project nya"
        ],
        "Quiz 1": [
          "Quiz 1"
        ],
        "Best Practice Setup Cypress": [
          "Setup Cypress"
        ],
        "Selector Itu Koenci": [
          "Intro Selector",
          "Selector Case Login",
          "Selector Case Logout",
          "Nge Cheat Selector Pake Cypress Studio"
        ],
        "Tips Reset Database Untuk Automation": [
          "Intro Cara Reset Db Part 1",
          "Intro Cara Reset Db Part 2"
        ],
        "Cypress Hook": [
          "Before dan After Hook",
          "Teori Tentang Hook"
        ],
        "Use Case Delete Data": [
          "Use Case delete data",
          "Mencari Selector yang Tepat Untuk Delete Data",
          "Mencari Selector yang Tepat Untuk Delete Data Part 2",
          "Use case cancel delete data"
        ],
        "Use Case Edit Data": [
          "Automation use case edit data",
          "Ngative Test Case Edit Data Part 1",
          "Negative TEst Case Edit Data Part 2"
        ],
        "Running Cypress Headless Via CLI dan Reportingnya": [
          "Run via CLI Part 1",
          "Membuat Mochawesome Report Part 1",
          "Membuat Mochawesome Report Part 2"
        ]
      },
      "requirements": [
        "Dasar Quality Assurance",
        "Pengetahuan install laravel"
      ],
      "description": "Hai welcome back gaes to course nya dosenNgoding.\nKali ini kita akan belajar mengenai Cypress.\nCypress adalah salah satu tools yang sangat populer untuk melakukan E2E test saat ini\nTools ini sangat penting untuk dipelajari oleh teman teman Software Quality Assurance yang ingin meningkatkan levelnya menjadi Software Quality Assurance Engineer.\nUntuk siapa saja kah course ini ?\nUntuk yang sedang berkarir sebagai Software Quality Assurance\nUntuk mahasiswa\nUntuk pencinta dunia IT yang ingin mengautomasi testing\nUntuk  para Software Quality Assurance yang ingin meningkatkan skill ke dunia Automasi\nUntuk para Software Quality Assurance yang ingin hidupnya lebih mudah\nUntuk para Software Quality Assurance yang ingin Regressi nya ga pake lembur\nUntuk para Owner Startup yang pingin tim nya elevate jadi lebih baik\nUntuk para Project Manager yang ingin software nya ketika rilis udah di cek dan aman\nDengan cypress proses testing yang berulang bisa di \"rekam\" dan dijalankan ulang untuk proses regressi selanjutnya.\nDi course ini teman teman akan mendapatkan :\nCara melakukan installasi Cypress\nMembuka dan memahami interface Cypress dari awal\nMengetahui fitur fitur Cypress Studio\nMemahami dasar dasar cypress\nMengetahui cara interaksi dengan element web\nMemilih selector yang benar\nMelakukan Assertion\nMembuat Test Code dengan Best Practice AAA (Arrange Act Assert)\nNge setup cypress dengan enak\nMembuat Test Case berdasarkan User Story\nMenjalankan Cypress di CLI\nMembuat Report Custom dengan tampilan yang menarik",
      "target_audience": [
        "Software Quality Assurance Junior",
        "Manual Software Quality Assurance",
        "Junior Quality Assurance Engineer"
      ]
    },
    {
      "title": "Testautomatisierung: Selenium WebDriver Java von Grund auf",
      "url": "https://www.udemy.com/course/selenium-webdriver-java-von-grund-auf/",
      "bio": "Lerne die Grundlagen der Testautomatisierung durch reale Projekte und Übungen.",
      "objectives": [
        "Grundlagen der Testautomatisierung mit Selenium und Java",
        "Einrichtung und Nutzung von Tools wie IntelliJ, Maven und TestNG",
        "Arbeiten mit Locators (XPath, CSS) in realen Testszenarien",
        "Schreiben von Tests für verschiedene Browser (Firefox, Edge)",
        "Anwendung des Page Object Model zur Strukturierung von Tests",
        "Praktische Übungen und Aufgaben zur Festigung des Wissens",
        "Debugging und Fehlersuche in automatisierten Tests",
        "Erstellung von vollständigen Test-Suiten für Regressionstests"
      ],
      "course_content": {
        "Einführung": [
          "Über den Autor"
        ],
        "Installation und Konfiguration der notwendigen Tools": [
          "Installation der Java JDK-Umgebung",
          "Installation von IntelliJ und Maven",
          "Erstes Maven-Projekt in IntelliJ",
          "Herunterladen der notwendigen Bibliotheken",
          "Einführung in JUnit",
          "Erste Schritte mit Selenium",
          "Selenium und Firefox: Erweiterte Techniken"
        ],
        "Locators im Selenium WebDriver: Strategien und bewährte Methoden": [
          "Praktische Übung: Verwendung einfacher Locators",
          "Arbeiten mit komplexen Locators: XPath und CSS-Selektoren",
          "Effiziente Elementauswahl: Tools und manuelle Strategien",
          "Probleme mit Selenium-Locators erkennen und beheben",
          "Hausaufgabe: Entwicklung von Locators für die Web-Automatisierung",
          "Besprechung der Hausaufgabe",
          "WebElement-Befehle in Aktion"
        ],
        "Einführung in TestNG": [
          "Erstellung eines neuen Maven-Projekts für Selenium-Tests",
          "Erstellen und Strukturieren der ersten Selenium-Testklasse und -Methode",
          "Testschritte umsetzen – Browserstart und Ausführung der Aktionen",
          "Abschließen der Testschritte mit Verifizierungen und Assertions",
          "Tests mit TestNG ausführen",
          "Debugging-Techniken in Selenium"
        ],
        "Praktisches Schreiben von Selenium-Tests": [
          "Fehlgeschlagene Login-Versuche testen und verstehen",
          "Einrichtung einer Testklasse für negative Login-Tests",
          "Übungsaufgabe – Test für falschen Benutzernamen erstellen",
          "Test zur Überprüfung eines falschen Benutzernamens implementieren",
          "Übungsaufgabe – Test für falsches Passwort entwickeln",
          "Test für falsches Passwort erstellen"
        ],
        "Testen auf verschiedenen Browsern": [
          "Einrichten von Selenium mit Firefox über den Selenium Manager",
          "Manuelle Konfiguration von Selenium für Edge (Windows)",
          "Erstellen einer vollständigen Regressionstest-Suite mit TestNG",
          "Ausführen der TestNG-Suite"
        ],
        "Page Object Model in Selenium implementieren": [
          "Entwicklung eines Page Objects für die Login-Seite",
          "Verwendung des Page Objects im automatisierten Test"
        ],
        "Praktische Aufgaben": [
          "Praktische Aufgabe #1",
          "Praktische Aufgabe #2"
        ],
        "Theoretische Prüfung": [
          "Löse die theoretische Prüfung"
        ]
      },
      "requirements": [
        "Motivation, Neues zu lernen und sich mit technischen Themen auseinanderzusetzen",
        "Bereitschaft, aktiv mitzuarbeiten und praktische Übungen durchzuführen"
      ],
      "description": "Willkommen im Kurs „Testautomatisierung: Selenium WebDriver Java von Grund auf“!\nDieser Kurs ist ideal für alle, die in die Welt der Testautomatisierung einsteigen und die Grundlagen mit Selenium WebDriver und Java von Anfang an lernen möchten.\nGanz gleich, ob Sie noch nie automatisierte Tests geschrieben haben oder bereits erste Erfahrungen gesammelt haben – dieser Kurs bietet Ihnen einen praxisnahen Einstieg mit klaren Anleitungen und echten Beispielen.\n\n\nWas werden Sie in diesem Kurs lernen?\n\n\nEinrichtung der Tools: Installation von Java JDK, IntelliJ, Maven sowie die ersten Schritte mit JUnit und Selenium.\nArbeiten mit Locators: Finden und identifizieren von Elementen auf Webseiten mithilfe von XPath, CSS-Selektoren und Best Practices.\nTestNG in der Praxis: Strukturierung, Ausführung und Organisation Ihrer Tests mit Hilfe von TestNG.\nNegative Testszenarien: Testen von fehlgeschlagenen Logins und anderen realistischen Fehlerfällen.\nCross-Browser-Tests: Ausführen Ihrer Tests auf Firefox und Edge mit Selenium.\nPage Object Model: Einführung in eine skalierbare und wartbare Testarchitektur.\nÜbungen & Prüfung: Zahlreiche praktische Aufgaben und eine theoretische Abschlussprüfung zur Wissensfestigung.\n\n\nFür wen ist dieser Kurs geeignet?\n\n\nFür Einsteiger ohne Vorkenntnisse in Testautomatisierung.\nFür Entwickler und Tester, die Selenium mit Java systematisch lernen möchten.\nFür alle, die praxisnahes und sofort anwendbares Wissen suchen.\n\n\nWarum sollten Sie an diesem Kurs teilnehmen?\n\n\nPraxisorientierter Lernansatz mit klaren Schritt-für-Schritt-Erklärungen.\nKein Vorwissen notwendig – Sie werden bei null abgeholt.\nLernen im eigenen Tempo – wann und wo Sie möchten.\nErprobt und verständlich erklärt – ideal für Berufseinsteiger oder Umsteiger.\n\n\nMelden Sie sich jetzt an und starten Sie Ihre Reise in die Welt der Testautomatisierung mit Selenium – ein Skill, der in der IT-Welt immer gefragter wird!",
      "target_audience": [
        "Für Einsteiger, die Selenium und Testautomatisierung von Grund auf lernen möchten",
        "Für Softwaretester und QA-Spezialisten, die in die Automatisierung einsteigen wollen",
        "Für Java-Entwickler, die automatisierte Tests in ihre Projekte integrieren möchten"
      ]
    },
    {
      "title": "Testes de Contrato em JAVA com PACT",
      "url": "https://www.udemy.com/course/testes-de-contrato-em-java-com-pact/",
      "bio": "Evoluar suas APIs REST com segurança, sem causar problemas entre Provedores e Consumidores",
      "objectives": [
        "Criar testes de contrato utilizando o PACT (JVM)",
        "Como estruturar os projetos para conseguir fazer testes de contratos",
        "Fazer uma execução dos testes de provedor e consumidor através do maven",
        "Configurar o ambiente para uso do Pact Broker",
        "Centralizar os contratos através do Pact Broker",
        "Criar um Stub Server para virtualizar os serviços do provedor",
        "Trabalhar com várias dependências ao mesmo tempo"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Organização do Curso"
        ],
        "Ambiente": [
          "JAVA",
          "Eclipse",
          "Maven",
          "Docker"
        ],
        "Consumer Test": [
          "BasicConsumer",
          "Unit Tests",
          "My first contract",
          "The Pact file"
        ],
        "Provider Test": [
          "Tasks Backend",
          "JUnit Verification",
          "Pact DSL",
          "Maven Verifications"
        ],
        "Pact Broker": [
          "Pact Broker",
          "Publishing Contracts",
          "Contract Verification",
          "Docker Help"
        ],
        "Frontend as Consumer": [
          "Rest Basic",
          "Tasks Frontend",
          "The Problem",
          "Refactoring",
          "GET ID",
          "POST",
          "Save Invalid Task",
          "PUT",
          "DELETE",
          "GET ALL",
          "Publish and Verify",
          "Hooks",
          "Save with String",
          "Double Access",
          "Reports"
        ],
        "UI Testing": [
          "Stub Server",
          "Matcher Param"
        ],
        "Real API Contract": [
          "Seu Barriga",
          "Signin",
          "/GET Accounts",
          "/POST Accounts",
          "/PUT Accounts",
          "Publish and Verify",
          "External Hook",
          "Get data from hook",
          "Dinamic Token",
          "Double Dependency (Problem)",
          "Double Dependency (Solution)"
        ],
        "Encerramento": [
          "Até a próxima!",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Conhecimento básico de JAVA"
      ],
      "description": "Seja muito bem vindo(a) ao curso de Testes de Contrato em JAVA com PACT.\nNesse curso, você irá aprender a importância deste tipo dos Consumer-Driven Contract Tests (Testes de contrato, para simplificar), e como adicionar esta camada de segurança nas suas aplicações. Será apresentado também boas práticas para estruturar sua aplicação de tal forma que facilite a criação de tais tipos de testes.\nVeremos como gerar contratos a partir dos testes do Consumidor, como utilizar estes contratos para validar as iterações esperadas com o provedor. Por fim, iremos centralizar todos estes contratos no Pact Broker (Provisionado através do Docker). E ainda será possível utilizar estes contratos para gerar uma instância mockada (Virtualização) do provedor, utilizando o Pact Stub Server.\nVamos trabalhar com APIs Rest usando uma versão em SpringBoot que será hospedada no seu próprio ambiente, mas também nos comunicaremos com uma API remota, em javascript (SeuBarriga) para conseguir trazer ainda mais desafios como: Autenticação, massa de dados, hooks, vários acessos e inclusive o uso de mais que uma API ao mesmo tempo.\nEntão é isso, espero poder te encontrar nas próximas aulas. Até lá! ;)",
      "target_audience": [
        "Analistas que desejam entender o fluxo de testes de contrato por completo",
        "Desenvolvedores que possuem dependências com outras APIs e desejam trabalhar com segurança",
        "Testadores que buscam melhorar a qualidade do processo de testes, deixando-os mais estáveis"
      ]
    },
    {
      "title": "Performance testing con JMeter + BlazeMeter",
      "url": "https://www.udemy.com/course/performance-testing-con-jmeter-blazemeter/",
      "bio": "Aprenderá los conceptos básicos de las pruebas de rendimiento utilizando las herramientas más populares de la actualidad",
      "objectives": [
        "Comprender los conceptos básicos de las pruebas de rendimiento.",
        "Automatiza scripts y ejecuta pruebas con JMeter",
        "Cree y ejecute pruebas de carga con BlazeMeter",
        "Aprenderás a realizar las pruebas de rendimiento y optimización de sitios web y aplicaciones móviles en el lado del servidor."
      ],
      "course_content": {
        "Módulo 1- Introducción a las pruebas de rendimiento o Performance": [
          "¿De qué se trata el testing de performance?",
          "¡Bienvenido! Antes de comenzar...",
          "¿Cómo puede ayudarnos JMeter con las pruebas de performance?",
          "Conceptos básicos de automatización y simulación de carga",
          "Introducción a HTTP",
          "Si existe un formulario con el siguiente código HTML:",
          "Debugging con Fiddler",
          "Un primer vistazo a la interfaz de JMeter",
          "Bloques principales de construcción en JMeter",
          "Grabando un script con JMeter",
          "Analizando el script",
          "Módulo 1 - Cuestionario"
        ],
        "Módulo 2 - CONCEPTOS BÁSICOS DE JMETER": [
          "¿Querés una cookie?",
          "HTTP Cookie Manager",
          "La importancia de las assertions",
          "Assertions en JMeter",
          "¿Cómo seleccionamos buenas assertions?",
          "Desafío - Construyendo un script simple",
          "Variables: conceptos básicos",
          "Variables definidas por el usuario en JMeter",
          "Introducción a las expresiones regulares",
          "Extractor de expresiones regulares",
          "Correlación de variables en JMeter",
          "Desafío - Un script de mayor complejidad",
          "Módulo 2 - Cuestionario"
        ],
        "Módulo 3 - JMETER AVANZADO": [
          "Parametrización de datos",
          "Parametrización de datos y archivos CSV en JMeter",
          "Introducción a los Controllers",
          "Algunos controllers importantes",
          "Escribiendo scripts más realistas: trabajando con timers",
          "¿Qué es un escenario de prueba?",
          "Aspectos avanzados de los escenarios de prueba",
          "Hilos, iteraciones y ramp up",
          "Líneas de base y escenarios incrementales",
          "Plan de ejecución",
          "Ejecutando un escenario de prueba con JMeter",
          "Módulo 3 - Cuestionario"
        ],
        "Módulo 4 - TESTING DE PERFORMANCE DESDE LA NUBE": [
          "Revisando JMeter",
          "Sobre Blazemeter",
          "Configurando una prueba básica en BlazeMeter",
          "Configuraciones avanzadas y pruebas múltiples",
          "Entendiendo los informes en BlazeMeter",
          "Módulo 4 - Cuestionario",
          "Bonus Track: Recursos y agradecimientos"
        ]
      },
      "requirements": [
        "Conocimiento básico sobre testing de software. Conocimientos básicos de programación (recomendado). Conocimiento básico del proceso de desarrollo de software. Arquitectura web (recomendado). Secuencias de comandos y conceptos de codificación (variables, constantes, parámetros, valores)."
      ],
      "description": "Para optimizar una aplicación web o móvil, o ayudar con el dimensionamiento de la infraestructura necesaria para que funcione correctamente, necesitamos preparar y ejecutar simulaciones de carga utilizando las herramientas adecuadas.\n\n\nDe eso se tratan las pruebas de rendimiento. En este curso, aprenderá los conceptos básicos de las pruebas de rendimiento utilizando las herramientas más populares de la actualidad y siguiendo una metodología ampliamente utilizada. Para este objetivo, utilizamos juntos JMeter (la herramienta de simulación de carga de código abierto más popular) y BlazeMeter (la solución de simulación de carga basada en la nube más utilizada).\n\n\nEn este curso, comenzarás desde el principio, aprenderás los conceptos básicos y, al final, podrás realizar una ejecución de carga, simulando usuarios concurrentes de diferentes países, que acceden con diferentes anchos de banda, con diferentes datos de prueba, verificar los tiempos de respuesta y el consumo de recursos de una aplicación de comercio electrónico real (un ejemplo muy común del mundo real del uso de una prueba de carga).\n\n\n- Introducción a los conceptos de pruebas de rendimiento\n- Automatización y preparación de pruebas de carga en JMeter\n- Ejecución en BlazeMeter\n\n\nLos conceptos principales del curso se enseñan a través de una serie de vídeos y textos. La mayoría de los videos incluyen demostraciones y ejemplos de uso de las herramientas. Un curso altamente práctico, todas las lecciones requieren que el estudiante pruebe las herramientas y cumpla desafíos y tareas.",
      "target_audience": [
        "Esta dirigido a testers y desarrolladores que quieran aprender a automatizar scripts con JMeter"
      ]
    },
    {
      "title": "JUnit 从入门到精通",
      "url": "https://www.udemy.com/course/junit-ap/",
      "bio": "最短的时间掌握JUnit测试框架",
      "objectives": [
        "能够使用JUnit4撰写自动化测试用例",
        "能够使用JUnit5撰写自动化测试用例"
      ],
      "course_content": {
        "JUnit 4": [
          "JUnit 介绍",
          "第一个JUnit4项目",
          "JUnit4中的注解",
          "JUnit4 Timeout Test",
          "JUnit4 - Exceptions Test",
          "JUnit4 - Suite Test",
          "JUnit4中的@Rule",
          "参数化测试",
          "JUnit4中自定义Rule - 利用MethodRule接口",
          "JUnit4中自定义Rule - 利用TestRule接口",
          "JUnit4预定义的Rule"
        ],
        "JUnit 5": [
          "JUnit 5 介绍",
          "创建测试类",
          "JUnit4/5注解的差异",
          "Disabled相关注解",
          "@RepeatedTest 注解",
          "@Tag 注解",
          "JUnit 5 Assertions",
          "条件化测试",
          "JUnit 5 Test Suite"
        ]
      },
      "requirements": [
        "具备一定的Java编程能力",
        "能够使用任何一个主流的IDE"
      ],
      "description": "本课程采用理论和实践相结合的方式，全方位的讲解JUnit测试框架。\nJUnit随着时代的变迁经久不衰，充分证明了它的生命力。无论是做自动化测试亦或是TDD（测试驱动开发），JUnit都是你的不二选择。\n本课程分为两个部分\nJUnit 4\nJUnit 5\n虽然JUnit已经发展的JUnit 5，但是本课程并不打算忽略JUnit 4，相反，会从JUnit4开始讲起，因为JUnit 4 很早就面向市场并在业界广为流行，所以很有必要掌握JUnit 4。\n我们也会讲述JUnit 5，作为JUnit 4的后继者，JUnit5在软件架构上发生了巨大的变化，朝着更加易于使用和重构的方向上迈出了坚实的一步。",
      "target_audience": [
        "具备一定的Java开发能力，希望学习自动化测试"
      ]
    },
    {
      "title": "Manuel Yazılım Test Uzmanlığı Eğitimi & ISTQB",
      "url": "https://www.udemy.com/course/manuel-yazilim-test-uzmanligi-egitimi/",
      "bio": "Manuel Yazılım Test Uzmanlığı Eğitimi & ISTQB - Test ve Süreç Yönetimi",
      "objectives": [
        "Yazılım test süreçlerinin temel kavramlarını ve metodolojilerini öğrenerek güçlü bir teorik altyapı kazanacaksınız.",
        "JIRA, Postman, TestRail gibi sektörde yaygın kullanılan araçları uygulamalı olarak öğrenerek projelerinde etkili bir şekilde kullanabileceksiniz.",
        "Gerçek bir iş ortamında, yazılım test süreçlerini baştan sona yönetmeyi ve sonuçları etkili bir şekilde raporlamayı öğreneceksiniz.",
        "Test uzmanı pozisyonlarına başvurabilecek bilgi ve beceriye sahip olacak, özgeçmişlerini sektörel araçlarla zenginleştireceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Eğitim Hakkında",
          "Yazılım Testine Genel Bakış"
        ],
        "Testin Temelleri ve SDLC": [
          "Bölüm Başlangıcı",
          "Yazılım Geliştirme Yaşam Döngüsü (SDLC)",
          "Yazılım Test Uzmanı Olmak",
          "Hata Raporlama ve Hatanın Yaşam Döngüsü",
          "Hata Raporlama Örnekleri",
          "Gereksinim Analizi Nedir?",
          "Test Senaryosu ve Kontrol Listeleri",
          "QA Rise Hata Raporlama Platformu"
        ],
        "ISTQB ve Test Metotları": [
          "ISTQB Hakkında",
          "Test Seviyeleri",
          "Black Box & White Box Testleri",
          "Kara Kutu (Black Box) Test Teknikleri",
          "Tecrübeye Dayalı Test Teknikleri"
        ],
        "İleri Seviye Yazılım Test Teknikleri": [
          "Bölüm Başlangıcı",
          "Negatif Testler",
          "Duman Testi",
          "Mantıklılık Testi",
          "Regresyon Testi",
          "Risk Bazlı Testler",
          "Statik Testler",
          "Test Planlama ve Test Tahminleme",
          "Yazılım Geliştirme - Test ve Canlı Ortamlar"
        ],
        "Test ve Süreç Yönetim Araçları": [
          "Bölüm Başlangıcı",
          "Jira ile Proje Yönetimi ve Hata Raporlama",
          "Github ile Proje Yönetimi ve Hata Raporlama",
          "Confluence ile Dokümantasyon",
          "TestRail ile Test Süreçleri Yönetimi"
        ],
        "Ek Kaynaklar": [
          "Kaynaklar"
        ]
      },
      "requirements": [
        "Bu kursu alabilmek için herhangi bir ön bilgiye veya deneyime sahip olmanıza gerek yoktur. Yeni başlayanlar için tamamen uygun şekilde hazırlanmıştır."
      ],
      "description": "Yazılım Test Eğitimi: Test Uzmanlığına İlk Adım!\nBu eğitim, yazılım test uzmanı olmak isteyenler için kapsamlı ve pratik bir rehber sunuyor. Kursumuzda, yazılım testinin temellerinden başlayarak sektörde kullanılan en güncel yöntemleri ve araçları öğrenme fırsatı bulacaksınız.\nEğitimin başlangıcında, mesleğe dair temel teorik bilgileri ele alacağız. Ardından, web testleri gibi farklı test türlerini uygulamalı olarak öğrenirken JIRA, TestRail, Confluence ve GitHub gibi popüler araçları da kullanmayı deneyimleyeceksiniz.\nEğitimin sonunda, yazılım testi alanında iş başvurularında kendinize güvenle yer alabilecek seviyeye geleceksiniz.\nBu Eğitimde Neler Bulacaksınız?\nYazılım testine dair temel bilgiler ve pratik uygulamalar\nGerçek iş senaryolarında kullanılan test araçları\nKariyerinizi bir adım öteye taşıyacak yöntem ve stratejiler\nEğitim, yüksek kaliteli video içeriği (1080P HD) ve anlaşılır bir anlatım dili ile sunulmaktadır. Ayrıca, içerik üzerinde titizlikle çalışılarak gereksiz kısımlar çıkartılmıştır, böylece en gerekli bilgileri en kısa sürede öğrenebileceksiniz.\nNeden Bu Eğitimi Tercih Etmelisiniz?\nBu eğitim, sektördeki gerçek deneyimleri yansıtan bir içerik sunuyor. Yazılım testine hem teorik hem pratik açıdan kapsamlı bir bakış açısı kazandırıyor. Test uzmanlığı alanında sahip olduğum 10 yıllık tecrübemi bu eğitimde sizlerle paylaşarak, sektörde başarılı olmanız için ihtiyacınız olan tüm bilgileri aktarıyorum.\n\n\nEğitime Kayıt Olarak Neler Kazanacaksınız?\nYazılım testine dair tüm temel bilgiler\nJIRA, Postman gibi araçlarla çalışma deneyimi\nSorularınıza 24 saat içinde yanıt alma imkanı\nHiçbir risk yok! Bu eğitim, platformun 30 gün para iadesi garantisi kapsamındadır. Eğer eğitimden memnun kalmazsanız, %100 paranızı geri alabilirsiniz.\nKimler Katılabilir?\nYazılım testine yeni başlayanlar\nKariyerini geliştirmek isteyen Jr. veya orta seviyedeki test uzmanları\nYeni test araçları öğrenmek isteyen tecrübeli profesyoneller\nEğitime katılmak için sadece bir bilgisayar, bir Android/iOS cihaz ve öğrenme isteği yeterli!\nHazır mısınız? Bugün kaydolun ve yazılım testinde uzmanlaşma yolunda ilk adımı atın!",
      "target_audience": [
        "Bu kurs, yazılım testi alanında bilgi edinmek veya mevcut bilgilerini geliştirmek isteyen herkes için uygundur."
      ]
    },
    {
      "title": "KI Neueinsteiger? Starte ohne Vorkenntnisse mit ChatGPT & Co",
      "url": "https://www.udemy.com/course/ki-neueinsteiger-starte-ohne-vorkenntnisse-mit-chatgpt-co/",
      "bio": "Lerne als Anfänger ChatGPT, Google Gemini, Midjourney, LLM, DALLE, Canva, Prompt Engineering, KI Tools und vieles mehr!",
      "objectives": [
        "Du wirst verstehen, was Künstliche Intelligenz wirklich ist und wie sie funktioniert.",
        "Ich zeige dir die wichtigsten Begriffe rund um KI – von Neuronalen Netzen bis zu LLMs.",
        "Du wirst lernen, wie Text-to-Text-KIs wie ChatGPT, Gemini und Perplexity dir helfen können.",
        "Ich erkläre dir, wie du KI für Texte, Übersetzungen, Analysen und sogar Coding nutzen kannst.",
        "Du wirst wissen, wie Text-to-Image-KIs wie Midjourney oder DALLE atemberaubende Bilder erzeugen.",
        "Ich zeige dir, wie du KI für Social-Media-Posts, Logos oder digitale Kunst einsetzen kannst.",
        "Du wirst die Grundlagen des Prompt Engineerings verstehen und lernen, optimale Prompts zu schreiben.",
        "Du wirst lernen, worauf du bei der Nutzung von KI achten musst – Datenschutz, Quellen & Fehlinformationen.",
        "Ich erkläre dir, wie Urheberrecht und ethische Fragen bei KI-generierten Inhalten eine Rolle spielen.",
        "Ich zeige dir, wie du KI sicher und verantwortungsbewusst nutzt.",
        "Du wirst entdecken, wie KI deine Produktivität steigern und dir im Job helfen kann.",
        "Ich erkläre dir, wie du KI für kreative Projekte und als Unterstützung im Alltag einsetzt.",
        "Du wirst wissen, wie du Fake News erkennst und KI-generierte Inhalte kritisch hinterfragst.",
        "Ich gebe dir praktische Tipps für den Alltag, damit du das Maximum aus KI herausholen kannst."
      ],
      "course_content": {
        "Einführung": [
          "Herzlich Willkommen – DAS wirst du in diesem Kurs lernen",
          "Neueinsteiger im Bereich KI? Kein Problem..",
          "Der konkrete Nutzen von KI kurz Aufgeschlüsselt"
        ],
        "Grundlagen KI & die wichtigsten Begriffe erklärt": [
          "Was du in diesem Abschnitt lernen wirst",
          "Was heißt und was ist eigentlich „KI/AI/künstliche Intelligenz“?",
          "Was bedeutet „Maschinelles Lernen“?",
          "Was sind „Neuronale Netze“?",
          "Was bedeutet „NLP“?",
          "Was sind sogenannte „LLMs“?",
          "Was heißt eigentlich „GPT“?",
          "Was ist „Prompt Engineering“?",
          "Was sind „Token“?",
          "Warum spielen „Bias“ eine Rolle?",
          "Was heißt es, wenn eine KI „halluziniert?“",
          "Was ist ein „API-Key“?",
          "Was ist ein „ChatBot“?",
          "Warum gibt es „RAG“?",
          "Was heißt „ToT, ToI, TtS“ usw.?",
          "Was ist ein „Open Source Code“?",
          "Was bedeutet denn „NINO“?",
          "Wars das „schon“?"
        ],
        "Text to Text KI´s": [
          "Grundlagen Text to Text KI´s (wie kann sowas funktionieren?)",
          "Welche Tools gibt es und welche sind die besten? Der perfekte Vergleich!",
          "Einführung ChatGPT (Desktop)",
          "Einführung ChatGPT (App)",
          "Einführung Gemini",
          "Einführung Perplexity",
          "Einführung Grok (3)",
          "Einführung DeepSeek",
          "Hier ist eine Liste mit weiteren TtT KI Tools",
          "Anwendungsfälle mit Text to Text KI´s",
          "ChatGPT individuell konfigurieren",
          "GPTs kurz erklärt inkl. Beispiel zum kopieren"
        ],
        "Text to Image KI´s": [
          "Grundlagen Text to Image KI´s (wie kann sowas funktionieren?)",
          "Welche Tools gibt es?",
          "Einführung Ideogram",
          "Einführung Midjourney",
          "Einführung Canva",
          "Anwendungsfälle mit Text to Image KI´s"
        ],
        "Weitere KI Nischen": [
          "Text to Speech",
          "Text to Video",
          "Text to Music",
          "Text to Website",
          "Text to Presentation",
          "...und was gibts noch?"
        ],
        "Prompt Engineering": [
          "Was ist Prompt Engineering? (eine einfache Definition)",
          "Es gibt mehrere Prompt Techniken",
          "Standard-Prompts vs. Advanced-Prompts",
          "Zero-Shot, One-Shot und Few-Shot Prompting",
          "Chain-of-Thought (CoT) Prompting",
          "Self-Consistency Prompting",
          "Role-based Prompting",
          "Multi-Turn-Prompting",
          "Multi-Modal Prompts (Bilder, Audio, Video)",
          "System vs. User Prompts (bei Modellen mit System-Anweisungen)",
          "Geordnete und ungeordnete Prompts",
          "Level Prompting",
          "LLM Prompts (KI gibt Prompt vor)",
          "Verfeinerungen (Skala Temperatur etc.)"
        ],
        "Darauf solltest du achten bei der Anwendung von…": [
          "Was hat dieser Abschnitt genau zu bedeuten?",
          "…Text-to-Text-Tools (Datenschutz, Halluzinationen, Quellenangaben)",
          "…Text-to-Image-Tools (Urheberrecht, kommerzielle Nutzung, ethische Fragen)",
          "…KI-generierten Inhalten & Urheberrecht (Wem gehört ein KI-generiertes Bild)",
          "…Datenschutz & Privatsphäre bei KI-Tools (Welche Daten gibt man preis?)",
          "…Fake News & KI-generierte Fehlinformationen",
          "…KI-gestützten Übersetzungen & kulturelle Unterschiede",
          "…KI in der Arbeitswelt & rechtliche Grauzonen"
        ],
        "Ethik, Datenschutz & Sicherheit": [
          "Probleme mit Bias & Fairness in KI + Umgang damit",
          "Datenschutzbestimmungen & Compliance (DSGVO, CCPA)",
          "Best Practices für ethisches Prompt Engineering"
        ],
        "Du kannst KI nutzen, um…": [
          "…auf der Arbeit produktiver zu sein",
          "…deine Kreativität auszuleben",
          "…damit Geld zu verdienen (Text to Text)",
          "…damit Geld zu verdienen (Text to Image)",
          "…damit Geld zu verdienen (Text to Video)",
          "…damit Geld zu verdienen (Text to Speech)",
          "…damit Geld zu verdienen (Text to Website)"
        ],
        "FAQs & Abschluss": [
          "Ist KI gefährlich oder kann sie meine Daten missbrauchen?",
          "Kann eine KI wirklich „denken“ oder ist sie nur ein Programm?",
          "Herzlichen Glückwunsch – DAS würde ich jetzt an deiner Stelle machen"
        ]
      },
      "requirements": [
        "Alles was du brauchst, lernst du in diesem Kurs"
      ],
      "description": "In diesem Kurs werde ich dich Schritt für Schritt in die Welt der Künstlichen Intelligenz (KI) einführen. Egal, ob du ein absoluter Anfänger bist oder bereits erste Berührungspunkte mit KI hattest – gemeinsam werden wir die Grundlagen verstehen, verschiedene KI-Technologien kennenlernen und lernen, sie sinnvoll in deinem Alltag oder Beruf einzusetzen.\nHast du dich schon immer gefragt, was genau „Künstliche Intelligenz“ ist und wie sie funktioniert?\nMöchtest du verstehen, wie Sprach-KIs wie ChatGPT oder Bild-KIs wie Midjourney atemberaubende Ergebnisse liefern?\nInteressierst du dich dafür, wie du KI-Tools gezielt für Arbeit, Kreativität oder Produktivität nutzen kannst?\nWillst du wissen, worauf du bei der Nutzung von KI achten solltest – von Datenschutz über Urheberrecht bis hin zu ethischen Fragen?\nDann ist dieser Kurs perfekt für dich geeignet!\nIn diesem umfassenden KI-Kurs wirst du ALLE notwendigen Grundlagen lernen, um die Welt der Künstlichen Intelligenz zu verstehen und effektiv zu nutzen. Wir starten bei den Basics und gehen über verschiedene KI-Anwendungen bis hin zu ethischen Fragen und Sicherheitsaspekten.\n\n\nHier bekommst du einen kleinen Vorgeschmack auf das, was dich erwartet:\n\n\n1. Einführung\nIch heiße dich herzlich willkommen und erkläre dir, was dich in diesem Kurs erwartet. Keine Sorge, falls du noch keine Erfahrung mit KI hast – wir starten von Grund auf. Ich zeige dir, warum KI so ein spannendes und nützliches Thema ist und wie sie deinen Alltag und deine Arbeit bereichern kann.\n\n\n2. Grundlagen der Künstlichen Intelligenz & die wichtigsten Begriffe\nIn diesem Abschnitt wirst du mit den wichtigsten Begriffen und Konzepten rund um Künstliche Intelligenz vertraut gemacht. Was bedeutet eigentlich „KI“? Was sind neuronale Netze, maschinelles Lernen oder Deep Learning? Wir klären gängige Begriffe wie NLP, LLMs, Token, Bias oder Prompt Engineering, sodass du ein solides Grundverständnis für den Rest des Kurses hast.\n\n\n3. Text-to-Text-KIs – Sprach-KI einfach nutzen\nHier dreht sich alles um KI-Modelle, die Texte generieren können. Wir schauen uns verschiedene Tools wie ChatGPT, Gemini oder Perplexity an und erkunden deren Anwendungsfälle. Wie schreibt man mit KI? Wie kann man sie für Berichte, Übersetzungen, Analysen oder sogar für die Programmierung nutzen? Ich zeige dir, wie du KI-Tools anpassen kannst, um sie noch effektiver zu machen.\n\n\n4. Text-to-Image-KIs – Bilder mit KI erstellen\nKI kann nicht nur Text, sondern auch Bilder generieren! In diesem Abschnitt lernst du, wie Midjourney, DALLE oder Ideogram funktionieren und wie du mit ihnen beeindruckende Bilder, Logos, Illustrationen oder Social Media Posts erstellen kannst. Auch rechtliche Fragen zur Nutzung von KI-generierten Bildern werden besprochen.\n\n\n5. Weitere KI-Nischen – Von Sprache bis Musik\nKünstliche Intelligenz ist vielseitig! In diesem Kapitel werfen wir einen Blick auf weitere spannende KI-Bereiche:\n• Text-to-Speech (KI-generierte Stimmen)\n• Text-to-Video (Videos mit KI erstellen)\n• Text-to-Music (KI komponiert Musik)\n• Text-to-Website (KI generiert Webseiten)\n• Speech-to-Speech (KI verändert Stimmen in Echtzeit)\n• Image-to-Image (KI optimiert oder verändert bestehende Bilder)\n\n\n6. Prompt Engineering – Die Kunst, mit KIs zu kommunizieren\nDas Geheimnis leistungsstarker KI-Nutzung liegt in den richtigen Anweisungen. Ich zeige dir, wie du Prompts optimierst, um noch bessere Antworten zu erhalten. Wir besprechen Techniken wie Zero-Shot, Few-Shot oder Chain-of-Thought-Prompting und schauen uns an, wie du systematische und kreative Prompts entwickelst.\n\n\n7. Wichtige Aspekte bei der Nutzung von KI\nKI kann unglaublich hilfreich sein – aber es gibt auch einige Dinge, auf die du achten solltest. Wir sprechen über Datenschutz, Urheberrechte, Fake News, KI-generierte Fehlinformationen und darüber, wie du verantwortungsvoll mit KI umgehst.\n\n\n8. Ethik, Datenschutz & Sicherheit\nKünstliche Intelligenz ist mächtig – doch welche Herausforderungen gibt es? Wir beleuchten Themen wie Bias, Fairness, Datenschutzrichtlinien (DSGVO, CCPA) und die ethischen Fragen der KI-Nutzung.\n\n\n9. So kannst du KI für dich nutzen\nKI kann dir in vielen Lebensbereichen helfen! Ich zeige dir, wie du KI gezielt einsetzt, um produktiver zu arbeiten, deine Kreativität auszuleben oder sogar Geld zu verdienen.\n\n\n10. Abschluss & FAQ\nWir fassen das Gelernte zusammen und beantworten häufig gestellte Fragen: Ist KI gefährlich? Wird sie unsere Jobs ersetzen? Was solltest du als Nächstes tun?\n\n\nBereit, in die Welt der Künstlichen Intelligenz einzutauchen? Dann melde dich jetzt für diesen Kurs an und entdecke die Möglichkeiten, die KI für dich bereithält!\nIch freue mich auf dich!\n\n\nDanke für dein Vertrauen & Beste Grüße\nSascha",
      "target_audience": [
        "An alle für die KI eine komplett neue Welt ist",
        "An alle, die überfordert sind mit diesem Thema",
        "An alle, die von Anfang an mit KI alles richtig machen wollen",
        "An komplette Neueinsteiger"
      ]
    },
    {
      "title": "Testare automată pentru începători!",
      "url": "https://www.udemy.com/course/testare-automata-pentru-incepatori/",
      "bio": "Învață testare automată de la profesioniști!",
      "objectives": [
        "Realizarea de la 0 a unui proiect de teste automate eficiente folosind Java, Maven, Selenium WebDriver, JUnit și Cucumber",
        "Versionarea unui proiect folosind Git și GitHub",
        "Pornirea automată a testelor folosind Jenkins",
        "Operarea cu principii de bază de programare Java pentru realizarea unor aplicații de consolă",
        "Înțelegerea prin exemple practice a principiilor de bază din programarea Java și din OOP"
      ],
      "course_content": {},
      "requirements": [
        "Un calculator personal și o conexiune la internet.",
        "Cunoștințe de bază despre testare manuală.",
        "Cunoștințe de limba engleză astfel încât să poți înțelege conținutul unui articol scris."
      ],
      "description": "Acest curs îţi va oferi posibilitatea de a înţelege noţiuni şi tehnici de bază din aria testării automate.\nDe-a lungul cursului te vei familiariza cu conceptele limbajului de programare Java, vei învăţa cum să te foloseşti de diverse unelte web pentru ca pe de o parte să îţi eficientizezi munca iar pe de altă parte să fi sigur că rezultatele obţinute sunt cele reale.\nScripturile scrise în cadrul testării automate te vor ajuta, ca și tester, să eviți epuizarea și monotonia determinate de volumul ridicat de muncă repetitivă pe care îl implică, spre exemplu, testarea regresivă.\nMai mult, prin folosirea scripturilor, testarea automată se va realiza mai rapid și fără erori umane. Exerciţiile exemplificative de testare automată din cadrul cursului le vei practica pe un website special conceput pentru acest obiectiv.\nPrin absolvirea acestui curs îți vei dezvolta abilitățile tehnice necesare pentru a putea scrie testele automate care îți vor oferi satisfacția de care ai nevoie zi cu zi.\n\nAcest curs nu include asistența trainer-ului. Pachetele cu asistență pot fi găsite înafara platformei Udemy, pe site-ul fasttrackit.",
      "target_audience": [
        "Orice persoană care vrea să îşi eficientizeze/automatizeze munca de testare a unui website."
      ]
    },
    {
      "title": "Тестировщик с нуля. Тесты",
      "url": "https://www.udemy.com/course/tests4testers/",
      "bio": "Набор тестов для специалистов в области ручного тестирования",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ДАННЫЙ ТРЕНАЖЕР НЕ ВКЛЮЧАЕТ ВИДЕО-УРОКИ, МАТЕРИАЛЫ И ЗАДАНИЯ.\n\n\nВозможно кто-то из вас уже знаком с моей деятельностью на Youtube. Я являюсь автором одного из самых крупных каналов в русскоязычном сегменте, посвященному ручному тестированию приложений, Artsiom Rusau QA Life.\n\n\nЕсли вы являетесь студентом моего курса \"Тестировщик с нуля\" или в пакете Intern, то покупать данные тесты НЕ НУЖНО! Вопросы одинаковые.\n\n\nВ рамках данного тренажера с тестами, я предлагаю закрепить тебе полученные знания в ходе обучения на курсах по тестированию, а также освежить теоретические знания, если ты готовишься к прохождению интервью или ассессмента.\n\n\n\n\nВ данном тренажере ты найдешь 400+ вопросов по разным направлениям ручного тестирования:\n- Теория тестирования\n- Техники тест-дизайна\n- Тестовая документация\n- Тестирование мобильных и веб-приложений\n- Работа с Postman и анализаторами трафика\n- Работа с базами данных\n- Работа с git и bash\n\n\nТы сможешь проходить тесты неограниченное количество раз. Каждый раз тесты будут собираться в новой последовательности.\n\n\nПосле окончания практического теста, ты получишь информацию по тем модулям, которые тебе стоит подтянуть в виде круговой диаграммы.\n\n\nТестовые наборы будут периодически обновляться, как и бонусные видео.\n\n\nUPD от 16.11.2023: добавлено 100 новых тестов!\n\n\nЕсли у вас появятся вопросы, или вы найдете ошибки в тестах, то личные сообщения на платформе всегда открыты. Не стесняйтесь, так как ваша задача разобраться с вопросом от и до!\n\n\nНадеюсь, что данный тренажер вам понравится и вы оставите положительный отзыв на Udemy!",
      "target_audience": [
        "Начинающие тестировщики и специалисты с опытом, которы хотят освежить знания перед интервью"
      ]
    },
    {
      "title": "Belajar K6 Performance Testing",
      "url": "https://www.udemy.com/course/belajar-k6/",
      "bio": "Belajar Performance Testing dan Load Testing menggunakan Grafana K6",
      "objectives": [
        "Belajar K6",
        "Belajar Performance Testing dengan K6",
        "Belajar Load Testing dengan K6",
        "Membuat Script K6 dengan JavaScript"
      ],
      "course_content": {
        "K6 Performance Testing": [
          "Pengantar",
          "Pendahuluan",
          "Slide dan Source Code",
          "Discord",
          "Pengenalan K6",
          "Menginstall K6",
          "Example Application",
          "Membuat Project",
          "Script",
          "Summary Output",
          "Realtime Output",
          "Web Dashboard",
          "Stages",
          "HTTP Request",
          "Fail Test",
          "Checks",
          "Execution Context Variables",
          "Test Life Cycle",
          "Modules",
          "Environment Variables",
          "Scenario",
          "Metrics",
          "Thresholds",
          "JavaScript Library",
          "Penutup"
        ]
      },
      "requirements": [
        "Mengerti pemrograman JavaScript",
        "Mengerti NodeJS"
      ],
      "description": "Selamat datang di kelas K6 Performance Testing\nKami dengan gembira menyambut Anda dalam kelas K6 ini, sebuah perjalanan mendalam ke dunia performance testing yang penuh tantangan dan peluang. Dalam era di mana aplikasi perangkat lunak menjadi tulang punggung aktivitas digital, pemahaman yang kuat tentang kinerja aplikasi adalah kunci keberhasilan.\nKelas ini didedikasikan untuk memberikan fondasi yang kokoh dalam performance testing menggunakan alat kelas dunia, K6. K6 adalah alat yang tangguh, memungkinkan Anda untuk menguji performa aplikasi Anda secara menyeluruh dengan skala dan kompleksitas yang dapat disesuaikan.\nDalam perjalanan ini, kami akan menggali konsep dasar performance testing, strategi pengujian yang efektif, dan prinsip-prinsip terbaik yang digunakan oleh para profesional di lapangan. Dengan bimbingan dari para ahli yang berpengalaman, Anda akan diperkenalkan pada teknik-teknik canggih dan praktik terbaik untuk mengukur, menganalisis, dan meningkatkan kinerja aplikasi Anda.\nKami berharap bahwa kelas ini tidak hanya akan meningkatkan pemahaman Anda tentang performance testing, tetapi juga memberi Anda keterampilan yang dapat Anda terapkan secara langsung dalam proyek-proyek Anda di dunia nyata. Mari bersama-sama menjelajahi dunia K6 dan meningkatkan kemampuan kita dalam menghadapi tantangan kinerja aplikasi modern.\nTanpa banyak kata lagi, mari kita mulai perjalanan ini bersama dan menjadikan setiap langkah kita sebagai langkah menuju kesuksesan yang lebih besar dalam dunia performance testing.\nTerima kasih.",
      "target_audience": [
        "Programmer yang ingin menguji performance aplikasi yang dibuat",
        "QA Engineer yang ingin belajar performance testing"
      ]
    },
    {
      "title": "【ウズカレ式】2.5時間で「ソフトウェアテストマネジメントの全体像」が学べる講座＜JSTQB-FL試験対策③＞",
      "url": "https://www.udemy.com/course/jstqb-fl3/",
      "bio": "#FL試験出題範囲5、6章完全対応 #ソフトウェアテスト #最短合格 #累計受講者8万人超え #企業研修のプロ講師陣が監修 #徹底した図解学習 #初心者・未経験者 #QAエンジニア #テスト設計#TDD、CI #プロジェクトマネージャー",
      "objectives": [
        "ソフトウェアの品質保証とリスク管理を目的とし、テストの計画から進捗管理、終了報告までの一連の流れを体系的に実行できるようになります。",
        "プロジェクトやプロダクトのリスクを分析し、影響度の高い機能を優先してテストすることで、限られたリソースでも効果的な品質保証を実現できます。",
        "欠陥レポート作成や構成管理、テストメトリクスの活用を通じて、発見した問題を適切に記録・管理し、開発プロセス全体の品質改善に貢献できます。",
        "テストの自動化によるメリット・デメリットを理解し、プロジェクトの特性に応じて最適なツールや手法を選択できるようになります。"
      ],
      "course_content": {
        "はじめに": [
          "質問方法、AIの活用",
          "【ウズカレ式】おススメの勉強方法"
        ],
        "テスト活動のマネジメント": [
          "テスト活動のマネジメント",
          "【テキスト】テスト活動のマネジメント",
          "テスト計画",
          "【テキスト】テスト計画",
          "テスト計画書の目的と内容",
          "【テキスト】テスト計画書の目的と内容",
          "イテレーションとリリース計画に対するテスト担当者の貢献",
          "【テキスト】イテレーションとリリース計画に対するテスト担当者の貢献",
          "開始基準と終了基準",
          "【テキスト】開始基準と終了基準",
          "見積り技法",
          "【テキスト】見積り技法",
          "テストケースの優先順位付け",
          "テストピラミッド",
          "【テキスト】テストピラミッド",
          "テストの四象限",
          "【テキスト】テストの四象限"
        ],
        "リスクマネジメント": [
          "リスクマネジメント",
          "【テキスト】リスクマネジメント",
          "リスク定義とリスク属性",
          "【テキスト】リスク定義とリスク属性",
          "プロジェクトリスクとプロダクトリスク",
          "【テキスト】プロジェクトリスクとプロダクトリスク",
          "プロダクトリスク分析",
          "【テキスト】プロダクトリスク分析",
          "プロダクトリスクコントロール",
          "【テキスト】プロダクトリスクコントロール"
        ],
        "演習テスト（前半）": [
          "演習テスト（前半）"
        ],
        "テストモニタリング、テストコントロールとテスト完了": [
          "テストモニタリング、テストコントロールとテスト完了",
          "【テキスト】テストモニタリング、テストコントロールとテスト完了",
          "テストで使用するメトリクス",
          "【テキスト】テストで使用するメトリクス",
          "テストレポートの目的、内容、読み手",
          "【テキスト】テストレポートの目的、内容、読み手",
          "テストステータスの伝達",
          "【テキスト】テストステータスの伝達"
        ],
        "構成管理、欠陥マネジメント": [
          "構成管理",
          "【テキスト】構成管理",
          "欠陥マネジメント",
          "【テキスト】欠陥マネジメント"
        ],
        "テストツール、テストのためのツールによる支援、テスト自動化の利点とリスク": [
          "テストツール",
          "【テキスト】テストツール",
          "テストのためのツールによる支援",
          "【テキスト】テストのためのツールによる支援",
          "テスト自動化の利点とリスク",
          "【テキスト】テスト自動化の利点とリスク"
        ],
        "演習テスト（後半）": [
          "演習テスト（後半）"
        ]
      },
      "requirements": [
        "ソフトウェアテストの経験は不要。必要なことをすべて学習できます。"
      ],
      "description": "▼このコースの特徴\n図解メインで理解しやすい → 難解な用語やプロセスも、ビジュアルで直感的に整理！\nJSTQBシラバスに準拠した内容 → 合格に必要な知識を効率よく、体系的に学べる！\n開発経験が少なくても大丈夫 → テストの基本から、実務での活用イメージまで丁寧にカバー！\n「なぜそうするのか」を重視した構成 → 単なる暗記でなく、現場で使える理解が身につく！\n品質への意識が高まる → テストの視点を持つことで、開発スキルの底上げにもつながる！\n本コースではAIを活用し、聞き取りやすいレクチャー音声を提供しています。\n\n\nこのコースでは、テストを単なる作業ではなく、品質とリスクを管理するプロセスとして学びます。テスト計画の立て方から、効果的なテスト手法（リスクベースドテスト、テストピラミッドなど）の活用、不具合の管理、テスト自動化まで、ソフトウェアの品質を向上させるための実践的な知識とスキルを習得できます。\n\n\n開発経験が少ない方でも安心して学べるよう、「イラスト中心＋ていねいな解説」にこだわっています。単なる用語の解説にとどまらず、「なぜその工程が必要か？」「現場でどう活かせるか？」という視点で学ぶことで、知識を実務へとつなげる力が養えます。\n\n\n▼JSTQB（Foundation Level）の出題範囲\nこのコースは、JSTQB（Foundation Level）の出題範囲の5章と6章に完全対応しています。その他の章については別のコースで学習することができます。\n\n\nJSTQB-FL試験対策①（別コース）\n1章：テストの基礎\n2章：ソフトウェア開発ライフサイクル全体を通してのテスト\n\n\nJSTQB-FL試験対策②（別コース）\n3章：静的テスト\n4章：テスト分析と設計\n\n\nJSTQB-FL試験対策③（本コース）\n5章：テスト活動のマネジメント\n6章：テストツール",
      "target_audience": [
        "ソフトウェア開発の現場にいるけれど、テストの全体像がよくわからない方",
        "プログラミング学習はしていないけれど、IT分野に関わる仕事をしてみたい方。",
        "未経験・微経験からテスターやQAエンジニアを目指している方。",
        "用語を丸暗記するより、「なぜそうするのか」を理解してから覚えたい方。",
        "テキスト中心の教材だと眠くなってしまい、図解やビジュアルで学びたい方。"
      ]
    },
    {
      "title": "Arduino Eğitim Kursu",
      "url": "https://www.udemy.com/course/sezerduino/",
      "bio": "Arduino başlangıç seviyesi",
      "objectives": [],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Arduino Proteus Çalışması 1",
          "Arduino Proteus'ta Lcd Panel Kullanımı",
          "Arduino Proteusta Dc Voltmetre Yapımı",
          "Arduino Proteus Button Devresi",
          "Arduino Proteus Button Devresi",
          "Arduino Matematik Oyunu 1"
        ]
      },
      "requirements": [
        "Gerekli Materyaller",
        "Şimdilik Sadece Bilgisayar ISIS ve Arduino Dosyası"
      ],
      "description": "Bildiğiniz gibi günümüzde akıllı sistemler yaygınlaşmaya başladı. Bende bunlarla ilgili projeler yapıyorum ve sizlere bir küçük katkılar sağlamaya çalışıyorum. Umarım birlikte . Harika projeler yapacağız.\nMerhabalar,\nBu kurs çağımızın yeni trendi arduinoyu öğrenmek isteyenler için hazırlanmıştır. Kursumuzun en büyük ayrıcalıklarından biri siz arduino öğrenirken her hangi bir set almanıza gerek yoktur. Evet yanlış duymadınız set almadan arduinoda kendinizi geliştirebilir ve projenizi tasarladığınızda tek yapmanız gereken artık sadece arduinoyu satın almak olacaktır.",
      "target_audience": [
        "Arduino Başlangıç için gerekli tüm bilgileri sahip olmak isteyen kişiler almalı"
      ]
    },
    {
      "title": "Test logiciel :Devenez un Expert avec l’Aide de ChatGPT",
      "url": "https://www.udemy.com/course/test-logiciel-devenez-un-expert-avec-laide-de-chatgpt/",
      "bio": "Devenez expert en tests logiciels en utilisant ChatGPT pour automatiser, optimiser et améliorer vos processus de test.",
      "objectives": [
        "1. Introduction au test logiciel : Principes, enjeux et bonnes pratiques.",
        "3. ChatGPT : Un assistant pour le test logiciel : Comment intégrer ChatGPT dans votre processus de test.",
        "4. Création de scénarios de test avec ChatGPT : Génération de cas de test réalistes, définition de critères d’acceptation et gestion des tests.",
        "5. Automatisation des tests : Utilisation de ChatGPT pour générer des scripts d’automatisation et optimiser vos tests récurrents.",
        "8. Cas pratiques et mise en situation : Scénarios réels d’utilisation de ChatGPT dans des projets de test logiciel.",
        "7. Améliorer la collaboration au sein des équipes : Utilisation de ChatGPT pour faciliter la communication entre les testeurs, développeurs et chefs de projet."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Les génératives IA / Chatgpt",
          "ChatGPT : Historique et points clés",
          "ChatGPT : Comment l’utiliser",
          "ChatGPT : Quelques utilisations basiques de chatgpt"
        ],
        "Le prompt engineering": [
          "C’est quoi le prompt engineering ?",
          "Fixez le cadre"
        ],
        "Génération de cas de test avec ChatGPT": [
          "Génération de cas de test avec ChatGPT",
          "Génération de cas de test avec ChatGPT",
          "Génération de cas de test avec ChatGPT"
        ],
        "Intelligence Artificielle pour les développeurs et testeurs": [
          "Applications de l'IA dans le développement logiciel",
          "Intelligence Artificielle pour les développeurs et testeurs",
          "Intelligence Artificielle pour les développeurs et testeurs :Générez du code-2",
          "Intelligence Artificielle pour les développeurs et testeurs :Générez du code -3",
          "Intelligence Artificielle avec chatgpt pôur débugger un code",
          "Fin de la formation"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Test logiciel :Devenez un Expert avec l’Aide de ChatGPT\nCette formation vous plonge au cœur de l’univers des tests logiciels, vous offrant des outils et techniques modernes pour exceller dans ce domaine crucial du développement informatique. Vous apprendrez non seulement les principes fondamentaux des tests logiciels, mais aussi à utiliser ChatGPT comme un atout puissant pour automatiser, accélérer et améliorer vos processus de test.\nObjectifs de la formation :\n• Maîtriser les bases du test logiciel : Apprenez à comprendre les différents types de tests (tests unitaires, tests fonctionnels, tests de performance, etc.) et les méthodologies (Agile, DevOps, TDD, etc.).\n• Exploiter ChatGPT dans les tests : Découvrez comment utiliser ChatGPT pour générer des scénarios de test, rédiger des rapports de bugs, automatiser des tâches répétitives et même analyser des résultats.\n• Optimiser vos processus de test : Avec l’aide de ChatGPT, apprenez à rendre vos processus de test plus efficaces, en réduisant les erreurs humaines et en augmentant la couverture des tests.\n• Simuler des tests avec ChatGPT : Créez et exécutez des tests en utilisant des approches adaptées, tout en bénéficiant des conseils et recommandations instantanées de ChatGPT.\n• Analyser et améliorer les résultats : Apprenez à interpréter les résultats de vos tests, à générer des suggestions d'améliorations et à documenter efficacement les résultats grâce à l’intelligence artificielle.\nProgramme de la formation :\n1. Introduction au test logiciel : Principes, enjeux et bonnes pratiques.\n2. Types de tests logiciels : Tests manuels vs automatisés, tests fonctionnels, non-fonctionnels, tests de régression, etc.\n3. ChatGPT : Un assistant pour le test logiciel : Comment intégrer ChatGPT dans votre processus de test.\n4. Création de scénarios de test avec ChatGPT : Génération de cas de test réalistes, définition de critères d’acceptation et gestion des tests.\n5. Automatisation des tests : Utilisation de ChatGPT pour générer des scripts d’automatisation et optimiser vos tests récurrents.\n6. Analyse des résultats de test avec ChatGPT : Identifier et résoudre les problèmes rapidement, générer des rapports détaillés.\n7. Améliorer la collaboration au sein des équipes : Utilisation de ChatGPT pour faciliter la communication entre les testeurs, développeurs et chefs de projet.\n8. Cas pratiques et mise en situation : Scénarios réels d’utilisation de ChatGPT dans des projets de test logiciel.\nPublic visé :\n• Développeurs, testeurs, et responsables qualité souhaitant améliorer leurs compétences en tests logiciels.\n• Professionnels du développement logiciel cherchant à intégrer l’intelligence artificielle dans leur flux de travail.\n• Toute personne désirant comprendre comment l’IA, et plus spécifiquement ChatGPT, peut révolutionner les pratiques de test.\nPrérequis :\nAucun prérequis spécifique n’est nécessaire pour cette formation. Toutefois, des connaissances de base en développement logiciel et en tests seront un plus.\nCette formation vous permet de devenir un testeur logiciel plus rapide, plus précis et plus autonome, tout en exploitant le potentiel de ChatGPT pour automatiser et enrichir vos processus de test. Rejoignez-nous pour transformer vos méthodes de test et donner un nouvel élan à vos projets logiciels !",
      "target_audience": [
        "• Développeurs, testeurs, et responsables qualité souhaitant améliorer leurs compétences en tests logiciels.",
        "• Professionnels du développement logiciel cherchant à intégrer l’intelligence artificielle dans leur flux de travail.",
        "• Toute personne désirant comprendre comment l’IA, et plus spécifiquement ChatGPT, peut révolutionner les pratiques de test."
      ]
    },
    {
      "title": "Unit Testing en C#",
      "url": "https://www.udemy.com/course/unit-testing-nicopaez/",
      "bio": "con netCore y NUnit",
      "objectives": [],
      "course_content": {
        "Fundamentos": [
          "Fundamentos de unit testing",
          "Un primer test sin framework de testing",
          "Hacia un framework de testing",
          "Primeros pasos con NUnit",
          "Posibles resultados de un test",
          "NUnit, VSCode & Rider",
          "Test Runner & Nunit Test Adapter"
        ],
        "Convenciones de NUnit": [
          "Un ejemplo más real de NUnit",
          "Inicialización y finalización de test en NUnit",
          "Test de situaciones de excepción",
          "Tipos de Asserts"
        ],
        "Organización de casos de prueba": [
          "Generación de Casos de Prueba con NUnit",
          "Consideraciones de diseño de Casos de Prueba",
          "Agrupamiento de test en NUnit",
          "Cierre y Siguientes pasos"
        ]
      },
      "requirements": [
        "Conocimientos de .Net/C#"
      ],
      "description": "Este curso está destinado a programadores C# con poca o ninguna experiencia en la automatización de pruebas. Presenta los conceptos básicos de pruebas unitarias. Si bien se utiliza la herramienta NUnit todos los conceptos son perfectamente aplicables a otras herramientas como MSTest y xUnit sin mayores dificultades. Más aún, los conceptos también pueden extrapolarse fácilmente a herramientas de otras tecnologías como JUnit (java), RubyTest(ruby) y SUnit(smalltalk).\nEl curso consta de dos horas de video, repartidas en varios videos de no más de 10 minutos cada uno. Adicionalmente a los videos el curso provee un conjunto de recursos que incluyen lecturas complementarias y ejercicios de programación con sus respectivas soluciones para que puedas comparar con tu propia solución. El curso también puede ser de gran utilidad para programadores que ya tengan experiencia haciendo pruebas automatizadas ya que además de los conceptos fundacionales de la materia, se ofrecen también varias recomendaciones surgidas de la experiencia de haber trabajado por más de 15 años en la temática.\nSi bien puedes hacer el curso al ritmo que gustes, mi recomendación para un aprendizaje efectivo es que planifiques para hacerlo en una  semana, reservando 4 bloques de 1 hora en los cuales alternes videos, lecturas y ejercicios. Es fundamental que hagas los ejercicios, son pocos, pero te ayudarán a afianzar los conceptos.",
      "target_audience": [
        "Desarrollo de .Net/C#"
      ]
    },
    {
      "title": "Java-Selenium con Cucumber de Novato a Experto",
      "url": "https://www.udemy.com/course/java-selenium-con-cucumber-de-novato-a-experto/",
      "bio": "Aprende a armar cualquier framework de automatización con JAVA, Maven y Cucumber",
      "objectives": [
        "Quienes quieran aprender Quality assurance automation",
        "Configurar frameworks de selenium de todo tipo",
        "Todo lo relacionado a Cucumber / testNG",
        "No necesitas saber de java para empezar, aquí aprenderas haciendo."
      ],
      "course_content": {
        "Instalación y configuración": [
          "Introducción a la Configuración de Entornos para Automatización",
          "Maven",
          "Java SDK",
          "Chrome y Notepad ++"
        ],
        "Programación para Testers": [
          "Inicialización de Proyecto de Automation",
          "Taller de Automation",
          "Framework Skeleton",
          "Hooks",
          "¿Qué debería Saber antes de continuar?",
          "Básicos de Java",
          "Unit Test",
          "Práctica de Programación 1",
          "Práctica de Programación 2"
        ],
        "Selenium WebDriver y Cucumber": [
          "Selenium-TestNG Test",
          "Selenium WebDriver Config - Capabilities - Preferencias",
          "Locators",
          "Locators y buenas prácticas",
          "Locators y buenas prácticas pt2",
          "Selects and Multiselects (Dropdowns)",
          "Introducción a Page Objects Model",
          "Driver en Page Object Model",
          "Alertas / pop-ups",
          "Manejo de Multiples Ventanas (Switch to)",
          "iFrames",
          "Action Chains",
          "JavaScript y Selenium",
          "Construyendo el Test Framework desde 0",
          "Mantenimiento del WebDriver",
          "Breve Análisis de Estructura del Framework",
          "Test en Cucumber",
          "Data Management pt1",
          "Data Management pt2",
          "Data Management pt3",
          "Logs con Lombok",
          "Mock de datos con Faker",
          "Prueba técnica: Test Con Cucumber"
        ],
        "Reportes": [
          "Introducción a Reportes",
          "Dependencias",
          "Reportes Básicos",
          "Reportes Parametrizables",
          "Screenshots",
          "Reportes en Jenkins"
        ],
        "Reflexiones finales": [
          "Mejoras y Reflexión final en el curso de Selenium/Cucumber"
        ]
      },
      "requirements": [
        "Logica de programación, aunque no es limitante.",
        "Ganas de aprender"
      ],
      "description": "ACTUALIZACIÓN 2024\nEn este nuevo curso de automatización de pruebas he volcado mis conocimientos de más de 10 años de carrera, por lo que este curso está dictado desde la experiencia, los resultados y la buenas prácticas.\n\n\nAunque no tengas mucha experiencia en JAVA pero estas buscando como empezar a automatizar, este puede ser tu curso, ya que va más allá del lenguaje de programación en sí, este curso es sobre las buenas prácticas y como deben ser abordadas las más comunes soluciones de QA automation en cualquier ambito.\n\n\nEl objetivo del curso es que puedas:\n\n\nConfigurar de 0 un Framework de automatización de pruebas de aplicaciones web con Selenium Webdriver, Java y otras herramientas útiles.\nEscribir casos de pruebas con código de fácil mantenimiento y reutilizable.\nSeguimiento de casos de pruebas automatizados\nMantenimiento del Framework de Automatización\nAl iniciar este curso estarás más cerca de convertirte en  QA Engineer.\nCon este curso aprenderás a hacer automatización de pruebas para aplicaciones utilizando principalmente Java, Selenium entre otras librerías y herramientas. Abarcaremos extensamente cada uno de los tópicos mostrados a continuación.\n\n\n¿Qué es lo hace a este curso uno de los mejores de Udemy:\nNosotros asumimos que no tienes ninguna o poca experiencia en automatización de pruebas / Desarrollo / configuración de entornos entonces abordamos estos tópicos desde un nivel que cualquiera pueda entender.\nTesteamos aplicaciones reales en tiempo real para entender cómo cada componente puede ser automatizado.\nTe explicamos todo en más de 12 horas de video, prácticas y abordamos temas que te ayudarán a ampliar tu base de conocimientos.\nAunque es necesario que tengas una base de conocimiento en Java, no es mandatorio para realizar este curso.\n\n\nAutomatización de Pruebas.\n¿Cuándo Automatizar?\nAlcance – Ventajas\nCiclo de Vida de las pruebas automatizadas.\nCiclo de Vida de cualquier framework de automatización de pruebas\nDemostración.\n\n\nEntendiendo Selenium.\n¿Cómo funciona Selenium?\nFunciones de Selenium.\nSelenium WebDriver.\nEntendiendo el DOM de una Aplicación web.\nTipos de identificadores.\nXpaths\n\n\nNavegadores.\nPlugins.\nConfiguración de navegadores. Chrome, Mozilla Firefox.\n\n\nMaven.\nTodo el proyecto será administrado bajo la estructura de Maven\n\n\nEjecución de Primera Prueba Selenium\n\n\nConfiguración del WebDriver y Actualización de WebDriver.\nEstructura de una prueba Selenium – Java en su versión nativa.\n\n\nPage Objects Models (POM)\nEsqueleto de Framework con Maven.\nBehavior data driven test (BDD)\nModelando funciones Selenium.\nReutilización de Código.\nScripting de Test Automatizados.\nLocalizadores\nCapturas de Pantalla.\nConsumiendo datos Json.\nWaits: Implícitos y Explícitos\nActionChains\nSelenium By.\nSelenium Keys.\nEjecutar Acciones con JavaScript.\n\n\nCucumber Reporting. (Reportes y Auto documentación.)\nDocumentación de casos de prueba.\nConfiguración de Librerías.\nCapturas de pantalla para reportes.\nConfiguración en entornos Windows.\nTest Runners.\n\n\nAnálisis de reportes.\nAnalizar resultados de casos de prueba.\nEstimación de Casos de prueba.\n\n\nCucumber.\nTest Basado en Comportamiento. (BDD)\nEsqueleto de Framework BDD\nCucumber – Gherkin sintaxis.\n\n\nJenkins.\nInstalación en entornos Windows.\nPlugins Jenkins.\nPipelines Jenkins.\nProgramar ejecución periódica.\nVisualización de reportes.\nCambio de cultura hacia las pruebas continuas.\nEstimar casos de pruebas automatizados.\nEstrategias de Equipo para la Automatización de Pruebas.\nAnálisis e Implementación. ¿Cómo empezar?\n\n\n¿Para quién es este curso?\nPara testers en general\nDevelopers\nInvolucrados en el proceso de desarrollo de software en general.\nInteresados en aprender tareas de automatización de pruebas.",
      "target_audience": [
        "Analistas de Calidad de Software (testers e ingenieros) que deseen potenciar sus habilidades.",
        "Developers que deseen aprender sobre automatización de pruebas."
      ]
    },
    {
      "title": "Rozmowa Kwalifikacyjna dla Testera Oprogramowania - Pytania",
      "url": "https://www.udemy.com/course/rozmowa-kwalifikacyjna-dla-testera-oprogramowania-pytania/",
      "bio": "Zdobądź Pracę jako Tester Oprogramowania: Przygotowanie do Rozmowy Kwalifikacyjnej - Pytania i Odpowiedzi!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Kurs zaprojektowany, by przygotować przyszłych testerów oprogramowania do pomyślnego przejścia przez proces rozmowy kwalifikacyjnej. Obejmuje szeroki zakres tematów, od podstawowych pytań związanych z testowaniem oprogramowania, aż po zaawansowane zagadnienia techniczne i najlepsze praktyki w branży.\nKurs skupia się na interaktywnym podejściu do nauki poprzez serię egzaminów próbnych, które odzwierciedlają realistyczne scenariusze rozmów kwalifikacyjnych w branży IT. Skierowany jest zarówno do początkujących, którzy stawiają pierwsze kroki w karierze testera, jak i do doświadczonych profesjonalistów, którzy chcą odświeżyć swoją wiedzę przed rozmową kwalifikacyjną. Zawiera on szczegółowe analizy najczęściej zadawanych pytań, zarówno tych technicznych, jak i behawioralnych, dając kursantom wgląd w to, czego mogą się spodziewać podczas rozmowy. Kurs podkreśla również znaczenie umiejętności miękkich, takich jak komunikacja, rozwiązywanie problemów i praca zespołowa, które są niezbędne w pracy testera.\nCo ważne, każde pytanie w egzaminach próbnych jest wsparte obszernymi wyjaśnieniami, które nie tylko dostarczają odpowiedzi, ale także uczą, jak skutecznie komunikować myśli i rozumowanie podczas prawdziwej rozmowy kwalifikacyjnej. Pod koniec kursu uczestnicy będą wyposażeni w umiejętności, wiedzę i pewność siebie, aby z powodzeniem przejść przez rozmowę kwalifikacyjną na stanowisko testera oprogramowania.\n\n\nCzy mogę przystąpić do testu praktycznego więcej niż raz?\nDo każdego testu praktycznego można przystąpić wielokrotnie. Po ukończeniu testu praktycznego zostanie opublikowany Twój ostateczny wynik. Ponadto zostanie wyświetlony stosunek poprawnych odpowiedzi do wprowadzonych nieprawidłowych odpowiedzi, w oparciu o testowany obszar wiedzy. Z każdym przystąpieniem do testu kolejność pytań oraz odpowiedzi jest losowa.\n\n\nCzy mam jakiś limit czasowy na testy praktyczne?\nKażdy test ma wyznaczony limit czasowy.\n\n\nJaki wynik zalicza test praktyczny?\nPoziom zaliczenia każdego testu praktycznego to 70%.\n\n\nCzy pytania są jednokrotnego wyboru?\nAby jak najbardziej odzwierciedlić postać rozmowy kwalifikacyjnej i podnieść poziom trudności pytania są jednokrotnego oraz wielokrotnego wyboru.\n\n\nCzy mogę przejrzeć moje odpowiedzi?\nMożesz przejrzeć wszystkie przesłane odpowiedzi i zobaczyć, które są prawidłowe, a które nie.\n\n\nNie zwlekaj i już dziś podejmij wyzwanie!",
      "target_audience": [
        "Osoby, które chcą rozpocząć swoją karierę jako testerzy oprogramowania i potrzebują przygotowania do rozmów kwalifikacyjnych.",
        "Studenci lub absolwenci kierunków związanych z informatyką, którzy planują zacząć pracę jako testerzy oprogramowania.",
        "Testerzy oprogramowania, którzy chcą poprawić swoje umiejętności w zakresie rozmów kwalifikacyjnych i zwiększyć swoje szanse na znalezienie lepszej pracy.",
        "Osoby, które chcą zaktualizować swoją wiedzę i przygotować się do zmiany pracy w dziedzinie testowania oprogramowania.",
        "Absolwenci kursów związanych z testowaniem oprogramowania, którzy potrzebują wsparcia w procesie znalezienia pracy jako testerzy."
      ]
    },
    {
      "title": "Test logiciel : Réussir vos entretiens d'embauche -2025",
      "url": "https://www.udemy.com/course/test-logiciel-reussir-vos-entretiens-dembauche-2022/",
      "bio": "La méthode complète pour réussir vos entretiens à coup sûr dans le test logiciel",
      "objectives": [
        "Réussir vos entretiens d'embauche haut la main",
        "Maitriser les techniques de communication lors d'un entretien d'embauche",
        "Ne plus stresser face à un recruteur",
        "Gagner du temps lors de la préparation d'un entretien d'embauche",
        "à convaincre le recruteur",
        "à se différencier des autres candidats en utilisant des techniques de persuasion",
        "à construire son argumentaire en fonction des attentes du recruteur",
        "Le comportement à avoir avant, pendant et après l'entretien",
        "Préparez les arguments et les preuves de notre compétence test logiciel",
        "analysez une fiche de poste test logiciel"
      ],
      "course_content": {
        "Comment réussir un entretien dans le domaine du test logiciel": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Programme de la formation :"
        ],
        "Entretien RH": [
          "Première partie : Les questions RH",
          "Entretien d'embauche :Parler nous de vous",
          "Entretien d'embauche : Une bonne connaissance de l'entreprise",
          "Merci",
          "Entretien d'embauche : Une bonne connaissance du poste",
          "Entretien d'embauche : pourquoi vous voulez changer votre entreprise actuelle",
          "Entretien d'embauche : quels sont vos défauts et vos qualités",
          "Est ce que vous aimez travailler en équipe ou en individuel ? pourquoi ?"
        ],
        "Entretien Technique": [
          "Partie 1 : niveau débutant ou profil en reconversion domaine du test logiciel",
          "Entretien d'embauche : Vous faites quoi quand vous trouvez une anomalie ?",
          "Entretien d'embauche : c'est quoi les TNR ?",
          "c'est quoi la différence entre cas de test et user story ?",
          "Que signifient les critères d'entrée et les critères de sortie ?",
          "c'est quoi les JDD ?",
          "Vous avez déja travailler en CI/CD ?",
          "C'est quoi les niveaux de tests",
          "c'est quoi les prérequis avant lancement de l'éxecution de test",
          "vous travaillez en Sprint ? comment vous faites ?",
          "vous faites des requetes ? dans quel cadre vous a pu travailler avec les BDD ?",
          "Quand arreter de tester",
          "Pourquoi les tests sont-ils nécessaires ?"
        ],
        "Entretien pour profil expérimenté": [
          "Partie 2 : niveau avancé",
          "Avez vous déja participer à la planification du test ?",
          "Comment vous faites la conception de tests?",
          "c'est quoi la clôture des tests ?",
          "c'est quoi la différence entre un SNAPSHOT et une release ?",
          "c'est quoi un risque produit ?",
          "C'est quoi un risque projet ?",
          "c'est quoi une release ?",
          "c'est quoi un snapshot ?",
          "C'est quoi une SDT ? stratégie de test ?",
          "Exemple de préparation aux entretiens :",
          "Continuer l'apprentissage",
          "Félicitations"
        ]
      },
      "requirements": [
        "Pas de prérequis"
      ],
      "description": "La Méthode pour Réussir son Entretien d'Embauche en test logiciel\n\n\nPersonne ne vous rappelle après les entretiens ?\nVous ne savez pas précisément comment faire la différence en entretien ?\nLa majorité des candidats qui ratent leurs entretiens ne savent pas pourquoi... (Très souvent le recruteur ne prend pas la peine de rappeler le candidat après l'entretien)\n\nIl est donc impossible de savoir là où vous avez échoué !\nVous en avez assez de ne jamais être rappelé après un entretien d’embauche ? Cela vous frustre de passer beaucoup de temps à vous préparer pour au final être dépassé par d’autres candidats.\nVous avez l’impression de ne pas être assez convaincant face aux recruteurs et de perdre vos moyens lors d’un entretien d’embauche ? Cette formation est faite pour vous.\nPas besoin de passer des QCm et test techniques sur internet\n\nÉtant donné l'effort (et le temps) nécessaire pour obtenir un entretien d'embauche, c'est vraiment dommage et cela peut impacter la confiance du candidat.\n\nHeureusement, j’ai essayé de vous donner le maximum des questions qu’on pose aux candidats lors des entretiens afin de réussir votre parcours professionnels\nAprès avoir encadré plus de 7000 personnes dans mes formations Domaine test logiciel , j’ai remarqué qu’elles avaient du mal à convaincre lors de leur entretien, soit pour rejoindre une ESN soit pour rejoindre un client final. Cela était inadmissible au regard de leur performance technique.\nD’où m’est venu l’idée de faire une formation pour préparer les candidats à réussir leur entretien à coup sûre.\nCette formation n’est pas une de ces formations généralistes que l’on retrouve sur le net ! NON\nCette formation est faite pour vous par une expérimentée dans le domaine du test logiciel (plus de 12 d’expérience , recrutement de plus que 960 personnes ). En effet on a été suffisamment écouté les conseils avisés des RHs pour préparer nos entretiens, mais elles n’ont très souvent pas de cas concret à nous présenter.\n\n\nCette formation simple et surtout efficace synthétise et traite de manière très concrète les différentes difficultés que rencontrent la majorité des candidats en entretien d’embauche.\nLes plus de cette formation :\n· Un format qui vous permettra de gagner du temps,d’aller directement à l’essentiel et de visionner la formation même quelques heures avant vos entretiens d’embauche.\n· Des exemples et mises en situation concrètes tout au long de la formation qui vous permettront de mieux vous approprier les conseils donnés.\n· Des techniques approuvées par plusieurs recruteurs mais surtout par des candidats.\nCette formation va rester une référence pour vous puisqu’il est valables pour les juniors et les expérimentés\n\n\nLa formation est destinée :\nA toute personne qui souhaite tout exploser lors d’un entretien\nDes personnes en reconversion vers le domaine du test logiciel\nLes testeurs qui visent des postes avec plus de responsabilités",
      "target_audience": [
        "• toute personne souhaitant améliorer son taux de réussite aux entretiens",
        "• Des personnes en reconversion vers le domaine du test logiciel",
        "• Les testeurs qui visent des postes avec plus de responsabilités"
      ]
    },
    {
      "title": "Cypress io باللغه العربيه",
      "url": "https://www.udemy.com/course/cypress-io/",
      "bio": "اقوى دوره عربيه من الصفر الى الاحتراف مع بناء مشروع كامل من الصفر",
      "objectives": [
        "تعلم السايبرس كامله من الصفر",
        "API Test Using Cypress بالعربيه",
        "E2E Test Using Cypress بالعربيه",
        "UI Test using Cypress بالعربيه",
        "Cypress Commands بالعربيه",
        "Cypress Intercept بالعربيه",
        "Cypress Dashboard بالعربيه",
        "Cypress Report بالعربيه",
        "بناء مشروع كامل"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install VScode and Node",
          "Install Yarn (Optional)",
          "Cypress Architecture"
        ],
        "Cypress Runner": [
          "Create our first Project",
          "Time travel and run our first test case",
          "Cypress runner and different browsers",
          "Run all the spec files or some of them at once",
          "Record a test using Cypress Runner"
        ],
        "Mocha": [
          "Clean up the project",
          "Create the first test case and fix the auto complete",
          "build our first test case",
          "Multi tests in one file",
          "Test suite in Mocha",
          "Mocha Hooks"
        ],
        "Visit a Website": [
          "Visit a website using cypress",
          "Setup base URL",
          "Visit Options",
          "Open website in different views",
          "Configure view port in cypress.json file",
          "Cypress pre defined viewports",
          "Run our test case in more than one viewport dynamically"
        ],
        "Find elements using Cypress": [
          "Introduction",
          "Find Elements using Tag name",
          "Find Elements by ID",
          "Find Elements by Class name",
          "Find Elements by Attributes",
          "First command",
          "Last Command",
          "EQ Command",
          "Filter Command",
          "Children Command",
          "Find Command",
          "Parent Command",
          "Parents Command",
          "Siblings Command",
          "Contains Command",
          "Cypress Selectors Playground"
        ],
        "Cypress Commands": [
          "Click Command",
          "Type Command",
          "Select Command",
          "Check and Uncheck command",
          "Double Click",
          "Right Click",
          "Focus and Blur",
          "Hover over and Long Press"
        ],
        "should Assertions": [
          "Introduction to Should Command",
          "Should be Visible",
          "Should have text",
          "Contain",
          "Should have class",
          "Should have CSS",
          "Should have attribute"
        ],
        "More Cypress Commands": [
          "URL Command",
          "Get Title",
          "Go Command",
          "Cookies",
          "Clock Command",
          "Wrap Command",
          "Its Command",
          "Invoke Command",
          "Then Command",
          "Expect Command"
        ],
        "Async and Aliases in Cypress": [
          "Async behaviour in Cypress",
          "Aliases in Cypress",
          "Aliases in same Test case",
          "Aliases in before Each",
          "Aliases in another file"
        ],
        "Setting up our Project": [
          "Download and Setup the application",
          "Create MongoDB database",
          "Add MongoDB to the Project",
          "Run the server and the APP",
          "Create our first user",
          "Create new Cypress project",
          "Create new spec file and configure baseURL",
          "Build our first E2E scenario with Cypress"
        ]
      },
      "requirements": [
        "سنقوم بشرح كل شئ من الصفر"
      ],
      "description": "عند نهايه هذه الدوره ستستطيع فحص اي موقع الكتروني معقد، وستكون عندك المعرفه الكافيه لفحص ال\nUI وال API\nباستخدام السايبريس بشكل منفصل ومن ثم عمل ال\nE2E Testing\nسنقوم بفحص موقع تم بناءه خصيصا لهذه الدوره من الصفر الى بناء اكثر من ٦٠ تيست كايس لتغطيه كافه السيناريوهات\n\n\nستتعلم عن كيفيه بناء التقرير مع صور وفيديوهات وارسال النتيجه الى تطبيق السلاك\nسيكون متوفر الكود والتطبيق للجميع\n\n\nستتعلم جميع المواضيع الاتيه\nCypress Architecture.\nCypress Commands.\nCypress Methods.\nSpy and Stub in Cypress.\nAliases and sync.\nAPI Testing.\nUI Testing.\nE2E Testing.\nDashboard,\nCommand Lines.\nSlack.\nلا يوجد اي متطلب لبدايه هذه الدوره، سنقوم بشرح العديد من ال\nBest practices\n\n\nLearn to use all the related tools, walk into a job and be a rockstar from day one. The skill you need to become a real professional. Learn the tools used by the world's top professionals. Boost your confidence, master the field.\nLearn to use all the related tools, walk into a job and be a rockstar from day one. The skill you need to become a real professional. Learn the tools used by the world's top professionals. Boost your confidence, master the field.\nLearn to use all the related tools, walk into a job and be a rockstar from day one. The skill you need to become a real professional. Learn the tools used by the world's top professionals. Boost your confidence, master the field.",
      "target_audience": [
        "الديفيلوبرز والتيسترز"
      ]
    },
    {
      "title": "Formation conception de tests logiciels de A à Z",
      "url": "https://www.udemy.com/course/formation-conception-de-tests-de-a-a-z/",
      "bio": "Test logiciel : Conception de tests ( passer au niveau supérieur en test logiciel )",
      "objectives": [
        "SDLC, Les processus de test , Agilité",
        "Conception de tests",
        "• Être capable de démontrer ton compréhension des tests de logiciels pour les futurs employeurs.",
        "Aprrendre le test logiciel",
        "Réussir les entretiens d'embauche",
        "• méthodologies agiles et des tests agiles",
        "Conception de test en méthode agile",
        "Conception de tests en méthode traditionnelle"
      ],
      "course_content": {
        "Introduction": [
          "Formation Conception de tests",
          "Point important pour le bon déroulement de la formation",
          "Conception de tests",
          "Les postes qui demandent la conception de tests",
          "Clarification*",
          "Test de logiciels : Cycle de développement logiciel SDLC",
          "Test de logiciels : méthode de gestion de projet ( Waterfall Vs agile)",
          "Merci",
          "Les processus de test",
          "Les niveaux de test",
          "Les essentiels en test logiciel",
          "Les essentiels en test logiciel"
        ],
        "Conception de test": [
          "Conception de test",
          "Conception de tests : Les points de vigilance",
          "Comment concevoir des cas de test",
          "Comment concevoir des cas de test",
          "Exercice de conception de test",
          "Correction de l’exercice de conception de test"
        ],
        "Atelier Conception de test logiciel": [
          "Atelier Conception de test logiciel",
          "Atelier Conception de test logiciel : Correction",
          "Atelier Conception de test logiciel : Correction"
        ],
        "Exercice de Conception : Location de voiture": [
          "Exercice de Conception : Location de voiture",
          "Correction de l'exercice de Conception : Location de voiture",
          "Correction de l'exercice de Conception : Location de voiture",
          "Exercice de Conception : Location de voiture-Partie2",
          "Correction de l'exercice de Conception : Location de voiture-Partie2"
        ],
        "Conception des tests sous XRAY": [
          "Conception de tests avec XRAY: Introduction",
          "Conception de tests avec XRAY: Installation et configuration de Xray",
          "Conception de tests avec XRAY: Installation et configuration de Xray",
          "Conception de tests avec XRAY: Création d'un cas de test :",
          "Conception de tests avec XRAY: Création d'un cas de test : Type Manuel",
          "Conception de tests avec XRAY: Création d'un cas de test : Type généric",
          "Conception de tests avec XRAY: Création d'un cas de test : Type cucumber"
        ],
        "Conclusion": [
          "Félicitations",
          "Certificat de fin de formation"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Bienvenue dans la formation de conception de tests de A à Z\nApprenez la conception des tests logiciels et devenez Ingénieur QA/Testeur Agile. Tests logiciels /QA et bien plus encore !\n\n\nApprendre test de logiciel avec ce cours et devenir réussi Testeurs de logiciels / Testeur Agile. Obtenir le noyau Tests, tests backend , tests Web , compétences en ingénierie de test et apprentissage des outils de test . A la fin de ce cours, vous aura assez de connaissances pour obtenir un emploi en tant que testeur de logiciels ou pour commencer à travailler en tant qu'indépendant ! Nous sera aussi expliquer beaucoup plates-formes de test , où vous pouvez commencer à gagner de l'argent en tant que testeur.\n\n\nBien prendre toi étape par étape à travers engageant vidéo tutoriels et enseigner toi tout toi devez savoir pour réussir en tant que testeur de logiciels.\n\n\nLe cours comprend des heures et des heures de vidéo 1080P (HD) tutoriels avec haute qualité son . Toutes les vidéos sont éditées à la main et les parties inutiles sont supprimées . Vous allez seul apprendre \" quoi toi besoin d’apprendre \" pour devenir réussi !\n\n\nToutes les vidéos ont été éditées à la main sous-titres . Nous dépensé beaucoup heures corriger tous les sous-titres pour vous aider à avoir une lecture fluide apprentissage expérience .\n\n\nPourquoi devrait toi prendre ce cours?\nIl s'agit du cours de test de logiciels le meilleur et le plus récent sur Udemy . Nous expliquer tous les tests importants méthodologie à la fois agile et moderne, avec à l'appui d'exemples concrets. . Ce cours est créé par un responsable métier de validation avec plus que 12 ans d’expérience , et qui est toujours activement travaillant dans l'une des entreprises TOP en France .\n\n\nInscrivez- vous aujourd'hui et attendez avec impatience pour:\n· Plus de 3 heures de contenu vidéo HD\n· Toutes les connaissances toi besoin de commencer vos tests logiciels carrière.\n· Commencez à pratiquer en ligne et gagnez de l'argent immédiatement.\nRéponse à vos questions en moins de 24 heures",
      "target_audience": [
        "• Les gens qui envie de commencer une nouvelle carrière",
        "Les testeurs",
        "les QA",
        "arcitecte Fonctionnel",
        "Amoa",
        "bussniess analyst ( BA)",
        "test manager / QA LEAD / Responsable de tests",
        "• Les gens qui veulent apprendre les tests de logiciels",
        "• Testeurs de logiciels vouloir gagner un meilleur connaissances dans leur champ",
        "• Les personnes à la recherche d' un emploi à temps partiel ou indépendant"
      ]
    },
    {
      "title": "Aprende API test con Java Rest Assured y Cucumber",
      "url": "https://www.udemy.com/course/aprende-api-test-con-java-rest-assured-y-cucumber/",
      "bio": "Aprende a armar un framework de automatización con JAVA, Maven y Cucumbercon Rest Assured.",
      "objectives": [
        "Escribir casos de pruebas con código de fácil mantenimiento y reutilizable.",
        "Configurar de 0 un Framework de automatización de pruebas de aplicaciones web con Java Rest Assured y otras herramientas útiles.",
        "Con este curso aprenderás a hacer automatización de pruebas para APIs utilizando principalmente Java, Selenium entre otras librerías y herramientas.",
        "Buenas Practicas"
      ],
      "course_content": {},
      "requirements": [
        "Preferiblemente tener una base de Java / Logica de programación, aunque no es limitante.",
        "Ganas de aprender"
      ],
      "description": "El objetivo del curso es que puedas:\n\n\nConfigurar de 0 un Framework de automatización de pruebas de aplicaciones web con Java Rest Assured y otras herramientas útiles.\nEscribir casos de pruebas con código de fácil mantenimiento y reutilizable.\nSeguimiento de casos de pruebas automatizados\nMantenimiento del Framework de Automatización\nAl iniciar este curso estarás más cerca de convertirte en un QA Engineer.\n\n\n. Abarcaremos extensamente cada uno de los tópicos mostrados a continuación.\n\n\n¿Qué es lo hace a este curso uno de los mejores de Udemy:\nNosotros asumimos que no tienes ninguna o poca experiencia en automatización de pruebas / Desarrollo / configuración de entornos entonces abordamos estos tópicos desde un nivel que cualquiera pueda entender.\nTesteamos aplicaciones reales en tiempo real para entender cómo cada componente puede ser automatizado.\nTe explicamos todo en más de 8 horas de video, prácticas y abordamos temas que te ayudarán a ampliar tu base de conocimientos.\nAunque es necesario que tengas una base de conocimiento en Java, no es mandatorio para realizar este curso.\n\n\nAutomatización de Pruebas.\n¿Cuándo Automatizar?\nAlcance – Ventajas\nCiclo de Vida de las pruebas automatizadas.\nCiclo de Vida de cualquier framework de automatización de pruebas\nDemostración.\n\n\nEntendiendo Java rest Assured.\nComo funcionan las APis.\nMétodos POST, GET, DELETE, PUT, PATCH\nSerialización y Deserialización.\nTodo sobre la librería de Rest Assured de Java.\nPruebas con TestNG\nGestion de Datos.\nSchemas de Json\nSeguridad en APIs\nCódigos de Estatus.\n\n\nMaven.\nTodo el proyecto será administrado bajo la estructura de Maven\n\n\n\n\nCucumber Reporting. (Reportes y Auto documentación.)\nDocumentación de casos de prueba.\nConfiguración de Librerías.\nCapturas de pantalla para reportes.\nConfiguración en entornos Windows.\nTest Runners.\n\n\nAnálisis de reportes.\nAnalizar resultados de casos de prueba.\nEstimación de Casos de prueba.\n\n\nCucumber.\nTest Basado en Comportamiento. (BDD)\nEsqueleto de Framework BDD\nCucumber – Gherkin sintaxis.\n\n\nJenkins.\nInstalación en entornos Windows.\nPlugins Jenkins.\nPipelines Jenkins.\nProgramar ejecución periódica.\nVisualización de reportes.\nCambio de cultura hacia las pruebas continuas.\nEstimar casos de pruebas automatizados.\nEstrategias de Equipo para la Automatización de Pruebas.\nAnálisis e Implementación. ¿Cómo empezar?\n\n\n¿Para quién es este curso?\nPara testers en general\nDevelopers\nInvolucrados en el proceso de desarrollo de software en general.\nInteresados en aprender tareas de automatización de pruebas.",
      "target_audience": [
        "Testers que deseen potenciar sus habilidades.",
        "Developers que deseen aprender sobre automatización de pruebas."
      ]
    },
    {
      "title": "Learn OpenBullet from scratch",
      "url": "https://www.udemy.com/course/learn-openbullet-from-scratch/",
      "bio": "The Complete OpenBullet Course to Learn How to Make Config",
      "objectives": [],
      "course_content": {
        "مقدمة": [
          "مقدمة"
        ],
        "تحميل و تثبيت البرنامج": [
          "تحميل و تثبيت OpenBullet"
        ],
        "التعرف على Proxies و Wordlist و Config وكيفية اضافتهم الى البرنامج وكيف تبدأ في": [
          "ما هو البروكسي لماذا نستعمله و من اين نحصل عليه",
          "اضافة بروكسي/ فحص/ تصدير",
          "ما هي الووردليست, الحصول عليها، إضافتها",
          "ما هي الكونفيج وكيفية اضافتها",
          "كيف تبدأ في التكريك"
        ],
        "كيفية صناعة الكونفيج": [
          "استعمال اداة Network في سحب المعلومات",
          "طريقة ارسال (GET Request)",
          "طريقة ارسال (Post Request)",
          "كيفية استعمال PARSE Block لاستخراج المتغيرات",
          "KEY CHECK BLOCK كيفية استعمال KEY CHECK BLOCK",
          "How to make config كيفية عمل كونفيغ",
          "How to make config (Multipart Post Data) كيفية صنع كونفيج",
          "How to make config (Basic auth + Base64 Function) كيفية صنع كونفيج",
          "Automatically save Hits (UTILITY BLOCK) حفظ الهيتز تلقائيا",
          "JavaScript + Recursive استعمال لغة البرمجة جافا سكريبت داخل openbullet",
          "Use Python in OpenBullet استعمال لغة البرمجة بايثون داخل"
        ]
      },
      "requirements": [
        "اساسيات استعمال الحاسوب"
      ],
      "description": "السلام و عليكم و رحمة الله و مرحبا بكم في هذه الدورة الخاصة باختبار الويب باستعمال برنامج OpenBullet ،OpenBullet  عبارة عن مجموعة اختبار ويب تسمح بتنفيذ الطلبات نحو تطبيق ويب مستهدف وتوفر الكثير من الأدوات للعمل مع النتائج. يمكن استخدام هذا البرنامج لكشط البيانات وتحليلها ، واختبار pentesting الآلي ، واختبار الوحدة من خلال السيلينيوم وغير ذلك الكثير.\nالأهمية! إجراء هجمات (D) DoS أو حشو بيانات الاعتماد على المواقع التي لا تملكها (أو ليس لديك إذن للاختبار) أمر غير قانوني! لن يكون المطور مسؤولاً عن الاستخدام غير السليم لهذا البرنامج.\nولحد الساعة هناك نسختين من البرنامج OpenBullet 1 وصل  إلى نهاية عمره الافتراضي ، ولن يتم تقديم المزيد من الدعم له. يرجى التفكير في التبديل إلى OpenBullet 2 حيث سيتم تحديثه باستمرار ويوفر الكثير من الميزات.\nوفي هذه الدورة ساشرح لكم OpenBullet 1 ومع انه لم يعد يتلقى التحديثات من المطور الا ان النسخة الثانية من البرنامج لم يتم تطويرها للمبتدئين لذلك سنبدأ بالنسخة الاولى ثم بعد ذلك ننتقل الى النسخة الثانية\nوفي هذه الدورة سنتعلم:\n1- كيفية تحميل وتثبيت البرنامج\n2- ما هو البروكسي و كيفية اضافته الى البرنامج ولمادا نستعمله ومن اين نتحصل عليه\n3- ما هي الووردليست وكيفية اضافتها ومن اين نتحصل عليها\n4- ماهي الكونفيغ وكيفية اضافتها الى البرنامج\n5- كيفية استعمال البرنامج لفحص الحسابات\n6- كيفية صناعة الكونفيغ",
      "target_audience": [
        "الى كل شخص مهتم ب Web testing"
      ]
    },
    {
      "title": "Kurs Git dla początkujących",
      "url": "https://www.udemy.com/course/kurs-gita/",
      "bio": "System kontroli wersji dla zielonych",
      "objectives": [
        "Czym jest kontrola wersji i dlaczego warto ją stosować",
        "Utworzenie repozytorium lokalnego",
        "Dodawanie plików do repozytorium i śledzenie zmian w tych plikach",
        "Utworzenie repozytorium na GitHubie",
        "Cofanie wprowadzonych zmian",
        "Wprowadzenie do TortoiseGit",
        "Przesyłanie zmian z repozytorium lokalnego na Githuba"
      ],
      "course_content": {},
      "requirements": [
        "Umiejętność obsługi komputera"
      ],
      "description": "Git jest najpopularniejszym systemem kontroli wersji. Pozwala Nam śledzić zmiany w plikach.  Git to narzędzie z którego codziennie korzystają programiści i testerzy automatyzujący pracując z kodem. Będąc testerem manualnym również warto poznać to narzędzie. Jako tester manualny możesz być zmuszony do pobrania kodu aplikacji na swój komputer i uruchomienia aplikacji lokalnie.\nKurs skupia się na podstawach zagadnieniach Gita. Z tego kursu dowiesz się czym jest system kontroli wersji i jakie są jego zalety. Zapoznasz się z podstawowymi komendami Gita, dowiesz się jak śledzić zmiany w plikach oraz zobaczysz  jak umieścić swój kod na GitHubie. Kurs prezentuje również pokrótce możliwości TortoiseGita oraz integrację z Intelij IDE oraz PyCharm\n\n\nZ tego kursu dowiesz się:\nCzym jest kontrola wersji i dlaczego warto ją stosować\nJak utworzyć repozytorium lokalne\nJak dodać pliki do repozytorium i śledzić zmiany w tych plikach\nJak stworzyć repozytorium na GitHubie\nJak cofać wprowadzone zmiany\nCzym jest TortoiseGit\nJak przesłać zmiany z repozytorium lokalnego na Githuba\nJak zintegrować IDE z Gitem\nJak wygenerować i dodać klucz SSH do repozytorium\nCzym jest i jak utworzyć Pull Request\nJak pobrać repozytorium z Githuba\nCzym są gałęzie i jak ich używać\nJak scalać zmiany między gałęziami\nCzym jest konflikt i jak sobie z Nim poradzić\n\n\nKurs jest częścią kilku ścieżek edukacyjnych. Po ukończeniu tego kursu możesz kontynuować naukę na wybranej przez siebie ścieżce. Z koncepcją ścieżki edukacyjnej możesz zapoznać się w lekcji pod tytułem \"Ścieżka edukacyjna\".",
      "target_audience": [
        "Programiści chcący zapoznać się z systemem kontroli wersji - Git",
        "Testerzy automatyzujący chcący zapoznać się z systemem kontroli wersji - Git"
      ]
    },
    {
      "title": "Test Mobile de A à Z - Cours Complet - de Débutant à Expert",
      "url": "https://www.udemy.com/course/devenir-testeur-mobile-pro/",
      "bio": "Apprenez les tests d'applications mobiles et devenez testeur d'applications mobiles",
      "objectives": [
        "Apprenez les compétences de test de base nécessaires pour postuler à des postes de test mobile .",
        "Apprenez les tests Android. Android Studio, Logcat, Outils ADB, Katalon,",
        "Être en mesure de démontrer votre compréhension des tests mobiles et logiciels à de futurs employeurs.",
        "Le cours est continuellement MIS À JOUR, vous apprendrez donc les dernières nouveautés au fur et à mesure de l'évolution des tests de logiciels.",
        "les questions que vous vous posez reçoivent une réponse ce jour-là",
        "Les compétences que vous apprendrez sont en DEMANDE. Vous pouvez commencer à gagner de l'argent en tant que testeur mobile indépendant immédiatement !"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Merci",
          "Pourquoi les tests mobiles sont très intéressants ?",
          "Données d’analyse mobile",
          "Modèles d’affaire pour les applications mobiles",
          "Types d’applications mobiles",
          "Architecture d’application mobile",
          "Architecture d’application mobile",
          "Les méthodes de connexion :",
          "Cas pratique de test mobile",
          "La synchronisation des données :",
          "Stratégie de test pour les applications mobiles : Introduction",
          "Stratégie de test pour les applications mobiles",
          "Les types de tests :",
          "Tests de compatibilité avec le matériel (des appareils)",
          "Tests des interactions entre l’application et le logiciel de l’appareil",
          "C'est quoi KATALON ?",
          "Installation de KATALON",
          "Cas pratique de Test mobile avec katalon",
          "Conception des cas de test pour une application mobile : Introduction",
          "Conception des cas de test pour une application mobile : Cas pratique",
          "Introduction sur la création des anomalies :",
          "Création d'une anomalie avec Jira",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Les certifications :",
          "Exercice 1: Création d'une anomalie",
          "Correction Exercice 1: Création d'une anomalie"
        ]
      },
      "requirements": [
        "AUCUN"
      ],
      "description": "Apprenez les compétences de test de base nécessaires pour postuler à des postes de test mobile .\nApprenez les tests Android. Android Studio,Outils ADB, Katalon,\nÊtre en mesure de démontrer votre compréhension des tests mobiles et logiciels à de futurs employeurs.\nLe cours est continuellement MIS À JOUR, vous apprendrez donc les dernières nouveautés au fur et à mesure de l'évolution des tests de logiciels.\nles questions que vous vous posez reçoivent une réponse ce jour-là\nLes compétences que vous apprendrez sont en DEMANDE. Vous pouvez commencer à gagner de l'argent en tant que testeur mobile indépendant immédiatement !\n\n\n\n\nQue vous souhaitiez :\n- développez les compétences dont vous avez besoin pour obtenir votre premier emploi de test mobile\n- passer à un poste de test plus élevé\n-apprenez simplement les tests mobiles pour pouvoir démarrer votre carrière de freelance\n…alors vous avez besoin d'une base solide en test mobile. Et ce cours est conçu pour vous donner ces compétences de base, rapidement.\nNous vous guiderons étape par étape à travers des vidéo attrayants et vous apprendrons tout ce que vous devez savoir pour réussir en tant que testeur mobile.\nCe cours s'adresse aux débutants complets qui n'ont aucune expérience de test, ainsi qu'aux testeurs\n\n\nIl s'agit du cours de test mobile le plus récent je vous explique toutes les méthodologies de test importantes de manière agile et moderne, avec des exemples concrets à l'appui. Ce cours est créé par un ingénieur QA senior, qui a de l'expérience dans différents multinationaux et aussi des sujets critiques et qui travaille toujours activement dans l'une des meilleures entreprises en France",
      "target_audience": [
        "Le cours est à 100 % pour vous si vous voulez devenir un testeur mobile génial !",
        "Aucune expérience de test préalable n'est supposée. Fondamentalement à tous ceux qui veulent en savoir plus sur les tests !"
      ]
    },
    {
      "title": "Testes Automatizados Usando Robot Framework – Módulo 1",
      "url": "https://www.udemy.com/course/testes-automatizados-usando-robot-framework-modulo-1/",
      "bio": "Automatizando um cadastro de clientes com o Robot Framework",
      "objectives": [
        "Instalar e configurar a Robot Framework",
        "Criar e rodar scripts com a biblioteca Selenium",
        "Explorar as principais bibliotecas",
        "Trabalhar com variáveis, listas e dicionários",
        "Trabalhar com estruturas lógicas de controle e condicionais",
        "Setup e TearDown para pré-condições e pós-condições de testes",
        "Padrão de projeto Page Object",
        "Automatizar uma página de cadastro de clientes",
        "Criar palavras-chave personalizadas"
      ],
      "course_content": {
        "Introducão": [
          "Apresentação",
          "Robot Framework - O que é, características e recursos"
        ],
        "Preparação do ambiente": [
          "Instalação",
          "Editores"
        ],
        "Iniciando com o Robot Framework": [
          "Variáveis",
          "Bibliotecas - Builtin",
          "Bibliotecas - String",
          "Bibliotecas - DateTime",
          "Bibliotecas - OperatingSystem",
          "Estruturas - Condicionais e Loops"
        ],
        "Robot Framework - Selenium": [
          "Primeiro script usando Robot com Selenium",
          "Automatizando um Sistema de Cadastro de Clientes"
        ],
        "Design Pattern Page Objects": [
          "Aplicando padrão Page Objects no Cadastro de Clientes"
        ],
        "Setup e Teardown para o Cadastro de Clientes": [
          "Setup e Teardown"
        ],
        "Validação dos campos do Cadastro de Clientes": [
          "Casos de Teste para Validação de campos obrigatórios"
        ],
        "Finalização e código-fonte dos scripts de teste": [
          "Revisão do relatório de teste e conclusão",
          "Próximos passos"
        ]
      },
      "requirements": [
        "Noção básica de teste de software e que saiba como criar testes manuais para servir de base para seus testes automatizados",
        "Noção básica de lógica de programação, entender os conceitos de variáveis, funções, métodos, argumentos e laços.",
        "Não é necessário ter experiência prévia em programação usando o Selenium",
        "Não é necessário ter experiência prévia em automação de teste"
      ],
      "description": "O curso Testes Automatizados Usando Robot Framework – Módulo 1 tem como principal objetivo apresentar uma poderosa ferramenta para automatizar testes de maneira fácil e intuitiva através da escrita natural.\nO Robot é um framework para automação genérica de testes, ou seja, você pode automatizar sites, aplicativos Web, APIs, desktop e mobile, usando um único framework.\nE o melhor, ele não exige conhecimento específico em qualquer linguagem de programação. O objetivo do framework é tornar os testes mais reaproveitáveis e fáceis de implementar usando palavras-chaves pré-definidas e/ou personalizadas.\nO Robot permite aos testadores e pessoas da área da Qualidade de Software automatizar mesmo sem ser muito técnico.\nNeste curso vamos ver os fundamentos básicos do framework e as estruturas básicas que o framework disponibiliza para tornar o teste mais completo. Os procedimentos de instalação do framework são apresentados de maneira clara e objetiva. Também serão apresentados vários editores e suas respectivas extensões para tornar mais fácil o desenvolvimento dos casos de teste. Estudaremos algumas das principais bibliotecas do framework mas daremos uma atenção especial para a biblioteca Selenium.\nVocê será guiado passo-a-passo de maneira bastante didática, e, ao final do curso, você terá automatizado vários casos de testes para uma aplicação Web de cadastro de clientes.",
      "target_audience": [
        "Analistas de teste e profissionais da área da Qualidade de Software que desejam iniciar no mundo da automação de testes",
        "Analistas de teste que já fazem automação mas querem conhecer novas opções para realizar seu trabalho",
        "Curiosos em geral sobre o assunto automação de testes"
      ]
    },
    {
      "title": "Cypress io | Sıfırdan İleri Seviyeye Web Otomasyon Testi",
      "url": "https://www.udemy.com/course/cypress-io-sifirdan-ileri-seviyeye-web-otomasyon-testi/",
      "bio": "Sıfırdan, gerçek zamanlı çerçeveler ile Cypress io kullanarak hızlı ve modern bir Web UI + Api otomasyonu öğrenin",
      "objectives": [
        "Cypress io kurulumu ve Otomasyon çerçevesini sıfırdan tasarlama konusunda pratik bilgi",
        "Element path çıkarma yöntemleri (XPath - Css Path)",
        "Web elementleri ile etkileşim (File Upload, IFrame, Checkbox, Dropdown ve dahası)",
        "Çapraz tarayıcı testleri (chrome, electron, edge, firefox)",
        "Dosya ve klasörler ile çalışma (Xlsx parse, Read-Write File, ve dahası)",
        "Kompleks datatable senaryolarının otomatize edilmesi",
        "Mocklama yöntemleri ile Otomasyon testleri oluşturmak için Cypress kullanarak XHR/API testini öğrenin",
        "Raporlama yöntemleri ve çeşitli entegrasyonlar (Testrail, mochawesome)",
        "Loglama eklentilerinin kurulumu ve kullanımı (cypress-terminal-report)",
        "Page Object Model - Cypress uyarlaması",
        "Json yapıları ile çalışma",
        "Asynchronous & Promise yapısının anlaşılması",
        "Kursun sonunda, Cypress kullanarak herhangi bir Web Uygulaması için hızlı ve güvenilir Otomasyon testleri oluşturabileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Yazılım Testi ve Cypress'e Giriş"
        ],
        "Cypress ve Proje Kurulumu": [
          "Windows işletim sistemine Cypress io kurulumu",
          "Linux (Ubuntu) işletim sistemine Cypress io kurulumu",
          "Proje yapısı ve dosya hiyerarşisi"
        ],
        "Test Spec Dosyalarının Yapısı ve İlk Test": [
          "Cypress Test Runner Tanıtımı",
          "Cypress ile ilk test",
          "Skip ve Only komutları ile test case yönetimi",
          "Visit - Url ve Protocol kontrolleri",
          "Tarayıcı fonksiyonları (go, back, reload)",
          "Testlerin farklı tarayıcılarda çalıştırılması"
        ],
        "Element Etkileşimleri ve Path Çıkarma Yöntemleri": [
          "Cypress selector ile path çıkarma yöntemi",
          "Ranorex selocity path çıkarma eklentisinin kurulumu ve kullanımı",
          "DOM'da kısa bir süre kalan, ardından kaybolan öğeler için path yakalama yöntemi",
          "XPath yönteminin incelenmesi ve path çıkarma kuralları",
          "Cypress XPath kurulumu ve kullanımı"
        ],
        "Form Element Kontrolleri": [
          "Input box - Radio button",
          "Check box - Input type ile özel klavye karakterlerinin kullanılması",
          "Cypress ile .as (alias - takma ad) kullanımı",
          "Select & Multiple Select Element",
          "File Upload element testi & kısıtlı file upload senayoları için özel yöntemler",
          "Alert kontrolleri"
        ],
        "IFrame": [
          "IFrame & k-shadow-frame"
        ],
        "Before - Before Each - After - After Each": [
          "Before - After metotlarının spec bazlı çalıştırılması",
          "Before - After metotlarının proje bazlı çalıştırılması"
        ],
        "Debugger": [
          "Debugger yöntemleri ( debugger, debug, cy.pause() )"
        ],
        "Cypress JSON & Environment Variables & Command.js": [
          "Timeout örnegi ile cypress.json editleme ve konfigurasyon yönetimi",
          "Command js & Environment variable kullanarak özel komut olusturma"
        ],
        "Element Scroll Yöntemleri": [
          "scrollTo & scrollIntoView"
        ]
      },
      "requirements": [
        "Herhangi bir ön koşul gerekli değildir.",
        "Temel javascript - css - html deneyimi bir artı olacaktır."
      ],
      "description": "Tamamı Türkçe olarak hazırlanmış ilk Cypress io eğitim setidir. Cypress ile ileri düzey gereksinimleri karşılamak için rekabet avantajı elde edeceksiniz. Kurs gerçekten işe yarayacak bir test süreci oluşturmanıza yardımcı olacaktır.\nTestin birçok şeye ihtiyacı olduğuna inanıyoruz ve herkesin öğrenebileceği - faydalanabileceği bir aracı size tanıtmak için buradayız.\nCypress'ten önce uçtan uca testler yazabilmek için, birlikte çalışması gereken birçok farklı aracın entegre edilmesi gerekliydi. Cypress en çok kullanılan araçları ve kütüphaneleri kendi bünyesinde toplayıp geliştiricileri bu zahmetten kurtararak modern web uygulamalarını test edebilmek için tek bir kurulum paketi hazırlamıştır.\nBu süreçte geliştiricilerin ve QA mühendislerinin yeni nesil web uygulamalarını test ederken karşılaştıkları temel sorunları ele alarak, sorunlar için hızlı, kolay ve güvenilir çözümler sunmuştur.\n\n\nCypress io Özellikleri\nTestler çalışırken anlık görüntüler alınır. Test sonuçlandığında komutlar üzerinde gezinerek ilgili komut çalıştıktan sonra ve önce sayfanın yada elementin durumu gözlemlenebilir.\nKodları yazdıktan sonra tarayıcıda sonuçları görmek için sadece projeyi kaydetmeniz yeterlidir.\nİşlevlerin, sunucu yanıtlarının veya zamanlayıcıların davranışını doğrulayıp kontrol edebilirsiniz.\nCypress mimarisi Selenium veya WebDriver kullanmaz, hızlı, tutarlı ve güvenilir testler yazabilmenızı sağlar.\nBirçok farklı işletim sistemi üzerinde farklı browser desteği ile çapraz tarayıcı testlerinin yönetimi sağlanır.\nÇeşitli hata ayıklama seçenekleri vardır.\nHızlı ve ücretsizdir.\n\n\nKursun kapsadığı temel konular !\nCypress io test aracının temelleri\nFarklı ortamlar için kurulumlar\nBaşlangıçtan - ileri seviyeye UI ve API testleri\nÇeşitli raporlama yöntemleri\nTest yönetimi için kullanılabilecek entegrasyonlar\nOtomasyon yazarken karşılaşılabilecek sorunlar\nVe çok daha fazlası  (kurs müfredatına bakınız)\n\n\nBu kurs, ürün kalitesini ve güvencesini arttırmaya yönelik hedefler doğrultusunda otomasyon için çeşitli test araçlarını tecrübe etmiş, otomasyon test mühendisleri tarafından verilmektedir.",
      "target_audience": [
        "Otomasyon testine sıfırdan başlayanlar",
        "QA Mühendisleri",
        "Selenium gibi farklı bir test aracından Cypress io'a geçmek isteyen test mühendisleri",
        "Mevcut manual testlerini hızlı bir şekilde otomatize etmeyi hedefleyen test ekipleri",
        "Yeni kavram ve test tekniklerini öğrenmek isteyen orta ve ileri düzey öğrenciler"
      ]
    },
    {
      "title": "Cypress: Testare Automatizată de la Începător la Avansat",
      "url": "https://www.udemy.com/course/cypress-testare-automatizata-de-la-incepator-la-avansat/",
      "bio": "Cypress - from beginner to expert",
      "objectives": [
        "Cum să configurezi toate tool-urile necesare pentru a începe să scrii teste cu Cypress.",
        "Cum să setezi un proiect Cypress de la zero.",
        "Tipurile de locatori utilizați în Cypress.",
        "Cum să identifici locatori pentru elementele web.",
        "Cum să automatizezi interacțiunea cu diverse tipuri de elemente web.",
        "Cum să organizezi și să reutilizezi codul folosind modelul Page Object.",
        "Vei pune cunoștințele învățate in practica prin exercițiile create.",
        "Cum să adaugi capturi de ecran și înregistrări video pentru testele automatizate.",
        "Cum să adaugi rapoarte la suitele de teste.",
        "Cum să creezi un framework de testare utilizând Cypress."
      ],
      "course_content": {},
      "requirements": [
        "Nu sunt necesare cunoștințe anterioare. Acest curs te învață de la zero, chiar și pentru începători absoluti."
      ],
      "description": "Acest curs îți va oferi o înțelegere completă a framework-ului Cypress și te va învăța cum să utilizezi toate funcționalitățile sale cheie. Cypress este un framework modern, bazat pe JavaScript, care oferă tot ce ai nevoie încă din start: Test Runner, librării pentru aserțiuni, reporteri și multe altele. De aceea, acest framework este extrem de rapid! Și nu te îngrijora dacă nu ai mai folosit JavaScript până acum. Scrierea testelor automatizate în Cypress seamănă mai mult cu utilizarea unei secvențe de comenzi specifice pentru a efectua acțiuni în browser, decât cu programarea propriu-zisă. Este mai mult un tip de scripting, urmând regulile Cypress.\nVom începe prin configurarea mediului de testare și explorarea comenzilor și acțiunilor de bază în Cypress. De asemenea, vei învăța cum să identifici selectorii pentru elementele web din DOM.\nVom discuta și despre bunele practici în testarea automatizată. În plus, vom aborda subiecte avansate, precum crearea unui framework de testare, utilizând modelul Page Object, similar celor utilizate în proiectele reale. Vom învăța cum să adăugăm capturi de ecran și înregistrări video pentru testele noastre, precum și cum să configurăm rapoarte pentru suitele de teste.\nLa finalul acestui curs, te asigur că vei deveni un adevărat expert în Cypress!",
      "target_audience": [
        "Ingineri QA manuali care doresc să învețe primul framework de automatizare.",
        "Ingineri de automatizare care trec de la Selenium la Cypress.",
        "Developeri care vor să învețe rapid automatizarea cu Cypress.",
        "Începători în Cypress."
      ]
    },
    {
      "title": "Formation de l'automatisation des tests avec Playwright",
      "url": "https://www.udemy.com/course/initiation-a-lautomatisation-des-tests-avec-playwright/",
      "bio": "Apprenez Playwright à partir de zéro et créez vos scripts pour automatiser les tests",
      "objectives": [
        "Automatisation des test",
        "Automatisation des test avec Playwright",
        "Apprenez les principes fondamentaux de JavaScript requis pour les tests de Playwright Automation.",
        "Comprendre l'automatisation Web avec Playwright sur les applications",
        "Connaissance complète de toutes les méthodes Playwright et de leur utilisation avec des exemples",
        "test logiciel"
      ],
      "course_content": {
        "Introduction": [
          "playwright: introduction",
          "Point important pour le bon déroulement de la formation",
          "C'est quoi automatisation de tests :",
          "playwright : C’est quoi ?",
          "Merci"
        ],
        "Automatisation des tests avec Playwright": [
          "Playwright : installation de l’outil",
          "Playwright : installation de l’outil",
          "Playwright : en cas de problème d'installation de l’outil",
          "playwright : Explorer l’outil"
        ],
        "playwright : Comment exécuter un test": [
          "playwright : Comment exécuter un test",
          "playwright : Comment exécuter un test"
        ],
        "playwright : écrire le premier script": [
          "playwright : écrire le premier script",
          "playwright : écrire le premier script",
          "playwright :Exercice 1",
          "playwright : Locator Xpath et CSS",
          "playwright :Exercice 2",
          "playwright :Correction de l'exercice 2",
          "playwright :Exercice 3",
          "playwright :Correction de l'exercice 3",
          "playwright :Exercice 4",
          "playwright :Correction de l'exercice 4",
          "Maîtriser Playwright : Quiz Ultime pour l'Automatisation des Tests",
          "playwright : Continuer l'apprentissage"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Doublez votre salaire QA avec Playwright!\nLa formation est à jour avec la dernière version de Playwright\nVous avez la passion d'apprendre Playwright mais vous n'avez aucune connaissance en codage ? Je réaliserai votre souhait avec mon enseignement facile et mon support de requête à vie via QA Forum.\nLa formation du Playwright est créé pour les testeurs de logiciels manuels qui souhaitent apprendre les tests d'automatisation à partir de zéro avec Playwright\nChaque étape est expliquée en détail, de la configuration à l'exécution de votre premier test de Playwright automatisé.\nAucune connaissance préalable de l'automatisation des tests,\nCe cours est spécialement conçu pour les débutants complets dans l'automatisation des tests\nCertaines des bases de JavaScript sont expliquées et devraient suffire aux débutants complets pour commencer.\nDe plus en plus de postes d'assurance qualité logicielle nécessitent une certaine automatisation des tests, et dans de nombreux cas, l'expérience en automatisation de test est demandée / exigée, il est important de pouvoir automatiser des tests\nÀ la fin de ce cours, les étudiants seront capables d'automatiser des tests logiciels avec Playwright.\nEt surtout, être en mesure de recevoir une promotion à l'emploi actuel ou d'obtenir un nouvel emploi qui nécessite du Playwright ou une autre expérience en automatisation des tests.\nÀ la fin du cours, vous maîtriserez les tests et la mise en œuvre de l'automatisation du Playwright avec succès sur votre lieu de travail ou vous atterrirez sur un emploi bien rémunéré",
      "target_audience": [
        "Toute personne souhaitant passer des tests manuels à l'automatisation des tests",
        "Toute personne qui souhaitent apprendre Playwright",
        "testeur",
        "QA",
        "TEST MANAGER",
        "Developpeurs",
        "TEST LEAD",
        "Automation testers"
      ]
    },
    {
      "title": "Master:Playwright con Python, pruebas automatizada (Español)",
      "url": "https://www.udemy.com/course/masterplaywright-con-python-pruebas-automatizada-espanol/",
      "bio": "Automatiza tus Pruebas con Playwright y Python atravez de multiples Ejemplos en Español (Sub Es,En,Chi,Ind,Fra,Etc).",
      "objectives": [
        "Aprenderás a utilizar el Framework Playwright de nivel Básico a Avanzado con Python através de multiples Ejemplos en ESPAÑOL",
        "Crear tus pruebas desde Cero, Interactivas",
        "Aprende la bases de Este maravilloso Framework",
        "Aprenderás Estrategias para mejorar tus pruebas"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instalando Python",
          "Hola mundo en Python",
          "Instlando Visual Studio Code",
          "Agregar Extensiones Para Python",
          "Instalar CMDER",
          "Obtener ruta CMDER",
          "Configurar Visual y CMDER"
        ],
        "Actualización de mi Página Web": [
          "Actualización de mi Página Web"
        ],
        "Bases de Python": [
          "Notas de esta Sección",
          "Nuestros primeros Retos",
          "Numeros y Operadores",
          "Variables P-1",
          "Variables P-2",
          "Tipos de Variables",
          "Input",
          "Reto con input",
          "Reto 6",
          "Reto 7"
        ],
        "Como Imprimir Resultados": [
          "Funciones para Imprimir Resultados"
        ],
        "Funciones tipo String": [
          "Introducción a las funciones String",
          "Capitalize",
          "CaseFold",
          "Center",
          "Count",
          "EndWith",
          "Find"
        ],
        "Manejo de Cadenas": [
          "Corte de Texto",
          "Manipular texto",
          "Escape"
        ],
        "Jupyter": [
          "Instalar Jupyter",
          "Manejo del entorno Jupyter",
          "Listas P-1",
          "Listas P-2"
        ],
        "Tuplas en Python": [
          "Tuplas P-1",
          "Tuplas P-2",
          "Tuplas P-3",
          "Tuplas P-4"
        ],
        "Condicionales (IF-ELIF-ELSE)": [
          "Condicionales P-1",
          "Condicionales P-2",
          "Condicionales P-3",
          "Condicionales P-4",
          "Condicionales P-5"
        ],
        "FOR (LOOPS)": [
          "For P-1",
          "For P-2",
          "For P-3",
          "For P-4",
          "For P-5"
        ]
      },
      "requirements": [
        "No se necesita ninguno conocimiento previo para poder tomar este curso",
        "El curso va desde Cero hasta un nivel Básico - Intermedio - Avanzado para que aprendas las bases de este Framework",
        "De preferencia tener bases del Lenguaje Python"
      ],
      "description": "Playwright permite pruebas confiables de extremo a extremo para aplicaciones web modernas.\n\n\nPlaywright se creó específicamente para adaptarse a las necesidades de las pruebas de extremo a extremo. Playwright es compatible con todos los motores de renderizado modernos, incluidos Chromium, WebKit y Firefox. Realice pruebas en Windows, Linux y macOS, de forma local o en CI, sin interfaz o con emulación móvil nativa.\nPlaywright recomienda usar el complemento oficial de Playwright Pytest para escribir pruebas de un extremo a otro. Proporciona aislamiento de contexto, ejecutándolo en múltiples configuraciones de navegador desde el primer momento. Alternativamente, puede usar la biblioteca para escribir manualmente la infraestructura de prueba con su corredor de prueba preferido. El complemento Pytest utiliza la versión de sincronización de Playwright, también hay una versión asíncrona accesible a través de la biblioteca.\n\n\nCualquier navegador • Cualquier plataforma • Una API\n\n\nNavegador cruzado. Playwright es compatible con todos los motores de renderizado modernos, incluidos Chromium, WebKit y Firefox.\nMultiplataforma. Realice pruebas en Windows, Linux y macOS, localmente o en CI, sin interfaz o con interfaz.\nIdioma cruzado. Utilice la API de Playwright en TypeScript , JavaScript , Python , .NET , Java .\nPrueba web móvil. Emulación móvil nativa de Google Chrome para Android y Mobile Safari. El mismo motor de renderizado funciona en su escritorio y en la nube.\n\n\n\n\nEspera automática. En Playwright espera que los elementos sean procesables antes de realizar acciones. También tiene un rico conjunto de eventos de introspección. La combinación de los dos elimina la necesidad de tiempos de espera artificiales, la causa principal de las pruebas irregulares.\nAfirmaciones web primero. Las afirmaciones del Playwright se crean específicamente para la web dinámica. Las comprobaciones se vuelven a intentar automáticamente hasta que se cumplan las condiciones necesarias.\nRastreo. Configure la estrategia de reintento de prueba, capture el seguimiento de ejecución, videos, capturas de pantalla para eliminar escamas.\n\n\nMúltiple todo. Pruebe escenarios que abarcan múltiples pestañas , múltiples orígenes y múltiples usuarios . Cree escenarios con diferentes contextos para diferentes usuarios y ejecútelos en su servidor, todo en una sola prueba.\nEventos de confianza. Desplace elementos, interactúe con controles dinámicos, produzca eventos confiables. Playwright utiliza una tubería de entrada de navegador real indistinguible del usuario real.\nMarcos de prueba, perforar Shadow DOM. Los selectores de dramaturgos atraviesan el DOM de la sombra y permiten ingresar marcos sin problemas.",
      "target_audience": [
        "Estudiantes con conocimientos básicos de la web y testing, pero sobre todo gente que quiera hacer pruebas automatizadas",
        "Tester y QA",
        "Administradores de Sistemas",
        "Programadores de Pruebas Automatizadas."
      ]
    },
    {
      "title": "İSTQB Proqram Testi Əsasları (Azərbaycan dilində)",
      "url": "https://www.udemy.com/course/proqram-testi-ve-qa-temelleri/",
      "bio": "İSTQB əsasları üzrə Azərbaycan dilində test təməlləri, 30+ illik təcrübə ilə real iş mühitində tətbiq olunan biliklər",
      "objectives": [
        "Proqram təminatının test və QA üçün lazım olan praktik biliklər",
        "Test və QA üçün, Süni İntellekt (Aİ)’in praktiki istifadəsi və çox sayı real misallar",
        "33 ildən çox təcrübəyə sahib olan iki Azərbaycanlı test və QA mühəndisdən (mütəxəssisdən) test və QA əsaslarını öyrənin",
        "Real iş mühitində test və QA necə olur",
        "Bu kursu öyrəndikdən sonra, Manual Test Mühəndisi olaraq, işə başlaya bilərsiniz",
        "Bu kursu öyrəndikdən sonra, Test Avtomatlaşdırma sahəsini sağlam təməllər ilə öyrənə bilərsiniz",
        "Bu kursu öyrəndikdən sonra, test və QA iş müsahibələrində uğurlu olacaqsınız",
        "Test və QA iş karyeranızı sağlam təməllər ilə başlayın",
        "Kurs İSTQB sertifikatı kurikulumu və iki mütəxəssis təlimçinin uzun illər təcrübələrinə dayanaraq hazırlanmış",
        "Azərbaycan ilk dünya-səyiyəli test / QA və İSTQB-yə əsaslanan onlayn kurs"
      ],
      "course_content": {
        "Başlanğıc və kurs ilə tanışlıq": [
          "Başlanğıc və kurs ilə tanışlıq"
        ],
        "Testin əsasları": [
          "Test nədir və niyə lazımdır?",
          "Testin prinsiplər ve test fəaliyyətlər",
          "Test artefaktlar, rollar, əsas bacarıqlar və yaxşı təcrübələr"
        ],
        "Proqram təminatının İnkişaf dövrü ərzində testin yeri, rolu və növləri": [
          "SDLC’də testin yeri və rolu, TDD, və BDD",
          "Test səviyyələri, test növləri və baxım testi"
        ],
        "Statik Test": [
          "Statik test əsasları"
        ],
        "Testin təhlili və dizaynı - Test-maddələri doğru dizayn etmək": [
          "Test texnikalarına baxış, və Ekvivalent-Paylar qara-qutu test texnikası",
          "Qara-qutu test texnikaları: Sərhəd-dəyəri analiz və Qərar-cədvəl yanaşmalar",
          "Qara-qutu test texnikaları-Vəziyyət-keçid yanaşması ilə test-maddə dizayn etmək",
          "Ağ-qutu test texnikaları",
          "Təcrübəyə-əsaslanan test texnikalar",
          "İstifadəçi hekayələri yazmaq və test etmək (Süni intellekt-ChatGPT-ilə)",
          "TDD, BDD, ATDD və onların alətləri"
        ],
        "Test fəaliyyətlərinin idarə edilməsi": [
          "Test plan yazmaq və sınaq səylərinin qiymətləndirilməsi",
          "Test halları prioritetləşdirmə, test piramida və kvadrantlar",
          "Test layihələrində Risklərin idarə edilməsi",
          "Test Monitorinqi, Nəzarəti, Tamamlanması, Hesabatı və Ölçüləri",
          "Xataların idarə edilməsi"
        ],
        "Test avtomatlaşdırma və test alətlər ilə tanışlıq": [
          "Test üçün alət dəstəyi (Test Avtomatlaşdırma)"
        ],
        "Son Bölmə: Test və QA sahəsində Beynəlxalq Standartlar": [
          "Test və QA sahəsində Beynəlxalq Sertifikatlar"
        ]
      },
      "requirements": [
        "Bu kursda qeydiyyat etmək və öyrənmək üçün, öyrənənlərin heç bir spesifik əvvəlki biliklərə ehtiyac yoxdur. Amma əlbəttə ki öyrənənlərin İT, test və QA sahəsinisə həvəsləri və öyrənmək motivasiyaları olmaları lazım."
      ],
      "description": "Bu kursda, proqram təminatının test və QA sahəsində tələb olunan nəzəri bilikləri öyrənəcəksiniz. Azərbaycanda ilk dəfə olaraq, 30 ildən çox təcrübəyə malik iki Azərbaycanlı test və QA mütəxəssisi, gənc nəsil test və QA mütəxəssisləri yetişdirmək və təlim vermək məqsədilə bu dərsi hazırlamışdır.\nTest və QA sahəsində İngilis dili və digər dillərdə, məsələn, Türk və Rus dillərində bəzi qaynaqlar mövcuddur. Lakin, Azərbaycan dilində keyfiyyətli qaynaqların sayı çox azdır. Buna görə də, 2024-cü ildə iki Azərbaycanlı test və QA mütəxəssisi Azərbaycan dilində keyfiyyətli kurslar hazırlamağa qərar verdilər.\nBu kursu başa vurduqdan sonra, real iş mühitlərində test və QA-nın necə icra olunduğunu öyrənəcək və test/QA iş müsahibələrində uğur qazanaraq, test və QA sahəsində karyeranızı sağlam təməllərlə başlaya biləcəksiniz.\nKurs, ISTQB sertifikatının kurikulumuna əsaslanır və iki mütəxəssis təlimçinin uzun illər boyunca əldə etdiyi təcrübəyə söykənir. Kursun məzmunu aşağıdakı əsas mövzulardan ibarətdir:\nTestin əsasları\nProqram təminatının inkişaf dövrü ərzində testin rolu\nTestin təhlili və dizaynı\nTest fəaliyyətlərinin idarə edilməsi\nTest avtomatlaşdırma və test alətləri ilə tanışlıq\nTest və QA fəaliyyətlərində, ChatGPT kimi Süni İntellekt (Aİ) alətlərindən istifadə\nƏlavə olaraq, bu kursu öyrəndikdən sonra test avtomatlaşdırmasını sağlam təməllərlə və asan şəkildə öyrənə biləcəksiniz. Kursu bitirdikdən sonra, iki mütəxəssis təlimçi bir neçə test avtomatlaşdırma kursu da hazırlamağı planlaşdırır.\nSüni İntellekt (Aİ) ilə test və QA fəaliyyətlərini daha effektiv icra edin!\nKursumuz, test və QA üçün Süni İntellektin (Aİ) praktiki istifadəsini və çoxsaylı real misalları təqdim edir. Dərslərin əksəriyyətində, ChatGPT ilə interaktiv test dizaynı və digər test fəaliyyətləri üçün suallar soruşulur və faydalı cavablar və nəticələr əldə edilir.",
      "target_audience": [
        "Proqram test və QA sahəsinə yeni daxil olanlar üçün"
      ]
    },
    {
      "title": "Automatización con Cypress 2025: De la Teoría a la Práctica",
      "url": "https://www.udemy.com/course/automatizacion-cypress-de-la-teoria-a-la-practica/",
      "bio": "Aprende a automatizar pruebas web desde cero con Cypress, combinando fundamentos teóricos y ejemplos reales aplicados.",
      "objectives": [
        "Aprenderás conceptos teóricos que usualmente no te enseñan, por ende, sabrás el por qué de las cosas antes de comenzar a escribir código",
        "Aprenderás a escribir, ejecutar y depurar pruebas automatizadas en Cypress, mejorando la calidad del software y la eficiencia del testing.",
        "Te enfrentarás a una aplicación similar a entornos reales, ayudándote a diseñar estrategias para abordar la automatización web y api",
        "Al terminar el curso estarás en la capacidad de automatizar con Cypress usando buenas prácticas y tendrás bases teóricas para afrontar otros frameworks"
      ],
      "course_content": {
        "¿Por qué necesitas este curso?": [
          "Introducción a este curso",
          "Simulación de Entrevista como Automatizador"
        ],
        "Fundamentos Esenciales de Automatización": [
          "Introducción",
          "Propósitos de la automatización de pruebas",
          "Factores de Éxito",
          "Pirámide de Pruebas",
          "Automatización en la Estrategia de Pruebas",
          "Comparativa de Herramientas",
          "Repasemos lo aprendido"
        ],
        "Prepara tu Entorno en Tiempo Record": [
          "Instalando NPM y NodeJS",
          "Instalando Visual Studio Code",
          "Instalando Cypress",
          "Paso a paso de Instalación Windows",
          "Paso a paso de Instalación Mac"
        ],
        "Ejecuta una Prueba Automatizada en 5 Minutos": [
          "Ejecución de los Tests pre-configurados",
          "Conociendo los Modos de Ejecución",
          "Estructura de Cypress",
          "Repasemos lo Aprendido"
        ],
        "Tu Primer Prueba": [
          "Escribiendo Tu Primer Prueba Automatizada",
          "Añadiendo un Par de Aserciones"
        ],
        "Identificación de Elementos en una Página": [
          "Identificando elementos con Devtools",
          "Identificando elementos con Cypress Inspector",
          "Estrategias Basicas de Localización",
          "Identificando Elementos por ID",
          "Identificando Elementos por Class",
          "Identificando Elementos por Texto",
          "Identificando Elementos por Atributo",
          "Identificando Elementos Hijos"
        ],
        "Conociendo la Página de Pruebas": [
          "Tour por la Página",
          "Registro de la Cuenta",
          "Tour por la Zona Exclusiva para Estudiantes"
        ],
        "Interacción con Diferentes Elementos Web": [
          "Trabajando con Checkboxes",
          "Trabajando con Listas o Dropdowns",
          "Trabajando con Radio Buttons",
          "Trabajando con Campos de Texto",
          "Trabajando con Botones"
        ],
        "El Corazón de Cypress": [
          "Cypress Snippets",
          "Estructura de los Tests",
          "Hooks",
          "Incluye y Excluye Tests",
          "Aserciones",
          "Variables",
          "Alias",
          "Retry Tests",
          "Manipulando el cypress.config",
          "Variables de Entorno",
          "Manipulando el package.json",
          "Comandos Personalizados"
        ],
        "Construyendo el Proyecto: De la Idea al Código": [
          "¿Qué es una Historia de Usuario y Cómo se Relaciona con la Automatización?",
          "Flujo de Registro",
          "Flujo de Login",
          "Flujo de Añadir 1 Producto al Carrito de Compras",
          "Flujo de Limpiar el Carrito",
          "Flujo de Checkout con Tarjeta Válida",
          "Flujo de Checkout con Tarjeta Inválida",
          "Flujo de Checkout con Tarjeta sin Fondos",
          "Flujo de Añadir a Favoritos",
          "Flujo de Historial de Pedidos"
        ]
      },
      "requirements": [
        "No es requerido conocimiento previo, sin embargo, se recomienda tener fundamentos en Javascript"
      ],
      "description": "¿Te gustaría aprender a automatizar pruebas web como un profesional?\n\nEste curso te lleva paso a paso desde los fundamentos hasta la aplicación práctica de Cypress, una de las herramientas de testing más populares en la industria moderna.\nEn “Automatización con Cypress: De la Teoría a la Práctica”, no solo aprenderás los conceptos básicos de automatización, sino que los aplicarás en proyectos reales, simulando un entorno de trabajo profesional. Exploraremos desde la instalación, estructura de carpetas, buenas prácticas y comandos personalizados, hasta flujos completos de testing sobre funcionalidades reales como login, registro, carrito de compras, favoritos, historial de pedidos y pruebas API autenticadas.\nEl curso está diseñado para ser claro, práctico y directo. Ideal tanto para testers manuales que quieren dar el salto a la automatización como para desarrolladores que buscan mejorar la calidad de sus aplicaciones web.\nA lo largo del contenido, no solo escribirás código: entenderás cómo pensar como un tester automatizador. Además, trabajaremos con conceptos como variables de entorno, validaciones de UI, gestión de cookies, uso de datos dinámicos con FakerJS y mucho más.\n¡Inscríbete ahora y lleva tu carrera en QA al siguiente nivel con Cypress y obtendrás el conocimiento necesario para destacar en cualquier proyecto!",
      "target_audience": [
        "Personas sin experiencia en automatización con Cypress o conocimientos básicos"
      ]
    },
    {
      "title": "Software Testing für Anfänger oder Quereinsteiger (Teil 2)",
      "url": "https://www.udemy.com/course/software-tester-abc-teil-2-software-testing-kurse-bundel/",
      "bio": "Software Testing in SCRUM und einfache Testautomatisierung mit dem Robot Framework Selenium Tutorial",
      "objectives": [
        "Was SCRUM ist",
        "Welche Bedeutung Software Tester in SCRUM Projekten haben",
        "Wie man als Software Tester in SCRUM Projekten überlebt",
        "Die Relevanz vom Explorativen Testen",
        "Tipps, Tricks und Ideen um die tägliche Arbeit als Software Tester zu verbessern",
        "Wie man ohne Programmierkenntnisse Testfälle automatisiert",
        "Wie man Testfälle und Testsuits modifiziert",
        "Wie man das Robot Framework nutzt"
      ],
      "course_content": {},
      "requirements": [
        "Grundlegende Computerkenntnisse",
        "Interesse an Software Testing",
        "Internetverbindung",
        "Geringe Englischkenntnisse",
        "Keine weiteren Vorraussetzungen nötig"
      ],
      "description": "Software Testing in SCRUM & Testautomatisierung mit dem Robot Framework Selenium Tutorial\nSoftware Testing und Qualitätssicherung sind Schlüsselfaktoren für den Erfolg Deiner Webseiten, Programme und Apps. Mit unserem umfassenden Kurs zu Software Testing in SCRUM und Testautomatisierung mit dem Robot Framework Selenium Tutorial erhältst Du das nötige Rüstzeug, um in der agilen Welt des Softwaretestens erfolgreich zu sein.\n\n\nIn diesem Kurs lernst Du:\n\n\nDie Grundlagen von SCRUM und die Rolle des Softwaretesters in agilen Projekten.\nWie Du als Softwaretester in SCRUM-Projekten überlebst und effektiv arbeitest.\nExploratives Testen und seine Relevanz in der agilen Softwareentwicklung.\nPraktische Tipps, um Deine tägliche Arbeit als Softwaretester zu verbessern.\nDie Grundlagen des Robot Frameworks zur einfachen Testautomatisierung.\nSchritt-für-Schritt-Anleitungen zur Erstellung zuverlässiger automatisierter Testskripts ohne Programmierkenntnisse.\nVoraussetzungen sind lediglich grundlegende Computerkenntnisse, Interesse an Software Testing und eine Internetverbindung. Ideal für Quereinsteiger und Anfänger, auch ohne Programmierkenntnisse.\nDieser Kurs bietet Dir den idealen Einstieg in die Welt des agilen Software Testings und in die Testautomatisierung. Lerne, wie Du mit dem Robot Framework Selenium manuelle Regressionstests ersetzt und effiziente, automatisierte Testskripte erstellst.\nBist Du bereit, Deine Karriere als agiler Softwaretester oder Testautomatisierer zu beginnen? Melde Dich jetzt an und starte Deine Reise in die Welt des modernen Software Testings!",
      "target_audience": [
        "Software Tester ohne Erfahrung",
        "Software Tester mit Erfahrung",
        "Menschen, die mehr über SCRUM, Testautomatisierung und Software Testing lernen möchten",
        "Quereinsteiger"
      ]
    },
    {
      "title": "Appium - Mobile App Automation, Java + Ci/CD on GitLab",
      "url": "https://www.udemy.com/course/appium-automation-mobile-app-java-cicd-gitlab/",
      "bio": "Автоматизация мобильных приложений: Полный курс по Appium + Android Studio + Java, Gradle, JUnit 5 + Ci/CD",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Базовые знания языка программирования Java"
      ],
      "description": "Интенсивный курс по автоматизации тестирования мобильных приложений\nПрисоединяйтесь к курсу, где вы сможете получить как теоретические знания, так и практические навыки автоматизации тестирования мобильных приложений. Курс создан для тех, кто хочет научиться использовать Appium, Appium Inspector и Android Studio для создания и запуска тестов.\nЧто будет в курсе:\nОсновы автоматизации мобильного тестирования: Изучим, с чего начать работу с инструментами Appium и Appium Inspector, и какие подходы лучше использовать.\nРабота с Android Studio: Пошагово разберем, как настроить Android Studio и использовать её как эмулятор для тестирования.\nСоздание тестов с Appium: Научимся писать автоматизированные тесты для Android-приложений с нуля на языке Java.\nИнтеграция в CI/CD: Покажу, как подключить тесты к процессу CI/CD в GitLab, как настроить пайплайны и запуск на удаленном девайсе с генерацией видоеотчётов.\nПрактический проект: Вы выполните реальный проект, где сможете применить всё, чему научились, и закрепить свои знания на практике.\nКурс подойдёт как новичкам, так и тем, кто уже имеет опыт, но хочет прокачать свои навыки. Вы получите все необходимые знания и инструменты, чтобы начать или продолжить карьеру в автоматизации тестирования мобильных приложений.\n\n**\n\nIntensive Course on Mobile App Test Automation\nJoin this course to gain both theoretical knowledge and practical skills in mobile app test automation. This course is designed for those who want to learn how to use tools like Appium, Appium Inspector, and Android Studio to create and run tests.\nWhat’s included in the course:\nBasics of Mobile Test Automation: Learn how to get started with Appium and Appium Inspector, along with best practices and methods.\nWorking with Android Studio: Step-by-step guidance on setting up Android Studio and using it as an emulator for testing.\nCreating Tests with Appium: Learn how to develop automated tests for Android apps from scratch using Java.\nIntegration with CI/CD: Discover how to integrate your tests into CI/CD pipelines in GitLab, how to set up pipelines and run on a remote device with viewport generation.\nPractical Project: You’ll complete a real-world project where you’ll apply everything you’ve learned and solidify your knowledge through hands-on experience.\nThis course is perfect for both beginners and those with some experience who want to enhance their skills. You’ll gain all the tools and knowledge you need to start or advance your career in mobile app test automation.",
      "target_audience": [
        "Все, кто желает быстро и результативно усвоить ключевые возможности автоматизации Mob App",
        "Для начинающих Manual QA и также для Automation QA"
      ]
    },
    {
      "title": "現役アーキテクトが教える『Javaテスト基礎＆実践』JUnit5、Mockito、DBUnit／CICD／生成AI活用",
      "url": "https://www.udemy.com/course/learn-java-testing/",
      "bio": "テストの方法論やJavaテスティングフレームワーク（JUnit5中心）の利用方法を詳細に解説／GitHub Actionsのデモ／Chat GPTによるテスト効率化／開発環境が全部入った仮想マシンが付属",
      "objectives": [
        "ソフトウェアテストの考え方を理解し、適切なテスト戦略を立案することが可能になります。",
        "Javaによる様々なテスティングフレームワーク（JUnit、Mockito、DBUnit、Spring Boot Test、RestAssured、WireMock、Selenium、Gatling）の使用方法を習得することができます。",
        "企業システムやWebサービスに携わるエンジニアとして、差別化を図ることができます。",
        "将来的に1ランク上のエンジニアやアーキテクトを目指す方が、土台を固めることができます。"
      ],
      "course_content": {},
      "requirements": [
        "Javaの基本的な文法やEclipseの使用方法などをある程度理解されていることを前提にしています。",
        "Spring Boot Test（Chapter5.x）ではSpring Bootに関する前提知識が、REST APIテスト（Chapter6.x）ではREST APIに関する前提知識が、それぞれ必要になります。",
        "PC（Windows、MAC）をお持ちの方は、所定の手順により開発環境・コンテンツをセットアップすることにより、理解を深めることができます（推奨）。"
      ],
      "description": "本コースは私が講師を務める「レッツラーンシリーズ」の一つです。\n本コースの内容は、ソフトウェアテストの基本的な考え方から始まり、JUnit 5を中心としたJavaベースの様々なテスティングフレームワーク（以下）の利用方法を詳細に解説します。\n\n\nJUnit：xUnitテスティングフレームワーク\nMockito：モッキングフレームワーク\nDBUnit：DBテスト効率化のためのJUnit拡張ライブラリ\nSpring Boot Test：Spring BootのためのJUnit拡張ライブラリ\nRestAssured：RESTサービスのためのテストライブラリ\nWireMock：モックHTTPサーバー作成ライブラリ\nSelenium（Selenide）：WebブラウザのUIテスト自動化フレームワーク\nGatling：負荷テストフレームワーク\n\nまたAppendix（補足）として、GitHub ActionsによるCI/CDパイプラインの構築方法や、Chat GPTを活用したテスト効率化手法についても取り上げます。\n本コースを修了すると、大規模な企業システムやWebサービス開発において、テスト技法や自動化手法に精通した専門性の高いエンジニアとして活躍することが可能になるでしょう。\n\n\n本コースの範囲は、以下のとおりです。\n\n\nChapter 1.1 - ソフトウェアテストの概要\nChapter 1.2 - 単体テストの手法と戦略\nChapter 1.3 - 結合テストとシステムテスト\nChapter 1.4 - テスティングフレームワーク\nChapter 1.5 - CI/CD\nChapter 2.1 - JUnit5による単体テスト\nChapter 2.2 - 単体テストにおける「依存性注入」とテストダブルの利用\nChapter 2.3 - JUnitの開発環境\nChapter 3.1 - Mockitoによるモッキング\nサンプルコード実演：Chapter 2.x～3.x（JUnit 5、Mockito）\nChapter 4.1 - DBUnitによるデータベーステスト\nサンプルコード実演：Chapter 4.x（DBUnit）\nChapter 5.1 - Spring Bootアプリケーションの単体テスト\nサンプルコード実演：Chapter 5.x（Spring Boot Test）\nChapter 6.1 - RestAssuredによるREST APIのテスト\nChapter 6.2 - WireMockによるモックサーバー構築\nサンプルコード実演：Chapter6.x（RestAssured、WireMock）\nChapter 7.1 - SelenideによるWebブラウザのUIテスト\nサンプルコード実演：Chapter 7.x（Selenide）\nChapter 8.1 - Gatlingによる負荷テスト\nサンプルコード実演：Chapter 8.x（Gatling）\nAppendix 1 - GitHub Actionsとコンテナを活用したCI/CD\nサンプルコード実演：Appendix 1（GitHub Actionsとコンテナを活用したCI/CD）\nAppendix 2 - 生成AIのテストへの活用\nAppendix 3 - 開発環境全部入り仮想マシンのセットアップ手順\n\nなお、本コースは言語としてのJavaをある程度理解していることを前提にしています。もしJava言語そのものへの理解が不十分であると感じた場合は、私が講師を務める同じシリーズの別コース（以下）の受講をご検討ください。\n\nJava Basic編：Javaの文法、オブジェクト指向開発のための様々な技法（抽象化、カプセル化、多態性など）、Java SEの基本的なAPI（文字列、正規表現、列挙型、例外、コレクション、日時など）\nJava Advanced編：Java SEと呼ばれる仕様の中で、高度で応用的な仕組み（マルチスレッド、ラムダ式、ストリームAPI、ネットワークプログラミング、総称型、レコードクラスなど）\n\n\n本コースの開発環境について\n\n\n本コースでは、学習に必要な開発環境を、Oracle VM VirtualBox（以降VirtualBox）の仮想マシンとして提供します。\n受講生の皆様に実施いただくのは、VirtualBoxをインストールし、講師のGoogleドライブからダウンロードした「仮想ハードディスクファイル」を読み込む、という手順を踏むだけです。これで本コースで紹介したすべての作業やテストを、自分で簡単に試すことができます。\n本コースの開発環境は、仮想マシンとしてUbuntu（22.04 LTS）上に構築されています。この仮想マシンをVirtualBox上で動作させると、以下のリソース一式を、セットアップされた状態ですぐに使うことが可能です。\n\n\nソースコード一式（講義で用いたコードを含む）\nJDK（JDK 21）\n統合開発環境（日本語化対応済みのEclipse）\n各種ライブラリ（JUnit 5、Mockito、DBUnit、RestAssured、WireMock、Selenideなど）\n負荷テストツール（Gatling）\nデータベース（MariaDB）※MySQL互換\nSpring Bootによるサンプル用Webアプリケーション\n本コースのソースコードは講師のGitHub上で公開（後述）していますので、それを使って個別に開発環境をセットアップしていただくことも可能ですが、難易度が高く手間も相応にかかります。その点、この方法であれば特段のスキルは不要であり、手間もそれほどかかりません。\nこのような仮想マシンによる開発環境のセットアップ手順は、Appendix 3にて取り上げます。\nまた、開発環境において実際にテストを行ったり、アプリケーションを起動したりするための具体的な方法は、Chapterの間に差し込んである「サンプルコードの実演」という講座を参考にしてください。\nなお「仮想ハードディスクファイル」が格納された講師Googleドライブへのアクセス方法は、本コースご受講時に届くメールに記載します。\n\n\n本コースのリソースおよびソースコードについて\n\n\n本コースの説明で使用する資料は、各レッスンのリソースボタンから、PDFファイルとしてダウンロード可能です。また「イントロダクション」のリソースボタンから、コース全体のPDFファイルをダウンロードすることもできます。必要に応じて、お手元で開いて活用してください。\n本コースのサンプルコードは、講師のGitHubリポジトリとして公開されており、ソースコードはZIP形式でダウンロードすることができます。Googleにおいて\"KenyaSaitoh、learn_java_testing\"というキーワードで検索すれば、当該プロジェクトのページを見つけていただくことが可能です。\n（ここにURLを直接貼り付けすることができないため、このようにご案内しています）\n本コースの開発環境は、前述したように仮想マシンとして利用していただくことをお奨めしますが、ソースコードだけを手元で確認したい場合は、このようにしてください。",
      "target_audience": [
        "Javaの基本的なスキルを習得済みで、さらなるレベルアップを目指している方",
        "テスト技法や自動化手法に精通した専門性の高いエンジニアとして活躍したい方",
        "将来的なキャリアとして、上級アーキテクトを志向している方",
        "フリーランスエンジニアとして付加価値の更なる向上を図っている方",
        "IT人材の教育研修部門において、新人研修やリスキルのためのオンライン教材をお探しの方"
      ]
    },
    {
      "title": "Integração contínua com GitHub Actions",
      "url": "https://www.udemy.com/course/integracao-continua-com-github-actions/",
      "bio": "Aprenda a criar pipelines utilizando o GitHub Actions",
      "objectives": [
        "Revisão rápida sobre os conceitos de Git",
        "Aprenderá a criar pipelines utilizando o GitHub Actions",
        "Aprenderá os gatilhos para execução de pipelines",
        "Aprenderá a criar pipelines utilizando variáveis de ambiente"
      ],
      "course_content": {},
      "requirements": [
        "É aconselhável ter um conhecimento básico de Git"
      ],
      "description": "O curso de Integração Contínua com GitHub Actions foi pensando para ensinar de maneira teórica e prática o uso das funcionalidades e possibilidades oferecidas pelo GitHub Actions. O objetivo principal foi capacitar os alunos a implementar workflows automatizados que otimizem processos de desenvolvimento, promovendo entregas rápidas e seguras. Durante o curso, abordamos desde os conceitos básicos até técnicas mais avançadas, garantindo que os participantes tivessem uma visão clara e prática da ferramenta.\n\n\nNeste curso você aprenderá:\n- Fazer  instalação do Git\n- Configuração de chave SSH\n- Conceitos básicos e teóricos do GitHub Actions\n- Construir diversos tipos de workflows com diferentes gatilhos de execução\n- Gerenciar suas variáveis comuns e variáveis protegidas\n\n\nNeste curso vocês também construirá workflows especiais possibilitando ter um maior controle dos seus fluxos de trabalho e até executar diversos jobs em paralelo com poderosas ferramentas fornecidas pelo GitHub Actions.\n\n\nAo final desse curso, os alunos desenvolverão uma sólida compreensão de como criar, configurar e gerenciar workflows usando o GitHub Actions. Além disso, aprenderão a adaptar esses workflows para atender a diferentes necessidades de projetos, garantindo maior produtividade e segurança no processo de desenvolvimento. Desta forma, os alunos estarão aptos a implementar pipelines de integração contínua e entrega contínua (CI/CD) em seus projetos, promovendo um ciclo de desenvolvimento mais ágil e eficiente.",
      "target_audience": [
        "Desenvolvedores",
        "Analistas de Qualidade de Software",
        "Pessoas que queiram entrar na área de Devops"
      ]
    },
    {
      "title": "Selenium IDE Tutorial Deutsch - Software Testing",
      "url": "https://www.udemy.com/course/selenium-ide-tutorial-deutsch/",
      "bio": "Super simple Testautomatisierung für Webseiten dank Selenium IDE - Software Testing",
      "objectives": [
        "Wie man Selenium IDE verwendet",
        "Wie man ohne Programmierkenntnisse Testfälle automatisiert",
        "Wie man Testfälle und Testsuits modifiziert",
        "Warum Testautomatisierung so wichtig ist",
        "Warum Selenium IDE ein echter Glücksfall ist"
      ],
      "course_content": {},
      "requirements": [
        "Windows PC",
        "Internetverbindung"
      ],
      "description": "Selenium IDE ist ein fantastisches und kostenloses Programm zur Testautomatisierung. Mithilfe von Selenium IDE gelingt es kinderleicht Testfälle für seine Webseite zu erstellen und diese zu modifizieren. Software Testing und Qualitätssicherung sind immens wichtig und tragen wesentlich zum Erfolg deiner Webseite bei. Ohne gründliches Testen läufst du Gefahr Bugs zu übersehen, die deine Kunden entdecken werden. Bugs können nicht nur deiner Reputation schaden sondern immens viel Geld kosten.\nIn diesem Selenium IDE Tutorial bringe ich dir bei wie du ganz ohne Programmierkenntnisse zuverlässige automatiesierte Testskripts für deine Webseiten erstellen kannst. Selenium erlaubt es dir mit nur wenigen Klicks die Qualitätssicherung deiner Webseite dauerhaft zu gewährleisten. Manuelle Regressionstests sind sehr zeitaufwändig und kostenintensiv. In diesem Tutorial zeige ich dir wie modernes Software Testing mitfhilfe von Selenium IDE aussieht. Ich verspreche dir du wirst erstaunt sein, wie einfach Testautomatisierung sein kann. Nach diesem Tutorial wirst du verstehen warum Arbeitgeber Selenium so lieben.\nIch erkläre dir Schritt für Schritt wie Selenium IDE aufgebaut ist. Wie einfach die Bedienung funktioniert. Wie simpel du Testfälle und Testsuites erstellen kannst und noch einiges mehr.\nEgal ob du Software Tester bist, du Interesse für Testautomatisierung hast oder angehender Software Tester bist. Dieses Selenium IDE Tutorial ist super für Anfänger insbesondere dann wenn du keine Programmierkenntnisse besitzt.\nDu brauchst bis auf einen Windows PC und eine Internet Verbindung keine weiteren Vorraussetzungen und lernst dennoch wie simple Testautomatisierung mit Selenium ist.\nIch habe mir Selenium IDE selbst beigebracht und besaß auch keinerlei Programmierkenntnisse. Ich bin zwar hauptberuflicher Software Tester begann allerdings als Quereinsteiger. Selenium hat mir meine tägliche Arbeit immens erleichtert. Auch du kannst hunderte von Stunden und Nerven sparen, die für manuelle Regressionstests verwenden werden müssten und stattdessen simple automatisierte Testskripte schreiben.\nSelenium IDE ist einfach, kostenlos und hat hohen Wert für deine Berufspraxis. In diesem Selenium IDE Tutorial für Anfänger lernst du im Rekordtempo die Testautomatisierung.\nWorauf wartest du? Schreib dich jetzt ein und werde Testautomatisierer!",
      "target_audience": [
        "Menschen mit und OHNE Programmierkenntnisse",
        "Software Tester UND angehende Software Tester",
        "Menschen mit Interesse an Qualitätssicherung und Software Testing"
      ]
    },
    {
      "title": "Tester oprogramowania - Bootcamp",
      "url": "https://www.udemy.com/course/tester-oprogramowania-bootcamp/",
      "bio": "Testowanie manualne i automatyzacja testów",
      "objectives": [
        "Testowanie manualne",
        "Tworzenie przypadków testowych",
        "Tworzenie raportów z opisem błędów",
        "Teoria i techniki testowania",
        "System kontroli wersji GIT",
        "Programowanie w języku Java",
        "Testowanie API - teoria, narzędzie Postman",
        "Testy automatyczne na poziomie interfejsu użytkownika - Selenium",
        "Tworzenie testów za pomocą podejścia BDD - Cucumber, Gherkin",
        "Jenkins - uruchamianie testów na poziomie API i interfejsu użytkownika",
        "Podstawy HTML i CSS",
        "Podstawy wiersza poleceń",
        "SQL"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Wstęp",
          "Agenda",
          "Wymagania",
          "Efekt końcowy",
          "Kontakt z instruktorem",
          "Praca domowa"
        ],
        "Teoria testowania": [
          "Co to jest testowanie oprogramowania?",
          "Testowanie? A komu to potrzebne?",
          "Weryfikacja vs Walidacja",
          "Cele testowania",
          "Skąd się biorą błędy?",
          "7 zasad testowania",
          "Co ma wpływ na proces testowania?"
        ],
        "Testowanie różnych aplikacji": [
          "Rodzaje aplikacji",
          "Aplikacje konsolowe",
          "Aplikacje okienkowe",
          "Aplikacje internetowe",
          "Aplikacje mobilne",
          "Aplikacja internetowa II",
          "Przykład dokumentacji aplikacji internetowej",
          "Praca domowa"
        ],
        "Scenariusze i przypadki testowe": [
          "Scenariusz testowy",
          "Przypadek testowy",
          "Tworzenie przypadku testowego",
          "Wykonanie przypadku testowego",
          "Po co tworzyć przypadki testowe?",
          "Narzędzia do zarządzania przypadkami testowymi",
          "Praca domowa"
        ],
        "Instalacja aplikacji do testów": [
          "Wprowadzenie",
          "Pliki do pobrania",
          "Budowa aplikacji internetowej na przykładzie",
          "Instalacja Javy",
          "Uruchomienie backendu",
          "Instalacja node",
          "Uruchomieniu interfejsu użytkownika",
          "Dlaczego wersja aplikacji na której wykonujemy test ma znaczenie?"
        ],
        "Narzędzie do zarządzania przypadkami": [
          "Tworzenie konta",
          "Test Plan",
          "Wymagania",
          "Przypadki testowe",
          "Tworzeniu defektu",
          "Wykonywanie przypadków testowych",
          "Raporty",
          "Praca domowa"
        ],
        "Zgłaszanie błędów": [
          "Wprowadzenie",
          "Wywołanie awarii",
          "Zgłaszanie niepoprawnego działania aplikacji",
          "Cykl życia defektu",
          "Severity vs Priority",
          "Zanim zgłosisz defekt",
          "Praca domowa"
        ],
        "Modele wytwarzania oprogramowania": [
          "Wprowadzenie",
          "Waterfall",
          "Model V",
          "Model iteracyjno - przyrostowy",
          "Manifest Agile",
          "Scrum",
          "Scrum - ważne pojęcia i zdarzenia"
        ],
        "Narzędzie do zarządzania projektem": [
          "Wprowadzenie",
          "Utworzenie konta i projektu",
          "Tworzenie story w backlogu, planowanie i rozpoczynanie sprintu",
          "Typy zgłoszeń",
          "JIRA vs qTest",
          "Praca domowa"
        ],
        "Budowa aplikacji": [
          "Wprowadzenie",
          "Architektura trójwarstwowa",
          "Warstwa prezentacji",
          "Warstwa logiki biznesowej",
          "Warstwa danych"
        ]
      },
      "requirements": [
        "Nie musisz mieć doświadczenia w testowaniu oprogramowania",
        "Nie musisz mieć doświadczenia w programowaniu",
        "Posiadanie dostępu do internetu",
        "Wytrwałość i chęci do pracy"
      ],
      "description": "Bootcamp przeznaczony dla osób chcących rozpocząć swoją karierę w branży IT jako tester oprogramowania. Ponad 60h materiałów wideo zawiera opracowanie zagadnień dotyczących testowania manualnego ora automatyzacji testów. W ramach kursu omówimy następujące zagadnienia:\n1. Testowanie oprogramowania\n- teoria testowania, rola testowania w projekcie IT, techniki testowania, poszczególne role w zespole IT, różne rodzaje aplikacji, budowa aplikacji internetowych\n- praktyka testowania - uruchomienie aplikacji internetowej na swoim komputerze, projektowanie i pisanie przypadków testowych, wykonywanie testów, zgłaszanie błędu, cykl życia błędu, zarządzanie projektem - Jira, zarządzanie testami - qTEST\n2. Bazy danych i język SQL\n- teoria - czym jest baza danych, różne systemy zarządzania bazami danych, czym jest SQL, jak zbudowane są relacyjne bazy danych, typy relacji\n- pobieranie, dodawanie, modyfikacja i usuwanie danych z bazy\n- działanie na wielu tabelach\n- widoki, procedury\n- stworzenie bazy MySQl\n- korzystanie z bazy h2 (połączonej z naszą aplikacją)\n3. Obsługa terminala\n- podstawowe komendy\n- uprawnienia\n- edycja plików z poziomu terminala - vim\n- procesy\n4. Git - system kontroli wersji\n- wstęp teoretyczny, po co nam Git i do czego nam się przyda?\n- podstawowe komendy\n- repozytorium lokalne i zdalne\n5. Postman i testowanie API\n- wstęp teoretyczny - czym jest API i Rest, Co to jest endpoint i metoda HTTP, różne metody http\n- instalacja testowego API na naszym komputerze\n- podstawowe testy API\n- parametryzacja, środowiska, tworzenie kolekcji\n- korzystanie z zewnętrznego źródła danych testowych\n- testowanie API aplikacji Jira na podstawie dokumentacji\n- narzędzia deweloperskie - śledzenie ruchu sieciowego\n6. Java - język programowania\n- instalacja Javy i edytora kodu\n-  typy danych\n- instrukcje warunkowe\n- pętle\n- programowanie obiektowe - klasa, obiekt, konstruktor, interfejs,\n- zadania rekrutacyjne\n7. Testy automatyczne na poziomie interfejsu użytkownika\n- wstęp teoretyczny\n- instalacja niezbędnych narzędzi\n- uruchamianie przeglądarki i otwieranie wybranej strony\n- podstawy html i css (budowa strony internetowej)\n- lokalizowanie elementów na stronie\n- wchodzenie w interakcje z elementami - klikanie, wprowadzanie wartości itd\n-sprawdzanie stanu elementów - czy element jest widoczny, czy nie jest \"wyszarzony\", czy jest klikalny itd\n- oczekiwanie na elementy\n- biblioteka do uruchamiania testów TestNG\n- wzorzec projektowy POM\n- tworzenie raportu z testów\n- testy różnych aplikacji internetowych\n8. BDD i Cucumber\n- czym jest podejście BDD i w jakim celu możemy je zastosować\n- wady i zalety podejścia BDD\n- jak wygląda plik feature i jak go stworzyć\n- słowa kluczowe\n- jak połączyć kroki z pliku feature z kodem w języku programowania Java\n- jak wygenerować raport\n9. Jenkins\n- wstęp teoretyczny - ciągła integracja i ciągłe dostarczanie\n- do czego może nam posłużyć jenkins\n- jak uruchamiać zadanie (testy) cyklicznie za pomocą Jenkinsa (codziennie o 8)\n- czym jest pipeline i jenkinfile\n- jak uruchomić kolekcję testów API stworzoną za pomocą Postmana cyklicznie przy użyciu Jenkinsa\n- jak uruchomić testy UI cyklicznie przy użyciu Jenkinsa\n- jak dodać raport z wykonania testów do Jenkinsa\n\n\nAgenda jest bardzo rozbudowana i nie wymieniłem tutaj wszystkich narzędzi, które poznamy w ramach tego kursu. Otrzymujesz ponad 60h wiedzy, która jest ze sobą ściśle powiązana i bardzo przyda się na pozycji testera automatyzującego.",
      "target_audience": [
        "Osoby chcące rozpocząć karierę w branży IT",
        "Osoby chcące zmienić branżę",
        "Osoby chcące sprawdzić czy IT jest dla nich",
        "Osoby, które nie chcą wydawać tysięcy złotych na bootcampy"
      ]
    },
    {
      "title": "QC Fresher: Từ viết CV đến vượt phỏng vấn – Bạn sẽ làm được!",
      "url": "https://www.udemy.com/course/qc-fresher-interview/",
      "bio": "Khóa học thực chiến giúp QC Fresher viết CV ấn tượng, luyện phỏng vấn tự tin và có được công việc đầu tiên.",
      "objectives": [
        "Biết cách viết CV và portfolio nổi bật, ngay cả khi chưa có nhiều kinh nghiệm.",
        "Tự tin trả lời phỏng vấn với kỹ thuật STAR và xử lý các câu hỏi khó.",
        "Hiểu cách đàm phán lương, quyền lợi và follow-up sau phỏng vấn đúng chuẩn.",
        "Nắm vững chiến lược ứng tuyển và tránh sai lầm phổ biến của người mới bắt đầu."
      ],
      "course_content": {
        "Tổng quan khóa học": [
          "Giới thiệu khóa học",
          "Giới thiệu giảng viên",
          "Mục tiêu. đối tượng và nội dung khóa học"
        ],
        "Tổng quan nghề QC Engineer": [
          "Vai trò, kỹ năng và mindset cần có để sẵn sàng ứng tuyển"
        ],
        "Chuẩn bị CV và Portfolio hiệu quả": [
          "Chuẩn bị CV và Portfolio hiệu quả",
          "Công cụ hỗ trợ tạo CV đẹp"
        ],
        "Kỹ năng trả lời phỏng vấn & kỹ thuật STAR": [
          "Kỹ năng trả lời phỏng vấn & kỹ thuật STAR"
        ],
        "Thực hành trả lời phỏng vấn với ChatGPT": [
          "Thực hành trả lời phỏng vấn với ChatGPT",
          "Hướng dẫn thực hành với ChatGPT"
        ],
        "Các câu hỏi phỏng vấn QC Engineer thường gặp và cách xử lý": [
          "Các câu hỏi phỏng vấn QC Engineer thường gặp và cách xử lý"
        ]
      },
      "requirements": [
        "Khóa học phù hợp cho người mới bắt đầu hành trình QC Engineer, không yêu cầu kinh nghiệm, chỉ cần tinh thần học hỏi và quyết tâm chinh phục công việc đầu tiên."
      ],
      "description": "Bạn là sinh viên mới tốt nghiệp ngành công nghệ thông tin, QC Fresher, QC Junior, QC Engineer từ 1 đến 2 năm kinh nghiệm, hoặc người mới chuyển sang lĩnh vực kiểm thử phần mềm? Bạn đang loay hoay không biết bắt đầu từ đâu để tìm được công việc đầu tiên? Hoặc bạn đang tìm kiếm cơ hội mới trong ngành kiểm thử phần mềm?\n\nKhóa học này sẽ đồng hành cùng bạn từ bước đầu tiên: viết CV sao cho nổi bật dù ít kinh nghiệm, đến luyện kỹ năng phỏng vấn tự tin và xử lý tình huống thông minh khi gặp nhà tuyển dụng. Bạn sẽ học cách xây dựng portfolio cơ bản, trả lời phỏng vấn theo kỹ thuật STAR, luyện tập cùng ChatGPT, và biết cách đàm phán lương cũng như follow-up chuyên nghiệp sau buổi phỏng vấn.\n\nTất cả nội dung đều được thiết kế ngắn gọn, dễ hiểu, có ví dụ thực tế, tài liệu thực hành kèm theo, và truyền cảm hứng để bạn tự tin bước vào hành trình tìm việc.\n\nDù bạn chưa có kinh nghiệm, bạn vẫn có thể giành được công việc QC đầu tiên nếu chuẩn bị đúng cách. Bạn sẽ làm được!",
      "target_audience": [
        "Sinh viên CNTT mới ra trường.",
        "Ứng viên QA/QC dưới 2 năm kinh nghiệm.",
        "Ứng viên đã từng đi phỏng vấn nhưng trả lời chưa tốt, chưa nổi bật.",
        "Những ai đang chuẩn bị ứng tuyển vị trí QC Engineer."
      ]
    },
    {
      "title": "Testare manuala OOP Testare Automata Playwright VS Selenium",
      "url": "https://www.udemy.com/course/testare-automata-csharp/",
      "bio": "Manual si Automation Testing C# Selenium. Programare OOP incepatori. SQL Queries. Postman. Pregatire interviu. Creare CV",
      "objectives": [
        "Vei invata Software Testing in aproximativ 10 ore (estimare bazata pe durata tutorialelor, a temelor si testelor de evaluare)",
        "Ce este testarea si ce face un software tester",
        "Testarea Functionala/ Testarea Non-functionala",
        "Principiile testarii, Nivele de testare, Tehnici de testare, Test Plan",
        "Test Cases, Test scenarios",
        "Bug. Defect. Improvement",
        "Testarea unui API, Metodele HTTP, REST WEB Services",
        "Crearea si testarea unei baze de date. Interograri in SQL Server",
        "Tooluri de testare. Instalare si introducere in Postman",
        "Instalare Selenium. Bazele Programarii. Introducere in Automation Testing",
        "Creare Proiect Personal",
        "Instalare GIT. Incarcare proiect personal pe GIT",
        "Programare Orientata pe Obiecte",
        "Crearea unui proiect de testare automata de la zero in Selenium",
        "Scriere si executare teste automate",
        "Debug"
      ],
      "course_content": {
        "Testare Manuala": [
          "Prezentare curs",
          "Ce inseamna Software Testing?",
          "Care este rolul unui tester",
          "Functional Testing",
          "Non-Functional Testing",
          "Testeaza-ti cunostintele",
          "Exemple si Tema",
          "Principiile Testarii",
          "Exemple practice - Principiile Testarii",
          "Nivele de Testare (Piramida Testarii)",
          "Tehnici de Testare",
          "Fazele STLC",
          "Entry si Exit Criteria",
          "Testeaza-ti cunostintele",
          "Test Cases. Test Scenarios",
          "Creare cont Click-Up",
          "Exercitiu individual: 5 Test Cases",
          "Exercitiu individual: 10 Test Scenarios",
          "Ce este un bug",
          "Scriere Bug Report",
          "Exercitiu individual: Identificare si raportare bug-uri",
          "Raportare improvement",
          "Planul de Testare",
          "API Testing",
          "Testeaza-ti cunostintele",
          "Agile Methodology"
        ],
        "Introducere in Programare": [
          "Instalare Visual Studio",
          "Introducere in programare. Clase si Obiecte",
          "Variabile si Tipuri de Date",
          "Exercitiu individual",
          "While Loop",
          "For Loop",
          "Array",
          "Array-uri multidimensionale",
          "Lists",
          "Try Catch. Exceptii",
          "Clase statice. Metode Statice",
          "Principii OOP: Mostenirea (Inheritance)",
          "Abstract Class & Abstract Method. Override Method",
          "Interfete",
          "Principii OOP: Incapsularea (Encapsulation)",
          "Principii OOP: Abstractizarea (Abstraction)",
          "Principii OOP: Polimorfism (Polymorphism)",
          "Creational Design Patterns",
          "Prototype - Exemplu Practic",
          "Structural Design Patterns",
          "Decorator - Exemplu Practic",
          "Behavioral Design Pattern",
          "Observer -Design Pattern"
        ],
        "Testare Automata": [
          "De ce Automation Testing",
          "Ce este Selenium",
          "Instalare Selenium",
          "Page Object Model",
          "Assert",
          "xPath",
          "Stocare Test Data in XML",
          "Modele de Date",
          "Metoda Parcurgere XML",
          "Scriere Teste Automate",
          "Adaugare Asserts in Testele Automate",
          "Exercitiu Individual"
        ],
        "GitHub": [
          "Creare cont. Instalare Git for Desktop",
          "Creare Branch, Pull Request, Merge"
        ],
        "Testarea unei Baze de Date": [
          "Ce este o Baza de Date",
          "SQL Query - Interogari",
          "Instalare SQL Management Studio",
          "Creare Tabele. Scrierea unui Query",
          "Diagrama Bazei de Date",
          "Exercitiu individual",
          "Importarea unei Baze de Date",
          "Importare Baza de Date - Metoda 2",
          "Operatori SQL",
          "SQL Functions",
          "SQL JOIN",
          "Exemple SQL JOIN",
          "SQL CRUD",
          "Exemple SQL CRUD"
        ],
        "Tool-uri de Testare": [
          "Testing Tools",
          "Instalare Postman",
          "Exemplu GET Method",
          "Exemplu POST Method"
        ]
      },
      "requirements": [
        "Chiar daca nu ai facultate in domeniul IT, poti lucra in acest domeniu ca si Tester. Vei invata totul de la ZERO pentru a trece cu succes de orice interviu pentru un job in pe testare.",
        "Sunt necesare cunostinte minime de limba Engleza. Unii termeni utilizati in Software Testing sunt intalniti de obicei, in engleza."
      ],
      "description": "Acest curs oferă o abordare cuprinzătoare a testării software, acoperind atât testarea manuală, cât și testarea automată. Acesta este destinat celor care doresc să se pregătească pentru interviuri de Software Tester.\nModulul 1:\nTestare manuală:\nÎn acest modul, vei învăța să testezi software-ul manual, folosind metode și tehnici adecvate. Acest modul va acoperi aspecte precum Functional / Non-Functional Testing, Regression Testing sau Smoke Testing . Vei invata, de asemenea, cum să scrii Test Cases eficiente și să raportezi un Bug sau un Improvement.\nModulul 2:\nProgramare OOP de la zero:\nÎn acest modul, vei învăța programerea orientata pe obiecte, utilizând C# ca limbaj de programare. Acest modul este esențial pentru a te asigura că ai cunoștințele de bază necesare pentru a lucra cu Selenium și pentru a scrie teste automate. Vom analiza conceptele fundamentale ale programării, cum ar fi clasele, obiectele, metodele, moștenirea și încapsularea, design patterns si nu numai.\nModulul 3:\nTestare automată în Selenium C#:\nAcest modul se concentrează pe testarea automată, iar Selenium C# este instrumentul pe care îl vom utiliza. Vom explora modul în care putem crea și rula teste automate pentru a verifica funcționalitatea aplicațiilor web.\nVom crea o solutie de automation de  la zero folosind design pattern-ul Page Object Model.\nModulul 4:\nDatabase Testing cu interogări în SQL:\nAcest modul se concentrează pe testarea bazei de date și va acoperi concepte precum tabelele, interogările și diagrama bazei de date. Vei invata cum poti utiliza SQL pentru a crea interogări pentru a verifica integritatea și calitatea datelor din baza de date, cum poti crea o baza de date si cum o populezi cu date in tabele.\nModulul 5:\nTesting Tools cu exemple de API Testing in Postman:\nÎn acest modul, vom explora instrumentele de testare și vom discuta modul în care acestea pot fi utilizate pentru a îmbunătăți fluxul nostru de testare. Vom acoperi instrumente precum Postman, folosit pentru testarea API, astfel, vei invata cum poti utiliza Postman pentru a testa și valida răspunsurile API-urilor.",
      "target_audience": [
        "Acest curs este dedicat persoanelor care nu au deloc cunostinte de programare sau in domeniul IT, insa isi doresc sa invete de la 0 si sa inceapa o cariera in acest domeniu.",
        "Cursul este dedicat si persoanelor care au cunostinte in domeniu insa se pregatesc pentru interviu. Vei afla toate informatiile necesare pentru a trece de interviu.",
        "Celor care isi doresc un job de Automation Tester, cat si Manual Tester."
      ]
    },
    {
      "title": "Resolución de modelo de examen de Agile Tester (CTFL-AT)",
      "url": "https://www.udemy.com/course/resolucion-de-examen-istqb-agile-tester-ctfl-at/",
      "bio": "Lo importante no son las respuestas, sino las explicaciones de cómo llegar a ellas.",
      "objectives": [
        "Aprenderán el paso a paso de cómo resolver los ejercicios del modelo de examen",
        "Encontrarán la justificación de las respuestas en el Syllabus",
        "Se llevarán tips para estar mejor preparados a la hora de rendir el examen",
        "Repasarán los conceptos de testing en contextos ágiles"
      ],
      "course_content": {
        "¡Bienvenida!": [
          "¡Bienvenida!"
        ],
        "Material de referencia": [
          "Material de estudio"
        ],
        "Resolución del modelo de examen": [
          "Respuestas de las preguntas 1 a 10",
          "Respuestas de las preguntas 11 a 20",
          "Repaso por el cuadrante del testing ágil",
          "Repaso por la pirámide de la automatización",
          "Respuestas de las preguntas 21 a 30",
          "Respuestas de las preguntas 31 a 40"
        ]
      },
      "requirements": [
        "Si bien como parte del curso se da contexto y se explican algunos conceptos, sería ideal que tengan los conocimientos del Syllabus de la certificación Agile tester o que hayan hecho un curso de testing en contextos ágiles"
      ],
      "description": "Cada vez son más los profesionales que aprobaron la certificación Foundation Level y quieren dar el siguiente paso. En ese camino, muchos eligen seguir con la certificación de Agile tester.\n\n\nLos contenidos teóricos y el modelo de examen se pueden descargar desde el sitio oficial. Sin embargo, están las preguntas y las respuestas, pero no hay una explicación clara de cómo llegar a ellas.\n\n\nEn este curso vamos a resolver juntos cada una de las 40 preguntas publicadas en el modelo de examen. Nos vamos a tomar un buen tiempo para llegar a los resultados haciendo el paso a paso. De esta forma se comprenderá no solo la respuesta sino también el proceso de pensamiento que nos lleva a elegir una respuesta como correcta o a descartar otra por considerarla incorrecta.\n\n\nPodría decirse que este curso es meramente práctico dado que se basa en la resolución de los exámenes aunque, contradictoriamente, no hay muchas tareas prácticas para entregar en esta plataforma.\n\n\nUna vez que hayan terminado este curso, si comprendiste cómo responder a cada una de las preguntas, podrán responder y aprobar el examen oficial.\n¡Espero que pronto me cuenten lo bien que les ha ido al rendir el examen!",
      "target_audience": [
        "Profesionales que estén considerando rendir la certificación Agile tester y quieran conocer cómo es el examen.",
        "Profesionales que se estén preparando para rendir la certificación Agile Tester y quieran enfocarse en practicar para el examen.",
        "Profesionales que habiendo tomado otros cursos o aprendido la teoría de forma autodidacta, quieren entender cómo se resuelve el examen"
      ]
    },
    {
      "title": "Basics of API testing with Test Coverage and Test Case write",
      "url": "https://www.udemy.com/course/basics-of-api-testing-with-test-coverage-and-test-case-write/",
      "bio": "API Testing: Test Coverage and Test Case Writing in Excel or Other Tools (in Hindi)",
      "objectives": [
        "Introduction to API, What is API Testing",
        "What is HTTP Request, Types of Requests, Example of HTTP Respose",
        "What is Payload, Why it is used, Types of Payload i.e. JSON or XML",
        "What is JSON, Types of JSON, Json Parsing for Response Validation in Rest Assured Automation",
        "What is XML, Elements in XML",
        "What is HTTP Headers, Types of Headers, Usages of Headers in API",
        "Difference between 401 and 403 or Authorisation vs Authentication",
        "How to Describe API Test Coverage during Interview",
        "How to write Test Cases in Excel or Other tools"
      ],
      "course_content": {
        "Chapter 1 : Introduction to API, Web Based Applications, Google Working": [
          "(P1 C1 API Testing) Introduction to API, Web Based Applications, Google Working",
          "(P2 C1 API Testing) What is API testing, why api testing is important"
        ],
        "Chapter 2: HTTP Details": [
          "(P1 C2 API Testing) What is HTTP Request, HTTP Verbs/Types i.e GET,PUT etc",
          "(P2 C2 API Testing) Example of HTTP Response, What is HTTP Status code"
        ],
        "Chapter 3: Payload and it's types": [
          "(P1 C3 API Testing) What is Payload, Why payload is used.",
          "(P2 C3 API Testing) What is JSON, Notations in JSON, Types of JSON",
          "(P3 C3 API Testing) Parse JSON file, Response validation in Rest Assured & Store",
          "(P4 C3 API Testing) What is XML, Elements in XML, Few additional information."
        ],
        "Chapter 4: Headers in HTTP Request": [
          "(P1 C4 API Testing) What is Http Headers explained, Types of headers , Used in A",
          "(P2 C4 API Testing) Difference between authentication and authorization in api t"
        ],
        "Chapter 5: Test Case Writing and Test Coverage Explanations in Interview": [
          "(P1 C5 API Testing) How to describe API Test Coverage during Interviews in Hindi",
          "(P2 C5 API Testing) How to write TEST CASES in a API testing| Manual testing wit"
        ]
      },
      "requirements": [
        "No Previous API knowledge is required"
      ],
      "description": "This comprehensive course delves into the intricacies of API testing, providing participants with a solid foundation in the subject. Through a series of engaging lessons, learners will gain a thorough understanding of API testing principles, methodologies, and best practices.\nOne of the key focuses of the course is on test coverage, where participants will learn how to ensure that their tests adequately cover all aspects of the API functionality. By exploring various strategies and techniques, students will discover how to optimize test coverage to enhance the reliability and effectiveness of their tests.\nAnother essential aspect covered in this course is test case writing. Participants will be guided through the process of creating clear, concise, and effective test cases to validate the behavior of APIs. Additionally, they will learn how to document their test cases using Excel or other suitable tools, enabling them to organize and manage their testing efforts efficiently.\nThroughout the course, emphasis is placed on practical application, with hands-on exercises and real-world examples provided to reinforce learning. By the end of the course, participants will be equipped with the knowledge, skills, and confidence to conduct thorough API testing, ensuring the quality and reliability of software applications.\nWhether you're a beginner looking to enter the field of API testing or an experienced professional seeking to deepen your knowledge, this course offers valuable insights and practical guidance to help you succeed in your testing endeavors. Join us on this journey to master API testing and elevate your skills to the next level.",
      "target_audience": [
        "Course is for Beginner level API Tester who wants to understand complete Basics of API Testing in Hindi",
        "Basic Understanding of API Testing in Hindi with Test Case writing and Test Coverage explanation"
      ]
    },
    {
      "title": "SoapUI + WebServices / Rest API 测试详解+实战演示",
      "url": "https://www.udemy.com/course/webservices-rest-api-testwith-soapui/",
      "bio": "SoapUI + WebServices / Rest API从零基础入门到精通",
      "objectives": [
        "在本课程结束时，你将获得关于Web services、API及其功能的完整知识",
        "你将学习如何使用SoapUI测试web services和REST API",
        "创建SOAP/RESTFul APIs/Web services测试用例",
        "你将能够熟练使用SoapUI的功能去开发API测试的自动化脚本",
        "数据驱动测试，用excel表准备测试数据",
        "你将学习一种叫groovy的新语言来使用SoapUI内置的方法写脚本去自动化测试Web Services",
        "你可以给API test cases开发健壮的自动化框架",
        "你将掌握如何Mock WebService以及理解他的重要性",
        "用SoapUI进行安全性测试",
        "你将了解如何为执行的结果生成整洁的报告",
        "用SoapUI Free/Pro版本管理环境",
        "数据库基础知识，用SoapUI进行数据库测试",
        "面试问题",
        "持续集成"
      ],
      "course_content": {
        "介绍": [
          "课程介绍",
          "实例解释什么是WebServices",
          "WebServices类型解释-Soap和REST",
          "什么是WSDL--它在WebService中的重要性",
          "WSDL和SOAP协议的介绍及不同之处"
        ],
        "Soap UI工具基本功能介绍": [
          "SoapUI的下载和安装",
          "Calculator WebService Example",
          "创建TestSuite和TestCases",
          "本地WebService的安装配置-Both Mac & Windows",
          "WebService操作详解"
        ],
        "SoapUI免费版--WebServices手动测试": [
          "用基本的断言做测试验证",
          "用高级断言，验证响应结果",
          "在测试中使用XPATH断言的策略",
          "访问Properties-数据驱动策略",
          "从TestCase、Suite和Project层次访问Properties",
          "如何把响应里面的值发送到另外一个请求--Property Transfer",
          "End to End练习"
        ],
        "Groovy介绍": [
          "Groovy数据类型和变量",
          "groovy基础知识-变量",
          "条件语句",
          "循环",
          "数组",
          "List",
          "Arraylist 和hHashtable",
          "Map",
          "Exception",
          "Assertions in Groovy",
          "用groovy从File读数据",
          "用groovy从excel表里读数据",
          "用Groovy脚本从数据库表里读数据",
          "用groovy写方法"
        ],
        "SoapUI免费版--WebServices自动化测试": [
          "Groovy Script 测试步骤介绍",
          "TestRunner和Context变量演示和详解",
          "testRunner方法--getPropertyValue和setPropertyValue()",
          "用Groovy Methods访问和更新Properties",
          "用xmlHolder API解析XML请求和响应",
          "通过groovy代码触发SoapRequests",
          "实例演示--自动化services",
          "用Assertions验证WebService响应结果",
          "代码",
          "用Groovy读SoapUI Project Artifacts"
        ],
        "SoapUI免费版--REST API手动测试": [
          "REST API概念",
          "REST API- HTTP请求方式有哪些",
          "GET请求方式的实例演示",
          "用Soap UI进行Post HTTP实例演示",
          "End to End测试--用soap UI的property transfer 运行POST HTTP 接口",
          "用SoapUI的Property Transfer 运行POST HTTP 接口-传递值到路径参数"
        ],
        "SoapUI免费版--REST API自动化测试": [
          "Script Assertion窗口--自动化Json格式的响应",
          "解析Json格式的响应--验证API响应结果",
          "实例讲解REST API自动化测试--给json格式的响应加断言",
          "实例讲解XML响应格式的REST API自动化测试"
        ],
        "REST API Json 断言及验证": [
          "Flickr API介绍",
          "从json格式的响应结果里提取json路径",
          "解析响应-添加Json Assertions",
          "Json Assertions高级实例演示"
        ],
        "OAuth 2.0-身份验证": [
          "REST-用Header Tokens, OAuth2.0及basic认证进行身份验证",
          "生成OAuth2 Token，用Token调用Rest API"
        ],
        "End to End框架设计": [
          "框架设计Plan",
          "从开发给的接口文档理解和准备API Tests",
          "在SoapUI里构建REST API project",
          "给API创建TestCase",
          "实例演示End to End testing",
          "安装Eclipse和java做API自动化测试",
          "搭建框架-创建Java API项目",
          "搭建Java tests-WSDL Project概念",
          "集成testNG到JavaAPI测试-执行SoapAPI的多条TestCase",
          "注意事项",
          "执行Soap API 的单个Test和执行Rest API的多个TestSuite",
          "定义testng.xml文件来一次触发所有的tests",
          "用命令去触发testng java api测试",
          "HTML报告以及jenkins安装",
          "集成framework--用Jenkins"
        ]
      },
      "requirements": [
        "本课程是为那些想要熟练使用Soap UI工具测试web服务的测试人员开设的",
        "具备测试基础知识"
      ],
      "description": "*****************************************************************\n在这门课里你将学到Web Services(SOAP WebService和REST API)的手动测试及自动化测试，熟练使用Groovy脚本自动化测试WebService。这门课程设计的是从零基础入门开始学，然后以循序渐进的方式提升到高级水平，不需要在学习课程之前有任何关于Soap Web Services和REST API的背景知识。\n******************************************************************\n课程是实例讲解，内容包括：\n• 20个小时以上的API测试讲座(手工+自动化)，用了7个实际的项目讲解\n• 框架设计\n• GroovyScripting\n• SoapUI Pro\n• API负载测试\n• SoapUI数据库测试\n• 面试问题\n• 讲师终身答疑\n完成课程之后，你将掌握如何测试REST API/WebServices，并可以把所学知识应用在你实际的工作中，或者能找到高薪工作\n**************************************************\n那么这门课独特在哪里呢？\n我们假设学生没有API测试的经验，并且从零开始讲解每个知识点。\n这门课讲解了：\n• 什么是Web Service和Rest API\n• 如何使用SoapUI工具手动测试Web Services和API\n• WebService基础知识，比如WSDL,SOAP ,XML and JSON\n• Groovy脚本基础知识\n• 给SOAP/RESTFul APIs/Web Services创建Test Suites, Test Cases\n• 如何在Soap UI中用Groovy自动化测试WebServices Test Cases\n• Soap UI和Soap UI Pro的不同\n• 写断言，验证WebService的响应\n• 数据驱动测试\n• 不同类型的数据源Data Sources (Database,Excel,Grid 等等..)\n• Soap UI Pro功能\n• DataSink 和 DataGen\n• 用Groovy脚本实现自动化测试\n• 使用SoapUI工具手动测试REST API\n• 使用SoapUI Groovy脚本的断言自动化测试Rest API\n• 用Groovy脚本从File Excel读数据\n• 创建Mock Services\n• 使用TestNG、Jenkins和Java API从零开始开发SoapUI测试框架\n• 使用Soap UI进行安全性测试\n• 使用Soap UI进行数据库测试\n• Soap UI 和Eclipse集成\n• 生成测试报告\n•用命令行工具创建批处理脚本来执行测试用例\n•与Jenkins集成，实现持续集成\n•在SoapUI免费版本中管理环境\n在本课程结束时，你将了解WebService和API规范，并使用SoapUI中的所有可用功能为WebService编写各种有效的手动和自动化测试用例和脚本(包括功能/安全/数据库测试用例)",
      "target_audience": [
        "手工测试人员，同时想要学习WebService测试",
        "功能自动化测试人员，想扩展他们在WebService上的脚本能力",
        "渗透测试人员以了解安全缺陷",
        "任何想开始软件测试生涯的毕业生"
      ]
    },
    {
      "title": "Тестировщик ПО, стань Junior QA Engineer",
      "url": "https://www.udemy.com/course/junior-qa-engineer/",
      "bio": "Получи практические знания и стань инженером-тестировщиком",
      "objectives": [
        "Ручному тестированию программного обеспечения",
        "Как искать ошибки/дефекты (баги) в ПО и как создавать баг репорты",
        "Техникам тест дизайна",
        "Как создавать Тест кейз, Тест план",
        "Классифицировать виды тестирования",
        "Как решать задачи вида \"Как тестировать карандаш\"",
        "Получите практику тестирования веб-приложения написанного на React",
        "Как подготовить резюме для вашей первой работы без опыта в ИТ",
        "Типичным вопросам и задачам на интервью"
      ],
      "course_content": {
        "TRUE QA v1.0: Тестировщик ПО": [
          "Зачем я создал курс True QA.",
          "Ментальная модель: Road from Zero to Sub-zero",
          "Создайте свой словарик",
          "Основная парадигма - Тестовая пирамида",
          "Решите задачу от вашего будущего менеджера",
          "Техники тест дизайна - Test design techniques",
          "Code review. Coverage.",
          "Equivalence partitioning and Boundary value analysis.",
          "Типы тестирования - Testing types",
          "Классифицируйте найденные в интернете типы тестирования",
          "Тест план, тест кейз - Test plan, test case",
          "Запускаем Todo's локально",
          "Resume",
          "Prologue"
        ]
      },
      "requirements": [
        "Базовые навыки работы с компьютером",
        "Отсутствие предрассудков"
      ],
      "description": "Хотите услышать максимально правдивый ответ всем курсам по тестированию? Вы уже тестировщик! Я эксперт функционального тестирования, тестирования безопасности, член BlackHat Arsenal, спикер на BlackHat USA 2021, Топ 5 Tryhackme, #1 хакер всех времен по версии DPG Media Parool. Я прошел путь от Младшего инженера тестировщика до Руководителя отдела тестирования и мне есть чем с вами поделиться!  Этот курс делает вам вызов. Поставлена амбициозная цель: за минимальное время приступить к поиску своей первой работы в ИТ: Тестировщик ПО.\nПреимущества:\n1. Удаленная работа. Невероятное количество вакансий тестировщиков требуется на \"удаленке\". COVID-19 внес окончательный вклад в распределенные команды. Вы сможете работать из дома, что позволит вам уделить время семье.\n2. Удовольствие. \"Выберите себе работу по душе, и вам не придётся работать ни одного дня в своей жизни\" Конфуций. Я не знаю ни одной другой похожей работы делая которую вы остаетесь веселым в конце дня. Вы тестируете функциональные возможности и находите баги. Очень важно иметь промежуточные результаты!\n3. Доход. Вы будете получать от 30 до 60 тысяч рублей на старте. Это очень высокооплачиваемая и важная профессия для которой возраст не имеет значения.\nОсторожно мошенники!\nПредостерегаю вас по поводу \"сливов\" моего курса и его покупки за пределами Udemy.\nВо-первых, я ни как не отвечаю за качество и содержание таких пиратских копий. Вас могут попросту обмануть при покупке! Во-вторых, я не поддерживаю, не отвечаю на любые вопросы и не помогаю с трудоустройством и составлением резюме - это преимущество только для студентов купивших курс на Udemy! В-третьих, я публикую свои лекции в открытом доступе на моем канале в youtube! Задайте себе вопрос: зачем же вам пиратская копия!?\nКупив мой оригинальный курс вы получаете домашние задания и обратную связь по ним, что, считаю является самым главным в моем курсе: не лишайте себя смысла обучения! Самое важное: купив курс на Udemy и пройдя его до конца, вы получаете Сертификат, который с легкостью интегрируется с HeadHunter и LinkedIn, что значительно увеличивает ваши шансы на отклики от рекрутеров. Также не забывайте о бесплатном доступе к обновлениям, о которых я упоминал в Лекции 2 (речь идет о продолжении: Курс часть 2.0: TRUE QA: deep dive). На Udemy вы получаете неограниченный доступ к новым версиям и продолжению курса за который не нужно будет платить.\nОфициальная и единственная группа в ТГ: juniorqaengineer",
      "target_audience": [
        "Курс для тех кто хочет работать удаленно",
        "Люди любого возраста с желанием найти свою первую работу в ИТ",
        "Начинающие тестировщики которым наскучили онлайн курсы"
      ]
    },
    {
      "title": "Что такое Тестирование ПО? Как и куда развиваться?",
      "url": "https://www.udemy.com/course/software-testing-demo/",
      "bio": "Начальная информация о профессии и роли тестировщика.",
      "objectives": [],
      "course_content": {
        "Основной раздел": [
          "О курсе и целях курса",
          "Введение в профессию QA",
          "Качество, тестирование и цели тестирования",
          "Принципы тестирования",
          "Фундаментальный процесс разработки: SDLC",
          "Фундаментальный процесс тестирования: STLC и типы ошибок"
        ]
      },
      "requirements": [
        "Данный курс реализован в ознакомительных целях с профессией и предварительных знаний не трубует"
      ],
      "description": "Тестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.\n\n\nТестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.\n\n\nТестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.\n\n\nТестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.\n\n\nТестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.\n\n\nТестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.\n\n\nТестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nДанный курс познакомит вас с профессией тестировщик ПО. Чем отличается QA, QC и тестировщик. Какие пути развития в данной профессии.\nТипа платформ и инструментами тестирования.",
      "target_audience": [
        "Все желающие освоить новую профессию Тестировщик ПО, Manual QA Engineer, QC Engineer"
      ]
    },
    {
      "title": "Curso de Testes de Games para Iniciantes",
      "url": "https://www.udemy.com/course/curso-de-testes-de-games-para-iniciantes/",
      "bio": "Curso de Testes de Games para Iniciantes com Exemplos Práticos no Unreal Engine e Apoiado em Conceitos",
      "objectives": [
        "Riscos da Falta de Testes de Games",
        "Conceitos Principais de Testes",
        "Visão Geral de Um Engine(Motor) de Games",
        "Principais Técnicas de Testes",
        "Tipos de Ferramentas Comuns no Processo de Testes"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "Introdução",
          "Sobre o Instrutor",
          "Sobre o Teste de Games",
          "Objetivos do Aprendizado"
        ],
        "Problemas e Riscos por Falta ou Deficiência dos Testes": [
          "Exemplos de Games que Apresentaram Falhas",
          "Custo das Falhas nos Jogos",
          "Riscos, Locais e Tipos de Defeitos"
        ],
        "Visão Geral de um Engine de Jogos": [
          "Preparação do Ambiente",
          "Elementos Comuns em Um Engine de Jogos",
          "Elementos Testáveis de Game - I - Lyra",
          "Comparação Rápida Entre Elementos do Unreal e do Unity3D",
          "Elementos Testáveis de Game - II - Lyra",
          "Elementos Testáveis de Game -III - Veículos",
          "Exemplo Prático de Otimização de Performance de Game - StackOBot"
        ],
        "Conceitos Principais de Testes de Games": [
          "Conceitos Principais de Testes de Games",
          "Conceitos Adicionais"
        ],
        "Combinação de Elementos em um Jogo e Origem de Falhas": [
          "Elementos Principais que Geram Defeitos em um Jogo"
        ],
        "Criação de Testes para Jogos": [
          "Foco Técnico",
          "Foco No Design",
          "Técnicas de Testes - Partição de Equivalência",
          "Técnicas de Testes - Análise de Valores Limites",
          "Técnicas de Testes - Baseadas na Experiência",
          "Técnicas de Testes - Tabela de Decisão",
          "Técnicas de Testes - Checklist (Listas de Verificação)",
          "Técnicas de Testes - Inspeção",
          "Padrão Internacional"
        ],
        "Planejamento, Execução de Testes e Registro de Incidentes": [
          "Planejamento dos Testes",
          "Monitoramento e Controle",
          "Gerenciamento de Configuração e Versão",
          "Riscos",
          "Gerenciamento de Incidentes"
        ],
        "Ferramentas": [
          "Tipos de Ferramentas",
          "Exemplo de Ferramenta de Teste de Automação"
        ],
        "Conclusão": [
          "Conclusão"
        ],
        "Exemplo Complementar": [
          "A Importância do Relatório de Estatísticas"
        ]
      },
      "requirements": [
        "Conhecimento básicos de jogos e softwares",
        "Vontade de Aprender"
      ],
      "description": "Bem-vindos ao Curso de Testes de Games para Iniciantes!\nEste curso é destinado a todos que desejam aprender sobre testes de games, desde conceitos básicos até padrões internacionais e exemplos práticos de como os testes podem proporcionar ganhos significativos na qualidade do produto final.\n\n\nDurante o curso, você aprenderá sobre técnicas e metodologias de testes, além de serem apresentados os termos mais comuns entre diferentes engines. Com isso, você poderá se familiarizar com o vocabulário utilizado na área, o que facilitará a comunicação com outros profissionais da indústria de games.\n\n\nAo final do curso, você terá uma fundamentação sólida para seguir adiante em sua carreira de testes de games, seja em passos mais avançados na área ou para ingressar em outras áreas relacionadas ao desenvolvimento de jogos.\n\n\nAs aulas serão acompanhadas de exemplos práticos para consolidar o aprendizado e aplicá-lo em situações reais.\n\n\nAlém disso, é importante ressaltar que o conhecimento adquirido neste curso é fundamentado em padrões internacionais, o que poderá agregar muito no seu potencial para trabalhar em empresas brasileiras e também em empresas do exterior.\n\n\nA área de testes de jogos tem um potencial enorme nos próximos tempos, com o crescimento da indústria de games e a busca cada vez maior por qualidade e inovação. Portanto, investir em sua formação nesta área é uma excelente escolha para quem deseja crescer profissionalmente e se destacar no mercado.\n\n\nNão perca a oportunidade de se tornar um profissional qualificado em testes de games e se prepare para enfrentar os desafios e as oportunidades que a indústria de jogos oferece. Venha participar do nosso Curso Completo de Testes de Games para Iniciantes e comece sua jornada rumo ao sucesso na área!",
      "target_audience": [
        "Testadores",
        "Desenvolvedores de games",
        "Analistas de Testes",
        "Líderes de Testes",
        "Coordenadores de Testes",
        "Gerente de Testes",
        "Scrum Master",
        "Gerente de Desenvolvimento"
      ]
    },
    {
      "title": "Fundamentos de Testes de Software para Iniciantes (2025)",
      "url": "https://www.udemy.com/course/testes-de-software-2024/",
      "bio": "Fundamentos de Testes de Software para Iniciantes (2025)",
      "objectives": [
        "Aulas objetivas, super didáticas e simples de compreender para facilitar seu aprendizado.",
        "Aprenderá sobre Testes de Software;",
        "Aprenderá sobre Qualidade e Segurança em Testes de Software;",
        "Aprenderá sobre Estratégica em Testes de Software;",
        "Aprenderá sobre Gestão de Riscos;"
      ],
      "course_content": {
        "Apresentação da Instrutora": [
          "Apresentação da Instrutora"
        ],
        "Testes de Software": [
          "Testes de Software",
          "Atribuição",
          "Tipos de Testes de Software",
          "Gestão, Planejamento e Processos",
          "Qualidade em Testes de Software",
          "Segurança em Testes de Software",
          "Gestão de Riscos em Testes de Software",
          "Dimensões Estratégicas"
        ]
      },
      "requirements": [
        "Vontade de aprender"
      ],
      "description": "Este curso abrangente oferece uma introdução completa ao mundo dos testes de software, abordando tanto os conceitos fundamentais quanto as técnicas avançadas essenciais para garantir a qualidade do software. Projetado para desenvolvedores, testadores e profissionais de qualidade, o curso fornece uma compreensão profunda dos princípios de teste, metodologias e práticas recomendadas.\nObjetivos do Curso:\nCompreender os Fundamentos dos Testes de Software: Explorar os conceitos básicos dos testes de software, incluindo objetivos, tipos e níveis de teste. Discuta a importância dos testes para a qualidade do software e como eles se encaixam no ciclo de vida do desenvolvimento.\nAprender sobre Metodologias de Teste: Examinar diferentes metodologias de teste, como testes manuais e automatizados, testes de caixa preta e caixa branca, e testes baseados em risco. Entender quando e como aplicar cada metodologia para maximizar a eficácia.\nExplorar Testes Funcionais e Não Funcionais: Aprofundar-se em testes funcionais para verificar se o software atende aos requisitos especificados e testes não funcionais, como testes de desempenho, segurança e usabilidade, para garantir uma experiência de usuário robusta.\nGerenciar Casos de Teste e Relatar Defeitos: Aprender a criar e gerenciar casos de teste eficazes e a documentar defeitos de maneira clara e útil. Discutir estratégias para priorização de testes e gerenciamento de falhas.\nPúblico-Alvo:\nEste curso é ideal para desenvolvedores de software, testadores, engenheiros de qualidade, gerentes de projeto e qualquer pessoa interessada em aprimorar suas habilidades em testes de software. Não é necessário ter experiência prévia em testes, embora algum conhecimento básico de desenvolvimento de software possa ser útil.\n\n\nPontos de atenção:\n1. Todos os materiais utilizados nas aulas serão disponibilizados para você baixar e fazer anotações referente ao conteúdo;\n2. Se tiver dúvidas pode me enviar por mensagem aqui na plataforma que respondo em no máximo 24 horas.\nBons estudos e sucesso em sua trajetória!",
      "target_audience": [
        "Todos"
      ]
    },
    {
      "title": "Robot Framework: Testes Mobile para Android com Appium",
      "url": "https://www.udemy.com/course/robot-framework-testes-mobile-para-android-com-appium/",
      "bio": "Faça testes automatizados para dispositivos móveis Android com Appium e Robot Framework",
      "objectives": [
        "Aprenderão o básico de robot framework",
        "Aprenderão os conceitos básicos de automação de testes",
        "Conseguirão começar um projeto de testes Mobile do zero",
        "Conseguirão configurar o setup para computadores Windows"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Projeto desenvolvido em aula",
          "Tire suas dúvidas e participe da comunidade"
        ],
        "Instalação": [
          "Introdução a instalação",
          "Instalação do Java",
          "Instalação Python",
          "Instalação Appium Inspector",
          "Instalação Node.js",
          "Configuração de variáveis de ambiente e uso do Appim Doctor",
          "Instalação do Appium no projeto",
          "Configuração das Capabilities e primeira execução",
          "Aprendendo a utilizar o Appium Inspector",
          "Extensões do VS Code"
        ],
        "Nivelamento Robot Framework": [
          "Nivelamento"
        ],
        "Projeto Sauce Labs New App": [
          "Criando uma sessão para acessar o app com o Robot Framework",
          "Adequando primeiros testes em Keywords",
          "Criando primeiro teste de login com sucesso",
          "Criando teste de login incorreto",
          "Reorganizando testes de Login",
          "Resolução de exercício proposto: Login",
          "Utilizando Swipe",
          "Resolução desafio: Swipe",
          "Conhecendo processo de checkout do aplicativo",
          "Checkout - Parte 1: Adicionar Produto",
          "Checkout - Parte 2: Conferir carrinho",
          "Checkout - Parte 3: Prosseguir checkout - usuário",
          "Checkout - Parte 4: Prosseguir checkout - pagamento",
          "Checkout - Parte 5: Conferir e concluir compra",
          "Checkout - Parte 6: Ajustando Keywords"
        ],
        "Projeto Sauce Labs Old App": [
          "Projeto usando App antigo"
        ],
        "Integração Contínua para mobile": [
          "Introdução ao CI para Mobile"
        ],
        "Considerações Finais": [
          "Encerramento"
        ],
        "Bônus": [
          "Aula Bônus - confira!"
        ]
      },
      "requirements": [
        "Entendimento básico de lógica de programção",
        "Ter noção sobre teste de software",
        "Conhecimento básico de robot framework"
      ],
      "description": "O curso Robot Framework: Testes Mobile para Android com Appium proporciona uma introdução abrangente e uma base sólida aos testes automatizados em dispositivos móveis Android utilizando Robot Framework e a biblioteca Appium, cobrindo desde os conhecimentos fundamentais de testes automatizados com Robot Framework aos conhecimentos específicos para utilização da biblioteca em questão:\nNivelamento do Robot Framework\nEstrutura de arquivos .robot e .resource\nEntendimento das estruturas de Setup e Teardown\nProcesso de instalação completo do ambiente de testes\nPrincipais keywords para testes mobiles\nExecução de ação de Swipe\nUtilização do Appium Inspector\nO foco do curso é a preparação do ambiente e de testes em dispositivos móveis Android, no entanto será feito um rápido nivelamento sobre informações importantes que precisamos ter conhecimento do Robot Framework. Desta forma, também utilizaremos a biblioteca fundamental do Robot Framework, BuiltIn, a qual fornece diversas Keywords importantes para manipulação dos testes.\nCom o curso Robot Framework: Testes Mobile para Android com Appium, espero que os alunos consigam fazer um nivelamento rápido sobre a ferramenta Robot Framework, obtenham conhecimento necessário teórico e prático para configuração seu próprio setup e também obtenham um sólido conhecimento da execução de testes em dispositivos móveis Android com Robot Framework e Appium.",
      "target_audience": [
        "QAs que estão começando a aprender automação de testes",
        "QAs que já sabem automação de testes mas não conhecem a ferramenta",
        "QAs que já utilizar a ferramenta mas não dominam testes mobile"
      ]
    },
    {
      "title": "Curso completo de automatización con UFT One v15",
      "url": "https://www.udemy.com/course/curso-completo-uft-one/",
      "bio": "Iníciate en automatización. Aprende a desarrollar pruebas automáticas en la herramienta de Micro Focus UFT",
      "objectives": [
        "Aprenderás los fundamentos de visual basic script (VBScript)",
        "UFT Básico (Instalación y uso de la herramienta. Creación scripts y manejo de objetos)",
        "UFT Medio (Funciones, control de ejecución, manejo de datos y reporting)",
        "UFT Avanzado (Funciones avanzadas e intregación con otras herramientas)",
        "UFT Mobile (Aprende a realizar pruebas en dispositivos móviles)"
      ],
      "course_content": {
        "Introducción": [
          "Contenido",
          "Introducción",
          "¿Qué es UFT? UFT y Selenium",
          "Versiones UFT",
          "Descarga de UFT One",
          "Instalación de UFT One",
          "Add-ins",
          "UFT One Help Center"
        ],
        "Versiones UFT": [
          "UFT One v15.0.1",
          "UFT One v15.0.2"
        ],
        "UFT Básico": [
          "Introducción UFT Básico",
          "Creación de test. Conociendo la herramienta",
          "Modo grabación. Grabamos el primer script",
          "Objetos I - Introducción y estructura",
          "Objetos II - Captura y uso del agente",
          "Objetos III - Operaciones",
          "Objetos IV - Smart Identification e Insight Object",
          "Acciones",
          "SystemUtil y SetSecure",
          "Checkpoints",
          "Repaso UFT Básico",
          "Ejercicio Práctica UFT Básico"
        ],
        "Visual Basic Script (VBScript)": [
          "Introducción VBScript",
          "Primeros pasos. Variables y constantes",
          "Tipos de datos",
          "Operadores aritméticos y relacionales",
          "Operadores lógicos",
          "Estructuras de control - IF, ELSEIF Y ELSE",
          "Estructuras de control - CASE",
          "Estructuras de control - FOR",
          "Estructuras de control - WHILE WEND",
          "Estructuras de control - DO LOOP",
          "Arrays",
          "Funciones y subrutinas",
          "Funciones VBS",
          "Control de errores",
          "Ejercicio Práctica 1",
          "Ejercicio Práctica 2"
        ],
        "UFT Medio-Avanzado": [
          "Introducción UFT Medio",
          "Objetos I - Exportar, asociar, comparar y unir repositorios",
          "Librerías",
          "Exportar e Importar proyectos UFT con dependencias",
          "Debug, breakpoints y análisis en ejecución",
          "Objetos II - Funciones y acciones",
          "Actions, iteraciones y parámetros",
          "Control de ejecución y Run Results Viewer",
          "Manejo de datos I",
          "Manejo de datos II",
          "Estructura, organización y rutas",
          "Programación descriptiva",
          "Funciones I - Navegadores",
          "Funciones I - Navegadores II",
          "Funciones II - Objetos",
          "Funciones III - Ficheros",
          "Ejercicio Práctica UFT Medio-Avanzado",
          "Repaso Práctica UFT Medio-Avanzado"
        ],
        "UFT Avanzado, Integración y Utilidades": [
          "Introducción UFT Avanzado",
          "Expresiones regulares",
          "Integración con GIT",
          "Ejecución de pruebas",
          "Integración con Jenkins",
          "Integración con SQL Server",
          "Escenarios de recuperación",
          "Excel"
        ],
        "UFT Mobile": [
          "UFT Mobile Center y UFT Mobile Add In",
          "Instalación servicio UFT Mobile Add In",
          "Crear Dispositivo Virtual Android (AVD)",
          "Configuración dispositivo android real",
          "Grabación",
          "Captura de objetos y agente",
          "Objetos I",
          "Objetos II",
          "Funciones I",
          "Funciones II",
          "Datos",
          "Ejecución"
        ],
        "Despedida y agradecimientos": [
          "Despedida y agradecimientos"
        ]
      },
      "requirements": [
        "Tener ganas de aprender",
        "Dedicación",
        "Disponer de un PC (Windows) con capacidad para instalar la herramienta",
        "No dudar en preguntar",
        "Opcional: Tener conocimiento en testing manual"
      ],
      "description": "¿Quieres aprender automatización? ¿Quieres impulsar tu carrera profesional?\nEste es tu curso.\nAprende desde lo más básico hasta un nivel avanzado de la herramienta de automatización más potente del mercado.\n¿No tienes ningún conocimiento de programación? No te preocupes. En este curso comenzaremos desde lo más básico con el lenguaje de programación de Visual Basic Script.\n\n\nNo solo aprenderás a utilizar la herramienta, mis objetivos son los siguientes:\nAprender los fundamentos de Visual Basic Script (VBScript) con los que no solo le podrás dar un uso más avanzado a la herramienta, sino que te servirá para adquirir los conocimientos de este lenguaje de programación\nAprenderás a utilizar Unified Functional Testing desde el principio hasta ser un experto con la herramienta.\nRealizarás pruebas en dispositivos móviles con el add in de UFT Mobile.\nSer capaz de desarrollar unas pruebas de regresión sólidas para que puedas aplicarlas profesionalmente.\nAprenderás a integrar UFT con otras herramientas: GIT, Jenkins, SQL Server\nAprenderemos sobre expresiones regulares, utilización de datos, escenarios de recuperación y muchas cosas más.\nAdquirir capacidad de análisis y la capacidad de solventar cualquier problema que nos encontremos.\nSe realizarán continuas actualizaciones con las nuevas versiones de UFT que vayan saliendo. Se harán reviews de estas versiones, comentando los cambios y probando todo lo nuevo que incorporen.\nAdemás de todo esto, el curso sigue en continua actualización y crecimiento, siguiendo un programa en base a las necesidades de los estudiantes:\nVersiones UFT (realizado)\nAutomatización UFT Mobile (realizado)\nAutomatización de API's con UFT (Próximamente)\nGeneración de informe de resultados\nPreparación y montaje de entornos de prueba.\nIntegración de UFT con SVN\nIntegración GIT-Jenkins\nCreación de nodos y master en Jenkins\nEjecución de pruebas crossbrowser en nodos Jenkins\nSQL Avanzado\n¿Te parece interesante el reto?\nPues vamos allá.",
      "target_audience": [
        "Todas las personas interesadas en automatización a nivel profesional",
        "Todas las personas interesadas en pruebas de regresión automáticas",
        "QA manuales que quieran aprender a desarrollar test automáticos"
      ]
    },
    {
      "title": "Selenium Webdriver con JAVA: Aprende Automatizacion I",
      "url": "https://www.udemy.com/course/selenium-webdriver-con-java-aprende-automatizacion-i/",
      "bio": "Guia Practica para Comenzar a utlizar la libreria Selenium con Java",
      "objectives": [
        "Automatizacion de Pruebas",
        "Selenium con Java",
        "Introducción a la programación Orientada a Objetos",
        "TestNG",
        "Page Object Model",
        "Data Driven Testing",
        "Waits",
        "Como trabajar con elementos de JQuery y automatizarlos"
      ],
      "course_content": {
        "Introducción al curso y contenido": [
          "Introducción",
          "Lo que vamos y lo que no vamos a abarcar en este curso",
          "Material de Inicio necesario para completar este curso"
        ],
        "Selenium Webdriver con Java": [
          "Introducción a la sección",
          "Hablemos de Java",
          "Descargando JAVA JDK 8 e Instalación",
          "Configurando el JAVA path",
          "Descargando Eclipse y las razones de usar este IDE",
          "SOLO MAC: Configurando el JAVA path",
          "Creando el primer proyecto con eclipse",
          "Selenium, descargando la libreria",
          "Importando librerias al proyecto",
          "Descargando e importando los drivers para el navegador",
          "Creando y corriendo el primer código",
          "Algunos consejos finales"
        ],
        "Configuracion de los ambientes de trabajo": [
          "Introducción a la sección",
          "Creando un nuevo proyecto",
          "Creando el codigo en Firefox",
          "Codigos para Iniciar con otros navegadores",
          "Para configurar un nuevo ambiente",
          "Algunos consejos finales de la sección",
          "Configura tus propios drivers"
        ],
        "Identificando Objetos en la Interfaz": [
          "Introduccion a la sección",
          "¿Qué es inspeccionar objetos?",
          "¿Qué son los Id, Estilos y otros componentes?",
          "Selectors Hubs",
          "La diferencia entre usar Full Xpath y Xpath",
          "Consejos y Sugerencias Finales"
        ],
        "A qué se le llama Programación Orientada a Objetos": [
          "Introducción a la sección",
          "Introduccion al POO",
          "¿Qué es una Clase?",
          "¿Qué es un atributo?",
          "¿Qué es un método?",
          "Instanciando objetos y su importancia para trabajar con Selenium",
          "Sugerencias y comentarios finales de la sección"
        ],
        "Navegadores y SeleniumWebdriver": [
          "Introducción a la Sección",
          "IMPORTANTE: Recuerda revisar tu código",
          "Creando el proyecto: GetURL, GetTitle",
          "Navegacion en las páginas: Atrás, Adelante y Actualizar",
          "La clase \"Actions\": Mouse Over",
          "Abriendo Nuevas Ventanas",
          "Consejos Finales de la Sección"
        ],
        "Tecnicas para automatizar elementos": [
          "Introducción a la sección",
          "Automatizando Listas Estáticas",
          "Desactivando Notificaciones del Navegador",
          "Automatizando Listas Dinámicas",
          "TestNg para las primeras validaciones",
          "Automatizando Listas Dependientes",
          "Radio Buttons y CheckBoxes",
          "Ventanas Emergentes y Alertas"
        ],
        "Practicando un poco con Pruebas de End To End": [
          "Haciendo \"Debug\" a nuestro codigo",
          "001 Agregar Productos al carrito",
          "002 Borrar Elementos del carrito de compras",
          "003 Verificar el carrito de compras",
          "004 Verificar que los productos están cargando correctamente"
        ],
        "Generando Reportes con TestNG": [
          "Introduccion a la sección",
          "Introducción a TestNG - ¿De qué va el framework?",
          "Instalando TestNG",
          "Empezando el proyecto con anotaciones @BeforeClass, @AfterClass y @Test",
          "Anotaciones @BeforeSuite, @AfterSuite y el archivo XML",
          "Anotaciones @BeforeMethod y @AfterMethod",
          "Anotaciones @BeforeTest y @AfterTest",
          "Editando un poco el archivo XML y el parámetro dependsOnMethods",
          "El parametro \"enabled\" y excluyendo e Incluyendo Metódos desde el archivo XML",
          "Creando Grupos en tu set de pruebas y corriendolos",
          "Enviando parámetros desde tu archivo XML",
          "Trabajando con Datas desde un Objeto (@DataProvider)",
          "Chequeando los reportes de TestNG",
          "Recursos de la sección"
        ],
        "Automatizando llamadas en Ajax, ventanas y iframes": [
          "Introduccion a la sección",
          "Conversemos un poco de Ajax, Jquery y los Usuarios Finales",
          "Trabajando con Iframes",
          "Implicit Wait",
          "Explicit Wait",
          "Fluent Wait y cuál es la diferencia con el resto de los waits",
          "Conclusiones",
          "Direccion URL del repositorio de automatizaciones"
        ]
      },
      "requirements": [
        "Tener Conocimientos Basicos de QA"
      ],
      "description": "Este curso esta creado con la intención de brindarte las herramientas adecuadas para las pruebas de páginas web. Dadas las grandes oportunidades que existen en el mercado de la industria del desarrollo del software y las aplicaciones.\nPara este curso espero que domines la mayoría de los conceptos de pruebas de software y durante el desarrollo del mismo trabajaremos con ejemplos prácticos de pruebas automatizadas para SeleniumLibrary de JAVA.\nPasaremos por la concpetos basicos de progreamacion, un poco de historia sobre JAVA y como trabajar con este lenguaje. Ademas explicaremos las razones de trabajar con la version 8 del sistema y las implicaciones de usar versiones mas actuales.\nTambien veremos la instalacion en Windows y Mac, primeros casos de pruebas, POO y finalmente hacer reportes con TestNG.\nLa idea principal de todo el programa es que tengas los conocimientos necesarios para empezar a crear tu propio codigo de automatización y que puedas a partir del analisis de los casos de prueba crear tus propias codigos para correr E2E con los datos de cada caso.\nFinalmente en el caso de TestNG hablaremos de los annotations y la importancia de los reportes y los frameworks, adicionalmente a que puedas generar también reportes automatizados junto al framework.\nTambién seguiremos un Proyecto bajo la Aruitectura de Page Object Model, y reharemos un poryecto bajo este patrón.\nEn las últimas clases vamos a crear un archivo para leer datos desde un archivo externo CSV",
      "target_audience": [
        "Ingenieros de Pruebas",
        "Testers"
      ]
    },
    {
      "title": "Docker com Linux para QAs",
      "url": "https://www.udemy.com/course/docker-para-qas/",
      "bio": "Alcance o próximo nível ao compreender o que são contêineres e descubra como eles podem transformar sua rotina como QA",
      "objectives": [],
      "course_content": {
        "Introdução": [
          "Boas vindas ao Docker para QAs",
          "Meu canal no Telegram *",
          "Diferença de entre Docker e Máquinas virtuais",
          "O Docker funciona no Windows?"
        ],
        "Instalação e Configuração": [
          "Instalando o Virtual Box no Windows",
          "Instalando o Linux Ubuntu",
          "Instalando o Docker Engine"
        ],
        "Iniciando com Docker": [
          "Comandos Iniciais do Docker",
          "Executando o container do Nginx",
          "Trabalhando dentro do container",
          "Compartilhando volumes",
          "Ambiente de produção do Clone do Spotify",
          "Ambiente de testes em containers",
          "Customizando o nome do container",
          "Encerrando ao construir uma imagem customizada"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Compreensão básica do uso do terminal e da linha de comando",
        "Ter um computador com Windows 10 ou superior, macOS ou Linux"
      ],
      "description": "Descubra como o Docker está revolucionando a forma como os aplicativos são desenvolvidos, testados e implantados neste curso dedicado a QAs. O Docker oferece uma solução prática para empacotar aplicativos e suas dependências em contêineres isolados, simplificando significativamente o ciclo de desenvolvimento, teste e implantação.\nProjetado especificamente para QAs, este curso é acessível mesmo para aqueles sem experiência anterior com Docker. Você será guiado desde os conceitos fundamentais dos contêineres até habilidades práticas de criação, execução e gerenciamento de contêineres Docker. Utilizando atividades práticas e cenários reais, você aprenderá a trabalhar efetivamente com contêineres usando os comandos do Docker CLI em seu ambiente de desenvolvimento.\nPré-requisitos mínimos incluem pelo menos 6 meses de experiência em testes de software e uma compreensão básica do uso do terminal e da linha de comando. Não é necessária experiência anterior em Docker. Tudo o que você precisa é de um computador com Windows 10 ou superior, macOS ou Linux.\nDê o próximo passo em sua carreira e aprofunde seus conhecimentos em Docker conosco. Junte-se à nossa primeira aula e comece a transformar sua abordagem para o teste de software hoje mesmo!\nAlcance o próximo nível ao compreender o que são contêineres e descubra como eles podem transformar sua rotina como QA",
      "target_audience": [
        "Analistas de Testes de Software",
        "Analistas de Qualidade"
      ]
    },
    {
      "title": "Wprowadzenie do testowania dla programistów .net",
      "url": "https://www.udemy.com/course/wprowadzenie-do-testowania-dla-programistow-net/",
      "bio": "Jak upewnić się że działa tak jak powinno, w kilku odsłonach",
      "objectives": [
        "Czy są testy i jaką wartość wnoszą do projektu",
        "Co warto testować",
        "Tworzenia testów jednostkowych",
        "Tworzenia testów integracyjnych",
        "Tworzenia testów automatycznych",
        "Badania pokrycia kodu testami",
        "Uruchamiania testów pod różnymi środowiskami",
        "Jak bezpiecznie refaktoryzować kod",
        "Jak testować zależności systemowe",
        "Jakie są popularne biblioteki do testowania i jak szukać innych"
      ],
      "course_content": {},
      "requirements": [
        "Podstawowa znajomość programowania",
        "Znajomość języka C# mile widziana, wystarczy znajomość jakiegokolwiek OOP"
      ],
      "description": "Potrafisz już programować - świetnie. Chcesz się mieć pewność, że to co napisałeś działa poprawnie i jest gotowe na wszystkie przypadki? Świetnie! A może chcesz się upewnić, że wszystkie twoje klasy dobrze się komunikują? Świetnie i fantastycznie. Masz już aplikację i zamierzasz ją refaktoryzować - najświetniej na świecie.\nNa kursie opowiadam i pokazuję jak tworzyć testy jednostkowe, testy systemowe oraz testy automatyczne - jak je uruchomić\nOmawiam różne podejścia do tworzenia testu. Pokazuje jak uruchomić testy przy wykorzystaniu Visual Studio, JetBrains R#, Vistual Studio Code czy z linii poleceń.\nDowiesz się jak sprawdzić pokrycie kodu przez testy, bez konieczności posiadania drogich narzędzi i wygenerować ładne raporty z informacjami o stanie aplikacji.\nNa koniec przeprowadzam refaktoryzacje pod czujnym okiem testów, dzięki czemu mogę dowolnie zmieniać kod, bez obaw że wprowadze niechciane zmiany w kodzie.\nNa sam koniec podrzucam kilka dodatkowych narzędzi, którymi można zainteresować się w wolnym czasie.",
      "target_audience": [
        "Początkujący programiści",
        "Programiści zainteresowani tworzeniem testów jednostkowych",
        "Testerzy, chcący tworzyć testy"
      ]
    },
    {
      "title": "Noções Básicas de Automação de Testes para Mobile",
      "url": "https://www.udemy.com/course/automacao-de-testes-para-mobile/",
      "bio": "Utilizando Robot Framework + Appium",
      "objectives": [
        "Configurar Robot Framework",
        "Configurar emuladores android",
        "Configurar APPIUM",
        "Exemplo de um teste automatizado para android com emulador"
      ],
      "course_content": {},
      "requirements": [
        "Informática Básica"
      ],
      "description": "Esse curso irá mostrar como iniciar na automação de testes para mobile utilizando as ferramentas Robot Framework, APPIUM e Genymotion será mostrado detalhadamente as instalações. O objetivo desse curso é mostrar noções básicas para começar uma automação mobile e também como configurar o ambiente para testes mobile usando essas 3 ferramentas citadas. O curso disponibiliza manuais e exemplos completos para seus estudos.",
      "target_audience": [
        "Analistas de testes automatizados",
        "Desenvolvedores"
      ]
    },
    {
      "title": "Sıfırdan C# Selenium Bot Otomasyon Programlama",
      "url": "https://www.udemy.com/course/sifirdan-csharp-selenium-bot-programlama/",
      "bio": "Selenium Bot Programlama",
      "objectives": [
        "C# Selenium Bot Programlama",
        "C# Selenium Hesap Oluşturma",
        "C# Selenium Otomatik Giriş",
        "C# Selenium Web Site Giriş",
        "C# Selenium Proxy Kullanım",
        "C# Selenium Otomatik Eklenti Kurulumu",
        "C# Selenium ile javascript kodlarını öğrenecektir"
      ],
      "course_content": {
        "C# Selenium Bot Geliştirme Eğitim Seti Tanıtım.": [
          "Selenium Nedir ve Projemize Nasıl Dahil Edebiliriz.",
          "C# Selenium Web Sitesini Açma"
        ],
        "C# Selenium Bot Geliştirme Eğitim Seti Projeler ile Bot yapımı": [
          "C# Projemize Selenium Eklenmesi Detaylı Anlatım.",
          "C# Selenium Kapatma(Sonlandırma)",
          "C# Selenium Web Tarayıcıyısın Sorunsuz Gizleme",
          "Selenium #selectorshub Kurulumu ve Otomatik Xpath Alma | #Selenium Eğitim Seti",
          "C# Selenium Kullanırken Kasmasını Önleme",
          "C# Selenium Çalışırken-ki Console Ekranını Gizleme",
          "C# Selenium ile Web Sitelerine Ulaşma",
          "C# Selenium (HTTP,HTTPS,SOCKS 4,SOCKS 5) Proxy Kullanımı.",
          "C# Selenium Eklenti ile Proxy Kullanımı",
          "C# Selenium ile Web Sitelere Kayıt Olma",
          "C# Selenium ile Web Sitelere Login Girişi Yapma",
          "C# Selenium Web Siteden Veri Çekme",
          "C# Selenium Web Siteden Resim İndirme",
          "C# Selenium Web Siteye Video Yükleme",
          "C# Selenium Web Sitedeki Select Options Seçme",
          "C# Selenium JavaScript Kullanımı",
          "C# Selenium Normal Tarayıcı Bilgilerini Kullanma",
          "C# Selenium Chrome otomatik yazılım tarafından kontrol ediliyor yazısını gizleme",
          "C# Selenium Mous Hover(Üstüne Geldiğin'de) Kullanımı",
          "C# Selenium Javascript Element Silme",
          "C# Selenium JavaScript Kullanımı ve Link Çekme",
          "C# Selenium Html Element Ekleme(İnner Html)",
          "C# Selenium Html Element Ekleme(Direk Ekleme)",
          "C# Selenium (İleri,Geri,Yenile Özellikleri)",
          "C# Selenium İframe İçerisinde İşlem Yapma",
          "C# Selenium Sürükle Bırak İşlemi"
        ],
        "Sıfırdan C# Selenium Bot Programlama Veri Çekme": [
          "C# Selenium Veri Çekme Botu Giriş bölümü",
          "C# Selenium Veri Çekme Botu Link Toplama Bölümü",
          "C# Selenium Veri Çekme Botu Link Konu Toplama Bölümü",
          "C# Selenium Veri Çekme Botu Bitiş Bölümü(Makaleleri Görme)",
          "İnstagram Yorum Çekme",
          "Selenium Veri Çekme Örneği",
          "Yeni Metodların Tanıtımı(FindElementsByClassName vb.)",
          "C# Selenium(FindElementByClassName ve FindElementsByClassName) Kullanımı",
          "C# Selenium (FindElementByXPath ve FindElementsByXPath) Kullanımı",
          "C# Selenium (FindElementByCssSelector ve FindElementsByCssSelector) Kullanımı"
        ]
      },
      "requirements": [
        "C# Programlama Dili Bilinmesi Lazım"
      ],
      "description": "Selamlar dostlar bu kursumuz sizlere c# dili kullanarak Selenium yapısını nasıl kullanabileceğinizi en verimli bir şekilde gösterecektir.\naynı zamanda kursumuz ile Selenium yapısını kullanarak nasıl Web sitelere Botların yazılacağı Detaylı ve örnekler ile sizlere anlattım.\nBu  Eğitim setini bitirdikten sonra rahatlıkla bir Web siteye bot yazabileceksiniz.\nAyrıca Eğitim'de yapılan örnekileri Githup Adresimizden indirebilirsiniz.\nAynı zaman'da bu eğitim seti sizlere Web Bot programlamanın kapısını açacaktır.\nKursumuz ile Seleinum yapısını kullanarak nasıl Web sitelere Botların yazılacağı Detaylı ve örnekler ile sizlere anlatmaytayız.\nBu  Eğitim Setinizi bitirdikten sonra rahatlıkla bir Web site Botu yazabileceksiniz. Ayrıca Eğitim'de yapılan örnekileri Githup Adresimizden indirebilirsiniz.\nAynı zaman'da bu eğitim seti sizlere Web Bot programlamanın kapısını açacaktır.\n\n\nSelamlar dostlar bu kursumuz sizlere c# dili kullanarak Selenium yapısını nasıl kullanabileceğinizi en verimli bir şekilde gösterecektir.\naynı zamanda kursumuz ile Selenium yapısını kullanarak nasıl Web sitelere Botların yazılacağı Detaylı ve örnekler ile sizlere anlattım.\nBu  Eğitim setini bitirdikten sonra rahatlıkla bir Web siteye bot yazabileceksiniz.\nAyrıca Eğitim'de yapılan örnekileri Githup Adresimizden indirebilirsiniz.\nAynı zaman'da bu eğitim seti sizlere Web Bot programlamanın kapısını açacaktır.\nKursumuz ile Seleinum yapısını kullanarak nasıl Web sitelere Botların yazılacağı Detaylı ve örnekler ile sizlere anlatmaytayız.\nBu  Eğitim Setinizi bitirdikten sonra rahatlıkla bir Web site Botu yazabileceksiniz. Ayrıca Eğitim'de yapılan örnekileri Githup Adresimizden indirebilirsiniz.\nAynı zaman'da bu eğitim seti sizlere Web Bot programlamanın kapısını açacaktır.",
      "target_audience": [
        "C# Programlama",
        "Bot Programlama",
        "C# bilen herkez",
        "javaScript ile yapmak isteyenler"
      ]
    },
    {
      "title": "Produtividade de Testes de Software com Uso do ChatGPT",
      "url": "https://www.udemy.com/course/produtividade-de-testes-de-software-com-uso-da-ia/",
      "bio": "Produtividade de Testes de Software com Uso da Inteligência Artificial com o ChatGPT",
      "objectives": [
        "As vantagens da utilização do ChatGPT para aumentar a produtividade nas atividades de testes de software",
        "Uso da Linguagem Natural no Uso da Inteligência Artificial na Verificação e Análise na Área de Testes",
        "Cuidados que precisam ser tomados ao utilizar a ferramenta de IA para garantir resultados confiáveis e precisos",
        "Código de ética importante na utilização da ferramenta de IA, destacando a importância de seguir práticas éticas e responsáveis ao trabalhar com dados sensíveis"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Objetivos do Curso/Sobre o Instrutor",
          "Adoção da Inteligência Artificial",
          "Aviso",
          "Demonstrações de Usos diversos da IA - Parte 1",
          "Demonstrações de Usos diversos da IA - Parte 2",
          "Machine Learning vs Deep Learning",
          "Conceitos"
        ],
        "Aplicações Práticas da Inteligência Artificial (ChatGPT)": [
          "Introdução",
          "Histórias de Usuário",
          "Verificação de Código",
          "Apoio na Escrita de Casos de Testes",
          "Otimização de Incidentes e Comunicação",
          "Obtenção de Dados de Testes"
        ],
        "Considerações Éticas": [
          "Considerações Éticas"
        ],
        "Conclusão": [
          "Conclusão"
        ]
      },
      "requirements": [
        "Conhecimentos Básicos de Ciclo de Vida do Software e de Testes de Software",
        "Vontade de Aprender"
      ],
      "description": "Seja bem-vindo ao meu curso sobre as vantagens da utilização do ChatGPT na aumento da produtividade nas atividades de Testes de Software. Nesse curso, você irá descobrir como o ChatGPT pode ser uma ferramenta poderosa para acelerar e melhorar o processo de testes de software, tornando-o mais eficiente e preciso. Você verá que é possível executar muitas tarefas que antes não eram possíveis ou eram muito difíceis de serem executadas por uma ferramenta.\n\n\nVamos explorar os benefícios que o ChatGPT oferece, como a automatização de tarefas repetitivas, a geração de relatórios mais precisos e o aumento da velocidade de verificao de artefatos. Além disso, abordaremos os cuidados que precisam ser tomados ao utilizar a ferramenta, garantindo que os resultados obtidos sejam confiáveis e precisos.\n\n\nAlém de ser uma ferramenta valiosa para aprimorar as atividades de testes de software, o ChatGPT também pode ser usado para melhorar a comunicação entre os envolvidos no processo. Com sua capacidade de analisar textos, o ChatGPT é capaz de identificar pontos de melhoria na comunicação e sugerir ajustes para torná-la mais efetiva.\n\n\nNo final do curso, discutiremos um código de ética importante na utilização desta ferramenta, destacando a importância de seguir práticas éticas e responsáveis ao trabalhar com dados sensíveis e confidenciais.\n\n\nHora de aprender mais sobre as vantagens do uso do ChatGPT em Testes de Software! Vamos começar.",
      "target_audience": [
        "Analista de Testes",
        "Testadores",
        "Gerentes de Testes",
        "Coordenadores de Testes",
        "Desenvolvedores de Sistemas",
        "Líderes de Testes"
      ]
    },
    {
      "title": "Тестирование программного обеспечения",
      "url": "https://www.udemy.com/course/software-testing-fundamentals/",
      "bio": "Базовый курс для QA специалистов и тех, кто хочет начать свою карьеру в тестировании ПО",
      "objectives": [
        "Основы тестирования программного обеспечения",
        "Оценка времени и трудозатрат на тестирование",
        "Процесс разработки и тестирования ПО а так же его участники",
        "Составление резюме и подготовка к собеседованию",
        "Ожидания от специалиста по тестированю, его качества и навыки",
        "Команда Quality Assurance - артефакты и методы ее работы",
        "Метрики и показатели програмного продукта и процесса тестирования",
        "Как стать тестировщиком с нуля",
        "Как пройти собеседование на роль специалиста по тестированию",
        "Составление списка тестовых проверок и оформление дефектов"
      ],
      "course_content": {
        "Введение": [
          "Обзор и задачи курса"
        ],
        "Раздел 2: Базовые понятия тестирования": [
          "Что такое тестирование ПО",
          "QA, QC и тестирование ПО",
          "Виды и типы тестирования",
          "Объект и базис для тестирования",
          "Что такое дефект",
          "Тестирование и Отладка ПО"
        ],
        "Раздел 3: Процесс разработки и тестирования ПО": [
          "Основные этапы разработки ПО",
          "Этапы и участники тестирования",
          "Модели разработки ПО",
          "Тестирование в разных моделях",
          "Среды разработки и тестирования"
        ],
        "Работа со сценариями тестирования и дефектами": [
          "Сценарии тестирования",
          "Шаблон тестового кейса",
          "Описание и шаблон дефекта",
          "Важность и срочность дефекта",
          "Жизненный цикл дефекта"
        ],
        "Раздел 5: Работа команды тестирования": [
          "Инструменты тестирования ПО",
          "Оценка времени на тестирование",
          "Пример оценки времени",
          "Артефакты и документы QA",
          "Заказчики для команды QA",
          "Финальные этапы тестирования",
          "Как провести успешное UAT",
          "Самые важные метрики QA"
        ],
        "Раздел 6: Карьера и развитие в QA": [
          "Важные Качества тестировщика",
          "Требования к тестировщику ПО",
          "Прохождение собеседования",
          "Подготовка резюме",
          "Развитие в QA"
        ],
        "Раздел 7: Заключение": [
          "Главные принципы тестирования",
          "Когда выполнять тестирование",
          "Заключение"
        ],
        "Практические задания": [
          "Задание 1: План тестирования",
          "Задание 2: Список тестов",
          "Задание 3: Тестирование и дефекты",
          "Задание 4: Работа с участниками UAT",
          "Задание 5: Подготовка резюме"
        ]
      },
      "requirements": [
        "Наличие компьютера и доступа в Интернет"
      ],
      "description": "Данный курс о том, как стать тестировщиком ПО и начать свою карьеру в ИТ в сфере Quality Assurance. Однако, он будет полезен не только новичкам, но и более опытным специалистам, чтобы структурировать и углубить компетенции в сфере QA\nВ этом тренинге мы вместе пройдем путь от самых основ тестирования программного обеспечения, до составления резюме и подготовки к собеседованию.\nВ рамках данного курса мы разберем что из себя представляет процесс разработки программных решений, что такое жизненный цикл ПО и какое место в нем занимает тестирование. Далее мы пройдем по всем аспектам QA и подробно рассмотрим: что такое тестирование, какие виды и типы тестирования бывают, какие инструменты и артефакты потребуются для контроля и обеспечения качества продукта. Разберемся, что такое качество, как оно обеспечивается и какую роль в этом играет тестировщик. В этом тренинге будет разобран процесс работы команды QA. Мы определимся, кто является заказчиками процесса тетирования и какие у них ожидания от работы QA. Также вас ожидает ряд практических заданий, которые помогут выработать и закрепить навыки необходимые тестировщику: оформление дефектов, разработка тестовых сценариев, оценка времени на выполнение задач.\nФинальные этапы курса позволят собрать воедино все знания и навыки и грамотно подготовиться к собеседованию.\nВ итоге вы научитесь:\n1. Составлять план тестирования и создавать сценарии проверок\n2. Находить и описывать проблемы ПО\n3. Оценивать время и трудозатраты\n4. Анализировать бизнес требования и контролировать их реализацию\n5. Составлять профессиональное резюме и проходить интервью",
      "target_audience": [
        "Начинающие специалисты по тестированию и QA",
        "Желающие начать свою карьеру в ИТ с нуля в рамках тестирования ПО",
        "Тестировщики и QA специалисты, желающие структурировать свои знания и наметить пути дальнейшего развития",
        "Желающие подготовиться к собеседованию на роль специалиста по тестированию",
        "Все, кто хочет больше узнать как устроены процесс Quality Assurance и тестирование ПО"
      ]
    },
    {
      "title": "JMETER - Teste de Performance de aplicações Web",
      "url": "https://www.udemy.com/course/jmeter-teste-de-performance-de-aplicacoes-web/",
      "bio": "Você vai aprender a criar e executar Testes de Performance em aplicações Web usando o JMeter.",
      "objectives": [
        "Elaborar testes de performance para aplicações Web",
        "Utilizar os principais recursos da ferramenta JMeter",
        "Identificar gargalos de uma aplicação Web"
      ],
      "course_content": {
        "Introdução": [
          "Performance de uma aplicação Web",
          "JMeter - Instalação",
          "Primeiro Teste",
          "Digital Toys - Projeto exemplo (Instalação)"
        ],
        "Plano de Teste": [
          "Thread group",
          "Sampler - HTTP Request",
          "Listener",
          "HTTP Defaults",
          "Variáveis"
        ],
        "Desafio": [
          "Exercício - Desafio",
          "Exercício - Solução"
        ],
        "Parametrização": [
          "Parametrização com Arquivo CSV",
          "Cookie manager"
        ],
        "Temporizadores": [
          "Constant Timer",
          "Random Timer"
        ],
        "Controladores lógicos": [
          "Simple controller",
          "Loop controller",
          "Interleave controller",
          "Runtime controller",
          "Include controller"
        ],
        "Geração automática de Teste": [
          "HTTP Test Script Recorder"
        ],
        "Plugins": [
          "Plugin Manager",
          "Instalando um plugin",
          "Perfmon"
        ],
        "JMeter - Linha de comando": [
          "JMeter pela linha de comando"
        ],
        "Conclusão": [
          "Conclusão"
        ]
      },
      "requirements": [
        "Noções básicas de Web"
      ],
      "description": "Aprenda o que é um teste de performance\nAprenda a construir e executar testes de performance utilizando o JMeter\nDomine todos os elementos de um plano de teste do JMeter\nIdentifique os gargalos da sua aplicação Web\nEstenda as funcionalidades do JMeter através de plugins\nConsolide os conhecimentos através de exercícios\nSua aplicação web suporta até quantos usuários simultâneos? aprenda a identificar",
      "target_audience": [
        "Desenvolvedor de aplicações Web",
        "Desenvolvedor de Serviços Web",
        "Desenvolvedor de Sites Web",
        "Analista de Testes",
        "Analista de Qualidade"
      ]
    },
    {
      "title": "Automatización desde cero con Playwright y Typescript",
      "url": "https://www.udemy.com/course/automatizacion-de-pruebas-con-playwright-y-typescript/",
      "bio": "Un testing framework desde cero utilizando Playwright y Typescript",
      "objectives": [
        "Fundamentos de Playwight",
        "Selectores",
        "Page Object Model",
        "Como configurar CI/CD con Github actions",
        "Reporte de Prueba con Allure Report"
      ],
      "course_content": {},
      "requirements": [
        "No se requiere conocimientos previos"
      ],
      "description": "En este curso aprenderás a dominar Playwright, una de las herramientas más potentes para la automatización de pruebas de aplicaciones web, junto con TypeScript, el lenguaje que te permitirá escribir código más robusto y fácil de mantener. Desde los fundamentos hasta la creación de pruebas avanzadas, este curso te guiará paso a paso para que puedas automatizar cualquier flujo en tus aplicaciones web, mejorar la calidad del software y reducir los tiempos de pruebas manuales.\nA lo largo del curso, te familiarizarás con la escritura de selectores tanto en XPATH como en CSS, lo que te permitirá seleccionar y manipular elementos web de manera más precisa. Aprenderás a estructurar tu código utilizando el patrón Page Object Model (POM), y a generar reportes detallados de tus pruebas con Allure Report para un mejor seguimiento y análisis.\nAdemás, abordaremos la integración continua (CI/CD) utilizando GitHub Actions, para que puedas automatizar el proceso de ejecución de pruebas y despliegue en tus proyectos. También cubrirás las mejores prácticas en automatización, asegurando que tus pruebas sean eficientes y escalables, y cómo manejar errores de manera efectiva.\nLo que aprenderás:\nComo escribir selectores en formatos XPATH y CSS.\nConfigurar un entorno de pruebas con Playwright y TypeScript.\nPage Object Model.\nComo generar un reporte de pruebas con Allure Report.\nComo configurar CI/CD con GitHub Actions.\nUtilizar buenas prácticas en automatización y manejo de errores.\nEste curso está diseñado tanto para principiantes como para aquellos que ya tienen experiencia en automatización y desean mejorar sus habilidades usando Playwright con TypeScript. Si buscas llevar tus pruebas automatizadas al siguiente nivel, este curso es para ti.",
      "target_audience": [
        "A profesionales de la automatización de pruebas de todos los niveles"
      ]
    },
    {
      "title": "Unit Testing JavaScript",
      "url": "https://www.udemy.com/course/unit-testing-javascript/",
      "bio": "Unit Testing Javascript",
      "objectives": [
        "Memahami konsep dasar dan teknik unit testing di JavaScript untuk frontend dan backend.",
        "Menguasai alat dan metode untuk melakukan testing otomatis dan meningkatkan kualitas kode.",
        "Memahami penerapan teknik continuous integration (CI) dalam proyek JavaScript.",
        "Mampu mengukur code coverage dan mengoptimalkan proses pengujian aplikasi."
      ],
      "course_content": {
        "Introduction": [
          "Selamat Datang dan Prasyarat"
        ],
        "Tentang Testing": [
          "Apa itu dan Mengapa Testing Beberapa Contoh Bugs Krusial Bagaimana Menghindari B",
          "Beberapa Tipe Testing"
        ],
        "Unit Testing": [
          "Lebih Dalam Tentang Unit Testing Tools Unit Testing"
        ],
        "Jest Untuk Unit Testing": [
          "Demo Penggunaan Jest",
          "Unit Testing Aplikasi Kalkulator",
          "Unit Testing Aplikasi Cart",
          "Testing Backend NodeJs"
        ],
        "Teknik Testing": [
          "Beberapa Teknik Dalam Testing Test-Driven Development",
          "Demo TDD"
        ],
        "Unit Testing Dan Continous Integration": [
          "Apa Itu Continous IntegrationDemo Continuous Integration",
          "Demo TDD"
        ],
        "Code Coverage": [
          "Tentang Code Coverage",
          "Demo Code Coverage"
        ],
        "Penutup": [
          "Penutup"
        ],
        "Quiz": [
          "Quiz"
        ]
      },
      "requirements": [
        "Sebelum mempelajari Course ini, pastikan kalian sudah memahami JavaScript Dasar dan NodeJS Dasar."
      ],
      "description": "Di course ini, kita akan membahas secara mendalam segala hal terkait testing di JavaScript, khususnya unit testing, baik untuk frontend maupun backend. Testing merupakan komponen krusial dalam pemrograman, terutama untuk bahasa pemrograman dinamis seperti JavaScript. Dengan melakukan testing secara otomatis, kita dapat memastikan bahwa kode yang kita tulis berjalan dengan benar dan bebas dari kesalahan. Hal ini tidak hanya meningkatkan kualitas aplikasi, tetapi juga meningkatkan nilai kita sebagai developer yang profesional dan terpercaya.\nCourse ini akan memperkenalkan berbagai teknik dan alat yang digunakan untuk melakukan unit testing di JavaScript, seperti Jest, Mocha, dan Chai, yang memungkinkan kita menguji fungsi-fungsi individual dalam aplikasi secara efisien. Kita juga akan belajar tentang cara menulis test cases yang efektif dan memahami konsep dasar dari test-driven development (TDD).\nSelain fokus pada unit testing, course ini juga mencakup pembahasan tentang teknik continuous integration (CI), yang dapat diterapkan dalam proyek aplikasi berbasis JavaScript untuk memastikan perubahan kode yang konsisten dan terintegrasi dengan baik. CI membantu mengotomatiskan proses testing dan deployment, sehingga mengurangi risiko bug dan mempersingkat waktu pengembangan.\nTidak hanya itu, kalian juga akan mempelajari tentang code coverage, yang digunakan untuk mengukur seberapa banyak kode yang diuji. Dengan memahami dan menguasai berbagai aspek testing ini, kalian akan memiliki keterampilan yang diperlukan untuk menghasilkan aplikasi JavaScript yang lebih andal dan berkualitas tinggi.",
      "target_audience": [
        "Intermediate"
      ]
    },
    {
      "title": "ISTQB Certified Tester Foundation V4 Curso Completo de ISTQB",
      "url": "https://www.udemy.com/course/istqb-certified-tester-foundation/",
      "bio": "¡Prepárate para ser un Experto Certificado en ISTQB! Todo el contenido del syllabus de ISTQB con exámenes de prueba",
      "objectives": [
        "Prepararse para el examen ISTQB Certified Tester Foundation Level",
        "Comprender los fundamentos del testing de software",
        "Adquirir habilidades prácticas en el diseño y ejecución de pruebas",
        "Conocer los principales niveles y tipos de pruebas y su aplicación",
        "Dominar las mejores prácticas y técnicas de gestión de pruebas",
        "Conocer como se integran las pruebas en el ciclo de vida del desarollo",
        "Practicar tu conocimiento con multiples quizes y examenes de prueba hechos por la ISTQB®"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso"
        ],
        "Fundamentos del Testing": [
          "Qué es Testing?",
          "Porqué es importante el testing?",
          "Principios del Testing",
          "Acticivades del Testing, Testware y Roles del testing",
          "Habilidades esenciales y buenas practicas en el testing",
          "Quiz 1: Capitulo 1: Qué es testing?",
          "Quiz 2: Capitulo 2: Porqué es importante el testing?",
          "Quiz 3: Capitulo 3: Principios del Testing",
          "Quiz 4: Capitulo 4: Acticivades del Testing, Testware y Roles del testing",
          "Quiz 5: Capitulo 5: Habilidades esenciales y buenas practicas en el testing",
          "Glosario - Fundamentos del testing"
        ],
        "Pruebas a través del ciclo de vida del desarrollo de software": [
          "Testing en el contexto del SDLC",
          "Niveles de Testing y Tipos de Testing",
          "Pruebas de mantenimiento",
          "Quiz 6: Capitulo 6: Testing en el contexto del SDLC",
          "Quiz 7: Capitulo 7: Niveles de Testing y Tipos de Testing",
          "Quiz 8: Capitulo 8: Pruebas de mantenimiento",
          "Glosario - Pruebas a través del ciclo de vida del desarrollo de software"
        ],
        "Testing estático": [
          "Básicos del Testing estático",
          "Proceso de retroalimentación y revisión",
          "Quiz 9: Capitulo 9: Básicos del Testing estático",
          "Quiz 10: Capitulo 10: Proceso de retroalimentación y revisión",
          "Glosario - Testing estático"
        ],
        "Análisis de pruebas y diseño.": [
          "Resumen de las técnicas de prueba",
          "Técnicas de prueba Black-box",
          "Técnicas de prueba White-Box",
          "Técnicas de prueba basadas en experiencia",
          "Enfoques de prueba basados en la colaboración",
          "Quiz 11: Capítulo 11: Resumen de las técnicas de prueba",
          "Quiz 12: Capítulo 12: Técnicas de caja negra",
          "Quiz 13: Capitulo 13: Técnicas de caja blanca",
          "Quiz 14: Capitulo 14: Técnicas basadas en experencia",
          "Quiz 15: Capítulo 15: Técnicas basadas en la colaboración",
          "Glosario - Análisis de pruebas y diseño"
        ],
        "Gestión de las actividades de prueba": [
          "Planificación de las pruebas",
          "Gestión de riesgos",
          "Monitoreo, control y finalización de prueba",
          "Gestión de la configuración",
          "Gestión de defectos",
          "Quiz 16: Clase 16: Planificación de las pruebas",
          "Quiz 17: Capítulo 17: Gestion de riesgos",
          "Quiz 18: Capitulo 18: Monitoreo, control y finalización de las pruebas",
          "Quiz 19: Capítulo 19: Gestion de la configuración",
          "Quiz 20: Capítulo 20: Gestion de defectos",
          "Glosario - Gestión de las actividades de prueba"
        ],
        "Herramientas de prueba": [
          "Herramientas de soporte para Testing",
          "Beneficios y riesgos de la automatización",
          "Quiz 21: Capítulo 21: Herramientas de soporte de testing",
          "Quiz 22: Capitulo 22: Beneficios y riesgos de la automatización",
          "Glosario - Herramientas de prueba",
          "Examenes de prueba"
        ]
      },
      "requirements": [
        "Experiencia basica de Software Testing/QA"
      ],
      "description": "¡Prepárate para impulsar tu carrera como Tester de Software Certificado ISTQB!\n\n\n¿Estás listo para destacarte en el campo del testing de software? Nuestro curso completo de ISTQB Certified Tester Foundation Level es la llave que necesitas para abrir las puertas del éxito profesional. En este curso, te proporcionaremos todo lo necesario para aprobar el examen de certificación ISTQB y convertirte en un experto certificado en testing de software.\n\n\nNos diferenciamos de otros cursos en el mercado, ya que no nos limitamos a resumir el contenido. En su lugar, te ofrecemos una experiencia de aprendizaje integral y enriquecedora basada en el syllabus original de ISTQB V4. Nuestro enfoque único se centra en brindarte toda la información importante y necesaria para que te conviertas en un tester altamente competente.\n\n\nPara asegurarnos de que adquieras un conocimiento sólido, hemos creado quizzes únicos para cada sección del curso. Estos quizzes te permitirán evaluar tu comprensión y reforzar los conceptos clave. Además, tendrás acceso a múltiples exámenes de prueba diseñados por la ISTQB, lo que te dará una ventaja real al familiarizarte con el formato y el nivel de dificultad del examen oficial.\n\n\nSabemos que la certificación ISTQB es una necesidad en la industria actual. Muchos empleadores buscan testers con credenciales reconocidas internacionalmente. Al completar este curso y obtener tu certificación, estarás un paso adelante en el competitivo mercado laboral y tendrás más oportunidades de crecimiento profesional.\n\n\nPero eso no es todo. Además de los quizzes y los exámenes de prueba, te proporcionaremos ejemplos reales, casos de estudio y material de refuerzo adicional para que puedas aplicar tus conocimientos en situaciones prácticas. Nuestro objetivo es brindarte una experiencia de aprendizaje inmersiva y enriquecedora que te prepare para enfrentar cualquier desafío en el mundo real.\n\n\nNo pierdas la oportunidad de tomar este curso único y diferenciarte como un Tester de Software Certificado ISTQB. ¡Inscríbete hoy mismo y prepárate para despegar en tu carrera profesional!",
      "target_audience": [
        "Profesionales del testing de software",
        "Desarrolladores y analistas de software",
        "Estudiantes y entusiastas del testing de software",
        "Test Managers o Líderes de proyectos"
      ]
    },
    {
      "title": "Automatisation avec Katalon Studio-Approche professionnelle",
      "url": "https://www.udemy.com/course/automatisation-avec-katalon-studio-approche-professionnelle/",
      "bio": "Automatisation Web/Mobile, interception Code SMS, utilisation bases de données comme jeux de données",
      "objectives": [
        "Savoir automatiser un site Web avec une approche professionnelle: record Web/Mobile, script manuel, Execution par Tests Suite, Execution par fichier Main",
        "Savoir structurer le projet afin d'avoir un compte rendu clair et exploitable en milieu professionnel: Fichier Main, de JDD Excel",
        "Savoir Créer/optimiser un objet de repository d'un élément Web/mobile",
        "Savoir utiliser Git/GitLab pour commiter(Commit)/uploader(Push) vers le serveur Git, ou Télécharger (Pull) en locale un projet",
        "Savoir automatiser les différents éléments web courant courant",
        "Savoir intercepter un code SMS par réplication sur site web spécialisé",
        "Savoir automatiser une application mobile (Record Mobile) sur mobile physique et virtuel",
        "Savoir accéder à une base de données pour l'utiliser comme jeux de données"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Présentation de Katalon Studio"
        ],
        "Mise en place de l'environnement": [
          "Création de compte Katalon",
          "Installation & Login",
          "Sauvegarde Projet Katalon sur GitLab compte Gratuit"
        ],
        "Les bases": [
          "Record Web",
          "Optimisation avec Objets repository générique avec variable",
          "Optimisation avec Objets repository générique avec variable sur site dynamique",
          "Fichier TestSuite et fichier de jeux de données Excel"
        ],
        "Mode Avancé": [
          "Utilisation d'un fichier Main de lancement à la place du Testsuite",
          "Automatisation des différents éléments webs courants 1",
          "Automatisation des différents éléments webs courants 2",
          "Automatisation de l'Interception Code SMS : présentation",
          "Automatisation de l'Interception Code SMS : installation Application MySms",
          "Automatisation de l'Interception Code SMS : Script Partie Site Microsoft",
          "Automatisation de l'Interception Code SMS : Script Partie Site MySms"
        ],
        "Automatiser sur Mobile physique et virtuel": [
          "Installation et configuration des logiciels nécessaires aux tests mobiles",
          "Création de script généré automatiquement par Record Mobile Android"
        ],
        "Utilisation plugin d'accès aux bases de données (DBMS keywords)": [
          "Installation Oracle 21 c et configuration de la connexion à la base de données",
          "Modification script rpa challenge avec utilisation du plugins DBMS keywords"
        ],
        "Remerciement": [
          "Remerciement"
        ]
      },
      "requirements": [
        "Aucune"
      ],
      "description": "La formation que je propose sur Udemy vous permettra d'acquérir les compétences nécessaires pour automatiser des tests avec le logiciel Katalon Studio avec une approche professionnelle. Nous nous concentrerons sur les bonnes pratiques pour optimiser l'automatisation des tests, améliorer l'efficacité du processus de test et réduire les coûts associés.\nTout au long de la formation, vous apprendrez à :\n- automatiser un site web,\n- à travailler avec les éléments courants des pages web, à optimiser ces objets,\n- à automatiser avec une application mobile,\n- à utiliser la classe Main pour créer des scripts de test automatisés robustes.\n- à intercepter des codes SMS\n- à utiliser une base de données comme jeux de données\n- à téléverser sur Git/GitLab\n\nNous verrons comment utiliser des fichiers Excel pour les jeux de données, couplés à une base de données (Oracle), pour mettre à jour facilement ces fichiers pour les résultats directs.\nCette formation est destinée aux testeurs manuels, aux développeurs, aux responsables de tests et aux gestionnaires de projets souhaitant améliorer leurs compétences en automatisation de tests. Vous acquerrez les compétences nécessaires pour créer des scripts de test automatisés robustes avec Katalon Studio et intégrer les tests automatisés dans votre processus de développement logiciel.\nEn somme, cette formation pratique avec une approche professionnelle vous permettra  d'avoir les connaissances nécessaires pour travailler tout de suite, sans craintes (écriture de scripts web/mobile, structuration du projet, fichier de résultats, traitement des SMS (très courant) et des bases de données), vous ouvrira de nouvelles opportunités d'emploi dans le monde des tests automatisés.",
      "target_audience": [
        "Les testeurs manuels qui cherchent à se familiariser avec l'automatisation de tests et apprendre à utiliser Katalon Studio pour créer des tests automatisés.",
        "Les développeurs qui cherchent à automatiser leurs tests d'unité, d'intégration et de système à l'aide de Katalon Studio.",
        "Les responsables de tests et les gestionnaires de projets qui souhaitent améliorer l'efficacité de leur processus de test et réduire les coûts de test en utilisant des outils d'automatisation.",
        "Les professionnels de l'informatique qui cherchent à améliorer leur CV et leurs compétences en automatisation de tests pour renforcer leur employabilité.",
        "Les étudiants en informatique et les personnes qui cherchent à se reconvertir dans le domaine de l'informatique et qui souhaitent apprendre les bases de l'automatisation de tests avec Katalon Studio."
      ]
    },
    {
      "title": "Автоматизация API: REST Assured + Java, проект с Google API",
      "url": "https://www.udemy.com/course/rest-assured-google-api-automation/",
      "bio": "Создание фреймворка для любого проекта. Базовые и продвинутые функции: GET, POST, JSON и XML Schema, GPath для JSON.",
      "objectives": [
        "Запросы методом GET с параметрами в строке запроса",
        "Запросы POST с параметрами в теле запроса",
        "Запросы с JSON, XML форматами данных",
        "Работа с Request Headers",
        "Работа с Request cookies",
        "Logging Request/Response",
        "Знакомство с RequestSpecification",
        "Знакомство с ResponseSpecification",
        "Assertions для ответов",
        "Получение response body",
        "Получение headers",
        "Получение cookies",
        "Валидация ответа с помощью JSON Schema",
        "Валидация ответа с помощью XML Schema",
        "Использование GPath JSON",
        "Использование GPath XML",
        "Базовый фреймворк на основе REST Assured для любой сложности проекта"
      ],
      "course_content": {
        "Подготовка и установка необходимых приложений": [
          "Цели курса",
          "Что такое REST Assured?",
          "Короткий обзор официальной документации Rest Assured.",
          "Необходимый софт и технологии в курсе.",
          "Описание тестового проекта курса и получение API Token"
        ],
        "Основной функционал REST Assured и первый тест": [
          "Создание Intellij Project и установка REST Assured",
          "Первый REST Assured Test",
          "Создание конфигурационного класса",
          "Добавление Logging Request/Response",
          "Запросы методом GET и query parameters",
          "Запросы PUT и DELETE",
          "Запросы POST с JSON и XML body parameters",
          "Знакомство с RequestSpecification",
          "Знакомство с ResponseSpecification",
          "Assertions для ответов с Java библиотекой Hamcrest",
          "Извлечение body, headers, cookie и других данных из ответа с помощью extract",
          "Валидация ответа с помощью JSON Schema",
          "Валидация ответа с помощью JSON Schema",
          "Использование Groovy GPath"
        ],
        "Создание финальной структуры проекта и наполнение тестами": [
          "О структуре проекта",
          "Создание структуры проекта",
          "Добавление Lombock, JSONObject и создание NetworkCore",
          "Создание RequestModel",
          "Создание DataProvider для теста",
          "Добавление FileReader и выполнение теста"
        ]
      },
      "requirements": [
        "Необходимы базовые знания Java",
        "Необходимы базовые представления о мануальном тестировании и анализе REST API"
      ],
      "description": "Этот курс по Rest Assured включает себя знакомство с основами и продвинутыми особенностями данной библиотеки.\nБудет рассмотрен один из вариантов построения масштабируемого фреймворка для тестирования RESTful API для разной сложности. С использованием продвинутых технологий валидации ответов: JSON, XML Schema.\nКурс предполагает, что у вас есть базовые знания по тестированию API и Java. Но если опыт и знания достаточно поверхностны, то Вы все равно можете присоединиться к данному курсу, так как здесь буду рассмотрены и базовые концепции.\nВ качестве проекта был выбран Google API Places, это реальный проект, которые имеет различные форматы данных и разнообразный набор параметров.\nЕсли вам нужен курс, который поможет вам начать работу с REST Assured и изучить основы этой удивительной библиотеки и как результат получить фреймворк для автоматизации любого RESTful API на базе Java + Maven + TestNG + Intellij IDEA, то это тот самый курс :)\n\n\n==========\n\n\nThis Rest Assured course includes an introduction to the basics and advanced features of this library.\nWe will consider one of the options for building a scalable framework for testing RESTful APIs of varying complexity. Using advanced technologies to validate responses: JSON, XML Schema.\nThe course assumes you have a basic knowledge of API and Java testing. But if the experience and knowledge are superficial enough, then you can still join this course, as the basic concepts will also be covered here.\nGoogle API Places was chosen as the project; this is a real project with different data formats and a varied set of parameters.\nIf you need a course that will help you get started with REST Assured and learn the basics of this amazing library and, as a result, get a framework for automating any RESTful API based on Java + Maven + TestNG + Intellij IDEA, then this is the course :)",
      "target_audience": [
        "Все, кто хотят быстро и эффективно освоить основные функции REST Assured.",
        "Manual QA, которые хотят изучить и внедрить автоматизацию API на свои проекты."
      ]
    },
    {
      "title": "ISTQB Agile Tester - Certified Tester [CTFL-AT]",
      "url": "https://www.udemy.com/course/istqb-agile-tester-espanol/",
      "bio": "Curso completo de la certificación QA - ISTQB Agile Tester CTFL-AT",
      "objectives": [
        "Prepare y apruebe con éxito el examen ISTQB Certified Tester Foundation Level Agile Tester",
        "Comprender los fundamentos del desarrollo de software ágil",
        "Evaluar los riesgos de calidad del producto dentro de un proyecto ágil",
        "Comprender los roles y habilidades de un tester en proyectos ágiles",
        "Comprenda las diferencias entre las pruebas en los enfoques tradicional y ágil",
        "Estimar el esfuerzo de prueba en entornos de desarrollo ágil."
      ],
      "course_content": {},
      "requirements": [
        "Ideal aunque no requerido para seguir el curso: ISTQB Foundation Level"
      ],
      "description": "En este curso obtendrás todos los conocimientos necesarios para certificarte en ISTQB Agile Testing.\nLa industria del desarrollo de software sigue adoptando en gran medida metodologías ágiles para mejorar la eficiencia y la calidad del producto. Obtener una certificación en pruebas ágiles te posiciona como un profesional preparado para satisfacer esta demanda del mercado y trabajar en equipos ágiles.\nLas metodologías ágiles fomentan la colaboración estrecha entre los miembros del equipo, incluidos los probadores de software. Al obtener una certificación en pruebas ágiles, aprendes cómo trabajar de manera más efectiva en equipos multidisciplinarios, lo que conduce a una mejor comunicación, comprensión de los requisitos y entrega de productos de mayor calidad\nLa certificación en pruebas ágiles puede impulsar tu carrera profesional al demostrar tu experiencia y competencia en un área cada vez más importante del desarrollo de software. Te diferencia como un profesional comprometido con la excelencia y la mejora continua, lo que puede abrirte oportunidades de trabajo y ascenso en tu carrera.\nEste curso está basado en la última versión del syllabus CTFL AT\nEste curso NO es una lectura del syllabus, si lo usa como base y está cubierto en su totalidad, pero adicional hay muchos ejemplos prácticos y material complementario para ayudar a desglosar los términos y comprenderlos mejor.\nÚnico curso con este nivel de calidad que puedes encontrar en español.",
      "target_audience": [
        "Probadores que quieran mejorar sus conocimientos de pruebas en entornos ágiles.",
        "Probadores que quieran certificarte en ISTQB Agile Tester extensión."
      ]
    },
    {
      "title": "Playwright con Typescript",
      "url": "https://www.udemy.com/course/playwright-con-typescript/",
      "bio": "Aprende Automatización de Pruebas con Playwright con Typescript nivel Basico-Intermedio (Sub Es,En,Chi,Fra,Hin,Jap,Ect)",
      "objectives": [
        "Si eres QA, Tester ó Desarrollador, Aprenderás a utilizar el Framework Playwright con Typescript para la creación de Pruebas Automatizadas",
        "Creación de Test con TS y el Framework Playwright",
        "Aprende Estrategias y Trucos Para Acelerar tus Bots",
        "Crearas tus propias funciones y métodos para mejorar tus pruebas"
      ],
      "course_content": {},
      "requirements": [
        "Nociones basicas de Programación de preferencia",
        "Tener las nociones Basicas de Computación y Programación"
      ],
      "description": "Playwright permite pruebas confiables de extremo a extremo para aplicaciones web modernas.\n\n\nPlaywright se creó específicamente para adaptarse a las necesidades de las pruebas de extremo a extremo. Playwright es compatible con todos los motores de renderizado modernos, incluidos Chromium, WebKit y Firefox. Realice pruebas en Windows, Linux y macOS, de forma local o en CI, sin interfaz o con emulación móvil nativa.\nPlaywright recomienda usar el complemento oficial de Playwright y Javascript para escribir pruebas de un extremo a otro. Proporciona aislamiento de contexto, ejecutándolo en múltiples configuraciones de navegador desde el primer momento. Alternativamente, puede usar la biblioteca para escribir manualmente la infraestructura de prueba con su corredor de prueba preferido. El complemento Pytest utiliza la versión de sincronización de Playwright, también hay una versión asíncrona accesible a través de la biblioteca.\n\n\nCualquier navegador • Cualquier plataforma • Una API\n\n\nNavegador cruzado. Playwright es compatible con todos los motores de renderizado modernos, incluidos Chromium, WebKit y Firefox.\nMultiplataforma. Realice pruebas en Windows, Linux y macOS, localmente o en CI, sin interfaz o con interfaz.\nIdioma cruzado. Utilice la API de Playwright en TypeScript , JavaScript , Python , .NET , Java .\nPrueba web móvil. Emulación móvil nativa de Google Chrome para Android y Mobile Safari. El mismo motor de renderizado funciona en su escritorio y en la nube.\n\n\n\n\nEspera automática. En Playwright espera que los elementos sean procesables antes de realizar acciones. También tiene un rico conjunto de eventos de introspección. La combinación de los dos elimina la necesidad de tiempos de espera artificiales, la causa principal de las pruebas irregulares.\nAfirmaciones web primero. Las afirmaciones del Playwright se crean específicamente para la web dinámica. Las comprobaciones se vuelven a intentar automáticamente hasta que se cumplan las condiciones necesarias.\nRastreo. Configure la estrategia de reintento de prueba, capture el seguimiento de ejecución, videos, capturas de pantalla para eliminar escamas.\n\n\nMúltiple todo. Pruebe escenarios que abarcan múltiples pestañas , múltiples orígenes y múltiples usuarios . Cree escenarios con diferentes contextos para diferentes usuarios y ejecútelos en su servidor, todo en una sola prueba.\nEventos de confianza. Desplace elementos, interactúe con controles dinámicos, produzca eventos confiables. Playwright utiliza una tubería de entrada de navegador real indistinguible del usuario real.\nMarcos de prueba, perforar Shadow DOM. Los selectores de dramaturgos atraviesan el DOM de la sombra y permiten ingresar marcos sin problemas.",
      "target_audience": [
        "Estudiantes con conocimientos básicos de la web y testing, pero sobre todo gente que quiera hacer pruebas automatizadas",
        "Personas que tienen Ganas de ser QA ó Testers"
      ]
    },
    {
      "title": "【ウズカレ式】3時間で「ソフトウェアテスト設計技法の基礎」が学べる講座＜JSTQB-FL試験対策②＞",
      "url": "https://www.udemy.com/course/jstqb-fl2/",
      "bio": "#FL試験出題範囲3、4章完全対応 #ソフトウェアテスト #最短合格 #累計受講者8万人超え #企業研修のプロ講師陣が監修 #徹底した図解学習 #初心者・未経験者 #QAエンジニア #テスター #TDD、CI #PMプロジェクトマネージャー",
      "objectives": [
        "開発の早い段階で要件書や設計書、ソースコードの品質問題を特定し、コストのかかる手戻りを削減するスキルを習得する。",
        "ブラックボックステスト、ホワイトボックステスト、経験ベースのテストを適切に使い分け、効率的かつ網羅的にテストケースを設計できるようになる。",
        "様々なレビュー手法（ウォークスルー、インスペクションなど）を理解し、プロジェクトや成果物に応じて最適なレビュープロセスを計画・実行できる。",
        "開発者やビジネス担当者と連携して、要件を明確化し、受け入れ基準やユーザーストーリーを作成することで、チーム全体の品質向上に貢献する。"
      ],
      "course_content": {},
      "requirements": [
        "ソフトウェアテストの経験は不要。必要なことをすべて学習できます。"
      ],
      "description": "▼このコースの特徴\n図解メインで理解しやすい → 難解な用語やプロセスも、ビジュアルで直感的に整理！\nJSTQBシラバスに準拠した内容 → 合格に必要な知識を効率よく、体系的に学べる！\n開発経験が少なくても大丈夫 → テストの基本から、実務での活用イメージまで丁寧にカバー！\n「なぜそうするのか」を重視した構成 → 単なる暗記でなく、現場で使える理解が身につく！\n品質への意識が高まる → テストの視点を持つことで、開発スキルの底上げにもつながる！\n本コースではAIを活用し、聞き取りやすいレクチャー音声を提供しています。\n\n\nこのコースはソフトウェア開発における「静的テスト」と「テスト技法」を主に学ぶコースです。ソフトウェアを動かさずに品質をチェックする静的テストの基本から、コードや仕様書の問題点を見つけるためのレビューや静的解析について深く掘り下げます。さらに、実際にソフトウェアを動かしてテストする際の「何を、どのようにテストするか」を計画・設計するためのテスト技法についても、さまざまな手法（ブラックボックステスト、ホワイトボックステスト、経験ベースのテスト）や、開発者と協力してテストを進めるコラボレーションベースのアプローチを学びます。\n\n\n開発経験が少ない方でも安心して学べるよう、「イラスト中心＋ていねいな解説」にこだわっています。単なる用語の解説にとどまらず、「なぜその工程が必要か？」「現場でどう活かせるか？」という視点で学ぶことで、知識を実務へとつなげる力が養えます。\n\n\n▼JSTQB（Foundation Level）の出題範囲\nこのコースは、JSTQB（Foundation Level）の出題範囲の3章と4章に完全対応しています。その他の章については別のコースで学習することができます。\n\n\nJSTQB-FL試験対策①（別コース）\n1章：テストの基礎\n2章：ソフトウェア開発ライフサイクル全体を通してのテスト\n\n\nJSTQB-FL試験対策②（本コース）\n3章：静的テスト\n4章：テスト分析と設計\n\n\nJSTQB-FL試験対策③（別コース）\n5章：テスト活動のマネジメント\n6章：テストツール",
      "target_audience": [
        "ソフトウェア開発の現場にいるけれど、テストの全体像がよくわからない方",
        "プログラミング学習はしていないけれど、IT分野に関わる仕事をしてみたい方。",
        "未経験・微経験からテスターやQAエンジニアを目指している方。",
        "用語を丸暗記するより、「なぜそうするのか」を理解してから覚えたい方。",
        "テキスト中心の教材だと眠くなってしまい、図解やビジュアルで学びたい方。"
      ]
    },
    {
      "title": "Teste Unitário - Básico para Desenvolvedores C#",
      "url": "https://www.udemy.com/course/teste-unitario-dotnet/",
      "bio": "Aprenda o básico de teste unitário para trabalhar de forma rápida e simples",
      "objectives": [
        "Criar testes Unitários usando o Visual Studio.",
        "Técnicas e boas práticas básicas para Teste Unitário com C#",
        "Explorar como simplificar o processo de Teste Unitário,",
        "Criar testes orientados a dados",
        "Automatizar e Agendar testes unitários com VSTest. Console"
      ],
      "course_content": {},
      "requirements": [
        "Já saber um pouco em C#",
        "Você está familiarizado com o VS 2017",
        "Principalmente, quer aprender a construir testes Unitários",
        "VS Enterprise 2017 melhora a experiência desse curso, mas não é pré-requisito."
      ],
      "description": "Todo desenvolvedor sabe que deve criar testes unitário para melhorar a qualidade de seus softwares. Neste curso, você aprenderá a criar testes unitários usando o Visual Studio de forma básica e objetiva.\nPrimeiro, você verá como é fácil começar a criar testes de unidade. Em seguida, você explorará como simplificar o processo de teste de unidade, criando testes orientados a dados. Finalmente, você abordará como automatizar seus testes de unidade, agendando-os para executar o utilitário de linha de comando VSTest.Console.\nNo final deste curso, você terá as habilidades necessárias para avançar em testes de unidade para todos os seus softwares C#.NET.\nLembrando que, este curso está caminhando para ser atualizado para as versões mas novas do .net como é o caso do dotnet core 5, utilizarei para a atualização o xUnit, porém ainda não estou realizando as gravações, apenas montagem do curso. Também teremos as partes de teste unitário para webapi .net core.\nCaso seja interessante pra vocês, por favor, tentem acessar também o site e canal do youtube programadamente para melhor facilitar a decisão de vocês sobre esse e outros curso na plataforma.\nA nova versão também terá a cobertura de código utilizando não apenas o vs2019, mas também o visual studio code, porque muitos de nós não estamos mais utilizando o visual studio 2019.",
      "target_audience": [
        "Desenvolvedores já iniciados em C#"
      ]
    },
    {
      "title": "ISTQB CTFL v4.0 Foundation Level Sertifika Hazırlık Seti",
      "url": "https://www.udemy.com/course/istqb-ctfl-foundation-level-sertifika-sinavi-hazirlik-soru-seti/",
      "bio": "ISTQB CTFL v4.0 sınavına hazırlık: Yazılım testi temelleri, test seviyeleri, test teknikleri ve yönetim süreçleri.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Bu kurs, ISTQB® Sertifikalı Test Uzmanı Temel Seviye (CTFL) v4.0 müfredatına göre hazırlanmış 40 soruluk özgün sınav soru setlerinden oluşur. Kurs boyunca, yazılım testi alanında uluslararası geçerliliğe sahip olan ISTQB sınavına yönelik çıkabilecek soru tiplerini birebir deneyimleyerek hem bilginizi pekiştirecek hem de sınav stratejisi kazanacaksınız.\nKurs İçeriğinde Neler Var?\nCTFL v4.0 kapsamındaki temel konulara yönelik özgün test soruları.\nHer bir soru için detaylı açıklamalar ve cevap analizleri.\nStatik testler, test seviyeleri, test teknikleri, test yönetimi ve araçları gibi ana konuları kapsayan pratik sorular.\nISTQB’nin resmi örnek sınav formatına uygun yapı.\nBu Kurs Sizin İçin Uygun mu?\nISTQB CTFL v4.0 sınavına hazırlanan herkes.\nYazılım testi konularını soru çözerek pekiştirmek isteyen öğrenciler.\nDaha önce eğitim almış ancak sınava yönelik pratik eksiği olan adaylar.\nGerçek sınav atmosferini denemek isteyenler.\nKendinizi sınava hazır hissetmek istiyorsanız, bu soru setleriyle bilginizi test edin, eksiklerinizi görün ve başarıya bir adım daha yaklaşın. Bu kurs aynı zamanda zaman yönetimi becerilerinizi geliştirmenize yardımcı olur. Her soru gerçek sınav formatına benzer şekilde hazırlanmıştır. Böylece sınav öncesi hem bilgi seviyenizi ölçebilir hem de sınav stresini azaltarak başarı şansınızı artırabilirsiniz. Öğrenirken uygulayın, güvenle sınava girin. Ayrıca kurs sonunda hangi konularda güçlü, hangilerinde eksik olduğunuzu net göreceksiniz ve eksiklerinizi hızla tamamlayabileceksiniz.",
      "target_audience": [
        "ISTQB® CTFL v4.0 sınavına hazırlanan adaylar, Kariyerinde test mühendisliği alanına geçiş yapmak isteyen profesyoneller, yazılım test mühendisleri,"
      ]
    },
    {
      "title": "Testes unitários importam?",
      "url": "https://www.udemy.com/course/testes-unitarios-importam/",
      "bio": "Depois desse curso você vai pensar duas vezes antes de escrever uma aplicação sem testes",
      "objectives": [
        "Porque devem escrever testes unitários",
        "Utilizar o JUnit",
        "Utilizar o Mockito",
        "Escrever testes além da cobertura",
        "Testes usando Java",
        "Testes usando Spring"
      ],
      "course_content": {
        "Introdução": [
          "O que é Teste unitário?",
          "Você conhece quais tipos de testes?",
          "Criando nosso primeiro teste",
          "Teste unitário real",
          "Falta testar mais",
          "Testes com exceções",
          "Teste com mutação",
          "Testando condicionais",
          "Testando com Spring Boot",
          "Testes de controller",
          "E agora? O que fazer?",
          "Aula bônus"
        ]
      },
      "requirements": [
        "Conhecer pelo menos o básico de Java",
        "Ser QA ou DEV"
      ],
      "description": "Ao longo da minha carreira percebi a grande barreira que os desenvolvedores tem em criar testes unitários, muitas vezes percebi que eram apenas gaps de conhecimentos, lacunas que precisavam ser preenchidas e assim o desenvolvedor vai entender que os testes mais ajudam do que atrapalham no seu dia a dia. O meu curso tem por objetivo não só ensinar algumas ferramentas importantes para você criar os seus testes, mas para que você também entenda o quanto os testes unitários podem te ajudar no seu dia a dia. Fiz esse curso com muito empenho para que você consiga entender de forma clara e simples o como é importante a escrita dos testes unitários na sua aplicação, espero que conclua o curso tendo outra visão sobre testes unitários.\nAula 1\nO que é teste unitário?\nO que não é teste unitário\nPreciso testar conexão com o banco de dados?\nPreciso tester a integração com uma API?\nCódigo testando código\nAula 2\nTipos de testes\nTestes unitários\nTestes de integração\nTestes e2e\nTestes manuais\nAula 3\nIntellij idea community\nJava 11\nJUnit 5 Jupter\nMockito 4\nConfig\nCriando um testes com 100% de cobertura\nTeste com 100% de cobertura, mas que não está testando de verdade\nAula 4\nEscrever um teste de verdade\nAssertions\nMocks\nVerificar retornos de um método\n100% de cobertura valendo\n\n\nAula 5\nUtilizando o Verify\nMudar código com teste passando\nMudar código com teste falhando\nÉ importante que falhe\nSe mudar algo na implementação e o teste não falhar, tem algo errado.\nO teste é seu amigo.\nAula 6\nUtilizando outro cenário\nTestando com exceções\nCapturar a mensagem da exceção\nValidar se a mensagem está correta\nAula 7\nTestes com mutação\nPitest\nFerramenta para verificar se estamos testando de fato\nExemplos práticos\nAula 8\nOrganizando a estrutura do projeto\nTestes com condicionais\nRodando testes separados\nRodando todos os testes da classe\n\n\nAgradecimentos\nComo implementar isso na minha empresa?\nE agora que sei a importância dos testes, como criar essa cultura onde trabalho?",
      "target_audience": [
        "Desenvolvedores que pretendem crescer na carreira",
        "QA que queira auxiliar o time de devs com os testes unitários",
        "Devs que ainda não entendem o poder dos testes unitários"
      ]
    },
    {
      "title": "Softwarequalität durch Unit Testing",
      "url": "https://www.udemy.com/course/clean-code-unit-testing-java-junit/",
      "bio": "Konzepte und Methoden guter Unit-Tests am Beispiel von Java, JUnit und Mockito. Clean Code in Aktion.",
      "objectives": [
        "Du kennst die Konzepte vom Unit-Testen",
        "Du weißt, was gute von schlechten Unit-Tests unterscheidet",
        "Du kannst JUnit oder ein anderes Unit-Testing-Framework benutzen"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Übungen",
          "Gute Software entwickeln!",
          "Dein Trainer"
        ],
        "Die 4 Schritte Kompletteinführung": [
          "Schritt 1: Unit verstehen und ersten Test mit JUnit schreiben",
          "Schritt 2: Das Richtige Testen",
          "Schritt 3: Mockito nutzen, um mit Abhängigkeiten umzugehen",
          "Schritt 4: Tests übersichtlicher gestalten"
        ],
        "Grundlage des Software-Testings": [
          "Was ist Software-Testing?",
          "Die Testpyramide",
          "Black-Box und White-Box-Testing",
          "Ein Wort zu Normen",
          "Software-Testing"
        ],
        "Die ersten Tests": [
          "Der erste JUnit-Test",
          "Integrationstest",
          "Akzeptanztest",
          "Übung: Richte deine Umgebund ein und schreibe deine ersten Tests"
        ],
        "Grundkonzepte des guten Unit Testing": [
          "Was ist eine Unit?",
          "Drei Arten, eine Unit zu testen",
          "Stubs und Mocks",
          "Wir testen nur einen einzigen Aspekt",
          "Übung: Teste den Preisrechner"
        ],
        "Bringen Software-Tests etwas?": [
          "Testen kostet!",
          "Wir brauchen keine Tests!",
          "Unser Code ist nicht testbar!",
          "Tests bringen einen hohen Wartungsaufwand mit sich!",
          "Tests werden schnell irre kompliziert!",
          "Übung: Welche Hinderungsgründe kennst du?"
        ],
        "Weitere Konzepte und Anregungen": [
          "Weniger ist mehr!",
          "Was soll getestet werden?",
          "Testdaten",
          "Teste Logik, keine Abläufe",
          "Übung: Teste das Rekrutierungsbüro"
        ],
        "Logik testbar machen": [
          "Single Responsibility Principle (SRP)",
          "Pflege deine Tests",
          "NEW auslagern",
          "Das Gesetz von Demeter",
          "Externe Aufrufe sauber kapseln",
          "Logik unabhängig und ohne Status implementieren",
          "Übung: Kapsel die externen Aufrufe für die MietMax UG",
          "Übung: Teste für die MietMax UG"
        ],
        "Wie umgehen mit...": [
          "Testen von MAIN",
          "Datenbanken und Unit-Tests",
          "UI und Unit-Tests"
        ],
        "Die Werkzeuge: VS Code und JUnit": [
          "Visual Studio Code einrichten",
          "Die JUnit Annotationen",
          "Die wichtigsten Assertions",
          "Das böse @Disabled"
        ]
      },
      "requirements": [
        "Du solltest programmieren können.",
        "Die Beispiele sind in JAVA - sie sind jedoch leicht zu verstehen. Daher musst du kein Java könne.",
        "Einfacher wird es für dich, wenn du geübt darin bist, Frameworks und Bibliotheken zu nutzen."
      ],
      "description": "Prolog:\nIch habe es getan. Ich hatte angefangen, meine komplette Software automatisch zu testen. Hierfür lernte ich JUnit und Mockito und fing an, jede meiner Klassen automatisch zu testen. Ein tolles Gefühl. Irgendwann jedoch, kam ich nicht wirklich weiter. Der Umfang von JUnit war zu gering. Ich griff zu anderen, mächtigeren Frameworks und nutzte die Macht der Reflections, um auch in die tiefsten Innereien meiner Klassen zu schauen, meine Objekte zu manipulieren und so auch die verwinkelten Ecken meiner Software testen zu können.\nAber auch das bereitete mir Probleme. Immer, wenn ich Änderungen am Code vornahm, oder diesen erweiterte, mussten dutzende von Tests angepasst werden. Bei jedem neuen Feature wurden die Tests komplexer und komplizierter. Was ein Aufwand! Irgendwann dämmerte es mir: Tests sind schlecht! Sie kosten viel mehr, als dass sie bringen! Ich schmiss die Tests raus und konnte wieder entspannt programmieren. Gut... die vielen Fehler, die erst spät entdeckt wurden. OK... die paar Regressionsfehler die ich nicht entdeckte.... Ja... die ständig wieder auftauchenden Fehler über die sich der Kunde wundert... aber sonst?\nDann jedoch wurde ich Mitglied eines neuen Teams. Mit diesem kam eine neue Software in meinen Verantwortungsbereich. Diese hatte eine wunderbare Testabdeckung. Einfache Tests. Saubere Tests. Leichte Tests. Ich war verwundert. In diesem Moment war mir klar, es war mein Code, der schlecht testbar war. Tests müssen nicht kompliziert sein. Man muss nur die Konzepte des Testens verstehen. Ich arbeitete mich in die Konzepte ein. Lernte die Prinzipien des guten Testens. Merkte, wie viel gutes Testen mit sauberem Softwaredesign zu tun hat. Was eine Freude! Es kribbelte. Ich schrieb Tests. Wurden sie zu kompliziert, passte ich das Design des Codes an. Meine Tests zeigten mir meine Fehler im Design.\nGenau das will ich dir vermitteln!\nSoftwarequalität durch Unit Testing zeigt dir die Konzepte guter Tests.\nIn diesem Kurs lernst du nicht nur JUnit und Mockito unter Java kennen - als typische Vertreter moderner Test-Frameworks - sondern auch die Konzepte und Ideen guter Tests.\nDieser Kurs ist KEINE Schritt-für-Schritt Anleitung für JUnit! Es geht hier um mehr. Es gibt genug Tutorials um sich tiefer in JUnit einzuarbeiten - auch auf der JUnit-Seite. Hier geht es wirklich mehr um die Konzepte, um Prinzipien und praktische Tipps.\nAutomatisiertes Unit-Testen ist wichtig:\num Fehler so früh wie möglich zu entdecken.\num saubereren Code zu schreiben\num zu schauen, ob die Anforderungen richtig umgesetzt wurden\num das \"per Hand\"-Testen zu reduzieren\num Regressionsfehler zu vermeiden und zu erkennen\num dir schnelles Feedback deiner Arbeit zu geben\num dein Geld zu sparen\num eine ausführbare Dokumentation deines Codes zu erstellen\num eine hohe Qualität deiner Software zu erreichen\nDafür geht es in diesem Kurs um folgende Themen:\nGrundlagen des Software-Testings\nDie Testpyramide\nBlack-, Grey- und White-Box-Testing\nJUnit Grundlagen\nGute Namen\nDer gute Unit-Test: FIRST\nArgumente gegen das automatisierte Testen\nNur einen Aspekt testen\nMockito Grundlagen\nWeniger ist mehr\nWas soll getestet werden?\nSingle Responsibility Principle (SRP)\nDas Gesetz von Demeter\nPrinzipien der modernen Softwareentwicklung\nClean Code",
      "target_audience": [
        "Für Softwareentwickler, die ihren Code automatisch testen lassen wollen.",
        "Für jeden, der Unit-Tests verwendet - und jetzt tiefer in die Materie eintauchen möchte.",
        "Für jeden, der gerne Unit-Tests verwenden möchte"
      ]
    },
    {
      "title": "Preparatório para CTFL - ISTQB/BSQTB (3.1.1/4.0)",
      "url": "https://www.udemy.com/course/preparatorio-para-ctfl-istqbbsqtb/",
      "bio": "Curso preparatório para Certificação de testes",
      "objectives": [
        "O aluno se qualificará para prestar a prova do BSTB - CTFL",
        "Aprenderá fundamentos de testes",
        "Aprenderá os 7 princípios de teste",
        "Aprenderá técnicas de teste de caixa-preta, caixa-branca e técnicas baseadas na experiência do testador",
        "Aprenderá a respeito de tipos e níveis de testes",
        "Aprenderá sobre Gerenciamento de testes e de ferramentas de testes",
        "Conseguirá aplicar todo esse conhecimento no dia-a-dia e em questões preparatórias para a prova"
      ],
      "course_content": {},
      "requirements": [
        "Nenhum"
      ],
      "description": "O desenvolvimento desse curso foi inteiramente pensado para um testador, desenvolvedor ou qualquer outra pessoa que deseje se preparar para a prova CTFL - ISTQB/BSQTB. Desta forma, os alunos aprenderão todo o conhecimento necessário a respeito de diversos assunto, como:\nFundamentos dos testes;\nNíveis e tipos de testes;\nTécnicas de testes;\nTestes estáticos e testes dinâmicos;\nGerenciamento de testes;\nFerramentas de Suporte ao teste.\nEntre outros tópicos também abordados no material base da certificação de testes CTFL - Foundation Level\nTendo isso em mente, durante esse o abordaremos todos os capítulos do Syllabus de acordo com a versão corrente da prova.\nSerá realizado exercícios para fixação no final de cada capítulo\nHaverá um teste fixado no final de cada capítulo para que os alunos possam fazer mais exercícios.\nEstará fixado uma lista de outros exercícios que podem ser feitos de acordo com versão da prova e versão dos simulados disponibilizados\nO aluno terá disponível todo material utilizado no curso, como por exemplo:\nApresentação de slides utilizada  durante as aulas\nSimulados usados (também disponíveis no site oficial do BSTQB)\nVersão do Syllabus utilizado (também disponível no site oficial do BSTQB)\nAtualmente o curso da suporte às seguintes versões da certificação de testes:\nCTFL 3.1.1\nCTFL 4.0",
      "target_audience": [
        "Testadores e Desenvolvedores que desejam prestar a prova CTFL - ISTQB/BSQTB",
        "Testadores e Desenvolvedores que desejam ter conhecimento mais profundo teste de software"
      ]
    },
    {
      "title": "Testes Unitários em Java Utilizando o JUnit",
      "url": "https://www.udemy.com/course/testes-unidade-automaticos-software-junit/",
      "bio": "Aprenda a criar testes automáticos do zero e de forma muito simples através de exemplos com JUnit + Java",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Ter desejo de ser um bom testador de alto nível, acreditar que você VAI conseguir ser e estar determinado a buscar isso a partir de HOJE",
        "Ter conhecimentos básicos em qualquer linguagem de programação"
      ],
      "description": "---\nVocê sabia que a falta de testes de qualidade é o maior motivo de fracasso dos projetos de software?\nSabia também que profissionais do teste de software estão escassos no mercado devido à alta demanda?\n---\n\n\nAtravés deste curso, qualquer pessoa que nunca teve contato com automação de testes será capaz de aprender, do zero, a criar testes automáticos eficientes e profissionais aplicando as melhores práticas e técnicas que serão ensinadas de uma forma muito simples e no passo-a-passo, através de exemplos evolutivos.\n\nALERTA.: se você gosta de muita teoria, decoreba e \"blá blá blá\" difícil até mesmo de entender, cuidado. Este curso é extremamente simples e prático, onde você entenderá tudo rápido e facilmente, receberá modelos prontos para aplicar nos seus projetos e gerenciará um projeto simulado do início ao fim utilizando a ferramenta mais procurada do mundo para planejamento de projetos.\n\n\nSe você quer aprender a como criar testes automáticos de forma profissional e utilizar isto para se qualificar e se posicionar melhor no mercado de trabalho como alguém com diferenciais, você chegou ao lugar certo.\nAtenção: a linguagem de programação que utilizaremos neste curso será Java e o framework para automatização dos testes será o JUnit. Porém, se você não programa em Java, não se preocupe, pois o foco do curso não é na tecnologia, mas sim na técnica. Assim, você poderá facilmente utilizar qualquer outra linguagem diferente de Java e ter exatamente o mesmo proveito.\nEste curso te dará em detalhes não apenas a formação necessária para construir bons testes automáticos, mas também te ensinará sobre como utilizar os conhecimentos e técnicas ensinados para fazer de você alguém diferenciado no mercado de T.I. e criar realmente grandes oportunidades com isto.\nCom uma linguagem simples, muita motivação e exemplos práticos, você irá aprenderá várias técnicas que te permitirão se desenvolver para ser um testador profissional, economizando muito tempo e dinheiro através da utilização de testes automáticos e agregando um enorme valor para a empresa onde você trabalha.\nSeguindo os ensinamentos que te darei neste curso, SEM DÚVIDA, você será totalmente capaz de conquistar novas oportunidades em sua vida e carreira profissional, mesmo que hoje você não saiba NADA sobre o assunto e até mesmo ache que não tem perfil para ser um testador ou elaborar testes de alta qualidade.\n\n\n## POR GUSTAVO FARIAS, INSTRUTOR #1 NO MUNDO EM CURSOS ONLINE NA ÁREA DE NEGÓCIOS, COM MAIS DE 200.000 ALUNOS\n\n\nNeste curso, você receberá:\n[Bônus 01] Disponibilização de projetos exemplos e apresentações para que você seja capaz de implantar testes automáticos na sua empresa.\n[Bônus 02] 1h de consultoria/coaching particular com Gustavo Farias com 50% de desconto.\nOBS.: para agendar a consultoria, envie uma mensagem para mim através da plataforma e conte comigo.\n[CONTE COMIGO] Eu respondo 100% dos meus alunos em no máximo 24 horas.",
      "target_audience": [
        "Programadores de qualquer nível de experiência que desejam adquirir um grande diferencial sendo especialista também em teste de software, o que o torna alguém especial para as empresas",
        "Universitários pró-ativos de cursos de T.I. (ex.: Sistemas de Informação, Ciência da Computação, etc.) que sabiamente querem desenvolver as habilidades de um testador de software desde cedo, visando ser um profissional diferenciado no mercado de trabalho",
        "Programadores que desejam reduzir consideravelmente os retrabalhos com correções através da automação de testes"
      ]
    },
    {
      "title": "Devenir Test manager / Responsable de test de A à Z",
      "url": "https://www.udemy.com/course/devenir-test-manager-responsable-de-test-de-a-a-z/",
      "bio": "Devenir Test manger / Test Lead :La méthode pour réussir vos projets & gérer vos équipes",
      "objectives": [
        "• Devenir Test manger : Développer rapidement et renforcer durablement vos compétences de chef de projet",
        "• Devenir Test manger : Gérer professionnellement vos projets de bout en bout",
        "• Devenir Test manger : Devenir une référence pour vos pairs de la gestion de projet",
        "• Devenir Test manger : Gérer vos plannings efficacement et dynamiquement",
        "• Devenir Test manger : Travailler en harmonie avec votre équipe et la rendre plus performante",
        "• Devenir Test manger : Anticiper tout imprévu sur le déroulement du projet",
        "• Devenir Test manger : Posséder des bases solides pour vous certifier sur test management",
        "• Devenir Test manger : élaborer une stratégie de test",
        "• Devenir Test manger : mieux gérer votre équipe",
        "• Devenir Test manger : acquérir un poste de responsable de test (test manager)"
      ],
      "course_content": {},
      "requirements": [
        "Aucun"
      ],
      "description": "Devenir Test manger\nActuellement beaucoup de demande au niveau du test logiciel et on a besoin de plus en plus des pilotes / responsables des activités de test\nLe cours se concentre sur les domaines clés qui sont essentiels à la réussite de la gestion des tests : le processus de test, la gestion des tests, les normes et les processus d'amélioration des tests, les revues, la gestion des défauts, les outils de test et l'automatisation, la gestion des incidents et les compétences des personnes.\nJ'ai inclus tout ce que vous pourriez avoir besoin de savoir pour bien comprendre le poste du test manager et être capable de travailler en toute confiance\nLe programme\n\n\nProcessus de test\nIntroduction\nPlanification, suivi et contrôle des tests\nAnalyse des tests\nConception des tests\nImplémentation des tests\nExécution des tests\nÉvaluation des critères de sortie et reporting\nActivités de clôture des tests\nGestion des tests\nIntroduction\nGestion des tests en pratique\nTest basé sur les risques et autres approches pour la priorisation des tests et l'allocation de l'effort\nDocumentation des tests et autres livrables\nEstimation des tests\nDéfinition et utilisation de métriques de test\nValeur financière du test\nTests distribués, externalisés et internalisés\nGérer l'application de standards industriels\nRevues\nIntroduction\nRevues et gestion d'audits\nGérer les revues\nMétriques pour les revues\nGérer des revues formelles\nGestion des anomalies\nIntroduction\nCycle de vie des anomalies et cycle de développement logiciel\nDonnées d'un rapport d'anomalie\nÉvaluer l'efficacité d'un processus avec l'information des rapports d'anomalie\nAméliorer le processus de test\nProcessus d'amélioration des tests\nAméliorer le processus de test\n\n\nOutils de test et automatisation\nIntroduction\nSélection d'un outil\nCycle de vie d'un outil\nMétriques sur les outils\nCompétences – Composition de l'équipe\nIntroduction\nCompétences individuelles\nDynamique de l'équipe de test\nIntroduire le test dans une organisation\nMotivation\nCommunication",
      "target_audience": [
        "Toute personne souhaitant être un Test Manager / responsable de test / responsable d’entité de test / test lead / QA LEAD",
        "Test Managers, Test Leaders et Test Program Managers, .",
        "Les testeurs souhaitant améliorer leurs connaissances dans les méthodologies et techniques de gestion des tests.",
        "Toute personne impliquée dans le test de projets de projets logiciels (y compris les testeurs, les ingénieurs, les analystes, les consultants, les développeurs de logiciels, les clients, tout le monde)."
      ]
    },
    {
      "title": "‫أوتوميشن من الصفر للاحتراف: Mastering Selenium with Java‬",
      "url": "https://www.udemy.com/course/selenium-with-java-ar/",
      "bio": "‫تعلم Test Automation باستخدام Selenium مع Java، وبناء TAF شامل بـ Reporting وCI/CD باستخدام GitHub Actions.‬",
      "objectives": [
        "‫فهم What, Why, When, and How of Test Automation مع تغطية جزء من شهادة Test Automation Engineer (TAE) v2 كـ reference.‬",
        "‫التعامل مع Selenium WebDriver واستخدام مختلف الـ Locators عشان تتعامل مع عناصر الويب بشكل احترافي، وفهم كل ما يخص Selenium بشكل نظري وعملي بالاعتماد على الـ of",
        "‫كتابة Test Cases باستخدام TestNG framework، وفهم كل ما يخص TestNG بشكل نظري وعملي بالاعتماد على الـ official documentation، بداية من TestNG Annotations, Assert",
        "‫تنفيذ Parallel Test Execution باستخدام TestNG وJUnit5 مع فهم Thread Local concept.‬",
        "‫فهم الـ Design Patterns بشكل عام ومعرفة أهميته في Test Automation، مع تطبيق عملي على Patterns زي Page Object Model (POM), Factory, Facade, Singleton, وBot‬",
        "‫Data-Driven Testing بقراءة بيانات من Resources مختلفة زي Properties Files, JSON, Excel.‬",
        "‫إعداد وإدارة التقارير (Reports) وربطها مع Logs, Screenshots, وVideos لتوثيق نتائج الـ Test Automation بشكل احترافي، مع شرح كيفية إعداد ذلك باستخدام Allure Repo",
        "Building a complete Test Automation Framework (TAF) from scratch وتطبيقه على مشروع حقيقي.",
        "‫Introduction إلى Git وGitHub وفهم أساسيات Version Control وإدارة الكود ومشاركة المشاريع بشكل منظم وآمن.‬",
        "‫إعداد CI/CD pipelines باستخدام GitHub Actions لتشغيل test scripts تلقائيًا بعد كل push أو merge وضمان استمرارية التكامل والتسليم.‬"
      ],
      "course_content": {},
      "requirements": [
        "‫معرفة أساسية باستخدام الحاسوب وأنظمة التشغيل (Windows, Mac أو Linux) في التعامل مع البرامج والملفات وتنصيب الأدوات.‬",
        "‫جهاز كمبيوتر بإمكانيات متوسطة عشان يقدر يشغل أدوات زي Selenium, Maven, IntelliJ, GitHub, Allure.‬",
        "‫معرفة أساسية بالـ Software Testing concepts سواء Manual أو Automation تعتبر plus، لكن مش شرط.‬",
        "‫اتصال ثابت بالإنترنت لتحميل الأدوات ورفع المشاريع على GitHub.‬",
        "‫رغبة في التعلم والتطبيق العملي على real-world Test Automation projects.‬"
      ],
      "description": "‫في هذا الكورس الشامل، هنتعلم مع بعض Test Automation باستخدام Selenium WebDriver مع Java خطوة بخطوة، بداية من المفاهيم النظرية الأساسية زي What is Test Automation, Why, When, and How of Test Automation، لحد بناء Test Automation Framework (TAF) كامل واحترافي قابل للتوسّع والتطوير.‬\n‫الكورس مش مجرد كتابة Scripts وخلاص، هنا بنركز على بناء Framework حقيقي، مع تطبيق Design Patterns زي Page Object Model (POM), Factory, Facade, Singleton, Bot Pattern، وفهم SOLID Principles لضمان maintainability وscalability.‬\n‫مش هنتوقف عند Selenium WebDriver بس، لكن كمان هنتعامل مع:‬\n‫TestNG Framework: شرح عملي كامل للـ Annotations, Assertions, Groups, Parameters, Parallel Execution، والتعامل مع TestNG XML وListeners وRetry Analyzer.‬\n‫Data-Driven Testing: قراءة البيانات من Resources مختلفة زي Properties Files, JSON, Excel.‬\n‫Reporting: إعداد Allure Reporting وربطه مع Logs, Screenshots, Videos عشان توثق النتائج بشكل احترافي.‬\n‫CI/CD: شرح إعداد CI/CD pipelines باستخدام GitHub Actions لتشغيل Test Automation Scripts تلقائيًا بعد كل push أو merge.‬\n‫Git & GitHub: Introduction كامل لإدارة الأكواد وحفظ المشاريع.‬\n‫بالإضافة إلى تغطية جزء عملي يعتمد على مفاهيم شهادة Test Automation Engineer (TAE) v2 كـ reference، بحيث تخرج من الكورس جاهز لتطبيق اللي اتعلمته في real-world projects.‬\n‫سواء كنت Manual Tester عايز تبدأ في Automation، أو SDET حابب تبني Framework خاص بيك، أو حتى Developer عايز يفهم Testing Tools زي Selenium, TestNG, Allure Reporting، الكورس ده معمول عشانك.‬\n‫كل ده بأسلوب بسيط ومنظم، ومع تطبيق عملي خطوة بخطوة تقدر تبني عليه Framework كامل بنفسك بعد الكورس.‬",
      "target_audience": [
        "‫أي شخص حابب يبدأ في مجال Test Automation خطوة بخطوة باستخدام Selenium مع Java.‬",
        "‫Manual Testers اللي حابين يعملوا career shift أو upgrade لمهاراتهم ويبدأوا في Automation Testing.‬",
        "‫أي SDET (Software Development Engineer in Test) حابب يبني Test Automation Framework (TAF) خاص بيه بشكل احترافي وقابل للتطوير والتوسّع.‬",
        "‫أي حد بيحضّر لـ Test Automation Engineer (TAE) v2 Certification وعايز يفهم جزء الـ Practical بشكل واضح ومنظم.‬"
      ]
    },
    {
      "title": "Browserautomatisierung mit Python und Selenium",
      "url": "https://www.udemy.com/course/browserautomatisierung-mit-python-und-selenium/",
      "bio": "Professionelle Integrationstests und Automatisierung von Aufgaben",
      "objectives": [
        "Nach diesem Kurs kannst du deinen Browser mit Python automatisch steuern."
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Automatisch Googlen"
        ],
        "Grundlagen": [
          "Unittests mit Selenium",
          "Elemente finden"
        ],
        "Fortgeschrittenes": [
          "Besondere Tasten (Alt, Enter,...)",
          "Die Browser-History",
          "Cookies",
          "X-Path"
        ],
        "Warten": [
          "Explizites Warten",
          "Implizites Warten und eigene Wartebedingungen"
        ],
        "Bonus": [
          "ActionChains",
          "ChromeOptions"
        ]
      },
      "requirements": [
        "Vorwissen in Python wird vorausgesetzt.",
        "Vorwissen in HTML ist hilfreich."
      ],
      "description": "In diesem Kurs lernst du, deinen Browser automatisch Dinge erledigen zu lassen - einmal programmieren - jederzeit ausführen.\nSomit ist Selenium das perfekte Tool für Integrationstests von Webanwendungen oder die Automatisierung von allerlei immer gleichen Aufgaben.\nDu musst dazu nur Grundlagenwissen in Python besitzen und eventuell HTML lesen können. Alles andere wird dir hier erklärt. Sollte dir Wissen fehlen, um den Kurs entweder zu belegen oder zu absolvieren, zögere nicht, mich anzuschreiben und wir finden sicher einen Weg :)\nViel Spaß!",
      "target_audience": [
        "Python-Entwickler mit Anfängerkenntnissen, die langweilige Aufgaben im Browser automatisieren wollen",
        "Softwareentwickler, die mit Python Integrationstests für ihre Webanwendung schreiben wollen"
      ]
    },
    {
      "title": "Убийца Selenium: Автоматизация тестов с Cypress",
      "url": "https://www.udemy.com/course/cypress-m/",
      "bio": "Самая современная QA система для новичков и бывалых",
      "objectives": [
        "Первые тесты за 5 минут",
        "Автоматизация веб приложения",
        "Автоматизация API",
        "Что такое Cypress и чем он отличается от других систем автоматизации",
        "Как установить все, что нужно для использования Cypress",
        "Использование встроенной функциональности Cypress"
      ],
      "course_content": {
        "О Cypress": [
          "Introduction",
          "В двух словах о системе",
          "Кто использует Cypress",
          "Предварительные знания",
          "Преимущества Cypress",
          "Недостатки Cypress",
          "Что необходимо установить?"
        ],
        "Тестируем веб аппликации": [
          "Установка Cypress",
          "V10 update",
          "Запускаем UI консоль",
          "Первый тест",
          "Документация и подсказки",
          "Вывод текста и проверка",
          "Активация кнопок",
          "Сетап тестов",
          "Комманда Select",
          "Ожидание и Таймауты",
          "Поиск сложных элементов",
          "Debugging",
          "Скриншоты",
          "Запускаем тесты из Command Line",
          "Примеры кода из уроков - basics",
          "Примеры кода из уроков - advanced"
        ],
        "Тестируем API": [
          "Посылаем простые GET запросы",
          "Посылаем POST запросы",
          "Конфигурация URL",
          "Примеры кода из уроков - API"
        ]
      },
      "requirements": [
        "Курс как для новичков, так и для специалистов в QA, Dev"
      ],
      "description": "По ходу курса вы научитесь использовать одну из самых популярных и современных систем на рынке автоматического тестирования Cypress. Вы узнате чем данная система отличается от подобных ей, как установить ее на ваш компьютер. Шаг за шагом вы научитесь писать тесты, используя несложный синтакс комманд, вначале для графической оболочки WEB аппликации, а после и для API составляющей. Курс не требует предварительных знаний в программировании.",
      "target_audience": [
        "QA инженеры и Веб девелоперы, которые хотят познакомится с современной системой автоматизации тестирования Cypress"
      ]
    },
    {
      "title": "Curso Automação Selenium em Python com Behave para iniciante",
      "url": "https://www.udemy.com/course/curso-automacao-selenium-em-python-com-behave-para-iniciante/",
      "bio": "Descubra os Fundamentos da Automação de Testes Web, Selenium, Python e a Ferramenta Behave, Ideal para Iniciantes de QA!",
      "objectives": [
        "Neste curso de Automação Selenium em Python com o Framework Behave e orientação a objeto, você será guiado desde o início, partindo do zero.",
        "Aprenderemos primeiro como instalar o Visual Studio Code, uma poderosa ferramenta de desenvolvimento que aumentará sua produtividade ao longo do curso",
        "Além disso, você descobrirá extensões que facilitarão ainda mais o processo de aprendizagem, proporcionando recursos adicionais.",
        "Um dos aspectos fundamentais do curso é a criação da estrutura arquitetônica de um projeto de automação.",
        "Aprenderemos a utilizar a premissa da orientação a objetos e exploraremos o Framework Behave, que é nativo do Python.",
        "Com esse conhecimento, você será capaz de criar projetos bem organizados, reutilizáveis e de fácil manutenção.",
        "Ira aprender a configurar adequadamente o projeto, abordaremos a instalação e o gerenciamento de extensões relevantes.",
        "Ao longo do curso, também abordaremos conceitos básicos de BDD (Behavior Driven Development) e a linguagem Gherkin.",
        "Compreender esses fundamentos é essencial para criar cenários de teste claros e eficazes, permitindo uma colaboração eficiente entre desenvolvedores, testadores",
        "Um dos elementos-chave do curso é a configuração de uma classe para acessar o navegador.",
        "Você aprenderá a estruturar corretamente essa classe, permitindo que você se conecte e controle o navegadores, Edge e Chrome",
        "Além disso, exploraremos chamadas de métodos usando o conceito do Behave, que oferece uma abordagem estruturada do comportamento esperado do software;",
        "Essa abordagem facilita a escrita de cenários de teste expressivos e legíveis, impulsionando a qualidade e a confiabilidade do código de automação."
      ],
      "course_content": {},
      "requirements": [
        "Este curso é projetado para pessoas que têm pouco ou nenhum conhecimento prévio sobre automação de testes com Selenium em Python, Framework Behave e orientação a objeto. Nossa abordagem cuidadosamente elaborada irá capacitá-lo a partir do zero, permitindo que você desenvolva as habilidades necessárias para ter sucesso nesse campo. Nós entendemos que começar algo completamente novo pode ser intimidante, mas queremos assegurar-lhe que não há necessidade de preocupação. Nossa equipe de instrutores especializados está comprometida em fornecer um ambiente de aprendizagem acolhedor e de apoio, onde todos os alunos, independentemente de seu nível de conhecimento atual, possam se sentir confiantes e capacitados. Durante o curso, você será orientado passo a passo, desde a instalação do Visual Studio Code até a criação de uma estrutura arquitetônica sólida de projeto de automação. Nossas lições são cuidadosamente projetadas para que você possa acompanhar facilmente, mesmo que seja a primeira vez que esteja exposto a esses conceitos. Abordaremos conceitos básicos de programação em Python, incluindo a criação de funções e classes, para que você possa entender os princípios fundamentais da orientação a objetos. Além disso, explicaremos os conceitos essenciais de testes de software e forneceremos exemplos práticos para ajudar a solidificar seu entendimento. Nossa abordagem didática utiliza exemplos e exercícios práticos para garantir que você possa aplicar o conhecimento adquirido imediatamente. Você terá acesso a recursos extras, como extensões do Visual Studio Code e materiais de apoio, para facilitar sua jornada de aprendizado. Acreditamos que qualquer pessoa com determinação e vontade de aprender pode dominar a automação de testes com Selenium em Python e o Framework Behave. Portanto, mesmo que você comece sem conhecimento algum, com nossa orientação especializada e conteúdo cuidadosamente estruturado, você será capaz de sair do zero e adquirir as habilidades necessárias para se destacar nessa área empolgante. Então, não deixe a falta de experiência prévia te desencorajar. Junte-se a nós e embarque nesta jornada de aprendizado, onde garantimos que você terá todo o suporte necessário para se tornar um profissional de automação de testes bem-sucedido, independentemente do seu ponto de partida."
      ],
      "description": "Fundamentos de Automação de Testes Web: O curso começa com uma introdução aos conceitos fundamentais de automação de testes web, adequados para iniciantes.\nSelenium com Python: Os alunos aprenderão a usar o Selenium, uma poderosa ferramenta de automação de testes, em conjunto com a linguagem de programação Python. Isso inclui a configuração do ambiente e a escrita de scripts de automação.\nAbordagem Orientada a Objetos: O curso demonstra como aplicar a orientação a objetos em automação de testes, o que ajuda a criar scripts mais organizados e manuteníveis.\nBehave: A ferramenta Behave é explorada em detalhes, permitindo que os alunos adotem a metodologia BDD (Behavior-Driven Development) para escrever cenários de teste legíveis em linguagem natural.\nEstrutura Arquitetônica de Mercado: Os alunos aprenderão sobre as melhores práticas em termos de estrutura arquitetônica para automação de testes, garantindo que seus testes sejam escaláveis e eficazes.\nExperiência Prática: O curso enfatiza a aplicação prática desses conceitos com exercícios e projetos para garantir que os alunos ganhem experiência real.\nNo geral, o curso é voltado para iniciantes que desejam adquirir as habilidades necessárias para automatizar testes web usando Selenium em Python, com foco na estrutura Behave e na criação de uma base sólida em automação de testes de qualidade.",
      "target_audience": [
        "Este curso é destinado a indivíduos que desejam iniciar sua jornada na automação de testes utilizando Selenium em Python, com o Framework Behave e orientação a objeto. É ideal para:",
        "Iniciantes na automação de testes: Se você é novo na área de automação de testes e deseja adquirir habilidades práticas nesse campo, este curso fornecerá uma introdução abrangente e um ponto de partida sólido.",
        "Profissionais de testes manuais: Se você já tem experiência em testes manuais e deseja expandir suas habilidades para incluir a automação, este curso é perfeito para você. Você aprenderá a criar scripts de automação eficientes, economizando tempo e aumentando a eficácia dos seus testes.",
        "Desenvolvedores interessados em testes de software: Se você é um desenvolvedor de software que deseja aprimorar suas habilidades de teste e garantir a qualidade do seu código, este curso irá guiá-lo na criação de testes automatizados robustos usando o Selenium, Python e o Framework Behave.",
        "Estudantes e entusiastas de tecnologia: Se você é um estudante ou simplesmente tem interesse em explorar a automação de testes e suas aplicações, este curso fornecerá uma base sólida para você começar sua jornada de aprendizado nessa área emocionante.",
        "Não há requisitos de experiência anteriores para participar deste curso, pois ele foi projetado para abranger desde os conceitos básicos até tópicos mais avançados. No entanto, um conhecimento básico de programação e de testes de software será útil para acompanhar o conteúdo com mais facilidade.",
        "Independentemente de sua formação ou experiência anterior, este curso foi projetado para capacitar você a se tornar um profissional de automação de testes competente, capaz de criar scripts de automação eficientes e aplicar as melhores práticas nessa área em constante evolução."
      ]
    },
    {
      "title": "Principios de pruebas software",
      "url": "https://www.udemy.com/course/principios-de-pruebas-software/",
      "bio": "Principios, fundamentos, niveles y tipos.",
      "objectives": [
        "Posicionar a SwTesting como parte fundamental del proceso de desarrollo software",
        "Aplicar la terminología propia de SwTesting para enriquecer y mejorar la comunicación en equipos de desarrollo",
        "Caracterizar los niveles CISA de SwTesting para conocer el impacto e importancia de cada uno durante la fase de pruebas en el software",
        "Caracterizar los tipos de prueba para identificar los mismos durante la planificación del proceso de desarrollo",
        "Escribir pruebas unitarias guiado por TDD",
        "Utilizar CucumberJs y Selenium para automatizar pruebas"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Bases de SwTesting": [
          "¿Qué es SwTesting?",
          "¿Por qué es necesario?",
          "Principios de SwTesting",
          "Fundamentos de SwTesting"
        ],
        "Niveles de prueba CISA": [
          "Presentación CISA",
          "Nivel C. Componentes",
          "Nivel I. Integración",
          "Nivel S. Sistema",
          "Nivel A. Aceptación"
        ],
        "Tipos de prueba": [
          "Definición de tipo de prueba",
          "Pruebas funcionales",
          "Pruebas no funcionales",
          "Pruebas de caja blanca y negra",
          "Pruebas relacionadas con el cambio"
        ],
        "Talleres en vivo": [
          "TDD perspectiva tester",
          "Cucumber 1/5. Typescript",
          "Cucumber 2/5. Javascript",
          "Cucumber 3/5. Propiedades globales",
          "Cucumber 4/5. Generalización de escenarios",
          "Cucumber 5/5. Preparación UI para pruebas",
          "Cucumber + Selenium"
        ]
      },
      "requirements": [
        "Estar familiarizado con el proceso de desarrollo de software",
        "Habilidades básicas de programación"
      ],
      "description": "El software testing es importante porque permite verificar y validar que el software cumpla con los requisitos y expectativas del usuario, así como también garantizar su calidad y fiabilidad. Las pruebas de software también pueden detectar errores y problemas en una etapa temprana del desarrollo, lo que puede ahorrar tiempo y costos en comparación con la identificación y corrección de errores en etapas posteriores. Además, las pruebas de software también pueden ayudar a mejorar la seguridad del software y prevenir problemas de seguridad potenciales. En resumen, las pruebas de software son un componente clave en el proceso de desarrollo de software y juegan un papel crucial en asegurar la satisfacción del usuario y el éxito del proyecto.\nEste curso se enfoca en los fundamentos, principios, niveles y tipos de pruebas de software.\nAprenderás acerca de las mejores prácticas en la industria para garantizar la calidad y fiabilidad de los productos de software. También explorarás los diferentes niveles de pruebas, desde las pruebas de componentes hasta las pruebas de integración y de sistema, y cómo se relacionan entre sí para garantizar una cobertura completa de las pruebas. Además, estudiarás los diferentes tipos de pruebas, incluyendo pruebas funcionales, no funcionales, caja blanca y caja negra, y aprenderás a seleccionar y aplicar la técnica adecuada para cada situación. Este curso es ideal para aquellos interesados en entrar en el campo de las pruebas de software o para aquellos profesionales de TI que buscan mejorar sus habilidades en este área crítica.\nCon la comprensión profunda de los fundamentos y principios de las pruebas de software, podrás contribuir al éxito de cualquier proyecto de desarrollo de software.",
      "target_audience": [
        "Profesionales en el área de software",
        "Entusiastas en iniciar en el área de Software Testing"
      ]
    },
    {
      "title": "Probador Certificado ISTQB 4.0 Nivel Básico - Fundamentos",
      "url": "https://www.udemy.com/course/istqb-4-fundamentos-tester-software/",
      "bio": "ISTQB CTFL Foundation",
      "objectives": [
        "Comprender los conceptos fundamentales de las pruebas de software",
        "Comprender los conceptos fundamentales de las pruebas de software",
        "Identificar el enfoque de la prueba y las actividades a implementar dependiendo del contexto de la prueba",
        "Evaluar y mejorar la calidad de la documentación",
        "Aumentar la eficacia y eficiencia de las pruebas",
        "Alinear el proceso de prueba con el ciclo de vida del desarrollo de software",
        "Comprender los principios de gestión de pruebas",
        "Escribir y comunicar informes de defectos claros y comprensibles",
        "Comprender los factores que influyen en las prioridades de la prueba y los esfuerzos de la prueba",
        "Conocer los riesgos y beneficios relacionados con la automatización de pruebas",
        "Comprender el impacto del riesgo en las pruebas",
        "Crear informes efectivos sobre el progreso y la calidad de la prueba"
      ],
      "course_content": {
        "Introducción": [
          "Bienvenida - Introducción",
          "Carrera de Probador",
          "Objetivos de Aprendizaje",
          "Estructura de Syllabus",
          "Examen de Certificación"
        ],
        "Fundamentos de la prueba": [
          "Qué es Probar",
          "¿Por qué es necesario probar?",
          "Errores, defectos y fallos"
        ],
        "Principios de la prueba": [
          "Principios de la prueba"
        ],
        "Actividades de la Prueba, Testware y Roles de la Prueba": [
          "Actividades y Tareas de la Prueba",
          "El proceso de prueba en contexto",
          "Trazabilidad entre la Base de Prueba y el Testware",
          "Roles y Competencias en las pruebas",
          "Independencia de las Pruebas"
        ],
        "Pruebas a lo largo del Ciclo de Vida de Desarrollo de Software": [
          "Pruebas y CVDS",
          "Prueba como guía de desarrollo / Técnicas de desarrollo ágil de software",
          "Devops y Pruebas",
          "Retrospectivas"
        ],
        "Niveles y Tipos de Prueba": [
          "Niveles de Prueba",
          "Tipos de Prueba"
        ],
        "Pruebas Estáticas": [
          "Pruebas Estáticas",
          "Proceso de Retroalimentación y Revisión"
        ],
        "Análisis y Diseño de Prueba": [
          "Análisis y Diseño de Pruebas",
          "Técnicas de prueba de Caja Negra",
          "Análisis Valor Límite",
          "Tabla de Decisiones",
          "Transición de estado",
          "Prueba de cobertura de sentencia",
          "Prueba cobertura de rama",
          "Técnicas de prueba basado en la experiencia",
          "Enfoques de prueba basados en la colaboración"
        ],
        "Gestión de las Actividades de Prueba": [
          "Plan de Pruebas",
          "Criterios de Entrada y de Salida",
          "Técnicas de estimación",
          "Priorización Casos de Prueba",
          "Pirámide de Prueba",
          "Cuadrantes de Prueba"
        ],
        "Gestión de Riesgos": [
          "Gestión de Riesgos"
        ]
      },
      "requirements": [
        "Aprenderás todo lo necesario. No se requiere conocimientos previos"
      ],
      "description": "Probador Certificado ISTQB 4.0 Nivel Básico - Fundamentos\nCurso basado en la última actualización para 2023 - ISTQB 4.0.\nLa certificación ISTQB® Certified Tester Foundation Level 4.0 (CTFL 4.0) proporciona conocimientos esenciales de pruebas que se pueden poner en práctica, así como la terminología y los conceptos utilizados a nivel mundial para el dominio de las pruebas. La certificación CTFL 4.0 es relevante en todos los enfoques y prácticas de entrega de software, ya sean Agile, tradicional o cascada y DevOps.\nEste es un curso de nivel básico, diseñado para proporcionar a los participantes un entendimiento general de los principios fundamentales de pruebas. Al participante, le permitirá realizar y apoyar actividades para pruebas de desarrollo de software, teniendo en cuenta modelos y terminología común.\nEs el único curso en español con este nivel de calidad disponible. Sin embargo, es importante destacar que la participación en el curso no otorga la certificación en ISTQB automáticamente. Para ello, es necesario realizar y aprobar el examen correspondiente. No obstante, este curso proporciona todos los conocimientos necesarios para superar el examen y obtener la certificación.\nEUD Academy, actualmente como centro ATP (Accredited Training Provider) por ISTQB®, ofrece este curso para dar a conocer y afianzar, el conjunto de mejores prácticas que propone ISTQB® en procesos en pruebas de software, a través de una metodología que permita lograr la aprobación del examen ISTQB® Foundation 4.0.",
      "target_audience": [
        "Software testers",
        "Ingenieros",
        "Desarrolladores de software",
        "Directores de TI",
        "Ingenieros y Analistas de Pruebas"
      ]
    },
    {
      "title": "【한글자막】 Selenium WebDriver와 자바 : 기본부터 고급까지 + 프레임워크",
      "url": "https://www.udemy.com/course/selenium-webdriver-java-k/",
      "bio": "Selenium WebDriver와 Java의 기초부터 고급까지 학습 및 프레임워크 디자인과 원활한 취업 지원을 위한 강의 제공 - 이론 및 핵심 개념 정리와, 코드 덤프, 실시간 프로젝트와 실용적인 솔루션 강의!",
      "objectives": [
        "100여 개의 예시를 통한 실시간 셀레니움 문제에 대한 깊이 있는 이해가 가능합니다",
        "TestNG, MAVEN, ANT, JENKINS, LOG4J, CUCUMBER, HTML REPORTS, EXCEL API, GRID PARALLEL TESTING에 대한 완전한 지식을 습득할 수 있습니다",
        "취업 지원 시 이력서, 면접 준비에 관한 수강생 문의에 답변할 수 있는 5명의 전담 트레이너가 있습니다",
        "\"Selenium Mobile Testing Database 테스팅 및 성능 테스팅에 대한 추가적인 지식을 쌓을 수 있습니다",
        "인터넷에서 아무 웹사이트나 선택하여 가능한 모든 테스트 케이스로 자동화할 수 있게 됩니다",
        "자동화 테스트 케이스에 대해 가장 최적화된 코드를 작성하는 코딩 기술을 개선합니다",
        "어떤 면접이든 통과하고 디자인 단계부터 전체 셀레니움 자동화 프로젝트를 리드할 수 있습니다",
        "어떤 면접이든 통과하고 디자인 단계부터 전체 셀레니움 자동화 프로젝트를 리드할 수 있습니다",
        "애플리케이션의 GUI로 데이터 무결성을 확인할 수 있게 됩니다",
        "고객을 감동시킬 수 있는 멋진 보고서를 만들 수 있게 됩니다",
        "자동화 가이드라인 및 코드 품질 표준에 대한 더 깊은 이해가 가능합니다",
        "사용할 수 있는 모든 웹 드라이버 자동화 기능을 사용해 볼 수 있는 연습 웹사이트를 포함합니다"
      ],
      "course_content": {
        "셀레니움 소개": [
          "***강의에서 자주 하는 질문(FAQ)***(필수 시청)",
          "본 강의가 셀레니움 카테고리에서 베스트셀러 강의인 이유**(필수 시청)**",
          "셀레니움 요강 및 문의를 위해 트레이너에게 연락하는 방법",
          "셀레니움 기능 - 반드시 알아야 할 내용",
          "Selenium WebDriver 아키텍처 개요",
          "셀레니움 소개 노트 다운로드",
          "강의를 최적으로 시청하기 위한 비디오 플레이어 설정 팁"
        ],
        "자바 및 셀레니움 설치 - Selenium WebDriver의 첫걸음": [
          "Java & Eclipse 설치 - 백지부터 Maven 프로젝트 설정하기",
          "Mac에서 Javahome을 설정하는 방법",
          "브라우저 드라이버 클래스와 WebDriver 인터페이스 핵심 개념 이해하기",
          "Google Chrome에서 테스트를 실행하는 방법 및 Chromed",
          "셀레니움으로 Chrome 브라우저를 호출할 수 없는 경우 문제 해결 방법",
          "기본 Selenium WebDriver 메서드로 시작하기",
          "Gecko와 Edge Driver로 Firefox와 Edge 브라우저에서 테스트를 실행하는 방법",
          "Microsoft Edge 브라우저에서 테스트",
          "코드 다운로드",
          "다음 섹션 중요 참고 사항",
          "OS 호환성 중요 참고 사항",
          "퀴즈 - 배운 내용 확인하기"
        ],
        "셀레니움 자동화를 위한 자바 기초이론 다지기": [
          "셀레니움 자동화를 위한 자바 기초 이론 학습 전략",
          "자바 변수 및 자료형 소개(예제 포함)",
          "자바 어레이 소개, 어레이를 초기화하고 값을 받는 방법",
          "문자열 및 정수 어레이를 반복하기 위한 For 반복문 소개",
          "향상된 For 반복문 선언 및 반복문 안에서 조건문 사용하기",
          "코드 다운로드",
          "어레이리스트 개념 및 어레이와의 차이점",
          "자바에서의 문자열 - 문자열 선언 방법 및 중요한 문자열 메서드",
          "메서드를 만드는 방법 및 자바 클래스 객체를 이용하여 메서드에 액세스하는 방법",
          "코드 다운로드"
        ],
        "수동 테스터와 초심자를 위한 코어 자바": [
          "7시간 심화 자바 학습 및 면접 질문"
        ],
        "객체 식별에 사용되는 로케이터 기법 및 툴": [
          "중요 참고 사항",
          "Selenium WebDriver에서 요소를 식별할 때 로케이터의 중요성",
          "id와 name 로케이터로 웹 요소 식별하기(예제 포함)",
          "요소 식별을 위한 클래스 이름과 CSS Selector 소개",
          "브라우저 플러그인 - 페이지에 있는 요소를 식별하고 검증하기 위한 Selectorshub",
          "Xpath와 linktext 로케이터 다루기 및 Xpath를 작성하는 다양한 방법",
          "HTML 속성을 이용하여 사용자 지정 Xpath와 CSS Selector 로케이터 만들기",
          "패런트 대 차일드 태그 횡단 기법으로 Xpath 생성하"
        ],
        "고급 로케이터 식별 및 텍스트 파싱 관련 면접 질문": [
          "정규 표현식을 이용한 CSS Selector 생성 - 예제",
          "코드 다운로드",
          "고유한 태그 이름 로케이터를 이용하여 웹 요소 식별하기 - 예제",
          "페이지에 있는 버튼 텍스트로 Xpath 생성하기(예제 포함)",
          "자바 메서드로 문자열을 파싱하여 페이지에서 역동적으로 패스워드 받기",
          "코드 다운로드",
          "다양한 브라우저에서 테스트 실행하기 및 Edge와 Firefox에서 객체를 검사하는 방법",
          "Xpath 횡단과 시블링 개념을 이용하여 로케이터 식별하기 - 예제",
          "Xpath로 차일드 요소에서 패런트 요소로 횡단하는 방법 - 예제",
          "Selenium WebDriver로 브라우저 탐색 및 창 속성 자동화하기",
          "코드 다운로드",
          "퀴즈 - 배운 내용 확인하기"
        ],
        "Selenium WebDriver -> 웹 요소 자동화 기법": [
          "중요 참고 사항",
          "Select Webdriver API로 정적 드롭다운 다루기",
          "최신 드롭다운 반복 UI 관련 업데이트 강의",
          "코드 스니펫 다운로드",
          "Webdriver API로 동적 드롭다운 다루기",
          "객체를 고유하게 식별하기 위한 패런트-차일드 관계 로케이터",
          "코드 스니펫 다운로드",
          "셀레니움으로 자동추천 드롭다운 다루기",
          "AutoSuggestive 코드 다운로드",
          "셀레니움으로 체크박스를 다루고 사이즈를 받는 방법",
          "자동화 테스트에서 어서션의 중요성과 사용 방법",
          "코드 스니펫 다운로드",
          "확인란 예제",
          "셀레니움으로 여행 웹사이트의 캘린더 UI 다루기",
          "속성을 이용하여 UI 요소의 활성화 여부 검증하기",
          "UI(드롭다운, EditBox, 오류 평가) 과제",
          "코드 스니펫 다운로드",
          "셀레니움과 모든 UI 요소를 이용한 단대단 자동화",
          "연습 코드 다운로드",
          "Selenium WebDriver로 자바 알림 다루기",
          "알림 코드 다운로드",
          "퀴즈 - 배운 내용 확인하기"
        ],
        "셀레니움을 이용한 기능 테스트 심층 분석": [
          "코드 형식화와 디버깅",
          "문제 - 전자상거래 앱에서 장바구니에 품목 추가하기",
          "결제를 위해 제품 어레이를 장바구니에 전송하기",
          "장바구니에서 어레이에 있는 품목을 처리하기 위한 프로그래밍 로직 구축하기",
          "흐름 구성 방식을 이해하기 위해 코드 디버그하기",
          "일관되지 않은 로케이터 문제를 해결하고 테스트를 깔끔하게 만들기",
          "코드 다운로드"
        ],
        "셀레니움 웹 드라이버에서 동기화 사용법": [
          "실시간 시나리오로 보는 묵시적 대기",
          "실시간 시나리오로 보는 명시적 대기",
          "자동화를 위한 시나리오와 대기의 필요성 예시",
          "묵시적 대기 실제 예시",
          "명시적 대기 실제 예시",
          "코드 다운로드",
          "명시적 대기를 사용한 동기화 - 과제",
          "유연한 대기와 그 장점",
          "유연한 대기를 사용하여 사용자 정의 메소드 만들기",
          "유연한 대기 연습 예시",
          "퀴즈 - 배운 내용 확인하기"
        ],
        "Ajax 호출, 자식 윈도우, 아이프레임을 자동화하는 기법": [
          "Ajax/마우스 상호 작용 처리하기",
          "Actions 클래스-실시간 예시",
          "윈도우 핸들 개념-실시간 예시",
          "자식 윈도우 다루기 라이브 예시",
          "코드 다운로드",
          "창 처리 과제",
          "프레임 처리 방법",
          "프레임 기술-실시간 예시",
          "프레임 과제",
          "퀴즈 - 배운 내용 확인하기"
        ]
      },
      "requirements": [
        "이 강의를 시작하는 데 Java 코딩 경험은 필요하지 않습니다",
        "프로그래밍을 하지 않는 지원자도 강의를 편안하게 들을 수 있습니다",
        "Java 지식을 포함한 모든 설치 설정을 강의의 일부로 다룹니다",
        "강력한 셀레니움 프레임워크 구축을 위한 실시간 프로젝트와 실용적인 솔루션 강의가 포함되어 있습니다",
        "이론적 자료, 코드 덤프, 면접 가이드의 다운로드가 가능합니다",
        "** 수강생에 대한 가장 신임 있는 노력으로 Udemy 베스트셀러 태그를 수상하였습니다**",
        "Udemy의 다른 셀레니움 온라인 강의에서 찾아볼 수 없는 (350건 이상의 강의와 500만 명의 수강생이 있는) 셀레니움 교육 커뮤니티에 참여하여 함께 학습하세요",
        "Udemy의 여타 강의에서 볼 수 없는 \"40,000건 이상의 평가 및 평균 4.6/5\"를 획득하였습니다"
      ],
      "description": "코딩 경험이 없어도, 아무런 사전 지식이 없어도 괜찮습니다.\n여러분은 Selenium WebDriver와 Java의 기초부터 고급까지 학습은 물론, 프레임워크 디자인과 면접 준비를 위한 이력서 관리 등 원활한 취업 지원을 위한 강의를 제공합니다.\n수강생 문의에 답변해주는 5명의 전담 트레이너와 함께합니다. (질문은 꼭 영어로 해주세요)\n이론 및 핵심 개념 정리와, 코드 덤프, 실시간 프로젝트와 실용적인 솔루션 강의 등 실무에 바로 사용할 수있도록 도와드립니다.\n\n\n**최근 강의 업데이트로 최신 셀레니움 4.0 버전 +프레임워크 면접 질문이 추가되었습니다.\n\n\n이 강의에는 Java 기본 핵심 + Selenium Webdriver + 고급 셀레니움 + 면접 준비 + 프레임워크 디자인(TestNG, ANT, PageObject, Maven, Jenkins, Excel Datadriven, Cucumber, log4j) + 셀레니움 그리드 + 데이터베이스 테스팅 + 셀레니움 스크립트에서 성능 테스팅 + 모바일 테스팅 기본 + 이력서 준비가 포함되어 있습니다. 이력서 준비에는 평생 지원(주문형 Skype 세션) + 자료 + 취업 지원- (미국, 인도, 캐나다)가 포함됩니다\n\n\n\n\n[본 강의를 수강해야 하는 이유]\n셀레니움을 배우고자 하는 열정은 있지만 코딩 지식은 없나요? 쉬운 교수법과 QA 포럼, Skype, Teamviewer를 통한 평생 문의 지원을 통해 지식을 공유 드리겠습니다\n베스트셀러 태그와 최고 평점(30,000건 이상의 별 5개 평점)수상에 빛나는 Udemy 유일의 셀레니움 강의(350개 이상의 강의)입니다.\n\"강의 2\"에서 Udemy에서의 엄청난 성공과 성공 스토리를 확인하세요\n본 강의에 포함된 사항: 실시간 프로젝트가 포함된 50시간 이상의 강의 + 주문형 Skype, Teamviewer 세션(평생 지원) 및 취업 지원 + 500만 수강생 학습 포럼 및 다른 온라인 강의에서는 찾아볼 수 없는 100페이지의 세부적인 자료\n원스톱으로 아무런 사전 지식 없이 셀레니움 전문가가 되세요.\n(다른 강의에서 우리 강의와 동일한 콘텐츠를 사용하는 것을 보았습니다. 주의하십시오)\n강의를 마치면 직장에서 성공적으로 셀레니움 자동화 테스팅 및 구현에 숙달하게 되거나 높은 임금을 받는 일자리를 구할 수 있습니다\n\n\n\n\n[강의 소개: 이 강의가 시장에서 유일한 이유]\n저희는 수강생이 자동화/코딩 경험이 없다고 가정하며 모든 주제를 아무런 사전 지식 없이 기본부터 시작합니다.\n예시는 다양한 구성 요소가 어떻게 자동화될 수 있는지 이해하도록 실시간으로 호스팅되는 웹 애플리케이션에서 가져옵니다\n\n\n\n\n[강의에서 다룰 주제]\n전체 Java 핵심\nSelenium WebDriver-주요 초점(20시간 이상 콘텐츠)\n지원되는 모든 브라우저에서 웹 애플리케이션 자동화 실제 예시\n고급 WebDriver를 사용하여 리치 웹을 처리하는 전략\nWebDriver에서 마주하게 되는 실시간 문제 및 해결하기 위한 솔루션\n셀레니움 그리드\n셀레니움 라이브 프로젝트\n면접 질문 토론 및 솔루션\nTestNG\nMaven\nANT\nJenkins\nLog4j\n테스트 실행 보고서\nCucumber\n데이터 기반 프레임워크\n하이브리드 프레임워크\n페이지 오브젝트 모델 프레임워크\n셀레니움을 사용한 데이터베이스 테스팅\n셀레니움을 사용한 성능 테스팅\n기본적인 모바일 자동화\nSauce Labs를 사용한 클라우드 자동화\n완전히 처음부터 프레임워크 디자인(TestNG, ANT, PageObject, Maven, Jenkins, Excel, Datadriven, Cucumber, log4j, 고객 html 보고서)\n\n\n즐거운 테스팅 되세요. 1강에서 뵙겠습니다!\n\n\n-Rahul",
      "target_audience": [
        "자동화를 배우는 데 관심이 있는 수동 테스터, 프로그래밍 지식이 없는 테스터",
        "IT 업계에서 커리어를 시작하고자 하는 신입생 및 졸업생",
        "Selenium WebDriver와 Java 기초부터 취업 지원 서비스까지 한번에 얻고 싶은 IT 취업준비생"
      ]
    },
    {
      "title": "QA Automation Serenity BDD, WebDriver, Java ,Git , Jenkis",
      "url": "https://www.udemy.com/course/qa-automation-serenity-bdd-webdriver-java-git-jenkis/",
      "bio": "Aprende a crear un framework de automatización con Serenity BDD , Git, Java con el patrón Screenplay WebDriver",
      "objectives": [
        "Escribir mejores pruebas de aceptación automática",
        "Encarar logicas de automatizacion",
        "Implementar el patrón de diseño de Screenplay",
        "A crear proyecto de Automation desde cero usando Serenity como framework usando Spring Boot",
        "Subir nuestro proyecto a un rpositorio GIT",
        "Hacer correr nuestro test automatizado con un job de Jenkis",
        "Generar Reportes al correr nuestro test automatizado",
        "Usar Tags en nuestros test",
        "Webdriver con el navegador Chrome"
      ],
      "course_content": {
        "Introduccion al Curso de Serenety": [
          "Introduccion de bienvenida al curso de Serenty BDD"
        ],
        "Configurando el Ambiente de trabajo": [
          "Introducción previa al curso Serenty BDD",
          "Documentacion del proyecto Serenty BDD",
          "Instalacion de Java",
          "Instalacion de Git",
          "Generando Llaves SSH Git",
          "Creando un repositorio en GIt Lab",
          "Instalar IntelliJ Idea",
          "Webdriver",
          "Instalar Maven"
        ],
        "Inicializar la estructura del proyecto Serenty": [
          "Crear Proyecto Maven",
          "Estructura del Proyecto Serenty BDD",
          "Configuracion del POM del proyecto",
          "Configuranto el Abstract en Serenty",
          "Configurando el Open Browser"
        ],
        "Creando nuestro primer test con serenty BDD": [
          "Test Open Google",
          "Intro Google Test",
          "Instalar Ranorex",
          "Analisis Patron Screan play",
          "Constantes Crean play",
          "Revisar los componentes HTML"
        ],
        "Question and Task Screanplay en Screan Play": [
          "Aplicar los conceptos del patron Screan Play",
          "Aplicando las Questions Assertion Componentes",
          "Aplicando la Question Assertions Exist",
          "Aplicando Assertion en el test sobre Google",
          "Creando la secction user Action Library",
          "Adicionando Pluging Lombok de Spring Boot en el proyecto"
        ],
        "Creando nuestro segundo test Moodle": [
          "Introduccion a automatizar Moodle",
          "Revisando los componentes de Moodle",
          "Open Component Moodle",
          "Aplicando Assertoin Boolean en los componentes de Moodle",
          "Aplicando Assertion String en los componentes de Moodle",
          "Completando los assertions"
        ],
        "Usando el conceptp de Task screanplay en el proyecto moodle": [
          "Tarea sobre aplicar conceptos de Screan play en nuestro proyecto",
          "Explicacion de la solucion de las tasks",
          "Creando el test para Input Value login Form",
          "Automatizando el Login de Moodle",
          "Ejecutando el test del login automatizando",
          "Creando los Selectores del Moodle Up",
          "Question del Dashboard de Moodle",
          "Acoplar las Questiones en el proyecto",
          "Tasks del Dashboard de Moodle",
          "Subir cambios al repositorio"
        ],
        "Intro Proyecto 3": [
          "Introduccion al proyecto Calculadora",
          "Revisando los componentes de calculadora app",
          "Operadores selectores de la calculadora",
          "Performable de los eventos del usuario",
          "Creando la URL del proyecto",
          "Questions Titles en la calculadora Calculador",
          "Task de la opcion Add (Suma) de la calculadora",
          "Otras Tasks en la calculadora",
          "Questions despues de la operacion de hacer la operacion Add en la calculadora",
          "Solucion al Bug de la opcion add de la calculadora",
          "Ejecutar el test de Add (suma) y ver el resultado",
          "Fixed el Bug Selectores en la opcion de Add (suma)",
          "Crear los Add Asertions de la calculadora",
          "Crear el Test Multiplicacion , Division de la calculadora"
        ],
        "Introduccion al proyecto POS con serenty BDD": [
          "Introduccion al proyecto POS",
          "Analisis de la Automatizacion del login POS",
          "Configuracion y analisis del proyecto POS",
          "Configuracion del proyecto POS",
          "Question y Task al proyecto POS",
          "Creando mas Questiones al proyecto POS",
          "Ejecutando el Test POS",
          "Resument y ejecusion del test",
          "Escogiendo un item del POS primera parte",
          "Escogiendo un item del POS segunda parte",
          "Automatizando la Seccion Add to Car",
          "Automatizando la Seccion check Out Section",
          "Automatizando la Seccion Summary Step Order",
          "Automatizando la Seccion Step confirmation",
          "Automatizando la Seccion tep thank you",
          "Automatizando la Seccion logout Component",
          "subir los cambios al repositorio"
        ],
        "Configurando y ejecutando los TAGS en serenty": [
          "Repaso para la instalacion de Maven y configuracion",
          "Ejecutando los test con TAGS de los test"
        ]
      },
      "requirements": [
        "Conceptos básicos de manejo de windows",
        "Conceptos básicos de programación.",
        "Conceptos básicos sobre JAVA para entender el framework de manera mas real y rapida",
        "Una computadora con sitema opertivo windows 7 o mayor",
        "Conección a internet estable"
      ],
      "description": "¡Conviértete hoy mismo en un QA Automation con java con serenety BDD y aprende una de las habilidades más solicitadas por las empresas de software que buscan empleados bien cualificados en este 2021!\n\n\n¡Este es el curso más completo aprenderas a automatizar, pero manteniendo la simplicidad para que aprender una tecnología con Java de manera mas sencilla y sea accesible para todos los estudiantes, para el lenguaje de programación Java con Spring Boot en Udemy! Ya sea que nunca hayas programado antes, o bien ya conozcas la sintaxis básica o tal vez quieras aprender sobre las funciones avanzadas de Serenety con Java y maven, ¡este curso es sin duda para ti si eres QA Manual y que quieres aprender QA Automation! En este curso te enseñaremos Serenety desde lo más básico con el patron ScreanPlay hasta convertirte en un experto capaz de programar lo que quieras.\n\n\n¡Con más de 70 clases, varias tareas de ejercicios y más de 8 horas de vídeo, este curso integral no dejará ningún concepto sin tratar! ¡Nuestro curso incluye varios proyectos desde lo mas basico hasta crear un como un mega proyecto final para crear un todo un portfolio de conocimientos prácticos en Serenty BDD!\n\n\nAprende a usar Serenety BDD para tareas del mundo real en la parte de Front End, Mostrar reportes generados , tags, questions, task, jenkis, y todo subirlo a un repositorio GIT y mucho más.\n\n\nEste curso te enseñará Serenety de una manera práctica, y además acompañando a cada una de las clases tienes la explicación práctica de conceptos diferente de programación en Serenety BDD, junto con un notebook con todo el código programado correspondiente a esa clase. ¡Aprende de la manera que sea mejor para ti: viendo el vídeo, programando desde cero o repasando el script ya creado mientras escuchas el audio del vídeo!\n\n\nDurante nuestro curso cubriremos una amplia variedad de temas, que incluyen entre otros:\n\n\nQué es Serenety BDD y por qué es tan popular para la automatizacion Front End\n\n\n- Conceptos básicos de la línea de comandos en bash con GIT\n\n\n- Cómo ejecutar TAGs para nuestros test\n\n\n- Reportes en serenety BDD\n\n\n- Instalar Jenkis\n\n\n- Crear un Jobs para nuestros test\n\n\n- Patron ScreanPlay para serenety\n\n\n- Questions\n\n\n- Task\n\n\n- Spring Boot\n\n\n- Maven para nuestro proyecto\n\n\n- Lombock\n\n\n\n\n¡Además, obtendrás acceso de por vida a más de 70 clases con sus dispositivos  correspondientes para cada tema de cada clase!\n\n\n¡Y por si fuera poco,para que estes tranquilo este curso viene con una garantía de devolución de dinero de 30 días! Si no estás satisfecho de alguna manera, recuperarás todo tu dinero, así que tienes riesgo nulo. Además, tendrás acceso a los notebooks como agradecimiento por probar el curso.\n\n\nEntonces,¿ a qué estás esperado? Aprende Serenety BDD de una manera que hará avanzar tu carrera profesional como QA Automation y aumentará tus conocimientos y opciones de ser contratado gracias a dominar esta nueva habilidad, ¡todo de una manera sencilla y práctica!",
      "target_audience": [
        "Personas que quieren entrar al fascinante mundo de la automatización con framework potentes",
        "Personas que trabajan como QA Manual y quieren analizar la parte de QA Automation Front End"
      ]
    },
    {
      "title": "Estratégias para gerenciar massa de dados em testes + DbUnit",
      "url": "https://www.udemy.com/course/massa-de-dados-dbunit/",
      "bio": "Aprenda 5 estratégias de como manter uma bateria de testes estável, mesmo trabalhando com dados dinâmicos no banco!",
      "objectives": [
        "Criar testes funcionais mais estáveis, uma vez que a massa de dados está controlada",
        "Aprender a criar massa de dados através de interface web e de serviços",
        "Fazer um gerenciamento de massa de modo que permita execução de testes manuais e automatizados",
        "Utilizar o DbUnit",
        "Definir um estado inicial de informações no banco para executar os testes com mais segurança",
        "Fazer verificações bem detalhadas sobre todos as informações armazenadas no banco de dados"
      ],
      "course_content": {
        "Introdução": [
          "Conteúdo do curso",
          "Porque gerenciar massa?",
          "Características analisadas",
          "Montando ambiente: JAVA",
          "Montando ambiente: Selenium",
          "Montando ambiente: Postgre SQL"
        ],
        "Estratégia #1 - Reaproveitamento de casos de testes": [
          "Apresentação",
          "Testes Web",
          "Testes de Serviço",
          "Considerações"
        ],
        "Estratégia #2 - Criação de massas através da interface": [
          "Apresentação",
          "Testes Web",
          "Testes de Serviço",
          "Considerações"
        ],
        "Estratégia #3 - Gerador de massa": [
          "Apresentação",
          "Gerador de Massa",
          "Testes Web",
          "Testes de Serviço",
          "Melhorias",
          "Considerações"
        ],
        "Dependências": [
          "Escolhendo a melhor dependência",
          "Questão de ordem"
        ],
        "Estratégia #4 - Massa de dados específica": [
          "Apresentação",
          "Testes de Serviço",
          "Considerações"
        ],
        "Estratégia #5 - Massa de dados geral": [
          "Apresentação",
          "Testes Web",
          "Acelerando execução",
          "Testes de Serviço",
          "Considerações"
        ],
        "Qual a melhor estratégia?": [
          "Qual a melhor estratégia?"
        ],
        "DbUnit": [
          "Gerando massa a partir do banco",
          "Importando massa para o banco",
          "Resolvendo relacionamentos",
          "Refatorando estratégia #4",
          "Refatorando estratégia #5",
          "Assertivas",
          "Gerenciando Erros",
          "Filtrando resultados",
          "Cálculo de saldo #2",
          "Cálculo de saldo #4",
          "Massa dinâmica na importação",
          "Relacionamentos cíclicos",
          "Sequences"
        ],
        "Encerramento": [
          "Até a próxima",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA",
        "Você deve ter um conhecimento básico de SQL"
      ],
      "description": "Seja bem vindo ao curso de DbUnit e Gerenciamento de massa de dados para testes.\nNesse curso, vou apresentar 5 estratégias que você pode utilizar para garantir que a sua suíte de testes poderá ser executada sempre que for necessário, sem os testes falharem por erros na massa de dados. Conversaremos sobre os detalhes de cada estratégia e em qual tipo de ambiente elas podem ser melhor aproveitadas. As estratégias vão desde o reaproveitamento de casos de testes, geração de massa via interface do sistema, controle de estoque de massas até a criação de dados diretamente no banco.\nDurante o curso, vamos realizar os quatro testes principais (Inserção, Consulta, Alteração e Remoção), utilizando cada uma das estratégias de forma manual e automatizada, a nível de serviços e funcional (utilizando o Selenium). Vamos discutir sobre suas diferenças e como cada estratégia pode ser aplicada para eles. O curso possui muita prática, utilizando o JAVA como linguagem, porém foi utilizado apenas o básico da linguagem, de tal forma que possa ser adaptada para qualquer outra linguagem de programação.\nComo bônus, temos um módulo bem extenso sobre o framework DbUnit. Um framework em java muito poderoso que vai nos permitir simplificar ainda mais o trabalho em algumas estratégias, além de permitir ter um controle maior do banco de dados, podendo definir e/ou obter todas as informações contidas no seu banco de dados. Outra funcionalidade muito útil é poder faz assertivas em tabelas, conferindo linha por linha, coluna por coluna.\nNos vemos no curso :)",
      "target_audience": [
        "Testadores que possuem testes que vivem falhando, por conta de problemas com massa",
        "Testadores que passam mais tempo gerando massa de dados para os testes que executando os testes, de fato",
        "Testadores que desejam automatizar a geração de massa de dados para os testes",
        "Testadores que precisam definir um determinado estado no banco de dados",
        "Testadores que gostaria de conferir se os dados foram salvos corretamente no banco de dados"
      ]
    },
    {
      "title": "Website Testing Masterclass: Real Test Cases for QA Success",
      "url": "https://www.udemy.com/course/test-cases/",
      "bio": "Step-by-Step Guide to Website Testing | Manual Test Cases, Concepts & Test Design Techniques",
      "objectives": [
        "Ready to write expert level testcases with proper details",
        "Test case & Bug Report Writing",
        "Improve existing test cases and write effective testcases using designing techniques",
        "Detailed understanding of test case designing techniques, where and how to use.",
        "Understanding of testcase formatting using Excel features",
        "Real Time interview asked test cases",
        "Website testing all element test cases"
      ],
      "course_content": {},
      "requirements": [
        "Basic understand of Software Testing concepts",
        "Basic understanding of different types of testing",
        "Desire to get QA jobs"
      ],
      "description": "Test cases are very important for any project as this is the first step in any testing cycle, and if anything goes wrong at this step, the impacts get extrapolated as you move forward in the software testing life-cycle.\nKnowing how to write good test cases is extremely important for you as a testing resource and believe me, it doesn’t take too much of your effort and time to write effective test scripts! You just need to follow certain guidelines while writing test cases or as they call it – follow “test case writing best practices.”\nIn this course, I am going to talk about some simple yet effective tips which you could use for writing effective test cases.\nTest case writing is an activity which has a great impact on the testing phase and this makes test cases an important part of the test execution process!\nSo, writing test cases which are effective as well as reusable is very important; good test cases save a lot of time in the later stages of testing (really!) if you do it right in the first attempt…\nEffective Test Cases writing is a skill and you can acquire it only with practice and in-depth understanding of the application for which test cases are being written.\nIncorporating some simple tips I have given here will help you master the skill of test case writing.\n\n\nReal-World Test Case Coverage:\nYou’ll learn to write comprehensive test cases for the following website elements and features:\nUI Components: Header, Footer, Buttons, Dropdowns, Tooltips, Delete Buttons, Links\nForms: Login, Registration, Forget Password, Email, Mobile Number, Captcha, OTP Verification\nFunctionality: Upload File/Image, Payment Flow, Search Functionality, Error Messages, URL Validations\nWebsite Types: General websites and E-commerce websites\nTesting Types Covered: Functional Testing, GUI Testing, Design Testing\n\n\nWho This Course Is For:\nManual testers looking to enhance their test case writing skills\nQA professionals preparing for interviews or job transitions\nBeginners in software testing seeking practical test case training\nAnyone wanting to practice structured testing on real website elements\n\n\nStart this course and boost your confidence in writing high-quality test cases for any web application. Whether you're testing a simple login page or a complex e-commerce platform, the skills taught here will make you stand out as a detail-oriented and reliable tester.",
      "target_audience": [
        "software testers",
        "Candidate looking opportunity in manual testing",
        "Manual Tester who are looking to write better test cases or want to improve existing testcases",
        "People who want to learn Software Testing",
        "Fresher in software testing"
      ]
    },
    {
      "title": "Learn PyTest From Scratch in The Hindi Language",
      "url": "https://www.udemy.com/course/learn-pytest-from-scratch-in-hindi/",
      "bio": "Learn how to create & execute automation tests in pytest",
      "objectives": [
        "How to create and execute Automation test suite in pytest",
        "How to pick some/all/fixed number of tests to execute",
        "Learn about fixtures and how to use them in your tests",
        "Learn about markers, different types of makers",
        "How to run tests in parallel to reduce overall execution time",
        "How to generate pytest result report(HTML, jUnit-XML)"
      ],
      "course_content": {
        "Introduction": [
          "What is testing ? Automation ? and Framework ?"
        ],
        "PyTest Environment Setup on your System": [
          "Introduction to PyTest",
          "Links to install required stuff",
          "Python Installation",
          "PIP Installation",
          "PyTest Installation",
          "PyCharm Installation",
          "Future Updates",
          "Important Note"
        ],
        "Create and Run your first test": [
          "Let`s write your first test",
          "Code Walkthrough of writing and running your first test",
          "Exercise - 01",
          "Code Walkthrough of Exercise - 01"
        ],
        "How does Pytest identifies test files and test functions ?": [
          "Discovery of a test in PyTest",
          "Exercise - 02",
          "Code Walkthrough of Exercise - 02",
          "Discovery of a test in pytest"
        ],
        "Selecting Tests to Execute": [
          "Run all the tests from files and folders/subfolders",
          "Run tests from a specific file only",
          "Run selective tests by matching substring",
          "Extra on running selective tests by matching substring",
          "Run selective tests by applied marker",
          "Substring Vs Marker: Which one should we use ?",
          "Exercise - 03",
          "Code Walkthrough of Exercise - 03"
        ],
        "Fixtures": [
          "Fixtures",
          "Code walkthrough of a fixture",
          "How to access fixture across all files ? conftest.py",
          "Excercise - 04",
          "Code Walkthrough of Exercise - 04 (Scope & Autouse)",
          "Fixture as Setup and Cleanup",
          "Errors in Test Setup",
          "Fixtures"
        ],
        "Parameterize, skip and Xfail Test": [
          "Parameterized Test",
          "Skip Test",
          "Xfail Test",
          "Exercise - 05",
          "Code Walkthrough of Exercise - 05"
        ],
        "Running tests in Parallel": [
          "How to run tests in parallel using xdist pytest-plugin",
          "Code Walkthrough of xdist example",
          "Excercise - 06",
          "Code Walkthrough of Exercise - 06"
        ],
        "How to limit maximum test failures": [
          "maxfail in pytest",
          "Exercise - 07",
          "Code Walkthrough of Exercise - 07"
        ],
        "pytest.ini configuration file": [
          "How to inform pytest to pick other files to execute by pytest.ini",
          "Code walkthrough of pytest.ini file"
        ]
      },
      "requirements": [
        "You should have a basic understanding of the Python Programming Language.",
        "A system with an internet connection to install required stuff",
        "Desire to learn"
      ],
      "description": "Welcome to my first course, \"Learn PyTest from scratch in Hindi\" course, a PyTest test framework that is a hot favorite choice of a Python developer.\n\n\n\nNote: This course is in the Hindi Language.\n\nThis course is created in a way that even a newbie can follow. Whether you have never learned the PyTest framework or you know the basics but don`t know about the advanced topics, this course is for you. In this course, I will teach you the PyTest framework in the easiest way possible.\n\nTesting is a crucial thing, the framework provides an easy way to adapt and use it to implement tests, PyTest is the most widely used, and as it is based on python programming language, which doesn`t need any introduction. Learning PyTest becomes very easy as of the simple syntax of python.\n\nThis course will teach you PyTest in a practical way, with every lecture coming with a full code walkthrough and a screencast presentation of a topic. Each section has an exercise to test your knowledge of what you will be gaining from the particular section.\n\nI will start by helping you get installed needed things on your system, which include Python, PyTest, pip, and, PyCharm IDE.\n\n\nI have covered a wide variety of topics, including:\nInstalling Python, PyTest, pip, PyCharm\nRunning a test in PyTest\nAssert in PyTest\nUnderstanding the result of the test\nDiscovery of a test\nPyTest way of identifying test files and test functions\nFixtures\nMarkers\nConfig files\nPytest.ini file\nCommand-line option\nRunning tests in parallel\nHow to limit max test failures\nand much more!\n\n\nYou will get lifetime access to all the lectures plus the corresponding presentation slides of the lectures!\n\n\nSo what are you waiting for? Learn PyTest with me most easily and practically and boost your career.\n\n\nNote: This course is in the Hindi Language.",
      "target_audience": [
        "Anyone who wants to learn about running automation and test",
        "Developer who wants to learn PyTest for creating and running Python Tests",
        "Python developer who wants to add pytest in his/her skillset",
        "Software test Engineers",
        "QA Engineers"
      ]
    },
    {
      "title": "Testando Componentes com Cypress",
      "url": "https://www.udemy.com/course/testando-componentes-com-cypress/",
      "bio": "Domine os Testes de Componentes com Cypress e conquiste o controle da qualidade em aplicações modernas",
      "objectives": [
        "Como configurar o Cypress para testes de componentes em projetos React",
        "Criar testes isolados para componentes com cenários reais",
        "Definir localizadores no código pensando em testabilidade",
        "Simular requisições de API com cy.intercept()",
        "Controlar diferentes estados do componente com mocking",
        "Validar estilos e mensagens de erro com Cypress",
        "Entender a diferença entre testes e2e e testes de componentes",
        "Ganhar autonomia como QA em times ágeis com aplicações modernas"
      ],
      "course_content": {
        "Projeto prático": [
          "Agora você é QA na Startup Cardify",
          "O time de Dev atrasou o projeto! E agora?",
          "Criando um projeto Cypress para Testes de Componentes",
          "Criando meu primeiro Teste de Componente",
          "Trabalhando com Custom Commands",
          "Interceptando APIs e Submetendo Formulários",
          "Reutilização de Código, Hooks e Cobertura de Testes",
          "Variando a Massa de Testes com Spread Operator",
          "Execução na CLI e Publicação no GitHub",
          "Testes Contínuos com GitHub Actions"
        ]
      },
      "requirements": [
        "Node.js e npm instalados na máquina",
        "Editor de código (recomendado: Visual Studio Code)",
        "Conhecimento básico do Cypress",
        "Experiência com terminal de comandos",
        "Git for Windows + Gitbash Instalados"
      ],
      "description": "Neste curso prático e imersivo, você será convidado a assumir o papel de Quality Assurance na Cardify, uma fintech inovadora focada em carteiras digitais que gerenciam múltiplos cartões de crédito. Mais do que simplesmente aprender ferramentas, você vai mergulhar em um ambiente realista, enfrentando os desafios e as complexidades do dia a dia de um QA em uma startup moderna e ágil.\nSua missão é clara: garantir a qualidade bulletproof de uma aplicação React atual, utilizando o poder do Cypress para testes de componentes, com estratégias inteligentes que ultrapassam o modelo tradicional de testes end-to-end. Você vai aprender a construir uma base sólida de testes que previnem bugs, aceleram o desenvolvimento e dão confiança ao time de produto.\nO que você vai vivenciar no curso:\nCenário real, desafios reais\nTrabalhe com o código-fonte completo de uma aplicação React moderna, que representa os desafios de um produto de verdade\nIdentifique e corrija bugs autênticos encontrados em ambientes de produção\nAplique soluções e boas práticas adotadas por startups de alto crescimento, que valorizam a qualidade e a velocidade\nTecnologias e metodologias avançadas\nConfigure o Cypress para testes de componentes do zero, com foco em testes isolados, rápidos e confiáveis\nUtilize intercepts para simular APIs e garantir testes estáveis mesmo sem backend disponível\nDefina localizadores robustos e resilientes que facilitam a manutenção dos testes frente às mudanças constantes no código\nValide estilos, mensagens de erro, fluxos completos de funcionalidades e interações com APIs\nArquitetura de testes moderna e escalável\nAplique estratégias que vão muito além do tradicional E2E, com uma cobertura de testes sustentável e eficaz\nOrganize seus testes para que eles sejam fáceis de manter, rápidos de executar e completos\nInspire-se em metodologias utilizadas por empresas referência no mercado para garantir qualidade e agilidade\nDiga adeus aos exemplos genéricos e \"Hello World\" que não refletem os desafios reais do mercado. Aqui, você vai desenvolver competências técnicas sólidas e estratégicas para se destacar como um verdadeiro especialista em testes de componentes com Cypress — preparado para enfrentar os desafios reais de qualquer startup que valorize qualidade e inovação.",
      "target_audience": [
        "Testadores de Software"
      ]
    },
    {
      "title": "Selenium WebDriver - Do zero a criação de projetos + Projeto",
      "url": "https://www.udemy.com/course/selenium-webdriver-do-zero-a-criacao-de-projetos-projeto/",
      "bio": "Curso 3 em 1. Aprenda Selenium WebDriver do zero a criação de projetos de automação! Cursos bônus de JUnit 5 e TestNG!",
      "objectives": [
        "Selenium WebDriver do básico ao avançado",
        "Aprenda a utilizar a classe Action e Javascript commands",
        "Mapeamento de elemento avançado",
        "Padrão de projetos de automação com Selenium WebDriver",
        "JUnit 5",
        "TestNG",
        "Java básico"
      ],
      "course_content": {
        "Apresentação do curso": [
          "Apresentação do curso"
        ],
        "Introdução ao Selenium WebDriver": [
          "História do Selenium WebDriver",
          "Introdução ao Selenium WebDriver"
        ],
        "Configurando o ambiente": [
          "Overview sobre o ambiente",
          "Criar primeiro projeto maven",
          "Configurando dependências do Selenium WebDriver"
        ],
        "Curso básico de Java": [
          "A plataforma Java",
          "Classes, métodos e atributos",
          "Modificadores de acesso no Java",
          "Variáveis em Java",
          "Tipos de dados em Java",
          "Classes Wrapper",
          "Operadores em Java - Parte 1",
          "Operadores em Java - Parte 2",
          "Estruturas condicionais - if / else / else if",
          "Estruturas condicionais - switch case",
          "Laços de repetição - for",
          "Laços de repetição - while / do while",
          "Quizz Java básico"
        ],
        "Comandos do Selenium WebDriver": [
          "Comandos do Browser",
          "Comandos de navegação",
          "Comandos de WebElementos",
          "Quizz Comandos do Selenium WebDriver"
        ],
        "Selenium Locators - Locators básicos": [
          "Mapeamento básico - Locators - Parte 1",
          "Mapeamento básico - Locators - Parte 2",
          "Mapeamento básico - Locators - Parte 3",
          "Quizz sobre Locators básicos"
        ],
        "Classe Action": [
          "Classe Action - Simulando ações do teclado",
          "Classe Action - Simulando ações do mouse",
          "Quizz sobre Classe Action"
        ],
        "JavaScriptExecutor no Selenium WebDriver": [
          "Comandos executeScript - Parte 1",
          "Comandos executeScript - Parte 2"
        ],
        "Selenium Locators - Locators avançados": [
          "Locators avançado - CSS Selector - Parte 1",
          "Locators avançado - CSS Selector - Parte 2",
          "Locators avançado - Xpath - Parte 1",
          "Locators avançado - Xpath - Parte 2"
        ],
        "Waits no Selenium WebDriver": [
          "Introdução ao uso de Waits no Selenium WebDriver",
          "Wait Implicito",
          "Wait Explícito"
        ]
      },
      "requirements": [
        "Noções de Testes de Software",
        "Noções de Lógica de programação",
        "Noções de Java ou outra linguagem de programação"
      ],
      "description": "No curso de Selenium WebDriver - Do zero a criação de projetos  você irá aprender desde o mapeamento de elementos criando xpaths robustos, como criação de projetos utilizando padrão Page Factory, focado em reuso de WebElements e métodos de teste! O Curso mais completo de Selenium WebDriver! Você aprenderá a usar os frameworks de testes unitários mais usados do mercado (JUnit 5 e TestNG). Além disso conta com um minicurso de Java básico!",
      "target_audience": [
        "Estudantes de TI",
        "Analistas de Testes",
        "QAs",
        "Profissionais de TI"
      ]
    },
    {
      "title": "Egzamin ISTQB w pytaniach i odpowiedziach",
      "url": "https://www.udemy.com/course/egzamin-istqb-w-pytaniach-i-odpowiedziach/",
      "bio": "Zapoznaj się z 400 pytaniami i odpowiedziami jakie pojawiają się na egzaminie ISTQB poziomu podstawowego.",
      "objectives": [
        "Przygotowanie do egzaminu ISTQB poziomu podstawowego",
        "Nauka 400 pytań i odpowiedzi pojawiających się na egzaminie ISTQB",
        "Zapoznanie się z typowymi wzorcami egzaminacyjnymi",
        "Sprawdzenie swojej wiedzy przed egzaminem"
      ],
      "course_content": {
        "Wstęp": [
          "Społeczność testerów - Facebook",
          "Jak przygotować się do egzaminu ISTQB"
        ],
        "Pytania i odpowiedzi": [
          "Rozdział 1",
          "Rozdział 2",
          "Rozdział 3",
          "Rozdział 4",
          "Rozdział 5",
          "Rozdział 6",
          "Rozdział 7",
          "Rozdział 8",
          "Rozdział 9",
          "Rozdział 10",
          "Rozdział 11",
          "Rozdział 12",
          "Rozdział 13",
          "Rozdział 14",
          "Rozdział 15",
          "Rozdział 16",
          "Rozdział 17",
          "Rozdział 18",
          "Rozdział 19",
          "Rozdział 20"
        ],
        "Lekcje dodatkowe": [
          "Książka \"Certyfikat testera\"",
          "Książka \"Rekrutacja\"",
          "Aplikacja mobilna dla testerów",
          "Dalsze ścieżki rozwoju",
          "Jak napisać CV",
          "Portfolio testera"
        ],
        "Zakończenie": [
          "Podziękowanie i certyfikat",
          "Nagroda za ukończony kurs"
        ]
      },
      "requirements": [
        "Przerobienie sylabusa ISTQB poziomu podstawowego"
      ],
      "description": "Egzamin ISTQB w pytaniach i odpowiedziach – przygotowanie do CTFL\nPrzygotowujesz się do egzaminu ISTQB poziomu podstawowego (CTFL) i chcesz sprawdzić swoją wiedzę na realistycznych pytaniach?\nW tym kursie znajdziesz aż 400 pytań testowych, podzielonych na 20 zestawów, zgodnych z zakresem oficjalnego sylabusa ISTQB.\nKażde pytanie ma jedną poprawną odpowiedź oraz szczegółowe wyjaśnienie — dzięki temu uczysz się nie tylko „na pamięć”, ale naprawdę rozumiesz, jak myśli egzaminator.\n\n\nCo zawiera kurs?\n\n\n20 pełnych testów próbnych (każdy po 20 pytań)\n400 pytań i odpowiedzi, zgodnych z ISTQB Foundation Level (CTFL)\nWyjaśnienia pod każdym pytaniem — idealne do nauki i weryfikacji swojej wiedzy\nPytania z różnych obszarów sylabusa, takich jak:\npodstawowe pojęcia testowania\ntechniki projektowania testów\nzarządzanie testowaniem\nnarzędzia wspierające testowanie\ntestowanie oprogramowania mobilnego i inne\n\n\nDla kogo jest ten kurs?\n\n\nDla osób przygotowujących się do egzaminu ISTQB Foundation Level (CTFL)\nDla tych, którzy chcą przećwiczyć pytania egzaminacyjne w realistycznych warunkach\nDla osób, które już znają sylabus i chcą utrwalić wiedzę przed egzaminem\n\n\nWażna informacja:\nKurs nie zastępuje oficjalnych materiałów ISTQB i nie jest oficjalnym szkoleniem.\nZalecam, aby przed rozpoczęciem pracy z pytaniami zapoznać się z aktualnym sylabusem poziomu podstawowego, który jest dostępny na stronie SJSI lub ISTQB.\n\n\nCzym jest egzamin ISTQB?\nISTQB (International Software Testing Qualifications Board) to międzynarodowa organizacja tworząca standardy i certyfikacje z zakresu testowania oprogramowania.\nEgzamin ISTQB CTFL to test jednokrotnego wyboru, który sprawdza wiedzę teoretyczną i praktyczną z zakresu testowania.\nPosiadanie certyfikatu ISTQB to atut na rynku pracy – potwierdza Twoje kwalifikacje i może zwiększyć Twoją wartość w oczach pracodawców.\n\n\nJeśli chcesz przetestować swoją wiedzę przed egzaminem i zwiększyć swoje szanse na sukces — ten kurs pomoże Ci się dobrze przygotować.",
      "target_audience": [
        "Osoby przygotowujące się do egzaminu ISTQB poziomu podstawowego"
      ]
    },
    {
      "title": "Cómo integrar Cypress con Testrail",
      "url": "https://www.udemy.com/course/como-integrar-cypress-con-testrail/",
      "bio": "How to integrate Cypress to Testrail - step by step",
      "objectives": [
        "Introducción a Testrail API",
        "Diccionario",
        "Como generar un TestRail API Key",
        "Como integrar Cypress y Testrail"
      ],
      "course_content": {
        "Introducción": [
          "Introducción - Conociendo el proyecto base"
        ],
        "Testrail API": [
          "Overview",
          "Autenticación",
          "Testrail endpoints",
          "Testrail API key",
          "Cómo habilitar la API"
        ],
        "Diccionario": [
          "Método substring",
          "Método indexOf",
          "Template strings",
          "Codificación base64",
          "Metodos estáticos"
        ],
        "Integración - Mapeo de casos de pruebas manuales y casos de pruebas automatizado": [
          "Agregando el ID a cada titulo de caso de prueba",
          "Recorriendo los casos de pruebas y extrayendo los IDs"
        ],
        "Integración - Llamadas de API": [
          "Creando el header",
          "Creando el test run",
          "Agregando los resultados de las pruebas",
          "Entendiendo una limitación de Cypress",
          "Creando el Testrail test run en \"before:run\"",
          "Conectandolo todo"
        ]
      },
      "requirements": [
        "Conocimiento básico de Cypress",
        "Conocimiento básico de APIs",
        "Conocimiento básico de Testrail"
      ],
      "description": "Este curso describe paso a paso cómo integrar Cypress con Testrail de manera que al final de cada ejecución de nuestras pruebas automatizadas en Cypress se envíen los resultados de cada uno de los casos de pruebas a Testrail.\n\n\nEn el mundo del aseguramiento de la calidad de software, herramientas de gestión de casos de pruebas, como Testrail, son un ingrediente que no puede faltar. Por supuesto la automatización de pruebas en Cypress son cada vez más populares, por eso lograr que Testrail y Cypress converjan es una necesidad en mercado actual y en la web no parece haber mucha documentación al respecto. De ahi me surgió la idea de crear este curso.\n\n\nEl curso consta de tres bloques principales: un primer capítulo que consiste en un overview de la API de TestRail, en el que se explica cómo interpretar la documentación, cómo autenticar, etc. Un segundo capítulo que representa una especie de diccionario, en el que se recopilan conceptos de JavaScript que aparecen mientras escribimos código y se explican de una manera práctica. Finalmente, se incluye un último capítulo que describe paso a paso cómo hacer la integración. Este capítulo también menciona algunas limitaciones de Cypress relacionadas con el proyecto y cómo afrontarlas.",
      "target_audience": [
        "Automatizadores de pruebas Cypress"
      ]
    },
    {
      "title": "【한글자막】 Jest / Vitest 를 활용한 React 테스팅 라이브러리",
      "url": "https://www.udemy.com/course/jest-testing-library/",
      "bio": "React 테스팅 라이브러리와 Vitest 또는 Jest 로 최고의 앱 테스팅 방법을 배우세요. 모든 코드는 TDD 방식으로 작성되었습니다!",
      "objectives": [
        "React 테스팅 라이브러리로 간단하고 복잡한 React 애플리케이션 테스트",
        "React 테스팅의 모범 사례: 구현 대신 동작을 테스트하는 방법",
        "한 번에 하나의 파일을 실행하거나 테스트하는 것을 포함한 Jest Watch 모드를 최대한 활용",
        "테스팅 라이브러리에서 반환되는 일반적인 에러와 수정 방법"
      ],
      "course_content": {},
      "requirements": [
        "JavaScript 경험",
        "React에 대한 기초 경험",
        "React의 훅(Hook)과 콘텍스트에 대한 친숙도(이는 강의의 선택적 React 부분에서 간략하게 설명됩니다; 하지만 사전 경험이 있다면 도움이 될 거예요.)"
      ],
      "description": "2023년 11월 강의 대규모 업데이트 안내!\n프로젝트는 가볍고 빠른 리액트 앱 툴인 Vite 로 작성되었습니다.\n프로젝트는 Jest보다 훨씬 빠른 테스트 프레임워크인 Vitest 를 사용합니다.\n참고: Vitest 의 코드 구문은 Jest 와 동일합니다. 이 강의에 나오는 모든 코드는 Vitest 와 Jest 에서 모두 작동합니다.\n2023년 10월 출시된 Mock Service Worker 2.0 버전의 구문을 소개합니다.\n\n\nReact 테스팅 라이브러리는 React를 테스트하는 매우 대중적인 옵션이 되었습니다! 본 강의는 React 앱 테스트 전반에 대해 상세히 다뤄 탄탄한 기초를 제공합니다.\n\n\n모범 사례 (Best Practices)\nReact 테스팅 라이브러리 강의는 앱을 테스트하는 모범 사례를 장려하기 위해 설계되었습니다. 본 강의에서 다음과 같은 부분을 학습하시게 됩니다:\n구현보다는 동작을 테스트하기\n사용자 측면의 앱과 상호작용 테스트하기\n코드에 가능한 한 접근할 수 있도록 접근성 핸들로 요소 찾기\n\n\n광범위한 테스트 예제\n강의에서 제가 설명시 사용할 앱은 매우 간단한 (버튼 클릭으로 색상을 변경하는) 예제로 시작하여 다음과 같이 점점 더 복잡한 테스트 개념으로 발전합니다:\n비동기식 페이지 변경 테스트하기\nMock Service Worker를 사용하여 서버에서 데이터 시뮬레이션하기\n렌더링 시, 컴포넌트에 콘텍스트 제공자 적용하기\n이 강의는 여러분들의 학습을 아낌없이 지원하고 여러분이 성공할 수 있도록 설계되었습니다. 복잡한 개념을 점진적으로 성장시켜드리도록 하겠습니다.\n\n\n새로운 기술 연습\n학습 내용을 연습할 수 있는 기회도 많이 드립니다. 이 강의는 강의 프로젝트를 구축하는 동안 \"코드 퀴즈\"를 제공합니다. 배운 내용을 적용해 보고 영상에서 해답을 확인할 수 있습니다. (선택 사항인) 마지막 섹션에서는 두 번째 앱을 완료하고 강의에서 배운 개념을 다지기 위한 더 많은 예제를 제공합니다.\n\n\n선택적 React 강의\n이 강의에서 다루는 모든 중요한 React 코드는 별도의 강의로 분리됩니다. 수강생들에게 선택권을 드립니다: React 기술을 강화하고 싶은 수강생(또는 새로운 것을 배우고 싶은 수강생은!) 은 이 강의를 보시고 React 기술에 자신 있는 수강생은 해당 강의들을 건너뛸 수 있습니다.\n\n\n지원을 아끼지 않는 강사\n강사는 Q&A를 통해 도움을 주고 지원을 해준 입증된 실적을 갖고 있습니다. 수강생들과 교류하고, 강의의 개념에 대한 질문에 답하고, 강의 프로젝트에 대한 수강생들의 코드 디버깅을 돕는 것을 좋아합니다. (강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다.)\n\n\n여러분과 함께 할 여정이 기대되는군요. 1강에서 만나요!\n\n\n- Bonnie",
      "target_audience": [
        "앱에 대한 기능 테스트 작성법을 배우고 싶은 React 프로그래머 개발자",
        "코드 작성이 기존 동작을 손상시키지 않는다는 확신을 원하는 React 애플리케이션 엔지니어 (테스트, 최고!)"
      ]
    },
    {
      "title": "Selenium и Selenide для начинающих Automation QA + 2 проекта",
      "url": "https://www.udemy.com/course/selenium-selenide-test-automation-engineer/",
      "bio": "Java, Selenium, Selenide, JUnit, Allure report, Test Framework, CSS Selectors, XPath Locators, Page Object, GIT",
      "objectives": [
        "Подготовка и знакомство с инструментами и технологиями: Java, JUnit, Selenium WebDriver, Selenide, Git, Jenkinse, Allure Report",
        "Знакомство с XPath локаторами, CSS селекторами для нахождения элементов на странице",
        "Изучение Selenium WebDriver: базовые действия имитирующие поведение пользователя",
        "Проектирование тестов: PageObject, PageFactory",
        "Изучение Selenium WebDriver: продвинутые возможности имитирующие пользователя",
        "Изучение и применение Selenide: разбор отличительных свойств от Selenium",
        "Создание финальных проектов на Selenium и Selenide",
        "Создание отчетности с Allure Report"
      ],
      "course_content": {
        "Подготовка к проекту и первый тест": [
          "Введение",
          "Обзор проекта Selenium",
          "Технологии необходимые для курса",
          "Создание проекта и добавление зависимостей",
          "Инициализация драйвера и первый тест"
        ],
        "DOM и CSS, XPath локаторы.": [
          "DOM. Объектная модель документа",
          "Локаторы: способы поиска элементов",
          "CSS селекторы: тег, класс, идентификатор и атрибут",
          "CSS селекторы: родственные, псевдо-классы",
          "Локаторы: основы XPath",
          "XPath: базовая практика",
          "Оси XPath",
          "Функции XPath"
        ],
        "Selenium команды, действия и ожидания": [
          "Классификация Selenium команд",
          "Основные методы, часть 1",
          "Основные методы, часть 2",
          "Действия со страницей",
          "Действия с Cookie",
          "UI элементы и действия с ними",
          "Действия click и submit",
          "Действия sendKeys и clear",
          "Получение свойств элементов",
          "Определение состояний элементов",
          "Действия с окном и логи браузера",
          "Виды ожиданий элементов",
          "Действия с ожиданиями элементов",
          "Ожидание наличия и отсутствия элемента",
          "Ожидание исчезновения элемента",
          "Ожидание видимости элемента",
          "Другие условия ожиданий",
          "Действия с алертами, поп-апами",
          "Действия с фреймами"
        ],
        "Demo проект на Selenium": [
          "Page Object и Page Factory, часть 1",
          "Page Object и Page Factory, часть 2",
          "Про demo проект",
          "Чеклист и тестовые данные",
          "Структура проекта",
          "Обновляем pom.xml файл",
          "Создаем драйвер в CommonActions",
          "Работа с BaseTest и Config",
          "Работа с BasePage",
          "Создаем тест для MobilePayment",
          "Параллельный запуск тестов",
          "Генерация Allure отчета",
          "Дополняем проект тестами",
          "Добавляем скриншоты",
          "Очищаем директории от старых результатов",
          "Заключение: Добавляем скриншоты в отчет Allure"
        ],
        "Selenide и demo проект на Selenide": [
          "Про Selenide",
          "Первый тест на Selenide",
          "Изменяем BasePage",
          "Изменяем Pages",
          "Изменяем Listener и CommonActions",
          "Завершаем переход на Selenide"
        ]
      },
      "requirements": [
        "Необходимы базовые знания и навыки работы с языком программирования Java.",
        "Необходимы навыки продвинутого пользователя ПК, уметь установить софт на разные операционные системы: Windows, MacOS или Linux. В курсе разработка будет демонстрироваться на MacOS, однако вся работа аналогична для остальных систем."
      ],
      "description": "Данный курс является пошаговым руководством, к созданию собственного тестового фреймворка для применения на любом web-приложении, используя Selenium WebDriver и библиотеку Selenide с минимальной теорией и максимум практики.\nВо время курса слушатели смогут на практике освоить работу с тестовым фреймворком JUnit, разобраться в проектировании тестов на основе  шаблонов проектирования Page Object и Page Factory. Также буду рассмотрены как простые так и сложные CSS селекторы и XPath локаторы, необходимые для идентифициирования web-елементов.\nРазработка будет происходит на языке программирования Java. Несмотря на то, что мы не будем изучать данный язык программирования, программу курса построена так, чтобы как можно легче и проще построить тесты, ведь главное в тестах - это простота чтения, понимание и лаконичность.\nТакже в рамках курса мы косвенно изучим средства для создания отчетности: Allure Report.\nИ кульминацией курса будет анализ созданных проектов с помощью Selenium WebDriver и Selenide, выводы про том, какой инструмент лучше использовать.\nДанный курс будет полезным для специалистов по ручному тестированию, желающих увеличить свою компетенцию. Для студентов, изучающих новые технологии и желающих развиваться в автоматизации тестирования веб. И для всех людей, которые открыты к новым знаниям, чтобы быть в тренде передовых ИТ-технологий.\n\n\nSelenide - это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver, дающий следующие преимущества:\nИзящный API Поддержка Ajax для стабильных тестов Мощные селекторы Простая конфигурация\nВам больше не нужно заботиться о том, как закрыть браузер, обработать таймауты и StaleElement Exceptions или искать соответствующую строку в логах, отлаживая свои тесты -Просто сконцентрируйтесь на бизнес-логике и позвольте Selenide сделать все остальное!\n\n\n\n\n\n\nThis course is a step-by-step guide to creating your own test framework for use on any web application using Selenium WebDriver and the Selenide library with minimal theory and maximum practice.\n\n\nDuring the course, students will be able to practice working with the JUnit test framework, understand how to design tests based on the Page Object and Page Factory design patterns. I will also look at both simple and complex CSS selectors and XPath locators needed to identify web elements.\n\n\nDevelopment will take place in the Java programming language. Despite the fact that we will not study this programming language, the course program is built in such a way that it is as easy and simple as possible to build tests, because the main thing in tests is ease of reading, understanding and conciseness.\n\n\nAlso, as part of the course, we will indirectly study reporting tools: Allure Report.\n\n\nAnd the culmination of the course will be the analysis of the created projects using Selenium WebDriver and Selenide, conclusions about which tool is better to use.\n\n\nThis course will be useful for manual testing specialists who want to increase their competence. For students studying new technologies and wishing to develop in web test automation. And for all people who are open to new knowledge, to be in the trend of advanced IT technologies.\n\n\nSelenide is an automated web application testing framework based on Selenium WebDriver that provides the following benefits:\n\n\nSleek API Ajax support for stable tests Powerful selectors Easy configuration\n\n\nYou no longer have to worry about how to close the browser, handle timeouts and StaleElement Exceptions, or look up the corresponding line in the logs while debugging your tests - Just focus on the business logic and let Selenide do the rest!",
      "target_audience": [
        "Все желающие освоить новую профессию.",
        "Начинающие специалисты в автоматизации тестирования.",
        "Специалисты по ручному тестированию, желающие перейти в автоматизацию."
      ]
    },
    {
      "title": "Curso Testing para Android con JUnit, Mockito, Espresso, TDD",
      "url": "https://www.udemy.com/course/curso-testing-para-android-con-junit-mockito-espresso-tdd/",
      "bio": "Crea pruebas unitarias en Android con Kotlin: JUnit, Hamcrest, TDD, Mockito, Roboelectric, Espresso, Retrofit, MVVM.",
      "objectives": [
        "Implementar pruebas unitarias de tu código en Kotlin.",
        "Uso de herramientas como JUnit, Hamcrest, Mockito, Espresso, TDD, Robolectric y más...",
        "Sintaxis, directorios, configuraciones, versiones, todo para crear un entorno de pruebas robusto.",
        "Prácticas con Retrofit y Corrutinas.",
        "Manejo de anotaciones para ajustar tus funciones o clases de pruebas.",
        "Creación de software de calidad con técnicas como Test-Driven Development(TDD)",
        "Ejecutar pruebas especializadas en Android, por ejemplo: Dialog Fragment, Activity, Applicaction, Lifecycle, etc...",
        "Integración con escenarios de la Arquitectura de Componentes con MVVM, LiveData y Repository.",
        "Diferentes tipos de nombramientos para pruebas unitarias.",
        "Control de errores para el testing de Android y Kotlin.",
        "Reducir costos y tiempos en proyectos que requieren actualizarse o expandirse."
      ],
      "course_content": {},
      "requirements": [
        "Conocimiento de Kotlin y Android.",
        "Un ordenador con acceso a Internet y Android Studio."
      ],
      "description": "Te damos la bienvenida al mejor Espresso, JUnit, Mockito, Robolectric, se cubren temas básicos y avanzados, con múltiples herramientas populares y modernas para crear pruebas que validen tu código y permitan que tus proyectos evolucionen constantemente sin perder calidad. Se incluyen ejemplos de apps funcionales con MVVM, LiveData, Retrofit, y más.\n\n\nCrear una aplicación funcional es importante, no obstante hay que probar que todo salga bien y que no haya errores que ofrezcan un resultado equivocado, o incluso provocar que nuestras apps se detengan bruscamente. Las pruebas manuales son ineficientes y costosas, por ello la necesidad de automatizar las pruebas una sola vez, y dejar que el ordenador haga pruebas masivas en poco tiempo, con una fiabilidad proporcional a la calidad de nuestro software.\n\n\nAquí un pequeño listado de los temas más populares del curso:\nJUnit\nTDD\nHamcrest\nMockito\nRobolectric\nAndroidX Test\nArquitectura de componentes\nFragmentDialogs\nScenarios\nEspresso\nRetrofit\nLiveData\nCorrutinas\nAnotaciones\nReglas\nConfiguraciones\nY mucho más.\n\n\nEste curso esta hecho para que aprendas mientras practicas, se incluyen diferentes aplicaciones android, con estructuras internas que no se repiten, ocupando diferentes tipos de archivos, patrones de diseño, librerías, y todo tipo de variantes para que las herramientas de testing queden claras, sobre en que tipo de pruebas son más importantes o que problemas vienen a resolver.\nLos instructores que han diseñado este curso, son totalmente profesionales y los cientos de miles de estudiantes que forman parte de Frogrames y CursosAndroidANT, respaldan su reputación de profesores comprometidos.\n\n\nAlgo muy importante es el hecho de que las aplicaciones del curso ya están hechas, no perderás tiempo creando aplicaciones android, solo nos enfocaremos en implementar pruebas unitarias o instrumentadas que permitan probar diferentes tipos de funciones, casos de uso, y problemas específicos que vienen con el SDK de Android.\nUn punto importante es el ejemplo de como desarrollar software de calidad con recomendaciones oficiales, y técnicas del más alto nivel como TDD, para no solamente aprender a crear pruebas correctamente, si no también a beneficiarnos de ellas para mejorar nuestro código hecho y por hacer.\n\n\nCon todo esto, al final del curso podrás estas preparado para competir contra proyectos profesionales de las empresas más grandes y respetadas del mundo. Si por otra parte tu objetivo es entrar a equipos de desarrollo con más prestigio o prestaciones, ten por seguro que saber testing te ayudará a cubrir el perfil demandado.\n\n\nEs momento de seguir creciendo en tu formación y aumentar tus posibilidades para emprender o mejorar tu puesto actual.\n\n\nCuentas con 30 días de garantía para la devolución de tu dinero, así que no hay riesgo alguno en tu inversión, es más, estamos tan seguros que lo que aprenderás será tan valioso para tu futuro, que te invitamos a tomar el curso hoy mismo. No aplaces tus sueños de crecer, da ese paso y se parte de este grupo profesional de desarrolladores android.\nHaz click en obtener curso, y asegura tu futuro ya.\n\n\n\n\n\n\n¡Nos vemos en clase!",
      "target_audience": [
        "Desarrolladores Kotlin que necesitan mejorar su código y hacerlo a prueba de errores.",
        "Programadores que buscan reducir tiempos de pruebas, y aumentar la fiabilidad de sus aplicaciones.",
        "Personas que desean saber como escalar y evolucionar proyectos, sin perder calidad, y sin aumentar de personal."
      ]
    },
    {
      "title": "Кто такой тестировщик ? Что нужно знать и уметь ?",
      "url": "https://www.udemy.com/course/who-is-a-tester/",
      "bio": "Узнайте, подойдет ли вам профессия тестировщика, что нужно знать для первой работы и какие карьерные возможности открыты",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Предварительных знаний не требуется"
      ],
      "description": "Данный курс предназначен для тех, кто находится в поиске новой профессии и изучает сферы для дальнейшего развития и предварительных знаний не требует\nКурс подойдет абсолютно любому человеку, даже если вы ничего не знаете в IT сленге и не знакомы с направлениями в IT\nКурс содержит в себя теоретические знания по таким темам:\nКто такой тестировщик? Введение в профессию QA\nКому подойдёт тестирование?\nОбязанности тестировщика\nЧто нужно знать для первой работы?\nСколько зарабатывает тестировщик на разных этапах своей карьеры?\nКарьерное развитие и смежные направления, куда можно переквалифицироваться\nГде искать практический опыт\nГде искать первую работу\nКакие технологии необходимо выучить\n\n\nЧтобы веб-сайт, мобильное приложение или компьютерная игра хорошо работали, до выпуска их проверяют на ошибки. Этим на проектах занимаются тестировщики или QA-инженеры. Именно они обеспечивают качество цифрового продукта: проверяют его по разным сценариям, находят сбои и возвращают на доработку. Тестировщик проходит путь юзера, выполняя все действия, которые мог бы совершить пользователь продукта.\nQA-инженер продумывает, что и где может сломаться, прогнозирует и предусматривает сбои и находит ошибки. Именно от тестировщика зависит, будет ли продукт работать без багов у конечных пользователей.\nА чем же занимается на работе тестировщик? Как проходит рабочий день? Какие открыты карьерные возможности? Всё мы разберем за считанные минуты на этом бесплатном курсе. Присоединяйтесь!\n\n\nИнформация в данном курсе преподносится простыми словами без IT терминологии, что поможет человеку из совершенно других областей понять, интересна эта область для развития, или нет.",
      "target_audience": [
        "Все, кто хочет изменить сферу деятельности",
        "Для тех кто изучает и осваивает профессию Тестировщика ПО",
        "Желающие начать изучать IT индуструю"
      ]
    },
    {
      "title": "SonarQube - Le guide complet",
      "url": "https://www.udemy.com/course/sonarqube-le-guide-complet-edition-2021/",
      "bio": "SonarQube, un outil de révision automatique du code pour détecter les bogues, les vulnérabilités et les odeurs de code.",
      "objectives": [
        "Dans ce cours, vous apprendrez de nombreuses fonctionnalités de base et avancées de SonarQube.",
        "Nous allons commencer par les bases absolues et progressivement construire des connaissances sur SonarQube.",
        "Nous allons le faire en intégrant à la fois la théorie, une grande variété de concepts différents, et en adoptant une approche axée sur la pratique.",
        "Nous allons également explorer comment vous pouvez intégrer SonarQube avec Jenkins et GitLab."
      ],
      "course_content": {
        "Introduction": [
          "Présentation du cours",
          "Installation de SonarQube",
          "Prérequis et Exigences"
        ],
        "Scanner Sonar pour Maven": [
          "Scanner Sonar pour Maven",
          "Résumé",
          "Scanner Sonar pour Maven"
        ],
        "Gravité du probléme": [
          "Gravité du probléme",
          "Résumé",
          "Gravité du probléme"
        ],
        "Les règles": [
          "Les règles",
          "Les tags de règle intégrés",
          "Résumé"
        ],
        "Les portes de qualité": [
          "Les portes de qualité",
          "Définitions des métriques",
          "Résumé",
          "Définitions des métriques"
        ],
        "Technical Debt": [
          "Technical Debt",
          "Résumé",
          "Technical Debt"
        ],
        "Les profils de qualité": [
          "Les profils de qualité",
          "Résumé"
        ],
        "Les autorisations du projet": [
          "Les autorisations du projet",
          "Les règles relatives à la sécurité",
          "Résumé",
          "Les autorisations du projet"
        ],
        "Intégration Jenkins et Gitlab": [
          "Sonar Scanner pour Jenkins",
          "Intégration Gitlab"
        ],
        "Étendue de l'analyse": [
          "Étendue de l'analyse",
          "Résumé",
          "Étendue de l'analyse"
        ]
      },
      "requirements": [
        "Non"
      ],
      "description": "Bienvenue dans ce tutoriel sur SonarQube.\nSonarQube est un outil de révision automatique du code permettant de détecter les bogues, les vulnérabilités et les odeurs de code dans votre programme. Il peut s'intégrer à votre flux de travail existant pour assurer une inspection continue du code au sein des branches de votre projet et des pull requests. SonarQube peut analyser jusqu'à 27 langues différentes en fonction de votre édition.\nSonarQube se positionne en tant qu'outil leader pour l'inspection continue de la qualité et de la sécurité du code, tout en autonomisant les équipes de développement. Il prend en charge l'analyse de plus de 27 langages de programmation populaires, dont JAVA, C#, VB, JavaScript, TypeScript et C++.\nSonarQube s'intègre facilement à votre environnement Azure DevOps et identifie les bogues, les vulnérabilités de sécurité et les odeurs de code.\nAvec plus de 170 000 déploiements, soutenant aussi bien les petites équipes de développement que les organisations mondiales, SonarQube offre les moyens à toutes les équipes et entreprises du monde entier de posséder et d'influencer la qualité et la sécurité de leur code.\nDans ce cours, vous apprendrez de nombreuses fonctionnalités de base et avancées de SonarQube. Nous commencerons par les bases absolues et progresserons graduellement dans la compréhension de SonarQube. Cette approche inclura à la fois la théorie et une grande variété de concepts, tout en mettant l'accent sur la pratique.\nNous explorerons également comment intégrer SonarQube avec Jenkins et GitLab. À la fin de ce cours, vous aurez une compréhension très solide de SonarQube, de ses caractéristiques diverses, et vous vous sentirez à l'aise d'utiliser cet outil.\nJ'ai mis toutes mes connaissances et mon expérience en tant que développeur ayant travaillé abondamment avec SonarQube dans ce cours, simplement pour vous offrir la meilleure expérience d'apprentissage possible.\nJe serais ravi de vous accueillir dans ce cours et de commencer ce parcours d'apprentissage avec vous.",
      "target_audience": [
        "développeur",
        "développeur web",
        "développeur frontEnd",
        "développeur fullStack",
        "programmeur",
        "devops",
        "Ingénieur logiciel"
      ]
    },
    {
      "title": "Python - Testowanie kodu",
      "url": "https://www.udemy.com/course/testy-automatyczne-kodu-python/",
      "bio": "Naucz się pisać testy jednostkowe i poznaj metodykę TDD.",
      "objectives": [
        "Poznasz środowisko PyCharm i nauczysz się w nim pracować.",
        "Zrobisz sobie małą powtórkę z Pythona.",
        "Nauczysz się sprawnie testować swój kod.",
        "Dowiesz się, jak oszczędzić czas podczas testowania.",
        "Przekonasz się, w jaki sposób skutecznie debugować kod.",
        "Poznasz metodykę Test Driven Development."
      ],
      "course_content": {
        "Wprowadzenie": [
          "1.1. Wprowadzenie do kursu, instalacja środowiska Pycharm",
          "1.2. Wprowadzenie do Pycharm i środowisk wirtualnych",
          "1.3. Python - powtórzenie (zmienne, instrukcja if i for)",
          "1.4. Python - powtórzenie (funkcje, klasy)",
          "1.5. Unittest"
        ],
        "Py.test": [
          "2.1. Asercje - pierwsze testy",
          "2.2. Parametryzacja testów - te same testy dla różnych danych",
          "2.3. Fixtures - reużywalne fragmenty kodu",
          "2.4. Parametryzacja fixtures - te same fixture dla różnych danych",
          "2.5. Zaawansowane opcje fixture - automatyczne użycie, tymczasowe pliki",
          "2.6. Requests - zapytania do zewnętrznych serwisów",
          "2.7. Monkey patching - jak zastąpić dowolną funkcjonalność",
          "2.8. Mockowanie obiektów - monkey patching zrobiony lepiej",
          "2.9. Mock i MagicMock - jak to naprawdę działa?",
          "2.10. Conftest - globalny plik konfiguracyjny",
          "2.11. Coverage - sprawdzanie pokrycia kodu testami",
          "2.12. PDB/WDB - jak debugować kod",
          "2.13. Uruchamianie wyłącznie pożądanych testów",
          "2.14. Pytest.mark - oznaczenie testów flagami skip i xfail"
        ],
        "Test Driven Development": [
          "3.1. Wprowadzenie do metodyki TDD",
          "3.2. Rozwiązanie kata z użyciem TDD"
        ],
        "4. Zakończenie": [
          "4.1. Podsumowanie kursu",
          "Test sprawdzający wiedzę"
        ]
      },
      "requirements": [
        "znajomość języka Python",
        "chęć do podjęcia nauki języka Python"
      ],
      "description": "Obierz kurs na sprawne testowanie kodu\nTrudno wyobrazić sobie doświadczonego programistę, który w trakcie rozwijania kodu nie dba o jego przetestowanie. Dynamika powstawania oprogramowania powoduje, że kod z napisanymi testami automatycznymi jest o wiele bardziej odporny na przypadkowe błędy, które — nie ma co ukrywać — zdarzają się nawet najlepszym. Jeżeli więc zależy Ci na dostarczaniu niezawodnego kodu, testy automatyczne są obowiązkowym punktem na Twojej liście „to do”. W trakcie tego kursu nauczysz się, jak z sukcesem tworzyć podstawowe, a przy okazji najważniejsze z nich, czyli testy jednostkowe, które sprawdzają najbardziej szczegółowe funkcje.\nNiniejsze szkolenie to doskonały przewodnik po najpopularniejszej bibliotece służącej do testowania kodu języka Python, czyli py.test. Autor kursu nie omawia wyłącznie dokumentacji — kładzie nacisk przede wszystkim na dobre nawyki i zwyczaje, które zwiększają zarówno wartość testów, jak i biegłość ich tworzenia. Osoba, która ukończy proponowane przez nas szkolenie, z pewnością nabierze wprawy w pisaniu testów jednostkowych oraz polepszy jakość tworzonego oprogramowania. Co więcej, opanowanie testów jednostkowych będzie świetnym wstępem do nauki testowania funkcjonalnego oraz behawioralnego.\nPython - Testowanie kodu. Naucz się pisać testy jednostkowe i poznaj metodykę TDD kończy się na poziomie średnio zaawansowanym. W trakcie szkolenia jego słuchacz zdobędzie wyczerpującą wiedzę na temat testów jednostkowych. Kolejnym etapem nauki powinno być testowanie całościowego działania — najlepiej w oparciu o aplikacje webowe.\nWitaj w świecie testów jednostkowych!\nUsiądź wygodnie, uruchom kurs i przygotuj się na to, że kolejne trzy godziny swojego programistycznego życia spędzisz bardzo owocnie. Dowiesz się mianowicie, czym są testy jednostkowe i kiedy warto — a nawet trzeba! — je stosować. Nauczysz się pisać takie testy z wykorzystaniem wbudowanej w język Python biblioteki unittest. Poznasz dobre praktyki rozwijania testów oraz metodykę ich pisania według szablonu given – when – then. Opanujesz zasady DRY (don’t repeat yourself), reguły parametryzacji testów oraz mockowania, czyli tworzenia atrap obiektu, które będą naśladować jego funkcjonowanie. Dowiesz się, czym jest monkeypatching, oraz przyjrzysz się globalnemu plikowi konfiguracyjnemu Conftest. Sprawdzisz pokrycie swojego kodu testami. Wreszcie — będziesz debugować kod z użyciem wbudowanego debuggera pdb, korzystać z biblioteki wdb i zarządzać uruchamianiem poszczególnych testów.\nDla zaawansowanych\nNa koniec kursu poznasz najlepszą możliwą propozycję dla początkujących programistów: nauczysz się rozwiązywać proste ćwiczenie, czyli tzw. kata, w metodyce Test Driven Development. Metodyka ta zyskuje na popularności, zarówno jeśli chodzi o ćwiczenia programistyczne, jak i o profesjonalne pisanie kodu. Dobre opanowanie TDD pozwala nie tylko na tworzenie testów równolegle z oprogramowaniem, ale również pokazuje, jak wartościowe może być podejście od szczegółu do ogółu.\nPoznaj naszego eksperta\nJakub Wasielak — jest programistą Pythona, skoncentrowanym na rozwoju społeczności związanej z tym językiem. Działa jako współorganizator krakowskiej grupy Pykonik, uczestnik i twórca hackathonów oraz koordynator Python Challenge, mającego miejsce na konferencji PyConPL. W Pythonie pracuje od 10 lat — z nastawieniem na programowanie webowe. Na pytanie, co lubi w programowaniu, zawsze odpowiada, że kontakt z ludźmi. Poza relacjami międzyludzkimi pielęgnuje swoją miłość do fantastyki oraz gier planszowych. Po godzinach udziela się jako koordynator zlotu miłośników fantasy Fornost.",
      "target_audience": [
        "Do Ciebie! Jeżeli chcesz: nabrać wprawy w pisaniu testów jednostkowych;",
        "polepszyć jakość tworzonego oprogramowania;",
        "zamierzasz przystąpić do nauki testowania funkcjonalnego oraz behawioralnego - testy jednostkowe będą świetnym do tego wstępem!"
      ]
    },
    {
      "title": "２時間で分かるERPデータ移行の基礎",
      "url": "https://www.udemy.com/course/2-npveck/",
      "bio": "主にERP等の基幹系システムを念頭（SAP等）に、データ移行の各工程（要件定義〜設計〜開発〜テスト（移行リハーサルを含む））のポイントを学習し、データ移行が大規模プロジェクトの大惨事を引き起こさないためのアイデアを提供します。",
      "objectives": [
        "データ移行の概要の理解（基幹システム及びERPを主な対象として）",
        "データ移行要件定義のポイントの理解",
        "データ移行テスト（リハーサルを含む）のポイントの理解",
        "データ移行のその他の考慮点（ユーザーとベンダーの役割分担等）"
      ],
      "course_content": {
        "はじめに": [
          "はじめに（前）",
          "はじめに（後）"
        ],
        "データ移行の概要": [
          "データ移行とは",
          "ERPのデータ移行",
          "データ移行の工程とスケジュール"
        ],
        "移行要件定義のポイント": [
          "現行システム調査のポイント",
          "移行対象オブジェクト",
          "抽出条件の明確化",
          "本番移行時のスケジュール策定",
          "マッピング定義書"
        ],
        "設計・開発のポイント": [
          "移行ツールの決定",
          "手順書の作成"
        ],
        "データ移行のテスト": [
          "移行リハーサル",
          "移行プログラムの単体テスト",
          "検証プログラム",
          "移行データから計算される項目の新旧比較",
          "サンプルチェック"
        ],
        "その他考慮点": [
          "BI・DWHの場合",
          "データクレンジング",
          "ユーザーとベンダー（コンサル）の役割分担"
        ]
      },
      "requirements": [
        "前提条件はありませんが、システム開発のライフサイクルの一連の流れ（要件定義〜設計〜開発〜テスト）に親しみがあることが望ましいです。"
      ],
      "description": "【データ移行とは】\nデータ移行とは「古いシステムのデータを新しいデータに移す」ことを言います。（ちなみに携帯の機種変更時にも「データ移行」を行いますが、当コースでは携帯の機種変更ではなく、主に基幹系システムの「データ移行」を扱います。）それ自体は特に複雑なことではありません。\n【ERP登場によるデータ移行の難易度の高度化】\nしかし、ERPと呼ばれる「全社統合パッケージ」の登場により、会計／販売／調達／生産／物流といった全ての機能を一括で同時に導入することが一般的になり、その難易度は飛躍的に高まりました。なぜなら①一度に移行する移行対象のデータの量が飛躍的に増加し、②それらのデータは同時に移行作業を行えないことが多いため、各担当者は極めて短時間内にデータ移行を完了させる必要があるからです。\n私はシステムコンサルタントとして多くのデータ移行の現場を見てきましたが、順調なデータ移行よりは問題が多いデータ移行の方が多く、時には大惨事とも呼べるデータ移行を、間近で見てきました。\n【当コースの構成、及び作成に至った経緯】\nデータ移行にまつわる多くの問題は各工程、すなわち「要件定義〜設計〜開発〜テスト（リハーサルを含む）」をしっかりと行い、周到な準備を行うことで回避できると私は考えており、各工程の準備を行う上でのポイントを私の体験に基づいて解説したのが当コースです。また、（基幹システムの）データ移行の照準を当てた書籍や研修コースは非常に少なく、日本語で入手可能な書籍は私が知る限り１冊のみです。（当コース内「はじめに」のセクションで紹介しています。）このような情報不足もデータ移行関連のトラブルの遠因なのではないかと考え、当コースを作成した次第です。\n【当コースの限界】\n関連著作が少ないため、当コースを作成する基盤は私の実体験に頼る他なく、主観性が高い内容とならざるを得ない点ご理解下さい。また下記の私の経験による、コース内容（実例の説明）の偏りがある点についてもご理解の上、ご受講の判断をして下さい。\n・一般企業の会計分野（財務会計／管理会計）、金融業界のリスク管理分野での経験が多い\n・ベンダー側よりもユーザーサイドでの経験が多い\n・日本で閉じたシステムよりはグローバルに展開するシステムの経験が多い\n最後に、Udemyのコースでは例えばTableauといった特定のアプリケーションの解説を目的とした内容のコースを多く見かけますが、当コースでは特定の移行ツールの解説には一切踏み込んでいないことご了承下さい。",
      "target_audience": [
        "ITベンダー側で初めてデータ移行を担当することとなった方",
        "ビジネス・ユーザーで新システム導入担当となった方",
        "データ移行に関する研修教材を探していた方",
        "将来的にデータ移行に関わる可能性がある方"
      ]
    },
    {
      "title": "Что такое тестирование и кто такой тестировщик 2020",
      "url": "https://www.udemy.com/course/who_is_software_tester/",
      "bio": "Узнай все про это Бесплатно",
      "objectives": [],
      "course_content": {
        "Вступление": [
          "Структура курса"
        ],
        "Первые шаги": [
          "Что такое тестирование программного обеспечения",
          "Кто такой тестировщик",
          "Словарь тестировщика",
          "Задаем вопросы тестировщикам"
        ],
        "Теория тестировки в примерах": [
          "Примеры тестирования в цифрах",
          "Цикл разработки и модели тестирования ПО",
          "Практическое задание.",
          "Разбор практического задания."
        ],
        "Заключение": [
          "Подведение итогов"
        ]
      },
      "requirements": [
        "Никаких требований к курсу или предварительных условий."
      ],
      "description": "Данный курс подходит всем желающим  познакомится ближе с миром Тестирования программного обеспечения . Этот вводный  курс поможет узнать :\nЧто такое тестирование ?\nКто такой тестировщик ?\nЧто такое BUG или ошибка\nКто такой Quality Assurance Engineer?\nДля чего нужно тестирование ?\nНеобходимые навыки и знания тестировщика .\nПознакомимся с командой разработки ПО .\nУзнаем какая зарплата у тестировщика .\nА также мы зададим несколько вопросов тестировщикам",
      "target_audience": [
        "Люди, которые хотят начать работать в ИТ-индустрии, но еще не знакомы с тестированием программного обеспечения"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/initiation-au-test-logiciel-et-fonctionnel/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Dominando o TestComplete",
      "url": "https://www.udemy.com/course/dominando-o-testcomplete/",
      "bio": "Dominando o TestComplete - Tudo o que você precisa saber!",
      "objectives": [
        "Fundamentos do TestComplete",
        "IDE do TestComplete",
        "NameMapping",
        "Checkpoints",
        "DataDriven Testing",
        "Web Testing",
        "Web Service Testing",
        "Interceptação de eventos",
        "OCR (Optical Character Recognition)"
      ],
      "course_content": {},
      "requirements": [
        "Fundamentos em testes de software.",
        "Conhecimentos básicos em informática."
      ],
      "description": "O curso mais completo sobre o TestComplete em língua portuguesa!\nTestComplete, uma das ferramentas mais poderosas do mercado para testar tudo o que você pode imaginar!\nEleve o nível da qualidade de seu software com essa ferramenta!\nAprenda os principais conceitos da ferramenta, trabalhe com testes avançados utilizando checkpoint, nameMapping e muito mais que o TestComplete tem para oferecer.\nCom o TestComplete podemos aplicar praticamente todas as técnicas de testes disponíveis na literatura.\nVocê já pensou em automatizar os testes dos seus sistemas praticamente sem escrever 1 linha de código? Vou te mostrar como fazer isso de uma forma muito fácil! Mas se você é daqueles que gosta de colocar a mão no código, também abordaremos os aspectos para te ensinar como fazer isso.\nFácil de usar. Um editor integrado permite que usuários de qualquer conhecimento de programação adicionem e excluam testes, modifiquem parâmetros e alterem a ordem dos testes.\nCustomização. Além de usar a interface visual, você pode escrever ou editar o script manualmente se achar que a ferramenta do editor é insuficiente.\nAtualizações oportunas. Como este é um produto comercial, você pode esperar um alto nível de manutenção, suporte ao cliente e, claro, atualizações. A documentação também está completa e você não terá que navegar pelos fóruns procurando uma dica ou solução.\nSuporte de aplicativos de desktop. Enquanto por exemplo o Selenium só pode executar testes em um navegador (e aplicativos móveis usando o Appium), o TestComplete suporta aplicativos do Windows.",
      "target_audience": [
        "Analista de testes",
        "Desenvolvedores"
      ]
    },
    {
      "title": "軟體 API測試從初學者到專業-完整的Postman指南",
      "url": "https://www.udemy.com/course/postman_testing/",
      "bio": "Postman API測試手動和自動測試。",
      "objectives": [
        "使用Postman應用程序",
        "使用Postman提交RESTful請求",
        "了解什麼是RESTful API",
        "自動執行測試",
        "使用JavaScript編寫API測試"
      ],
      "course_content": {
        "Introduction": [
          "課程介紹",
          "下載安裝postman",
          "介紹Postman介面",
          "集合(Collection) :匯出匯入測試",
          "測試用NodeJS應用程式"
        ],
        "API和HTTP介紹": [
          "什麼是API",
          "什麼是HTTP"
        ],
        "創建,讀取,更新,刪除(CRUD) 要求POSTMAN操作": [
          "架設BestBuy API playground server",
          "創建Get 要求",
          "創建POST要求",
          "創建Delete要求",
          "創建PATCH要求"
        ],
        "開始測試與寫測試碼": [
          "你的第一個postman測試",
          "測試一個API",
          "測試更多的測試",
          "路徑參數(Path Parameters) VS 查詢參數 (Query Parameters)",
          "重構測試",
          "作業-完整流程測試說明",
          "完整流程測試"
        ],
        "變數": [
          "Postman的變數",
          "全域(Global)變數",
          "環境(Environment)變數",
          "Postman請求前腳本 (Pre-request script)",
          "了解變數範圍與差異"
        ],
        "斷言 Assertion": [
          "什麼是斷言 (Assertion)",
          "什麼是 Chia Assertion library",
          "斷言實作"
        ],
        "自動測試": [
          "集合自動測試",
          "Monitor 測試",
          "安裝 NodeJS 和 npm",
          "安裝Newman",
          "用Newman測試集合",
          "Newman其他方式測試集合",
          "用Jenkins執行Newman的先前確認",
          "用Jenkins執行Newman測試以及產生報表",
          "用newman產生一個漂亮的HTML報表"
        ],
        "Mock Server 模擬服務": [
          "Mock Server介紹與使用方式"
        ],
        "身分驗證": [
          "基本身分驗證",
          "JWT驗證"
        ],
        "上傳檔案測試": [
          "上傳單一檔案與多個檔案"
        ]
      },
      "requirements": [
        "需要基本的編程和/或JavaScript知識（編寫測試時需要）",
        "有關RESTful API和JSON的基本知識",
        "需要使用帶有Windows，macOS或Linux的電腦來看課程和安裝Postman。"
      ],
      "description": "RESTful API（或簡稱REST API）現在無處不在，但同時它們開始變得越來越複雜：不同的HTTP方法，標題，cookie，處理文件上傳或使用JWT等進行身份驗證多得多。\n\n\n但是，在開始投入時間編寫代碼來檢索API提供的數據之前，為什麼不首先測試請求以確保一切按預期工作？\n\n\n這是Postman App的用武之地！ Postman允許您使用所需的HTTP方法和參數快速創建請求，提交請求並輕鬆檢查結果。\n\n\n如果您正在開發API，Postman也可以提供幫助！我為測試工程師和軟件開發人員創建了這門課程。 Postman可以在API開發期間以及API完成後通過運行測試來幫助您，確保您的API仍然按預期工作。\n\n\n在本課程的第一部分，我們將開始探索Postman的功能，並繼續編寫API測試，目的是將它們集成到CI服務器中，測試將在當前運行。\n\n\n那麼讓我們來看看你將要學到什麼：\n從簡單的請求開始，向更複雜的場景發展\n學習如何處理身份驗證/授權機制，如基本身份驗證，JWT。\n開始編寫API測試\n組織集合中的測試並與您的團隊共享\n你問，我回答\n\n\n因此，在本課程結束後，您將了解如何使用Postman作為專業人士。",
      "target_audience": [
        "軟體測試工程師",
        "軟體開發工程師"
      ]
    },
    {
      "title": "Aprende con Cyberia Films y Soul Angels",
      "url": "https://www.udemy.com/course/aprende-con-cyberia-films-y-soul-angels/",
      "bio": "Aprendiendo sobre Inteligencia Artificial",
      "objectives": [],
      "course_content": {
        "Introducción CYBERIA FILMS y Soul Angels": [
          "Aprendiendo sobre Inteligencia Artificial",
          "Logros"
        ],
        "Ejemplos IA": [
          "Ejemplos con Inteligencias artificiales",
          "Preguntas"
        ],
        "Ejemplo IA 2": [
          "Ejemplos con inteligencias artificiales",
          "Preguntas"
        ],
        "ROI": [
          "ROI de Rubbrband",
          "Preguntas"
        ],
        "Workflow": [
          "Aprende a modificar el Workflow",
          "Gracias a todos",
          "Cámaras ?",
          "Preguntas"
        ]
      },
      "requirements": [
        "No es necesario ser ingeniero para realizar este curso"
      ],
      "description": "Aprendiendo sobre Inteligencial.\nArtificial Gracias a Cyberiafilms. org aprenda a crear fotos realistas con inteligencias artificiales.\nSimplemente acceda a la página web y en las pestañas señaladas como AI tools, encontrará apps diseñadas para la creación de imágenes con inteligencias artificiales.  Acceda gratuitamente y cree sus propias imágenes de texto a foto.  Tan sencillo como pedirle a la IA lo que desea ver y ella lo creará.\nEncontrará diferentes apps recomendadas por nosotros, no se preocupe todas y cada una de ellas están capacitadas para ofrecer una óptima calidad de imagen. Algunas incluso permiten la opción de hacer upscale con mejoras gráficas notables.\n\n\nSi la página web no funciona, no se preocupe,, puede acceder directamente a ellas ya que son completamente oficiales, 100% libres de virus y funcionales.\n\n\nEn Cyberiafilms no nos responsabilizaremos del mal uso que los usuarios puedan tener con estas tecnologías.\n\n\nDeseamos mostrar al mundo como desde una simple idea, podemos desarrollar una Narración o crear imágenes o vídeos que nos van a ayudar a previsualizar aquello que imaginamos.\n\n\nTodos las imágenes que obtengamos de las IA tendrán unos derechos de autor y dependerá de las suscripciones que usted pueda utilizarlas comercialmente o no bajo su propia responsabilidad .",
      "target_audience": [
        "Desarrolladores y principiantes interesados en Inteligencia Artificial."
      ]
    },
    {
      "title": "Mini Curso de Testes para Chatbots com Cypress",
      "url": "https://www.udemy.com/course/chatbots-com-cypress/",
      "bio": "Automatizando conversas: leve seus testes com Cypress para o próximo nível validando chatbots em aplicações reais.",
      "objectives": [
        "QAs que já usam Cypress e querem ampliar suas habilidades para novos contextos",
        "Desenvolvedores front-end interessados em testar fluxos de chatbot em aplicações React",
        "Profissionais de qualidade de software que buscam validar interfaces conversacionais",
        "Estudantes de testes automatizados que desejam aplicar Cypress em projetos reais",
        "Participantes do curso Ninja do Cypress que querem ir além do conteúdo principal"
      ],
      "course_content": {
        "Direto ao Ponto": [
          "Boas vindas ao Curso de Testes em Chatbots",
          "Chatbot em Ação: O Que Esperar?",
          "Configurando um novo Projeto Cypress",
          "Testando um fluxo completo",
          "Custom Commands para Reúso de Código",
          "Mais testes, menos códigos!"
        ]
      },
      "requirements": [
        "Pelo menos 6 mêses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Mini Curso de Testes para Chatbots com Cypress é uma formação ágil, prática e focada em quem deseja dominar a automação de testes em interfaces que utilizam chatbots baseados em regras. Em um cenário digital cada vez mais centrado na experiência do usuário, os chatbots têm se consolidado como ferramentas essenciais para atendimento, suporte e engajamento em plataformas web. No entanto, garantir que esses sistemas conversem corretamente, respondam adequadamente e proporcionem uma experiência fluida é um desafio que demanda testes rigorosos e bem estruturados — e é exatamente essa habilidade que você vai desenvolver aqui.\nNeste curso, você será guiado desde a configuração inicial de um projeto Cypress do zero até a construção de testes completos para fluxos de conversação de chatbots. Vamos abordar como validar respostas automáticas, lidar com diferentes cenários de interação e simular o comportamento real dos usuários em ambientes dinâmicos e reativos. Além disso, você vai aprender a criar comandos customizados para reutilizar trechos de código, aumentar a produtividade e facilitar a manutenção dos testes.\nCom foco em práticas recomendadas, o curso mostra como estruturar seus testes para que sejam rápidos, confiáveis e organizados, garantindo qualidade mesmo em projetos complexos. Essa formação é ideal para quem já conhece o básico do Cypress e deseja avançar aplicando seus conhecimentos em um contexto moderno e desafiador — o universo das interfaces conversacionais automatizadas. Prepare-se para ampliar sua expertise em automação e agregar um diferencial valioso ao seu currículo Tech QA!",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Curso de testing para PHP y Laravel - Experto en 100 días",
      "url": "https://www.udemy.com/course/curso-de-testing-para-php-y-laravel-experto-en-100-dias/",
      "bio": "Guía completa desde 0. Aprende tipos de tests, PHPUnit, dobles de prueba con Mockery, Pest, trucos de rendimiento y más.",
      "objectives": [
        "Dominar PHPUnit y Mockery para escribir tests de diferentes granularidades",
        "Conocer las utilidades de Laravel para el testing",
        "Evitar antipatrones y aprender buenas prácticas",
        "Aplicar estrategias avanzadas de testing para auditar las necesidades de nuevas pruebas y medir la calidad de las existentes"
      ],
      "course_content": {
        "Introducción al Curso de Especialización en Testing con PHP y Laravel": [
          "Presentación del curso",
          "¿Qué es el testing y por qué es importante?",
          "La importancia del testing"
        ],
        "Clasificación de pruebas": [
          "Tipos de pruebas",
          "Pruebas unitarias (unit testing)",
          "Pruebas de integración (integration testing)",
          "Pruebas de sistema (end-to-end testing)",
          "Diferencias entre tipos de pruebas"
        ],
        "Estrategias de testing": [
          "Estrategias de testing. La pirámide de Cohn y otras alternativas.",
          "Evita la duplicación de pruebas entre diferentes capas",
          "La pirámide de Cohn"
        ],
        "Primeros pasos con PHPUnit": [
          "Instalación y configuración",
          "Las tres fases de una prueba",
          "Validaciones habituales",
          "Símbolos y modos de ejecución",
          "Pruebas incompletas u omitidas"
        ],
        "Hora de establecer convenciones": [
          "¿Cómo organizamos las clases de prueba en un proyecto?",
          "¿Cómo debemos llamar a los métodos de prueba?"
        ],
        "PHPUnit intermedio": [
          "Uso de Test Cases base para reutilización de código",
          "Ciclo de vida de una prueba"
        ],
        "Utilidades de testing para Laravel": [
          "Configuración de la base de datos para pruebas automatizadas",
          "Pruebas de API en un CRUD de productos. Empezamos con la prueba de la creación.",
          "Métodos de aserción comunes de la TestResponse de Laravel",
          "Técnicas para depurar tests de API fallidos",
          "¿Es Postman aún relevante en un proyecto de Laravel?",
          "Tests inocuos con el trait DatabaseTransactions de Laravel",
          "Generación de datos ficticios para la fase preparatoria del test con Faker PHP",
          "Factorías de Laravel I. Definición y ejemplo. Segundo test de API.",
          "Factorías de Laravel II. Acceso a atributos.",
          "Factorías de Laravel III. Sobreescribir valores por defecto.",
          "Factorías de Laravel IV. create() vs make().",
          "Factorías de Laravel V. Callbacks afterMaking() y afterCreating().",
          "Factorías de Laravel VI. Creación de múltiples modelos.",
          "Factorías de Laravel VII. Sequences.",
          "Test de API para la actualización de productos en el CRUD de productos",
          "Test de API para la eliminación de productos en el CRUD de productos",
          "Probando caminos de error en tests de API"
        ],
        "Data Providers de PHPUnit": [
          "¿Qué son?",
          "Ejemplo con validaciones de una Form Request de Laravel",
          "Librería Laravel Test Assertions",
          "¿Cuándo se cargan los Data Providers en el ciclo de vida de un test?",
          "Truco con funciones anónimas",
          "DataProviderExternal en PHPUnit 10+",
          "TestWith y TestWithJson. Ejemplo con autenticación y autorización de endpoints."
        ],
        "Aserciones y fallos personalizados con PHPUnit": [
          "Cómo marcar un test como fallido"
        ],
        "Dobles de prueba": [
          "¿Qué son?",
          "Doble de prueba manual. Ejemplo con clase.",
          "Doble de prueba manual. Ejemplo con interfaz.",
          "Patrón self-shunt",
          "Uso de clases anónimas desde PHP 7",
          "Ejemplo de doble con PHPUnit.",
          "Ejemplo de doble con Mockery.",
          "Formas de instanciar un doble con Mockery",
          "Expectativas de número de llamadas con Mockery",
          "Expectativas de argumentos con Mockery",
          "Respuestas enlatadas con Mockery",
          "Respuestas enlatadas de excepciones con Mockery",
          "Expectativas de orden con Mockery",
          "Sintaxis alternativa de Mockery para expectativas y respuestas enlatadas",
          "Dobles parciales con Mockery",
          "¡Tu primer test unitario usando dobles con Mockery!",
          "¡Tu segundo test unitario usando dobles con Mockery!",
          "Optimiza tus tests unitarios con un TestCase propio",
          "¿Por qué Mockery::close() es clave en tus pruebas unitarias?",
          "Casos complejos de dobles con Mockery",
          "Tipos de dobles I: Mocks.",
          "Tipos de dobles II: Stubs.",
          "Tipos de dobles III: Espías.",
          "Tipos de dobles: Fakes.",
          "Tipos de dobles: Dummies.",
          "Dobles de objetos en Laravel con mock(), partialMock() y spy()",
          "Fakes y dummies en Laravel, ¡unos buenos aliados!",
          "¡No cometas este error al usar dobles de prueba en Laravel!",
          "¡Así es como puedes doblar fachadas en Laravel!",
          "Aprende a doblar el tiempo en Laravel",
          "Caso complejo de test de caso de uso con dobles de Laravel",
          "¿Qué son SUT y DOC en testing?"
        ]
      },
      "requirements": [
        "Saber usar un sistema operativo",
        "Conocimientos mínimos de programación",
        "PHP básico",
        "Laravel básico (preferible)",
        "No necesitas tener ningún conocimiento previo de testing o QA"
      ],
      "description": "¿Quieres mejorar la calidad de tu código y asegurarte de que tus aplicaciones funcionan como deberían?\nEste curso te llevará de la teoría a la práctica, enseñándote paso a paso cómo escribir tests efectivos en PHP, utilizando PHPUnit, Mockery y Laravel.\n\n\n¿Por qué este curso?\nEn la mayoría de los cursos de testing, los temas se tratan de forma superficial. Aquí, en cambio, aprenderás todo lo que necesitas para dominar el testing en PHP y Laravel, desde los fundamentos hasta técnicas avanzadas como las pruebas de mutaciones o la paralelización, para optimizar el rendimiento.\n\n\nLo que aprenderás\n- La importancia del testing y su impacto en la calidad del software.\n- Diferentes estrategias de testing más allá de la pirámide del testing.\n- Convenciones respecto a la organización de los tests en un proyecto, así como para los nombres de clases y métodos de prueba.\n- PHPUnit en profundidad (ciclo de vida de los tests, aserciones, dataproviders, modos de ejecución, etc.).\n- Factorías de Laravel.\n- Configuración de una base de datos para pruebas automatizadas en Laravel.\n- Escritura de tests de diferentes granularidades: unitarios, de integración y de sistema.\n- Simulación de dependencias con dobles de prueba en Mockery.\n- Tipos de dobles de prueba.\n- Uso de la librería Laravel Test Assertions.\n- Generación de datos de prueba con FakerPHP, así como la extensión de su funcionamiento con métodos personalizados.\n- Buenas prácticas y también antipatrones de testing y errores comunes a evitar.\n- Cómo evitar tests erráticos (no deterministas).\n- Técnicas de extracción de casos de prueba útiles para la certificación ISTQB: partición de equivalencia, análisis de valores límite y pairwise testing.\n- Optimizar el rendimiento de la suite de pruebas con paralelización, caching y otros trucos desconocidos por muchos.\n- Cobertura de código.\n- Pruebas de mutaciones para evaluar la calidad de las pruebas.\n- Pruebas de humo.\n- Scripts de Composer para aumentar la productividad en el flujo de trabajo diario.\n- Ejecución de tests en pre-commit.\n- Cómo probar comandos de consola de Laravel.\n- Cómo testear subidas y descargas de ficheros en Laravel.\n- Nuestra forma preferida de realizar tests de navegador en proyectos de Laravel (spoiler: no es con Laravel Dusk).\n- Pest, una alternativa moderna a PHPUnit.\n\n\n¿Para quién es este curso?\n- Desarrolladores PHP que quieren mejorar sus habilidades en testing.\n- Equipos de desarrollo que buscan integrar testing en su flujo de trabajo.\n- QA Engineers y testers que desean profundizar en el testing con PHPUnit.\n- Programadores autodidactas que quieren aprender a escribir código más robusto.\n\n\nMetodología del curso\n- 100 clases cortas y directas para aprender sin distracciones.\n- Ejemplos prácticos con código real y casos de uso aplicables.\n- Enfoque gradual desde lo más básico hasta técnicas avanzadas.\n\nEste es el curso que hubiéramos querido tener cuando comenzamos en el mundo del testing. ¡Inscríbete ahora y domina el testing en PHP!",
      "target_audience": [
        "Desarrolladores de PHP interesados en testing que trabajan con el framework de Laravel"
      ]
    },
    {
      "title": "JMeter İle Performans Testi",
      "url": "https://www.udemy.com/course/jmeterileperformanstesti/",
      "bio": "Sıfırdan JMeter İle Performans Testlerinin Nasıl Yapıldığını Öğrenin",
      "objectives": [
        "JMeter Nedir?",
        "JMeter Nasıl Kullanılır?",
        "JMeter'in Temelleri Nelerdir?",
        "Performans Testi Nedir ve Neden Yapılır?",
        "JMeter İle Performans Testi Nasıl Yapılır?"
      ],
      "course_content": {
        "Giriş": [
          "Kursun Yol Haritası",
          "Performans Testine Genel Bakış",
          "JMeter Nedir?",
          "JMeter Kurulumu"
        ],
        "JMeter Elementler & İlk Test": [
          "JMeter Elementler ( Thread Group,Sampleres,Listeners,Configuration)",
          "İlk JMeter Testi"
        ],
        "Assertions": [
          "Assertions Nedir?",
          "Response Assertion",
          "Response Assertion-2",
          "Size Assertion",
          "Duration Assertion",
          "HTML Assertion",
          "XML Assertion"
        ],
        "Listeners (Dinleyiciler)": [
          "Listeners Nedir?",
          "View Results in Table",
          "View Results Tree",
          "Graph Results",
          "Aggregate Report & Aggregate Graph",
          "Summary Report"
        ],
        "Timers (Zamanlayıcılar)": [
          "Timers Nedir?",
          "Constant Timer (Sabit Zamanlayıcı)",
          "Uniform Random Timer"
        ],
        "Logic Controller (Mantıksal Denetleyiciler)": [
          "Logic Controller Nedir?",
          "Loop Controller (Döngü Denetleyicisi)",
          "Recording Controller (Kayıt Denetleyicisi)",
          "Simple Controller (Basit Denetleyici)",
          "Module Controller (Modül Denetleyicisi)",
          "Test Fragment Controller",
          "Include Controller",
          "Random Controller (Rastgele Denetleyici)",
          "Random Order Controller",
          "Interleave Controller",
          "Throughput Controller"
        ],
        "Parameterization (Parametrelendirme)": [
          "Parametrelendirme Nedir?",
          "Internal Parametreler",
          "CSV/Excel Dosyası Üzerinden Parametre Değerleri Okuma (External Parametreler)"
        ],
        "PreProcessor & PostProcessor": [
          "PreProcessor & PostProcessor Nedir?",
          "PreProcessor & PostProcessor Kullanımı"
        ],
        "HTML Rapor Oluşturma": [
          "HTML Rapor Nasıl Oluşturulur?"
        ],
        "Correlation (Korelasyon)": [
          "Correlation Nedir?",
          "Regular Expression Extractor ile Korelasyon"
        ]
      },
      "requirements": [
        "Bilmeniz gereken her şeyi baştan öğreneceksiniz"
      ],
      "description": "Bu kursta temel olarak JMeter öğrenecek ve JMeter ile performans testinin nasıl yapıldığını öğreneceksin. İşte kursta işleyeceğimiz başlıklar :\n\n\nBölüm 1 : Giriş\n\n\nKursun Yol Haritası\nPerformans Testine Genel Bakış\nJMeter Nedir?\nJMeter Kurulumu\n\n\nBölüm 2 : JMeter Elementler & İlk Test\n\n\nJMeter Elementler ( Thread Group,Sampleres,Listeners,Configuration)\nİlk JMeter Testi\n\n\nBölüm 3 : Assertions\n\n\nAssertions Nedir?\nResponse Assertion\nResponse Assertion-2\nSize Assertion\nDuration Assertion\nHTML Assertion\nXML Assertion\n\n\nBölüm 4 : Listeners (Dinleyiciler)\n\n\nListeners Nedir?\nView Results in Table\nView Results Tree\nGraph Results\nAggregate Report & Aggregate Graph\nSummary Report\n\n\nBölüm 5 : Timers (Zamanlayıcılar)\n\n\nTimers Nedir?\nConstant Timer (Sabit Zamanlayıcı)\nUniform Random Timer\n\n\nBölüm 6 : Logic Controller (Mantıksal Denetleyiciler)\n\n\nLogic Controller Nedir?\nLoop Controller (Döngü Denetleyicisi)\nRecording Controller (Kayıt Denetleyicisi)\nSimple Controller (Basit Denetleyici)\nModule Controller (Modül Denetleyicisi)\nTest Fragment Controller\nInclude Controller\nRandom Controller (Rastgele Denetleyici)\nRandom Order Controller\nInterleave Controller\nThroughput Controller\n\n\nBölüm 7 : Parameterization (Parametrelendirme)\n\n\nParametrelendirme Nedir?\nInternal Parametreler\nCSV/Excel Dosyası Üzerinden Parametre Değerleri Okuma (External Parametreler)\n\n\nBölüm 8 : PreProcessor & PostProcessor\n\n\nPreProcessor & PostProcessor Nedir?\nPreProcessor & PostProcessor Kullanımı\n\n\nBölüm 9 : HTML Rapor Oluşturma\n\n\nHTML Rapor Nasıl Oluşturulur?\n\n\nBölüm 10 : Correlation (Korelasyon)\n\n\nCorrelation Nedir?\nRegular Expression Extractor ile Korelasyon\n\n\nBölüm 11 :  Functions and Variables (Fonksiyonlar ve Değişkenler)\n\n\nFunctions and Variables Nedir?\nFunctions and Variables Nasıl Kullanılır?\nBölüm 12 :  JMeter İle API Testi\n\n\nAPI Nedir?\nJMeter ile API Testi Nasıl Yapılır? (I)\nJMeter ile API Testi Nasıl Yapılır? (II)\n\n\nBölüm 13 : Bitirme Projesi\n\n\nBitirme Projesi Adımları\nBitirme Projesi\n\n\nBölüm 14 :  Genel Değerlendirme Soruları\n\n\nGenel Değerlendirme Soruları\n\n\nBölüm 15 : Kurs Sonu\n\n\nKurs Sonu.",
      "target_audience": [
        "Performans Testinin Nasıl Yapılacağını Öğrenmek İsteyenler",
        "JMeter'in Nasıl Kullanıldığını Merak Edenler",
        "Yazılım Test Alanında Çalışan ve Çalışmak İsteyen Kişiler"
      ]
    },
    {
      "title": "Squash tm de A à Z : L'outil de gestion des tests Logiciel",
      "url": "https://www.udemy.com/course/squach-tm-de-a-a-z-loutil-de-gestion-des-tests-logiciel/",
      "bio": "Test logiciel : Devenir concepteur des tests avec des cas pratiques avec Squash tm",
      "objectives": [
        "Squach TM : Concepts de base des tests logiciels",
        "Squach TM : Tests manuels du logiciel de débutant à avancé",
        "Squach TM : conception des tests",
        "Squach TM : Création de suites de tests",
        "Squach TM : Création de plan de test",
        "Squach TM : Création de cas de test",
        "Squach TM : Exécution des cas de tes",
        "Squach TM : Comprendre le processus de gestion des tests",
        "Squach TM : Création de suites de tests",
        "Squach TM : Création de plusieurs projets",
        "Squach TM : des exercices corrigés",
        "Test logiciel : des exercices corrigés"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "C'est quoi SQUASH TM ?",
          "SQUASH TM Installation",
          "SQUASH TM : Explorer l'outil",
          "Merci"
        ],
        "Squash TM : Comment résoudre le probleme d'accès": [
          "Squash TM : Comment résoudre le probleme d'accès",
          "Squash TM : Comment résoudre le probleme d'accès -Solution"
        ],
        "SQUASH TM : Création d'un projet": [
          "SQUASH TM : Création d'un projet"
        ],
        "Des prérequis en test logiciel": [
          "Test Logiciel : c'est quoi une campagne de test ?",
          "Test Logiciel : Exemple d'une campagne de test",
          "Test Logiciel : c'est quoi une suite de test ?",
          "Test Logiciel : c'est quoi un cas de test ?",
          "Test Logiciel : Exemple d'un cas de test"
        ],
        "Squash tm": [
          "SQUASH TM : Création des exigences",
          "SQUASH TM : Création des cas de tests et rattachement avec les exigences",
          "SQUASH TM : Création des cas de tests",
          "SQUASH TM : Création d'une campagne de test"
        ],
        "Atelier de conception :": [
          "Atelier de conception :",
          "Correction de l'atelier de conception :",
          "Correction de l'atelier de conception :"
        ],
        "SQUASH TM : Exécution des tests": [
          "SQUASH TM : Exécution des tests"
        ],
        "Déclarer et suivre des anomalies": [
          "Déclarer et suivre des anomalies"
        ],
        "Squash TM : Gestion des utilisateurs": [
          "Squash TM : Gestion des utilisateurs"
        ],
        "Exercice manipulation de Squash TM": [
          "Exercice manipulation de Squash TM",
          "Correction de l'exercice manipulation de Squash TM"
        ]
      },
      "requirements": [
        "Aucune connaissance préalable du domaine n'est requise"
      ],
      "description": "Objectifs pédagogiques\nÀ l’issue de la formation, le participant sera en mesure de :\nMaîtriser le référentiel de test SquashTM\nInstaller Squash TM au sein de son environnement\nImplémenter les exigences avec Squash TM\nDéfinir les tests et les jeux de test\nPlanifier et piloter les campagnes de test\n\n\nProgramme de la formation\nGénéralités sur Squash\nLe projet Squash (historique, roadmap) et ses domaines d'application.\nSquash et les approches de développement classique et agile.\nL'architecture de la plateforme : interconnexion entre Squash TM et Squash TA.\nInstallation de Squash et initialisation de l'étude de cas.\n\n\nMise en place du projet de test sous Squash TM\nCréation du projet et des acteurs associés.\nIllustrations de couplages avec des outils externes.\nGestion des exigences\nDéfinition projet, analyse des exigences,\n\n\nCréation des tests sous Squash TM\nDéfinition projet, analyse des exigences,\nConception et implémentation de tests élémentaires, de tests composites, traçabilité des tests.\n\n\nDéfinition et déroulé des campagnes de test\nPlanification des campagnes et des itérations de test.\nRegroupement de tests en suites de test.\nExécution des tests.\nRemontée des anomalies dans les outils de bug tracking.\nConsolidation des tests jusqu'à convergence vers un niveau de qualité requis.\nCréation d’une nouvelle itération de campagnes sur base des résultats de test de la précédente itération.\nTests de non régression.\n\n\nPilotage des campagnes de test\nGraphiques d'indicateurs.\nDéfinition de tableaux de bord selon espace de travail.\nProduction du cahier de test, des matrices de couverture des exigences...\nRéalisation d’un export de données personnalisé.",
      "target_audience": [
        "Les personnes qui souhaitent commencer une nouvelle carrière",
        "Les personnes qui veulent apprendre les tests de logiciels Testeurs de logiciels qui souhaitent acquérir une meilleure connaissance dans leur domaine",
        "Les personnes à la recherche d'un emploi à temps partiel ou indépendant",
        "Réussir un entretien d'embauche dans le domaine du test logiciel"
      ]
    },
    {
      "title": "Practical Manual Software Testing - Basic to Advanced",
      "url": "https://www.udemy.com/course/practical-software-testing/",
      "bio": "Master Manual Testing: A Hands-On Guide to Effective Software Testing QA, Agile, Jira, Learning Plan, and Interview Tips",
      "objectives": [
        "Learn the fundamentals of software testing through applications in the real world.",
        "Understanding and analyzing software requirements specifications (SRS).",
        "SDLC VS. STLC",
        "Construct effective user stories.",
        "Create effective test scenarios.",
        "How to write low level test cases.",
        "Test execution and regression testing.",
        "Prepare detailed bug reports.",
        "Bug prioritizing",
        "Create a cross-browser matrix.",
        "Make use of the Jira tool.",
        "Basics of Agile Testing",
        "Dive into real-world examples from diverse domains."
      ],
      "course_content": {
        "Introduction": [
          "Intorduction",
          "Course Content",
          "Important Note"
        ],
        "Software Components": [
          "Introduction to Software Component",
          "Software Component_ User Interface \"UI\"",
          "Software Component _ Business Logic",
          "Software Component _ Data Base Management System \"DBMS\"",
          "Software Component _ Integration",
          "Software Component _ Security",
          "Software Component _ Error Handling and Logging"
        ],
        "Who are involved in software development?": [
          "Roles and Responsibilities in software development"
        ],
        "Concepts of software testing": [
          "What is software Testing",
          "Cost of Bugs",
          "Quality Assurance vs Quality Control vs Quality Management"
        ],
        "SDLC vs STLC": [
          "SDLC vs STLC",
          "SDLC",
          "Verification vs Validation",
          "STLC",
          "Testing Levels",
          "Testing Types",
          "Testing Quadrants"
        ],
        "STLC _ Requirement Analysis": [
          "Requirement Analysis",
          "SRS, FRS, and BRS",
          "SRS Example",
          "FRS Example",
          "BRS Example",
          "SRS Component",
          "Functional vs Non-Functional Requirements",
          "Why it's important",
          "SRS in real situations",
          "SRS Example and Test cases design",
          "GUI in SRS",
          "System Architecture",
          "How to Read SRS",
          "Static Testing",
          "Static Testing",
          "Design HLS for the Time Off Manager based on given SRS"
        ],
        "STLC _ Test Case Development (Part 1/2)": [
          "SRS Break-Down",
          "Test Scenario vs. Test Case",
          "Epics Online Banking Example",
          "Positive Test cases",
          "Positive vs. Negative Test cases",
          "Negative Test Cases",
          "Positive & Negative Test cases _ Example 2",
          "Other Test cases for Login",
          "Context Dependent",
          "Design HLS for Time Off Manager _ Part 2",
          "Amazone High level Test cases",
          "ERP System",
          "False Positive & False Negative",
          "Reasons for False Positive & False Negative",
          "Examples for False Positive & False Negative",
          "False Positive & False Negative"
        ],
        "STLC _ Test Plan": [
          "Test Plan",
          "Components of Test Plan",
          "Test Plan for E-Commerce Website"
        ],
        "STLC _ Test Monitoring and Control": [
          "Monitoring and Control"
        ],
        "Introduction to Agile": [
          "What is Agile",
          "Agile Values",
          "Agile Principles",
          "Agile Practices",
          "Agile vs Waterfall",
          "Planning within Agile"
        ]
      },
      "requirements": [
        "Good English Language",
        "Laptop or Computer",
        "Basic Knowledge about ISTQB-FL"
      ],
      "description": "Student Feedback from Live Rounds\nSaraa – Tunisia:\n\"I was genuinely impressed by the quality of this course. It was well-structured, highly detailed, and easy to follow. Mahmoud demonstrated deep knowledge and clarity in his explanations. I learned a lot and would definitely recommend both the course and the instructor.\"\nNour – Egypt:\n\"Yes, I recommend Mahmoud and his courses. He is skilled and confident in his field.\"\nMai – Egypt:\n\"الباشمهندس محمود منظم والكورس مرتب. أول مرة أذاكر تيستنج وأفهم المفاهيم دي بشكل واضح. الماتيريال ساعدتني أوفر وقت ومجهود كبير.\"\nAhmed – Egypt:\n\"الشرح ممتاز. الجزء العملي مختلف شوية عن السوق، لكن فيه دعم ممتاز جدًا.\"\n\n\nCourse by the Numbers:\n12+ hours of high-quality recorded content available exclusively on Udemy (not from live sessions), so you stay fully focused with no distractions.\n2 comprehensive SRS documents, introducing original ideas beyond typical examples.\nDomain exposure across real-world industries: Banking, Insurance, ATM Systems, E-Commerce, and ERP.\nExploratory testing examples to apply critical thinking in real-life situations.\nMobile application project included for hands-on experience.\nLearn how to create a cross-browser testing matrix and ensure compatibility across environments.\n\n\nWhat Sets This Course Apart?\nIndustry-Relevant Learning: Content built from real projects and field experience with European clients.\nMulti-Domain Scenarios: Get exposure to diverse industries, helping you understand software testing’s wide applications.\nHands-On Practice: Apply what you learn with practical exercises tied to realistic testing cases.\nInteractive Experience: Designed for engagement and continuous learning with structured assignments and self-paced content.\nCareer-Oriented Path: Whether you’re transitioning careers or looking to deepen your testing knowledge, this course guides you through a complete learning journey.\n\n\nWhy You Should Enroll:\nBoost Your Career: Acquire high-demand software testing skills that open doors to better opportunities.\nPractical Experience: Learn through hands-on testing scenarios, real documentation, and industry tools like Jira.\nAll-in-One Coverage: From requirements analysis to reporting bugs, the course covers end-to-end manual testing fundamentals.\nLearn at Your Pace: Lifetime access to materials lets you study whenever it suits your schedule.\nInvest in Your Future: Build a solid foundation for further growth in testing—whether manual or automated.\nCourse Content Overview\nIntroduction to software components and team roles.\nUnderstanding software testing: QA vs. AC, value, and cost implications.\nSDLC vs. STLC: full-cycle insights.\nReal project testing process: analysis, planning, execution, reporting.\nIntroduction to mobile testing: strategies, device selection, testing matrix.\nIntroduction to Jira and task management in testing environments.\nMeet Your Instructor – Mahmoud Eid\nElectromechanical Engineer, graduated from Alexandria University.\n6+ years of hands-on software testing experience, working with European clients on real-world projects across various industries.\nAcademy Instructor & Mentor within my current company: I train new hires on ISTQB-FL, Manual Testing, and Tosca Automation Tool.\n850+ hours of teaching experience, across software testing, Tosca, and engineering topics, with learners from diverse professional and academic backgrounds.\nCertifications:\nISTQB Foundation Level\nISTQB Agile Tester\nTricentis Tosca Automation\nAutomation Specialist Level 1 & 2\nAutomation Engineer Level 1\nTest Design Specialist Level 1 & 2\nAPI Automation Specialist\nTosca Architect\nCertified Trainer",
      "target_audience": [
        "Junior Software Tester",
        "Junior QA Associate",
        "Fresh Graduates",
        "Junior Software Engineers",
        "Who want to join the software testing field (Shift Career)"
      ]
    },
    {
      "title": "Khóa học Robot Framework từ cơ bản đến nâng cao (Tiếng Việt)",
      "url": "https://www.udemy.com/course/khoa-hoc-robot-framework-tu-co-ban-en-nang-cao-tieng-viet/",
      "bio": "Hướng dẫn Robot Framework từ A-Z: Kiểm thử tự động Web, Mobile, API, Database (khóa học bằng tiếng Việt)",
      "objectives": [
        "Làm chủ Robot Framework để tự động hóa kiểm thử Web, Mobile, API từ cơ bản đến nâng cao.",
        "Xây dựng kịch bản kiểm thử tự động có cấu trúc, dễ bảo trì và tái sử dụng hiệu quả.",
        "Tích hợp kiểm thử tự động với công cụ CI/CD (Jenkins) và tích hợp kiểm thử đa thiết bị với Device Farm.",
        "Kết nối và kiểm thử cơ sở dữ liệu",
        "Quản lý mã nguồn bài bản với Git.",
        "Hiểu và áp dụng quy trình Kiểm thử tự động chuyên nghiệp trong môi trường làm việc thực tế."
      ],
      "course_content": {},
      "requirements": [
        "Có máy tính cá nhân chạy Windows, macOS hoặc Linux",
        "Kết nối internet ổn định để học online và tải công cụ cần thiết",
        "Không yêu cầu biết lập trình – phù hợp cả với người mới bắt đầu Kiểm thử tự động"
      ],
      "description": "Khóa học \"Robot Framework từ Cơ bản đến Nâng cao (Tiếng Việt)\" được thiết kế dành cho bất kỳ ai muốn nắm vững kiểm thử tự động từ con số 0 đến khi có thể xây dựng được Automation Test Framework thực chiến cho Web, Mobile, API, Database, tích hợp CI/CD, Device Farm và Git.\nKhóa học giúp bạn không chỉ hiểu lý thuyết mà còn thực hành từng bước với các ví dụ thực tế, dễ hiểu, dễ áp dụng vào công việc.\nBạn sẽ học được gì trong khóa học này?\nHiểu nền tảng kiểm thử tự động. Tại sao kiểm thử tự động là tương lai của kiểm thử và vai trò trong quy trình phát triển phần mềm\nLàm chủ Robot Framework: cấu trúc, cú pháp, quản lý từ khóa, sử dụng thư viện mở rộng\nXử lý Locator hiệu quả khi làm việc với Web/Mobile\nViết script kiểm thử tự động cho Web/Mobile(Android/iOS)/API bằng Robot Framework\nKết nối và kiểm thử Database bằng Robot Framework\nThiết lập CI/CD với Jenkins để chạy test tự động\nTích hợp Device Farm để kiểm thử đa dạng thiết bị thật\nSử dụng Git để quản lý mã nguồn, phân nhánh, và làm việc nhóm",
      "target_audience": [
        "Các Manual Tester muốn chuyển sang Kiểm thử tự động một cách bài bản, dễ hiểu và thực tiễn",
        "Các Automation Tester muốn mở rộng kỹ năng sang nhiều nền tảng: Web, Mobile, API, Database, CI/CD",
        "Sinh viên CNTT hoặc người mới bắt đầu quan tâm đến kiểm thử tự động",
        "Bất kỳ ai muốn học Robot Framework từ đầu đến nâng cao để ứng tuyển hoặc phát triển sự nghiệp trong lĩnh vực kiểm thử phần mềm"
      ]
    },
    {
      "title": "Tester Oprogramowania (QA Tester) - Pytania rekrutacyjne",
      "url": "https://www.udemy.com/course/qa-tester-pytania-rekrutacyjne/",
      "bio": "Pytania i Odpowiedzi Tester oprogramowania - rekrutacja na stanowisko Tester Oprogramowania, QA, Tester Automatyczny itp",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Pytania i Odpowiedzi na Testera oprogramowania - rekrutacja na stanowisko Tester Oprogramowania, QA, Tester Automatyczny i podobne stanowiska związane z zapewnianiem jakości w projektach informatycznych.\n\n✔️ Poznasz podstawowe pojęcia testerskie, które mogą być (i bardzo często są) poruszane podczas rozmowy rekrutacyjnej\n\n\n✔️ Poznasz podstawy psychologii, sposób myślenia testera, nauczysz się stosować krtyczne testerskie podejście do projektu/produktu. Zrozumiesz testerski punkt widzenia podczas rekrutacji na stanowisko\n\n\n✔️ Poznasz niezbędne podstawy, które trzeba znać przystępując do rekrutacji na stanowiska testerskie\n\n\n✔️ Poznasz niezbędne i często używane typy testów jak również rodzaje i sposoby testowania. Poznasz mocno skompresowaną teorię konieczną do zaliczenia rozmowy rekrutacyjnej\n\n\n✔️ Zobaczysz i zrozumiesz jak wykorzystać rodzaje testowania w praktyce biznesowej podczas rekrutacji na stanowisko\n\n\n✔️ Ogólnie poznasz i zrozumiesz podstawy najczęściej omawianych zagadnień na stanowiska Testera oprogramowania, QA oraz Testera Automatycznego - bez względu na używany język programowania.\n\n\n✔️ Poznasz i zrozumiesz praktyczne wykorzystanie najbardziej popularnych tricków na rekruterów podczas rozmów kwalifikacyjnych\n\n\n✔️ Pytania są przygotowane w formie testów, gdzie jest podana przykładowa prawidłowa odpowiedz. Wystarczy, że nauczysz się odpowiedzi wraz z wyjaśnieniem w zwięzłej formie. To pomoże Ci zaliczyć rozmowę kwalifikacyjną łatwo i przyjemnie\n\n\n✔️ Podsumowanie i sprawdzenie wiedzy studenta z zakresu testowania oprogramowania, co pozwoli na łatwą i przystępną aplikację bez obaw o pytania rekrutacyjne i zmniejszy ryzyko nie powodzenia podczas rekrutacji na stanowisko",
      "target_audience": [
        "Osoby chcące rozwijać karierę w branży inżynierii oprogramowania lub po prostu \"informatyce\"",
        "Zawody \"cyfrowe\" wymagające umiejętności testowania",
        "Osoby chętne do rekrutacji na stanowisko testera oprogramowania"
      ]
    },
    {
      "title": "Maîtrisez les Tests REACT.js avec RTL et JEST (FR)",
      "url": "https://www.udemy.com/course/tests-react-js-avec-react-testing-library-et-jest/",
      "bio": "Apprenez les meilleures pratiques de test et préparez-vous à exceller dans les projets React en entreprise (17 heures)",
      "objectives": [
        "Maîtriser les concepts fondamentaux des tests React avec React Testing Library et Jest pour assurer la qualité de vos applications React.",
        "Écrire des tests unitaires et d'intégration robustes pour garantir le bon fonctionnement de chaque composant.",
        "Utiliser & maîtriser les requêtes de React Testing Library pour interagir avec les éléments de l'interface utilisateur et valider leur comportement.",
        "Mettre en œuvre le développement piloté par les tests (TDD) pour une approche itérative et fiable du développement.",
        "Tester les interactions utilisateur en simulant des événements tels que les clics, les saisies, les validations. etc.",
        "Effectuer des tests avancés tels que la gestion des alertes, l'utilisation de Mock Service Worker et l'intégration avec les Providers.",
        "Comprendre les bonnes pratiques de tests et les conventions pour organiser et maintenir vos suites de tests.",
        "Utiliser Jest pour la gestion des assertions et les mocks pour mettre en oeuvre des tests efficaces et robustes.",
        "Explorer les astuces et les outils supplémentaires pour améliorer votre productivité en matière de tests React.",
        "Comprendre les principes de performance des tests et utiliser des outils pour évaluer les performances de vos tests.",
        "Utiliser des méthodes de test avancées telles que le filtrage des tests, l'utilisation de Code Coverage et l'analyse du rendu.",
        "Acquérir une compréhension approfondie des tests unitaires, tests d'intégration et tests end-to-end dans vos projets React.",
        "Développer des compétences essentielles pour travailler sur de grands projets en entreprise en respectant les normes de test.",
        "Préparer et passer avec succès des entretiens techniques où les compétences de test React sont évaluées et bien plus encore"
      ],
      "course_content": {},
      "requirements": [
        "Javascript",
        "React (hooks)",
        "HTML/CSS"
      ],
      "description": "Souhaitez-vous non seulement développer des applications React, mais également être en mesure de les tester?\nBienvenue dans ma nouvelle formation sur les tests React avec \"REACT TESTING LIBRARY\" et \"JEST\".\nJe suis ravi de vous accompagner dans ce parcours d'apprentissage qui vous permettra de maîtriser les tests dans le monde passionnant de React.\nJe m'appelle Tahar, je suis développeur sénior avec plusieurs années d'expérience que je partage avec vous ici sur Udemy. Aujourd'hui, je suis ravi de mettre mon expertise à votre service dans cette nouvelle formation dédiée aux tests React avec React Testing Library et JEST.\nEn effet, React Testing Library et Jest ont connu une popularité croissante en tant qu'outils de test pour les applications React, et cela n'est pas sans raison.\nTout d'abord, React Testing Library est reconnue pour ses bonnes pratiques de test basées sur la logique suivante : \"Plus vos tests ressemblent à la façon dont votre logiciel est utilisé, plus ils peuvent vous donner confiance.\" Cette approche met en évidence l'importance de créer des tests qui reproduisent fidèlement le comportement réel de votre logiciel.\nEn outre, React Testing Library est conçue pour encourager l'adoption de ces pratiques comme la mise en avant des tests de comportement plutôt que des tests d'implémentation, la réalisation de tests qui interagissent avec votre application de la même manière qu'un utilisateur, la recherche d'éléments en utilisant les repères d'accessibilité pour garantir que votre code est aussi accessible que possible, etc.\nC'est ce que nous allons étudier dans les détails tout au long de cette formation qui va durer un peu plus de 16 heures de cours en vidéos, exercices, Quiz, etc.\n\n\nQu'allez-vous apprendre dans cette nouvelle formation ?\nSection 1: Introduction et notions théoriques\nDans cette première section d'introduction, nous allons jeter les bases nécessaires pour comprendre l'importance des tests React et de React Testing Library. Vous apprendrez à configurer votre environnement de travail et à lancer vos premiers tests. Vous découvrirez également les principes du développement piloté par les tests (TDD) et comprendrez ce qu'il faut tester dans une application React.js.\n\n\nSection 2: Requêtes React Testing Library\nCette deuxième section se concentre sur l'utilisation de React Testing Library pour récupérer les éléments de votre application et maîtriser les requêtes ciblées de React Testing Library. Vous découvrirez, à travers des exercices pratiques, les différentes requêtes disponibles avec getBy.., queryBy..., et findBy.. Ainsi, vous renforcerez vos compétences dans l'utilisation efficace de toutes ces requêtes.\n\n\nSection 3: Quiz de 10 questions\nAprès avoir acquis les connaissances des sections précédentes, vous pourrez mettre à l'épreuve votre compréhension grâce à un quiz interactif de 10 questions. Cela vous permettra de consolider votre apprentissage et de mesurer votre progression.\n\n\nSection 4: Tester les interactions utilisateurs\nDans cette section, vous apprendrez à tester les interactions utilisateurs dans vos applications React. Vous découvrirez comment simuler et tester des actions utilisateurs. Vous travaillerez sur une série d'exercices pratiques pour tester des fonctionnalités telles que les clicks successifs, les actions sur les checkboxes, les événements onMouseOver et onMouseOut, et bien d'autres encore.\n\n\nSection 5: Exercices pratiques sur l'application Macbook-Air\nDans cette section, nous passerons à des exercices pratiques concrets en développant et testant une véritable application de paramétrage de capacité RAM et SSD pour l'achat d'un ordinateur Macbook-Air. Nous allons nous inspirer de la véritable page de vente sur le site d'apple. Ainsi, vous explorerez des concepts avancés tels que l'installation de plugins, la gestion des alertes, les tests avec des données récupérées via les requêtes HTTP ou celles passées dans le Provider, l'utilisation de Jest Mock Function. De plus, nous aborderons des sujets spécifiques tels que les fonctions de test unitaires, en fournissant des conseils pratiques pour écrire des tests plus robustes et maintenables. Vous apprendrez également des techniques pour bien gérer vos tests dans des cas particuliers et manipuler les Providers avec RTL et un wrapper et bien plus encore ...\n\n\nSection 6: Quiz de 10 questions\nEncore une fois, vous allez pouvoir teste vos connaissances acquises dans la section précédente avec un quiz supplémentaire de 10 questions. Cela vous permettra de consolider encore plus vos compétences et de vous assurer que vous maîtrisez les concepts clés abordés dans les cinq sections étudiées.\n\n\nSection 7: Autres astuces et bonnes pratiques pour des tests React performants\"\nDans cette section finale, nous aborderons diverses astuces et bonnes pratiques pour améliorer encore davantage vos compétences en tests React. Vous découvrirez des conseils pratiques pour optimiser vos tests, filtrer les tests spécifiques, mettre en place des conventions RTL pour nommer vos fichiers et dossier de tests.\n\n\nNous explorerons également des outils et des fonctionnalités avancées tels que le Code Coverage pour évaluer la couverture de vos tests, les utilitaires de débogage comme screen.debug, logRoles et prettyDOM pour faciliter le diagnostic, ainsi que le Testing Playground et son extension Chrome pour une expérience de test encore plus fluide en passant par EsLint, Prettier, Husky, etc. Bref, cette section complète votre formation en vous donnant les dernières astuces et bonnes pratiques pour vous aider à devenir un expert des tests React. Vous serez prêt à relever n'importe quel défi de test dans vos projets React et à fournir des applications de haute qualité.\n\n\nToutes ces notions avancées, astuces et bonnes pratiques vous aideront à consolider votre compréhension des tests React et à atteindre un niveau de compétence supérieur.\nCette formation est spécialement conçue pour vous, en tant que développeurs passionnés, désireux d'acquérir des compétences avancées en tests React.\nNe manquez pas cette occasion d'élargir vos horizons et de devenir un développeur React de premier plan. Ne vous arrêtez pas aux notions de bases React ! Distinguez-vous des autres développeurs React en passant à la vitesse supérieur! Continuez à suivre notre parcours d'apprentissage, et vous serez prêt à relever tous les défis que vous rencontrerez dans le domaine du développement React et soyez prêt à devenir un expert des tests React !\nRejoignez-moi dans cette nouvelle formation et passez au niveau supérieur !\nJe vous expliquerai tous les concepts d'une façon simplifiée, comme j'ai l'habitude de le faire dans toutes mes formations, pour que vous puissiez TOUS suivre sans difficultés, quel que soit votre niveau !\nOn verra les tests unitaires, des tests d'intégration, des tests End-toEnd, le Happy Path Testing, les Black et White Box Testing, les Unit Testing Functions, le développement piloté par les tests (TDD), afin d'assurer une qualité supérieure à vos projets React.\nSoyez parmi les premiers à bénéficier de mon expertise éprouvée, de mes conseils pratiques et de ma passion pour React, ainsi que de mes méthodes de test pour développer des applications robustes.\nEn suivant cette formation, vous serez en mesure de monter en compétences et devenir un véritable développeur React polyvalent, très recherché par les recruteurs et les grandes entreprises.\nLes compétences en tests React sont de plus en plus obligatoires dans le paysage du développement web moderne, et cette formation vous aidera à vous démarquer des autres soi-disant \"Dev React\".\nNe manquez pas cette opportunité de faire évoluer votre carrière et de devenir un expert des tests React.\nJe suis impatient de partager mes connaissances avec vous, les amis, et de vous aider à atteindre vos objectifs. Rejoignez dès maintenant cette formation sur les tests React et commencez votre parcours vers le succès !\n\n\nLes ressources en téléchargement :\nApplication React d'exercices (my-app)\nApplication React pour les exercices pratiques (macbook-air)\nMacbookair JsonServer pour simuler les requêtes serveur en local\nSlides du cours en PDF (64 pages)\nJe vous donne rendez-vous dans la première section pour démarrer ;-)",
      "target_audience": [
        "Les développeurs souhaitant se démarquer sur le marché du travail en maîtrisant les tests React.",
        "Les développeurs React qui souhaitent approfondir leurs connaissances en matière de tests et renforcer la qualité de leurs applications.",
        "Les codeurs d'application React qui veulent acquérir des compétences solides en matière de tests.",
        "Les étudiants en informatique qui veulent se spécialiser dans le développement d'applications React et les tests associés.",
        "Les architectes logiciels qui cherchent à intégrer des pratiques de tests efficaces dans leurs projets React.",
        "Les développeurs front-end qui veulent élargir leur expertise en incluant les tests dans leur processus de développement.",
        "Les passionnés qui cherchent à enrichir leur boîte à outils avec des compétences de test React.",
        "Les développeurs qui veulent monter en compétence et adopter les meilleures pratiques de test sur les projets React.",
        "Les développeurs React qui cherchant à renforcer leur CV en ajoutant des compétences en tests React.",
        "Les entreprises qui veulent garantir la qualité de leurs applications React sans dépendre entièrement des testeurs dédiés.",
        "Les développeurs souhaitant se sentir confiants lorsqu'ils effectuent des modifications sur des applications React existantes grâce à des tests solides.",
        "Et toutes les personnes curieuses et motivées qui ont un intérêt pour le développement React et qui veulent explorer les tests sur les projets React."
      ]
    },
    {
      "title": "QA Iniciante: Fundamentos de Teste",
      "url": "https://www.udemy.com/course/qa-iniciante-fundamentos-de-teste/",
      "bio": "Aprenda os princípios essenciais e técnicas práticas para garantir a qualidade de software",
      "objectives": [
        "Compreender a importância dos testes de software e suas aplicações em diversas áreas",
        "Aplicar técnicas eficazes de teste para identificar e corrigir defeitos",
        "Diferenciar entre garantia de qualidade e controlo de qualidade e suas práticas",
        "Planejar e executar testes, incluindo automação e análise de causa raiz"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Fundamentos de Teste": [
          "Introdução - Fundamentos de Teste",
          "O que é Testar?",
          "Objetivos do Teste",
          "Teste e Depuração",
          "Porque é necessário Testar?",
          "Garantia de Qualidade e Testes",
          "Erros, Falhas e Defeitos",
          "Defeitos, Causas Raiz e Efeitos",
          "Sete Princípios de Teste",
          "A Psicologia do Teste",
          "Processo de Teste"
        ],
        "Desenvolvimento de Software Modelos de Ciclo de Vida": [
          "Introdução - Desenvolvimento de SoftwareModelos de Ciclo de Vida",
          "Características de um bom teste",
          "Modelos de desenvolvimento sequencial",
          "Modelos de desenvolvimento sequencial - Modelo Cascata (The Waterfall model)",
          "Modelos de desenvolvimento sequencial - Modelo em V (The V-model)",
          "Modelos de desenvolvimento iterativo e incremental",
          "Níveis de Teste",
          "Teste de Componentes",
          "Teste de Integração",
          "Teste de Sistema",
          "Teste de Aceitação"
        ],
        "Conclusão": [
          "Finalizando"
        ]
      },
      "requirements": [
        "Desejo de aprender sobre garantia de qualidade e práticas de teste de software"
      ],
      "description": "Seja bem-vindo ao curso \"QA Iniciante: Fundamentos de Teste\"! Está pronto para embarcar em uma jornada que abrirá portas para uma carreira emocionante em testes de software? Este curso foi cuidadosamente projetado para você, que deseja aprender desde os conceitos básicos até as técnicas práticas que garantem a qualidade de software.\nVocê descobrirá a importância vital dos testes no desenvolvimento de software, explorando como falhas podem impactar áreas cruciais como saúde, finanças e segurança pública. Aprenderá a aplicar métodos eficazes para identificar e corrigir defeitos, garantindo que os produtos de software sejam robustos e confiáveis.\nCom uma abordagem prática, você se familiarizará com ferramentas e ambientes de teste, incluindo automação, e entenderá como planejar e executar testes de maneira eficiente. Além disso, aprenderá a diferença entre garantia de qualidade e controle de qualidade, e como essas práticas são essenciais para qualquer organização.\nEste curso é ideal para iniciantes em testes de software, desenvolvedores, analistas de QA, gerentes de projeto e estudantes de TI. Não importa se você está começando na área ou buscando atualizar seus conhecimentos, este curso fornecerá as bases necessárias para se destacar no campo de QA.\nJunte-se a nós e dê o primeiro passo para se tornar um especialista em testes de software!",
      "target_audience": [
        "Iniciantes em testes de software, desenvolvedores, analistas de QA, gerentes de projeto e estudantes de TI"
      ]
    },
    {
      "title": "Corso base di Git: impara a tenere traccia del tuo codice",
      "url": "https://www.udemy.com/course/corso-base-di-git-impara-a-tenere-traccia-del-tuo-codice/",
      "bio": "Padroneggia questo vcs, lavora con disinvoltura con Git",
      "objectives": [
        "A fine corso sarete in grado di lavorare con disinvoltura con Git ed a tenere traccia del vostro codice collaborando con i vostri colleghi condividendo il work",
        "Sarete in grado di creare repository online su Git Hub",
        "Sarete in grado di creare repository online su Git Lab",
        "Sarete in grado di creare repository online su Bitbucket"
      ],
      "course_content": {},
      "requirements": [
        "Per poter seguire il corso base di Git non sono richieste particolari conoscenze a parte le basi di un qualsiasi linguaggio di sviluppo e saper usare il prompt dei comandi livello base"
      ],
      "description": "Che siate sviluppatori per professione o per diletto, con tutta probabilità avrete incontrato il concetto di “controllo delle versioni”. Saprete che aggiungere una nuova funzionalità, sistemarne una che invece non va bene o tornare a una condizione precedente sono tutte cose che capitano quotidianamente.\nQuesto richiede l’uso di uno strumento potente che possa aiutarvi a seguire con cura il vostro lavoro, consentendovi di navigare nel vostro progetto rapidamente e senza attrito.\nSul mercato si trovano molti strumenti che svolgono questo compito, proprietari e open source. Di solito incontrerete Version Control Systems (VCS) e Distributed Version Control Systems (DVCS). Esempi di strumenti centralizzati sono Concurrent Version System (CVS), Subversion (SVN), Team Foundation Server (TFS) e Perforce Helix; fra i DVCS, Bazaar, Mercurial e Git. La differenza principale fra le due famiglie sta nel fatto che nei sistemi centralizzati esiste il vincolo di un server remoto da cui scaricare e in cui caricare i vostri file; e, come ben sapete, se la rete non è accessibile si finisce nei guai. Nei DVCS, invece, si può avere o meno un server remoto (o anche più di uno), ma si può anche lavorare offline. Tutte le modifiche vengono registrate localmente; possono essere sincronizzate in seguito. Oggi Git è il DVCS che si è guadagnato il favore del pubblico più degli altri, ed è cresciuto rapidamente da strumento di nicchia a strumento d’elezione.\nGit è diventato di fatto lo strumento di controllo delle versioni del codice sorgente. È il secondo figlio celebre di Linus Torvalds che, dopo aver creato il kernel di Linux, ha realizzato questo software di versioning per tenere traccia dei milioni di righe del suo codice.",
      "target_audience": [
        "Il corso è rivolto a chi si avvicina per la prima volta a Git ma anche a coloro che pensano di conoscere questo software e ne volessero approfondire le conoscenze"
      ]
    },
    {
      "title": "Automação de Testes com Playwright, Python e Pytest",
      "url": "https://www.udemy.com/course/automacao-de-testes-com-playwright-python-e-pytest/",
      "bio": "Do zero ao avançado em testes web modernos",
      "objectives": [
        "Criar testes rápidos, confiáveis e eficientes para qualquer aplicação web",
        "Construir suítes de teste escaláveis usando Page Object Model e Fixtures do Pytest",
        "Entender e aplicar os fundamentos do Playwright (navegação, interações, seletores, uploads e downloads de arquivos)",
        "Integrar testes automatizados em pipelines de CI/CD"
      ],
      "course_content": {},
      "requirements": [
        "Noções básicas de lógica de programação ou Python serão úteis, mas não obrigatórias."
      ],
      "description": "O Playwright, desenvolvido pela Microsoft, vem ganhando cada vez mais espaço por ser uma ferramenta completa e moderna para automação de testes web. Ele suporta diferentes navegadores (Chromium, Firefox e WebKit) e oferece recursos poderosos como auto-wait, gravação de scripts e depuração integrada, que simplificam o trabalho e tornam os testes mais robustos.\nNeste curso, você vai aprender a usar o Playwright junto com Python e Pytest, uma das combinações mais procuradas no mercado. Começamos do zero: instalação do Python, criação do ambiente virtual, configuração do Playwright e execução do seu primeiro teste automatizado.\nAo longo das aulas, você vai dominar os fundamentos do Playwright, entender como trabalhar com seletores, comandos essenciais, inspeção de elementos e boas práticas. Depois, vamos avançar para o Page Object Model (POM), um padrão que ajuda a organizar e dar clareza ao projeto.\nVocê também terá um módulo exclusivo sobre Pytest Fixtures, aprendendo na prática como criar fixtures, explorar seus diferentes escopos e aplicá-las em cenários reais para manter seus testes bem estruturados e reutilizáveis.\nAlém disso, o curso traz temas indispensáveis no dia a dia de automação: upload e download de arquivos, execução em paralelo, relatórios HTML personalizados, autenticação com storage state e, por fim, a integração com CI/CD usando Jenkins.\nAo final, você terá desenvolvido um projeto completo de automação, aplicando conceitos e práticas usados em empresas, pronto para ser levado para o seu ambiente profissional.\nSeja para dar os primeiros passos em QA ou para elevar o nível da sua carreira, este curso vai mudar a forma como você enxerga e aplica automação de testes.",
      "target_audience": [
        "Analistas de Testes de Software",
        "Quem deseja trabalhar com automações web em geral"
      ]
    },
    {
      "title": "Selenium 4 + Java 21 (Cucumber + Jenkins) desde Cero",
      "url": "https://www.udemy.com/course/selenium-4-java-21-cucumber-jenkins-desde-cero/",
      "bio": "Automatización Web Eficaz: Dominando Selenium 4 con Java 21 para Integraciones Cucumber y Jenkins",
      "objectives": [
        "Dominar los fundamentos de Selenium 4 y comprender su implementación práctica en pruebas de automatización web efectivas",
        "Adquirir habilidades sólidas en programación en Java 21 para crear scripts de pruebas robustos y escalables que cumplan con los estándares de la industria",
        "Aprender a integrar con éxito Cucumber para el desarrollo y ejecución de pruebas de aceptación, así como a aprovechar su potencial para la colaboración en equip",
        "Comprender en profundidad la configuración y optimización de Jenkins para la implementación de un proceso de entrega continua fluido, permitiendo una integració"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Objetivos del curos"
        ],
        "Introducción a Selenium": [
          "¿Qué es Selenium IDE, Selenium RC, Selenium WebDriver y Selenium Grid?"
        ],
        "Configuración de Entorno (Descarga de herramientas y librerías)": [
          "Instalación Java 21 y Variables de Entorno",
          "Instalación Maven y Variables de Entorno",
          "Instalación Intellij IDE"
        ],
        "Automatizando con Selenium 4 y Java 21": [
          "Mi Primer Script Automatizado"
        ],
        "Locators en Selenium Web Driver": [
          "Localizadores de Selenium WebDriver (Identificación de elementos Web)",
          "Acción \"Click\"",
          "Acción \"SenKeys\"",
          "Obtener Texto con \"GetText\""
        ],
        "Validación de Casos de Prueba (Resultado Esperado vs Obtenido)": [
          "Validación de Casos de Prueba con \"Assertions\""
        ],
        "Captura de Evidencias": [
          "Captura de Evidencias con \"Screenshot\""
        ],
        "Selenium 4 + Gherkin + Cucumber": [
          "Configuración de Librerías (Cucumber + Gherkin)",
          "¿Qué es BDD?",
          "¿Qué es Gherkin?",
          "¿Qué es Cucumber?",
          "Creando casos de prueba con Gherkin",
          "Patrón de Diseño : Page Object Model",
          "Desarrollando Script Automatizado Selenium + Cucumber",
          "Ejecución de Script Automatizado Selenium + Cucumber y Generación de Reporte"
        ],
        "Selenium + Cucumber + Jenkins": [
          "¿Qué es Jenkins?",
          "¿Configuración de Jenkins?",
          "Crear un Jenkinsfile.groovy",
          "Integración Git Hub + Jenkins",
          "Ejecución pruebas automatizadas y generación de reporte cucumber desde Jenkins"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación en Java o en un lenguaje similar.",
        "Familiaridad con conceptos fundamentales de pruebas de software y pruebas de regresión.",
        "Comprensión básica de HTML, CSS y el funcionamiento de páginas web.",
        "Experiencia previa en el uso básico de herramientas de desarrollo y entornos de desarrollo integrados (IDE)."
      ],
      "description": "En este curso completo de Selenium 4 con Java 21, aprenderás a dominar las pruebas de automatización web desde cero. Desde los conceptos básicos hasta técnicas avanzadas, te sumergirás en el mundo de la automatización web y descubrirás cómo integrar eficazmente Cucumber y Jenkins para una entrega continua eficiente. A lo largo del curso, te sumergirás en las áreas clave de manejo de Selenium, codificación en Java, integraciones de Cucumber y configuraciones de Jenkins, lo que te permitirá construir una base sólida para convertirte en un experto en pruebas de software. Con ejemplos prácticos y proyectos del mundo real, estarás preparado para afrontar desafíos de automatización web en el entorno profesional.\nAdemás, explorarás a fondo temas como la identificación efectiva de elementos web, la implementación de pruebas de regresión, la gestión de flujos de trabajo complejos y la optimización de la velocidad y la estabilidad de las pruebas. A medida que avances, adquirirás una comprensión profunda de las mejores prácticas para el desarrollo de pruebas robustas y la depuración eficiente de problemas en entornos de producción. Este curso te brindará las habilidades necesarias para diseñar estrategias de pruebas eficientes, lo que te permitirá contribuir significativamente al éxito y la calidad del ciclo de desarrollo de software en tu organización.",
      "target_audience": [
        "Desarrolladores de software y probadores de calidad que deseen adquirir habilidades sólidas en pruebas de automatización web y mejorar su comprensión de las mejores prácticas en el desarrollo de pruebas de software.",
        "Profesionales de TI y estudiantes de informática interesados en ampliar sus conocimientos en pruebas de software y en el uso de herramientas de automatización para mejorar la eficiencia y la calidad del desarrollo de software.",
        "Profesionales de pruebas y QA que buscan adquirir experiencia práctica en el uso de herramientas como Selenium, Cucumber y Jenkins para implementar estrategias efectivas de pruebas de aceptación automatizadas y procesos de entrega continua",
        "Cualquier persona interesada en mejorar sus habilidades técnicas y su comprensión de las pruebas de software, con la ambición de contribuir al desarrollo ágil y a la entrega eficiente de productos de software de alta calidad."
      ]
    },
    {
      "title": "Java İle Selenium Webdriver Başlangıç Eğitimi",
      "url": "https://www.udemy.com/course/java-ile-selenium-webdriver-baslangc-egitimi/",
      "bio": "Java ile Selenium Webdriver Kullanarak Web Uygulamalarını Otomatize Edeceğiz",
      "objectives": [
        "Selenium webdriver ile başlangıç seviyesinde otomasyon projeleri oluşturulması",
        "Sıfırdan orta seviyeye selenium webdriver kullanımı",
        "Java ile selenium webdriver nasıl kullanılır",
        "Maven projesi oluşturulması",
        "Selenium webdriver",
        "Otomasyon testi",
        "IntelliJ Kullanımı",
        "Annotationlar",
        "Yazılım testi",
        "WebElement",
        "Assertion",
        "Webdriver",
        "TestNG",
        "Locator"
      ],
      "course_content": {
        "Kurs Tanıtımı": [
          "Kurs Tanıtımı"
        ],
        "Yazılım Testi, Otomasyon ve Selenium": [
          "Yazılım Testi, Otomasyon ve Selenim Nedir?"
        ],
        "Kurulumların Yapılması": [
          "Java JDK ve Maven Kurulumlarının Yapılması",
          "IntelliJ Kurulumunun Yapılması"
        ],
        "Maven Projesinin Oluşturulması": [
          "Maven ve POM Nedir?",
          "İlk Maven Projesinin Oluşturulması",
          "Driverların Projeye Eklenmesi",
          "Önemli Uyarı",
          "Maven ve Surefire Pluginlerinin İndirilmesi",
          "TestNG ve Selenium Dependencylerinin İndirilmesi"
        ],
        "Test Class ve Test Suite Oluşturulması": [
          "İlk Test Classının Oluşturulması",
          "Test Suite Oluşturulması"
        ],
        "Webdriver Nedir, Nasıl Kullanılır?": [
          "Chrome Driver İle İlk Test Metodunun Çalıştırılması",
          "Chrome Versiyonundan Kaynaklı Dependency Eklenmesi",
          "Gecko Driver İle İlk Test Metodunun Çalıştırılması"
        ],
        "Web Element ve Locator Nedir": [
          "Web Element ve Locator Nedir",
          "Locator - Konum Belirleyici"
        ],
        "Locatorlar Kullanılarak Web Element Nasıl Bulunabilir?": [
          "Id Değeri İle Web Element",
          "Name ve ClassName İle Web Element",
          "LinkText, PartialLinkText, TagName İle Web Element",
          "CssSelector İle Web Element",
          "Xpath İle Web Element 1",
          "Xpath İle Web Element 2"
        ],
        "TestNG Annotations": [
          "Negative Login Test Classının Oluşturulması",
          "Test Metodları İçerisinde Parametre Kullanımı",
          "Priority ve Groups Kullanımı",
          "Test Metodlarına Farklı Parametre Gönderimi",
          "BeforeMethod ve AfterMethod Annotation"
        ],
        "Assertion": [
          "Hard Assertion",
          "Soft Assertion"
        ]
      },
      "requirements": [
        "Java diline orta seviyede hakim olmak gereklidir"
      ],
      "description": "Merhabalar,\n\n\nTeknoloji, günümüzde çok hızlı şekilde gelişmektedir. Bu hıza yetişebilmek için yazılım sektörü de her geçen gün kendisini güncellemektedir. Geliştirdiğimiz uygulamaları başarıya ulaştırabilmek için hızın yanı sıra kaliteye de dikkat etmek gerekir. Kaliteli uygulamalar için test süreçleri olmazsa olmazımızdır. Test süreçleri kendi içerisinde bir çok alt başlığa ayrılmaktadır.\nJava ile Selenium Webdriver Başlangıç Eğitiminde, otomasyon testlerini işliyor olacağız. Otomasyon testleri, manuel ve rutin bir şekilde gerçekleştirilen testlerin otomasyona elverişli olması durumunda hız ve kalite açısından önemli bir basamaktır. Bu sebeple geliştirilen web tabanlı uygulamaların arayüz testlerini Selenium ile otomatize edebililiriz. Sizler de teknolojinin hızına yetişebilmek ve kaliteli test süreçlerinde görev almak istiyor olabilirsiniz. Bu sebeple otomasyon ve test süreçlerine ilgisi olan herkesi kursumuza davet ediyoruz.\n\n\nKursumuzu takipte zorlanmamak adına;\n\n\nHer ders 20 dakikayı geçmeyecek şekilde hazırlanmaya çalışıldı.\nGerekli derslerde kaynaklar kısmına çeşitli kaynaklar eklenerek derslerin işleyişinin kolaylaştırılması sağlandı.\nKursumuz şu an içerisinde 30 dersten ve yaklaşık 5 saatlik bir içerikten oluşmaktadır fakat çeşitli güncellemeler sebebiyle eklemeler yapılabilmektedir.\nVideoları izledikten sonra kesinlikle bol bol kod antrenmanları yapılması gerekmektedir. Uygulama yaparak öğrenilen her bilgi teorik olarak öğrenilen bilgilere göre daha kalıcı olmaktadır.\nKursumuz süresince ise en etkili öğrenme yöntemlerinden birisi olan 'Yazarak Öğrenme' tekniğini kullanmanızı tavsiye ederim. İster defter notu isterseniz de elektronik ortamda notlarınızı alın. İlerde çok fazla zaman kazanacağınıza inanıyorum.\nUygulamalarda yapılamayan veya anlaşılmayan kısımlar olduğu zaman soru-cevap kısmından anlık olarak sorularınızı sorabilirsiniz. Bu sayede hem kursumuza kolaylıkla devam edebilir hem de anlaşılmayan yerlerde destek alabilirsiniz.\n\n\nHerkese hayallerine giden yolculukta başarılar ve eğlenceli çalışmalar diliyorum.\n\n\nİyi Çalışmalar",
      "target_audience": [
        "Web tabanlı uygulama testlerine ilgisi olan",
        "Java dili ile otomasyon geliştirmek isteyen",
        "Selenium webdriver öğrenmek isteyen",
        "Yazılım testi konusunda ilgisi olan",
        "Sürekli manuel rutin testler yapan",
        "Otomasyon testlerine ilgisi olan"
      ]
    },
    {
      "title": "Test Driven Development con Java y Junit5",
      "url": "https://www.udemy.com/course/testdrivendevelopment/",
      "bio": "Curso de iniciación a Test Driven Development con ejemplos en java y junit",
      "objectives": [],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "TDD": [
          "Qué es TDD?",
          "Clase práctica: Sesión 1",
          "Clase práctica: Sesión 2",
          "Clase práctica: Sesión 3",
          "Ejercicios y contenidos extras"
        ],
        "Conclusión": [
          "Próximos pasos",
          "Clase Extra: Cuestionario"
        ]
      },
      "requirements": [
        "Para realizar este curso necesitaremos tener un conocimiento previo del lenguaje de programación Java. Tener un entorno de trabajo preparado para poder realizar los ejemplos que vayan surgiendo durante el curso."
      ],
      "description": "-Qué es Test Driven Development?\n-Cómo nos puede ayudar en el día a día ?\n-Cual es la metodología para realizar TDD?\n-Es realmente útil TDD?\n-Por que debería aprender TDD?\n-[...]\nTodas estas respuestas las podéis encontrar en el interior de éste curso, espero que esta metodología de programación os pueda ayudar a crecer como profesionales del sector y ver el desarrollo desde otra perspectiva mas ágil, funcional y practica.",
      "target_audience": [
        "Cualquier persona que no sepa que significa TDD (Test Driven Development) y quiera familiarizarse con éste concepto y esta nueva forma de diseñar software de manera sencilla y innovadora."
      ]
    },
    {
      "title": "Test logiciel avancé : Elaboration d’une stratégie de test",
      "url": "https://www.udemy.com/course/test-logiciel-avance-elaboration-dune-strategie-de-test/",
      "bio": "Test logiciel niveau avancé : Stratégie de test",
      "objectives": [
        "Elaboration d'une stratégie de tests",
        "mieux gérer les entretiens",
        "stratégie de tests",
        "Test logiciel niveau avancé"
      ],
      "course_content": {
        "Introduction": [
          "TEST LOGICIEL NIVEAU AVANCE : Stratégie de test : Introduction",
          "Stratégie de test : Des points importantes",
          "Stratégie de test : Téléchargement des ressources de la formation",
          "Stratégie de test : Sommaire",
          "Stratégie de test : c’est quoi",
          "Merci",
          "Stratégie de test : Le but",
          "Stratégie de test : On se base sur quoi ?",
          "Stratégie de test : Les outils",
          "Stratégie de test : Les projets",
          "Stratégie de test : Les projets",
          "Stratégie de test : Le périmètre",
          "Stratégie de test : Exercice 1",
          "Stratégie de test : Correction Exercice 1",
          "Stratégie de test : les risques",
          "Stratégie de test : Pourquoi on traite les risque au niveau d'une SDT",
          "Stratégie de test : Exercice 2",
          "Stratégie de test : Correction Exercice 2",
          "Stratégie de test : Les moyens de tests",
          "Stratégie de test : Exercice 3",
          "Stratégie de test : Correction Exercice 3",
          "Stratégie de test : Correction Exercice 3",
          "Stratégie de test : Solution pour les mal-voyants",
          "Stratégie de test : Les métriques & KPI de test :",
          "Stratégie de test : Exercice 4",
          "Stratégie de test : Correction Exercice 4",
          "Stratégie de test : Le planning",
          "Stratégie de test : Exercice 5",
          "Stratégie de test : Correction Exercice 5",
          "Stratégie de test : Le chiffrage",
          "Stratégie de test : Les ressources",
          "Stratégie de test : L’interdépendance",
          "Stratégie de test : Les tests",
          "Stratégie de test : Exercice 6",
          "Stratégie de test : Correction Exercice 6",
          "EXERCICE : Elaboration d'une stratégie de test :",
          "EXERCICE : Elaboration d'une stratégie de test :",
          "EXERCICE : Elaboration d'une stratégie de test :",
          "Conclusion",
          "Félicitations:"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Cette formation est pour donner les bonnes pratiques pour l’élaboration de la stratégie de test\nCette formation aide les test manager et les testeurs expert pour avoir une idée claire sur la stratégie de tests et comment la réaliser correctement\nAussi pour les testeurs juniors pour qu’ils puissent argumenter le jour de l’entretien\nLe faite de noter que vous êtes capable de réaliser une stratégie de test vous devenez très demandé auprès des recruteurs\n\n\nIl est très difficile de préparer une stratégie de tests par vous-même en raison du manque de ressources, mais ce cours est là pour vous aider à surmonter ce problème. J'ai inclus tout ce que vous pourriez avoir besoin de savoir pour bien comprendre le fonctionnement et la réalisation d’une stratégie de test .\nJ'ai inclus des explications sur chaque sujet dans de courtes vidéos séparées ainsi que des exemples pour que vous puissiez vous entraîner .\nC’est Asma, je suis responsable métiers de validation, je dirige des tests managers et aussi des testeurs J’ai plus de 12 ans d'expérience J'ai un solide bilan en aidant des milliers d'étudiants à réussir l'examen de la Fondation ISTQB® et les outils de tests, je suis là pour vous aider à passer au niveau supérieur. Je vous apprendrai tout ce que vous devez savoir je répondrai à toutes vos questions 24h/24 et 7j/7.",
      "target_audience": [
        "Toute personne souhaitant savoir concevoir la stratégie de test",
        "Test Managers, Test Leaders et Test Program Managers, .",
        "Aussi pour les testeurs juniors pour qu’ils puissent argumenter le jour de l’entretien",
        "Toute personne impliquée dans le test de projets de projets logiciels (y compris les testeurs, les ingénieurs, les analystes, les consultants, les développeurs de logiciels, les clients, tout le monde)."
      ]
    },
    {
      "title": "Playwright ile Modern Test Otomasyonu: POM ve Allure Report",
      "url": "https://www.udemy.com/course/playwright-ile-modern-test-otomasyonu-pom-ve-allure-report/",
      "bio": "Playwright, Page Object Model ve Allure Report ile profesyonel web test otomasyonu geliştirmeyi öğrenin.",
      "objectives": [
        "Playwright kütüphanesini kullanarak modern web otomasyon testleri yazmayı öğrenecekler.",
        "Page Object Model (POM) tasarım desenini kullanarak sürdürülebilir ve ölçeklenebilir test yapıları oluşturmayı kavrayacaklar.",
        "Asenkron JavaScript ve async/await kullanımıyla etkin test senaryoları geliştirmeyi öğrenecekler.",
        "Allure Report kullanarak görsel açıdan zengin ve detaylı test raporları oluşturmayı ve yorumlamayı deneyimleyecekler."
      ],
      "course_content": {
        "Giriş": [
          "Tanıtım",
          "Kurulumlar",
          "İlk Testlerin Yazımı",
          "Describe ve Test",
          "Describe ve BeforeEach",
          "Page Object Model 1",
          "Page Object Model 2",
          "Page Object Model 3",
          "Kısa bir not",
          "Page Object Model 4 ve özet",
          "Allure report"
        ]
      },
      "requirements": [
        "Test otomasyonu kavramlarına ilgi duymak ve öğrenmeye açık olmak önemlidir.",
        "Nodejs kurulu bir bilgisayar ve temel komut satırı kullanım becerisi beklenmektedir.",
        "Temel JavaScript bilgisi ve web teknolojilerine aşinalık gereklidir."
      ],
      "description": "Bu kapsamlı kurs, modern web test otomasyonunda uzmanlaşmak isteyenler için özel olarak tasarlanmıştır. Playwright kütüphanesi, Page Object Model (POM) tasarım deseni ve Allure Report aracını kullanarak profesyonel seviyede test otomasyonu becerileri kazanacaksınız.\nKursumuzda, Playwright'in güçlü özellikleriyle tanışacak ve çoklu tarayıcı testlerini nasıl yöneteceğinizi öğreneceksiniz. Chromium, Firefox ve WebKit tabanlı tarayıcılarda testler yazarak, uygulamanızın farklı ortamlarda tutarlı çalıştığından emin olacaksınız.\nPage Object Model ile test kodlarınızı organize edecek, sürdürülebilir ve ölçeklenebilir bir yapı oluşturacaksınız. Bu tasarım deseni sayesinde, test mantığınızı sayfa yapısından ayırarak, değişikliklere hızlı adapte olabilen ve bakımı kolay test senaryoları geliştireceksiniz.\nAsenkron JavaScript ve async/await kullanımıyla, modern web uygulamalarının karmaşık senaryolarını etkili bir şekilde test etmeyi öğreneceksiniz. AJAX çağrıları, dinamik içerik yüklemeleri ve single-page uygulamaların zorlu yapısıyla başa çıkmak için gerekli teknikleri edineceksiniz.\nAllure Report entegrasyonu ile testlerinizin sonuçlarını görsel açıdan zengin ve detaylı raporlara dönüştürmeyi deneyimleyeceksiniz. Bu, test süreçlerinizi daha anlaşılır ve yönetilebilir hale getirecek, aynı zamanda ekibinizle ve paydaşlarınızla etkili iletişim kurmanızı sağlayacak.\nKurs boyunca şunları öğreneceksiniz:\nPlaywright kurulumu ve temel kullanımı\nSelector stratejileri ve etkili element bulma yöntemleri\nİleri düzey Playwright özellikleri (network intercept, mobil görünüm simülasyonu, dosya yükleme/indirme)\nPage Object Model prensipleri ve uygulaması\nTest verilerinin yönetimi ve parametre kullanımı\nAsenkron işlemler ve bekleme stratejileri\nAllure Report kurulumu, özelleştirilmesi ve zengin raporlar oluşturma\nHata ayıklama teknikleri ve en iyi pratikler\nParalel test koşumu ve performans optimizasyonu\n\n\nPratik örnekler ve gerçek dünya senaryoları üzerinden ilerleyerek, öğrendiklerinizi hemen uygulama fırsatı bulacaksınız. Her bölümün sonunda, kazandığınız becerileri pekiştirmeniz için alıştırmalar ve mini projeler yer alacak.\nKurs boyunca, endüstri standardı en iyi uygulamaları ve püf noktalarını paylaşacağız. Böylece sadece kod yazmayı değil, aynı zamanda profesyonel bir test otomasyonu uzmanı gibi düşünmeyi ve çalışmayı da öğreneceksiniz.\nAyrıca, kurs içeriğimiz sürekli güncellenmektedir. Web teknolojileri ve test araçları geliştikçe, yeni özellikler ve teknikler kurs içeriğine eklenecek, böylece bilgilerinizin her zaman güncel kalması sağlanacaktır.\nKurs sonunda, modern web uygulamalarını güvenle test edebilecek, otomasyonlarınızı etkili bir şekilde yönetebilecek ve sonuçları profesyonelce raporlayabilecek seviyeye geleceksiniz. İster kariyerinizi test otomasyonuna yönlendirmek isteyin, ister mevcut becerilerinizi güncellemek isteyin, bu kurs size solid bir temel ve ileri düzey teknikler sunacak.\nYazılım kalitesini bir üst seviyeye taşımaya hazır mısınız? Hemen kursa katılın ve web test otomasyonunda yeni bir çağı keşfedin!",
      "target_audience": [
        "Mevcut test otomasyon bilgilerini güncellemek ve Allure Report gibi modern raporlama araçlarını öğrenmek isteyen deneyimli test mühendisleri için değerlidir."
      ]
    },
    {
      "title": "2023 ISTQB Advanced Level Test Analyst Türkçe Sınav Soruları",
      "url": "https://www.udemy.com/course/2023-istqb-advanced-level-sertifika-turkce-snav-sorular/",
      "bio": "2021 ISTQB İleri Seviye Sertifika Sınav Soruları",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "2023 ISTQB ileri seviye sertifika sınav sorularını içermektedir. İngilizce sınav sorularını anlamakta güçlük çeken adaylar için kolaylık olması adına Türkçe'ye çevrilmiş sınav soruları siz değerli öğrenciler için hazırlandı. Kendini test alanında geliştirmek isteyen mühendis ve mühendis olmayan herkes bu kursu alabilir. İçerikte Test Süreçleri ve Yönetimi, Test Teknikleri, Test Yönetimi Araçları, Risk Tabanlı Test, Test Yönetimi İçin Metrikler ve Test Raporlama  yer almaktadır.\nHali hazırda bulunan ISTQB güncel müfredatının hepsini kapsamakla beraber, bilgi ve öğrenimin artırılması bu kursla amaçlanmıştır. Kullanılan jargonlar yine ISTQB müfredatında yer alan Türkçe sözlükten alınmıştır. Ders içeriği ileri seviyeyi kapsamaktadır. Hazırlanan sorularla hedef, yazılım testi alanında donanımlı kişiler çıkarmaktır.\nGerçek Sınavda - Sınav 40 çoktan seçmeli sorudan oluşacaktır. Geçmek için en az %65 (26 puan veya daha fazla) puan gerekir. Sınavı geçmek için yüksek güven kazanacaksınız. Bölüm/modül bazında gerçek sınavda çıkacak sorulara benzer birçok soru almaktadır. ISTQB İleri Düzeyini başarıyla öğrenecek, hazırlayacak ve geçecek ve birkaç hafta içinde Sertifikalı Test Analyst Uzmanı olacaksınız. Sınava katılabilmek için katılımcıların Foundation Level sertifikasına sahip olması gerekmektedir. Yanlışlar doğruları götürmemektedir. Başarılı olabilmek için toplam puanı 80 olan sınavda minimum 52 (%65’i kadar) puan alınması gerekmektedir. Soru cevap bölümünden istediğiniz soruyu sorabilirsiniz, en kısa sürede çözüp cevaplayacağım. Tüm adaylarımıza içtenliğimle başarılar diliyorum.",
      "target_audience": [
        "ISTQB Foundation Level Certified Tester Sertifikası alan herkes kursu alabilir."
      ]
    },
    {
      "title": "Robot Framework - Kurs Podstawowy",
      "url": "https://www.udemy.com/course/robot-framework-kurs-podstawowy/",
      "bio": "Podstawy automatyzacji z wykorzystaniem Robot Framework",
      "objectives": [
        "Opanujesz podstawowe pojęcia i zasady dotyczące Robot Framework",
        "Nauczysz się tworzyć testy automatyczne",
        "Nauczysz się wykorzystywać API podczas testów automatycznych",
        "Dowiesz się jak automatyzować aplikacje internetowe i przeglądarki",
        "Poznasz podstawowe biblioteki Robot Framework",
        "Dowiesz się jak generować czytelne raporty z testów automatycznych",
        "Napiszesz swoją własną bibliotekę",
        "Stworzysz własne metody i Keywordy",
        "Poznasz podstawowe kolekcje oraz pętle w Robot Framework"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp",
          "Konfiguracja"
        ],
        "Pierwsze przypadki testowe - Selenium Library": [
          "Sekcja Settings oraz Test Cases. Pierwszy przypadek testowy",
          "Sekcja Keywords oraz pierwsze keywordy z SeleniumLibrary",
          "Sekcja Variables oraz przesyłanie argumentów do Keyworda",
          "SeleniumLibrary - podstawowe metody",
          "Pisanie keywordów i dalsze poznawanie SeleniumLibrary",
          "Resource. Unikanie duplikowania kodu"
        ],
        "Pętle i kolekcje w Robot Framework": [
          "Pętle",
          "Kolekcje - Listy",
          "Kolekcje - Słowniki"
        ],
        "WebElements": [
          "Pobieranie WebElements",
          "Dynamiczne lokalizowanie elementów na stronie",
          "Przełączanie się między kartami oraz biblioteka String",
          "Zwracanie wartości z napisanych keywordów oraz zakres zmiennych",
          "Radiobuttony oraz Selecty"
        ],
        "Własna biblioteka, raporty oraz organizacja testów": [
          "Raporty oraz własna biblioteka",
          "Porządkowanie kodu",
          "Sposoby uruchamiania testów"
        ],
        "API": [
          "GET",
          "POST",
          "DELETE",
          "PATCH",
          "Praca z response"
        ]
      },
      "requirements": [
        "Zainstalowany Python na komputerze",
        "Nie musisz mieć doświadczenia w programowaniu"
      ],
      "description": "Robot Framework to świetne narzędzie do automatyzacji, które pozwala na tworzenie testów automatycznych oraz generowanie raportów. Jest ono szczególnie popularne wśród testerów oprogramowania ze względu na łatwość w użyciu i  szerokie możliwości rozszerzania dzięki różnorodnym bibliotekom.\nPodczas kursu dotyczącego podstaw automatyzacji z wykorzystaniem Robot Framework, uczestnicy nauczą się tworzyć testy automatyczne za pomocą języka skryptowego opartego na słowach kluczowych. Dowiedzą się również, jak generować raporty z wynikami testów oraz jak korzystać z różnych bibliotek, takich jak biblioteka do obsługi przeglądarek internetowych czy biblioteka do obsługi protokołu HTTP.\nOprócz tego, uczestnicy poznają tajniki pisania własnych metod w Robot Framework, co pozwoli im na dostosowywanie narzędzia do własnych potrzeb i tworzenie bardziej zaawansowanych skryptów. Kurs również zapozna uczestników z najpopularniejszymi bibliotekami dostępnymi dla Robot Framework, co pozwoli im na wykorzystywanie gotowych rozwiązań w swoich projektach.\nCały kurs jest przeznaczony dla osób początkujących i zakłada brak wcześniejszej wiedzy z zakresu automatyzacji. Zajęcia obejmują teorię oraz praktyczne ćwiczenia, dzięki czemu uczestnicy będą mogli natychmiast wykorzystać swoją wiedzę w praktyce. Po zakończeniu kursu uczestnicy będą potrafili tworzyć proste skrypty automatyczne za pomocą Robot Framework oraz rozszerzać je o nowe funkcjonalności za pomocą różnych bibliotek.\nKurs trwa prawie 6 godzin, dzięki czemu uczestnik ma pewność, że każde z podstawowych zagadnień zostało sumiennie i dobrze przepracowane.",
      "target_audience": [
        "Osoby, które zaczynają swoją przygodę z automatyzacją w Robot Framework.",
        "Osoby, które chciałby pracować (lub pracują) jako Tester Automatyzujący.",
        "Osoby, które chciałyby napisać swojego własnego bota."
      ]
    },
    {
      "title": "Тестирование ПО. Баг и баг репорт. Практика 2025",
      "url": "https://www.udemy.com/course/holiver_qa_bugreports/",
      "bio": "Как составлять баг репорты? Ошибки новичков? Практический опыт тестировщика? все разберем в рамках этого курса))",
      "objectives": [
        "Понять что такое баг и какие типы ошибок бывают",
        "Из каких атрибутов состоит баг репорт",
        "Как правильно описывать баг репорт",
        "Как НЕ правильно описывать баг репорт",
        "Получить практику составления баг репортов",
        "Нюансы составления баг репорта от тестировщика с опытом"
      ],
      "course_content": {
        "Введение": [
          "Введение в курс"
        ],
        "Баг репорт для чайников": [
          "Введение",
          "Что такое баг. Примеры багов в интернет магазине",
          "Где и когда тестировщик находит баги. Причины возникновения багов",
          "Зачем нужны баг репорты",
          "Атрибуты баг репорта",
          "Бонус: вопрос по баг репортам, который часто задают на собеседовании новичкам",
          "Заводим первый баг репорт",
          "Что такое плохой, хороший и отличный баг",
          "Priority vs Severity. Теория",
          "Priority vs Severity. Практика"
        ],
        "Баг репорт. Практика!": [
          "Введение",
          "Как заводить баг репорт, алгоритм",
          "Заводим второй баг репорт",
          "Заводим третий баг репорт",
          "Заводим четвертый баг репорт",
          "Заводим пятый баг репорт",
          "Заводим шестой баг репорт"
        ],
        "Ошибки новичков при составлении баг репорта. Учимся на ошибках других": [
          "Введение",
          "Как НЕ правильно писать 'Summary' в баг репорте",
          "Как НЕ надо писать \"Steps\"",
          "Как НЕ надо делать скриншоты",
          "Разбор плохо написанного баг репорта. Пример 1",
          "Разбор плохо написанного баг репорта. Пример 2",
          "Разбор плохо написанного баг репорта. Пример 3"
        ],
        "Жизненный цикл баг репорта": [
          "Введение.",
          "Ситуация 1",
          "Ситуация 2",
          "Ситуация 3"
        ],
        "Бонус. Шутливая загадка про обязанности тестировщика": [
          "Загадка",
          "Ответ"
        ],
        "Домашнее задание. Набиваем руку": [
          "Введение. Что за домашнее задание, как его делать и проверять",
          "Описать первый баг репорт",
          "Описать второй баг репорт",
          "Описать третий баг репорт"
        ]
      },
      "requirements": [
        "Базовая компьютерная грамотность",
        "Для обучения необходим компьютер/ноутбук и смартфон с возможностью выходить в сеть Internet"
      ],
      "description": "Всем привет!\n\n\nЯ так понимаю ты мой друг новичек в тестировании и перед тобой встали тяжелые для тебя вопросы:\n1. А где мне взять практику?\n2. А правильно ли я понял теорию из интернета?\n3. Точно ли я научился составлять баг репорты?.\n4. Как позаимствовать опыта у опытного тестировщика?\n\n\nВ рамках этого курса я буду всеми силами тебе помогать научиться основам, разобраться в нюансах и получить опыт, чтобы у тебя ушла не уверенность в знаниях.\n///////////////////// /////////////// //////////// ///////////// //////////// ////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// ///////////\nВ рамках это курса мы составим 10-ть баг репортов на основе РЕАЛЬНЫХ багов. У вас будет возможность увидеть на практике как составляются баг репорты, разобраться в узких местах и что самое главное понять что  в баг репортах как раз таки НЕ нужно указывать и почему. В рамках этого курса у нас будет мало чистой теории, главный упор будет делаться на практику, то есть я буду по ходу дела составления каждого баг репорта объяснять что я делаю и почему, а так же буду уделять время для объяснения того что делать не нужно с точки зрения професионализма.\n///////////////////// /////////////// //////////// ///////////// //////////// ////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// ///////////\nА так же, хоть мы уже и не в школе, но будут домашние задания, чтобы ты смог попробоать самостоятельно будущие обязанности тестировщика и что не мало важно набить руку, чтобы ты не терялся на будущей работе.\n///////////////////// /////////////// //////////// ///////////// //////////// ////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// /////////// ///////////\nУ вас есть возможность получить практику которой вам вероятно не хватает.\nВсем удачи!",
      "target_audience": [
        "Этот курс для начинающих тестировщиков",
        "Это курс для тех кто хочет войти в IT через тестирование",
        "Кто хочет получить практические знания по составлению баг репортов",
        "Кто хочет узнать больше практических нюансов от практического тестировщиика",
        "Кто хочет узнать больше о том какие ошибки составляют новички"
      ]
    },
    {
      "title": "Introdução aos testes automatizados",
      "url": "https://www.udemy.com/course/introducao-aos-testes-automatizados/",
      "bio": "Aprenda conceitos de automação de testes para o desenvolvimento de sistemas de alta qualidade",
      "objectives": [],
      "course_content": {
        "Introdução aos Testes Automatizados": [
          "Conceitos",
          "A base da pirâmide",
          "O topo da pirâmide",
          "O meio da pirâmide",
          "O quarto quadrante",
          "Fechamento"
        ]
      },
      "requirements": [
        "Não há pre-requisitos para a realização deste curso"
      ],
      "description": "Bem vindo!\nVocê ou sua empresa precisam melhorar ou começar a praticar automação de testes durante o desenvolvimento de aplicações web ou mobile? Então esse curso foi feito para você!\nMuitos pensam que automação de testes é sobre sair gravando passos enquanto se usa uma aplicação como um usuário faria, e depois basta apertar o botão PLAY que tudo será automaticamente testado.\nLamento informar, mas esta não é a verdade.\nAutomação de testes pode e deve ocorrer em todas as camadas de uma aplicação e não somente na interface de usuário, e essa história de record and playback não funciona. Além disso, outras práticas e ferramentas podem ajudar times de desenvolvimento de software a trabalhar de forma sustentável, mantendo a qualidade do software desenvolvido desde seu início e durante sua manutenção.\nNeste curso diversos conceitos e técnicas de automação de testes serão apresentadas para tratar de differentes perspectivas em distintas camadas de aplicações.\nNeste primeiro curso veremos:\n- Alguns conceitos essenciais\n- Testes de unidade\n- Testes de UI (user interface)\n- Testes de serviço/integração\n- Testes não funcionais (performance, carga e segurança)\nEste primeiro curso é pre-requisito aos próximos que serão lançados, visto que trata de conceitos fundamentais relacionados a teste de software e automação de testes.\nJunte-se a Escola Talking About Testing e venha fazer parte de um grupo seleto de profissionais que não só conhecem, como também aplicam conceitos modernos para o desenvolvimento de aplicações de alta qualidade.",
      "target_audience": [
        "Testadores de software",
        "QAs",
        "Analistas de Qualidade",
        "Desenvolvedores de Software",
        "Analistas de Sistemas",
        "Estudantes de desenvolvimento de software"
      ]
    },
    {
      "title": "【JUnit 5】Javaテスト徹底攻略！Mockito×DBRiderとAI活用で高品質な単体テスト設計を習得",
      "url": "https://www.udemy.com/course/junit-5mockitodbriderai/",
      "bio": "MockitoによるモックテストとDBRiderによるDB検証を基礎から学び、Javaテストコードの品質を高める設計・改善スキルを習得します。さらにAIを活用してテストケース作成やカバレッジ分析を効率化し、実務で使える力を身につけましょう!",
      "objectives": [
        "JUnit 5を用いたテストコードの基本構文と設計方針を理解できます",
        "Mockitoを使って依存関係をモックし、柔軟なユニットテストを実装できます",
        "DBRiderを用いたデータベース操作を伴うテストの書き方を習得できます",
        "テストの「網羅性」「独立性」「実行速度」などの品質指標を意識したテスト設計ができるようになります",
        "カバレッジレポートの読み方や、テスト不足箇所の特定・改善方法を学べます",
        "ChatGPTなどのAIツールを活用し、テストコードの生成や改善、テストシナリオの設計方法を実践的に学びます。"
      ],
      "course_content": {
        "JUnitの概要と環境構築": [
          "コースの全体像と目的",
          "信頼されるコードとは？ユニットテストとAAA原則の全体像",
          "Javaのテストはこう書く！JUnitの全体像と実践コードを見てみよう",
          "IntelliJ IDEAのインストールと初期設定",
          "Javaプロジェクトの作成とJDKの設定方法",
          "JUnit 5を使うための依存関係の追加方法",
          "JUnitで基本のユニットテストを作成する"
        ],
        "JUnitの基本構文とアノテーションの使い方": [
          "assertEqualsで値を検証する基本",
          "例外が発生するかをassertThrowsで検証",
          "実行時間を検証するassertTimeoutの使い方",
          "複数検証をまとめるassertAllの活用",
          "@DisplayNameでテスト名をわかりやすく",
          "@Disabledでテストを一時的に無効化する",
          "読みやすくするテストメソッドの命名ルール",
          "1メソッド1検証の原則でテストを明確に",
          "テストの独立性とは？設計で気をつけるべきポイント",
          "遅いテストは悪？実行速度を意識したテスト設計",
          "@BeforeEach/@AfterEachで共通処理を管理",
          "@BeforeAll/@AfterAllで全体の初期化と終了処理",
          "ブラックボックステストとは",
          "同値分割・境界値分析を用いたテスト",
          "エラー推測で隠れたバグを見つける技法",
          "@CsvSourceで複数の入力をまとめてテストしよう",
          "@Nestedでテストクラスをグループ化する方法",
          "【演習】JUnitを使ったテストを自力で書いてみよう",
          "【解説】演習の模範解答とポイント解説"
        ],
        "Mockitoで学ぶ：モックを使ったテスト設計と実践": [
          "モックオブジェクトとは？依存を切り離す基本概念を理解しよう",
          "手作りモックの限界：冗長さと保守性の問題を体験しよう",
          "Mockitoの使い方を始める準備（pom.xmlの設定）",
          "Mockitoを有効化！@ExtendWithアノテーションの役割",
          "@Mockの使い方：依存オブジェクトを自動生成しよう",
          "@InjectMocksでテスト対象を構築する方法",
          "doReturnの使い方：戻り値を指定して振る舞いを制御",
          "引数ありメソッドのモック化：whenと引数マッチャーの活用",
          "doThrowで例外をシミュレーションしよう",
          "クラス型の依存に注意！DI(依存性注入)で保守しやすい設計へ",
          "@Mockと@Spyの違い：部分的に本物の振る舞いを使いたいとき",
          "【演習】モックを使ったテストを自力で書いてみよう",
          "【解説】演習の模範解答とポイント解説"
        ],
        "DBRiderによるデータベースの自動テスト": [
          "DBRiderとは何か？導入の目的と全体像",
          "PostgreSQLのインストール手順",
          "DBRiderの導入：pom.xmlの設定方法",
          "今回使うサンプルコードとデータベース構成の説明",
          "本講座で扱うDBテストケースを事前に確認しよう",
          "DBRiderの基本的な使い方を理解しよう",
          "データセットファイル（YAML/JSON）の作成方法",
          "DBのテストクラスの書き方と@DBRider",
          "全件取得検索処理のテスト",
          "特定条件で1件を取得する検索処理をテスト",
          "更新系処理のテスト",
          "DBRiderで行うパフォーマンステストの基礎",
          "DBテスト中のログ出力を最小限にする設定方法",
          "DBテスト演習問題にチャレンジしよう",
          "演習問題の解答"
        ],
        "テストの可視化と設計力：ホワイトボックスとカバレッジ分析": [
          "テストの「網羅率」って何？カバレッジを可視化しよう",
          "IntelliJを使ったテストカバレッジの確認方法",
          "良いユニットテストの条件 〜FIRST原則の5要素〜",
          "テストピラミッドで考える理想的なテスト構成",
          "DI（依存性注入）で実現するテストしやすい設計",
          "レイヤー構造による責務分離とテスト性の向上"
        ],
        "JUnit × ChatGPT 活用実践：AIによるテストコード作成と改善": [
          "AI時代のテストはどう変わるか",
          "JUnitテストコード自動生成入門",
          "AIにおまかせ！JUnitテストの改善を自動提案",
          "ChatGPTで学ぶ！Excelシナリオ設計からAIコード生成までの実践ガイド"
        ],
        "おわりに": [
          "おわりに",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Javaの基本的な文法に少しでも触れたことがあれば大丈夫です。実務経験は不要です。",
        "日常的なパソコン操作（ファイルの保存、コピー＆ペーストなど）ができれば問題ありません。",
        "ChatGPTの利用には無料プランで十分対応可能です。"
      ],
      "description": "Java単体テスト実践！JUnit × Mockito × DBRider × AI講座\n〜モック・DBテスト・品質向上・AI補助まで、モダンJava開発に必須のユニットテスト技術を体系的に習得〜\nJava開発における品質と信頼性を支える「ユニットテスト」。この講座では、JUnit 5を軸に、Mockitoによるモックテスト、DBRiderによるDBテスト、テスト設計のベストプラクティス、AIによる支援ツールの活用という4つの柱を通して、現場で役立つテスト技術を体系的に学習します。\n初心者がつまずきやすい基礎から、現場エンジニアでも悩みがちなテスト設計やメンテナンス、さらにはAIの実用的な活用方法まで、実務に即した内容を段階的にマスターできる内容です。\n\n\n【この講座で学べる主な内容】\nMockitoによるモックテストの基礎と応用\nモックの基本概念と、テスト容易性の重要性\n@Mock / @InjectMocks の使い方\ndoReturn, doThrow, doReturn-when などの動作制御\nanyString()など柔軟な引数マッチング\n実プロジェクトでの利用シーンと設計改善ポイント\nDBRiderを使ったデータベーステストの実践\nDBテストの課題とDBRiderの導入メリット\nYAML による期待データ・初期データの管理\n@DataSet / @ExpectedDataSet / @DBRider の各種アノテーション\nDBアクセスの検索・更新テストを網羅的に検証\nテスト品質の向上を目指す設計原則と技法\nArrange / Act / Assert によるテスト構造の基本\nFIRST原則（Fast, Independent, Repeatable, Self-validating, Timely）\nテストピラミッドによる戦略的なテスト配置\n命名・ネスト・独立性・1メソッド1アサーションの徹底\nIntelliJでのカバレッジ可視化と改善サイクル\nAIツールを活用した効率的なテスト支援\nChatGPTによるテストコード自動生成\n自然言語からのテストクラス作成プロンプト例\nカバレッジ不足・テストパターン漏れの指摘\n例外系・セキュリティ系のエッジケース生成\nテストのリファクタリングと冗長検出の自動化\n【学習成果：このコースを受講すると】\nJava開発におけるテストコードの基本構造を理解できる\nMockitoを使って依存オブジェクトを柔軟にモック化できる\nDBRiderを使って状態を伴うテストを安全・簡単に実施できる\nカバレッジやFIRST原則を意識した設計ができるようになる\nAIツールを用いてテストの自動生成や品質改善を効率化できる\n【こんな方におすすめ】\nJavaでのテスト自動化に初めて取り組む新卒・若手開発者\nJUnit 5やMockitoの基本を体系的に学びたい初級〜中級エンジニア\n実装コードに対して品質保証のためのテスト設計を行いたい方\nDBを含む業務ロジックの検証を自動化したい方\nAIによる補助機能を開発現場に組み込んで効率化したいエンジニア\n【カリキュラム構成の一部紹介】\n● セクション1：JUnitの全体像と環境構築\n単体テストの目的と効果\nIntelliJ＋Mavenでの初期セットアップ\nAAA（Arrange-Act-Assert）モデルの理解\n● セクション2：JUnit 5入門とテスト設計技法\nアサーションの基本と例外検証\n@DisplayName/@Disabled などの補助アノテーション\nパラメータ化テストでの網羅性向上\n同値分割、境界値分析、デシジョンテーブルなどの応用\n● セクション3：Mockitoでのモックテスト\nモックの仕組みと適切な使い方\n振る舞いの変更・例外スロー・検証の実装方法\n● セクション4：DBRiderを活用したDBテスト\nテーブル初期化と検証の仕組み\nデータセットのYAML管理とスナップショット機能\n検索や更新系のテスト設計\nDB処理パフォーマンスのテスト設計\n● セクション5：テスト品質と設計ベストプラクティス\nカバレッジの種類と分析レポートの読み方\nテスト容易性を意識したクラス設計\n● セクション6：AIによるテスト支援と自動化\nChatGPTでのテストシナリオ生成\nリファクタリング提案などの自動補助\n【受講に必要な前提知識】\nJavaの基本文法に触れたことがある方（if文やメソッド定義など）\n開発経験が浅くてもOK。IDEやMavenの操作は講座内で丁寧に解説\nChatGPTは無料プランでも利用可。登録方法や使い方も紹介\nDB知識は初歩的でOK。SQL文やJDBC操作はサンプルで補足\n単体テスト未経験でも、1つずつ理解できる構成です\n【まとめ】\n現代のJava開発では、ユニットテストは避けて通れない重要技術です。\n本講座は、単なるテストの書き方を超え、「どうすれば高品質なコードを継続的に書き続けられるか」という視点から、設計・実装・運用までを一気通貫で学べる構成になっています。\n特にAIの活用については、流行にとどまらず、テスト生成やメンテナンスを支援する“実務的な活用術”に焦点を当てており、他では得られない実践的なスキルが身につきます。\nモック、DBテスト、品質設計、そしてAI支援まで——\nテストに関するあらゆる課題を、現場レベルで解決できるエンジニアになるための一歩を、このコースで踏み出してみませんか？",
      "target_audience": [
        "Javaでのテスト自動化に初めて取り組む新卒・研修中の開発者",
        "JUnit 5やMockitoの基本を体系的に学びたい初級〜中級エンジニア",
        "データベースを使ったテストにも対応したい方、DBRiderを使って安定したテスト環境を整えたい方",
        "自作コードの品質チェックやバグ予防にテストを活用したい方",
        "カバレッジレポートの読み方や改善のヒントを知りたいJavaエンジニア",
        "AIを活用してJUnitテストの生成や改善を効率化したいエンジニア"
      ]
    },
    {
      "title": "Testando Javascript e React com Jest e Enzyme",
      "url": "https://www.udemy.com/course/javascript-react-jest-enzyme/",
      "bio": "Aprenda a testar Javascript e React estudando a fundo as tecnologias Jest e Enzyme",
      "objectives": [
        "Escrever testes unitários para Javascript e React utilizando Jest e Enzyme",
        "Utilizar matchers, testar códigos assíncronos, utilizar o setup e o teardown e utilizar funções de mock do Jest",
        "Testes com Snapshot, Mocks de Timers, Mocks Manuais, Mocks de classes ES6, Desviar mocks de módulos, Testes com manipulação de DOM, Plugins do modo assistido (watch mode)",
        "Testar Puppeteer, MongoDB e DynamoDB",
        "Como debugar os testes utilizando o Chrome ou VSCode",
        "Testes com React e React Native",
        "APIs Globals, Expect, Mock Functions, Jest Object, Configurando o Jest, Jest CLI Options",
        "Como configurar o Enzyme no Jest",
        "Como utilizar o Shallow rendering",
        "Como utilizar o Full Dom Rendering",
        "Como utilizar o Static Rendering",
        "Como utilizar Selectors",
        "Testar uma aplicação React com Redux real utilizando os conceitos do curso"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Introdução - Aplicação Real"
        ],
        "Jest - Introdução": [
          "Iniciando",
          "Utilizando Matchers",
          "Testando códigos assícronos",
          "Setup e Teardown",
          "Funções de Mock",
          "Plataforma Jest"
        ],
        "Jest - Guias": [
          "Testes com Snapshot",
          "Mocks de Timers",
          "Mocks Manuais",
          "Mocks de classes ES6",
          "Contornando mocks de módulos",
          "Utilizando com Webpack",
          "Utilizando com Puppeteer",
          "Utilizando com MongoDB",
          "Utilizando com DynamoDB",
          "Manipulação de DOM",
          "Watch Plugins",
          "Debugando os testes e resolução de problemas"
        ],
        "Jest - Guias de Frameworks": [
          "Testando aplicações React",
          "Testando aplicações React Native"
        ],
        "Jest - Referência da API": [
          "Globais",
          "Expect - Expand",
          "Expect - Métodos existentes",
          "Funções de Mock",
          "Objeto Jest (Parte 1)",
          "Objeto Jest (Parte 2)",
          "Objeto Jest (Parte 3)",
          "Objeto Jest (Parte 4)",
          "Configurando o Jest (Parte 1)",
          "Configurando o Jest (Parte 2)",
          "Configurando o Jest (Parte 3)",
          "Opções da linha de comando"
        ],
        "Enzyme": [
          "Introdução",
          "Iniciando",
          "Shallow Rendering",
          "Full Dom Rendering",
          "Static Rendering",
          "Selectors",
          "Métodos comuns entre Shallow e Full Dom Rendering"
        ],
        "Aplicação Real": [
          "Configurando a aplicação real",
          "Testando o componente Customer Form",
          "Testando a store do Redux referente ao formulário de Customers"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de Javascript e React"
      ],
      "description": "Jest e Enzyme são as principais bibliotecas para testes unitários com Javascript e React.\nNeste curso eu passarei pela documentação inteira do Jest e do Enzyme (as partes relacionadas a testes com Jest), explicando, realizando e complementando os exemplos e exercícios. Ou seja, ao finalizar o curso você passará por praticamente tudo que se tem para aprender sobre Jest e Enzyme.\nAo final do curso mostro como por em prática os ensinamentos em uma aplicação React e Redux real.",
      "target_audience": [
        "Desenvolvedores Javascript e React que queiram aprender a fundo sobre testes unitários utilizando Jest e Enzyme"
      ]
    },
    {
      "title": "Learn Manual Software Testing In Arabic.",
      "url": "https://www.udemy.com/course/manual-software-testing-in-arabic/",
      "bio": "Software Testing",
      "objectives": [
        "You can test any software [Desktop, web applications]"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What is Testing?",
          "When do we Start & Finish testing?",
          "Testing Process",
          "Testing Levels",
          "Testing Types",
          "Writing Test cases & Test Procedures",
          "Exploratory Testing",
          "Bug Life Cycle",
          "Bug Reporting",
          "Test Report"
        ]
      },
      "requirements": [
        "You should have good technical knowledge"
      ],
      "description": "This Course for all who want to learn the basics of software testing, after this course you will be able to test any Desktop and Web applications.\nCourse content\n- Overview\n- What is testing?\n- When do we start testing?\n- Testing Process.\n- Testing levels.\n- Testing types.\n-  Writing test cases and Test procedure with examples.\n- Exploratory testing with examples.\n- Bug Life cycle.\n- Bug reporting.\n- Test Summery report.",
      "target_audience": [
        "Any one who wants to learn Software testing"
      ]
    },
    {
      "title": "Automatizando Testes de Player de Música com Robot Framework",
      "url": "https://www.udemy.com/course/automatizando-testes-de-player-de-musica-com-robot-framework/",
      "bio": "Dicas e técnicas fora da caixa para testes automatizados em Robot Framework e Playwright",
      "objectives": [],
      "course_content": {
        "Explorando o Robot Framework": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx",
          "MasterClass"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Projetado especialmente para iniciantes sem qualquer conhecimento prévio em programação ou automação, este curso oferece uma introdução básica, porém abrangente, ao mundo da automação de testes. É uma escolha ideal para aqueles que desejam dar os primeiros passos nesse campo, de forma prática e eficiente.\nO Robot é um framework de automação de testes e RPA que se destaca por sua facilidade de uso e versatilidade. Como é open source e multiplataforma, sendo compatível com Windows, Mac e Linux, é acessível a todos os interessados. Desenvolvido principalmente em Python, o Robot Framework oferece uma abordagem simplificada para a automação, o que o torna perfeito para iniciantes.\nMas por que você deveria escolher aprender o Robot Framework? Se você se sente bloqueado na programação, não se preocupe. Este framework é conhecido por sua sintaxe clara e legível, o que o torna extremamente amigável para quem está começando. Mesmo sem qualquer experiência anterior em programação, é possível entender e começar a criar scripts de testes automatizados rapidamente.\nNeste tutorial, no estilo Masterclass, vamos explorar testes automatizados em um player de música clone do Spotify desenvolvido em React.js.\nVocê aprenderá a selecionar músicas, clicar no botão de reprodução e verificar se a música está sendo executada, entre outras funcionalidades. Exploraremos a função route do Playwright (integrado ao robot), permitindo que você intercepte a API da aplicação e crie mocks para simular requisições HTTP. Isso facilitará testar o carregamento de músicas no formato MP3 de maneira personalizada para suas necessidades de teste.\nAdicionalmente, iremos explorar técnicas para encontrar elementos na página da aplicação de forma mais eficiente do que o tradicional XPath, tornando seus testes automatizados mais robustos e versáteis. Com essas habilidades aprimoradas, você estará preparado para criar testes automatizados mais eficazes e confiáveis para suas aplicações web.\nE ai, bora explorar o mundo da automação com Robot Framework e a Library Browser?",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Playwright eXplorer: Testando o clone do Spotify",
      "url": "https://www.udemy.com/course/playwright-explorer-testando-o-clone-do-spotify/",
      "bio": "Dicas e técnicas fora da caixa para testes automatizados",
      "objectives": [],
      "course_content": {
        "Playwright eXplorer": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx",
          "MasterClass"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Testes automatizados são indispensáveis no desenvolvimento de software moderno. Com o aumento dos testes de regressão a cada nova versão do software, a automação se torna crucial para aliviar essa carga de trabalho, frequentemente realizada manualmente em muitas empresas.\nO Playwright se destaca como uma ferramenta poderosa para testes automatizados de aplicações web, especialmente quando combinado com TypeScript. Neste tutorial, no estilo Masterclass, vamos explorar sua aplicação no teste do player de música de um clone do Spotify desenvolvido em React.js.\nDurante este tutorial, você aprenderá a selecionar músicas, clicar no botão de reprodução e verificar se a música está sendo executada, entre outras funcionalidades. Exploraremos a função route do Playwright, permitindo que você intercepte a API da aplicação e crie mocks para simular requisições HTTP. Isso facilitará testar o carregamento de músicas no formato MP3 de maneira personalizada para suas necessidades de teste.\nAdicionalmente, iremos explorar técnicas para encontrar elementos na página da aplicação de forma mais eficiente do que o tradicional XPath, tornando seus testes automatizados mais robustos e versáteis. Com essas habilidades aprimoradas, você estará preparado para criar testes automatizados mais eficazes e confiáveis para suas aplicações web.\nE ai, bora explorar o mundo da automação com Playwright?",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Testeur logiciel XRAY - JIRA : Outil de management des tests",
      "url": "https://www.udemy.com/course/testeur-logiciel-avec-xray-outil-de-management-des-tests/",
      "bio": "Devenir un testeur logiciel avec XRAY -JIRA",
      "objectives": [
        "Comment concevoir des tests dans Xray",
        "Comment exécuter des tests dans Xray",
        "Paramétrage et création de données de test dans Xray",
        "Création de rapports et de tableaux de bord dans Xray",
        "Test manager : Création des bilans de test",
        "Test manager : création d’un plan de test"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "C'est quoi XRAY ?",
          "Merci"
        ],
        "Jira -Xray": [
          "Introduction",
          "Qu’est-ce que JIRA ?",
          "Jira : Comment travailler sur Jira",
          "Explorer Jira",
          "Création d'un tableau avec des données existantes"
        ],
        "l'agilité en pratique": [
          "Explcation de l'agilité avec Jira :",
          "Jira : Création d’une Epic, User Story et les tâches",
          "Jira : Plus d'information"
        ],
        "Test Logiciel avec XRAY": [
          "Test Logiciel avec XRAY : Installation et configuration de Xray",
          "Test Logiciel avec XRAY : Installation et configuration de Xray",
          "en cas de probleme de configuration de XRay : comment le résoudre ?",
          "Test Logiciel avec XRAY : Création d'un cas de test :",
          "Test Logiciel avec XRAY : Création d'un cas de test : Type Manuel",
          "Test Logiciel avec XRAY : Création d'un cas de test : Type généric",
          "Test Logiciel avec XRAY : Création d'un cas de test : Type cucumber",
          "Test Logiciel avec XRAY : Création d'une précondition",
          "Test Logiciel avec XRAY : Création d'une campagne de test",
          "Test Logiciel avec XRAY : Création d'une campagne de test -Partie 2",
          "Test Logiciel avec XRAY : Création d'une campagne de test --Partie 3",
          "Test Logiciel avec XRAY :Test Repository",
          "Test Logiciel avec XRAY : Exercice",
          "Test Logiciel avec XRAY : Correction d'exercice"
        ],
        "Test Logiciel avec XRAY : Planification des test": [
          "Tache de test manager (responsable de test) : Planification des tests-Partie 1",
          "Tache de test manager (responsable de test) : Planification des tests-Partie 2",
          "Exercice Test manager : Planification des tests",
          "Correction Exercice Test manager : Planification des tests"
        ],
        "Test Logiciel avec XRAY : Exécution des tests": [
          "Test Logiciel avec XRAY : Exécution des tests",
          "Test Logiciel avec XRAY : Gestion des environnements de test"
        ],
        "Test Logiciel avec XRAY : Reporting": [
          "Test Logiciel avec XRAY : Reporting"
        ],
        "Le test logiciel agile en pratique avec Jira & Xray": [
          "Comprendre l'agilité",
          "Scrum en 10 minutes",
          "Le test logiciel agile en pratique avec Jira & Xray : Cas pratique",
          "Cas pratique avec Jira & Xray : Ajout des users stories et sous tâches",
          "Cas pratique avec Jira & Xray : Création d'un plan de test",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray :Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray :Création des Cas de Test dans Xray",
          "Jira-Xray : Attacher les tickets à un test plan",
          "Jira-Xray : Affecter les tickets au sprint",
          "Jira-Xray : Rattachement des cas de test avec plusieurs test plan",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Création d’une anomalie",
          "Jira-Xray : Création des rapports",
          "Jira-Xray : Création des rapports",
          "L'agilité en pratique : Cas pratique"
        ],
        "La fin de la formation :": [
          "Q/R",
          "Félicitations"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Testeur logiciel avec XRAY : Outil de management des tests logiciels\nXray est de plus en plus demandé par les recruteurs , gaganer votre vie priffessionel grace a XRAY\nXray vous permet de planifier, concevoir et exécuter des tests, ainsi que de générer des rapports de test. Xray utilise des types de problèmes Jira spécifiques pour ce processus. Chaque phase de test vous permet d'utiliser les problèmes suivants : Phase de planification : problèmes du plan de test. Phase de conception : la spécification est définie à l'aide des types de condition préalable et de problème de test.\n\n\nXray est un module complémentaire de gestion des tests pour le cloud Jira Software. Il permet aux ingénieurs QA de gérer leurs ressources de test dans Jira ainsi que les fonctionnalités de Jira. Cela peut vous faire gagner beaucoup de temps en termes d'organisation systématique de vos tests, exécutions, données, etc. C'est également une excellente plateforme pour créer des rapports faciles à partager avec les parties prenantes.\n\n\nLes sessions incluent tous les types de problèmes Xray, y compris les tests, les conditions préalables, les exécutions de tests, les ensembles de tests et les plans de test.\n\n\nLe cours comprend un tutoriel de travail avec différents aspects des fonctionnalités de Xray avec des scénarios en temps réel et des discussions de cas d'utilisation qui peuvent aider les individus à les appliquer dans leur travail quotidien. Ce cours couvre les sessions depuis l'installation de l'outil, la création des tests, l'organisation des tests, le paramétrage des tests, la création de rapports, la traçabilité, la mesure de la couverture, le reporting et la création de tableaux de bord.\n\n\nXray est livré avec une option de référentiel de tests intégrée pour organiser divers tests dans un dossier systématique pour faciliter la référence et la catégorisation.\n\n\nTout nouvel utilisateur peut apprendre la fonctionnalité de bout en bout de Xray en utilisant ce cours et l'implémenter en temps réel.\n\n\nÀ qui ce cours s'adresse-t-il ?\nIngénieur QA et Leads\nResponsable des tests\nToute personne qui travaille en mode agile",
      "target_audience": [
        "Qa",
        "testeur",
        "test lead",
        "test manager",
        "Toute personne s’intéresse au domaine du test logiciel / testing",
        "Les fraichement diplômé pour augmenter la chance d’intégrer le milieu du travail"
      ]
    },
    {
      "title": "Selenium Webdriver desde cero C# (Español)",
      "url": "https://www.udemy.com/course/testautomationconselenium1/",
      "bio": "Test automation con la máxima calidad usando Selenium Webdriver para superar prueba técnica (Web de ejercicios propia)",
      "objectives": [
        "A superar una prueba técnica de automatización de tests de interface de usuario con Selenium en C#",
        "Creacion y configuration de un proyecto de test automation con Selenium desde cero en C# (.Net)",
        "A realizar un codigo limpio en Selenium usando el Page Object Pattern",
        "A tener una fácil migración del manual tester a ser automation tester",
        "A mejorar las practicas de programación orientada a métodos de tests",
        "A implementar y ejecutar métodos de tests en paralelo usando NUnit",
        "A configurar tests y a ejecutarlos en diferentes navegadores",
        "A automatizar CUALQUIER página web con una ejecución estable, robusta y rápida"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Introducción Selenium Framework"
        ],
        "Set up del entorno": [
          "Instalación de Visual Studio",
          "Creación del proyecto"
        ],
        "Implementación de nuestros tests básicos": [
          "Implementación de tests básicos de una forma intuitiva",
          "Mejora de los tests básicos"
        ],
        "Selenium Selectores y IFrames": [
          "Selectores en Selenium",
          "Inline frames en Selenium"
        ],
        "Page Object Pattern": [
          "Introducción",
          "Prueba técnica: Ejercicio 1 - Verifica elementos mostrados (Fresh Market)",
          "Prueba técnica: Ejercicio 2 - Verifica búsqueda de elementos (Fresh Market)",
          "Prueba técnica: Ejercicio 3 - Verifica el carro de la compra (Fresh Market)",
          "Prueba técnica: Ejercicio 4 - Verifica el formulario contact us (Fresh Market)"
        ],
        "Programación y ejecución de los tests en paralelo": [
          "Programar y ejecutar tests en paralelo"
        ],
        "Configurar tests y ejecutar en diferentes navegadores a través de AppSettings": [
          "Configurar tests a través de appsettings"
        ],
        "Entrevista de trabajo": [
          "Consejos entrevista de trabajo y prueba técnica"
        ]
      },
      "requirements": [
        "Aunque se hace todo desde cero, ayudaría tener unos conocimientos básicos de C# y visual studio.",
        "Tener conocimientos básicos sobre testing y que es test automation"
      ],
      "description": "Este curso desde cero abre las puertas al vasto universo de la automatización de tests para interfaces de usuario usando Selenium.\nCon más de 15 años de experiencia en el desarrollo de software y liderazgo técnico en automatización de pruebas, he observado los desafíos inherentes a mantener cientos de tests de interfaz de usuario que sean estables, robustos y se ejecuten en tiempos récord. La tarea es compleja y ha sido el talón de Aquiles para muchos.\nAbordaremos este curso con franqueza: alcanzar la maestría en automatización de tests no es un camino sencillo. Requiere práctica, dedicación y una sólida base en principios de programación. Este curso está diseñado para marcar una diferencia, enseñándoos no solo a codificar, sino a desarrollar software usando las mejores prácticas de programación.\nA partir de mi trayectoria como desarrollador y automation tech lead, he creado este curso para compartir cómo, desde cero, se puede construir un framework de automatización de tests que garantice la calidad de un proyecto de envergadura. Detalles adicionales sobre mi experiencia están disponibles en mi perfil de LinkedIn.\nSin pérdidas de tiempo y yendo al grano con lo que con lo que me ha funcionado durante todos mis años de experiencia, comenzaremos desde cero instalando Visual Studio hasta realizar un ejercicio práctico completo de más de tres horas usando el page object pattern y las mejores prácticas de programación orientada a objectos.\nEl curso cuenta con una página web dedicada, en la que se ofrecen ejercicios adaptados para automatizar casos de prueba muy interesantes, reflejando las sorpresas que a menudo presenta la interfaz de usuario.\nLas tecnologías principales que abordaremos incluyen Visual Studio con C#, la creación de métodos de test utilizando NUnit, y, por supuesto, Selenium. Cubriremos técnicas avanzadas como la gestión de esperas, selectores, iFrames, manejo de la excepción de elementos obsoletos (stale element exception), espera implícita, y el patrón Page Object, entre otros.\nAdemás, exploraremos cómo programar y ejecutar tests en paralelo, configurarlos con AppSettings, y compartiré consejos personales sobre mi experiencia en entrevistas de trabajo, tanto como candidato como entrevistador.\nTodos los ejercicios son descargables, y estaré disponible para responder cualquier pregunta o proporcionar asistencia necesaria.\nEste curso está diseñado para sumergirte en el apasionante mundo de la programación enfocada en la calidad y el funcionamiento óptimo de las interfaces de usuario, impulsando tu carrera profesional en el proceso.\n¡Vamos a ello!",
      "target_audience": [
        "Tester manual que quiere aprender de una manera profesional test automation con Selenium",
        "Test automation que tiene que afrontar una entrevista de trabajo o una prueba tecnica",
        "Cualquiera que quiera aprender a implementar tests de automatización de interfaz de usuario.",
        "Desarroyador C# que quiera o necesite aprender Selenium para testear la UI de un proyecto."
      ]
    },
    {
      "title": "Selenium WebDriver с нуля до профи",
      "url": "https://www.udemy.com/course/selenium-webdriver-fromscratch/",
      "bio": "Если не умеете - тогда посмотрите наши тренинги “Программирование для тестировщиков”, есть версии для Java, C# и Python",
      "objectives": [
        "Первые шаги работы с Selenium WebDriver",
        "Запуск браузеров",
        "Поиск элементов",
        "Получение свойств Элементов",
        "Действия с элементами",
        "Ожидания (WebDriverWait)",
        "Окна, фреймы и диалоги",
        "Удалённый запуск",
        "Протоколирование действий Selenium",
        "PageObjects и другие шаблоны проектирования",
        "Расширения Selenium"
      ],
      "course_content": {
        "Введение": [
          "Что такое Selenium",
          "Принципы работы Selenium",
          "Краткая история развития Selenium",
          "Стандарт W3C WebDriver",
          "Сравнение с конкурентами",
          "Источники информации о Selenium"
        ],
        "Первые шаги": [
          "Инфраструктура для C#",
          "Инфраструктура для Java",
          "Инфраструктура для JavaScript",
          "Инфраструктура для Python",
          "Инфраструктура для Ruby",
          "Общее описание инфраструктуры",
          "Ключевые команды Selenium",
          "Запуск браузера",
          "Открытие страниц",
          "Поиск элементов",
          "Действия с элементами",
          "Единообразие на всех языках",
          "Резюме",
          "Инструкция по работе с GitHub",
          "Установите учебное приложение"
        ],
        "Запуск браузеров": [
          "Запуск в разных браузерах",
          "Куда положить прокладку",
          "Совместимость с браузерами",
          "Capabilities",
          "Опции командной строки",
          "Запуск Chrome",
          "Запуск Internet Explorer",
          "Запуск Firefox",
          "Ненастоящие браузеры",
          "Работа с cookies",
          "Несколько браузеров сразу",
          "Параллельный запуск"
        ],
        "Поиск элементов": [
          "Document Object Model",
          "Локаторы",
          "CSS Selectors",
          "XPath",
          "Сравнение типов локаторов",
          "Поиск относительно элемента",
          "Поиск нескольких элементов",
          "Элемент не найден",
          "Ожидание появления элемента",
          "Правила построения локаторов",
          "Поиск при помощи JavaScript"
        ],
        "Получение свойств элементов": [
          "Получение атрибутов элемента",
          "Определение видимости элемента",
          "Получение текста элемента",
          "Получение стилей элемента",
          "Размер и положение элемента"
        ],
        "Действия с элементами": [
          "Клик левой кнопкой мыши (click)",
          "Ввод текста (sendKeys)",
          "Очистка поля ввода (clear)",
          "Advanced Interactions API",
          "Работа со сложными элементами",
          "Работа с невидимыми элементами"
        ],
        "Ожидания (WebDriverWait)": [
          "Ожидание появления элемента",
          "Проверка наличия и отсутствия элемента",
          "Ожидание исчезновения элемента",
          "Ожидание видимости элемента",
          "Другие условия ожидания",
          "Ожидание загрузки страницы",
          "Особые ситуации"
        ],
        "Окна, фреймы и диалоги": [
          "Alert",
          "Загрузка файлов на сервер",
          "Окна",
          "Фреймы",
          "Размер и положение окна",
          "Команды close и quit",
          "Загрузка файлов с сервера"
        ],
        "Удалённый запуск": [
          "Selenium Server",
          "Selenium Grid",
          "Selenium Grid Extras",
          "Selenium в контейнере",
          "Selenium в облаках"
        ],
        "Протоколирование действий Selenium": [
          "EventFiringWebDriver C#",
          "EventFiringWebDriver Python",
          "EventFiringWebDriver Ruby",
          "EventFiringWebDriver Java",
          "Снятие скриншотов",
          "Доступ к логам браузера",
          "Перехват трафика"
        ]
      },
      "requirements": [
        "Необходимы минимальные навыки программирования"
      ],
      "description": "1. Общая информация\nЧто такое Selenium\nКраткая история развития\nПринцип работы Selenium WebDriver\nСтандарт W3C WebDriver\nСравнение с конкурентами\nИсточники информации\n2. Первые шаги: пробежимся по верхам\nНеобходимая инфраструктура\nПодготовка инфраструктуры для Java, C#, Python, Ruby, JavaScript\nЗапуск и останов браузера\nОткрытие страниц и ожидание загрузки страницы\nПоиск элементов на странице\nДействия: click и sendKeys\nСвойства элементов: getText и getAttribute\n3. Запуск браузеров\nИсполняемые файлы-посредники\nВыбор \"правильной\" версии браузера\nОсобенности запуска на разных операционных системах\nCapabilities\nCookies, чистый и грязный запуск\nПодробнее про каждый браузер (Chrome, Firefox, Internet Explorer, Edge, Safari, другие)\nРабота с несколькими браузерами одновременно\nWebDriverFactory\n4. Поиск элементов\nТипы локаторов\nКакие локаторы лучше всех?\nОтладка локаторов\nНадёжные и ненадёжные локаторы\nСписки элементов\nПоиск внутри элемента\nНеявные ожидания\nСтратегии ожидания загрузки страницы\nПоиск при помощи executeScript\n5. Получение свойств элементов\nАтрибуты и свойства\nТекст\nВидимость\nРазмер и положение\nСтили\n6. Действия с элементами\nПростые\nclick\nsendKeys\nclear\nsubmit\nСложные\nНаведение мыши\nПеретаскивание\nПравая кнопка мыши\nУправление по координатам\nМодификаторы (ctrl, shift)\n7. Ожидания (WebDriverWait)\nОжидание появления\nОжидание видимости\nОжидание исчезновения\nОжидание свойств элемента\nОжидание нужного количества элементов\nПроизвольные условия ожидания\nStaleElementReferenceException и борьба с ним\nНеудачные попытки как альтернатива ожиданиям\n8. Окна и диалоги\nAlerts\nUploading files\nDownloading files\nОкна и вкладки\nФреймы\n9. Удалённый запуск\nSelenium Server\nSelenium Grid\nSelenium Grid Extras\nОблачные сервисы\n10. Протоколирование\nEventFiringWebDriver\nДоступ к логам браузера\nСнятие скриншотов\nЗапись видео\nЗапись трафика\n11. PageObjects и другие шаблоны проектирования\nОткуда “ноги растут” у этого шаблона проектирования?\nРазделение зон ответственности в тестах\nРазличные реализации PageObjects\nАльтернативные шаблоны проектирования (PageBocks, Services)\n12. Расширения и обёртки\nДрайверы (Appium, Winium, Windows Application Driver)\nАльтернативные API (Watir, Selenide, FluentSelenium)\nBDD и другие альтернативные стили (RobotFramework, Serenity, Capybara, Geb, ScalaTest)",
      "target_audience": [
        "Начинающие специалисты по автотестированию",
        "Специалисты с небольшим опытом в автотестировании",
        "Ручные тестировщики"
      ]
    },
    {
      "title": "Junit em Testes de Software",
      "url": "https://www.udemy.com/course/junit-em-testes-de-software/",
      "bio": "Aprenda sobre JUnit na versão 4 e 5, framework muito utilizado em scripts de testes unitários, de serviço e funcionais",
      "objectives": [
        "Compreender a importância dos testes unitários no processo de Teste de software",
        "Utilizar o JUnit para escrita de scripts de teste automatizado",
        "Conhecer e aplicar anotações do Junit versão 4",
        "Conhecer e aplicar anotações do Junit versão 5",
        "Criar projeto Maven",
        "Aprender a aplicar as anotações do Junit para testes unitários, serviços ou funcionais"
      ],
      "course_content": {
        "Apresentação do Curso": [
          "Apresentação"
        ],
        "Introdução": [
          "Introdução ao JUnit"
        ],
        "Montando o Ambiente": [
          "Instalar e Configurar o Java e Eclipse IDE",
          "Criar e Configurar Projeto Maven"
        ],
        "Introdução ao JUnit 4": [
          "Regras iniciais do Junit",
          "Prática das Regras Junit",
          "Prática das Regras Junit Parte 2"
        ],
        "Asserts com JUnit 4": [
          "Apresentação dos Asserts",
          "AssertTrue e AssertFalse",
          "AssertEquals e AssertNotEquals",
          "AssertNull, AssertNotNull e AssertArrayEquals",
          "AssertThat"
        ],
        "Pré e Pós condição de Métodos com JUnit 4": [
          "Apresentação de Pré e Pós Condição",
          "Prática de Pré e Pós condição de testes"
        ],
        "Gestão de Execução de Classes ou Métodos com JUnit 4": [
          "Suíte de Teste",
          "Criando Suíte de Teste",
          "Categorizar os Testes",
          "Aplicando Categorização com Junit",
          "Como Exportar Testes",
          "Criando e Exportando arquivo jar de Testes"
        ],
        "Conteúdo Adicional JUnit 4": [
          "Ignorar Execução de Métodos ou Classes",
          "Utilizando @Ignore",
          "Timeout em Testes",
          "Aplicando Timeout em métodos e classe",
          "Ordenar Execução",
          "Ordenar métodos durante a execução"
        ],
        "Parametrização com JUnit 4": [
          "Apresentação de Parametrização com Construtor",
          "Parametrizar com Construtor",
          "Apresentação de Parametrização sem Construtor",
          "Parametrizar sem Construtor",
          "Apresentação de Parametrização com Arquivo CSV",
          "Parametrizar com Arquivo CSV"
        ],
        "Introdução ao JUnit 5": [
          "Apresentação JUnit 5",
          "Montando Ambiente JUnit 5"
        ]
      },
      "requirements": [
        "Conhecimento básico de Programação",
        "Conhecimento básico em Teste de Software"
      ],
      "description": "Esse curso te ensinará a utilizar recursos do framework JUnit nas versões 4 e 5 como apoio em scripts de automação de Testes funcionais, serviços e unitários. Uns dos Frameworks mais utilizado no mercado por desenvolvedores e testadores de software. Onde será apresentado e aplicado em nosso projeto MAVEN as anotações mais importantes das duas versões do JUnit.\nJUnit é simples, de fácil entendimento e muito prático.",
      "target_audience": [
        "Qualquer pessoa que deseja aprender a utilizar o framework do Junit"
      ]
    },
    {
      "title": "Selenium Webdriver - Twój pierwszy test automatyczny",
      "url": "https://www.udemy.com/course/selenium-webdriver-twoj-pierwszy-test-automatyczny/",
      "bio": "Napisz swój pierwszy test automatyczny na poziomie interfejsu użytkownika za pomocą języka programowania Java i Selenium",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Znajomość podstawowych zagadnień dotyczących jakości i testowania oprogramowania",
        "Umiejętność programowania nie jest wymagana (ale ułatwia zrozumienie tematu)"
      ],
      "description": "Mini kurs w którym dowiesz się jak stworzyć test automatyczny aplikacji internetowej na poziomie interfejsu użytkownika za pomocą języka programowania Java. Do automatyzacji testów na poziomie interfejsu użytkownika można używać różnych narzędzi. Jeżeli chodzi o najbardziej popularne narzędzie to jest nim Selenium WebDriver.\n\nOk, a można prościej?\nMówiąc prościej tworzymy kod, który sam uruchomi przeglądarkę internetową, następnie otworzy wybraną stronę i zacznie wykonywać na niej zadane akcje tj. klikać na elementy, wprowadzać dane w formularze itd. Testy w kursie tworzone są przy pomocy języka programowania Java. Kurs nie wymaga znajomości języka programowania (Ale jest przydatny w celu lepszego zrozumienia materiału) . Wprowadzenie do programowania nie jest częścią tego kursu. Wynika to z ograniczenia dotyczącego długości darmowych treści na portalu.\n\nCzego dowiesz się z tego kursu o pisaniu testów automatyczny ?\n- jak zainstalować JDK - Java w wersji dla programistów\n- jak zainstalować Mavena - narzędzie do pobierania zależności\n- jak lokalizować elementy na stronie i wykonywać na nich akcje\n- jak sprawdzać stan elementów i weryfikować czy jest on zgodny z oczekiwanym\n- jak napisać swój pierwszy test automatyczny\n\nJak skontaktować się z instruktorem?\nJeżeli przedstawione w kursie zagadnienie jest niejasne lub coś zwyczajnie nie działa możesz się ze mną skontaktować korzystając między innymi:\n\n- z sekcji \"Pytania i odpowiedzi\"\n- wiadomości prywatnej na portalu.\n- fanpage ( patrz profil instruktora)\n\n\nMam nadzieję, że przedstawiona w kursie wiedza pomoże Ci przenieść Twoją karierę na wyższy poziom lub ułatwi Ci znalezienie pierwszej pracy. W przypadku jakichkolwiek pytań pozostaję do Twojej dyspozycji.\nMiłego dnia :)",
      "target_audience": [
        "Testerzy manualni zainteresowani automatyzacją testów w języku Java",
        "Osoby wchodzące do świata IT",
        "Osoby chcące zmienić ścieżkę kariery zawodowej"
      ]
    },
    {
      "title": "Universo Robot Framework",
      "url": "https://www.udemy.com/course/universo-robot-framework/",
      "bio": "Domine a automação de testes Fullstack em Robot, acelere sua carreira e esteja pronto para grandes oportunidades",
      "objectives": [
        "Dominar a automação de testes Fullstack, abrangendo os principais aspectos da automação web, API e mobile.",
        "Utilizar o Playwright para testes web",
        "Criar scripts de teste para aplicativos Android com o Appium.",
        "Garantir a funcionalidade de aplicativos móveis em diversos dispositivos.",
        "Melhorar a qualidade e confiabilidade de projetos com testes automatizados.",
        "Aplicar habilidades em desafios do mundo real.",
        "Aproveitar oportunidades profissionais na automação de testes.",
        "Contribuir para equipes de desenvolvimento com expertise em automação."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico em Robot Framework"
      ],
      "description": "Descubra o Futuro da Automação com o Universo Robot Framework: Um Guia Completo para Dominar Testes Fullstack\nNo emocionante mundo da tecnologia, a automação é a chave para desbloquear oportunidades ilimitadas. Se você está pronto para mergulhar de cabeça na automação de testes Fullstack, o Universo Robot Framework é o seu mapa definitivo. Este curso revolucionário não apenas simplifica a complexidade da automação, mas também o prepara para alcançar novos patamares em sua carreira.\nConcebido para levar você de um iniciante total a um profissional capacitado, o Universo Robot Framework é muito mais do que um simples curso - é uma jornada transformadora. Dividido em três projetos de automação - Web, API e Mobile - este curso aborda todas as facetas essenciais da automação Fullstack, garantindo que você adquira as habilidades necessárias para enfrentar os desafios do mundo real.\nNo módulo de Automação Web, você explorará o potencial do Playwright, uma avançada biblioteca de automação de testes integrada ao Robot Framework. Desde a automação de interações com a página até a manipulação de elementos DOM e a execução de testes em uma variedade de navegadores, este módulo oferece uma imersão completa no universo da automação web.\nO módulo de Automação Mobile apresenta o poder do Appium, equipando você com as habilidades essenciais para testar aplicativos móveis Android de maneira automatizada. Com instruções detalhadas sobre a configuração do ambiente de teste, criação de scripts de teste e exploração dos recursos do Appium, este módulo garante que você possa garantir o desempenho dos aplicativos em uma variedade de dispositivos.\nAo concluir o Universo Robot Framework, você estará armado com o conhecimento e a confiança necessários para criar testes automatizados robustos, aprimorando a qualidade e a confiabilidade de seus projetos. Prepare-se para transformar sua carreira e explorar um novo universo de possibilidades na automação de testes Fullstack. O futuro espera por você - junte-se ao Universo Robot Framework hoje mesmo e prepare-se para uma jornada emocionante rumo ao sucesso profissional.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Introdução a Carreira de QA",
      "url": "https://www.udemy.com/course/introducao-a-carreira-de-qa/",
      "bio": "Explore fundamentos da área, estratégias e habilidades requisitadas no mercado de trabalho",
      "objectives": [],
      "course_content": {
        "Introdução": [
          "Bem-vindo(a)"
        ],
        "Fundamento da Qualidade do Software": [
          "Responsabilidades do QA",
          "Tarefas do QA",
          "A importância do QA"
        ],
        "Melhores Práticas e Desafios": [
          "Desafios Comuns Enfrentados por QAs",
          "Habilidades Essenciais: Hard Skills",
          "Habilidades Essenciais: Soft Skills"
        ],
        "Avançando na Carreira": [
          "Estratégia para Direcionar os Seus Estudos",
          "Oportunidades no Linkedin",
          "Ferramentas Adicionais"
        ],
        "Próximos Passos": [
          "Como Continuar Aprendendo na área de QA"
        ]
      },
      "requirements": [
        "Nenhuma experiência prévia é necessária; no entanto, é importante estar aberto(a) a aprender novos conceitos e disposição para absorver o conteúdo."
      ],
      "description": "Embarque em uma jornada envolvente e reveladora para desvendar os segredos da Qualidade de Software com o curso Introdução a Carreira de QA. Este programa introdutório, cuidadosamente projetado, proporciona uma visão abrangente, destacando a importância do Quality Assurance (QA) na construção de uma cultura de qualidade no desenvolvimento de software.\n\n\nConduzido por experientes profissionais, o curso explora desde os habilidades essenciais da Qualidade de Software requisitadas pelo mercado de trabalho até quais desafios específicos enfrentados por este profissional no seu dia a dia.\n\n\nApresentamos a relevância de os profissionais de qualidade aprimorarem suas competências técnicas para impulsionar seu desenvolvimento, destacando a importância das habilidades interpessoais, conhecidas como soft skills, como elementos fundamentais para se destacar na carreira de QA.\n\n\n\nAo participar deste curso, você será guiado em uma jornada de desenvolvimento profissional, descobrindo estratégias para direcionar seus estudos, explorar oportunidades profissionais e alavancar seu potencial. O capítulo final oferece uma visão clara dos próximos passos, revelando como continuar aprendendo e se destacando na área de qualidade, inclusive por meio de cursos adicionais oferecidos pelo Code Like a Tester.\n\n\n\nSe você está em busca de uma introdução que transcende conhecimentos básicos e que transformará sua carreira na Qualidade de Software, o curso Introdução a Carreira de QA é a chave para desvendar seu potencial. Prepare-se para uma jornada envolvente, moldando sua trajetória profissional de maneira impactante. A oportunidade de aprimorar suas habilidades no universo da Qualidade de Software aguarda por você!",
      "target_audience": [
        "Este curso destina-se a dois grupos principais: aqueles que estão buscando realizar uma transição de carreira para o campo da Qualidade de Software e profissionais de QA que desejam superar estagnações profissionais. Para quem busca mudar de área, o curso oferece uma compreensão abrangente dos fundamentos da qualidade de software e estratégias para enfrentar os desafios específicos do setor. Para QAs já estabelecidos, o curso proporciona insights práticos e orientações para o desenvolvimento contínuo de habilidades técnicas, essenciais e soft skills. Se você está ansioso para moldar uma carreira de sucesso na área de Qualidade de Software, este curso é especialmente projetado para atender às suas necessidades e metas profissionais."
      ]
    },
    {
      "title": "Fundamentos do Postman: Iniciando com Testes de API",
      "url": "https://www.udemy.com/course/fundamentos-do-postman-iniciando-com-testes-de-api/",
      "bio": "Construção de solicitações GET, POST, PUT e DELETE.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Interesse em aprender Postman e APIs.",
        "A capacidade de instalar o Postman em sistemas Windows, macOS ou Linux.",
        "Não é necessário ter experiência em programação."
      ],
      "description": "Quer explorar o Postman, mas não sabe por onde começar?\nSe você está em busca de uma ferramenta com uma interface de usuário intuitiva que permite realizar solicitações HTTP sem a necessidade de escrever muito código e testar a funcionalidade de APIs, o Postman é ideal para você! Com ele, você poderá explorar e dominar os recursos essenciais para interagir eficazmente com APIs\nÉ um aplicativo gratuito, fácil de aprender e em pouco tempo você estará enviando suas primeiras solicitações. Com o Postman, você pode trabalhar de forma eficiente com APIs, construindo e salvando solicitações rapidamente, além de analisar as respostas enviadas pela API.\nNeste curso, vou te guiar pelo entendimento de uma API e pela ferramenta Postman, explorando como elas funcionam com ênfase na prática passo a passo, de maneira simples e direta!\nVamos começar pela instalação do Postman, aprender a criar e organizar coleções, e realizar requisições (GET, POST, PUT, DELETE), tudo isso utilizando uma API de teste online.\nDescubra como analisar e testar APIs REST na prática, executando requisições em qualquer API.\n\nEste curso visa oferecer conhecimento inicial da ferramenta Postman para a comunidade de forma gratuita! Aprenda a utilizar suas funcionalidades essenciais para aprimorar suas habilidades em testes de API e desenvolvimento web.",
      "target_audience": [
        "Destinado a iniciantes na área de tecnologia, como programadores, analistas de testes e analistas de suporte."
      ]
    },
    {
      "title": "Real time Automation+Manual Interview Questions with Answers",
      "url": "https://www.udemy.com/course/testing-interview-questions-with-answers/",
      "bio": "Real time Interview course on all automation & Manual concept questions with detailed answers - QA Jobs (Hindi)",
      "objectives": [
        "You will get Real Time Interview questions which was asked in top MNC companies",
        "By end of this course, one should be able to attend any QA Automation Interviews with full confidence",
        "You will get all the resources in pdf format.",
        "You will be able to quickly revise all Your Java Concepts with Awesome Examples",
        "Students will be able to get their dream QA job",
        "Course is designed in Hindi so everyone could understand better.",
        "Detailed Discussion on Manual + Automation Interview Questions",
        "Student will be confident to answer most of the technical questions",
        "Students will have better understanding of why certain questions are asked and how to answer them",
        "After this course, you will crack any software testing interview.",
        "Explaining each question in a detailed manner"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Real time Automation testing Interview Questions": [
          "Interview Questions - Part 1",
          "Interview Questions - Part 2",
          "Interview Questions - Part 3",
          "Interview Questions - Part 4",
          "Interview Questions - Part 5",
          "Interview Questions - Part 6",
          "Interview Questions - Part 7",
          "Interview Questions - Part 8"
        ],
        "Java Strig Post-Mortem": [
          "String Part-1",
          "String Part-2",
          "String Part-3"
        ],
        "Selenium Commands": [
          "Selenium commands - Part 1",
          "Selenium commands - Part 2",
          "Selenium commands - Part 3"
        ],
        "Manual Testing - Real Time Interview Questions": [
          "Manual testing - Part 1",
          "Manual testing -Part 2",
          "Manual testing -Part 3",
          "Manual testing -Part 4",
          "Manual testing -Part 5",
          "Manual testing -Part 6",
          "Manual testing -Part 7",
          "Manual testing - Part 8",
          "Manual testing - Part 9",
          "Manual testing - Part 10",
          "Manual testing - Part 11",
          "Manual testing - Part 12",
          "Manual testing - Part 13",
          "Manual testing - Part 14"
        ],
        "Bonus Section - Company wise Interview Questions": [
          "Tekstrom Interview",
          "Accolite Digital",
          "Gemini Solutions",
          "Oracle",
          "Capgemini - Appium",
          "Amdocs",
          "Veeva Systems",
          "Cybage",
          "MindBody",
          "Nagarro",
          "MassMutual",
          "Telus International",
          "TSYS",
          "TestVagrant",
          "Capgemini",
          "GeeksforGeeks",
          "Truminds",
          "Publicis Sapient",
          "Airtel",
          "eInfoChips",
          "Paytm"
        ]
      },
      "requirements": [
        "Basic knowledge on Software testing",
        "Desire to get QA jobs",
        "Basic knowledge on QA Automation tools",
        "Familiarity and understanding of basic java terms"
      ],
      "description": "Student Feedback:\nGaurav Kadganchi: Nice explanation by Jaikishan sir, lot of concepts got cleared. He should make a new course on Manual & Automation testing live projects using different testing tools.\nMd Naseem Baig: im MD NASEEM BAIG I LIKE THIS LINK VERY HELPFULL THANK U SO MUCH\nMukul Biswas: Session was very interesting\nKeshav Gupta: tutorial is best must watch tutorial if you are facing any testing interview\nRitesh Vilas Sonawane: Amazing\nshweta mahajan: So good\nTithi Adhikary: He is Amazing and videos are in very lucid form.\nClaudio K Albertine: Decent course. In the intro some text in unknown language. rest is good so far\nPrabhat Shukla: Great and will help surely\nJanardan Kamat: Yes Course was very refreshing, nice and good topics covered.\n\nAnd many more..\nUpdated on November 2022\nHow about Quickly Revising all the Important Software testing Concepts in just a few hours before an interview?\n\n\nThis course focuses on revising most Real-time interview questions around Testing. An interview is all about expressing your answers in a precise and proper way. You can have tons of knowledge, you must have done tons of coding but cracking an interview is a different ball game.\n\n\nThis course is a revision course where I have focused on what kind of questions are asked and how to answer them in an elaborate way. Please note this course does not teach software testing.\n\n\nSo, Welcome to the Real time Automation+Manual interview Questions and Answers where you are going to dominate the Software testing job interview. Take the course, learn the material and go into a technical interview with the confidence that you are prepared!\nGet an edge over other candidates that did not take the time to learn technical interview skills.\n\n\nBecome one of my dozens of students that successfully took the course and secured a job.\n\n\nThis course has been expertly crafted to make sure that you rapidly improve your Testing interview skills, Turbocharge your productivity and boost your career with no time wasting and no useless stuff.\n\n\nPreparing for a Software testing Interview is tricky. You would need to get a good understanding of all Automation features and revise concepts you used in your preparation. This course helps you Prepare for QA Interview with all the resources covering 100+ Realtime Interview Questions and Answers on a varied range of topics listed below.\n\n\nAutomation testing\nManual Testing\nOne Liner questions\nJava real-time questions\nConcept in Hindi\nTesting Process in Real-time projects\nSelenium Web Automation\nAutomation Framework Designs\nTesting Standards with TestNG and Cucumber\nAPI Testing (Manual + Automation) Interview Questions\nCore Java Webdriver related topics\nProgramming logical questions\nJava OOPS Miscellaneous Concepts\nNon Functional Testing Topics & Many more !!!!!!!!!\n\n\nWish you all the Best.\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "software testers",
        "Software Engineer",
        "Fresher in software testing",
        "Who is willing to make career in testing profile",
        "QA Engineer"
      ]
    },
    {
      "title": "Curso de JUnit 5",
      "url": "https://www.udemy.com/course/curso-de-junit-5/",
      "bio": "Aprende la base para realizar pruebas unitarias.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Conocer de programación básica",
        "Java básico"
      ],
      "description": "No se trata sólo de programar y entregar un software. Hoy en día entregar un software de calidad es fundamental, debido a que tenemos una gran dependencia cómo sociedad frente a la tecnología. Todos los trámites dependen de un sistema informático, y sin duda nos incomoda cuando estos fallan.\nPara entregar un software con calidad, se crearon las pruebas unitarias a los componentes de software. JUnit es el framework más reconocido dentro de la comunidad Java para realizar pruebas unitarias.\nEn este curso vas a aprender JUnit y tendrás las bases para poder realizar pruebas unitarias a tus proyectos.\nEn este curso vas a aprender los siguientes contenidos:\n\n\nSabrás lo que es una prueba unitaria.\nConocerás el framework JUnit en versión 5.\nAprenderás las anotaciones fundamentales del framework.\nComprenderás cuál es el ciclo de vida de una prueba unitaria.\nTrabajarás en un entorno Spring Boot.\nEstos son los requisitos para tomar este curso:\nConocer de programación básica.\nConocer de Java básico.\nNo pierdas la oportunidad de adquirir este conocimiento que dará un plus a tu hoja de vida.\nNo esperes más. Es un curso totalmente gratuito, que te dará el empuje para aprender pruebas unitarias y puedas seguir profundizando en esta rama del desarrollo de software.",
      "target_audience": [
        "Desarrolladores que requieran incorporar pruebas unitarias a su código"
      ]
    },
    {
      "title": "【한글자막】 자동화 테스터를 위한 핵심 Java - 쉽게 배우는 코딩!",
      "url": "https://www.udemy.com/course/java-code-made-easy/",
      "bio": "수많은 프로그래밍 예제와 면접 질문을 통한 단계별 실습 튜토리얼로 Java 완벽 마스터하기: 기술적 배경지식이 없어도, Java 기초부터 자동화 테스터를 위한 강의까지, 초보저도 완벽히 이해할 수 있도록 준비한 강의",
      "objectives": [
        "실용적인 구현을 통해 Java OOPS 개념에 대한 완전한 지식 습득",
        "Java 조건문과 루프의 실용적인 사용법을 명확히 이해 가능",
        "강의에서 논의된 전략, 비법과 요령으로 Java 프로그램 로직을 작성할 수 있는 능력",
        "고급 Java 컬렉션을 더 깊이 이해해 Java 로직을 성공적으로 해결하는 방법",
        "Java의 객체, 클래스, 메서드, 함수에 대한 실용적인 이해와 사용법",
        "200개 이상의 Java 면접 질문 및 해답에 대한 이용권을 받고 GEM과 같은 Java 면접에 합격하기",
        "Java 자동화 프레임워크(Selenium, Appium, Rest API)를 처음부터 구축할 수 있음"
      ],
      "course_content": {
        "Java의 첫 번째 프로그래밍 단계": [
          "강의 FAQ - ***필독***",
          "설치와 함께 Java 소개",
          "Java 편집기 도구로 작업하기",
          "Java로 첫 실행 프로그램 작성"
        ],
        "Java의 클래스, 객체와 사용법 이해": [
          "Java에서 메서드 사용하는 방법",
          "Java에서 클래스와 객체의 중요성"
        ],
        "Java에서 문자열과 그에 대한 함수 다루기": [
          "문자열 객체를 정의하는 두 가지 방법 - 면접 관점의 중요성",
          "문자열 클래스와 메서드",
          "문자열 코드 다운로드",
          "연습 문제: 문자열 뒤집기 로직 - 회문"
        ],
        "Java 루프, 조건문 - (Java 프로그램을 위한 구성 요소)": [
          "Java의 if else 조건문 사용법",
          "for 루프 작동 방식 - 예제 데모",
          "while 루프를 사용해야 하는 경우",
          "while 루프 작동 방식",
          "루프, 조건문 코드 다운로드"
        ],
        "면접을 위한 Java 루프와 조건문에 대한 연습 문제": [
          "중첩 for 루프에 대한 설명",
          "루프 연습 문제 - 1 (피라미드 삼각형 출력하기)",
          "연습 문제 - 2 - Yahoo 대기열: (인버티드 시퀀스 피라미드 로직 프로그램)",
          "중첩 루프 코드 다운로드"
        ],
        "Java의 인터페이스와 추상 클래스의 작동 방식과 사용법": [
          "인터페이스란?",
          "Java 클래스가 인터페이스를 활용하는 방법",
          "인터페이스 코드 다운로드",
          "추상 클래스의 정의 및 인터페이스와의 차이점"
        ],
        "실제 사례로 보는 상속의 중요성": [
          "Java의 상속 사용법",
          "상속 유형에 대한 실제 예시",
          "상속 코드 다운로드"
        ],
        "오버라이드와 오버로드 예제로 보는 Java의 다형성": [
          "예시를 통한 Java의 함수 오버로딩 설명",
          "함수 오버로딩과 오버라이딩은 어떻게 다른가요? - 설명",
          "데모 코드 다운로드"
        ],
        "배열의 모든 것 - 단일 및 다차원 배열": [
          "배열의 정의와 Java 프로그램에서의 사용법",
          "배열을 초기화하고 객체를 할당하는 방법",
          "배열 코드 다운로드",
          "다차원 배열에 대한 로직 프로그램"
        ],
        "배열 프로그램에 관련된 유명한 면접 문제 풀이 **필수 시청**": [
          "연습 문제 - 3*3 행렬에서 가장 작은 숫자 출력하기",
          "연습 문제 - 배열에 관한 Cisco 면접 질문",
          "프로그래밍 코드 다운로드",
          "연습 문제: temp 변수로/변수 없이 변수 교환하기",
          "연습 문제: 배열 로직 정렬 접근법",
          "정렬과 교환 코드 다운로드"
        ]
      },
      "requirements": [
        "누구나 수강하실 수 있습니다. (본 강의 수강을 위해 필요한 요건이나 코딩 등의 선행 학습 경험은 필요 없습니다.)",
        "Java 구성을 포함한 모든 필요 조건이 본 강의에 포함되어 있습니다.",
        "긴장을 풀고 신선한 마음으로 강의를 시작하세요!"
      ],
      "description": "기술적인 배경지식은 없지만, Java를 마스터해 자동화를 자유자재로 활용하고 싶은 분들을 위한 강의\nJava 프로그래밍 언어의 기초부터 자동화 테스터를 위한 강의까지, 배경지식이 없는 초보 수강생도 막힘없이 이해할 수 있도록 준비된 강의\n\n\n\n\n[이 강의가 시중에 있는 수백 개의 다른 Java 강의와 다른 점]\n\n\n#1. 저희는 수강생들이 코딩에 대한 배경지식이 전혀 없다고 가정하고 모든 주제를 가르치는 데에 주의를 기울였습니다. 그리고 그에 따른 확실한 성과를 내었으며 많은 학생들이 이 강의에서 얻은 지식으로 Java 프로젝트를 진행하고 있습니다. 그리고 이 강의는 Java 기술 면접에 합격하기까지의 모든 장애물을 제거해줄 겁니다!!!\n#2. 강의와 관련된 모든 질문에 대해 강사로부터 최고의 도움을 받을 수 있습니다. (꼭 영어로 질문을 남겨주세요!)\n#3. 이해하기 쉽고, 간단하게 사용할 수 있는 테크닉을 통해 도움을 드립니다.\n이 최고 평점(4.6/5) 강의에 여러분의 귀한 시간 중 10시간만 투자해 자유자재로 Java 관련 자동화/프로젝트를 처리하세요.\n#4. 이 강의는 30일간 Udemy를 통한 환불이 보장됩니다. 어떤 이유에서든 강의에 만족하지 못하면 환불해 드립니다. 추가로 강의를 이용해 주신 것에 대한 감사의 표시로, 강의의 모든 코드 파일을 무료로 제공해드립니다!!!\n\n\n\n\n[본 강의에서 다룰 내용]\nJava 기초,\nJava의 메서드,\n클래스, 객체,\n문자열과 관련 예제\n배열과 다차원 배열,\n배열 예제,\nJava 루프와 조건문\n실습 예제가 있는 코드 로직\nOOPS 개념, 상속, 다형성, 추상화\n인터페이스의 종류,\n함수 오버로드와 오버라이드,\n생성자와 사용법,\nSuper 키워드와 this 키워드 사용법,\n예외처리의 종류,\nTry catch finally 메커니즘,\nfinal 변수,\nJava 컬렉션,\nArrayList, 세트(Set), 리스트(List), LinkedList,\nDate 클래스와 Calendar 클래스 그 외에도 더 많은 내용을 다룹니다.\n\n\nJava 프로그래밍 언어 분야의 일자리는 항상 차고 넘치며, Java 개발과 Java를 활용한 자동화 테스트 분야 모두에 일자리가 풍부합니다.\n\n\n오늘 바로 수강하세요!\n여러분들은 그 누구보다 빠르게 Java를 쉽고 효과적으로 사용하게 될 것입니다!\n- Rahul",
      "target_audience": [
        "Java 언어를 배워서 IT기술 분야에 구직을 원하는 취업준비생",
        "java를 마스터해서 자유롭게 활용하고 싶은 분",
        "Java 개발 및 java를 활용한 자동화 테스트 분야 전반에 이직을 원하시는 분"
      ]
    },
    {
      "title": "【C#】xUnitを使ってテストコードを書く方法",
      "url": "https://www.udemy.com/course/xunitbasic/",
      "bio": "今「.NET」で最も採用されている単体テストツールであるxUnitを使ったテストコードの書き方を網羅的に解説しています。",
      "objectives": [
        "xUnitでのテストコードの書き方を理解する",
        "Theory属性を使い、１つのテストロジックに複数のテストケースを適応する方法を理解する",
        "テストの前処理と後処理が動作するタイミングを理解する",
        "テストロジック内でログを出力する方法を理解する",
        "テストメソッド、テストクラス間でのリソースの共有方法を理解する",
        "テストコードでCSVファイルを読み込む方法を理解する"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "テストコードの書き方": [
          "01_プロジェクトの作成",
          "02_最初のテスト",
          "03_boolのテスト",
          "04_文字列のテスト",
          "05_指定した文字列で始まっていることの検証",
          "06_大文字と小文字の違いを無視する",
          "07_文字が含まれていることのテスト",
          "08_正規表現のテスト",
          "09_数値のテスト",
          "10_浮動小数点数のテスト",
          "11_Nullのテスト",
          "12_コレクションのテスト_All",
          "13_コレクションのテスト_Single",
          "14_コレクションのテスト_Collection",
          "15_コレクションのテスト_Contains",
          "16_コレクションのテスト_参照型のContains",
          "17_コレクションのテスト_Equal",
          "18_GetHashCodeのオーバーライドが必要なケース",
          "19_同一インスタンスのテスト_Same",
          "20_オブジェクトタイプのテスト_IsType",
          "21_オブジェクトタイプのテスト_IsAssignableFrom",
          "22_例外のテスト",
          "23_イベントが通知されていることのテスト",
          "24_PropertyChengedが通知されていることのテスト"
        ],
        "xUnitの各種機能": [
          "C01_テストを分類する方法",
          "C02_テストをスキップする方法",
          "C03_テストのフィルタリング",
          "D01_ログの出力",
          "D02_テストの前処理を書く方法",
          "D03_テストの後処理を書く方法",
          "D04_テストメソッド間でリソースを共有する方法",
          "D04B_テストメソッド間でリソースを共有する方法の補足",
          "D05_テストクラス間でリソースを共有する方法",
          "E01_Theoryを使って効率的にテストを書く方法1",
          "E02_Theoryを使って効率的にテストを書く方法2",
          "E03_MemberData属性を使ってInlineDataを共有する方法",
          "E04_共有したいInlineDataが別のクラスにある場合",
          "E05_InlineDataをCSVファイルから読み込む方法",
          "E06_ファイルパスを指定してCSVファイルを読み込む方法"
        ],
        "使用したリソース": [
          "使用したリソース"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#の基本的な文法を理解している必要があります。"
      ],
      "description": "どうもこんにちは、ピーコックアンダーソンです。\n今回はxUnitという単体テストツールの使い方を解説しています。\n\n\nxUnitはNUnit、MSTestと比べて、今、最も採用されている単体テストツールです。\n\n\nxUnitはNUnit開発者により、.NETに最適化された単体テストツールであり、\nC#開発者にとって、非常に使いやすい単体テストツールになっています。\n\n\nxUnitは、単体テストを実施する前に、毎回テストクラスを生成するという構造により、\n１つ１つのテストの独立性が高められており、非常に使いやすくなっています。\n\n\nTheory属性というものにより、１つのテストコードに対して、\n複数のテストケースを適応できるようになっており、\n少ないコード量で、多くのテストを行うことができます。\n\n\nCSVファイルを読み込んでテストすることも可能なので、\nテスト開発者以外でも、テストデータを作成し、テストを実施することができます。\n\n\n今回は、このxUnitの使い方を3時間程度で網羅的に解説しています。\n今「.NET」でトレンドの単体テストツールの使い方ですので、\n興味のある方は、ぜひご覧になってみてください。",
      "target_audience": [
        "C#コードをxUnitという単体テストツールを使ってテストコードを書きたい方"
      ]
    },
    {
      "title": "Robot/AutoIT/Sikuli----覆盖Selenium WebDriver不能自动化测试的功能",
      "url": "https://www.udemy.com/course/robot-autoit-sikuli/",
      "bio": "桌面应用自动化快速入门",
      "objectives": [
        "用Robot类模拟用户按下键盘上的按键",
        "用到AutoIT小工具来进行文件的上传与下载",
        "用Sikuli实现桌面应用自动化测试",
        "用Robot类模拟用户敲击鼠标等"
      ],
      "course_content": {
        "课程介绍": [
          "课程介绍",
          "selenium脚本简介"
        ],
        "用Robot实现文件上传过程自动化": [
          "Windows文件上传--Robot",
          "Mac文件上传--Robot"
        ],
        "用AutoIT实现文件上传过程自动化": [
          "AutoIT安装及Finder Tool",
          "Windows文件上传--AutoIT",
          "用AutoIt处理需要进行身份验证的网站弹出的“用户名与密码”对话框"
        ],
        "用Sikuli实现自动化": [
          "Sikulix下载",
          "Sikuli实现自动化"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "有Java基础知识",
        "有Selenium Webdriver基础知识",
        "会用XPATH定位元素"
      ],
      "description": "这门课主要讲如何用Robot/AutoIT/Sikuli----覆盖Selenium WebDriver不能自动化的功能。\n用Robot类模拟用户按下键盘上的按键，或者模拟用户敲击鼠标等操作；\n用到AutoIT小工具来进行文件的上传与下载；\n用Sikuli实现桌面应用自动化；\n\n\n课程内容包括以下三部分：\njava.awt包中提供了许多自动化测试的API，主要用于模拟用户按下键盘上的按键，或者模拟用户敲击鼠标等。\n按下键盘某个按键\n按下组合键\n等等\n在Selenium的自动化中，会用到AutoIT小工具来进行文件的上传与下载。因为selenium无法做到对桌面控件的自动化操作,只能对打开的浏览器元素进行操作,所以需要autoit完成对控件的调用。\n比如网银安全控件\n处理需要进行身份验证的网站弹出的“用户名与密码”对话框。\nSikuli 是一种新颖的图形脚本语言，在实际的自动化测试中如果仅仅依靠selenium 还是远远不够的，selenium自动化本身是存在着诸多缺陷的，基于浏览器之外的控件 （windows 控件 等）selenium本身是无法实现的。这时候一般需要借助于AutoIT或者Sikuli -x工具辅助。",
      "target_audience": [
        "自动化测试人员",
        "对自动化感兴趣的手动测试人员",
        "想要学习自动化的学校毕业生"
      ]
    },
    {
      "title": "Osnove testiranja, automatsko testiranje, [WDIO, CYPRESS]",
      "url": "https://www.udemy.com/course/osnove-automatskog-testiranja/",
      "bio": "automatsko, testiranje, automatsko testiranje,cypress,webdriverio",
      "objectives": [
        "Osnove testiranja",
        "Konfiguracija wdio frameworka",
        "Kako napisati i pokrenuti automatski test",
        "Kako pokrenuti pojedinačne testove",
        "WebdriverIO framework (Selenium)",
        "Before i after uvijeti",
        "Upload dokumenta",
        "Cross browsing testiranje"
      ],
      "course_content": {
        "Uvod": [
          "Uvod",
          "Agenda",
          "Autor",
          "Razlika između Software testera i QA Engineera",
          "Stvarni primjeri",
          "Glavna podjela testiranja",
          "Životni ciklus software-a",
          "Fokus tečaja"
        ],
        "Preduvjeti za pokretanje testa": [
          "Node.js, npm",
          "Prvi test + jsconfig",
          "Fullscreen mode"
        ],
        "Reporti + ScrollIntoView": [
          "Skip testa i pokretanje samo jednog testnog slučaja",
          "Reporti",
          "ScrollIntoView"
        ],
        "POM (Page object model)": [
          "Tvrdnje (assertions)",
          "Pokretanje i debug testa preko konfiguracije launch.json",
          "POM",
          "Before/after blok",
          "Headless mode"
        ],
        "FileUpload + Primjer testne scripte": [
          "FileUpload",
          "Chrome + Firefox",
          "Primjer testne skripte"
        ],
        "Cypress": [
          "Instalacija",
          "Teste scripte (primjeri)"
        ],
        "Q&A": [
          "Odjava"
        ]
      },
      "requirements": [
        "Nije potrebno predhodno iskustvo",
        "Ovo su osnove i nadam se da će vam biti zanimljivo",
        "Za 1v1 nastavnu gdje ćete zasigurno bolje naučiti testiranje obratite mi se na mom linkedIN profilu"
      ],
      "description": "Biti QA Engineer je zanimljiv i kreativan posao. Naš zadatak je povezan s onim što programeri rade, ali se dosta i razlikuje od posla programera. QA Engineer i Software Tester pokušavju putem uobičajenih i neuobičajenih načina korištenja softvera doći do informacija o eventualnim greškama u softveru i poboljšanju same aplikacije.\nUkoliko imate interesa, ove vještine mogu vas potaknuti da se u budućnosti bavite programiranjem u nekom programskom jeziku po želji.\nZanimanja poput Software tester, QA Engineer, Business Analyst sve su popularnija.\nTečaj je strukturiran tako da polaznicima pruža osnovno teoretsko znanje i praktične vještine. Počinje s osnovama testiranja softvera i postupno se kreće prema naprednim temama.\nTečaj je namijenjen i svima zainteresiranima za učenje o testiranju softvera. Do kraja tečaja, polaznici će moći razviti testne slučajeve te izvršiti testove. Također će dobro razumjeti proces testiranja softvera i njegovu važnost u životnom ciklusu razvoja softvera.\n\n\nTeme tečaja:\nUvod u testiranje\nOsnove testiranja\nIzvođenje automatskog testa\n\n\nZahtjevi tečaja:\n\n\nOsnovno poznavanje koncepata razvoja softvera\nPoznavanje programskih jezika je plus ali nije obavezno (JAVASCRIPT)\n\n\nIshod tečaja:\n\n\nNa kraju tečaja naučit ćete zapravo kako izgleda automatsko testiranje i shvatiti zašto je važno automatsko testiranje.\n\n\nAko želite individualnu nastavu 1v1 obratite se na moj linkedIN profil.",
      "target_audience": [
        "Ovaj kurs je namjenjen svima koji se žele baviti testiranjem i onima koji se trenutno bave testiranjem, za 1v1 učenje javite se na moj linkedIn profil"
      ]
    },
    {
      "title": "X86软件逆向分析实战（一）",
      "url": "https://www.udemy.com/course/reverseskill01/",
      "bio": "“驯服”你看中的软件",
      "objectives": [
        "“驯服”那些你看中的软件！",
        "在实战中掌握OD基本使用",
        "在实战中掌握CE基本使用",
        "在实战中掌握IDA基本使用",
        "在实战中掌握汇编语言"
      ],
      "course_content": {
        "X86软件逆向分析实战（一）": [
          "课程概览",
          "如何安装和确定当前软件版本",
          "如何确定当前软件的基址",
          "如何确定自己的重要信息存放的内存地址",
          "用C++编写一个被注入的DLL",
          "用易语言编写一个被注入的DLL",
          "用C#语言编写一个被注入的DLL",
          "用C++编写一个DLL注入器",
          "用易语言编写一个DLL注入器",
          "用C#语言编写一个DLL注入器",
          "脚本多开：一看就想笑的方式",
          "调试器多开：Hacker入门级操作",
          "关掉Mutex：Hacker进阶操作",
          "补丁多开：破解入门操作",
          "使用C#读取其他进程内存中的数据",
          "一级基址二级基址及其他",
          "截图被遮盖、最小化的软件窗口",
          "二维码截图与裁剪",
          "二维码解码以及编码",
          "从内存中读取二维码基址",
          "从内存中导出二维码图片",
          "从内存中读取PNG图片数据",
          "编程关掉Mutex：Hacker高级操作",
          "DLL劫持：一个被封印的超强注入技术",
          "给软件添加一个可用“热键”“呼出”的“窗口”（C#&C）",
          "IDA起步00：探秘WeTool",
          "DLL被注入和被卸载(出坑必备)",
          "用C#写一个WebServer",
          "用C#写一个WebClient",
          "寻找创建二维码字符串的汇编代码",
          "根据“特征码”查找汇编代码的具体位置",
          "C++调用被封装成COM组件的C#1",
          "C++调用被封装成COM组件的C#2",
          "发送消息CALL的汇编代码段",
          "是谁在跟我聊天？",
          "调试02：DebugView",
          "调试03：对照源码输出调试日志",
          "用易语言改变程序执行流程",
          "定位创建图片的汇编代码段",
          "用易语言改变程序执行流程2",
          "调用CALL发送一个文本消息[C语言]",
          "改变程序执行流程接收消息",
          "如何成功卸载被远程线程注入的DLL",
          "如何在C++源代码级别调试被远程线程注入的DLL",
          "如何截获软件启动时加载的数据",
          "可爱猫（AirCat）：一个免费的扩展框架",
          "用易语言调用一个CALL",
          "IDA起步01：从零开始进行软件分析",
          "IDA起步02：删除一个联系人",
          "IDA起步03：退出一个聊天室",
          "IDA起步04：跳转到登录页面",
          "IDA起步05：判断用户是否已经登录",
          "IDA起步06：给某人发个文本消息",
          "IDA起步07：给某群发个文本消息",
          "IDA起步08：给某群发个AT消息",
          "IDA起步09：获取某群全部成员ID",
          "IDA起步10：发送一个图片消息",
          "IDA起步11：发送一个文件",
          "IDA起步12：给某群发送一个群公告",
          "IDA进阶13：使用IDA直接分析主要文件",
          "在易语言中使用etcp(1)",
          "在易语言中使用etcp(2)",
          "如何编译etcp的c++源码",
          "如何在C++中集成etcp",
          "如何在C++中调用etcp.dll",
          "在C#中调用etcp.dll",
          "调试04：强制输出软件的调试信息",
          "链表01：链表在内存中的存储形式",
          "链表02：寻找链表头",
          "链表03：使用C#遍历内存中的群链表",
          "链表04：使用C#遍历群里的群成员链表",
          "链表05：使用C#遍历内存中的联系人链表",
          "链表06：使用C#遍历内存中的全球地区地址中英文对照表",
          "链表07：使用C#遍历内存中的当前会话列表",
          "查询“开关”设置的位置",
          "课程相关话题",
          "SQLite数据库01：如何编译SQLite数据库源码",
          "SQLite数据库02：找到SQLite数据库句柄",
          "SQLite数据库03：执行sqlite_exec、执行数据库回调函数"
        ]
      },
      "requirements": [
        "略懂C语言",
        "或略懂易语言",
        "或略懂汇编语言"
      ],
      "description": "对于那些“不听话”的软件，怎么办？\n你是想忍声吞气凑合着用？\n还是想“修理”一顿，让它乖乖地按照你的意思办？\n本课程教你“驯服”那些你看中的软件！\n掌握这个技能，无论它是什么软件，只能乖乖按你的意思办！\n\n\n课程内容会涉及到与X86软件逆向分析相关的各种杂项与细节实现，其中涵盖OD、CE、IDA、WinAPI、Visual Studio 2019、易语言、C/C++、C#、汇编等使用技巧与编程技巧。\n\n\n若你是编程初学者，认真学习本课程后，你的能力将会有极大的提升。若你是编程大佬，建议勿跳过每一节课，一定会有所收获！",
      "target_audience": [
        "编程爱好者",
        "逆向分析爱好者",
        "外挂制作者"
      ]
    },
    {
      "title": "Google Chrome DevTools для QA та розробників",
      "url": "https://www.udemy.com/course/google-chrome-devtools-course-for-qa/",
      "bio": "Дізнайтеся, як використовувати основні інструменти в DevTools, як професійний QA або розробник",
      "objectives": [
        "Ознайомитесь з основними інструментами Chrome DevTools",
        "Дізнаєтесь, в яких ситуаціях використовувати DevTools",
        "Як дебажити JavaScript за допомогою DevTools",
        "Інспектувати та модифікувати DOM",
        "Інспектувати та модифікувати CSS",
        "Як досліджувати продуктивність",
        "Аналізувати нетворк трафік",
        "Автоматизація базових рутиних дій"
      ],
      "course_content": {
        "Introduction": [
          "Вступна лекція"
        ],
        "Inspect button, Toggle Device Mode": [
          "Inspect button, Toggle Device Mode"
        ],
        "Elements": [
          "Elements in DOM"
        ],
        "Console": [
          "Вивчаємо Console"
        ],
        "Network": [
          "Вивчаємо як взаємодіяти з Network"
        ],
        "Application": [
          "Вивчаємо Application"
        ],
        "Sources": [
          "Вивчаємо Sources"
        ],
        "Recorder": [
          "Вивчаємо Recorder"
        ],
        "Performance": [
          "Вивчаємо Performance"
        ]
      },
      "requirements": [
        "встановлений Google Chrome",
        "базові знання HTML",
        "базові знання CSS",
        "базові знання JavaScript"
      ],
      "description": "Дізнайтеся, як користуватися основними інструментами в DevTools, як професійний QA або розробник\n\n\nКурс Chrome DevTools — це курс, розроблений для того, щоб надати QA та розробникам необхідні навички та знання для використання можливостей Google Chrome DevTools. Цей курс розроблено, щоб задовольнити потреби як початківців, так і досвідчених веб-розробників і тестувальників, забезпечуючи їм міцний фундамент для використання Chrome DevTools.\n\n\nКурс охоплює широкий спектр тем, починаючи з основ використання інтерфейсу DevTools для перевірки та керування веб-сторінками. Студенти навчаться дебажити JavaScript, аналізувати продуктивність та оптимізувати швидкість веб-сайту. Курс також охоплює такі складні теми, як використання DevTools для тестування мобільної адаптації і використання DevTools для створення спеціальних скриптів для автоматизації.\nМи розберемося з тим як використовувати такі вкладки як Elements, Console, Network, Sources, Performance, Application, Recorder. Навчимося інспектувати елементи, редагувати та аналізувати DOM-дерево, аналізувати логи в консолі та трафік з вашого застосунку, зробимо невеличкі кроки в автоматизацію рутиних дій та побачимо як можна аналізувати продуктивність сторінки.\n\n\nКурс викладається через низку інтерактивних уроків і практичних вправ, які дозволяють студентам застосовувати те, що вони навчилися, у сценаріях реального світу. Навчальна програма розроблена так, щоб бути гнучкою, що дозволяє студентам навчатися у власному темпі та зосереджуватися на темах, які найбільше стосуються їх роботи.\n\n\nПісля завершення курсу студенти матимуть глибоке розуміння екосистеми Chrome DevTools і зможуть використовувати її для оптимізації своїх веб-застосунків для підвищення продуктивності, швидкості та зручності використання. Володіючи цими навичками, вони зможуть створювати високоякісні веб-додатки, які відповідають потребам їхніх користувачів і клієнтів.\n\n\n\n\nEN:\nLearn how to use the main tools in DevTools like a professional QA or Developer\n\n\nThe Chrome DevTools course is a comprehensive program designed to equip QA and developers with the necessary skills and knowledge to leverage the power of Google Chrome's built-in web development tools. This course is designed to cater to the needs of both novice and experienced web developers, providing them with a solid foundation in the usage of Chrome DevTools.\nThe course covers a wide range of topics, starting with the basics of using the DevTools interface to inspect and manipulate web pages. Students will learn how to debug JavaScript, analyze network performance, and optimize website speed. The course also covers advanced topics such as using DevTools to debug mobile applications and utilizing the DevTools protocol to build custom tools.\nThe course is taught through a series of interactive lessons and hands-on exercises that allow students to apply what they have learned in real-world scenarios. The curriculum is designed to be flexible, allowing students to learn at their own pace and focus on the topics that are most relevant to their work.\nUpon completion of the course, students will have a deep understanding of the Chrome DevTools ecosystem and be able to use it to optimize their web applications for performance, speed, and usability. With these skills, they will be able to build high-quality web applications that meet the needs of their users and clients.",
      "target_audience": [
        "QA/Developers хто хоче навчитися користуватися Chrome DevTools",
        "QA/Developers які хочуть вдосконалити свої навички дебагінгу",
        "QA/Developers які хочуть знайти потенційні проблеми з веб-сайтом",
        "QA/Developers які хочуть дізнатися про останні функції в Chrome DevTools"
      ]
    },
    {
      "title": "Testes contínuos em Cypress no Github Actions",
      "url": "https://www.udemy.com/course/testes-continuos-em-cypress-no-github-actions/",
      "bio": "Integrando o Cypress no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados",
      "objectives": [
        "Trabalhar com versionamento de código com Git",
        "Entender as diferencás em Git e Github",
        "Publicar o projeto de testes em Cypress no Github",
        "Construir um Workflow e Pipeline de testes no Github Actions"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash"
        ],
        "Introdução ao testes contínuos no Github Actions": [
          "Introducão e fork do projeto",
          "Criando um simples Workflow",
          "Workflow Dispatch"
        ],
        "Testes de regressão e reports na núvem": [
          "Integrando com Cypress Cloud",
          "Pipeline multi-browser",
          "Quando um teste falha",
          "Chaves secretas do Github",
          "Cypress Cloud x Tesults",
          "Integrando Cypress e Tesults",
          "Pipeline multi-browser com Tesults"
        ],
        "Encerramento": [
          "Parabéns! Agora você é QA com habilidades de DevOps"
        ]
      },
      "requirements": [
        "Básico do Cypress"
      ],
      "description": "Construa um pipeline de testes contínuos em Cypress no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados. Controle o fluxo de execução de testes com relatórios, screenshos e métricas.\nOs testes de regressão não precisam rodar necessariamente no seu computador. Nesse curso direto ao ponto vamos criar um Workflow de testes contínuos integrando o Cypress Dashboard no Github Actions e no final teremos um plot twist com Dashboards fantásticos.\nAprender DevOps, como Analista de Testes de Software, pode melhorar a eficiência, a qualidade e a colaboração no processo de desenvolvimento de software, proporcionando uma visão holística do ciclo de vida do produto e impulsionando o crescimento profissional.\nCom pipelines de testes contínuos, os testes são executados automaticamente sempre que há alterações no código. Isso permite que os defeitos sejam detectados o mais cedo possível no ciclo de desenvolvimento, tornando mais fácil e menos dispendioso corrigi-los.\nA execução automática de testes contínuos garante que o código que está sendo desenvolvido e integrado funcione corretamente e não cause problemas em outras partes do sistema. Isso aumenta a confiabilidade do código e reduz a probabilidade de falhas em produção.\nNeste treinamento você vai aprender como construir um workflow de testes contínuos no Github Actions, gerando histórico de testes de regressão com reports e evidências dos testes.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Playwright za Početnike - Kompletan kurs ( UI + API )",
      "url": "https://www.udemy.com/course/playwright-za-pocetnike/",
      "bio": "Sve što vam treba za uspešan start u automatizaciji sa Playwright-om",
      "objectives": [
        "Kako instalirati Playwright od nule kao novi nezavisni projekat ili dodati postojećem projektu front-end aplikacije",
        "Osnove JavaScripta u slučaju da ste početnik u programiranju",
        "Kako pokrenuti testove pomoću interfejsa komandne linije, UI mode, Playwright ekstenzija i debug-ovanje testova",
        "Kako organizovati testove, strukturirati testove, koristiti testne hook-ve",
        "HTML terminologija, pravila sintakse lokatora i najbolje prakse Playwright-a za lociranje web elemenata",
        "Različite vrste asertacija, kako funkcioniše koncept automatskog čekanja i kako da konfigurišete različita vremenska ograničenja",
        "Kako raditi sa različitim komponentama korisničkog interfejsa, kao što su input fields, radio buttons, checkboxes, lists, tooltips, dialog boxes ....",
        "Šta je Page Object Model. Kako organizovati test framework sa objektima stranice. Preporučena arhitektura za Page Object Model",
        "Kako raditi sa API-jima: API mock-ovanje, API zahtevi, presretanje API poziva, stanje deljene memorije, API autentifikacija",
        "Više naprednih tema: fixtures, global setup and teardown, parallel execution, test tags, test retries, visual testing, mobile device emulation, reporters."
      ],
      "course_content": {
        "Priprema": [
          "Uvod",
          "Playwright vs Cypress",
          "Konfiguracija Development Okruženja",
          "Kloniranje Test aplikacije"
        ],
        "JavaScript Osnove": [
          "Pregled Modula",
          "Hello World",
          "Varijable, Konstante i Data tipovi",
          "Konkatenacija i Interpolacija",
          "Objekti i Nizovi",
          "Operatori jednakosti i poređenja",
          "Logički operatori",
          "Uslovna izjava",
          "Petlje",
          "Funkcije",
          "Klase i Metode",
          "TypeScript vs JavaScript",
          "JavaScript Zadatak"
        ],
        "Playwright - Pregled i Instalacija": [
          "Playwright instalacija",
          "CLI Test Izvršavanje",
          "UI Test izvršavanje",
          "Trace view i Debug",
          "Test Struktura",
          "Hukovi i Kontrol toka",
          "Kviz 1: Provera znanja"
        ],
        "Interakcija sa Web elementima": [
          "DOM Terminologija",
          "Pravila sintakse lokatora",
          "User-facing lokatori",
          "Child elementi",
          "Parent elementi",
          "Korišćenje postojećih lokatora",
          "Izvlačenje vrednosti",
          "Asertacije",
          "Automatsko čekanje",
          "Timeouts",
          "Kviz 2: Provera znanja"
        ],
        "UI Komponente": [
          "Input Fields",
          "Checkboxes",
          "Lists & Drop-downs",
          "Tooltips",
          "Dialog boxes",
          "Web tabele (Deo 1)",
          "Web tabele (Deo 2)",
          "Date picker (Deo 2)",
          "Radio Buttons",
          "Sliders",
          "Date picker (Deo 1)",
          "Drag & Drop uz korišćenje iFrames-a"
        ],
        "Page Object Model": [
          "Šta je Page Object",
          "Kreiranje Page Object-a",
          "Navigation Page Object",
          "Lokatori u Page Object-u",
          "Parametrizovane Metode",
          "Date Picker Page Object",
          "Page Objects Manager",
          "Page Objects Helper Base"
        ],
        "Rad sa API-jem": [
          "Šta je API",
          "Setovanje novog projekta",
          "Mocking API",
          "Modifikovanje API odgovora",
          "Izvršavanje API zahteva",
          "Intercept-ovanje API odgovora",
          "Deljenje Stanja Autentikacije",
          "API Autentikacija"
        ],
        "Napredne funkcionalnosti": [
          "NPM Skripte & CLI Komande",
          "Test Data Generator",
          "Test Retries",
          "Paralelno Izvršavanje",
          "Screenshots & Video",
          "Environment Variables",
          "Konfiguracioni fajl",
          "Fixtures",
          "Project Setup & Teardown",
          "Test Tagovi",
          "Mobile Device Emulator",
          "Reporting",
          "Visual Testing",
          "Playwright i Docker",
          "GitHub Actions & Argos CI"
        ],
        "Kraj": [
          "Dalji koraci"
        ]
      },
      "requirements": [
        "Potrebno je osnovno znanje Javascripta. Deo o osnovama Javascripta je uključen u kurs.",
        "Postavite mi pitanje u odeljku za pitanja i odgovore na času ili mi pošaljite poruku ako nešto nije jasno ili ne funkcioniše."
      ],
      "description": "Playwright – framework za automatizaciju testiranja razvijen od strane Microsoft-a. Moderan, visoko prilagodljiv i pouzdan.\nOva obuka pokriva sve osnovne koncepte framework-a. Počinjemo od nule, sa postavljanjem i konfiguracijom, a zatim prelazimo na praktičan pregled framework-a kako biste se upoznali sa okruženjem. Iz lekcije u lekciju postepeno povećavamo složenost. Sve lekcije imaju logičan tok i međusobno su povezane. Svaka naredna lekcija nadograđuje novo znanje na ono što je naučeno u prethodnoj. Ovo se odnosi i na kod koji se demonstrira tokom obuke. Imaćemo dve testne aplikacije i postepeno ćemo dodavati sve više koda kako bismo otkrili nove teme.\n\nKako pratiti obuku Gledajte sve lekcije redosledom kojim su objavljene. Pišite kod zajedno sa mnom. Po potrebi pauzirajte video da biste završili kod. Vežbanje je najbolji način za učenje. Takođe, preporučujem da lekcije gledate u režimu celog ekrana jer tekst na ekranu ponekad može biti sitan i težak za čitanje. Ako preskočite lekcije ili ih gledate van redosleda, moguće je da ćete imati osećaj da vam nešto nedostaje ili da nije jasno.\n\nŠta ćete naučiti:\nKako da instalirate Playwright od nule kao nezavisan projekat ili da ga dodate postojećem front-end projektu\nOsnove JavaScript-a, ako ste početnik u programiranju\nKako da pokrećete testove putem komandne linije, UI režima, Playwright ekstenzije i kako da debagujete testove\nKako da organizujete testove, strukturirate ih i koristite test hook-ove\nHTML terminologiju, pravila sintakse za lokatore i najbolje prakse u Playwright-u za pronalaženje web elemenata\nRazličite tipove asercija, kako funkcioniše koncept automatskog čekanja (auto-waiting) i kako da konfigurišete različite timeout-e\nKako da radite sa različitim UI komponentama kao što su polja za unos, radio dugmad, checkbox-ovi, liste, tooltip-ovi, dijalozi, kalendari, tabele, iFrame-ovi, klizači, drag and drop\nŠta je Page Object Model. Kako da organizujete kod testnog framework-a pomoću Page Object-a. Preporučena arhitektura za Page Object Model u Playwright-u\nKako da radite sa API-jem: API mocking, API zahtevi, presretanje API poziva, deljenje stanja skladišta, API autentifikacija\nViše naprednih tema: fiksture, globalni setup i teardown, paralelno izvršavanje, tagovi za testove, ponovni pokušaji testova, vizuelno testiranje, emulacija mobilnih uređaja, reporteri, promenljive okruženja i izvršavanje testova u Docker kontejneru\nNa kraju obuke, bićete upoznati sa svim važnim konceptima Playwright-a i bićete sposobni da automatizujete gotovo svaku web aplikaciju",
      "target_audience": [
        "Početnici koji žele da nauče automatsko testiranje",
        "QA inženjeri koji žele da pređu sa manualnog na automatsko testiranje",
        "Programeri koji žele da nauče testiranje",
        "Studenti i entuzijasti koji žele da započnu karijeru u QA"
      ]
    },
    {
      "title": "Quality Assurance Testing dərsləri (Azərbaycan dilində) QA",
      "url": "https://www.udemy.com/course/manual_testing_azerbaycan_dilinde/",
      "bio": "Manual Testing (QA - Quality Assurance) Proqram təminatının keyfiyyətini təmin etmək üçün lazım olacaq bilik.",
      "objectives": [
        "Proqram təminatının yoxlanması üçün lazım olan nəzəri bilikləri",
        "Proqram təminatının keyfiyyətinin təmin olunması üçün bilikləri",
        "API Testing - POSTMAN",
        "SQL Əsasları",
        "Real iş mühitində əslində necə olur."
      ],
      "course_content": {
        "Giriş": [
          "Salam!",
          "Testing nədir? - What is the Software Testing?"
        ],
        "Ümumi SDLC və STLC haqqında": [
          "Proqram təminatı nədir? - What is the Software?",
          "Proqram Təminatının Keyfiyyəti nədir? - What is Software Quality?",
          "Testing ( Yoxlama ) nəyə lazımdır? Niyə edirik? - Why do we need Testing?",
          "SDLC və STLC və onların fərqi",
          "SDLC və onun addımları haqqında",
          "Product və Proyekt və onların fərqi.",
          "Proqram təminatında niyə Bug olur? - Why the software has bugs?",
          "Error, Bug və Fail və onların fərqi"
        ],
        "SDLC-nin idarə etmə Modelləri": [
          "Waterfall - Şalələ Modeli",
          "Spiral Modeli",
          "V-Model",
          "Verification və Validation",
          "Agile - izah, prinsipləri, müsbət və mənfi tərəfləri",
          "Scrum, Proses və komanda",
          "Scrum Terminology and Board"
        ],
        "Testing - Yoxlama": [
          "Static and Dynamic Testing - Statik və Dinamik Yoxlama",
          "QA, QC və QE izahı",
          "Levels of Testing - Dynamic Testing",
          "System Testing",
          "Regression Testing",
          "Build, Release və Versiyalama",
          "Retesting. Smoke and Sanity Testing.",
          "Exploratory. Adhoc. Monkey-Gorilla Testing",
          "Positive and Negative Testing",
          "End to End Testing (E2E)",
          "Test Design Techniques",
          "Globalization and Localization",
          "Test Plan Nəzəri İzah",
          "Test Plan Nümunə Guru99",
          "Use Case - Test Scenario - Test Case",
          "Test Caselər yazırıq (təcrübə)",
          "RTM - Requirements Traceability Matrix",
          "Test Environment- Yoxlama mühiti",
          "Test Execution",
          "Defect/Bug nədir? Nədən ibarətdir?",
          "Severity and Priority daha detallı izah",
          "Bug Life Cycle Qrafik izah",
          "Test Closure - Yoxlamanın bitirilməsi",
          "Test Metrics",
          "QA Activities - Proyektdə QA nələri edir",
          "Test Strategy - Nəzəri"
        ],
        "API Testing": [
          "API nədir?!",
          "Client və Server Arxitekturası. APİ Daha detallı izah. Nümunə ilə.",
          "HTTP Metodlar. Request və Response.",
          "Postman proqramı ilə tanışlıq",
          "Postmanda workspace necə yaradırıq?",
          "Postmanda environment nədir və necə yaradırıq",
          "Postman Collection nədir və necə yaradırıq",
          "Postman GET metod",
          "Postman POST metod",
          "Postman PUT və PATCH metod",
          "Postman DELETE metod",
          "Postmanda Autorizasiya"
        ],
        "SQL": [
          "Verilənlər bazasının əsasları",
          "Docker Image ilə MySQLdən istifadə etmək üçün konteyner qaldırırıq.",
          "SQL Əsasları",
          "SQL Əmrləri",
          "DML INSERT",
          "DML - SELECT Əsası",
          "Cədvəldən bütün məlumatları əldə etmək lazımdır.",
          "DML - UPDATE",
          "DML - DELETE",
          "MySQL Workbench \"Safe Mode\"-dan çıxardırıq",
          "DDL - CREATE TABLE - CƏDVƏL YARAT",
          "DDL - ALTER TABLE - CƏDVƏLİ YENİLƏ",
          "DDL - TRUNCATE",
          "DDL - DROP",
          "SELECT WHERE və Məntiq operandları",
          "SELECT DISTINCT",
          "SELECT Count()",
          "SELECT MIN, MAX, SUM, AVG operandları",
          "SELECT WHERE IN",
          "SELECT WHERE LIKE",
          "ALIASLAR",
          "LİMİT",
          "ORDER BY ASC və DESC",
          "SQL Join əmrləri",
          "SQL subquery-lər"
        ],
        "Müsahibəyə hazırlıq": [
          "Resume",
          "Behavioral questions",
          "Nəzəri suallar",
          "Praktik suallar"
        ],
        "Suallarınıza əsasən yaradılan dərslər": [
          "Decision Table əlavə izah fərqli nümunə.",
          "Equivalence Class Testing - Tapşırıq/Nümunə üzərindən izah",
          "Test ssenari və test keysləri necə yazaq sualı",
          "Functional, Regression, Smoke, Sanity Real həyatda"
        ],
        "Təcrübə imkanları": [
          "Bug tapmaq üçün və Test Keyslər yazmaq üçün imkanlar",
          "Metaflix Üzərindən təcrübə Ssenariləri hazırlayaq",
          "Əsas səhifə üçün Ssenariləri yazın",
          "Epic Descriptiona əsasən \"Giriş\" səhifəsi üçün mümkün olan ssenariləri yazın"
        ]
      },
      "requirements": [
        "Az da olsa ingilis dili.",
        "Kompyuter ilə sərbəst işləmə bacarığı.",
        "Maraq, Həvəs və Məqsədyönlülük.",
        "Kompyuteriniz də olmalıdır"
      ],
      "description": "Manual Quality Assurance Testing. Əlnən keyfiyyətin təminatının yoxlanması.\n\nKurs sıfırdan Testing sahəsini mənimsəmək üçün və Manual Tester kimi işə başlamaq üçün lazım olan bütün mövzuları əhatə edib, sizi bu sahədə iş tapmağa daha da yaxın edəcək. Kursda biz proqram təminatını kod yazmadan yoxlamaq üçün lazım olacaq texnologiyaları, metodikaları və yanaşmaları müzakirə edəcəyik. Kurs məqsədyönlü şəkildə sizlər üçün hazırlanıb. Ona görə kursda mövzuların müddəti əbəs yerə uzanmır. Kursda İntervyuda düşə biləcək sualları da nəzərinizə çatdırırıq. Əlavə olaraq sizə daimi dəstək göstərərək kursu daha da keyfiyyətli edirik.\n\n\nKursu bir neçə hissəyə bölərək aydın bir struktur formasına gətiririk. Kursda Ümumi Software (Proqram Təminatı) haqqında məlumat verildikdən sonra, İstifadə oluna biləcək metodologiyalardan danışırıq. Nəzərə alın seksiyalara videolar sonradan da əlavə edilə bilər. Öyrəndiklərinizi nə dərəcədə yaxşı mənimsədiyinizi yoxlamaq üçün test və sorğular keçirəciyik. Zəhmət olmasa əgər çətinliyiniz varsa, mütləq şəkildə bizə müraciət edin.\n\n\nManual QA Haqqında:\nHazırda Amerika və Avropada çox inkişaf etmiş Testing sahəsi demək olar bütün proqram təminatı hazırlayan və ya öz daxili proqramçıları olan şirkətlər Testing etmədən produktunu istifadəyə vermir. Çünki xətalar müxtəlif fəsadlar gətirə bilər. Paylaşdığımız dərslərdən biri Testingin nəyə lazım olduğundan danışır. Mütləq həmin dərsi izləyin.\n\n\nDeyirlər bəs Manual QA artıq lazım deyil...\nAutomation Manual tərəfindən edilmiş təkrarlanan testləri kompyuter tərəfindən edilməsi üçün lazım olur. Qeyd edim ki, neçə illər işləyib reallıqda 3 Manual Tester olarkən 0 ya 1 Automation Tester olur. Yəni resurs olaraq insana həməşə ehtiyac var. Hətta bəzən şirkətlər bütün regressionları belə Manual qaydada edir. Dediklərim daha çox Amerika bazarına aiddir. Ona görə düşünürəm Manual Testing-i bilmək zərüridir. QEYD: Automation-a keçid etmək üçün də əvvəl Manual tərəfini bilməlisiniz.\n\n\nTerminləri ingilis dilindədir:\nBəli, terminlər ingilis dilindədir. Beləliklə həmin sözlər sizə artıq tanış olacaq və müsahibəni keçmək daha çox rahat olacaq. Azərbaycan dilində izahını və tərcüməsini əlavə edərik əgər ehtiyac olarsa. Azərbaycan bazarında da siz bu biliklərinizi istifadə edib, keyfiyyətli proqram təminatını hazırlamaq da önəmli rol oynaya bilərsiniz.\n\n\nKurs hal-hazırda yenilənməyə davam edir. Proqram Təminatının Yoxlanmasının Həyat Dövründə bütün addımları mənimsəyib müxtəlif testing (yoxlama) növlərini öyrənəcəksiniz.",
      "target_audience": [
        "Sahəsini dəyişib İT sahəsinə keçid etmək istəyənlər üçün",
        "Keyfiyyətli proqram təminatı hazırlamaq istəyənlər üçün",
        "Testing sahəsində profesional olmaq istəyənlər üçün",
        "Manual QA sahəsində hansı mövzular və güşələr olduğunu öyrənmək istəyənlər üçün",
        "İSQTB imtahanına hazırlığı asanlaşdırmaq istəyənlər üçün"
      ]
    },
    {
      "title": "ISTQB Yazılım Test Uzmanı Foundation Level v4.0 Eğitimi",
      "url": "https://www.udemy.com/course/istqb-yazilim-test-uzmani-foundation-level-sinav-egitimi/",
      "bio": "Yazılım testi temel ilkeleri, süreçleri öğrenerek kariyerinize sağlam bir başlangıç yapın.Yeni başlayanlar için İdeal!",
      "objectives": [
        "Öğrenciler, yazılım testinin temel aşamalarını öğrenir ve süreçlerdeki rollerini anlar.",
        "Öğrenciler, kara kutu ve beyaz kutu test tekniklerini uygulayarak hataları tespit eder.",
        "Öğrenciler, test planı oluşturmayı ve risk bazlı test stratejilerini öğrenirler.",
        "Öğrenciler, doğru hata raporlama ve analiz yöntemlerini öğrenerek hata çözüm süreçlerine katkıda bulunur."
      ],
      "course_content": {
        "Tech Talent Space Eğitim Tanıtımı": [
          "Tanıtım Videosu"
        ],
        "Giriş / Yazılım Testi Nedir ? Test Hedefleri ve Hata Ayıklama": [
          "Yazılım Testi Nedir ? Test Hedefleri ve Hata Ayıklama"
        ],
        "Yazılım Testi Neden Gereklidir ? Yazılım Testinin Başarıya Katkısı": [
          "Yazılım Testi Neden Gereklidir ? Yazılım Testinin Başarıya Katkısı"
        ],
        "Test Prensipleri , Test Aktiviteleri , Test Yazılımı ve Test Rolleri": [
          "Test Prensipleri , Test Aktiviteleri , Test Yazılımı ve Test Rolleri"
        ],
        "Proje Bağlamında Test Süreci , Test Yazılımı ve Test Esasları": [
          "Proje Bağlamında Test Süreci , Test Yazılımı ve Test Esasları"
        ],
        "Test Etme Sürecindeki Roller , Tüm Ekip Yaklaşımı ve Testin Bağımsızlığı": [
          "Test Etme Sürecindeki Roller , Tüm Ekip Yaklaşımı ve Testin Bağımsızlığı"
        ],
        "Yazılım Geliştirme Yaşam Döngüsü ve Test Üzerindeki Etkisi": [
          "Yazılım Geliştirme Yaşam Döngüsü ve Test Üzerindeki Etkisi"
        ],
        "Dev-Ops , Test Etme ve Shift Left Yaklaşımı": [
          "Dev-Ops , Test Etme ve Shift Left Yaklaşımı"
        ],
        "Test Seviyeleri ve Test Çeşitleri": [
          "Test Seviyeleri ve Test Çeşitleri"
        ],
        "Onaylama , Regresyon ve Bakım Testleri": [
          "Onaylama , Regresyon ve Bakım Testleri"
        ]
      },
      "requirements": [
        "Kursu almak için hiçbir ön koşul bulunmamaktadır. Kurs, yazılım testi konusunda deneyimi olmayan, tamamen yeni başlayanlar için uygundur. Katılımcıların yalnızca temel bilgisayar kullanımı konusunda bilgi sahibi olması yeterlidir. Herhangi bir özel araç veya ekipman gerekmemektedir, kurs sırasında gerekli olan tüm bilgiler ve kaynaklar sağlanacaktır. Bu kurs, yazılım testine ilgi duyan ve kariyerine bu alanda başlamak isteyen herkes için ideal bir fırsattır. Yeni başlayanlar için bariyerleri en aza indirgeyerek, kolay anlaşılır bir müfredat sunulmaktadır."
      ],
      "description": "Bu kurs, yazılım testi alanında kariyer yapmak isteyen veya yazılım projelerinde test süreçlerini anlamak ve uygulamak isteyen sektör profesyonelelri , BT çalışanları , Bilgi teknolojilerine ilgi duyanlar ve mevcut mesleğinden memnun olmayıp yazılım sektörüne geçiş yapmak isteyen herkes için ideal bir başlangıç noktasıdır. Yazılım testinin temel ilkelerinden başlayarak, manuel test teknikleri, test süreçleri, hata yönetimi ve test otomasyonu gibi konuları adım adım öğreneceksiniz. Kurs boyunca, gerçek hayat senaryoları ve pratik örneklerle bilginizi pekiştirecek ve ISTQB Temel Seviye sınavına hazırlık yapacaksınız.\n\n\nYazılım testinin neden bu kadar önemli olduğunu anlamak, kaliteli yazılım geliştirme sürecinde nasıl katkıda bulunabileceğinizi keşfetmek ve iş dünyasında fark yaratacak yetkinlikler kazanmak için bu kursu alın. Test planlama, test stratejileri oluşturma, test araçlarını kullanma ve etkili hata raporlama gibi becerilerle, yazılım projelerinde kritik bir rol üstlenmeye hazır olacaksınız. Ayrıca, kurs sonunda sektördeki en iyi test uygulamalarını öğrenmiş ve kendinizi profesyonel olarak geliştirmiş olacaksınız.\n\n\nBu kurs, ISTQB Temel Seviye sınavına yönelik kapsamlı bir hazırlık sunar. Yazılım testi süreçleri, test teknikleri, hata yönetimi ve test otomasyonu gibi temel konuları kapsayan dersler ile sınava tam donanımlı şekilde hazırlanacaksınız. Bir çok Yapay Zeka destekli videonun yanında 20 şer soruluk zorlu pratik testleriyle, sınavda karşılaşabileceğiniz konulara dair bilginizi pekiştirme fırsatı bulacaksınız.\n\n\nISTQB sınavına yönelik eğitimimiz ve deneme sınavlarımız ile bilginizi test edecek ve sınav gününe hazır olacaksınız!\n\n\nBu eğitim içeriği ISTQB resmi ortağı olan Turkish Testing Board sitesindeki yayınlardan oluşturulmuştur. İlgili kaynağa Turkish Testing Board resmi sitesinden ulaşabilirsiniz.",
      "target_audience": [
        "Bu kurs, yazılım testi konusunda kariyer yapmak isteyen ya da bu alanda temel bilgi edinmek isteyen bireyler için tasarlanmıştır. Yazılım testine ilgi duyan, manuel ve otomasyon test süreçlerini öğrenmek isteyen, BT alanında çalışan veya çalışmayı hedefleyen kişiler için uygundur. Ayrıca yazılım geliştiriciler, proje yöneticileri ve iş analistleri gibi yazılım geliştirme sürecinde rol alan ve test süreçlerini daha iyi anlamak isteyen profesyoneller de bu kurstan faydalanabilir. Teknik geçmişi olmayan, yazılım dünyasına yeni adım atan bireyler için de uygun bir başlangıç noktasıdır."
      ]
    },
    {
      "title": "introduction to software testing بالعربي",
      "url": "https://www.udemy.com/course/introduction-to-software-testing-f/",
      "bio": "introduction to software testing in arabic",
      "objectives": [
        "معرفه الأساسيات الضروريه لدخول لمجال أختبار البرمجيات"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "CH01. Introduction to software testing": [
          "1.1.What is testing and its objectives",
          "1.2.Why testing is necessary",
          "1.3.Software testing myths"
        ],
        "CH02 . Prepare your testing mindset": [
          "2.1.intro",
          "2.2.error,bug,failure",
          "2.3.software specification",
          "2.4.Other source to get expected result",
          "2.5.testcase&myth2"
        ],
        "CH03 . Bug addressing": [
          "3.1.bug addressing",
          "3.2.testcase-execution-suit",
          "3.3.testcase document",
          "3.4.Maintainability test case",
          "3.5.do not"
        ],
        "CH04 . Levels of testing": [
          "4.1.unit testing and integration testing",
          "4.2.Drivers and Stubs",
          "4.3.system testing and acceptance testing"
        ],
        "CH05 . Test Case Design Techniques": [
          "5.1.whitebox and balckbox and EP",
          "5.2.BVA",
          "5.3.Decision Tree",
          "5.4.State Transition",
          "5.5.Use Case",
          "5.6.CFG",
          "5.7.White Box Techniques"
        ]
      },
      "requirements": [
        "لا تريد معرفه أي خبرات سابقه لدراسه هذا الكورس ولكن يفضل وجود معرفه بسيطه بالبرمجه"
      ],
      "description": "كورس مقدمه في مجال أختبار البرمجيات سنتعرف علي أهم الأساسيات وفهمها بطريقه بسيطه التي تساعدنا علي وضع أساس قوي عن المجال ونستطيع الخوض والأكمال بسهوله  وسوف نقوم بدراسه الآتي\nCH01 . Introduction to software testing\nCH02 . Prepare your testing mindset\nCH03 . Bug addressing\nCH04 . Levels of testing\nCH05 . Test Case Design Techniques\n\n\nكورس مقدمه في مجال أختبار البرمجيات سنتعرف علي أهم الأساسيات وفهمها بطريقه بسيطه التي تساعدنا علي وضع أساس قوي عن المجال ونستطيع الخوض والأكمال بسهوله  وسوف نقوم بدراسه الآتي\nCH01 . Introduction to software testing\nCH02 . Prepare your testing mindset\nCH03 . Bug addressing\nCH04 . Levels of testing\nCH05 . Test Case Design Techniques\n\n\nكورس مقدمه في مجال أختبار البرمجيات سنتعرف علي أهم الأساسيات وفهمها بطريقه بسيطه التي تساعدنا علي وضع أساس قوي عن المجال ونستطيع الخوض والأكمال بسهوله  وسوف نقوم بدراسه الآتي\nCH01 . Introduction to software testing\nCH02 . Prepare your testing mindset\nCH03 . Bug addressing\nCH04 . Levels of testing\nCH05 . Test Case Design Techniques\n\n\nكورس مقدمه في مجال أختبار البرمجيات سنتعرف علي أهم الأساسيات وفهمها بطريقه بسيطه التي تساعدنا علي وضع أساس قوي عن المجال ونستطيع الخوض والأكمال بسهوله  وسوف نقوم بدراسه الآتي\nCH01 . Introduction to software testing\nCH02 . Prepare your testing mindset\nCH03 . Bug addressing\nCH04 . Levels of testing\nCH05 . Test Case Design Techniques",
      "target_audience": [
        "أي شخص مهتم بدراسه أختبار البرمجيات"
      ]
    },
    {
      "title": "Automatyzacja testów: Selenium WebDriver Java od podstaw",
      "url": "https://www.udemy.com/course/automatyzacja-testow-selenium-webdriver-java-od-podstaw/",
      "bio": "Naucz się automatyzacji testów aplikacji webowych za pomocą Selenium WebDriver w Java dzięki przykładom na żywo",
      "objectives": [
        "Instalowania i konfigurowania wszystkich niezbędnych narzędzi",
        "Podstaw i średnio zaawansowanych zagadnień związanych z narzędziami takimi jak: Selenium WebDriver, IntelliJ, JUnit, Maven i DevTools",
        "Tworzenia projektu oraz jego niezbędnej konfiguracji do testów automatycznych",
        "Pracy z gotowym projektem",
        "Pisania testów automatycznych w języku Java",
        "Uruchamiania testów",
        "Generowania raportu z testów"
      ],
      "course_content": {},
      "requirements": [
        "Znajomość podstaw programowania"
      ],
      "description": "Jeśli chcesz szybko i sprawnie nauczyć się automatyzacji aplikacji webowych za pomocą Selenium WebDriver w języku Java, to ten kurs jest idealny dla Ciebie.\nWszystkie zagadnienia dokładnie tłumaczę na konkretnych przykładach.\nOtrzymasz dostęp do pobrania gotowego projektu który zawiera:\nSkonfigurowany Maven wraz z wymaganymi bibliotekami\nGotowy podstawowy framework\nPrzygotowane przykładowe testy\nPod wybranymi lekcjami przygotowałem dla Ciebie zadania do samodzielnego wykonania\nOdpowiedzi do zadań znajdują się w wymienionym powyżej projekcie\nOtrzymasz do dyspozycji specjalnie przygotowaną stronę webową do ćwiczeń i automatyzacji testów\n\n\nSelenium WebDriver\nSelenium WebDriver jest następcą Selenium RC. Selenium WebDriver akceptuje polecenia (wysyłane w języku Selenese lub przez Client API) i wysyła je do przeglądarki. Jest to realizowane za pomocą sterownika przeglądarki specyficznego dla przeglądarki, który wysyła polecenia do przeglądarki i pobiera wyniki. Większość sterowników przeglądarki faktycznie uruchamia i uzyskuje dostęp do aplikacji przeglądarki (takich jak Firefox , Google Chrome , Internet Explorer , Safari lub Microsoft Edge ); istnieje również sterownik przeglądarki HtmlUnit , który symuluje przeglądarkę za pomocą przeglądarki bezgłowej HtmlUnit.\nNa początku 2012 r. Simon Stewart (wynalazca WebDriver), który był wówczas z Google, oraz David Burns z Mozilli negocjowali z W3C, aby uczynić WebDriver standardem internetowym. W lipcu 2012 r. opublikowano wersję roboczą, a zalecenie wprowadzono w czerwcu 2018 r. Selenium WebDriver (Selenium 2.0) jest w pełni zaimplementowany i obsługiwany w Python , Ruby , Java i C#.",
      "target_audience": [
        "Osoby rozpoczynające swoją przygodę z automatyzacją testów",
        "Testerzy manualni, którzy są zainteresowani automatyzacją testów",
        "Testerzy automatyzujący, którzy jeszcze nie znają zagadnień automatyzacji front-endu za pomocą Selenium WebDriver",
        "Deweloperzy, którzy chcą poszerzyć swoją wiedzę i umiejętności w tematyce automatyzacji testów"
      ]
    },
    {
      "title": "Teste de Software - A Arte de ser um Usuário com Técnica!",
      "url": "https://www.udemy.com/course/conceitos-de-teste-e-processo-com-ia/",
      "bio": "Processos e Diretrizes de Teste. Otimizando o dia a dia com IA.",
      "objectives": [
        "IA no dia a dia do teste manual - otimizando processos e tornando o teste mais eficiente",
        "O que é Teste de Software? - Conceito, propósito e o papel fundamental da atividade de testes no ciclo de vida do desenvolvimento.",
        "Por que o Teste é Importante? - Impactos na qualidade do produto, experiência do usuário e redução de riscos em produção",
        "Metodologias de Desenvolvimento: Cascata e Ágil - Comparativo prático entre os modelos, com foco na atuação da área de QA em cada abordagem.",
        "O Processo de Teste Etapas essenciais: planejamento, elaboração, execução, registro e encerramento.",
        "O Papel do Analista de Teste no Ágil Atuação colaborativa, mindset multidisciplinar e integração com o time de desenvolvimento.",
        "Técnicas e Tipos de Teste Teste funcional, exploratório, regressivo, caixa preta, entre outros — como e quando aplicar.",
        "Gestão de Defeitos e Relato de Bugs Como identificar, documentar e comunicar falhas de forma eficiente e objetiva.",
        "Roteiro de Teste Funcional e Gherkin Como estruturar cenários de teste com precondições, passos e resultados esperados, utilizando o formato Dado–Quando–Então"
      ],
      "course_content": {},
      "requirements": [
        "Não há pré-requistos. Este curso é para todos os interessados em QUALIDADE de Software."
      ],
      "description": "Com a dominância de conteúdos gerado por inteligência artificial, onde qualquer um pode escrever sobre qualquer coisa, a diferença está na validação. A IA produz, mas não entende o contexto - e veremos isso no módulo de IA e o teste manual. Ela replica, mas não questiona. No universo dos testes de software, isso é perigoso — porque o que está em jogo é a qualidade, a segurança e a confiança no que se entrega.  Por isso, ainda vale INVESTIR em um curso preparado por quem conhece a área e tem experiência comprovada!\nVamos ao Curso:\nHoje conhecido como “Teste Humanizado”, o teste funcional manual está voltando a ganhar relevância nas equipes de qualidade de software. Os holofotes sempre estiveram voltados para a automação de testes — e com razão. A automação trouxe velocidade, escalabilidade e eficiência para diversos processos. No entanto, à medida que o foco do desenvolvimento de software passou a se concentrar na experiência do usuário e na personalização, ficou claro que nem tudo pode ser validado por scripts e robôs.\nAfinal, estamos criando produtos para pessoas. E quem melhor do que uma pessoa para perceber as nuances, interpretações e sentimentos que uma aplicação pode despertar? O olhar humano continua sendo essencial para validar fluxos, identificar inconsistências sutis e perceber aquilo que escapa ao olhar programado das máquinas.\nEste curso é sobre o “teste nosso de cada dia”. Uma conversa direta e descomplicada sobre os testes manuais — especialmente os de caixa preta, tão presentes no cotidiano das equipes de QA. Aqui, você encontrará reflexões, boas práticas e orientações práticas para tornar o teste funcional manual mais eficiente, mais estratégico e, acima de tudo, mais valorizado.\nAcelerando O processo de Teste Manual com IA\nComo usar a IA no Dia a Dia do QA\nPrompts\nBrowser IA - explicação rápida.\n\n\nSejam todos muito bem-vindos!\nEste curso é seu espaço para refletir, aprender e se reconectar com o valor humano por trás da qualidade do software.",
      "target_audience": [
        "Analistas de Testes",
        "Gerentes de Projetos - Ágeis / Castata",
        "Gerentes de Sistemas",
        "Gerentes de Qualidade",
        "Desenvolvedores",
        "Product Owner",
        "Scrum Master",
        "Coordenadores de TI",
        "Líderes de TI"
      ]
    },
    {
      "title": "A-Z™ | Yazılım Test Uzmanlığı",
      "url": "https://www.udemy.com/course/a-zyazilimtestuzmanligi/",
      "bio": "Temel Kavramlar&Test Senaryoları&Mülakat Soruları&Web/Mobil/API Testleri&Java İle Programlamaya Giriş&Jira&Postman",
      "objectives": [
        "Yazılım Testi Nedir?",
        "Yazılım Testinin Temel Kavramları",
        "Test Türleri",
        "Test Senaryosu Nasıl Yazılır?",
        "Web Testleri",
        "Mobil Testleri",
        "Java İle Programlamaya Giriş",
        "Postman Nasıl Kullanılır?",
        "Postman ile API Testi",
        "Jira Nasıl Kullanılır?",
        "Mülakat Soruları",
        "JMeter İle Performans Testine Giriş"
      ],
      "course_content": {},
      "requirements": [
        "Bilmeniniz Gereken Her Şeyi Baştan Öğreneceksiniz"
      ],
      "description": "TR\n\n\n\"A-Z™ | Yazılım Test Uzmanlığı\"  eğitiminden merhabalar!\nYazılım Testi öğrenmek için ihtiyacınız olan her şeye bu kurs ile erişebilirsiniz. Bu kursun amacı  Yazılım Test & QA alanında çalışmak isteyenler için bir yol gösterici , sektöre girmeden önce bilinmesi gereken temel kavramlardan başlayarak adım adım kendinizi geliştirmenizi sağlayan bir fırsat.\n\n\nKursta İşlenen  Konular\n\n\nBölüm 1 : Giriş\n•Giriş\n•Yazılım Testi Nedir?\n\n\nBölüm 2 : Temel Kavramlar\n•SDLC\n•SDLC Modelleri\n•STLC\n•Yazılım Testinin 7 Prensibi\n•Yazılım Test Uzmanın Kariyer Yolu\n•Temel Kavramlar Değerlendirme Soruları\n\n\nBölüm 3 : Yazılım Test Türleri\n•Genel Bakış\n•Manuel Test\n•Otomasyon Testi (Automation Testing)\n•Manuel Test ve Otomasyon Testinin Karşılaştırılması\n•Beyaz Kutu Testi (White Box Testing)\n•Kara Kutu Testi (Black Box Testing) ve Kara Kutu Test Teknikleri\n•Fonksiyonel Testler & Fonksiyonel Olmayan Testler (Functional&Non-Functional T.)\n•Birim Testi (Unit Testing)\n•Entegrasyon Testi (Integration Testing)\n•Sistem Testi (System Testing)\n•Kabul Testi (Acceptance Testing)\n•Test Türleri Değerlendirme Soruları\n\n\nBölüm 4 : Test Senaryolarının Hazırlanması\n•Test Senaryosu Nedir?\n•Test Senaryoları İçin Şablon Oluşturalım\n•Test Senaryosu – Pratik\n•Test Senaryoları Değerlendirme Soruları\n\n\nBölüm 5 : Web, Mobil ve API Testleri\n•Web Testi Nedir?\n•Web Testi – Pratik\n•Mobil Test Nedir?\n•Android Studio ve Emülatör Ayarları\n•Mobil Test – Pratik\n•API & Postman Nedir?\n•HTTP Durum Kodları & Request-Response Yapısı\n•Postman Kurulumu Yapalım\n•Postman İle API Testi – Pratik\n•Web, Mobil ve API Testleri Değerlendirme Soruları\n\n\nBölüm 6 : JIRA\n•JIRA Nedir?\n•JIRA Üyelik ve Proje Oluşturma\n•Issue Oluşturma ve Atama İşlemleri\n•Issue Oluşturma ve Özelleştirme\n•'Issue Type' Ekranının Özelleştirilmesi\n•Çeşitli Özellikler -1\n•Çeşitli Özellikler -2\n•Çeşitli Özellikler -3\n•Çeşitli Özellikler -4\n•JIRA Değerlendirme Soruları\n\n\nBölüm 7 : Java İle Programlamaya Giriş\n•Java nedir?\n•Hello World!\n•Değişkenler\n•Dizgiler\n•Diziler\n•Operatörler\n•Döngüler\n•Koşullar (if -else if - else )\n•Java Değerlendirme Soruları\n\n\nBölüm 8: Mülakat Soruları\n•Mülakat Soruları\n\n\nEN\n\n\n\n\nHello from the \"A-Z™ | Yazılım Test Uzmanlığı\" training!\n\n\nYou can access everything you need to learn Software Testing with this course. The aim of this course is to guide those who want to work in the field of Software Testing & QA. It is an opportunity to improve yourself step by step, starting from the basic concepts that should be known before entering the sector.\n\n\n\n\nTopics Covered in the Course\n\n\nPart 1: Introduction\n\n\n•Introduction\n•What is Software Testing?\n\n\nPart 2: Basic Concepts\n•SDLC\n•SDLC Models\n•STLC\n•The 7 Principles of Software Testing\n•Software Tester's Career Path\n•Basic Concepts Evaluation Questions\n\n\nPart 3: Types of Software Testing\n•Overview\n•Manual Test\n•Automation Testing\n•Comparison of Manual Testing and Automation Testing\n•White Box Testing\n•Black Box Testing and Black Box Test Techniques\n•Functional Tests & Non-Functional Tests\n•Unit Testing\n• Integration Testing\n•System Testing\n•Acceptance Testing\n•Test Types Evaluation Questions\n\n\nPart 4 : Preparation of Test Scenarios\n• What is the Test Scenario?\n• Let's Create a Template for Test Scenarios\n•Test Scenario – Practice\n•Test Scenarios Evaluation Questions\n\n\nPart 5 : Web, Mobile and API Tests\n•What is Web Testing?\n•Web Test – Practice\n•What is Mobile Testing?\n•Android Studio and Emulator Settings\n•Mobile Test – Practice\n•What is API & Postman?\n• HTTP Status Codes & Request-Response Structure\n• Let's Install Postman\n• API Testing with Postman – Practice\n•Web, Mobile and API Tests Evaluation Questions\n\n\nPart 6 : JIRA\n•What is JIRA?\n•JIRA Membership and Project Creation\n•Issue Creation and Assignment Procedures\n•Issue Creation and Customization\n• Customizing the 'Issue Type' Screen\n•Various Features -1\n•Various Features -2\n•Various Features -3\n•Various Features -4\n•JIRA Evaluation Questions\n\n\nChapter 7 : Introduction to Programming with Java\n•What is Java?\n•Hello World!\n•Variables\n•Strings\n•Series\n•Operators\n•Loops\nConditions (if -else if - else )\n•Java Evaluation Questions\n\n\nPart 8 : Interview Questions\n• Interview Questions",
      "target_audience": [
        "Yazılım test alanına yeni başlayacak kişiler",
        "Yazılım test teknikleri hakkında bilgi sahibi olmak isteyenler",
        "Yazılım Test Uzmanı olarak çalışmak isteyen kişiler",
        "Test araçlarının nasıl kullanıldığını öğrenmek isteyen kişiler",
        "Yazılım Testi alanında çalışıp bilgisini pekiştirmek isteyen kişiler"
      ]
    },
    {
      "title": "C# ile Test Driven Development",
      "url": "https://www.udemy.com/course/c-ile-test-driven-development/",
      "bio": "C# ta Birim Testleri ile Test Güdümlü Uygulama Geliştirme",
      "objectives": [
        "Yazılım geliştirmede yeni bir bakış açısı kazanabilecek",
        "Test güdümlü uygulama geliştirilebilecek",
        "Test güdümlü uygulama geliştirilebilecek",
        "Test güdümlü uygulama geliştirilebilecek"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "What is Unit Testing ?",
          "What is Test Driven Development ?",
          "Why TDD is Important?"
        ],
        "Basics of Unit Testing": [
          "Create First Unit Test Project",
          "Demo: Creating First Unit Test",
          "Demo: Debugging Unit Test"
        ],
        "Test Lifecycle": [
          "Introduction Test Lifecycle",
          "Demo: Test Level",
          "Demo: Class Level",
          "Demo: Assembly Level"
        ],
        "Unit Testing for Exceptions": [
          "Demo: ExpectedException"
        ],
        "Asserting the Facts": [
          "Introduction Asserts",
          "Demo: Assert - I",
          "Demo: Assert - II",
          "Demo: Assert - III",
          "Demo: Assert - IV",
          "Demo: CollectionAssert - I",
          "Demo: CollectionAssert - II",
          "Demo: CollectionAssert - III",
          "Demo: StringAssert"
        ],
        "TestContext": [
          "Introduction TestContext",
          "Demo: TestContext",
          "Introduction Data Driven Unit Test",
          "Demo: Data Driven Unit Test I",
          "Demo: Data Driven Unit Test II"
        ],
        "Test Attributes": [
          "Demo: Test Attributes I",
          "Demo: Test Attributes II"
        ],
        "Ordered Test": [
          "Demo: Ordered Test"
        ],
        "Advanced": [
          "Demo: Unit Testing vs Integration Testing",
          "Demo: Mocking with Unit Test"
        ],
        "Test First Development": [
          "Introduction Test First Development",
          "Demo: Red",
          "Demo: Green",
          "Demo: Refactor"
        ]
      },
      "requirements": [
        "Temel C# bilgisi yeterlidir."
      ],
      "description": "Bu eğitimde, günümüzde hem popüler olmaya başlayan hemde ihtiyaç haline gelen Test Güdümlü Geliştirme (Test Driven Development) metodolojisi anlatılmaktadır. Test Güdümlü Uygulama Geliştirmenizi sağlayacak olan Birim Testleri, Microsoft'un test kütüphanesi ile tüm yönleriyle birlikte ele alınıp, örnek test senaryolarıyla anlatılmaktadır. Ayrıca yapılan tasarım hatalarının testlere etkisi incelenmekte ve çözüme kavuşturulmaktadır. Bu eğitimde, günümüzde hem popüler olmaya başlayan hemde ihtiyaç haline gelen Test Güdümlü Geliştirme (Test Driven Development) metodolojisi anlatılmaktadır. Test Güdümlü Uygulama Geliştirmenizi sağlayacak olan Birim Testleri, Microsoft'un test kütüphanesi ile tüm yönleriyle birlikte ele alınıp, örnek test senaryolarıyla anlatılmaktadır. Ayrıca yapılan tasarım hatalarının testlere etkisi incelenmekte ve çözüme kavuşturulmaktadır. Bu eğitimde, günümüzde hem popüler olmaya başlayan hemde ihtiyaç haline gelen Test Güdümlü Geliştirme (Test Driven Development) metodolojisi anlatılmaktadır. Test Güdümlü Uygulama Geliştirmenizi sağlayacak olan Birim Testleri, Microsoft'un test kütüphanesi ile tüm yönleriyle birlikte ele alınıp, örnek test senaryolarıyla anlatılmaktadır. Ayrıca yapılan tasarım hatalarının testlere etkisi incelenmekte ve çözüme kavuşturulmaktadır. Bu eğitimde, günümüzde hem popüler olmaya başlayan hemde ihtiyaç haline gelen Test Güdümlü Geliştirme (Test Driven Development) metodolojisi anlatılmaktadır. Test Güdümlü Uygulama Geliştirmenizi sağlayacak olan Birim Testleri, Microsoft'un test kütüphanesi ile tüm yönleriyle birlikte ele alınıp, örnek test senaryolarıyla anlatılmaktadır. Ayrıca yapılan tasarım hatalarının testlere etkisi incelenmekte ve çözüme kavuşturulmaktadır.",
      "target_audience": [
        "Unit Test hakkında bilgi sahibi olmak isteyenler.",
        "Unit Testing hakkında eksikliklerini tamamlamak isteyenler.",
        "Test Güdümlü Geliştirme hakkında bilgi sahibi olmak isteyenler.",
        "Test Güdümlü Uygulama geliştirmek isteyenler."
      ]
    },
    {
      "title": "FAPS - Fundamentos de Automatización de Pruebas de Software",
      "url": "https://www.udemy.com/course/faps-fundamentos-de-automatizacion-de-pruebas-de-software/",
      "bio": "Empieza tu entrenamiento en automatización",
      "objectives": [
        "La importancia de la automatización de pruebas en el proceso de prueba de software.",
        "Desarrollar un entendimiento de las similitudes y diferencias del uso de las herramientas para automatizar.",
        "Evaluar y seleccionar una herramienta de automatización.",
        "La manera mas efectiva para construir una organización que soporte el servicio de pruebas automatizadas.",
        "Desarrollar estrategias para planeación, diseño y ejecución de automatización.",
        "Como utilizar los resultados de la automatización para darle valor a la organización.",
        "Como aprovechar una organización efectiva, personal, herramientas y procesos.",
        "Problemáticas de los datos en la automatización y como resolverla.",
        "Desarrollar scripts de prueba, que sean reusables, mantenibles y que se conviertan en un activo interesante de la empresa a través un Testware de automatización.",
        "Colectar, capturar y usar las métricas",
        "Identificar los estándares significativos, mantenibles y fáciles de usar.",
        "Hacer tu primer programa de automatización en Selenium y en Watir"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Definiciones": [
          "Conceptos básicos",
          "Cuando es apropiado automatizar",
          "Tipos de Pruebas Automatizadas",
          "Razones para tener una prueba automatizada"
        ],
        "Herramientas": [
          "Selección de herramientas de pruebas de automatización",
          "Qué es Selenium"
        ],
        "Proceso de Automatización": [
          "Proceso de Automatización"
        ],
        "Arquitecturas": [
          "Arquitecturas de pruebas automatizadas"
        ],
        "Organización del área": [
          "Roles y responsabilidades en automatización"
        ],
        "Aspectos de la Automatización": [
          "Datos en la automatización",
          "Métricas en la automatización",
          "Selección de cuales pruebas automatizar"
        ],
        "Métodos de Automatización": [
          "Métodos de pruebas automatizadas"
        ],
        "Pruebas de Desempeño": [
          "Pruebas de Desempeño"
        ]
      },
      "requirements": [
        "Experiencia en Pruebas Manuales al menos un año.",
        "Acreditar el entrenamiento de CEPS – Certificación de Ejecución de Pruebas de Software o Estándar 1252 de Testing."
      ],
      "description": "En este curso de FAPS - Fundamentos de Automatización de Pruebas de Software, aprenderás la terminología base y los fundamentos para iniciarte en la disciplina de automatización de pruebas, así como conocer las herramientas principales y como evaluarlas, comprender el proceso de automatización, como construir una organización de automatización entre otros temas, y a realizar tu primer Hola Mundo en el lenguaje de automatización de Selenium y otro en WATIR. Con este curso inicias la educación continua en automatización.",
      "target_audience": [
        "Ejecutores, analistas, ingenieros , líderes, coordinadores y gerentes de prueba de software interesados en conocer y aprender sobre el uso de automatización de pruebas.",
        "Testers, ingenieros de ambiente de prueba y desarrollo, interesados en automatizar procesos de generación de datos.",
        "Lideres de prueba, líderes de proyecto, scrum masters, product owners que deseen conocer sobre la automatización de prueba, sus artefactos, fases y beneficios.",
        "Maestros docentes y estudiantes universitarios que deseen iniciarse en la automatización de pruebas de software."
      ]
    },
    {
      "title": "Pengujian Proyek Sistem Informasi",
      "url": "https://www.udemy.com/course/pengujian-proyek-sistem-informasi/",
      "bio": "Konsep Dasar Pengujian, Sirkumtansi Pengujian, Tingkatan Pengujian",
      "objectives": [],
      "course_content": {
        "Konsep Dasar Pengujian": [
          "Ringkasan Modul",
          "Dasar Pengujian",
          "Profesi Penguji",
          "Alat Pengujian Perangkat Lunak",
          "Konsep Dasar Pengujian"
        ],
        "Sirkumtansi Pengujian": [
          "Perencanaan Pengujian",
          "Kasus Uji",
          "Manajemen Bug",
          "Sirkumtansi Pengujian"
        ],
        "Tingkatan Pengujian": [
          "Unit Test",
          "Pengujian Integrasi",
          "Uji Sistem & UAT",
          "Pengujian Yang Lain",
          "Tingkatan Pengujian"
        ]
      },
      "requirements": [
        "Student memahami konsep dasar sistem informasi"
      ],
      "description": "Course ini memberikan informasi seputar pengujian (testing) untuk proyek sistem informasi. Testing atau pengujian dalam sistem informasi mempunyai beberapa tahapan atau level, mulai dari unit test (pengujian unit per unit), integration test (pengujian terintegrasi), system test (pengujian sistem), user acceptance test (pengujian penerimaan pengguna) dan test-test lain seperti sanity test, smoke test, regression test, stress test, usability test, dan performance test, yang membantu sistem/ aplikasi dapat berjalan dengan lancar tanpa error atau cacat. Selain level testing, materi inipun menjelaskan hal-hal lain dalam pengujian yang berkenaan dengannya seperti test case (uji kasus), test plan (perencanaan pengujian), bug management sampai dengan profesi Quality Assurance Tester (penguji sistem untuk kualitas yang terbaik). Profesi QA tester sudah mendapat tempat sekarang dengan banyaknya perusahaan start-up IT di Indonesia. Hal ini memberikan peluang yang besar bagi teman-teman yang mempertimbangkan pekerjaan ini sebagai profesi.\nVideo pembelajaran pengujian sistem informasi ini berlangsung selama kurang dari 2 jam dengan materi-materi yang telah disusun sedemikian rupa agar dapat mudah dicerna, dipahami dan dijalankan dengan mempelajarinya sungguh-sungguh.\nDiharapkan dari materi pembelajaran ini, audience dapat memahami langkah-langkah dan cara-cara pengujian sistem atau aplikasi dalam dunia sistem informasi. Selain memahami, audience diharapkan juga dapat menjalankan pengujian untuk sistem/ aplikasi/ perangkat lunak yang kini sudah sangat banyak pemakaiannya.",
      "target_audience": [
        "Student yang ingin belajar pengujian proyek sistem informasi"
      ]
    },
    {
      "title": "4 EXAMENS ISTQB FONDATION V4 - COMPLETS AVEC DETAILS",
      "url": "https://www.udemy.com/course/4-examens-istqb-fondation-v4-complets-avec-details/",
      "bio": "4 examens qualitatifs avec explications détaillées sur la bonne réponse ET sur les réponses incorrectes",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Chaque examen se compose comme un vrai examen :\n- contient 40 questions  qui abordent l'ensemble des chapitres du syllabus ISTQB FONDATION V4 (dernière version)\n- contient chaque niveau attendu par la certification ISTQB : K1 (Mémorisation), K2 (Compréhension), K3 (exercice pratique - schémas )\n- contient pour chaque question, l'explication détaillée de la bonne réponse et de pourquoi les autres réponses sont incorrectes. Ce qui rend nos examens UNIQUES sur la plateforme Udemy, aucun autre examen ne sera aussi complet et précis.\n\n\n\n\nVoici un extrait de nos examens blanc :\n\n\n\n\nQUESTION 1 - NIVEAU K2\n\n\n\n\nPlus de tests sont effectués sur la partie du système qui présente plus de défauts que la moyenne. Lequel des principes de test suivants est appliqué ?\n\n\na. Paradoxe des pesticides\nb. Le test dépend du contexte\nc. Absence d'erreurs fallacieuses\nd. Regroupement des défauts\n\n\n\n\nREPONSE ET EXPLICATIONS DETAILLEES\n\n\nRéponse : d. Regroupement des défauts\nExplication :\nLe principe du regroupement des défauts stipule que :\n\"La plupart des défauts sont généralement concentrés dans un nombre relativement réduit de modules.\"\nAutrement dit, une petite partie du système contient souvent la majorité des défauts, ce qui incite les testeurs à concentrer davantage d’efforts de test sur ces zones.\nLa phrase de la question :\n\"Plus de tests sont effectués sur les parties du système testé qui présentaient plus de défauts que la moyenne.\" illustre parfaitement ce principe, car on cible les zones historiquement problématiques avec plus de tests.\n\n\nPourquoi les autres options sont incorrectes :\na. Paradoxe des pesticides : Le paradoxe des pesticides indique qu'en effectuant toujours les mêmes tests sur le même code, on finit par \"ne plus détecter de nouveaux défauts\". Autrement dit, si on continue à tester de la même manière, les tests deviennent moins efficaces au fur et à mesure. Cependant, cette notion ne se réfère pas spécifiquement à la pratique de tester plus intensivement les parties du système avec plus de défauts. C'est un phénomène qui survient lorsque les tests existants ne découvrent plus de nouveaux défauts, mais cela ne correspond pas au principe de se concentrer sur les zones à défauts plus nombreux.\nb. Le test dépend du contexte : Le test dépend du contexte fait référence au fait que les stratégies de test doivent être adaptées en fonction du contexte du projet, de l'application ou du produit testé. Par exemple, un test d'interface utilisateur ne sera pas mené de la même manière qu'un test de performance. Cela ne correspond pas directement à l'idée de tester davantage les parties du système ayant plus de défauts. Cette notion est plus liée à l'adaptation des tests à des situations spécifiques, mais pas spécifiquement à l'intensification des tests dans des zones à défauts concentrés.\nc. Absence d’erreurs fallacieuses : L'absence d'erreurs fallacieuses signifie qu'un test ne doit pas laisser croire qu'un défaut est absent alors qu'il en existe réellement. Cela se réfère à éviter des tests qui pourraient être trompeurs et induire en erreur, par exemple en vérifiant uniquement les bonnes parties du code ou en faisant des hypothèses incorrectes. Ce principe n'est pas directement lié à la pratique de tester plus intensivement les zones du système avec plus de défauts, il traite plutôt de la manière dont on évite des erreurs dans les tests eux-mêmes.",
      "target_audience": [
        "Personnes qui souhaitent travailler dans la qualité logiciel / assurance qualité"
      ]
    },
    {
      "title": "自动化测试技术",
      "url": "https://www.udemy.com/course/ovjoydxi/",
      "bio": "自动化测试入门",
      "objectives": [
        "1.了解自动化测试难开展的原因",
        "2.掌握对各种测试数据的度量",
        "3.了解对于测试人员、开发人员的质量评价指标",
        "4.掌握基于4个100%自动化测试转型架构"
      ],
      "course_content": {
        "课程导读": [
          "课程简介",
          "讲师介绍",
          "课程大纲"
        ],
        "课程内容": [
          "自动化测试技术的分支",
          "TDDB与单元测试",
          "界面测试演示与研讨",
          "接口测试演示与研讨",
          "提升效率"
        ],
        "课程回顾": [
          "课后寄语"
        ]
      },
      "requirements": [
        "具有一定自动化测试工作经验"
      ],
      "description": "自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。通常，在设计了测试用例并通过评审之后，由测试人员根据测试用例中描述的规程一步步执行测试，得到实际结果与期望结果的比较。\n本课程概要阐述了自动化测试中所需的技术，并针对各个技术环节提出了优化的建议和实例。\n以下角色是本课程的核心受众及其收益：\n测试人员\n·学习基本的Selenium测试技术\n·学习判断可测试性问题的标准\n·了解封装测试用例的常规策略（高级测试人员）\n\n\n本节课程是由授课老师与三节课合作制作的。在此，要特别感谢老师的辛苦付出！经历了课程立项、设计、开发中的众多环节，我们才能最终为你呈现现在的这门课程。无论是授课老师还是三节课团队，都希望这门课程能够让你有所收获，希望同学们结合个人工作情况，学以致用。\n本课程版权归三节课所有，未经书面同意私自录制、转载等行为均属侵权行为。课程内的所有内容，包括但不限于视频、文字、图片均由三节课公司或其他权利人依法拥有其知识产权，包括但不限于著作权、商标权、专利权等。未经三节课公司的明确书面特别授权，任何人不得为任何目的使用以及向任何自然人或单位提供出售、营销、出版或利用三节课官网上提供的任何内容或服务。如有违反，您将承担由此给三节课公司或其他权利人造成的一切损失。",
      "target_audience": [
        "1.自动化测试方向从业者",
        "2.寻求自动化测试量化管理方法的技术管理者",
        "3.对自动化测试感兴趣的学习者"
      ]
    },
    {
      "title": "ISTQB FOUNDATION LEVEL TÜM KONULAR SORU BANKASI",
      "url": "https://www.udemy.com/course/istqb-foundation-level-tum-konular-soru-bankasi/",
      "bio": "Tüm Konuların Alıştırma Soruları ve Sınav Tarzını Anlamaya Yönelik Sorularla Beraber 400 Soruluk Eğitim Seti",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Bu kapsamlı kurs, öğrencilere her seviyede sınavlara hazırlık yapma ve konuları derinlemesine anlama imkanı sunan 400 soruluk bir eğitim seti içermektedir. Kurs, her biri dikkatle seçilmiş ve çeşitli zorluk seviyelerinde hazırlanmış sorulardan oluşmaktadır. Bu eğitim seti, tüm derslerde başarılı olmanız için ihtiyaç duyduğunuz bilgi ve becerileri geliştirmenizi sağlar.\nKurs İçeriği:\nAlıştırma Soruları: Her konunun sonunda yer alan, öğrenmeyi pekiştiren ve bilgiyi test eden sorular.\nSınav Tarzı Sorular: Gerçek sınavlara benzer sorularla sınav pratiği yapma fırsatı.\nDetaylı Çözümler: Tüm soruların adım adım çözümleri, doğru ve yanlış cevapların nedenlerini açıklayan ayrıntılı açıklamalar.\nBu eğitim seti, öğrencilere sadece bilgi vermekle kalmaz, aynı zamanda sınavlarda karşılaşabilecekleri soru tarzlarını anlamalarına ve sınav stresini azaltmalarına yardımcı olur. Öğrenciler, konuları daha iyi anlamak ve sınavlarda yüksek başarı elde etmek için bu kursu kullanabilirler. Hem bireysel çalışmalarda hem de grup çalışmalarında kullanılabilir, öğretmenler ve öğrenciler için mükemmel bir kaynaktır. Bu kurs, hedeflerinize ulaşmanız ve akademik başarıya giden yolda size rehberlik etmek için tasarlanmıştır.\n\"Tüm Konuların Alıştırma Soruları ve Sınav Tarzını Anlamaya Yönelik Sorularla Beraber 400 Soruluk Eğitim Seti\" ile öğrenme yolculuğunuzda önemli bir adım atıyorsunuz. Bu set, her konu için özenle hazırlanmış alıştırma soruları ve sınav tarzı sorularla doludur. Amacımız, bilgilerinizi pekiştirmeniz ve sınavlara en iyi şekilde hazırlanmanızı sağlamaktır. Sorular, hem konuları derinlemesine anlamanızı hem de sınav stratejilerinizi geliştirmenizi hedeflemektedir. Başarıya giden yolda yanınızdayız. Başarılar dileriz!",
      "target_audience": [
        "ISTQB sınavına gireceklere yönelik"
      ]
    },
    {
      "title": "Examens de préparation au Certificat ISTQB TEST MANAGER V3",
      "url": "https://www.udemy.com/course/examens-de-preparation-au-certificat-istqb-test-manager-v3/",
      "bio": "Plus que 100 examens pour réussir la certification ISTQB TEST MANAGER-Non officiel",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Faites progresser votre carrière en renforçant votre expertise en matière de tests.\nApprenez à travers les meilleures pratiques et des exemples concrets\nDécouvrez les méthodologies de projets de logiciels de test les plus récentes\nAméliorez l'efficience et l'efficacité de votre équipe\nCela peut aider à réduire les défauts et à rehausser le profil de votre équipe.\nApprenez d'un expert reconnu de l'industrie dans les tests de logiciels, la qualité et la gestion de projet\nVous préparez à vous présenter à l'examen de certification pour le niveau avancé de l'ISTQB : TEST MANAGER ? Vous êtes au bon endroit. Résolvez les tests et gagnez en confiance. Nous n'offrons pas des centaines ou des milliers de questions, mais un ensemble de questions précises sachant que cela vous fera plonger profondément dans votre océan de connaissances et renforcera les connaissances. Ces documents de test vont vous donner une véritable sensation d'examen et vous aideront à changer le processus de pensée que vous êtes entraine de passer votre certification ISTQB TEST MANAGER. Ces documents ont été élaborés sur la base de l'examen en temps réel. Vous trouverez peut-être plus souvent de longues questions basées sur des scénarios, car ce sont les bonnes questions pour évaluer votre compréhension en tant que responsable de test et votre maturité dans l'industrie. Bonne chance pour ton examen et fais de ton mieux.\n\n\n\n\n\"This material is not accredited with the ISTQB\".\n\n\nISTQB is a registered trademark of the International Software Testing Qualifications Board.\n\n\nje ne suis pas affilié à ISTQB , ce cours n'est pas officiel",
      "target_audience": [
        "Toute personne souhaitant passer l'examen pour devenir Test Manager certifié",
        "Les testeurs souhaitant améliorer leurs connaissances dans les méthodologies et techniques de gestion des tests.",
        "Test Managers, Test Leaders et Test Program Managers, .",
        "Toute personne impliquée dans le test de projets de projets logiciels (y compris les testeurs, les ingénieurs, les analystes, les consultants, les développeurs"
      ]
    },
    {
      "title": "Test API với REST ASSURE - Phần 1",
      "url": "https://www.udemy.com/course/rest-assure-phan-1/",
      "bio": "Xây dựng một framework kiểm tra API sử dụng Serenity BDD & Rest-Assure",
      "objectives": [
        "Xây dựng các phương pháp có thể tái sử dụng, viết các loại thử nghiệm khác nhau",
        "Thực hiện các bài kiểm tra nhanh hơn bằng cách chạy chúng song song",
        "Chạy các bài kiểm tra chọn lọc JUnit bằng cách sử dụng Thẻ",
        "Xuất bản các báo cáo",
        "Viết kịch bản Cucumber được tích hợp với Serenity BDD",
        "Git/GitHub",
        "Thực hiện CI bằng cách tích hợp dự án với Jenkins & GIT"
      ],
      "course_content": {},
      "requirements": [
        "Hiểu biết ngôn ngữ Java, API."
      ],
      "description": "Trong thế giới công nghệ phát triển nhanh chóng, việc kiểm tra Dịch vụ Web, đặc biệt là tự động hóa kiểm tra API, đã trở thành một kỹ năng vô cùng quan trọng đối với các kỹ sư QA, kỹ sư tự động hóa và nhà phát triển phần mềm. Việc tự động hóa API không chỉ giúp tăng tốc quá trình kiểm thử mà còn nâng cao chất lượng, tính ổn định và độ tin cậy của sản phẩm.\nKhóa học này sẽ cung cấp cho bạn những kiến thức và kỹ năng cần thiết để xây dựng một framework kiểm tra API mạnh mẽ và hiệu quả. Bạn sẽ được học cách sử dụng Serenity BDD – một framework tự động kiểm tra mã nguồn mở tích hợp với các công cụ phổ biến như Selenium, JUnit, Cucumber BDD và Rest-Assured. Điều này giúp bạn phát triển các phương pháp kiểm thử API tự động, tối ưu hóa quy trình kiểm thử và đảm bảo chất lượng phần mềm.\nKhóa học sẽ tập trung vào những kỹ năng thực tế:\nXây dựng các phương thức kiểm thử tái sử dụng giúp tiết kiệm thời gian và công sức khi kiểm tra API.\nData Driven Testing: Kiểm tra với nhiều bộ dữ liệu khác nhau để nâng cao khả năng kiểm thử và đảm bảo độ chính xác.\nKiểm thử song song để tăng tốc độ kiểm tra và giảm thời gian phản hồi.\nQuản lý thử nghiệm thông qua thẻ JUnit: Chạy thử nghiệm chọn lọc giúp bạn dễ dàng quản lý các kịch bản kiểm thử.\nTạo kịch bản kiểm thử với Cucumber và tích hợp với Serenity BDD giúp viết các bài kiểm thử dễ đọc, dễ hiểu.\nTích hợp với Git/GitHub và thiết lập môi trường CI (Continuous Integration) thông qua Jenkins để tự động hóa quy trình kiểm thử trong dự án phần mềm.\nKết quả học viên đạt được:\nViết các phương pháp kiểm thử tái sử dụng để tiết kiệm thời gian và công sức khi thực hiện kiểm thử API.\nThực hiện kiểm thử nhanh hơn thông qua việc chạy song song các bài kiểm thử.\nQuản lý kiểm thử hiệu quả bằng cách sử dụng thẻ JUnit để chọn lọc và chạy các bài kiểm thử.\nXuất bản báo cáo kiểm thử rõ ràng, chi tiết, giúp bạn dễ dàng theo dõi tiến trình và kết quả.\nTạo kịch bản Cucumber tích hợp Serenity BDD để giúp quy trình kiểm thử trở nên trực quan và dễ dàng theo dõi.\nTích hợp Git/GitHub giúp quản lý mã nguồn và phối hợp làm việc trong nhóm hiệu quả hơn.\nThiết lập CI bằng cách tích hợp với Jenkins & Git, đảm bảo quá trình kiểm thử được tự động hóa và liên tục.\nYêu cầu:\nKiến thức cơ bản về ngôn ngữ lập trình Java và API.\nKhóa học này dành cho ai?\nCác kỹ sư QA, kỹ sư tự động hóa và nhà phát triển phần mềm muốn nâng cao kỹ năng kiểm thử API và tự động hóa quy trình kiểm thử trong công việc hiện tại và tương lai.\nKhóa học này không chỉ giúp bạn giải quyết các thử thách kiểm thử API trong công việc hàng ngày, mà còn mở ra cơ hội phát triển sự nghiệp lâu dài trong lĩnh vực kiểm thử phần mềm tự động.",
      "target_audience": [
        "QA muốn tìm hiểu cách sử dụng Khung tự động hóa API"
      ]
    },
    {
      "title": "Curso Automação de Testes - Cypress 2025",
      "url": "https://www.udemy.com/course/curso-automacao-de-testes-cypress-basico/",
      "bio": "Cypress 2025",
      "objectives": [
        "Automação de Testes",
        "Aprender a utilizar a ferramenta do Cypress",
        "Aprender os comandos básicos, instalações,requisitos e etc",
        "Testar um site básico, aprendendo a manipular html de forma simples"
      ],
      "course_content": {
        "Introdução": [
          "Demonstração"
        ],
        "Apresentação Teórica - Automação de Testes": [
          "Conceitos Teóricos da automação"
        ],
        "Configuração do Projeto URL": [
          "Como configurar o projeto para Acessar a URL Local"
        ],
        "Instalação da Ferramenta": [
          "Instalação da Ferramenta"
        ],
        "Encontrar HTML'S": [
          "Encontrar HTML'S"
        ],
        "Wait e Timeout": [
          "Wait e Timeout"
        ],
        "Tela Login e Inicial": [
          "Tela Login",
          "Tela Inicial - Parte 1",
          "Tela Inicial - Parte 2",
          "Testes Texto",
          "Testes Imagem"
        ],
        "Configurações": [
          "Configurações"
        ],
        "Mapear Elementos": [
          "Mapear Elementos"
        ],
        "Custom Commands": [
          "Custom Commands"
        ]
      },
      "requirements": [
        "Não precisa de expêriencia"
      ],
      "description": "O curso é sugerido para aqueles que estão iniciando ou querem iniciar a automação de testes utilizando a ferramenta do Cypress de forma básica utilizando a versão 12 do cypress\n\n\nLa vamos aprender diversas coisas como:\nResumão do curso:\nApresentação da automação\nRequisitos\nInstalação do Cypress\nAprender alguns comandos básicos como (Type,Get,Should,Clear,Find,RealEvents,Intercept,Wait,Timeout e etc)\nInstalação e como utilizar Fakers\nConfigurações básicas\nDemonstração do Cypress\nAPI básica\n\n\nEstou elaborando um grupo no whats app para discutirmos sobre o curso e dar suporte no dia a dia, durante o curso vocês podem estar me mandando mensagem para conversamos sobre o suporte pelo Whats app\n\n\nLembrando: O curso é Indicado para aqueles que estão iniciando na área da automação de testes com cypress.\nNão indicado: O curso não é indicado para aqueles que já possuem experiência na ferramenta pois abrange muitas informações básicas mas que vão auxiliar a seguir um fluxo de testes com software, tenho certeza que quem esta iniciando vai ser um curso bem dinâmico!\n\n\nO curso vai me trazer quais benefícios?\nEsse curso vai auxiliar você a iniciar com a automação de testes na ferramenta do Cypress do zero, aprendendo comandos básicos, enxergar tudo o que esta por trás de um teste automatizado, como executar um teste, e o que precisa-se para automatizar um software!",
      "target_audience": [
        "Automatizadores e analista de testes"
      ]
    },
    {
      "title": "Testautomatisierung mit dem Robot Framework (Selenium)",
      "url": "https://www.udemy.com/course/robot-framework-selenium-tutorial-deutsch/",
      "bio": "Selenium | Kein IT-Vorwissen/Programmierkenntnisse nötig | Open Source Tool",
      "objectives": [
        "Wie man ohne Programmierkenntnisse Testfälle automatisiert",
        "Wie man Testfälle und Testsuits modifiziert",
        "Wie man das Robot Framework nutzt"
      ],
      "course_content": {
        "Installation und erste Schritte mit dem Robotframework": [
          "Anmerkung zur Installation",
          "Installation Python und PIP",
          "Installation Pycharm und Intellibot",
          "Webdriver und mehr"
        ],
        "Jetzt geht es mit der eigentlichen Testautomatisierung los": [
          "Hier gibt es schnelle Hilfe",
          "Struktur ist immer hilfreich",
          "Unser erster Testfall",
          "Und wie sieht es mit dem Reporting aus",
          "Wir brauchen Addons, die uns das Leben erleichtern",
          "Jetzt können wir auch schon komplexere Testfälle erstellen 1",
          "Jetzt können wir auch schon komplexere Testfälle erstellen 2",
          "Wozu Xpath?",
          "Noch mal zum nachlesen"
        ],
        "Testfälle abspielen und das vollle Potential des Robot Frameworks nutzen": [
          "Testfälle abspielen lassen ohne Pycharm",
          "Testfälle abspielen lassen mit einfachen Doppeklick ohne Pycharm",
          "Testfälle automatisch abspielen lassen",
          "Das volle Potential des Robot Frameworks nutzen",
          "Erstelle deine eigene Keywords für noch bessere Testfälle",
          "Variablen nutzen",
          "Wozu war das letzte Video gut?",
          "Lesematerial"
        ],
        "BONUS LEKTION": [
          "BONUS LEKTION"
        ]
      },
      "requirements": [
        "Windows PC",
        "Internetverbindung",
        "Geringe Englischkenntnisse"
      ],
      "description": "Das Robot-Framework ist ein fantastisches und kostenloses Tool zur Testautomatisierung. Mithilfe vom Robot Framework gelingt es kinderleicht Testfälle für seine Webseite zu erstellen und diese zu modifizieren. Software Testing und Qualitätssicherung sind immens wichtig und tragen wesentlich zum Erfolg deiner Webseite bei. Ohne gründliches Testen läufst du Gefahr, Bugs zu übersehen, die deine Kunden entdecken werden. Bugs können nicht nur deiner Reputation schaden, sondern immens viel Geld kosten.\nIn diesem Robot Framework Tutorial bringe ich dir bei, wie du ganz ohne Programmierkenntnisse zuverlässige automatisierte Testskripts für deine Webseiten erstellen kannst. Das Robot-Framework erlaubt es dir, mit nur wenigen Klicks die Qualitätssicherung deiner Webseite dauerhaft zu gewährleisten. Manuelle Regressionstests sind sehr zeitaufwändig und kostenintensiv. In diesem Tutorial zeige ich dir, wie modernes Software Testing mithilfe des Robot-Frameworks aussieht. Ich verspreche dir, du wirst erstaunt sein, wie einfach Testautomatisierung sein kann. Nach diesem Tutorial wirst du verstehen, warum Arbeitgeber Selenium so lieben.\nIch erkläre dir Schritt für Schritt, wie du das Robot-Framework nutzen kannst. Wie einfach die Bedienung funktioniert. Wie simpel du Testfälle und Testsuiten erstellen kannst und noch einiges mehr.\nEgal ob du Software-Tester*in bist, du Interesse für Testautomatisierung hast oder angehender Software-Tester*in bist. Dieses Robot-Framework Tutorial ist super für Anfänger*innen, insbesondere dann, wenn du keine Programmierkenntnisse besitzt.\nDu brauchst bis auf einen Windows-PC und eine Internetverbindung keine weiteren Voraussetzungen und lernst dennoch, wie simple Testautomatisierung mit Selenium ist.\nIch habe mir das Robot-Framework selbst beigebracht und besaß auch keinerlei Programmierkenntnisse. Ich bin zwar hauptberuflicher Software-Tester, begann allerdings als Quereinsteiger. Das Robot-Framework hat mir meine tägliche Arbeit immens erleichtert. Auch du kannst hunderte von Stunden und Nerven sparen, die für manuelle Regressionstests verwenden werden müssten und stattdessen simple automatisierte Testskripte schreiben.\nDas Robot-Framework ist einfach, kostenlos und hat hohen Wert für deine Berufspraxis. In diesem Robot Framework Tutorial für Anfänger*innen lernst du im Rekord-Tempo die Testautomatisierung.\nWorauf wartest du? Schreib dich jetzt ein und werde Testautomatisierer*in!",
      "target_audience": [
        "Menschen mit und OHNE Programmierkenntnisse",
        "Software Tester UND angehende Software Tester",
        "Menschen mit Interesse an Qualitätssicherung und Software Testing"
      ]
    },
    {
      "title": "Curs introductiv de Testare Software",
      "url": "https://www.udemy.com/course/curs-introductiv-de-testare-software-qa/",
      "bio": "Viitoarea ta cariera in IT te asteapta",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Cunostinte de baza in utilizarea calculatorului",
        "Limba Engleza la nivel satisfacator"
      ],
      "description": "Acest curs introductiv te va ajuta sa intelegi ce inseamna Testarea Software si care e procesul de lucru al unui QA. Daca ti se pare interesant, poti continua pregatirea folosind cursul meu complet de Testare Manuala si Automata care a ajutat pana acum sute de persoane din domenii non-IT sa aiba interviuri si sa se angajeze la companii de tehnologie.\n\nJobul de QA este unul extrem de cautat si popular. As spune ca dupa joburile de programare, cele de testare sunt pe locul 2. Stiind acest lucru gandeste-te ca ai sanse mari de angajare daca vei ajunge sa ai cunostintele necesare. Nici salariile din testare nu sunt mici ci ajung aproape la acelasi nivel cu cele din zona de programare.\n\nDin postura de QA vei avea acces mai usor spre pozitiile de management si vei putea vedea in ansamblu dezvoltarea aplicatiilor la care vei lucra. Din orice punct de vedere ai privi testarea software, nu exista dezavantaje.\n\nInscrie-te acum alocand doar 1-2 ore acestei oportunitati si cu siguranta vei fi atras(a) de domeniul IT si Testarea Software. Viitoarea ta cariera in IT te asteapta.\n\nDaca ai intrebari legate de acest domeniu, nu ezita sa ma contactezi. Iti doresct mult success.",
      "target_audience": [
        "Studenti pasionati de IT",
        "Persoane care doresc schimbarea jobului"
      ]
    },
    {
      "title": "Performance testing - Introducción",
      "url": "https://www.udemy.com/course/performance-testing-introduccion/",
      "bio": "Aprende en qué consiste la implementación de performance testing en nuestros proyectos y que ventajas tiene",
      "objectives": [],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Etapas": [
          "Etapa de Planeación",
          "Preparación del ambiente",
          "Preparación de Scripts",
          "Preparación de los datos",
          "Preparación de los escenarios",
          "Ejecución de las pruebas",
          "Análisis de los resultados",
          "Entrega de Valor"
        ],
        "Finalización": [
          "Los 7 pilares de Performance testing",
          "Fin del Curso"
        ]
      },
      "requirements": [
        "Ninguno, El curso es téorico e introductorio"
      ],
      "description": "Si eres un desarrollador o analista de pruebas te podría interesar cómo puedes asegurar que los productos de software que quieres entregar tengan un nivel de calidad óptimo que no solamente asegure la ejecución correcta del producto sino que soporte la carga en un ambiente productivo.\nEn esta labor nos ayuda mucho las buenas practicas en el performance testing, practicas que bien empleadas pueden asegurarnos la entrega continua de valor en cuanto a la calidad y soporte de los servicios entregados, por medio de los diferentes tipos de pruebas de carga.",
      "target_audience": [
        "Desarrolladores, analistas de software y automatizadores de pruebas"
      ]
    },
    {
      "title": "Pytania i odpowiedzi rekrutacyjne dla testera",
      "url": "https://www.udemy.com/course/pytania-i-odpowiedzi-rekrutacyjne-dla-testera/",
      "bio": "Zapoznaj się z 80 pytaniami i odpowiedziami pojawiającymi się przy rozmowach rekrutacyjnych na testera",
      "objectives": [
        "Poznasz odpowiedzi na najczęstsze pytania na rozmowie kwalifikacyjnej",
        "Zdobędziesz teoretyczną wiedzę na temat testowania",
        "Będziesz lepiej przygotowany do rozmowy kwalifikacyjnej",
        "Porady dotyczące przygotowania do rozmowy kwalifikacyjnej",
        "Dowiesz się co powinno zawierać portfolio testera",
        "Nauczysz się tworzyć wyróżniające CV"
      ],
      "course_content": {
        "Wstęp do kursu": [
          "Struktura kursu",
          "Społeczność testerów - Facebook"
        ],
        "⚡ #1 Pytania i odpowiedzi": [
          "Jak prawidłowo opisać błąd?",
          "Dlaczego testujemy?",
          "Czym jest Sprint i ile z reguły trwa?",
          "Różnica między retestem a regresją?",
          "Co zrobisz gdy programista mówi, że u niego wszystko działa?",
          "Jak przetestujesz słuchawki bezprzewodowe?",
          "Jakie typy testów wyróżniamy i opisz je?",
          "Co otrzymamy dzięki zautomatyzowaniu wszystkich testów?",
          "Jakie znasz poziomy testów i opisz je?",
          "Co to jest przypadek testowy?"
        ],
        "⚡ #2 Pytania i odpowiedzi": [
          "Jak przebiega cykl życia błędu?",
          "Czym różni się testowanie funkcjonalne od testowania niefunkcjonalnego?",
          "Jakie są rodzaje testowanie niefunkcjonalnego?",
          "W jaki sposób zgłębiałeś wiedzę z zakresu testowania?",
          "Jak przebiega cykl życia oprogramowania?",
          "Wymień trzy dowolne z siedmiu zasad testowania i je opisz?",
          "Co to jest piramida testów?",
          "Jakie znasz narzędzie do raportowania błędów?",
          "Wymień wszystkie role w Scrumie?",
          "Czym jest backlog?"
        ],
        "⚡ #3 Pytania i odpowiedzi": [
          "Co to są smoke testy?",
          "Czym są sanity testy?",
          "Czym jest testowanie eksploracyjne?",
          "Co powinno zawierać dobrze stworzone zgłoszenie z błędem?",
          "Co zrobisz gdy nie wiesz do końca czy uchwycone przez ciebie zdarzenie to błąd?",
          "Jaka jest różnica między walidacją a weryfikację?",
          "Kiedy należy zakończyć testowanie oprogramowania?",
          "Czym jest plan testów i co powinien zawierać?",
          "Jakie są kategorię defektów?",
          "Wymień błąd któremu można podczepić priorytet niski a wpływ duży?"
        ],
        "⚡ #4 Pytania i odpowiedzi": [
          "Czym jest testowanie użyteczności?",
          "Który rodzaj testów jest najmniej kosztowny?",
          "Jakie narzędzia testerskie znasz bądź z jakich korzystałeś?",
          "Wymień błąd któremu można podczepić priorytet wysoki a wpływ niski?",
          "Czym zajmuje się tester oprogramowania?",
          "Jakie są główne cele testów?",
          "Jakie są korzyści z testowania automatycznego?",
          "Co to jest testowanie Ad hoc?",
          "Co to jest testowanie białoskrzynkowe?",
          "Co to jest testowanie czarnoskrzynkowe?"
        ],
        "⚡ #5 Pytania i odpowiedzi": [
          "Jak przeprowadzić testy kiedy nie ma dokumentacji?",
          "Czym według Ciebie jest aplikacja internetowa?",
          "Czym jest autoryzacja a czym uwierzytelnienie?",
          "Czym się różni walidacja po stronie klienta a walidacja po stronie serwera?",
          "Jakie znasz grupy kodów zwracane przez serwer?",
          "Co to jest serwer proxy?",
          "#1 Zadanie SQL",
          "#2 Zadanie SQL",
          "#3 Zadanie SQL",
          "Co to jest testowanie dynamiczne?"
        ],
        "⚡ #6 Pytania i odpowiedzi": [
          "Co to jest testowanie GUI?",
          "Co to jest testowanie gruntowne i czy powinno się jest stosować?",
          "Co to jest paradoks pestycydów?",
          "Co to jest test pozytywny?",
          "Czym jest test negatywny?",
          "Czy wiesz czym jest testowanie wydajności i znasz jakieś narzędzia do tego?",
          "Czym są testy alfa?",
          "Czym jest scenariusz testowy?",
          "Co oznaczają kryteria wejścia / wyjścia w testowaniu oprogramowania?",
          "Czym jest API?"
        ],
        "⚡ #7 Pytania i odpowiedzi": [
          "Co to jest REST?",
          "Jaka według Ciebie jest rola testera w zespole?",
          "Czym są metodyki zwinne?",
          "Czym jest konsola przeglądarkowa i co można w niej znaleźć?",
          "Co można zobaczyć w zakładce Network w przeglądarce?",
          "Proszę omówić testy systemowe?",
          "Jakie defekty jesteśmy w stanie wykryć za pomocą testów integracyjnych?",
          "Jak wygląda proces testowy w środowisku scrumowym?",
          "Jakie znasz podejścia szacowania testów?",
          "Co to jest testowanie oprogramowania?"
        ],
        "⚡ #8 Pytania i odpowiedzi": [
          "Jakie są głównie zadania testera?",
          "Proszę przetestować mechanizm rejestracji w systemie Github?",
          "Jakie atrybuty jesteś w stanie przetestować za pomocą testów niefunkcjonalnych?",
          "Czym jest ładunek w zapytaniu?",
          "Czym jest CRUD?",
          "Czym się różni metoda POST od PUT?",
          "Co zawarłbyś w raporcie z testów?",
          "Co to jest awaria?",
          "Gdzie w przeglądarce można odczytać błąd 500?",
          "Co to jest formalne testowanie?"
        ],
        "Lekcje bonusowe": [
          "Książka \"Rekrutacja\"",
          "Książka \"Certyfikat testera\"",
          "Portfolio testera",
          "Jak napisać CV",
          "Aplikacja mobilna"
        ]
      },
      "requirements": [
        "Musisz posiadać podstawową wiedzę dotyczącą testowania"
      ],
      "description": "Pytania i odpowiedzi rekrutacyjne dla testera oprogramowania\nSzukasz swojej pierwszej pracy jako tester oprogramowania i nie wiesz, jak się przygotować do rozmowy kwalifikacyjnej?\nW tym kursie poznasz najczęściej zadawane pytania rekrutacyjne i nauczysz się, jak na nie odpowiadać — w sposób profesjonalny, merytoryczny i konkretny.\nTo kurs, który pozwoli Ci poczuć się pewniej podczas rozmowy o pracę i lepiej zrozumieć, czego oczekuje rekruter.\n\n\nCzego się nauczysz?\n\n\nJakie pytania pojawiają się najczęściej na rekrutacjach na stanowisko testera\nJak odpowiadać na pytania związane z podstawami testowania, sylabusem, testami API i narzędziami testerskimi\nJak zbudować portfolio testera, które robi wrażenie\nJak stworzyć wyróżniające się CV, które przejdzie przez systemy ATS\nJak w praktyce wygląda zadanie rekrutacyjne (na przykładzie rejestracji w serwisie GitHub)\n\n\nJak wygląda nauka?\n\n\nKażda lekcja to konkretne pytanie rekrutacyjne + moja odpowiedź w formie nagrania\nZachęcam Cię, żebyś najpierw samodzielnie spróbował odpowiedzieć — dopiero potem porównaj swoją wersję z moją\nTaka forma pomaga nie tylko zapamiętać odpowiedź, ale przede wszystkim zrozumieć jej sens\n\n\nCo jeszcze znajdziesz w kursie?\n\n\nDodatkowe lekcje bonusowe o tworzeniu CV i portfolio\nZadanie praktyczne – testowanie rejestracji w serwisie GitHub\nEgzamin sprawdzający wiedzę (15 pytań jednokrotnego wyboru)\nCertyfikat ukończenia, który możesz pobrać i dołączyć do portfolio lub CV\n\n\nDla kogo jest ten kurs?\n\n\nDla osób przygotowujących się do pierwszej pracy jako tester\nDla początkujących, którzy chcą zrozumieć, jak wygląda rozmowa kwalifikacyjna\nDla każdego, kto chce uporządkować wiedzę i przygotować się na pytania techniczne\n\n\nJeśli chcesz uniknąć stresu i zaskoczenia podczas rekrutacji — ten kurs pomoże Ci się dobrze przygotować i zdobyć realną przewagę. Dołącz do kursu i przećwicz wszystko w swoim tempie, bez presji i z jasnym planem działania.",
      "target_audience": [
        "Dla osób szukających pierwszej pracy jako tester oprogramowania",
        "Dla osób, które chcą przyswoić wiedzę teoretyczną z dziedziny testowania"
      ]
    },
    {
      "title": "[A-Z] Web Otomasyon Testi Öğrenin! (Java/Selenium/Cucumber)",
      "url": "https://www.udemy.com/course/web-otomasyon-testi-ogrenin/",
      "bio": "Sıfırdan başlayıp Java ile Selenium'da web otomasyon testleri geliştirme konusunda aranan bir uzmana dönüşeceksiniz!!",
      "objectives": [
        "Java Programlama Dili: Temel Java kavramları, veri tipleri, döngüler, fonksiyonlar ve NTP ile web otomasyonu için sağlam bir temel oluşturacaksınız.",
        "Selenium Web Driver: Web tarayıcılarını otomatikleştirmek için kullanılan Selenium WebDriver'ın tüm özelliklerini keşfedeceksiniz.",
        "Web Otomasyon Testi: Web otomasyon testlerinin önemini, farklı test türlerini ve test senaryoları oluşturmayı detaylı bir şekilde öğreneceksiniz.",
        "JUnit ve TestNG: Testlerinizi çalıştırmak için kullanılan JUnit ve TestNG test çerçevelerini kullanmayı ve test sonuçlarını yorumlamayı öğreneceksiniz.",
        "Cucumber: BDD (Davranış Odaklı Geliştirme) yaklaşımıyla test senaryoları yazmak için Cucumber framework'ünü kullanmayı ve Gherkin dilini öğreneceksiniz.",
        "Test Mimarileri: Profesyonel iş dünyasında sıklıkla kullanılan web otomasyon testi mimarilerini öğreneceksiniz.",
        "Gelişmiş Test Teknikleri: API testi, veri odaklı test, paralel test ve sürekli entegrasyon gibi gelişmiş test tekniklerini uygulamaya koyacaksınız."
      ],
      "course_content": {
        "Giriş": [
          "Müfredat Hakkında",
          "Giriş"
        ],
        "Kurulum": [
          "Java Programlama Diline Giriş: Kurulum ve Temel Kavramlar",
          "Java Kurulumu",
          "İntelij IDEA Kurulumu"
        ],
        "Temel Java Eğitimi": [
          "Neden Java?",
          "Proje Oluşturmak (Netbeans)",
          "Merhaba Dünya!",
          "Değişken Mantığı",
          "Değişken Tipleri",
          "Dışarıdan Veri Almak",
          "İf Blokları",
          "Switch-Case Blokları",
          "For Döngüsü",
          "While Döngüsü",
          "Do-while Döngüsü",
          "Dizi Kavramı",
          "Metot Mantığı",
          "Parametreli Metotlar",
          "Geriye Değer Döndüren Metotlar",
          "Bitirme Testi"
        ],
        "Selenium": [
          "Selenium: Web Otomasyonunun Güçlü Aracı",
          "İlk Projeyi Oluşturmak",
          "Selenium İle İlk Test",
          "Driver Metotları",
          "Web Elementlerini Bulmak - 1",
          "Web Elementlerini Bulmak - 2",
          "Selectos (Seçiciler) Quiz",
          "Login Testi (TextBox ve Button İşlemleri)",
          "RadioButton İşlemleri",
          "CheckBox işlemleri",
          "Resim Seçtirmek",
          "Çoklu Element Seçtirmek ve LinkText",
          "PartialLinkText",
          "DropDown İşlemleri",
          "Mouse İşlemleri (Actions - MoveToElement)",
          "Sürükle Bırak (Actions - DragAndDrop)",
          "Sağ Tıklama (Actions - ContextClick)",
          "Çift Tıklama (Actions - DoubleClick)",
          "Dosya Yükleme",
          "Dosya İndirme",
          "Popup Mesajları",
          "Tabs (Sekmeler)",
          "Tooltip Doğrulama",
          "Sayfayı Aşağı Kaydırmak",
          "Ekran Görüntüsü Almak",
          "Kırık Linkler",
          "Bitirme Testi"
        ],
        "JUnit": [
          "JUnit: Java Tabanlı Yazılım Testlerinin Standart Aracı",
          "Birim Test Nedir?",
          "JUnit Kurulumu",
          "Anotasyonlar",
          "JUnit Örnekleri - 1",
          "JUnit Örnekleri - 2",
          "Assertions",
          "Assertions Örneği",
          "Ignore",
          "TimeOut",
          "RepeatedTest",
          "ParameterizedTest",
          "Bitirme Testi"
        ],
        "TestNG": [
          "TestNG: Java Tabanlı Gelişmiş Test Çerçevesi",
          "TestNG Kurulumu",
          "Anotasyonlar",
          "Amazon Örneği",
          "Priority",
          "Enabled",
          "Description",
          "TimeOut",
          "InvocationCount",
          "DependsOnMethods",
          "XML İle Test Yönetimi",
          "Paketleri Çalıştırmak",
          "Include & Exclude",
          "Groups",
          "Parameters",
          "Paralel Test Çalıştırmak",
          "Test Raporlama",
          "DataProvider",
          "BaseTest Sınıfı",
          "Soft Assertions",
          "Bitirme Testi"
        ],
        "Page Object Model (POM)": [
          "Page Object Model (POM): Web Otomasyon Testlerinin Organizasyonu/Bakımı",
          "Nesne Tabanlı Programlama (OOP)",
          "POM Deseni",
          "POM Örneği",
          "BasePage Sınıfı",
          "Bitirme Testi"
        ],
        "PageFactory": [
          "Etkili Test Otomasyonu için PageFactory Deseni: Web Elementleri Bul ve Yönet",
          "PageFactory Deseni",
          "PageFactory Örneği",
          "@FindAll",
          "Bitirme Testi"
        ],
        "Cucumber": [
          "Cucumber Framework: Davranışsal Testlerin Kolaylaştırılması ve İşbirliği",
          "Cucumber Kurulumu",
          "Cucumber Giriş",
          "Driver Sınıfı",
          "Login Örneği",
          "Scenario Outline",
          "Background",
          "TestRunner Sınıfı ve Raporlama",
          "Bitirme Testi"
        ],
        "SON :)": [
          "Bundan Sonra Ne Yapılabilir?",
          "Web Otomasyon Testlerinde Gelecek ve Yaklaşım Stratejileri",
          "Yazılım Testi Alanları: Çeşitlilik ve Önemli Noktalar"
        ]
      },
      "requirements": [
        "Web otomasyon testine giriş yapmak için daha önce kod yazmamış olmanızın önemi yok! Bu kursta, Java programlama dilinin temellerini ve web otomasyon testi için gerekli tüm becerileri sıfırdan öğreneceksiniz."
      ],
      "description": "Web otomasyon testi, web uygulamalarının fonksiyonelliğini ve performansını otomatik olarak test etme işlemidir. Bu, manuel testlerin aksine, test senaryolarını tekrar tekrar çalıştırmak için yazılım araçları kullanmayı içerir.\nSizler için kapsamlı şekilde hazırladığım A’dan Z’ye web otomasyon testi eğitimi sayesinde bu alanda bir uzman olacaksınız! Bu kurs, web otomasyon testi alanında uzmanlaşmak isteyenler için ideal bir kaynaktır. Kurs, Java programlama dilinin temellerini ve Selenium WebDriver'ı kullanarak web otomasyon testleri geliştirmeyi öğretir. Ayrıca JUnit ve biraz daha gelişmişi olan TestNG test çerçevelerini kullanarak testlerin nasıl etkili şekilde çalıştırılacağı ve sonuçlarının nasıl yorumlanacağı da ele alınmaktadır. Profesyonel iş dünyasında kullanılan ve temiz kod yazmamıza imkan veren Page Object Model / Page Factory test mimarileri ile birlikte Cucumber framework'ü entegre ederek ve BDD (Davranış Odaklı Geliştirme) yaklaşımıyla test senaryoları yazma konusu işlenmektedir.\nA'dan Z'ye tüm web otomasyon testi kavramlarını ve en güncel araçları kapsayan bir müfredat.\nGerçek hayattan web uygulamaları üzerinde test geliştirme alıştırmaları ve proje çalışmaları.\nUzman ve deneyimli bir eğitmen tarafından laf kalabalığından ve dakika hilelerinden uzak sunulan öz videolar ve kaynaklar.\nHer bölümün sonunda öğrendiklerinizi pekiştirecek bitirme testleri.\nSorularınızı sorabileceğiniz ve diğer kursiyerlerle etkileşime girebileceğiniz aktif bir forum.\nÖnemli bir emeğin sonucu olarak oluşturulan bu eğitimin farkını, müfredatı inceleyerek de görebilirsiniz. İade garantisi ile eğitime kayıt olarak hemen öğrenmeye başlayabilirsiniz! Görüşmek üzere… :)",
      "target_audience": [
        "Yazılım testi alanında kariyer yapmak isteyenler.",
        "Web uygulamalarının testini otomatikleştirmek isteyen yazılım geliştiriciler.",
        "Selenium ve Cucumber ile test geliştirme becerilerini geliştirmek isteyen QA mühendisleri.",
        "Java programlama dilini öğrenerek web otomasyonuna giriş yapmak isteyenler."
      ]
    },
    {
      "title": "JMeter 2025: Pruebas de Carga, Estrés y Rendimiento",
      "url": "https://www.udemy.com/course/aprende-a-hacer-pruebas-de-performance-con-jmeter/",
      "bio": "Aprende JMeter desde cero con pruebas de carga, estrés y rendimiento. Incluye ejemplos reales y recursos descargables.",
      "objectives": [
        "Manejar JMETER para sus pruebas de Performance",
        "Al final de este curso, podrá comprender cómo colocar aplicaciones de carga en la Web y API de REST.",
        "Obtendrás una idea clara de todas las funciones disponibles en la herramienta Jmeter para escribir testcases de carga",
        "Al final de este curso, comprenderás cómo cargar aplicaciones web y API REST, usar JMeter para escribir casos de prueba de carga y monitorear el rendimiento de",
        "Completaras los conocimientos sobre complementos de Jmeter para que los informes sean más efectivos.",
        "Entenderemos lo básico de Beanshell Scripting para Jmeter"
      ],
      "course_content": {
        "¡Bienvenido al curso de JMeter y Pruebas de Performance! ?": [
          "Introduccion"
        ],
        "Preparación del Entorno: Instalación de Java y Configuración de JMeter": [
          "Instalación de Java JDK – Paso previo esencial para usar JMeter",
          "Descargar e instalar JMeter correctamente (guía paso a paso)",
          "Explorando la interfaz y herramientas clave de JMeter",
          "Cómo crear tu primer Plan de Pruebas en JMeter paso a paso"
        ],
        "Explorando los Listeners en JMeter": [
          "Análisis de resultados con el Listener “View Result Table\" en JMeter",
          "Análisis de resultados con el Listener “Aggregate Report \" en JMeter",
          "Análisis de resultados con el Listener “Summary Report \" en JMeter",
          "Análisis de resultados con el Listener “Response Time Graph\" en JMeter",
          "Análisis de resultados con el Listener “Graph Result\" en JMeter",
          "Análisis de resultados con el Listener “View Results Tree” en JMeter",
          "Análisis de resultados con el Listener “Aggregate Graph\" en JMeter",
          "Análisis de resultados con el Listener “Aggregate Result\" en JMeter",
          "Ejecutando y analizando resultados con todos los Listener"
        ],
        "Pruebas de APIs REST en JMeter": [
          "Introducción a las pruebas de API REST con JMeter paso a paso",
          "Cómo configurar solicitudes API en JMeter paso a paso",
          "Cómo usar el método POST en JMeter para pruebas API",
          "Cómo usar el método GET en JMeter para pruebas API",
          "Cómo usar el método PUT en JMeter para pruebas API",
          "Cómo usar el método DELETE en JMeter para pruebas API"
        ],
        "Dominando las variables en JMeter": [
          "Introducción al uso de variables en JMeter",
          "Cómo crear y usar variables en JMeter paso a paso",
          "Cómo usar el JSON Extractor en JMeter paso a paso",
          "Cómo usar el XPath Extractor en JMeter paso a paso"
        ],
        "Cómo Instalar y Usar Plugins en JMeter": [
          "Cómo instalar y configurar PerfMon Metrics Collector en JMeter paso a paso",
          "Instalar Plugins Manager en JMeter paso a paso"
        ],
        "Ejecución de Pruebas y Análisis de Resultados en JMeter": [
          "Integración de JMeter con Jenkins para pruebas continuas paso a paso",
          "Cómo distribuir y ejecutar pruebas en múltiples máquinas con JMeter",
          "Generación y exportación de reportes en JMeter: JTL, CSV, PDF, HTML",
          "Cómo optimizar planes de pruebas en JMeter para mejor rendimiento",
          "Análisis avanzado de resultados con JMeter, InfluxDB y Grafana"
        ],
        "Pruebas de Bases de Datos con JMeter: Conexiones y Ejecución": [
          "Cómo configurar JDBC en JMeter para pruebas con MySQL paso a paso",
          "Cómo configurar JDBC en JMeter para pruebas con SQL Server paso a paso"
        ],
        "JMeter: Trabajando con Protocolos FTP, SOAP y WebSockets": [
          "Pruebas con protocolos especiales: FTP y método GET en JMeter",
          "Pruebas con protocolo SOAP en JMeter: guía completa",
          "Pruebas con protocolos especiales: FTP y método PUT en JMeter",
          "Pruebas con protocolo WebSocket en JMeter: guía completa"
        ],
        "Realizando una Prueba Completa con JMeter": [
          "Simulación de tráfico móvil en JMeter: guía completa",
          "Buenas prácticas para pruebas de rendimiento efectivas",
          "Pruebas de rendimiento aplicadas en un caso real paso a paso"
        ]
      },
      "requirements": [
        "Programacion Basica en Java",
        "Conocimiento basico de Testing",
        "Aunque estas son conferencias en línea. Tendrás soporte de instructor de por vida. Puedes publicar tus consultas en el foro de discusión o contactarme directamente, responderé en menos de 12 horas.",
        "Toda la configuración de la instalación, incluidas las pruebas de rendimiento, se realiza como parte del curso",
        "Material teórico, volcado de código y guía de entrevista están disponibles para descargar",
        "Material del curso para descargarte"
      ],
      "description": "¿Quieres convertirte en un experto en pruebas de rendimiento usando JMeter? Este curso completo y práctico te guiará paso a paso desde los conceptos básicos hasta técnicas avanzadas de testing para aplicaciones web, APIs, bases de datos y aplicaciones móviles.\n¿Qué aprenderás?\nIntroducción sólida a JMeter: Conoce qué es JMeter, su importancia y cómo instalarlo y configurarlo . Familiarízate con su interfaz y elementos clave para construir planes de pruebas efectivos.\nCreación de tu primer plan de pruebas: Aprende a configurar grupos de hilos, añadir muestreadores HTTP y ejecutar pruebas básicas en aplicaciones web reales, interpretando resultados con gráficos y tablas.\nPruebas de APIs modernas: Domina las solicitudes GET, POST, PUT y DELETE, usa variables y parámetros, y extrae datos de respuestas JSON y XML con extractores especializados.\nPruebas avanzadas de carga y estrés: Simula cargas pesadas con temporizadores, identifica cuellos de botella y límites del sistema, y distribuye pruebas en múltiples máquinas para evaluar sistemas a gran escala.\nAutomatización y optimización: Integra JMeter con Jenkins para pruebas continuas, ejecuta pruebas vía línea de comandos, y aprende a optimizar planes para un rendimiento eficiente y consumo reducido de recursos.\nReportes profesionales y análisis avanzado: Genera dashboards visuales, exporta reportes en CSV, XML, PDF y realiza análisis avanzados usando herramientas complementarias como Grafana.\nPruebas especializadas: Configura JDBC para bases de datos SQL, realiza pruebas con protocolos especiales (FTP, SOAP, WebSocket), y simula tráfico móvil para aplicaciones backend.\nProyecto final y buenas prácticas: Aplica todo lo aprendido creando un plan de pruebas completo en un caso real, con análisis detallado y recomendaciones para evitar errores comunes y optimizar tus pruebas.\nBonus exclusivo:\nPlantillas y scripts descargables para acelerar tu trabajo\nGuía completa para instalar y usar plugins que amplían la funcionalidad de JMeter",
      "target_audience": [
        "Quality assurance engineers , desarrolladores , scrum master , toda persona que lo guste el Testing",
        "Toda persona que quiera hacer la automatizacion con JMETER"
      ]
    },
    {
      "title": "Master API testing using Postman in Hindi/Urdu",
      "url": "https://www.udemy.com/course/learn-api-testing-using-postman-in-hindiurdu/",
      "bio": "Master Rest & SOAP API manual & Automation testing in detail with real-time examples",
      "objectives": [
        "Understand what are APIs",
        "Understand difference between Rest and SOAP APIs",
        "Complete knowledge on Postman tool and its features",
        "Learn how to Automate Rest API's using Postman",
        "Learn API testing with real time examples",
        "Learn Soap Webservices Automation with XML Parsing through Postman",
        "Understand how to use postman features like Environments, variables, Workflows, collection runners, Data driven testing for Automation",
        "Learn usage of Newman tool with Postman and running tests through CLI commands",
        "Understand how to collaborate with in team on Postman",
        "Integrate Postman Automation with Jenkins CI/CD Integration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to APIs in detail"
        ],
        "Detail Understanding of Postman": [
          "Introduction to Postman in detail"
        ],
        "Working on Real-time Project APIs": [
          "Learn to work with real- time Project APIs"
        ],
        "SOAP APIs Testing using Postman": [
          "SOAP services testing with real-time example"
        ],
        "Using Functions and Faker Library": [
          "Learn functions and Faker library in Postman"
        ],
        "Scripting in Postman": [
          "Learn pre and post scripting in detail"
        ],
        "API Chaining, Data-Driven Testing and Variables in Postman": [
          "Learn API chaining for automation testing with data driven testing and variables",
          "Detail understanding of API chaining with more examples"
        ],
        "Newman Command line execution using Newman and Dockers": [
          "Newman, Docker and command line execution"
        ],
        "Executing collection using Jenkins - DevOps": [
          "Learn how to execute Postman collection using Jenkins"
        ]
      },
      "requirements": [
        "Basic understanding of software testing and quality assurance"
      ],
      "description": "-------Latest updated course in 2023 with real-time examples in Hindi/Urdu-------\n\n\nPostman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs—faster. Learn Everything You Need to Know About REST API Automation including Postman Even If You've Never worked Before on API'sThe course covers Basics To Advanced Level With Postman. This course is designed in Urdu and Hindi with real-time examples to make you understand learn postman API manual & automation testing\n\n\nIf you are a tester and have an interest in testing APIs, then this course is designed for you. The \"Postman Manual and Automation Testing\" course in Hindi/Urdu provides you with a comprehensive learning experience to master the art of testing using Postman.\n\n\nIn this course, you will start with the fundamentals of manual API testing using Postman, where you will learn how to create and execute API requests, analyze responses, and validate data. You will also explore various testing techniques and best practices to ensure the quality and reliability of APIs in addition to API automation testing.\n\n\nThroughout the course, the instructor will explain concepts in Hindi/Urdu, making it easier for Hindi and Urdu speakers to understand and follow along. The course includes hands-on exercises, quizzes, and real-world examples to reinforce your learning and provide practical experience.\n\n\nBy the end of this course, you will have a strong foundation in both manual and automation testing using Postman. You will be equipped with the skills to efficiently test APIs, identify bugs, and deliver high-quality software products. Whether you are a beginner or an experienced tester, this course will empower you to excel in your testing career. Enroll now and take a step towards becoming a proficient Postman tester.\n\n\nWhat made this course Unique from other courses? Only real-time hosted APIs are used for this training\n\n\n----- No other course covers topics covered in this course with such great depth of detail. For proof, You can cross-check with other tutorials\n\n\nThis course contains :\n- Understanding of APIs\n- Understanding of Rest APIs\n- Understanding of Rest APIs components\n- Downloading and Installing Postman\n- Understanding of each feature of the Postman\n- Working with Postman collections\n- Real-time working APIs for hands-on tutorials\n- Defining & using Postman Environments using environment variables\n- Postman Data-Driven Testing using external CSV & JSON\n- Pre-scripts with real-time scripting Code Snippets\n- Writing tests to validate the rest API responses\n- Using Faker library for dynamic value generation.\n- Executing API collection from the command line\n- Executing API collection using Docker and Jenkins\n- Learn how to handle API responses and Chaining of APIs\n- Understanding of different variables in Postman & usage",
      "target_audience": [
        "Those who want to learn API testing",
        "Those who want to learn postman",
        "Software quality assurance engineers who want to enhance testing skills",
        "Software Test Engineers",
        "API Test Engineers",
        "Those who want to learn API Automation Testing",
        "Those who want to to learn API Automation Testing in Hindi/Urdu",
        "Those who want to learn API testing in Hindi/Urdu",
        "Those who want to learn postman in Hindi/Urdu"
      ]
    },
    {
      "title": "Java/Selenium ile Page Object Model (POM)",
      "url": "https://www.udemy.com/course/java-selenium-ile-pom/",
      "bio": "Java programlama dilinde Selenium kullanarak Page Object Model (POM) ile web otomasyon testlerini daha temiz yazacağız!",
      "objectives": [],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Page Object Model (POM)": [
          "Page Object Model (POM): Web Otomasyon Testlerinin Organizasyonu/Bakımı",
          "Nesne Tabanlı Programlama (OOP)",
          "POM Deseni",
          "POM Örneği",
          "BasePage Sınıfı",
          "Bitirme Testi"
        ]
      },
      "requirements": [
        "Temel düzeyde de olsa Java ve Selenium bilgisi gerekmektedir.",
        "Kullanılacak bilgisayarda java ve yardımcı bir IDE kurulu bulunmalıdır."
      ],
      "description": "Bu ücretsiz Udemy kursu, web otomasyon testlerinin temelini oluşturan Page Object Model (POM) tasarım desenini detaylı bir şekilde ele almaktadır. Ancak daha kapsamlı bir eğitim almak isteyen öğrencilerin, web otomasyon testlerinin daha geniş bir yelpazesini kapsayan diğer eğitimlerime göz atmaları önerilir.\nPage Object Model (POM), web uygulamalarının test otomasyonunda kullanılan bir tasarım desenidir. Her web sayfasını bir nesne olarak temsil eder ve sayfa ile etkileşimde bulunan tüm işlevleri ve özellikleri içerir. Bu sayede kodun yeniden kullanılabilirliğini artırır, bakımını kolaylaştırır ve test senaryolarını daha okunabilir hale getirir.\nBu ücretsiz Udemy kursu, Page Object Model (POM) tasarım desenini kapsamlı bir şekilde ele alıyor. Kurs, web uygulamalarının test otomasyonunda POM'un nasıl kullanıldığını, avantajlarını ve en iyi uygulama prensiplerini öğretiyor. Her bir konsepti açıklayıcı örneklerle pekiştiriyor ve katılımcılarına uygulamalı deneyim sunuyor. Bu kurs sayesinde, öğrenciler POM'u etkin bir şekilde uygulayarak test senaryolarını daha düzenli, bakımı daha kolay ve yeniden kullanılabilir hale getirebilecekleri becerileri kazanıyorlar.\nPage Object Model (POM), yazılım uzmanları arasında popüler bir konudur ve iş mülakatlarında sıkça sorulur. POM'u anlayan ve etkili bir şekilde uygulayabilen adaylar, test senaryolarını daha düzenli ve bakımı daha kolay hale getirebilir. Bu yetenek, şirketler için değerlidir çünkü POM'un kullanılması test otomasyon süreçlerini daha verimli hale getirebilir ve ürün kalitesini artırabilir. Dolayısıyla, POM konusunda sağlam bir bilgiye sahip olmak, iş arayanlar için rekabet avantajı sağlayabilir ve iş görüşmelerinde olumlu bir etki bırakabilir.",
      "target_audience": [
        "Java ile Selenium becerilerini geliştirmek isteyen geliştiriciler.",
        "Web otomasyon testi kodlarını daha temiz yazmak isteyen geliştiriciler."
      ]
    },
    {
      "title": "Cypress入門：テスト自動化を始めよう！vs codeとNode.jsを用いてエンドツーエンドテストを実践する",
      "url": "https://www.udemy.com/course/cypress-hotate/",
      "bio": "基礎からCypressをハンズオンで解説します。統合開発環境にはVisual Studio Code (vscode)、そしてNode.jsを使用します。",
      "objectives": [
        "Cypressの使い方をマスターできます",
        "テスト自動化を基礎から学ぶことができます",
        "Visual Studio Codeでテストをする方法を理解できます",
        "ユーザージャーニーの基礎"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "基礎解説"
        ],
        "環境構築": [
          "Node.jsのインストール",
          "Visual Studio Codeのインストール (vs code)",
          "Cypressのインストール"
        ],
        "ハンズオン": [
          "テストファイルの作成",
          "テストの実行",
          "要素の取得と連結コマンド",
          "getの属性",
          "テスト範囲の限定",
          "正規表現とフック",
          "カスタムコマンド",
          "テストのルール",
          "フォームテスト1",
          "フォームテスト2",
          "属性の検索",
          "入力フォームのエラー",
          "複数ページのテスト",
          "only, findコマンド",
          "ロケーション",
          "ユーザージャーニー1",
          "ユーザージャーニー2",
          "ユーザージャーニー3"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "プログラミング・テスト経験など一切不要"
      ],
      "description": "本講座では、Cypress について基礎から実践まで学んでいきます。\n具体的には、以下のような内容を実践していきます。\n・基礎的なテストの作成、実行\n・フォームテスト\n・複数ページのテスト\n・ユーザージャーニー\n\n\nまた、本講座ではCypressの使用方法について解説するため、プログラミングや開発に関して踏み込んだ解説は致しません。\nそのため、HTML, CSS, JavaScriptなどのプログラミング言語について、必ずしも習熟している必要がなく、プログラミング初心者でも受講可能です。\n\n\n本講座を受講することで、Cypressでテストする際に、初心者からスムーズに実際の業務を進めることを目指します。",
      "target_audience": [
        "初めてテスト自動化を学ぶ人",
        "QA・テストエンジニアのビギナー"
      ]
    },
    {
      "title": "TestNG 测试框架完整版 - 从初学到精通",
      "url": "https://www.udemy.com/course/testng-complete-version/",
      "bio": "学习 TestNG 框架( Next Generation )的A-Z指南，以加速你的自动化目标。",
      "objectives": [
        "在本课程结束时，您将对TestNG测试框架有详细的了解",
        "您将能够使用TestNG测试框架提供的功能设计一个测试框架",
        "深入理解TestNG框架的注解",
        "在做并行测试执行的功能这块，你会学到很好的命令使用的技能",
        "学会从XML文件读取参数",
        "学会如何使用相同的测试方法读取多个数据集",
        "能够使用TestNG监听器实现自定义监听器类"
      ],
      "course_content": {
        "介绍": [
          "课程介绍",
          "讲师介绍"
        ],
        "Java环境搭建": [
          "Java的下载和安装",
          "Java环境设置",
          "Eclipse下载安装"
        ],
        "TestNG环境搭建": [
          "TestNG介绍",
          "TestNG插件链接地址更新",
          "TestNG设置",
          "testng java doc 下载地址更新",
          "如何添加TestNG JavaDoc"
        ],
        "TestNG注解和断言": [
          "第一个TestNG类--test注解",
          "断言",
          "软断言",
          "方法和类注解",
          "运行TestSuite",
          "BeforeSuite和AfterSuite注解",
          "BeforeTest和AfterTest注解"
        ],
        "TestNG 高级功能": [
          "把测试方法分优先级执行",
          "如何给测试方法分组执行-Part1",
          "如何给测试方法分组执行-Part2",
          "测试用例的依赖关系",
          "禁用测试方法或者让测试方法超时",
          "维持测试用例的执行顺序"
        ],
        "TestNG -> Parameters 和 Parallel": [
          "读取xml文件中参数",
          "用testNG并行执行case"
        ],
        "DataProviders": [
          "DataProviders-Part1",
          "DataProviders-Part2"
        ],
        "TestNG->ITestResult": [
          "ITestResult接口"
        ],
        "TestNG-Listeners": [
          "理解事件监听机制",
          "IInokedMethodListener",
          "ITestListener",
          "ISuiteListener",
          "TestNG监听器代码重构"
        ],
        "TestNG-Reporter Logs和HTML Reports": [
          "TestNG报告和日志"
        ]
      },
      "requirements": [
        "要有一点点Java基础知识",
        "会用PC 操作系统",
        "对软件测试或者自动化测试有一定的了解",
        "代码文件 / 所有相关资料都可以下载下来"
      ],
      "description": "TestNG是当今最好的测试框架之一\n\n它可以帮助自动化测试工程师把精力集中在编写和实施测试用例和测试脚本上。\n因此，让你可以专注测试应用程序的功能。其他的就交给testNG。比如：\n程序运行log的记录，监听和报告，都可以用testNG框架来管理。\n本课程包括关于TestNG注解（TestNG Annotations）的一系列广泛的话题,不同类型的断言,测试套件（Test Suit）的运行,按照期望的顺序运行测试,把相关的测试分组（Grouping）,有依赖关系的测试（Dependent Tests）,保证执行顺序（Preserver order）,从xml文件中读取参数dataprovider(使用Data Provider来给需要的测试提供参数), TestNG Listeners, TestNG Reporters(日志),TestNG的HTML报告。所有材料包括代码文件。\n*****从零做起，成为自动化框架实现专家*****\n*********************为什么选择这门课程?******\n我们假设学生没有测试框架的经验，并且从最基础的开始讲起，覆盖每一个主题\n真实示例演示帮你理解如何使用不同的注解，这将让你对企业级别框架有所了解，并给您信心。\n不需要之前有自动化经验，本课程涵盖所有必要的主题。对Java有一定的了解。\n获得超过5个小时的独特内容和代码文件，供你参考和学习\n****************************************************************************************\n你想拥有市场上最新的技术，然后进入自动化行业吗?\n您是否渴望学习如何利用TestNG构建一个强大的自动化框架?\n有兴趣了解如何用TestNG管理运行测试框架的相关功能吗?\n你还在等什么?今天就加入吧，学习强大的TestNG框架! !!",
      "target_audience": [
        "质量保证专业人员和手工测试人员希望开始从事自动化测试",
        "自动化测试人员想要加强专业技能的",
        "想在软件工程领域实现梦想的应届毕业生",
        "质量保证团队领导和管理人员"
      ]
    },
    {
      "title": "Azure DevOps Server / TFS [In Arabic]",
      "url": "https://www.udemy.com/course/tfs-azure-devops-server/",
      "bio": "كورس مايكروسوفت بالعربى TFS",
      "objectives": [
        "Software Delivery Life Cycle Models الاجراءات المختلفة لتسليم السوفتوير",
        "How to handle projects in TFS ازاى تدير مشاريعك كاملة عليه",
        "How to create project iterations ازاى تقسم مشروعك لمراحل",
        "How to handle business requirements ازاى تدير متطلبات العميل",
        "How to create tasks ازاى تعمل تاسكات لكل فريق العمل",
        "How to create test cases ازاى تعمل اختبارات لكل متطلب من متطلبات العميل",
        "How to run test cases and log results ازاى تشغل الاختبارات و تاخد أدلة لعمليات الاختبار",
        "How to create bugs ازاى تكتشف و تسجل الغلطات فى السوفتوير",
        "Bug life cycle دورة حياة غلطات السوفوير"
      ],
      "course_content": {
        "TFS Introduction": [
          "TFS Course Introduction مقدمة عن الكورس",
          "What is ALM ? ما هى دورة حياة المنتج",
          "ALM Tools أشهر التوولز فى دورة حياة المنتج",
          "Requirement Basic Idea الفكرة الاساسية لمتطلبات العميل"
        ],
        "TFS Main Practice": [
          "Create TFS Account & Project ازاى تعمل اكونت على مايكروسوفت",
          "Invite Team members ازاى تقدر تضيف الفريق بتاعك",
          "CMMI Work Item Process Introduction ايه هو الاجراء المناسب لل CMMI",
          "TFS Iterations and Areas ازاى تقسم مشروعك لمراحل",
          "Work Item Process طرق تسليم السوفتوير",
          "Creating Requirements in TFS ازاى تكتب متطلبات العميل",
          "Requirement Traceability Matrix ازاى تربط ما بين كل اجراءات المنتج",
          "Requirement Management ادارة متطلبات العميل",
          "TFS Kanban Board طريقة عرض المتطلبات",
          "Task Management ادارة المهام",
          "TFS Test Cases ازاى تكتب اختبارات البرنامج",
          "TFS Shared Steps ازاى تعمل خطوات مشتركة",
          "Test Case Run ازاى تعمل اختبارات المنتج",
          "Test Case Parameters ايه هى دواخل الاختبارات",
          "Create Bugs ازاى تسجل غلطات السوفتوير",
          "Bugs Priority And Severity اهيمية الغلطات و توابعها",
          "Bug Life Cycle دورة حياة الغلطات فى السوفوير",
          "Sprints Tab تقسيمة المشروع"
        ],
        "Test Plan": [
          "Test Plan ادارة الاختبارات",
          "Test Runner تنفيذ الاختبار",
          "Test Report تقرير الاختبار"
        ],
        "TFS Test Reporting": [
          "TFS Quires كيفية الاستعلام",
          "Project Quires الاستعلام للمشروع",
          "Export To Excel الاخراج على ملف اكسيل"
        ],
        "Life Project مشروع عملى": [
          "Project 1 Banking Application 1 اختبار نظام بنكى",
          "Project 1 : Banking Application 2 اختبار نظام بنكى",
          "Project 1 : Banking Application 3 اختبار نظام بنكى",
          "Project 2 : E Commerce Application 1 اختبار نظام",
          "Project 2 : E Commerce Application 2 اختبار نظام",
          "Project 2 : E Commerce Application 3 اختبار نظام"
        ]
      },
      "requirements": [
        "Software Engineering Basics",
        "Software Testing Basics"
      ],
      "description": "حتتعلم فى الكورس دا ازاى تشتغل ب Microsoft TFS Tool\nحتقدر من خلال الكورس دا تدير مشاريعك فى كل نواحى السوفتوير من متطلبات العميل الى الاختبار\nحتتعلم التالى :\nWhat Is ALM ايه هى دورة حياة المنتج\nWhat ALM Tools ايه هى اشهر التولز عالميا اللى بتدير دورة حياة المنتج\nCreating requirements ازاى تقدر تكتب متطلبات العميل\nCreating tasks  ازاى تقدر تكتب كل العمليات الخاصة المطلوبة فى المشروع\nCreating test cases ازاى تكتب كل الاختبارات الخاصة بالمشروع\nCreating bus ازاى تسجل كل الغلطات الموجودة\nBug life cycle ازاى تعمل دورة حياة لغلطات السوفتوير لحد حلها\nممكن تشترى الكورس عن طريق فودافون كاش على رقم 01002958751 و التواصل على نفس الرقم",
      "target_audience": [
        "Project Managers",
        "Software Engineers",
        "Software Testers",
        "Business Analysts",
        "Software Developers"
      ]
    },
    {
      "title": "Testowanie REST API - REST Assured Java",
      "url": "https://www.udemy.com/course/rest-assured-java/",
      "bio": "Testowanie REST API za pomocą Postmana oraz biblioteki Rest Assured z wykorzystaniem języka programowania Java",
      "objectives": [
        "Testowania REST API",
        "Biblioteki Rest Assured do pisania testów automatycznych REST API przy pomocy języka programowania Java",
        "Narzędzia do manualnego testowania REST API - Postman",
        "Projektowania i implementacji frameworka do testów automatycznych API",
        "Podstaw języka programowania Java"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp",
          "Czego dowiesz się z tego kursu?",
          "Jak studiować ten kurs?",
          "Efekt końcowy",
          "Kontakt z instruktorem"
        ],
        "API - wstęp teoretyczny": [
          "Interfejs, API, WebAPI",
          "Protokół HTTP",
          "Żądanie i odpowiedź HTTP",
          "Zasoby",
          "Nagłówki",
          "Metody HTTP",
          "REST API",
          "Przykład aplikacji korzystającej z REST API część I",
          "Przykład aplikacji korzystającej z REST API część II",
          "Dokumentacja API",
          "Kody odpowiedzi HTTP"
        ],
        "Testowanie API - Postman": [
          "Instalacja Postmana",
          "Stworzenie konta Postman",
          "Instalacja nodejs",
          "Instalacja i uruchomienie API do testów",
          "Co będziemy testować?",
          "Pierwszy request - pobranie wszystkich postów",
          "Zapisywanie requesta",
          "Pobranie wybranego posta",
          "Filtrowanie postów",
          "Query vs Path Param",
          "Dodanie posta",
          "Nadpisywanie posta",
          "Aktualizacja posta",
          "Usuwanie posta",
          "Uruchamianie testów w kolekcji",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Wprowadzenie do testów",
          "Weryfikacja kodu odpowiedzi",
          "Weryfikacja ciała odpowiedzi - sprawdzenie czy zawiera tekst",
          "Weryfikacja ciała odpowiedzi - sprawdzenie wartości pola",
          "Współdzielenie testów w obrębie kolekcji",
          "Praca domowa",
          "Zmienne wprowadzenie",
          "Zmienne globalne",
          "Zmienne w ciele żądania",
          "Środowiska wprowadzenie",
          "Środowiska",
          "Zmienne dynamiczne",
          "Skrypt wykonywany przed wysłaniem żądania",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Wczytywanie danych z pliku - wprowadzenie",
          "Wczytywanie danych z pliku Excel",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Uruchamianie kolekcji z poziomu linii poleceń - wprowadzenie",
          "Import i export kolekcji",
          "Uruchamianie testów za pomocą Newman",
          "Dlaczego chcemy uruchamiać testy z poziomu command line",
          "Autoryzacja i autentykacja - wprowadzenie",
          "Basic authentication",
          "Digest authentication",
          "Hawk auth",
          "Gdzie znaleźć informacje o metodzie autoryzacji?",
          "Plan gry na testy aplikacji",
          "Założenie konta",
          "Próba dodania filtra",
          "Stworzenie API tokenu",
          "Testy i unikalna nazwa filtra",
          "Tworzenie filtra z taką samą nazwą",
          "Pobranie filtra",
          "Aktualizacja filtra",
          "Usunięcie filtra"
        ],
        "Przygotowanie środowiska do pracy": [
          "Instalacja JDK",
          "Ustawienie JAVA_HOME na Mac OS",
          "Pierwszy program w notatniku",
          "Instalacja IDE - Intelij IDEA",
          "Pierwszy program przy użyciu Intelij IDEA"
        ],
        "Java podstawowy kurs dla testera": [
          "Konwencja nazewnictwa i styl kodowania",
          "Komentarze w Javie",
          "Tworzenie repozytorium GIT",
          "Prymitywne typy danych",
          "Typy obiektowe",
          "Zmienne - deklaracja i inicjalizacja",
          "Operatory matematyczne",
          "Inkrementacja i dekrementacja",
          "Pobieranie danych od użytkownika",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Operatory porównania",
          "Operatory logiczne",
          "Instrukcje warunkowe - if",
          "Instrukcja warunkowa if else",
          "Instrukcja warunkowa else if",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Instrukcja switch",
          "Pętla for",
          "Pętla for - uzupełnienie",
          "Pętla while",
          "Pętla do while",
          "Tablice jednowymiarowe",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Debugowanie",
          "Czym jest klasa?",
          "Tworzenie obiektów",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Klasy dostarczone z językiem programowania Java",
          "Metody",
          "Metody zwracające wartość",
          "Parametry metod",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Konstruktor",
          "Konstruktor z parametrami",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Pola statyczne",
          "Metody statyczne",
          "Dziedziczenie",
          "Słowo kluczowe super",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Nadpisywanie metod",
          "Przeciążanie metod",
          "Paczki",
          "Modyfikatory dostępu",
          "Getter i Setter",
          "Słowo kluczowe super - uzupełnienie",
          "Słowo kluczowe final",
          "Interfejsy",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Polimorfizm",
          "Modyfikacje istniejącego kodu - polimorfizm",
          "Klasy abstrakcyjne",
          "Konwersja i rzutowanie typów",
          "Wyjątki",
          "Obsługiwanie wyjątków I",
          "Obsługiwanie wyjątków II",
          "Własny wyjątek",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Zapisywanie danych do pliku",
          "Czytanie danych z pliku",
          "Kolekcje - lista",
          "Kolekcje - set",
          "Kolekcje - mapa",
          "Zadanie - liczenie wystąpień",
          "Zadanie - palindrom",
          "Zadanie - wyraz ciągu"
        ],
        "TestNG zapoznanie z frameworkiem do uruchamiania testów": [
          "Zapoznanie z adnotacjami w TestNG",
          "TestNG - priorytet, grupy oraz zależności między testami",
          "TestNG - DataProvider",
          "TestNg - TestListener"
        ],
        "Testowanie API - REST Assured": [
          "Pobranie REST Assured",
          "Dlaczego nie dodawać pliku jar jako zależności?",
          "Instalacja Mavena",
          "Instalacja Mavena na Mac OS",
          "Maven - fazy cyklu budowania projektu",
          "Pobranie REST Assured za pomocą Mavena",
          "BDD - Given/When/Then",
          "Pierwszy request",
          "Logowanie informacji o response",
          "Dodanie TestNG do projektu",
          "Pobranie konkretnego posta",
          "Dodawanie nowego posta",
          "Dodawanie nowego posta - zmiana content type",
          "Dodawanie nowego posta - ładowanie request body z pliku",
          "Dodawanie nowego posta - ładowanie request body jako mapa",
          "Dodanie JSON serializer do projektu",
          "Dodanie nowego posta - klasa Post",
          "Nadpisywanie istniejącego posta",
          "Nadpisywanie istniejącego posta - klasa Post",
          "Pomijanie pól z wartością null",
          "Aktualizacja posta",
          "Usuwanie posta",
          "Path params",
          "Filtrowanie postów - query params",
          "Weryfikacja kodu odpowiedzi",
          "Weryfikacja ciała odpowiedzi - sprawdzanie całości ciała",
          "Weryfikacja ciała odpowiedzi - sprawdzanie części ciała",
          "Weryfikacja ciała odpowiedzi - sprawdzanie wartości konkretnego pola",
          "Weryfikacja ciała odpowiedzi - obiekt klasy Post",
          "Weryfikacja ciała odpowiedzi - porównanie obiektów",
          "Porównanie obiektów tej samej klasy - equals i hashCode",
          "Poprawienie czytelności kodu",
          "Inne sposobu zapisania kodu",
          "Modyfikacja zwracanego ciała odpowiedzi",
          "JSONPath podstawy",
          "JSONPath zaawansowane wyszukiwanie",
          "JSONPath naprawienie błędu",
          "JSONPath - lista elementów",
          "XMLPath podstawy",
          "XMLPath wyszukiwanie zaawansowane",
          "Sprawdzanie schema",
          "Mierzenie czasu odpowiedzi",
          "Response aware matcher",
          "Request specification",
          "Response specification",
          "Konfiguracja logów",
          "Basic authentication",
          "Jira - tworzenie konta",
          "Jira API - pobranie issue",
          "Basic authentication JIra i pobranie issue",
          "Nowy projekt - tworzenia frameworka",
          "BaseTest - request, response specification oraz konfiguracja logów",
          "Pobranie pojedyńczego elementu",
          "Pobranie wszystkich elementów",
          "Aktualizacja elementu",
          "Usuwanie elementu",
          "Zastąpienie @BeforeClass przez @BeforeSuite",
          "Przywracanie aplikacji do pierwotnego stanu",
          "Aktualizacja danych zapewniająca niezależność testów",
          "Uruchamianie testów za pomocą Mavena i generowanie raportów",
          "Wykład bonusowy"
        ]
      },
      "requirements": [
        "Nie musisz posiadać wiedzy o API",
        "Nie musisz znać żadnego języka programowania",
        "Pokaże Ci jak zainstalować wszystkie narzędzia krok po kroku"
      ],
      "description": "Kurs tworzenia testów automatycznych za pomocą biblioteki REST Assured . Testy w kursie tworzone są przy pomocy języka programowania Java. Kurs nie wymaga znajomości języka programowania. Wprowadzenie do programowania stanowi część tego kursu. Z tego kursu dowiesz się :\n- teorii dotyczącej testowania API\n- jak zainstalować wszystkie niezbędne narzędzia\n- jak wysyłać  dowolne zapytanie za pomocą biblioteki REST Assured\n- jak dostać się do konkretnych wartości w odpowiedzi\n- jak zweryfikować rezultaty\n- jak korzystać z aplikacji Postman do testowania API\n\n\nPo ukończeniu tego kursu będziesz w stanie stworzyć własny framework do testowania REST API dowolnej aplikacji",
      "target_audience": [
        "Testerzy manualni chcący nauczyć się tworzyć automatyczne testy API",
        "Testerzy automatyzujący chcący nauczyć się tworzyć automatyczne testy API"
      ]
    },
    {
      "title": "Kurs Java dla Testerów Oprogramowania",
      "url": "https://www.udemy.com/course/kurs-java-dla-testerow-oprogramowania/",
      "bio": "Kurs języka programowania Java dla testerów oprogramowania planujących automatyzację testów",
      "objectives": [
        "Przygotowanie środowiska do pracy",
        "Podstawy języka programowania Java",
        "Programowanie obiektowe",
        "Kolekcje w języku programowania Java"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp",
          "Wymagania",
          "Czego dowiesz się z tego kursu?",
          "Jak studiować ten kurs?",
          "Kontakt z instruktorem",
          "Praca domowa"
        ],
        "Przygotowanie środowiska do pracy": [
          "Wprowadzenie",
          "JRE vs JDK vs IDE",
          "Instalacja JDK",
          "Ustawienie JAVA_HOME na Mac OS",
          "Pierwszy program w notatniku",
          "Instalacja IDE",
          "Pierwszy program przy użyciu IDE"
        ],
        "Podstawy języka programowania Java": [
          "Wprowadzenie",
          "Konwencja nazewnictwa i styl kodowania",
          "Komentarze w Javie",
          "Tworzenie repozytorium",
          "Prymitywne typy danych",
          "Typy obiektowe",
          "Zmienne - deklaracja i inicjalizacja",
          "Operatory matematyczne",
          "Inkrementacja i dekrementacja",
          "Pobieranie danych od użytkownika",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Operatory porównania",
          "Operatory logiczne",
          "Instrukcje warunkowe - if",
          "Instrukcje warunkowe - if else",
          "Instrukcje warunkowe else if",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Instrukcja switch",
          "Pętla for",
          "Pętla for - uzupełnienie",
          "Pętla while",
          "Pętla do while",
          "Tablice jednowymiarowe",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Debugowanie kodu"
        ],
        "Programowanie obiektowe": [
          "Wprowadzenie",
          "Czym jest klasa?",
          "Tworzenie obiektów",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Klasy dostarczone z językiem programowania Java",
          "Metody",
          "Metody zwracające wartość",
          "Parametry metod",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Konstruktor",
          "Konstruktor z parametrami",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Pola statyczne",
          "Metody statyczne",
          "Dziedziczenie",
          "Słowo kluczowe super",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Nadpisywanie metod",
          "Przeciążanie metod",
          "Paczki",
          "Modyfikatory dostępu",
          "Getter i Setter",
          "Słowo kluczowe super - uzupełnienie",
          "Słowo kluczowe final",
          "Interfejsy",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Polimorfizm",
          "Modyfikacje istniejącego kodu - polimorfizm",
          "Klasy abstrakcyjne",
          "Konwersja i rzutowanie typów",
          "Wyjątki",
          "Obsługiwanie wyjątków I",
          "Obsługiwanie wyjątków II",
          "Własny wyjątek",
          "Praca domowa",
          "Rozwiązanie pracy domowej",
          "Zapisywanie danych do pliku",
          "Czytanie danych z pliku",
          "Enum",
          "Klasy anonimowe",
          "Wyrażenie lambda",
          "Stream"
        ],
        "Kolekcje i zadania rekrutacyjne": [
          "Wprowadzenie",
          "Kolekcje - Lista",
          "Kolekcje - Set",
          "Kolekcje - Mapa",
          "Zadanie - liczenie wystąpień",
          "Zadanie - palindrom",
          "Zadanie - wyraz ciągu",
          "Wykład bonusowy"
        ]
      },
      "requirements": [
        "Nie musisz mieć doświadczenia w programowaniu, aby przystąpić do tego kursu",
        "Nie musisz mieć doświadczenia w pisaniu testów automatycznych, aby przystąpić do tego kursu",
        "Nie musisz mieć doświadczenia w testowaniu manualnym, aby przystąpić do tego kursu"
      ],
      "description": "Kurs w którym poznasz podstawy języka programowania Java, które pozwolą Ci kontynuować naukę automatyzacji testów. Przystępując do tego kursu nie musisz posiadać żadnej wiedzy o programowaniu - wszystkiego nauczymy się od zera. Kurs Javy dla testerów został stworzony z myślą o testerach oprogramowania, którzy chcą rozpocząć pisanie testów automatycznych.\nW tym kursie skupimy się na rzeczach niezbędnych do rozpoczęcia pisania pierwszych testów.\n\n\nModuł 1: Wprowadzenie\nModuł organizacyjny z którego dowiesz się jak studiować ten kurs, aby wyciągnąć z niego jak najwięcej. Powiem Ci jak możesz się ze mną kontakować oraz jak dołączyć do dedykowanej grupy na Facebooku w której uzyskasz potrzebne wsparcie.\n\n\nModuł 2: Przygotowanie środowiska do pracy\nW tym module zainstalujemy wszystkie niezbędne narzędzia. Pokaże Ci jak korzystać z edytora kodu. W ramach tego modułu stworzymy swój pierwszy program. Najważniejsze zagadnienia modułu:\nInstalacja JDK\nUstawienie zmiennych środowiskowych\nInstalacja IDE\nPojedynek IDE i notatnika\n\n\nModuł 3: Podstawy języka programowania Java\nZ tego modułu dowiesz się między innymi czym są zmienne, instrukcje warunkowe oraz pętle. Skupimy się również na operatorach i typach danych w Javie. Najważniejsze zagadnienia modułu:\nTypy danych\nKomentarze\nZmienne\nOperatory\nInstrukcje warunkowe i sterujące ( if, if/else, switch)\nPętle ( for, while, do while )\nTablice\n\n\nModuł 4: Programowanie obiektowe\nJeżeli nie wiesz czym jest klasa oraz obiekt to ten moduł jest właśnie dla Ciebie.  Najważniejsze zagadnienia tego modułu:\nKlasa i obiekt\nMetody\nParametry metod\nKonstruktor\nPola i metody statyczne\nGetter i Setter\nDziedziczenie\nPolimorfizm\nModyfikatory dostępu\nNadpisywanie metod\nPrzeciążanie metod\nInterfejs\nKlasa abstrakcyjna\nWyjątki\nObsługa wyjątków\nOperacje na plikach\nEnum\nKlasa anonimowa\nStrumienie\n\n\nModuł 5: Kolekcje i zadania rekrutacyjne\nW tej sekcji będziemy rozkładać na czynniki pierwsze listy, mapy i inne wynalazki. Przygotuj narzędzia i do dzieła. Najważniejsze zagadnienia tego modułu:\nStrumienie\nListy\nMapy\nZbiory",
      "target_audience": [
        "Testerzy manualni, którzy chcą nauczyć się programowania w celu pisania testów automatycznych",
        "Osoby, które wchodzą do świata IT i chcą nauczyć się programowania w celu pisania testów automatycznych"
      ]
    },
    {
      "title": "Les tests de performance avec JMETER de A à Z",
      "url": "https://www.udemy.com/course/les-tests-de-performance-avec-jmeter-de-a-a-z/",
      "bio": "JMeter pour les tests de performances",
      "objectives": [
        "Commencer à mettre en œuvre des tests de performance",
        "Comprendre Jmeter de manière simple",
        "utiliser Jmeter pour des tests de performances sur plusieurs applications",
        "À la fin de ce cours, vous serez en mesure de comprendre comment mettre Load sur les applications Web",
        "Vous aurez une idée claire de toutes les fonctionnalités disponibles dans l'outil Jmeter pour écrire des cas de test de charge",
        "Acquérir des connaissances sur la surveillance des performances de l'application avec la charge donnée"
      ],
      "course_content": {},
      "requirements": [
        "Aucune connaissance préalable du domaine n'est requise"
      ],
      "description": "JMeter est l'outil de test de performance open source le plus populaire. JMeter peut également être utilisé pour effectuer des tests d'API.\n\n\nDans ce cours, vous apprendrez JMeter à partir de zéro et comment effectuer des tests de performances et des tests d'API.\n\n\nAprès ce cours, vous pouvez travailler avec JMeter pour des projets personnels et d'entreprise.\nCe cours est spécialement conçu pour les professionnels des tests de logiciels/AQ afin d'acquérir une connaissance approfondie des tests de performances à l'aide de JMeter. Cela amènera les étudiants du niveau de base à progresser dans des vidéos à votre rythme\n\n\nIl n'y a pas de pré-requis pour ce cours, tout ce que nous allons couvrir, des bases à la mise en œuvre en temps réel\nCette formation vous permettra d'acquérir une bonne connaissance de jmeter l'outil de test de performance. Vous apprendrez à élaborer, exécuter et utiliser les résultats des tests de montée en charge avec JMeter.\n\n\nÀ la fin de ce cours, vous serez en mesure de comprendre comment mettre Load sur les applications Web\nVous aurez une idée claire de toutes les fonctionnalités disponibles dans l'outil Jmeter pour écrire des cas de test de charge\nAcquérir des connaissances sur la surveillance des performances de l'application avec la charge donnée\nVous compléterez vos connaissances sur les plugins addin Jmeter pour rendre les rapports plus efficaces\n\n\nDans cette formation nous couvrirons\n\n\nFournit une couverture aux terminologies de performance de base telles que les tests de performance, les tests de résistance, etc.\n\n\nLes concepts de base pour faire avancer le JMeter et les tests de performance couvrent également de nombreuses questions d'entretien qui sont posées lors des entretiens\n\n\nDifférents types d'enregistrement.\n\n\nDifférents types d'éléments et implémentation en temps réel.\n\n\nQuestions d'entrevue et quiz pour analyser votre apprentissage.\n\n\nDans ce cours, nous allons apprendre en profondeur l'outil JMeter.\n\n\nIl couvre également les tests distribués à l'aide de JMeter\n\n\nDonner une couverture aux fonctions par défaut de JMeter\n\n\nDe base pour faire avancer les scripts Beanshell avec une implémentation pratique\n\n\nCouvrir comment nous pouvons utiliser des plugins avancés avec JMeter\n\n\nComment utiliser le code Java dans JMeter.\n\n\nTest de performance de SOAP et REST API.\n\n\nÉtudes de cas et projets en temps réel.\n\n\nAprès avoir suivi le cours, vous pouvez facilement mesurer les performances de n'importe quelle application / service basé sur le Web et réussir les entretiens liés aux tests de performance.",
      "target_audience": [
        "Les personnes qui souhaitent commencer une nouvelle carrière",
        "Les personnes qui veulent apprendre les tests de logiciels Testeurs de logiciels qui souhaitent acquérir une meilleure connaissance dans leur domaine",
        "Les personnes à la recherche d'un emploi à temps partiel ou indépendant",
        "Toute personne intéressée par les tests de performance"
      ]
    },
    {
      "title": "Test Mühendisliği Yol Haritası",
      "url": "https://www.udemy.com/course/test-muhendisligi-yol-haritasi/",
      "bio": "Test Mühendisliği Kariyerine Başlamak İçin İlk Basamak!",
      "objectives": [],
      "course_content": {
        "Test Mühendisliği Yol Haritası (Yarım Saatilik Ücretsiz Bir Kurs)": [
          "Test Mühendisliği Nedir?",
          "Test Otomasyonu Nedir?",
          "Test Mühendisliği Kariyer Yolu",
          "Yazılım Testi vs Test Otomasyonu",
          "Hiçbir Test Bilgisi Olmayan Nasıl Başlamalı?",
          "Test Mühendisliği İş Fırsatları ve Geleceği",
          "Sıklıkla Sorulan Sorular",
          "Bonus Ders"
        ]
      },
      "requirements": [
        "Bilgisayar ya da mobil cihaz"
      ],
      "description": "Test Mühendisliği Yol Haritası eğitimine hoş geldiniz!\n\n\nBu eğitim test mühendisliği mesleğine giriş yapmak ve bilgi almak isteyenler için ilk basamak olarak oluşturuldu. Bu ücretsiz eğitim ile test mühendisliği mesleğini öğrenerek, hangi eğitimler ile kariyerini şekillendirebileceğinizi öğreneceksiniz.\n\n\nAyrıca kursun sonrasında, tüm eğitimlerim için indirim kuponu bulabilirsiniz.\n\n\nKurs içeriği:\n\n\nDers 1: Test Mühendisliği Nedir\nTest mühendisliğinin tanımı ve temel kavramlar\nNeden test mühendisliği bu kadar önemlidir?\nDers 2: Test Otomasyonu Nedir\nTest otomasyonunun anlamı ve faydaları\nDers 3: Test Mühendisliği Kariyer Yolu\nTest mühendisliği alanında kariyer fırsatları ve gelişim yolları\nBecerilerinizi nasıl geliştirebilirsiniz?\nDers 4: Yazılım Testi vs. Test Otomasyonu\nYazılım Testi ve test otomasyonu arasındaki farklar\nSektörde oluşan yanlış anlaşılmalar\nDers 5: Hiçbir Test Bilgisi Olmayan Nasıl Başlamalı\nTest mühendisliğine başlamak için gereken temel bilgiler\nMesleğe giriş için eğitim adımları\nDers 6: Test Mühendisliği İş Fırsatları ve Geleceği\nTest mühendisliği alanındaki iş fırsatları ve talep\nGelecekte neler bekleyebilirsiniz?\nDers 7: Sıkça Sorulan Sorular\nKurs boyunca sıkça karşılaşılan soruların yanıtları\nKariyerinizde başarılı olmanız için ipuçları\n\n\nBu kurs, test mühendisliği dünyasına dair temel bilgileri öğrenmek ve bu alanda kendinizi geliştirmek isteyenler için ideal bir başlangıç noktasıdır. Bu eğitimden sonra, hangi eğitimler ile kendinizi geliştirebileceğiniz hakkında net fikir edinebileceksiniz.\n\n\nHemen kaydolarak ve test mühendisliği yolculuğunuza başlayın!\n\n\nEğitimde görüşmek üzere",
      "target_audience": [
        "Yazılım testi sektörüne giriş yapmak isteyenler",
        "Yazılım testi hakkında bilgi almak isteyenler",
        "Yazılım testi alanında hiçbir bilgisi olmayıp, bu sektörü merak edenler"
      ]
    },
    {
      "title": "Synpress blockchain QA Automation - Paso a Paso",
      "url": "https://www.udemy.com/course/synpress-blockchain-qa-automation-paso-a-paso/",
      "bio": "Cypress y Synpress Essentials: una guía para principiantes sobre pruebas automatizadas de aplicaciones web",
      "objectives": [
        "Aprenderan las bases de Cypress y Synpress: Estudiantes aprenderán su funcionamiento y utilidad para automatizar pruebas en aplicaciones web.",
        "Desarrollar y ejecutar pruebas automáticas: Estudiantes aprenderán a configurar entorno de desarrollo, crear archivos de prueba y escribir pruebas básicas.",
        "Tecnicas: Estudiantes aprenderán a usar selectores avanzados, manejar solicitudes de red, pruebas end-to-end, rendimiento y accesibilidad, e integrar con CI/CD.",
        "Buenas prácticas: Estudiantes aprenderán organización de código, pruebas basadas en datos, depuración, aplicaciones móviles y cómo escribir código reutilizable."
      ],
      "course_content": {
        "Introduction a Synpress": [
          "Descripcion general de Synpress"
        ],
        "Configuración de Entorno": [
          "Instalación de Node.js y npm",
          "Instalacion de Git",
          "Instalacion de Visual Studio Code",
          "Instalación de Synpress y configuracion de synpress",
          "Configurando y ejecutando la primera prueba"
        ],
        "Desarrollo de casos de pruebas": [
          "caso: Registro de nuevo usuario [master]",
          "caso: Comprar un NFT [compraNFt]",
          "Aplicando Page Object Model [implementacionPOM]",
          "Introduccion a caso Creacion de NFT",
          "Desarrollo de Caso: Creacion de NFT [creacionNFT]",
          "Desarrollo de caso: NFT a la venta [ventaDeNFT]"
        ],
        "Puebas en servidor local [TODO METAMASK] Parte 1": [
          "Seteo de pagina local [localHost]",
          "Desconectando metamask de aplicaciones [disconnectWallet]",
          "Connectando billetera [connectWallet]",
          "Obtener información de billetera [getAccountsResult]",
          "Obteniendo informacion de cuenta [getNetwork]",
          "Agregando una red diferente a nuestros casos [addMetamaskNetwork]",
          "Cambiando a una red determinada [changeMetamaskNetwork]",
          "Importando una cuenta de metamask [importMetamaskAccount]",
          "Creando nueva cuenta de metamask [createMetamaskAccount]",
          "cambiando de cuenta en metamask [switchMetamaskAccount]"
        ],
        "Puebas en servidor local [TODO METAMASK] Parte 2": [
          "¿Que es el custom nonce? Cuando necesitamos cambiarlo?",
          "Activando el custom nonce en metamask [activateCustomNonceInMetamask]",
          "¿cuando necesitamos resetar nuestra cuenta de metamask?",
          "Reseteando cuenta de metamask [resetMetamaskAccount]",
          "¿Cuando necesitamos desconectar la wallet de una DApp?",
          "Desconectando la wallet de una DApp o todas las DApps [disconnectWalletFromDapp]",
          "Firmando pedidos de firma comun y de datos [confirmMetamaskSignatureRequest]",
          "Decodificando pedidos de mensajes publicos [confirmMetamaskDecryptionRequest]",
          "Rechazando pedidos de firmas [rechazarFirmas]",
          "Aprobando y rechazando transacciones gas avanzado [confirmMetamaskTransaction]",
          "Entendiendo las diferencias entre transacciones legacy y de tipo EIP-1559",
          "Trabajando con transacciones tipo EIP-1559 [transaccionesEIP1559]",
          "Aprobando y rechazando la importacion de tokens [addToken]",
          "Importando tokens desde contratos [importToken]",
          "Aceptando y rechazando transacciones [metamaskPermissionToSpend]",
          "Importando paquetes personalizados para NFTs [torresSynpress]",
          "Brindando y denegando acceso a colecciones de NFTs [permissionToApproveAll]"
        ],
        "Ganache - Red the ethereum local": [
          "¿Que es ganache, y para que nos sirve?",
          "Instalando y configurando ganache.",
          "Es momento de pasar nuestros casos para usar ganache!"
        ],
        "Fin del curso": [
          "Continuamos aprendiendo / desarrollando"
        ]
      },
      "requirements": [
        "Si los alumnos no tienen estos requisitos, aún pueden tomar el curso ya que los temas se tratan en detalle, pero puede requerir un esfuerzo adicional para ponerse al día con los conceptos básicos.",
        "Comprensión básica del desarrollo web: los alumnos deben tener una comprensión básica de los conceptos de desarrollo web, como HTML, CSS y JavaScript.",
        "Familiaridad con Node y NPM: los alumnos deben tener un conocimiento básico de Node y NPM (Node Package Manager), ya que se utilizarán para instalar y administrar los paquetes Cypress y Synpress.",
        "Experiencia con Git y el control de versiones: los alumnos deben estar familiarizados con los conceptos de Git y el control de versiones, ya que se utilizarán para administrar sus proyectos y código de prueba de Cypress.",
        "Acceso a un navegador web moderno: los alumnos deben tener acceso a un navegador web moderno como Google Chrome, Mozilla Firefox o Microsoft Edge."
      ],
      "description": "Este curso fue creado con mucha dedicacion y esmero, deseo que puedan aprender junto con mis explicaciones a utilizar Synpress y tener la posiblidad de ingresar al mundo de QA Automation para proyectos de web3 y blockchain.\n\n\nBienvenidos a esta guía completa de Cypress y Synpress, donde aprenderás a optimizar las pruebas de tu aplicación web con dos potentes herramientas de prueba automatizadas. Ya sea que seas un desarrollador experimentado o un recién llegado al mundo de las pruebas, este curso te equipará con el conocimiento y las habilidades que necesitas para crear aplicaciones web sólidas y confiables.\n\n\nRecuerden que este curso  les permitira aprender sobre Synpress y como automatizar paginas de web3 que utilizan metamask como monedero virtual, en este curso aprenderan todo lo necesario para poder  automatizar los casos de pruebas con la tecnologia mas avanzada.\n\n\nA lo largo del curso, profundizarás en las capacidades de Cypress y Synpress, explorando todo, desde la creación de pruebas básicas hasta técnicas avanzadas para optimizar y ampliar tu flujo de trabajo de pruebas. Aprenderás cómo crear pruebas desde cero, interactuar con elementos web mediante los comandos de Synpress y organizar tus pruebas en suites para lograr la máxima eficiencia.\n\n\nPero eso es solo el comienzo. También aprenderás a manejar diferentes escenarios, desde trabajar con iframes y ventanas emergentes hasta probar la autenticación y autorización de usuarios. Descubrirás cómo manejar el comportamiento asincrónico, generar informes y capturas de pantalla, y usar accesorios y pruebas basadas en datos para mejorar la cobertura de tus pruebas.\n\n\nMás allá de eso, profundizarás en algunos de los temas más avanzados y de vanguardia en las pruebas automatizadas, incluidas las pruebas de extremo a extremo, las pruebas de rendimiento, las pruebas de accesibilidad y las pruebas de aplicaciones móviles. Aprenderás cómo integrar Cypress y Synpress en sus canalizaciones de CI/CD, escribir complementos y comandos personalizados y usar selectores avanzados para orientar elementos en el DOM con precisión.\n\n\nAl final de este curso, obtendrás una comprensión profunda de Cypress y Synpress, así como la confianza y las habilidades que necesita para implementarlos en tu propio flujo de trabajo de prueba. Si eres es un desarrollador que busca mejorar sus habilidades, un profesional de control de calidad que busca automatizar sus procesos de prueba o cualquier otra persona que busca optimizar sus pruebas de aplicaciones web, este curso tiene todo lo que necesitas para tener éxito.\n\n\nSin mas que agregar, despeguemos! ?\n\n\nJuan Torres",
      "target_audience": [
        "QA Manual o Automation: ingenieros de control de calidad que desean aprender a usar Cypress y Synpress para crear y ejecutar pruebas automatizadas para aplicaciones web.",
        "Ingenieros de automatización de pruebas: Ingenieros de automatización de pruebas que desean ampliar sus habilidades y conocimientos en el uso de Cypress y Synpress para la prueba de aplicaciones web.",
        "Desarrolladores web: desarrolladores web que desean aprender a escribir pruebas automatizadas para sus aplicaciones web para garantizar la calidad y confiabilidad de su código.",
        "Cualquier persona interesada en las pruebas automatizadas: cualquier persona interesada en aprender a escribir pruebas automatizadas para aplicaciones web utilizando Cypress y Synpress, independientemente de su puesto actual o nivel de experiencia."
      ]
    },
    {
      "title": "Curso de teste unitário com QUnit",
      "url": "https://www.udemy.com/course/curso-de-teste-unitario-com-qunit/",
      "bio": "Curso de teste unitário com QUnit",
      "objectives": [],
      "course_content": {
        "Curso Qunit": [
          "Instalação",
          "Assert ok e notOk",
          "Assert equal e notEqual",
          "Assert deepEqual e deepNotEqual",
          "Módulos",
          "Skip",
          "Only",
          "Async parte 1",
          "Async parte 2",
          "Expect",
          "Callback",
          "Nested Modules"
        ]
      },
      "requirements": [
        "Conhecimento básico de Javascript"
      ],
      "description": "O QUnit é uma estrutura de teste de unidade para linguagem de programação JavaScript. O QUnit tem sido importante no campo do desenvolvimento orientado a testes e é usado pelos projetos jQuery, jQuery UI e jQuery Mobile. O QUnit é capaz de testar qualquer base de código JavaScript genérica. Este tutorial explica os conceitos fundamentais do QUnit e como usar o QUnit no dia-a-dia de qualquer projeto de teste de unidade ao trabalhar com JavaScript.",
      "target_audience": [
        "Desenvolvedores javascript que desejam melhorar seus códigos com testes unitários"
      ]
    },
    {
      "title": "Formation Test des API/WEBSERVICES avec Postman & Soapui",
      "url": "https://www.udemy.com/course/certification-test-logiciel-avec-les-api-de-a-a-z/",
      "bio": "Test logiciel avec les API : cas pratiques avec Soapui et Postman",
      "objectives": [
        "À la fin de ce cours, vous obtiendrez une connaissance complète des services Web, des API et leurs fonctionnalités",
        "Vous apprendrez à tester les Webservices et l'API REST à l'aide de SoapUI",
        "Comprendre le principe des API / webservices",
        "La différence entre les API et les web services",
        "Comprendre les API SOAP",
        "COMPRENDRE LES API REST",
        "Vous comprendrez l’importance des webservices",
        "Vous comprendrez comment générer des rapports soignés pour les résultats d'exécution",
        "Vous comprendrez la création d’une suite de test – les cas de test et les étapes de test",
        "Vous comprendrez l’exécution des cas de test sur les soap api",
        "Vous comprendrez l’exécution des cas de test sur les Rest api",
        "Capable d'implémenter SoapUI sur votre lieu de travail ou se préparera également à une opportunité de test d'API bien rémunéré",
        "Maitriser les API",
        "Maitriser POSTMAN",
        "Maitriser SoapUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "C'est quoi une API / WEB SERVICES",
          "Les avantages des API",
          "La différence entre API & WEB SERVICES",
          "API : le protocole HTTP - LES METHODES - LES CODES DE REPONSES",
          "Merci"
        ],
        "Introduction aux API REST & SOAP": [
          "Introduction aux API REST & SOAP",
          "Les API REST :",
          "Les API SOAP :",
          "REST & SOAP : QUE CHOISIR ?"
        ],
        "Postman": [
          "C'est quoi Postman ?"
        ],
        "SoapUI": [
          "C'est quoi SOAPUI ?",
          "Installation de SOAPUI",
          "SOAPUI : explorer l'outil",
          "Premier exemple d'une API SOAP :",
          "API SOAP : Création d'une suite de test :",
          "API SOAP : Execution d'un cas de test :",
          "API SOAP : Execution d'un cas de test avec les assertions",
          "API SOAP : Comment générer la documentation",
          "Exercice : TEST D’UNE API SOAP",
          "Correction Exercice : TEST D’UNE API SOAP",
          "SOAP UI : Custom Properties",
          "Exercice Custom Properties",
          "Correction exercice Custom Properties",
          "Custom Properties du test case",
          "Custom Properties",
          "Test de bout en bout ( end to end) avec Property Transfer",
          "API REST : premier exemple",
          "API REST -EXECUTION D'UN CAS DE TEST AVEC ASSERTIONS",
          "Exercice : TEST D’UNE API REST",
          "Correction Exercice : TEST D’UNE API REST",
          "Exercice N°2: TEST D’UNE API",
          "Correction Exercice N°2 : TEST D’UNE API",
          "CRUD : consultation et ajout des données",
          "REST API : CRUD & Ajout du TOKEN :",
          "REST API :Méthode Pöst"
        ],
        "Des cas pratiques": [
          "Exercice : analyser les api / les requetest et répondre",
          "Correction de l'exercice : analyser les api / les requetest et répondre",
          "Exercice : Conception et executions des API",
          "Correction de l'exercice : Conception et executions des API"
        ],
        "API :Gestion des utilisateurs": [
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs",
          "API :Gestion des utilisateurs"
        ]
      },
      "requirements": [
        "AUCUN"
      ],
      "description": "Formation de test des  API de A à Z\nFormation en test logiciel avec les API : cas pratiques avec Soapui et Postman\nPour travailler avec les API, nous utiliserons l'application Postman ! Postman vous permet de créer rapidement une requête avec la méthode et les paramètres HTTP requis, de définir le corps, les en-têtes, de soumettre la demande et d'inspecter facilement les résultats. Postman peut également vous aider si vous développez des API! J'ai créé ce cours pour les ingénieurs de test et bien pour les développeurs de logiciels. Postman peut vous aider pendant le développement de votre API ainsi qu'une fois l'API terminée, en exécutant des tests qui s'assurent que votre API fonctionne toujours comme prévu. Postman compte plus de 10 millions d'utilisateurs dans le monde et continue de croître. Ce cours vous présentera Postman et convient aux débutants. Vous apprendrez à créer des demandes d'API avec Postman, à inspecter les réponses pour déboguer les problèmes. Postman est devenu un outil complexe qui possède de nombreuses capacités\n\n\nRegardons donc ce que vous allez apprendre pendant le cours: Commencez par des demandes simples Avancer vers des scénarios plus complexes\nCe cours traite :\n-les API\n-UTILISATION DES METHODES : GET / POST / DELETE / PUT/PATCH\n-Tests manuels  avec POSTMAN pour les API WEB\n-Tests  automatisés  avec POSTMAN pour les API WEB\n\n\nDonc, après ce cours, vous saurez capable de travailler avec Postman. Inscrivez-vous dès aujourd'hui!\n\n\nMaitriser le test des API / web services : SOAP et REST\nÀ la fin du cours, vous serez maîtrisé dans les tests d'API REST / Webservices et pourrez l'implémenter avec succès sur votre lieu de travail ou vous atterrirez sûrement sur un emploi bien rémunéré\nAlors, qu'est-ce qui rend ce cours unique sur le marché ?\nNous supposons que les étudiants n'ont aucune expérience des tests d'API et commencent chaque sujet à partir de zéro et des bases.\n·Que sont les Webservices et les API\n·Comment tester les services Web à l'aide de l'interface utilisateur Soap\nTest des services et des API à l'aide de l'outil SoapUI\nQu'est-ce que l'API Rest\nTest des API REST à l'aide de l'outil SoapUI\nQu'est-ce que l'API SOAP\nTest des API SOAP à l'aide de l'outil SoapUI\nCréation d’une campagne de test avec les suites de test, les cas de test et les étapes de test\nFiltrer les cas de test en ajoutant les assertions\nÀ la fin de ce cours, vous comprendrez les spécifications du service Web et de l'API et rédigerez toutes sortes de cas de test efficaces pour les services dans Soap ui en utilisant toutes les fonctionnalités disponibles sur l'outil.\n\n\n\n\nCouverture du cours\n\n\nConfigurer un exemple d'application pour la pratique\n\n\nConfigurer SoapUI\n\n\nCréer des requêtes de base (GET, POST, PUT, DELETE)\n\n\nRédiger des cas de test de bout en bout\n\n\nAjouter des assertions aux cas de test\n\n\nApprenez différentes étapes dans SoapUI",
      "target_audience": [
        "Toute personne souhaite maitriser le test des API / web services : SOAP et REST",
        "Testeurs manuels qui veulent apprendre le test des services Web",
        "Tout diplômé qui souhaite lancer sa carrière dans les tests",
        "Toute personnes la recherche d'opportunités dans les tests de logiciels / tests d'API",
        "Testeurs manuels à la recherche d'une opportunité dans les API / WebServices",
        "Testeurs d'automatisation fonctionnelle pour étendre leurs scripts sur les webservices",
        "Des testeurs d'intrusion pour comprendre les failles de sécurité"
      ]
    },
    {
      "title": "Appium! Automatización de Pruebas en Dispositivos Móviles",
      "url": "https://www.udemy.com/course/appium-automatizacion-de-pruebas-en-dispositivos-moviles/",
      "bio": "Todo el set de herramientas para que te conviertas en un experto en automatización de pruebas mobile.",
      "objectives": [
        "Quality Assurance",
        "Testers",
        "Automatización de pruebas",
        "Appium"
      ],
      "course_content": {
        "Inicio": [
          "Introducción",
          "Hoja de Ruta"
        ],
        "Herramientas": [
          "Java JDK",
          "Appium Desktop",
          "Appium Server",
          "Android Studio / Emulador Android AVD - 1",
          "Android Studio / Emulador Android AVD - 2",
          "Kobiton",
          "Antes de continuar...",
          "Pycharm"
        ],
        "Desarrollo": [
          "Behavior Driven Development",
          "Behavior Driven Development - 2",
          "Iniciando el Framework (parte 1)",
          "Iniciando el Framework (parte 2)",
          "Creando nuevas funciones/steps definitions",
          "Funcion: current_activity",
          "Parentesis",
          "Locator Strategy",
          "Page Object Model",
          "Organización de Clases en el Framework",
          "Iteración con Casos de prueba"
        ],
        "Reporte": [
          "Reporte Allure Framework"
        ]
      },
      "requirements": [
        "Podrás configurar tu entorno y crear casos de pruebas automatizados para testear tus aplicaciones."
      ],
      "description": "Automatización de pruebas con Appium y Python para principiantes.\nEn este curso aprenderás todo lo relacionado a la creación de escenarios de pruebas bajo la modalidad BDD\nTe facilitaremos todo el set de tools que necesitas para empezar a automatizar pruebas con dispositivos android (iOS esta por definirse)\nTendrás la oportunidad de proponer tus propias ideas para el framework de automatización.\n\n\nEl objetivo del curso es que puedas:\n· Configurar de 0 un Framework de automatización de pruebas de aplicaciones android.\n· Escribir casos de pruebas con código de fácil mantenimiento y reutilizable.\n· Seguimiento de casos de pruebas automatizados\n· Mantenimiento del Framework de Automatización\nCon este curso aprenderás a hacer automatización de pruebas para aplicaciones utilizando principalmente Python y appium entre otras librerías y herramientas. Abarcaremos extensamente cada uno de los tópicos mostrados a continuación.\n\n\nAppium - Hoja de Ruta\n\n\nHerramientas:\n· Appium Desktop\n· Appium Server\n· Android Studio.\nJava JDK\nEmulador Android Studio - AVD\n· Kobiton\n· Pycharm\n· Introducción a Cucumber Behave\n· Introducción a Appium\n· Allure Reports\n· Funciones Appium, nos apoyaremos extensamente en la librería.\n\n\nIncluiremos nuevo contenido semanalmente hasta noviembre de 2021\n\n\n¿Qué es lo hace a este curso uno de los mejores de Udemy:\n· Nosotros asumimos que no tienes ninguna o poca experiencia en automatización de pruebas / Desarrollo / configuración de entornos entonces abordamos estos tópicos desde un nivel que cualquiera pueda entender.\n· Testeamos aplicaciones reales en tiempo real para entender cómo cada componente puede ser automatizado.\n· Te explicamos todo en más de 10 horas de video, prácticas y abordamos temas que te ayudarán a ampliar tu base de conocimientos.\n· Aunque es necesario que tengas una base de conocimiento en Python, no es mandatorio para realizar este curso.",
      "target_audience": [
        "Quality assurance Automation (automatizadores) que deseen aprendr appium"
      ]
    },
    {
      "title": "Aprenda JMeter em 1 Hora - Iniciante",
      "url": "https://www.udemy.com/course/aprenda-jmeter-em-1-hora-iniciante/",
      "bio": "Aprenda a utilizar o jMeter, o melhor software open-source para teste de performance, teste de carga e teste de stress",
      "objectives": [
        "O que é afinal o jMeter?",
        "Por que eu como programador devo saber isso?",
        "Test Plan, Thread Groups e Requests",
        "Geração de Relatórios",
        "Gravação Automática de Navegação para Testes",
        "Execução via Linha de Comando",
        "e mais..."
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Sobre o jMeter",
          "Instalação",
          "Overview do jMeter",
          "Primeiro Teste no jMeter"
        ],
        "Aprofundando os Conhecimentos em jMeter": [
          "TestPlans, Thread Groups e Requests",
          "Diferenciando TestPlans, Thread Groups e Requests",
          "Listeners (Relatórios)",
          "Assertions (Testes)",
          "Blazemeter (Gravação)",
          "Sem Interface Gráfica (Linha de Comando)",
          "Testando Linha de Comando"
        ],
        "Dashboards e Plugins": [
          "Dashboards",
          "Sobre dashboards",
          "Plugins"
        ],
        "Dicas Finais": [
          "Dicas Finais"
        ]
      },
      "requirements": [
        "Não há pré-requisitos!"
      ],
      "description": "Cansado de cursos longos?\nAqui eu te ensino os primeiros passos com o jMeter em aproximadamente 1 hora, sem enrolação! Dá pra assistir o curso inteiro no horário do almoço e depois ainda impressionar o chefe dizendo que aprendeu a fazer testes de performance de maneira automatizada.\n\n\nMas... pra quê aprender jMeter?\nGrande parte das empresas que tem um ramo de TI, seja esta uma uma startup ou multinacional, possuem ao menos um sistema robusto que não pode ficar fora do ar, independente do número de acessos. Imagine o cenário em que o esse sistema receba milhares de acessos simultâneos, de pessoas reais ou de robôs tentando derrubá-lo... Você consegue garantir que o servidor vai aguentar? Que o sistema vai conseguir processar tudo? Que o banco de dados não vai cair? O teste de performance e carga com o uso do jMeter veio para sanar esse tipo de situação. Além disso, o jMeter e o conhecimento sobre esses testes é um diferencial a mais no seu currículo.\n\n\nOK, me convenceu. Mas em 1 hora vou aprender TUDO?\nVocê vai aprender tudo o que precisa pra fazer testes de performance de maneira eficiente. A partir desse curso iniciante, você já vai ter uma excelente bagagem pra fazer o básico com o jMeter. Aqui você não vai aprender coisas mais avançadas que só irão te confundir. Aprendizado é uma escada. Este curso será os primeiros degraus! Essa é a premissa desse curso, ser um guia essencial do jMeter e de testes de performance  para profissionais de TI iniciantes.\n\n\nPra quem esse curso é recomendado, então?\nProgramadores iniciantes\nEstudantes de Ciência da Computação ou áreas correlatas\nProgramadores, devops, full-stacks que querem aprender sobre teste de carga e ter um primeiro contato com a ferramenta\n\n\nPra quem esse curso não é recomendado?\nProgramadores que já sabem já sabem tudo sobre o jMeter e usam ele diariamente (lembre-se, esse é um curso para iniciantes!)\nProgramadores querendo aprender teste unitário, teste de APIs (temos o curso de Postman!)\n\n\nChega de conversa! Vamos aprender a fazer testes de performance?",
      "target_audience": [
        "Programadores iniciantes",
        "Estudantes de Ciência da Computação ou áreas correlatas",
        "Programadores, devops, full-stacks que querem aprender sobre teste de carga e ter um primeiro contato com a ferramenta"
      ]
    },
    {
      "title": "Java, JUnit ve Mockito ile Unit Test Yazma Eğitimi",
      "url": "https://www.udemy.com/course/java-unit-test-egitimi/",
      "bio": "Java, JUnit ve Mockito ile Unit Testler yazarak, kodlarınızın doğru çalıştığından emin olmanın yöntemini öğrenin.",
      "objectives": [
        "Java projelerini, otomatik olarak saniyeler içerisinde çalışan unit testler ile test ederek, projelerinizde birim seviyesinde bir hata olmadığından sürekli emin olarak daha çok hatasız kodlar yazabileceksiniz.",
        "Java projelerinde yaptığınız değişikliklerin projeye olan etkisi(hata üretti mi, başka özellikleri bozdu mu) hakkında çok hızlı bir şekilde sürekli geri bildirim alabileceksiniz.",
        "Java projelerinde bir hata bulduğunuzda bu hatanın nedenini çok hızlı bir şekilde tespit edebilecek ve yazacağınız testler ile de hatanın giderildiğinden emin olabileceksiniz.",
        "Java dünyasında en çok kullanılan unit test araçlarını bir çok farklı senaryoda etkin bir şekilde kullanabileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Ders'e Giriş",
          "Geliştirme Ortamımızı Ayağa Kaldıralım",
          "Kaynaklar"
        ],
        "Unit Test Nedir?": [
          "Object Oriented Paradigma’da Unit Test Nedir?",
          "Unit Test’in Yapısı",
          "Nasıl Çalıştığını Görelim",
          "Neden Unit Test Yazmalıyız?",
          "Unit Test Nedir?",
          "Kaynaklar"
        ],
        "Temel Seviye JUnit": [
          "JUnit Nedir?",
          "Standart Test Sınıfı",
          "Testleri İsimlendirme",
          "Örnek Proje: Öğrenci Ders Kayıt",
          "Assertion Nedir?",
          "Standart Assertion'lar",
          "Assertion’ların Gruplanması",
          "Exception Assertion’ı",
          "Zaman Aşımı Assertion'ları",
          "Assumptions",
          "Testleri Pasifleştirme",
          "Koşullu Test Çalıştırma",
          "Tagleme ve Filtreleme",
          "Pratik I: Fibonacci Sayıları",
          "Pratik II: Minimum Yol Maliyeti: Problem",
          "Pratik II: Minimum Yol Maliyeti: Senaryolar ve Kontroller",
          "Pratik II: Minimum Yol Maliyeti: Başlangıç Bitiş Aynı",
          "Pratik II: Minimum Yol Maliyeti: Tek Satırlı Matrix",
          "Pratik II: Minimum Yol Maliyeti: Çok Satırlı Matrix",
          "Pratik III: Öğretim Üyesine Ders Ekleme",
          "Temel Seviye JUnit",
          "Temel Seviye JUnit Ödev",
          "Kaynaklar"
        ],
        "Orta Seviye JUnit": [
          "Test Methodlarının Hayat Döngüsü(Lifecycle)",
          "İç İçe Testler(@Nested)",
          "Dependency Injection",
          "Test Interface ve Default Method’lar",
          "Tekrar Eden Testler(@RepeatedTest)",
          "Parametrik Testler: @ValueSource",
          "Parametrik Testler: @EnumSource",
          "Parametrik Testler: @MethodSource",
          "Parametrik Testler: @CsvSource, @CsvFileSource",
          "Parametrik Testler: @ArgumentSource",
          "Parametrik Testler: Type Conversion, Display Name",
          "Dinamik Testler",
          "Pratik I: PrimeFactors",
          "Pratik II: Öğrenci Ders Sil",
          "Orta Seviye JUnit",
          "Orta Seviye JUnit Ödev"
        ],
        "İleri Seviye JUnit": [
          "Extension Model",
          "Execution Condition",
          "Test Instance Post Processor",
          "Parameter Resolver",
          "Test Hayat Döngüsünde Kullanılan Callback’ler",
          "Hata Yönetimi",
          "Test Şablonları(@TestTemplate)",
          "Pratik: Öğrenci Ortalama Not Hesapla",
          "Ileri Seviye JUnit"
        ],
        "AssertJ": [
          "AssertJ Nedir?",
          "String’ler Üzerinde Assertion’lar",
          "Collection’lar Üzerinde Assertion’lar I",
          "Collection'lar Üzerinde Assertion'lar II",
          "Kendi Objelerimiz Üzerinde Assertion’lar",
          "Exception’lar Üzerinde Assertion'lar",
          "Pratik: Ders Kayıt JUnit Assertion’ları AssertJ’e Çevirelim"
        ],
        "Mock Objeler": [
          "Mock Obje Nedir?",
          "Ne Zaman Mock Obje Kullanmalıyım?",
          "Farklı Mock Obje Tanımları",
          "Mock Objeler",
          "Kaynaklar"
        ],
        "Temel Seviye Mockito": [
          "Ders Kayıt Projesine Application Katmanı Ekleme",
          "Mockito Nedir?",
          "Mock Obje Davranışlarını Programlama(Stubbing)",
          "Mock Obje Etkileşimlerini Geçerleme",
          "Mockito’nun Kısıtları",
          "Pratik: Öğrenci Ders Sil Servisi",
          "Temel Seviye Mockito",
          "Kaynaklar"
        ],
        "Orta Seviye Mockito": [
          "Mockito Annotation'ları",
          "void Dönen Methodların Mock'lanması",
          "Argument Captor",
          "Pratik: Öğrenci Transcript Servisi",
          "Orta Seviye Mockito"
        ],
        "İleri Seviye Mockito": [
          "Farklı Geçerleme Yöntemleri",
          "Spy",
          "Kısmi(Partial) Mock",
          "Mockito ile BDD",
          "İleri Seviye Mockito"
        ]
      },
      "requirements": [
        "Java Programlama Dili 8 versiyonu hakkında temel seviyede bilgi sahibi olmak.",
        "Maven bağımlılıklarını ekleyip, Java kodlarını yazıp çalıştırabileceği bir IDE'ye sahip olmak."
      ],
      "description": "Her yazılım geliştiricinin sahip olması gereken en önemli niteliklerden birisi olan unit test yazmayı, Java projeleri için en güncel ve en çok kullanılan unit test araçları ile bu ders'de öğreneceğiz.\nKaliteli unit testler yazmak uzun dönem yazılım bakım maliyetlerinin farkında olan kaliteli bir yazılım mühendisinin temel özelliklerinden birisidir.\nDers kapsamında;\nJunit'in en son versiyonu olan JUnit5'in bir önceki versiyona göre hem platform olarak hem de developer'lara sunulan yetkinlikler olarak oldukça farklılık gösteren, kod yazarken hayatımızı daha da kolaylaştıran özelliklerini,\nTest kodlarımızda yaptığımız geçerlemelerin(assertions) bir makale gibi kolay bir şekilde okunmasını ve anlaşılmasını sağlayan AssertJ'i,\nDaha odaklı daha iyi tasarlanmış kodlar ve unit testler yazmamıza olanak sağlayan Mockito'nun özelliklerini çok farklı senaryolarda nasıl kullanabileceğimizi,\nDersin başından sonuna kadar, dersin toplam süresinin büyük bir kısmını da alan, tamamen pratik kod yazım örnekleri ile, gerçek hayat uygulamalarına yakın olması için örnek bir proje domain'i üzerinde öğreneceğiz.\nAyrıca, Test-Driven Development (TDD) yöntemi ile yazılım geliştirme doğrudan bu ders'in kapsamında olmamak ile birlikte ders'deki bazı kodlama pratikleri TDD yöntemi ile yazılmıştır dolayısı ile TDD yöntemi ile test'in ve kodun nasıl bir birlerine paralel olarak geliştiğini de bu ders'deki bazı pratiklerde görebileceksiniz.\nDers'de Kullanılan Yazılım Geliştirme Araçları\nJava 10\nJUnit 5\nMockito 2\nAssertJ 3\nMaven 3\nIntelliJ IDEA 2018.1",
      "target_audience": [
        "Yazdığı Java kodlarını otomatik olarak unit testler(birim test) ile test etmek isteyenler.",
        "Java dünyasında en çok kullanılan unit test araclarından olan JUnit5, Mockito ve AssertJ gibi kütüphaneleri öğrenmek isteyenler."
      ]
    },
    {
      "title": "Débutez avec DevOps & CICD quand on est developpeur [2025]",
      "url": "https://www.udemy.com/course/debutez-avec-devops-et-la-cicd-quand-on-est-developpeur/",
      "bio": "Mettez en place des pipelines CICD automatisés pour accélérer la livraison et la gestion de vos applications",
      "objectives": [
        "Conteneuriser votre application Java (Sprint Boot) avec Docker",
        "Mettre en place un pipeline CICD avec Jenkins",
        "Upgrader votre application grâce à liquibase",
        "Déployer votre application en continue avec Ansible"
      ],
      "course_content": {},
      "requirements": [
        "Aucune base nécessaire"
      ],
      "description": "Vous êtes développeur ou administrateur système ou alors juste un curieux de l'IT ;\nVous entendez souvent parler d'intégration continue, de déploiement continu, de livraison continue ;\nÇa vous paraît cool peut-être et vous commencez à vous demander si autant d'enthousiasme autour de ces termes se justifie ?\nVous-vous êtes dit, \"il faut que je m'y intéresse !\"\nAlors vous êtes au bon endroit!\nDans ce cours, nous abordons de façon pédagogique les concepts de la CICD et nous vous faisons résoudre,\npar la voie de la pratique, étape par étape, des problématiques du monde réel rencontrées par les entreprises, en s'appuyant sur les dernières recommandations en la matière.\nNous nous basons sur un projet codé en JAVA avec le Framework Spring-boot et le gestionnaire de dépendances Apache Maven.\nN'ayez pas peur pour autant; Pas besoin de maîtriser un langage en particulier!\nSi vous savez ouvrir une invite de commande et taper \"Entrer\" alors le tour est joué !\nAu sortir de ce cours, vous serez capables :\nD'intégrer une solution CI/CD simple mais efficace dans un projet existant quel que soit le langage de programmation utilisé!\nDe faire force de proposition avec des arguments à forte plus value auprès de vos clients/collègues/collaborateurs à propos des bénéfices d'un processus CI/CD de qualité !\nPrérequis : Avoir des bases en Java et Docker (voir notre cours sur Udemy)\nFormateurs :\nPhilippe SIMO : Dev Java Full-Stack et DevOps Freelance\nDirane TAFEN : Cloud et DevOps ingénieur Freelance",
      "target_audience": [
        "Développeur informatique tout niveau",
        "DevOps",
        "Administrateur Système"
      ]
    },
    {
      "title": "Fundamentos de Pruebas de Software - QA",
      "url": "https://www.udemy.com/course/fundamentos-de-pruebas-de-software-qa/",
      "bio": "Curso con mejores Prácticas de Pruebas de Software desde Cero!",
      "objectives": [
        "Fundamentos de Pruebas de Software y Mejores Prácticas!!!",
        "Tipos de Pruebas de Software, Diseños de Plan de Pruebas, Estimaciones de Pruebas",
        "Estrategias de Pruebas, Reporte de Defectos",
        "Técnicas de Diseño de Casos de Prueba y algunas herramientas de pruebas!"
      ],
      "course_content": {
        "Introducción a las Pruebas de Software": [
          "Quiero ser Tester!",
          "¿Qué es la Calidad?",
          "¿Qué son las Pruebas de Software?",
          "Validación vs Verificación",
          "Quality Control vs Quality Assurance"
        ],
        "Tipos de Pruebas de Software": [
          "Pruebas Funcionales",
          "Pruebas de Regresión",
          "Pruebas de Performance",
          "Pruebas de Seguridad",
          "Pruebas de IVR",
          "Pruebas de Móviles",
          "Pruebas de Business Intelligence",
          "Pruebas de Microservicios",
          "Pruebas Unitarias",
          "Pruebas de Integración",
          "Pruebas de Humo",
          "Pruebas de Globalización",
          "Pruebas de UAT"
        ],
        "El Ciclo de Vida": [
          "Ciclo de Vida del Desarrollo y de las Pruebas de Software",
          "El Orden de las Pruebas del Software",
          "Niveles de Pruebas"
        ],
        "Ciclo de Vida de las Pruebas del Software": [
          "Análisis",
          "Estrategia de Pruebas",
          "Estimación de Pruebas",
          "Diseño - Plan de Pruebas",
          "Diseño",
          "Casos de Prueba",
          "Reglas de Negocio",
          "Técnicas de Diseño de Casos de Prueba",
          "Grafos",
          "Tablas de Decisión",
          "Valores al límite",
          "Clases de Partición Equivalente",
          "Testware",
          "Trazabilidad",
          "Ejecución",
          "ERA",
          "Evidencias",
          "Reporte de Pruebas",
          "Ciclo de Vida de los Defectos",
          "Reporte de Defectos",
          "Colonias de Defectos",
          "UAT",
          "Cierre"
        ],
        "Herramientas de Pruebas de Software": [
          "Test Link para Administración de Pruebas Tradicionales Instalación",
          "Crear Proyecto en TestLink",
          "Crear Usuarios en TestLink",
          "Crear Test Suite en TestLink",
          "Diseño de Casos de Prueba en Test Link",
          "Copiar casos de Prueba en Test Link",
          "Crear Test Plan en Test Link",
          "Ejecutar Casos de Prueba en TestLink",
          "Mantis Bug Tracker Para administrar Defectos Instalación",
          "Crear Usuarios en Mantis BT",
          "Crear Proyecto en Mantis BT",
          "Crear Incidencia en Mantis BT",
          "Seguimiento de Defecto en Mantis BT",
          "Jira Para Pruebas Ágiles Instalación",
          "Jira Crear Secciones"
        ]
      },
      "requirements": [
        "No se necesita experiencia, solo ganas de aprender!, Hemos logrado que muchas personas que no tienen conocimiento en la rama del TI, aprendan de Pruebas de Software!"
      ],
      "description": "Generamos un contenido con lo necesario para que puedas entender y adentrarte en el mundo de Pruebas de Software!\n\n\nToda la información es obtenida de la experiencia y mejores prácticas en Pruebas de Software llevada por mas de 15 años, por lo cual en el material no veras los vídeos como una biblia donde tendrás que aprenderte un concepto y memorizarlo, sino los vídeos los hacemos de forma que se entiendan, el usuario aprenda y no se tengan que memorizar.\n\n\nEn este curso de Fundamentos de Pruebas de Software vas aprender acerca de Pruebas de Software, para comenzar a realizar tu trabajo como tester, y no esperar a que te indiquen que hacer y como realizarlo, nos gusta presentar a nuestros estudiantes como diriamos coloquialmente darle arena fina y no cascajo, con el fin de que aprenda lo que realmente necesitará aprender para adentrarse en el tema de pruebas de software.\n\n\nAprenderás desde conocimientos básicos, como donde estoy parado y para donde debo de ir, que rol juego, que debo de hacer, conceptualización, y aprenderas ademas temas avanzados y mejores prácticas.!,\n\n\nAprenderás a crear Estimaciones, Planes de Pruebas, diseñar casos de prueba con Técnicas de Diseño para identificar mas casos de prueba y combinaciones, ejecuciones, defectos, metodologías y ciclos de vidas, tanto del desarrollo de software como de las Pruebas del Software, así como las Métricas requeridas.",
      "target_audience": [
        "Toda aquella persona que desee aprender QA, o que este realizando prácticas de QA sin conocimiento",
        "Personas que deseen implementar procesos y mejoras en su área de Pruebas de Software",
        "Gerentes de pruebas, líderes de pruebas, Ingenieros de Pruebas, Testers, Practicantes o Estudiantes."
      ]
    },
    {
      "title": "ISTQB Yazılım Test Uzmanı Foundation Level Çalışma Soruları",
      "url": "https://www.udemy.com/course/istqb-yazlm-test-uzman-foundation-level-calsma-sorular/",
      "bio": "Yazılım testi temel ilkeleri, süreçleri öğrenerek kariyerinize sağlam bir başlangıç yapın. Yeni başlayanlar için İdeal !",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Bu kurs, yazılım testi alanında kariyer yapmak isteyen veya yazılım projelerinde test süreçlerini anlamak ve uygulamak isteyen sektör profesyonelelri , BT çalışanları , Bilgi teknolojilerine ilgi duyanlar ve mevcut mesleğinden memnun olmayıp yazılım sektörüne geçiş yapmak isteyen herkes için ideal bir başlangıç noktasıdır. Yazılım testinin temel ilkelerinden başlayarak, manuel test teknikleri, test süreçleri, hata yönetimi ve test otomasyonu gibi konuları adım adım öğreneceksiniz. Kurs boyunca, gerçek hayat senaryoları ve pratik örneklerle bilginizi pekiştirecek ve ISTQB® Temel Seviye sınavına hazırlık yapacaksınız.\n\n\nYazılım testinin neden bu kadar önemli olduğunu anlamak, kaliteli yazılım geliştirme sürecinde nasıl katkıda bulunabileceğinizi keşfetmek ve iş dünyasında fark yaratacak yetkinlikler kazanmak için bu kursu alın. Test planlama, test stratejileri oluşturma, test araçlarını kullanma ve etkili hata raporlama gibi becerilerle, yazılım projelerinde kritik bir rol üstlenmeye hazır olacaksınız. Ayrıca, kurs sonunda sektördeki en iyi test uygulamalarını öğrenmiş ve kendinizi profesyonel olarak geliştirmiş olacaksınız.\n\n\nBu kurs, ISTQB® Temel Seviye sınavına yönelik kapsamlı bir hazırlık sunar. Yazılım testi süreçleri, test teknikleri, hata yönetimi ve test otomasyonu gibi temel konuları kapsayan dersler ile sınava tam donanımlı şekilde hazırlanacaksınız. 20 zorlu pratik soruyla, sınavda karşılaşabileceğiniz konulara dair bilginizi pekiştirme fırsatı bulacaksınız.\n\n\nISTQB® sınavına yönelik 20 zorlu pratik soru ile bilginizi test edecek ve sınav gününe hazır olacaksınız!",
      "target_audience": [
        "Bu kurs, yazılım testi konusunda kariyer yapmak isteyen ya da bu alanda temel bilgi edinmek isteyen bireyler için tasarlanmıştır. Yazılım testine ilgi duyan, manuel ve otomasyon test süreçlerini öğrenmek isteyen, BT alanında çalışan veya çalışmayı hedefleyen kişiler için uygundur. Ayrıca yazılım geliştiriciler, proje yöneticileri ve iş analistleri gibi yazılım geliştirme sürecinde rol alan ve test süreçlerini daha iyi anlamak isteyen profesyoneller de bu kurstan faydalanabilir. Teknik geçmişi olmayan, yazılım dünyasına yeni adım atan bireyler için de uygun bir başlangıç noktasıdır."
      ]
    },
    {
      "title": "Kurs Cucumber BDD dla testerów automatyzujących",
      "url": "https://www.udemy.com/course/kurs-cucumber-bdd/",
      "bio": "Behavior-driven development dla początkujących",
      "objectives": [
        "jak stworzyć pliki feature i opisać zachowanie aplikacji za pomocą Gherkina",
        "jak połączyć wyrażenia z plików opisujących zachowanie z odpowiednimi metodami języka programowania Java",
        "poznasz słowa kluczowe i dowiesz się co powinny zawierać zgodnie z konwencją",
        "dowiesz się jak dodać podejście BDD/Cucumbera i Gherkina do projektu testów automatycznych na poziomie interfejsu użytkownika"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Wprowadzenie",
          "Wymagania",
          "Prośba",
          "Efekt końcowy",
          "Agenda",
          "Kontakt z instruktorem"
        ],
        "Przykład testu z zastosowaniem podejścia BDD": [
          "Czym jest BDD?",
          "Wady i zalety BDD",
          "Przykład pliku feature",
          "Przykład kodu połączonego z plikiem feature"
        ],
        "Przygotowanie środowiska do pracy": [
          "Instalacja Javy",
          "Ustawienie JAVA_HOME na Mac OS",
          "Instalacja Mavena",
          "Instalacja Mavena na Mac OS",
          "Instalacja IDE"
        ],
        "Pierwszy projekt - automatyzacja testów UI": [
          "Prezentacja pierwszego testu",
          "Stworzenie pierwszego projektu i dodanie zależności",
          "Instalacja wtyczek",
          "Słowa kluczowe feature, scenario i opis scenariusza",
          "Słowo kluczowe Given",
          "Słowo kluczowe When i And",
          "Słowo kluczowe Then",
          "Słowo kluczowe But",
          "Dodawanie metod powiązanych z krokami z pliku feature",
          "Dodawanie metod powiązanych z krokami z pliku feature ||",
          "Utworzenie repozytorium Git",
          "Otwieranie przeglądarki i przechodzenie na stronę główną",
          "Przejście do strony Moje konto",
          "Wprowadzenie poprawnych danych do formularza",
          "Wprowadzanie niepoprawnych danych do formularza logowania",
          "Weryfikacja przekierowania do strony konta użytkownika",
          "Weryfikacja czy formularz logowania nie jest widoczny",
          "Weryfikacja wyświetlenia błędu",
          "Dodanie parametrów do metody",
          "Zamykanie przeglądarki po teście",
          "Słowo kluczowe Background",
          "Dodanie zmian do repozytorium",
          "Poprawa stabilności testów",
          "Poprawa metod oczekujących na określony warunek",
          "Przekazywanie wartości do kroku",
          "Uruchamianie testu dla różnych danych testowych - Scenario Outline",
          "Przekazywanie większej ilości parametrów do pojedynczego kroku - DataTable",
          "Przekazywanie większej ilości parametrów do pojedynczego kroku - Mapa",
          "Przekazywanie obiektu klasy w kroku",
          "Transformacja DataTable na obiekt wybranej klasy",
          "Tworzenie raportu z testów na zewnętrznym serwerze",
          "Tworzenie raportu HTML na Twoim komputerze"
        ],
        "Modyfikacja kodu zgodnie z dobrymi praktykami": [
          "Refaktoryzacja kodu - wprowadzenie",
          "Usuwanie zbędnych elementów i definiowanie Page Objectu",
          "Dodanie Page Objectu I",
          "Dodanie Page Objectu II",
          "Wykorzystanie Page Objectów w definicjach kroków",
          "Zmiana języka pliku feature na język angielski",
          "Rozwiązanie pracy domowej",
          "Weryfikacja testów po refaktoryzacji"
        ]
      },
      "requirements": [
        "Podstawowa znajomość Javy",
        "Znajomość Selenium WebDriver",
        "Podstawowa znajomość Mavena"
      ],
      "description": "Uwaga!\nKurs jest częścią ścieżki edukacyjnej testera automatyzującego aplikacje internetowe w języku programowania Java. Przystępując do tego kursu powinieneś być absolwentem poprzednich kroków ścieżki edukacyjnej. W przeciwnym wypadku część tego kursu może być niezrozumiała. Z koncepcją ścieżki edukacyjnej możesz zapoznać się w lekcji pod tytułem \"Ścieżka edukacyjna\".\n\n\nBehavior-Driven Development (BDD) polega na tworzeniu testów i oprogramowania przez opisywanie jego zachowania z perspektywy użytkownika. W kursie skupimy się na opisywaniu zachowania testowanej aplikacji za pomocą składni Gherkina w plikach z rozszerzeniem feature. Poznamy najważniejsze słowa kluczowe i dowiemy się jak stosować je zgodnie z konwencją. Kolejnym krokiem będzie połączenie słownego opisu z odpowiednimi metodami języka programowania Java, co pozwoli nam ostatecznie uruchomić testy kryjące się pod słownym opisem zrozumiałym dla ludzi mniej technicznych. Na koniec dodamy Cucumbera do projektu testów na poziomie interfejsu użytkownika stworzonych za pomocą Selenium WebDriver. Podejście BDD jak i sam Cucumber stają się coraz bardziej popularne i coraz szerzej stosowane na różnych poziomach testów.\n\n\nZ tego kursu dowiesz się:\njak stworzyć pliki feature i opisać zachowanie aplikacji za pomocą Gherkina\njak połączyć sentencje z plików feature z odpowiednimi metodami języka programowania Java\npoznasz słowa kluczowe i dowiesz się co powinny zawierać zgodnie z konwencją\ndowiesz się jak dodać podejście BDD/Cucumbera i Gherkina do projektu testów automatycznych na poziomie interfejsu użytkownika\nWymagania:\nPodstawowa znajomość Javy\nPodstawowa znajomość Intelij\nPodstawowa znajomość Mavena\nZnajomość Selenium WebDriver\n\n\nDla kogo jest ten kurs:\nProgramiści oraz testerzy automatyzujący chcący pisać swoje testy korzystając z podejścia BDD\nOsoby związane z biznesem chcące nauczyć się tworzyć historyjki opisujące zachowanie aplikacji przy użyciu  Cucumbera i Gherkina\nO Autorze:\nMam na imię Bartek i już od 7 lat zajmuje się tworzeniem testów automatycznych. Skupiam się na tworzeniu szkieletów testów automatycznych, które pomagają zmniejszyć czas i koszt testowania manualnego i dają informację zwrotną programistom tworzącym aplikację. Mam nadzieję, że moje kursy pomogą Ci  poszerzyć Twoją wiedzę.",
      "target_audience": [
        "Programiści oraz testerzy automatyzujący chcący pisać swoje testy korzystając z podejścia BDD",
        "Osoby związane z biznesem chcące nauczyć się tworzyć historyjki opisujące zachowanie aplikacji przy użyciu Cucumbera i Gherkina"
      ]
    },
    {
      "title": "Robot Framework: Básico - WEB e API",
      "url": "https://www.udemy.com/course/robot-framework-basico-web-e-api/",
      "bio": "Aprenda conceitos básicos de Robot framework e faça testes WEB com Selenium e testes em APIs",
      "objectives": [
        "Aprenderão o básico de robot framework",
        "Aprenderão os conceitos básicos de automação de testes",
        "Conseguirão começar um projeto de testes WEB do zero",
        "Conseguirão começar um projeto de testes API do zero"
      ],
      "course_content": {
        "Introdução": [
          "Introdução do instrutor",
          "Guia das aulas",
          "Acesse o código",
          "Tire suas dúvidas e participe da comunidade"
        ],
        "Instalação": [
          "Instalação do Python e robot framework",
          "Instalação do VS Code e plugins",
          "Instalação de bibliotecas e Requirements.txt"
        ],
        "Estruturas básicas": [
          "Apresentação do módulo",
          "Arquivos .robot e .resource",
          "Como executar um teste",
          "Parâmetros para execução de testes",
          "Lista de parâmetros para execução",
          "Escolhendo diretório de destino",
          "Configurando nível de detalhe dos logs",
          "Utilizando tags nos testes",
          "Atribuindo variáveis por linha de comando",
          "Utilizando parâmetros para escolher testes",
          "Outros parâmetro configuráveis",
          "Utilizando atributo de Documentation",
          "Aprendendo Setup e Teardown"
        ],
        "Biblioteca - Built In do Robot Framework": [
          "Apresentação módulo e biblioteca Built In",
          "Criação e gerenciamento de variáveis",
          "Criando variáveis com argumentos",
          "Utilizando keywords \"Should...\" para validações",
          "Utilizando IF-ELSE nos testes",
          "Utilizando laço FOR nos testes",
          "Conversão de variáveis",
          "Trabalhando com listas",
          "Trabalhando com dicionários",
          "Quais são os Logs pra imprimir informações do testes",
          "Forçando e Gerenciando cenários de erro",
          "Como usar \"Run Keyword...\""
        ],
        "Introdução aos testes de API com Robot Framework": [
          "Nivelamento sobre testes de API",
          "Conhecendo biblioteca Requests",
          "Principais keywords da biblioteca Requests",
          "Estrutura básica para envio de requisições",
          "Enviando primeira requisição GET",
          "Como ler o Response de uma requisição",
          "Enviando requisição POST",
          "Fazendo validações simples com o response"
        ],
        "Introdução ao testes WEB com Robot Framework + Selenium": [
          "Instalação Selenium e Configuração do Chrome Driver",
          "Introdução a biblioteca Selenium",
          "Abrindo e gerenciando páginas Web",
          "Introdução a locators: Xpath e CSS",
          "Escrevendo em campos de texto",
          "Interagindo com checkbox",
          "Interagindo com radio button",
          "Selecionando dropdown",
          "Obtendo informações em texto da página web",
          "Clicando em elementos",
          "Interagindo com \"Alerts\""
        ],
        "Projeto de API - SERVER REST": [
          "Construindo estrutura do projeto API",
          "Criação de usuário",
          "Excluir usuário",
          "Buscar usuário",
          "Atualizar usuário",
          "Considerações finais do projeto de API"
        ],
        "Projeto WEB - Selenium": [
          "Apresentação estrutura do projeto",
          "Aplicação WEB que será testada",
          "Criação de teste de Login com sucesso",
          "Criação de teste de Login sem sucesso",
          "Criação de teste de Checkout (Compra)"
        ],
        "Considerações finais": [
          "Conclusão"
        ],
        "Bônus": [
          "Aula Bônus - Confira!"
        ]
      },
      "requirements": [
        "Entendimento básico de lógica de programação",
        "Ter noção sobre teste de software"
      ],
      "description": "O curso Robot Framework: Básico - WEB e API proporciona uma introdução abrangente e uma base sólida à ferramenta, cobrindo desde os conhecimentos fundamentais de testes automatizados com Robot Framework tais como:\nEstrutura de arquivos .robot e .resource\nEntendimento das estruturas de Setup e Teardown\nComo utilizar Tags e outro parâmetros para executar os teste por linha de comando\nEtc.\nTambém é abordada a utilização da biblioteca fundamental do Robot Framework, BuiltIn, a qual fornece diversas Keywords importantes para manipulação dos testes.\nO curso contempla o estudo de testes de API e testes Web. Para a realização dos testes Web será utilizada a biblioteca Selenium, enquanto para os testes de API será utilizada a biblioteca Requests. Durante esse curso, serão aprendidos conhecimentos básicos de ambos os níveis de teste e, ao final, haverá um projeto básico envolvendo tudo o que foi aprendido.\nCom este curso, espero que os alunos consigam uma base sólida do que é a ferramenta Robot Framework, adquiram conhecimentos gerais das bibliotecas estudadas e também entendam como iniciar projetos simples de automação de testes Web e de API. Além disso, os alunos serão capacitados a aplicar esses conhecimentos em cenários reais, aumentando a eficiência e a eficácia de suas atividades de testes automatizados.",
      "target_audience": [
        "QAs que estão começando a aprender automação de testes",
        "QAs que já sabem automação de testes mas não conhecem a ferramenta"
      ]
    },
    {
      "title": "Python ユニットテスト入門 ～ テスト自動化・ バグの早期発見と修正・コードの品質向上・開発の効率化を実現する方法",
      "url": "https://www.udemy.com/course/pyhon-unittest-basic/",
      "bio": "ユニットテストとはなにか、ユニットテストの書き方・考え方・使い方、コードカバレッジ計測の方法を学んで自信を持って行動をかけるようになろう",
      "objectives": [
        "ターミナルで遊ぶゲームプログラムにバグがないか？ 労働時間計算や給与計算が正しく行えているかを題材に自動テストを学びます。",
        "ユニットテストの概念、用語を理解できます",
        "ユニットテスト実装の5つの基本方針が身に付きます",
        "フレームワーク unittest と pytest の基本的な使い方を学べます",
        "カバレッジの概念を理解できます",
        "カバレッジを使ってテストしたいプロジェクトのどの程度がカバーできているかブラウザで見えるようになります",
        "ユニットテストをターミナルで実行する方法、PyCharmで実行する方法を身につけられます",
        "テスト実行前後に共通して行う処理をテストに組み込めるようになります"
      ],
      "course_content": {
        "紹介": [
          "本コースで使うリソース"
        ],
        "【第一部】ユニットテストの概要": [
          "ユニットテストとはなにか",
          "ユニットテストフレームワークとは",
          "用語解説: テスト対象を集める機能",
          "用語解説: テスト実行とレポート作成機能",
          "ユニットテストフレームワークの概要",
          "unittest フレームワークでテスト実行する方法",
          "pytest フレームワークでテスト実行する方法",
          "テストに失敗するパターン",
          "PyCharmでテストを実行する方法",
          "VS Codeでテストを実行する方法",
          "ユニットテスト実装時の5つの基本方針",
          "ここまでのまとめ"
        ],
        "【第二部】unittest フレームワーク": [
          "unittest フレームワークの要件",
          "アサーション (検証コード) の書き方",
          "アサーションのハンズオン",
          "例外が発生するかのテスト",
          "例外メッセージのテスト",
          "unittest アサーションのコーディング演習",
          "例外が発生するかのテスト",
          "例外メッセージのテスト",
          "四則演算を行う関数のテスト",
          "テストケース実行前後の処理共通化のイントロ",
          "テスト対象である「じゃんけんゲーム」の概要説明",
          "テスト実行前後の処理共通化メソッドの概要",
          "共通化処理メソッド: setUpClass",
          "共通化処理メソッド: tearDownClass",
          "共通化処理メソッド: setUp",
          "共通化処理メソッド: tearDown",
          "テスト対象である「じゃんけんゲーム」の勝敗判定の挙動確認",
          "正しく勝敗判定できているかテスト",
          "勝敗メッセージが正しく実装されているかテスト",
          "「じゃんけんゲーム」で得点計算されるまでの流れの解説",
          "勝敗数記録が正しく行えているかテスト (Score クラス)",
          "勝敗数記録が正しく行えているかテスト (Referee クラス)",
          "ここまでのまとめ",
          "コーディング演習問題: Worker の挙動解説",
          "Workerクラスのテスト: 平日所定労働時間内で働く労働者",
          "Workerクラスのテスト: 平日所定労働時間外で働く労働者",
          "Workerクラスのテスト: 休日に働く労働者",
          "コーディング演習問題: Payroll の挙動解説",
          "Payrollクラスのテスト: 平日所定労働時間内で働く労働者",
          "Payrollクラスのテスト: 平日所定労働時間外で働く労働者",
          "Payrollクラスのテスト: 休日に働く労働者"
        ],
        "【第三部】pytest フレームワーク": [
          "pytest フレームワークの要件",
          "例外メッセージのテスト",
          "テスト前後に行う処理の共通化: 関数ベース @pytest.fixture",
          "テスト前後に行う処理の共通化: クラスベース @pytest.fixture(autouse=True)",
          "テスト前後に行う処理の共通化: クラスベース @pytest.mark.parametrize",
          "演習問題: worker クラス",
          "演習問題: payroll クラス",
          "テスト対象であるトランプゲーム「ブラックジャック」の解説",
          "カードスコアの設定が正しいかテスト",
          "手札のスコア計算をテスト",
          "ナチュラルブラックジャック状態の判定が正しいかテスト",
          "手札のスコア計算テストを @pytest.mark.parametrize を使って共通化",
          "バーストしたかの判定が正しいかのテストを @pytest.mark.parametrize を使って共通化",
          "ディーラーがカードを引く判定のテスト: @pytest.fixture(auteuse=True)",
          "ディーラーがカードを引く判定のテスト: @pytest.mark.parametrize",
          "勝敗判定が正しいかテスト & 演習問題",
          "掛け金分配が正しいかテスト & 演習問題",
          "ここまでのまとめ"
        ],
        "第四部: Coverage (カバレッジ)": [
          "カバレッジの概要",
          "カバレッジの設定ファイル",
          "カバレッジの実行方法とレポートの表示",
          "HTML形式のカバレッジレポートの生成とブラウザで表示",
          "カバレッジレポートの初期化",
          "カバレッジ計測はあくまで指標の1つ"
        ]
      },
      "requirements": [
        "Python 3 基礎文法の理解 (Python 3 エンジニア基礎認定試験レベル)",
        "クラスの理解は必須です"
      ],
      "description": "仕様を満たすよう正しく実装できたかあまり自信がない\nバグがないかヒヤヒヤして不安なまま眠りにつくことがある\nリファクタリングするとき正しく実装できたか確認するのに神経を使い疲れる\n\n\nもしこのような経験があれば本書で解説するユニットテストで解決できます。ユニットテストとはプログラムの品質を保証するための技術です。\n\n\nプログラムは一度書いて終わり、ということはほとんどありません。常に変更、改善が求められます。もしかするとすでに「リファクタリングしたらバグが出るようになった！」というクレームを経験したことがあるかもしれませんね。\n\n\nこういうつらい経験をしないためにはユニットテストが有効であり、初心者から抜け出すために必須の技術です。\n\n\nさいわいなことに基礎的なユニットテストの概念や実装はそれほど難しいものではありません。にもかかわらず絶大な威力を発揮します。ざっくり説明すると「〇〇になるべき」というテストコードを記述しておき、それを満たすように関数・メソッドを実装します。\n正しく実装できていなければエラーになり、すぐに気づくことができます。つまり開発が効率化され、コードの品質が向上し、リファクタリング時にバグが混入する可能性がグッと低くなります。\n\n\n本書は四部構成でユニットテストの基礎的な知識を解説します。\n\n\n第一部ではユニットテストの概要を解説します。ユニットテストがどういったものなのか？ どのような機能があるのか？ どのような方針で実装していくのか？ などのイメージをつかみます。\n第二部では unittest フレームワークを用いた実装方法を解説します。\n第三部では pytest フレームワークを用いた実装方法を解説します。\n第四部ではプログラム全体がユニットテストでどの程度カバーできたかを計測する方法と注意点を解説します。\n\n\nときおりコーディング演習問題を挟みながら理解度を確認できるよう構成しました。\n\n\nユニットテストは単純でありながら強力な開発ツールです。したがってすぐに実務に活かせ、明日からの開発スタイルが変わります。\n\n\nさあ、これから一緒にユニットテストを身につけぐっすり眠れるようになりましょう！",
      "target_audience": [
        "Python 基礎文法を学習した方",
        "プロジェクトからバグを排除したい開発者",
        "プログラミングに慣れてきた新入社員"
      ]
    },
    {
      "title": "JUnit para Testadores",
      "url": "https://www.udemy.com/course/junit-para-testadores/",
      "bio": "Aprenda a base para desenvolver qualquer script de teste automatizado",
      "objectives": [
        "Utilizar o JUnit como suporte à escrita de scripts de teste automatizado"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico em na linguagem Java",
        "Conhecimento básico em alguma IDE de desenvolvimento"
      ],
      "description": "O treinamento JUnit para Testadores te ensinará a como usar esta ferramenta como apoio na escrita de testes funcionais automatizados. Através de diversos exemplos práticos e didáticos você vai aprender o necessário para usa-lo em conjunto com qualquer ferramenta de automação de teste como Selenium WebDriver, Appium, RestAssured, entre outros.",
      "target_audience": [
        "Qualquer pessoa que queira aprender a criar testes automatizados"
      ]
    },
    {
      "title": "Automatyzacja testów: API REST Assured w Java od podstaw",
      "url": "https://www.udemy.com/course/automatyzacja-api-rest-assured-java-maven-junit-testng/",
      "bio": "Naucz się automatyzacji testów API za pomocą Rest Assured w Java dzięki przykładom na żywo",
      "objectives": [
        "Instalowania i konfigurowania wszystkich niezbędnych narzędzi",
        "Zagadnienia związane z narzędziami takimi jak: REST Assured, IntelliJ, JUnit, TestNG, Maven, Postman, Swagger",
        "Tworzenie projektu oraz jego niezbędnej konfiguracji do testów automatycznych",
        "Pisanie testów automatycznych dla API w języku Java",
        "Praca z różnymi formatami danych, takimi jak: JSON, form-data, Query Params, Headers",
        "Uruchamiania testów",
        "Generowania raportu z testów"
      ],
      "course_content": {
        "WPROWADZENIE": [
          "Wstęp"
        ],
        "NIEZBĘDNE NARZĘDZIA ORAZ WPROWADZENIE DO ŚRODOWISKA TESTOWEGO": [
          "Wymagane narzędzia",
          "Zapoznanie ze sklepem na platformie programautomatycy.pl z obsługą API",
          "Zapoznanie z dokumentacją sklepu z obsługą API",
          "Utworzenie projektu Maven w Intellij oraz dodanie podstawowych bibliotek",
          "Utworzenie projektu w Postmanie",
          "Gotowy projekt api.restassured do pobrania"
        ],
        "METODY CRUD Z WYKORZYSTANIEM REST ASSURED": [
          "Metoda POST – wysyłanie requestu jako FormData za pomocą queryParam oraz queryPa",
          "Metoda POST",
          "Metoda POST – wysyłanie requestu w Body jako String",
          "Metoda POST",
          "Metoda POST – wysyłanie requestu w Body jako JSONObject",
          "Metoda POST",
          "Metoda POST – wysyłanie requestu w Body pobranego z pliku",
          "Metoda POST",
          "Metoda GET – pobieranie obiektu",
          "Metoda GET",
          "Metoda DELETE – usuwanie obiektu",
          "Metoda DELETE",
          "Metoda PUT i PATCH – edycja obiektu"
        ],
        "OPERACJE NA RESPONSE I REQUEST": [
          "Odczytywanie wartości z Response",
          "Response",
          "Wykorzystanie wartości z Response do utworzenia Requestu",
          "Serializacja",
          "Serializacja",
          "Deserializacja",
          "Deserializacja",
          "Asercje",
          "Asercje"
        ],
        "BONUS - TESTNG": [
          "Przerobienie projektu z JUnit na TestNG"
        ]
      },
      "requirements": [
        "Znajomość podstaw programowania"
      ],
      "description": "W firmie w której chcesz pracować lub już pracujesz wymagana jest umiejętność automatyzacji API za pomocą REST Assured w Java?\nJeśli tak to ten kurs jest dla Ciebie!\nNie zajmie Ci to dużo czasu, a po skończeniu kursu będziesz posiadać wystarczającą wiedzę do samodzielnej pracy. Kurs jest krótki ale treściwy, konkretny z dużą ilością przykładów i zadań.\nZapotrzebowanie na automatyzację API jest coraz większe, więc nie czekaj tylko zacznij kurs, żeby być kilka kroków przed innymi.\nPoniżej znajduje się kilka przykładów dla których warto wybrać właśnie ten kurs:\nWszystkie zagadnienia dokładnie tłumaczę na konkretnych przykładach.\nKrok po kroku przechodzę przez kolejne lekcje uzupełniając projekt o kolejne przykłady\nNie musisz pisać projektu razem ze mną, ponieważ otrzymasz dostęp do pobrania już gotowego projektu który zawiera:\nSkonfigurowany Maven wraz z wymaganymi bibliotekami\nGotowy framework testowy\nPrzygotowane przykładowe testy\nPod wybranymi lekcjami przygotowałem dla Ciebie zadania do samodzielnego wykonania\nOdpowiedzi do zadań znajdują się w wymienionym powyżej projekcie\nBędziesz się uczyć automatyzacji API na realnych przykładach\nPrzykłady opracowałem na podstawie sklepu internetowego, który udostępniam online\nOtrzymasz dostęp do niezbędnej dokumentacji między innymi do najbardziej popularnej dokumentacji w Swagger\nWykorzystane biblioteki:\nRest Assured\nJUnit\nTestNG\nJson\nJackson\nWykorzystane narzędzia:\nIntelliJ\nPostman\nSwagger\nMaven\nRest Assured\nTestowanie API to rodzaj testowania oprogramowania, który obejmuje testowanie interfejsów programowania aplikacji (API) bezpośrednio oraz w ramach testów integracyjnych w celu określenia, czy spełniają one oczekiwania dotyczące funkcjonalności, niezawodności, wydajności i bezpieczeństwa. Ponieważ interfejsy API nie mają GUI, testowanie API odbywa się w warstwie wiadomości. Testowanie interfejsów API jest obecnie uważane za krytyczne dla automatyzacji testów, ponieważ interfejsy API służą teraz jako główny interfejs do logiki aplikacji, a testy GUI są trudne do utrzymania przy krótkich cyklach wydawniczych i częstych zmianach powszechnie stosowanych w tworzeniu oprogramowania Agile i DevOps.",
      "target_audience": [
        "Osoby rozpoczynające swoją przygodę z automatyzacją testów",
        "Testerzy manualni, którzy są zainteresowani automatyzacją testów",
        "Testerzy automatyzujący, którzy jeszcze nie znają zagadnień automatyzacji API za pomocą REST Assured",
        "Deweloperzy, którzy chcą poszerzyć swoją wiedzę i umiejętności w tematyce automatyzacji testów API"
      ]
    },
    {
      "title": "Dominando Testes Unitários com C# na Prática",
      "url": "https://www.udemy.com/course/dominando-os-testes-de-software-no-net/",
      "bio": "Vamos aprender xUnit, Asserts, Traits, AutoFixture, Bogus, Mocks , medir cobertura com Code Coverage e muito mais.",
      "objectives": [
        "Aprenderemos os principais fundamentos de Testes unitários utilizando xUnit com C#",
        "Aprenderemos conceitos importantes como Asserções , Traits, Mock e Fluent Assertions",
        "Conseguiremos gerar dados fakes com Auto Fixture e Bogus",
        "Também aprenderemos a medir a cobertura dos testes"
      ],
      "course_content": {
        "Introdução aos Testes Unitários em C#": [
          "Frameworks de testes: MSTest, NUnit e xUnit",
          "Padrões e nomenclaturas nos Testes Unitários"
        ],
        "Mão na massa": [
          "Fundamentos sobre os Testes de Unidade",
          "Asserções ( Asserts )"
        ],
        "Organização dos Testes": [
          "Utilizando Traits para Categorizar Testes",
          "Ordenação dos Testes"
        ],
        "Gerando dados Aleatórios": [
          "Dados fakes com Auto Fixture",
          "Dados fakes com Bogus"
        ],
        "Trabalhando com MOCKs": [
          "Realizando Mock de Objetos",
          "Simulando retorno de métodos com Mock"
        ],
        "Técnicas adicionais para testes mais robustos": [
          "Escapando de Testes ( Ignorando ou desabilitando )",
          "Playlists de Testes",
          "Trabalhando com Fluent Assertions"
        ],
        "Cobertura de Testes no Código": [
          "Medindo Cobertura com Fine Code Coverage"
        ]
      },
      "requirements": [
        "Requisitos são conhecer o básico da linguagem C#."
      ],
      "description": "Você quer elevar a qualidade do seu código e escrever testes mais organizados, expressivos e eficazes? No meu curso, você vai aprender na prática como estruturar testes unitários robustos e limpos, utilizando as melhores ferramentas e práticas do mercado!\nO que você vai aprender?\n-  Frameworks de testes: Falaremos sobre MsTest, NUnit e xUnit.\n-  Padrões e nomenclaturas para testes organizados e de fácil manutenção\n-  Uso de asserções para validar seu código com confiança\n-  Como estruturar testes com traits para melhor organização\n-  Geração de dados aleatórios com AutoFixture e dados humanos com Bogus\n-  Como mockar chamadas de repositórios e serviços corretamente\n-  Escrevendo testes mais expressivos com Fluent Assertions\n-  Estratégias para evitar armadilhas comuns nos testes\n-  Medindo a qualidade e cobertura dos seus testes com Fine Code Coverage\n\nCom uma abordagem didática e prática, você sairá do curso sabendo exatamente como testar suas aplicações de forma eficiente e confiável! Além disso, você aprenderá a escrever testes que facilitam a manutenção do código e evitam problemas em produção.\nSe você quer dominar testes unitários e elevar o nível do seu código, este curso é para você! Não perca tempo e não fique desatualizado no mercado de trabalho, vamos lá!\nInscreva-se agora e garanta sua vaga!",
      "target_audience": [
        "Aos iniciantes em C# e que querem elevar seu conhecimento em .NET"
      ]
    },
    {
      "title": "Selenium e Java com Visual Studio Code",
      "url": "https://www.udemy.com/course/selenium-e-java-no-visual-studio-code/",
      "bio": "Desenvolva habilidades em automação de testes em Java de forma eficiente e simplificada, aumentando sua produtividade",
      "objectives": [],
      "course_content": {
        "Introdução": [
          "Boas vindas",
          "Meu canal no Telegram *"
        ],
        "Conhecendo o Selenium": [
          "Selenium 5, JUnit e vsCode",
          "Debugando Testes",
          "Manipulando Web Elements",
          "Testes de ponta a ponta",
          "Ganchos do JUnit"
        ],
        "Otimização e produtividade": [
          "Cypress no Java?",
          "Modelagem da massa de testes",
          "Reuso de código",
          "Cobertura de testes"
        ],
        "Encerramento": [
          "Parabéns! Você concluiu o curso :)"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "É um fato que a demanda por profissionais especializados em Automação de Testes com Selenium e Java continua alta. Dominar essas tecnologias não só enriquecerá sua carreira como QA, mas também abrirá portas para diversas oportunidades promissoras.\nEste curso oferece uma imersão prática e completa, capacitando você a criar scripts de testes automatizados em Java utilizando Selenium 4 e JUnit 5, aproveitando a performance e simplicidade do Visual Studio Code.\nSelenium é melhor que Cypress? Embora o Cypress seja reconhecido por sua simplicidade e baixa curva de aprendizado, vamos mostrar que é possível automatizar testes em Java com uma sintaxe igualmente simples.\nDiferenciais deste curso:\nSintaxe Simplificada: Aprenda técnicas para escrever testes de forma ágil e eficiente, reduzindo a quantidade de código necessário.\nTratamento Automático de Espera: Aprenda a lidar com tempos de espera de forma automática, garantindo que os elementos da página estejam carregados antes de interagir com eles.\nAssertions Intuitivas: Utilize métodos de asserção mais intuitivos para verificar o comportamento da página, tornando os testes mais legíveis e compreensíveis.\nVisual Studio Code: Enquanto a automação em Java é tradicionalmente associada a IDEs como Eclipse ou IntelliJ, este curso adota uma abordagem inovadora usando o Visual Studio Code (VSCode). Descubra os robustos recursos de execução e depuração de testes oferecidos por esse editor, tudo em uma interface simples e ágil.\nEste curso direto ao ponto oferece uma abordagem básica e rápida para a automação de testes, proporcionando uma experiência mais acessível e eficaz do que as abordagens convencionais. Isso pode resultar em um desenvolvimento mais rápido e confiável de testes automatizados, impulsionando sua carreira como QA.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Unit Test Yazma Sanatı",
      "url": "https://www.udemy.com/course/unit-test-yazma-sanati/",
      "bio": "Test etmek nedir ile başlayarak Unit testin tüm inceliklerinin anlatıldığı ve popüler test araçlarının gösterildiği kurs",
      "objectives": [],
      "course_content": {
        "Giriş genel test konuları": [
          "Neden test ederiz, Test aşamaları ve Unit Test nedir",
          "Örnek bir Unit Test"
        ],
        "Unit Test Yazma Kuralları": [
          "En küçük parçacık test edilmeli ve her seferinde bir senaryo test edilmeli",
          "Given When Then yontemi ve test method isimleri",
          "Test altındaki sınıfın bağımlılıkları mock ve stub olur",
          "Diğer test methodlarından bağımsız çalışmalı",
          "Diğer test methodlarından bağımsız çalışmalı - kod",
          "Otomatik çalışmalı ve diğer kurallar"
        ],
        "JUnit test kütüphanesi anlatımı": [
          "JUnit yaşam döngüsü",
          "Assertions kullanımı",
          "Parametreler",
          "Hata Yakalama",
          "Suite ve ignore"
        ],
        "Hamcrest yardımcı test kütüphanesi": [
          "hamcrest"
        ],
        "AssertJ test kütüphanesi": [
          "Lombok yardımcı kütüphane",
          "String ile test olanakları",
          "Basit listeler ile olanaklar",
          "Karışık ve zor listeler ile yapılan işlemler",
          "Dosya ve Hatalar",
          "Kendi Assert sınıfınızı nasıl yaparsınız"
        ],
        "Mockito mock kütüphanesi": [
          "Mock nedir ve neden mock kullanırız",
          "Nasıl sorgulama yapılır 1",
          "Nasıl sorgulama yapılır 2",
          "Davranış kontrol etme 1",
          "Davranış kontrol etme 2",
          "Casus nesneler (Spy)",
          "Annotation desteği"
        ],
        "Kurs dokumanları": [
          "Presentasyon"
        ]
      },
      "requirements": [
        "Genel programlama bilgisi",
        "Genel Java bilgisi - Örnekler Java iledir"
      ],
      "description": "Bu kurs artik ucretsiz olarak sunulmaktadir. Kursu ucretli takip eden kullanicalar bir sonraki kursumda extra indirim alacaklardir.\nUnit test yazma eğitiminde birim testi yazmanın tüm inceliklerini öğrenebilir, hangi popüler araçları hangi durumlarda kullanabileceğinizi görebilirsiniz.\nKursta kullanılan kütüphane ve geliştirme ortamı şöyle:\nJava 8\nJUnit 4\nMockito 2\nHamcrest\nAssertJ\nLombok\nCatchException\nIntelliJ IDEA 14\nMaven 3\nTest Driven Development (TDD) yani test güdümlü yazılım geliştirme konsepti bu kursun dışında tutulmuştur ve daha kapsamlı olarak başka bir kursta ele alınabilir.\nBu kursta testlerinizi nasıl güzel, temiz ve anlaşılabilir yazabileceğinizi göreceksiniz. Özetlemek gerekirsek alttaki konular ele alınacaktır:\nTest etmek nedir\nHangi test aşamaları vardır\nNeden test ederiz\nUnit test nedir\nUnit test yazma kuralları nelerdir\nHer kuralın Java kod örnekleriyle anlatılması\nNasıl testlerinizi kitap gibi okunan testler haline getirebilirsiniz\nPopüler test araçları nelerdir\nEn popüler test araçlarının geniş detaylı örneklerinin anlatılması\nMock nedir ve neden Mock kullanırız\nPopüler Mock kütüphaneleri nelerdir\nMockito kütüphanesinin çok geniş ve detaylı anlatımı",
      "target_audience": [
        "Java konusunda bilgisi olan",
        "Java bilmeyip unit test yazmak isteyen - Örnekler Java iledir",
        "Unit test yazmanın genel kurallarını öğrenmek isteyen",
        "Şu an en popüler Java test araçlarını öğrenmek isteyen"
      ]
    },
    {
      "title": "Sıfırdan Appium & Java İle Mobil Test Otomasyonu Öğrenin",
      "url": "https://www.udemy.com/course/sifirdanappiumjavailemobiltestotomasyonuogrenin/",
      "bio": "Appium İle Sıfırdan İleri Seviyeye Mobil Test Otomasyonu | Temelden Başlayıp Kendinizi Projelerle Geliştirin",
      "objectives": [
        "Java programlama dilini kullanarak Appium ile Mobil Otomasyon yazabileceksin.",
        "Selenium , Bdd&Cucumber Framework, TestNG kavramlarının ne anlama geldiği ve proje nasıl entegre edildiklerini de öğreneceksin.",
        "Sadece nasıl yapıldığını değil, neden yaptığımızı öğreneceksin.",
        "Projeler ve bölüm sonu testleriyle kendini geliştirebileceksin.",
        "Mülakat soruları ile kendini iş görüşmelerine hazırlayabileceksin."
      ],
      "course_content": {},
      "requirements": [
        "Bir bilgisayara sahip olmak.",
        "Java bilgisi gerektirmez, gerekli olan her şeyi baştan öğreneceksiniz."
      ],
      "description": "Kurs Hakkında\nJava kullanarak Appium ile Mobil Otomasyon yazmayı öğreneceksiniz. Selenium , Bdd&Cucumber Framework, TestNG kavramlarının ne anlama geldiği ve proje nasıl entegre edildiklerini de öğreneceksiniz.\n\n\nKurs İşlenişi\n1.Kurs sırasında öncelikle gerekli program ve ortamların kurulumunu öğreneceksin.\n2.Neden kullandığımızı ve nasıl kullandığımızı öğreneceksin.\n3.Bölüm sonu değerlendirmeleriyle kendini test edebileceksin.\n4.Projelerle kendini geliştirebileceksin.\n\n\nKurs Süresince\nBu kurs içerisinde bulunan derslerle ilgili anlamadığınız veya yapamadığınız her şeyi bana Udemy veya LinkedIn üzerinden istediğiniz zaman sorabilirsiniz.\n\n\nKurs Sonunda\nKursun sonunda bu öğrendiğimiz konuların hepsini içerisinde kullanabileceğimiz bir  adet proje yapacağız.\n\n\nEN\n\n\nAbout the Course\nYou will learn to write Mobile Automations with Appium using Java. You will also learn what Selenium, Bdd&Cucumber Framework, TestNG concepts mean and how they are integrated into the project.\n\n\nCourse Processing\n1. During the course, you will first learn how to install the necessary programs and environments.\n2. You will learn why we use it and how we use it.\n3. You will be able to test yourself with the end-of-chapter evaluations.\n4. You will be able to develop yourself with projects.\n\n\nDuring the Course\nYou can always ask me on Udemy or LinkedIn about anything you don't understand or can't do about the courses in this course.\n\n\nAt the end of the Course\nAt the end of the course, we will make a project in which we can use all of the subjects we learned.",
      "target_audience": [
        "Yazılım Testi alanında kariyer hedefi olan kişiler.",
        "Mobil Otomasyonu öğrenmek isteyen kişiler.",
        "TestNG , Cucumber , BDD , Selenium gibi kavramları öğrenmek isteyen kişiler."
      ]
    },
    {
      "title": "Robot Framework Discover",
      "url": "https://www.udemy.com/course/robot-discover/",
      "bio": "Descubra o caminho para automação de testes e dê seus primeiros passos em Robot Framework e Playwright",
      "objectives": [],
      "course_content": {
        "Descubra o Robot Framework": [
          "Meu canal no Telegram *",
          "Hello Robot Framework",
          "Organizando outputs",
          "Integrando a Biblioteca Browser",
          "Checkpoints",
          "Dicas e truques para buscar elementos",
          "Preenchendo o formulário HTML",
          "Buscando e validando o CEP",
          "Upload de Foto",
          "Clicando em botões e verificando Popups",
          "Encapsulamento de Steps",
          "Bônus: O curso não termina aqui :)"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Projetado especialmente para iniciantes sem qualquer conhecimento prévio em programação ou automação, este curso oferece uma introdução básica, porém abrangente, ao mundo da automação de testes. É uma escolha ideal para aqueles que desejam dar os primeiros passos nesse campo, de forma prática e eficiente.\nO Robot é um framework de automação de testes e RPA que se destaca por sua facilidade de uso e versatilidade. Como é open source e multiplataforma, sendo compatível com Windows, Mac e Linux, é acessível a todos os interessados. Desenvolvido principalmente em Python, o Robot Framework oferece uma abordagem simplificada para a automação, o que o torna perfeito para iniciantes.\nMas por que você deveria escolher aprender o Robot Framework? Se você se sente bloqueado na programação, não se preocupe. Este framework é conhecido por sua sintaxe clara e legível, o que o torna extremamente amigável para quem está começando. Mesmo sem qualquer experiência anterior em programação, é possível entender e começar a criar scripts de testes automatizados rapidamente.\nAo finalizar este curso básico, você estará apto(a) a elaborar testes simples para aplicações web usando a Biblioteca Browser, baseada em Playwright. Além disso, você aprenderá a executar testes de regressão usando a interface de linha de comando do Robot Framework. Legal né?\nEste curso é apenas o começo de sua jornada na automação de testes, mas proporcionará uma base sólida para você continuar avançando no campo.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Automação Web do Zero: Do Cypress Studio ao PageObjects",
      "url": "https://www.udemy.com/course/cypress-do-zero-2023-do-cypress-studio-ao-pageobjects/",
      "bio": "Dominando a Mentalidade Ágil: Cypress e Page Objects para Testes Eficientes",
      "objectives": [
        "Mentalidade Ágil e Testes de Automação",
        "Dando os primeiros passos com Cypress Studio",
        "O que é Cypress",
        "Criando um projeto de automação do zero com a estrutura Page Objects",
        "Subir projeto no github"
      ],
      "course_content": {},
      "requirements": [
        "Ter conhecimento básico de Javascript"
      ],
      "description": "Você já se perguntou como se tornar um especialista em automação de testes em um ambiente ágil? Este curso, \"Da Mentalidade à Maestria: Automação de Testes com Cypress, Incluindo Page Objects,\" é a resposta que você estava procurando.\n\n\nA mentalidade ágil é fundamental para o sucesso no mundo da qualidade de software. Neste curso, não apenas exploraremos as melhores práticas e princípios por trás de uma mentalidade ágil, mas também mergulharemos profundamente na automação de testes com o popular framework Cypress. Você não só aprenderá as habilidades técnicas necessárias para automatizar testes, mas também desenvolverá uma mentalidade ágil essencial para entregar software de alta qualidade de forma eficiente.\n\n\nO que você aprenderá:\n\n\nInicie o curso aprendendo sobre a mentalidade de um QA no contexto da automação. Aprenda a criar a automação adequada para a sua necessidade.\nComeçaremos do zero, aprenda sobre operadores Lógicos, arquitetura de sistemas. Depois iremos explorar o Cypress Studio, onde você aprenderá a gravar e executar testes simples de forma eficaz sendo guiada através do próprio Cypress\nEntenderemos o conceito de Page Objects e como organizá-los para manter seu código de automação limpo e eficiente.\nVamos evoluir a nossa automação utilizando Page Objects construindo do absoluto zero.\nAo longo do curso, desenvolveremos habilidades que vão além da automação e que são essenciais para o QA ágil, como resolução de problemas, comunicação eficaz e pensamento crítico.\n\n\nSeletores avançados (atualização 2024)\nRelatório (atualização 2024)\nPipeline (atualização 2024)\n\n\n\n\nEste curso está em fase de atualização com a adição de novos módulos.",
      "target_audience": [
        "Pessoas que estão começando suas carreiras em testes de software e desejam aprender sobre automação.",
        "Testadores manuais que desejam ampliar suas habilidades e entrar na automação de testes.",
        "Desenvolvedores que desejam entender como escrever testes automatizados usando Cypress.",
        "Engenheiros de software que desejam ter uma compreensão mais profunda do processo de automação de testes.",
        "Gerentes de QA, diretores de qualidade ou líderes de equipe que desejam aprimorar suas equipes de QA e implementar práticas ágeis.",
        "Pessoas que desenvolvem seus próprios projetos ou aplicativos e desejam garantir a qualidade por meio de testes automatizados.",
        "erentes de projeto que desejam entender como a automação de testes pode melhorar a qualidade e eficiência dos projetos.",
        "Estudantes e profissionais de qualidade de software que buscam aprimorar suas habilidades e manter-se atualizados com as melhores práticas."
      ]
    },
    {
      "title": "Автоматизация веб-тестирования с Robot Framework",
      "url": "https://www.udemy.com/course/robotframework-web/",
      "bio": "Погрузитесь в мир, где написание автотестов для веб приложений становится доступным без навыков программирования",
      "objectives": [
        "Разрабатывать автотесты для веб-сайтов в связке Robot Framework / Selenium",
        "Создавать проекты по автоматизации с нуля",
        "Понимать основные конструкции традиционного программирования",
        "Настраивать работу с разными браузерами и сайтами",
        "Пользоваться XPath и CSS селекторами для поиска элементов на странице",
        "Писать реальные тесты для настоящих сайтов"
      ],
      "course_content": {
        "Знакомимся и настраиваемся": [
          "Почему Robot Framework?",
          "Создание и настройка проекта в VSCode",
          "Создание и настройка проекта в PyCharm",
          "Первый тест",
          "Конспект: Знакомимся и настраиваемся",
          "Тест: создание и настройка проекта; первый тест"
        ],
        "Изучаем содержимое базовых тестов": [
          "Клики и ожидания",
          "Работа с переменными",
          "Предусловия и постусловия",
          "Архитектура и ресурсные файлы",
          "Конспект: базовое содержимое автотестов",
          "Тест: базовое содержимое автотестов",
          "Проект №1"
        ],
        "Сочетаем Robot Framework и серьезное программирование": [
          "Ввод данных",
          "Data Driven тестирование",
          "Переменные окружения",
          "Конспект: Ввод данных и переменные окружения",
          "Тест: ввод данных и переменные окружения",
          "Условные операторы",
          "Цикл FOR",
          "Цикл WHILE",
          "Конспект: условные операторы и циклы",
          "Тест: условные операторы и циклы",
          "Проект №2"
        ],
        "Углубляем знания": [
          "О чем раздел?",
          "Регулярные выражения",
          "Симуляция мыши",
          "Радиокнопки, чекбоксы, выпадающие списки",
          "Заключение",
          "Обратная связь"
        ]
      },
      "requirements": [
        "Базовые знания тест-дизайна (написание тест-кейсов) и видов тестирования",
        "Наличие компьютера на Windows или Mac"
      ],
      "description": "Если ты хочешь научиться автоматизировать веб приложения, при этом не имея никакого опыта автоматизации (и программирования), то тебе стоит присмотреться к Robot Framework - должно быть, самому простому и понятному инструменту для написания автотестов.\nЭтот курс призван показать, что обучение автотестам может быть простым, интересным и понятным. Никакой предыдущий опыт не нужен - все будет рассказано и разложено по полочкам для абсолютных новичков.\nПочему стоит выбрать Robot Framework?\nНе нужно учить языки программирования. Для понимания тестов хватит самых-самых основ английского языка (если вы понимаете перевод таких словосочетаний, как Click Element и Wait Until Element Is Visible, проблем с пониманием тестов не будет)\nАвтоматизация веб тестирования основана на Selenium - самой популярной библиотеки для автоматизации веб приложений, доступной на самых востребованных языках программирования. Даже если в итоге Robot Framework не пригодится вам в работе, знания отсюда очень хорошо перекладываются на основные языки программирования.\nНе нужно подключать дополнительные инструменты для отчетности и логирования - все будет установлено за вас, а сами отчеты будут автоматически создаваться - вам останется лишь показывать тем, кому они нужны.\nЗахотите тестировать не только веб приложения? В Robot Framework есть библиотеки для тестирования мобильных приложений, API, баз данных и многого другого - и вам уже будет проще их изучить, имея базу из этого курса.\nИнструментом пользуются крупные российские (например, Афиша) и зарубежные компании. Найти работу с ним вполне реально!\nВ рамках курса мы научимся создавать и запускать тесты как на настоящих сайтах - никаких демо-проектов - максимально приближаемся к боевым условиям. Наши тесты будут разной сложности сложности, начиная от совсем простых - \"нажми сюда, подожди этот элемент, нажми на него\", до куда более продвинутых - с использованием особенностей веб приложений.",
      "target_audience": [
        "Для тестировщиков, которые хотят погрузиться в волшебный мир веб автотестов с нуля"
      ]
    },
    {
      "title": "STM32F4 DISCOVERY KARTI İLE CAN BUS KURSU",
      "url": "https://www.udemy.com/course/stm32f4-discovery-karti-ile-can-bus-dersleri/",
      "bio": "CAN BUS PROTOKOLÜ KULLANIMI",
      "objectives": [
        "CAN BUS'ın tarihçesinden tüm filtreleme sistemini tüm detayıyla öğrenecek ve kurs sonunda neredeyse tam anlamıyla CAN BUS sistemini kullanır hale gelelceksiniz.",
        "Aynı zamanda STM32CubeMx ve Atollic ide si kullanımı ile datasheet okuma becerilerinizi de geliştirmiş olacaksınız.",
        "Bunlarla birlikte temel CAN BUS yapısı tam olarak anlaşılacağı için diğer mimarilerle de (pic, avr, arduino, rasp vs.) rahatlıkla kullanılabilecek."
      ],
      "course_content": {
        "Giriş": [
          "CAN BUS EĞİTİM SERİSİNE GİRİŞ"
        ],
        "CAN BUS NEDİR? NASIL ÇALIŞIR? MESAJ NASIL GÖNDERİLİR ALINIR? TÜM TEORİK BİLGİLER": [
          "CAN BUS VE TARİHÇESİ",
          "CAN BUS NASIL ÇALIŞIR",
          "CAN BUS MESAJLARI VE TEMEL ÇERÇEVE (BASE FRAME)",
          "CAN MESAJLARI VE GENİŞLETİLMİŞ ÇERÇEVE (EXTENDED FRAME)",
          "CAN BUS SİSTEMLERİNDE BİT SÜRESİ (CAN BUS BIT TIMING)",
          "CAN BUS HATA ÖNLEME",
          "CAN BUS MESAJ ALIMI VE FİLTRELEME MODLARI",
          "CAN BUS MESAJ ID FİLTRELEME"
        ],
        "CAN BUS BAĞLANTISI VE CAN BUS MODÜLÜ": [
          "CAN BUS BAĞLANTI ŞEKLİ VE TJA1951 MODÜL KULLANIMI"
        ],
        "CAN BUS DERSLERİNDE KULLANILACAK PROGRAM VE DOSYALARIN İNDİRİLMESİ": [
          "ATOLLİC, CUBEMX, STMSTUDİO KURULUMU",
          "STM32F4 DISCOVERY BOARD TANITIMI",
          "STM32F4 PROGRAMLAMAK İÇİN GEREKLİ DOSYALARIN TEMİNİ",
          "PROTEUS PROGRAMININ KURULUMU"
        ],
        "PROTEUS PROGRAMINDA CAN BUS MODÜL TASARIMI VE BASKI DEVRE OLUŞTURULMASI": [
          "PROTEUS PROGRAMINDA CAN BUS MODÜLÜ TASARIMI",
          "PCB NİN BAKIR PLAKETE ÇİZİLMESİ",
          "PCB NİN ERİTİLEREK KULLANILABİLİR HALE GETİRİLMESİ"
        ],
        "STM32CUBEMX İLE CAN BUS KONFIGURASYONU": [
          "STM32CUBEMX İLE CAN BUS KONFİGURASYONUNUN YAPILMASI VE BİT HIZI HESAPLAMALARI"
        ],
        "CAN BUS İÇİN GEREKLİ KODLARIN YAZILMASI VE STANDART ID İLE MESAJ GÖNDERİP ALMA": [
          "CAN BUS MESAJ GÖNDERMEK İÇİN GEREKLİ KODLARIN YAZILMASI",
          "CAN BUS MESAJ ALMAK İÇİN GEREKLİ KODLARIN YAZILMASI",
          "CAN BUS FİLTRE AYARLARI İÇİN GEREKLİ KODLARIN YAZILMASI",
          "PROJENİN ÇALIŞMA VİDEOSU"
        ],
        "FİLTRELEME: CAN BUS ID MASKELEME FİLTRESİ KULLANMA": [
          "FİLTRELEME: ID MASKELEME İLE BELİRLİ BİR ID NUMARASINDAN MESAJ ALMA",
          "FİLTRELEME: ID MASKELEME İLE BELİRLİ BİR ARALIKTAKİ ID'Lİ MESAJLARI ALMA",
          "FİLTRELEME: ID MASKELEME İLE BİRDEN FAZLA ARALIKTA ID'LERİ FİLTRELEME"
        ],
        "FİLTRELEME: CAN BUS ID LIST FİLTRESİ KULLANMA": [
          "FİLTRELEME: ID LIST İLE BELİRLİ ID DEĞERİNE SAHİP MESAJLARIN ALINMASI"
        ],
        "FİLTRELEME: AYNI PROJEDE BİRDEN FAZLA FİLTRE KULLANIMI": [
          "FİLTRELEME: AYNI ANDA İKİ FARKLI FİLTRE KULLANIMI VE FARKLI IDLERDE MESAJ ALIMI"
        ]
      },
      "requirements": [
        "Temel seviyede C bilgisi",
        "Temel ya da orta seviyede STM32F4 Discovery bilgisi",
        "Temel elektronik bilgisi"
      ],
      "description": "Başta otomobiller olmak üzere teknolojik araçlarda ve bazı fabrika otomasyon sistemlerinde maksimum verim ve güvenlik sağlanabilmesi için geliştirilen CAN BUS sistemlerini ilk bölümde teorik olarak incelendi. Sizler bu bölümün sonunda CAN BUS sistemini hayal dünyanızda canlandırmış olacaksınız. Devam eden derslerde teorik bilgileri yazılımsal olarak kullanarak CAN BUS sistemleri ile çalışma yapıldı. Belirli örnekler ile CAN BUS haberleşmesi pratik olarak tamamlandı. Bu derslerin sonunda CAN BUS sistemlerini ileri seviyede anlamış olacaksınız.\n\nSTM32F4 Discovery kartı ile CAN BUS programlamayı tüm detayları ile öğrenerek uzmanlaşın, adım adım CAN BUS mesaj gönderme ve alma, can bus filtreleme kavramlarını öğrenin ve hızlı bir şekilde kendi CAN BUS sisteminizi oluşturup kendi projelerinizi geliştirmenin tadını çıkarın.\n\nBu kursta ilk olarak sıfırdan CAN BUS'ın tüm kavramlarını öğrenerek STM32F4 ile kullanabilmek için sağlam bir temele sahip olacaksınız.\nEdindiğiniz bu sağlam temelden sonra; STM32F4 ile ilgili tüm kavramları detayları ve mantıklarıyla öğreneceksiniz.\nSTM32F4 İle CAN BUS Projeleri Geliştirme\nBu kursun Türkiyedeki en büyük, en kapsamlı ve de en öğretici STM32F4 ile CAN BUS Projeleri geliştirme kursu olmasını sağlamak adına , kurs içeriği zengin tutuldu ve uygulama geliştirirken ihtiyacınız olacak kavramlar, bilgiler, 3. parti kütüphaneler tüm detaylarıyla anlatıldı.\nKursta yer alan bazı önemli kavramlar\nCAN BUS temel kavramları, tasarımsal bilgiler\nSTM32F4 Discovery Kartı temel kavramları, tasarımsal bilgiler\nSTM32CubeMx temel kavramları, tasarımsal bilgiler\nProfesyonel uygulamalar geliştirmek için bilinmesi gereken kavramlar, kütüphaneler\nCAN BUS Sistemleri için zaman ayarlamaları\nCAN BUS Sistemleri için Bit Hızı\nÇok daha fazlasını kursta bulabilirsiniz.\nÖzellikle kursta yapılan projelerin tanıtım videolarını izleyerek bu kurstan sonra neler başarabileceğinizi öğrenebilirsiniz. Kurstaki örnekleri geliştirerek gerçek hayatta daha detaylı projeler ortaya koyabilirsiniz.\nKurs boyunca kafanıza takılan soruları kursun soru cevap bölümünden bana ulaştırabilirsiniz. En kısa sürede cevaplanacağından emin olabilirsiniz.\nCAN BUS öğrenmesi ve uygulaması çok keyifli bir prokol. Siz de bu son zamanların en popüler haberleşme protokolünü öğrenmek ve de hızlı ve kolay bir şekilde uygulamalar geliştirmek istiyorsanız bu kursa katılın ve beraber güzel projeler yapalım.\n\n\nÖğrenecekleriniz\nCAN BUS'ın ne olduğunu ve nasıl çalıştığı\nCAN BUS'ta filtrelerin ne olduğunu ve nasıl çalıştırıldığı\nCAN BUS'ta mesaj gönderme ve alma aşamalarının nasıl olduğu\nC programlama dilinde olan temel yapıların ne olduğunu ve nerede neden kullanıldığını\nAtollic ile ilgili önemli kavramların tüm detayları\nSTM32CubeMx kullanımı\nSTMStudio kullanımı\nYazılımsal olarak CAN BUS konfigurasyonları\nYazılımsal olarak CAN BUS Filtrelemeleri\nYazılımsal olarak CAN BUS ile Data aktarımı\nI2C protokolü\n2X16 LCD Display ve kullanımı\n\n\nKurs gereksinimleri veya ön koşulları var mı?\nTemel seviyede C dili bilgisi\nTemel seviyede arm mimarisi bilgisi\nTemel seviyede STM32CubeMx, Atollic IDE ve STMStudio bilgisi\nTemel seviyede I2C protokol bilgisi\nBu kurs kimler için uygun:\nDaha önce CAN BUS ile çalışmamış ama heyecanla öğrenmek isteyen\nSavunma sanayi alanında çalışmak isteyen\nOtomobil sektöründe çalışmak isteyen\nProgramlama ile ilgili belli yapılara hakim ama klasik basit örneklerden sıkılıp kendini daha fazla geliştirmek isteyen\nCAN BUS ile ilgili ileri seviye kavramları öğrenmek ve bunlara hakim olmak isteyen\nCAN BUS ile uygulama proje yapmadan önce CAN BUS protokolüne tam anlamıyla hakim olmak\nKod ve tasarım bilgisini bir üst seviyeye çıkarmak isteyen\nCV'sine CAN BUS protokolüne oldukça fazla hakimim maddesini eklemek isteyen\ntüm arkadaşlarımız için uygundur.",
      "target_audience": [
        "Mühendislik Öğrencileri",
        "Mühendisler",
        "Can Bus ile çalışmak isteyenler",
        "Gömülü yazılım geliştirmek isteyenler",
        "Arm öğrenmek isteyenler",
        "Otomasyoncular ve ilgili sektörler",
        "Otomotiv sektöründe AR-GE yapanlar veya yapmak isteyenler"
      ]
    },
    {
      "title": "Playwright Zombie Edition",
      "url": "https://www.udemy.com/course/playwright-zombie/",
      "bio": "Você vai automatizar testes para o Zombie+, uma aplicação Web completa que foi inspirada no Disney+",
      "objectives": [
        "Introdução ao Playwright e sua instalação para Nodejs",
        "Comparação entre Playwright e Cypress",
        "Testes de regressão em grande escala",
        "Uso de localizadores para encontrar elementos na página",
        "Interagir com diferentes elementos, como botões, alertas e elementos flutuantes",
        "Validação do comportamento esperado da aplicação",
        "Implementação de Page Objects para melhorar a manutenção dos teste",
        "Integração de Faker para criar dados de teste",
        "Utilização de encapsulamento para melhorar a modularidade dos testes",
        "Implementação de estratégias para lidar com elementos dinâmicos e situações complexas",
        "Uso de Git e Github para controle de versão e colaboração",
        "Cobertura de testes e boas práticas para garantir resultados confiáveis",
        "Exploração de testes independentes e sua importância",
        "Criação de relatórios ricos na nuvem para análise de resultados"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Contaminação do Ambiente": [
          "Boas vindas ao Playwright Zombie Edition",
          "Apresentando o Playwright",
          "Instalando o Playwright para Node.js",
          "Comparando o Playwright com o Cypress",
          "Conheça o Zombie+, inspirado no Disney+",
          "Adeus ElephantSQL e Boas vindas ao Docker",
          "PostgreSQL com Docker Compose",
          "Horda dos testes de regressão"
        ],
        "Mastigando elementos e componentes da Web": [
          "Introdução aos localizadores",
          "Localizador com Substring",
          "Checkpoints e técnicas de busca de elementos",
          "Clicando em botões",
          "Elementos flutuantes",
          "Interagindo com Alerts",
          "Validando o comportamento esperado",
          "Elementos de página a solta",
          "Page Objects na prática",
          "Elemento inexistente ou invisível?",
          "Page Objects com ganchos",
          "Estrutura dos testes de ponta a ponta",
          "Formulário de Login",
          "Trabalhando com componentes",
          "CSS Selector com Regex",
          "Page Object By the Book",
          "Trabalhando com Faker"
        ],
        "Infestação dos testes de ponta a ponta": [
          "Garantindo resultados confiáveis",
          "Consumindo a API do Zombie+",
          "Testando e modelando massa com ChatGPT",
          "O poder do encapsulamento",
          "Mais CSS Selectors com Regex",
          "Interagindo com getByLabel",
          "React Select",
          "Massa de testes estática",
          "Conexão no banco de dados",
          "Injetando Page Objects dentro do contexto",
          "Git e Github na prática",
          "Readme Markdown",
          "Corrigindo o bug na extensão",
          "Cobertura de testes",
          "Indo além do Page Objects",
          "Simplificando o fluxo de login",
          "Mensagem de boas vindas"
        ],
        "Avançando nos testes de ponta a ponta": [
          "Support Actions",
          "Upload de arquivos",
          "If com React Switch",
          "Devemos construir testes com dependência?",
          "Testes independentes",
          "Conhecendo a API do Zombie+",
          "As vezes o bug é no teste",
          "Obtendo Session Token",
          "Cadastrando o Resident Evil via Api",
          "Evitando massa de testes hard coded",
          "Reutilizando o token",
          "Encontrando erros nos testes de regressão",
          "Substituindo Toast por Popup + Testes em paralelo",
          "Removendo registros com getByRole",
          "O fato é que o Playwright é muito bom!",
          "Buscando pelo termo zumbi",
          "Encapsulamento",
          "Desafio Técnico"
        ],
        "Atacando boas práticas": [
          "Cuidado com o Faker",
          "Testes de regressão pela CLI",
          "Screenshots quando o teste falha",
          "Screenshots para todos os testes",
          "Evidências em vídeos",
          "Configurado URL Base",
          "Configuração do Ambiente com Dotenv",
          "Padronizando Viewport",
          "Multiple reporters",
          "Reports ricos na nuvem"
        ],
        "Você sobreviveu ao Apocalipse Zumbi": [
          "Parabéns, você concluiu o Playwright Zombie",
          "Bônus: Conheça o Playwright com TypeScript"
        ]
      },
      "requirements": [
        "Pelo menos 6 mêses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "O Playwright Zombie é um curso completo que te levará do ZERO ao Profisional em automação de testes com Javascript.\nCom uma abordagem prática e descomplicada, você vai automatizar testes para o Zombie+, uma aplicação Web completa com API e Banco de dados que foi inspirada no Disney+.\nO Playwright se destaca devido à sua impressionante performance, confiabilidade e flexibilidade, uma vez que, ao contrário de seus concorrentes, demonstra maestria ao suportar uma ampla variedade de sistemas web.\nE embora o curso seja lúdico, o conteúdo é sério e profissional!\nO que você vai testar?\nO Zombie+ é um sistema web de gestão de catálogo de filmes e séries sobre Zumbis.\nCom uma interface inspirada no Disney+, Zombie+ é um sistema web moderno desenvolvido com ReactJS, incorporando autenticação JWT, integração com API REST em Node.js e armazenamento de dados no PostgreSQL.\nDesafios do mundo real estão incorporados no sistema, oferecendo uma experiência excepcional para a automação de testes de software.\nPor que Playwright?\nO Playwright é uma ferramenta de código aberto desenvolvida pela Microsoft que revoluciona a automação de testes em sistemas web, oferecendo uma abordagem eficaz e altamente confiável.\nEste versátil framework suporta diversos navegadores amplamente utilizados, como o Google Chrome, Mozilla Firefox e Microsoft Edge, proporcionando a flexibilidade necessária para testar em ambientes variados. Sua capacidade de executar testes em paralelo em múltiplos navegadores e sistemas operacionais agiliza significativamente o processo de teste.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Introducere Software Testing",
      "url": "https://www.udemy.com/course/introducere-software-testing/",
      "bio": "Curs Gratuit Introductiv",
      "objectives": [
        "Ce inseamna Software Testing",
        "Care este rolul unui Software Tester",
        "Tipuri de Testare",
        "Ce este un BUG",
        "Tool-uri de Testare"
      ],
      "course_content": {
        "Introducere in Software Testing": [
          "Prezentare generala",
          "Ce inseamna Software Testing",
          "Care este rolul unui Tester",
          "Testeaza-ti cunostintele"
        ],
        "Tipuri de Testare": [
          "Testarea Non-Functionala",
          "Testarea Functionala",
          "Exemple",
          "Testeaza-ti cunostintele"
        ],
        "Ce este un BUG si cum il raportam": [
          "Ce este un BUG",
          "Raportarea unui BUG",
          "Testeaza-ti cunostintele"
        ],
        "Tool-uri de Testare": [
          "Ce sunt Tool-urile de Testare"
        ],
        "Verificare cunostinte": [
          "Test final"
        ],
        "FELICITARI - BONUS INITIERE IN IT": [
          "Oferta de Moment!"
        ]
      },
      "requirements": [
        "Poti urma acest curs chiar daca nu ai experienta in domeniul IT."
      ],
      "description": "Invata software testing de la zero din tutoriale, documentatia aferenta fiecarui subiect si exercitii practice.\nCursul este gratuit iar daca esti la inceput de drum spre o cariera de Software Tester si nu sti de unde sa incepi sau daca acest job este ceea ce iti doresti cu adevarat, te va ajuta sa iti dai seama daca ti se potriveste o pozitie de tester.\n\n\nCui se adreseaza acest curs?\n1. Persoanelor care isi doresc sa schimbe domeniul de lucru si vor un job in IT.\n2. Persoanelor care se pregatesc pentru un interviu pentru un post de Software Tester sau Testing Internship.\n3. Persoanelor care isi doresc sa invete un skill care sa le permita sa lucreze ca free-lancer.\n\n\nDe ce as vrea sa devin tester?\nLucrand in domeniul IT ai posibilitatea de a lucra remote iar programul este de cele mai multe ori flexibil. In Romania si nu numai, acest domeniu este unul dintre cele mai bine platite, fiind intr-o continua ascensiune.\nDe asemenea, poti alege sa lucrezi ca free-lancer, aceasta fiind unul din marile avantaje pe care le ofera domeniul IT, sa ai proprii clienti pentru care sa testezi aplicatii si sa asiguri calitatea acestora, fara sa mai depinzi de un job sau un angajator.\n\n\nVoi fi 100% pregatit pentru un job la finalizarea cursului?\nCursul este unul introductiv, deci nu te va pregati in totalitate pentru a trece de un interviu de testare. Vei avea in schimb bazele Testarii Software si vei putea continua studiul individual sau cu ajutorul altor cursuri special create pentru a te pregati de un interviu si un viitor job. Daca vei considera ca acest job ti se potriveste, am pregatit un curs intensiv de Software Testing pe care il gasesti pe pagina mea si de unde vei invata tot ce trebuie sa stii.\nHaide sa invatam impreuna!",
      "target_audience": [
        "Celor care isi doresc o cariera in Software Testing",
        "Celor care isi doresc o cariera in IT si nu stiu de unde sa inceapa"
      ]
    },
    {
      "title": "Jira ve Xray ile Manuel Test Süreci :Pratik örnekler(Klavuz)",
      "url": "https://www.udemy.com/course/jira-ve-xray-ile-manuel-test-sureci-pratik-orneklerklavuz/",
      "bio": "Manuel Testlerin Gücü:Jira ve Xray ile Test Süreclerini yeniden Sekillendirme",
      "objectives": [
        "Jira ve Xray kullanarak Manuel Test Süreclerini Yönetme",
        "Farkli Issue Typlerini ve Örneklerini Tanima",
        "Testlerin Yönetimi ve Takibi",
        "Gercek Sitede Test Pratigi"
      ],
      "course_content": {
        "Jira_Confluence_Scrum_Kanban": [
          "Jira_nedir_Confluence_Scrum_Kanban-(1).mp4",
          "Userstory_Olusturma",
          "UserStory_olusturma_2",
          "Jira_Xray_Entegrasyonu",
          "jira_xray_Entegrasyonu",
          "Test_Senaryosu_Olusturma"
        ],
        "Test_Senaryosu_Olusturma": [
          "Test_Senaryosu_Olusturma_2",
          "Test_Senaryosu_Olusturma_3",
          "Test_Senaryosu_Olusturma_4",
          "Pre_Condition_Ekleme"
        ],
        "Bug_Ticket_Test_Set": [
          "Test_Set_Olusturma",
          "Test_Execution_Olusturma_",
          "Bug_Ticket_Olusturma",
          "Bug_Ticket_Olusturma_2",
          "Bug_Ticket_Olusturma_3",
          "Bug_Ticket_Olusturma_4",
          "Bug_Ticket_Olusturma_5",
          "Jira_Cucumber_Entegrasyonu_Hakkinda",
          "Son_Düzeltme"
        ]
      },
      "requirements": [
        "Herhangi bir Tecrübe gerektirmiyor"
      ],
      "description": "Bu kapsamlı kurs, Jira ve Xray kullanarak manuel test süreçlerini derinlemesine ele alıyor. Yazılım testlerinin temellerinden başlayarak, Jira ve Xray’in test yönetimi süreçlerine entegrasyonunu adım adım öğrenin. Gerçek dünya örnekleri ve uygulamalı rehberlik ile, farklı issue tiplerini keşfedin ve testlerinizi daha verimli bir şekilde planlayın, izleyin ve raporlayın. Bu kurs, test yönetimi konusunda yeni bir perspektif kazanmak isteyen herkes için ideal bir kaynaktır.\nKatılımcılarımız, başlangıç seviyesinden itibaren adım adım ilerleyerek, test senaryolarını planlamayı, oluşturmayı, izlemeyi ve raporlamayı öğrenirken, aynı zamanda farklı issue tipleri ve bunların gerçek dünya uygulamalarını keşfederler\nGerçek dünya senaryolarıyla desteklenmiş olan bu kurs, öğrencilere testlerin entegrasyonu ve otomasyona geçiş stratejilerini de anlatarak, yazılım testlerinde yeni bir boyut kazanmalarını sağlayacak.\nİş hayatında test süreçlerini optimize etmek ve verimliliği artırmak isteyen herkes, Jira ve Xray ile manuel test süreçlerini daha iyi yönetmeyi öğrenir.\nKurs, başlangıç düzeyinden başlayarak katılımcıları, manuel testlerin temellerinden başlayarak ileri seviye uygulamalara kadar götürür. Öğrenciler, test senaryolarını planlamayı, oluşturmayı, izlemeyi ve raporlamayı öğrenirken, aynı zamanda farklı issue tiplerini ve bunların gerçek dünya senaryolarını keşfederler.Bu  kurs, yazılım testlerinin önemini ve süreçlerini kapsamlı bir şekilde ele alırken, katılımcılarına Jira ve Xray’in güçlü araçlarıyla nasıl entegre edileceğini adım adım öğretir. Manuel test süreçlerini etkinleştirmek, yönetmek ve optimize etmek isteyen herkes için tasarlanmıştır.",
      "target_audience": [
        "Yazilim Testlerine Ilgi Duyan Herkes icin"
      ]
    },
    {
      "title": "احتراف صيانة الموبايل قسم السوفت وير",
      "url": "https://www.udemy.com/course/htsoftware/",
      "bio": "حل جميع مشاكل الموبايل لجميع الماركات في قسم السوفت وير",
      "objectives": [
        "الكورس يتضمن شرح اساسيات الحاسوب و اهم ادوات التعامل مع اجهزة الموبايل من الصفر للاحتراف",
        "سوفت وير أجهزة السامسونج روت أجهزة السامسونج تخطي حماية غوغل بعد السوفت او الفورمات",
        "يستطيع الطالب بعد اتمام هذا الكورس أن يكون قادرا على التعامل مع الكومبيوتر وجميع أجهزة سامسونج باحتراف واصلاح جميع الاعطال المتعلقة بالسوفت وير",
        "سوفت وير جميع أجهزة الشاومي والتعامل معه",
        "كيفية عمل روت وازالة روت من الاجهزة",
        "التعامل مع السيرفرات لحل مشاكل جميع الأجهزة والشرح على السيرفر"
      ],
      "course_content": {},
      "requirements": [
        "مبدأيا بحاجة لجهاز كومبيوتر وانترنت ثابت وبعض الادوات التي تم شرحها في الكورس من ادوات مجانية او مدفوعة حسب العمليات المستهدفة",
        "محتاج وقت وبذل جهد في سبيل التعلم",
        "محتاج ان تكون تعمل او تخطط للعمل في هذا المجال"
      ],
      "description": "لجميع الباحثين عن الاحتراف وعن الطريق الصحيح والدليل الشامل لتعلم صيانة المحمول في قسم السوفت وير هذه الدورة موجهة لكم\nأيضا كل شخص لديه حب الاطلاع وتعلم مهارات جديدة يمكنك الاستفادة من هذا الكورس\nلماذا تقوم بشراء هذا الكورس ؟\nاذا كنت تعمل او تريد العمل في مجال صيانة الهاتف المحمول ولا يوجد لديك اي فكرة او خبرة\nاو اذا كنت من الاشخاص الذين يفكرون بتطوير مهاراتهم وخبرتهم في هذا المجال فأنت في المكان الصحيح\nكورس احتراف السوفت وير تم اعطاءه لاكثر من 200 شخص وبفضل من الله لا يوجد شخص لم يستفيد من هذا الكورس او يحصل على قيمة\nمادية ومعنوية\nعند دخولك الى الكورس ستكون قد انضممت الى عائلة ماذا يعني ذلك ؟\nيعني اننا سنكون الى جانبك في اي سؤال او مشكلة اثناء وبعد الكورس حتى تتمكن من الاعتماد على نفسك\nستحصل على دعم واستشارات حصرية وتنضم الى مجتمع الفنيين العرب برفقة افضل فريق عربي في هذا المجال\nيمكنكم البحث عن حلب تك وعن الحلول والطرق الحصرية التي تم برمجتها او تطويرها من هذا الفريق الرائع\nكل ماهو مطلوب منك انترنت ثابت جهازك الحاسوب محمول او ثابت لا يهم\nشغفك في المجال وتركيزك مع المدرب والبدأ في تعلم مهنة ويجب ان تركز على هذه الكلمة لانه ليس مجرد كورس\nبل هي مهنة عملية أبوابها واسعة يمكنك استغلال جميع النقاط والاستراتيجيات الموجودة للنجاح\nيجب عليك التذكر دوما انك لن تكون بمفردك أبدا لست مجرد طالب قام بشراء كورس\nسنكون حريصين على وصولك مرحلة احترافية ان شاء الله",
      "target_audience": [
        "الكورس موجه للمتبدئين الراغبين بدخول سوق العمل في مجال صيانة الهواتف المحمولة قسم السوفت وير",
        "الجميع يمكنه التعلم والاحتراف من هذا الكورس"
      ]
    },
    {
      "title": "Curso Creación Framework con Selenium, Spring y Cucumber",
      "url": "https://www.udemy.com/course/curso-creacion-framework-con-selenium-spring-y-cucumber/",
      "bio": "Aprende a crear un framework desde 0 usando patrones de diseño y las últimas tecnologías. Convierte en arquitecto TA.",
      "objectives": [
        "Como crear un framework desde 0",
        "Como usar Cucumber",
        "Como integrar Spring para el manejo de dependencias",
        "Generar reportes usando Logstash y Kibana",
        "Crear listeners"
      ],
      "course_content": {
        "Bienvenida": [
          "Código Fuente",
          "Preguntas y Soporte",
          "Contacto conmigo"
        ],
        "Configuración del entorno": [
          "Instalación del JDK (Kit de desarrollo de Java)",
          "Instalación de Maven",
          "Instalación de Intellij IDE"
        ],
        "Implementación de pageobjects": [
          "Introduction",
          "Creación básica de un Page Object Parte 1",
          "Creación básica de un Page Object Parte 2",
          "Mejorando nuestro Page Object",
          "Ejecutando nuestro test completo",
          "Dividiendo nuestro Page Object / Principio de responsabilidad única",
          "Page Factory y Lombok",
          "Manejando el Driver usando un Hook"
        ],
        "Integración con Spring": [
          "Manejando el Driver con Spring",
          "Creando un factory de Drivers",
          "Soportando ejecución en diferentes ambientes",
          "Page Object Base y Waits"
        ],
        "Patron test data builder": [
          "Patrón Test Databuilders - Generador de data 1",
          "Patrón Test Databuilders - Generador de data 2"
        ],
        "Generación de reportes": [
          "Generación de reporter con Cucumber",
          "Añadir screenshots al reporte",
          "Condicionando la captura de pantallas",
          "Configurando Kibana y Elasticsearch para la generación de reportes",
          "Enviando los datos de la ejecución a Elasticsearch",
          "Generación de reporte en tiempo de ejecución",
          "¿Qué es un listener?",
          "Crear reporte usando listener"
        ],
        "Selenium Grid": [
          "Remote webdriver / Ejecución en Grid",
          "Selenium Grid Local",
          "Selenium Grid Local / SELENOID"
        ],
        "Jenkins": [
          "Instalación y Configuración de Jenkins",
          "Lanzando pruebas desde Jenkins",
          "Parametrizando ejecución en Jenkins"
        ],
        "Integración con Springboot": [
          "¿Por qué Springboot?",
          "Integración con Sprinboot",
          "Conexión a base de datos / JPA",
          "Leyendo Excel",
          "Añadir webdrivermanager para gestionar el manejo de los drivers"
        ],
        "Generación de proyecto base con últimas versiones (Nuevo!!! 2023)": [
          "Instalación y Configuración OpenJDK",
          "Creación de proyecto usando Spring initializr",
          "Creación de runner y ejecución de tests con desde la linea de comandos",
          "Generación del reporte con Cucumber",
          "Creación del driver factory",
          "Taking screenshot",
          "Configuración de variables - Archivo de propiedades",
          "Método quit"
        ]
      },
      "requirements": [
        "Conocimiento básico de Java",
        "Conocimientos básicos de programación",
        "Conocimiento básico de Selenium WebDriver",
        "Conocimiento básico de Docker"
      ],
      "description": "La idea del curso es poder mostrar cómo crear un framework usando la integración de diferentes tecnologías, patrones y principios de desarrollo de software que soporte la ejecución de pruebas automatizadas en diferentes plataformas y ambientes.\nEn el curso usaremos cómo herramienta base, Selenium Webdriver. Después integraremos Spring para realizar el uso de inyección de dependencias y hacer nuestro framework extensible y adaptable.\nTambién crearemos un grid para la ejecución paralelizada primero de forma local y después en la nube usando para ello Docker, Selenoid, Jenkins y GCP(Google Cloud Platform).\nPor último integraremos nuestro framework con Kibana y Logstash para generar reportes en tiempo de ejecución y almacenar todas las ejecuciones que realicemos con el fin de obtener métricas que ayuden a mejorar la calidad.\nEspero sea de su agrado y aprendan bastante.\n\n\nPre requisitos:\nTener instalado el JDK 1.8\nTener instalado Docker\nIntellij Community Edition. Se recomienda la última versión\nMaven 3.6 o superior\nPlugin gherkin for java en Intellij",
      "target_audience": [
        "Personas con interés en aprender a crear un framework usando buenas prácticas",
        "Personas con interés en aprender nuevas tecnologías y patrones de diseño",
        "Personas que quieran mejorar sus skills técnicos para llevar a cabo tareas de creación de frameworks"
      ]
    },
    {
      "title": "Testes unitários com JUnit 5",
      "url": "https://www.udemy.com/course/testes-unitarios-junit5/",
      "bio": "Domine as melhores práticas de teste integrado com alguns conceitos de Onion Architecture e Domain Driven Design",
      "objectives": [
        "Criar uma sólida bateria de testes unitários a partir do zero, abordando diferentes casos de teste e cenários.",
        "Desenvolver projetos de forma segura e evolutiva, utilizando uma bateria de testes unitários de regressão para garantir a estabilidade do código.",
        "Isolar métodos de teste de dependências externas, permitindo definir o comportamento esperado dessas dependências e validar as interações realizadas nos testes",
        "Aplicar os princípios básicos do TDD (Test Driven Development), escrevendo testes antes de implementar a funcionalidade.",
        "Utilizar métricas de qualidade obtidas dos testes, como percentual de aceitação e cobertura de código, para avaliar a eficácia e abrangência dos testes.",
        "Criar builders de objetos para simplificar e centralizar a criação de entidades nos testes, facilitando a configuração de cenários.",
        "Introdução aos princípios básicos da Onion Architecture e do Domain-Driven Design (DDD)",
        "Compreender a importância de um código legível e organizado, valorizando a clareza e a simplicidade em vez de depender excessivamente de documentação."
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "JUnit vs. JUnit Jupiter",
          "Testes unitários"
        ],
        "Ambiente": [
          "Montando o ambiente: JAVA",
          "Montando o ambiente: Eclipse",
          "Criando o projeto"
        ],
        "Conceitos básicos": [
          "O que é um teste?",
          "F.I.R.S.T.",
          "Introduzindo o JUnit 5",
          "Verificando a igualdade",
          "Outras assertivas",
          "Classe de Equivalência",
          "Falha vs. Erro",
          "Tratamento de erros",
          "Ciclo de vida das variáveis",
          "Befores / Afters"
        ],
        "Gerenciador Financeiro": [
          "Onion Architecture",
          "Domínio: Usuário",
          "Deve criar um usuário válido",
          "Organizando assertivas",
          "Deve rejeitar usuário sem nome",
          "Criando entidades para o teste",
          "Builder Master",
          "Desafio: Validações",
          "Parameterized",
          "Revisitando o desafio",
          "Dados externalizados"
        ],
        "TDD": [
          "Deve criar uma conta válida",
          "Devo rejeitar uma conta incompleta"
        ],
        "Gerenciando dependências externas": [
          "Camada de serviço",
          "Inversão de dependência",
          "Não deve existir usuário com o mesmo email",
          "Memory Data",
          "Testando com banco",
          "Ordem de execução",
          "Dummy Class"
        ],
        "Mocks": [
          "Mockito",
          "Entendendo o comportamento do mock",
          "Deve retornar usuário por email",
          "Verificações em mock",
          "Repetições em mock",
          "Deve salvar usuário",
          "Organizando teste",
          "Annotations",
          "ExtendWith",
          "Deve Rejeitar usuário inexistente",
          "Conta",
          "Usuário não pode ter conta repetida",
          "Void Methods",
          "Exceções no mock",
          "Matchers",
          "Argument Captor",
          "Transação",
          "Builder Master 2",
          "Assertiva com dependência",
          "Devo rejeitar uma transação incompleta",
          "Assumptions",
          "Enable / Disable",
          "Mock Static",
          "Mock Constructor",
          "Refatorar para simplificar",
          "Spy",
          "Testar métodos privados",
          "Revisão"
        ],
        "Cobertura de código": [
          "Cobertura de código",
          "Color Driven Development",
          "100% de Cobertura?"
        ],
        "Execuções": [
          "Linha de Comando",
          "Suite",
          "Tags"
        ],
        "Encerramento": [
          "Até a próxima",
          "Aula bônus!"
        ]
      },
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA"
      ],
      "description": "Seja bem-vindo ao curso de testes unitários com JUnit 5 em Java!\nNeste curso abrangente, você será guiado passo a passo na criação de testes unitários utilizando o JUnit 5. Mesmo se você estiver iniciando no assunto, não se preocupe, pois começaremos desde o básico, garantindo que você compreenda os fundamentos necessários para criar testes eficazes.\nEste curso é totalmente prático e voltado para situações do mundo real. Abordaremos problemas comuns e desafios que surgem no desenvolvimento diário, permitindo que você aprenda a lidar com eles de forma eficiente. Discutiremos diferentes estratégias e técnicas para lidar com essas situações, explorando os prós e contras de cada abordagem.\nAlém de apresentar as ferramentas e boas práticas, também daremos ênfase à importância do código de teste. Você aprenderá a escrever testes claros, legíveis e de fácil manutenção. Afinal, um código de teste bem escrito é tão valioso quanto o próprio código de produção.\nNeste curso avançado de testes unitários em Java com JUnit 5, você explorará a importância de uma arquitetura bem definida, como a Onion Architecture, para a criação de testes isolados e independentes. Você aprenderá a organizar seus projetos Java em camadas distintas, com ênfase no domínio central da aplicação. Além disso, será introduzido aos princípios do Domain-Driven Design (DDD) e aprenderá a aplicá-los no desenvolvimento de testes unitários, identificando entidades do domínio, definindo contextos delimitados e utilizando o JUnit 5 para testar comportamentos e regras de negócio de forma eficiente.\nDurante o curso, você terá a oportunidade de explorar o ecossistema completo do JUnit 5, juntamente com outras ferramentas essenciais como o Mockito para simulação de dependências e o EclEmma para cobertura de código. Além disso, utilizaremos o Maven como ferramenta de gerenciamento de dependências e o Eclipse como a IDE de desenvolvimento. Através de projetos práticos e exercícios hands-on, você aplicará os conceitos aprendidos e adquirirá experiência prática na utilização dessas ferramentas e frameworks indispensáveis para o desenvolvimento de testes unitários de qualidade.\nEste curso foi desenvolvido com base em experiências reais e conhecimentos adquiridos ao longo de anos de ensino e aplicação de testes unitários com JUnit 5. Nosso objetivo é fornecer a você uma base sólida para criar testes unitários eficientes e confiáveis em seus projetos Java.\nAo final do curso, você estará apto a implementar uma suíte de testes abrangente, fornecendo segurança e confiabilidade às suas aplicações. Venha se juntar a nós nessa jornada de aprimoramento de habilidades e se tornar um especialista em testes unitários com JUnit 5!",
      "target_audience": [
        "Desenvolvedores JAVA que nunca tiveram contato com Testes Unitários",
        "Desenvolvedores com experiência em testes podem rever alguns conceitos e discutir sobre boas práticas que serão apresentadas",
        "Desenvolvedores que prezam pela qualidade e legibilidade dos códigos",
        "Desenvolvedores que já estão cansados de parar o desenvolvimento de novas funcionalidades para corrigir algo que estava funcionando no passado.",
        "Desenvolvedores que já trabalham com JUnit 4 e gostaria de usar a nova versão da ferramenta"
      ]
    },
    {
      "title": "Zostań QA lub testerem oprogramowania od zera",
      "url": "https://www.udemy.com/course/zostan-qa-od-zera/",
      "bio": "Instrukcje krok po kroku: przejdź od zera do swojej pierwszej pracy na stanowisku inżynier QA lub tester oprogramowania",
      "objectives": [
        "Podstawy testowania oprogramowania",
        "Inżynieria oprogramowania",
        "Systemy operacyjne i wiersz poleceń",
        "Relacyjne bazy danych i SQL DML",
        "Język angielski (zalecenia do samodzielnej nauki)",
        "Tworzenie CV",
        "Przygotowanie do rozmowy rekrutacyjnej",
        "Szukanie pracy"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Informacje o kursie",
          "Indywidualny program uczenia się"
        ],
        "Język angielski do pracy w IT": [
          "Język angielski do pracy w IT",
          "Sposoby efektywnej nauki języka angielskiego"
        ],
        "Podstawy testowania oprogramowania": [
          "Podstawy testowania",
          "Elementy procesu testowania",
          "Rodzaje testowania",
          "Rodzaje testowania - kontynuacja",
          "Testowanie strony logowania",
          "Testowanie ołówka",
          "Test case & Bug report",
          "Napisz test case'y",
          "Napisz raport o defekcie (bug report)",
          "Testowanie eksploracyjne",
          "Proces testowania",
          "Planowanie i dekompozycja",
          "Projektowanie testów (test design)",
          "Wartości graniczne i klasy równoważności",
          "Testowanie z analizą domeny",
          "Projektowanie testów (test design) - kontynuacja",
          "Diagramy przejść i stanów",
          "Tabele decyzyjne",
          "Testy oparte na use case'ach",
          "Metoda pairwise"
        ],
        "Inżynieria oprogramowania": [
          "Cykl życia oprogramowania",
          "Cykl życia oprogramowania",
          "Proces tworzenia oprogramowania: modele i metodologie",
          "Modele i metodologie tworzenia oprogramowania"
        ],
        "Systemy operacyjne i wiersz poleceń": [
          "Systemy operacyjne i wiersz poleceń",
          "Instalowanie obrazu systemu na maszynie wirtualnej",
          "Praca w wierszu poleceń Windows",
          "Praca w wierszu poleceń Linux"
        ],
        "Bazy danych i podstawy SQL": [
          "Bazy danych",
          "Podstawy SQL DML",
          "Zapytania SELECT",
          "Zapytania INSERT, UPDATE, DELETE"
        ],
        "Tworzenie CV": [
          "Tworzenie CV inżyniera QA",
          "Napisz CV"
        ],
        "Przygotowanie do rozmowy kwalifikacyjnej": [
          "Przygotowanie do rozmowy kwalifikacyjnej",
          "Przedstawienie się",
          "Przygotowanie do pytań podczas rozmowy kwalifikacyjnej",
          "Twoje pytania do rozmowy kwalifikacyjnej"
        ],
        "Poszukiwanie pracy": [
          "Poszukiwanie pracy",
          "Wysyłanie CV",
          "Freelance, zdobywanie pierwszych doświadczeń",
          "Kariera i dalszy rozwój"
        ]
      },
      "requirements": [
        "Komputer z dostępem do Internetu",
        "Podstawowe umiejętności w obsludze komputera"
      ],
      "description": "Czy można od podstaw opanować zawód inżyniera ds. Zapewnienia jakości lub testera oprogramowania?\nTak. W tym kursie powiem Ci, jak to zrobić. Otrzymasz nie tylko niezbędną podstawę teoretyczną, ale także zdobędziesz wiele niezbędnych umiejętności praktycznych. Kurs obejmuje wiele praktycznych zajęć. Te zadania pomogą ci przygotować się do rozmów kwalifikacyjnych i do przyszłej pracy.\n\n\nCzego się nauczysz?\nOtrzymasz niezbędną bazę wiedzy i umiejętności potrzebnych do testowania oprogramowania oraz pracy na stanowisku Quality Assurance inżyniera. Oprócz wiedzy i umiejętności technicznych kurs obejmuje praktyczne porady i zadania związane z napisaniem CV, przygotowaniem do rozmowy kwalifikacyjnej i znalezieniem pracy.\n\n\nDo zobaczenia na kursie i powodzenia!\n\n\nAutorzy kursu,\nEvgeny i Katarzyna",
      "target_audience": [
        "Każdy, kto chce opanować zawód inżyniera QA lub testera oprogramowania"
      ]
    },
    {
      "title": "La guía completa: API Testing con Python",
      "url": "https://www.udemy.com/course/la-guia-completa-test-de-api-rest-con-python/",
      "bio": "Testea APIs sin postman con el Framework de automatización de pruebas de API REST",
      "objectives": [
        "Desarrollar casos de prueba automatizados que te permitan mejorar la cobertura de tus pruebas sobre Web Apis (API REST)"
      ],
      "course_content": {},
      "requirements": [
        "Python Basico (deseable)",
        "Testing de Software (deseable)",
        "Lógica de programación",
        "Ganas de Aprender!"
      ],
      "description": "En este curso encontraras\nTemario Basico:\nIntroducción a API REST\n¿Qué son las APIs y para qué sirven?\nLas APIs y el testing\n¿Qué es Unit testing?\nLibrerias Unittest / pytest\nCiclo de vida de las Pruebas Automatizadas.\nTemas técnicos:\nPostman\nCurl\nPython orientado a pruebas de software.\nEstructuras de datos.\nFramworks de pruebas con python.\nPreparacion de entornos Windows\nJenkins\nPipelines de ejecucion de pruebas.\n\n\nLenguaje: Python 3.4 o superior.\nLibrerías:\nPytest,\nUnittest,\nRequests,\nRe (Regular Expressions),\nTime,\njson.\nAllure (para reportes)\nObjectPath.",
      "target_audience": [
        "Testers con que requieran aprender todo sobre la automatización de pruebas de Web API",
        "Desarrolladores que deseen implementar pruebas automatizadas para sus aplicaciones.",
        "Cualquier persona que desee aprender una nueva tecnología"
      ]
    },
    {
      "title": "Automação de Testes com Sikuli",
      "url": "https://www.udemy.com/course/aumentando-sua-produtividade-com-sikuli/",
      "bio": "Automatize testes para sistemas desktop com Sikuli e seja mais produtivo, fazendo seu computador trabalhar por você",
      "objectives": [
        "Automatizar tarefas repetitivas no seu computador",
        "Automatizar testes funcionais",
        "Configuração, estrutura e utilização do sikuli"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico de informática",
        "Um PC capaz de executar a JVM do java"
      ],
      "description": "Sikuli - O que é? Para que serve?\nÉ uma ferramenta que utiliza seu computador, teclado, mouse e monitor para executar automaticamente qualquer tarefa que um ser humano pode realizar no computador em seu dia-a-dia;\nCrie automação desktop;\nRealize testes de software desktop.\nO que eu preciso?\nO Sikuli é uma ferramenta que pode ser utilizada em qualquer sistema operacional, Windows, Linux ou Mac.\nIremos conhecer todos os seus comandos e como usá-los para simular as ações humanas em um computador baseando-se na versão do Windows.",
      "target_audience": [
        "Testadores de software",
        "Pessoas interessadas em automatizar tarefas no seu computador",
        "Desenvolvedores de softwares",
        "Pessoas ligadas a área de engenharia de software",
        "Iniciantes em automação"
      ]
    },
    {
      "title": "API Testing Using the Postman Tool - Basic to Advanced",
      "url": "https://www.udemy.com/course/api-testing-postman/",
      "bio": "CRUD, SOAP, REST, adding test cases, dynamic variables, and running collections :هتكتسب مهارةقوية في المجال وهنتعرف علي",
      "objectives": [
        "Know the fundamentals of API.",
        "Learn the basics about SOAP, REST, and GraphQL.",
        "Get knowledge about each method for CRUD.",
        "Gain very strong hands-on experience on 5 different projects.",
        "Interview Questions and Tasks.",
        "Learn how to use Postman and run collections.",
        "How to trace APIs from DevTool",
        "GraghQL project",
        "Automated execution for collections"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Content",
          "Important Note"
        ],
        "Introduction to API": [
          "What is API",
          "API vs Web Service",
          "How API works",
          "Examples of APIs",
          "Key Aspects of APIs",
          "Key considerations in API Testing",
          "Benefits of API Testing"
        ],
        "API data formats": [
          "Introduction to XML & JSON",
          "XML Format",
          "JSON Format",
          "XML & JSON Examples",
          "Content of XML and JSON"
        ],
        "API Types": [
          "Overview for API types (SOAP, REST, GraphQL)",
          "SOAP API",
          "REST API",
          "RESTfull web service",
          "GraphQL API",
          "SOAP vs REST"
        ],
        "Postman tool": [
          "Instal postman",
          "Create account",
          "First Request",
          "Save Request",
          "First Test_ Verify Status Code",
          "Response Time Test",
          "Successful Response Code 2XX",
          "Combine Tests"
        ],
        "Status Code Categories": [
          "Status Codes"
        ],
        "First Practical Project": [
          "Intro",
          "Website",
          "ReqRes Get List of users",
          "ReqRes Get Single User",
          "ReqRes Get User Not Found",
          "ReqRes Post User",
          "ReqRes Put and Patch",
          "ReqRes Delete and Register",
          "ReqRes Delayed Request",
          "ReqRes Slides Recap",
          "Export Collection",
          "Import Collection"
        ],
        "First Project Advanced": [
          "How to set variable",
          "Environment variable"
        ],
        "Variables in Postman": [
          "Intro",
          "Types",
          "Syntax",
          "Usage & Benefits",
          "Best Practices",
          "Initial vs Current Value"
        ],
        "Parameters": [
          "Overview",
          "Path vs Query Parameter",
          "Example for Path and Query Parameter"
        ]
      },
      "requirements": [
        "No specific requirement, only Laptop."
      ],
      "description": "API Testing – Real-World Skills for Modern Testers\n\n\nStudent Feedback from Live Rounds\nSaraa – Tunisia\n\"I was genuinely impressed by the quality of this course. It was well-planned, detailed, and easy to follow. Mahmoud is knowledgeable and explains concepts clearly. I gained valuable insights and would definitely recommend both the course and the instructor.\"\nNour – Egypt\n\"Yes, I recommend Mahmoud and his courses. He is skillful and confident in what he does.\"\nMai – Egypt\n\"الباشمهندس محمود منظم جدًا والكورس مرتب. أول مرة أذاكر تيستنج وأفهم المفاهيم دي بشكل واضح. الماتيريال وفرت عليا وقت ومجهود كبير.\"\nAhmed – Egypt\n\"الشرح ممتاز. الجزء العملي مختلف شوية عن السوق، لكن في دعم ممتاز جدًا.\"\n\n\nWhy This API Testing Course?\nAPIs are the engine behind modern digital experiences. Whether it's a mobile app, an e-commerce site, or enterprise software, APIs ensure smooth communication between systems. With this course, you’ll gain in-demand API testing skills built from real industry experience and practical application.\n\n\nWhat You’ll Learn\n1. What is API Testing?\nUnderstand the purpose and importance of API testing in today’s software development lifecycle.\n2. Key Aspects of APIs\nLearn about the building blocks of APIs—endpoints, methods, headers, request/response formats, and more.\n3. Benefits of API Testing\nExplore how API testing helps detect issues earlier, improves stability, and supports automation and integration.\n4. Real-World Examples\nWalk through real, hands-on examples based on professional projects to reinforce every concept.\n5. Designing API Test Cases\nGain a step-by-step approach to designing robust test cases tailored to different business scenarios.\n6. Common API Bugs and How to Spot Them\nGet familiar with issues like status code mismatches, improper authorization, data loss, and edge cases—and how to test for them.\n\n\nCourse Features\nEngaging, easy-to-follow video lessons\nPractical, real-world examples and business use cases\nHands-on labs and exercises to build your confidence\nHow to use snippets and run collection in automated way\nAdvanced Interview questions\nQuizzes and assessments to reinforce learning\nCertificate of Completion upon finishing the course\n\n\nWho Is This Course For?\nManual testers expanding into API testing\nDevelopers looking to validate their APIs\nQA professionals preparing for automation\nAnyone curious about how APIs work behind the scenes\n\n\nMeet Your Instructor – Mahmoud Eid\nMahmoud is an Electromechanical Engineer and certified software testing expert with 6+ years of hands-on experience, especially in API and test automation projects for European clients across various domains.\nAs a technical mentor and internal academy instructor, Mahmoud trains new hires on ISTQB-FL, Manual Testing, and Tosca Automation, leveraging his +850 hours of teaching experience. He’s passionate about simplifying complex concepts and delivering training that’s both practical and impactful.\n\n\nCertifications\nISTQB Foundation Level\nISTQB Agile Tester\nTosca Certified:\nAutomation Specialist Level 1 & 2\nAutomation Engineer Level 1\nAPI Automation Specialist\nTest Design Specialist Level 1 & 2\nTosca Architect\nCertified Automation Trainer\nWhy Enroll?\nBuild job-ready API testing skills from real-world scenarios\nLearn how to identify and test for critical API issues\nUnderstand how to integrate API testing into your QA process\nAccess the content anytime, anywhere and learn at your pace\nGet a certificate that adds value to your CV and LinkedIn profile\n\n\nStart Your API Testing Journey Now\nWhether you’re just getting started or looking to upgrade your QA toolkit, this course is designed to equip you with the real-world API testing expertise that today’s employers need.",
      "target_audience": [
        "Junior Software Tester",
        "Junior QA Associate",
        "Fresh Graduates",
        "Junior Software Engineers",
        "Who want to join the software testing field (Shift Career)"
      ]
    },
    {
      "title": "SQL dla testerów oprogramowania",
      "url": "https://www.udemy.com/course/sql-dla-testerow-oprogramowania/",
      "bio": "Przy użyciu MySQL i H2",
      "objectives": [
        "Definicja baza danych",
        "Definicja SQL",
        "Wykorzystanie SQL w pracy testera oprogramowania",
        "Rola bazy danych w budowie aplikacji internetowej",
        "Tworzenie nowej bazy",
        "Dodawanie widoków i procedur",
        "Pobieranie, aktualizowanie i usuwanie danych z bazy",
        "Łączenie danych z wielu tabel",
        "Funkcje agregujące",
        "Tworzenie i usuwanie tabel"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp",
          "Wymagania",
          "Agenda",
          "Efekt końcowy",
          "Kontakt z instruktorem",
          "Prace domowe"
        ],
        "Instalacja aplikacji do testów": [
          "Wprowadzenie",
          "Pliki do pobrania",
          "Budowa aplikacji internetowej na przykładzie",
          "Instalacja Javy",
          "Uruchomienie backendu",
          "Instalacja node",
          "Uruchomieniu interfejsu użytkownika"
        ],
        "Wstęp teoretyczny": [
          "Czym jest baza danych?",
          "Typy baz danych",
          "Relacja, encja, rekord, atrybut",
          "Schemat relacyjnej bazy danych",
          "Klucz główny i klucz obcy",
          "Typy relacji między tabelami",
          "Popularne RDBMS",
          "SQL",
          "Przykład aplikacji korzystającej z bazy danych"
        ],
        "SQL": [
          "Pobranie danych z tabeli - Select",
          "Pobieranie wartości unikalnych - Distinct",
          "Zawężanie wyników na podstawie warunku",
          "Definiowanie kilku warunków",
          "Wielkość liter w zapytaniu SQL",
          "Przeczenie w składni SQL",
          "Praca domowa",
          "Sortowanie wyników",
          "Dodawanie danych do tabeli",
          "Aktualizacja danych w tabeli",
          "Przywracanie bazy danych do znanego stanu",
          "Usuwanie danych z tabeli",
          "Tworzenie i usuwanie tabeli",
          "Minimalna i maksymalna wartość",
          "SELECT wewnątrz WHERE",
          "Liczenie wystąpień",
          "Liczenie sumy i średniej",
          "Zbiór w warunku",
          "Zakres w warunku",
          "Wzorzec w warunku",
          "Aliasy",
          "Praca domowa",
          "Pojedyńcza tabela czy kilka?",
          "Podział dużej tabeli na mniejsze",
          "Typy danych",
          "Ograniczenia",
          "Różne typy danych w praktyce",
          "Ograniczenia Unique i Check",
          "Wartość domyślna",
          "Klucz główny",
          "Aktualizacja schematu tabeli",
          "Klucz obcy",
          "Łączenie danych z kilku tabel - inner join",
          "Łączenie danych z kilku tabel - left join",
          "Łączenie danych z kilku tabel - right join",
          "Łączenie danych z kilku tabel - union czyli symulacja outer join",
          "Grupowanie danych",
          "Definiowanie warunku przy pogrupowanych danych",
          "Komentarze",
          "Praca domowa"
        ],
        "SQL - MySQL": [
          "Dlaczego skorzystamy z MySQL?",
          "Instalacja MySQL",
          "Tworzenie i usuwanie bazy danych",
          "Kopiowanie zawartości tabeli",
          "Procedury",
          "Widoki",
          "Praca domowa"
        ],
        "SQL w pracy testera oprogramowania": [
          "Zastosowanie SQL w pracy testera oprogramowania",
          "Walidacja danych",
          "Dodawanie i usuwanie danych testowych",
          "Testowanie bezpieczeństwa",
          "Testowanie wydajności"
        ]
      },
      "requirements": [
        "Komputer z dostępem do internetu"
      ],
      "description": "Naucz się podstaw SQL, które przydadzą Ci się w codziennej pracy w branży IT. Kurs prezentuje podstawowe zapytania i zagadnienia. Kurs będzie rozszerzany, ale w obecnej formie zawiera materiał przeznaczony dla osób początkujących. Nie jest to odpowiedni materiał dla osób posiadających dużą wiedzę i poruszających się swobodnie w SQL.\n\nW ramach tego kursu dowiesz się między innymi:\n\nczym jest baza danych\njaka jest rola bazy danych w budowie aplikacji internetowej\njakie wyróżniamy typy baz danych\njakie są popularne RDBMS\nczym jest SQL\njak stworzyć bazę danych\njak wygląda schemat relacyjnej bazy danych\njak dodać, zaktualizować i usunąć dane z bazy\njak pobrać dane z kilku tabel\njak stworzyć procedurę\njak stworzyć widok\njak wyszukać dane spełniające jakiś warunek\njak korzystać z funkcji agregujących\njak korzystać z bazy danych H2 i MySQL\n\n\nWymagania:\nKomputer z dostępem do internetu\nChęci do pracy\n\n\nDla kogo jest ten kurs:\nTesterzy chcący zapoznać się z SQL\nOsoby początkujące chcące zapoznać się z SQL\n\n\nO Autorze:\nMam na imię Bartek i już od 8 lat zajmuje się tworzeniem testów automatycznych. Skupiam się na tworzeniu szkieletów testów automatycznych, które pomagają zmniejszyć czas i koszt testowania manualnego i dają informację zwrotną programistom tworzącym aplikację. Mam nadzieję, że moje kursy pomogą Ci  poszerzyć Twoją wiedzę i zdobyć wymarzoną pracę.",
      "target_audience": [
        "Testerzy oprogramowania",
        "Początkujący programiści",
        "Osoby chcące nauczyć się podstaw SQL"
      ]
    },
    {
      "title": "Java單元測試: Junit5 Jupiter 實戰課程(基於JDK 16版本)",
      "url": "https://www.udemy.com/course/java-junit5-jupiter-jdk-16/",
      "bio": "Unit Testing use Junit 5 Jupiter,Vintage,Platform, Mockito,Powermock,Cucumber, Selenium,Spring Boot",
      "objectives": [
        "JUnit 3,4 框架回顧和 Junit 5 架構概述",
        "JUnit 5 Juipter 基礎知識",
        "JUnit 5 Juipter 高級知識",
        "遷移舊版 JUnit 4 測試代碼",
        "集成其他框架（Mockito、Powermock、Cucumber、Selenium、Spring等）"
      ],
      "course_content": {
        "Introduction": [
          "Junit 5 Jupiter課程大綱概述"
        ],
        "JUnit 框架回顧和 JUnit 5 概述": [
          "軟件質量管理過程概述",
          "JUnit3的使用回顧",
          "JUnit4的使用回顧",
          "JUnit4中Runner和@RunWith的使用",
          "JUnit4中Runner的缺陷以及@Rule介紹",
          "Junit5的架構概述以及幾大組件介紹",
          "Junit Jupiter快速入門及Test Engine講解",
          "自定義Platform Launcher組件深入分析源碼"
        ],
        "JUnit 5 Juipter 基礎知識": [
          "Jupiter的基礎用法詳解①之DisplayName&Exception&Batch等",
          "Jupiter的基礎用法詳解②之RepeatedTest",
          "Jupiter的基礎用法詳解③之Timeout&TimeoutPreemptively",
          "Jupiter的基礎用法詳解④之Assumptions&套件方法",
          "Jupiter的基礎用法詳解⑤之Order&Nested",
          "Jupiter的基礎用法詳解⑥之Tagging&Filtering",
          "Jupiter的基礎用法詳解⑦之Callback與Handler",
          "Jupiter的基礎用法詳解⑧之ConditionExecution",
          "Jupiter的基礎用法詳解⑨之測試接口和default方法"
        ],
        "JUnit 5 Juipter 高級進階": [
          "Jupiter的高級用法詳解①之ParameterResolver",
          "Jupiter的高級用法詳解②之自定義ParameterResolver",
          "Jupiter的高級用法詳解③之運行時DynamicTest及使用場景詳解",
          "Jupiter的高級用法詳解④之DynamicContainer，TestSource等詳解",
          "Jupiter的高級用法詳解⑤之Test Template原理詳解",
          "Jupiter的高級用法詳解⑥之Repetition源碼深入剖析",
          "Jupiter的高級用法詳解⑦之@ParameterizedTest",
          "Jupiter的高級用法詳解⑧之@ParameterizedTest&@MethodSource",
          "Jupiter的高級用法詳解⑨之ArgumentsProvider及顯式轉換和隱式轉換",
          "Jupiter的高級用法詳解⑩之單元測試的Parallel執行配置",
          "Jupiter的高級用法詳解⑪之單元測試的Parallel @Execution註解"
        ],
        "遷移由 Junit 4 開發的遺留測試代碼": [
          "在Junit4代碼中整合Junit Jupiter單元測試代碼",
          "在Jupiter平台運行Junit4的歷史遺留測試代碼",
          "在Jupiter平台運行使用Junit4內置的@Rule運行單元測試"
        ],
        "集成其他框架": [
          "Junit 5 Jupiter與Mockito的集成MockitoExtension詳解",
          "Junit 5 Jupiter與Powermock的集成",
          "Junit 5 Jupiter與Cucumber的集成詳解①",
          "Junit 5 Jupiter與Cucumber的集成詳解②",
          "Junit 5 Jupiter與Selenium的集成",
          "Junit 5 Jupiter與Spring Boot的集成①",
          "Junit 5 Jupiter與Spring Boot的集成②"
        ],
        "代碼和課件下載": [
          "下載代碼和課件資料"
        ]
      },
      "requirements": [
        "單元測試基礎知識(Junit 3,4)",
        "Java 基礎知識（1.8 或以上版本）",
        "Apache Maven"
      ],
      "description": "本套課程涵蓋了所有的Junit5的技術細節，首先回顧了Junit 3和Junit 4的相關內容，然後由淺入深的講解了關於JUnit 5的內容，從基礎知識到高級應用，在最後的一部分我們還介紹了JUnit 5與Mockito，Powermock，Cucumber，SpringBoot的整合\n1. JUnit 5 Jupiter Introduction\n1.1 Quality Engineering Process\n1.1.1 Quality Planning\n1.1.2 Quality Assurance\n1.1.3 Post-Quality Assurance\n1.2 Why Unit Testing?\n1.3 JUnit Framework Retrospect\n1.3.1 JUnit 3\n1.3.1.1 Standard Test Case & Lifecycle\n1.3.1.2 TestSuite\n1.3.2 JUnit 4\n1.4.2.1 Standard Test Case & Lifecycle\n1.4.2.2 @RunWith & Runner\nParameterized\nTheories\nMockitoJUnitRunner\n1.4.2.3 @Rule\n1.3.3 JUnit 5 Jupiter\n1.3.3.1 JUnit 3&4 defect\n1.3.3.2 JUnit 5 inception\n1.3.3.3 JUnit 5 architecture\n1.2.4 JUnit 5 Jupiter Quick Start\nJunit 5 Jupiter\nJunit 5 TestEngine\nJunit 5 Platform Luancher\n2. JUnit 5 Juipter Basic\n2.1 Jupiter Assertion Statement\n2.2 Exception Assertion\n2.3 Batch all Assertion\n2.4 DisplayName\n2.5 Disabled\n2.6 Timeout Assertion\n2.7 RepeatTest\n2.8 Order\n2.9 Tagging & Filtering\n2.10 Nested Test Classes\n2.11 Test Instance Lifecycle\n2.12 Jupiter Extensions\n2.12.1 TestInstancePostProcessor\n2.12.2 BeforeAllCallback\n2.12.3 BeforeEachCallback\n2.12.4 BeforeTestExecutionCallback\n2.12.5 TestExecutionExceptionHandler\n2.12.6 AfterTestExecutionCallback\n2.12.7 AfterEachCallback\n2.12.8 AfterAllCallback\n2.13 Assumptions\n2.14 Integration Other Assertion framework\n2.14.1 Hamcrest\n2.14.2 AssertJ\n2.15 Condition Execution\n2.15.1 DisabledCondition\n2.15.2 DisabledOnJreCondition\n2.15.3 EnabledOnJreCondition\n2.15.4 EnabledOnOsCondition\n2.15.5 EnabledForJreRangeCondition\n2.15.6 DisabledForJreRangeCondition\n2.15.7 DisabledOnOsCondition\n2.15.8 DisabledIfEnvironmentVariableCondition\n2.15.9 DisabledIfSystemPropertyCondition\n2.15.10 EnabledIfSystemPropertyCondition\n2.15.11 EnabledIfEnvironmentVariableCondition\n2.15.12 EnabledIfCondition\n2.15.13 DisabledIfCondition\n2.15.14 Custom Condition Execution\n2.16 Test case in Interface\n3. JUnit 5 Juipter Advanced\n3.1 Dependency injection(build-in)\n3.1.1 TestInfoParameterResolver\n3.1.2 RepetitionInfoParameterResolver\n3.1.3 TestReporterParameterResolver\n3.1.4 Custom ParameterResolver\n3.2 Dynamic Tests-TestFactory\n3.3 DynamicContainer\n3.4 Test Sources\n3.5 Test Templates\n3.6 Parameterized tests\n3.7.1 ValueSource\n3.7.2 EnumSource\n3.7.3 MethodSource\n3.7.4 CsvSource\n3.7.5 CsvFileSource\n3.7.6 ArgumentsSource\n3.7.7 Argument conversion\n3.7.7.1 Implicit conversion\n3.7.7.2 Explicit conversion\n3.7.8 Custom Display Names\n3.7 Parallel Execution\n4. Migrate legacy JUnit 4 test code\n4.1 Jupiter tests in JUnit 4\n4.2 Migration from JUnit 4 to JUnit 5\n4.2.1 Junit4 vs Junit5\n4.2.2 Run Junit 4 at Junit 5 platform\n4.2.3 Junit 4 @Rule at Junit 5 platform\n5. Integration\n5.1 Mockito\n5.2 Powermock\n5.3 Selenium\n5.4 Cucumber\n5.5 Spring Boot",
      "target_audience": [
        "Java Developer",
        "JVM(Scala,Groovy,Koltin) Language Develop Engineer",
        "QA Developer"
      ]
    },
    {
      "title": "Тестирование ПО:Проверка знаний перед собеседованием!",
      "url": "https://www.udemy.com/course/testinasobesedovanietestirovaniepo/",
      "bio": "Улучши свою жизнь, пройдя тест с готовыми вопросами и ответами для собеседования, на должность: Тестировщик ПО!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "В рамках данного практического тренажера предлагается закрепить полученные знания в ходе обучения на курсах по тестированию, а также освежить теоретические знания перед интервью или ассессментом.\nИспользуя знания полученные из этого курса, вы с можете максимально продуктивно и качественно применить их на практике. Это позволит вам увеличить заработную плату, сразу со входа в должность и как конечный итог, улучшит ваше качество жизни.\nТренажер содержит более 80 вопросов по различным аспектам ручного тестирования, включая теорию тестирования, техники тест-дизайна, тестовую документацию и тестирование мобильных ,веб-приложений и другое, что в свою очередь укажет на ваши недоработки, что способствует устранению пробелов в знаниях предметной области и увеличит шансы на успешное прохождение собеседования.\nВы можете проходить тесты неограниченное количество раз, причем каждый раз вопросы будут собираться в новой последовательности.\nЕсли у вас возникнут вопросы или вы обнаружите ошибки в тестах, всегда можно обратиться через личные сообщения на платформе. Ваша задача - полностью разобраться с каждым вопросом и получить заветную должность!\nКурс предназначен как для начинающих тестировщиков, так и для специалистов с опытом, которые желают освежить знания перед интервью.\nСамое важное-это не опустить руки на половине пути и разрешить помочь самому себе, стать лучше. Практически у всех есть возможность поесть один раз в макдаке на 10$, но не практически ни у кого нет 10$, на улучшение качества своей жизни и это пугает. Стать лучше, приступив к изучению нового и полезного материала, либо остаться на том же месте, смотря на то как это делают все, кроме тебя. Выбор за тобой и он верный!",
      "target_audience": [
        "Начинающие QA инженеры, желающие получить эту должность"
      ]
    },
    {
      "title": "Performance testing - Introducción a K6",
      "url": "https://www.udemy.com/course/performance-testing-introduccion-k6/",
      "bio": "Introducción a la herramienta de performance testing K6",
      "objectives": [
        "Iniciaras con la primera herramienta para implementar técnicas de performance testing K6. Características, capacidades y algunos ejemplos serán los que podrás visualizar en este mini curso"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instalación de K6",
          "Hello World en K6"
        ],
        "Aspectos Básicos de K6": [
          "Metodo POST",
          "La variable Options",
          "Función Setup",
          "Outs básicos: JSON"
        ],
        "Creando un proyecto formal útil para nuestro lugar de trabajo": [
          "Refactorizando Datos de los servicios",
          "Refactorizando los servicios",
          "Refactorizando Tipos de pruebas"
        ]
      },
      "requirements": [
        "Tener conocimientos teóricos de que es performance testing"
      ],
      "description": "En este curso tendrás una vista general de como aplicar los distintos tipos de prueba de cargue en un ambiente real, iniciando con un proyecto muy simple y como a medida que va avanzando los contenidos se convierte en un proyecto funcional y utilizable casi en cualquier tipo de proyecto de software.\nEs recomendable iniciar con la introducción teórica de performance testing para así poder empezar a implementar pequeños flujos prácticos por medio de esta herramienta. Para mayor información puedes ver el curso introducción a performance testing.\n\n\nK6: Escriba su secuencia de comandos de prueba de rendimiento: las secuencias de comandos deben contener, como mínimo, una función predeterminada; esto define el punto de entrada para sus VU, similar a la función main () en muchos otros idiomas. El código dentro de la función predeterminada se llama \"código VU\" y se ejecuta una y otra vez mientras se ejecuta la prueba.\n\n\nk6 trabaja con el concepto de usuarios virtuales (VU), que ejecutan scripts. La duración es una cadena que especifica la duración total que debe ejecutarse una prueba.\n\n\nAl crear una nueva prueba de carga, lo primero que debe hacer a menudo es definir las solicitudes HTTP que se utilizarán para probar su sistema\n\n\nCualquier inquietud, sugerencia o comentario puedes contactarme por este medio.",
      "target_audience": [
        "QA Automatior, analistas de QA, y personal en general de desarrollo de software"
      ]
    },
    {
      "title": "Oracle Virtualbox Tutorial Deutsch - Software Testing",
      "url": "https://www.udemy.com/course/oracle-virtualbox-tutorial-deutsch-videokurs/",
      "bio": "Einfacher Einstieg in die Welt der Virtualisierung mit der Virtualbox",
      "objectives": [
        "Oracle Virtualbox installieren",
        "Oracle Virtualbox verwenden",
        "Virtuelle Maschinen mit Windows 7 erstellen",
        "Virtuelle Maschinen mit Windows 10 erstellen",
        "Virtuelle Maschinen mit Android OS erstellen"
      ],
      "course_content": {
        "Oracle Virtualbox Tutorial": [
          "Einleitung zum Oracle Virtualbox Tutorial Deutsch",
          "Weshalb Virtualisierung nützlich ist",
          "Systemvorraussetzungen und Download der Oracle Virtualbox",
          "Installation der Oracle Virtualbox",
          "Erste Schritte bei der Einrichtung deiner virtuellen Maschine",
          "Weitere nützliche Einstellungen für deine virtuellen Maschine",
          "Erstellen einer virtuellen Maschine mit Windows 7",
          "Das volle Potential der Virtualbox nutzen",
          "Deine erste virtuelle Maschine testen",
          "Erstellen einer virtuellen Maschine mit Windows 10",
          "Erstellen einer virtuellen Maschine mit Android Teil 1",
          "Erstellen einer virtuellen Maschine mit Android Teil 2",
          "Zum Abschied"
        ],
        "BONUSLEKTION": [
          "Bevor du gehst"
        ]
      },
      "requirements": [
        "Internetverbindung notwendig",
        "Computer notwendig",
        "Kein weiteres besonderes Wissen notwendig"
      ],
      "description": "Virtualisierung in der IT wird immer wichtiger. Die Virtualisierung von Rechnern erlaubt es Kosten, Zeit und Ressourcen zu sparen. Auch im Software Testing ist die Virtualiserung eine wichtige Komponente. Egal ob nun für den beruflichen Bereich oder für den privaten Bereich, die Vorteile der Virtualisierung sind groß.\n\nIn diesem Kurs zeige ich dir Schritt für Schritt wie du kinderleicht virtuelle Maschinen mit der Oracle Virtualbox erstellen kannst. Die Oracle Virtualbox ist gratis verfügbar für Endandwender und eignet sich perfekt um erste Schritte in der Welt der Virtualisierung vorzunehmen.\n\nIch zeige dir in diesem Kurs:\n\n- Wie du die Oracle Virtualbox herunterladen und installieren kannst\n- Welche wichtigen und nützlichen Einstellungen du für deine Virtualbox vornimmst\n- Wie du verschiedene Betriebssysteme auf virtuelle Maschinen erstllen kannst u.a. Windows 7, Windows 10\n- Wie du sogar Android auf einer virtuellen Maschine erstllen kannst und vieles mehr ...\nLerne die Oracle VM Virtualbox zu beherrschen und lerne die Vorteile der Virtualiserung kennnen.\nWie immer gilt die 30 Tage Rückgaberecht Garantie. Wenn der Kurs nicht gefällt, dann gibt es die Geld-Zurück-Garantie von Udemy. Du hast nichts zu verlieren und doch vieles zu gewinnen!\n\n\n\nSchreib dich jetzt für den Kurs: Oracle Virtualbox Tutorial Deutsch ein!",
      "target_audience": [
        "Diejenigen die Interesse an Virtualisierung haben",
        "Software Testing Anfänger",
        "Diejenigen die Interesse an der Oracle Virtualbox haben"
      ]
    },
    {
      "title": "Automatisation des tests avec Robot Framework",
      "url": "https://www.udemy.com/course/automatisation-des-tests-avec-robot-framework/",
      "bio": "ROBOT FRAMEWORK :Le moyen le plus simple pour automatiser les tests -avec 3 Méthodes : Eclipse , RIDE et PYCHARM",
      "objectives": [
        "Installez et configurez l'outil d'automatisation des tests Robot Framework ainsi que des bibliothèques",
        "Automatisation des test avec ROBOT FRAMEWORK VIA ECLIPSE",
        "Automatisation des test avec ROBOT FRAMEWORK VIA RIDE",
        "Automatisation des test avec ROBOT FRAMEWORK VIA PYCHARM",
        "Créez et exécutez votre premier script d'automatisation de test de Robot Framework (exemple Selenium Webdriver)",
        "Automatisation des tests",
        "Comprendre les bases de nombreuses bibliothèques d'automatisation de test de Robot Framework (Selenium Webdriver,..)",
        "Utilisez le modèle d'objet de page pour créer des scripts d'automatisation de test plus réutilisables et plus faciles à interpréter",
        "Créez des mots-clés",
        "Exécutez/exécutez des tests automatisés de Robot Framework de différentes manières, notamment à partir d'une fenêtre de commande, ..)",
        "Génération et compréhension d'un rapport d'exécution"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation"
        ],
        "Automatisation des tests avec Robot Framework": [
          "Automatisation des tests avec Robot Framework & ces avantages",
          "Qu'est-ce que le Robot Framework ? Fonctionnalités clés du Robot Framework ?",
          "Installation de Robot framework",
          "Merci",
          "Installation de Robot framework et commandes utiles",
          "Quizz sur l'automatisation des tests avec Robot Framework,"
        ],
        "Java pour les testeurs :": [
          "Java pour les testeurs : Introduction",
          "Java pour les testeurs : IDE et création du premier projet",
          "Java pour les testeurs : Création du premier Script",
          "Java pour les testeurs : Manipulation des variables et les valeurs",
          "Java pour les testeurs : Manipulation des variables et les valeurs",
          "Java pour les testeurs : Correction Exercice 1",
          "Java pour les testeurs : Correction Exercice 2",
          "Java pour les testeurs : les méthodes",
          "Java pour les testeurs : les méthodes",
          "Java pour les testeurs : LES BOUCLES / LOOPS : FOR"
        ],
        "Installation de selenium library": [
          "Installation de selenium library"
        ],
        "Automatisation des tests avec Robot Framework Avec RED": [
          "Installation de ECLIPSE et RED",
          "en cas ou vous ne trouvez pas REd dans le marketplace d'Eclipse",
          "si vous recontrez un probleme avec RED",
          "Premier cas de test avec ROBOT FRAMEWORK",
          "Premier test robot framework et selenium et eclipse",
          "Robot framework login test",
          "Accepter les cookies",
          "Accepter les cookies : Exercice",
          "Accepter les cookies : Correction de l’exercice",
          "Les variables : SCALAIRE, LISTE ET DICTIONNAIRE",
          "Les mots clés -Keywords",
          "Robot Framework :Tags"
        ],
        "Quizz sur l'automatisation des tests avec Robot Framework,": [
          "Quizz sur l'automatisation des tests avec Robot Framework,"
        ],
        "Présentation de RIDE": [
          "Présentation de RIDE",
          "Installation RIDE",
          "Installation RIDE",
          "ROBOT FRAMEWORK : RIDE",
          "Exécuter vos scripts via le terminal",
          "ROBOT FRAMEWORK : Le rapport d'exécution"
        ],
        "Automatisation des tests : les points à savoir": [
          "Automatisation des tests : les points à savoir",
          "Automatisation des tests : les points à savoir - Partie pratique"
        ],
        "ROBOT FRAMEWORK VIA PYCHARM": [
          "ROBOT FRAMEWORK VIA PYCHARM : Présentation de Pycharm",
          "ROBOT FRAMEWORK VIA PYCHARM : La structure de script dans Pycharm",
          "ROBOT FRAMEWORK VIA PYCHARM : Exécution du script",
          "RF VIA PYCHARM : Convertir un cas de test Manual vers Automation Script",
          "Robot Framework :Comment créer des mots-clés définis par l'utilisateur",
          "Déplacer les mots-clés définis par l'utilisateur vers le fichier de ressources",
          "Robot Framework :Test Setup et Test Teardown",
          "ROBOT FRAMEWORK: Page Object Model(POM)"
        ],
        "Bonus : Création d’une anomalie avec Mantis Bug Tracker": [
          "Création d’une anomalie : Introduction",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker"
        ]
      },
      "requirements": [
        "NON",
        "Aucune expérience préalable en programmation, en automatisation de test ou en Selenium Webdriver n'est nécessaire."
      ],
      "description": "******************************Tester avec ROBOT FRAMEWORK**********************************\nEXECLUSIVE  : automatisation ROBOT FRAMEWORK avec 3 Méthodes : Eclipse , RIDE et PYCHARM\nSi vous prévoyez d'utiliser l'automatisation des tests  commencez ici !\n\n\nSi vous voulez apprendre Robot Framework à partir de zéro, ce cours est fait pour vous. Des guides vidéo très basiques étape par étape pour vous amener à connaitre tous les secret de l'automatisation des tests.\nvous serez ravi de découvrir avec quelle facilité Robot Framework vous permettra d'automatiser vos tests.\n\n\nRobot Framework est un framework d'automatisation de test pré-construit. Par comparaison... Robot Framework est beaucoup plus facile à apprendre que Selenium Webdriver (avec Java, Python, C# ou PHP) car vos scripts sont écrits avec des mots anglais au lieu de code.\n\n\nSi vous êtes déjà un utilisateur expérimenté de Selenium Webdriver, Cucumber ou QTP/UFT, vous apprendrez rapidement à quel point Robot Framework est élégant et performant par rapport à ces outils.\n\n\nCe cours vous permet de  :\n\n\nFournir un aperçu de l'outil d'automatisation de test gratuit et open source Robot Framework\n\n\nApprenez à installer et à configurer Robot Framework ainsi que des bibliothèques\n\n\nVous aider à créer et exécuter votre tout premier script d'automatisation de test Selenium en quelques minutes\n\n\nVous montrer exactement comment créer plus facilement un script d'automatisation de test Selenium Webdriver\n\n\nVous montrer comment rendre un script d'automatisation de test simple beaucoup plus efficace et lisible\n\n\nVous aider à découvrir comment les variables et les objets de page peuvent rendre vos scripts d'automatisation de test plus flexibles\n\n\nIl n'y a pas de moyen plus rapide ou plus intuitif d'apprendre l'automatisation des tests de Robot Framework et Selenium Webdriver !\n\n\nLe cours suppose que vous ne savez absolument rien sur l'automatisation des tests et vous guide à travers chaque détail de l'installation et de la configuration pour vous mettre immédiatement dans la bonne direction.\nCette formation vous aide à distinguer par rapport aux profils qui sont au marché d’emploi, avec vos compétences dans le domaine du test et la maîtrise des tests automatisé vous serez le profil le plus demandé.\n\n\nPoser toutes vos questions. je reste joignable pour répondre",
      "target_audience": [
        "toute personne intéressée par la génie logiciel , test et recette",
        "Cette formation s'adresse aux publics suivants : Développeurs ; Testeurs ; Maitre d'œuvre ; Maitre d'ouvrage ; Responsables d'homologation. Cette formation s'adresse aux profils suivants Architecte d’application Chef de Projet Développeur d’applications Directeur de Projets",
        "Test manager"
      ]
    },
    {
      "title": "Masterclass de test logiciels - De débutant à expert",
      "url": "https://www.udemy.com/course/masterclass-de-test-logiciels-de-debutant-a-expert/",
      "bio": "Apprenez les tests logiciels et devenez Ingénieur QA/Testeur Agile. Tests logiciels /QA et bien plus encore !",
      "objectives": [
        "• Apprendre le noyau essai compétences nécessaire pour postuler à des postes de testeur de logiciels en seulement quelques heures",
        "• Être capable de démontrer ton compréhension des tests de logiciels pour les futurs employeurs.",
        "• Outils de test , JIRA, Confluence,Mantis bug tracker ,…. qui vous aidera à être un excellent testeur de logiciels",
        "• Concepts de base des tests de logiciels",
        "Implémentation du processus de test sur un outil de gestion de projet",
        "SDLC, Les processus de test , Agilité",
        "• Rédaction de cas de test et de rapports de bogues",
        "• Exigences Examen et rédaction de scénarios de test",
        "• méthodologies agiles et des tests agiles",
        "• Comment utiliser l'outil de gestion du cycle de vie des applications (JIRA)",
        "• Principes de base des tests d'API",
        "• Test d'API"
      ],
      "course_content": {
        "Introduction": [
          "Masterclass de test logiciel : Introduction",
          "Point important pour le bon déroulement de la formation",
          "Test de logiciels : méthode de gestion de projet ( Waterfall Vs agile)",
          "Masterclass de test logiciel : Cycle de développement logiciel SDLC",
          "Masterclass de test logiciel : Les processus de test",
          "Masterclass de test logiciel : Les niveaux de test",
          "Les essentiels en test logiciel",
          "Les essentiels en test logiciel",
          "Test logiciel : Quizz 1",
          "Merci"
        ],
        "Conception de test": [
          "Conception de test",
          "Masterclass de test logiciel : Comment concevoir des cas de test",
          "Masterclass de test logiciel : Comment concevoir des cas de test",
          "Masterclass de test logiciel : Exercice de conception de test",
          "Masterclass de test logiciel : Correction de l’exercice de conception de test"
        ],
        "Conception des tests sous XRAY": [
          "Test Logiciel avec XRAY : Installation et configuration de Xray",
          "Test Logiciel avec XRAY : Installation et configuration de Xray",
          "Test Logiciel avec XRAY : Création d'un cas de test :",
          "Test Logiciel avec XRAY : Création d'un cas de test : Type Manuel",
          "Test Logiciel avec XRAY : Création d'un cas de test : Type généric",
          "Test Logiciel avec XRAY : Création d'un cas de test : Type cucumber",
          "Test Logiciel avec XRAY : Création d'une précondition",
          "Test Logiciel avec XRAY : Création d'une campagne de test",
          "Test Logiciel avec XRAY : Création d'une campagne de test -Partie 2",
          "Test Logiciel avec XRAY : Création d'une campagne de test --Partie 3",
          "Test Logiciel avec XRAY :Test Repository",
          "Test Logiciel avec XRAY : Exercice",
          "Test Logiciel avec XRAY : Correction d'exercice"
        ],
        "Atelier Conception de test logiciel": [
          "Atelier Conception de test logiciel",
          "Atelier Conception de test logiciel : Correction",
          "Atelier Conception de test logiciel : Correction"
        ],
        "Exercice de Conception : Location de voiture": [
          "Exercice de Conception : Location de voiture",
          "Correction de l'exercice de Conception : Location de voiture",
          "Correction de l'exercice de Conception : Location de voiture",
          "Exercice de Conception : Location de voiture-Partie2",
          "Correction de l'exercice de Conception : Location de voiture-Partie2"
        ],
        "Revue de test :": [
          "Revue de test : C'est quoi & Pourquoi ?",
          "Revue de test : exercice 1",
          "Revue de test : Correction de l'exercice 1",
          "Revue de test : Partie 2",
          "Revue de test : exercice -Location de voiture",
          "Revue de test : Correction -Location de voiture"
        ],
        "Masterclass de test logiciel: Exécution des tests": [
          "Masterclass de test logiciel: Exécution des tests",
          "Masterclass de test logiciel: Exécution des tests",
          "Masterclass de test logiciel: Exécution des tests : Exercice",
          "Jira : Comment travailler sur Jira",
          "Exécution des tests -Création d'une anomalie avec JIRA"
        ],
        "Exemple d'exécution et création d’une anomalie": [
          "Exemple d'exécution et création d’une anomalie avec Mantis Bug Tracker",
          "Exemple d'exécution et création d’une anomalie avec Mantis Bug Tracker",
          "Exemple d'exécution et création d’une anomalie avec Mantis Bug Tracker",
          "Exemple d'exécution et création d’une anomalie avec Mantis Bug Tracker"
        ],
        "Exercice de création d'anomalie : Location de voiture": [
          "Exercice de création d'anomalie : Location de voiture",
          "Correction de l'exercice de création d'anomalie : Location de voiture"
        ],
        "Masterclass de test logiciel: le test logiciel avec les API": [
          "C'est quoi une API / WEB SERVICES",
          "Les avantages des API",
          "La différence entre API & WEB SERVICES",
          "API : le protocole HTTP - LES METHODES - LES CODES DE REPONSES",
          "C'est quoi SOAPUI ?",
          "Installation de SOAPUI",
          "SOAPUI : explorer l'outil",
          "Exemple d'une API SOAP :"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Bienvenue dans le MASTERCLASS en test logiciel\nMasterclass de test logiciels - De débutant à expert\nApprenez les tests logiciels et devenez Ingénieur QA/Testeur Agile. Tests logiciels /QA et bien plus encore !\n\n\nApprendre test de logiciel avec ce cours et devenir réussi Testeurs de logiciels / Testeur Agile. Obtenir le noyau Tests, tests backend , tests Web , compétences en ingénierie de test et apprentissage des outils de test . A la fin de ce cours, vous aura assez de connaissances pour obtenir un emploi en tant que testeur de logiciels ou pour commencer à travailler en tant qu'indépendant ! Nous sera aussi expliquer beaucoup plates-formes de test , où vous pouvez commencer à gagner de l'argent en tant que testeur.\n\n\nBien prendre toi étape par étape à travers engageant vidéo tutoriels et enseigner toi tout toi devez savoir pour réussir en tant que testeur de logiciels.\n\n\nLe cours comprend des heures et des heures de vidéo 1080P (HD) tutoriels avec haute qualité son . Toutes les vidéos sont éditées à la main et les parties inutiles sont supprimées . Vous allez seul apprendre \" quoi toi besoin d’apprendre \" pour devenir réussi !\n\n\nToutes les vidéos ont été éditées à la main sous-titres . Nous dépensé beaucoup heures corriger tous les sous-titres pour vous aider à avoir une lecture fluide apprentissage expérience .\n\n\nPourquoi devrait toi prendre ce cours?\nIl s'agit du cours de test de logiciels le meilleur et le plus récent sur Udemy . Nous expliquer tous les tests importants méthodologie à la fois agile et moderne, avec à l'appui d'exemples concrets. . Ce cours est créé par un responsable métier de validation avec plus que 12 ans d’expérience , et qui est toujours activement travaillant dans l'une des entreprises TOP en France .\n\n\nInscrivez- vous aujourd'hui et attendez avec impatience pour:\n· Plus de 3 heures de contenu vidéo HD\n· Toutes les connaissances toi besoin de commencer vos tests logiciels carrière .\n· Commencez à pratiquer en ligne et gagnez de l'argent immédiatement .\n· Apprenez les derniers sujets de l'industrie informatique et restez à jour.",
      "target_audience": [
        "• Les gens qui envie de commencer une nouvelle carrière",
        "Les testeurs",
        "les QA",
        "LES QA LEAD",
        "TEST MANAGER",
        "• Les gens qui veulent apprendre les tests de logiciels",
        "• Testeurs de logiciels vouloir gagner un meilleur connaissances dans leur champ",
        "• Les personnes à la recherche d' un emploi à temps partiel ou indépendant"
      ]
    },
    {
      "title": "Performance Testing Basics with JMeter & Apache Benchmark",
      "url": "https://www.udemy.com/course/jmeter-performance/",
      "bio": "Hands-on course to simulate traffic and find bottlenecks using JMeter & AB",
      "objectives": [
        "Как протестировать быстродействие системы?",
        "Нагрузочное тестирование",
        "Тестирование API",
        "Load testing",
        "Stress Testing",
        "Apache Benchmark",
        "Apache Jmeter"
      ],
      "course_content": {
        "Введение в нагрузочное тестирование": [
          "О курсе",
          "Что такое тестирование Performance",
          "Платформы",
          "Кто тестирует быстродействие",
          "Виды тестирования Performance",
          "Пример нагрузочного тестирования",
          "Жизненный цикл нагрузочного тестирования",
          "Где прогонять тесты?",
          "Инструменты для Performance testing",
          "Разогреваемся - Apache Benchmark ( AB test tool)"
        ],
        "Первое знакомство с JMeter": [
          "Устанавливаем JMeter",
          "Графический интерфейс",
          "Создаем группы пользователей",
          "Первые запросы GET",
          "Результаты тестирования",
          "Самостоятельное задание 1",
          "Решаем задание вместе",
          "Добавим таймер"
        ],
        "Автоматизация тестов JMeter": [
          "Пользовательские параметры",
          "Запросы POST",
          "Самостоятельное задание 2",
          "Решаем задание вместе",
          "Верификация ответов",
          "Самостоятельное задание 3",
          "Решаем задание вместе",
          "Запуск тестов из командной строки"
        ]
      },
      "requirements": [
        "Основы QA",
        "Общее знакомство с HTTP запросами"
      ],
      "description": "Добро пожаловать на курс «Основы тестирования производительности с JMeter и Apache Benchmark»! Этот курс станет отличной отправной точкой для всех, кто хочет освоить базовые навыки нагрузочного тестирования и анализа производительности веб-приложений.\nВ современном мире производительность веб-сайта или приложения — критически важный фактор успеха. Медленно загружающиеся страницы и сбои при большом количестве пользователей могут привести к потере клиентов, снижению прибыли и ухудшению пользовательского опыта. Поэтому специалисты, умеющие проверять систему под нагрузкой, крайне востребованы на рынке труда.\nНа этом курсе вы узнаете:\nЧто такое нагрузочное и стресс-тестирование\nКак использовать Apache JMeter для моделирования пользовательского поведения\nКак запускать тесты производительности с помощью Apache Benchmark\nКак анализировать результаты тестов и определять узкие места\nКак настраивать параметры нагрузки и имитировать реальные сценарии использования\nКак строить отчёты, визуализировать метрики и интерпретировать данные\nКак обнаруживать потенциальные точки отказа и снижать риски сбоев и проблем\nВас ждут пошаговые инструкции, практические задания, тестовые проекты, реальные примеры, дополнительные советы и разбор типичных ошибок. Мы вместе пройдём путь от установки инструментов до комплексного анализа отчётов, построения графиков и подготовки системы к боевым условиям.\nКурс подойдёт начинающим тестировщикам, разработчикам, специалистам по качеству (QA), DevOps-инженерам и всем, кто хочет прокачать свои навыки в сфере производительности.\nПрисоединяйтесь к курсу, чтобы научиться уверенно использовать JMeter и Apache Benchmark в своей работе, повысить профессиональный уровень и подготовить свои проекты к любым цифровым нагрузкам и сценариям.",
      "target_audience": [
        "Програмисты, QA аналитики, разработчики автоматических проверок"
      ]
    },
    {
      "title": "【한글자막】 기초부터 배우는 Selenium Webdriver와 Python + 프레임워크",
      "url": "https://www.udemy.com/course/selenium-webdriver-python/",
      "bio": "기본부터 고급 수준까지 Python 프로그래밍 및 Selenium Python 자동화 학습 및 5개 라이브 프로젝트를 다루는 그 어디에도 없을 완전히 새로운 강의!",
      "objectives": [
        "Selenium WebDriver를 사용하여 Python 자동화에 대한 완전한 지식 습득",
        "모든 최신 기술을 사용하여 완전히 처음부터 Python 테스트 자동화 프레임워크 구현 가능",
        "다양한 연습 예시를 통한 확실한 노출로 완전한 Python 기본 지식 습득",
        "PyTest와 같이 유닛 및 통합 테스팅에 도움이 되는 Python 유닛 테스트 프레임워크 학습",
        "LIVE 웹사이트의 실시간 시나리오를 통해 Selenium Python API 메소드에 대한 완전한 이해",
        "마지막으로 어떤 면접이든 통과하고 디자인 단계부터 전체 Selenium Python 프로젝트를 리드할 수 있음"
      ],
      "course_content": {
        "파이썬 테스트와 그 중요성 이해하기": [
          "테스트 자동화 요구 사항으로 셀레늄 파이썬을 선택하는 이유",
          "셀레늄 기능 살펴보기"
        ],
        "파이썬 및 셀레늄 학습용 전체 설치 가이드": [
          "최고의 강좌 시청 경험을 위한 비디오 플레이어 설정 팁",
          "컴퓨터에 파이썬 설치하는 방법",
          "맥 사용자를 위한 중요 참고 사항",
          "PIP 클라이언트란? - 파이썬 패키지 다운로드 방법",
          "파이썬 및 셀레늄 설치 안내",
          "파이참 에디터 설치 및 프로젝트 인터프리터 설정"
        ],
        "파이썬 기초 시작하기": [
          "코드 파일을 다운로드하는 곳",
          "파이썬 hello world 프로그램 기초",
          "파이썬의 자료형 및 런타임에서 유형을 구하는 방법"
        ],
        "파이썬 자료형 및 변수 이해하기": [
          "리스트 자료형 및 조작할 수 있는 연산",
          "예제를 통한 파이썬의 튜플 및 딕셔너리 자료형",
          "런타임에서 딕셔너리를 생성하고 데이터를 추가하는 방법"
        ],
        "파이썬의 프로그램 흐름 제어": [
          "기본 예시를 통한 파이썬의 if else 조건문",
          "파이썬에서 반복문이 작동하는 방식과 코드 들여 쓰기의 중요성",
          "for 반복문을 사용한 프로그래밍 예시 1",
          "while 반복문을 사용한 프로그래밍 예시 2",
          "함수란 무엇인가? 파이썬에서 함수를 사용하는 방법"
        ],
        "Python의 객체 지향 원리 이해": [
          "OOPS 원칙: 파이썬의 클래스 및 객체",
          "객체 지향 프로그래밍에서 생성자 및 생성자의 역할",
          "예시로 알아보는 파이썬의 상속 개념",
          "파이썬의 문자열 및 그 기능",
          "코드 파일 다운로드하기"
        ],
        "파이썬에서 파일 읽기 및 쓰기": [
          "파이썬을 이용하여 텍스트 파일 콘텐츠를 읽는 방법",
          "파이썬의 readLine 및 readLines 메소드의 중요성",
          "파이썬을 사용하여 파일에 데이터 쓰기"
        ],
        "파이썬의 예외 처리 메커니즘": [
          "파이썬에서 예외를 발생시키는 방법",
          "파이썬을 이용한 try catch 메커니즘",
          "예외와 함께 finally 키워드 사용하기"
        ],
        "다양한 브라우저 실행으로 셀레늄 파이썬 패키지 설정": [
          "코드 파일 다운로드하는 곳",
          "테스팅 분야 동향 계속 따라가기",
          "크롬 브라우저 호출 및 웹사이트 로딩 자동화하기",
          "제목과 URL을 가져오고 세션을 닫는 기본 웹드라이버 메소드",
          "파이어폭스 및 인터넷 익스플로러 브라우저에서 테스트를 실행하는 방법"
        ],
        "예로 보는 WebDriver API의 다양한 로케이터": [
          "HTML 요소 속성 검사하기",
          "CSS 선택자와 이름 로케이터",
          "ChroPath 플러그인을 이용한 XPath와 CSS로 요소 찾기",
          "웹 페이지에서 텍스트 찾기 및 조건 유효성 확인하기"
        ]
      },
      "requirements": [
        "프로그래밍을 하지 않는 지원자도 강의를 편안하게 들을 수 있습니다.",
        "본 강의의 수강생은 평생 강사 지원을 받을 수 있습니다. 언제든 연락을 통해 문의할 수 있으며, 12시간 내에 응답을 받으실 수 있습니다.",
        "Python 기본을 포함한 모든 설치 설정도 강의 내용에 포함됩니다.",
        "이론적 자료, 코드 덤프, 다운로드 가능",
        "Udemy의 다른 Selenium 강의에서 찾아볼 수 없는 Selenium 교육 커뮤니티에 참여하여 300만 명의 수강생과 함께 학습하세요."
      ],
      "description": "현재 인공지능 및 웹 보안을 구현하는데 쓰이는 프로그램 Python을 실무에서 사용하듯 능숙하게 다루게 알려드립니다.\nPython 경험이 없는 초보도 함께 시작할 수 있는 강의로, 이론적 자료는 물론 예시까지 쉽고 체계적으로 알려드립니다.\nPython에서 이전에 프로그래밍한 적이 없어도 프레임워크를 포함하여 Python Selenium 자동화에 대해 알아야 할 모든 것을 알려드립니다.\n\n\n\n\n[본 강의를 수강해야 하는 세 가지 이유]\n#1. 알고 계셨나요? Python은 모든 애플리케이션에서 인공 지능 및 웹 보안을 구현하는 데 널리 사용되고 있습니다. 이에 다라 QA 업계는 AI 프로젝트를 지원하기 위한 테스트 자동화 구현을 위해 Python으로 초점을 전환해야 했습니다.\n이 강의를 통해 Python 기본에 숙달될 수 있으며 + Selenium Python + PyTest 유닛 테스팅 프레임워크 + 페이지 오브젝트 디자인 패턴 + Excel 데이터 기반 프레임워크 + Log4J 로깅 + 크로스 브라우저 테스팅 + 면접 준비 + GitHUB을 제공합니다\n\n#2. 강의를 마치면 Python을 사용한 Selenium 자동화 테스팅에 숙달되고, 직장에서 성공적으로 구현할 수 있거나 높은 임금을 받는 일자리를 구할 수 있습니다\n\n#3. 시장에서 완전히 새롭고 유일한 강의입니다. 저희는 수강생이 자동화/코딩 경험이 없다고 가정하며 모든 주제를 아무런 사전 지식 없이 기본부터 시작합니다. 예시는 다양한 구성 요소가 어떻게 자동화될 수 있는지 이해하도록 실시간으로 호스팅되는 웹 애플리케이션에서 가져옵니다.\n\n\n\n\n[본 강의에서 다룰 내용]\nPython 기본\nPython 프로그래밍 예시\nPython 데이터 유형\nPython OOPS 예시\nSelenium 로케이터\nSelenium 다중 브라우저 실행\nPython Selenium API 메소드\n고급 Selenium 사용자 상호 작용\n완벽한 자동화 연습 예시\nPyTest - 유닛 테스팅 프레임워크\nPyTest Fixtures\nPyTest 매개변수화\nPyTest 주석, 명령줄 인자\nPython PyTest 보고서\nLog4J Logging Python\n페이지 오브젝트 모델 디자인 패턴\n완전히 처음부터 완벽한 프레임워크 디자인\nExcel을 사용한 Python 데이터 기반 프레임워크\nPyxl 예시 및 Selenium 통합\nJenkins CI 통합\nGITHUB 버전 제어 관리\n\n\n저와 함께 즐거운 테스팅 되세요! 1강에서 뵙겠습니다.\n- Rahul\n\n\nP.S. 강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)",
      "target_audience": [
        "본 강의를 수강하여 명확하고 깊은 프로그래밍 지식을 얻고 싶은 테스터 및 자동화를 배우고 싶은 수동 테스터",
        "Python + 프레임워크를 처음 사용하는 분",
        "파이썬 코딩 학습 경험을 높여 IT 기술 업계에 커리어를 시작하는데 목표를 둔 신입생 및 취업준비생"
      ]
    },
    {
      "title": "Học Cucumber từ website đến Android",
      "url": "https://www.udemy.com/course/hoc-cucumber-tu-website-en-android/",
      "bio": "Cucumber",
      "objectives": [
        "Tìm hiểu Cucumber",
        "Cách ứng dụng Cucumber khi kiểm tra một website",
        "Cách ứng dụng Cucumber khi kiểm tra một application android",
        "Viết các script với Cucumber như feature, scenarios"
      ],
      "course_content": {
        "Giới thiệu": [
          "Giới thiệu khóa học",
          "Nội dung khóa học"
        ],
        "Cài đặt": [
          "Giới thiệu",
          "Cài đặt JAVA",
          "Cài đặt Maven",
          "Cài đặt Eclipse",
          "Cài đặt TestNG",
          "Cài đặt IntelliJIDEA",
          "Cài đặt Cucumber",
          "Cài đặt Chrome Driver",
          "Cách kết nối device",
          "Cách tạo Android Emulator",
          "Khởi động Android Emulator",
          "Tạo dự án",
          "Làm việc với các thư viện liên quan đến APPIUM",
          "Tập tin POM",
          "HTML cơ bản"
        ],
        "Cucumber": [
          "Quy trình phát triển",
          "Giới thiệu Gherkin",
          "Cách Cucumber hoạt động",
          "Ngôn ngữ Gherkin",
          "Tạo tập tin features",
          "Tạo tập tin Steps Definitions",
          "Tập tin Runner",
          "Cách tạo báo cáo trong Cucumber",
          "Cú pháp trong Gherkins",
          "Features",
          "Scenarios",
          "Given When Then",
          "And và But",
          "Comments",
          "Data table",
          "Background",
          "Tags",
          "Spoken Languages",
          "Tham số",
          "Scenarios Outline",
          "Xử lý ngoại lệ",
          "Thử nghiệm nhiều kịch bản",
          "Làm việc với nhiều tập tin features",
          "HOOKS trong cucumber",
          "Options trong cucumber",
          "Sự kết hợp Tags và Hooks",
          "Run tập tin Runner",
          "Sử dựng TestNG",
          "Sử dụng Surefire",
          "Tạo báo cáo với hình minh họa trong cucumber",
          "Tạo báo cáo với hình minh họa trong Extents",
          "Quay phim cho test scenario",
          "Thư viện để chạy Android App",
          "Viết test scenario cho Android App",
          "Demo App bookmyshow và cách lấy packge - activate app",
          "Viết fearute cho BookMyShow",
          "Viết Steps definition",
          "Sử dụng data table",
          "Viết code cho Outline Example",
          "Tổng kết khóa học"
        ]
      },
      "requirements": [
        "Các bạn đã có kiến thức về Selenium"
      ],
      "description": "Trong công việc hiện tại và tương lai, việc phát triển phần mềm theo hướng kiểm thử tự động và tối ưu hóa quy trình phát triển phần mềm là cực kỳ quan trọng. Khóa học này giúp bạn làm chủ Cucumber – một công cụ mạnh mẽ hỗ trợ phát triển dựa trên hành vi (BDD), giúp các yêu cầu phần mềm trở nên rõ ràng, có thể kiểm tra và dễ dàng hợp tác giữa các nhóm kỹ thuật và kinh doanh.\nVới Cucumber, bạn sẽ có thể viết các tính năng và kịch bản kiểm thử bằng ngôn ngữ tự nhiên (Gherkin), sau đó chuyển chúng thành mã kiểm thử tự động. Khóa học sẽ cung cấp cho bạn cái nhìn tổng quan về BDD, hướng dẫn chi tiết về quy trình làm việc của Cucumber và cách áp dụng vào các dự án thực tế, từ website đến ứng dụng Android.\nThông qua việc học viết các kịch bản kiểm thử bằng Gherkin và triển khai chúng trong Java, bạn sẽ biết cách tạo ra các báo cáo tự động với Cucumber và ExtentReports, kèm theo hình ảnh minh họa và video quay lại quá trình kiểm thử. Những kỹ năng này không chỉ giúp bạn nâng cao hiệu suất công việc hiện tại mà còn giúp bạn đáp ứng được yêu cầu kiểm thử tự động trong các dự án phần mềm của tương lai.\nKhóa học này sẽ giúp bạn:\nThành thạo Cucumber và cách ứng dụng vào công việc kiểm thử phần mềm.\nKiểm thử tự động trên cả website và ứng dụng Android.\nViết các kịch bản kiểm thử với Cucumber (feature, scenarios) để tăng độ chính xác và hiệu quả.\nTạo báo cáo chi tiết về quá trình kiểm thử, bao gồm hình ảnh và video minh họa.\nĐiều kiện tiên quyết:\nBạn đã có kiến thức cơ bản về Selenium.\nĐối tượng khóa học:\nCác bạn đã có kiến thức lập trình Java và muốn nâng cao kỹ năng kiểm thử tự động với Cucumber, áp dụng vào các dự án phần mềm hiện đại.\nKhóa học này là cơ hội tuyệt vời để bạn phát triển các kỹ năng kiểm thử tự động, giúp bạn trở thành một chuyên gia trong việc phát triển phần mềm linh hoạt và tối ưu hóa quy trình kiểm thử trong công việc hiện tại và tương lai.",
      "target_audience": [
        "Các bạn đã có kiến thức lập trình java"
      ]
    },
    {
      "title": "Practical Software Testing [In Arabic]",
      "url": "https://www.udemy.com/course/practical-software-testing-istqb-basics-in-arabic/",
      "bio": "أساسيات اختبار البرامج",
      "objectives": [
        "You'll learn Software Testing basics with practical examples حتقدر تعرف كل الاساسيات اللازمة بأمثلة عملية جدا",
        "Seven Principles of testing ايه المبادىء الخاصة باختبار البرمجيات",
        "Test Process ايه الخطوات اللازمة عشان تبدا و تنتهى من شغلك",
        "Test Planning & Controlling ازاى اخطط لشغلى و اتحكم فيه صح",
        "Test Analysis & Design ازاى اقدر اطلع احتمالات اكتر",
        "Test Implementation & Execution ازاى اقدر انف> شغلى بطريقة صح",
        "Evaluate Exit Criteria امتى اوقف شغلى",
        "Test Closure ازاى اجمع كل شغلى فى نهاية اى مشروع",
        "Cross Browser Testing ازاى تقدر تختبر على اكتر من متصفح",
        "Multi Lingual Testing ازاى تقدر تختبر على برنامج معمول بأكتر من لغة",
        "Smoke Testing ازاى تقدر تعرف البرنامج اللى ادامك دا شغال صح ولا لا"
      ],
      "course_content": {
        "Introduction": [
          "Practical Software Testing أساسيات اختبار البرامج",
          "Seven Principles Of Testing المبادئ الرئيسية لاختبار البرامج",
          "Companies Type & Tester Duties أنواع الشركات و نظام العمل"
        ],
        "Test Process": [
          "Test Planning & Controlling التخطيط و المتابعة لاختبار البرامج",
          "Test Analysis & Design التحليل لاختبار البرامج",
          "Test Implementation & Execution التنفيد لاختبار البرامج",
          "Evaluate Exit Criteria كيفية الخروج من اى مشروع",
          "Test Closure اغلاق اختبار البرامج"
        ],
        "Practical Testing Topics": [
          "Smoke Testing الاختبار المبدئى",
          "Cross Browser Testing اختبار على أكثر من متصفح",
          "Multilingual Testing الاختبار على اكتر من لغة",
          "Difference Between Bugs Priority & Severity الفرق بين الاهمية و التأثير",
          "Traceability Matrix كيفية ربط كل ادوات العمل ببعض",
          "Risk Based Testing العمل على المخاطر",
          "SQL Use In Software Testing كيفية استخدام قواعد البيانات",
          "Practical White Box Testing كيفية اختبار البرامج عن طريق الهيكل الداخلى"
        ]
      },
      "requirements": [
        "لا توجد أى متطلبات قبل بداية الكورس",
        "الكورس بيبدأ من الصفر تماما"
      ],
      "description": "أهلا بيكم فى أول كورس عملى فى\nSoftware Testing Basics اساسيات اختبار التطبيقات\nخلال الكورس دا حتتعلم ازاى تشتغل صح و بشكل عملى فى مجال ال\nSoftware Testing اختبار البرمجيات\nمن ضمن فيديوهات كتير اختارتها عشان تبقى موجودة هنا هى مواضيع محدش دخل فيها قبل كدا بشكل عملى زى\nِCross Browser Testing ازاى تختبر ويب سيت على اكتر من متصفح\nMultilingual Testing ازاى تختبر برنامج ليه اكتر من لغة\nSmoke Testing ازاى تعرف ان البرنامج بتاعك شفال من الاول ولا لا عشان تتجنب تضيع الوقت\nبعتمد أكتر فى شرح الكورس دا على انى اديلك أمثلة عملية من خلال شرح شاشات و كود و داتابيز بحيث تبقى ملم اكتر بالموضوع\nطبعا عشان تقدر تفهم أكتر حطيت أساسيات المجال زى\nTest Process اساسيات العمل\nSeven Principles of Testing مبادئ موجودة لازم تطبقها فى اى برنامج\nبعد الكورس دا حتكون قادر انك تشتغل فى المجال ان شاء الله بشكل عملى جدا و تبقى فاهم أكتر من حفظ النظرى",
      "target_audience": [
        "Fresh Testers",
        "Quality Control Engineers"
      ]
    },
    {
      "title": "[TELUGU] Complete Manual Testing, Agile & Jira with project",
      "url": "https://www.udemy.com/course/manualtestingintelugu/",
      "bio": "Manual Testing + Agile + Jira + Live Projects in Telugu Language , A complete Manual testing Pack with Jira and Agile",
      "objectives": [
        "Complete Manual Testing",
        "Preparting Test data",
        "Writing Testcases",
        "Performing Black Box testing",
        "Agile and Jira"
      ],
      "course_content": {
        "Introduction to Software testing": [
          "Introduction to Software testing",
          "Tester Skill Set"
        ],
        "Types Of Testing?": [
          "Difference between manual and automation testing"
        ],
        "Introduction to Software Development Life Cycle [SDLC]": [
          "Types Of Software",
          "SDLC-Part 1",
          "SDLC - Part 2",
          "SDLC Models & V model Explanation"
        ],
        "Testing Techniques": [
          "SOFTWARE testing techniques (exhaustive testing and optimal testing)"
        ],
        "Testing Phase": [
          "Testing Levels In SDLC and Function Testing"
        ],
        "Black Box Testing Techniques": [
          "BVA (Boundary value Analysis)",
          "ECP (equivalence class partitioning) And Deriving Testdata"
        ],
        "NON - FUNCTIONAL TESTING": [
          "NON - FUNCTIONAL TESTING"
        ],
        "Smoke and Localization Testing": [
          "Smoke , Ad-hoc and Localization Testing"
        ],
        "RE-TESTING AND REGRESSION TESTING": [
          "RE-TESTING AND REGRESSION TESTING"
        ],
        "SOFTWARE TESTING LIFE CYCLE": [
          "Test Initiation and Test Planning",
          "Test Scenario"
        ]
      },
      "requirements": [
        "Nothing ... Yes absolutely nothing , you need to have interest to Learn software testing that is enough"
      ],
      "description": "MANUAL సాఫ్ట్వేర్ టెస్టింగ్  తెలుగు లో\nపూర్తి మాన్యువల్ టెస్టింగ్, ఎజైల్ & జిరా ప్రాజెక్ట్‌తో\n\n\nCovered all Topics like :\nబేసిక్స్  అఫ్  సాఫ్ట్వేర్  డెవలప్మెంట్\nసాఫ్ట్వేర్ డెవలప్మెంట్ లైఫ్ సైకిల్  (SDLC)\nసాఫ్ట్వేర్ టెస్టింగ్  లైఫ్ సైకిల్ (STLC)\nBlack Box Testing\nఫంక్షనల్ టెస్ట్‌కేసులు రాయడం\n\n\nటెస్ట్ డేటా క్రియేషన్  And project\n\n\nవర్కింగ్  ఆన్  జీరా  విత్  agile/స్క్రమ్\n\n\nరియల్ టైం examples\n\n\n\n\nమాన్యువల్ టెస్టింగ్‌లో కెరీర్ ప్రారంభించాలనుకునే వారికి ఈ కోర్సు అనుకూలంగా ఉంటుంది",
      "target_audience": [
        "Every one who are interested to Learn or Start career in Software Testing"
      ]
    },
    {
      "title": "Cypress ve POM: Modern Test Otomasyon Stratejileri",
      "url": "https://www.udemy.com/course/cypress-ve-pom-modern-test-otomasyon-stratejileri/",
      "bio": "Cypress, Page Object Model ve en son yapay zeka teknolojilerini kullanarak akıllı, kendini onaran test otomasyon framewo",
      "objectives": [
        "Test otomasyonunda kendini geliştirmek isteyen QA uzmanları ve test mühendisleri",
        "Yazılım geliştirme süreçlerini iyileştirmek isteyen geliştiriciler",
        "Yapay zeka ve test otomasyonunu birleştirerek kariyer fırsatlarını artırmak isteyen teknoloji meraklıları",
        "Agile süreçlerinde test otomasyonunu etkin kullanmak isteyen proje yöneticileri ve takım liderleri"
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Cypress Kurulumu ve İlk Testleri Çalıştırma",
          "Cypress Kurulumunu Tamamlama ve İlk Testler",
          "Cypress Anahtar Kelimelerine Geçiş",
          "Page Object Model Mimarisine Başlangıç",
          "Page ve Locators Sınıflarını Oluşturma",
          "Page Object Model ile Test Class Oluşturma",
          "Metodlara Giriş",
          "Locator Alma ve Kısa bir Özet",
          "Hesap Açma Menüsünün 5 Dakikada Otomasyon Kodlarını Yazma",
          "Allure Raporu Ekleme",
          "Allure Raporu ve Son Ders Özeti"
        ]
      },
      "requirements": [
        "Bir bilgisayar ve internet bağlantısı dışında özel bir ekipman gerekmez. Tüm gerekli yazılımları birlikte kuracağız."
      ],
      "description": "Cypress, Yapay Zeka ve Allure Report ile Geleceğin Test Otomasyonu\n\n\nModern yazılım geliştirme süreçlerinde test otomasyonu artık çoğu şirkette zorunlu hale geldi. Bu kurs, Cypress'in güçlü özellikleri, yapay zeka teknolojileri ve Allure Report'un gelişmiş raporlama yeteneklerini Page Object Model (POM) ile bir araya getirerek, test otomasyonunda çığır açacak bir yaklaşım sunuyor.\n\n\nKursumuzda öğrenecekleriniz:\n* Cypress'in temel ve ileri düzey kullanımı\n* Page Object Model (POM) tasarım deseninin etkin uygulanması\n* Yapay zeka algoritmaları ile test senaryolarının optimizasyonu\n* Manuel olarak user story ve test case yazımı\n* Allure Report ile etkileyici ve detaylı test raporları hazırlama\n* Aktif terminal kullanımı\n* Gerçek iş ortamından örnekler ile konu zenginleştirme\n\n\nBu kurs, test otomasyonunda kendini geliştirmek isteyen QA uzmanları, yazılım geliştiriciler ve IT profesyonelleri için tasarlandı. Temel JavaScript bilgisi ve test otomasyonu kavramlarına azda olsa aşinalık, kursa başlamak için yeterlidir.\n\n\nKurs sonunda, Cypress ve POM'u etkili kullanmanın yanı sıra, yapay zeka destekli test otomasyonu konusunda sektörde öne çıkan bir uzman olacaksınız. Artık hataları daha rahat anlayabilecek ve çözümlerini yapay zeka yardımıyla hemen bulacaksınız. Hiç bilginiz olmasa bile, gerekli kurulumları çok rahat bir şekilde yapabileceksiniz.\n\n\nOluşturacağınız akıllı, ölçeklenebilir test frameworkleri ile iş verimliliğinizi artıracak, hata bulma oranlarınızı yükseltecek ve yazılım geliştirme süreçlerinizi hızlandıracaksınız. Ayrıca, Allure Report ile test sonuçlarınızı etkileyici bir şekilde görselleştirmeyi öğreneceksiniz.\n\n\nGeleceğin test otomasyon uzmanı olmaya hazır mısınız? Hemen kaydolun ve yazılım kalitesini bir üst seviyeye taşıyın!",
      "target_audience": [
        "Herkese"
      ]
    },
    {
      "title": "Kotlin と JUnit で学ぶ、はじめてのユニットテスト【丁寧な解説＋演習問題で プログラミング 中級者になろう】",
      "url": "https://www.udemy.com/course/unittest-kotlin-junit/",
      "bio": "ユニットテスト 書いてますか？元塾講師プログラマーの「ユニットテスト」基礎講座！Kotlin と JUnit を用いて、言語や環境によらないユニットテストの本質を学習！ソフトウェアテストはここから始めよう！Android Studio使用。",
      "objectives": [
        "ユニットテストを開発に使うための知識を学びます。",
        "ユニットテストとはなにか？なぜ行うのか？を理解できます。",
        "JUnitをはじめとしたテスティングフレームワークについて理解できます。",
        "ユニットテストの基本・本質について理解できるので、他の環境にも応用できる知識が得られます。"
      ],
      "course_content": {
        "はじめに": [
          "ユニットテスト・ソフトウェアテストとは？",
          "Android Studioのインストール",
          "資料のダウンロード"
        ],
        "ユニットテストチュートリアル": [
          "チュートリアルの準備",
          "テストクラスとテストメソッドの作成",
          "アサーションとAssertJの準備",
          "テストコードを書いてみよう",
          "演習問題①",
          "演習問題①解説",
          "ちょっと演習",
          "ちょっと演習解答",
          "例外の送出をテストする",
          "チュートリアルまとめ"
        ],
        "ユニットテストとJUnit4の基本": [
          "ユニットテストはなぜ行う必要があるのか？",
          "良いユニットテストの5つの条件",
          "ブラックボックステストとホワイトボックステスト",
          "ソフトウェアテストの4フェーズ",
          "JUnitのアノテーションの種類",
          "ユニットテストのパターン",
          "演習問題②"
        ],
        "アサーション": [
          "文字列のアサーション",
          "数値と配列・コレクションのアサーション",
          "演習問題③",
          "演習問題③解説"
        ],
        "テストランナー": [
          "テストランナー",
          "演習問題④・⑤",
          "演習問題④解説",
          "演習問題⑤解説"
        ],
        "テストケースの構造化（Enclosedテストランナー）": [
          "Enclosedテストランナー",
          "演習問題⑥",
          "演習問題⑥解説"
        ],
        "テストダブル": [
          "テストダブルとは？①",
          "テストダブルとは？②",
          "スタブ",
          "モックとは？①",
          "モックとは？②",
          "モック",
          "スタブとモックの注意点",
          "Mockitoとは？",
          "Mockitoでスタブ",
          "Mockitoでモック",
          "Mockitoの注意点",
          "テストダブルのまとめ",
          "演習問題⑦",
          "演習問題⑦解説",
          "境界値テスト"
        ],
        "ユニットテストの周辺事項とまとめ": [
          "テストファーストな開発",
          "品質保証にはさらにテストが必要",
          "ユニットテストは目的でなく手段",
          "質問をする前に必ず読んでください"
        ],
        "ボーナス": [
          "さらなる上達のための学習コンテンツ"
        ]
      },
      "requirements": [
        "講座「はじめての Kotlin【Java 知らなくてOK！丁寧な解説で Android に必要な Kotlin の基本を学習】」レベルのプログラミングの知識は必要です。"
      ],
      "description": "講座の特徴\nこの講座は「はじめてユニットテストに取り組む方が、基本的なユニットテストを自身で行えるようになる」ための講座です。\n\n\nユニットテストは、ソフトウェアテストの中でも最も基本的なテストです。\nユニットテストを書くと開発がしやすくなることから、\n開発者のためのテストということで「デベロッパーテスト」と呼ばれることもあります。\n\n\nこの講座ではKotlinとJUnitを用いて、ユニットテストの基本・本質について学んでいきます。\nKotlinとJUnitを使用してはいますが、これら以外の環境でもユニットテストが行えるように、\nユニットテストの本質・普遍的な概念にフォーカスして学んでいきます。\n\n\nですので、KotlinやJUnitを使う予定がないという方にも価値のあるコンテンツになっているかと思います。\nユニットテストの最初の一歩はこの講座からはじめましょう。\n\n\n\n\n扱う内容・扱わない内容\n各プログラミング言語にはxUnitと呼ばれるテスティングフレームワークがあります。\nJUnitはxUnitの一種類で、JavaやKotlinなどのJVM言語で使用できるテスティングフレームワークです。\nこの講座ではKotlinとJUnit4を用いて、他のプログラミング言語のテスティングフレームワークでも役立つ + 知っておくべき「考え方」を中心に学んでいきます。\nですので、KotlinやJUnitを使う予定はなけれども、ユニットテストは初めてという方にも役立つ内容になっています。\n\n\nユニットテストは実際に開発の中で使っていくのが一番上達します。\nなのでこの講座では、実際の開発に使用できるようになるまでに必要な知識だけ厳選してお伝えします。\nまずはこの講座でユニットテストの基本を「短時間で」「効率的に」理解しましょう。\n\n\n具体的には以下のような流れで学んでいきます。\nユニットテストを実際に体験して、ユニットテストの概要を理解\nユニットテストとJUnit4の基本を学習して、ユニットテストの基本を理解\nユニットテストの各要素の中でも最重要事項に絞って深ぼり\n\n\nこのような流れで以下のような内容について学んでいきます。\nユニットテストを書くメリット\n良いユニットテストを書くための条件\nアサーション\nテストランナー\nテストの構造化\nテストダブル（スタブ・モック）\nなどなど\n\n\nユニットテストはソフトウェアテストの基本の基本です。\nユニットテストの知識は、テスト駆動開発や品質保証のためのソフトウェアテストなど、堅牢なプログラムを効率的に作成していくために必要な知識の基礎になります。\n\n\nプログラミング初心者と中級者の違いのひとつとして「ユニットテストを書いているか」という違いがあります。\nユニットテストを書けるようになって中級者にステップアップしていきましょう！",
      "target_audience": [
        "ユニットテストを書いてプログラムの質を向上させたい方。",
        "ユニットテストなどのソフトウェアテストを行う理由がわからない方。",
        "JUnitをはじめとしたテスティングフレームワークを使えるようになりたい方。",
        "テスト駆動開発などの、テストファーストでアジャイルな開発を実践したい方。"
      ]
    },
    {
      "title": "Postman do Básico ao Avançado com Projetos",
      "url": "https://www.udemy.com/course/postman-do-basico-ao-avancado-com-projetos/",
      "bio": "Aprenda a executar testes de API com Postman",
      "objectives": [
        "Criar e gerenciar Collections com Postman",
        "Aprenderá a criar requisições com Postman",
        "Trabalhar com variáveis nas suas requisições",
        "Criar testes para validar suas requisições",
        "Testes de Performance com Postman",
        "Executar várias requisições ao mesmo tempo com Runner e Newman"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Repositório",
          "Tire suas dúvidas e participe da comunidade"
        ],
        "Preparando ambiente": [
          "O que é a ferramenta postman",
          "Nivelamento sobre API"
        ],
        "Estruturas básicas do Postman": [
          "Workspace",
          "Collections",
          "Environments",
          "Variáveis no Postman",
          "Pre-request Script",
          "Tests",
          "Runner"
        ],
        "Exercícios - API Reqres [NOVO]": [
          "Apresentação API Reqres",
          "Adição de Cabeçalho de autenticação",
          "End-point: 1 - GET {RESOURCE}",
          "End-point: 2 - GET USERS",
          "End-point: 3 - GET USER ID - EXIST",
          "End-point: 4 - GET USER ID - NON EXIST",
          "End-point: 5 - GET USER - DELAY",
          "End-point: 6 - REGISTER USER"
        ],
        "Projeto Server Rest - Casos de Teste [ATUALIZADO]": [
          "Introdução ao projeto",
          "Casos de Teste: API USUÁRIO",
          "Explicação casos de teste API USUÁRIO",
          "USUÁRIO: CT 1 - Sucesso - CRUD (Admin True) - Parte 1",
          "USUÁRIO: CT 1 - Sucesso - CRUD (Admin True) - Parte 2",
          "USUÁRIO: CT 1 - Sucesso - CRUD (Admin True) - Parte 3",
          "USUÁRIO: CT 2 - Sucesso - CRUD (Admin False)",
          "USUÁRIO: CT 3 - Falha- Criar Usuário - Usuários iguais",
          "[DESAFIO] API USUÁRIO CT 4 e CT 5",
          "Casos de Teste: API LOGIN",
          "Explicação casos de teste API LOGIN",
          "LOGIN: CT 1 - Sucesso - Realizar Login - Admin True",
          "LOGIN: CT 3 - Falha - Realizar Login - Credenciais inválidas",
          "LOGIN: CT 4 - Falha - Realizar Login - JSON incompleto",
          "[DESAFIO] API LOGIN CT 2",
          "Casos de Teste: API PRODUTO",
          "Explicação casos de teste API PRODUTO",
          "PRODUTO: CT 1 - Sucesso - Criar Produto - Parte 1",
          "PRODUTO: CT 1 - Sucesso - Criar Produto - Parte 2",
          "PRODUTO: CT 1 - Sucesso - Criar Produto - Parte 3",
          "[DESAFIO] API PRODUTO CT 2 a CT 6",
          "Casos de Teste: API CARRINHO",
          "Explicação casos de teste API CARRINHO",
          "Explicação regras de negócio da API CARRINHO",
          "CARRINHO: CT 1 - Sucesso - Concluir Compra - Parte 1",
          "CARRINHO: CT 1 - Sucesso - Concluir Compra - Parte 2",
          "CARRINHO: CT 1 - Sucesso - Concluir Compra - Parte 3",
          "[DESAFIO] API CARRINHO CT 2 a 6"
        ],
        "Exercícios - Faker API [NOVO]": [
          "Links importantes sobre o módulo: \"Exercícios - Faker API\"",
          "[DESAFIO] Exercícios - Faker API"
        ],
        "Estruturas Avançadas do Postman: Teste de Performance": [
          "Aviso sobre os testes de Performance",
          "Links importantes para sessão de performance",
          "Conhecendo a funcionalidade de testes de Performance",
          "Preparando Collection para testes de Performance",
          "O que são usuários virtuais",
          "O que é Load profile: Fixed e Ramp up?",
          "Execução e Dashboard gerados"
        ],
        "Estruturas Avançadas do Postman: Newman": [
          "Links importantes Newman",
          "Instalando Newman e dependências",
          "Executando Collections com Newman",
          "Gerando relatórios HTML a partir do Newman"
        ],
        "Encerramento": [
          "Considerações finais"
        ],
        "Bônus": [
          "Aula Bônus - confira!"
        ]
      },
      "requirements": [
        "Noções básicas de javascript",
        "Conceitos básicos sobre testes de API",
        "Noções básicas sobre requisições HTTP"
      ],
      "description": "Bem-vindo ao Curso de Postman do Básico ao Avançado com Projetos, o seu caminho para se tornar um mestre na automação de testes de API. Se você é um desenvolvedor, testador de software, engenheiro de qualidade ou um entusiasta de tecnologia que deseja aprimorar suas habilidades em testes de API, este curso é a porta de entrada para você.\nO que você vai aprender:\nIntrodução ao Postman: Começaremos com os conceitos básicos. Aprenda a instalar, configurar e navegar na interface do Postman.\nTestes de API com Postman: Descubra como criar e executar testes automatizados para API, garantindo que suas APIs funcionem corretamente e atendam às expectativas.\nAutomação de Fluxos de Trabalho: Vamos aprofundar na automação. Saiba como criar coleções de solicitações e automatizar fluxos de trabalho complexos para economizar tempo e recursos.\nVariáveis e Ambientes: Aprenda a utilizar variáveis e ambientes no Postman para tornar seus testes flexíveis e reutilizáveis.\nExecutar testes com Newman: Você irá aprender como executar teste de API por linha de comando utilizando Newman, dessa forma poderá integrar seus testes em um CI/CD\nExecutar testes de Performance: Aprenderá conceitos básicos de teste de Performance e como executar testes de performance utilizando o Postman\n\n\nNota: Este curso é adequado para todos os níveis, desde iniciantes até profissionais experientes em testes de API.",
      "target_audience": [
        "QAs",
        "Desenvolvedores",
        "Estudantes de TI"
      ]
    },
    {
      "title": "Aprende Automatización Web con Selenium",
      "url": "https://www.udemy.com/course/aprende-automatizacion-web-con-selenium/",
      "bio": "Programa un Bot de Instagram con Python y Selenium y Haz Web Scrapping en Linkendin",
      "objectives": [
        "Automatizacion Web con Selenium",
        "Python",
        "JavaScript",
        "HTML",
        "Scrapping",
        "Implementar un Bot en Instagram"
      ],
      "course_content": {
        "Introducción y Primeros Pasos": [
          "Introducción",
          "Instalación de Visual Studio",
          "Instalación de Python",
          "Instalacion de Selenium y Primer Programa",
          "Instalación de Pylint",
          "Introducción a Google Colab"
        ],
        "Programacion Básica en Python": [
          "Variables en Python",
          "Listas en Python",
          "Strings en Python",
          "Condicionales en Python",
          "Bucles en Python",
          "Funciones en Python",
          "Funciones Recursivas",
          "Clases en Python",
          "Try-Except",
          "Lectura y Escritura de Archivos",
          "Funciones Lambda"
        ],
        "Introducción a Selenium": [
          "Introducción a HTML",
          "Visualización código HTML Y Etiquetas mas comunes",
          "Introducción a la búsqueda de elementos",
          "Búsqueda de Elementos.Funciones Básicas",
          "Log in Facebook"
        ],
        "Automatizacion Web con Selenium": [
          "Selección de elementos .Ejemplo",
          "Selección de Elementos .Botones con elementos Desplegables",
          "Comprobación de Elementos en una Lista",
          "Tiempos Explicitos e Implicitos",
          "Capturas de Pantalla en Selenium",
          "Exepciones en Selenium"
        ],
        "Uso de JavaScript en Selenium y Scrapping": [
          "Cookies en JavaScript",
          "Inyección de Código JavaScript",
          "Cookies en Selenium",
          "Navegacion",
          "Introducción al Scrapping",
          "Ejemplo de Scrapping",
          "Funciones de back and Forward"
        ],
        "Ejemplos Reales usando Redes Sociales": [
          "Log in en Instagram",
          "Dar like a varias fotos",
          "Comentarios en Instagram",
          "Seguir a una persona",
          "Log in Linkedin",
          "Scroll en Linkedin",
          "Scraping en Linkedin"
        ],
        "[MODULO EXTRA]": [
          "Lectura de HTML con Pandas"
        ]
      },
      "requirements": [
        "Tener ganas de aprender"
      ],
      "description": "A lo largo de Este curso Aprenderemos a utilizar Selenium Para la Automatización Web. Aprenderemos los fundamentos de HTML y JavaScript\nDesarrollaremos nuestro curso programando en Python y aprendiendo desde lo más básico hasta ejemplo más complejos.\nA lo largo del curso veremos ejemplos prácticos  sobre como hacer Login en una web o como podemos navegar a través de ella\nImplementaremos un caso real sobre la programación de un Bot en Instagram y Scrapping en una red social como Linkendin\n\n\nEl curso está divido en 6 módulos:\n1) Veremos los pasos básicos de instalación de Python, Selenium y Visual Studio\n2) Modulo de programación básica en Python\n3)Introducción a la automatización Web con Selenium\n4) Conceptos Avanzandos en Selenium\n5)Uso de JavaScript con Selenium y WebScrapping\n6) Ejemplo reales: Bot en Instagram y Scrapping en Linkendin\n\n\nAprenderás paso a paso como utilizar selenium con ejemplos prácticos que podrás poner a funcionar desde el minuto 1. Comprenderás los aspectos básicos de la automatización de  procesos (RPA)  haciendo uso del lenguaje de programación Python así como las diferentes etapas para estructura un projecto de forma eficaz. Tras finalizar el curso serás capaz de poner en producción tus propios programas para automatizar tareas en la web\nTendrás acceso a los códigos implementados y pordrás preguntarme directamente tus dudas! Te espero dentro.",
      "target_audience": [
        "Personas que quieran aprender a utilizar un software de Web Testing"
      ]
    },
    {
      "title": "6 EXAMENS -Selenium A4Q Foundation-100% de réussite",
      "url": "https://www.udemy.com/course/examens-selenium-a4q-foundation-100-de-reussite/",
      "bio": "Automatisation des tests logiciels : Réussir la certification Selenium A4Q Foundation (Examens pratiques)",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Selenium est la technologie leadeur en matière d'automatisation des tests et les tests automatisés continuent d'être un facteur important dans la transformation du développement de logiciels. Le Niveau Fondation Testeur Certifié Selenium offre une formation pratique, qui permet, après sa réussite, de créer et exécuter des tests Selenium WebDriver de façon autonome. Les participants apprennent à connaître les facteurs qui devront être pris en compte lors des tests automatisés, ainsi que des techniques spéciales de navigation, une interaction avec des éléments GUI, les enregistrements, les rapports et beaucoup plus.\nce simulateur permet d'exercer pour lieux passer la certification Selenium A4Q Foundation\nCeci est un exemple d’examen. L’objectif est d’aider le candidat dans sa préparation pour une véritable évaluation. Il fournit un ensemble de questions dont le format est similaire au vrai examen Selenium A4Q Foundation-100% de réussite.\n\n\nces exercices pour préparer à la certification Testeur Certifié Selenium Niveau Fondation.\nPré-requis\n- Il n'y a aucun pré-requis pour assister à cette formation. Tous les professionnels auront la possibilité d'y assister pour préparer leur examen de certification ISTQB Foundation.\nA qui ce cours s'adresse t-il ?\n-Testeurs, analystes de test, ingénieurs de test, consultants de test, responsables de test, développeurs de logiciels ;\n-Ce niveau Foundation convient également à toute personne souhaitant avoir une compréhension de base des tests logiciels, tels que les chefs de projet, les responsables qualité, les responsables du développement logiciel, les analystes , les directeurs informatiques et les consultants.",
      "target_audience": [
        "toute personne intéressée par la génie logiciel , test et recette",
        "Cette formation s'adresse aux publics suivants : Développeurs ; Testeurs ; Maitre d'œuvre ; Maitre d'ouvrage ; Responsables d'homologation. Cette formation s'adresse aux profils suivants Architecte d’application Chef de Projet Développeur d’applications Directeur de Projets",
        "toute personne souhaite avoir une idée sur l'automatisation de test",
        "toute personne souhaite avoir la certification A4Q"
      ]
    },
    {
      "title": "Teste de API com Cypress - Básico",
      "url": "https://www.udemy.com/course/curso-de-automacao-de-teste-de-api-com-cypress/",
      "bio": "Domine a automação de testes de api com cypress",
      "objectives": [
        "Compreensão dos Conceitos Fundamentais de Automação de Testes de API",
        "Habilidade em Criar e Executar Testes Automatizados para APIs:",
        "Capacidade de Analisar e Depurar Respostas de API",
        "Desenvolvimento de Testes Automatizados Dinâmicos e Reutilizáveis"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Prática": [
          "O que são API's",
          "Diferença entre cy.request e cy.intercept",
          "Configuração Node js",
          "Configuração Cypress",
          "Explicação API de Teste",
          "Primeiros Passos no cypress",
          "Criando Primeiro Teste",
          "Criando novos testes",
          "Criando Testes do verbo POST",
          "Cypress Plugin API"
        ],
        "Agradecimento": [
          "Agradecimento"
        ]
      },
      "requirements": [
        "Conhecimentos Básicos de Programação: É recomendável que os alunos tenham uma noção básica de programação, preferencialmente em JavaScript, pois o Cypress é baseado nessa linguagem. Familiaridade com Testes de Software: Embora não seja obrigatório, é útil que os alunos tenham alguma experiência com testes de software, seja manual ou automatizado. Entendimento Básico de APIs RESTful: Conhecer o funcionamento de APIs RESTful e conceitos como endpoints, métodos HTTP (GET, POST, PUT, DELETE) e status codes ajudará a acompanhar o conteúdo do curso."
      ],
      "description": "Prepare-se para uma jornada transformadora no mundo dos testes de API! Este curso de Automação de Testes de API com Cypress não é apenas uma introdução, mas um guia completo que irá equipá-lo com as habilidades e conhecimentos necessários para automatizar testes de API de maneira eficiente e profissional. Desde o básico até a criação de testes robustos, você aprenderá a dominar o Cypress, uma das ferramentas mais poderosas do mercado de desenvolvimento.\nVocê vai mergulhar fundo na configuração de ambientes, criação de scripts de teste e boas práticas, utilizando exemplos práticos que refletem situações do dia a dia. Este curso foi desenhado para não apenas ensinar, mas também para inspirar a excelência em automação de testes. Com uma abordagem passo a passo, você ganhará confiança para aplicar seus conhecimentos em projetos reais, tornando-se um profissional valorizado no mercado de tecnologia. Além disso, você terá acesso a recursos exclusivos e suporte contínuo para resolver dúvidas e aprimorar suas habilidades.\nAo final, você estará pronto para enfrentar qualquer desafio em testes de API, garantindo a qualidade e a integridade dos  sistemas em que você atua. Vamos juntos nessa evolução? O mundo da automação de testes de API está ao seu alcance!",
      "target_audience": [
        "Testadores de Software (QA) que Desejam se Especializar em Automação de Testes de API: Se você trabalha com testes manuais e deseja migrar para o mundo da automação, este curso lhe dará as habilidades necessárias para criar e executar testes automatizados de APIs utilizando Cypress. Desenvolvedores que Desejam Aprender a Automatizar Testes de API: Desenvolvedores que buscam incorporar testes automatizados em seus fluxos de trabalho de desenvolvimento irão achar o curso valioso para entender como o Cypress pode ser utilizado para garantir a qualidade do software."
      ]
    },
    {
      "title": "Como se tornar um QA?",
      "url": "https://www.udemy.com/course/como-se-tornar-um-qa/",
      "bio": "Aprenda do básico à automação com Cypress e entre no mercado de qualidade de software.",
      "objectives": [
        "Automação de API's utilizando o Bruno até a execução via CLI",
        "Importância do QA na qualidade sua atuação",
        "Diferentes níveis e técnicas de teste de software",
        "Automação Web utilizando Cypress",
        "Lógica de programação básica: Tipos de dados, Loops, Condições, Funções",
        "Ciclo de Desenvolvimento de software",
        "Ferramentas de gestão de testes e atividades"
      ],
      "course_content": {
        "Introdução aos conceitos de Qualidade e Teste": [
          "O que é QA?",
          "O Ciclo de desenvolvimento de software",
          "Scrum",
          "Kanban",
          "Testes Não funcionais",
          "Testes Funcionais",
          "Princípio de Paretto e Paradoxo do Pesticída"
        ],
        "Ferramentas de testes e Gerenciamento": [
          "Gerenciamento de testes - Trello",
          "Ferramentas e evidências de testes"
        ],
        "API's": [
          "Como funciona uma API",
          "Requisições na ViaCep com Bruno",
          "Iniciando requisições com ServeRest",
          "Utilizando variáveis com Bruno e adicionando a outras requisições",
          "Aprendendo utilizar dados dinâmicos no Bruno",
          "Aprimorando automação apagando resquícios da massa de teste",
          "Reutilizando url base e entendendo diferentes ambientes",
          "Executando a collection via CLI"
        ],
        "Instalação de programas necessários": [
          "Instale Node, Git, Visual Studio Code"
        ],
        "Lógica de programação básica": [
          "Variáveis",
          "Condições",
          "Loops",
          "Funções",
          "Funções - 2"
        ],
        "Automação Web com Cypress": [
          "Apresentação do Cypress e Instalação",
          "Construindo a automação no formulário",
          "Interceptando requisições HTTP utilizando cy.intercept()",
          "Finalizando o preenchimento do formulário e adicionando novo caso de teste",
          "Validando o preenchimento incompleto do formulário com fixtures",
          "Utilizando .prev() para buscar elementos anteriores ao selecionado",
          "Executando via CLI e exibindo vídeo da execução do teste em múltiplos browsers",
          "Este erro pode acontecer com você"
        ]
      },
      "requirements": [
        "Não é necessário nenhum conhecimento, embora, entender o básico de lógica de programação seja recomendado"
      ],
      "description": "Se você quer entrar na área de tecnologia, mas não sabe por onde começar, este curso é pra você. A carreira de QA (Quality Assurance) e Testes de Software é uma das portas de entrada mais acessíveis e promissoras do mercado de TI, e aqui você vai aprender tudo o que precisa para dar os primeiros passos com segurança, mesmo que ainda não tenha experiência com programação ou tecnologia.\nNeste curso completo, você vai entender o que é qualidade de software, quais são os tipos de testes existentes, como identificar problemas nos sistemas e como pensar como uma pessoa que se preocupa com a qualidade do processo e do produto. Vamos abordar desde os testes manuais, exploratórios e testes em APIs, até a introdução à automação de testes com o framework Cypress — um dos mais usados no mercado atualmente.\nVocê aprenderá a escrever e executar scripts de testes automatizados, validar funcionalidades de ponta a ponta, lidar com dados dinâmicos, comandos assíncronos e como integrar esses testes no fluxo de desenvolvimento de software.\nTudo isso com uma linguagem acessível e simples, pensada para quem está começando do zero. Ao final do curso, você terá uma base sólida para atuar como QA e seguir evoluindo na carreira.",
      "target_audience": [
        "Pessoas que querem migrar de carreira para a área de Testes e Qualidade, ou quem está na faculdade e tem interesse na área de Testes e Qualidade",
        "Iniciantes em desenvolvimento, com pouca bagagem em lógica de programação"
      ]
    },
    {
      "title": "QA קורס בדיקות תוכנה",
      "url": "https://www.udemy.com/course/qa-testing/",
      "bio": "אם גם אתם מעוניינים להיכנס לעולם ההייטק והטכנולוגיה, אם בוער בכם לעבוד במקצוע טכנולוגי מבוקש בתחום מערכות המידע הגעתם למ",
      "objectives": [
        "בקורס תצאו עם כלים מעשיים לבדיקות תוכנה",
        "תלמדו את מקצוע הבדיקות החל מהצעד הראשון",
        "תקבלו כלים וטמפלטים להורדה במסגרת הקורס",
        "תצאו עם מקצוע מבוקש בתחום הייטק והטכנלוגיה",
        "תלמדו איך לצבור ניסיון מעשי כדי שתוכלו להציג אותו למעסיקים, ולעשות כסף כפרילנסר"
      ],
      "course_content": {
        "Introduction": [
          "שיעור ראשון",
          "שיעור שני",
          "שיעור שלישי",
          "שיעור רביעי",
          "שיעור חמישי",
          "שיעור שישי",
          "שיעור שביעי",
          "שיעור שמיני",
          "שיעור תשיעי",
          "שיעור עשירי",
          "שיעור אחת עשרה",
          "סיכום",
          "איך לצבור ניסיון מעשי וגם לעשות כסף"
        ]
      },
      "requirements": [
        "ידע בסיסי במחשב"
      ],
      "description": "אם גם אתם מעוניינים להיכנס לעולם ההייטק והטכנולוגיה, אם בוער בכם לעבוד במקצוע טכנולוגי מבוקש בתחום מערכות המידע הגעתם למקום הנכון !\n\n\nכאן בקורס דיגיטלי לבדיקות תוכנה, אנחנו הולכים לזקק לך ידע מעשי ופרקטי שיכניס אותך בביטחון לתחום הטכנולוגי לבדיקות תוכנה, נלמד שיטות עבודה מתקדמות לביצוע בדיקות, נצלול מעשית להקמת תוכניות עבודה ומפרטי בדיקות, ניהול תקלות תוכנה מול הפיתוח ולמעשה כאן תקבל את כל הכלים שאתה צריך כדי להיכנס לעולם הטכנולוגי בתחום המבוקש תעסוקתית, במסגרת הקורס תקבל תבניות עבודה לשימוש ויישום בפועל.\nאז אם גם אתה רוצה להיכנס לעולם בדיקות התוכנה זו בהחלט הדרך הנכונה !\n\n\nשיעור 1: נדבר על מהן בדיקות תוכנה, למה צריך בדיקות תוכנה, היסטוריה מאיפה המקצוע נולד, והגדרות ומושגים\nכניסה לעולם הבדיקות תוכנה, מהן בדיקות תוכנה ולמה צריך, הגדרות ומושגים\n\n\nשיעור 2: נדבר על מעגלי הבדיקות, וסוגי הבדיקות\nמהן בדיקות בדיקות יחידה, בדיקות מסירה, קבלה ואיזה סוגי בדיקות ניתן לבצע כגון בדיקות ממשק חווית המשתמש, פונקציונאליות, הסבות, ממשקים ועוד..\nפרק 2: נדבר על סוגי המסמכים והכלים הפרקטיים הקיימים לבודק התוכנה\nשיעור 3:\nכתיבה ותכנון של תוכנית העבודה לבדיקות תוכנה, מהו מסמך התוכנית מפרטי הבדיקה STP, והקמת מסמך מפרט הבדיקות.\nשיעור 4:\nכתיבה ותכנון של ביצוע בדיקות, הכרת מבנה השדות, איך לכתוב מסמך מפורט לתרחישי הבדיקות STD, יצירת תוכנית מפורטת של תרחישי הבדיקה STD, ושיטות להקמת מפרטי בדיקה מפורטות כולל יצירת טבלאות החלטה מעשיות.\nשיעור 5:\nהרצת תסריטי הבדיקות, תיעוד תוצאות הבדיקה STR, כתיבת מסמך תוצאות מפרטי הבדיקה ודוחות מצב הפרויקט להנהלה.\nפרק 3:\nנלמד על תהליכי העבודה מול הפיתוח, מעגלי הבדיקות, ומסמכי הדרישות\nשיעור 6:\nתהליך העבודה בפיתוח, אבני הדרך בפרויקט, תחומי האחריות ומגדיר הדרישות\nשיעור 7:\nניהול תקלות, מחזור חיי התקלה, בעלי תפקידים בתקלה, ניהול התקלות בכלים\nכאן נלמד על דרך התנהלות נכונה מול הפיתוח בתקלות, מחזור חיי התקלה, תיעוד התקלות בכלים וכאן למעשה תוכל להוריד טמפלט לניהול ותיעוד התקלות מול צוות הפיתוח ושיקוף ללקוח ולהנהלה על מצב הפרויקט.\nשיעור 8:\nשיטות עבודה לבדיקות תוכנה.\nאיזה שיטות עבודה קיימות עומדות לפנינו לביצוע הבדיקות.\nשיעור 9:\nפרק 4:\nתהליכי בדיקות מורכבות, שיטות עבודה באמצעות כלים מס\"ד נתונים והרצת שאילתות \"SQL\" ליצירת אוכלוסייה לבדיקות וביצוע בדיקות יעילות מונחה נתונים\nשיעור 9:\nביצוע בדיקות מתקדמות באמצעות מס\"ד נתונים והרצת שאילות \"SQL\"\nשיעור 10:\nמה הן פלטפורמות, איזה סוגי פלטפורמות קיימות איך נכון לבצע בדיקות על פלטפורמות בצורה יעילה\nשיעור 11\nמהן בדיקות אוטומטיות, איזה כלים קיימים לביצוע בדיקות אוטומטיות, מהי מתודולוגיית תהליכי בדיקה עסקיים כמנחה לאוטומציה, וביצוע בדיקות עומסים",
      "target_audience": [
        "אנשים המעוניינים להיכנס לעולם הייטק",
        "תלמידים המעוניינים לקבל מקצוע מבוקש בתחום המחשוב והטכנולוגיה",
        "כל מי ששמע על בדיקות תוכנה ומעוניין לעבוד בתחום ולהרוויח משכורות 5 ספרות"
      ]
    },
    {
      "title": "Testare Manuala Testare Automata Java Selenium VS Playwright",
      "url": "https://www.udemy.com/course/manual-software-testing-introducere-in-selenium/",
      "bio": "Testare Manuala si Testare Automata. SQL Server. Postman. Creare CV. Pregatire pentru interviu",
      "objectives": [
        "Vei invata Software Testing in aproximativ 10 ore (estimare bazata pe durata tutorialelor, a temelor si testelor de evaluare)",
        "Ce este testarea si ce face un software tester",
        "Testarea Functionala/ Testarea Non-functionala",
        "Principiile testarii",
        "Nivele de testare",
        "Tehnici de testare",
        "Planificarea testarii (Test Plan)",
        "Test Cases, Test scenarios",
        "Raportarea unui BUG",
        "Software Testing Life Cycle",
        "Testarea unui API, Metodele HTTP, REST WEB Services",
        "Crearea si testarea unei baze de date. Interograri in SQL Server",
        "Tooluri de testare. Instalare si introducere in Postman",
        "Instalare Selenium. Bazele Programarii. Introducere in Automation Testing",
        "Creare Proiect Personal",
        "Instalare GIT. Incarcare proiect personal pe GIT",
        "Agile Methodology",
        "Creare CV + Scrisoare de Intentie pentru aplicare la job",
        "Test final"
      ],
      "course_content": {
        "Introducere in Software testing": [
          "Prezentare curs",
          "Ce inseamna Software Testing si care este rolul testarii",
          "Rolurile unui Software Tester",
          "Testeaza-ti cunostintele"
        ],
        "Tipuri de testare": [
          "Functional Testing",
          "Non-Functional Testing",
          "Exemple & Tema",
          "Testeaza-ti cunostintele"
        ],
        "Testing Principles": [
          "Principiile Testarii",
          "Principiile Testarii aplicate pe exemple",
          "Testeaza-ti cunostintele"
        ],
        "Levels of Testing in Software Testing": [
          "Nivele de Testare (Piramida Testarii)",
          "Testeaza-ti cunotintele"
        ],
        "Testing Techniques": [
          "Tehnici de Testare",
          "Testeaza-ti cunostintele"
        ],
        "Software Testing Life Cycle (STLC)": [
          "Fazele STLC",
          "Entry si Exit Criteria in STLC",
          "Testeaza-ti cunostintele"
        ],
        "Test Cases and Test Scenarios": [
          "Cazuri de testare si Scenarii de testare",
          "Creare Cont ClickUP",
          "Tema: Creare 5 Test Cases",
          "Tema: Creare 10 Test Scenarios",
          "Testeaza-ti cunostintele"
        ],
        "BUG Report": [
          "Ce este un BUG",
          "Cum se scrie un BUG Report",
          "Tema: Raportare Bug-uri",
          "Raportarea unui Improvement (Imbunatatire pentru web site)",
          "Testeaza-ti cunostintele"
        ],
        "Test Plan": [
          "Planul de Testare",
          "Testeaza-ti cunostintele"
        ],
        "API Testing": [
          "Testarea unui API",
          "Testeaza-ti cunostintele"
        ]
      },
      "requirements": [
        "Chiar daca nu ai facultate in domeniul IT, poti lucra in acest domeniu ca si Tester. Vei invata totul de la ZERO pentru a trece cu succes de orice interviu pentru un job in pe testare.",
        "Sunt necesare cunostinte minime de limba Engleza. Unii termeni utilizati in Software Testing sunt intalniti de obicei, in engleza."
      ],
      "description": "Invata software testing de la zero din tutoriale, documentatia aferenta fiecarui subiect si exercitii practice. Vei fi 100% pregatit pentru un interviu de Junior Tester pentru un job de Manual Tester sau Automation Tester (daca ai si cunostinte de programare).\nCui se adreseaza acest curs?\n1. Persoanelor care isi doresc sa schimbe domeniul de lucru si vor un job in IT.\n2. Persoanelor care se pregatesc pentru un interviu pentru un post de Software Tester sau Testing Internship.\n3. Persoanelor care isi doresc sa invete un skill care sa le permita sa lucreze ca free-lancer.\n4. Persoanelor care au cunostinte basic de programare si se pregatesc pentru un interviu de Automation Tester.\nDe ce sa aleg acest curs?\nProbabil te-ai intrebat dupa un interviu picat “Unde gresesc? De ce nu am fost acceptat?“.\nIn general, cursurile de testare manuala te pregatesc pe partea teoretica. Atunci cand ajungi la un interviu, chiar si pentru internship sau un post de junior tester, intrebarile sunt dint-o gama mult mai larga.\nVei gasi in acest curs toate informatiile de care ai nevoie pentru a raspunde la orice intrebare din interviu, nu doar teorie pe Manual Testing, pe care sunt sigura ca o gasim la un simplu search pe net.\nDe ce as vrea sa devin tester?\nLucrand in domeniul IT ai posibilitatea de a lucra remote iar programul este de cele mai multe ori flexibil. In Romania si nu numai, acest domeniu este unul dintre cele mai bine platite, fiind intr-o continua ascensiune.\nDe asemenea, poti alege sa lucrezi ca free-lancer, sa ai proprii clienti pentru care sa testezi aplicatii si sa asiguri calitatea acestora, fara sa mai depinzi de un job sau un angajator.\nCursul contine si un modul de introducere in Selenium, bazele programarii, crearea unui proiect personal in Selenium si SQL Management Studio.\nProiectul personal este foarte important cand doresti sa aplici pentru un job, din acest motiv am pus accent pe acest lucru si vom instala GIT impreuna, apoi vom incarca proiectul din Selenium, Baza de date si interogarile din SQL online.\nCV- ul si scrisoarea de intentie sunt de asemenea foare importante in procesul de selectie realizat de catre angajator, insa vei vedea care sunt asteptarile legate de acestea si cum trebuie compuse in asa fel incat CV-ul sa devina de nerefuzat.\nHaide sa invatam Software Testing impreuna. From ZERO to HERO.",
      "target_audience": [
        "Acest curs este dedicat persoanelor care nu au deloc cunostinte de programare sau in domeniul IT, insa isi doresc sa invete de la 0 si sa inceapa o cariera in acest domeniu.",
        "Cursul este dedicat si persoanelor care au cunostinte in domeniu insa se pregatesc pentru interviu. Vei afla toate informatiile necesare pentru a trece de interviu.",
        "Celor care stiu programare si isi doresc sa devina Automation Testeri."
      ]
    },
    {
      "title": "Figma для мобильного тестировщика (Mobile QA)",
      "url": "https://www.udemy.com/course/figma-mobile-qa/",
      "bio": "Figma fo qa",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Предварительных требований нет"
      ],
      "description": "Курс создан для ознакомления с инструментом со стороны мобильного тестировщика.\nСам материал поделён на блоки каждый из которых освещает отдельные вопросы. Так мы начинаем подходит к теме \"из далека\" разбирая то зачем было создано это ПО. После переходим к вопросам условий когда Figma  актуальна нам, тестировщикам, как членам команды разработки. В следующей главе мы рассматриваем какой функционал актуален для тестирования. От общего макета до прототипа анимации. В рамках заданий получиться взаимодействовать с показательным дизайном мобильного приложения.\nА заканчиваем лайфхаками которые могут быть полезны тестировщику в его непосредственной работе. Так мы увидим, что самый надёжный \"инструмент\" для мобильного тестирования дизайна - наш глазомер и \"чувство\" цветов. Это связано с тем, что мобильный тестирощвик не может \"в два клика\", как наши коллеги из web-тестирования, сверять точный размер и точный цвет из дизайна в Figma с тем что сделали разработчики. Это более сложный процесс, но профессиональные навыки ускорят процесс разработки и повысят качество релизного проекта.\nКурс не разбирает детали функционала ПО для прямого создания дизайна и не охватывает все возможные сценарии. Но курс точно даст понимание о Figma, чем и как она будет полезна в разработке. А так же расскажет в каких форматах работы команды может быть актуальна Figma. Например в формате работы дизайнера на фрилансе возможности, у нас как у тестировщиков, редактирования макета может и не быть.",
      "target_audience": [
        "начинающий и уже действующий специалист"
      ]
    },
    {
      "title": "Le Test logiciel en Agilité de A à Z-2025",
      "url": "https://www.udemy.com/course/test-logiciel-agile-methodes-et-outils-essentiels/",
      "bio": "Maîtrisez les méthodes & outils essentiels AGILE en développement logiciel",
      "objectives": [
        "Compréhension des principes de l'agilité",
        "Les méthodologies agiles : Scrum, Kanban, etc.",
        "Rôle des tests dans un projet agile",
        "Méthodes de tests agiles",
        "Outils essentiels pour les tests agiles",
        "Suivi et communication",
        "Meilleures pratiques de test agile",
        "Cas pratiques et mise en œuvre"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "L'agilité": [
          "Comprendre l'agilité",
          "Scrum en 10 minutes"
        ],
        "Le test logiciel": [
          "Le test logiciel",
          "C'est quoi les tests ?",
          "Les Types de tests"
        ],
        "L'Importance des Tests dans un Processus Agile": [
          "L'Importance des Tests dans un Processus Agile",
          "Rôle du Testeur Agile avec des exemples",
          "User Story & Critères d'acceptation",
          "Rôle du Testeur Agile avec des exemples",
          "User Story & Critères d'acceptation : Exercice 1",
          "User Story & Critères d'acceptation : Correction de l'exercice 1",
          "User Story & Critères d'acceptation : Exercice 2",
          "User Story & Critères d'acceptation : Correction de l'exercice 2"
        ],
        "L'agilité en pratique": [
          "L'agilité en pratique : c'est quoi JIRA ?",
          "L'agilité en pratique : jira",
          "L'agilité en pratique : Cas pratique"
        ],
        "Le test logiciel agile en pratique avec Jira & Xray": [
          "Le test logiciel agile en pratique avec Jira & Xray : Ajout Xray",
          "Le test logiciel agile en pratique avec Jira & Xray : Configuration de Xray",
          "en cas de probleme de configuration de XRay : comment le résoudre ?",
          "Le test logiciel agile en pratique avec Jira & Xray : Cas pratique",
          "Cas pratique avec Jira & Xray : Ajout des users stories et sous tâches",
          "Cas pratique avec Jira & Xray : Création d'un plan de test",
          "Cas pratique avec Jira & Xray : Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray :Création des Cas de Test dans Xray",
          "Cas pratique avec Jira & Xray :",
          "Jira-Xray : Attacher les tickets à un test plan",
          "Jira-Xray : Affecter les tickets au sprint",
          "Jira-Xray : Rattachement des cas de test avec plusieurs test plan",
          "Jira-Xray : Exécution des tests",
          "Jira-Xray : Exécution des tests"
        ],
        "Gestion des anomalies avec Jira & Xray": [
          "Jira-Xray : Création d’une anomalie"
        ],
        "Jira-Xray : Création des rapports": [
          "Jira-Xray : Création des rapports",
          "Jira-Xray : Création des rapports",
          "L'agilité en pratique : Cas pratique"
        ],
        "Une journée type pour un testeur agile": [
          "Une journée type pour un testeur agile"
        ],
        "SAFE": [
          "Scaled Agile Framework - SAFE",
          "Avantages SAFE",
          "Principes SAFe"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Rejoignez cette formation dynamique et pratique dédiée au test logiciel agile, conçue pour vous fournir les compétences essentielles afin d'exceller dans un environnement de développement agile. Apprenez à maîtriser les méthodes et outils les plus efficaces pour tester des applications dans un cadre agile, tout en vous adaptant aux évolutions rapides des projets.\nAu programme : découvrez les principes fondamentaux du test agile, la rédaction de critères d'acceptation clairs et mesurables, et l'optimisation des processus de test pour garantir une qualité constante à chaque étape du développement. Vous explorerez également les outils de tests automatisés, les tests continus, ainsi que les stratégies de collaboration avec les équipes de développement pour une livraison rapide et fiable.\nCette formation vous permettra de renforcer vos compétences pratiques, d’acquérir une méthodologie adaptée et de répondre efficacement aux défis des tests dans un environnement agile. Que vous soyez testeur, développeur, ou manager, vous repartirez avec des techniques concrètes et immédiatement applicables pour garantir la qualité de vos projets agiles.\nBoostez vos compétences en test logiciel agile et devenez un acteur clé dans la réussite de vos projets grâce à des pratiques modernes et performantes !\n\n\nIntroduction à l’agilité\nQu’est-ce que l’agilité ?\nLes principes fondamentaux de l’agilité\nLes méthodologies agiles : Scrum, Kanban, XP\nLes tests dans l’agilité\nLe rôle du testeur agile\nCollaboration avec le Product Owner et les développeurs\nTypes de tests et leur importance (tests unitaires, d’intégration, etc.)\nProcessus de tests dans un sprint agile\nDéfinition des critères d'acceptation\nRédaction des tests et gestion dans un backlog\nExemple d'intégration des tests dans Jira\nAutomatisation des tests et retour continu\nPourquoi automatiser les tests en agilité ?\nOutils d’automatisation des tests (Selenium)\nExécution des tests dans un pipeline CI/CD\nCollaboration dans un environnement agile\nComment le testeur agile collabore avec les autres rôles\nFeedback rapide et réactivité au sein de l’équipe\nRésolution des problèmes détectés lors du testing",
      "target_audience": [
        "Les testeurs manuels et automatisés qui souhaitent adopter des pratiques de tests agiles et améliorer leur approche dans un environnement agile.",
        "Les professionnels souhaitant approfondir leur connaissance des outils et des techniques utilisés spécifiquement dans les tests agiles (comme TDD, BDD, etc.).",
        "Les développeurs qui souhaitent mieux comprendre le rôle des tests dans le cadre d’une méthodologie agile et comment intégrer les tests tout au long du cycle de développement.",
        "Les responsables de projets agiles qui veulent comprendre comment la qualité et les tests s’intègrent dans un projet agile, et comment gérer la planification et le suivi des tests dans des cycles itératifs.",
        "Les Scrum Masters qui souhaitent acquérir des compétences pour guider l’équipe à travers la mise en place de pratiques de test agiles efficaces.",
        "Les Product Owners qui doivent s’assurer que les exigences de qualité sont intégrées dès le départ dans la conception du produit, et que les tests sont bien intégrés dans les différentes phases du cycle de vie agile du produit.",
        "Les responsables qualité qui cherchent à intégrer les tests de manière continue dans un cadre agile, à mettre en place des processus de tests agiles au sein de l’entreprise et à évaluer les outils et méthodes de test.",
        "Les consultants qui accompagnent des équipes ou des organisations dans leur transition vers une méthode agile et qui ont besoin d’une expertise en tests logiciels agiles.",
        "Des étudiants en informatique, ingénierie ou disciplines similaires, ou des professionnels débutant dans le domaine du développement logiciel ou de l’assurance qualité qui souhaitent se spécialiser dans les tests agiles."
      ]
    },
    {
      "title": "Testreporting - Know-How & Vorlagen für das Testmanagement",
      "url": "https://www.udemy.com/course/testreporting/",
      "bio": "Schaffen Sie Transparenz mit Statusreports, identifizieren Sie Probleme und ergreifen Sie Gegenmaßnahmen im Softwaretest",
      "objectives": [
        "Ziele des Testreportings erklären",
        "Testreporting (Vorbereitung, Durchführung, Fehler) erstellen",
        "Testreporting analysieren und typische Probleme erkennen"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Drei einfache Tipps",
          "Handout"
        ],
        "Testvorbereitung": [
          "Einleitung - Testvorbereitung",
          "Testreporting - Testvorbereitung",
          "Statusbericht - Testvorbereitung",
          "Typische Situationen - Testvorbereitung",
          "Übung 1 - Testvorbereitung",
          "Übung 2 - Testvorbereitung",
          "Übung 2 - Testvorbereitung - Lösung",
          "Ziele des Testreportings während der Testvorbereitung?",
          "Zusammenfassung - Testvorbereitung"
        ],
        "Testdurchführung": [
          "Einleitung - Testdurchführung",
          "Testreporting - Testdurchführung",
          "Statusbericht - Testdurchführung",
          "Typische Situationen - Testdurchführung",
          "Übung 1 - Testdurchführung",
          "Übung 2 - Testdurchführung",
          "Übung 2 - Testdurchführung - Lösung",
          "Dimensionen des Testfortschritts",
          "Zusammenfassung - Testdurchführung"
        ],
        "Fehler": [
          "Einleitung - Fehler",
          "Testreporting - Fehler (Teil 1)",
          "Testreporting - Fehler (Teil 2)",
          "Testreporting - Fehler (Teil 3)",
          "Statusbericht - Fehler",
          "Übung 1 - Fehler",
          "Übung 2 - Fehler",
          "Übung 2 - Fehler - Lösung",
          "Problemsituationen im Test",
          "Zusammenfassung - Fehler"
        ],
        "Fazit": [
          "Zusammenfassung"
        ]
      },
      "requirements": [
        "Grundverständnis des Software Testmanagements: Testvorbereitung, Testdurchführung, Fehler"
      ],
      "description": "Der Test ist eine der wichtigsten Phasen bei der Erstellung einer neuen Software. Projektleiter und Stakeholder haben ein großes Interesse, den aktuellen Stand zum Test zu erfahren.\nLernen Sie in diesem Kurs, wie Sie ein faktenbasiertes Testreporting erstellen - sowohl für die Testvorbereitung als auch für die Testdurchführung und das Fehlerreporting. Lernen Sie, wie Sie typische Probleme im Softwaretest an Hand des Testreportings frühzeitig erkennen können und rechtzeitig Gegenmaßnahmen einleiten können.\nNutzen Sie die vermittelten Erfahrungen und die enthaltenen Vorlagen, um eine termingerechte Einführung sicherzustellen und die Software Qualität zu erhöhen.\nHinweis: Dieser Kurs ist in erster Linie für eine plangetriebene Projektdurchführung geeignet, weniger für agile Vorgehensweisen.",
      "target_audience": [
        "Testmanager",
        "Tester mit Interesse am Testreporting",
        "Stakeholder mit Interesse am Testreporting"
      ]
    },
    {
      "title": "{TELUGU} Manual Testing, Agile & Jira , Zephyr with project",
      "url": "https://www.udemy.com/course/telugu-manual-testing-agile-jira-zephyr-with-project/",
      "bio": "Zero to Hero in Manual testing, SDLC, STLC, Testing tools,",
      "objectives": [
        "Understand JIRA tools from Scratch with Live project demonstration",
        "Thorough knowledge on latest Practices like Agile scrum, SDLC approaches",
        "Strong exposure on designing test cases and defect life cycle process",
        "Easily clear interviews on manual testing"
      ],
      "course_content": {
        "Manual Testing Concepts": [
          "What is Software Application, Overview on SDLC",
          "Complete Course Material for this training program, please download attachments",
          "Overview on Error, Defect, Failure",
          "What is Software Testing with examples",
          "Overview on Verification with examples",
          "Overview on Validation & Exhaustive Testing",
          "Overview on Black Box Testing techniques Part 1",
          "Overview on Black Box Testing techniques Part 2",
          "Overview on STLC",
          "Overview on Test Planning Phase",
          "Explanation on Test Plan Template",
          "Explanation on Test Strategy Template",
          "Overview on Test Analysis Phase & Real World Application Part 1",
          "Real World Application Part 2 - Analyzing Requirements",
          "Overview on Test Design phase with examples Part 1",
          "Overview on Test Design phase with examples Part 2",
          "Overview on Test Execution Phase & Defect Life Cycle",
          "SDLC Agile Methodology Overview",
          "JIRA Account creation and overview Part 1",
          "JIRA Account creation and overview Part 2",
          "Agile Testing Process Part 1",
          "Agile Testing Process Part 2",
          "Overview on Zephyr Squad with examples Part 1",
          "Overview on Zephyr Squad with examples Part 2",
          "Overview on all the concepts covered so far Part 1",
          "Overview on all the concepts covered so far Part 2",
          "Overview on all the concepts covered so far Part 3",
          "Overview on all the concepts covered so far Part 4",
          "JIRA Test execution phase with examples Part 1",
          "JIRA Test execution phase with examples Part 2",
          "Overview on Defect life cycle with examples",
          "Clarification Notes, Traceability Matrix, Blockers, Pre SDLC activities",
          "Sanity Testing , Smoke Testing, Regression Testing & Re Testing",
          "Various Testing Definitions with examples",
          "Complete real world process"
        ],
        "Manual Testing Realtime Project": [
          "Real time Project overview & Requirements Part 1",
          "Real time Project overview & Requirements Part 2",
          "Real time Project overview & Requirements Part 3",
          "Real time Project overview & Requirements Part 4",
          "Real time Project overview & Requirements Part 5",
          "Real time Project overview & Requirements Part 6",
          "Real time Project overview & Requirements Part 7",
          "Real time Project overview & Requirements Part 8"
        ],
        "Interview Questions & Answers": [
          "Interview Questions Part 1",
          "Interview Questions Part 2",
          "Interview Questions Part 3",
          "Interview Questions Part 4"
        ]
      },
      "requirements": [
        "Nothing specific, All prerequisites are taken care as part of course"
      ],
      "description": "Manual Testing + Agile + Jira + Live Projects in Telugu Language , A complete Manual testing Pack with Jira and Agile\n\n\nIntroduction of Software Testing\nWhat is Software?\nWhat is Software Testing?\nWhat is a Quality of Software?\nImportance of Software Testing?\nWhy Software has bugs?\nTesting Roles in Company\nTesting Team Responsibilities\nWhat is Functionality?\nWhat is Defect, Error, and Bug?\nSoftware Development Process\nWhat is SDLC?\nPhases of SDLC\nSDLC work flow – detailed explanation\nTesting Techniques\nStatic Testing\nDynamic Testing\nTesting Methods\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nLevels of Testing\nUnit Testing\nWhat is Unit Testing?\nExamples of Unit Testing\nWho will perform Unit Testing in Companies?\nIntegration Testing\nWhat is Integration Testing?\nIntegration Testing Types?\nExamples of Integration Testing?\nWho will perform Integration Testing in Companies?\nSystem Testing\nWhat is System Testing?\nExamples of System Testing\nWho will perform system testing in Companies?\nTypes of System Testing\nUser Acceptance Testing\nWhat is UAT?\nTypes of UAT (Alpha & Beta Testing)\nTypes of Testing\nSmoke testing\nSanity testing\nUsability Testing\nUser Interface Testing\nFunctionality Testing\nRe-Testing\nRegression Testing\nData Base Testing\nCompatibility Testing\nSecurity Testing\nAd-hoc Testing\nExploratory Testing\nInstallation Testing\nRecovery Testing\nServer Log File Testing\nPerformance Testing\nLoad Testing\nStress Testing\nVolume Testing\nEndurance Testing\nSoftware Development Models\nWaterfall Model\nIncrement Model\nPrototype Model\nSpiral model\nRapid Model\nV-Model\nAgile Model\nSoftware Engineering\nWhat is a Software engineering?\nMajor factors of software engineering\nQA Process and benefits of Process\nWhat is reusability?\nWhat is Process?\nSignificance and Advantages\n\n\n\n\nVerification and Validation\nVerification methods\ninspection\nWalkthrough\nBuddy check\nValidation Methods\nSoftware Testing Life Cycle\nTest Initiation\nTest Planning\nTest Design\nTest Execution\nDefect Reporting\nClosing\nTest Initiation phase\nWhat is Test Initiation?\nUnderstanding project requirements with live show\nUnderstanding UI Spec, FR Spec Documents\nTest Planning Phase\nWhat is a Test Plan?\nWho will prepare Test plan documents?\nPreparing a Test plan documents for project\nTest Design Phase\nWhat Tester will do in Test Design Phase?\nWhat is Use Case?\nWhat is a Scenario?\nPreparing Scenarios for project\nWhat is a Test Case?\nPreparing Test case Template for project\nTypes of Test cases\nTest Case design techniques\nBVA\nECP\nDecision Table\nState Transition Diagrams\nError Guessing\nDesigning test cases for project\nTest Case Status\nTest Cases Review\nPreparing RTM\nProjects & Technologies\nDifference between Project & Product?\nWhat is a Project?\nWhat is a Product?\nType of Projects?\nDesktop application\nWeb Applications\nSystem Products\nSoftware Environment:\nEnvironment is a combination of three layers\nPresentation layer\nBusiness layer\nDB layer\nTest Case Execution\nWhen do we start test case execution?\nWhat is a Build?\nWhat is Version?\nBuild Release Note\nWho prepares the Release Notes?\nWhen to prepare the Release Notes?\nSignificance of Release Notes\nVersion Controlling and managing\nBuilds from Development to Testing\nBuild & Deployment Process\nWho will deploy the application\nHow to access the application\nTest case execution\nDefect Reporting and Tracking\nWhat is a defect?\nDefect Status\nDefect Severity\nDefect Priority\nTypes of Defects\nDefect Life Cycle\nCreating defects in QC\nDefect Density\nResult Analysis\nDefect Reporting Through Bug Tracking Tools (Bugzilla/Jira/QC)\nDefect Management\nCreating user roles and permissions for each role\nCreating users for each role\nDefects reporting\nDefects tracking\nDefects Retesting\nVarious reports generation\nDefects closing\nAgile Scrum Framework [Real Time Overview]\n\n\nAgile principles\nAgile Scrum Overview\nScrum roles\nProduct Owner roles\nScrum master role\nTeam role\nScrum Meetings\nSprint Planning meeting\nDaily Scrum meeting\nScrum review meeting\nScrum retrospective meeting\nRelease planning meeting\n\n\n\n\nIntroduction of Software Testing\nWhat is Software?\nWhat is Software Testing?\nWhat is a Quality of Software?\nImportance of Software Testing?\nWhy Software has bugs?\nTesting Roles in Company\nTesting Team Responsibilities\nWhat is Functionality?\nWhat is Defect, Error, and Bug?\nSoftware Development Process\nWhat is SDLC?\nPhases of SDLC\nSDLC work flow – detailed explanation\nTesting Techniques\nStatic Testing\nDynamic Testing\nTesting Methods\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nLevels of Testing\nUnit Testing\nWhat is Unit Testing?\nExamples of Unit Testing\nWho will perform Unit Testing in Companies?\nIntegration Testing\nWhat is Integration Testing?\nIntegration Testing Types?\nExamples of Integration Testing?\nWho will perform Integration Testing in Companies?\nSystem Testing\nWhat is System Testing?\nExamples of System Testing\nWho will perform system testing in Companies?\nTypes of System Testing\nUser Acceptance Testing\nWhat is UAT?\nTypes of UAT (Alpha & Beta Testing)\nTypes of Testing\nSmoke testing\nSanity testing\nUsability Testing\nUser Interface Testing\nFunctionality Testing\nRe-Testing\nRegression Testing\nData Base Testing\nCompatibility Testing\nSecurity Testing\nAd-hoc Testing\nExploratory Testing\nInstallation Testing\nRecovery Testing\nServer Log File Testing\nPerformance Testing\nLoad Testing\nStress Testing\nVolume Testing\nEndurance Testing\nSoftware Development Models\nWaterfall Model\nIncrement Model\nPrototype Model\nSpiral model\nRapid Model\nV-Model\nAgile Model\nSoftware Engineering\nWhat is a Software engineering?\nMajor factors of software engineering\nQA Process and benefits of Process\nWhat is reusability?\nWhat is Process?\nSignificance and Advantages\n\n\n\n\nVerification and Validation\nVerification methods\ninspection\nWalkthrough\nBuddy check\nValidation Methods\nSoftware Testing Life Cycle\nTest Initiation\nTest Planning\nTest Design\nTest Execution\nDefect Reporting\nClosing\nTest Initiation phase\nWhat is Test Initiation?\nUnderstanding project requirements with live show\nUnderstanding UI Spec, FR Spec Documents\nTest Planning Phase\nWhat is a Test Plan?\nWho will prepare Test plan documents?\nPreparing a Test plan documents for project\nTest Design Phase\nWhat Tester will do in Test Design Phase?\nWhat is Use Case?\nWhat is a Scenario?\nPreparing Scenarios for project\nWhat is a Test Case?\nPreparing Test case Template for project\nTypes of Test cases\nTest Case design techniques\nBVA\nECP\nDecision Table\nState Transition Diagrams\nError Guessing\nDesigning test cases for project\nTest Case Status\nTest Cases Review\nPreparing RTM\nProjects & Technologies\nDifference between Project & Product?\nWhat is a Project?\nWhat is a Product?\nType of Projects?\nDesktop application\nWeb Applications\nSystem Products\nSoftware Environment:\nEnvironment is a combination of three layers\nPresentation layer\nBusiness layer\nDB layer\nTest Case Execution\nWhen do we start test case execution?\nWhat is a Build?\nWhat is Version?\nBuild Release Note\nWho prepares the Release Notes?\nWhen to prepare the Release Notes?\nSignificance of Release Notes\nVersion Controlling and managing\nBuilds from Development to Testing\nBuild & Deployment Process\nWho will deploy the application\nHow to access the application\nTest case execution\nDefect Reporting and Tracking\nWhat is a defect?\nDefect Status\nDefect Severity\nDefect Priority\nTypes of Defects\nDefect Life Cycle\nCreating defects in QC\nDefect Density\nResult Analysis\nDefect Reporting Through Bug Tracking Tools (Bugzilla/Jira/QC)\nDefect Management\nCreating user roles and permissions for each role\nCreating users for each role\nDefects reporting\nDefects tracking\nDefects Retesting\nVarious reports generation\nDefects closing\nAgile Scrum Framework [Real Time Overview]\n\n\nAgile principles\nAgile Scrum Overview\nScrum roles\nProduct Owner roles\nScrum master role\nTeam role\nScrum Meetings\nSprint Planning meeting\nDaily Scrum meeting\nScrum review meeting\nScrum retrospective meeting\nRelease planning meeting",
      "target_audience": [
        "Anyone who wants to start their career into testing world"
      ]
    },
    {
      "title": "CI/CD para Testers: Jenkins, GitHub Actions a fondo!",
      "url": "https://www.udemy.com/course/cicd-para-testers-jenkins-github-actions-a-fondo/",
      "bio": "El momento de transformarte en Test Engineer ha llegado!",
      "objectives": [
        "Comprender la importancia de integrar las pruebas a la orquestación de pipelines y poder argumentar por qué hacerlo.",
        "Definir pipelines de ejecución y reporte de pruebas automatizadas en herramientas de CI/CD como Jenkins y Github Actions.",
        "Estrategias para las distintas capas de automatización al integrarse a pipelines.",
        "Técnicas avanzadas y reportes para automatización de pruebas orquestadas en herramientas como Jenkins y Github Actions."
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Qué es CI y por qué se usa?",
          "Cómo se integra Testing en este concepto?",
          "Sirve saber CI a la hora de buscar trabajo como Tester?",
          "Cuáles son las herramientas y lenguajes más usados?"
        ],
        "Jenkins: Instalación y configuración inicial.": [
          "Jenkins: Qué es?",
          "Instalación.",
          "Opcional: Instalar Jenkins con un volumen persistente en Docker",
          "Qué componentes tiene Jenkins?",
          "Agentes, nodos y ejecutores.",
          "Configuración.",
          "Cómo se instalan y actualizan los plugins en Jenkins?",
          "Qué plugins vamos a usar?",
          "JenkinsFile"
        ],
        "Los Jobs en Jenkins: Componentes y herramientas.": [
          "Componentes básicos de un job.",
          "La Build en Jenkins: Qué es? Diferencias con el término \"build\" en desarrollo.",
          "Las 3 maneras principales de ejecutar un job en Jenkins.",
          "Ejecutar jobs por schedule: La sintaxis Cron.",
          "Ejecutar jobs por merges al branch principal",
          "Jobs parametrizados.",
          "Las Variables de Entorno y su uso.",
          "Generar reportes en la build",
          "El Post en pipelines de Jenkins",
          "Enviar notificaciones por email con Jenkins",
          "Timeouts: Cuándo y por qué usarlo?",
          "Reintentar un Job ante fallas automáticamente."
        ],
        "Los Pipelines: La herramienta más poderosa de Jenkins": [
          "Pipeline como sintaxis.",
          "Pipelines Declarativos: Stages en serie y Steps.",
          "Pipelines Declarativos: Stages en paralelo",
          "Scripted Pipelines: Qué son?",
          "Invocando otros Jobs como parte de nuestro pipeline.",
          "Ejecutando API requests directo desde Jenkins",
          "Usando una API request como iniciador de un Pipeline o Job.",
          "Extra: Docker como agente."
        ],
        "La UI en Jenkins: Qué indicadores visuales nos proporciona y qué plugins usar?": [
          "Jenkins con una UI más amigable: Blue Ocean",
          "Los iconos de estado en los Jobs."
        ],
        "Estrategias para Testing": [
          "Test Data setup con Jenkins",
          "El flujo de trabajo clásico: Health, Smoke y Regression",
          "La técnica del Radio de Explosión"
        ],
        "Github Actions y reflexiones finales": [
          "Github Actions: Qué es?",
          "Qué componentes tiene Github Actions?",
          "Ejemplo: Ejecutando Selenium con Gradle en GitHub Actions",
          "Ejemplo: Ejecutando Cypress en Github Actions e integrando con su Dashboard.",
          "Reflexiones finales sobre ambas herramientas vistas.",
          "Clase Extra"
        ]
      },
      "requirements": [
        "Conocimientos sobre Testing",
        "Conocimiento de Programación Orientada a Objetos y SCM (o haber realizado mi curso de Programación para Testers).",
        "Una computadora con conexión a internet.",
        "Conocimientos de UI Automation (o haber realizado mi curso de Selenium y Java)",
        "Opcional: Conocimientos de API Automation (o haber realizado mi curso de API Automation)"
      ],
      "description": "La herramienta por excelencia en el mercado que VAS A NECESITAR SABER para aspirar a los mejores puestos de trabajo, Jenkins, es visitada a fondo explicando cada componente de forma sencilla para terminar unificando todos los conceptos en una clase especial haciendo un pipeline complejo que demuestra la flexibilidad y creatividad que podés usar al crear flujos de trabajo.\n\n\nEl paso necesario luego de aprender UI y API Automation, Performance Testing, es integrar nuestras automatizaciones a los flujos de trabajo. Suena complejo? Lo es! Pero vamos a aprenderlo en este curso y vas a poder enfrentar este desafío sin despeinarte, responder a las preguntas de entrevistas como un profesional y estar listo para dar el siguiente gran paso en tu carrera como Test Engineer.\n\n\nNo solo vamos a cubrir a fondo la herramienta más demandada globalmente por empresas y consultoras, sino que abrimos la ventana al futuro con una de las más recientes incorporaciones al mundo de CI/CD: GitHub Actions.\n\n\nUsá tus automatizaciones creadas en anteriores cursos como ejemplos e integralos a jobs en Jenkins o Worflows en GitHub Actions y reforzá tu portfolio de herramientas de cara a conseguir los mejores puestos en el mercado de QA.\n\n\nEmbarcate en este viaje de aprendizaje y presumí orgulloso tus conocimientos en Jenkins en tu curriculum!",
      "target_audience": [
        "Testers queriendo perfeccionar sus skills.",
        "Test Engineers.",
        "Developers que hagan testing."
      ]
    },
    {
      "title": "Testing Exploratorio",
      "url": "https://www.udemy.com/course/testing-exploratorio-aa/",
      "bio": "¡Conviértete en una persona experta en testing exploratorio! Aprende técnicas innovadoras y efectivas.",
      "objectives": [
        "Entenderá qué es el testing exploratorio. Sabrá cómo y cuándo ejecutar este tipo de pruebas.",
        "Conocer los diferentes enfoques y estilos utilizados en el Testing Exploratorio. Y explorar las diferencias entre el Testing planificado y el Exploratorio.",
        "Adquirir habilidades en el Testing Exploratorio, se plantean actividades y ejercicios prácticos que les permitirán ejecutar sesiones de Testing Exploratorio",
        "Comprender la importancia de la planificación y el seguimiento en el Testing Exploratorio, la medición del progreso y la presentación de informes de estado."
      ],
      "course_content": {
        "INTRODUCCIÓN AL TESTING EXPLORATORIO": [
          "Bienvenid@",
          "Introducción y Conceptos básicos",
          "Recreación",
          "Ventajas y desventajas",
          "Recomendaciones",
          "Repasemos",
          "Estilos de Testing Exploratorio",
          "Actividad 1",
          "Testing Exploratorio Basado en Sesiones",
          "Planificación de la misión",
          "A la hora de ejecutar",
          "Aprendiendo mientras realizamos la sesión",
          "Ejemplo",
          "Demo: Sesión de Testing Exploratorio",
          "Mejores prácticas",
          "Actividad 2"
        ],
        "AUTOGESTIÓN": [
          "Introducción a la Autogestión",
          "Testing Exploratorio: Actividades",
          "Testing Exploratorio: Resultados y Métricas",
          "Cuestionario",
          "Modelo de cobertura de pruebas: Mapas mentales",
          "Modelo de cobertura de pruebas: Mapas mentales parte 2",
          "Planificación del trabajo a realizar",
          "Medición del progreso",
          "Informe de progreso"
        ],
        "TESTING PLANIFICADO VS. TESTING EXPLORATORIO": [
          "Testing planificado vs testing exploratorio",
          "Repasemos",
          "Recomendaciones",
          "Repasemos",
          "qTest Explorer",
          "Desafío - qTest Explorer",
          "Cuestionario"
        ],
        "FINAL": [
          "Final",
          "Más aprendizajes: Comunicación segura y efectiva en testing"
        ]
      },
      "requirements": [
        "Conocimientos básicos de informática (correo, documentos, hojas de cálculo, etc). Se recomienda tener conocimientos básicos de testing funcional manual."
      ],
      "description": "El enfoque de prueba exploratoria se basa en aprender y explorar el producto al mismo tiempo utilizando la experiencia, las habilidades analíticas y el ingenio de cada tester. Con esta certificación dominarás los conceptos fundamentales, adquiriendo habilidades de vanguardia y descubriendo herramientas imprescindibles para llevar a cabo pruebas de calidad sin precedentes. Tendrás la oportunidad de explorar a fondo el mundo del testing, asegurando que ningún detalle pase desapercibido. Además, el objetivo del curso es brindar una base sólida en el Testing Exploratorio, que te permita adquirir habilidades prácticas y comprender la importancia de la planificación y el seguimiento en este enfoque de pruebas.\n\n\n¡No pierdas la oportunidad de adquirir nuevos conocimientos y destacarte en tu rol!\n\n\nAl finalizar este curso la persona:\n\n\nEntenderá qué es el testing exploratorio.\n\n\nSabrá cómo y cuándo ejecutar este tipo de pruebas.\n\n\nPodrá gestionarlas y mostrar resultados.\n\n\nSabrá integrar el testing exploratorio en el proceso de testing de un proyecto.\n\n\nSerá capaz de utilizar herramientas de apoyo específicas.\n\n\nEn el curso tendrás:\n\n\nMaterial escrito y de referencia.\n\n\nEjercicios prácticos y de uso cotidiano.\n\n\nAsistencia online.\n\n\nCuestionarios.\n\n\nCertificado.\n\n\nPara tener éxito y consolidar los aprendizajes planteados en el curso, sugerimos que la persona cuente con conocimientos básicos de informática ( manejo de herramientas para creación de correo, documentos, hojas de cálculo, entre otras). También se espera que tenga conocimientos básicos de testing funcional. Y a modo de aclaración, no se necesita saber programar, aunque lógicamente si los tienes puede complementar sus conocimientos con este enfoque de testing. Además, este curso está diseñado para que el/la tester integre buenas prácticas a su trabajo.",
      "target_audience": [
        "Este curso está diseñado para testers que estén dando sus primeros pasos. Y que buscan convertirse en expertos en testing exploratorio, aprendiendo técnicas más innovadoras y efectivas para maximizar la calidad del software."
      ]
    },
    {
      "title": "Wstęp do testowania oprogramowania.",
      "url": "https://www.udemy.com/course/wstep-do-testowania-oprogramowania/",
      "bio": "Praktyczny kurs od podstaw.",
      "objectives": [
        "Będziesz rozumiał teoretyczne podstawy procesu testowania oprogramowania.",
        "Będziesz potrafił zautomatyzować wykonywane przez Ciebie zadania testowe.",
        "Opanujesz podstawy języka SQL.",
        "Poznasz najpopularniejsze oprogramowanie służące zarządzaniu projektami informatycznymi.",
        "Będziesz posiadał swoje pierwsze doświadczenie po przetestowaniu prawdziwej aplikacji."
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp"
        ],
        "Teoretyczne podstawy testowania oprogramowania": [
          "Dlaczego testowanie jest niezbędne?",
          "Czym jest testowanie?",
          "Zasady testowania oprogramowania.",
          "Proces testowy.",
          "Psychologia testowania.",
          "Kodeks etyczny testera oprogramowania.",
          "Modele wytwarzania oprogramowania.",
          "Poziomy testów.",
          "Typy testów.",
          "Statyczne techniki testowania oprogramowania.",
          "Proces rozwoju testów.",
          "Kategorie technik projektowania testów.",
          "Techniki czarnoskrzynkowe.",
          "Techniki białoskrzynkowe.",
          "Techniki oparte na doświadczeniu.",
          "Wybór technik testowania.",
          "Organizacja testów.",
          "Role w testowaniu.",
          "Planowanie testów.",
          "Kryteria wejścia / zakończenia testów.",
          "Szacowanie pracochłonności testów.",
          "Podejście do testów.",
          "Monitorowanie testów.",
          "Kierowanie testami.",
          "Zarządzanie konfiguracją.",
          "Ryzyko.",
          "Incydenty.",
          "Narzędzia testowe.",
          "Narzędzia testowe - podział na grupy.",
          "Narzędzia testowe - czynniki wpływające na sukces."
        ],
        "Język SQL": [
          "Wstęp.",
          "Operatory.",
          "Charakterystyka.",
          "Klauzule.",
          "Funkcje.",
          "Operacje."
        ],
        "Materiały dodatkowe": [
          "Zarządzanie projektem informatycznym - podejście praktyczne cz.1.",
          "Zarządzanie projektem informatycznym - podejście praktyczne cz.2.",
          "Testowanie automatyczne z wykorzystaniem Selenium IDE.",
          "Rozmowa kwalifikacyjna na stanowisko testera oprogramowania.",
          "Egzamin ISTQB - garść informacji."
        ],
        "***BONUS*** Aplikacja do testowania": [
          "Aplikacja do testowania.",
          "Aplikacja do testowania - informacje."
        ],
        "***BONUS2*** Prezent": [
          "BONUS - Prezent"
        ]
      },
      "requirements": [
        "Podstawowa znajomość obsługi komputera (System operacyjny, Przeglądarka Internetowa)."
      ],
      "description": "Testowanie oprogramowania to jeden z procesów zapewnienia jego jakości. W związku z wciąż rosnącą ilością oprogramowania wypuszczoną na rynek - testerzy oprogramowania stają się niezbędnym trybem w maszynie produkującej oprogramowanie - stąd też rosnące zapotrzebowanie testerów na rynku pracy. Po ukończeniu tego kursu:\n\n\nbędziesz rozumiał teoretyczne podłoże prowadzenia testów oprogramowania,\nbędziesz potrafił zautomatyzować wykonywane zadania testowe,\nopanujesz podstawy języka SQL,\nopanujesz podstawy działania najpopularniejszych programów do zarządzania projektami,\nprzetestujesz prawdziwą aplikację.\n\n\nKurs składa się z części teoretycznej i praktycznej. Nasz instruktor poprowadzi Ciebie przez cały kurs. Jak wygląda kurs?\n\n\nStart\n\n\nZaczniesz od zrozumienia istoty procesu testowania oraz zrozumiesz czym jest testowanie a także jak wygląda jego proces.\n\n\nTestowanie\n\n\nPo poznaniu podstaw procesu testowania, poznasz najpopularniejsze techniki wykorzystywane w procesie testowania.\n\n\nZarządzanie\n\n\nNastępnie poznasz sposoby zarządzania testami oraz narzędzia ułatwiające zarządzanie nimi.\n\n\nSQL\n\n\nKiedy już proces testowy będzie dla Ciebie całkowicie zrozumiały, poznasz podstawy języka SQL (ang. Structured Query Language) - służącego do pracy z bazami danych.\n\n\nZarządzanie projektem informatycznym\n\n\nNastępnie poznasz najpopularniejsze narzędzia służące do zarządzania projektami informatycznymi takie jak: Jira oraz Trello i wykonasz ćwiczenia, które utrwalą Twoją wiedzę.\n\n\nTestowanie automatyczne\n\n\nNa koniec kursu poznasz framework Selenium oraz jego komponent Selenium IDE, dzięki któremu niektóre z codziennych zadań testera będziesz mógł zautomatyzować.\n\n\nBonus\n\n\nDodatkowo w naszym kursie, masz możliwość zapoznania się z najważniejszymi informacjami dotyczącymi rozmowy kwalifikacyjnej na stanowisko testera oprogramowania oraz dowiesz się jak wygląda i jak przygotować się do egzaminu ISTQB.\n\n\n***Bonus*** - Środowisko testowe\n\n\nTylko w naszym kursie otrzymasz dostęp do specjalnej dedykowanej dla Ciebie aplikacji Internetowej zawierającej sporą ilość ukrytych błędów - dzięki czemu proces testowy będziesz mógł przećwiczyć na realnej aplikacji - a na koniec porównać znalezione przez siebie błędy z błędami znalezionymi przez nas.",
      "target_audience": [
        "Wszystkie osoby, które chcą rozpocząć karierę w branży IT jako testerzy oprogramowania."
      ]
    },
    {
      "title": "SAP Hata Ayıklama (Debugging) Eğitim",
      "url": "https://www.udemy.com/course/sap-hata-ayklama-debugging-egitim/",
      "bio": "SAP ABAP Hata Ayıklama (Debugging) Eğitimi",
      "objectives": [
        "Yazılımın çalışma mantığı",
        "Oyun üzerinden yazılımın ve hata ayıklamanın temellerini",
        "SAP ABAP dilinin temel yazılımını",
        "SAP ABAP da hata ayıklamanın nasıl yapıldığının tüm detaylarını"
      ],
      "course_content": {
        "Yazılım ve Hata Ayıklama(Debugging) Nedir?": [
          "Yazılım ve Hata Ayıklama(Debugging) Nedir?",
          "Kodların Çalışma Mantığı"
        ],
        "Oyun Üzerinden Kodlama Mantığı": [
          "Computer Addict Oyunu Tanıtım",
          "Oyun Üzerinden Temel Kodlama",
          "Oyun Üzerinden Koşul",
          "Oyun Üzerinden Döngü",
          "Oyun Üzerinden Modül"
        ],
        "Temel Yazılım Mantığı": [
          "Veri Tanımlama",
          "Veri Tipleri",
          "Değer Atama",
          "Değişken Türleri",
          "Koşul IF",
          "Koşul CASE",
          "Döngü DO",
          "Döngü WHILE",
          "Döngü LOOP",
          "Modül",
          "SELECT ve SY-SUBRC",
          "Comment Line",
          "Global ve Local"
        ],
        "Breakpoint Koyma Yöntemleri": [
          "Session Breakpoint",
          "/h",
          "Break-Point",
          "Break USER",
          "TXT Break-Point"
        ],
        "Debug Ekranı İlerletme": [
          "F5",
          "F6",
          "F7",
          "F8"
        ],
        "Hata Ayıklama Ekranı": [
          "Desktop ve Standard Tab",
          "Variable Tab",
          "Local ve Global Tab",
          "Değişken Tiplerini Görüntüleme"
        ],
        "Breakpoint at": [
          "Statement",
          "Subroutine",
          "Function Module",
          "Method",
          "Message",
          "Source Code"
        ],
        "Breakpoint Listeleme ve Silme": [
          "Breakpoint Listeleme ve Silme"
        ],
        "Hata Ayıklama Tipleri": [
          "System Debugging",
          "Update Debugging"
        ],
        "Diğer Özellikler": [
          "Watchpoint",
          "Go to Statement",
          "Debug Change",
          "Varyant Kaydetme",
          "Eski Hata Ayıklama Ekranı"
        ]
      },
      "requirements": [
        "Hayır, eğitim hiçbir yazılım bilgisi olmayan öğrenceler düşünülerek hazırlanmıştır"
      ],
      "description": "Programı yazmak kadar onu analiz etmek de bir o kadar önemlidir. Dolayısıyla ister yazılım tarafında ister iş analisti ya da modül tarafında olun, hata analizi yapabilmek var olan yapıyı debuglayabilmek sizi her zaman bir adım öne taşıyacaktır.\nBu bilinç ile öncelikle öncesinde yazmış olduğum oyun aracılığı ile yazılımın temel mantığını sonrasında alt başlıklar halinde kategorize ederek her konuyu detaylıca SAP üzerinden anlatmaya çalıştım.\n\n\nKurs içeriği;\nBolüm 1 -> Yazılım ve Hata Ayıklama(Debugging) Nedir?\nYazılım ve Hata ayıklama nedir şeklinde kısa bir giriş\n\n\nBolüm 2 -> Oyun Üzerinden Kodlama Mantığı\nUnity ile öncesinde yazmış olduğum oyun üzerinden yazılımın çalışma mantığı, temeller, ve hata ayıklamanın ne olduğunu eğlenceli bir yöntem ile gösterimi\n\n\nBolüm 3 -> Temel Yazılım Mantığı\nSAP ABAP da hata ayıklama yapmadan önce bilmeniz gereken temel yazılım mantığı ile ilgili kısa alt başlıklar\n\n\nBolüm 4 -> Breakpoint Koyma Yöntemleri\nFarklı yöntemler barındıran Breakpoint koyma ile ilgili anlatım\n\n\nBolüm 5 -> Debug Ekranı İlerletme\nHata ayıklama ekranındayken programı nasıl ilerletebileceğiniz tüm yöntemlerin gösterimi\n\n\nBolüm 6 -> Hata Ayıklama Ekranı\nHata ayıklama ekranını daha profesyonel kullanabilmek için ekran tanıtımı\n\n\nBolüm 7 -> Breakpoint at\nDinamik bir şekilde nasıl breakpoint koyulabileceğini önemli alt başlıklar hakinde listeledim\n\n\nBolüm 8 -> Breakpoint Listeleme ve Silme\nAktif olan breakpointleri listelemeyi ve nasıl kaldırabileceğinizi gösterdim\n\n\nBolüm 9 -> Hata Ayıklama Tipleri\nEn sık ihtiyacınız olabilecek hata ayıklama tiplerine ayrı başlıklar halinde yer verdim\n\n\nBolüm 10 -> Diğer Özellikler\nHata ayıklamada önemli yere sahio alt konuları bu başlık altında listeledim",
      "target_audience": [
        "Yazılımın temelini öğrenmek isteyen, SAP de hata ayıklamanın nasıl yapıldığını öğrenmek isteyen herkes"
      ]
    },
    {
      "title": "[TDD] Développement piloté par les tests avec React Native",
      "url": "https://www.udemy.com/course/tdd-developpement-pilote-par-les-tests-avec-react-native/",
      "bio": "Jest & Testing Library pour tester React Native avec TypeScript, Axios, React-Navigation, les formulaires, et d'autres..",
      "objectives": [
        "Comment tester React Native avec TypeScript, Redux, et Axios",
        "Qu'est-ce que le développement piloté par les tests (ou Test Driven Développement)",
        "Comprendre en quoi consiste un test et les outils dont on a besoin",
        "Les bonnes pratiques inhérente aux tests et quelles librairies utiliser",
        "Comment gérer les dépendances natives lors d'un test",
        "Comment écrire un test pour un formulaire",
        "Jest & React Native Testing Library",
        "Test unitaire et d'intégration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pourquoi écrire des tests",
          "Comment et pourquoi utiliser le développement piloté par les tests (ou TDD)",
          "Quels types de test",
          "De quels outils a-t-on besoin",
          "Ressources"
        ],
        "Premier test": [
          "Setup",
          "Ecrire votre premier test",
          "Ecrire votre premier test de composant",
          "Quelle application va-t-on développer",
          "Ressources"
        ],
        "Bases de l'application": [
          "Configuration de React Native Testing Library",
          "Création de l'écran d'accueil",
          "Configuration supplémentaire pour Jest",
          "Première section (date)",
          "Composants (météo)",
          "Localisation",
          "Navigation",
          "Ressources"
        ],
        "Ecran d'accueil": [
          "Composant: Position actuelle (1)",
          "Composant: Position actuelle (2)",
          "Composant: Position actuelle (résultat)",
          "Composant: Position donnée (1)",
          "Composant: Position donnée (2)",
          "Ressources"
        ],
        "Ecran météo": [
          "Mise en place de redux",
          "Open Weather API",
          "Store redux",
          "Ecran météo",
          "Conclusion",
          "Ressources"
        ],
        "Projet final": [
          "Contenu"
        ]
      },
      "requirements": [
        "Connaissance de React & React Native, et l'utilisation des Hooks",
        "Connaissance de JavaScript, et l'utilisation des Promise / Async",
        "Un ordinateur avec l'environnement NodeJS / React Native d'installé",
        "Compréhension de Redux (Redux-Saga apprécié)"
      ],
      "description": "Les tests sont un ensemble de compétences incontournable et profitable dans le domaine du développement d'application.\nAvec un écosystème changeant, plusieurs outils semblables et peu de cours ou des connaissances manquantes dans ce domaine, mon parcours avec les test n'a pas été le plus facile. Après avoir pris les bons choix et pratiqué pendant plusieurs années, je souhaite partager mes compétences pour que soyez capable d'écrire des tests pertinents.\nJe ne veux pas simplement montrer comment écrire un test, mais démontrer les différentes façon d'en écrire, les plus pertinentes d'après mon expérience, et lesquels sont utilisés dans le monde profesionnel.\nSavoir écrire des tests pour une application React Native permet d'être rapidement capable de tester une application ReactJS. De plus, React Native est assez difficile à tester, en partie à cause de l'utilisation de dépendance native. Ce sont les raisons qui m'ont poussé à écrire ce cours.\nQuelle application va-t-on développer ?\nLa première étape sera d'exposer certaines connaissances, quels outils et bonnes pratiques sont nécessaire. Le cours se concentrera sur React Native sans Expo, mais fera reférence à la documentation nécessaire pour utiliser Expo.\nEnsuite nous allons créer une application météo, et écrire l'ensemble des tests pour celle-ci.\nInclus :\nReact Native & TypeScript\nRedux & Redux-Saga\nDes appels API avec Axios\nUn formulaire avec react-hook-form\nRouting avec react-navigation\nJest & React Native Testing Library\nGeolocation & OpenWeatherMap API\nEn suivant la méthode du développement piloté par les tests (ou TDD pour Test Driven Development)",
      "target_audience": [
        "Développeurs React Native qui souhaitent découvrir les tests",
        "Développeurs expérimentés avec les tests, qui souhaite renforcer ses compétences en testing / TDD avec React Native"
      ]
    },
    {
      "title": "Introdução a Testes de Software para quem não é de TI.",
      "url": "https://www.udemy.com/course/introducao-a-testes-de-software-para-quem-nao-e-de-ti/",
      "bio": "Entenda o que é software, como testá-lo e como ingressar nessa área cheia de oportunidades!",
      "objectives": [
        "Entenda o que é Software e como testá-lo.",
        "Porque é importante testar.",
        "Diferenças entre testes automatizados e manuais.",
        "Como ingressar na área."
      ],
      "course_content": {
        "Introdução a Testes de Software para quem não é de TI": [
          "O que é Software?",
          "O que é QA (Quality Assurance)?",
          "Por que testar?",
          "Princípios de Testes.",
          "Testes Manuais X Testes Automatizados.",
          "Como começar na area de testes de software?",
          "Dicas para quem está começando!"
        ]
      },
      "requirements": [
        "Nesse curso todos são bem vindos, principalmente quem não é da área de computação! Não há pré-requisitos para a realização do curso, visto que ele serve de base para quem tem interesse em migrar para TI."
      ],
      "description": "Se você é um profissional de negócios ou um entusiasta de tecnologia que quer aprender mais sobre testes de software, este curso é para você!\nO curso de Introdução a Testes de Software é projetado para pessoas sem experiência em Tecnologia da Informação que desejam entender os fundamentos dos testes de software e como eles ajudam a garantir a qualidade do software.\nAo longo deste curso, você irá explorar o processo de testes de software, aprender sobre as diferentes etapas envolvidas e como elas contribuem para o sucesso do produto final. Você irá explorar as principais técnicas de testes de software, desde testes manuais até testes automatizados, e entenderá como elas são aplicadas para identificar e corrigir erros e falhas em um software.\nVocê também irá aprender sobre a importância da documentação de testes e como ela ajuda a garantir que os testes sejam executados de forma consistente e correta. Ao final do curso, você terá uma compreensão sólida dos conceitos básicos de testes de software e poderá aplicar esse conhecimento em seu trabalho diário ou em projetos pessoais.\nNão se preocupe se você não tem nenhuma experiência em TI, este curso é projetado para ser fácil de seguir e oferece muitas oportunidades para aplicar o que você aprendeu em exemplos do mundo real.\nNão perca a oportunidade de aprender sobre testes de software e se tornar um profissional mais bem informado e qualificado. Inscreva-se agora neste curso de Introdução a Testes de Software para quem não é de TI!",
      "target_audience": [
        "Pessoas interessadas em migrar para TI, estudantes de computação e profissionais da área"
      ]
    },
    {
      "title": "ZeroToHero Selenium webdriver java Basics+Advanced+Framework",
      "url": "https://www.udemy.com/course/zero-to-hero-in-selenium-webdriver-java-basics-to-advance/",
      "bio": "Selenium Testing Framework Automation with Real time Projects, TestNG, Maven, Jenkins, GIT, download real framework code",
      "objectives": [
        "By the end of this course, You will be expert on Selenium WebDriver with JAVA.",
        "In depth understanding of each topic with real time examples.",
        "You can crack the any Selenium Interview.",
        "By the end of this course. You will be able to automate any Web based application.",
        "Deeper understanding of Automation guidelines and code quality standards",
        "Course includes real time projects with practical Solutions.",
        "Course covers Framework Development from Scratch, You will be expert in designing Selenium Framework."
      ],
      "course_content": {
        "Introduction of Selenium and It's Components - IDE, RC, GRID and WebDriver": [
          "Must Watch - About this Course.",
          "Selenium Introduction - Features and Components.",
          "Selenium IDE Introduction.",
          "Selenium IDE- Live Record and Play Demo",
          "Selenium Remote Control Introduction",
          "Selenium WebDriver Introduction",
          "Selenium GRID Introduction",
          "Quiz"
        ],
        "Introduction of Java and Eclipse IDE": [
          "Must Read - Java version compatibility.",
          "Java Introduction and Installation on Windows machine.",
          "Install Java on Mac Machine",
          "Eclipse Introduction, Installation and Create First Java Project."
        ],
        "Java Basics - Variables, Data types, Operators, and Control Statements": [
          "Understand Java main method, it's signature and write first Java program.",
          "Introduction Java variables.",
          "What is Local variable and It's rules.",
          "What is Instance variable and It's rules.",
          "What is Static variable and It's rules.",
          "What is data type and it's different types.",
          "What is a Operator and it's different types.",
          "Arithmetic Operators",
          "Assignment Operators",
          "Relational Operators",
          "Logical Operators",
          "What is Control Statement and It's different types?",
          "If Else Introduction",
          "If Else If Introduction",
          "Switch Case Introduction",
          "For Loop Introduction",
          "While Loop Introduction",
          "Arrays Introduction and Single Dimensional Array.",
          "Two Dimensional Arrays Introduction",
          "Quiz",
          "Complete the Switch case by adding the correct keyword.",
          "Write a Java program to print whether a number a is positive or negative."
        ],
        "Understanding OOPS concepts in depth.": [
          "Undersetting Java Class and Objects",
          "Understanding Constructor, types and Default Constructor.",
          "Understanding parameterized constructor",
          "Understanding Constructor chaining.",
          "OOPS Introduction and features",
          "Understanding Inheritance with real time example.",
          "Inheritance Implementation with real time example.",
          "Understanding Polymorphism, types and Method Overloading",
          "Understanding Method Overriding.",
          "Understanding Abstraction and Interface",
          "Understanding Abstract Class.",
          "Java Encapsulation",
          "Understanding Java Access modifiers with examples",
          "Java List Collection",
          "Quiz",
          "Write a Java program to create a class called Dog with instance variables name and color."
        ],
        "Understating Selenium Architecture And Launch diff browsers via Selenium script.": [
          "Must Read - Preferred versions configuration",
          "Must Read - Selenium Library Version Updates",
          "Understanding Selenium WebDriver Architecture.",
          "Must Read- Fix chromedriver-is-not-accessible error.",
          "Must Read - Driver updates in Selenium 4",
          "Launch Google Chrome via Selenium WebDriver Script.",
          "Launch Firefox browser via Selenium WebDriver Script.",
          "Launch Internet Explorer browser via Selenium WebDriver Script.",
          "Quiz"
        ],
        "Getting Start with Selenium Locators.": [
          "Introduction of Selenium Locators and types.",
          "Finding the elements by Id and name locators.",
          "Finding Web link element by using Link Text and Partial Link Text locators",
          "Understanding the Xpath and it's types.",
          "Solving the real time elements issues by Xpath methods - Part 1",
          "Solving the real time elements issues by Xpath methods - Part 12",
          "Must Watch : Practice Application - OrangeHRM Minor Updates.",
          "Understanding Css Selector locators",
          "Solving the real time elements issues by Css Selector locator",
          "Understanding Class name locator.",
          "Understanding TagName locator.",
          "Understanding the difference between findElement() and findElements()",
          "Quiz"
        ],
        "Handling the Web elements - Button, Text box, radio button, checkbox, link, etc.": [
          "Text box operations handling",
          "Checkbox operations handling",
          "Must Read - Website to Practice Radio button and drop down demos",
          "Radio button operations handling",
          "Dropdown operations handling",
          "Links operations handling.",
          "Must Read - Calendar Operations handling Test Website",
          "Calendar operations handling",
          "Button operations handling",
          "CSS Validations handling.",
          "Quiz"
        ],
        "Understanding the frequently used Selenium methods with real time examples.": [
          "Selenium method to open application, get title, url and maximized browser.",
          "Selenium methods to navigate to back, forward and refresh the page.",
          "Close and quite methods with real examples.",
          "Quiz"
        ],
        "Handling of Java script Alert, Iframe and multiple windows of browser": [
          "Automate Javascript alert with real time example.",
          "Understanding the Iframe and it's handling.",
          "Nested Iframe handling.",
          "Handling the Multiple windows of a browser."
        ],
        "Execute Java script via Selenium.": [
          "Understanding the JavaScript usage for Selenium",
          "Must Read - OrangeHRM Application recent updates",
          "Execute JavaScript via Selenium to enter value in Text box and click on button.",
          "Execute JavaScript via Selenium to get title and url of web page.",
          "Execute JavaScript via Selenium to Scroll down.",
          "Execute JavaScript via Selenium for Horizontal Scrolling"
        ]
      },
      "requirements": [
        "No prior Java / coding knowledge required as everything is taught from the scratch",
        "All topics are covered in detailed with live programming in the lectures which will make you feel as in you are studying in a live class room.",
        "All Installation setup including is taken care as part of course."
      ],
      "description": "Hi Student,\nWelcome to this most recent Selenium Automation testing course of 2025.\nThis course covers the latest version of all the Automation tools.\nThe course is specially designed so that you do not need Java coding experience to start this course. Even non-programming candidates can follow this course comfortably\nThe course is designed so that no programming language students can understand every topic easily with non-technical examples.\nAll the topics include examples from real-time application Web applications.\nThis course will help you become an automation expert from scratch. On course completion You will be Mastered in Selenium Automation Testing and implementing Successfully in your work place.\n\n\nWe have dedicated Trainers who can help answer students' queries ASAP.\n\n\nProjects build with in-depth implementation of the following topics :\nJava\nSelenium\nTestNG Framework\nSelenium Testing Framework\nPage Object Model Design Patterns.\nMaven Build management tool.\nGIT Source Code Management tool.\nJenkins.\nLo4J Logger Framework.\nExtent Report.\nApache POI Library.\nCloud Testing - Sauce Lab Integration.\nLast but not least, at the end of topics you can download the source code on your computer for your offline reference. So whatever code I teach you in the video, that specific code will be available for download.\nI thank you for selecting this course to learn Selenium automation and wish you all the best in your learning to become an Automation expert.\n\n\nThank you\nShelendra Kumar",
      "target_audience": [
        "Manual Tester",
        "Beginner Automation Tester",
        "Selenium Tester",
        "Developer",
        "Freshers",
        "Experienced Software Testers"
      ]
    },
    {
      "title": "Non Functional Testing for LLM, Chatbots and AI Models",
      "url": "https://www.udemy.com/course/non-functional-testing-for-llm-chatbots-and-ai-models/",
      "bio": "Learn essential AI testing techniques to ensure reliable, ethical, and human-like performance of advanced AI systems",
      "objectives": [
        "Understand how AI is working",
        "Understand basic software testing",
        "Understand how AI is tested compared to traditional software",
        "Gain knowledge on testing for ethics",
        "Demo on testing Chat GPT with automated Tools",
        "Understand Adversarial Testing techniques",
        "Understand how to test for a human like conversation",
        "Create a framework for testing bias, toxicity and hate with PerspectiveAPI"
      ],
      "course_content": {},
      "requirements": [
        "basic experience with software testing",
        "basic coding experience ( but not needed)",
        "optional - GPT model 4 subscription (but not needed)",
        "desire to learn the hottest skill on the market",
        "desire to learn the hottest skill on the market"
      ],
      "description": "Welcome to \"Non Functional Testing for LLM, Chatbots and AI Models\" your comprehensive guide to mastering the fundamentals of testing AI systems. Whether you're a developer, data scientist, or AI enthusiast, this course will provide you with the knowledge and skills needed to assess, improve, and ensure the reliability, performance, safety, and ethical integrity of AI technologies.\nWhat You Will Learn:\nIntroduction to AI Testing: Understand the critical importance of testing AI systems, addressing both technical performance and ethical considerations. Learn about the potential impacts of AI failures and how responsible testing mitigates these risks.\nSpecial Focus on Foundation Models and LLMs: Dive deep into the unique challenges of testing large language models and foundational AI systems, which are driving innovation across multiple industries.\nAI System Evaluations: Learn how to design and implement effective testing frameworks for AI-based systems, utilizing both manual and automated tools to improve system performance and safety.\nAdversarial AI Testing: Understand how to evaluate the robustness of AI models through adversarial testing techniques, assessing how well AI systems resist manipulation and errors when exposed to malicious inputs.\nPerspectiveAPI for Ethical and Toxicity Testing: Learn how to integrate the PerspectiveAPI and other tools to test AI systems for ethical compliance and detect harmful or toxic outputs, ensuring AI systems uphold safety and ethical standards.\nHumanness in AI: Explore the concept of evaluating the \"humanness\" of AI responses. Learn how to test whether AI systems generate outputs that are human-like, contextually aware, and empathetic in their interactions.\nEthical AI: Delve into the risks associated with AI and the ethical dimensions of AI development. Learn how to test AI systems for bias, fairness, and transparency, ensuring adherence to responsible AI practices.\nTesting ChatGPT and Chatbots Using APIs in MLOps: Learn to test and evaluate conversational models like ChatGPT through APIs, and understand how to integrate these tests into MLOps pipelines for continuous AI improvement.\nCase Studies: Review real-world examples of AI testing, learning from common pitfalls and best practices used in the field to ensure AI reliability and safety.\nWho This Course Is For:\nThis course is designed for individuals seeking a comprehensive understanding of the techniques and practices required for testing AI systems. Whether you are starting a career in AI, enhancing your professional skills, or interested in the technical and ethical mechanisms behind AI system reliability, this course offers valuable insights.\n\n\nEnroll now to start mastering the critical skill of testing AI systems, ensuring that you are equipped to contribute to the development of safe, reliable, and ethically sound AI technologies!",
      "target_audience": [
        "Citizen Developer",
        "Software testers",
        "Quality engineers",
        "Social Engineers",
        "Prompt Engineers",
        "Product Managers",
        "Engineering Directors"
      ]
    },
    {
      "title": "Selenium 4 WebDriver 自动化测试Java版 +面试问题（中文讲解）",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-testng-and-log4j2/",
      "bio": "初学者 和有基础的人都适用。加入Selenium 4最佳中文版更新课程，让你的自动化测试水平从初级升向高级，并且会覆盖在POM, Grid ,Maven，Jenkins, 面试问题",
      "objectives": [
        "***学完课程以后，你将深入理解web自动化框架，其中包括非常重要的Java核心基础知识",
        "***您将能够使用页面对象/工厂模型解释、设计和实现结构化自动化框架",
        "***用100多个实例对Selenium WebDriver现实场景应用进行深入理解",
        "*全面了解TestNG, Maven, Jenkins, Cucumber, HTML报告，Selenium Grid并行测试",
        "**回答学生的提问和提供简历，面试准备等支持",
        "了解数据库测试和使用Selenium进行性能测试",
        "你将可以使用高级REPORTING TOOL，生成高级的测试报告",
        "你将彻底理解TestNG框架",
        "你从网上随便选择一个网站，都可以实现自动化，用所有可能的测试用例进行自动化测试",
        "将提高你的编码技能，以编写最优化的自动化测试用例代码",
        "你基本可以搞定任何面试，并能从设计阶段开始领导整个Selenium自动化项目",
        "使用Selenium WebDriver Automation运行性能测试",
        "你将能够创建漂亮的报告来打动客户或领导",
        "更深入地理解自动化指南和代码质量标准",
        "包括一个用来练习的网站，可以用上所有可用的WebDriver功能实现自动化",
        "你将能够使用JENKINS实现持续集成测试",
        "你将能够使用SELENIUM GRID执行跨浏览器测试",
        "你将很好的使用MAVEN命令进行构建管理",
        "你可以自己从头开始领导任何Selenium自动化项目",
        "你可以使用Cucumber, Gherkin语言进行行为驱动测试",
        "你可以编写出高效的测试代码",
        "你将具备自动化任何web应用程序所需的技能",
        "你可以通过应用程序的GUI验证数据完整性",
        "有了这些知识，你应该可以很容易地通过Selenium Automation面试"
      ],
      "course_content": {},
      "requirements": [
        "不需要有编程和自动化测试经验，初学者可以很容易上手",
        "不需要java经验，java基础知识本套课程已涵盖",
        "每一节课程中编写的代码或者相关资料，都可以下载下来",
        "浏览器 (Firefox or Chrome)",
        "Windows 或Mac电脑",
        "Java SDK, Eclipse, Firefox, Chrome, TestNG, Selenium IDE, Selenium webdriver. 以上所有软件的安装，本课程都涵盖了，相关文档也会上传到课程"
      ],
      "description": "课程使用的是最新的Selenium4 WebDriver版本v4.15.0\n这门课从Selenium WebDriver基础开始讲，一直到高级部分，内容涵盖Java基础课程，TestNG框架，自动化测试框架设计(页面对象，页面工厂，数据驱动，读取Excel文件)，Log4j日志记录，生成报告工具-高级报告，Selenium Grid 2.0跨浏览器测试，Maven构建管理，Jenkins的持续集成，数据库测试，性能测试，使用Cucumber进行行为驱动测试，面试准备。所有材料，包括代码文件。\n**一站式，从零开始，成为在Web自动化框架相关技术的专家，你需要知道的有关Web UI自动化的一切都在这里。**\n\n\n是什么让这门课成为udemy上最好Selenium的中文课程？\n• 我们假设学生没有自动化/编码的经验，并从头开始从基础开始讲每个主题。\n• 示例取自真实WEB应用程序的测试，以了解如何自动化不同的组件，带给你企业级框架的想法，让你更自信。\n• 不需要事先有编码或自动化经验，本课程涵盖所有需要的知识\n\n\n你是否在寻找机会进入自动化测试领域？\n你是否渴望学习selenium webdriver + Java 以及最新的框架和技术进行web自动化测试？\n你是否感兴趣学习Selenium如何用在你现有的项目里呢？\n这门课程从java编程入门开始讲起，然后学习selenium，TestNG, selenium grid, log4j2, maven, jenkins, database testing, performance testing，使用 cucumber and gherkin 语言进行behavior driven testing\n课题包括：\n\nSelenium Webdriver 4.x\nJava 详细讲解\nTestNG 框架\n高级报告Advanced  Reporting\nLog4j2日志\n页面对象模型 Page Object Model\n页面工厂 Page Factory Framework\n数据驱动 Data Driven Framework\n通过Selenium Grid 4.X 在远程机器上测试\n项目管理工具Maven\n持续集成 Jenkins\nDatabase Testing\nPerformance Testing\n行为驱动测试 Cucumber and Gherkin language\n我们假设学员没有任何编程或自动化经验，来设计的这门课程。每个课题都从最基础的开始讲起。该覆盖的课题都覆盖了；\n例子都是来自于真实的web应用项目，帮助你理解不同的组件怎么应用上自动化，给你展示一个行业层面的框架，给你信心；\n\n\nUdemy上没有其他中文课程像这门课涵盖到如此之深又详细的内容。",
      "target_audience": [
        "手动软件测试人员想转为自动化测试人员。",
        "自动化软件测试人员想加强专业技能。",
        "刚毕业学生想从事软件行业。",
        "QA 组长或项目经理。"
      ]
    }
  ]
}